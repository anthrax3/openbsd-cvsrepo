head	1.61;
access;
symbols
	OPENBSD_5_9:1.60.0.2
	OPENBSD_5_9_BASE:1.60
	OPENBSD_5_8:1.60.0.4
	OPENBSD_5_8_BASE:1.60
	OPENBSD_5_7:1.58.0.2
	OPENBSD_5_7_BASE:1.58
	OPENBSD_5_6:1.57.0.6
	OPENBSD_5_6_BASE:1.57
	OPENBSD_5_5:1.57.0.4
	OPENBSD_5_5_BASE:1.57
	OPENBSD_5_4:1.56.0.8
	OPENBSD_5_4_BASE:1.56
	OPENBSD_5_3:1.56.0.6
	OPENBSD_5_3_BASE:1.56
	OPENBSD_5_2:1.56.0.4
	OPENBSD_5_2_BASE:1.56
	OPENBSD_5_1_BASE:1.56
	OPENBSD_5_1:1.56.0.2
	OPENBSD_5_0:1.54.0.2
	OPENBSD_5_0_BASE:1.54
	OPENBSD_4_9:1.52.0.4
	OPENBSD_4_9_BASE:1.52
	OPENBSD_4_8:1.52.0.2
	OPENBSD_4_8_BASE:1.52
	OPENBSD_4_7:1.50.0.2
	OPENBSD_4_7_BASE:1.50
	OPENBSD_4_6:1.50.0.4
	OPENBSD_4_6_BASE:1.50
	OPENBSD_4_5:1.49.0.2
	OPENBSD_4_5_BASE:1.49
	OPENBSD_4_4:1.45.0.2
	OPENBSD_4_4_BASE:1.45
	OPENBSD_4_3:1.44.0.2
	OPENBSD_4_3_BASE:1.44
	OPENBSD_4_2:1.43.0.2
	OPENBSD_4_2_BASE:1.43
	OPENBSD_4_1:1.41.0.2
	OPENBSD_4_1_BASE:1.41
	OPENBSD_4_0:1.40.0.2
	OPENBSD_4_0_BASE:1.40
	OPENBSD_3_9:1.33.0.2
	OPENBSD_3_9_BASE:1.33
	OPENBSD_3_8:1.32.0.2
	OPENBSD_3_8_BASE:1.32
	OPENBSD_3_7:1.29.0.2
	OPENBSD_3_7_BASE:1.29
	OPENBSD_3_6:1.27.0.10
	OPENBSD_3_6_BASE:1.27
	SMP_SYNC_A:1.27
	SMP_SYNC_B:1.27
	OPENBSD_3_5:1.27.0.8
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.27.0.6
	OPENBSD_3_4_BASE:1.27
	UBC_SYNC_A:1.27
	OPENBSD_3_3:1.27.0.4
	OPENBSD_3_3_BASE:1.27
	OPENBSD_3_2:1.27.0.2
	OPENBSD_3_2_BASE:1.27
	OPENBSD_3_1:1.26.0.2
	OPENBSD_3_1_BASE:1.26
	UBC_SYNC_B:1.27
	UBC:1.25.0.2
	UBC_BASE:1.25
	OPENBSD_3_0:1.24.0.2
	OPENBSD_3_0_BASE:1.24
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_9:1.21.0.2
	OPENBSD_2_8:1.16.0.2
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	SMP:1.8.0.12
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.61
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.60;
commitid	OSDG2O3Cgeifnf1W;

1.60
date	2015.07.17.22.52.29;	author tedu;	state Exp;
branches;
next	1.59;
commitid	OOrGfFHYAn65M2qc;

1.59
date	2015.05.11.06.46.21;	author ratchov;	state Exp;
branches;
next	1.58;
commitid	RaOGL5SyOGOZylwx;

1.58
date	2014.10.18.12.21.56;	author miod;	state Exp;
branches;
next	1.57;
commitid	bMGwcxDJMvwyWkup;

1.57
date	2013.09.24.20.10.50;	author miod;	state Exp;
branches;
next	1.56;

1.56
date	2011.09.04.08.03.32;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2011.09.03.20.41.31;	author miod;	state Exp;
branches;
next	1.54;

1.54
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2011.06.27.03.27.07;	author tedu;	state Exp;
branches;
next	1.52;

1.52
date	2010.06.29.18.46.34;	author tedu;	state Exp;
branches;
next	1.51;

1.51
date	2010.05.26.16.35.27;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2009.03.20.18.39.26;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2008.10.10.20.21.39;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2008.08.18.23.19.21;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2008.08.18.23.07.22;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2008.08.18.23.04.26;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2008.04.25.14.51.35;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2007.11.25.18.25.29;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2007.06.01.22.01.52;	author maja;	state Exp;
branches;
next	1.42;

1.42
date	2007.05.04.03.44.44;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2007.02.05.05.46.13;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2006.08.27.16.55.38;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2006.07.29.14.18.55;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2006.07.24.22.19.54;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2006.07.24.20.35.06;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2006.07.23.19.17.21;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2006.07.20.19.15.34;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2006.06.19.15.13.35;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2006.01.17.20.26.16;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2005.07.14.02.09.46;	author uwe;	state Exp;
branches;
next	1.31;

1.31
date	2005.05.10.04.04.39;	author brad;	state Exp;
branches;
next	1.30;

1.30
date	2005.05.01.21.36.57;	author brad;	state Exp;
branches;
next	1.29;

1.29
date	2005.03.08.20.00.24;	author tdeval;	state Exp;
branches;
next	1.28;

1.28
date	2004.10.08.13.04.36;	author grange;	state Exp;
branches;
next	1.27;

1.27
date	2002.05.16.07.37.41;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2002.04.04.23.47.47;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2001.11.14.14.37.22;	author hugh;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2001.05.16.22.15.18;	author hugh;	state Exp;
branches;
next	1.23;

1.23
date	2001.05.11.07.13.16;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2001.05.11.06.41.51;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2001.04.17.15.19.33;	author hugh;	state Exp;
branches;
next	1.20;

1.20
date	2001.02.24.10.31.59;	author hugh;	state Exp;
branches;
next	1.19;

1.19
date	2001.02.11.06.34.36;	author hugh;	state Exp;
branches;
next	1.18;

1.18
date	2001.01.28.01.19.58;	author hugh;	state Exp;
branches;
next	1.17;

1.17
date	2000.11.24.19.14.03;	author hugh;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.31.02.30.56;	author hugh;	state Exp;
branches;
next	1.15;

1.15
date	2000.10.24.02.20.21;	author hugh;	state Exp;
branches;
next	1.14;

1.14
date	2000.10.24.01.50.19;	author hugh;	state Exp;
branches;
next	1.13;

1.13
date	2000.10.11.12.15.52;	author hugh;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.11.06.01.06;	author bjc;	state Exp;
branches;
next	1.11;

1.11
date	2000.05.17.02.57.44;	author bjc;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.27.07.17.56;	author bjc;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.27.05.47.15;	author bjc;	state Exp;
branches;
next	1.8;

1.8
date	97.09.20.13.48.59;	author maja;	state Exp;
branches
	1.8.12.1;
next	1.7;

1.7
date	97.09.12.09.18.14;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	97.09.10.07.34.21;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	97.05.28.23.08.23;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	97.01.15.23.24.30;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	96.06.12.08.20.19;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.09.09.09;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.04;	author deraadt;	state Exp;
branches;
next	;

1.8.12.1
date	2001.05.14.21.37.53;	author niklas;	state Exp;
branches;
next	1.8.12.2;

1.8.12.2
date	2001.07.04.10.24.22;	author niklas;	state Exp;
branches;
next	1.8.12.3;

1.8.12.3
date	2002.03.30.08.27.12;	author niklas;	state Exp;
branches;
next	1.8.12.4;

1.8.12.4
date	2003.03.27.23.52.19;	author niklas;	state Exp;
branches;
next	;

1.25.2.1
date	2002.06.11.03.39.18;	author art;	state Exp;
branches;
next	;


desc
@@


1.61
log
@We are done providing support for the vax.
lots of agreement.
@
text
@#	$OpenBSD: files.vax,v 1.60 2015/07/17 22:52:29 tedu Exp $
#	$NetBSD: files.vax,v 1.60 1999/08/27 20:04:32 ragge Exp $
#
# new style config file for vax architecture
#

# maxpartitions must be first item in files.${ARCH}.newconf
maxpartitions 16

maxusers 2 8 64

device	mainbus {}
attach	mainbus at root

# Define a bunch of devices, needed in more than one place.
device	cpu

define	dzcons

device	vsbus {csr}
attach	vsbus at mainbus
file	arch/vax/vsa/vsbus.c			vsbus
file	arch/vax/vsa/vsbus_dma.c		vsbus

# DEC SGEC Second Generation Ethernet Controller
define	sgec
file	arch/vax/if/sgec.c			sgec

device	ibus {}
attach	ibus at mainbus
file	arch/vax/vax/ibus.c			ibus

device	vxtbus {}
attach	vxtbus at mainbus
file	arch/vax/vxt/vxtbus.c			vxtbus

device	ze: sgec, ether, ifnet
attach	ze at ibus with ze_ibus
file	arch/vax/if/if_ze.c			ze_ibus
attach	ze at vsbus with ze_vsbus
file	arch/vax/vsa/if_ze_vsbus.c		ze_vsbus
attach	ze at vxtbus with ze_vxtbus
file	arch/vax/vxt/if_ze_vxtbus.c		ze_vxtbus

attach	le at ibus with le_ibus: le24
file	arch/vax/if/if_le.c			le_ibus

# MSCP device drivers
include	"arch/vax/mscp/files.mscp"
major	{ra = 9}

# Unibus/Q22 bus definitions
include	"arch/vax/qbus/files.uba"

attach	uba at ibus with uba_ibus
file	arch/vax/uba/uba_ibus.c			uba_ibus

attach	dz at vsbus with dz_vsbus: dzcons
file	arch/vax/vsa/dz_ibus.c			dz_vsbus

# VXT serial
device	qsc {line = -1}: tty
attach	qsc at vxtbus
file	arch/vax/vxt/qsc.c			qsc		needs-flag

# RD-type disks at VS2000's onboard MFM-controller
device	hdc {drive = -1}
attach	hdc at vsbus
file	arch/vax/vsa/hdc9224.c			hdc | ry | hd needs-flag

device	hd: disk
attach	hd at hdc
major	{hd = 19}

device	ry: disk
attach	ry at hdc
major	{ry = 24}

#
# Bus-independent support for DEC devices
#
include	"arch/vax/dec/files.dec"

# wscons files.
include "dev/rasops/files.rasops"
include	"dev/wscons/files.wscons"
include	"dev/wsfont/files.wsfont"

# RAM Disk for install floppy
major	{rd = 23}

#
# Machine-independent SCSI driver.
#

include	"scsi/files.scsi"
major	{sd = 20}
major	{st = 21}
major	{cd = 22}

# builtin NCR53C95 SCSI Controller on VAXstation 4000 VLC/60/9x
device	asc: scsi, ncr53c9x
attach	asc at vsbus with asc_vsbus
file	arch/vax/vsa/asc_vsbus.c		asc

# builtin NCR5380 SCSI-controller on VAXstation 
device	ncr: scsi, ncr5380sbc
attach	ncr at vsbus
file	arch/vax/vsa/ncr.c			ncr

# LANCE ethernet controller on VAXstation
attach	le at vsbus with le_vsbus: le24
file	arch/vax/vsa/if_le_vsbus.c		le_vsbus

# Monochrome (on-board) framebuffer on VS3100
device	smg: wsemuldisplaydev, rasops1
attach	smg at vsbus
file	arch/vax/vsa/smg.c			smg needs-flag

# GPX framebuffer on VS3100
device	gpx: wsemuldisplaydev, rasops8
attach	gpx at vsbus
file	arch/vax/vsa/gpx.c			gpx needs-flag

# LCG framebuffer on KA46/KA48
device	lcg: wsemuldisplaydev, rasops8
attach	lcg at vsbus
file	arch/vax/vsa/lcg.c			lcg needs-flag

# LCSPX framebuffer on KA49
device	lcspx: wsemuldisplaydev, rasops8
attach	lcspx at vsbus with lcspx_vsbus
attach	lcspx at vxtbus with lcspx_vxtbus
file	arch/vax/vsa/lcspx.c			lcspx needs-flag

device	lkkbd: wskbddev 
attach	lkkbd at dz with dzkbd
attach	lkkbd at qsc with qsckbd
file	arch/vax/dec/dzkbd.c			dzkbd needs-flag
file	arch/vax/vxt/qsckbd.c			qsckbd needs-flag

device	lkms: wsmousedev
attach	lkms at dz with dzms
attach	lkms at qsc with qscms
file	arch/vax/dec/dzms.c			dzms needs-flag
file	arch/vax/vxt/qscms.c			qscms needs-flag

file	arch/vax/dec/dzinput.c			dzkbd | dzms

# M-bus on VS 3[58][24]0
include "arch/vax/mbus/files.mbus"

# Blinkenlichten
device	led
attach	led at mainbus
file	arch/vax/vax/led.c			led needs-flag

device	vsaudio: audio, am7930
attach	vsaudio at vsbus
file	arch/vax/vsa/vsaudio.c			vsaudio

# These are general files needed for compilation.
file	dev/cninit.c
file	arch/vax/vax/autoconf.c
file	arch/vax/vax/bus_dma.c
file	arch/vax/vax/bus_mem.c
file	arch/vax/vax/clock.c
file	arch/vax/vax/conf.c
file	arch/vax/vax/cvax.c			vax60 | vax650
file	arch/vax/vax/db_disasm.c		ddb
file	arch/vax/vax/db_machdep.c		ddb
file	arch/vax/vax/disksubr.c			disk | tape
file	arch/vax/vax/emulate.s			insn_emulate
file	arch/vax/vax/findcpu.c
file	arch/vax/vax/gencons.c			vax630 | vax650 | vax660 |
						vax670 | vax680
file	arch/vax/vax/in_cksum.c
file	arch/vax/vax/in4_cksum.c
file	arch/vax/vax/ka410.c			vax410
file	arch/vax/vax/ka43.c			vax43
file	arch/vax/vax/ka46.c			vax46
file	arch/vax/vax/ka48.c			vax48
file	arch/vax/vax/ka49.c			vax49
file	arch/vax/vax/ka53.c			vax53
file	arch/vax/vax/ka60.c			vax60
file	arch/vax/vax/ka630.c			vax630
file	arch/vax/vax/ka650.c			vax650
file	arch/vax/vax/ka660.c			vax660
file	arch/vax/vax/ka670.c			vax670
file	arch/vax/vax/ka680.c			vax680
file	arch/vax/vax/machdep.c
file	arch/vax/vax/mem.c
file	arch/vax/vax/mutex.c
file	arch/vax/vax/opcodes.c
file	arch/vax/vax/pmap.c
file	arch/vax/vax/scb.c
file	arch/vax/vax/sgmap.c
file	arch/vax/vax/softintr.c
file	arch/vax/vax/trap.c
file	arch/vax/vax/udiv.s
file	arch/vax/vax/unimpl_emul.s		insn_emulate
file	arch/vax/vax/urem.s
file	arch/vax/vax/vm_machdep.c
file	arch/vax/vax/vxt.c			vxt
file	arch/vax/vax/wscons_machdep.c		wsdisplay | wskbd
file	arch/vax/uba/uba_dma.c			uba

# quad support is necessary for 32 bit architectures
file	lib/libkern/adddi3.c
file	lib/libkern/anddi3.c
file	lib/libkern/ashldi3.c
file	lib/libkern/ashrdi3.c
file	lib/libkern/cmpdi2.c
file	lib/libkern/divdi3.c
file	lib/libkern/iordi3.c
file	lib/libkern/lshldi3.c
file	lib/libkern/lshrdi3.c
file	lib/libkern/moddi3.c
file	lib/libkern/muldi3.c
file	lib/libkern/negdi2.c
file	lib/libkern/notdi2.c
file	lib/libkern/qdivrem.c
file	lib/libkern/subdi3.c
file	lib/libkern/ucmpdi2.c
file	lib/libkern/udivdi3.c
file	lib/libkern/umoddi3.c
file	lib/libkern/xordi3.c
@


1.60
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.59 2015/05/11 06:46:21 ratchov Exp $
@


1.59
log
@Remove all audio format conversion code from the kernel (btw holding
the kernel_lock), as we already do better conversions in
user-mode. Yet, no need for every single driver to fiddle with the
conversion code as they are done transparently by common MI code. With
help from armani and miod, support from mpi

ok armani@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.58 2014/10/18 12:21:56 miod Exp $
d177 2
a178 2
file	arch/vax/vax/in_cksum.c			inet
file	arch/vax/vax/in4_cksum.c		inet
@


1.58
log
@Remove even more unnecessary `needs-flag' attributes from config machinery,
as well as useless include of the generated flag files.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.57 2013/09/24 20:10:50 miod Exp $
d158 1
a158 1
device	vsaudio: audio, am7930, mulaw
@


1.57
log
@Sync the MI LANCE code ( le(4) ) with NetBSD, except for the following:
- the am7990_get() - now lance_get() - is unchanged.
- the interrupt acknowledge logic is unchanged, and will disable interrupts,
  then acknowledge all interrupt conditions.

Add ILACC (79900) support (from NetBSD).

Both LANCE (am7990.c) and ILACC (am79900.c) code share as much common code
(lance.c) as possible. This affects all le(4) attachments, but the changes
are mostly mechanical, to split am7990-specific parts from lance-agnostic
parts.

Compile tested on all affected platforms. Tested on alpha, hp300, luna88k,
mvme88k, sparc, sparc64 and vax.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.56 2011/09/04 08:03:32 miod Exp $
d104 1
a104 1
file	arch/vax/vsa/asc_vsbus.c		asc needs-flag
d109 1
a109 1
file	arch/vax/vsa/ncr.c			ncr needs-flag
@


1.56
log
@Add emulation support for slinear:8, ulinear:8 and alaw. Written by jason@@
more than 8 years ago; allows aucat (and sndio users) to happily use
amd7930-based audio devices.
Verified by playing an mp3 file on vax.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.55 2011/09/03 20:41:31 miod Exp $
d45 1
a45 1
attach	le at ibus with le_ibus
d112 1
a112 1
attach	le at vsbus with le_vsbus
@


1.55
log
@Driver for the audio chip found on VAXstation 4000. Tested on VLC, /60 and
/90.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.54 2011/07/06 18:32:59 miod Exp $
d158 1
a158 1
device	vsaudio: audio, am7930
@


1.54
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.53 2011/06/27 03:27:07 tedu Exp $
d157 4
@


1.53
log
@remove compat_vax1k.  no more 4.3bsd reno support.  ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.52 2010/06/29 18:46:34 tedu Exp $
a16 2
device	mem
device	mba {drive = -1}
a19 25
# SBI and related devices
device	sbi {tr = -1}
attach	sbi at mainbus with sbi_mainbus
file	arch/vax/vax/sbi.c			sbi

attach	mem at sbi with mem_sbi
file	arch/vax/vax/ka780.c			vax780 | mem_sbi
file	arch/vax/vax/cfl.c			vax780 | mem_sbi

# Abus and related devices
device	abus {}
attach	abus at mainbus
attach	sbi at abus with sbi_abus
file	arch/vax/vax/ka860.c			abus
file	arch/vax/vax/crl.c			abus

# CMI and related devices
device	cmi {tr = -1}
attach	cmi at mainbus
file	arch/vax/vax/cmi.c			cmi

attach	mem at cmi with mem_cmi
file	arch/vax/vax/ka750.c			vax750 | mem_cmi
file	arch/vax/vax/ctu.c			vax750 | mem_cmi

a47 17
attach	mba at sbi with mba_sbi
attach	mba at cmi with mba_cmi
file	arch/vax/mba/mba.c			mba needs-flag

device	hp: disk
attach	hp at mba
file	arch/vax/mba/hp.c			hp needs-flag
major	{hp = 0}

device	ht: tape
attach	ht at mba
file	arch/vax/mba/ht.c			ht needs-flag

# Memory Disk for install floppy
#file	arch/vax/vax/md_root.c			memory_disk_hooks
#major	{md = 23}

a56 19
attach	uba at sbi with uba_sbi
file	arch/vax/uba/uba_sbi.c			uba_sbi
attach	uba at cmi with uba_cmi
file	arch/vax/uba/uba_cmi.c			uba_cmi

# BI bus definitions
#include "arch/vax/bi/files.bi"

#attach	bi at mainbus with bi_mainbus
#file	arch/vax/bi/bi_mainbus.c		bi_mainbus

# VAX CPUs at BI, do not belong in MI code.
#attach	cpu at bi with cpu_bi
#attach	mem at bi with mem_bi

# TS11 at UBA
device	ts: tape
attach	ts at uba
file	arch/vax/uba/ts.c			ts needs-flag
a149 135
# These devices aren't tested (or even compiled!)
# They are just included here to make some files happy ;)
#

# Ikonas framebuffer
device	ik
attach	ik at uba
file	arch/vax/uba/ik.c			ik needs-flag

device	vs
attach	vs at uba
file	arch/vax/uba/vs.c			vs needs-flag

# RK06/07 on UBA
device	rk: disk
attach	rk at uba
file	arch/vax/uba/rk.c			rk needs-flag

# TM11/TE10 at UBA
device	te: tape
attach	te at uba
file	arch/vax/uba/tm.c			te needs-flag

# TU78 at MBA
device	mu: tape
attach	mu at mba
file	arch/vax/mba/mt.c			mu needs-flag

# DMF32 on UBA
device	dmf # XXX?
attach	dmf at uba
file	arch/vax/uba/dmf.c			dmf needs-flag
file	arch/vax/uba/dmz.c			dmf needs-flag

# DMZ32 on UBA
device	dmz # XXX?
attach	dmz at uba
file	arch/vax/uba/dmx.c			dmz needs-flag

# DN-11 on UBA
device	dn # XXX?
attach	dn at uba
file	arch/vax/uba/dn.c			dn needs-flag

# IDC (RB730) on UBA (VAX 11/730)
device	idc {drive = -1}
attach	idc at uba
device	rb: disk
attach	rb at idc
file	arch/vax/uba/idc.c			rb needs-flag

# LP-11 at UBA
device	lp
attach	lp at uba
file	arch/vax/uba/lp.c			lp needs-flag

# ???? at UBA
device	lpa
attach	lpa at uba
file	arch/vax/uba/lpa.c			lpa needs-flag

# PS2 at UBA
device	ps
attach	ps at uba
file	arch/vax/uba/ps.c			ps needs-flag

# RL02/RL11 at UBA
#device	hl {drive = -1}
#attach	hl at uba
#device	rl: disk
#attach	rl at hl
#file	arch/vax/uba/rl.c			rl needs-flag

# SC-21/SC-31 at UBA
device	sc {drive = -1}
attach	sc at uba
device	up: disk
attach	up at sc
file	arch/vax/uba/up.c			up needs-flag

# TU45 at UBA
device	ut {drive = -1}
attach	ut at uba
device	tj: tape
attach	tj at ut
file	arch/vax/uba/ut.c			tj needs-flag

# TU58/DECtape II
device	uu: tape
attach	uu at uba
file	arch/vax/uba/uu.c			uu needs-flag

# Benson-Varian plotter at UBA
device	va {drive = -1}
attach	va at uba
device	vz
attach	vz at va
file	arch/vax/uba/va.c			va needs-flag

# Versatec plotter at UBA
device	vp
attach	vp at uba
file	arch/vax/uba/vp.c			vp needs-flag

# QVSS at UBA
device	qv
attach	qv at uba
file	arch/vax/uba/qv.c			qv needs-flag

# Interlan NP100 at UBA
device	np: ifnet
attach	np at uba
file	arch/vax/if/if_ix.c			np needs-flag
file	arch/vax/uba/np.c			np needs-flag

# ACC LH/DH IMP on UBA
device	acc: ifnet
attach	acc at uba
file	arch/vax/if/if_acc.c			acc needs-flag

# DR11C at UBA
device	ct # XXX
attach	ct at uba
file	arch/vax/uba/ct.c			ct needs-flag

# A/D-converter on UBA
device	ad
attach	ad at uba
file	arch/vax/uba/ad.c			ad needs-flag

# DH-11/DM-11 on UBA
device	dh # XXX?
attach	dh at uba
file	arch/vax/uba/dh.c			dh needs-flag

a164 1
file	arch/vax/vax/crx.c			vax8200
d171 2
a172 1
file	arch/vax/vax/gencons.c	vax8600|vax8200|vax780|vax750|vax630|vax650|vax660|vax670|vax680
a186 1
file	arch/vax/vax/ka820.c			vax8200
a202 21

# Keep these for now. Time will tell which we will need... 
#arch/vax/vax/dkbad.c		standard
#arch/vax/vax/ka730.c		standard
#arch/vax/vax/iidr.o		optional ii
#arch/vax/vax/iidrsys.o		optional ii
#arch/vax/vax/iidr_glob.o	optional ii
#arch/vax/if/if_css.c		optional css imp device-driver
#arch/vax/if/if_dp.c		optional dp device-driver
#arch/vax/if/if_ddn.c		optional ddn device-driver
#arch/vax/if/if_dmc.c		optional dmc device-driver
#arch/vax/if/if_dmv.c		optional dmv device-driver
#arch/vax/if/if_ec.c		optional ec device-driver
#arch/vax/if/if_en.c		optional en device-driver
#arch/vax/if/if_ex.c		optional ex device-driver
#arch/vax/if/if_hdh.c		optional hdh device-driver
#arch/vax/if/if_hy.c		optional hy device-driver
#arch/vax/if/if_il.c		optional il device-driver
#arch/vax/if/if_pcl.c		optional pcl device-driver
#arch/vax/if/if_vv.c		optional vv device-driver
#arch/vax/if/raw_hy.c		optional hy device-driver
@


1.52
log
@COMPAT_ULTRIX is not used, time to retire it.  ok deraadt miod
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.51 2010/05/26 16:35:27 deraadt Exp $
a401 2

include	"compat/vax1k/files.vax1k"
@


1.51
log
@rename intvec.s to locore.S, and add the guts of locore.C to machdep.c
ok miod ragge
We cannot yet get at vax/subr.s via files.vax because rdsetroot doesn't
like it when the "start" symbol isn't in the first page of the executable.
subr.s will have to be merged into locore.S later on, when other problems
with ENTRY() are solved (says Miod)
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.50 2009/03/20 18:39:26 miod Exp $
a402 1
include	"compat/ultrix/files.ultrix"
@


1.50
log
@Switch vax to __HAVE_GENERIC_SOFT_INTERRUPTS.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.49 2008/10/10 20:21:39 deraadt Exp $
a385 1
file	arch/vax/vax/locore.c
@


1.49
log
@Use the MI random() for all cases; no need for a MD version since it
has never been performance sensitive.
Running on all platforms, discussed with millert and kettenis, ok toby
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.48 2008/08/18 23:19:21 miod Exp $
d164 5
d358 3
a360 2
file	arch/vax/vax/locore.c
file	arch/vax/vax/mem.c
d362 8
d371 2
a372 5
file	arch/vax/vax/pmap.c
file	arch/vax/vax/machdep.c
file	arch/vax/vax/ka820.c			vax8200
file	arch/vax/vax/crx.c			vax8200
file	arch/vax/vax/ka630.c			vax630
d380 1
a380 2
file	arch/vax/vax/emulate.s			insn_emulate
file	arch/vax/vax/unimpl_emul.s		insn_emulate
d385 7
a391 2
file	arch/vax/vax/vxt.c			vxt
file	arch/vax/vax/cvax.c			vax60 | vax650
d393 5
a397 1
file	arch/vax/vax/conf.c
a398 5
file	arch/vax/vax/udiv.s
file	arch/vax/vax/trap.c
file	arch/vax/vax/bus_dma.c
file	arch/vax/vax/bus_mem.c
file	arch/vax/vax/sgmap.c
d400 2
a401 9
file	arch/vax/vax/findcpu.c
file	arch/vax/vax/autoconf.c
file	arch/vax/vax/mutex.c
file	arch/vax/vax/in_cksum.c			inet
file	arch/vax/vax/in4_cksum.c		inet
file	arch/vax/vax/disksubr.c			disk | tape
file	arch/vax/vax/db_machdep.c		ddb
file	arch/vax/vax/db_disasm.c		ddb
file	arch/vax/vax/opcodes.c
a402 6
file	arch/vax/vax/wscons_machdep.c		wsdisplay | wskbd

# builtin NCR53C95 SCSI Controller on VAXstation 4000 VLC/60/9x
device	asc: scsi, ncr53c9x
attach	asc at vsbus with asc_vsbus
file	arch/vax/vsa/asc_vsbus.c		asc needs-flag
@


1.48
log
@Add support for the ``Firefox'' VAXstation 3520/3540/3820/3840 workstations,
currently limited to serial console and a single processor working.

All ``on-board'' devices, including the Q-bus adapter, but except for
the frame buffer, are supported. The machine will boot over the network
or from SCSI devices.

Lots of thanks to Al Kossow for www.bitsavers.org, on which I found the
technical documentation allowing me to complete this port (which was
lacking at the time I got that machine...).
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.47 2008/08/18 23:07:22 miod Exp $
a386 1
file	arch/vax/vax/random.s
@


1.47
log
@Move common CVAX defines and code (internal cache IPR, SSC layout, machine
check frame format...) to a single place. Get rid of duplicated KAxx_FOO
constants.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.46 2008/08/18 23:04:26 miod Exp $
d343 3
d368 1
@


1.46
log
@Shuffle the dz console code (both serial and keyboard) to be more independent
of the console device attachment, and to be able to work on system where there
are more than one dz device of the same type, one of it being the console one.

This also allows a different register layout than the dz@@ibus one to be used
for the dz console device.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.45 2008/04/25 14:51:35 jmc Exp $
d372 1
@


1.45
log
@neccessary -> necessary; from Pierre Riteau
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.44 2007/11/25 18:25:29 deraadt Exp $
d20 2
d121 1
a121 1
attach	dz at vsbus with dz_vsbus
d205 2
@


1.44
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.43 2007/06/01 22:01:52 maja Exp $
d419 1
a419 1
# quad support is neccessary for 32 bit architectures
@


1.43
log
@Replace comment in Swedish. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.42 2007/05/04 03:44:44 deraadt Exp $
d418 21
@


1.42
log
@setroot() was a ugly mix of MI and MD code, with different bugs on different
machines.  Instead -- build one solid clean MI version, and thenchange all
the architectures to use it.  ok various people, tested on almost all cases.
(it is a 10094 line diff..)
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.41 2007/02/05 05:46:13 miod Exp $
d398 1
a398 1
# Dom h{ra f}r vara kvar s} l{nge f}r vi se vilka vi beh|ver...
@


1.41
log
@Oops, forgot to commit these files when adding md mutex code; spotted by nick@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.40 2006/08/27 16:55:38 miod Exp $
a378 1
file	arch/vax/vax/rootfil.c
@


1.40
log
@Work-in-progress VXT2000 support (commented out in GENERIC so far). Glass
console works on color model, serial console works, ethernet attaches but
does not work correctly yet.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.39 2006/07/29 14:18:55 miod Exp $
d381 1
@


1.39
log
@Rewrite glass console detection and initialization code, it's simpler and
will not allocate frame buffer resources at probe time. A few buglets fixed
while doing so.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.38 2006/07/24 22:19:54 miod Exp $
d58 4
d67 2
d122 5
d188 2
a189 1
attach	lcspx at vsbus
d194 1
d196 1
d200 1
d202 1
d367 1
@


1.38
log
@Driver for the VS4000/90 frame buffer, adapted from NetBSD (ragge) and
Blaz Antonic's work, no acceleration yet, untested due to the lack of
hardware, but enough sacrifices were made to the RAMDAC Gods.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.37 2006/07/24 20:35:06 miod Exp $
d371 1
@


1.37
log
@Add a wsdisplay driver for the frame buffer found on VS4000/60 and VLC
systems, based on Blaz Antonic's work and adjusted to fit modern wscons
requirements; currently running as a dumb frame buffer, acceleration code
going in soon.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.36 2006/07/23 19:17:21 miod Exp $
d174 5
@


1.36
log
@Make smg(4) on par with the current state of wsdisplay drivers: make it use
a rasops backend and wsfont, better ioctl conformance, and too many other
changes to mention.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.35 2006/07/20 19:15:34 miod Exp $
d160 1
a160 1
# Monochrome framebuffer on VS3100.
d165 10
a181 4

#device	lkc: qfont
#attach	lkc at dz
#file	arch/vax/vsa/lkc.c			lkc needs-flag
@


1.35
log
@Here cometh the blinkenlichten on VAXens.
Register information from NetBSD (except for KA53), logic from OpenBSD/sparc.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.34 2006/06/19 15:13:35 deraadt Exp $
d135 1
d137 1
d161 1
a161 1
device	smg: wsemuldisplaydev
@


1.34
log
@move clock_subr.c to a better place, and now it is always in the kernel
so that things can use it; tested on all architectures; ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.33 2006/01/17 20:26:16 miod Exp $
d309 5
@


1.33
log
@Use angle bracket and no relative paths for all include files which are not
created by config(8); no functional change.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.32 2005/07/14 02:09:46 uwe Exp $
a311 1
file	dev/clock_subr.c	vax8200|vax410|vax43|vax630|vax660|vax670|vax680|vax46|vax48|vax49|vax53
@


1.32
log
@More netccitt and netns removals; OK henning, brad, mickey
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.31 2005/05/10 04:04:39 brad Exp $
d144 1
a144 1
include	"../../../scsi/files.scsi"
@


1.31
log
@- add vax optimized in4_cksum
- de register and use ANSI prototype

From NetBSD

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.30 2005/05/01 21:36:57 brad Exp $
a348 1
file	arch/vax/vax/ns_cksum.c			ns
@


1.30
log
@To allow for MD override of in4_cksum()...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.29 2005/03/08 20:00:24 tdeval Exp $
d348 1
a348 1
file	netinet/in4_cksum.c			inet
@


1.29
log
@Cosmetics...
Mainly remove space between locators parens, replace spaces with tabs
where appropriate and consistently align dependencies.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.28 2004/10/08 13:04:36 grange Exp $
d348 1
@


1.28
log
@Move dev/cons.c to MI conf/files.

ok miod@@
@
text
@d1 2
a2 2
#	$OpenBSD: files.vax,v 1.27 2002/05/16 07:37:41 miod Exp $
#       $NetBSD: files.vax,v 1.60 1999/08/27 20:04:32 ragge Exp $
d12 1
a12 1
device	mainbus { }
d18 1
a18 1
device	mba { drive = -1 }
d21 1
a21 1
device	sbi { tr=-1 }
d23 1
a23 1
file	arch/vax/vax/sbi.c		sbi
d26 2
a27 2
file	arch/vax/vax/ka780.c		vax780 | mem_sbi
file	arch/vax/vax/cfl.c		vax780 | mem_sbi
d30 1
a30 1
device	abus { }
d33 2
a34 2
file	arch/vax/vax/ka860.c		abus
file	arch/vax/vax/crl.c		abus
d37 1
a37 1
device	cmi { tr=-1 }
d39 1
a39 1
file	arch/vax/vax/cmi.c		cmi
d42 2
a43 2
file	arch/vax/vax/ka750.c		vax750 | mem_cmi
file	arch/vax/vax/ctu.c		vax750 | mem_cmi
d45 1
a45 1
device	vsbus { csr }
d47 1
a47 1
file	arch/vax/vsa/vsbus.c		vsbus
d51 2
a52 2
define  sgec
file    arch/vax/if/sgec.c           sgec
d54 1
a54 1
device	ibus { }
d56 1
a56 1
file	arch/vax/vax/ibus.c		ibus
d58 1
a58 1
device	ze:  sgec, ether, ifnet
d60 1
a60 1
file	arch/vax/if/if_ze.c		ze_ibus
d62 1
a62 1
file	arch/vax/vsa/if_ze_vsbus.c	ze_vsbus
d65 1
a65 1
file	arch/vax/if/if_le.c		le_ibus
d69 1
a69 1
file	arch/vax/mba/mba.c		mba needs-flag
d71 3
a73 3
device  hp: disk
attach  hp at mba
file    arch/vax/mba/hp.c		hp needs-flag
d78 1
a78 1
file	arch/vax/mba/ht.c		ht needs-flag
d81 1
a81 1
#file arch/vax/vax/md_root.c		memory_disk_hooks
d85 1
a85 1
include "arch/vax/mscp/files.mscp"
d89 1
a89 1
include "arch/vax/qbus/files.uba"
d92 1
a92 1
file	arch/vax/uba/uba_ibus.c		uba_ibus
d94 1
a94 1
file	arch/vax/uba/uba_sbi.c		uba_sbi
d96 1
a96 1
file	arch/vax/uba/uba_cmi.c		uba_cmi
d102 1
a102 1
#file	arch/vax/bi/bi_mainbus.c	bi_mainbus
d111 1
a111 1
file	arch/vax/uba/ts.c		ts needs-flag
d114 1
a114 1
file	arch/vax/vsa/dz_ibus.c		dz_vsbus
d117 1
a117 1
device	hdc { drive = -1 }
d119 1
a119 1
file	arch/vax/vsa/hdc9224.c		hdc | ry | hd needs-flag
d132 1
a132 1
include "arch/vax/dec/files.dec"
d135 1
a135 1
include "dev/wscons/files.wscons"
d144 4
a147 4
include "../../../scsi/files.scsi"
major   { sd = 20 }
major   { st = 21 }
major   { cd = 22 }
d152 1
a152 1
file	arch/vax/vsa/ncr.c		ncr needs-flag
d156 1
a156 1
file	arch/vax/vsa/if_le_vsbus.c	le_vsbus
d161 1
a161 1
file	arch/vax/vsa/smg.c		smg needs-flag
d165 1
a165 1
file	arch/vax/dec/dzkbd.c		dzkbd needs-flag
d169 1
a169 1
file	arch/vax/dec/dzms.c		dzms needs-flag
d173 1
a173 1
#file	arch/vax/vsa/lkc.c		lkc needs-flag
d182 1
a182 1
file	arch/vax/uba/ik.c		ik needs-flag
d186 1
a186 1
file	arch/vax/uba/vs.c		vs needs-flag
d191 1
a191 1
file	arch/vax/uba/rk.c		rk needs-flag
d196 1
a196 1
file	arch/vax/uba/tm.c		te needs-flag
d201 1
a201 1
file	arch/vax/mba/mt.c		mu needs-flag
d206 2
a207 2
file	arch/vax/uba/dmf.c		dmf needs-flag
file	arch/vax/uba/dmz.c		dmf needs-flag
d212 1
a212 1
file	arch/vax/uba/dmx.c		dmz needs-flag
d217 1
a217 1
file	arch/vax/uba/dn.c		dn needs-flag
d220 1
a220 1
device	idc { drive=-1 }
d224 1
a224 1
file	arch/vax/uba/idc.c		rb needs-flag
d229 1
a229 1
file	arch/vax/uba/lp.c		lp needs-flag
d234 1
a234 1
file	arch/vax/uba/lpa.c		lpa needs-flag
d239 1
a239 1
file	arch/vax/uba/ps.c		ps needs-flag
d242 1
a242 1
#device	hl { drive=-1 }
d246 1
a246 1
#file	arch/vax/uba/rl.c		rl needs-flag
d249 1
a249 1
device	sc { drive=-1 }
d253 1
a253 1
file	arch/vax/uba/up.c		up needs-flag
d256 1
a256 1
device	ut { drive=-1}
d260 1
a260 1
file	arch/vax/uba/ut.c		tj needs-flag
d265 1
a265 1
file	arch/vax/uba/uu.c		uu needs-flag
d268 1
a268 1
device	va { drive=-1}
d272 1
a272 1
file	arch/vax/uba/va.c		va needs-flag
d277 1
a277 1
file	arch/vax/uba/vp.c		vp needs-flag
d282 1
a282 1
file	arch/vax/uba/qv.c		qv needs-flag
d287 2
a288 2
file	arch/vax/if/if_ix.c		np needs-flag
file	arch/vax/uba/np.c		np needs-flag
d293 1
a293 1
file	arch/vax/if/if_acc.c		acc needs-flag
d298 1
a298 1
file	arch/vax/uba/ct.c		ct needs-flag
d303 1
a303 1
file	arch/vax/uba/ad.c		ad needs-flag
d308 1
a308 1
file	arch/vax/uba/dh.c		dh needs-flag
d319 15
a333 15
file	arch/vax/vax/ka820.c		vax8200
file	arch/vax/vax/crx.c		vax8200
file	arch/vax/vax/ka630.c		vax630
file	arch/vax/vax/ka410.c		vax410
file	arch/vax/vax/ka43.c		vax43
file	arch/vax/vax/ka46.c		vax46
file	arch/vax/vax/ka48.c		vax48
file	arch/vax/vax/ka49.c		vax49
file	arch/vax/vax/ka53.c		vax53
file	arch/vax/vax/emulate.s		insn_emulate
file	arch/vax/vax/unimpl_emul.s	insn_emulate
file	arch/vax/vax/ka650.c		vax650
file	arch/vax/vax/ka660.c		vax660
file	arch/vax/vax/ka670.c		vax670
file	arch/vax/vax/ka680.c		vax680
d344 1
a344 1
file    arch/vax/vax/random.s       
d347 5
a351 5
file	arch/vax/vax/in_cksum.c		inet
file	arch/vax/vax/ns_cksum.c		ns
file	arch/vax/vax/disksubr.c		disk | tape
file	arch/vax/vax/db_machdep.c	ddb
file	arch/vax/vax/db_disasm.c	ddb
d353 1
a353 1
file	arch/vax/uba/uba_dma.c		uba
d356 3
a358 3
device asc: scsi, ncr53c9x
attach asc at vsbus with asc_vsbus
file	arch/vax/vsa/asc_vsbus.c	asc needs-flag
d360 2
a361 2
include "compat/ultrix/files.ultrix"
include "compat/vax1k/files.vax1k"
d364 19
a382 19
#arch/vax/vax/dkbad.c         standard
#arch/vax/vax/ka730.c         standard
#arch/vax/vax/iidr.o          optional ii
#arch/vax/vax/iidrsys.o       optional ii
#arch/vax/vax/iidr_glob.o     optional ii
#arch/vax/if/if_css.c         optional css imp device-driver
#arch/vax/if/if_dp.c          optional dp device-driver
#arch/vax/if/if_ddn.c         optional ddn device-driver
#arch/vax/if/if_dmc.c         optional dmc device-driver
#arch/vax/if/if_dmv.c         optional dmv device-driver
#arch/vax/if/if_ec.c          optional ec device-driver
#arch/vax/if/if_en.c          optional en device-driver
#arch/vax/if/if_ex.c          optional ex device-driver
#arch/vax/if/if_hdh.c         optional hdh device-driver
#arch/vax/if/if_hy.c          optional hy device-driver
#arch/vax/if/if_il.c          optional il device-driver
#arch/vax/if/if_pcl.c         optional pcl device-driver
#arch/vax/if/if_vv.c          optional vv device-driver
#arch/vax/if/raw_hy.c         optional hy device-driver
@


1.27
log
@Fix a long standing problem on vax: on "arithmetic fault" exceptions,
we schedule a SIGFPE signal delivery to the faulting process.

However, arithmetic faults come in two flavors: "traps" that are "regular"
exceptions, and "faults" that are restartable exceptions.
In the "fault" case, the frame pc points to the faulting instruction, instead
of the next instruction, in case we could save the world by tweaking memory
and make the instruction not fault again when restarted.

In practice, this led to processes blocked in a SIGFPE loop madness.

To avoid this, add a skip_opcode() routine to compute the address of the
next opcode, effectively skipping the offending instruction ; this routine
is a very stripped-down db_disasm().

While there, enhance the ddb disassembler to correctly recognize and
disassemble two-byte opcodes.

ok hugh@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.26 2002/04/04 23:47:47 deraadt Exp $
a310 1
file	dev/cons.c
@


1.26
log
@permit maxusers down to 2
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.25 2001/11/14 14:37:22 hugh Exp $
d353 1
@


1.25
log
@Compat layer for 1k Vax aout, from NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.24 2001/05/16 22:15:18 hugh Exp $
d10 1
a10 1
maxusers 8 32 64
@


1.25.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.25 2001/11/14 14:37:22 hugh Exp $
d10 1
a10 1
maxusers 2 8 64
a352 1
file	arch/vax/vax/opcodes.c
@


1.24
log
@Blind merge of wscons support from NetBSD/vax. Perhaps someone with a
supported framebuffer (simple monochrome) can finish this off.
If anyone has run across docs for LCG or SPGFX, please get in touch.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.23 2001/05/11 07:13:16 deraadt Exp $
d361 1
a361 1
#include "compat/vax1k/files.vax1k"
@


1.23
log
@unify rd(4) even more
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.22 2001/05/11 06:41:51 deraadt Exp $
d129 8
d159 1
a159 1
device	smg: qfont
d163 11
a173 3
device	lkc: qfont
attach	lkc at dz
file	arch/vax/vsa/lkc.c		lkc needs-flag
a382 4

# wscons files.
include "dev/wscons/files.wscons"

@


1.22
log
@unify
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.21 2001/04/17 15:19:33 hugh Exp $
a129 1
file	dev/rd.c			ramdisk_hooks
@


1.21
log
@Comment out the 20+ year old rl disk device to make way for the recently
MI RealTek network adaptor. Will resurrect or rename rl at such time as
we actually support these drives.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.20 2001/02/24 10:31:59 hugh Exp $
d130 1
a130 1
file arch/vax/vax/rd_root.c		ramdisk_hooks
@


1.20
log
@Support for VAX 4000/{2,4,5}00 from Michael Kukat. untested.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.19 2001/02/11 06:34:36 hugh Exp $
d227 5
a231 5
device	hl { drive=-1 }
attach	hl at uba
device	rl: disk
attach	rl at hl
file	arch/vax/uba/rl.c		rl needs-flag
a370 1

@


1.19
log
@Pick up a NetBSD hack to attach Cheetah to vsbus as well as ibus.
High kludge factor, but the payoff is vsbus scsi for free.
Most of the work is by Michael Kukat and ragge, with a few other
synchronisations thrown in.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.18 2001/01/28 01:19:58 hugh Exp $
d298 1
a298 1
file	dev/clock_subr.c	vax8200|vax410|vax43|vax630|vax670|vax46|vax48|vax49|vax53
d302 1
a302 1
file	arch/vax/vax/gencons.c	vax8600|vax8200|vax780|vax750|vax630|vax650|vax670
d317 1
d319 1
@


1.18
log
@Basic support for boardtype 1303 (Cheetah) machines.
Layout of the DZ's registers (among other things) determined
by a massive amount of trial and error.
Work by Brandon and me.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.17 2000/11/24 19:14:03 hugh Exp $
d114 1
a114 2
attach dz at ibus with dz_ibus
file	arch/vax/vsa/dz_ibus.c		dz_vsbus | dz_ibus
@


1.17
log
@Support 16 slices per device, like the other OpenBSD arches.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.16 2000/10/31 02:30:56 hugh Exp $
d114 2
a115 1
file	arch/vax/vsa/dz_ibus.c		dz_vsbus
d299 1
a299 1
file	dev/clock_subr.c	vax8200|vax410|vax43|vax630|vax670|vax46|vax48|vax49
d314 1
@


1.16
log
@ramdisk support for vax.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.15 2000/10/24 02:20:21 hugh Exp $
d8 1
a8 1
maxpartitions 8
@


1.15
log
@RCS tag didn't stick on unimpl_emul.s, perhaps due to funky netbsd tag
underneath, so fix up netbsd tag and try again. Also tag files.vax.
@
text
@d1 1
a1 1
#	$OpenBSD$
d128 4
@


1.14
log
@Code to emulate instructions trapped by a privinflt.
Currently only one instruction emulated (mostly): polyd
Obtained from: NetBSD; Cleared with Theo.
@
text
@d1 1
@


1.13
log
@whitespace
@
text
@d308 2
a309 1
file	arch/vax/vax/emulate.s		vax630|vax650|vax410
@


1.12
log
@add asc*
also need vsbus_dma.c
@
text
@d334 1
a334 1
file   arch/vax/vsa/asc_vsbus.c        asc needs-flag
@


1.11
log
@remove unnecessary wscons-related definitions; thx mickey@@
@
text
@d47 1
d330 5
@


1.10
log
@remove vaxbi stuff for the moment, far from working
@
text
@a353 5
define  wsdisplaydev { }
define  wsemuldisplaydev {[console = -1]}
define  wskbddev {[console = -1], [mux = -1]}
define  wsmousedev {[mux = -1]}

@


1.9
log
@sync -- enabled devices in GENERIC should be working
@
text
@d97 1
a97 1
include "arch/vax/bi/files.bi"
d99 2
a100 2
attach	bi at mainbus with bi_mainbus
file	arch/vax/bi/bi_mainbus.c	bi_mainbus
d103 2
a104 2
attach	cpu at bi with cpu_bi
attach	mem at bi with mem_bi
@


1.8
log
@Rename rd to hd. OpenBSD uses rd for ramdisk. -moj
@
text
@d1 1
a1 2
#       $OpenBSD: files.vax,v 1.7 1997/09/12 09:18:14 maja Exp $
#       $NetBSD: files.vax,v 1.27 1997/03/15 18:11:09 is Exp $
d11 2
a12 2
device	backplane { }
attach	backplane at root
d14 6
d21 2
a22 2
attach	sbi at backplane
file	arch/vax/vax/sbi.c		sbi needs-flag
d24 12
d37 2
a38 1
attach	cmi at backplane
d40 3
a42 3
device	bi { node=-1 }
attach	bi at backplane
file	arch/vax/bi/bi.c		bi needs-flag
d44 2
a45 2
device	vsbus { }
attach	vsbus at backplane
d48 13
a60 3
device	cpu
attach	cpu at backplane with cpu_backplane
attach	cpu at bi with cpu_bi
d62 2
a63 5
device	mem
attach	mem at backplane with mem_backplane
attach	mem at bi with mem_bi
attach	mem at sbi with mem_sbi
attach	mem at cmi with mem_cmi
a64 1
device	mba { drive = -1 }
d74 1
a74 1
device	ht
d78 4
a84 1
major	{mt = 16}
d86 2
a87 4
# KDB50 on BI
device	kdb: mscp
attach	kdb at bi
file	arch/vax/bi/kdb.c		kdb
d89 2
a90 2
device	uba { csr }
attach	uba at backplane with uba_backplane
d92 1
d94 1
a94 2
attach	uba at bi with uba_bi
file	arch/vax/uba/uba.c		uba
d96 9
a104 19
device	mtc: mscp
attach	mtc at uba
device	uda: mscp
attach	uda at uba
file    arch/vax/uba/uda.c		uda | mtc

device	de:ifnet, ether
attach	de at uba
file	arch/vax/if/if_de.c		de needs-flag

# DEQNA/DELQA used on Qbus
device	qe:ifnet, ether
attach	qe at uba
file	arch/vax/if/if_qe.c		qe needs-flag

# DEBNA/DEBNT Ethernet Adapter
device	ni:ifnet, ether
attach	ni at bi
file	arch/vax/bi/ni.c		ni needs-flag
d107 1
a107 1
device	ts
d109 1
a109 1
file	arch/vax/uba/ts.c		ts needs-count
d111 2
a112 9
# DHU-11 at UBA
device	dhu
attach	dhu at uba
file	arch/vax/uba/dhu.c		dhu needs-count

# DZ11 at UBA
device	dz
attach	dz at uba
file	arch/vax/uba/dz.c		dz needs-count
d117 1
a117 1
file	arch/vax/vsa/hdc9224.c		hdc needs-flag
d123 4
d130 1
d132 3
a134 3
major	{ sd = 20 }
major	{ st = 21 }
major	{ cd = 22 }
d142 2
a143 2
attach	le at vsbus
file	arch/vax/if/if_le.c		le needs-flag
d145 8
a152 15
# DC367-B in VAXstation 2000/3100 (DZ-like 4-port serial line controller,
# controls keyboard, mouse, modem, and printer/console)
device	dc
attach	dc at vsbus
file	arch/vax/vsa/dc.c		dc needs-flag
file	arch/vax/vsa/lk201.c		dc

# PM Framebuffer in VAXstation 2000/3100
device	pm
attach	pm at vsbus
file	arch/vax/vsa/pm.c		pm needs-flag

device	dl
attach	dl at uba
file	arch/vax/uba/dl.c		dl needs-flag
d161 1
a161 1
file	arch/vax/uba/ik.c		ik needs-count
d165 1
a165 1
file	arch/vax/uba/vs.c		vs needs-count
d168 1
a168 1
device	rk
d170 1
a170 1
file	arch/vax/uba/rk.c		rk needs-count
d173 1
a173 1
device	te
d175 1
a175 1
file	arch/vax/uba/tm.c		te needs-count
d178 1
a178 1
device	mu
d180 1
a180 1
file	arch/vax/mba/mt.c		mu needs-count
d183 1
a183 1
device	dmf
d185 2
a186 2
file	arch/vax/uba/dmf.c		dmf needs-count
file	arch/vax/uba/dmz.c		dmf needs-count
d189 1
a189 1
device	dmz
d191 1
a191 1
file	arch/vax/uba/dmx.c		dmz needs-count
d194 1
a194 1
device	dn
d196 1
a196 1
file	arch/vax/uba/dn.c		dn needs-count
d201 1
a201 1
device	rb
d203 1
a203 1
file	arch/vax/uba/idc.c		rb needs-count
d208 1
a208 1
file	arch/vax/uba/lp.c		lp needs-count
d213 1
a213 1
file	arch/vax/uba/lpa.c		lpa needs-count
d218 1
a218 1
file	arch/vax/uba/ps.c		ps needs-count
d223 1
a223 1
device	rl
d225 1
a225 8
file	arch/vax/uba/rl.c		rl needs-count

# RX211/RX02 at UBA
device	fx { drive=-1 }
attach	fx at uba
device	rx
attach	rx at fx
file	arch/vax/uba/rx.c		rx needs-count
d230 1
a230 1
device	up
d232 1
a232 1
file	arch/vax/uba/up.c		up needs-count
d237 1
a237 1
device	tj
d239 1
a239 1
file	arch/vax/uba/ut.c		tj needs-count
d242 1
a242 1
device	uu
d244 1
a244 1
file	arch/vax/uba/uu.c		uu needs-count
d251 1
a251 1
file	arch/vax/uba/va.c		va needs-count
d256 1
a256 1
file	arch/vax/uba/vp.c		vp needs-count
d261 1
a261 7
file	arch/vax/uba/qv.c		qv needs-count
file	arch/vax/uba/qfont.c		qv needs-count

# QDSS at UBA
device	qd
attach	qd at uba
file	arch/vax/uba/qd.c		qd needs-count
d264 1
a264 1
device	np
d266 2
a267 2
file	arch/vax/if/if_ix.c		np needs-count
file	arch/vax/uba/np.c		np needs-count
d270 1
a270 1
device	acc
d272 1
a272 1
file	arch/vax/if/if_acc.c		acc needs-count
d275 1
a275 1
device	ct
d277 1
a277 1
file	arch/vax/uba/ct.c		ct needs-count
d282 1
a282 1
file	arch/vax/uba/ad.c		ad needs-count
d285 1
a285 1
device	dh
d287 1
a287 1
file	arch/vax/uba/dh.c		dh needs-count
d292 1
a292 1
file	dev/clock_subr.c
d296 1
a296 2
file	arch/vax/vax/gencons.c	vax8600|vax8200|vax780|vax750|vax630|vax650
file	arch/vax/vax/dzcons.c		vax410 | vax43
a298 4
file	arch/vax/vax/ka750.c		vax750
file	arch/vax/vax/ctu.c		vax750
file	arch/vax/vax/ka780.c		vax780
file	arch/vax/vax/cfl.c		vax780
d300 1
a300 3
file	arch/vax/vax/ka860.c		vax8600
file	arch/vax/vax/crl.c		vax8600
file	arch/vax/vax/uvax.c		vax630 | vax410 | vax43
d304 4
a307 1
file	arch/vax/vax/emulate.s		vax630|vax650|vax410|vax420
d309 2
a313 1
file	arch/vax/vax/rootfil.c
d315 3
a317 1

d319 3
a322 1
file	arch/vax/vax/random.s		inet
a325 1
file	arch/vax/if/if_uba.c		de | qe
d328 1
d330 2
a331 1
include "../../../compat/ultrix/files.ultrix"
a335 1
#arch/vax/vax/rx50.c          standard
d353 10
@


1.8.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
#	$OpenBSD: files.vax,v 1.21 2001/04/17 15:19:33 hugh Exp $
#       $NetBSD: files.vax,v 1.60 1999/08/27 20:04:32 ragge Exp $
d8 1
a8 1
maxpartitions 16
d12 2
a13 2
device	mainbus { }
attach	mainbus at root
a14 6
# Define a bunch of devices, needed in more than one place.
device	cpu
device	mem
device	mba { drive = -1 }

# SBI and related devices
d16 2
a17 13
attach	sbi at mainbus with sbi_mainbus
file	arch/vax/vax/sbi.c		sbi

attach	mem at sbi with mem_sbi
file	arch/vax/vax/ka780.c		vax780 | mem_sbi
file	arch/vax/vax/cfl.c		vax780 | mem_sbi

# Abus and related devices
device	abus { }
attach	abus at mainbus
attach	sbi at abus with sbi_abus
file	arch/vax/vax/ka860.c		abus
file	arch/vax/vax/crl.c		abus
a18 1
# CMI and related devices
d20 1
a20 2
attach	cmi at mainbus
file	arch/vax/vax/cmi.c		cmi
d22 3
a24 3
attach	mem at cmi with mem_cmi
file	arch/vax/vax/ka750.c		vax750 | mem_cmi
file	arch/vax/vax/ctu.c		vax750 | mem_cmi
d26 2
a27 2
device	vsbus { csr }
attach	vsbus at mainbus
a28 1
file	arch/vax/vsa/vsbus_dma.c		vsbus
d30 3
a32 13
# DEC SGEC Second Generation Ethernet Controller
define  sgec
file    arch/vax/if/sgec.c           sgec

device	ibus { }
attach	ibus at mainbus
file	arch/vax/vax/ibus.c		ibus

device	ze:  sgec, ether, ifnet
attach	ze at ibus with ze_ibus
file	arch/vax/if/if_ze.c		ze_ibus
attach	ze at vsbus with ze_vsbus
file	arch/vax/vsa/if_ze_vsbus.c	ze_vsbus
d34 5
a38 2
attach	le at ibus with le_ibus
file	arch/vax/if/if_le.c		le_ibus
d40 1
d50 1
a50 1
device	ht: tape
a53 4
# Memory Disk for install floppy
#file arch/vax/vax/md_root.c		memory_disk_hooks
#major	{md = 23}

d57 1
d59 4
a62 2
# Unibus/Q22 bus definitions
include "arch/vax/qbus/files.uba"
d64 2
a65 2
attach	uba at ibus with uba_ibus
file	arch/vax/uba/uba_ibus.c		uba_ibus
a66 1
file	arch/vax/uba/uba_sbi.c		uba_sbi
d68 2
a69 7
file	arch/vax/uba/uba_cmi.c		uba_cmi

# BI bus definitions
#include "arch/vax/bi/files.bi"

#attach	bi at mainbus with bi_mainbus
#file	arch/vax/bi/bi_mainbus.c	bi_mainbus
d71 19
a89 3
# VAX CPUs at BI, do not belong in MI code.
#attach	cpu at bi with cpu_bi
#attach	mem at bi with mem_bi
d92 1
a92 1
device	ts: tape
d94 1
a94 1
file	arch/vax/uba/ts.c		ts needs-flag
d96 9
a104 2
attach	dz at vsbus with dz_vsbus
file	arch/vax/vsa/dz_ibus.c		dz_vsbus
d109 1
a109 1
file	arch/vax/vsa/hdc9224.c		hdc | ry | hd needs-flag
a114 8
device	ry: disk
attach	ry at hdc
major	{ry = 24}

# RAM Disk for install floppy
file arch/vax/vax/rd_root.c		ramdisk_hooks
major	{rd = 23}

a117 1

d119 3
a121 3
major   { sd = 20 }
major   { st = 21 }
major   { cd = 22 }
d129 2
a130 2
attach	le at vsbus with le_vsbus
file	arch/vax/vsa/if_le_vsbus.c	le_vsbus
d132 15
a146 8
# Monochrome framebuffer on VS3100.
device	smg: qfont
attach	smg at vsbus
file	arch/vax/vsa/smg.c		smg needs-flag

device	lkc: qfont
attach	lkc at dz
file	arch/vax/vsa/lkc.c		lkc needs-flag
d155 1
a155 1
file	arch/vax/uba/ik.c		ik needs-flag
d159 1
a159 1
file	arch/vax/uba/vs.c		vs needs-flag
d162 1
a162 1
device	rk: disk
d164 1
a164 1
file	arch/vax/uba/rk.c		rk needs-flag
d167 1
a167 1
device	te: tape
d169 1
a169 1
file	arch/vax/uba/tm.c		te needs-flag
d172 1
a172 1
device	mu: tape
d174 1
a174 1
file	arch/vax/mba/mt.c		mu needs-flag
d177 1
a177 1
device	dmf # XXX?
d179 2
a180 2
file	arch/vax/uba/dmf.c		dmf needs-flag
file	arch/vax/uba/dmz.c		dmf needs-flag
d183 1
a183 1
device	dmz # XXX?
d185 1
a185 1
file	arch/vax/uba/dmx.c		dmz needs-flag
d188 1
a188 1
device	dn # XXX?
d190 1
a190 1
file	arch/vax/uba/dn.c		dn needs-flag
d195 1
a195 1
device	rb: disk
d197 1
a197 1
file	arch/vax/uba/idc.c		rb needs-flag
d202 1
a202 1
file	arch/vax/uba/lp.c		lp needs-flag
d207 1
a207 1
file	arch/vax/uba/lpa.c		lpa needs-flag
d212 1
a212 1
file	arch/vax/uba/ps.c		ps needs-flag
d215 12
a226 5
#device	hl { drive=-1 }
#attach	hl at uba
#device	rl: disk
#attach	rl at hl
#file	arch/vax/uba/rl.c		rl needs-flag
d231 1
a231 1
device	up: disk
d233 1
a233 1
file	arch/vax/uba/up.c		up needs-flag
d238 1
a238 1
device	tj: tape
d240 1
a240 1
file	arch/vax/uba/ut.c		tj needs-flag
d243 1
a243 1
device	uu: tape
d245 1
a245 1
file	arch/vax/uba/uu.c		uu needs-flag
d252 1
a252 1
file	arch/vax/uba/va.c		va needs-flag
d257 1
a257 1
file	arch/vax/uba/vp.c		vp needs-flag
d262 7
a268 1
file	arch/vax/uba/qv.c		qv needs-flag
d271 1
a271 1
device	np: ifnet
d273 2
a274 2
file	arch/vax/if/if_ix.c		np needs-flag
file	arch/vax/uba/np.c		np needs-flag
d277 1
a277 1
device	acc: ifnet
d279 1
a279 1
file	arch/vax/if/if_acc.c		acc needs-flag
d282 1
a282 1
device	ct # XXX
d284 1
a284 1
file	arch/vax/uba/ct.c		ct needs-flag
d289 1
a289 1
file	arch/vax/uba/ad.c		ad needs-flag
d292 1
a292 1
device	dh # XXX?
d294 1
a294 1
file	arch/vax/uba/dh.c		dh needs-flag
d299 1
a299 1
file	dev/clock_subr.c	vax8200|vax410|vax43|vax630|vax660|vax670|vax680|vax46|vax48|vax49|vax53
d303 2
a304 1
file	arch/vax/vax/gencons.c	vax8600|vax8200|vax780|vax750|vax630|vax650|vax660|vax670|vax680
d307 4
d312 3
a314 1
file	arch/vax/vax/crx.c		vax8200
d318 1
a318 6
file	arch/vax/vax/ka46.c		vax46
file	arch/vax/vax/ka48.c		vax48
file	arch/vax/vax/ka49.c		vax49
file	arch/vax/vax/ka53.c		vax53
file	arch/vax/vax/emulate.s		insn_emulate
file	arch/vax/vax/unimpl_emul.s	insn_emulate
a319 4
file	arch/vax/vax/ka660.c		vax660
file	arch/vax/vax/ka670.c		vax670
file	arch/vax/vax/ka680.c		vax680
file	arch/vax/vax/scb.c
d323 1
d325 1
a325 3
file	arch/vax/vax/bus_dma.c
file	arch/vax/vax/bus_mem.c
file	arch/vax/vax/sgmap.c
a326 3
file	arch/vax/vax/findcpu.c
file    arch/vax/vax/random.s       
file	arch/vax/vax/rootfil.c
d328 1
d332 1
a334 1
file	arch/vax/uba/uba_dma.c		uba
d336 1
a336 7
# builtin NCR53C95 SCSI Controller on VAXstation 4000 VLC/60/9x
device asc: scsi, ncr53c9x
attach asc at vsbus with asc_vsbus
file	arch/vax/vsa/asc_vsbus.c	asc needs-flag

include "compat/ultrix/files.ultrix"
#include "compat/vax1k/files.vax1k"
d341 1
a358 4

# wscons files.
include "dev/wscons/files.wscons"

@


1.8.12.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.8.12.1 2001/05/14 21:37:53 niklas Exp $
a128 8
#
# Bus-independent support for DEC devices
#
include "arch/vax/dec/files.dec"

# wscons files.
include "dev/wscons/files.wscons"

d130 1
d152 1
a152 1
device	smg: wsemuldisplaydev
d156 3
a158 11
device	lkkbd: wskbddev 
attach	lkkbd at dz with dzkbd
file	arch/vax/dec/dzkbd.c		dzkbd needs-flag

device	lkms: wsmousedev
attach	lkms at dz with dzms
file	arch/vax/dec/dzms.c		dzms needs-flag

#device	lkc: qfont
#attach	lkc at dz
#file	arch/vax/vsa/lkc.c		lkc needs-flag
d368 4
@


1.8.12.3
log
@manually merge stuff cvs missed long ago
@
text
@d1 1
a1 1
#	$OpenBSD: files.vax,v 1.25 2001/11/14 14:37:22 hugh Exp $
d361 1
a361 1
include "compat/vax1k/files.vax1k"
@


1.8.12.4
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
d10 1
a10 1
maxusers 2 8 64
a352 1
file	arch/vax/vax/opcodes.c
@


1.7
log
@Sync with NetBSD 970827. -moj
@
text
@d1 1
a1 1
#       $OpenBSD: files.vax,v 1.6 1997/09/10 07:34:21 maja Exp $
d111 3
a113 3
device	rd: disk
attach	rd at hdc
major	{rd = 19}
@


1.6
log
@Sync with NetBSD 970516. -moj
@
text
@d1 1
a1 1
#       $OpenBSD: files.vax,v 1.5 1997/05/28 23:08:23 niklas Exp $
d310 1
a310 1
#file	arch/vax/vax/cfl.c		vax780
@


1.5
log
@remove cfl.c ref for the time being, we miss it.
@
text
@d1 2
a2 2
#       $OpenBSD: files.vax,v 1.23 1997/01/05 18:50:27 ragge Exp $
#       $NetBSD: files.vax,v 1.23 1997/01/05 18:50:27 ragge Exp $
d79 1
a79 1
file	arch/vax/if/if_de.c		de
d84 1
a84 1
file	arch/vax/if/if_qe.c		qe
d89 1
a89 1
file	arch/vax/bi/ni.c		ni
a122 5
# Memory Disk for install floppy
pseudo-device md
file	dev/md.c			md needs-flag
major	{ md = 23 }

d130 1
a130 1
file	arch/vax/if/if_le.c		le
d144 3
d299 1
d303 1
a303 1
file	arch/vax/vax/gencons.c	vax8600|vax8200|vax780|vax750|vax630|ka650
d318 1
a318 1
file	arch/vax/vax/emulate.s		vax630 | ka650
@


1.4
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
d311 1
a311 1
file	arch/vax/vax/cfl.c		vax780
@


1.3
log
@sync to 0611
@
text
@d1 1
a1 1
#       $NetBSD: files.vax,v 1.19 1996/05/19 16:25:29 ragge Exp $
d16 5
d23 5
d32 1
d37 1
a37 3

file	arch/vax/vax/sbi.c		sbi needs-flag
file	arch/vax/vax/bi.c		bi needs-flag
d40 2
a41 1
attach	mba at sbi
d53 10
d64 4
a67 1
attach	uba at sbi, bi
d70 3
a72 1
device	uda { drive=-1 }
d74 1
a74 1
file    arch/vax/uba/uda.c		uda needs-count
a79 12
device	ra: disk
attach	ra at uda	
file	arch/vax/vax/mscp.c		ra needs-count
major	{ra = 9}

# TK50/TU81 at UBA
device	tmscp {drive = -1}
attach	tmscp at uba
device	tms
attach	tms at tmscp
file	arch/vax/uba/tmscp.c		tmscp needs-count

d85 5
d105 44
a176 6
# KDB50 on BI
device	kdb { drive=-1 }
attach	kdb at bi
file	arch/vax/bi/kdb.c		kdb needs-count


d303 2
a304 1
file	arch/vax/vax/gencons.c
d308 1
d310 8
a317 2
file	arch/vax/vax/ctu.c		vax750
file	arch/vax/vax/uvaxII.c		vax630
a319 2
file	arch/vax/vax/ka860.c		vax8600
file	arch/vax/vax/crl.c		vax8600
d331 1
a331 1
file	arch/vax/vax/disksubr.c		ffs
a339 1
#arch/vax/vax/flp.c           standard
a340 1
#arch/vax/vax/ka820.c         standard
@


1.2
log
@sync w/ 0430
@
text
@d1 1
a1 1
#       $NetBSD: files.vax,v 1.18 1996/03/17 22:56:30 ragge Exp $
d82 5
a135 5

# DZ11 at UBA
device	dz
attach	dz at uba
file	arch/vax/uba/dz.c		dz needs-count
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#       $NetBSD: files.vax,v 1.13 1995/07/24 18:58:36 ragge Exp $
d11 2
a12 3
device	backplane at root { }
device	sbi at backplane { tr=-1 }
device	bi at backplane { node=-1 }
d14 12
a25 2
device	cpu at backplane, bi, sbi
device	mem at backplane, bi, sbi
d30 2
a31 1
device	mba at sbi { drive = -1 }
d34 2
a35 1
device  hp at mba
d39 2
a40 1
device	ht at mba
d43 3
a45 2
device	uba at sbi, bi { csr }
file	arch/vax/uba/uba.c		uba needs-count
d47 2
a48 1
device	uda at uba { drive=-1 }
d51 3
a53 2
device	de at uba:ifnet, ether
file	arch/vax/if/if_de.c		de needs-count
d55 2
a56 1
device	ra at uda	
d61 4
a64 2
device	tmscp at uba {drive = -1}
device	tms at tmscp
d68 13
a80 2
device	qe at uba:ifnet, ether
file	arch/vax/if/if_qe.c		qe needs-count
d87 2
a88 1
device	ik at uba
d91 2
a92 1
device	vs at uba
a94 4
# TU58 on 750/730
device	tu at root
file	arch/vax/vax/tu.c		tu needs-count

d96 2
a97 1
device	rk at uba
d101 2
a102 1
device	te at uba
a104 4
# TS11 at UBA
device	ts at uba
file	arch/vax/uba/ts.c		ts needs-count

d106 2
a107 1
device	mu at mba
d111 2
a112 1
device	kdb at bi { drive=-1 }
d117 2
a118 1
device	dmf at uba
d123 2
a124 1
device	dmz at uba
d128 2
a129 1
device	dn at uba
d133 2
a134 1
device	dz at uba
d138 4
a141 2
device	idc at uba { drive=-1 }
device	rb at idc
d145 2
a146 1
device	lp at uba
d150 2
a151 1
device	lpa at uba
d155 2
a156 1
device	ps at uba
d160 4
a163 2
device	hl at uba { drive=-1 }
device	rl at hl
d167 4
a170 2
device	fx at uba { drive=-1 }
device	rx at fx
d174 4
a177 2
device	sc at uba { drive=-1 }
device	up at sc
d181 4
a184 2
device	ut at uba { drive=-1}
device	tj at ut
d188 2
a189 1
device	uu at uba
d193 4
a196 2
device	va at uba { drive=-1}
device	vz at va
d200 2
a201 1
device	vp at uba
d205 2
a206 1
device	qv at uba
d211 2
a212 1
device	qd at uba
d216 2
a217 1
device	np at uba
d222 2
a223 1
device	acc at uba
d227 2
a228 1
device	ct at uba
d232 2
a233 1
device	ad at uba
d237 2
a238 1
device	dh at uba
a240 4
# DHU-11 at UBA
device	dhu at uba
file	arch/vax/uba/dhu.c		dhu needs-count

d251 2
d254 4
a257 1
file	arch/vax/vax/emulate.s		vax630
a265 3
#file	arch/vax/vax/cpu_machdep.c
#file	arch/vax/vax/in_cksum.c		inet
file	netinet/in_cksum.c		inet
d267 2
d270 1
a270 1
file	arch/vax/if/if_uba.c		de qe
d274 2
a276 1
#arch/vax/vax/crl.c           standard
a278 2
#arch/vax/vax/ka650.c         standard
#arch/vax/vax/ka630.c         standard
a279 2
#arch/vax/vax/ka750.c         standard
#arch/vax/vax/ka780.c         standard
a280 4
#arch/vax/vax/ka860.c         standard
#arch/vax/vax/kdb_machdep.c   optional kadb
#arch/vax/vax/kdb_opset.c     optional kadb
#arch/vax/vax/ns_cksum.c      optional ns
a281 1
#arch/vax/vax/sys_machdep.c   standard
a296 1
##arch/vax/if/if_uba.c         optional ns device-driver
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
