head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	SMP:1.1.1.1.0.12
	SMP_BASE:1.1.1.1
	kame_19991208:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.10
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.8
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.6
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.4
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.2
	OPENBSD_2_2_BASE:1.1.1.1
	gingold_1:1.1.1.1
	gingold:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.02.07.07.46.25;	author art;	state dead;
branches;
next	1.2;

1.2
date	2000.03.03.00.54.51;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	97.10.14.07.25.31;	author gingold;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.10.14.07.25.31;	author gingold;	state Exp;
branches
	1.1.1.1.12.1;
next	;

1.1.1.1.12.1
date	2000.03.24.09.07.58;	author niklas;	state Exp;
branches;
next	1.1.1.1.12.2;

1.1.1.1.12.2
date	2001.04.18.16.09.48;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: dev_disk.c,v 1.2 2000/03/03 00:54:51 todd Exp $ */

/*
 * Copyright (c) 1993 Paul Kranenburg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Paul Kranenburg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This module implements a "raw device" interface suitable for
 * use by the stand-alone I/O library UFS file-system code, and
 * possibly for direct access (i.e. boot from tape).
 *
 * The implementation is deceptively simple because it uses the
 * drivers provided by the Sun PROM monitor.  Note that only the
 * PROM driver used to load the boot program is available here.
 */

#include <sys/types.h>
#include <machine/mon.h>
#include <machine/saio.h>

#include "stand.h"

#include "dvma.h"
#include "promdev.h"

int
disk_open(f, devname)
	struct open_file *f;
	char *devname;		/* Device part of file name (or NULL). */
{
	struct saioreq *sip;
	int	error;

#ifdef DEBUG_PROM
	printf("disk_open: %s\n", devname);
#endif

	if ((error = prom_iopen(&sip)) != 0)
		return (error);

	f->f_devdata = sip;
	return 0;
}

int
disk_close(f)
	struct open_file *f;
{
	struct saioreq *sip;

	sip = f->f_devdata;
	prom_iclose(sip);
	f->f_devdata = NULL;
	return 0;
}

int
disk_strategy(devdata, flag, dblk, size, buf, rsize)
	void	*devdata;
	int	flag;
	daddr_t	dblk;
	u_int	size;
	char	*buf;
	u_int	*rsize;
{
	struct saioreq *si;
	struct boottab *ops;
	char *dmabuf;
	int	si_flag, xcnt;

	si = devdata;
	ops = si->si_boottab;

#ifdef DEBUG_PROM
	printf("disk_strategy: size=%d dblk=%d\n", size, dblk);
#else
	twiddle();
#endif

	dmabuf = dvma_mapin(buf, size);
	
	si->si_bn = dblk;
	si->si_ma = dmabuf;
	si->si_cc =	size;

	si_flag = (flag == F_READ) ? SAIO_F_READ : SAIO_F_WRITE;
	xcnt = (*ops->b_strategy)(si, si_flag);
	dvma_mapout(dmabuf, size);

#ifdef DEBUG_PROM
	printf("disk_strategy: xcnt = %x\n", xcnt);
#endif

	if (xcnt <= 0)
		return (EIO);

	*rsize = xcnt;
	return (0);
}

int
disk_ioctl()
{
	return EIO;
}

@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_disk.c,v 1.1.1.1 1997/10/14 07:25:31 gingold Exp $ */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: dev_disk.c,v 1.1 1997/08/23 13:51:03 gingold Exp $ */
@


1.1.1.1
log
@Gingold's port for kbus Series5 machine.  Not fully finished and not very stable
@
text
@@


1.1.1.1.12.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@


1.1.1.1.12.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_disk.c,v 1.1.1.1.12.1 2000/03/24 09:07:58 niklas Exp $ */
@


