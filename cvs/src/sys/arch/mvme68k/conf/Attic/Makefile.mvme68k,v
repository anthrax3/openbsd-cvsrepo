head	1.70;
access;
symbols
	OPENBSD_5_5:1.69.0.4
	OPENBSD_5_5_BASE:1.69
	OPENBSD_5_4:1.68.0.2
	OPENBSD_5_4_BASE:1.68
	OPENBSD_5_3:1.66.0.2
	OPENBSD_5_3_BASE:1.66
	OPENBSD_5_2:1.65.0.4
	OPENBSD_5_2_BASE:1.65
	OPENBSD_5_1_BASE:1.65
	OPENBSD_5_1:1.65.0.2
	OPENBSD_5_0:1.64.0.2
	OPENBSD_5_0_BASE:1.64
	OPENBSD_4_9:1.61.0.2
	OPENBSD_4_9_BASE:1.61
	OPENBSD_4_8:1.58.0.2
	OPENBSD_4_8_BASE:1.58
	OPENBSD_4_7:1.36.0.2
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.33.0.6
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.2
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.32.0.2
	OPENBSD_4_4_BASE:1.32
	OPENBSD_4_3:1.31.0.2
	OPENBSD_4_3_BASE:1.31
	OPENBSD_4_2:1.28.0.2
	OPENBSD_4_2_BASE:1.28
	OPENBSD_4_1:1.27.0.4
	OPENBSD_4_1_BASE:1.27
	OPENBSD_4_0:1.27.0.2
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.26.0.6
	OPENBSD_3_9_BASE:1.26
	OPENBSD_3_8:1.26.0.4
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.26.0.2
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.24.0.4
	OPENBSD_3_6_BASE:1.24
	SMP_SYNC_A:1.24
	SMP_SYNC_B:1.24
	OPENBSD_3_5:1.24.0.2
	OPENBSD_3_5_BASE:1.24
	OPENBSD_3_4:1.23.0.2
	OPENBSD_3_4_BASE:1.23
	UBC_SYNC_A:1.21
	OPENBSD_3_3:1.19.0.2
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.17
	UBC:1.13.0.2
	UBC_BASE:1.13
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.10.0.8
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.6
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.4
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.2
	SMP_BASE:1.10
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.10
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.70
date	2014.03.18.22.36.34;	author miod;	state dead;
branches;
next	1.69;

1.69
date	2013.10.15.19.23.28;	author guenther;	state Exp;
branches;
next	1.68;

1.68
date	2013.06.23.20.33.51;	author miod;	state Exp;
branches;
next	1.67;

1.67
date	2013.03.30.07.25.20;	author tedu;	state Exp;
branches;
next	1.66;

1.66
date	2013.02.02.13.36.05;	author miod;	state Exp;
branches;
next	1.65;

1.65
date	2011.11.08.18.41.34;	author matthieu;	state Exp;
branches;
next	1.64;

1.64
date	2011.07.07.22.28.18;	author guenther;	state Exp;
branches;
next	1.63;

1.63
date	2011.07.06.02.08.05;	author tedu;	state Exp;
branches;
next	1.62;

1.62
date	2011.04.15.02.41.28;	author guenther;	state Exp;
branches;
next	1.61;

1.61
date	2010.12.30.18.49.31;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2010.12.02.20.57.08;	author deraadt;	state Exp;
branches;
next	1.59;

1.59
date	2010.12.02.04.35.02;	author deraadt;	state Exp;
branches;
next	1.58;

1.58
date	2010.06.01.23.49.23;	author deraadt;	state Exp;
branches;
next	1.57;

1.57
date	2010.05.28.14.27.08;	author guenther;	state Exp;
branches;
next	1.56;

1.56
date	2010.05.25.17.27.55;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2010.05.25.15.05.01;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2010.05.25.02.35.02;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2010.05.24.23.19.22;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2010.05.24.19.58.51;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2010.05.24.17.49.37;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2010.05.24.14.59.16;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2010.05.23.15.10.38;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2010.04.28.15.31.33;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2010.04.27.17.25.19;	author drahn;	state Exp;
branches;
next	1.46;

1.46
date	2010.04.27.16.54.54;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2010.04.27.06.46.26;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2010.04.27.05.07.29;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2010.04.27.05.05.21;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2010.04.27.04.31.47;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2010.04.27.03.37.38;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2010.04.26.22.21.15;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2010.04.26.22.11.37;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2010.04.26.20.50.16;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2010.04.26.18.58.30;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2009.10.19.19.46.56;	author guenther;	state Exp;
branches;
next	1.35;

1.35
date	2009.08.09.23.04.49;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2009.08.09.21.33.39;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2009.01.11.21.02.03;	author pirofti;	state Exp;
branches;
next	1.32;

1.32
date	2008.04.12.21.04.17;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2007.11.30.07.52.06;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2007.11.25.18.25.28;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2007.11.25.11.23.33;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2007.07.30.16.23.33;	author thib;	state Exp;
branches;
next	1.27;

1.27
date	2006.07.27.05.58.11;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2005.02.20.15.34.03;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2004.10.08.07.11.04;	author grange;	state Exp;
branches;
next	1.24;

1.24
date	2003.11.21.17.53.19;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2003.07.22.19.39.50;	author otto;	state Exp;
branches;
next	1.22;

1.22
date	2003.05.23.22.16.16;	author tedu;	state Exp;
branches;
next	1.21;

1.21
date	2003.05.13.22.45.10;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2003.05.13.06.12.43;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.25.21.10.26;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.12.02.09.00.24;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2002.08.09.20.24.43;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.22.14.05.51;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.04.27.23.21.30;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.24.23.12.14;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.14.08.51.21;	author miod;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2001.08.30.22.10.18;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.15.13.10.49;	author assar;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.06.03.21.42;	author smurph;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	97.09.15.02.40.31;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.03.31.00.23.54;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	96.05.27.22.11.36;	author chuck;	state Exp;
branches;
next	1.6;

1.6
date	96.04.28.11.23.19;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.03.26.15.09.47;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	95.11.23.13.13.05;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.07.08.42.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.22.06.53.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.09;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.42.57;	author deraadt;	state Exp;
branches;
next	;

1.10.2.1
date	2001.10.31.03.01.17;	author nate;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.03.06.01.06.59;	author niklas;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2003.03.27.23.32.16;	author niklas;	state Exp;
branches;
next	1.10.2.4;

1.10.2.4
date	2003.05.16.00.29.39;	author niklas;	state Exp;
branches;
next	1.10.2.5;

1.10.2.5
date	2003.06.07.11.13.15;	author ho;	state Exp;
branches;
next	1.10.2.6;

1.10.2.6
date	2004.02.19.10.49.04;	author niklas;	state Exp;
branches;
next	;

1.13.2.1
date	2002.01.31.22.55.15;	author niklas;	state Exp;
branches;
next	1.13.2.2;

1.13.2.2
date	2002.06.11.03.36.49;	author art;	state Exp;
branches;
next	1.13.2.3;

1.13.2.3
date	2002.10.29.00.28.07;	author art;	state Exp;
branches;
next	1.13.2.4;

1.13.2.4
date	2003.05.19.21.45.31;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.70
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: Makefile.mvme68k,v 1.69 2013/10/15 19:23:28 guenther Exp $

# For instructions on building kernels consult the config(8) and options(4)
# manual pages.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).

.include <bsd.own.mk>

SIZE?=	size
STRIP?=	strip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif

_machdir?=	$S/arch/${_mach}
_archdir?=	$S/arch/${_arch}

INCLUDES=	-nostdinc -I$S -I. -I$S/arch
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D__${_mach}__ -MD -MP
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-main -Wno-uninitialized -Wno-format \
		-Wstack-larger-than-2047

CMACHFLAGS=	-msoft-float
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-snprintf \
		-fno-builtin-vsnprintf -fno-builtin-log \
		-fno-builtin-log2 -fno-builtin-malloc 
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif

COPTS?=		-O2
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
AFLAGS=		-D_LOCORE -x assembler-with-cpp ${CWARNFLAGS} ${CMACHFLAGS}
LINKFLAGS=	-Ttext 0x10000 -e start --warn-common -nopie

.if ${IDENT:M-DDDB_STRUCT}
DB_STRUCTINFO=	db_structinfo.h
.else
DB_STRUCTINFO=
.endif

.include "${_archdir}/fpsp/Makefile.inc"
.include "${_archdir}/060sp/Makefile.inc"

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

NORMAL_C_NOP=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_HEAD=	locore.o param.o ioconf.o ${FPSP} ${060SP}
SYSTEM_OBJ=	${SYSTEM_HEAD} ${OBJS}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_HEAD} vers.o $${OBJS}'; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_HEAD} vers.o ${OBJS}
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
STRIPFLAGS=	-g
SYSTEM_LD_TAIL+=; \
		echo mv $@@ $@@.gdb; rm -f $@@.gdb; mv $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} -o $@@ $@@.gdb; \
		${STRIP} ${STRIPFLAGS} -o $@@ $@@.gdb
.else
LINKFLAGS+=	-S
.endif

%LOAD

# cc's -MD puts the source and output paths in the dependency file;
# since those are temp files here we need to fix it up.  It also
# puts the file in /tmp, so we use -MF to put it in the current
# directory as assym.P and then generate assym.d from it with a
# good target name
assym.h: $S/kern/genassym.sh Makefile \
	 ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} -MF assym.P > assym.h.tmp
	sed '1s/.*/assym.h: \\/' assym.P > assym.d
	sort -u assym.h.tmp > assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C}

mcount.o: $S/lib/libkern/mcount.c Makefile
	${NORMAL_C_NOP}

ioconf.o: ioconf.c
	${NORMAL_C}

vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

clean::
	rm -f eddep *bsd *bsd.gdb tags *.[dio] [a-z]*.s \
	    [Ee]rrs linterrs assym.h ${DB_STRUCTINFO}

lint:
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

depend:
	@@touch $@@

tags:
	@@echo "see $S/kern/Makefile for tags"

db_structinfo.h: $S/ddb/db_structinfo.c $S/ddb/parse_structinfo.pl
	${CC} ${CFLAGS} ${CPPFLAGS} -MT $@@ -gstabs -c $S/ddb/db_structinfo.c
	objdump -g db_structinfo.o | perl $S/ddb/parse_structinfo.pl > $@@
	rm -f db_structinfo.o

locore.o: ${_machdir}/${_mach}/locore.s assym.h
copy.o copypage.o: assym.h

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

# pull in the dependency information
.if !empty(DB_STRUCTINFO) && !exists(${DB_STRUCTINFO})
 ${SYSTEM_OBJ}: ${DB_STRUCTINFO}
.endif
.ifnmake clean
. for o in ${SYSTEM_OBJ} assym.h ${DB_STRUCTINFO}
.  if exists(${o:R}.d)
.   include "${o:R}.d"
.  elif exists($o)
    .PHONY: $o
.  endif
. endfor
.endif

%RULES
@


1.69
log
@Rewrite the awk script that generates the data for option DDB_STRUCT:
 - switch to perl for better data structures and (thus) speed
 - fix a couple glitches in the interpretation of the stabs output
 - compress the strings by putting them in one big array and overlaying
   suffixes
 - all sizes and offsets are <64k, so use u_short for them
This results in ~60% reduction in the resulting text size and it now
takes less than a second to create on fast platforms.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.68 2013/06/23 20:33:51 miod Exp $
@


1.68
log
@Stop using -traditional-cpp on gcc3/4 platforms.

Add CWARNFLAGS to the command line when using -xassembler-with-cpp. We are
mostly interested in -Werror here.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.67 2013/03/30 07:25:20 tedu Exp $
d138 1
a138 1
db_structinfo.h: $S/ddb/db_structinfo.c $S/ddb/parse_structinfo.awk
d140 1
a140 1
	objdump -g db_structinfo.o | awk -f $S/ddb/parse_structinfo.awk > $@@
@


1.67
log
@reorder include search directories. cuts lookups by quite a bit.
ok deraadt miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.66 2013/02/02 13:36:05 miod Exp $
d40 1
a40 1
AFLAGS=		-D_LOCORE -x assembler-with-cpp -traditional-cpp ${CMACHFLAGS}
@


1.66
log
@mvme68k ELF bits. Boot block updates heavily based upon the recent mvme88k
a.out->ELF transition.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.65 2011/11/08 18:41:34 matthieu Exp $
d24 1
a24 1
INCLUDES=	-nostdinc -I. -I$S -I$S/arch
@


1.65
log
@Garbage collect now unused MKDEP definitions. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.64 2011/07/07 22:28:18 guenther Exp $
d41 1
a41 1
LINKFLAGS=	-Ttext 0x10000 -z -e start
@


1.64
log
@The drahn memorial bad kernel build fix: prevent blood pressure
spikes in other developers by making it so that removal of a .d
file without removing the corresponding object will result in the
latter being treated as out of date.

ok beck@@ art@@ drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.63 2011/07/06 02:08:05 tedu Exp $
a12 1
MKDEP?=	mkdep
@


1.63
log
@make clean should clean .d files, so as to leave a fresh canvas.
ok beck deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.62 2011/04/15 02:41:28 guenther Exp $
d164 5
a168 3
. for o in ${SYSTEM_OBJ:.o=.d} assym.d ${DB_STRUCTINFO:.h=.d}
.  if exists($o)
.   include "$o"
@


1.62
log
@Convert the kernel Makefiles to autogenerate dependencies during compilation
using the -MD option to cc, with -MP, -MT, and -MF where needed, converting
"make depend" to a no-op.  This increases parallelism for those using "make -j"
and keeps the dependencies up to date with each compilation automatically.

sparc and vax users will need to rebuild gcc with support for the
-M[PTF] options before config'ing with this diff.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.61 2010/12/30 18:49:31 deraadt Exp $
d125 1
a125 1
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
@


1.61
log
@If genassym fails, sort on the pipeline will indicate no error resulting
in some grief.  Split this out.
From Vladimir Kirillov
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.60 2010/12/02 20:57:08 deraadt Exp $
d26 1
a26 1
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D__${_mach}__
d74 2
a75 1
SYSTEM_DEP=	Makefile ${SYSTEM_HEAD} ${OBJS}
d95 5
d103 2
a104 1
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} > assym.h.tmp
d133 3
a138 14
AFILES=	${_machdir}/${_mach}/locore.s
depend:: .depend
.depend: ${AFILES} param.c ioconf.c ${CFILES} ${SFILES} assym.h ${DB_STRUCTINFO}
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${AFILES}
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if !empty(SFILES)
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} ${CPPFLAGS}
	@@sed -e 's/.*\.o: /assym.h: /' -e 's/\/tmp\/genassym_c.[^ ]*//' \
	    < assym.dep >> .depend
	@@rm -f assym.dep

d140 1
a140 1
	${CC} ${CFLAGS} ${CPPFLAGS} -gstabs -c $S/ddb/db_structinfo.c
d157 12
@


1.60
log
@After the most recent change, make it possible to make -j again.  The
early MD and late MI files must be split up so that vers.o can sneak
between.  Issue spotted by bluhm, repair discussed with miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.59 2010/12/02 04:35:02 deraadt Exp $
d97 2
a98 3
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} | \
	    sort -u > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
@


1.59
log
@move vers.o to before the other objects, so that it is not linked last.
having it linked last is bad (on at least i386 and amd64) because the lapic
is mapped over the start of the data segment -- savecore(8) then reads the
version string for a fixed buffer space, and reads into the lapic area
causing unintended side-effects (at least on Intel X5570 and X5680)
found by pedro, discussed with kettenis and mpf and miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.58 2010/06/01 23:49:23 deraadt Exp $
d73 2
a74 2
SYSTEM_OBJ=	locore.o param.o ioconf.o vers.o ${OBJS} ${FPSP} ${060SP}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
d76 2
a77 2
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}'; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ}
@


1.58
log
@use --warn-common for linking (some arch's will show new warnings), and
prefer binutils-compatible options in STRIPFLAGS (now that our non-binutils
strip(1) can handle them too)
ok drahn; miod kettenis (for parts)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.57 2010/05/28 14:27:08 guenther Exp $
d73 1
a73 1
SYSTEM_OBJ=	locore.o param.o ioconf.o ${OBJS} ${FPSP} ${060SP}
d76 2
a77 2
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
@


1.57
log
@${PARAM} is now included in ${CPPFLAGS}, so stop passing it separately
to genassym.sh

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.56 2010/05/25 17:27:55 deraadt Exp $
a42 1
STRIPFLAGS=	-d
d83 1
@


1.56
log
@The _arch and _mach variables now come from config(8), decreasing even further
the differences between these files.  You will need a newer config(8) binary
to be able to build kernels.
ok kettenis miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.55 2010/05/25 15:05:01 deraadt Exp $
d97 1
a97 1
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} | \
@


1.55
log
@Hand-list the two-step assym.h -> .[Ss] -> .o dependencies.  The
result: kernels built without 'make depend'-provided information
(ie. the .depend file) are more likely to have their *.[Ss] file
compilations track changes to *.h files.

The "*.o: assym.h" dependencies listed are gotten from reading the
.depend output --- from the biggest kernel possible (ie. GENERIC.MP).
When an architecture changes in a substantial way (new .[sS] files),
the list should be updated in the prettiest way possible.

This is not encouraging people to skip 'make depend'; other issues are
not resolved and may be solved later with a change guenther is working
on.  You can still screwed really easily, so continue running make
depend as config tells you.

Idea from a discussion with drahn
ok drahn, kettenis likes the idea too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.54 2010/05/25 02:35:02 deraadt Exp $
a21 2
_mach?=		mvme68k
_arch?=		m68k
@


1.54
log
@${SRCS} is only used once, and fits onto the line where it is used
idea that came out of discussion with drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.53 2010/05/24 23:19:22 deraadt Exp $
d152 1
a152 1
	${NORMAL_S}
@


1.53
log
@give up on -Wvariable-decl
delete the archaic links: target which is easily misused
handle special .[sS] files in a portable way
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.52 2010/05/24 19:58:51 deraadt Exp $
a132 1
SRCS=	${AFILES} param.c ioconf.c ${CFILES} ${SFILES}
d134 1
a134 1
.depend: ${SRCS} assym.h param.c ${DB_STRUCTINFO}
@


1.52
log
@use the same idiom for stripping gdb kernels.  This relies on strip -o
support for the non-binutils architectures (and that diff is coming..)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.51 2010/05/24 17:49:37 deraadt Exp $
d31 1
a31 1
		-Wstack-larger-than-2047 -Wvariable-decl
a119 1

d122 1
a122 1
	    [Ee]rrs linterrs makelinks assym.h ${DB_STRUCTINFO}
d132 2
a133 10
links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink makelinks

SRCS=	${_machdir}/${_mach}/locore.s \
	param.c ioconf.c ${CFILES} ${SFILES}
d136 1
a136 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${_machdir}/${_mach}/locore.s
@


1.51
log
@Unify the dependency time check for whether an architecture has SFILES
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.50 2010/05/24 14:59:16 deraadt Exp $
d87 3
a89 2
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
@


1.50
log
@Reduce differences between the Makefile.* files for all architectures.
ok various people, tested by fewer people, tested by me on 15.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.49 2010/05/23 15:10:38 deraadt Exp $
d146 1
d148 1
@


1.49
log
@can use __${mach}__ and do not need -Dmc68020 anymore
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.48 2010/04/28 15:31:33 deraadt Exp $
d30 1
a30 1
		-Wno-uninitialized -Wno-format -Wno-main \
d33 4
a36 1
CMACHFLAGS+=	-msoft-float -fno-builtin-printf -fno-builtin-log
d42 2
a43 2
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
a52 5
HOSTCC=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### for the Motorola 68040 Floating Point Software Product
a53 2

### for the Motorola 68060 Support Package
d56 4
a59 2
# compile rules: rules are named ${TYPE}_${SUFFIX} where TYPE is NORMAL or
# HOSTED}, and SUFFIX is the file suffix, capitalized (e.g. C for a .c file).
a64 2
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

d121 1
a121 1
	rm -f eddep bsd bsd.gdb tags *.[io] [a-z]*.s \
d125 1
a125 1
	@@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
d127 1
a127 2
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'
@


1.48
log
@clean up more more subtle and stupid differences between the various
Makefile.* files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.47 2010/04/27 17:25:19 drahn Exp $
d28 1
a28 1
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D${_mach} -Dmc68020
@


1.47
log
@Killing a few more diffs for theo, arm makes #LINKFLAGS, beagle cleanup,
INCLUDE= common.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.46 2010/04/27 16:54:54 deraadt Exp $
d128 1
a128 1
lint: /tmp param.c
d142 2
a143 2
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink
@


1.46
log
@Unifity CPPFLAGS= (using ${_mach}), SYSTEM_LD_TAIL= (always on one line),
and SRCS= (common files always after the \)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.45 2010/04/27 06:46:26 deraadt Exp $
d27 1
a27 1
INCLUDES=	 -I. -I$S -I$S/arch -nostdinc
@


1.45
log
@shorten preamble
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.44 2010/04/27 05:07:29 deraadt Exp $
d28 1
a28 2
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Dmvme68k
@


1.44
log
@noone needs comments about QUOTA and TRACE
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.43 2010/04/27 05:05:21 deraadt Exp $
d3 2
a4 9
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/mvme68k/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/mvme68k/conf/Makefile.mvme68k
# after which config should be rerun for all machines of that type.
@


1.43
log
@over the years we have moved to a machine+architectures scheme that has
two directories.  in reality, because of how we place files, it has four:
.../arch/A, .../arch/A/A, .../arch/M, and .../arch/M/M
formalize this A/A and M/M scheme directly in the Makefiles, which makes
them a lot more similar
drahn likes the idea a lot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.42 2010/04/27 04:31:47 deraadt Exp $
a14 4
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

@


1.42
log
@use -f assymp.dep again; worked out with miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.41 2010/04/27 03:37:38 deraadt Exp $
d157 1
a157 1
SRCS=	${_machdir}/mvme68k/locore.s \
d161 1
a161 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${_machdir}/mvme68k/locore.s
d175 1
a175 1
locore.o: ${_machdir}/mvme68k/locore.s assym.h
@


1.41
log
@alpha/conf/Makefile.alpha
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.40 2010/04/26 22:21:15 deraadt Exp $
d165 1
a165 2
	    sh $S/kern/genassym.sh ${MKDEP} ${CFLAGS} ${CPPFLAGS} | \
	    sort -u > assym.dep
@


1.40
log
@even cleaner mach/arch/machdir/archdir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.39 2010/04/26 22:11:37 deraadt Exp $
a174 15


# depend on root or device configuration
autoconf.o conf.o: Makefile

# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile

# depend on maxusers
assym.h machdep.o: Makefile

# depend on CPU configuration
locore.o machdep.o: Makefile
@


1.39
log
@next step towards unification:  make all the genassym chunks handle both
arch and machine dependent files (and add the missing files)
ok miod drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.38 2010/04/26 20:50:16 deraadt Exp $
a33 1
_machdir?=	$S/arch/mvme68k
d35 2
a36 1
_archdir?=	$S/arch/m68k
@


1.38
log
@next unification step: move all MD naming _mach, _machdir, _arch, and _archdir
ok miod drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.37 2010/04/26 18:58:30 deraadt Exp $
d8 1
a8 1
#	 config machineid
d111 6
a116 6
assym.h: $S/kern/genassym.sh \
	 ${_archdir}/m68k/genassym.cf ${_machdir}/mvme68k/genassym.cf Makefile
	cat ${_archdir}/m68k/genassym.cf ${_machdir}/mvme68k/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    > assym.h.tmp && \
	mv -f assym.h.tmp assym.h
d164 3
a166 2
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${_machdir}/mvme68k/genassym.cf
@


1.37
log
@first step of unification: spaces at end of lines; comments, etc.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.36 2009/10/19 19:46:56 guenther Exp $
d32 5
a36 2
MVME68K=$S/arch/mvme68k
M68K=	$S/arch/m68k
d67 1
a67 1
.include "${M68K}/fpsp/Makefile.inc"
d70 1
a70 1
.include "${M68K}/060sp/Makefile.inc"
d112 2
a113 2
	 ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf Makefile
	cat ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf | \
d157 1
a157 1
SRCS=	${MVME68K}/mvme68k/locore.s \
d161 1
a161 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${MVME68K}/mvme68k/locore.s
d165 1
a165 1
	    ${CPPFLAGS} < ${MVME68K}/mvme68k/genassym.cf
d190 1
a190 1
locore.o: ${MVME68K}/mvme68k/locore.s assym.h
@


1.36
log
@Correct a target name so that we don't rebuild vers.o (and then
bsd) unless some other object has changed.  Rebuild and reinstall
in /usr/src/usr.sbin/config/ after updating!

"I like it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.35 2009/08/09 23:04:49 miod Exp $
d175 3
a177 3
 
# depend on network or filesystem configuration 
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
d184 1
a184 1
# depend on CPU configuration 
@


1.35
log
@Introduce option DDB_STRUCT. Kernels compiled with this option (except on
a few arches where toolchain limitations apply) will embed some symbolic
information about the various structs used within the kernel, and have
new ddb commands allowing struct display and some useful information
gathering. Kernel rodata increase varies accross platforms from ~150KB to
~300KB.
This option is not enabled by default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.34 2009/08/09 21:33:39 miod Exp $
d128 1
a128 1
newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
@


1.34
log
@No need to clean genassym{.,o} during `make clean', genassym.sh does this
for us.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.33 2009/01/11 21:02:03 pirofti Exp $
d53 6
d135 1
a135 1
	    [Ee]rrs linterrs makelinks assym.h
d157 1
a157 1
.depend: ${SRCS} assym.h param.c
d166 5
@


1.33
log
@Fix a sed bug in the makefile's depend target.

What happened was that the output of mkdep was fed to a sed expression
that trimmed a bit more than required and also failed to work when
attempting to do make depend with pcc.

Example:

genassym_c.o: /tmp/genassym.whatever ../../../../../sys/param.h \

was changed to:

assym.h: \

but what was intended was:

assym.h: ../../../../../sys/param.h \

For the pcc -M output things were a bit different and after the make
depend the genassym entry would still remain and make would fail. This
affected all platforms except amd64 and sgi.

Okay miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.32 2008/04/12 21:04:17 miod Exp $
d128 2
a129 2
	rm -f eddep bsd bsd.gdb tags *.o locore.i \
	    [a-z]*.s [Ee]rrs linterrs makelinks assym.h
@


1.32
log
@Compile kernels with -Wvariable-decl (except on arches with ipmi, for now).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.31 2007/11/30 07:52:06 miod Exp $
d157 2
a158 1
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
@


1.31
log
@Define NORMAL_C_NOP everywhere.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.30 2007/11/25 18:25:28 deraadt Exp $
d40 1
a40 1
		-Wstack-larger-than-2047
@


1.30
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.29 2007/11/25 11:23:33 deraadt Exp $
d66 1
@


1.29
log
@Get rid of the kernel 'libcompat' framework, and instead use conf/files to
decide which files must be pulled into the kernel.  Also conditionalize
the pulling of those files based on the COMPAT_* options.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.28 2007/07/30 16:23:33 thib Exp $
a56 8
### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

d82 1
a82 1
SYSTEM_OBJ=	locore.o param.o ioconf.o ${OBJS} ${FPSP} ${060SP} ${LIBKERN}
d114 3
@


1.28
log
@Shuffle the order in which we look for header files, when doing
kernel builds locally this doesnt change much but over NFS this
cuts about 12% of the build time on my setup (i386).

OK miod@@, deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.27 2006/07/27 05:58:11 miod Exp $
a64 8
### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

d90 1
a90 2
SYSTEM_OBJ=	locore.o ${FPSP} ${060SP}\
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
@


1.27
log
@Compile all kernels with -Wstack-usage-larger-than-2047, now that all
offending code has been taken out and shot. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.26 2005/02/20 15:34:03 miod Exp $
d35 1
a35 1
INCLUDES=	 -I. -I$S/arch -I$S -nostdinc
@


1.26
log
@Do not pass 68060-specific compiler flags anymore.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.25 2004/10/08 07:11:04 grange Exp $
d39 2
a40 1
		-Wno-uninitialized -Wno-format -Wno-main
@


1.25
log
@Use ${MKDEP} instead of mkdep.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.24 2003/11/21 17:53:19 espie Exp $
d41 1
a41 6
.if empty(IDENT:M-DM68060)
CMACHFLAGS=	-m68020
.else
CMACHFLAGS=	-m68060 -Wa,-m68030
.endif
CMACHFLAGS+=	-msoft-float
a44 1
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log
@


1.24
log
@+ -fno-builtin-* on architectures confirmed to work.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.23 2003/07/22 19:39:50 otto Exp $
d170 4
a173 4
	mkdep ${AFLAGS} ${CPPFLAGS} ${MVME68K}/mvme68k/locore.s
	mkdep -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	mkdep -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	sh $S/kern/genassym.sh mkdep -f assym.dep ${CFLAGS} \
@


1.23
log
@Fix .depend generation for assym.h. Resolves PR 1154.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.22 2003/05/23 22:16:16 tedu Exp $
d50 1
@


1.22
log
@move swapgeneric to truly generic code.  tested on many archs by miod and mickey.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.21 2003/05/13 22:45:10 miod Exp $
d172 4
@


1.21
log
@Add option NO_PROPOLICE, which explicitely disables the use of the propolice
stack protection when building kernels. Intended to be used on installation
media, with tight space constraints - currently, only added where
SMALL_KERNEL was already defined.

Not thoroughly tested, but requested by deraadt.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.20 2003/05/13 06:12:43 tedu Exp $
d150 1
a150 1
	    ${CFILES} ${MVME68K}/mvme68k/swapgeneric.c ioconf.c param.c | \
@


1.20
log
@remove -fno-stack-protector (enable propolice)
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.19 2002/12/25 21:10:26 miod Exp $
d47 3
@


1.19
log
@No need to define FOO?=foo for AS, CC, CPP and LD, as they are always already
set from <sys.mk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.18 2002/12/02 09:00:24 miod Exp $
d46 1
a46 1
CMACHFLAGS+=	-msoft-float -fno-stack-protector
@


1.18
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.17 2002/08/09 20:24:43 miod Exp $
a23 4
AS?=	as
CC?=	cc
CPP?=	cpp
LD?=	ld
d48 1
a48 1
COPTS?=	-O2
@


1.17
log
@Add an explicit dependancy of assym.h to Makefile.
This makes sure it will be regenerated if you run config(8) again.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.16 2002/06/22 14:05:51 millert Exp $
d50 1
a50 1
CMACHFLAGS+=	-msoft-float
@


1.16
log
@Add ${PIPE} to CFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.15 2002/04/27 23:21:30 miod Exp $
d124 1
a124 1
	 ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf
@


1.15
log
@Enable -Wall and friends for kernel compilations.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.14 2001/12/24 23:12:14 miod Exp $
d53 1
a53 1
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS}
@


1.14
log
@Harmonize and complete wrt cross-compilation.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.13 2001/12/14 08:51:21 miod Exp $
d42 2
a43 1
CWARNFLAGS=	-Werror
@


1.13
log
@Sync compilation flags definition accross m68k-based arches.
mvme68k still lacks some -Wfoo flags, until it is warnings clean.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.12 2001/08/30 22:10:18 miod Exp $
d28 2
a30 1
COPTS?=	-O2
d51 1
d108 1
a108 1
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@
@


1.13.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.14 2001/12/24 23:12:14 miod Exp $
a27 2
MKDEP?=	mkdep
SIZE?=	size
d29 1
a49 1
COPTS?=	-O2
d106 1
a106 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
@


1.13.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.13.2.1 2002/01/31 22:55:15 niklas Exp $
d42 1
a42 2
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main
@


1.13.2.3
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.13.2.2 2002/06/11 03:36:49 art Exp $
d53 1
a53 1
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
d124 1
a124 1
	 ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf Makefile
@


1.13.2.4
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d24 4
a50 3
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
d52 1
a52 1
COPTS?=		-O2
@


1.12
log
@Invoke genassym.sh with both m68k/m68k/genassym.cf and
machine/machine/genassym.cf files (poor man's inclusion).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.11 2001/07/15 13:10:49 assar Exp $
d39 2
a40 1
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmvme68k
d50 1
a50 1
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${COPTS} ${CMACHFLAGS}
@


1.11
log
@add install target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.10 2000/01/06 03:21:42 smurph Exp $
d32 5
a36 2
S=	../../../..
MVME68K=../..
d75 1
a75 1
.include "$S/arch/m68k/fpsp/Makefile.inc"
d78 1
a78 1
.include "$S/arch/m68k/060sp/Makefile.inc"
d119 6
a124 4
assym.h: $S/kern/genassym.sh ${MVME68K}/mvme68k/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${MVME68K}/mvme68k/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
@


1.10
log
@Added support for MVME177 (mc68060)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.9 1997/09/15 02:40:31 deraadt Exp $
d22 2
d182 12
@


1.10.2.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.10 2000/01/06 03:21:42 smurph Exp $
a21 2
.include <bsd.own.mk>

d30 2
a31 5
.ifndef S
S!=	cd ../../../..; pwd
.endif
MVME68K=$S/arch/mvme68k
M68K=	$S/arch/m68k
d70 1
a70 1
.include "${M68K}/fpsp/Makefile.inc"
d73 1
a73 1
.include "${M68K}/060sp/Makefile.inc"
d114 4
a117 6
assym.h: $S/kern/genassym.sh \
	 ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf
	cat ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    > assym.h.tmp && \
	mv -f assym.h.tmp assym.h
a179 12

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif
@


1.10.2.2
log
@Merge in trunk
@
text
@d1 1
a1 1
#	$OpenBSD$
a27 2
MKDEP?=	mkdep
SIZE?=	size
d29 1
d39 1
a39 2
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Dmvme68k
d49 1
a49 2
COPTS?=	-O2
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS}
d105 1
a105 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
@


1.10.2.3
log
@Sync the SMP branch with 3.3
@
text
@d24 4
d42 1
a42 2
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main
d49 1
a49 1
CMACHFLAGS+=	-msoft-float -fno-stack-protector
d51 2
a52 2
COPTS?=		-O2
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
d123 1
a123 1
	 ${M68K}/m68k/genassym.cf ${MVME68K}/mvme68k/genassym.cf Makefile
@


1.10.2.4
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d46 1
a46 4
CMACHFLAGS+=	-msoft-float
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
@


1.10.2.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.10.2.4 2003/05/16 00:29:39 niklas Exp $
d150 1
a150 1
	    ${CFILES} ioconf.c param.c | \
@


1.10.2.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD$
a49 1
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log
a171 4
	sh $S/kern/genassym.sh mkdep -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${MVME68K}/mvme68k/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
	@@rm -f assym.dep
@


1.9
log
@kill Locore.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.8 1997/03/31 00:23:54 downsj Exp $
d36 9
a44 1
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} -msoft-float
d72 3
d94 1
a94 1
SYSTEM_OBJ=	locore.o ${FPSP} \
@


1.8
log
@Modernize OpenBSD/mvme68k to match various changes in m68k and hp300 code.

Compiles, but untested for lack of hardware.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme68k,v 1.7 1996/05/27 22:11:36 chuck Exp $
d129 1
a129 2
	    ${MVME68K}/mvme68k/Locore.c ${CFILES} ${MVME68K}/mvme68k/swapgeneric.c \
	    ioconf.c param.c | \
@


1.7
log
@fix make depend
@
text
@d1 1
a1 1
#	$OpenBSD$
d26 2
a27 2
STRIP?=	strip -d
TOUCH?=	touch -f -c
d33 4
a36 3
INCLUDES=	 -I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmvme68k
CFLAGS=		${DEBUG} -O2 -Werror
d38 6
d64 2
a65 4
# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
d68 1
a68 1
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d70 1
a70 5
DRIVER_C=	${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<
d83 8
d93 4
a96 1
LDX=-X
d98 1
a98 1
LDX=-x
a99 7
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o ${FPSP} \
		${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@echo loading $@@; rm -f $@@
SYSTEM_LD=	@@${LD} ${LDX} -Ttext 0x10000 -z -o $@@ -e start \
		    ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@echo rearranging symbols; size $@@; chmod 755 $@@
d103 4
a106 8
assym.h: genassym
	./genassym >assym.h

genassym: genassym.o
	${CC} -o $@@ genassym.o

genassym.o: ${MVME68K}/mvme68k/genassym.c
	${NORMAL_C_C}
d113 1
a113 1
	${NORMAL_C_C}
d125 1
a125 1
	    [a-z]*.s [Ee]rrs linterrs makelinks genassym
a151 1
	mkdep -a ${CFLAGS} ${CPPFLAGS} ${PARAM} ${MVME68K}/mvme68k/genassym.c
d163 1
a163 1
genassym.o machdep.o: Makefile
@


1.6
log
@rewrite
@
text
@d146 1
a146 1
depend: .depend
@


1.5
log
@From NetBSD: vnode_if.[ch] made machine independent.
very usefull (for <sys/vnode.h> inclusion).
from the other side this is really machine independent ...
tested w/ i386, but should not cause errors w/ other arch's.
pls, test it (don't forget to reconfig kernel ;)
@
text
@d1 1
a1 1
#	$Id: Makefile.mvme68k,v 1.4 1995/11/23 13:13:05 deraadt Exp $
a18 1

d21 7
a27 6
AS=     as
CC=     cc ${DEBUG}
CPP=    cpp
LD=     ld
TOUCH=	touch -f -c
AWK=	awk
d31 1
a31 1
MVME68K=	../..
d33 4
a36 3
INCLUDES= -I. -I$S/arch -I$S -I$S/sys
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmvme68k
CFLAGS=	-O ${COPTS}
d62 2
a63 2
NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
d65 2
a66 2
DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
d68 2
a69 7
PROFILE_C=	${CC} -S -c ${COPTS} $<; \
		sed -e s/_mcount/mcount/ -e s/subrmcount/subr_mcount/ <$*.s | \
		${AS} -o $@@; \
		rm -f $*.s

NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@@
d75 2
d98 2
a99 1
newvers: vers.o
d101 17
a117 1
vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
d119 2
a120 1
	${CC} ${CFLAGS} -c vers.c
d133 2
a134 18
locore.o: assym.s ${MVME68K}/mvme68k/vectors.s ${MVME68K}/mvme68k/locore.s 
locore.o: ${MVME68K}/include/trap.h ${MVME68K}/include/psl.h ${MVME68K}/include/pte.h
locore.o: ${MVME68K}/include/cpu.h
	${CPP} -DLOCORE ${COPTS} ${MVME68K}/mvme68k/locore.s | ${AS} -o locore.o

# depend on maxusers
assym.s: Makefile

assym.s: genassym
	./genassym > assym.s

genassym: ${MVME68K}/mvme68k/genassym.c Makefile
	cc ${INCLUDES} ${IDENT} ${PARAM} -Dmc68020 -Dmvme68k -o genassym \
	    ${MVME68K}/mvme68k/genassym.c

depend: assym.s param.c
	mkdep ${COPTS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${MVME68K}/mvme68k/genassym.c
d144 17
a160 2
tags:
	@@echo "see $S/kern/Makefile for tags"
d162 2
a163 2
ioconf.o: ioconf.c
	${CC} -c ${CFLAGS} ioconf.c
d165 2
a166 3
param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .
d168 2
a169 2
param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c
@


1.4
log
@as has no -g flag
@
text
@d1 1
a1 1
#	$Id: Makefile.mvme68k,v 1.3 1995/11/07 08:42:23 deraadt Exp $
d90 1
a90 1
SYSTEM_OBJ=	locore.o vnode_if.o ${OBJS} param.o ioconf.o ${FPSP} \
d107 1
a107 1
	rm -f eddep bsd bsd.gdb tags vnode_if.[ch] *.o locore.i \
d132 1
a132 1
depend: assym.s param.c vnode_if.h
a155 3

vnode_if.c vnode_if.h: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	AWK="${AWK}" sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
@


1.3
log
@$Id$ lines
MVME167: repair job
@
text
@d1 1
a1 1
#	$Id$
d22 1
a22 1
AS=     as ${DEBUG}
@


1.2
log
@kernel name is /bsd
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@a0 6
#	$NetBSD: Makefile.mvme68k,v 1.3 1995/09/19 23:50:22 thorpej Exp $

#	@@(#)Makefile.hp300	8.2 (Berkeley) 1/23/94
#
# Makefile for NetBSD
#
d6 1
a6 1
#	 config.new machineid
a20 1
AWK=	awk
d25 1
d32 2
a33 2
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Dmvme68k -DFPCOPROC
CFLAGS=	-O -Werror -fno-builtin ${COPTS}
d46 1
a46 1
LIBCOMPAT=    ${COMPATLIB}
d48 1
a48 1
LIBCOMPAT=    ${COMPATLIB_PROF}
d88 2
a89 2
SYSTEM_OBJ=	locore.o ${FPSP} vnode_if.o ${OBJS} param.o ioconf.o \
	${LIBKERN} ${LIBCOMPAT}
d92 1
a92 1
SYSTEM_LD=	@@${LD} ${LDX} -Ttext 0x8000 -n -o $@@ -e start \
d105 1
a105 1
	rm -f eddep *netbsd netbsd.gdb tags vnode_if.[ch] *.o locore.i \
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.mvme68k,v 1.6 1995/03/23 19:46:32 jtc Exp $
d3 1
a3 1
#	@@(#)Makefile.mvme68k	8.2 (Berkeley) 1/23/94
d12 1
a12 1
#	 config machineid
d27 1
a31 1
AWK=	awk
d38 2
a39 2
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmvme68k
CFLAGS=	-O ${COPTS}
d52 1
a52 1
LIBCOMPAT=	${COMPATLIB}
d54 1
a54 1
LIBCOMPAT=	${COMPATLIB_PROF}
d94 2
a95 2
SYSTEM_OBJ=	locore.o vnode_if.o ${OBJS} param.o ioconf.o ${FPSP} \
		${LIBKERN} ${LIBCOMPAT}
d98 1
a98 1
SYSTEM_LD=	@@${LD} ${LDX} -Ttext 0x10000 -z -o $@@ -e start \
@
