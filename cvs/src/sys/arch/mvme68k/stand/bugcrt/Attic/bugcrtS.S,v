head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.2;

1.2
date	2013.02.02.13.36.06;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: bugcrtS.S,v 1.2 2013/02/02 13:36:06 miod Exp $	*/

/*
 * Copyright (c) 2012 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <machine/asm.h>
#include <machine/prom.h>

	.text

GLOBAL(__bootxx_start)
ASLOCAL(__stack_end)
	.long	_ASM_LABEL(__stack_end)		| sp
	.long	_C_LABEL(__start)		| pc

ENTRY(__start)
	/*
	 * On entry, d0-d1, d4, a0-a6 contain the BUG incoming parameters.
	 */
	/*
	 * Set up stack. This is already done if booted by the BUG, but not
	 * if invoked from an old bootxx' bugexec().
	 */
	leal	_ASM_LABEL(__stack_end):l, %sp

	/*
	 * Push arguments on stack.
	 */
	movl	MVMEPROM_REG_NBARGEND, %sp@@-
	movl	MVMEPROM_REG_NBARGSTART, %sp@@-
	movl	MVMEPROM_REG_ARGEND, %sp@@-
	movl	MVMEPROM_REG_ARGSTART, %sp@@-
	movl	MVMEPROM_REG_CONFBLK, %sp@@-
	movl	MVMEPROM_REG_ENTRY, %sp@@-
	movl	MVMEPROM_REG_CTRLADDR, %sp@@-
	movl	MVMEPROM_REG_FLAGS, %sp@@-
	movl	MVMEPROM_REG_CTRLLUN, %sp@@-
	movl	MVMEPROM_REG_DEVLUN, %sp@@-

	/*
	 * Invoke the rest of the startup as C code.
	 */
	bsr	_C_LABEL(bugcrt_start)

	bsr	_C_LABEL(_rtt)
	/* NOTREACHED */

ENTRY(bugexec_final)
	/*
	 * Pop arguments to the appropriate registers.
	 */
	movl	%sp@@(4 * 1), MVMEPROM_REG_DEVLUN
	movl	%sp@@(4 * 2), MVMEPROM_REG_CTRLLUN
	movl	%sp@@(4 * 3), MVMEPROM_REG_FLAGS
	movl	%sp@@(4 * 4), MVMEPROM_REG_CTRLADDR
	movl	%sp@@(4 * 5), MVMEPROM_REG_ENTRY
	movl	%sp@@(4 * 6), MVMEPROM_REG_CONFBLK
	movl	%sp@@(4 * 7), MVMEPROM_REG_ARGSTART
	movl	%sp@@(4 * 8), MVMEPROM_REG_ARGEND
	movl	%sp@@(4 * 9), MVMEPROM_REG_NBARGSTART
	movl	%sp@@(4 * 10), MVMEPROM_REG_NBARGEND

	/*
	 * Pop return address
	 */
	movl	%sp@@(4 * 11), %d2

	/*
	 * Pop stack address
	 */
	movl	%sp@@(4 * 12), %sp

	/*
	 * Push return address
	 */
	movl	_ASM_LABEL(bugexec_returned), %sp@@-
	movl	%d2, %sp@@-
	rts

ASLOCAL(bugexec_returned)
	bsr	_C_LABEL(_rtt)
	/* NOTREACHED */
@


1.2
log
@mvme68k ELF bits. Boot block updates heavily based upon the recent mvme88k
a.out->ELF transition.
@
text
@d1 1
a1 1
/*	$OpenBSD: bugcrtS.S,v 1.1 2012/12/31 21:35:32 miod Exp $	*/
@


1.1
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 1
d27 1
a27 1
	.long	_C_LABEL(start)			| pc
d29 1
a29 1
ENTRY(start)
d37 1
a37 1
	leal	_ASM_LABEL(__stack_end):l, sp
d42 10
a51 10
	movl	MVMEPROM_REG_NBARGEND, sp@@-
	movl	MVMEPROM_REG_NBARGSTART, sp@@-
	movl	MVMEPROM_REG_ARGEND, sp@@-
	movl	MVMEPROM_REG_ARGSTART, sp@@-
	movl	MVMEPROM_REG_CONFBLK, sp@@-
	movl	MVMEPROM_REG_ENTRY, sp@@-
	movl	MVMEPROM_REG_CTRLADDR, sp@@-
	movl	MVMEPROM_REG_FLAGS, sp@@-
	movl	MVMEPROM_REG_CTRLLUN, sp@@-
	movl	MVMEPROM_REG_DEVLUN, sp@@-
d65 10
a74 10
	movl	sp@@(4 * 1), MVMEPROM_REG_DEVLUN
	movl	sp@@(4 * 2), MVMEPROM_REG_CTRLLUN
	movl	sp@@(4 * 3), MVMEPROM_REG_FLAGS
	movl	sp@@(4 * 4), MVMEPROM_REG_CTRLADDR
	movl	sp@@(4 * 5), MVMEPROM_REG_ENTRY
	movl	sp@@(4 * 6), MVMEPROM_REG_CONFBLK
	movl	sp@@(4 * 7), MVMEPROM_REG_ARGSTART
	movl	sp@@(4 * 8), MVMEPROM_REG_ARGEND
	movl	sp@@(4 * 9), MVMEPROM_REG_NBARGSTART
	movl	sp@@(4 * 10), MVMEPROM_REG_NBARGEND
d79 1
a79 1
	movl	sp@@(4 * 11), d2
d84 1
a84 1
	movl	sp@@(4 * 12), sp
d89 2
a90 2
	movl	_ASM_LABEL(bugexec_returned), sp@@-
	movl	d2, sp@@-
@

