head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.30
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.28
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.26
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.24
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.20.00.25.08;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.04.22.16.05.38;	author gvf;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.05.19.19.51.48;	author chuck;	state Exp;
branches;
next	1.2;

1.2
date	96.05.16.02.21.59;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	96.05.10.18.39.15;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2004.02.19.10.49.05;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: bugcrt.c,v 1.6 2012/12/31 21:35:32 miod Exp $	*/

/*
 * Copyright (c) 2012 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <machine/prom.h>

#include "libbug.h"
#include "stand.h"

struct mvmeprom_args bugargs = { .cputyp = -1 };	/* force out of .bss */

void __main(void);
extern void main(void);

void
bugcrt_start(u_int dev_lun, u_int ctrl_lun, u_int flags, u_int ctrl_addr,
    u_int entry, u_int conf_blk, char *arg_start, char *arg_end,
    char *nbarg_start, char *nbarg_end)
{
	extern int edata, end;
	struct mvmeprom_brdid *id;

#ifdef DEBUG
	printf("BUG parameters: CLUN %x DLUN %x flags %x ctrl_addr %x\n",
	    dev_lun, ctrl_lun, flags, ctrl_addr);
	printf("entry %x conf_blk %x\n", entry, conf_blk);
	printf("arg %p %p\n", arg_start, arg_end);
	printf("nbarg %p %p\n", nbarg_start, nbarg_end);
#endif

	bugargs.dev_lun = dev_lun;
	bugargs.ctrl_lun = ctrl_lun;
	bugargs.flags = flags;
	bugargs.ctrl_addr = ctrl_addr;
	bugargs.entry = entry;
	bugargs.conf_blk = conf_blk;
	bugargs.arg_start = arg_start;
	bugargs.arg_end = arg_end;
	bugargs.nbarg_start = nbarg_start;
	bugargs.nbarg_end = nbarg_end;

	bzero(&edata, (int)&end-(int)&edata);
	*bugargs.arg_end = 0;
	id = mvmeprom_getbrdid();
	bugargs.cputyp = id->model;
	main();
}

extern void bugexec_final(u_int, u_int, u_int, u_int, u_int, u_int, char *,
    char *, char *, char *, u_int, u_int);

void
bugexec(u_int *addr)
{
#ifdef DEBUG
	printf("%s: code %x stack %x\n", __func__, addr[1], addr[0]);
#endif
	bugexec_final(bugargs.dev_lun, bugargs.ctrl_lun, bugargs.flags,
	    bugargs.ctrl_addr, bugargs.entry, bugargs.conf_blk,
	    bugargs.arg_start, bugargs.arg_end, bugargs.nbarg_start,
	    bugargs.nbarg_end, addr[1] /* pc */, addr[0] /* sp */);
}

void
__main()
{
}
@


1.6
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.5
log
@protos and ansi (mostly ignored junk)
@
text
@d1 17
a17 1
/*	$OpenBSD: bugcrt.c,v 1.4 1997/04/22 16:05:38 gvf Exp $ */
d25 2
d28 1
a28 7
void start(void);

struct mvmeprom_args bugargs = { 1 };	/* not in BSS */

	asm (".text");
	asm (".long _start-0x10");
	asm (".long _start");
d31 3
a33 1
start(void)
a34 10
	register int dev_lun asm (MVMEPROM_REG_DEVLUN);
	register int ctrl_lun asm (MVMEPROM_REG_CTRLLUN);
	register int flags asm (MVMEPROM_REG_FLAGS);
	register int ctrl_addr asm (MVMEPROM_REG_CTRLADDR);
	register int entry asm (MVMEPROM_REG_ENTRY);
	register int conf_blk asm (MVMEPROM_REG_CONFBLK);
	register char *arg_start asm (MVMEPROM_REG_ARGSTART);
	register char *arg_end asm (MVMEPROM_REG_ARGEND);
	register char *nbarg_start asm (MVMEPROM_REG_NBARGSTART);
	register char *nbarg_end asm (MVMEPROM_REG_NBARGEND);
d36 9
a44 1
	struct mvmeprom_brdid *id, *mvmeprom_getbrdid(void);
a55 1
	*bugargs.arg_end = 0;
d58 1
a61 2
	_rtt();
	/* NOTREACHED */
d64 3
d68 1
a68 1
__main(void)
d70 7
a78 1

d80 1
a80 1
bugexec(void (*addr)(void))
a81 22
	register int dev_lun asm (MVMEPROM_REG_DEVLUN);
	register int ctrl_lun asm (MVMEPROM_REG_CTRLLUN);
	register int flags asm (MVMEPROM_REG_FLAGS);
	register int ctrl_addr asm (MVMEPROM_REG_CTRLADDR);
	register int entry asm (MVMEPROM_REG_ENTRY);
	register int conf_blk asm (MVMEPROM_REG_CONFBLK);
	register char *arg_start asm (MVMEPROM_REG_ARGSTART);
	register char *arg_end asm (MVMEPROM_REG_ARGEND);

	dev_lun = bugargs.dev_lun;
	ctrl_lun = bugargs.ctrl_lun;
	flags = bugargs.flags;
	ctrl_addr = bugargs.ctrl_addr;
	entry = bugargs.entry;
	conf_blk = bugargs.conf_blk;
	arg_start = bugargs.arg_start;
	arg_end = bugargs.arg_end;

	(*addr)();
	printf("bugexec: 0x%x returned!\n", addr);

	_rtt();
a82 1

@


1.4
log
@Reduce dependency on libkern.
@
text
@d1 1
a1 1
/*	$OpenBSD: bugcrt.c,v 1.3 1996/05/19 19:51:48 chuck Exp $ */
d9 3
d17 3
a19 1
start()
d32 1
a32 1
	struct mvmeprom_brdid *id, *mvmeprom_getbrdid();
d54 2
a55 1
__main()
d61 1
a61 4
bugexec(addr)

void (*addr)();

@


1.4.14.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a8 3
void __main(void);
void start(void);

d14 1
a14 3

void
start(void)
d27 1
a27 1
	struct mvmeprom_brdid *id, *mvmeprom_getbrdid(void);
d49 1
a49 2
void
__main(void)
d55 4
a58 1
bugexec(void (*addr)(void))
@


1.3
log
@minor clean
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d7 1
@


1.2
log
@add netboot stuff and cputyp stuff to bugcrt.   also add bugexec().
@
text
@d38 1
a38 1
	*arg_end = 0;
@


1.1
log
@m88k & m68k capable bugcrt by chuck
@
text
@d6 2
d23 2
d26 1
d36 2
d41 2
d44 1
a44 1
	mvmeprom_return();
d51 32
@
