head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	UBC_SYNC_B:1.4
	SMP:1.4.0.2
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	96.05.16.02.27.52;	author chuck;	state dead;
branches;
next	1.3;

1.3
date	96.04.28.10.49.02;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.22.06.56.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.14;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.44.27;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@R.I.P. old stuff.
@
text
@/*	$OpenBSD$ */

#include <sys/param.h>
#include <stand.h>
#include "promboot.h"

/*
 * Open the device named by the combined device/file name
 * given as the "fname" arg, something like: "sd()bsd"
 *
 * However, Sun PROMs don't really let you choose which
 * device you will talk to.  You can only open the device
 * that was used to load the boot program.  Therefore, we
 * do not accept a "device" part in the "fname" string.
 * Pass the PROM device name to open in case it needs it.
 */
int
devopen(f, fname, file)
	struct open_file *f;
	const char *fname;
	char **file;
{
	struct devsw *dp;
	char *cp, *path, *devname;
	int error;

	*file = (char*)fname;
	dp = &devsw[0];
	f->f_dev = dp;
	error = (*dp->dv_open)(f, prom_bootdev);

	return (error);
}
@


1.3
log
@add OpenBSD header
@
text
@@


1.2
log
@NetBSD -> OpenBSD; kernel is called /bsd
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d4 1
d7 8
a14 1
 * Open the device 
d23 1
d29 1
a29 1
	error = (*dp->dv_open)(f, NULL);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@a3 1
#include "promboot.h"
d6 1
a6 8
 * Open the device named by the combined device/file name
 * given as the "fname" arg, something like: "sd()netbsd"
 *
 * However, Sun PROMs don't really let you choose which
 * device you will talk to.  You can only open the device
 * that was used to load the boot program.  Therefore, we
 * do not accept a "device" part in the "fname" string.
 * Pass the PROM device name to open in case it needs it.
a14 1
	char *cp, *path, *devname;
d20 1
a20 1
	error = (*dp->dv_open)(f, prom_bootdev);
@
