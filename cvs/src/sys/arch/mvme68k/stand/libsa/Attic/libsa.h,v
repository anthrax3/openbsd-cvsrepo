head	1.9;
access;
symbols
	OPENBSD_5_5:1.8.0.8
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.13.00.13.53;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.20.00.26.00;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.38;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.04.08.06.56;	author niklas;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	97.04.17.19.16.41;	author gvf;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	96.05.19.20.04.41;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	96.05.16.02.30.37;	author chuck;	state Exp;
branches;
next	;

1.3.14.1
date	2001.10.31.03.01.18;	author nate;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2002.03.28.10.34.06;	author niklas;	state Exp;
branches;
next	1.3.14.3;

1.3.14.3
date	2004.02.19.10.49.05;	author niklas;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.36.51;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: libsa.h,v 1.8 2012/12/31 21:35:32 miod Exp $	*/

/*
 * libsa prototypes 
 */

#include "libbug.h"

/* bugdev.c */
int bugscopen(struct open_file *, ...);
int bugscclose(struct open_file *);
int bugscioctl(struct open_file *, u_long, void *);
int bugscstrategy(void *, int, daddr32_t, size_t, void *, size_t *);

/* exec_mvme.c */
void exec_mvme(char *, int);

/* parse_args.c */
int parse_args(char **, int *);

@


1.8
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.7 2011/03/13 00:13:53 deraadt Exp $	*/
@


1.7
log
@Change daddr_t to daddr32_t.  The bootblocks on our architectures only
do 32-bit block spanning.  If later on we get some that can/should do
64-bit, that can be done now using daddr64_t (but of course, we are taking
this step to finalize the daddr_t 64-bit conversion).
ok miod krw
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.6 2003/08/20 00:26:00 deraadt Exp $	*/
d10 1
a10 1
int bugscopen(struct open_file *);
@


1.6
log
@ansi and protos for the rest
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.5 2002/03/14 01:26:38 millert Exp $	*/
d13 1
a13 1
int bugscstrategy(void *, int, daddr_t, size_t, void *, size_t *);
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.4 2001/07/04 08:06:56 niklas Exp $	*/
d10 1
a10 1
int bugscopen(struct open_file *, ...);
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d10 4
a13 4
int bugscopen __P((struct open_file *, ...));
int bugscclose __P((struct open_file *));
int bugscioctl __P((struct open_file *, u_long, void *));
int bugscstrategy __P((void *, int, daddr_t, size_t, void *, size_t *));
d16 1
a16 1
void exec_mvme __P((char *, int));
d19 1
a19 1
int parse_args __P((char **, int *));
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.4 2001/07/04 08:06:56 niklas Exp $	*/
d10 4
a13 4
int bugscopen(struct open_file *, ...);
int bugscclose(struct open_file *);
int bugscioctl(struct open_file *, u_long, void *);
int bugscstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d16 1
a16 1
void exec_mvme(char *, int);
d19 1
a19 1
int parse_args(char **, int *);
@


1.3
log
@Added -q to return to Motorola bug.
Added loop to prompt for kernel name if it is not found.
@
text
@d1 2
@


1.3.14.1
log
@Sync the SMP branch to something just after 3.0
@
text
@a0 2
/*	$OpenBSD$	*/

@


1.3.14.2
log
@Merge in -current from about a week ago
@
text
@d10 4
a13 4
int bugscopen(struct open_file *, ...);
int bugscclose(struct open_file *);
int bugscioctl(struct open_file *, u_long, void *);
int bugscstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d16 1
a16 1
void exec_mvme(char *, int);
d19 1
a19 1
int parse_args(char **, int *);
@


1.3.14.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d10 1
a10 1
int bugscopen(struct open_file *);
@


1.2
log
@minor clean
@
text
@d17 1
a17 1
void parse_args __P((char **, int *));
@


1.1
log
@sync with sun3 port.
major reorg. & cleanup.
new SRT that works with bugcrt.
common parse_arg.
@
text
@a18 4
#ifndef RB_NOSYM
#define RB_NOSYM 0x400
#endif

@
