head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.8
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.4
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.8.0.44
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.42
	OPENBSD_5_0:1.8.0.40
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.38
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.36
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.32
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.34
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.30
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.28
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.26
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.24
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.22
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.20
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.6.0.22
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.20
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.18
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.16
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.14
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.12
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.10
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2012.11.04.13.36.47;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.03.15.56;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.38;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.10.07.22.50.05;	author deraadt;	state Exp;
branches
	1.6.12.1
	1.6.22.1;
next	1.5;

1.5
date	97.01.29.07.58.39;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.16.13.50.02;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.05.29.15.30.44;	author chuck;	state Exp;
branches;
next	1.2;

1.2
date	96.04.28.10.49.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.16;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.43.57;	author deraadt;	state Exp;
branches;
next	;

1.6.12.1
date	2002.03.28.10.34.06;	author niklas;	state Exp;
branches;
next	;

1.6.22.1
date	2002.06.11.03.36.51;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: sboot.h,v 1.10 2012/12/31 21:35:32 miod Exp $ */

/*
 * Copyright (c) 1995 Charles D. Cranor and Seth Widoff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor
 *	and Seth Widoff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * sboot.h: stuff for MVME147's serial line boot
 */

void go(unsigned int, const char *, const char *);

/* console */
char *ngets(char *, int);

/* sboot */
void callrom(void);
void do_cmd(char *, char *);

/* le */
#define LANCE_ADDR 0xfffe0778
#define ERAM_ADDR  0xfffe0774
#define LANCE_REG_ADDR 0xfffe1800
void le_end(void);
void le_init(void);
int le_get(u_char *, size_t, u_long);
int le_put(u_char *, size_t);

/* etherfun */
#define READ 0
#define ACKN 1 
void do_rev_arp(void);
int get_rev_arp(void);
int rev_arp(void);
void do_send_tftp(int);
int do_get_file(void); 
void tftp_file(char *, u_long);

/* clock */
u_long ttime(void);

/* checksum */
u_long oc_cksum(void *, u_long, u_long);

#define CONS_ZS_ADDR (0xfffe3002)
#define CLOCK_ADDR (0xfffe07f8)

unsigned char myea[6];                /* my ether addr */
unsigned char myip[4];
unsigned char servip[4];
unsigned char servea[6];
u_short myport;
u_short servport;
unsigned char reboot;
@


1.10
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.9 2012/11/04 13:36:47 miod Exp $ */
@


1.9
log
@Make the s-records boot loader use the same stage1/stage2 addresses as the
other boot blocks. Crank stage1 from 64KB to 1MB to accomodate non-mvme147 BUG.
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.8 2002/03/14 03:15:56 millert Exp $ */
d38 1
a38 1
extern caddr_t end;
a40 1
void puts(char *);
@


1.8
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.7 2002/03/14 01:26:38 millert Exp $ */
a74 1
#define LOAD_ADDR 0x7000 
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.6 1997/10/07 22:50:05 deraadt Exp $ */
d46 1
a46 1
void do_cmd(char *, char*);
@


1.6
log
@cngetc() proto moved
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.5 1997/01/29 07:58:39 deraadt Exp $ */
d41 2
a42 2
void puts __P((char *));
char *ngets __P((char *, int));
d45 2
a46 2
void callrom __P((void));
void do_cmd __P((char *, char*));
d52 4
a55 4
void le_end __P((void));
void le_init __P((void));
int le_get __P((u_char *, size_t, u_long));
int le_put __P((u_char *, size_t));
d60 6
a65 6
void do_rev_arp __P((void));
int get_rev_arp __P((void));
int rev_arp __P((void));
void do_send_tftp __P((int));
int do_get_file __P((void)); 
void tftp_file __P((char *, u_long));
d68 1
a68 1
u_long ttime __P((void));
d71 1
a71 1
u_long oc_cksum __P((void *, u_long, u_long));
@


1.6.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.6 1997/10/07 22:50:05 deraadt Exp $ */
d41 2
a42 2
void puts(char *);
char *ngets(char *, int);
d45 2
a46 2
void callrom(void);
void do_cmd(char *, char *);
d52 4
a55 4
void le_end(void);
void le_init(void);
int le_get(u_char *, size_t, u_long);
int le_put(u_char *, size_t);
d60 6
a65 6
void do_rev_arp(void);
int get_rev_arp(void);
int rev_arp(void);
void do_send_tftp(int);
int do_get_file(void); 
void tftp_file(char *, u_long);
d68 1
a68 1
u_long ttime(void);
d71 1
a71 1
u_long oc_cksum(void *, u_long, u_long);
@


1.6.12.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d41 2
a42 2
void puts(char *);
char *ngets(char *, int);
d45 2
a46 2
void callrom(void);
void do_cmd(char *, char *);
d52 4
a55 4
void le_end(void);
void le_init(void);
int le_get(u_char *, size_t, u_long);
int le_put(u_char *, size_t);
d60 6
a65 6
void do_rev_arp(void);
int get_rev_arp(void);
int rev_arp(void);
void do_send_tftp(int);
int do_get_file(void); 
void tftp_file(char *, u_long);
d68 1
a68 1
u_long ttime(void);
d71 1
a71 1
u_long oc_cksum(void *, u_long, u_long);
@


1.5
log
@signal.h -> siginfo.h -> time.h fallout
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.4 1996/10/16 13:50:02 mickey Exp $ */
a41 1
char cngetc __P((void));
@


1.4
log
@update according to the libsa changes
@
text
@d1 1
a1 1
/*	$OpenBSD: sboot.h,v 1.3 1996/05/29 15:30:44 chuck Exp $ */
d69 1
a69 1
u_long time __P((void));
@


1.3
log
@new arg passing
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a37 6
typedef unsigned short u_short;
typedef unsigned long u_long;
typedef unsigned char u_char;
typedef unsigned int u_int;
typedef u_long size_t;
typedef char *caddr_t;
a39 6
#define NULL ((char *)0)

void bcopy __P((const void *, void *, size_t));		/* libc_sa */
void *memset __P((void *, int, size_t));		/* libc_sa */
int printf __P((const char *, ...));			/* libc_sa */

a41 1
void putchar __P((char));
@


1.2
log
@add OpenBSD header
@
text
@d56 1
a56 1
void ngets __P((char *, int));
d60 1
a60 1
void do_cmd __P((char *));
@


1.1
log
@Initial revision
@
text
@d1 2
a3 1
 *
d48 3
a50 3
void bcopy(const void *, void *, size_t); /* libc_sa */
void *memset(void *, int, size_t); /* libc_sa */
void printf(const char *, ...); /* libc_sa */
d53 4
a56 4
void puts(char *);
void putchar(char);
char cngetc();
void ngets(char *, int);
d59 2
a60 2
void callrom();
void do_cmd(char *);
d66 4
a69 4
void le_end(void);
void le_init(void);
int le_get(u_char *, size_t, u_long);
int le_put(u_char *, size_t);
d74 6
a79 6
void do_rev_arp();
int get_rev_arp();
int rev_arp();
void do_send_tftp( int );
int do_get_file(); 
void tftp_file(char *, u_long);
d82 1
a82 1
u_long time(void);
d85 1
a85 1
u_long oc_cksum (void *, u_long, u_long);
d89 1
a89 1
#define LOAD_ADDR 0x8000 
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d2 1
d47 3
a49 3
void bcopy __P((const void *, void *, size_t));		/* libc_sa */
void *memset __P((void *, int, size_t));		/* libc_sa */
int printf __P((const char *, ...));			/* libc_sa */
d52 4
a55 4
void puts __P((char *));
void putchar __P((char));
char cngetc __P((void));
void ngets __P((char *, int));
d58 2
a59 2
void callrom __P((void));
void do_cmd __P((char *));
d65 4
a68 4
void le_end __P((void));
void le_init __P((void));
int le_get __P((u_char *, size_t, u_long));
int le_put __P((u_char *, size_t));
d73 6
a78 6
void do_rev_arp __P((void));
int get_rev_arp __P((void));
int rev_arp __P((void));
void do_send_tftp __P((int));
int do_get_file __P((void)); 
void tftp_file __P((char *, u_long));
d81 1
a81 1
u_long time __P((void));
d84 1
a84 1
u_long oc_cksum __P((void *, u_long, u_long));
d88 1
a88 1
#define LOAD_ADDR 0x7000 
@
