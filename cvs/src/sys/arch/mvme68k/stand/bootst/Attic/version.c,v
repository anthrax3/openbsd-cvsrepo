head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.68
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.66
	OPENBSD_5_0:1.3.0.64
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.62
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.60
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.56
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.58
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.54
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.52
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.50
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.48
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.46
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.44
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.42
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.40
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.38
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.36
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.34
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.32
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.30
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.28
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.26
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.24
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2013.05.12.08.10.07;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2013.04.14.19.05.19;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	97.04.22.16.13.40;	author gvf;	state Exp;
branches;
next	1.2;

1.2
date	96.05.29.15.41.02;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	96.05.28.15.16.55;	author chuck;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: version.c,v 1.6 2013/05/12 08:10:07 miod Exp $ */

/*
 *	1.6	lower load address and heap location by 1MB to fit 8MB boards
 *	1.5	do not load kernel symbols to avoid seeking backwards
 *	1.4	kernel loaded with loadfile, a.out and ELF formats
 */

char *version = "1.6";
@


1.6
log
@Lower heap location and load address by 1MB for the secondary boot loaders,
to fit 8MB boards.
@
text
@d1 1
a1 1
/*	$OpenBSD: version.c,v 1.5 2013/04/14 19:05:19 miod Exp $ */
@


1.5
log
@Unbreak tape boot blocks by not attempting to load kernel symbols, and providing
a smarter seek routine which can seek forward and cope with the libsa gzip code
reading the first 4KB of a file upon open, only to discard the buffer because
it assumes we can always seek backwards.

These boot blocks had been broken since the switch to the MI libsa loadfile
code.

Reported for mvme88k by Michael Fritsch, thanks and sorry for taking too long
to fix.
@
text
@d1 1
a1 1
/*	$OpenBSD: version.c,v 1.4 2012/12/31 21:35:32 miod Exp $ */
d4 1
d9 1
a9 1
char *version = "1.5";
@


1.4
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD: version.c,v 1.3 1997/04/22 16:13:40 gvf Exp $ */
d4 1
d8 1
a8 1
char *version = "1.4";
@


1.3
log
@Add libz and tick version # to reflect change.
@
text
@d1 1
a1 1
/*	$OpenBSD: version.c,v 1.2 1996/05/29 15:41:02 chuck Exp $ */
d4 1
a4 2
 * make a random change to this file when you want the bootblock
 * revision to increase. like change this q to an x, or something.
d7 1
a7 1
char *version = "$Revision: 1.2 $";
@


1.2
log
@bump version
@
text
@d1 1
a1 1
/*	$OpenBSD: version.c,v 1.1 1996/05/28 15:16:55 chuck Exp $ */
d5 1
a5 1
 * revision to increase. like change this x to a q, or something.
d8 1
a8 1
char *version = "$Revision: 1.1 $";
@


1.1
log
@new version of bootst (from sun3 tapeboot)
@
text
@d1 1
a1 1
/*	$OpenBSD: version.c,v 1.5 1996/05/16 02:46:57 chuck Exp $ */
d5 1
a5 1
 * revision to increase. like change this x to a z, or something.
d8 1
a8 1
char *version = "$Revision: 0.0 $";
@
