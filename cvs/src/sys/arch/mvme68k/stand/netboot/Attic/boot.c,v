head	1.12;
access;
symbols
	OPENBSD_5_5:1.11.0.8
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.4
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.10.0.38
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.36
	OPENBSD_5_0:1.10.0.34
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.32
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.30
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.26
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.28
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.24
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.22
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.20
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.18
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.16
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.18
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.16
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.14
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.12
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.10
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.6
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.11;

1.11
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.20.00.26.00;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.04.04.11.37;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.27.51;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.06.03.21.44;	author smurph;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	97.04.22.16.01.21;	author gvf;	state Exp;
branches;
next	1.5;

1.5
date	96.05.16.02.55.36;	author chuck;	state Exp;
branches;
next	1.4;

1.4
date	96.04.28.10.49.17;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.07.08.50.57;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.22.06.56.29;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.15;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.15;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.44.36;	author deraadt;	state Exp;
branches;
next	;

1.7.2.1
date	2003.06.07.11.13.16;	author ho;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2004.02.19.10.49.05;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: boot.c,v 1.11 2012/12/31 21:35:32 miod Exp $ */

/*-
 * Copyright (c) 1995 Theo de Raadt
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	@@(#)boot.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/reboot.h>
#include <machine/prom.h>

#include "stand.h"
#include "libsa.h"

extern   char *version;
char line[80];

int
main()
{
	char *cp, *file;
	int ask = 0, howto, ret;

	printf(">> OpenBSD MVME%x netboot [%s]\n", bugargs.cputyp, version);

	/* cycle in the correct args */
	bugargs.arg_start = bugargs.nbarg_start;
	bugargs.arg_end   = bugargs.nbarg_end;
	*bugargs.arg_end = 0; /* ensure */

	ret = parse_args(&file, &howto);

	for (;;) {
		if (ask) {
			printf("boot: ");
			gets(line);
			if (line[0]) {
				bugargs.arg_start = line;
				cp = line;
				while (cp < (line + sizeof(line) - 1) && *cp)
					cp++;
				bugargs.arg_end = cp;
				ret =parse_args(&file, &howto);
			}
		}
		if (ret) {
			printf("boot: -q returning to MVME-Bug\n");
			break;
		}
		exec_mvme(file, howto);
		printf("boot: %s: %s\n", file, strerror(errno));
		ask = 1;
	}
	_rtt();
	return (0);
}
@


1.11
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.10 2003/08/20 00:26:00 deraadt Exp $ */
@


1.10
log
@ansi and protos for the rest
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.9 2003/06/04 04:11:37 deraadt Exp $ */
a64 5
/*
 * Boot device is derived from ROM provided information.
 */
#define LOADADDR	0x10000

d66 1
a66 1
char  line[80];
d68 2
a69 1
main(int argc, char *argv[])
d75 1
d104 2
@


1.9
log
@more term 3 and 4 changes
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.8 2003/06/02 23:27:51 millert Exp $ */
d73 1
a73 1
main()
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.7 2000/01/06 03:21:44 smurph Exp $ */
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Theo de Raadt
 * 4. The name of the Author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.7
log
@Added support for MVME177 (mc68060)
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.6 1997/04/22 16:01:21 gvf Exp $ */
d44 1
a44 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7.2.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.7 2000/01/06 03:21:44 smurph Exp $ */
d15 5
d44 5
a48 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.7.2.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d73 1
a73 1
main(int argc, char *argv[])
@


1.6
log
@minor clean to -q
@
text
@d1 1
a1 1
/*	$OpenBSD: boot.c,v 1.5 1996/05/16 02:55:36 chuck Exp $ */
d79 2
a80 2
extern	char *version;
char	line[80];
d102 1
a102 1
				while (cp < (line + sizeof(line) - 1) && *cp) 
@


1.5
log
@clean up and sync with changes elsewhere (use common parse_args,
bugargs.cputyp, bugcrt, etc...).
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d85 1
a85 1
	int ask = 0, howto;
d93 1
a93 1
	parse_args(&file, &howto);
d105 1
a105 1
				parse_args(&file, &howto);
d107 4
@


1.4
log
@add OpenBSD header
@
text
@d69 1
d72 1
a72 1
#include "promboot.h"
d79 1
a79 2
extern char		*version;
char	defname[32] = "bsd";
a81 5
#if 0
u_int	bootdev = MAKEBOOTDEV(0, sdmajor, 0, 0, 0);	/* disk boot */
#endif
u_int	bootdev = MAKEBOOTDEV(1, 0, 0, 0, 0);		/* network boot */

d85 9
a93 15
	int	io;
	extern int cputyp;
	extern char *oparg, *opargend;
	int ask = 0;

	printf(">> OpenBSD netboot [%s]\n", version);
	printf("model MVME%x\n", cputyp);

	*opargend = '\0';
	prom_get_boot_info();
	file = defname;

	cp = prom_bootfile;
	if (cp && *cp)
		file = cp;
d100 6
a105 2
				oparg = line;
				prom_get_boot_info();
d108 2
a109 2
		exec_sun(file, (char *)LOADADDR, prom_boothow);
		printf("boot: %s\n", strerror(errno));
@


1.3
log
@$Id$ throughout
update many copyrights
@
text
@d1 1
a1 1
/*	$Id$ */
@


1.2
log
@NetBSD -> OpenBSD; kernel is called /bsd
@
text
@d1 1
a1 1
/*	$NetBSD: boot.c,v 1.1.1.1 1995/06/09 22:02:40 gwr Exp $ */
d5 28
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: boot.c,v 1.1.1.1.2.1 1995/10/12 20:38:57 chuck Exp $ */
d4 1
d43 1
d48 1
a48 1
#define LOADADDR	0x8000
d50 2
a51 3
extern	char *version;
extern	char *cmd_parse();
char	defname[32] = "netbsd";
a52 1
int 	boothowto;
d54 4
d59 1
a59 2
main(cline)
char *cline;
d63 14
a76 5

	printf(">> NetBSD netboot [%s]\n", version);
	file = cmd_parse(cline, &boothowto);
	if (file == NULL)
		file = defname;
d79 1
a79 1
		if (boothowto & RB_ASKNAME) {
d82 4
a85 2
			if (line[0])
				file = line;
d87 3
a89 3
		exec_mvme(file, LOADADDR, boothowto);
		printf("boot: %s: %s\n", file, strerror(errno));
		boothowto |= RB_ASKNAME;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d1 1
a1 1
/*	$NetBSD: boot.c,v 1.1.1.1 1995/06/09 22:02:40 gwr Exp $ */
a3 1
 * Copyright (c) 1995 Theo de Raadt
a41 1
#include "promboot.h"
d46 1
a46 1
#define LOADADDR	0x10000
d48 2
a49 1
extern char		*version;
d52 1
a53 4
#if 0
u_int	bootdev = MAKEBOOTDEV(0, sdmajor, 0, 0, 0);	/* disk boot */
#endif
u_int	bootdev = MAKEBOOTDEV(1, 0, 0, 0, 0);		/* network boot */
d55 2
a56 1
main()
a59 3
	extern int cputyp;
	extern char *oparg, *opargend;
	int ask = 0;
d62 3
a64 9
	printf("model MVME%x\n", cputyp);

	*opargend = '\0';
	prom_get_boot_info();
	file = defname;

	cp = prom_bootfile;
	if (cp && *cp)
		file = cp;
d67 1
a67 1
		if (ask) {
d70 2
a71 4
			if (line[0]) {
				oparg = line;
				prom_get_boot_info();
			}
d73 3
a75 3
		exec_sun(file, (char *)LOADADDR, prom_boothow);
		printf("boot: %s\n", strerror(errno));
		ask = 1;
@
