head	1.16;
access;
symbols
	OPENBSD_4_4:1.14.0.8
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.6
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.4
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.5
	UBC:1.1.0.8
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.16
date	2009.02.17.22.28.40;	author miod;	state dead;
branches;
next	1.15;

1.15
date	2009.02.16.21.19.06;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.28.23.59.45;	author dlg;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.15.20.20.40;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.24.22.43.16;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.30.22.29.45;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2004.07.30.09.50.15;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.02.17.57.29;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.14.20.50.48;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.27.50;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.11.19.20.26;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.17.21.54.56;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.27.23.21.05;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.21.23.45.16;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.37;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.18.17.41.09;	author deraadt;	state Exp;
branches
	1.1.2.1
	1.1.8.1;
next	;

1.1.2.1
date	2001.04.18.16.10.30;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.03.27.23.32.16;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2003.06.07.11.13.15;	author ho;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2004.02.19.10.49.04;	author niklas;	state Exp;
branches;
next	;

1.1.8.1
date	2002.06.11.03.36.49;	author art;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2002.10.29.00.28.07;	author art;	state Exp;
branches;
next	1.1.8.3;

1.1.8.3
date	2003.05.19.21.45.31;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Add real bus_space and bus_dma to mvme68k, so that it can benefit from
recent driver work; this gives us better osiop and vs drivers, vsbic
(although currently disabled on 68060 boards until more bugs are fixed),
and the ability to boot and root off vs and vsbic.

Existing code is not modified and still uses memory mapped structures;
this might change eventually as more code gets factorized and moved to
MI land.
@
text
@/*	$OpenBSD: sshdma.c,v 1.15 2009/02/16 21:19:06 miod Exp $ */

/*
 * Copyright (c) 1995 Theo de Raadt
 * Copyright (c) 1994 Michael L. Hitch
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dma.c
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <machine/autoconf.h>
#include <mvme68k/dev/sshreg.h>
#include <mvme68k/dev/sshvar.h>

#include "mc.h"
#include "pcctwo.h"

#if NMC > 0
#include <mvme68k/dev/mcreg.h>
#endif
#if NPCCTWO > 0
#include <mvme68k/dev/pcctworeg.h>
#endif

int   afscmatch(struct device *, void *, void *);
void  afscattach(struct device *, struct device *, void *);

void  sshintr(struct ssh_softc *);
int   afsc_dmaintr(void *);

extern void sshinitialize(struct ssh_softc *);

struct scsi_adapter afsc_scsiswitch = {
	ssh_scsicmd,
	scsi_minphys,
	0,			/* no lun support */
	0,			/* no lun support */
};

struct scsi_device afsc_scsidev = {
	NULL,		/* use default error handler */
	NULL,		/* do not have a start function */
	NULL,		/* have no async handler */
	NULL,		/* Use default done routine */
};

struct cfattach ssh_ca = {
	sizeof(struct ssh_softc), afscmatch, afscattach,
};

struct cfdriver ssh_cd = {
	NULL, "ssh", DV_DULL
};

int
afscmatch(pdp, vcf, args)
struct device *pdp;
void *vcf, *args;
{
	struct confargs *ca = args;

	return (!badvaddr((vaddr_t)ca->ca_vaddr, 4));
}

void
afscattach(parent, self, auxp)
struct device *parent, *self;
void *auxp;
{
	struct ssh_softc *sc = (struct ssh_softc *)self;
	struct confargs *ca = auxp;
	struct scsibus_attach_args saa;
	ssh_regmap_p rp;
	int tmp;
	extern int cpuspeed;

	sc->sc_sshp = rp = (void *)ca->ca_vaddr;
	/*
	 * ssh uses sc_clock_freq to define the dcntl & ctest7 reg values
	 * (was 0x0221, but i added SSH_CTEST7_SC0 for snooping control)
	 * XXX does the clock frequency change for the 33MHz processors?
	 */
	sc->sc_clock_freq = cpuspeed * 2;
#ifdef MVME177
	/* MVME177 ssh clock documented as fixed 50MHz in VME177A/HX */
	if (cputyp == CPU_177)
		sc->sc_clock_freq = 50;
#endif
#ifdef MVME172
	/* XXX this is a guess! Same as MVME177?*/
	if (cputyp == CPU_172)
		sc->sc_clock_freq = 50;
#endif
	sc->sc_dcntl = SSH_DCNTL_EA; 
/*XXX*/	if (sc->sc_clock_freq <= 25)
/*XXX*/		sc->sc_dcntl |= (2 << 6);
/*XXX*/	else if (sc->sc_clock_freq <= 37)
/*XXX*/		sc->sc_dcntl |= (1 << 6);
/*XXX*/	else if (sc->sc_clock_freq <= 50)
/*XXX*/		sc->sc_dcntl |= (0 << 6);
/*XXX*/	else
/*XXX*/		sc->sc_dcntl |= (3 << 6);

#if defined(MVME172) || defined(MVME177)
	/* No Select timouts on MC68060 */
	/* XXX 177 works better with them! */
	if (cputyp == CPU_172 /* || cputyp == CPU_177 */)
		sc->sc_ctest7 = SSH_CTEST7_SNOOP | SSH_CTEST7_TT1 | SSH_CTEST7_STD;
	else
#endif 
		sc->sc_ctest7 = SSH_CTEST7_SNOOP | SSH_CTEST7_TT1;

	sc->sc_link.adapter_softc = sc;
	sc->sc_link.adapter_target = 7;		/* XXXX should ask ROM */
	sc->sc_link.adapter = &afsc_scsiswitch;
	sc->sc_link.device = &afsc_scsidev;
	sc->sc_link.openings = 1;

	sc->sc_ih.ih_fn = afsc_dmaintr;
	sc->sc_ih.ih_arg = sc;
	sc->sc_ih.ih_ipl = ca->ca_ipl;

	sshinitialize(sc);

	switch (ca->ca_bustype) {
#if NMC > 0
	case BUS_MC:
		mcintr_establish(MCV_NCR, &sc->sc_ih, self->dv_xname);
		sys_mc->mc_ncrirq = ca->ca_ipl | MC_IRQ_IEN;
		break;
#endif
#if NPCCTWO > 0
	case BUS_PCCTWO:
		pcctwointr_establish(PCC2V_NCR, &sc->sc_ih, self->dv_xname);
		sys_pcc2->pcc2_ncrirq = ca->ca_ipl | PCC2_IRQ_IEN;
		break;
#endif
	}

	/*
	 * attach all scsi units on us, watching for boot device
	 * (see device_register).
	 */
	tmp = bootpart;
	if (ca->ca_paddr != bootaddr)
		bootpart = -1;		/* invalid flag to device_register */

	bzero(&saa, sizeof(saa));
	saa.saa_sc_link = &sc->sc_link;

	config_found(self, &saa, scsiprint);
	bootpart = tmp;				 /* restore old value */

}

int
afsc_dmaintr(arg)
	void *arg;
{
	struct ssh_softc *sc = (struct ssh_softc *)arg;
	ssh_regmap_p rp;
	u_char   istat;

	rp = sc->sc_sshp;
	istat = rp->ssh_istat;
	if ((istat & (SSH_ISTAT_SIP | SSH_ISTAT_DIP)) == 0)
		return (0);
	if ((rp->ssh_sien | rp->ssh_dien) == 0)
		return (0);	/* no interrupts enabled */

	/*
	 * save interrupt status, DMA status, and SCSI status 0
	 * (may need to deal with stacked interrupts?)
	 */
	sc->sc_istat = istat;
	sc->sc_dstat = rp->ssh_dstat;
	sc->sc_sstat0 = rp->ssh_sstat0;
	sshintr(sc);
	return (1);
}

#ifdef DEBUG
void
afsc_dump()
{
	int i;

	for (i = 0; i < afsccd.cd_ndevs; ++i)
		if (afsccd.cd_devs[i])
			ssh_dump(afsccd.cd_devs[i]);
}
#endif
@


1.15
log
@Extend the scsi_adapter minphys() callback to take a struct scsi_link *
as additional argument. This will allow intermediate layers between
scsi devices such as sd and scsi host adapters to take appropriate
action if necessary.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.14 2006/11/28 23:59:45 dlg Exp $ */
@


1.14
log
@give scsi controllers a real attach args to fill in when attaching scsibus.

ok miod@@ marco@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.13 2006/03/15 20:20:40 miod Exp $ */
d68 1
a68 1
	ssh_minphys,
@


1.13
log
@Nuke dk_establish(), no longer used.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.12 2005/11/24 22:43:16 miod Exp $ */
d105 1
d180 5
a184 1
	config_found(self, &sc->sc_link, scsiprint);
@


1.12
log
@Prefer vaddr_t and paddr_t types in device softc, instead of void * and
heavy casts. Improves readability, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.11 2004/07/30 22:29:45 miod Exp $ */
d174 1
a174 1
	 * (see dk_establish).
d178 1
a178 1
		bootpart = -1;				/* invalid flag to dk_establish */
@


1.11
log
@Move struct evcount inside struct intrhand, and modernize intrhand
usage; similar to (and from) mvme88k.

Also remove unused haltvec structures and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.10 2004/07/30 09:50:15 miod Exp $ */
d109 1
a109 1
	sc->sc_sshp = rp = ca->ca_vaddr;
@


1.10
log
@Switch mvme68k to evcount interrupt counters.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.9 2004/07/02 17:57:29 miod Exp $ */
a39 1
#include <sys/evcount.h>
d160 1
a160 1
		mcintr_establish(MCV_NCR, &sc->sc_ih);
d166 1
a166 1
		pcctwointr_establish(PCC2V_NCR, &sc->sc_ih);
a171 3
	evcount_attach(&sc->sc_intrcnt, self->dv_xname,
	    (void *)&sc->sc_ih.ih_ipl, &evcount_intr);

a206 1
	sc->sc_intrcnt.ec_count++;
@


1.9
log
@Kill ca_master in autoconf structures. Drivers either only attach to one
specific bus (mc/pcc/pcctwo), or they know it from the ca_bustype value,
and can use the globals sys_busname variables.

This also allows for some code simplifications.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.8 2004/01/14 20:50:48 miod Exp $ */
d40 2
d44 1
d173 2
a174 1
	evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt);
d211 1
a211 1
	sc->sc_intrcnt.ev_count++;
@


1.8
log
@Do not fill more than the first three fields of cfdriver structures unless
necessary. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.7 2003/06/02 23:27:50 millert Exp $ */
d157 4
a160 8
		case BUS_MC:
			{
				struct mcreg *mc = (struct mcreg *)ca->ca_master;

				mcintr_establish(MCV_NCR, &sc->sc_ih);
				mc->mc_ncrirq = ca->ca_ipl | MC_IRQ_IEN;
				break;
			}
d163 4
a166 8
		case BUS_PCCTWO:
			{
				struct pcctworeg *pcc2 = (struct pcctworeg *)ca->ca_master;

				pcctwointr_establish(PCC2V_NCR, &sc->sc_ih);
				pcc2->pcc2_ncrirq = ca->ca_ipl | PCC2_IRQ_IEN;
				break;
			}
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.6 2003/02/11 19:20:26 mickey Exp $ */
d83 1
a83 1
	NULL, "ssh", DV_DULL, 0
@


1.6
log
@be consistant on Hz vs hz
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.5 2002/09/17 21:54:56 miod Exp $ */
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@It turns out that disabling selection timeout is not a good idea, on
MVME177 at least. Restore previous behaviour.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.4 2002/04/27 23:21:05 miod Exp $ */
d119 1
a119 1
	/* MVME177 ssh clock documented as fixed 50Mhz in VME177A/HX */
@


1.4
log
@Jumbo commit to fix all compilation warnings on mvme68k (add prototypes,
add casts, fix a few errors and typos in the process, etc)
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3 2002/04/21 23:45:16 miod Exp $ */
d138 4
a141 2
#if defined(MVME172) || defined(MVME177)  /* No Select timouts on MC68060 */
	if (cputyp == CPU_172 || cputyp == CPU_177)
@


1.3
log
@Correct a thinko wrt 68060 operation; only affects 177 boards.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.2 2002/03/14 01:26:37 millert Exp $ */
d63 4
a66 2
int   sshintr(struct ssh_softc *);
int   afsc_dmaintr(struct ssh_softc *);
a94 1
	struct cfdata *cf = vcf;
d97 1
a97 1
	return (!badvaddr(ca->ca_vaddr, 4));
d195 2
a196 2
afsc_dmaintr(sc)
struct ssh_softc *sc;
d198 1
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.1 2001/02/18 17:41:09 deraadt Exp $ */
d138 1
a138 1
	if (cputyp == CPU_172 || cputyp == CPU_172)
@


1.1
log
@two siop drivers conflict.  rename to ssh -- short for Symbios Scripts Hardware
@
text
@d1 1
a1 1
/*	$OpenBSD: siopdma.c,v 1.7 2000/01/06 03:21:42 smurph Exp $ */
d60 2
a61 2
int   afscmatch   __P((struct device *, void *, void *));
void  afscattach  __P((struct device *, struct device *, void *));
d63 2
a64 2
int   sshintr __P((struct ssh_softc *));
int   afsc_dmaintr   __P((struct ssh_softc *));
@


1.1.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.1 2001/02/18 17:41:09 deraadt Exp $ */
d60 2
a61 2
int   afscmatch(struct device *, void *, void *);
void  afscattach(struct device *, struct device *, void *);
d63 2
a64 4
void  sshintr(struct ssh_softc *);
int   afsc_dmaintr(void *);

extern void sshinitialize(struct ssh_softc *);
d93 1
d96 1
a96 1
	return (!badvaddr((vaddr_t)ca->ca_vaddr, 4));
d138 1
a138 1
	if (cputyp == CPU_172 || cputyp == CPU_177)
d194 2
a195 2
afsc_dmaintr(arg)
	void *arg;
a196 1
	struct ssh_softc *sc = (struct ssh_softc *)arg;
@


1.1.8.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.1.8.1 2002/06/11 03:36:49 art Exp $ */
d138 2
a139 4
#if defined(MVME172) || defined(MVME177)
	/* No Select timouts on MC68060 */
	/* XXX 177 works better with them! */
	if (cputyp == CPU_172 /* || cputyp == CPU_177 */)
@


1.1.8.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d119 1
a119 1
	/* MVME177 ssh clock documented as fixed 50MHz in VME177A/HX */
@


1.1.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.1 2001/02/18 17:41:09 deraadt Exp $ */
@


1.1.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d60 2
a61 2
int   afscmatch(struct device *, void *, void *);
void  afscattach(struct device *, struct device *, void *);
d63 2
a64 2
int   sshintr(struct ssh_softc *);
int   afsc_dmaintr(struct ssh_softc *);
@


1.1.2.3
log
@Sync the SMP branch with 3.3
@
text
@d63 2
a64 4
void  sshintr(struct ssh_softc *);
int   afsc_dmaintr(void *);

extern void sshinitialize(struct ssh_softc *);
d93 1
d96 1
a96 1
	return (!badvaddr((vaddr_t)ca->ca_vaddr, 4));
d118 1
a118 1
	/* MVME177 ssh clock documented as fixed 50MHz in VME177A/HX */
d137 2
a138 4
#if defined(MVME172) || defined(MVME177)
	/* No Select timouts on MC68060 */
	/* XXX 177 works better with them! */
	if (cputyp == CPU_172 /* || cputyp == CPU_177 */)
d194 2
a195 2
afsc_dmaintr(arg)
	void *arg;
a196 1
	struct ssh_softc *sc = (struct ssh_softc *)arg;
@


1.1.2.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.1.2.3 2003/03/27 23:32:16 niklas Exp $ */
d17 5
a21 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d83 1
a83 1
	NULL, "ssh", DV_DULL
@


