head	1.15;
access;
symbols
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.4
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.6
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.2
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.12.0.8
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.6
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.2
	SMP_BASE:1.1;
locks; strict;
comment	@ * @;


1.15
date	2011.07.06.04.36.48;	author miod;	state dead;
branches;
next	1.14;

1.14
date	2010.06.28.18.31.01;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.16.21.19.06;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2006.11.28.23.59.45;	author dlg;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.15.20.20.40;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.24.22.43.16;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.30.22.29.45;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.30.09.50.15;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.14.20.50.48;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.14.02.00.41;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.27.23.21.05;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.37;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.26.21.35.39;	author miod;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2000.06.10.19.53.23;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.25.04.18.18;	author smurph;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.04.18.16.10.32;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.07.04.10.19.29;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2003.03.27.23.32.16;	author niklas;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2004.02.19.10.49.04;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.36.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.15
log
@That file is supposed to have been removed ages ago.
@
text
@/*	$OpenBSD: vsdma.c,v 1.14 2010/06/28 18:31:01 krw Exp $ */
/*
 * Copyright (c) 1999 Steve Murphree, Jr.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)vsdma.c
 */

/*
 * MVME328 scsi adaptor driver
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <machine/autoconf.h>

#include <mvme68k/dev/vsreg.h>
#include <mvme68k/dev/vsvar.h>
#include <mvme68k/dev/vme.h>

int	vsmatch(struct device *, void *, void *);
void	vsattach(struct device *, struct device *, void *);
int	vsprint(void *auxp, char *);
void  vs_initialize(struct vs_softc *);
int	vs_intr(struct vs_softc *);
int	vs_nintr(void *);
int	vs_eintr(void *);

struct scsi_adapter vs_scsiswitch = {
	vs_scsicmd,
	scsi_minphys,
	0,			/* no lun support */
	0,			/* no lun support */
};

struct cfattach vs_ca = {
        sizeof(struct vs_softc), vsmatch, vsattach,
};    
 
struct cfdriver vs_cd = {
        NULL, "vs", DV_DULL
}; 

int
vsmatch(pdp, vcf, args)
	struct device *pdp;
	void *vcf, *args;
{
	struct confargs *ca = args;
	return(!badvaddr((vaddr_t)ca->ca_vaddr, 1));
}

void
vsattach(parent, self, auxp)
	struct device *parent, *self;
	void *auxp;
{
	struct vs_softc *sc = (struct vs_softc *)self;
	struct confargs *ca = auxp;
	struct scsibus_attach_args saa;
	struct vsreg * rp;
	int tmp;

	sc->sc_vsreg = rp = (void *)ca->ca_vaddr;

	sc->sc_ipl = ca->ca_ipl;
	sc->sc_nvec = ca->ca_vec + 0;
	sc->sc_evec = ca->ca_vec + 1;
	sc->sc_link.adapter_softc = sc;
	sc->sc_link.adapter_target = 7;
	sc->sc_link.adapter = &vs_scsiswitch;
	sc->sc_link.luns = 1;
	sc->sc_link.openings = 1;

	sc->sc_ih_n.ih_fn = vs_nintr;
	sc->sc_ih_n.ih_arg = sc;
	sc->sc_ih_n.ih_ipl = ca->ca_ipl;
   
	sc->sc_ih_e.ih_fn = vs_eintr;
	sc->sc_ih_e.ih_arg = sc;
	sc->sc_ih_e.ih_ipl = ca->ca_ipl;
   
	vs_initialize(sc);

	snprintf(sc->sc_intrname_e, sizeof sc->sc_intrname_e,
	    "%s_err", self->dv_xname);

	vmeintr_establish(sc->sc_nvec, &sc->sc_ih_n, self->dv_xname);
	vmeintr_establish(sc->sc_evec, &sc->sc_ih_e, sc->sc_intrname_e);

	/*
	 * attach all scsi units on us, watching for boot device
	 * (see device_register).
	 */
	bzero(&saa, sizeof(saa));
	saa.saa_sc_link = &sc->sc_link;
	tmp = bootpart;
	if (ca->ca_paddr != bootaddr) 
		bootpart = -1;          /* invalid flag to device_register */
	config_found(self, &saa, scsiprint);
	bootpart = tmp;             /* restore old value */
}

/*
 * print diag if pnp is NULL else just extra
 */
int
vsprint(auxp, pnp)
	void *auxp;
	char *pnp;
{
	if (pnp == NULL)
		return (UNCONF);
	return (QUIET);
}

/* normal interrupt function */
int
vs_nintr(arg)
	void *arg;
{
	struct vs_softc *sc = (struct vs_softc *)arg;

#ifdef SDEBUG
	printf("Normal Interrupt!!!\n");
#endif 
	vs_intr(sc);
	return (1);
}

/* error interrupt function */
int
vs_eintr(arg)
	void *arg;
{
	struct vs_softc *sc = (struct vs_softc *)arg;

#ifdef SDEBUG
	printf("Error Interrupt!!!\n");
#endif
	vs_intr(sc);
	return (1);
}


@


1.14
log
@Remove all adapter-specific 'struct scsi_device's. They are never used. First
step in elminating 'struct scsi_device' entirely.

Spotted and initial diff from matthew@@.

ok matthew@@ dlg@@ deraadt@@ marco@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.13 2009/02/16 21:19:06 miod Exp $ */
@


1.13
log
@Extend the scsi_adapter minphys() callback to take a struct scsi_link *
as additional argument. This will allow intermediate layers between
scsi devices such as sd and scsi host adapters to take appropriate
action if necessary.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.12 2006/11/28 23:59:45 dlg Exp $ */
a69 7
struct scsi_device vs_scsidev = {
	NULL,		/* use default error handler */
	NULL,		/* do not have a start function */
	NULL,		/* have no async handler */
	NULL,		/* Use default done routine */
};

a105 1
	sc->sc_link.device = &vs_scsidev;
@


1.12
log
@give scsi controllers a real attach args to fill in when attaching scsibus.

ok miod@@ marco@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.11 2006/03/15 20:20:40 miod Exp $ */
d65 1
a65 1
	vs_minphys,
@


1.11
log
@Nuke dk_establish(), no longer used.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.10 2005/11/24 22:43:16 miod Exp $ */
d101 1
d137 2
d142 1
a142 1
	config_found(self, &sc->sc_link, scsiprint);
@


1.10
log
@Prefer vaddr_t and paddr_t types in device softc, instead of void * and
heavy casts. Improves readability, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.9 2004/07/30 22:29:45 miod Exp $ */
d134 1
a134 1
	 * (see dk_establish).
d138 1
a138 1
		bootpart = -1;          /* invalid flag to dk_establish */
@


1.9
log
@Move struct evcount inside struct intrhand, and modernize intrhand
usage; similar to (and from) mvme88k.

Also remove unused haltvec structures and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.8 2004/07/30 09:50:15 miod Exp $ */
d104 1
a104 1
	sc->sc_vsreg = rp = ca->ca_vaddr;
@


1.8
log
@Switch mvme68k to evcount interrupt counters.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.7 2004/01/14 20:50:48 miod Exp $ */
a44 1
#include <sys/evcount.h>
a125 5
	vmeintr_establish(sc->sc_nvec, &sc->sc_ih_n);
	vmeintr_establish(sc->sc_evec, &sc->sc_ih_e);

	evcount_attach(&sc->sc_intrcnt_n, self->dv_xname,
	    (void *)&sc->sc_ih_n.ih_ipl, &evcount_intr);
d128 3
a130 2
	evcount_attach(&sc->sc_intrcnt_e, self->dv_xname,
	    (void *)&sc->sc_ih_e.ih_ipl, &evcount_intr);
a166 1
	sc->sc_intrcnt_n.ec_count++;
a180 1
	sc->sc_intrcnt_e.ec_count++;
@


1.7
log
@Do not fill more than the first three fields of cfdriver structures unless
necessary. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.6 2004/01/14 02:00:41 krw Exp $ */
d45 2
d49 1
a51 6
#ifdef mvme88k
#include <mvme88k/dev/vsreg.h>
#include <mvme88k/dev/vsvar.h>
#include <mvme88k/dev/vme.h>
#include <machine/mmu.h>
#else
a54 1
#endif
d129 7
a135 2
	evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt_n);
	evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt_e);
d172 1
a172 1
	sc->sc_intrcnt_n.ev_count++;
d187 1
a187 1
	sc->sc_intrcnt_e.ev_count++;
@


1.6
log
@Nuke SDEV_NOLUNS, SDEV_FORCELUNS, and PQUIRK_FORCELUNS quirks. Also
moreluns field in scsi_link structure.  Instead, treat an INQUIRY
result that duplicates the INQUIRY result of LUN 0 as proof the LUN
does not exist.  Compensate for lack of SDEV_NOLUNS where necessary by
setting sc_link->luns to 1, which has the same effect. From Marco
Peereboom.

Don't issue Test Unit Ready command before INQUIRY command - not
necessary and potentially harmful to devices with ADEV_NOTUR quirk
since quirks have not been set yet. From mycroft@@NetBSD

ok deraadt@@, mvme* changes by miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.5 2002/04/27 23:21:05 miod Exp $ */
d87 1
a87 1
        NULL, "vs", DV_DULL, 0 
@


1.5
log
@Jumbo commit to fix all compilation warnings on mvme68k (add prototypes,
add casts, fix a few errors and typos in the process, etc)
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.4 2002/03/14 01:26:37 millert Exp $ */
d118 1
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.3 2001/06/26 21:35:39 miod Exp $ */
d65 2
a66 2
int	vs_nintr(struct vs_softc *);
int	vs_eintr(struct vs_softc *);
a94 1
	struct cfdata *cf = vcf;
d96 1
a96 1
	return(!badvaddr(ca->ca_vaddr, 1));
a107 1
	extern int cpuspeed;
d161 2
a162 2
vs_nintr(sc)
	struct vs_softc *sc;
d164 2
d176 2
a177 2
vs_eintr(sc)
	struct vs_softc *sc;
d179 2
@


1.3
log
@A few changes to mvme68k:
+ switch to UVM
+ fix the system trace problem
+ big cleanup of locore.s (macro for BUG calls, use more common m68k
  code whenever possible, and the macros in <m68k/asm.h>)
+ better indentation on some parts (old KNF)
+ call doshutdownhooks() at shutdown
+ use <net/netisr_dispatch.h>
+ upgrade pmap.c to something very close to our current hp300 pmap.c,
  minus support for PMAP_NEW and for HP MMU
+ various tidbits I forget to mention here

work and tests by smurph@@ and me.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.2 2000/06/10 19:53:23 deraadt Exp $ */
d60 7
a66 7
int	vsmatch         __P((struct device *, void *, void *));
void	vsattach        __P((struct device *, struct device *, void *));
int	vsprint         __P((void *auxp, char *));
void  vs_initialize   __P((struct vs_softc *));
int	vs_intr         __P((struct vs_softc *));
int	vs_nintr        __P((struct vs_softc *));
int	vs_eintr        __P((struct vs_softc *));
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.3 2001/06/26 21:35:39 miod Exp $ */
d60 7
a66 7
int	vsmatch(struct device *, void *, void *);
void	vsattach(struct device *, struct device *, void *);
int	vsprint(void *auxp, char *);
void  vs_initialize(struct vs_softc *);
int	vs_intr(struct vs_softc *);
int	vs_nintr(void *);
int	vs_eintr(void *);
d95 1
d97 1
a97 1
	return(!badvaddr((vaddr_t)ca->ca_vaddr, 1));
d109 1
d163 2
a164 2
vs_nintr(arg)
	void *arg;
a165 2
	struct vs_softc *sc = (struct vs_softc *)arg;

d176 2
a177 2
vs_eintr(arg)
	void *arg;
a178 2
	struct vs_softc *sc = (struct vs_softc *)arg;

@


1.2
log
@better ifdef
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.1 2000/01/25 04:18:18 smurph Exp $ */
d49 1
a49 2
#ifdef __m88k__
#include <machine/board.h>
d53 1
a53 1
#include "machine/mmu.h"
d58 1
a58 1
#endif /* defined(MVME187) || defined(MVME188) || defined(MVME197) */
d114 3
a116 3
   sc->sc_nvec = ca->ca_vec + 0;
   sc->sc_evec = ca->ca_vec + 1;
   sc->sc_link.adapter_softc = sc;
d126 1
a126 1
   sc->sc_ih_e.ih_fn = vs_eintr;
d134 2
a135 2
   evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt_n);
   evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt_e);
d167 1
a167 1
   printf("Normal Interrupt!!!\n");
d169 1
a169 1
   vs_intr(sc);
d180 1
a180 1
   printf("Error Interrupt!!!\n");
@


1.1
log
@Added support for MVME328 SCSI VME board.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.2 1999/09/27 18:43:26 smurph Exp $ */
d49 1
a49 1
#if defined(MVME187) || defined(MVME188) || defined(MVME197)
@


1.1.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.2 2000/06/10 19:53:23 deraadt Exp $ */
d49 1
a49 1
#ifdef __m88k__
@


1.1.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: vsdma.c,v 1.1.2.1 2001/04/18 16:10:32 niklas Exp $ */
d49 2
a50 1
#ifdef mvme88k
d54 1
a54 1
#include <machine/mmu.h>
d59 1
a59 1
#endif
d115 3
a117 3
	sc->sc_nvec = ca->ca_vec + 0;
	sc->sc_evec = ca->ca_vec + 1;
	sc->sc_link.adapter_softc = sc;
d127 1
a127 1
	sc->sc_ih_e.ih_fn = vs_eintr;
d135 2
a136 2
	evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt_n);
	evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt_e);
d168 1
a168 1
	printf("Normal Interrupt!!!\n");
d170 1
a170 1
	vs_intr(sc);
d181 1
a181 1
	printf("Error Interrupt!!!\n");
@


1.1.2.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d60 7
a66 7
int	vsmatch(struct device *, void *, void *);
void	vsattach(struct device *, struct device *, void *);
int	vsprint(void *auxp, char *);
void  vs_initialize(struct vs_softc *);
int	vs_intr(struct vs_softc *);
int	vs_nintr(struct vs_softc *);
int	vs_eintr(struct vs_softc *);
@


1.1.2.4
log
@Sync the SMP branch with 3.3
@
text
@d65 2
a66 2
int	vs_nintr(void *);
int	vs_eintr(void *);
d95 1
d97 1
a97 1
	return(!badvaddr((vaddr_t)ca->ca_vaddr, 1));
d109 1
d163 2
a164 2
vs_nintr(arg)
	void *arg;
a165 2
	struct vs_softc *sc = (struct vs_softc *)arg;

d176 2
a177 2
vs_eintr(arg)
	void *arg;
a178 2
	struct vs_softc *sc = (struct vs_softc *)arg;

@


1.1.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d87 1
a87 1
        NULL, "vs", DV_DULL
a117 1
	sc->sc_link.luns = 1;
@


