head	1.23;
access;
symbols
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.28
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.26
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.24
	OPENBSD_5_0:1.21.0.22
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.20
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.18
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.14
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.16
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.12
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.10
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.8
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.6
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.4
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.2
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.20.0.2
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.19.0.10
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.8
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.6
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	UBC_SYNC_A:1.18
	OPENBSD_3_3:1.18.0.4
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	UBC_SYNC_B:1.18
	UBC:1.15.0.2
	UBC_BASE:1.15
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2014.03.18.22.36.34;	author miod;	state dead;
branches;
next	1.22;

1.22
date	2013.03.23.16.12.25;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2006.06.11.20.48.13;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2005.09.12.23.05.05;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.02.23.27.50;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2002.04.27.23.21.05;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.22.22.45.34;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.12.20.19.02.29;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2001.12.07.21.49.15;	author art;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2001.12.05.16.28.13;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.30.20.58.18;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.06.02.07.42;	author provos;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.13.02.37.29;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.10.22.46.41;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.05.20.56.44;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.22.19.27.53;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.06.03.21.43;	author smurph;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.09.22.09.33.33;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	97.03.31.00.24.04;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.04.28.10.55.42;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.07.08.49.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.22.06.25.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.11;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.43.19;	author deraadt;	state Exp;
branches;
next	;

1.7.2.1
date	2000.03.02.07.04.30;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2001.07.04.10.19.31;	author niklas;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2001.10.31.03.01.17;	author nate;	state Exp;
branches;
next	1.7.2.4;

1.7.2.4
date	2001.12.05.00.39.11;	author niklas;	state Exp;
branches;
next	1.7.2.5;

1.7.2.5
date	2002.03.06.01.07.00;	author niklas;	state Exp;
branches;
next	1.7.2.6;

1.7.2.6
date	2003.03.27.23.32.17;	author niklas;	state Exp;
branches;
next	1.7.2.7;

1.7.2.7
date	2003.06.07.11.13.15;	author ho;	state Exp;
branches;
next	;

1.15.2.1
date	2002.01.31.22.55.15;	author niklas;	state Exp;
branches;
next	1.15.2.2;

1.15.2.2
date	2002.06.11.03.36.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: param.h,v 1.22 2013/03/23 16:12:25 deraadt Exp $ */

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#define	_MACHINE 	"mvme68k"
#define	MACHINE 	"mvme68k"

#define	PAGE_SHIFT	12

#define	KERNBASE	0x00000000	/* start of kernel virtual */
#define	KERNTEXTOFF	0x00010000	/* start of kernel text */

#define	MSGBUFSIZE	4096

#include <m68k/param.h>

#if defined(_KERNEL) && !defined(_LOCORE)
extern void delay(int);
#define DELAY(n)	delay(n)
#endif	/* _KERNEL && !_LOCORE */

#endif /* _MACHINE_PARAM_H_ */
@


1.22
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2006/06/11 20:48:13 miod Exp $ */
@


1.21
log
@Move common prototypes to <m68k/{cpu,param}.h> instead of incomplete
declarations in <machine/{cpu,param}.h> and elsewhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2005/09/12 23:05:05 miod Exp $ */
a34 4
 *
 * from: Utah $Hdr: machparam.h 1.16 92/12/20$
 *
 *	@@(#)param.h	8.1 (Berkeley) 6/10/93
d37 1
a37 1
#ifndef _MACHINE_PARAM_H_
a39 3
/*
 * Machine dependent constants for mvme68k, based on HP9000 series 300.
 */
d48 1
a48 1
#define MSGBUFSIZE	4096
d57 1
a57 1
#endif	/* _MACHINE_PARAM_H_ */
@


1.20
log
@Change the NKMEMPAGES range to 4-64MB for 32bit arches, and 8-128MB for 64bit
arches; except on sparc where the range is 4-8 for !sun4m and 4-64 for sun4m,
selected at runtime.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2003/06/02 23:27:50 millert Exp $ */
a49 2
#define	PGSHIFT		12		/* LOG2(NBPG) */

a50 2
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)
d59 1
a59 12
/*
 * spl functions; all but spl0 are done in-line
 */
#include <machine/psl.h>

/*
 * interrupt glue 
 */
#include <machine/intr.h>


#ifdef _KERNEL
d62 1
a62 1
#endif
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2002/04/27 23:21:05 miod Exp $ */
a61 7

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
@


1.18
log
@Jumbo commit to fix all compilation warnings on mvme68k (add prototypes,
add casts, fix a few errors and typos in the process, etc)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2002/02/22 22:45:34 miod Exp $ */
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.17
log
@Switch mvme68k to pmap_motorola again.
68060 operation tested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/12/20 19:02:29 miod Exp $ */
d86 1
@


1.16
log
@Temporarily revert the pmap_motorola changes, as they may account for
some problems as well.
Requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/12/07 21:49:15 art Exp $ */
a59 6
#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))

#define	SEGSHIFT	22		/* LOG2(NBSEG) */
#define	NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

a88 13
#ifdef COMPAT_HPUX
/*
 * Constants/macros for HPUX multiple mapping of user address space.
 * Pages in the first 256Mb are mapped in at every 256Mb segment.
 */
#define HPMMMASK	0xF0000000
#define ISHPMMADDR(v) \
	((curproc->p_md.md_flags & MDP_HPUXMMAP) && \
	 ((unsigned)(v) & HPMMMASK) && \
	 ((unsigned)(v) & HPMMMASK) != HPMMMASK)
#define HPMMBASEADDR(v) \
	((unsigned)(v) & ~HPMMMASK)
#endif
@


1.15
log
@NKMEMPAGES defines.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/12/05 16:28:13 art Exp $ */
d60 6
d95 13
@


1.15.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/12/20 19:02:29 miod Exp $ */
a59 6
#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))

#define	SEGSHIFT	22		/* LOG2(NBSEG) */
#define	NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

a88 13
#ifdef COMPAT_HPUX
/*
 * Constants/macros for HPUX multiple mapping of user address space.
 * Pages in the first 256Mb are mapped in at every 256Mb segment.
 */
#define HPMMMASK	0xF0000000
#define ISHPMMADDR(v) \
	((curproc->p_md.md_flags & MDP_HPUXMMAP) && \
	 ((unsigned)(v) & HPMMMASK) && \
	 ((unsigned)(v) & HPMMMASK) != HPMMMASK)
#define HPMMBASEADDR(v) \
	((unsigned)(v) & ~HPMMMASK)
#endif
@


1.15.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15.2.1 2002/01/31 22:55:15 niklas Exp $ */
d60 6
a91 1
extern void delay(int);
d95 13
@


1.14
log
@Remove NKMEMCLUSTERS.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/11/30 20:58:18 miod Exp $ */
d66 7
@


1.13
log
@Switch to pmap_motorola.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/07/06 02:07:42 provos Exp $ */
a65 7

/*
 * Size of kernel malloc arena in logical pages
 */ 
#ifndef	NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(2048 * 1024 / PAGE_SIZE)
#endif
@


1.12
log
@change MSIZE to 256, okay @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2001/05/13 02:37:29 millert Exp $ */
d45 3
a52 11
#define	_MACHINE_ARCH	"m68k"
#define	MACHINE_ARCH	"m68k"
#define	MID_MACHINE	MID_M68K

/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_int and must be cast to
 * any desired pointer type.
 */
#define	ALIGNBYTES	(sizeof(int) - 1)
#define	ALIGN(p)	(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)
a54 2
#define	NBPG		(1 << PGSHIFT)	/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
a59 6
#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))

#define	SEGSHIFT	22		/* LOG2(NBSEG) */
#define	NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

a61 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
d63 1
a63 9
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define	BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
#define	UPAGES		2		/* pages of u-area */
#define	USPACE		(UPAGES * NBPG)	/* total size of u-area */
d65 1
a65 21
/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* large enough for ether MTU */
#define	MCLOFSET	(MCLBYTES - 1)

#ifndef	NMBCLUSTERS
#ifdef	GATEWAY
#define	NMBCLUSTERS	2048		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#endif
#endif

#define MSGBUFSIZE	4096
a73 28
/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define	dbtob(x)	((x) << DEV_BSHIFT)
#define	btodb(x)	((x) >> DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE / DEV_BSIZE))

/*
 * Mach derived conversion macros
 */
#define m68k_round_page(x)	((((unsigned)(x)) + PGOFSET) & ~PGOFSET)
#define m68k_trunc_page(x)	((unsigned)(x) & ~PGOFSET)
#define m68k_btop(x)		((unsigned)(x) >> PGSHIFT)
#define m68k_ptob(x)		((unsigned)(x) << PGSHIFT)

d89 1
a89 13
#ifdef COMPAT_HPUX
/*
 * Constants/macros for HPUX multiple mapping of user address space.
 * Pages in the first 256Mb are mapped in at every 256Mb segment.
 */
#define HPMMMASK	0xF0000000
#define ISHPMMADDR(v) \
	((curproc->p_md.md_flags & MDP_HPUXMMAP) && \
	 ((unsigned)(v) & HPMMMASK) && \
	 ((unsigned)(v) & HPMMMASK) != HPMMMASK)
#define HPMMBASEADDR(v) \
	((unsigned)(v) & ~HPMMMASK)
#endif
@


1.11
log
@PAGE_MASK is (PAGE_SIZE - 1), *not* (PAGE_SHIFT - 1)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2001/05/10 22:46:41 miod Exp $ */
d97 1
a97 1
#define	MSIZE		128		/* size of an mbuf */
@


1.10
log
@Provide PAGE_{MASK,SHIFT,SIZE} constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 2001/05/05 20:56:44 art Exp $ */
d68 1
a68 1
#define	PAGE_MASK	(PAGE_SHIFT - 1)
@


1.9
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 2000/02/22 19:27:53 deraadt Exp $ */
d65 5
@


1.8
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 2000/01/06 03:21:43 smurph Exp $ */
a79 4
#define	CLSIZELOG2	0
#define	CLSIZE		(1 << CLSIZELOG2)

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
d87 1
a87 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d108 1
a108 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d111 1
a111 1
#define	NKMEMCLUSTERS	(2048 * 1024 / CLBYTES)
@


1.7
log
@Added support for MVME177 (mc68060)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 1999/09/22 09:33:33 espie Exp $ */
d108 2
@


1.7.2.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a107 2

#define MSGBUFSIZE	4096
@


1.7.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7.2.1 2000/03/02 07:04:30 niklas Exp $ */
a64 5

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

d80 4
d91 1
a91 1
 * MCLBYTES must be no larger than the software page size, and,
d112 1
a112 1
 * Size of kernel malloc arena in logical pages
d115 1
a115 1
#define	NKMEMCLUSTERS	(2048 * 1024 / PAGE_SIZE)
@


1.7.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7.2.2 2001/07/04 10:19:31 niklas Exp $ */
d97 1
a97 1
#define	MSIZE		256		/* size of an mbuf */
@


1.7.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7.2.3 2001/10/31 03:01:17 nate Exp $ */
a44 3
#ifndef _MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

d50 11
d63 2
d70 6
d78 31
a111 2
#include <m68k/param.h>

d119 28
d162 13
a174 1
#endif	/* _MACHINE_PARAM_H_ */
@


1.7.2.5
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d68 5
a72 5
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
@


1.7.2.6
log
@Sync the SMP branch with 3.3
@
text
@a85 1
extern void delay(int);
@


1.7.2.7
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7.2.6 2003/03/27 23:32:17 niklas Exp $ */
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.6
log
@Don't worry, be a happy gcc
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 1997/03/31 00:24:04 downsj Exp $ */
d68 1
a68 1
#define NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
d72 1
a72 1
#define KERNTEXTOFF	0x00010000	/* start of kernel text */
d77 1
a77 1
#define BLKDEV_IOSIZE	2048
d101 2
a102 2
#ifndef NMBCLUSTERS
#ifdef GATEWAY
d112 1
a112 1
#ifndef NKMEMCLUSTERS
d149 4
a152 28
#define _spl(s) \
({ \
	register int _spl_r; \
\
	__asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
		"=&d" (_spl_r) : "di" (s)); \
	_spl_r; \
})

/* spl0 requires checking for software interrupts */
#define	spl1()	_spl(PSL_S|PSL_IPL1)
#define	spl2()	_spl(PSL_S|PSL_IPL2)
#define	spl3()	_spl(PSL_S|PSL_IPL3)
#define	spl4()	_spl(PSL_S|PSL_IPL4)
#define	spl5()	_spl(PSL_S|PSL_IPL5)
#define	spl6()	_spl(PSL_S|PSL_IPL6)
#define	spl7()	_spl(PSL_S|PSL_IPL7)

#define	splsoftclock()	spl1()
#define	splsoftnet()	spl1()
#define	splbio()	spl2()
#define	splnet()	spl3()
#define	splimp()	spl3()
#define	spltty()	spl3()
#define	splclock()	spl5()
#define	splstatclock()	spl5()
#define	splhigh()	spl7()
#define	splsched()	spl7()
a153 2
/* watch out for side effects */
#define	splx(s)		(s & PSL_IPL ? _spl(s) : spl0())
@


1.5
log
@Modernize OpenBSD/mvme68k to match various changes in m68k and hp300 code.

Compiles, but untested for lack of hardware.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 1996/04/28 10:55:42 deraadt Exp $ */
d154 1
a154 1
		"&=d" (_spl_r) : "di" (s)); \
@


1.4
log
@add _MACHINE & _MACHINE_ARCH
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d183 14
@


1.3
log
@$Id$ throughout
update many copyrights
@
text
@d1 1
a1 1
/*	$Id$ */
d48 1
d50 1
@


1.2
log
@crank NMBCLUSTERS
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.9 1995/03/28 18:15:38 jtc Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.2 1995/08/13 00:27:11 mycroft Exp $	*/
d70 1
d84 1
a84 1
#define	UPAGES		3		/* pages of u-area */
d101 1
a101 1
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
d103 1
a103 1
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
d115 2
a116 2
#define		ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define		dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))
d119 2
a120 2
#define		ctob(x)		((x) << PGSHIFT)
#define		btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
d149 1
a149 1
        register int _spl_r; \
d151 3
a153 3
        __asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
                "&=d" (_spl_r) : "di" (s)); \
        _spl_r; \
d157 18
a174 19
#define spl1()  _spl(PSL_S|PSL_IPL1)
#define spl2()  _spl(PSL_S|PSL_IPL2)
#define spl3()  _spl(PSL_S|PSL_IPL3)
#define spl4()  _spl(PSL_S|PSL_IPL4)
#define spl5()  _spl(PSL_S|PSL_IPL5)
#define spl6()  _spl(PSL_S|PSL_IPL6)
#define spl7()  _spl(PSL_S|PSL_IPL7)

#define splsoftclock()  spl1()
#define splsoftnet()    spl1()
#define splbio()        spl2()
#define splnet()        spl3()
#define spltty()        spl3()
#define splimp()        spl3()
#define splclock()      spl5()
#define splstatclock()	spl5()
#define splvm()         spl5()
#define splhigh()       spl7()
#define splsched()      spl7()
d177 1
a177 1
#define splx(s)         (s & PSL_IPL ? _spl(s) : spl0())
d180 1
a180 4
#ifndef LOCORE
int	cpuspeed;
#define	DELAY(n)	{ register int N = cpuspeed * (n); while (--N > 0); }
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.9 1995/03/28 18:15:38 jtc Exp $	*/
a69 1
#define KERNTEXTOFF	0x00010000	/* start of kernel text */
d83 1
a83 1
#define	UPAGES		2		/* pages of u-area */
d114 2
a115 2
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))
d118 2
a119 2
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
d148 1
a148 1
	register int _spl_r; \
d150 3
a152 3
	__asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
		"&=d" (_spl_r) : "di" (s)); \
	_spl_r; \
d156 19
a174 18
#define	spl1()	_spl(PSL_S|PSL_IPL1)
#define	spl2()	_spl(PSL_S|PSL_IPL2)
#define	spl3()	_spl(PSL_S|PSL_IPL3)
#define	spl4()	_spl(PSL_S|PSL_IPL4)
#define	spl5()	_spl(PSL_S|PSL_IPL5)
#define	spl6()	_spl(PSL_S|PSL_IPL6)
#define	spl7()	_spl(PSL_S|PSL_IPL7)

#define	splsoftclock()	spl1()
#define	splsoftnet()	spl1()
#define	splbio()	spl2()
#define	splnet()	spl3()
#define	splimp()	spl3()
#define	spltty()	spl3()
#define	splclock()	spl5()
#define	splstatclock()	spl5()
#define	splhigh()	spl7()
#define	splsched()	spl7()
d177 1
a177 1
#define	splx(s)		(s & PSL_IPL ? _spl(s) : spl0())
d180 4
a183 1
#define DELAY(n)	delay(n)
@
