head	1.15;
access;
symbols
	OPENBSD_5_5:1.14.0.8
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.36
	OPENBSD_5_0:1.11.0.34
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.32
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.30
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.26
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.28
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.24
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.22
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.20
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.18
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.6
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.7.0.20
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.18
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.16
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.14
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.12
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.10
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.8
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.6
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	theo-1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2014.03.18.22.36.34;	author miod;	state dead;
branches;
next	1.14;

1.14
date	2013.02.02.13.36.05;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2012.12.31.21.35.32;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2012.07.05.04.23.33;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.05.09.14;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.27.23.21.05;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.12.22.53.16;	author miod;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2001.01.15.19.50.38;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.05.19.20.05.11;	author chuck;	state Exp;
branches
	1.7.16.1;
next	1.6;

1.6
date	96.05.16.02.14.02;	author chuck;	state Exp;
branches;
next	1.5;

1.5
date	96.05.10.03.19.34;	author chuck;	state Exp;
branches;
next	1.4;

1.4
date	96.05.07.11.25.01;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.28.10.56.27;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.07.08.49.59;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.10.43.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.43.51;	author deraadt;	state Exp;
branches;
next	;

1.7.16.1
date	2001.04.18.16.10.37;	author niklas;	state Exp;
branches;
next	1.7.16.2;

1.7.16.2
date	2001.07.04.10.19.32;	author niklas;	state Exp;
branches;
next	1.7.16.3;

1.7.16.3
date	2003.03.27.23.32.17;	author niklas;	state Exp;
branches;
next	1.7.16.4;

1.7.16.4
date	2003.06.07.11.13.15;	author ho;	state Exp;
branches;
next	;

1.9.4.1
date	2002.06.11.03.36.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: prom.h,v 1.14 2013/02/02 13:36:05 miod Exp $ */

/*
 * Copyright (c) 1995 Theo de Raadt
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef _MACHINE_PROM_H_
#define _MACHINE_PROM_H_

#define MVMEPROM_INCHR		0x00
#define MVMEPROM_INSTAT		0x01
#define MVMEPROM_INLN		0x02
#define MVMEPROM_READSTR	0x03
#define MVMEPROM_READLN		0x04
#define MVMEPROM_OUTCHR		0x20
#define MVMEPROM_OUTSTR		0x21
#define MVMEPROM_DSKRD		0x10
#define MVMEPROM_DSKWR		0x11
#define MVMEPROM_DSKCFIG	0x12
#define MVMEPROM_DSKFMT		0x14
#define MVMEPROM_DSKCTRL	0x15
#define MVMEPROM_NETCTRL	0x1d
#define MVMEPROM_OUTSTRCRLF	0x22
#define MVMEPROM_WRITE		0x23
#define MVMEPROM_WRITELN	0x24
#define MVMEPROM_DELAY		0x43
#define MVMEPROM_RTC_RD		0x53
#define MVMEPROM_EXIT		0x63
#define MVMEPROM_GETBRDID	0x70
#define MVMEPROM_ENVIRON	0x71

#define NETCTRLCMD_GETETHER	1

#define ENVIRONCMD_WRITE	1
#define ENVIRONCMD_READ		2
#define ENVIRONTYPE_EOL		0
#define ENVIRONTYPE_START	1
#define ENVIRONTYPE_DISKBOOT	2
#define ENVIRONTYPE_ROMBOOT	3
#define ENVIRONTYPE_NETBOOT	4
#define ENVIRONTYPE_MEMSIZE	5

#ifndef _LOCORE
struct prom_netctrl {
	u_char	dev;
	u_char	ctrl;
	u_short	status;
	u_long	cmd;
	u_long	addr;
	u_long	len;
	u_long	flags;
};

struct prom_environ_hdr {
	u_char	type;
	u_char	len;
};

struct mvmeprom_brdid {
	u_long	eye_catcher;
	u_char	rev;
	u_char	month;
	u_char	day;
	u_char	year;
	u_short	size;
	u_short	rsv1;
	u_short	model;
	u_short	suffix;
	u_short	options;
	u_char	family;
	u_char	cpu;
	u_short	ctrlun;
	u_short	devlun;
	u_short	devtype;
	u_short	devnum;
	u_long	bug;

	/*
	 * XXX: I have seen no documentation for these!
	 *
	 * The following (appears to) exist only on the MVME162 and
	 * upwards. We should figure out what the other fields are.
	 */
	u_char	xx1[16];
	u_char	xx2[4];
	u_char	longname[12];
	u_char	xx3[16];
	u_char	speed[4];
	u_char	xx4[12];
};

struct mvmeprom_time {
        u_char	year_BCD;
        u_char	month_BCD;
        u_char	day_BCD;
        u_char	wday_BCD;
        u_char	hour_BCD;
        u_char	min_BCD;
        u_char	sec_BCD;
        u_char	cal_BCD;
};

struct mvmeprom_dskio {
	u_char	ctrl_lun;
	u_char	dev_lun;
	u_short	status;
	void	*pbuffer;
	u_long	blk_num;
	u_short	blk_cnt;
	u_char	flag;
#define BUG_FILE_MARK	0x80
#define IGNORE_FILENUM	0x02
#define END_OF_FILE	0x01
	u_char	addr_mod;
};
#define MVMEPROM_BLOCK_SIZE	256

struct mvmeprom_args {
        u_int	dev_lun;
        u_int	ctrl_lun;
        u_int	flags;
        u_int	ctrl_addr;
        u_int	entry;
        u_int	conf_blk;
        char	*arg_start;
        char	*arg_end;
	char	*nbarg_start;
	char	*nbarg_end;
	u_int	cputyp;
};

#endif

#define MVMEPROM_CALL(x) \
	__asm__ __volatile__ ("trap #15; .short " __STRING(x))
#define MVMEPROM_NOARG() \
	__asm__ __volatile__ ("clrl %sp@@-")
#define MVMEPROM_ARG1(arg) \
	__asm__ __volatile__ ("movel %0, %%sp@@-"::"d" (arg))
#define MVMEPROM_ARG2(arg) \
	__asm__ __volatile__ ("movel %0, %%sp@@-"::"d" (arg))
#define MVMEPROM_GETRES(ret) \
	__asm__ __volatile__ ("movel %%sp@@+,%0": "=d" (ret):)
#define MVMEPROM_RETURN(ret) \
	MVMEPROM_GETRES(ret); \
	return (ret);			/* return a value (int) */
#define MVMEPROM_RETURN_BYTE(ret) \
	MVMEPROM_GETRES(ret); \
	return((ret >> 24) & 0xff);	/* return a byte, ret must be int */
#define MVMEPROM_STATRET(ret) \
	MVMEPROM_GETRES(ret); \
	return (!(ret & 0x4));		/* return a 'status' */

#define MVMEPROM_REG_DEVLUN	%d0
#define MVMEPROM_REG_CTRLLUN	%d1
#define MVMEPROM_REG_FLAGS	%d4
#define MVMEPROM_REG_CTRLADDR	%a0
#define MVMEPROM_REG_ENTRY	%a1
#define MVMEPROM_REG_CONFBLK	%a2
#define MVMEPROM_REG_NBARGSTART	%a3
#define MVMEPROM_REG_NBARGEND	%a4
#define MVMEPROM_REG_ARGSTART	%a5
#define MVMEPROM_REG_ARGEND	%a6

#ifndef RB_NOSYM
#define RB_NOSYM 0x4000
#endif

#endif /* _MACHINE_PROM_H_ */
@


1.14
log
@mvme68k ELF bits. Boot block updates heavily based upon the recent mvme88k
a.out->ELF transition.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.13 2012/12/31 21:35:32 miod Exp $ */
@


1.13
log
@Switch mvme68k boot blocks to use the MI libsa loadfile routines to load
kernel images, instead of their own; gives us the ability to load ELF kernels
for free.

Fix many warnings, and generally make the code closer to the current mvme88k
boot blocks to help diffability.

Rewrite bugcrt and bugexec() as a short assembly shim around a
compiler-independent C block; this will allow compilers other than gcc2 to be
used, and removes the need for bugcrt to be compiled without optimization.

Crank all bootblocks versions.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.12 2012/07/05 04:23:33 guenther Exp $ */
d157 1
a157 1
	__asm__ __volatile__ ("clrl sp@@-")
d159 1
a159 1
	__asm__ __volatile__ ("movel %0, sp@@-"::"d" (arg))
d161 1
a161 1
	__asm__ __volatile__ ("movel %0, sp@@-"::"d" (arg))
d163 1
a163 1
	__asm__ __volatile__ ("movel sp@@+,%0": "=d" (ret):)
d174 10
a183 10
#define MVMEPROM_REG_DEVLUN	d0
#define MVMEPROM_REG_CTRLLUN	d1
#define MVMEPROM_REG_FLAGS	d4
#define MVMEPROM_REG_CTRLADDR	a0
#define MVMEPROM_REG_ENTRY	a1
#define MVMEPROM_REG_CONFBLK	a2
#define MVMEPROM_REG_NBARGSTART	a3
#define MVMEPROM_REG_NBARGEND	a4
#define MVMEPROM_REG_ARGSTART	a5
#define MVMEPROM_REG_ARGEND	a6
@


1.12
log
@Concatenating strings doesn't require __CONCAT() (and must not in standard C)

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.11 2003/06/02 05:09:14 deraadt Exp $ */
d174 10
a183 10
#define MVMEPROM_REG_DEVLUN	"d0"
#define MVMEPROM_REG_CTRLLUN	"d1"
#define MVMEPROM_REG_FLAGS	"d4"
#define MVMEPROM_REG_CTRLADDR	"a0"
#define MVMEPROM_REG_ENTRY	"a1"
#define MVMEPROM_REG_CONFBLK	"a2"
#define MVMEPROM_REG_NBARGSTART	"a3"
#define MVMEPROM_REG_NBARGEND	"a4"
#define MVMEPROM_REG_ARGSTART	"a5"
#define MVMEPROM_REG_ARGEND	"a6"
@


1.11
log
@license cleanup of my files
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.10 2002/04/27 23:21:05 miod Exp $ */
d155 1
a155 1
	__asm__ __volatile__ (__CONCAT("trap #15; .short ", __STRING(x)) )
@


1.10
log
@Jumbo commit to fix all compilation warnings on mvme68k (add prototypes,
add casts, fix a few errors and typos in the process, etc)
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.9 2001/06/12 22:53:16 miod Exp $ */
a14 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Theo de Raadt for Willowglen Singapore.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.9
log
@Change RB_NOSYM, for it used to have the same value as RB_CONFIG ;
makes boot -c happier.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.8 2001/01/15 19:50:38 deraadt Exp $ */
d33 2
d195 1
@


1.9.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.9 2001/06/12 22:53:16 miod Exp $ */
a32 2
#ifndef _MACHINE_PROM_H_
#define _MACHINE_PROM_H_
a192 1
#endif /* _MACHINE_PROM_H_ */
@


1.8
log
@__asm__ and __volatile__
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.7 1996/05/19 20:05:11 chuck Exp $ */
d190 1
a190 1
#define RB_NOSYM 0x400
@


1.7
log
@move RB_NOSYM here.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d159 1
a159 1
	asm volatile (__CONCAT("trap #15; .short ", __STRING(x)) )
d161 1
a161 1
	asm volatile ("clrl sp@@-")
d163 1
a163 1
	asm volatile ("movel %0, sp@@-"::"d" (arg))
d165 1
a165 1
	asm volatile ("movel %0, sp@@-"::"d" (arg))
d167 1
a167 1
	asm volatile ("movel sp@@+,%0": "=d" (ret):)
@


1.7.16.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.8 2001/01/15 19:50:38 deraadt Exp $ */
d159 1
a159 1
	__asm__ __volatile__ (__CONCAT("trap #15; .short ", __STRING(x)) )
d161 1
a161 1
	__asm__ __volatile__ ("clrl sp@@-")
d163 1
a163 1
	__asm__ __volatile__ ("movel %0, sp@@-"::"d" (arg))
d165 1
a165 1
	__asm__ __volatile__ ("movel %0, sp@@-"::"d" (arg))
d167 1
a167 1
	__asm__ __volatile__ ("movel sp@@+,%0": "=d" (ret):)
@


1.7.16.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.7.16.1 2001/04/18 16:10:37 niklas Exp $ */
d190 1
a190 1
#define RB_NOSYM 0x4000
@


1.7.16.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a32 2
#ifndef _MACHINE_PROM_H_
#define _MACHINE_PROM_H_
a192 1
#endif /* _MACHINE_PROM_H_ */
@


1.7.16.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.7.16.3 2003/03/27 23:32:17 niklas Exp $ */
d15 6
@


1.6
log
@add two more defines for the way the bug "NBO" command passes in args

add network boot and cputyp to bugargs (for new bootblocks)
@
text
@d188 5
@


1.5
log
@add constants so that we can remove "m68k/m88k" directories from bugcrt.
@
text
@d151 3
d166 2
d169 5
a173 2
	asm volatile ("movel sp@@+,%0": "=d" (ret):); \
	return (ret);			/* return a value */
d175 1
a175 1
	asm volatile ("movew ccr,%0": "=d" (ret)); \
d184 2
@


1.4
log
@idea by chuck to make libbug MI
@
text
@d169 9
@


1.3
log
@add OpenBSD header
@
text
@d157 12
@


1.2
log
@$Id$ throughout
update many copyrights
@
text
@d1 1
a1 1
/*	$Id$ */
d67 1
a67 1
#ifndef LOCORE
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD$ */
d17 2
a18 1
 *      This product includes software developed by Theo de Raadt
@


1.1.1.1
log
@mvme68k port by me. some parts by dale rahn.
@
text
@@
