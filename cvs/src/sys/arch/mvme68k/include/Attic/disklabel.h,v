head	1.13;
access;
symbols
	OPENBSD_5_5:1.12.0.14
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.10
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.8
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.16
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.14
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.10
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.14
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.12
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.10
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.8
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2014.03.18.22.36.34;	author miod;	state dead;
branches;
next	1.12;

1.12
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.20.18.15.45;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.06.18.17.11.06;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.17.00.27.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.21.09.01;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.24.22.13.09;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.07.13.39.01;	author deraadt;	state Exp;
branches
	1.6.10.1;
next	1.5;

1.5
date	97.03.31.00.24.00;	author downsj;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	97.02.12.02.15.25;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.10.03.18.43;	author chuck;	state Exp;
branches;
next	1.2;

1.2
date	96.04.28.10.56.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.10;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.43.11;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.04.18.16.10.34;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2003.03.27.23.32.17;	author niklas;	state Exp;
branches;
next	1.5.14.3;

1.5.14.3
date	2003.06.07.11.13.15;	author ho;	state Exp;
branches;
next	;

1.6.10.1
date	2003.05.19.21.45.32;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: disklabel.h,v 1.12 2011/03/23 16:54:36 pirofti Exp $	*/

/*
 * Copyright (c) 1996 Nivas Madhur
 * Copyright (c) 1995 Dale Rahn.
 * All rights reserved.
 *   
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */  

#ifndef _MACHINE_DISKLABEL_H_
#define _MACHINE_DISKLABEL_H_

#define LABELSECTOR     0                       /* sector containing label */
#define LABELOFFSET	0			/* offset of label in sector */
#define MAXPARTITIONS	16			/* number of partitions */

/*
 * a mvmedisklabel is a disklabel that the bug (prom) can understand
 * and live with.   the bug works in terms of 256 byte blocks.   in our
 * case the first two bug blocks make up the mvmedisklabel (which is 512
 * bytes [i.e. one sector] in length).
 *
 * we use a fixed layout the BSD disk structure (in 256 byte blocks):
 *   block 0  = the volume ID block  (part of mvmedisklabel)
 *   block 1  = media configuration area (part of mvmedisklabel)
 *   block 2  = start of first level OS bootstrap (continues ...)
 *   block 31 = end of OS bootstrap
 *   block 32 = BSD filesystem superblock
 *
 * this gives us 30 blocks (30*256 = 7680 bytes) for the bootstrap's text+data
 *
 * disksubr.c translates between mvmedisklabel and BSD disklabel.
 *
 * Note: this structure is exactly 512 bytes in size. If you move fields
 * around, make sure the various members are properly aligned and the
 * compiler won't do any additional padding.
 */
struct mvmedisklabel {
	/* VID */
	u_char		vid_id[4];
	u_char		vid_0[16];
	u_int		vid_oss;
	u_short		vid_osl;
	u_char		vid_1[4];
	u_short		vid_osa_u;
	u_short		vid_osa_l;
	u_char		version;
	u_char		vid_2[1];
	u_short		checksum;	/* 2 */
	u_short		partitions;
	u_char		vid_vd[16];
	u_long		bbsize;
	u_long		magic1;		/* 4 */
	u_short		type;		/* 2 */
	u_short		subtype;	/* 2 */
	u_char		packname[16];	/* 16 */
	u_long		flags;		/* 4 */
	u_long		drivedata[5];	/* 4 */
	u_long		spare[5];	/* 4 */

	u_long		secpercyl;	/* 4 */
	u_long		secperunit;	/* 4 */
	u_long		headswitch;	/* 4 */

	u_char		vid_3[4];
	u_int		vid_cas;
	u_char		vid_cal;
	u_char		vid_4_0[3];
	u_char		vid_4[64];
	u_char		vid_4_1[28];
	u_long		sbsize;
	u_char		vid_mot[8];

	/* CFG */
	u_char		cfg_0[4];
	u_short		cfg_atm;
	u_short		cfg_prm;
	u_short		cfg_atw;
	u_short		cfg_rec;

	u_short		sparespertrack;
	u_short		sparespercyl;
	u_long		acylinders;
	u_short		rpm;
	u_short		cylskew;

	u_char		cfg_spt;
	u_char		cfg_hds;
	u_short		cfg_trk;
	u_char		cfg_ilv;
	u_char		cfg_sof;
	u_short		cfg_psm;
	u_short		cfg_shd;
	u_char		cfg_2[2];
	u_short		cfg_pcom;
	u_char		cfg_3;
	u_char		cfg_ssr;
	u_short		cfg_rwcc;
	u_short		cfg_ecc;
	u_short		cfg_eatm;
	u_short		cfg_eprm;
	u_short		cfg_eatw;
	u_char		cfg_gpb1;
	u_char		cfg_gpb2;
	u_char		cfg_gpb3;
	u_char		cfg_gpb4;
	u_char		cfg_ssc;
	u_char		cfg_runit;
	u_short		cfg_rsvc1;
	u_short		cfg_rsvc2;
	u_long		magic2;
	u_char		cfg_4[192];
};
#endif	/* _MACHINE_DISKLABEL_H_ */
@


1.12
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.11 2007/06/20 18:15:45 deraadt Exp $	*/
@


1.11
log
@b_cylinder does not need to be set on the callpath down into drivers.
cpu_disklabel can go away, since nothing anymore needs to use it; ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.10 2007/06/18 17:11:06 deraadt Exp $	*/
d31 2
a32 2
#ifndef _MVME68K_DISKLABEL_H_
#define _MVME68K_DISKLABEL_H_
d135 1
a135 1
#endif	/* _MVME68K_DISKLABEL_H_ */
@


1.10
log
@move comment to right place
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.9 2007/06/17 00:27:27 deraadt Exp $	*/
a36 3

struct cpu_disklabel {
};
@


1.9
log
@significantly simplified disklabel infrastructure.  MBR handling becomes MI
to support hotplug media on most architectures.  disklabel setup and
verification done using new helper functions.  Disklabels must *always*
have a correct checksum now.  Same code paths are used to learn on-disk
location disklabels, to avoid new errors sneaking in.  Tested on almost all
cases, testing help from todd, kettenis, krw, otto, dlg, robert, gwk, drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.8 2003/06/03 21:09:01 deraadt Exp $	*/
d38 3
d42 1
a42 1
 * a cpu_disklabel is a disklabel that the bug (prom) can understand
d44 1
a44 1
 * case the first two bug blocks make up the cpu_disklabel (which is 512
d48 2
a49 2
 *   block 0  = the volume ID block  (part of cpu_disklabel)
 *   block 1  = media configuration area (part of cpu_disklabel)
d56 1
a56 1
 * disksubr.c translates between cpu_disklabel and BSD disklabel.
a61 3
struct cpu_disklabel {
};

@


1.8
log
@terms 3 & 4 cleanup based on "terms" file
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.7 2003/02/24 22:13:09 miod Exp $	*/
a36 1
#define RAW_PART	2			/* raw partition: xx?c */
d59 2
d62 1
a62 1
struct cpu_disklabel {
@


1.7
log
@Do not redefine stuff already in <sys/disklabel.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.6 2000/04/07 13:39:01 deraadt Exp $	*/
d16 1
a16 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *   This product includes software developed by Dale Rahn.
 * 4. The name of the author may not be used to endorse or promote products
@


1.6
log
@add DISKMINOR(), and repair redefinitions
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.5 1997/03/31 00:24:00 downsj Exp $	*/
a36 5
/* number of boot pieces , ie xxboot bootxx */
#define NUMBOOT		2

#define	PARTITIONSHIFT	4

d39 1
a39 1
#define MAXPARTITIONS	(1 << PARTITIONSHIFT)	/* number of partitions */
a40 7

/* 
 * used to encode disk minor numbers
 * this should probably be moved to sys/disklabel.h
 */
#define DISKUNIT(dev)	(minor(dev) / MAXPARTITIONS)
#define DISKPART(dev)	(minor(dev) % MAXPARTITIONS)
@


1.6.10.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 5
d44 1
a44 1
#define MAXPARTITIONS	16			/* number of partitions */
d46 7
@


1.5
log
@Modernize OpenBSD/mvme68k to match various changes in m68k and hp300 code.

Compiles, but untested for lack of hardware.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a52 2
#define MAKEDISKDEV(maj, unit, part) \
    (makedev((maj), ((unit) * MAXPARTITIONS) + (part)))
@


1.5.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.6 2000/04/07 13:39:01 deraadt Exp $	*/
d53 2
@


1.5.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 5
d44 1
a44 1
#define MAXPARTITIONS	16			/* number of partitions */
d46 7
@


1.5.14.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.5.14.2 2003/03/27 23:32:17 niklas Exp $	*/
d16 4
a19 1
 * 3. The name of the author may not be used to endorse or promote products
@


1.4
log
@The original disklabel code from dale had an unaligned-aligned problem
in it. This new code from rahnds and nivas will read either style of
disklabel and hence will work on the mvme88k as well.
@
text
@d1 2
d34 2
a35 2
#ifndef _MACHINE_DISKLABEL_H_
#define _MACHINE_DISKLABEL_H_
d154 1
a154 1
#endif _MACHINE_DISKLABEL_H_
@


1.3
log
@add some documentation
add some predefined constants so that the kernel can generate valid
bootblocks without help from 'wrtvid'
@
text
@a0 2
/*	$OpenBSD$ */

d2 1
d36 1
a36 1
#define NUMBOOT		0
d71 3
d78 33
a110 41
	u_char  vid_id[4];	/* volume ID */
#define VID_ID		"NBSD"
	u_char  vid_0[16];
	u_int   vid_oss;	/* starting block # of bootstrap */
#define VID_OSS		2
	u_short	vid_osl;	/* bootstrap length (30 blocks) */
#define VID_OSL		30
	u_char	vid_1[4];
	u_short	vid_osa_u;	/* bootstrap start address (upper) */
	u_short	vid_osa_l;	/* bootstrap start address (lower) */
#define VID_OSA		0x3f0000	/* MUST match bootstrap code */
#define VID_OSAU	((VID_OSA >> 16) & 0xffff)
#define VID_OSAL	(VID_OSA & 0xffff)
	u_char	vid_2[2];
	u_short	partitions;
	u_char	vid_vd[16];
	u_long	bbsize;
	u_long	magic1;		/* 4 */
	u_short	type;		/* 2 */
	u_short	subtype;	/* 2 */
	u_char	packname[16];	/* 16 */
	u_long	flags;		/* 4 */
	u_long	drivedata[5];	/* 4 */
	u_long	spare[5];	/* 4 */
	u_short	checksum;	/* 2 */

	u_long	secpercyl;	/* 4 */
	u_long	secperunit;	/* 4 */
	u_long	headswitch;	/* 4 */

	u_char	vid_3[4];
	u_int	vid_cas;	/* block # of CFG area, hardwired at 1 */
#define VID_CAS		1
	u_char	vid_cal;	/* length of CFG area, in blocks (1) */
#define VID_CAL		1
	u_char	vid_4_0[3];
	u_char	vid_4[64];
	u_char	vid_4_1[28];
	u_long	sbsize;
	u_char	vid_mot[8];	/* must contain "MOTOROLA" */
#define VID_MOT		"MOTOROLA"
d113 38
a150 40
	u_char	cfg_0[4];
	u_short	cfg_atm;
	u_short	cfg_prm;
	u_short	cfg_atw;
	u_short	cfg_rec;	/* block size (256) */
#define	CFG_REC		256

	u_short	sparespertrack;
	u_short	sparespercyl;
	u_long	acylinders;
	u_short	rpm;
	u_short	cylskew;

	u_char	cfg_spt;
	u_char	cfg_hds;
	u_short	cfg_trk;
	u_char	cfg_ilv;
	u_char	cfg_sof;
	u_short	cfg_psm;	/* physical sector size (512) */
#define CFG_PSM		512
	u_short	cfg_shd;
	u_char	cfg_2[2];
	u_short	cfg_pcom;
	u_char	cfg_3;
	u_char	cfg_ssr;
	u_short	cfg_rwcc;
	u_short	cfg_ecc;
	u_short	cfg_eatm;
	u_short	cfg_eprm;
	u_short	cfg_eatw;
	u_char	cfg_gpb1;
	u_char	cfg_gpb2;
	u_char	cfg_gpb3;
	u_char	cfg_gpb4;
	u_char	cfg_ssc;
	u_char	cfg_runit;
	u_short	cfg_rsvc1;
	u_short	cfg_rsvc2;
	u_long	magic2;
	u_char	cfg_4[192];
@


1.2
log
@add OpenBSD header
@
text
@d37 1
a37 1
#define NUMBOOT		2
d55 19
d76 41
a116 32
	u_char		vid_id[4];
	u_char		vid_0[16];
	u_int		vid_oss;
	u_short		vid_osl;
	u_char		vid_1[4];
	u_short		vid_osa_u;
	u_short		vid_osa_l;
	u_char		vid_2[2];
	u_short		partitions;
	u_char		vid_vd[16];
	u_long		bbsize;
	u_long		magic1;		/* 4 */
	u_short		type;		/* 2 */
	u_short		subtype;	/* 2 */
	u_char		packname[16];	/* 16 */
	u_long		flags;		/* 4 */
	u_long		drivedata[5];	/* 4 */
	u_long		spare[5];	/* 4 */
	u_short		checksum;	/* 2 */

	u_long		secpercyl;	/* 4 */
	u_long		secperunit;	/* 4 */
	u_long		headswitch;	/* 4 */

	u_char		vid_3[4];
	u_int		vid_cas;
	u_char		vid_cal;
	u_char		vid_4_0[3];
	u_char		vid_4[64];
	u_char		vid_4_1[28];
	u_long		sbsize;
	u_char		vid_mot[8];
d119 40
a158 38
	u_char		cfg_0[4];
	u_short		cfg_atm;
	u_short		cfg_prm;
	u_short		cfg_atw;
	u_short		cfg_rec;

	u_short		sparespertrack;
	u_short		sparespercyl;
	u_long		acylinders;
	u_short		rpm;
	u_short		cylskew;

	u_char		cfg_spt;
	u_char		cfg_hds;
	u_short		cfg_trk;
	u_char		cfg_ilv;
	u_char		cfg_sof;
	u_short		cfg_psm;
	u_short		cfg_shd;
	u_char		cfg_2[2];
	u_short		cfg_pcom;
	u_char		cfg_3;
	u_char		cfg_ssr;
	u_short		cfg_rwcc;
	u_short		cfg_ecc;
	u_short		cfg_eatm;
	u_short		cfg_eprm;
	u_short		cfg_eatw;
	u_char		cfg_gpb1;
	u_char		cfg_gpb2;
	u_char		cfg_gpb3;
	u_char		cfg_gpb4;
	u_char		cfg_ssc;
	u_char		cfg_runit;
	u_short		cfg_rsvc1;
	u_short		cfg_rsvc2;
	u_long		magic2;
	u_char		cfg_4[192];
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: disklabel.h,v 1.1.1.1 1995/07/25 23:12:14 chuck Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994 Christopher G. Demetriou
d6 1
a6 1
 *
d17 1
a17 1
 *      This product includes software developed by Christopher G. Demetriou.
d19 1
a19 1
 *    derived from this software without specific prior written permission
d31 1
a31 1
 */
d36 18
a53 4
#define	LABELSECTOR	0			/* sector containing label */
#define	LABELOFFSET	64			/* offset of label in sector */
#define	MAXPARTITIONS	8			/* number of partitions */
#define	RAW_PART	2			/* raw partition: xx?c */
a54 1
/* Just a dummy */
d56 73
a128 1
	int	cd_dummy;			/* must have one element. */
d130 1
a130 2

#endif /* _MACHINE_DISKLABEL_H_ */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d1 2
d4 1
a4 1
 * Copyright (c) 1995 Dale Rahn.
d6 1
a6 1
 *   
d17 1
a17 1
 *   This product includes software developed by Dale Rahn.
d19 1
a19 1
 *    derived from this software without specific prior written permission.
d31 1
a31 1
 */  
d36 4
a39 18
/* number of boot pieces , ie xxboot bootxx */
#define NUMBOOT		2

#define	PARTITIONSHIFT	4

#define LABELSECTOR     0                       /* sector containing label */
#define LABELOFFSET	0			/* offset of label in sector */
#define MAXPARTITIONS	(1 << PARTITIONSHIFT)	/* number of partitions */
#define RAW_PART	2			/* raw partition: xx?c */

/* 
 * used to encode disk minor numbers
 * this should probably be moved to sys/disklabel.h
 */
#define DISKUNIT(dev)	(minor(dev) / MAXPARTITIONS)
#define DISKPART(dev)	(minor(dev) % MAXPARTITIONS)
#define MAKEDISKDEV(maj, unit, part) \
    (makedev((maj), ((unit) * MAXPARTITIONS) + (part)))
d41 1
d43 2
a44 33
	/* VID */
	u_char		vid_id[4];
	u_char		vid_0[16];
	u_int		vid_oss;
	u_short		vid_osl;
	u_char		vid_1[4];
	u_short		vid_osa_u;
	u_short		vid_osa_l;
	u_char		vid_2[2];
	u_short		partitions;
	u_char		vid_vd[16];
	u_long		bbsize;
	u_long		magic1;		/* 4 */
	u_short		type;		/* 2 */
	u_short		subtype;	/* 2 */
	u_char		packname[16];	/* 16 */
	u_long		flags;		/* 4 */
	u_long		drivedata[5];	/* 4 */
	u_long		spare[5];	/* 4 */
	u_short		checksum;	/* 2 */

	u_long		secpercyl;	/* 4 */
	u_long		secperunit;	/* 4 */
	u_long		headswitch;	/* 4 */

	u_char		vid_3[4];
	u_int		vid_cas;
	u_char		vid_cal;
	u_char		vid_4_0[3];
	u_char		vid_4[64];
	u_char		vid_4_1[28];
	u_long		sbsize;
	u_char		vid_mot[8];
d46 1
a46 41
	/* CFG */
	u_char		cfg_0[4];
	u_short		cfg_atm;
	u_short		cfg_prm;
	u_short		cfg_atw;
	u_short		cfg_rec;

	u_short		sparespertrack;
	u_short		sparespercyl;
	u_long		acylinders;
	u_short		rpm;
	u_short		cylskew;

	u_char		cfg_spt;
	u_char		cfg_hds;
	u_short		cfg_trk;
	u_char		cfg_ilv;
	u_char		cfg_sof;
	u_short		cfg_psm;
	u_short		cfg_shd;
	u_char		cfg_2[2];
	u_short		cfg_pcom;
	u_char		cfg_3;
	u_char		cfg_ssr;
	u_short		cfg_rwcc;
	u_short		cfg_ecc;
	u_short		cfg_eatm;
	u_short		cfg_eprm;
	u_short		cfg_eatw;
	u_char		cfg_gpb1;
	u_char		cfg_gpb2;
	u_char		cfg_gpb3;
	u_char		cfg_gpb4;
	u_char		cfg_ssc;
	u_char		cfg_runit;
	u_short		cfg_rsvc1;
	u_short		cfg_rsvc2;
	u_long		magic2;
	u_char		cfg_4[192];
};
#endif _MACHINE_DISKLABEL_H_
@
