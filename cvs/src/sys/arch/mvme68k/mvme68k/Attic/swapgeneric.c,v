head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.4
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.20
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2003.05.23.22.27.43;	author tedu;	state dead;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.38;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.29.18.40.32;	author miod;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	96.11.06.01.45.05;	author deraadt;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	96.04.28.10.59.12;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.30.22.53.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.07.08.50.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.13;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.13;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.42.51;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.10.31.03.01.17;	author nate;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2002.03.28.10.34.06;	author niklas;	state Exp;
branches;
next	1.5.14.3;

1.5.14.3
date	2003.06.07.11.13.16;	author ho;	state dead;
branches;
next	;

1.6.4.1
date	2002.06.11.03.36.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove old swapgeneric.c's
@
text
@/*	$OpenBSD: swapgeneric.c,v 1.7 2002/03/14 01:26:38 millert Exp $ */

/*-
 * Copyright (c) 1994
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)swapgeneric.c       8.2 (Berkeley) 3/21/94
 */

/*
 * fake swapgeneric.c -- should do this differently.
 */

#include <sys/param.h>
#include <sys/conf.h>

int (*mountroot)(void) = NULL;	/* tells autoconf.c that we are "generic" */

dev_t	rootdev = NODEV;
dev_t	dumpdev = NODEV;

struct	swdevt swdevt[] = {
	{ NODEV, 0, 0 },	/* to be filled in */
	{ NODEV, 0, 0 }
};
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.6 2001/09/29 18:40:32 miod Exp $ */
@


1.6
log
@The "swap generic" configuration needs only two entries in swdevt[].
So shrink it when necessary, and remove unwanted stuff as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.5 1996/11/06 01:45:05 deraadt Exp $ */
d45 1
a45 1
int (*mountroot) __P((void)) = NULL;	/* tells autoconf.c that we are "generic" */
@


1.6.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.6 2001/09/29 18:40:32 miod Exp $ */
d45 1
a45 1
int (*mountroot)(void) = NULL;	/* tells autoconf.c that we are "generic" */
@


1.5
log
@repair mountroot type
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a43 1
#include <machine/disklabel.h>
d51 1
a51 8
	{ makedev(4, 0*MAXPARTITIONS+1), 0, 0 },	/* sd0b */
	{ makedev(4, 1*MAXPARTITIONS+1), 0, 0 },	/* sd1b */
	{ makedev(4, 2*MAXPARTITIONS+1), 0, 0 },	/* sd2b */
	{ makedev(4, 3*MAXPARTITIONS+1), 0, 0 },	/* sd3b */
	{ makedev(4, 4*MAXPARTITIONS+1), 0, 0 },	/* sd4b */
	{ makedev(4, 5*MAXPARTITIONS+1), 0, 0 },	/* sd5b */
	{ makedev(4, 6*MAXPARTITIONS+1), 0, 0 },	/* sd6b */
	{ makedev(4, 7*MAXPARTITIONS+1), 0, 0 },	/* sd7b */
@


1.5.14.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.5 1996/11/06 01:45:05 deraadt Exp $ */
d44 1
d52 8
a59 1
	{ NODEV, 0, 0 },	/* to be filled in */
@


1.5.14.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d45 1
a45 1
int (*mountroot)(void) = NULL;	/* tells autoconf.c that we are "generic" */
@


1.5.14.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.5.14.2 2002/03/28 10:34:06 niklas Exp $ */
@


1.4
log
@add OpenBSD header
@
text
@d46 1
a46 1
int (*mountroot)() = NULL;	/* tells autoconf.c that we are "generic" */
@


1.3
log
@in actual fact MAXPARTITIONS is 16 and scsi disk is major 4
@
text
@d1 1
a1 1
/*	$Id: swapgeneric.c,v 1.2 1995/11/07 08:50:25 deraadt Exp $ */
@


1.2
log
@$Id$ throughout
update many copyrights
@
text
@d1 1
a1 1
/*	$Id$ */
d44 1
d52 8
a59 1
	{ makedev(7, 1), 0, 0 },	/* sd0b */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: swapgeneric.c,v 1.1.1.1 1995/07/25 23:12:00 chuck Exp $	*/
d3 3
a5 3
/*
 * Copyright (c) 1982, 1986 Regents of the University of California.
 * All rights reserved.
d17 2
a18 2
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
d35 5
a39 1
 *	@@(#)swapgeneric.c	7.5 (Berkeley) 5/7/91
a43 4
#include <sys/buf.h>
#include <sys/systm.h>
#include <sys/reboot.h>
#include <sys/device.h>
d45 2
a46 3
/*
 * Generic configuration;  all in one
 */
a47 1
dev_t	argdev = NODEV;
d49 1
a49 1
int	nswap;
d51 2
a52 18
	{ -1,	1,	0 },
	{ 0,	0,	0 },
};
int	dmmin, dmmax, dmtext;

extern	struct cfdriver sdcd;
extern	struct cfdriver wdcd;
extern	struct cfdriver idcd;

struct	genericconf {
    struct cfdriver *gc_driver;
    char	*gc_name;
    dev_t	gc_root;
} genericconf[] = {
    { &sdcd,	"sd",	makedev(1, 0),	},
    { &wdcd,	"wd",	makedev(2, 0),	},
    { &idcd,	"id",	makedev(4, 0),	},
    { 0 },
a53 99

extern int ffs_mountroot();
int (*mountroot)() = ffs_mountroot;

setconf()
{
	register struct genericconf *gc;
	register struct bus_device *device;
	register char *cp;
	int unit, swaponroot = 0;

	if (rootdev != NODEV)
		goto doswap;
	unit = 0;
	if (boothowto & RB_ASKNAME) {
		char name[128];
retry:
		printf("root device? ");
		gets(name);
		for (gc = genericconf; gc->gc_driver; gc++)
			if (gc->gc_name[0] == name[0] &&
			    gc->gc_name[1] == name[1])
				goto gotit;
		printf("use one of:");
		for (gc = genericconf; gc->gc_driver; gc++)
			printf(" %s%%d", gc->gc_name);
		printf("\n");
		goto retry;
gotit:
		cp = &name[2];
		if (*cp < '0' || *cp > '9') {
			printf("bad/missing unit number\n");
			goto retry;
		}
		while (*cp >= '0' && *cp <= '9')
			unit = 10 * unit + *cp++ - '0';
		if (*cp == '*')
			swaponroot++;
		goto found;
	}
	for (gc = genericconf; gc->gc_driver; gc++) {
		for (cfp = cfdata; cfp->cf_driver; ++cfp) {
			if (cfp->state == FSTATE_FOUND && cfp->unit == 0
			    && cfp->cf_driver == gc->gc_driver) {
				printf("root on %s0\n", device->name);
				goto found;
			}
		}
	}
	printf("no suitable root\n");
	asm("stop #0x2700");
found:
	gc->gc_root = makedev(major(gc->gc_root), unit*8);
	rootdev = gc->gc_root;
doswap:
	swdevt[0].sw_dev = argdev = dumpdev =
	    makedev(major(rootdev), minor(rootdev)+1);
	/* swap size and dumplo set during autoconfigure */
	if (swaponroot)
		rootdev = dumpdev;
}

gets(cp)
	char *cp;
{
	register char *lp;
	register c;

	lp = cp;
	for (;;) {
		cnputc(c = cngetc());
		switch (c) {
		case '\n':
		case '\r':
			*lp++ = '\0';
			return;
		case '\b':
		case '\177':
			if (lp > cp) {
				lp--;
				cnputc(' ');
				cnputc('\b');
			}
			continue;
		case '#':
			lp--;
			if (lp < cp)
				lp = cp;
			continue;
		case '@@':
		case 'u'&037:
			lp = cp;
			cnputc('\n');
			continue;
		default:
			*lp++ = c;
		}
	}
}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d1 1
a1 1
/*	$NetBSD: swapgeneric.c,v 1.7 1995/02/16 21:42:52 pk Exp $ */
d3 3
a5 3
/*-
 * Copyright (c) 1994
 *      The Regents of the University of California.  All rights reserved.
d17 2
a18 2
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
d35 1
a35 5
 *      @@(#)swapgeneric.c       8.2 (Berkeley) 3/21/94
 */

/*
 * fake swapgeneric.c -- should do this differently.
d40 4
d45 3
a47 2
int (*mountroot)() = NULL;	/* tells autoconf.c that we are "generic" */

d49 1
d51 6
d58 13
a70 3
struct	swdevt swdevt[] = {
	{ makedev(7, 1), 0, 0 },	/* sd0b */
	{ NODEV, 0, 0 }
d72 99
@
