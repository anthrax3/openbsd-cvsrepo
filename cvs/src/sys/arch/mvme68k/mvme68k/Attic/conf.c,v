head	1.57;
access;
symbols
	OPENBSD_5_5:1.56.0.4
	OPENBSD_5_5_BASE:1.56
	OPENBSD_5_4:1.55.0.2
	OPENBSD_5_4_BASE:1.55
	OPENBSD_5_3:1.54.0.2
	OPENBSD_5_3_BASE:1.54
	OPENBSD_5_2:1.53.0.4
	OPENBSD_5_2_BASE:1.53
	OPENBSD_5_1_BASE:1.53
	OPENBSD_5_1:1.53.0.2
	OPENBSD_5_0:1.52.0.4
	OPENBSD_5_0_BASE:1.52
	OPENBSD_4_9:1.52.0.2
	OPENBSD_4_9_BASE:1.52
	OPENBSD_4_8:1.49.0.2
	OPENBSD_4_8_BASE:1.49
	OPENBSD_4_7:1.47.0.2
	OPENBSD_4_7_BASE:1.47
	OPENBSD_4_6:1.46.0.4
	OPENBSD_4_6_BASE:1.46
	OPENBSD_4_5:1.44.0.2
	OPENBSD_4_5_BASE:1.44
	OPENBSD_4_4:1.43.0.2
	OPENBSD_4_4_BASE:1.43
	OPENBSD_4_3:1.41.0.4
	OPENBSD_4_3_BASE:1.41
	OPENBSD_4_2:1.41.0.2
	OPENBSD_4_2_BASE:1.41
	OPENBSD_4_1:1.38.0.4
	OPENBSD_4_1_BASE:1.38
	OPENBSD_4_0:1.38.0.2
	OPENBSD_4_0_BASE:1.38
	OPENBSD_3_9:1.37.0.10
	OPENBSD_3_9_BASE:1.37
	OPENBSD_3_8:1.37.0.8
	OPENBSD_3_8_BASE:1.37
	OPENBSD_3_7:1.37.0.6
	OPENBSD_3_7_BASE:1.37
	OPENBSD_3_6:1.37.0.4
	OPENBSD_3_6_BASE:1.37
	SMP_SYNC_A:1.37
	SMP_SYNC_B:1.37
	OPENBSD_3_5:1.37.0.2
	OPENBSD_3_5_BASE:1.37
	OPENBSD_3_4:1.34.0.2
	OPENBSD_3_4_BASE:1.34
	UBC_SYNC_A:1.32
	OPENBSD_3_3:1.31.0.2
	OPENBSD_3_3_BASE:1.31
	OPENBSD_3_2:1.30.0.2
	OPENBSD_3_2_BASE:1.30
	OPENBSD_3_1:1.25.0.4
	OPENBSD_3_1_BASE:1.25
	UBC_SYNC_B:1.30
	UBC:1.25.0.2
	UBC_BASE:1.25
	OPENBSD_3_0:1.24.0.2
	OPENBSD_3_0_BASE:1.24
	OPENBSD_2_9:1.20.0.4
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_8:1.20.0.2
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.19.0.10
	OPENBSD_2_7_BASE:1.19
	SMP:1.19.0.8
	SMP_BASE:1.19
	kame_19991208:1.19
	OPENBSD_2_6:1.19.0.6
	OPENBSD_2_6_BASE:1.19
	OPENBSD_2_5:1.19.0.4
	OPENBSD_2_5_BASE:1.19
	OPENBSD_2_4:1.19.0.2
	OPENBSD_2_4_BASE:1.19
	OPENBSD_2_3:1.17.0.2
	OPENBSD_2_3_BASE:1.17
	OPENBSD_2_2:1.16.0.4
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.16.0.2
	OPENBSD_2_1_BASE:1.16
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	theo-1:1.1.1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.57
date	2014.03.18.22.36.34;	author miod;	state dead;
branches;
next	1.56;

1.56
date	2013.12.01.21.56.42;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2013.06.03.17.33.58;	author tedu;	state Exp;
branches;
next	1.54;

1.54
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.51;

1.51
date	2010.11.22.21.10.45;	author miod;	state Exp;
branches;
next	1.50;

1.50
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.49;

1.49
date	2010.07.03.03.59.17;	author krw;	state Exp;
branches;
next	1.48;

1.48
date	2010.06.09.15.25.33;	author jsing;	state Exp;
branches;
next	1.47;

1.47
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.46;

1.46
date	2009.06.03.14.45.52;	author jj;	state Exp;
branches;
next	1.45;

1.45
date	2009.03.01.21.40.49;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2009.01.25.17.30.49;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2008.05.14.20.49.48;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.41;

1.41
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.40;

1.40
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.39;

1.39
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2006.04.21.22.21.54;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2004.02.10.01.31.21;	author millert;	state Exp;
branches;
next	1.36;

1.36
date	2003.09.26.06.58.04;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2003.09.23.16.51.11;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	2003.06.02.23.27.50;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	2003.06.02.05.09.14;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2003.05.14.00.20.37;	author tedu;	state Exp;
branches;
next	1.31;

1.31
date	2002.12.05.02.49.55;	author kjc;	state Exp;
branches;
next	1.30;

1.30
date	2002.07.10.22.08.47;	author mickey;	state Exp;
branches;
next	1.29;

1.29
date	2002.05.16.21.11.15;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2002.04.28.14.48.29;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2002.04.28.01.05.44;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2002.04.27.23.21.05;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2001.12.11.23.19.02;	author miod;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2001.09.28.02.53.13;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	2001.08.06.22.34.44;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	2001.06.27.06.56.29;	author kjc;	state Exp;
branches;
next	1.21;

1.21
date	2001.06.25.03.20.05;	author kjell;	state Exp;
branches;
next	1.20;

1.20
date	2000.09.26.14.03.53;	author art;	state Exp;
branches;
next	1.19;

1.19
date	98.09.25.09.20.53;	author todd;	state Exp;
branches
	1.19.8.1;
next	1.18;

1.18
date	98.08.24.05.29.57;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.11.23.05.21.56;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	97.02.12.01.50.28;	author rahnds;	state Exp;
branches;
next	1.15;

1.15
date	97.02.11.14.51.28;	author rahnds;	state Exp;
branches;
next	1.14;

1.14
date	97.01.27.19.50.04;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	96.12.11.20.15.43;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.11.11.20.35.01;	author kstailey;	state Exp;
branches;
next	1.11;

1.11
date	96.11.06.01.45.18;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.10.19.13.26.09;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	96.08.29.09.26.16;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.07.15.14.57.04;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.05.27.21.58.36;	author chuck;	state Exp;
branches;
next	1.6;

1.6
date	96.05.04.18.50.49;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.04.28.10.58.09;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.02.21.12.53.48;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.01.07.07.41.05;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	95.11.07.08.50.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.12;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	95.10.18.10.42.34;	author deraadt;	state Exp;
branches;
next	;

1.19.8.1
date	2001.04.18.16.10.37;	author niklas;	state Exp;
branches;
next	1.19.8.2;

1.19.8.2
date	2001.07.04.10.19.34;	author niklas;	state Exp;
branches;
next	1.19.8.3;

1.19.8.3
date	2001.10.31.03.01.17;	author nate;	state Exp;
branches;
next	1.19.8.4;

1.19.8.4
date	2002.03.06.01.07.00;	author niklas;	state Exp;
branches;
next	1.19.8.5;

1.19.8.5
date	2003.03.27.23.32.17;	author niklas;	state Exp;
branches;
next	1.19.8.6;

1.19.8.6
date	2003.05.16.00.29.39;	author niklas;	state Exp;
branches;
next	1.19.8.7;

1.19.8.7
date	2003.06.07.11.13.15;	author ho;	state Exp;
branches;
next	1.19.8.8;

1.19.8.8
date	2004.02.19.10.49.05;	author niklas;	state Exp;
branches;
next	1.19.8.9;

1.19.8.9
date	2004.06.05.23.10.53;	author niklas;	state Exp;
branches;
next	;

1.25.2.1
date	2002.06.11.03.36.50;	author art;	state Exp;
branches;
next	1.25.2.2;

1.25.2.2
date	2002.10.29.00.28.07;	author art;	state Exp;
branches;
next	1.25.2.3;

1.25.2.3
date	2003.05.19.21.45.32;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.57
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: conf.c,v 1.56 2013/12/01 21:56:42 miod Exp $ */

/*-
 * Copyright (c) 1995 Theo de Raadt
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)conf.c	7.9 (Berkeley) 5/28/91
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/vnode.h>

#include <machine/conf.h>

#include "st.h"
#include "sd.h"
#include "cd.h"
#include "ch.h"
#include "uk.h"
#ifdef notyet
#include "xd.h"
bdev_decl(xd);
#endif
#include "vnd.h"
#include "rd.h"

struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0 */
	bdev_notdef(),			/* 1 */
	bdev_notdef(),			/* 2 */
	bdev_swap_init(1,sw),		/* 3: swap pseudo-device */
	bdev_disk_init(NSD,sd),		/* 4: SCSI disk */
	bdev_notdef(),			/* 5: was: concatenated disk driver */
	bdev_disk_init(NVND,vnd),	/* 6: vnode disk driver */
	bdev_tape_init(NST,st),		/* 7: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 8: SCSI CD-ROM */
	bdev_disk_init(NRD,rd),		/* 9: RAM disk - for install tape */
#ifdef notyet
	bdev_disk_init(NXD,xd),		/* 10: XD disk */
#else
	bdev_notdef(),			/* 10 */
#endif
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
	bdev_lkm_dummy(),		/* 13 */
	bdev_lkm_dummy(),		/* 14 */
	bdev_lkm_dummy(),		/* 15 */
	bdev_lkm_dummy(),		/* 16 */
	bdev_lkm_dummy(),		/* 17 */
	bdev_lkm_dummy(),		/* 18 */
};
int	nblkdev = nitems(bdevsw);

#include "sram.h"
#include "vmel.h"
#include "vmes.h"
#include "nvram.h"
#include "flash.h"

#include "bio.h"
#include "pty.h"
cdev_decl(fd);

#include "cl.h"
#include "dart.h"
#include "wl.h"
#include "zs.h"
#include "zstty.h"

/* open, close, write, ioctl */
#define	cdev_lp_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }

/* open, close, ioctl, mmap, ioctl */
#define	cdev_mdev_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
	dev_init(c,n,mmap) }

#include "lp.h"
#include "lptwo.h"
cdev_decl(lptwo);
#include "ksyms.h"

#ifdef notyet
cdev_decl(xd);
#endif

#include "bpfilter.h"
#include "tun.h"

#include "pf.h"

#include "systrace.h"

#include "vscsi.h"
#include "pppx.h"
#include "fuse.h"

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_notdef(),			/* 3 was /dev/drum */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_mdev_init(NSRAM,sram),	/* 7: /dev/sramX */
	cdev_disk_init(NSD,sd),		/* 8: SCSI disk */
	cdev_disk_init(NCD,cd),		/* 9: SCSI CD-ROM */
	cdev_mdev_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
	cdev_mdev_init(NFLASH,flash),	/* 11: /dev/flashX */
	cdev_tty_init(NZSTTY,zs),	/* 12: SCC serial (tty[a-d]) */
	cdev_tty_init(NCL,cl),		/* 13: CL-CD2400 serial (tty0[0-3]) */
	cdev_tty_init(NDART,dart),	/* 14: MC68681 serial (ttyd[0-1]) */
	cdev_notdef(),			/* 15 */
	cdev_notdef(),			/* 16 */
	cdev_notdef(),			/* 17: was: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk device */
	cdev_disk_init(NVND,vnd),	/* 19: vnode disk */
	cdev_tape_init(NST,st),		/* 20: SCSI tape */
	cdev_fd_init(1,filedesc),	/* 21: file descriptor pseudo-dev */
	cdev_bpf_init(NBPFILTER,bpf),	/* 22: berkeley packet filter */
	cdev_tun_init(NTUN,tun),	/* 23: network tunnel */
	cdev_lkm_init(NLKM,lkm),	/* 24: loadable module driver */
	cdev_notdef(),			/* 25 */
#ifdef notyet
	cdev_disk_init(NXD,xd),		/* 26: XD disk */
#else
	cdev_notdef(),			/* 26 */
#endif
	cdev_bio_init(NBIO,bio),	/* 27: ioctl tunnel */
	cdev_lp_init(NLP,lp),		/* 28: lp */
	cdev_lp_init(NLPTWO,lptwo),	/* 29: lptwo */
	cdev_tty_init(NWL,wl),		/* 30: WG CL-CD2400 serial (ttywX) */
	cdev_mdev_init(NVMEL,vmel),	/* 31: /dev/vmelX */
	cdev_mdev_init(NVMES,vmes),	/* 32: /dev/vmesX */
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
	cdev_lkm_dummy(),		/* 35 */
	cdev_lkm_dummy(),		/* 36 */
	cdev_lkm_dummy(),		/* 37 */
	cdev_lkm_dummy(),		/* 38 */
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
	cdev_random_init(1,random),	/* 40: random data source */
	cdev_uk_init(NUK,uk),		/* 41: unknown SCSI */
	cdev_notdef(),			/* 42 */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 43: Kernel symbols device */
	cdev_ch_init(NCH,ch),		/* 44: SCSI autochanger */
	cdev_lkm_dummy(),		/* 45 */
	cdev_lkm_dummy(),		/* 46 */
	cdev_lkm_dummy(),		/* 47 */
	cdev_lkm_dummy(),		/* 48 */
	cdev_lkm_dummy(),		/* 49 */
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
	cdev_lkm_dummy(),		/* 51 */
	cdev_ptm_init(NPTY,ptm),	/* 52: pseudo-tty ptm device */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 53: vscsi */
	cdev_disk_init(1,diskmap),	/* 54: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 55: pppx */
	cdev_notdef(),			/* 56: hotplug on hp300 */
	cdev_fuse_init(NFUSE,fuse),	/* 57: fuse */
};
int	nchrdev = nitems(cdevsw);

int	mem_no = 2; 	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(3, 0);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) < 2);
}

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) == 12);
}

dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

int chrtoblktbl[] = {
	/* XXXX This needs to be dynamic for LKMs. */
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	NODEV,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	4,		/* sd */
	/*  9 */	8,		/* cd */
	/* 10 */	NODEV,
	/* 11 */	NODEV,
	/* 12 */	NODEV,
	/* 13 */	NODEV,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	9,		/* rd */
	/* 19 */	6,		/* vnd */
	/* 20 */	7,		/* st */
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	10,		/* xd */
};
int nchrtoblktbl = nitems(chrtoblktbl);

#include <dev/cons.h>

#define clcnpollc	nullcnpollc
cons_decl(cl);
#define dartcnpollc	nullcnpollc
cons_decl(dart);
#define zscnpollc	nullcnpollc
cons_decl(zs);

struct	consdev constab[] = {
#if NCL > 0
	cons_init(cl),
#endif
#if NDART > 0
	cons_init(dart),
#endif
#if NZS > 0
	cons_init(zs),
#endif
	{ 0 },
};
@


1.56
log
@switch mvme68k to the MI zs(4) driver.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.55 2013/06/03 17:33:58 tedu Exp $ */
@


1.55
log
@more fuse in more places. credit: miod
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.54 2012/08/23 06:12:49 deraadt Exp $ */
d120 1
d169 1
a169 1
	cdev_tty_init(NZS,zs),		/* 12: SCC serial (tty[a-d]) */
@


1.54
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.53 2011/10/06 20:49:28 deraadt Exp $ */
d152 1
d216 2
@


1.53
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.52 2011/01/14 19:04:08 jasper Exp $ */
a136 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a209 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 51: nnpfs communication device */
#else
a210 1
#endif
@


1.52
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.51 2010/11/22 21:10:45 miod Exp $ */
a75 1
#include "ccd.h"
d85 1
a85 1
	bdev_disk_init(NCCD,ccd),	/* 5: concatenated disk driver */
d176 1
a176 1
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk */
d287 1
a287 1
	/* 17 */	5,		/* ccd */
@


1.51
log
@Remove old comment about constab[] being eventually generated by config(8).
This has never happened and this wouldn't make much sense on anything but
hp300, if at all, nowadays.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.50 2010/09/23 05:02:14 claudio Exp $ */
d105 1
a105 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
d225 1
a225 1
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d299 1
a299 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.50
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.49 2010/07/03 03:59:17 krw Exp $ */
a300 6
/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
@


1.49
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.48 2010/06/09 15:25:33 jsing Exp $ */
d156 1
d223 1
@


1.48
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.46 2009/06/03 14:45:52 jj Exp $ */
a69 1
#include "ss.h"
d205 1
a205 1
	cdev_ss_init(NSS,ss),           /* 42: SCSI scanner */
@


1.47
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d222 1
@


1.46
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.45 2009/03/01 21:40:49 miod Exp $ */
d156 2
d221 1
@


1.45
log
@Support for MVME165 board - code written in april 2006, eventually debugged
last month.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.44 2009/01/25 17:30:49 miod Exp $ */
d139 3
a141 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d213 2
a214 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
@


1.44
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.43 2008/05/14 20:49:48 miod Exp $ */
a117 1
#include "zs.h"
d119 1
d121 1
d172 1
a172 1
	cdev_notdef(),			/* 14 */
d304 5
a308 1
#define zscnpollc      nullcnpollc
a309 2
#define clcnpollc      nullcnpollc
cons_decl(cl);
d312 6
a319 3
#endif
#if NCL > 0
	cons_init(cl),
@


1.43
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.42 2008/04/08 14:31:54 claudio Exp $ */
d160 1
a160 1
	cdev_swap_init(1,sw),		/* 3: /dev/drum (swap pseudo-device) */
@


1.42
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.41 2007/05/28 22:26:03 todd Exp $ */
d273 2
a274 2
	/*  8 */	4,		/* SCSI disk */
	/*  9 */	8,		/* SCSI CD-ROM */
d282 4
a285 4
	/* 17 */	NODEV,
	/* 18 */	9,
	/* 19 */	6,		/* vnode disk */
	/* 20 */	NODEV,
d291 1
a291 1
	/* 26 */	10,		/* XD disk */
@


1.41
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.40 2007/05/27 01:50:36 todd Exp $ */
d179 2
a180 2
	cdev_bpftun_init(NBPFILTER,bpf),/* 22: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 23: network tunnel */
@


1.40
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.39 2007/05/26 19:54:24 todd Exp $ */
d114 1
d188 1
a188 1
	cdev_notdef(),			/* 27 */
@


1.39
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.38 2006/04/21 22:21:54 miod Exp $ */
a113 1
#include "bio.h"
d170 1
a170 1
	cdev_bio_init(NBIO,bio),	/* 14: ioctl tunnel */
@


1.38
log
@Since bugtty (and BUG routines in general) can only work if we keep the BUG
mapped, and we don't, do not bother carrying this code around - it can not
be used anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.37 2004/02/10 01:31:21 millert Exp $ */
d114 1
d171 1
a171 1
	cdev_notdef(),			/* 14 */
@


1.37
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.36 2003/09/26 06:58:04 miod Exp $ */
a119 1
#include "bugtty.h"
d170 1
a170 1
	cdev_tty_init(NBUGTTY,bugtty),	/* 14: BUGtty (ttyB) */
a305 2
#define bugttycnpollc      nullcnpollc
cons_decl(bugtty);
a312 3
#endif
#if NBUGTTY > 0
	cons_init(bugtty),
@


1.36
log
@Add majors and devsw entries for the missing scsi devices on mvme*8k.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.35 2003/09/23 16:51:11 millert Exp $ */
d217 1
@


1.35
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.34 2003/06/02 23:27:50 millert Exp $ */
d205 1
a205 1
	cdev_lkm_dummy(),		/* 44 */
@


1.34
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.33 2003/06/02 05:09:14 deraadt Exp $ */
d132 1
a132 1
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
@


1.33
log
@license cleanup of my files
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32 2003/05/14 00:20:37 tedu Exp $ */
d38 1
a38 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.32
log
@add {b,c}devsw_lookup convenience functions.
move chrtoblk and blktochr into MI code.
tested on several archs and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.31 2002/12/05 02:49:55 kjc Exp $ */
a13 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Theo de Raadt for Willowglen Singapore.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.31
log
@remove altq entries.
altq is merged into pf and handled through pf.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2002/07/10 22:08:47 mickey Exp $ */
d271 1
a271 1
static int chrtoblktbl[] = {
d302 1
a302 36

/*
 * Convert a character device number to a block device number.
 */
dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev ||
	    major(dev) >= sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
}
@


1.30
log
@proper cdev_decl(ksyms), fix ksyms's broken functions
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.29 2002/05/16 21:11:15 miod Exp $ */
a162 2
#include <altq/altqconf.h>

a226 1
	cdev_altq_init(NALTQ,altq),	/* 52: ALTQ control interface */
@


1.29
log
@Add systrace support to all the remaining architectures.

Tested by various people on various platforms, I'm willing to fix any
breakage this causes.

ok niels@@ deraadt@@ and mickey@@ (after his comments were applied)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2002/04/28 14:48:29 miod Exp $ */
a152 1
cdev_decl(ksyms);
@


1.28
log
@Correctly configure ccd(4).
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 2002/04/28 01:05:44 miod Exp $ */
d166 2
d224 1
a224 1
	cdev_lkm_dummy(),		/* 50 */
@


1.27
log
@Deal with xd commented out in files.mvme68k - this went unnoticed until you
purge your kernel compile directory...
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 2002/04/27 23:21:05 miod Exp $ */
d185 2
a186 2
	cdev_notdef(),			/* 17: concatenated disk */
        cdev_disk_init(NRD,rd),         /* 18: ramdisk device */
@


1.26
log
@Jumbo commit to fix all compilation warnings on mvme68k (add prototypes,
add casts, fix a few errors and typos in the process, etc)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2001/12/11 23:19:02 miod Exp $ */
d82 1
d85 1
d102 1
d104 3
d155 1
d157 1
d194 1
d196 3
@


1.25
log
@Remove declarations that already exist in <sys/conf.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 2001/09/28 02:53:13 mickey Exp $ */
a71 1
#include <sys/conf.h>
d74 2
a111 4
#define mmread  mmrw
#define mmwrite mmrw
cdev_decl(mm);

a112 2
cdev_decl(sram);

a113 2
cdev_decl(vmel);

a114 2
cdev_decl(vmes);

a115 2
cdev_decl(nvram);

a116 1
cdev_decl(flash);
a121 1
cdev_decl(zs);
a122 1
cdev_decl(cl);
a123 1
cdev_decl(wl);
a124 2
cdev_decl(bugtty);

a139 1
cdev_decl(lp);
d236 1
d247 1
d296 1
@


1.25.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2001/12/11 23:19:02 miod Exp $ */
d72 1
a74 2
#include <machine/conf.h>

a80 1
#ifdef notyet
a82 1
#endif
a98 1
#ifdef notyet
a99 3
#else
	bdev_notdef(),			/* 10 */
#endif
d111 4
d116 2
d119 2
d122 2
d125 2
d128 1
d134 1
d136 1
d138 1
d140 2
d157 1
a166 1
#ifdef notyet
a167 1
#endif
a175 2
#include "systrace.h"

d195 2
a196 2
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk device */
a203 1
#ifdef notyet
a204 3
#else
	cdev_notdef(),			/* 26 */
#endif
d228 1
a228 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
a253 1
int
a263 1
int
a311 1
dev_t
@


1.25.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25.2.1 2002/06/11 03:36:50 art Exp $ */
d153 1
@


1.25.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d163 2
d229 1
d274 1
a274 1
int chrtoblktbl[] = {
d305 36
a340 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.24
log
@move cdev_decl(pf) into it's proper place, kill cdev_decl(ipl) at the same time
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2001/08/06 22:34:44 mickey Exp $ */
a74 2
int	ttselect	__P((dev_t, int, struct proc *));

a85 1
bdev_decl(rd);
a167 3
cdev_decl(rd);

dev_decl(filedesc,open);
a169 1

@


1.23
log
@remove vm_conf.h; art@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2001/06/27 06:56:29 kjc Exp $ */
a179 1
cdev_decl(pf);
@


1.22
log
@add the ALTQ device to the rest of the architectures.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2001/06/25 03:20:05 kjell Exp $ */
a76 1
bdev_decl(sw);
a116 1
cdev_decl(sw);
@


1.21
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2000/09/26 14:03:53 art Exp $ */
d184 2
d244 1
@


1.20
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 1998/09/25 09:20:53 todd Exp $ */
d181 2
a182 5
#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif
d225 1
a225 1
	cdev_gen_ipf(NIPF,ipl),         /* 39: IP filter */
@


1.19
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 1998/08/24 05:29:57 millert Exp $ */
d279 6
@


1.19.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2000/09/26 14:03:53 art Exp $ */
a278 6
}

dev_t
getnulldev()
{
	return makedev(mem_no, 2);
@


1.19.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19.8.1 2001/04/18 16:10:37 niklas Exp $ */
d181 5
a185 4
#include "pf.h"
cdev_decl(pf);

#include <altq/altqconf.h>
d228 1
a228 1
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
a244 1
	cdev_altq_init(NALTQ,altq),	/* 52: ALTQ control interface */
@


1.19.8.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19.8.2 2001/07/04 10:19:34 niklas Exp $ */
d77 1
d118 1
d182 1
@


1.19.8.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d75 2
d88 1
d171 3
d176 1
@


1.19.8.5
log
@Sync the SMP branch with 3.3
@
text
@d72 1
a74 2
#include <machine/conf.h>

a80 1
#ifdef notyet
a82 1
#endif
a98 1
#ifdef notyet
a99 3
#else
	bdev_notdef(),			/* 10 */
#endif
d111 4
d116 2
d119 2
d122 2
d125 2
d128 1
d134 1
d136 1
d138 1
d140 2
d157 1
d165 1
a166 1
#ifdef notyet
a167 1
#endif
d174 1
a174 1
#include "systrace.h"
d195 2
a196 2
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk device */
a203 1
#ifdef notyet
a204 3
#else
	cdev_notdef(),			/* 26 */
#endif
d228 1
a228 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
d234 1
a253 1
int
a263 1
int
a311 1
dev_t
@


1.19.8.6
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d271 1
a271 1
int chrtoblktbl[] = {
d302 36
a337 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.19.8.7
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19.8.6 2003/05/16 00:29:39 niklas Exp $ */
d14 6
d44 5
a48 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.19.8.8
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d132 1
a132 1
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
d205 1
a205 1
	cdev_ch_init(NCH,ch),		/* 44: SCSI autochanger */
@


1.19.8.9
log
@Merge with the trunk
@
text
@a216 1
	cdev_ptm_init(NPTY,ptm),	/* 52: pseudo-tty ptm device */
@


1.18
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 1997/11/23 05:21:56 mickey Exp $ */
d147 1
d165 4
d233 12
@


1.17
log
@use MI cdev_decl(ipl)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 1997/02/12 01:50:28 rahnds Exp $ */
d164 2
d227 1
@


1.16
log
@when changing a device entry slot, remove the old one.
Hope this didn't break anyone's mvme68k builds today.
this fixes the 1.15 version commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 1997/02/11 14:51:28 rahnds Exp $ */
a173 2
/* open, close, read, ioctl */
cdev_decl(ipl);
@


1.15
log
@Add ramdisk (rd) character major number, put the device in the character
to block mapping table.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 1997/01/27 19:50:04 deraadt Exp $ */
a201 1
	cdev_notdef(),			/* 18 */
@


1.14
log
@bad chr->blk mappings; randy@@rtmx.com
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 1996/12/11 20:15:43 deraadt Exp $ */
d166 1
d203 1
d285 1
a285 1
	/* 18 */	NODEV,
@


1.13
log
@add wl cdev entry
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 1996/11/11 20:35:01 kstailey Exp $ */
d274 1
a274 1
	/*  9 */	6,		/* SCSI CD-ROM */
d284 1
a284 1
	/* 19 */	8,		/* vnode disk */
@


1.12
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 1996/11/06 01:45:18 deraadt Exp $ */
d142 2
d213 1
a213 1
	cdev_notdef(),			/* 30 */
@


1.11
log
@add blktochr()
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 1996/08/29 09:26:16 deraadt Exp $ */
a78 1
bdev_decl(st);
a79 1
bdev_decl(sd);
a80 1
bdev_decl(cd);
d82 2
a83 1
bdev_decl(ch);
a86 1
bdev_decl(vnd);
a87 1
bdev_decl(ccd);
a114 2
cdev_decl(cn);
cdev_decl(ctty);
a135 7
#define ptstty		ptytty
#define	ptsioctl	ptyioctl
cdev_decl(pts);
#define ptctty		ptytty
#define	ptcioctl	ptyioctl
cdev_decl(ptc);
cdev_decl(log);
a162 3
cdev_decl(st);
cdev_decl(sd);
cdev_decl(cd);
a163 2
cdev_decl(vnd);
cdev_decl(ccd);
a167 1
cdev_decl(bpf);
a169 10
cdev_decl(tun);
cdev_decl(random);

#ifdef LKM
#define NLKM 1
#else
#define NLKM 0
#endif

cdev_decl(lkm);
d222 2
@


1.10
log
@random device is permanent now.
@
text
@d337 18
@


1.9
log
@rnd -> random
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 1996/07/15 14:57:04 mickey Exp $ */
a189 1
#include "random.h"
d250 1
a250 1
	cdev_random_init(NRANDOM,random), /* 40: random data source */
@


1.8
log
@add rnd driver
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 1996/05/27 21:58:36 chuck Exp $ */
d190 2
a191 2
#include "rnd.h"
cdev_decl(rnd);
d251 1
a251 1
	cdev_rnd_init(NRND,rnd),	/* 40: random data source */
@


1.7
log
@add ram disk
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 1996/02/21 12:53:48 mickey Exp $ */
d190 2
d251 1
@


1.6
log
@remove #ifndef LKM, since that stuff already in sys/conf.h,
add lkmenodev prototype.
@
text
@d92 2
d102 5
a106 5
	bdev_tape_init(NST,st),		/* 5: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_notdef(),			/* 7 */
	bdev_disk_init(NVND,vnd),	/* 8: vnode disk driver */
	bdev_disk_init(NCCD,ccd),	/* 9: concatenated disk driver */
@


1.5
log
@add ccd, change fd->filedesc
@
text
@a92 6
#ifdef LKM
int	lkmenodev();
#else
#define	lkmenodev	enodev
#endif

@


1.4
log
@move cdev_gen_ipf() macro to the <sys/conf.h>, so the lkm
for ipl is possible and also, why it is in <machine/conf.c> while
it (ipl) is in <net/*> ???
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 1996/01/07 07:41:05 dm Exp $ */
d90 2
d110 1
a110 1
	bdev_notdef(),			/* 9 */
d185 3
d234 1
a234 1
	cdev_fd_init(1,fd),		/* 21: file descriptor pseudo-dev */
@


1.3
log
@created devices for the IP filter log on all architectures
@
text
@d1 1
a1 1
/*	$Id: conf.c,v 1.2 1995/11/07 08:50:16 deraadt Exp $ */
a199 5
#define	cdev_gen_ipf(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) nullop, 0, (dev_type_select((*))) enodev, \
	(dev_type_mmap((*))) enodev, 0 }
@


1.2
log
@$Id$ throughout
update many copyrights
@
text
@d1 1
a1 1
/*	$Id$ */
d198 13
d252 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.2 1995/08/17 17:40:54 thorpej Exp $	*/
d4 29
d77 14
a96 12
#include "vnd.h"
bdev_decl(vnd);
bdev_decl(sw);
#include "sd.h"
bdev_decl(sd);
#include "cd.h"
bdev_decl(cd);
#include "st.h"
bdev_decl(st);
#include "ccd.h"
bdev_decl(ccd);

d105 7
a111 7
	bdev_disk_init(NVND,vnd),	/* 6: vnode disk driver */
	bdev_disk_init(NCD,cd),		/* 7: SCSI CD-ROM */
	bdev_notdef(),			/* 8 */
	bdev_lkm_dummy(),		/* 9 */
	bdev_lkm_dummy(),		/* 10 */
	bdev_lkm_dummy(),		/* 11 */
	bdev_lkm_dummy(),		/* 12 */
d114 4
a117 1
	bdev_disk_init(NCCD,ccd),	/* 15: concatenated disk driver */
d119 1
a119 2

int	nblkdev = sizeof (bdevsw) / sizeof (bdevsw[0]);
d128 15
a149 1

d155 22
d178 1
d181 1
a181 1
cdev_decl(st);
a182 1
cdev_decl(ccd);
d189 1
d195 1
d207 1
a207 1
	cdev_notdef(),			/* 7 */
d210 5
a214 5
	cdev_notdef(),			/* 10 */
	cdev_notdef(),			/* 11: parallel interface */
	cdev_tty_init(NZS,zs),		/* 12: SCC serial ports */
	cdev_notdef(),			/* 13 */
	cdev_notdef(),			/* 14 */
d217 1
a217 1
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk driver */
d225 14
a238 6
	cdev_lkm_dummy(),		/* 25 */
	cdev_lkm_dummy(),		/* 26 */
	cdev_lkm_dummy(),		/* 27 */
	cdev_lkm_dummy(),		/* 28 */
	cdev_lkm_dummy(),		/* 29 */
	cdev_lkm_dummy(),		/* 30 */
d240 1
a240 2

int	nchrdev = sizeof (cdevsw) / sizeof (cdevsw[0]);
a274 27
/*
 * Returns true if dev is a disk device.
 */
isdisk(dev, type)
	dev_t dev;
	int type;
{

	/* XXXX This needs to be dynamic for LKMs. */
	switch (major(dev)) {
	case 1:
	case 2:
	case 4:
	case 6:
	case 15:
		return (type == VBLK);
	case 8:
	case 9:
	case 10:
	case 17:
	case 19:
		return (type == VCHR);
	default:
		return (0);
	}
}

d286 2
a287 2
	/*  8 */	4,
	/*  9 */	7,
d295 1
a295 1
	/* 17 */	15,
d297 1
a297 1
	/* 19 */	6,
d301 4
d315 2
a316 1
	if (major(dev) >= nchrdev)
d334 4
d342 6
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@mvme68k port by me. some parts by dale rahn.
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.28 1995/04/19 22:37:27 mycroft Exp $	*/
d48 8
a56 2
#include "st.h"
bdev_decl(st);
d61 4
a64 12
#include "ch.h"
bdev_decl(ch);
#include "xd.h"
bdev_decl(xd);
#include "vnd.h"
bdev_decl(vnd);

#ifdef LKM
int	lkmenodev();
#else
#define	lkmenodev	enodev
#endif
d74 7
a80 7
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_notdef(),			/* 7 */
	bdev_disk_init(NVND,vnd),	/* 8: vnode disk driver */
	bdev_notdef(),			/* 9 */
	bdev_disk_init(NXD,xd),		/* 10: XD disk */
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
d83 1
a83 4
	bdev_lkm_dummy(),		/* 15 */
	bdev_lkm_dummy(),		/* 16 */
	bdev_lkm_dummy(),		/* 17 */
	bdev_lkm_dummy(),		/* 18 */
d85 2
a86 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
a94 15
#include "sram.h"
cdev_decl(sram);

#include "vmel.h"
cdev_decl(vmel);

#include "vmes.h"
cdev_decl(vmes);

#include "nvram.h"
cdev_decl(nvram);

#include "flash.h"
cdev_decl(flash);

d102 1
a107 22
#include "cl.h"
cdev_decl(cl);
#include "bugtty.h"
cdev_decl(bugtty);

/* open, close, write, ioctl */
#define	cdev_lp_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }

/* open, close, ioctl, mmap, ioctl */
#define	cdev_mdev_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
	dev_init(c,n,mmap) }

#include "lp.h"
cdev_decl(lp);
#include "lptwo.h"
cdev_decl(lptwo);
a108 1
cdev_decl(st);
d111 1
a111 1
cdev_decl(xd);
d113 1
a119 1

a124 1

d136 1
a136 1
	cdev_mdev_init(NSRAM,sram),	/* 7: /dev/sramX */
d139 5
a143 5
	cdev_mdev_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
	cdev_mdev_init(NFLASH,flash),	/* 11: /dev/flashX */
	cdev_tty_init(NZS,zs),		/* 12: SCC serial (tty[a-d]) */
	cdev_tty_init(NCL,cl),		/* 13: CL-CD2400 serial (tty0[0-3]) */
	cdev_tty_init(NBUGTTY,bugtty),	/* 14: BUGtty (ttyB) */
d146 1
a146 1
	cdev_notdef(),			/* 17: concatenated disk */
d154 6
a159 14
	cdev_notdef(),			/* 25 */
	cdev_disk_init(NXD,xd),		/* 26: XD disk */
	cdev_notdef(),			/* 27 */
	cdev_lp_init(NLP,lp),		/* 28: lp */
	cdev_lp_init(NLPTWO,lptwo),	/* 29: lptwo */
	cdev_notdef(),			/* 30 */
	cdev_mdev_init(NVMEL,vmel),	/* 31: /dev/vmelX */
	cdev_mdev_init(NVMES,vmes),	/* 32: /dev/vmesX */
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
	cdev_lkm_dummy(),		/* 35 */
	cdev_lkm_dummy(),		/* 36 */
	cdev_lkm_dummy(),		/* 37 */
	cdev_lkm_dummy(),		/* 38 */
d161 2
a162 1
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d197 27
d235 2
a236 2
	/*  8 */	4,		/* SCSI disk */
	/*  9 */	6,		/* SCSI CD-ROM */
d244 1
a244 1
	/* 17 */	NODEV,
d246 1
a246 1
	/* 19 */	8,		/* vnode disk */
a249 4
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	10,		/* XD disk */
d260 1
a260 2
	if (major(dev) >= nchrdev ||
	    major(dev) >= sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
a277 4
#define clcnpollc      nullcnpollc
cons_decl(cl);
#define bugttycnpollc      nullcnpollc
cons_decl(bugtty);
a281 6
#endif
#if NCL > 0
	cons_init(cl),
#endif
#if NBUGTTY > 0
	cons_init(bugtty),
@
