head	1.89;
access;
symbols
	OPENBSD_6_1:1.87.0.4
	OPENBSD_6_1_BASE:1.87
	OPENBSD_6_0:1.85.0.4
	OPENBSD_6_0_BASE:1.85
	OPENBSD_5_9:1.85.0.2
	OPENBSD_5_9_BASE:1.85
	OPENBSD_5_8:1.79.0.4
	OPENBSD_5_8_BASE:1.79
	OPENBSD_5_7:1.77.0.2
	OPENBSD_5_7_BASE:1.77
	OPENBSD_5_6:1.74.0.4
	OPENBSD_5_6_BASE:1.74
	OPENBSD_5_5:1.73.0.4
	OPENBSD_5_5_BASE:1.73
	OPENBSD_5_4:1.68.0.6
	OPENBSD_5_4_BASE:1.68
	OPENBSD_5_3:1.68.0.4
	OPENBSD_5_3_BASE:1.68
	OPENBSD_5_2:1.68.0.2
	OPENBSD_5_2_BASE:1.68
	OPENBSD_5_1_BASE:1.66
	OPENBSD_5_1:1.66.0.2
	OPENBSD_5_0:1.63.0.2
	OPENBSD_5_0_BASE:1.63
	OPENBSD_4_9:1.60.0.2
	OPENBSD_4_9_BASE:1.60
	OPENBSD_4_8:1.57.0.2
	OPENBSD_4_8_BASE:1.57
	OPENBSD_4_7:1.55.0.2
	OPENBSD_4_7_BASE:1.55
	OPENBSD_4_6:1.52.0.4
	OPENBSD_4_6_BASE:1.52
	OPENBSD_4_5:1.44.0.2
	OPENBSD_4_5_BASE:1.44
	OPENBSD_4_4:1.40.0.2
	OPENBSD_4_4_BASE:1.40
	OPENBSD_4_3:1.38.0.2
	OPENBSD_4_3_BASE:1.38
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.26.0.2
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.24.0.2
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.19.0.4
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@# @;


1.89
date	2017.05.31.19.18.19;	author deraadt;	state Exp;
branches;
next	1.88;
commitid	HlDgymhwBU2bW7Tm;

1.88
date	2017.04.30.13.04.49;	author mpi;	state Exp;
branches;
next	1.87;
commitid	xDPbcPU6tYP39nZG;

1.87
date	2017.01.21.10.58.15;	author reyk;	state Exp;
branches;
next	1.86;
commitid	swIiw8mtZ7Pk0W3t;

1.86
date	2016.08.30.20.18.17;	author yasuoka;	state Exp;
branches;
next	1.85;
commitid	zKDm3DmCIdrzfQLH;

1.85
date	2016.01.08.15.54.13;	author jcs;	state Exp;
branches;
next	1.84;
commitid	kI4H556ZKYkRQGw5;

1.84
date	2015.11.23.22.57.12;	author deraadt;	state Exp;
branches;
next	1.83;
commitid	lOkXFQaUGdej50W4;

1.83
date	2015.11.13.07.52.20;	author mlarkin;	state Exp;
branches;
next	1.82;
commitid	KdsjYlqLpqhwOUHf;

1.82
date	2015.10.29.07.47.02;	author kettenis;	state Exp;
branches;
next	1.81;
commitid	QDyL8dFxcUx9R2yh;

1.81
date	2015.09.04.23.22.56;	author kettenis;	state Exp;
branches;
next	1.80;
commitid	4pj5pBl2Jll5YKGp;

1.80
date	2015.08.30.10.05.09;	author yasuoka;	state Exp;
branches;
next	1.79;
commitid	8KYmU15QlyhusRif;

1.79
date	2015.07.21.03.38.22;	author reyk;	state Exp;
branches;
next	1.78;
commitid	t8p39jbat5DBrbFu;

1.78
date	2015.07.17.22.52.28;	author tedu;	state Exp;
branches;
next	1.77;
commitid	OOrGfFHYAn65M2qc;

1.77
date	2015.01.16.10.17.51;	author sf;	state Exp;
branches;
next	1.76;
commitid	Mg2nJormk2PyesMj;

1.76
date	2014.12.10.05.42.25;	author jsg;	state Exp;
branches;
next	1.75;
commitid	DAvGPdAi4mqBu73l;

1.75
date	2014.12.04.21.03.50;	author tedu;	state Exp;
branches;
next	1.74;
commitid	r0wnjctffDRI84iN;

1.74
date	2014.07.11.21.54.37;	author tedu;	state Exp;
branches;
next	1.73;
commitid	0n9cIGBISFAEt4b1;

1.73
date	2013.12.19.21.30.02;	author deraadt;	state Exp;
branches;
next	1.72;

1.72
date	2013.12.12.21.04.50;	author kettenis;	state Exp;
branches;
next	1.71;

1.71
date	2013.11.04.14.07.15;	author deraadt;	state Exp;
branches;
next	1.70;

1.70
date	2013.08.15.06.54.35;	author kettenis;	state Exp;
branches;
next	1.69;

1.69
date	2013.08.12.04.11.52;	author jsg;	state Exp;
branches;
next	1.68;

1.68
date	2012.07.13.10.32.03;	author mlarkin;	state Exp;
branches;
next	1.67;

1.67
date	2012.05.27.12.24.33;	author jsg;	state Exp;
branches;
next	1.66;

1.66
date	2011.11.15.22.27.52;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2011.11.14.15.06.16;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2011.07.07.02.57.24;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2011.05.23.09.52.24;	author claudio;	state Exp;
branches;
next	1.61;

1.61
date	2011.04.02.18.16.50;	author oga;	state Exp;
branches;
next	1.60;

1.60
date	2010.12.06.20.10.17;	author jasper;	state Exp;
branches;
next	1.59;

1.59
date	2010.11.13.04.16.42;	author guenther;	state Exp;
branches;
next	1.58;

1.58
date	2010.09.07.16.22.48;	author mikeb;	state Exp;
branches;
next	1.57;

1.57
date	2010.07.01.00.24.27;	author thib;	state Exp;
branches;
next	1.56;

1.56
date	2010.05.24.23.19.21;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2009.12.28.14.22.09;	author dlg;	state Exp;
branches;
next	1.54;

1.54
date	2009.11.26.21.15.48;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2009.08.10.14.40.27;	author jsg;	state Exp;
branches;
next	1.52;

1.52
date	2009.06.06.05.26.28;	author oga;	state Exp;
branches;
next	1.51;

1.51
date	2009.06.06.03.20.57;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2009.06.06.00.35.00;	author pirofti;	state Exp;
branches;
next	1.49;

1.49
date	2009.05.31.03.20.10;	author matthieu;	state Exp;
branches;
next	1.48;

1.48
date	2009.05.09.19.23.07;	author mglocker;	state Exp;
branches;
next	1.47;

1.47
date	2009.05.07.11.30.16;	author ariane;	state Exp;
branches;
next	1.46;

1.46
date	2009.04.21.17.05.29;	author oga;	state Exp;
branches;
next	1.45;

1.45
date	2009.04.20.13.26.20;	author ariane;	state Exp;
branches;
next	1.44;

1.44
date	2009.02.15.02.03.40;	author marco;	state Exp;
branches;
next	1.43;

1.43
date	2009.01.13.13.53.50;	author kettenis;	state Exp;
branches;
next	1.42;

1.42
date	2008.12.21.18.49.46;	author kettenis;	state Exp;
branches;
next	1.41;

1.41
date	2008.11.09.15.11.19;	author oga;	state Exp;
branches;
next	1.40;

1.40
date	2008.06.11.09.22.39;	author phessler;	state Exp;
branches;
next	1.39;

1.39
date	2008.03.16.19.00.28;	author oga;	state Exp;
branches;
next	1.38;

1.38
date	2007.11.26.23.50.03;	author art;	state Exp;
branches;
next	1.37;

1.37
date	2007.11.25.17.11.12;	author oga;	state Exp;
branches;
next	1.36;

1.36
date	2007.10.10.15.53.51;	author art;	state Exp;
branches;
next	1.35;

1.35
date	2007.10.07.18.41.07;	author mbalmer;	state Exp;
branches;
next	1.34;

1.34
date	2007.09.12.18.18.27;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2007.08.02.16.40.27;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2007.06.04.20.22.08;	author ckuethe;	state Exp;
branches;
next	1.31;

1.31
date	2007.05.29.22.27.14;	author tedu;	state Exp;
branches;
next	1.30;

1.30
date	2007.05.29.06.31.44;	author tedu;	state Exp;
branches;
next	1.29;

1.29
date	2007.05.28.02.13.44;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2007.05.19.19.32.03;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.06.03.37.08;	author gwk;	state Exp;
branches;
next	1.26;

1.26
date	2007.02.17.17.35.43;	author tom;	state Exp;
branches;
next	1.25;

1.25
date	2006.09.27.06.33.03;	author grange;	state Exp;
branches;
next	1.24;

1.24
date	2006.06.19.15.13.34;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.29.01.06.26;	author matthieu;	state Exp;
branches;
next	1.22;

1.22
date	2006.05.08.22.51.18;	author gwk;	state Exp;
branches;
next	1.21;

1.21
date	2006.03.22.21.16.00;	author kettenis;	state Exp;
branches;
next	1.20;

1.20
date	2006.03.08.03.33.21;	author uwe;	state Exp;
branches;
next	1.19;

1.19
date	2006.02.12.19.55.36;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2006.01.29.17.29.29;	author marco;	state Exp;
branches;
next	1.17;

1.17
date	2005.12.29.14.45.11;	author kettenis;	state Exp;
branches;
next	1.16;

1.16
date	2005.11.07.04.53.15;	author fgsch;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.19.01.41.45;	author marco;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.05.21.48.34;	author tdeval;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.02.22.53.42;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.06.02.20.09.39;	author tholo;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.27.06.28.41;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.01.21.36.55;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.08.20.00.23;	author tdeval;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.05.23.58.43;	author tdeval;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.08.13.04.35;	author grange;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.16.09.14.03;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.20.15.19.28;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.20.20.17.16;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.25.11.03.28;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.25.00.16.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.25;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.89
log
@Split early startup code out of locore.S into locore0.S.  Adjust link
run so that this locore0.o is always at the start of the executable.
But randomize the link order of all other .o files in the kernel, so
that their exec/rodata/data/bss segments land all over the place.
Late during kernel boot, unmap the early startup code.

As a result, the internal layout of every newly build bsd kernel is
different from past kernels.  Internal relative offsets are not known
to an outside attacker.  The only known offsets are in the startup code,
which has been unmapped.

Ramdisk kernels cannot be compiled like this, because they are gzip'd.
When the internal pointer references change, the compression dictionary
bloats and results in poorer compression.

ok kettenis mlarkin visa, also thanks to tedu for getting me back to this
@
text
@#	$OpenBSD: files.amd64,v 1.88 2017/04/30 13:04:49 mpi Exp $

maxpartitions 16
maxusers 2 16 128

file	arch/amd64/amd64/autoconf.c
file	arch/amd64/amd64/conf.c
file	arch/amd64/amd64/disksubr.c		disk
file	arch/amd64/amd64/gdt.c			multiprocessor
file	arch/amd64/amd64/machdep.c
file	arch/amd64/amd64/hibernate_machdep.c	hibernate
file	arch/amd64/amd64/identcpu.c
file	arch/amd64/amd64/via.c
file	arch/amd64/amd64/locore.S
file	arch/amd64/amd64/aes_intel.S		crypto
file	arch/amd64/amd64/aesni.c		crypto
file	arch/amd64/amd64/amd64errata.c
file	arch/amd64/amd64/mem.c
file	arch/amd64/amd64/amd64_mem.c		mtrr
file	arch/amd64/amd64/mtrr.c			mtrr
file	arch/amd64/amd64/pmap.c
file	arch/amd64/amd64/process_machdep.c
file	arch/amd64/amd64/sys_machdep.c
file	arch/amd64/amd64/trap.c
file	arch/amd64/amd64/vm_machdep.c
file	arch/amd64/amd64/fpu.c
file	arch/amd64/amd64/softintr.c
file	arch/amd64/amd64/i8259.c
file	arch/amd64/amd64/cacheinfo.c
file	arch/amd64/amd64/mutex.S
file	arch/amd64/amd64/vector.S
file	arch/amd64/amd64/copy.S
file	arch/amd64/amd64/spl.S
file	arch/amd64/amd64/lock_machdep.c		multiprocessor

file	arch/amd64/amd64/intr.c
file	arch/amd64/amd64/bus_space.c
file	arch/amd64/amd64/bus_dma.c

file	arch/amd64/amd64/mptramp.S		multiprocessor
file	arch/amd64/amd64/ipifuncs.c		multiprocessor
file	arch/amd64/amd64/ipi.c			multiprocessor
file	arch/amd64/amd64/mp_setperf.c		multiprocessor

file	arch/amd64/amd64/apic.c			ioapic | lapic

file	arch/amd64/amd64/consinit.c
file	dev/cninit.c

file	arch/amd64/amd64/dkcsum.c		bios

file	arch/amd64/amd64/db_disasm.c		ddb
file	arch/amd64/amd64/db_interface.c		ddb
file	arch/amd64/amd64/db_memrw.c		ddb
file	arch/amd64/amd64/db_trace.c		ddb

file	netinet/in_cksum.c
file	netinet/in4_cksum.c

# Basic clock - required
file	arch/amd64/isa/clock.c

file	arch/amd64/amd64/powernow-k8.c		!small_kernel
file	arch/amd64/amd64/est.c			!small_kernel
file	arch/amd64/amd64/k1x-pstate.c		!small_kernel

include "dev/rasops/files.rasops"
include "dev/wsfont/files.wsfont"

include	"dev/mii/files.mii"

include	"scsi/files.scsi"

include	"dev/atapiscsi/files.atapiscsi"
include	"dev/ata/files.ata"

define	mainbus {[apid = -1]}
device	mainbus: isabus, pcibus, mainbus
attach	mainbus at root
file	arch/amd64/amd64/mainbus.c		mainbus

file	arch/amd64/amd64/codepatch.c

device	bios {}
attach	bios at mainbus
file	arch/amd64/amd64/bios.c			bios needs-flag

#Intel SMP specification 1.4
define	mpbios
device	mpbios
attach	mpbios at bios
file	arch/amd64/amd64/mpbios.c		mpbios needs-flag
file	arch/amd64/amd64/mpbios_intr_fixup.c	mpbios & pci

define	cpu {[apid = -1]}
device	cpu
attach	cpu at mainbus
file	arch/amd64/amd64/cpu.c	cpu


define	lapic
file	arch/amd64/amd64/lapic.c		lapic needs-flag

device	ioapic: mpbios, lapic
attach	ioapic at mainbus
file	arch/amd64/amd64/ioapic.c		ioapic needs-flag

#
# EFI Framebuffer
#
device efifb: wsemuldisplaydev, rasops32, rasops24, rasops16, rasops8, rasops4
attach efifb at mainbus
file arch/amd64/amd64/efifb.c			efifb needs-flag

#
# Paravirtual device bus and virtio
#
include "dev/pv/files.pv"

#
# PCI drivers
#

include	"dev/pci/files.pci"
file	arch/amd64/pci/pci_machdep.c		pci
file	arch/amd64/pci/pciide_machdep.c		pciide
file	arch/amd64/pci/vga_post.c		vga_pci & x86emu

# PCI Host bridge chipsets
device	pchb: pcibus, agpbus
attach	pchb at pci
file	arch/amd64/pci/pchb.c			pchb

# AMAS AMD memory address switch
device	amas
attach	amas at pci
file	dev/pci/amas.c				amas

# AGP bridge support. most attach at pchb
file	arch/amd64/pci/agp_machdep.c		agp | inteldrm

#
# CARDBUS
#
include	"dev/cardbus/files.cardbus"
file	arch/amd64/amd64/rbus_machdep.c		cardbus

# PCIC pcmcia controller
device	pcic: pcmciabus
file	dev/ic/i82365.c				pcic

# PCIC pcmcia controller on PCI bus.
attach	pcic at pci with pcic_pci
file	dev/pci/i82365_pci.c			pcic_pci

include	"dev/pcmcia/files.pcmcia"

# PCI-ISA bridges
device	pcib: isabus
attach	pcib at pci
file	arch/amd64/pci/pcib.c			pcib | amdpcib | tcpcib

# AMD 8111 LPC bridge
device	amdpcib: isabus
attach	amdpcib at pci
file	dev/pci/amdpcib.c			amdpcib

# Intel Atom E600 LPC bridge
device	tcpcib: isabus
attach	tcpcib at pci
file	dev/pci/tcpcib.c			tcpcib

device	aapic
attach	aapic at pci
file	arch/amd64/pci/aapic.c			aapic

device	hme: ether, ifnet, mii, ifmedia
file	dev/ic/hme.c			hme
attach	hme at pci with hme_pci
file	dev/pci/if_hme_pci.c		hme_pci

#
# ISA drivers
#

include	"dev/isa/files.isa"
include	"dev/isa/files.isapnp"
file	arch/amd64/isa/isa_machdep.c		isa

# attribute used to represent the "keyboard controller"
# XXX should be a real device
define	pckbcport {[irq = -1], [port = -1]}

include	"dev/wscons/files.wscons"
include	"dev/pckbc/files.pckbc"

file	arch/amd64/amd64/wscons_machdep.c	wsdisplay

# Soekris GPIO & LEDs driver
device	skgpio: gpiobus
attach	skgpio at isa
file	dev/isa/skgpio.c			skgpio

pseudo-device	pctr
file	arch/amd64/amd64/pctr.c		pctr needs-flag


pseudo-device	nvram
file	arch/amd64/amd64/nvram.c	nvram needs-flag

#
# Machine-independent HID support
#
include	"dev/hid/files.hid"

#
# USB
#
include	"dev/usb/files.usb"

#
# I2C
#
include "dev/i2c/files.i2c"

#
# Machine-independent GPIO drivers
#
include "dev/gpio/files.gpio"

#
# ACPI
#
include "dev/acpi/files.acpi"
file	arch/amd64/amd64/acpi_machdep.c		acpi
file	arch/amd64/amd64/acpi_wakecode.S	acpi & !small_kernel

#
# VMM
#
device vmm {}
attach vmm at mainbus
file	arch/amd64/amd64/vmm.c			vmm		needs-flag
file	arch/amd64/amd64/vmm_support.S		vmm

#
# Machine-independent SD/MMC drivers
#
include "dev/sdmmc/files.sdmmc"

#
# Machine-independent 1-Wire drivers
#
include "dev/onewire/files.onewire"

#
# IPMI
#
attach	ipmi at mainbus

#
# device major numbers
#

major	{vnd = 14}
major	{sd = 4}
major	{st = 5}
major	{cd = 6}
major	{rd = 17}
major	{wd = 0}
major	{fd = 2}
@


1.88
log
@Unifdef KGDB.

It doesn't compile und hasn't been working during the last decade.

ok kettenis@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.87 2017/01/21 10:58:15 reyk Exp $
d14 1
@


1.87
log
@Move virtio config from files.pci to files.pci

virtio itself is not PCI, it is a paravirtual bus on top of either PCI
or MMIO (arm).  This is the first step of moving the virtio files to
dev/pv.  No functional change.

arm kernel changes tested by jsg@@ and patrick@@
no objections from sf@@ mlarkin@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.86 2016/08/30 20:18:17 yasuoka Exp $
d53 1
a53 1
file	arch/amd64/amd64/db_memrw.c		ddb | kgdb
a57 2

file	arch/amd64/amd64/kgdb_machdep.c		kgdb
@


1.86
log
@Enable raspos24 for efifb.  This makes qemu with UEFI start working.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.85 2016/01/08 15:54:13 jcs Exp $
d117 5
a260 5

#
# Paravirtual device bus
#
include "dev/pv/files.pv"
@


1.85
log
@Move HID support files out of dev/usb into new dev/hid directory

These files aren't USB-specific and were used by the previous
Bluetooth implementation, and will be used by the upcoming
HID-over-i2C implementation

ok deraadt
previous version ok kettenis and mpi
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.84 2015/11/23 22:57:12 deraadt Exp $
d112 1
a112 1
device efifb: wsemuldisplaydev, rasops32, rasops16, rasops8, rasops4
@


1.84
log
@No longer need 'option VMM', declaring the vmm0 device is sufficient.
ok mlarkin
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.83 2015/11/13 07:52:20 mlarkin Exp $
d206 5
@


1.83
log
@
vmm(4) kernel code

circulated on hackers@@, no objections. Disabled by default.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.82 2015/10/29 07:47:02 kettenis Exp $
d234 2
a235 2
file	arch/amd64/amd64/vmm.c			vmm & !small_kernel  needs-flag
file	arch/amd64/amd64/vmm_support.S		vmm & !small_kernel
@


1.82
log
@Make inteldrm(4) attach to pci(4) instead of vga(4) just like radeondrm(4).
This is needed for machines where Intel graphics isn't the primary graphics
device and on systems with UEFI firmware that put the device in non-VGA mode.

ok jsg@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.81 2015/09/04 23:22:56 kettenis Exp $
d228 8
@


1.81
log
@Let efifb depend on rasops32 such that it works on ramdisks where rasops32
isn't brought in by inteldrm or radeondrm.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.80 2015/08/30 10:05:09 yasuoka Exp $
d136 1
a136 1
file	arch/amd64/pci/agp_machdep.c		agp
@


1.80
log
@Modify kernel to prepare boot from UEFI.

- Add new boot arg "bios_efi_info_t" to pass the paramters from UEFI
- Make bios(4) and acpi(4) be able to probe with the parameters from
  UEFI
- Add efifb(8).  It uses the framebuffer from UEFI and it will work as
  a backend of wsdisplay(4) and wsfb (X11 video driver).  Disabled by
  the kernel config for this moment

input and ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.79 2015/07/21 03:38:22 reyk Exp $
d112 1
a112 1
device efifb: wsemuldisplaydev, rasops16, rasops8, rasops4
@


1.79
log
@Add pvbus(4), a pseudo-bus to attach non-PCI paravirtual devices and buses.
vmt(4) is moved from mainbus0 to pvbus0, more devices will follow.

OK sf@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.78 2015/07/17 22:52:28 tedu Exp $
d108 7
@


1.78
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.77 2015/01/16 10:17:51 sf Exp $
d237 4
a240 2
# VMware Tools
attach	vmt at mainbus
@


1.77
log
@Binary code patching on amd64

This commit adds generic infrastructure to do binary code patching on amd64.
The existing code patching for SMAP is converted to the new infrastruture.

More consumers and support for i386 will follow later.

This version of the diff has some simplifications in codepatch_fill_nop()
compared to a version that was:

OK @@kettenis @@mlarkin @@jsg
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.76 2014/12/10 05:42:25 jsg Exp $
d56 2
a57 2
file	netinet/in_cksum.c			inet
file	netinet/in4_cksum.c			inet
@


1.76
log
@Add skgpio(4) a driver for the Soekris net6501 GPIO and LEDs
from Matt Dainty.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.75 2014/12/04 21:03:50 tedu Exp $
d82 2
@


1.75
log
@as promised 18 years ago, consolidate isa floppy disks in files.isa
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.74 2014/07/11 21:54:37 tedu Exp $
d185 5
@


1.74
log
@"It's not the years, honey; it's the mileage."

bluetooth support doesn't work and isn't going anywhere. the current
design is a dead end, and should not be the basis for any future support.
general consensus says to whack it so as to not mislead the unwary.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.73 2013/12/19 21:30:02 deraadt Exp $
a184 9

# Floppy disk controller
device	fdc {[drive = -1]}
attach	fdc at isa
file	dev/isa/fdc.c				fdc needs-flag

device	fd: disk, isa_dma
attach	fd at fdc
file	dev/isa/fd.c				fd needs-flag
@


1.73
log
@Mtrr stops being a pseudo-device.  We need to probe the cpu type and
initialize the structures when we see the first cpu.  We also need to
initialize each cpu's properly (for PAT) before we setup mtrr on that
cpu.  On i386 (late hatch) we were getting this desperately wrong on
the primary cpu.

After suspend/resume, we also need to do the same work.  re-initialize
PAT before mtrr.  On some laptops apparently PAT was not turned on by the
BIOS, so we ended up with incorrect setup for the primary cpu.  Oops.

This makes mplayer on the x201 (and similar) machines work without weird
pauses after a suspend/resume.  Many other things are likely fixed.
ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.72 2013/12/12 21:04:50 kettenis Exp $
a205 5

#
# Bluetooth
#
include "dev/bluetooth/files.bluetooth"
@


1.72
log
@Remove the scatter/gather dma implementation as it is no longer used.

ok krw@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.71 2013/11/04 14:07:15 deraadt Exp $
d19 1
a197 2
pseudo-device	mtrr
file	arch/amd64/amd64/mtrr.c		mtrr needs-flag
@


1.71
log
@remove iop(4) driver.  it is entirely unmaintained and supports something
which basically doesn't exist at all.
reminded about it by brad
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.70 2013/08/15 06:54:35 kettenis Exp $
a36 1
file	arch/amd64/amd64/sg_dma.c		!small_kernel
@


1.70
log
@Include files.agp and files.drm from files.pci.  Makes sure "drm.h" gets
generated on all architectures that support pci, making alpha and loongson
compile again.

ok todd@@, miod@@ seemed to agree with the idea
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.69 2013/08/12 04:11:52 jsg Exp $
a73 2

include	"dev/i2o/files.i2o"
@


1.69
log
@Add a port of the TTM and Radeon DRM code from Linux 3.8.13.
Includes kernel modesetting, framebuffer console and support
for newer hardware.

Firmware needs to be present for acceleration and in some cases
modesetting to work.  It can be installed via fw_update
or manually via pkg_add.

With lots of help from kettenis@@ some macppc bits from mpi@@
and some ttm refcount/queue bits from FreeBSD.

Thanks to M:Tier and the OpenBSD Foundation for sponsoring this work.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.68 2012/07/13 10:32:03 mlarkin Exp $
a128 1
include "dev/pci/files.agp"
a129 2

include "dev/pci/drm/files.drm"
@


1.68
log
@

More foundation goo for amd64 hibernate
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.67 2012/05/27 12:24:33 jsg Exp $
d131 2
@


1.67
log
@Add tcpcib(4) to support Intel Atom E600 watchdog.
From Matt Dainty. ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.66 2011/11/15 22:27:52 deraadt Exp $
d11 1
@


1.66
log
@Simplify various parts of the puc(4) attachment code.  Tested lightly
by krw and myself.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.65 2011/11/14 15:06:16 deraadt Exp $
d150 1
a150 1
file	arch/amd64/pci/pcib.c			pcib | amdpcib
d156 5
@


1.65
log
@merge syscall.c into the end of trap.c as almost all architectures do.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.64 2011/10/06 20:49:28 deraadt Exp $
a115 2

include	"dev/puc/files.puc"
@


1.64
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.63 2011/07/07 02:57:24 deraadt Exp $
a20 1
file	arch/amd64/amd64/syscall.c
@


1.63
log
@Replace the cruddy old sys/net/zlib.[ch].  We now use the sys/lib/libz
code.  Missing chunks of the API are imported from the libc version,
with a few #ifdef's to port it into the kernel environment.

The bootblocks already used the newer code, and should encounter no
surprises since there are so few changes to the existing files. In
the kernel, ipcomp and kernel ppp are changed to the new API.
ipcomp has been tested.

ok tedu the brave
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.62 2011/05/23 09:52:24 claudio Exp $
a252 1
major	{ccd = 16}
@


1.62
log
@AMD K10/K11 pstate driver allows setperf and apm to change CPU
frequencies on newer AMD systems.
Driver written by Bryan Steele / brynet gmail.com
Put it in deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.61 2011/04/02 18:16:50 oga Exp $
d49 1
a49 2
file	arch/amd64/amd64/dkcsum.c
file	lib/libz/adler32.c			!ppp_deflate & !ipsec & !crypto
@


1.61
log
@Remove the AMD GART based iommu code.

With current strategies to put memory in the ``correct'' place it isn't
needed.  There's also the problem that it did not work on all machines,
failing completely on some and utterly breaking DMA. So just remove it.
If anyone needs it it will be in the Attic.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.60 2010/12/06 20:10:17 jasper Exp $
d67 1
@


1.60
log
@- use consistent 'include' rules without a full relative path.
tested on a GENERIC config from all arches.

ok deraadt@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.59 2010/11/13 04:16:42 guenther Exp $
a114 1
file	arch/amd64/pci/iommu.c			pci
@


1.59
log
@Switch from TSS-per-process to TSS-per-CPU, placing the TSS right
next to the cpu's GDT, also making the double-fault stack per-CPU,
leaving it at the top of the page of the CPU's idle process.  Inline
pmap_activate() and pmap_deactivate() into the asm cpu_switchto
routine, adding a check for the new pmap already being marked as
active on the CPU.  Garbage collect the hasn't-been-used-in-years
GDT update IPI.

Tested by many; ok mikeb@@, kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.58 2010/09/07 16:22:48 mikeb Exp $
d228 1
a228 1
include "../../../dev/acpi/files.acpi"
@


1.58
log
@enable aesni.

that means that all users running ipsec on amd64 with 'aes'
cpu flag will have aes encryption accelerated in cbc and ctr
modes for all three key sizes: 128, 192 and 256.

for debug purposed a number of operations performed by the
driver is visible throught the pstat(8) utility:

  pstat -d u aesni_ops

note that you need to run config(8) to hook up new files.

ok kettenis thib deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.57 2010/07/01 00:24:27 thib Exp $
d9 1
a9 1
file	arch/amd64/amd64/gdt.c
@


1.57
log
@Add things to enable aesni either ifdef'ed or commented out to ease
testing.

Note: aesni is not in a usable state yet!

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.56 2010/05/24 23:19:21 deraadt Exp $
d13 2
a14 2
#file	arch/amd64/amd64/aes_intel.S		crypto
#file	arch/amd64/amd64/aesni.c		crypto
@


1.56
log
@give up on -Wvariable-decl
delete the archaic links: target which is easily misused
handle special .[sS] files in a portable way
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.55 2009/12/28 14:22:09 dlg Exp $
d13 2
@


1.55
log
@tweak vmt to work on amd64 as well as i386. like i386, it is still
commented out in GENERIC. it needs more love.

diff by david cranshaw a long time ago. sorry it has taken so long
for me to look at it.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.54 2009/11/26 21:15:48 deraadt Exp $
d27 3
@


1.54
log
@do not pull acpi_wakecode.o into RAMDISKS
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.53 2009/08/10 14:40:27 jsg Exp $
d241 3
@


1.53
log
@gpio for amd64.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.52 2009/06/06 05:26:28 oga Exp $
d225 1
a225 1
file	arch/amd64/amd64/acpi_wakecode.S	acpi
@


1.52
log
@instead of #ifndef SMALL_KERNELing the whole sg_dma.c file, just put the
information in files.conf like it should be.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.51 2009/06/06 03:20:57 deraadt Exp $
d214 5
@


1.51
log
@option X86EMU is how this subsystem is brought into a kernel
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.50 2009/06/06 00:35:00 pirofti Exp $
d32 1
a32 1
file	arch/amd64/amd64/sg_dma.c
@


1.50
log
@Add vga bios repost support. Fetched from the NetBSD tree mostly.

Tested on multiple i386 and it works, amd64 works also with a few
exceptions that will get fixed.

The initial effort of importing was done by oga@@, thanks!

Lots of testing and debugging by mlarkin@@ and me.
Okay deraadt@@, oga@@, mlarkin@@.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.49 2009/05/31 03:20:10 matthieu Exp $
d112 1
a112 1
file	arch/amd64/pci/vga_post.c		vga_pci & vga_post
@


1.49
log
@Add VIA crypto features support to amd64. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.48 2009/05/09 19:23:07 mglocker Exp $
d112 1
@


1.48
log
@Initial console device driver for USB displays based on the DisplayLink
DL-120 / DL-160 graphic chips, using the wsdisplay(4) layer.  Based on
the reversed engineered specifications of Florian Echtler.  The driver
is disabled in GENERIC for now.

Thanks to claudio@@ for donating me a device and to oga@@ and miod@@ for
giving me hints in the graphic and wsdisplay area.

OK deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.47 2009/05/07 11:30:16 ariane Exp $
d12 1
@


1.47
log
@Move amas device from arch/amd64 to dev/pci and enable it in i386 as well.
amas defaults to disabled on both amd64 and i386.

"Go for it!" kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.46 2009/04/21 17:05:29 oga Exp $
d61 3
@


1.46
log
@add a sg_dma backend for amd64 bus_dma. This is a lot more clever about
mapping to the gart than the old code, and shouldn't conflict with
bouncebuffers when they're added.

This is essentially the sparc64 iommu code that's been modularised a bit
so I can eventually use the same code for agp-based dma for memory
managed drm drivers.

Now, this would overflow ramdiskA, so iommu and sg_dma are now #ifndef
SMALL_KERNEL.

ok kettenis@@, marco@@. SMALL_KERNEL discussions with deraadt.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.45 2009/04/20 13:26:20 ariane Exp $
d119 1
a119 1
file	arch/amd64/pci/amas.c			amas
@


1.45
log
@amas device for amd64, describes the physical memory layout on AMD64 CPU.

Replaces pchb with amas for the AMD64 address map.
amas0 at pci0 dev 24 function 1 "AMD AMD64 0Fh Address Map" rev 0x00

Currently disabled (causing pchb to attach instead).

ok art@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.44 2009/02/15 02:03:40 marco Exp $
d31 1
@


1.44
log
@Add sleep plumbing code for amd64 making it the sameish as i386. Committing
per mlarkin request.

Code from mlarkin, mptramp code from kurt
Lots of comments weingart, art & others
Tested in snaps for weeks
ok kurt, marco
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.43 2009/01/13 13:53:50 kettenis Exp $
d114 5
@


1.43
log
@Turn mpbios into a real device, such that people can disable it on crappy
BIOSes.

ok deraadt@@ (for the amd64 bit, or the i386 bit, can't remember which)
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.42 2008/12/21 18:49:46 kettenis Exp $
d209 1
@


1.42
log
@Change the way we include mpbios code to be similar to what we do on i386.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.41 2008/11/09 15:11:19 oga Exp $
a38 6
#Intel SMP specification 1.4
define	mpbios
file	arch/amd64/amd64/mpbios.c		mpbios needs-flag
file	arch/amd64/amd64/mpbios_intr_fixup.c	mpbios & pci


d78 7
@


1.41
log
@Rework that way that agp attaches.

previously, we had a static list of pcidevs and which agp driver would
be interanlly attached. Instead, split the agp drivers so they work like
audio(4), where we attach a driver, which sets up some callbacks and
initial state, then attaches the interface (agp(4)). Since this allows
us to attach different drivers in different places, and give them
/proper/ probe functions move most of the drivers back to attaching at
pchb, where they should, and intagp (formerly agp_i810) stays attaching
at vga, since it's part of the intel integrated graphics chips.

Diff shrinks the kernel slightly, gets rid of the annoying "no integrated
graphics" warning, and allows more cleanup later.

Tested by many. fix for alpha build (the only other vga_pci.c consumer)
suggested by miod.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.40 2008/06/11 09:22:39 phessler Exp $
d39 3
a41 1
file	arch/amd64/amd64/mpbios.c		mpbios
d94 1
a94 1
device	ioapic: lapic
@


1.40
log
@Synchronize the MTRR API with i386, and enable

"just commit it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.39 2008/03/16 19:00:28 oga Exp $
a106 5
# AGP devices
device	agp: agp_i810
attach	agp at agpbus
file	arch/amd64/pci/agp_machdep.c		agp

d108 1
a108 1
device	pchb: pcibus
d111 4
@


1.39
log
@Make agp(4) attach at vga(4) instead of pchb(4). This is because sometimes
agp and drm need to use the same memory mapping, the best way to deal
with that is to allow them to share (that's coming later), for this to
work cleanly we move the attach point of agp.

Ideally most agp drivers would attach at pchb, with only agp_i810
(and any that work similarly) attaching at vga, but this will do for
now.

ok kettenis@@, miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.38 2007/11/26 23:50:03 art Exp $
d14 1
d180 3
@


1.38
log
@Like i386 - make the __mp_lock not spin at splhigh.

deraadt@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.37 2007/11/25 17:11:12 oga Exp $
d106 3
a108 2
# AGP
include "dev/pci/files.agp"
d112 1
a112 1
device	pchb: pcibus, agpbus, agp_i810
@


1.37
log
@Make agp attach as a device. This means that many more agp bridges
actually get detected and attached. Also adds a kernel api for
manipulating agp.

Enable this on i386 and amd64.

"I think you should commit it" deraadt@@, ok matthieu. Looked over by
several others.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.36 2007/10/10 15:53:51 art Exp $
d25 1
@


1.36
log
@Make context switching much more MI:
 - Move the functionality of choosing a process from cpu_switch into
   a much simpler function: cpu_switchto. Instead of having the locore
   code walk the run queues, let the MI code choose the process we
   want to run and only implement the context switching itself in MD
   code.
 - Let MD context switching run without worrying about spls or locks.
 - Instead of having the idle loop implemented with special contexts
   in MD code, implement one idle proc for each cpu. make the idle
   loop MI with MD hooks.
 - Change the proc lists from the old style vax queues to TAILQs.
 - Change the sleep queue from vax queues to TAILQs. This makes
   wakeup() go from O(n^2) to O(n)

there will be some MD fallout, but it will be fixed shortly.
There's also a few cleanups to be done after this.

deraadt@@, kettenis@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.35 2007/10/07 18:41:07 mbalmer Exp $
d105 4
d110 1
a110 1
device	pchb: pcibus
a228 3

file	arch/amd64/pci/agp_machdep.c		pciagp
file	dev/pci/agp_i810.c			pciagp
@


1.35
log
@Add a driver, amdpcib(4), for the AMD 8111 series LPC bridge and HPET written
by mickey, man page by me.  Help, suggestions by Theo and jmc.

Enable this driver and glxpcib(4) in all RAMDISK kernel,  but glxpcib(4)
does not provide the watchdog timer in the RAMDISK kernels.

Prodded by deraadt.
E
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.34 2007/09/12 18:18:27 deraadt Exp $
a20 1
file	arch/amd64/amd64/Locore.c
@


1.34
log
@port of i386 pctr code to amd64; Mike Belopuhov
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.33 2007/08/02 16:40:27 deraadt Exp $
d130 6
a135 1
file	arch/amd64/pci/pcib.c			pcib
@


1.33
log
@copy nvram code from i386, because amd64 can use it too.  done by
tybollt@@solace.miun.se, ok jcs
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.32 2007/06/04 20:22:08 ckuethe Exp $
d166 3
@


1.32
log
@bluetooth isn't really useful yet, but at least give it a chance to compile
ok gwk
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.31 2007/05/29 22:27:14 tedu Exp $
d166 3
@


1.31
log
@only the i810 is known to be needed for agp, reduce driver set to just that
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.30 2007/05/29 06:31:44 tedu Exp $
d171 5
@


1.30
log
@Some improvements for better intel cpu support.
Add EST support from i386, minus the tables
Also add in support for CPU temperature sensors, based on diff to tech
by Pierre Riteau.
ok deraadt gwk
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.29 2007/05/28 02:13:44 krw Exp $
d211 1
a211 3
file	arch/i386/pci/agp_machdep.c		pciagp
file	dev/pci/agp_ali.c			pciagp
file	dev/pci/agp_amd.c			pciagp
a212 3
file	dev/pci/agp_intel.c			pciagp
file	dev/pci/agp_sis.c			pciagp
file	dev/pci/agp_via.c			pciagp
@


1.29
log
@Remove the Archive/Wangtek cartidge tape driver, wt(4). All tapes are
st(4).

ok tom@@ deraadt@@ jason@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.28 2007/05/19 19:32:03 tedu Exp $
d61 2
a62 1
file	arch/amd64/amd64/powernow-k8.c
@


1.28
log
@(disabled) option for PCIAGP.  at least lets i945 chipsets work
ok dim
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.27 2007/05/06 03:37:08 gwk Exp $
a207 1
major	{wt = 3}
@


1.27
log
@Add the mp setperf mechanism to AMD64, like its i386 counterpart it allows
all cpus in a system supporting frequency and voltage scaling to be scaled
by the same amount corresponding to the user (or apmd on their behalf)
performance level.

This diff also teaches amd64 about acpi_hasprocfvs (ACPI has processor
frequency and voltage scaling).

It also moves initilization of the underlying setperf mechanism such
as powernow to mainbus from the cpu indentification and initilization
code inspired by similar changes dim@@ made to i386 durring h2k6. This
is necessary to implement the AMD recommended method for retreiving
p_state data from the ACPI _PSS object (a diff comming soon). It will
also simplify the potential addition of enhanced speedstep as found
on newer intel processors with EMT64 capable of running OpenBSD/amd64.

MP setperf functionality verifed by myself and Johan M:son Lindman <tybolt
AT solace DOT miun DOT se> on opteron 265 and 270 systems respectively.
General testing done by many others thanks!

ok tedu, dim
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.26 2007/02/17 17:35:43 tom Exp $
d210 8
@


1.26
log
@Add code to check for the AMD amd64 errata, and correct them where
possible.  Taken from NetBSD.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.25 2006/09/27 06:33:03 grange Exp $
d34 1
@


1.25
log
@Add files.onewire to all our USB archs, it will be used soon.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.24 2006/06/19 15:13:34 deraadt Exp $
d12 1
@


1.24
log
@move clock_subr.c to a better place, and now it is always in the kernel
so that things can use it; tested on all architectures; ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.23 2006/05/29 01:06:26 matthieu Exp $
d184 5
@


1.23
log
@Enable sdmmc on amd64 too. ok brad@@, deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.22 2006/05/08 22:51:18 gwk Exp $
a57 1
file	dev/clock_subr.c
@


1.22
log
@Add smbios support for i386 and amd64, fix ipmi to use this new functionallity,
hook up some sysctls to add system vendor/product/version and UUID reporting.

"get it in" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.21 2006/03/22 21:16:00 kettenis Exp $
d180 5
@


1.21
log
@Fixup broken mpbios'es on VT8237 and nForce4 chipsets.  Fixes interrupt
routing for SATA on those chipsets in GENERIC.MP.
ok mickey@@, brad@@.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.20 2006/03/08 03:33:21 uwe Exp $
d75 4
@


1.20
log
@Patch from Gordon Klock to update AMD PowerNow K8 support on i386,
and to add amd64 K8 support from FreeBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.19 2006/02/12 19:55:36 miod Exp $
d37 1
@


1.19
log
@Remove dead sysbeep driver and unused sysbeep() routine. No functional change.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.18 2006/01/29 17:29:29 marco Exp $
d59 1
@


1.18
log
@Disable iic whenever ipmi is enabled.  This fixes boxes like Sun x4200 that
freak out when more than one device driver touch the i2c devices.
Reported by: Srebrenko Sehic <ssehic at gmail dot com>

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.17 2005/12/29 14:45:11 kettenis Exp $
a148 3

device	sysbeep
attach	sysbeep at pcppi
@


1.17
log
@Add viapm(4).
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.16 2005/11/07 04:53:15 fgsch Exp $
a180 1
device	ipmi
a181 1
file	dev/ipmi.c				ipmi needs-flag
@


1.16
log
@add some needed defs for upcoming kgdb support.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.15 2005/10/19 01:41:45 marco Exp $
d166 5
@


1.15
log
@Add IPMI to amd64.  Keep it disabled for now.

Prodded earlier today by deraadt@@
ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.14 2005/10/05 21:48:34 tdeval Exp $
d47 1
a47 1
file	arch/amd64/amd64/db_memrw.c		ddb
d52 2
@


1.14
log
@Add CardBus/PCMCIA support to AMD64.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.13 2005/10/02 22:53:42 deraadt Exp $
d170 7
@


1.13
log
@pci machines need the hme stub here
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.12 2005/06/02 20:09:39 tholo Exp $
d100 16
@


1.12
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.11 2005/05/27 06:28:41 jason Exp $
d109 5
@


1.11
log
@build iommu by default (it's still not hooked in, but this is harmless)
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.10 2005/05/01 21:36:55 brad Exp $
d143 6
@


1.10
log
@To allow for MD override of in4_cksum()...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.9 2005/03/08 20:00:23 tdeval Exp $
d91 1
@


1.9
log
@Cosmetics...
Mainly remove space between locators parens, replace spaces with tabs
where appropriate and consistently align dependencies.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.8 2005/03/05 23:58:43 tdeval Exp $
d51 1
@


1.8
log
@Clean up the tree from incomplete, unreliable and unsupported IEEE1394 code.
Ok deraadt@@, miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.7 2004/10/08 13:04:35 grange Exp $
d8 1
a8 1
file	arch/amd64/amd64/disksubr.c	disk
d59 1
a59 1
include "scsi/files.scsi"
d61 1
a61 1
include "dev/i2o/files.i2o"
d63 2
a64 2
include "dev/atapiscsi/files.atapiscsi"
include "dev/ata/files.ata"
d66 1
a66 1
define mainbus {[apid = -1]}
d69 1
a69 1
file	arch/amd64/amd64/mainbus.c	mainbus
d78 1
a78 1
file	arch/amd64/amd64/lapic.c	lapic needs-flag
d82 1
a82 1
file	arch/amd64/amd64/ioapic.c	ioapic needs-flag
d88 3
a90 3
include "dev/pci/files.pci"
file	arch/amd64/pci/pci_machdep.c	pci
file	arch/amd64/pci/pciide_machdep.c	pciide
d92 1
a92 1
include "dev/puc/files.puc"
d97 1
a97 1
file	arch/amd64/pci/pchb.c		pchb
d102 1
a102 1
file	arch/amd64/pci/pcib.c		pcib
d106 1
a106 1
file	arch/amd64/pci/aapic.c		aapic
d112 3
a114 3
include "dev/isa/files.isa"
include "dev/isa/files.isapnp"
file	arch/amd64/isa/isa_machdep.c	isa
d118 1
a118 1
define	pckbcport { [irq = -1], [port = -1] }
d120 2
a121 2
include "dev/wscons/files.wscons"
include "dev/pckbc/files.pckbc"
d123 1
a123 1
file    arch/amd64/amd64/wscons_machdep.c wsdisplay
d131 1
a131 1
file	dev/isa/fdc.c			fdc needs-flag
d135 1
a135 1
file	dev/isa/fd.c			fd needs-flag
d140 1
a140 1
include "dev/usb/files.usb"
@


1.7
log
@Move dev/cons.c to MI conf/files.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.6 2004/09/16 09:14:03 mickey Exp $
a140 5

#
# FireWire
#
include "dev/ieee1394/files.ieee1394"
@


1.6
log
@cleanup deafult locators (blah ?); please check that your most hated architecture is still fluffy (;
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.5 2004/08/20 15:19:28 millert Exp $
a39 1
file	dev/cons.c
@


1.5
log
@Enable com@@puc now that it works.  OK deraadt@@ miod@@ henning@@.
lpt@@puc is still disabled until it gets tested.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.4 2004/07/20 20:17:16 art Exp $
d67 1
a67 1
define mainbus { apid = -1 }
d72 1
a72 1
define	cpu { apid = -1 }
d130 1
a130 1
device	fdc { drive = - 1 }
@


1.4
log
@MD mutex implementation on amd64.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.3 2004/06/25 11:03:28 art Exp $
d92 2
@


1.3
log
@SMP support. Big parts from NetBSD, but with some really serious debugging
done by me, niklas and others. Especially wrt. NXE support.

Still needs some polishing, especially in dmesg messages, but we're now
building kernel faster than ever.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.2 2004/02/25 00:16:41 deraadt Exp $
d24 1
@


1.2
log
@dkcsum stuff for amd64, written by tom, who cannot commit it at the moment.
now the amd64 knows what drive it was booted from.
@
text
@d1 1
a1 1
#	$OpenBSD: files.amd64,v 1.1 2004/01/28 01:39:39 mickey Exp $
d29 9
d66 1
a66 1
define mainbus { }
d71 1
a71 1
define	cpu { [apid = -1] }
@


1.1
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
#	$OpenBSD$
d32 3
@


1.1.2.1
log
@Merge with the trunk
@
text
@a32 3
file	arch/amd64/amd64/dkcsum.c
file	lib/libz/adler32.c			!ppp_deflate & !ipsec & !crypto

@


