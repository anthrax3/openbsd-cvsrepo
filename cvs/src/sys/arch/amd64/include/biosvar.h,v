head	1.24;
access;
symbols
	OPENBSD_6_1:1.22.0.8
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.22.0.4
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.21.0.4
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.6
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.6
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.4
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.24
date	2017.06.20.12.39.20;	author tom;	state Exp;
branches;
next	1.23;
commitid	EMCyX9GRycnwCmNi;

1.23
date	2017.06.19.22.50.50;	author deraadt;	state Exp;
branches;
next	1.22;
commitid	qxUetDs8y9dCgVHx;

1.22
date	2015.08.30.10.05.09;	author yasuoka;	state Exp;
branches;
next	1.21;
commitid	8KYmU15QlyhusRif;

1.21
date	2015.07.17.21.53.56;	author mlarkin;	state Exp;
branches;
next	1.20;
commitid	1RFZ9NlS2KARWsKl;

1.20
date	2015.01.27.01.42.26;	author mlarkin;	state Exp;
branches;
next	1.19;
commitid	WTljrmguOERpZdAH;

1.19
date	2013.11.02.15.02.27;	author kettenis;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.23.16.12.20;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2012.10.09.12.58.07;	author jsing;	state Exp;
branches;
next	1.16;

1.16
date	2012.06.03.13.18.33;	author kettenis;	state Exp;
branches;
next	1.15;

1.15
date	2012.01.11.15.58.27;	author jsing;	state Exp;
branches;
next	1.14;

1.14
date	2011.04.26.17.33.17;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.12;

1.12
date	2011.03.14.22.14.40;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2010.11.22.21.07.18;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2009.04.30.01.16.56;	author dlg;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.01.17.30.55;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.12.05.19.17.14;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.20.22.36.33;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.08.22.51.18;	author gwk;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.13.23.13.45;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.21.18.53.38;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.27.21.55.25;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.03.12.09.47;	author mickey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches;
next	;

1.2.2.1
date	2004.06.05.23.09.25;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Fix a couple of comment typos in amd64 and i386 biosvar.h
@
text
@/*	$OpenBSD: biosvar.h,v 1.23 2017/06/19 22:50:50 deraadt Exp $	*/

/*
 * Copyright (c) 1997-1999 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_BIOSVAR_H_
#define _MACHINE_BIOSVAR_H_

	/* some boxes put apm data seg in the 2nd page */
#define	BOOTARG_OFF	(PAGE_SIZE * 2)
#define	BOOTARG_LEN	(PAGE_SIZE * 1)
#define	BOOTBIOS_ADDR	(0x7c00)
#define	BOOTBIOS_MAXSEC	((1 << 28) - 1)

	/* BIOS configure flags */
#define	BIOSF_BIOS32	0x0001
#define	BIOSF_PCIBIOS	0x0002
#define	BIOSF_PROMSCAN	0x0004
#define BIOSF_SMBIOS	0x0006

/* BIOS media ID */
#define BIOSM_F320K	0xff	/* floppy ds/sd  8 spt */
#define	BIOSM_F160K	0xfe	/* floppy ss/sd  8 spt */
#define	BIOSM_F360K	0xfd	/* floppy ds/sd  9 spt */
#define	BIOSM_F180K	0xfc	/* floppy ss/sd  9 spt */
#define	BIOSM_ROMD	0xfa	/* ROM disk */
#define	BIOSM_F120M	0xf9	/* floppy ds/hd 15 spt 5.25" */
#define	BIOSM_F720K	0xf9	/* floppy ds/dd  9 spt 3.50" */
#define	BIOSM_HD	0xf8	/* hard drive */
#define	BIOSM_F144K	0xf0	/* floppy ds/hd 18 spt 3.50" */
#define	BIOSM_OTHER	0xf0	/* any other */

/*
 * BIOS memory maps
 */
#define	BIOS_MAP_END	0x00	/* End of array XXX - special */
#define	BIOS_MAP_FREE	0x01	/* Usable memory */
#define	BIOS_MAP_RES	0x02	/* Reserved memory */
#define	BIOS_MAP_ACPI	0x03	/* ACPI Reclaim memory */
#define	BIOS_MAP_NVS	0x04	/* ACPI NVS memory */

/*
 * Optional ROM header
 */
typedef
struct bios_romheader {
	u_int16_t	signature;	/* 0xaa55 */
	u_int8_t	len;		/* length in pages (512 bytes) */
	u_int32_t	entry;		/* initialization entry point */
	u_int8_t	reserved[19];
	u_int16_t	pnpheader;	/* offset to PnP expansion header */
} __packed *bios_romheader_t;

#define	BIOS32_MAKESIG(a, b, c, d) \
	((a) | ((b) << 8) | ((c) << 16) | ((d) << 24))
#define	SMBIOS_SIGNATURE	BIOS32_MAKESIG('_', 'S', 'M', '_')

/*
 * CTL_BIOS definitions.
 */
#define	BIOS_DEV		1	/* int: BIOS boot device */
#define	BIOS_DISKINFO		2	/* struct: BIOS boot device info */
#define BIOS_CKSUMLEN		3	/* int: disk cksum block count */
#define	BIOS_MAXID		4	/* number of valid machdep ids */

#define	CTL_BIOS_NAMES { \
	{ 0, 0 }, \
	{ "biosdev", CTLTYPE_INT }, \
	{ "diskinfo", CTLTYPE_STRUCT }, \
	{ "cksumlen", CTLTYPE_INT }, \
}

#define	BOOTARG_MEMMAP 0
typedef struct _bios_memmap {
	u_int64_t addr;		/* Beginning of block */
	u_int64_t size;		/* Size of block */
	u_int32_t type;		/* Type of block */
} __packed bios_memmap_t;

/* Info about disk from the bios, plus the mapping from
 * BIOS numbers to BSD major (driver?) number.
 *
 * Also, do not bother with BIOSN*() macros, just parcel
 * the info out, and use it like this.  This makes for less
 * of a dependence on BIOSN*() macros having to be the same
 * across /boot, /bsd, and userland.
 */
#define	BOOTARG_DISKINFO 1
typedef struct _bios_diskinfo {
	/* BIOS section */
	int bios_number;	/* BIOS number of drive (or -1) */
	u_int bios_cylinders;	/* BIOS cylinders */
	u_int bios_heads;	/* BIOS heads */
	u_int bios_sectors;	/* BIOS sectors */
	int bios_edd;		/* EDD support */

	/* BSD section */
	dev_t bsd_dev;		/* BSD device */

	/* Checksum section */
	u_int32_t checksum;	/* Checksum for drive */

	/* Misc. flags */
	u_int32_t flags;
#define BDI_INVALID	0x00000001	/* I/O error during checksumming */
#define BDI_GOODLABEL	0x00000002	/* Had SCSI or ST506/ESDI disklabel */
#define BDI_BADLABEL	0x00000004	/* Had another disklabel */
#define BDI_EL_TORITO	0x00000008	/* 2,048-byte sectors */
#define BDI_HIBVALID	0x00000010	/* hibernate signature valid */
#define BDI_PICKED	0x80000000	/* kernel-only: cksum matched */

} __packed bios_diskinfo_t;

#define	BOOTARG_APMINFO 2
typedef struct _bios_apminfo {
	/* APM_CONNECT returned values */
	u_int	apm_detail;
	u_int	apm_code32_base;
	u_int	apm_code16_base;
	u_int	apm_code_len;
	u_int	apm_data_base;
	u_int	apm_data_len;
	u_int	apm_entry;
	u_int	apm_code16_len;
} __packed bios_apminfo_t;

#define	BOOTARG_CKSUMLEN 3		/* u_int32_t */

#define	BOOTARG_PCIINFO 4
typedef struct _bios_pciinfo {
	/* PCI BIOS v2.0+ - Installation check values */
	u_int32_t	pci_chars;	/* Characteristics (%eax) */
	u_int32_t	pci_rev;	/* BCD Revision (%ebx) */
	u_int32_t	pci_entry32;	/* PM entry point for PCI BIOS */
	u_int32_t	pci_lastbus;	/* Number of last PCI bus */
} __packed bios_pciinfo_t;

#define	BOOTARG_CONSDEV	5
typedef struct _bios_consdev {
	dev_t	consdev;
	int	conspeed;
	int	consaddr;
	int	consfreq;
} __packed bios_consdev_t;

#define BOOTARG_BOOTMAC	7
typedef struct _bios_bootmac {
	char	mac[6];
} __packed bios_bootmac_t;

#define BOOTARG_DDB 8
typedef struct _bios_ddb {
	int	db_console;
} __packed bios_ddb_t;

#define BOOTARG_BOOTDUID 9
typedef struct _bios_bootduid {
	u_char	duid[8];
} __packed bios_bootduid_t;

#define BOOTARG_BOOTSR 10
#define BOOTSR_UUID_MAX 16
#define BOOTSR_CRYPTO_MAXKEYBYTES 32
typedef struct _bios_bootsr {
	u_int8_t	uuid[BOOTSR_UUID_MAX];
	u_int8_t	maskkey[BOOTSR_CRYPTO_MAXKEYBYTES];
} __packed bios_bootsr_t;

#define	BOOTARG_EFIINFO 11
typedef struct _bios_efiinfo {
	uint64_t	config_acpi;
	uint64_t	config_smbios;
	uint64_t	fb_addr;
	uint64_t	fb_size;
	uint32_t	fb_height;
	uint32_t	fb_width;
	uint32_t	fb_pixpsl;	/* pixels per scan line */
	uint32_t	fb_red_mask;
	uint32_t	fb_green_mask;
	uint32_t	fb_blue_mask;
	uint32_t	fb_reserved_mask;
} __packed bios_efiinfo_t;

#if defined(_KERNEL) || defined (_STANDALONE)

#ifdef _LOCORE
#define	DOINT(n)	int	$0x20+(n)
#else
#define	DOINT(n)	"int $0x20+(" #n ")"

extern volatile struct BIOS_regs {
	u_int32_t	biosr_ax;
	u_int32_t	biosr_cx;
	u_int32_t	biosr_dx;
	u_int32_t	biosr_bx;
	u_int32_t	biosr_bp;
	u_int32_t	biosr_si;
	u_int32_t	biosr_di;
	u_int32_t	biosr_ds;
	u_int32_t	biosr_es;
} __packed BIOS_regs;

#ifdef _KERNEL
#include <machine/bus.h>

struct bios_attach_args {
	char		*ba_name;
	u_int		ba_biosfunc;
	bus_space_tag_t	ba_iot;
	bus_space_tag_t	ba_memt;
	union {
		void		*_p;
		bios_apminfo_t	*_ba_apmp;
		paddr_t		_ba_acpipbase;
	} _;
};

#define	ba_apmp		_._ba_apmp
#define ba_acpipbase	_._ba_acpipbase

struct consdev;
struct proc;

int bios_sysctl(int *, u_int, void *, size_t *, void *, size_t, struct proc *);

void bios_getopt(void);
bios_diskinfo_t *bios_getdiskinfo(dev_t);

extern u_int bootapiver;
extern bios_memmap_t *bios_memmap;
extern bios_efiinfo_t *bios_efiinfo;

#endif /* _KERNEL */
#endif /* _LOCORE */
#endif /* _KERNEL || _STANDALONE */

#endif /* _MACHINE_BIOSVAR_H_ */
@


1.23
log
@As early as possible, create a link /bsd.booted to the /bsd kernel we
presume we booted from.  If you boot from another kernel, we cannot help
you later with hibernate, sorry -- The kernel does not get a useable
filename from the bootblocks.

In the bootblocks, detect a live hibernate signature and boot from
/bsd.booted instead.

with yasuoka, lots of discussion with mlarkin, ok tom
@
text
@d1 1
a1 1
/*	$OpenBSD: biosvar.h,v 1.22 2015/08/30 10:05:09 yasuoka Exp $	*/
d110 1
a110 1
 * of a dependance on BIOSN*() macros having to be the same
d134 1
a134 1
#define BDI_HIBVALID	0x00000010	/* hibernate signiture valid */
@


1.22
log
@Modify kernel to prepare boot from UEFI.

- Add new boot arg "bios_efi_info_t" to pass the paramters from UEFI
- Make bios(4) and acpi(4) be able to probe with the parameters from
  UEFI
- Add efifb(8).  It uses the framebuffer from UEFI and it will work as
  a backend of wsdisplay(4) and wsfb (X11 video driver).  Disabled by
  the kernel config for this moment

input and ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: biosvar.h,v 1.21 2015/07/17 21:53:56 mlarkin Exp $	*/
d134 1
@


1.21
log
@
Remove (unused) references to bios32, which is not present in amd64.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: biosvar.h,v 1.20 2015/01/27 01:42:26 mlarkin Exp $	*/
d193 15
d255 1
@


1.20
log
@
Remove an odd comment in the first line of the file

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: biosvar.h,v 1.19 2013/11/02 15:02:27 kettenis Exp $	*/
a78 30
/*
 * BIOS32
 */
typedef
struct bios32_header {
	u_int32_t	signature;	/* 00: signature "_32_" */
	u_int32_t	entry;		/* 04: entry point */
	u_int8_t	rev;		/* 08: revision */
	u_int8_t	length;		/* 09: header length */
	u_int8_t	cksum;		/* 0a: modulo 256 checksum */
	u_int8_t	reserved[5];
} __packed *bios32_header_t;

typedef
struct bios32_entry_info {
	paddr_t	bei_base;
	psize_t	bei_size;
	paddr_t	bei_entry;
} __packed *bios32_entry_info_t;

typedef
struct bios32_entry {
	u_int32_t offset;
	u_int16_t segment;
} __packed *bios32_entry_t;

#define	BIOS32_START	0xe0000
#define	BIOS32_SIZE	0x20000
#define	BIOS32_END	(BIOS32_START + BIOS32_SIZE - 0x10)

a80 2
#define	BIOS32_SIGNATURE	BIOS32_MAKESIG('_', '3', '2', '_')
#define	PCIBIOS_SIGNATURE	BIOS32_MAKESIG('$', 'P', 'C', 'I')
a236 3

/* bios32.c */
int  bios32_service(u_int32_t, bios32_entry_t, bios32_entry_info_t);
@


1.19
log
@Cleanup bios_oconsdev_t.  Make sure you have a halfway recent bootloader
(at least BOOT 3.20 on amd64 and BOOT 3.18 on i386) or you'll risk losing
your serial console.

ok deraadt@@
@
text
@d1 1
a1 2
/* XXX - DSR */
/*	$OpenBSD: biosvar.h,v 1.18 2013/03/23 16:12:20 deraadt Exp $	*/
@


1.18
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.17 2012/10/09 12:58:07 jsing Exp $	*/
a201 6

/* XXX Remove before OpenBSD 5.3 gets released. */
typedef struct _bios_oconsdev {
	dev_t	consdev;
	int	conspeed;
} __packed bios_oconsdev_t;
@


1.17
log
@Allow boot(8) to pass information to the kernel, regarding the softraid
volume that it booted off.
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.15 2012/01/11 15:58:27 jsing Exp $	*/
d36 2
a37 2
#define	BOOTARG_OFF	(NBPG*2)
#define	BOOTARG_LEN	(NBPG*1)
@


1.16
log
@Add support for serial consoles at non-standard addresses.  This implements
a new "machine comaddr" command that makes it possible to configure the
io port used to access the serial port.  This can be used to use serial ports
on a puc(4) device as serial console.
@
text
@d224 8
@


1.15
log
@Pass the DUID of the boot disk via bootduid instead of rootduid, since it
is the DUID that we booted from, which is not always going to be the same
as the DUID that we mount root on.
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.14 2011/04/26 17:33:17 jsing Exp $	*/
d199 2
d202 6
@


1.14
log
@Make amd64/i386 boot(8) pass the DUID of the selected boot device to the
kernel so that it can use it to identify the root disk. This will be
needed in order to correctly boot from a softraid volume.

ok deraadt@@ marco@@ krw@@
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.12 2011/03/14 22:14:40 krw Exp $	*/
d211 2
a212 2
#define BOOTARG_ROOTDUID 9
typedef struct _bios_rootduid {
d214 1
a214 1
} __packed bios_rootduid_t;
@


1.13
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d211 5
@


1.12
log
@Clamp BIOS io attempts to < 2 ^28 - 1 sectors (a.k.a. 128GB for
512-byte sectors) as some BIOSen get confused when we ask for sectors
higher up.

Uss u_int throughout the boot code to calculate sector addresses,
since 32 bits is enough to do 28  ^ 1 - 1 arithmetic. Add checks
for wraparound.

I can now install and boot from the 7th extended partition below
128GB.

Much feedback & guidance from deraadt@@. Also from weingart@@ on
BIOS io.

ok deraadt@@ (less a couple of minor tweaks found in testing)
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.11 2010/11/22 21:07:18 miod Exp $	*/
d32 2
a33 2
#ifndef _I386_BIOSVAR_H_
#define _I386_BIOSVAR_H_
d266 1
a266 1
#endif /* _I386_BIOSVAR_H_ */
@


1.11
log
@Remove prototypes for missing (removed) functions or already found in a
MI header file.
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.10 2009/04/30 01:16:56 dlg Exp $	*/
d39 1
@


1.10
log
@pass db_console from the bootloader to the kernel, and then use it to
set ddb.console real early.

requested by art@@
no problem! deraadt@@
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.8 2007/12/05 19:17:14 deraadt Exp $	*/
a251 5
void bioscnprobe(struct consdev *);
void bioscninit(struct consdev *);
void bioscnputc(dev_t, int);
int bioscngetc(dev_t);
void bioscnpollc(dev_t, int);
@


1.9
log
@Avoid #pragma pack(1) and unify everything towards using __packed.
This requires that structures defined within __packed structures must
independently request that they themselves become __packed, too.
worked on with toby
 CVS: ----------------------------------------------------------------------
@
text
@d205 5
@


1.8
log
@Hang acpi(4) below bios(4) instead of mainbus(4).  This lets us move acpi(4)
before pcibios(4), and then.... if acpi(4) attaches, skip pcibios(4) since
it messes the machines up.  Fixes claudio's HP dl320 G5, and almost assuredly
others.
ok kettenis
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.7 2006/05/20 22:36:33 deraadt Exp $	*/
a33 1
#pragma pack(1)
d77 1
a77 1
} *bios_romheader_t;
d90 1
a90 1
} *bios32_header_t;
d97 1
a97 1
} *bios32_entry_info_t;
d103 1
a103 1
} *bios32_entry_t;
d135 1
a135 1
} bios_memmap_t;
d168 1
a168 1
} bios_diskinfo_t;
d181 1
a181 1
} bios_apminfo_t;
d192 1
a192 1
} bios_pciinfo_t;
d198 1
a198 1
} bios_consdev_t;
d203 1
a203 1
} bios_bootmac_t;
d222 1
a222 1
}	BIOS_regs;
a264 1
#pragma pack()
@


1.7
log
@add bios_bootmac_t and BOOTARG_BOOTMAC
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.6 2006/05/08 22:51:18 gwk Exp $	*/
d229 4
a232 4
	char *bios_dev;
	u_int bios_func;
	bus_space_tag_t bios_iot;
	bus_space_tag_t bios_memt;
d234 3
a236 2
		void *_p;
		bios_apminfo_t *_bios_apmp;
d240 2
a241 1
#define	bios_apmp	_._bios_apmp
@


1.6
log
@Add smbios support for i386 and amd64, fix ipmi to use this new functionallity,
hook up some sysctls to add system vendor/product/version and UUID reporting.

"get it in" deraadt@@
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.5 2005/12/13 23:13:45 mickey Exp $	*/
d200 5
@


1.5
log
@remove ad clause that got copied from older versions of the files; pto by jsg@@
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.4 2004/08/21 18:53:38 tom Exp $	*/
d45 1
d114 1
@


1.4
log
@Enter cdboot, a CD-specific second-stage bootrap.  Based on the i386
cdboot that Toby and I put together at the hackathon.

"go for it" deraadt@@
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.3 2004/02/27 21:55:25 deraadt Exp $	*/
d16 1
a16 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
@


1.3
log
@put a bit more flesh in the sysctl machdep; parts from tom
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.2 2004/02/03 12:09:47 mickey Exp $	*/
d167 1
@


1.2
log
@das boot; das cloned das from das i386
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.1 2004/01/28 01:39:39 mickey Exp $	*/
d247 1
@


1.2.2.1
log
@Merge with the trunk
@
text
@d2 1
a2 1
/*	$OpenBSD$	*/
a246 1
bios_diskinfo_t *bios_getdiskinfo(dev_t);
@


1.1
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d2 1
a2 1
/*	$OpenBSD: biosvar.h,v 1.40 2002/03/14 01:26:33 millert Exp $	*/
d208 1
a208 1
extern struct BIOS_regs {
@

