head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.8
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.8
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.09.26.16.01.00;	author guenther;	state Exp;
branches;
next	1.15;
commitid	7hXtG92g49YWbJA4;

1.15
date	2014.03.19.05.14.13;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2013.12.18.16.41.01;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2013.07.05.19.46.27;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2013.07.04.13.57.40;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2013.07.04.05.19.41;	author guenther;	state Exp;
branches;
next	1.10;

1.10
date	2012.11.05.19.39.34;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.08.02.47.13;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.04.19.14.09;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.21.20.50.54;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.16.17.27.30;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.15.15.23.35;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.07.09.09.42;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.18.50.08;	author millert;	state Exp;
branches;
next	;


desc
@@


1.16
log
@lint is dead and C99 may be old enough to drive a car: delete LONGLONG
comments

ok millert@@
@
text
@/*	$OpenBSD: _types.h,v 1.15 2014/03/19 05:14:13 guenther Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)types.h	8.3 (Berkeley) 1/5/94
 *	@@(#)ansi.h	8.2 (Berkeley) 1/4/94
 */

#ifndef _MACHINE__TYPES_H_
#define _MACHINE__TYPES_H_

/*
 * _ALIGN(p) rounds p (pointer or byte index) up to a correctly-aligned
 * value for all data types (int, long, ...).   The result is an
 * unsigned long and must be cast to any desired pointer type.
 *
 * _ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
 */
#define	_ALIGNBYTES		(sizeof(long) - 1)
#define	_STACKALIGNBYTES	15
#define	_ALIGN(p)		(((unsigned long)(p) + _ALIGNBYTES) &~_ALIGNBYTES)
#define	_ALIGNED_POINTER(p,t)	1

#if defined(_KERNEL)
typedef struct label_t {
	long val[8];
} label_t;
#endif

/* 7.18.1.1 Exact-width integer types */
typedef	signed char		__int8_t;
typedef	unsigned char		__uint8_t;
typedef	short			__int16_t;
typedef	unsigned short		__uint16_t;
typedef	int			__int32_t;
typedef	unsigned int		__uint32_t;
typedef	long long		__int64_t;
typedef	unsigned long long	__uint64_t;

/* 7.18.1.2 Minimum-width integer types */
typedef	__int8_t		__int_least8_t;
typedef	__uint8_t		__uint_least8_t;
typedef	__int16_t		__int_least16_t;
typedef	__uint16_t		__uint_least16_t;
typedef	__int32_t		__int_least32_t;
typedef	__uint32_t		__uint_least32_t;
typedef	__int64_t		__int_least64_t;
typedef	__uint64_t		__uint_least64_t;

/* 7.18.1.3 Fastest minimum-width integer types */
typedef	__int32_t		__int_fast8_t;
typedef	__uint32_t		__uint_fast8_t;
typedef	__int32_t		__int_fast16_t;
typedef	__uint32_t		__uint_fast16_t;
typedef	__int32_t		__int_fast32_t;
typedef	__uint32_t		__uint_fast32_t;
typedef	__int64_t		__int_fast64_t;
typedef	__uint64_t		__uint_fast64_t;
#define	__INT_FAST8_MIN		INT32_MIN
#define	__INT_FAST16_MIN	INT32_MIN
#define	__INT_FAST32_MIN	INT32_MIN
#define	__INT_FAST64_MIN	INT64_MIN
#define	__INT_FAST8_MAX		INT32_MAX
#define	__INT_FAST16_MAX	INT32_MAX
#define	__INT_FAST32_MAX	INT32_MAX
#define	__INT_FAST64_MAX	INT64_MAX
#define	__UINT_FAST8_MAX	UINT32_MAX
#define	__UINT_FAST16_MAX	UINT32_MAX
#define	__UINT_FAST32_MAX	UINT32_MAX
#define	__UINT_FAST64_MAX	UINT64_MAX

/* 7.18.1.4 Integer types capable of holding object pointers */
typedef	long			__intptr_t;
typedef	unsigned long		__uintptr_t;

/* 7.18.1.5 Greatest-width integer types */
typedef	__int64_t		__intmax_t;
typedef	__uint64_t		__uintmax_t;

/* Register size */
typedef long			__register_t;

/* VM system types */
typedef unsigned long		__vaddr_t;
typedef unsigned long		__paddr_t;
typedef unsigned long		__vsize_t;
typedef unsigned long		__psize_t;

/* Standard system types */
typedef	double			__double_t;
typedef	float			__float_t;
typedef long			__ptrdiff_t;
typedef	unsigned long		__size_t;
typedef	long			__ssize_t;
#if defined(__GNUC__) && __GNUC__ >= 3
typedef	__builtin_va_list	__va_list;
#else
typedef char *			__va_list;
#endif

/* Wide character support types */
#ifndef __cplusplus
typedef	int			__wchar_t;
#endif
typedef int			__wint_t;
typedef	int			__rune_t;
typedef	void *			__wctrans_t;
typedef	void *			__wctype_t;

#endif	/* _MACHINE__TYPES_H_ */
@


1.15
log
@It's safe to assumed 'signed' exists
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.14 2013/12/18 16:41:01 deraadt Exp $	*/
a65 1
/* LONGLONG */
a66 1
/* LONGLONG */
@


1.14
log
@Provide MI symbol _STACKALIGNBYTES
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.13 2013/07/05 19:46:27 guenther Exp $	*/
d60 1
a60 1
typedef	__signed char		__int8_t;
@


1.13
log
@Take II, this time without flubbing off_t: : move several internal
type definitions that are the same across all archs from
<machine/_types.h> to <sys/_types.h>

ok deraadt@@ kettenis@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.12 2013/07/04 13:57:40 otto Exp $	*/
d48 3
a50 2
#define	_ALIGNBYTES	(sizeof(long) - 1)
#define	_ALIGN(p)	(((unsigned long)(p) + _ALIGNBYTES) &~_ALIGNBYTES)
@


1.12
log
@backout previous; off_t must be signed and there might be other C++ API
breakage lurking; ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.10 2012/11/05 19:39:34 miod Exp $	*/
a119 2
typedef int			__clock_t;
typedef int			__clockid_t;
a121 1
typedef long long		__off_t;
a124 2
typedef	int			__time_t;
typedef int			__timer_t;
@


1.11
log
@To ease future changes, move several internal type definitions that are
the same across all archs from <machine/_types.h> to <sys/_types.h>

ok deraadt@@
@
text
@d120 2
d124 1
d128 2
@


1.10
log
@unifdef -D __HAVE_TIMECOUNTER
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.9 2011/09/08 03:40:32 guenther Exp $	*/
a119 2
typedef int			__clock_t;
typedef int			__clockid_t;
a121 1
typedef long long		__off_t;
a124 2
typedef	int			__time_t;
typedef int			__timer_t;
@


1.9
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.8 2011/09/08 02:47:13 guenther Exp $	*/
a143 3

/* Feature test macros */
#define __HAVE_TIMECOUNTER
@


1.8
log
@Make the INT_FAST*_{MIN,MAX} macros match the types they're defined to.
Since the underlying types of the int_fast types are set by machine/_types.h,
put internal macros in that same file and define the exposed
INT_FAST*_{MIN,MAX} macros from those.

ok millert@@, kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.7 2011/03/23 16:54:34 pirofti Exp $	*/
d37 14
@


1.7
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.6 2009/11/04 19:14:09 kettenis Exp $	*/
d75 12
@


1.6
log
@Get rid of __HAVE_GENERIC_SOFT_INTERRUPTS now that all our platforms support it.

ok jsing@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.5 2008/07/21 20:50:54 martynas Exp $	*/
d35 2
a36 2
#ifndef _AMD64__TYPES_H_
#define _AMD64__TYPES_H_
d122 1
a122 1
#endif	/* _AMD64__TYPES_H_ */
@


1.5
log
@- add proper double_t and float_t definitions for each arch
- math.h shouldn't define FLT_EVAL_METHOD, but float.h should (per
C99).  remove from math.h, and add proper definitions in float.h
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.4 2007/05/16 17:27:30 art Exp $	*/
a119 1
#define __HAVE_GENERIC_SOFT_INTERRUPTS
@


1.4
log
@The world of __HAVEs and __HAVE_NOTs is reducing. All architectures
have cpu_info now, so kill the option.

eyeballed by jsg@@ and grange@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.3 2007/05/15 15:23:35 art Exp $	*/
d96 2
@


1.3
log
@Remove the MI implementation of mutexes and remove the __HAVE_MUTEX
option. Every architecture implements mutexes now.
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.2 2006/11/07 09:09:42 otto Exp $	*/
a118 1
#define __HAVE_CPUINFO
@


1.2
log
@Timecounters for amd64. Diff by art@@, tested by many. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.1 2006/01/06 18:50:08 millert Exp $	*/
a119 1
#define __HAVE_MUTEX
@


1.1
log
@Merge machine/ansi.h and machine/types.h into machine/_types.h and
rename the types using the __ protected namespace (e.g. __size_t).
Idea from FreeBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d121 1
@

