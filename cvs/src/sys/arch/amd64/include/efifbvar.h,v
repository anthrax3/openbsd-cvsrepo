head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2016.06.21.15.24.55;	author jcs;	state Exp;
branches;
next	1.3;
commitid	RnGuu1BeGyvYHPrZ;

1.3
date	2015.10.30.11.21.01;	author kettenis;	state Exp;
branches;
next	1.2;
commitid	VcCJwOOmRBie2Wwe;

1.2
date	2015.08.31.19.56.32;	author kettenis;	state Exp;
branches;
next	1.1;
commitid	bQYNf2dfjwCUc5w2;

1.1
date	2015.08.30.10.05.09;	author yasuoka;	state Exp;
branches;
next	;
commitid	8KYmU15QlyhusRif;


desc
@@


1.4
log
@add support to efifb for drawing a console on a coreboot framebuffer
if coreboot's memory table is found, it has a framebuffer entry, and
there is no previously attached efi, vga, or serial console.

useful on chromebooks that have no legacy vga device to get an early
console before inteldrm(4) attaches or, for newer chipsets, a full
console and X with wsfb(4).

ok kettenis
@
text
@/*	$OpenBSD: efifbvar.h,v 1.3 2015/10/30 11:21:01 kettenis Exp $	*/

/*
 * Copyright (c) 2015 YASUOKA Masahiko <yasuoka@@yasuoka.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MACHINE_EFIFB_H_
#define _MACHINE_EFIFB_H_

struct efifb_attach_args {
	const char		*eaa_name;
};

struct pci_attach_args;

int efifb_cnattach(void);
int efifb_is_console(struct pci_attach_args *);
void efifb_cndetach(void);

int efifb_cb_found(void);
int efifb_cb_cnattach(void);

#endif /* _MACHINE_EFIFB_H_ */
@


1.3
log
@Fix interaction between inteldrm(4) and efifb(4).  If we were booted by UEFI
firmware and the efifb(4) framebuffer address matches one of the BARs
associated with the inteldrm(4) device, make inteldrm(4) the console and
prevent efifb(4) from attaching.  Make sure that we do a full clear of the
framebuffer when inteldrm(4) attaches to prevent the contents of the old
framebuffer from showing up.

Based on an earlier diff from yasuoka@@
ok yasuoka@@
@
text
@d1 1
a1 1
/*	$OpenBSD: efifbvar.h,v 1.2 2015/08/31 19:56:32 kettenis Exp $	*/
d31 3
@


1.2
log
@Check driver name in match function such that driver only attempts to attach
when we actually want it to.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: efifbvar.h,v 1.1 2015/08/30 10:05:09 yasuoka Exp $	*/
d26 2
d29 2
@


1.1
log
@Modify kernel to prepare boot from UEFI.

- Add new boot arg "bios_efi_info_t" to pass the paramters from UEFI
- Make bios(4) and acpi(4) be able to probe with the parameters from
  UEFI
- Add efifb(8).  It uses the framebuffer from UEFI and it will work as
  a backend of wsdisplay(4) and wsfb (X11 video driver).  Disabled by
  the kernel config for this moment

input and ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d19 7
d27 2
@

