head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.30
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.24
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2017.02.08.05.09.25;	author guenther;	state Exp;
branches;
next	1.6;
commitid	V3fgN8BO1mri8xSU;

1.6
date	2015.08.29.01.58.39;	author guenther;	state Exp;
branches;
next	1.5;
commitid	tXJb6vLxru5vPZNh;

1.5
date	2015.08.29.01.58.39;	author guenther;	state Exp;
branches;
next	1.4;
commitid	tXJb6vLxru5vPZNh;

1.4
date	2012.09.11.15.44.17;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.27.17.41.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.25;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@In exec_elf.c: expand ELFNAME(), ELFNAME2(), and ELFNAMEEND() except
leaving out the size, so that
	ELFNAME2(exec,makecmds)
becomes
	exec_elf_makecmds
instead of
	exec_elf{32,64}_makecmds
and then delete the ELFNAME2() and ELFNAMEEND() macros.

Move the prototypes for functions local to exec_elf.c to there from
exec_elf.h.

Simplify the SMALL_KERNEL conditionals around the ELF coredump code.

Change exec_conf.c to use the size-generic names and macros

Remove exec_elf{32,64}.c and just build exec_elf.c; delete the
_KERN_DO_ELF and _KERN_DO_ELF64 #defines.

ok jca@@, encouragement from deraadt@@ and tom@@
@
text
@/*	$OpenBSD: exec.h,v 1.6 2015/08/29 01:58:39 guenther Exp $	*/
/*
 * Written by Artur Grabowski <art@@openbsd.org> Public Domain
 */

#ifndef _MACHINE_EXEC_H_
#define _MACHINE_EXEC_H_

#define __LDPGSZ 4096

#define ARCH_ELFSIZE 64

#define ELF_TARG_CLASS		ELFCLASS64
#define ELF_TARG_DATA		ELFDATA2LSB
#define ELF_TARG_MACH		EM_AMD64

#endif
@


1.6
log
@_NLIST_DO_ELF is no longer needed: it's the only option

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.4 2012/09/11 15:44:17 deraadt Exp $	*/
a15 2

#define _KERN_DO_ELF64
@


1.5
log
@_NLIST_DO_ELF is no longer needed: it's the only option

ok deraadt@@
@
text
@@


1.4
log
@Remove the 'OLF method' used for the transition from a.out to ELF and
for all the compat layers which are now gone.  Linux compat still works
because it always used another method in any case, and nothing looks at
p_os anymore.
ok jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.3 2011/03/23 16:54:34 pirofti Exp $	*/
a16 1
#define _NLIST_DO_ELF
@


1.3
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.2 2004/02/27 17:41:25 deraadt Exp $	*/
a9 2

#define NATIVE_EXEC_ELF
@


1.2
log
@move to amd64 MACHINE_ARCH
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.1 2004/01/28 01:39:39 mickey Exp $	*/
d6 2
a7 2
#ifndef _AMD64_EXEC_H_
#define _AMD64_EXEC_H_
@


1.1
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 1
a17 1
#define ELF_TARG_MACH		EM_X86_64
@


1.1.2.1
log
@Merge with the trunk
@
text
@d17 1
a17 1
#define ELF_TARG_MACH		EM_AMD64
@


