head	1.24;
access;
symbols
	OPENBSD_6_2:1.24.0.4
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.23.0.4
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.22.0.14
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.10
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.22.0.12
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.4
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.22.0.8
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.18.0.6
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.4
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.2
	OPENBSD_5_0:1.17.0.4
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.15.0.8
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.10
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.6
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.4
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.24
date	2017.09.06.04.44.39;	author dlg;	state Exp;
branches;
next	1.23;
commitid	wpakCzzvRBWbDvZY;

1.23
date	2016.09.03.14.25.27;	author bluhm;	state Exp;
branches;
next	1.22;
commitid	9KYyCUntEsgBdw9n;

1.22
date	2013.03.26.05.04.10;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2013.03.23.16.12.20;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2013.03.21.15.50.28;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.29.00.06.04;	author dlg;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.22.05.20.40;	author dlg;	state Exp;
branches;
next	1.15;

1.15
date	2007.10.28.10.25.09;	author martin;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.19.01.47.23;	author martin;	state Exp;
branches;
next	1.12;

1.12
date	2006.02.05.15.55.50;	author martin;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.13.01.56.43;	author martin;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.13.00.18.19;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.28.16.56.32;	author martin;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.26.18.46.07;	author martin;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.21.18.55.00;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.31.15.31.11;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.06.22.31.30;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.13.21.49.13;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.19.22.55.48;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.27.17.41.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.25;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.06.05.23.23.30;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.24
log
@bump UPAGES to 6.

deraadt@@s stack base randomisation may take away up to a whole page
in space, and it is possible that i will take another whole page
away in the future as a guard page. this means we continue to provide
roughtly the same amount of stack space that has previously been
in effect.

ok deraadt@@
@
text
@/*	$OpenBSD: param.h,v 1.23 2016/09/03 14:25:27 bluhm Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#ifdef _KERNEL
#ifdef _LOCORE
#include <machine/psl.h>
#else
#include <machine/cpu.h>
#endif
#endif

#define	_MACHINE	amd64
#define	MACHINE		"amd64"
#define	_MACHINE_ARCH	amd64
#define	MACHINE_ARCH	"amd64"
#define	MID_MACHINE	MID_AMD64

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define	KERNBASE	0xffffffff80000000	/* start of kernel virtual space */

#ifdef _KERNEL

#define	KERNTEXTOFF	(KERNBASE+0x1000000)	/* start of kernel text */
#define	KERNTEXTOFF_HI	0xffffffff
#define	KERNTEXTOFF_LO	0x81000000

#define	KERNBASE_HI	0xffffffff
#define	KERNBASE_LO	0x80000000

#define	NBPG		PAGE_SIZE		/* bytes/page */
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */

#define	UPAGES		6			/* pages of u-area */
#define	USPACE		(UPAGES * PAGE_SIZE)	/* total size of u-area */
#define	USPACE_ALIGN	0			/* u-area alignment 0-none */

#define	NMBCLUSTERS	(256 * 1024)		/* max cluster allocation */

#ifndef	MSGBUFSIZE
#define	MSGBUFSIZE	(16 * PAGE_SIZE)	/* default message buffer size */
#endif

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT	((128 * 1024 * 1024) >> PAGE_SHIFT)

#endif /* _KERNEL */

#endif /* _MACHINE_PARAM_H_ */
@


1.23
log
@Increase the number of mbufs on most architectures.  This is based
on a guess how much memory a typical machine has.  If the value is
too high, users may run out of kernel memory.  Then we will have
to adjust this again.
OK claudio@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 2013/03/26 05:04:10 deraadt Exp $	*/
d71 1
a71 1
#define	UPAGES		5			/* pages of u-area */
@


1.22
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2013/03/25 17:46:24 deraadt Exp $	*/
d75 1
a75 1
#define	NMBCLUSTERS	6144			/* map size, max cluster allocation */
@


1.21
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2013/03/23 16:12:20 deraadt Exp $	*/
a54 2
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */
d68 2
@


1.20
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2013/03/21 15:50:28 deraadt Exp $	*/
a50 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.19
log
@move kernel after 16MB. needed for additional growth that might come in a
little while...
diff from martynas who is not around now
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2011/09/08 03:40:32 guenther Exp $	*/
a32 2
 *
 *	@@(#)param.h     5.8 (Berkeley) 6/28/91
d35 3
d50 1
a50 1
#define MID_MACHINE	MID_AMD64
d56 22
a77 25
#define	PGSHIFT		12		/* LOG2(NBPG) */
#define	NBPG		(1 << PGSHIFT)	/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */

#define PAGE_SHIFT	12
#define PAGE_SIZE	(1 << PAGE_SHIFT)
#define PAGE_MASK	(PAGE_SIZE - 1)

#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))

#define	KERNBASE	0xffffffff80000000 /* start of kernel virtual space */
#define KERNTEXTOFF	(KERNBASE+0x1000000)	/* start of kernel text */

#define KERNTEXTOFF_HI	0xffffffff
#define KERNTEXTOFF_LO	0x81000000

#define KERNBASE_HI	0xffffffff
#define KERNBASE_LO	0x80000000

#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define	BLKDEV_IOSIZE	2048
#ifndef	MAXPHYS
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
#endif
d79 1
a79 3
#define	UPAGES		5		/* pages of u-area */
#define	USPACE		(UPAGES * NBPG)	/* total size of u-area */
#define	USPACE_ALIGN	(0)		/* u-area alignment 0-none */
d81 2
a82 2
#ifndef MSGBUFSIZE
#define MSGBUFSIZE	16*NBPG		/* default message buffer size */
d86 1
a86 6
 * Constants related to network buffer management.
 */
#define	NMBCLUSTERS	6144		/* map size, max cluster allocation */

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
a88 1
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
d91 1
a91 7
/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* bytes to disk blocks */
#define	dbtob(x)	((x) << DEV_BSHIFT)
#define	btodb(x)	((x) >> DEV_BSHIFT)
d93 1
a93 6
/*
 * Mach derived conversion macros
 */
#define	x86_round_pdr(x) \
	((((unsigned long)(x)) + (NBPD_L2 - 1)) & ~(NBPD_L2 - 1))
#define	x86_trunc_pdr(x)	((unsigned long)(x) & ~(NBPD_L2 - 1))
@


1.18
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2010/11/29 00:06:04 dlg Exp $	*/
d66 1
a66 1
#define KERNTEXTOFF	(KERNBASE+0x100000)	/* start of kernel text */
d69 1
a69 1
#define KERNTEXTOFF_LO	0x80100000
@


1.17
log
@double the default message buffer size. again.

requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2010/06/22 05:20:40 dlg Exp $	*/
d51 3
a53 14
/*
 * Round p (pointer or byte index) up to a correctly-aligned value
 * for all data types (int, long, ...).   The result is u_long and
 * must be cast to any desired pointer type.
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
 *
 */
#define ALIGNBYTES		(sizeof(long) - 1)
#define ALIGN(p)		(((u_long)(p) + ALIGNBYTES) &~ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	1
@


1.16
log
@bump up the dmesg buffer size. new boxes have lots of crap in them, so
boot messages can be too big to fit.

sure deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2007/05/28 21:02:49 thib Exp $	*/
d97 1
a97 1
#define MSGBUFSIZE	8*NBPG		/* default message buffer size */
@


1.15
log
@get rid of btoc/ctob in favor of atop/ptoa
@
text
@d97 1
a97 1
#define MSGBUFSIZE	4*NBPG		/* default message buffer size */
@


1.14
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2006/03/19 01:47:23 martin Exp $	*/
a114 4

/* bytes to pages */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
@


1.13
log
@remove unused bdbtofsb(bn) macro

found by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2006/02/05 15:55:50 martin Exp $	*/
a101 4
 * MCLBYTES must be no larger than NBPG (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a102 4
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11		/* convert bytes to m_buf clusters */
#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define MCLOFSET	(MCLBYTES - 1)	/* offset within a m_buf cluster */
@


1.12
log
@remove useless comment about macros being different from i386
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2005/12/13 01:56:43 martin Exp $	*/
a130 8

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE / DEV_BSIZE))
@


1.11
log
@nuke unused BTOPKERNBASE define

pointed out by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2005/12/13 00:18:19 jsg Exp $	*/
a139 3
/*
 * XXXfvdl the PD* stuff is different from i386.
 */
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.
Checked by ian@@, deraadt@@ and millert@@, arm portion checked by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 2005/11/28 16:56:32 martin Exp $	*/
a77 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
@


1.9
log
@- consistently use x86_round_pdr() allowing us to remove the superfluous
  round_pdr() macro
- while there remove two more unused Mach macros
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 2005/10/26 18:46:07 martin Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@goodbye more Mach macros

help toby, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 2005/10/21 18:55:00 martin Exp $	*/
a153 4
#define	x86_btod(x)		((unsigned long)(x) >> L2_SHIFT)
#define	x86_dtob(x)		((unsigned long)(x) << L2_SHIFT)

#define round_pdr(x)			x86_round_pdr(x)
@


1.7
log
@use the MI trunc_page() and round_page() macros instead of rolling or own

ok weingart@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 2005/07/31 15:31:11 miod Exp $	*/
a155 2
#define	x86_btop(x)		((unsigned long)(x) >> PGSHIFT)
#define	x86_ptob(x)		((unsigned long)(x) << PGSHIFT)
a156 2
#define btop(x)				x86_btop(x)
#define ptob(x)				x86_ptob(x)
@


1.6
log
@Get rid of unused SINCR and SSIZE constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 2004/08/06 22:31:30 mickey Exp $	*/
a155 2
#define	x86_round_page(x)	((((unsigned long)(x)) + PGOFSET) & ~PGOFSET)
#define	x86_trunc_page(x)	((unsigned long)(x) & ~PGOFSET)
@


1.5
log
@provide md USPACE_ALIGN zero on all but mips; deradat@@ pefo@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 2004/06/13 21:49:13 niklas Exp $	*/
a96 2
#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
@


1.4
log
@debranch SMP, have fun
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d101 1
@


1.3
log
@remove the GATEWAY junk thingy; at the same time, select a new fat
cluster value that noone will really need to crank.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.2 2004/02/27 17:41:25 deraadt Exp $	*/
a164 6

/* XXX - oh, the horror.. Just for now. */
#define KERNEL_PROC_LOCK(p)
#define KERNEL_PROC_UNLOCK(p)
#define KERNEL_LOCK(i)
#define KERNEL_UNLOCK()
@


1.2
log
@move to amd64 MACHINE_ARCH
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.1 2004/01/28 01:39:39 mickey Exp $	*/
d117 1
a117 4

#ifndef NMBCLUSTERS
#define	NMBCLUSTERS	2048		/* map size, max cluster allocation */
#endif
@


1.1
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d51 3
a53 3
#define	_MACHINE_ARCH	x86_64
#define	MACHINE_ARCH	"x86_64"
#define MID_MACHINE	MID_X86_64
@


1.1.2.1
log
@Merge with the trunk
@
text
@d51 3
a53 3
#define	_MACHINE_ARCH	amd64
#define	MACHINE_ARCH	"amd64"
#define MID_MACHINE	MID_AMD64
d117 4
a120 1
#define	NMBCLUSTERS	6144		/* map size, max cluster allocation */
@


1.1.2.2
log
@KERNEL_LOCK lives in systm.h now
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.1.2.1 2004/06/05 23:09:25 niklas Exp $	*/
d165 6
@


