head	1.3;
access;
symbols
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2011.03.18.03.10.47;	author guenther;	state dead;
branches;
next	1.2;

1.2
date	2008.06.26.05.42.09;	author ray;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Old-style MTRRs were never used on amd64, so remove the remaining traces
of them, as well as some other unused proc md_flags bits: MDP_COMPAT and
MDP_SYSCALL.

ok mikeb@@
@
text
@/*	$OpenBSD: mtrr.h,v 1.2 2008/06/26 05:42:09 ray Exp $	*/
/* $NetBSD: mtrr.h,v 1.1 2003/02/26 21:26:11 fvdl Exp $ */

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Bill Sommerfeld
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _X86_MTRR_H_
#define _X86_MTRR_H_

#define MTRR_I686_FIXED_IDX64K	0
#define MTRR_I686_FIXED_IDX16K	1
#define MTRR_I686_FIXED_IDX4K	3

#define MTRR_I686_NVAR		8

#define MTRR_I686_64K_START		0x00000
#define MTRR_I686_16K_START		0x80000
#define MTRR_I686_4K_START		0xc0000

#define MTRR_I686_NFIXED_64K		1
#define MTRR_I686_NFIXED_16K		2
#define MTRR_I686_NFIXED_4K		8
#define MTRR_I686_NFIXED		11
#define MTRR_I686_NFIXED_SOFT_64K	(MTRR_I686_NFIXED_64K * 8)
#define MTRR_I686_NFIXED_SOFT_16K	(MTRR_I686_NFIXED_16K * 8)
#define MTRR_I686_NFIXED_SOFT_4K	(MTRR_I686_NFIXED_4K * 8)
#define MTRR_I686_NFIXED_SOFT		(MTRR_I686_NFIXED * 8)

#define MTRR_I686_ENABLE_MASK	0x0800
#define MTRR_I686_FIXED_ENABLE_MASK	0x0400

#define MTRR_I686_CAP_VCNT_MASK	0x00ff
#define MTRR_I686_CAP_FIX_MASK	0x0100
#define MTRR_I686_CAP_WC_MASK	0x0400

#define MTRR_TYPE_UC		0
#define MTRR_TYPE_WC		1
#define MTRR_TYPE_UNDEF1	2
#define MTRR_TYPE_UNDEF2	3
#define MTRR_TYPE_WT		4
#define MTRR_TYPE_WP		5
#define MTRR_TYPE_WB		6

struct mtrr_state {
	uint32_t msraddr;
	uint64_t msrval;
};
	
#define MTRR_PRIVATE	0x0001		/* 'own' range, reset at exit */
#define MTRR_FIXED	0x0002		/* use fixed range mtrr */
#define MTRR_VALID	0x0004		/* entry is valid */

#define MTRR_CANTSET	MTRR_FIXED

#define MTRR_I686_MASK_VALID	(1 << 11)

/*
 * AMD K6 MTRRs.
 *
 * There are two of these MTRR-like registers in the UWCRR.
 */

#define	MTRR_K6_ADDR_SHIFT 17
#define	MTRR_K6_ADDR	(0x7fffU << MTRR_K6_ADDR_SHIFT)
#define	MTRR_K6_MASK_SHIFT 2
#define	MTRR_K6_MASK	(0x7fffU << MTRR_K6_MASK_SHIFT)
#define	MTRR_K6_WC	(1U << 1)	/* write-combine */
#define	MTRR_K6_UC	(1U << 0)	/* uncached */

#define	MTRR_K6_NVAR	2

#ifdef _KERNEL

#define mtrr_base_value(mtrrp) \
    (((uint64_t)(mtrrp)->base) | ((uint64_t)(mtrrp)->type))
#define mtrr_mask_value(mtrrp) \
    ((~((mtrrp)->len - 1) & 0x0000000ffffff000))
	

#define mtrr_len(val) \
    ((~((val) & 0x0000000ffffff000)+1) & 0x0000000ffffff000)
#define mtrr_base(val)		((val) & 0x0000000ffffff000)
#define mtrr_type(val)		((uint8_t)((val) & 0x00000000000000ff))
#define mtrr_valid(val)		(((val) & MTRR_I686_MASK_VALID) != 0)

struct proc;
struct mtrr;

void i686_mtrr_init_first(void);
void k6_mtrr_init_first(void);

struct mtrr_funcs {
	void (*init_cpu)(struct cpu_info *ci);
	void (*reload_cpu)(struct cpu_info *ci);
	void (*clean)(struct proc *p);
	int (*set)(struct mtrr *, int *n, struct proc *p, int flags);
	int (*get)(struct mtrr *, int *n, struct proc *p, int flags);
	void (*commit)(void);
	void (*dump)(const char *tag);
};

extern struct mtrr_funcs i686_mtrr_funcs;
extern struct mtrr_funcs k6_mtrr_funcs;
extern struct mtrr_funcs *mtrr_funcs;

#define mtrr_init_cpu(ci)	mtrr_funcs->init_cpu(ci)
#define mtrr_reload_cpu(ci)	mtrr_funcs->reload_cpu(ci)
#define mtrr_clean(p)		mtrr_funcs->clean(p)
#define mtrr_set(mp,n,p,f)	mtrr_funcs->set(mp,n,p,f)
#define mtrr_get(mp,n,p,f)	mtrr_funcs->get(mp,n,p,f)
#define mtrr_dump(s)		mtrr_funcs->dump(s)
#define mtrr_commit()		mtrr_funcs->commit()

#define MTRR_GETSET_USER	0x0001
#define MTRR_GETSET_KERNEL	0x0002

#endif /* _KERNEL */

struct mtrr {
	uint64_t base;		/* physical base address */
	uint64_t len;
	uint8_t type;
	int flags;
	pid_t owner;		/* valid if MTRR_PRIVATE set in flags */
};

#endif /* _X86_MTRR_H_ */
@


1.2
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mtrr.h,v 1.1 2004/01/28 01:39:39 mickey Exp $	*/
@


1.1
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@

