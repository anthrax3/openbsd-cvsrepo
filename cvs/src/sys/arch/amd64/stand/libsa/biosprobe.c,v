head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.38
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.36
	OPENBSD_5_0:1.1.0.34
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.32
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.30
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.28
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.24
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.22
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2014.03.29.18.09.28;	author guenther;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.30.14.06.29;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.03.12.09.47;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@It's been a quarter century: we can assume volatile is present with that name.

ok dlg@@ mpi@@ deraadt@@
@
text
@/*	$OpenBSD: biosprobe.c,v 1.2 2012/10/30 14:06:29 jsing Exp $	*/

/*
 * Copyright (c) 2002 Tobias Weingartner
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <machine/biosvar.h>
#include <machine/pio.h>
#include <dev/cons.h>
#include <sys/disklabel.h>
#include "disk.h"
#include "libsa.h"
#include "biosdev.h"


void *
getSYSCONFaddr(void)
{
	u_int32_t status;
	u_int8_t *vers;

	__asm volatile(DOINT(0x15) "\n\t"
	    "setc %%al\n\t"
	    : "=a" (status)
	    : "0" (0xC000)
	    : "%ebx", "%ecx", "%edx", "%esi", "%edi", "cc");

	/* On failure we go for a NULL */
	if (status)
		return NULL;

	/* Calculate where the version bytes are */
	vers = (void*)((BIOS_regs.biosr_es << 4) | BIOS_regs.biosr_bx);
	return vers;
}

void *
getEBDAaddr(void)
{
	u_int32_t status;
	u_int8_t *info;

	info = getSYSCONFaddr();

	if (!info)
		return NULL;

	__asm volatile(DOINT(0x15) "\n\t"
	    "setc %%al"
	    : "=a" (status)
	    : "0" (0xC100)
	    : "%ebx", "%ecx", "%edx", "%esi", "%edi", "cc");

	if (status)
		return NULL;

	info = (void *)(BIOS_regs.biosr_es << 4);

	return info;
}
@


1.2
log
@Apply a bunch of style(9) and whitespace fixes to i386/amd64 libsa, making
the code actually diffable. No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: biosprobe.c,v 1.3 2003/08/11 06:23:09 deraadt Exp $	*/
d44 1
a44 1
	__asm __volatile(DOINT(0x15) "\n\t"
d70 1
a70 1
	__asm __volatile(DOINT(0x15) "\n\t"
@


1.1
log
@das boot; das cloned das from das i386
@
text
@d41 1
a41 1
 	u_int32_t status;
d44 5
a48 5
 	__asm __volatile(DOINT(0x15) "\n\t"
			"setc %%al\n\t"
			: "=a" (status)
			: "0" (0xC000)
			: "%ebx", "%ecx", "%edx", "%esi", "%edi", "cc");
d51 2
a52 2
	if(status)
		return(NULL);
d56 1
a56 1
	return(vers);
d66 3
a68 1
	if(!info) return(NULL);
d71 4
a74 4
			"setc %%al"
			: "=a" (status)
			: "0" (0xC100)
			: "%ebx", "%ecx", "%edx", "%esi", "%edi", "cc");
d76 2
a77 1
	if(status) return(NULL);
d81 1
a81 1
	return(info);
a82 1

@

