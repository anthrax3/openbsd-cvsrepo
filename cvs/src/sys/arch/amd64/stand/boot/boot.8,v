head	1.26;
access;
symbols
	OPENBSD_6_1:1.26.0.8
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.26.0.4
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.2
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.24.0.4
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.22.0.6
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.18.0.4
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.11.0.4
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@.\" @;


1.26
date	2015.11.23.18.38.37;	author mmcc;	state Exp;
branches;
next	1.25;
commitid	okjjRlzkGUFhUweQ;

1.25
date	2015.09.10.15.16.43;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	yPhLfPulVSum2r0H;

1.24
date	2015.06.22.18.31.48;	author jmc;	state Exp;
branches;
next	1.23;
commitid	lYMtLLSloWsX2kyP;

1.23
date	2015.01.24.20.47.19;	author naddy;	state Exp;
branches;
next	1.22;
commitid	KSjr9JLiwftpQ0il;

1.22
date	2013.11.06.17.23.03;	author brynet;	state Exp;
branches;
next	1.21;

1.21
date	2013.10.28.15.15.08;	author stsp;	state Exp;
branches;
next	1.20;

1.20
date	2013.10.25.13.08.03;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2013.10.23.05.05.19;	author mlarkin;	state Exp;
branches;
next	1.18;

1.18
date	2012.09.27.12.26.28;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2012.08.15.19.02.00;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2012.06.11.07.15.41;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2012.06.10.21.19.00;	author kettenis;	state Exp;
branches;
next	1.14;

1.14
date	2010.08.10.20.34.16;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2010.07.02.08.10.54;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2010.07.02.00.36.52;	author weingart;	state Exp;
branches;
next	1.11;

1.11
date	2009.02.16.23.58.05;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.20.02;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.29.00.03.08;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.28.19.23.10;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.15.09.10.52;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.13.15.56.41;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2005.07.15.09.12.04;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.18.15.26.23;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.03.10.15.37;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.20.11.04.16;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.03.12.09.47;	author mickey;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.25;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.26
log
@downfalls -> pitfalls
@
text
@.\"	$OpenBSD: boot.8,v 1.25 2015/09/10 15:16:43 schwarze Exp $
.\"
.\" Copyright (c) 1997-2001 Michael Shalayeff
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt BOOT 8 amd64
.Os
.Sh NAME
.Nm boot ,
.Nm boot.conf
.Nd amd64-specific second-stage bootstrap
.Sh DESCRIPTION
The main purpose of this program is to load the system kernel while dealing
with the pitfalls of the PC BIOS architecture.
.Pp
As described in
.Xr boot_amd64 8 ,
this program is loaded by the
.Xr biosboot 8
primary bootstrap loader and provides a convenient way to load the kernel.
This program acts as an enhanced boot monitor for PC systems, providing
a common interface for the kernel to start from.
.Pp
Basic operations include:
.Pp
.Bl -bullet -compact
.It
Detecting and switching between multiple consoles.
.It
Loading kernels from any device supported by your system BIOS.
.It
Loading kernels compressed by
.Xr gzip 1 .
.It
Passing system parameters queried from the BIOS to the kernel.
.It
Providing an interactive command line.
.El
.Pp
The sequence of its operation is as follows: initialization,
parsing the configuration file, then an interactive command line.
While at the command line you have 5 seconds to type any commands, if needed.
If time expires, the kernel will be loaded according to
the current variable settings (see the
.Nm set
command).
Each time a kernel load fails, the timeout is increased by one second.
The sequence of
.Nm
operations is as follows:
.Bl -enum
.It
Set up a protected mode environment which catches and reports processor
exceptions and provides a simple protected-mode BIOS interface.
.It
Probe for console devices, which includes the (default) PC VGA+Keyboard
console
.Pq Li pc0
and up to four serial consoles
.Pf ( Li com0
through
.Li com3 )
connected to the serial ports.
Display messages to the default console about the devices found.
.It
Detect memory.
Conventional memory is detected by querying the BIOS.
Extended memory is detected by probing page-by-page through the address
space, rather than asking the BIOS; many BIOS's cannot report larger than
64M of memory.
All memory found is reported to the default console device.
.It
Probe for APM support in the BIOS.
Display a message if support is present.
.It
If the file
.Pa /etc/boot.conf
exists on the filesystem
.Nm
was loaded from, open and parse it.
Lines beginning with the
.Sq #
character,
as well as whitespace at the beginning of lines,
are ignored.
The file may contain any commands
.Nm
accepts at the interactive prompt.
Though default settings usually suffice, they can be changed here.
.Pp
.Pa boot.conf
processing can be skipped, and the automatic boot cancelled, by holding
down either Control key as
.Nm
starts.
.It
The header line
.Pp
.Dl >> OpenBSD/amd64 BOOT [x.xx]
.Pp
is displayed to the active console, where
.Ar x.xx
is the version number of the
.Nm
program, followed by the
.Pp
.Dl boot>
.Pp
prompt, which means you are in interactive mode and may enter commands.
If you do not,
.Nm
will proceed to load the kernel with the current parameters after the
timeout period has expired.
.El
.Pp
By default,
.Nm
attempts to load the kernel executable
.Pa /bsd .
If it fails to find the kernel and no alternative kernel image has
been specified, the system will be unable to boot.
.Pp
.Nm
supports booting from
.Xr softraid 4
RAID 1 and CRYPTO volumes.
.Sh COMMANDS
The following commands are accepted at the
.Nm
prompt:
.Bl -tag -width shorten
.It boot Oo Oo Ar device : Oc Ns Ar image Oc Op Fl acds
Boots the specified kernel image
with any options given.
If
.Ar device
or
.Ar image
are omitted, values from
.Nm
variables will be used.
.Pp
When selecting the
.Ar device
to boot from,
.Nm
makes no distinction between SCSI and IDE type drives;
they are detected as
.Sq hd
devices.
Therefore, to boot kernel
.Pa /bsd
from slice
.Sq a
on the first hard drive
.Pq irrespective of device type ,
specify
.Dq boot hd0a:/bsd .
.Bl -tag -width _a_
.It Fl a
Causes the kernel to ask for the
.Nm root
device to use.
.It Fl c
Causes the kernel to go into
.Xr boot_config 8
before performing
.Xr autoconf 4
procedures.
.It Fl d
Causes the kernel to drop into
.Xr ddb 4
at the earliest convenient point.
.It Fl s
Causes the kernel to boot single-user.
.El
.It echo Op Ar args
Displays
.Ar args
on the console device.
.It help
Prints a list of available commands and machine dependent
commands, if any.
.It machine Op Ar command
Issues machine-dependent commands.
These are defined for amd64 architecture:
.Bl -tag -width diskinfo
.It Nm boot
Boots the specified partition boot block in place of the original (MBR) boot
block:
.Bd -unfilled -offset indent
machine boot hd0a
.Ed
.Pp
Where
.Ar a
is the first MBR partition table entry, and
.Ar d
the last.
.It Nm comaddr
Set the I/O base address for the serial port to be used as serial console.
.It Nm diskinfo
Prints a list of hard disks installed on your system including:
BIOS device number, and the BIOS geometry.
.It Nm memory
If used without any arguments, this command will print out
the memory configuration as determined through BIOS routines.
Otherwise the arguments specify how to modify the
memory configuration.
They take the form of:
.Pp
.D1 =size[KMG]
.D1 [+-]size@@address
.Pp
Meaning to add(+), exempt(-) or limit(=) the amount of memory specified by
.Ar size
at the location specified by
.Ar address .
Both size and base address can be specified as octal,
decimal, or hexadecimal numbers, as accepted by the
.Xr strtoul 3
routine.
Memory size may be suffixed by K or k, for kilobytes;
M or m, for megabytes;
and G or g, for gigabytes.
.Pp
The limit(=) option simply ignores any memory above the given
memory limit.
This is useful for testing kernels in an artificially
constrained memory situation.
For example, the following limits the kernel to using only
memory below 64MB:
.Bd -unfilled -offset indent
machine mem =64M
.Ed
.Pp
Memory segments are not required to be adjacent to each other;
the only requirement is that there is real physical memory under
the range added.
The following example adds 32MB of memory right after the first 16MB:
.Bd -unfilled -offset indent
machine mem +0x2000000@@0x1000000
.Ed
.Pp
Another useful command is to withdraw a range
of memory from OS usage (it may have been wrongfully reported as
useful by the BIOS).
This example
effectively excludes the 15\(en16MB range from the map of useful memory:
.Bd -unfilled -offset indent
machine mem -0x100000@@0xf00000
.Ed
.It Nm regs
Prints contents of processor registers if compiled with
.Em DEBUG .
.El
.It ls Op Ar directory
Prints contents of the specified
.Ar directory
in long format including: attributes and file type, owner, group,
size, filename.
.It reboot
Reboots the machine by initiating a warm boot procedure.
.It set Op Ar varname Op Ar value
If invoked without arguments, prints a list of variables and their values.
If only
.Ar varname
is specified, displays contents of that variable.
If
.Ar varname
and
.Ar value
are both specified, sets that variable to the given value.
Variables include:
.Pp
.Bl -tag -compact -width boothow
.It Nm addr
Address at which to load the kernel.
.It Nm debug
Debug flag if
.Nm
was compiled with DEBUG defined.
.It Nm device
Boot device name (e.g.,
.Li fd0a ,
.Li hd0a ) .
.It Nm howto
Options to pass to the loaded kernel.
.It Nm image
File name containing the kernel image.
.It Nm timeout
Number of seconds boot will wait for human intervention before
booting the default kernel image.
.It Nm tty
Active console device name (e.g.,
.Li com0 ,
.Li com1 ,
.Li pc0 ) .
.El
.It stty Op Ar device Op Ar speed
Displays or sets the
.Ar speed
for a console
.Ar device .
If changing the baudrate for the currently active console,
.Nm
offers you five seconds of grace time before committing the change
to allow you to change your terminal's speed to match.
If changing speed
.Em not
for the active console, the baudrate is set for the
.Em next
time you switch to a serial console.
The baudrate value is not used for the
.Li pc0
console.
.Pp
The default baudrate is 9600bps.
.It time
Displays system time and date.
.El
.Sh FILES
.Bl -tag -width /usr/mdec/biosbootxx -compact
.It Pa /usr/mdec/biosboot
first stage bootstrap
.It Pa /usr/mdec/pxeboot
PXE bootstrap
.It Pa /boot
system bootstrap
.It Pa /etc/boot.conf
system bootstrap's startup file
.It Pa /bsd
kernel image
.It Pa /bsd.sp
kernel image for single processor machines
.It Pa /bsd.mp
kernel image for multiprocessor machines
.It Pa /bsd.rd
kernel image for installation/recovery
.El
.Sh EXAMPLES
Boot the default kernel:
.Pp
.Dl boot> boot
.Pp
Remove the 5 second pause at boot-time permanently, causing
.Nm
to load the kernel immediately without prompting:
.Pp
.Dl # echo \&"boot\&" > /etc/boot.conf
.Pp
Use serial console.
A null modem cable should connect the specified serial port to a terminal.
Useful for debugging.
.Pp
.Dl boot> set tty com0
.Pp
Invoke the serial console at every boot:
.Pp
.Dl # echo \&"set tty com0\&" > /etc/boot.conf
.Pp
Boot the kernel named
.Pa /bsd
from the second hard disk in
.Dq User Kernel Configuration
mode (see
.Xr boot_config 8 ) .
This mechanism allows for the explicit enabling and disabling of devices
during the current boot sequence, as well as the modification
of device parameters.
Once booted, such changes can be made permanent by using
.Xr config 8 Ns 's
.Fl e
option.
.Pp
.Dl boot> boot hd1a:/bsd -c
.Sh SEE ALSO
.Xr gzip 1 ,
.Xr autoconf 4 ,
.Xr ddb 4 ,
.Xr softraid 4 ,
.Xr biosboot 8 ,
.Xr boot_amd64 8 ,
.Xr boot_config 8 ,
.Xr fdisk 8 ,
.Xr installboot 8 ,
.Xr pxeboot 8 ,
.Xr reboot 8
.Sh HISTORY
This program was written by Michael Shalayeff for
.Ox 2.1
on the i386 platform, and was later ported to the amd64 platform.
@


1.25
log
@reduce .Nd to one line and kill .Tn while here
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.24 2015/06/22 18:31:48 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: June 22 2015 $
d37 1
a37 1
with the downfalls of the PC BIOS architecture.
@


1.24
log
@document that boot.conf can contain comments;
from tilo stritzky

thanks miod for help with the diff, and who also noted that
leading whitespace gets stripped too;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.23 2015/01/24 20:47:19 naddy Exp $
d28 1
a28 1
.Dd $Mdocdate: January 24 2015 $
d34 1
a34 2
.Nd
amd64-specific second-stage bootstrap
@


1.23
log
@correct the syntax description of the boot command; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.22 2013/11/06 17:23:03 brynet Exp $
d28 1
a28 1
.Dd $Mdocdate: November 6 2013 $
d105 6
a110 1
This file may contain any commands
@


1.22
log
@Document 'machine boot' in boot(8) on i386 and amd64.

"fine" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.21 2013/10/28 15:15:08 stsp Exp $
d28 1
a28 1
.Dd $Mdocdate: October 28 2013 $
d151 6
a156 2
.It boot Op Ar image Op Fl acds
Boots the kernel image specified by
d158 1
a158 5
with any options given.
Image specification consists of a pair
.Ar device : Ns Ar filename ;
either or both can be omitted (`:' is not needed if both are omitted),
in which case values from
@


1.21
log
@Document softraid boot process for i386/amd64.

Requested by Adam Thompson.
suggestions and ok deraadt, earlier version ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.20 2013/10/25 13:08:03 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: October 25 2013 $
d207 12
@


1.20
log
@some cleanup for "machine memory";
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.19 2013/10/23 05:05:19 mlarkin Exp $
d28 1
a28 1
.Dd $Mdocdate: October 23 2013 $
d141 5
d388 1
@


1.19
log
@

Allow uppercase "K/M/G" specification in "machine memory" boot command.

ok guenther, dlg, deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.18 2012/09/27 12:26:28 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: September 27 2012 $
d214 2
a215 2
.Dl =<size>[KkMmGg]
.Dl [+-]<size>@@<address>
d218 1
a218 1
.Ar <size>
d220 1
a220 1
.Ar <address> .
d225 3
d234 1
a234 1
memory below 64M:
d242 1
a242 1
The following example adds 32M of memory right after the first 16M:
d251 1
a251 1
effectively excludes the 15\(en16M range from the map of useful memory:
@


1.18
log
@remove the zlib rfc text: these pages already point to gzip(1), which
has the references, and the rfc is not that relevant anyway;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.17 2012/08/15 19:02:00 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: August 15 2012 $
d214 1
a214 1
.Dl =<size>[KMG]
@


1.17
log
@use Lk for links;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.16 2012/06/11 07:15:41 otto Exp $
d28 1
a28 1
.Dd $Mdocdate: June 11 2012 $
a386 6
.Pp
RFC 1950 describes the zlib library interface.
.Pp
The official home page for the version of zlib used in this
operating system is at
.Lk http://www.gzip.org/zlib/ .
@


1.16
log
@serial -> serial port; ok phessler@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.15 2012/06/10 21:19:00 kettenis Exp $
d28 1
a28 1
.Dd $Mdocdate: June 10 2012 $
d391 2
a392 1
operating system is at http://www.gzip.org/zlib/.
@


1.15
log
@Document the "machine comaddr" command.  Remove the text that (incorrectly)
states that only com0 can be used as serial console.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.14 2010/08/10 20:34:16 sobrado Exp $
d28 1
a28 1
.Dd $Mdocdate: August 10 2010 $
d203 1
a203 1
Set the I/O base address for the serial to be used as serial console.
@


1.14
log
@add a description for bsd.sp where appropriate; while here, write
"multiprocessor" in a consistent way.

written with lots of good advice from jmc@@, who noted that changing
hier(7) was not enough and carefully reviewed this diff.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.13 2010/07/02 08:10:54 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: July 2 2010 $
d202 2
a297 3
Currently, only the first serial port
.Pq Li com0
is supported for console on amd64.
@


1.13
log
@usefull -> useful;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.12 2010/07/02 00:36:52 weingart Exp $
d334 2
@


1.12
log
@Add ability to limit memory presented to kernel with
'machine memory =128M' style commands.  Thanks to
phessler for finding a small man page niggle.  Bumped
version strings to a nice round fraction, and make them
the same across the board.  Easier to identify boot
binary versions that way.

ok thib@@, tedu@@, phessler@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.11 2009/02/16 23:58:05 sthen Exp $
d28 1
a28 1
.Dd $Mdocdate: February 16 2009 $
d226 1
a226 1
This is usefull for testing kernels in an artificially
@


1.11
log
@Cancel the automatic boot when you hold ctrl to skip boot.conf.
"I like it" deraadt "sweet" tedu "love it" marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.10 2007/05/31 19:20:02 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
d212 1
d215 1
a215 1
Meaning to add(+) or exempt(-) the amount of memory specified by
d224 10
d237 1
a237 2
The following example
adds 32M of memory right after the first 16M:
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.9 2007/05/29 00:03:08 deraadt Exp $
d28 1
a28 1
.Dd $Mdocdate$
d111 2
a112 1
processing can be skipped by holding down either Control key as
@


1.9
log
@remove support for many alternative kernel choices -- only try /bsd and
not the other stupid names.  that feature was retarded.  tested on a few
architectures by a few people
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.8 2007/04/28 19:23:10 deraadt Exp $
d28 1
a28 1
.Dd February 20, 2004
@


1.8
log
@clone "Control key" logic from i386 written by tom; tested by art
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.7 2006/05/15 09:10:52 jmc Exp $
d138 2
a139 7
If that fails, it will attempt to load
.Pa /obsd
and then
.Pa /bsd.old .
If it fails to find any of these files,
and no alternative kernel image has been specified,
the system will be unable to boot.
@


1.7
log
@better wording for the "memory" section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.6 2006/05/13 15:56:41 deraadt Exp $
d109 5
@


1.6
log
@sensible english; ok jmc; from graham.gower@@gmail.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.5 2005/07/15 09:12:04 jmc Exp $
d205 1
a205 1
If used without any arguments this command will print out
d207 1
a207 1
Otherwise the arguments would specify the expressions to modify the
d209 1
a209 1
The expression would have a form of:
d217 1
a217 1
Both size and base address could be specified as octal,
d221 2
a222 1
Memory segments are not required to be adjacent to each other,
d225 2
a226 1
For example:
d231 2
a232 3
would add 32M of memory right after the first 16M.
The other useful command would be to withdraw a range
of memory from OS usage (might be wrongfully reported as
d234 2
a238 2
.Pp
which effectively excludes 15-16M range from the map of useful memory.
@


1.5
log
@- add /bsd.rd to FILES
- for amd64/i386 add /bsd.mp to FILES

ok tom@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.4 2005/02/18 15:26:23 robert Exp $
d213 1
a213 1
Meaning to add(+) or exempt(-) the specified by the
d215 2
a216 3
amount of memory at the location specified by the
.Ar <address>
argument.
@


1.4
log
@fix zlib's homepage; ok henning@@, jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.3 2004/04/03 10:15:37 jmc Exp $
d323 4
@


1.3
log
@add pxeboot references to FILES and SEE ALSO;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.2 2004/02/20 11:04:16 miod Exp $
d375 1
a375 1
operating system is at http://quest.jpl.nasa.gov/zlib/.
@


1.2
log
@This is amd64, not i386.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.1 2004/02/03 12:09:47 mickey Exp $
d315 2
d369 1
@


1.1
log
@das boot; das cloned das from das i386
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.38 2004/01/02 09:17:22 jmc Exp $
d28 2
a29 2
.Dd September 1, 1997
.Dt BOOT 8 i386
d35 1
a35 1
i386-specific second-stage bootstrap
d41 1
a41 1
.Xr boot_i386 8 ,
d112 1
a112 1
.Dl >> OpenBSD/i386 BOOT [x.xx]
d199 1
a199 1
These are defined for i386 architecture:
d287 1
a287 1
is supported for console on i386.
d363 1
a364 1
.Xr boot_i386 8 ,
d375 2
a376 1
.Ox 2.1 .
@


1.1.2.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d28 2
a29 2
.Dd February 20, 2004
.Dt BOOT 8 amd64
d35 1
a35 1
amd64-specific second-stage bootstrap
d41 1
a41 1
.Xr boot_amd64 8 ,
d112 1
a112 1
.Dl >> OpenBSD/amd64 BOOT [x.xx]
d199 1
a199 1
These are defined for amd64 architecture:
d287 1
a287 1
is supported for console on amd64.
a314 2
.It Pa /usr/mdec/pxeboot
PXE bootstrap
a362 1
.Xr boot_amd64 8 ,
d364 1
a366 1
.Xr pxeboot 8 ,
d375 1
a375 2
.Ox 2.1
on the i386 platform, and was later ported to the amd64 platform.
@


