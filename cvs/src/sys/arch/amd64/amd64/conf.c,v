head	1.60;
access;
symbols
	OPENBSD_6_0:1.58.0.2
	OPENBSD_6_0_BASE:1.58
	OPENBSD_5_9:1.56.0.2
	OPENBSD_5_9_BASE:1.56
	OPENBSD_5_8:1.50.0.4
	OPENBSD_5_8_BASE:1.50
	OPENBSD_5_7:1.49.0.2
	OPENBSD_5_7_BASE:1.49
	OPENBSD_5_6:1.45.0.4
	OPENBSD_5_6_BASE:1.45
	OPENBSD_5_5:1.44.0.4
	OPENBSD_5_5_BASE:1.44
	OPENBSD_5_4:1.41.0.2
	OPENBSD_5_4_BASE:1.41
	OPENBSD_5_3:1.38.0.2
	OPENBSD_5_3_BASE:1.38
	OPENBSD_5_2:1.37.0.2
	OPENBSD_5_2_BASE:1.37
	OPENBSD_5_1_BASE:1.36
	OPENBSD_5_1:1.36.0.2
	OPENBSD_5_0:1.35.0.2
	OPENBSD_5_0_BASE:1.35
	OPENBSD_4_9:1.32.0.2
	OPENBSD_4_9_BASE:1.32
	OPENBSD_4_8:1.29.0.2
	OPENBSD_4_8_BASE:1.29
	OPENBSD_4_7:1.27.0.2
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.25.0.4
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.24.0.2
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.22.0.2
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.6
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	SMP:1.3.0.2;
locks; strict;
comment	@ * @;


1.60
date	2016.09.04.10.51.23;	author naddy;	state Exp;
branches;
next	1.59;
commitid	4OWaAfwqMvhOCLOI;

1.59
date	2016.09.02.17.06.12;	author goda;	state Exp;
branches;
next	1.58;
commitid	J1JzeTsS8K8zyH3c;

1.58
date	2016.04.25.20.09.14;	author tedu;	state Exp;
branches;
next	1.57;
commitid	43yo2G4zZOY9ab4i;

1.57
date	2016.02.26.09.10.04;	author natano;	state Exp;
branches;
next	1.56;
commitid	NHDvdrxPpwDqGtpK;

1.56
date	2016.02.05.06.29.01;	author uebayasi;	state Exp;
branches;
next	1.55;
commitid	3lmLbhQAi8VhAKnD;

1.55
date	2016.01.27.09.04.19;	author reyk;	state Exp;
branches;
next	1.54;
commitid	xjeRSSQ0SXSd3nFz;

1.54
date	2016.01.08.11.20.58;	author reyk;	state Exp;
branches;
next	1.53;
commitid	75vkfVJpzZUMdF67;

1.53
date	2015.12.21.22.15.53;	author sf;	state Exp;
branches;
next	1.52;
commitid	cGnF71DnMad8EDT2;

1.52
date	2015.11.13.07.52.20;	author mlarkin;	state Exp;
branches;
next	1.51;
commitid	KdsjYlqLpqhwOUHf;

1.51
date	2015.10.23.15.10.52;	author claudio;	state Exp;
branches;
next	1.50;
commitid	g17gxjQh9N9egLbB;

1.50
date	2015.03.14.03.38.46;	author jsg;	state Exp;
branches;
next	1.49;
commitid	p4LJxGKbi0BU2cG6;

1.49
date	2014.12.11.19.44.16;	author tedu;	state Exp;
branches;
next	1.48;
commitid	jUSAZlQ30WF1ESM9;

1.48
date	2014.10.09.04.10.03;	author tedu;	state Exp;
branches;
next	1.47;
commitid	Db8IHIncfKM3SDX9;

1.47
date	2014.10.09.03.59.58;	author tedu;	state Exp;
branches;
next	1.46;
commitid	I0KLtD9aVxAdm6aW;

1.46
date	2014.08.20.06.14.42;	author mikeb;	state Exp;
branches;
next	1.45;
commitid	qXFkosC6o9cv78HT;

1.45
date	2014.03.14.23.42.40;	author kettenis;	state Exp;
branches;
next	1.44;

1.44
date	2013.11.04.17.14.26;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2013.11.04.14.11.29;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2013.08.20.14.27.25;	author ajacoutot;	state Exp;
branches;
next	1.41;

1.41
date	2013.06.03.15.54.47;	author tedu;	state Exp;
branches;
next	1.40;

1.40
date	2013.03.15.09.10.52;	author ratchov;	state Exp;
branches;
next	1.39;

1.39
date	2013.03.02.11.08.38;	author kettenis;	state Exp;
branches;
next	1.38;

1.38
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2012.04.06.15.10.39;	author jsing;	state Exp;
branches;
next	1.36;

1.36
date	2011.10.06.20.49.27;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2011.07.04.22.53.53;	author tedu;	state Exp;
branches;
next	1.34;

1.34
date	2011.06.26.23.19.11;	author tedu;	state Exp;
branches;
next	1.33;

1.33
date	2011.03.22.15.29.48;	author marco;	state Exp;
branches;
next	1.32;

1.32
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.31;

1.31
date	2010.11.22.21.10.42;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2010.09.22.13.03.47;	author claudio;	state Exp;
branches;
next	1.29;

1.29
date	2010.07.03.03.59.16;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2010.06.09.15.25.32;	author jsing;	state Exp;
branches;
next	1.27;

1.27
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.26;

1.26
date	2009.08.10.14.40.27;	author jsg;	state Exp;
branches;
next	1.25;

1.25
date	2009.06.03.14.45.50;	author jj;	state Exp;
branches;
next	1.24;

1.24
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2008.11.22.21.26.47;	author oga;	state Exp;
branches;
next	1.22;

1.22
date	2008.06.10.07.12.24;	author mglocker;	state Exp;
branches;
next	1.21;

1.21
date	2008.05.27.19.45.29;	author oga;	state Exp;
branches;
next	1.20;

1.20
date	2008.05.14.20.49.46;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2008.04.30.13.59.32;	author dlg;	state Exp;
branches;
next	1.18;

1.18
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.17;

1.17
date	2007.11.25.17.11.12;	author oga;	state Exp;
branches;
next	1.16;

1.16
date	2007.09.12.18.18.27;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2007.08.02.16.40.27;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2007.07.25.18.45.25;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.29.19.03.35;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.28.02.13.44;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2007.02.06.22.39.13;	author dlg;	state Exp;
branches;
next	1.10;

1.10
date	2007.01.15.23.19.05;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.11.10.56.39;	author mk;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.31.06.39.06;	author dlg;	state Exp;
branches;
next	1.7;

1.7
date	2005.06.02.20.09.38;	author tholo;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.30.08.11.26;	author grange;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.15.00.15.32;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.23.01.19.52;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.10.01.31.21;	author millert;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2004.02.03.12.09.47;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.39.38;	author mickey;	state Exp;
branches;
next	;

1.3.2.1
date	2004.02.22.22.08.18;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2004.06.05.23.09.24;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.60
log
@Remove support for tape block devices. Nobody mount(8)s tapes any longer.
ok deraadt@@ guenther@@
@
text
@/*	$OpenBSD: conf.c,v 1.59 2016/09/02 17:06:12 goda Exp $	*/

/*
 * Copyright (c) 1994, 1995 Charles M. Hannum.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Charles Hannum.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/disklabel.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/vnode.h>

#include <machine/conf.h>

#include "wd.h"
bdev_decl(wd);
#include "fdc.h"
#include "fd.h"
bdev_decl(fd);
#include "sd.h"
#include "st.h"
#include "cd.h"
#include "uk.h"
#include "vnd.h"
#include "rd.h"

struct bdevsw	bdevsw[] =
{
	bdev_disk_init(NWD,wd),		/* 0: ST506/ESDI/IDE disk */
	bdev_swap_init(1,sw),		/* 1: swap pseudo-device */
	bdev_disk_init(NFD,fd),		/* 2: floppy diskette */
	bdev_notdef(),			/* 3 */
	bdev_disk_init(NSD,sd),		/* 4: SCSI disk */
	bdev_notdef(),			/* 5: was: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_notdef(),			/* 7 */
	bdev_notdef(),			/* 8 */
	bdev_notdef(),			/* 9 */
	bdev_notdef(),			/* 10 */
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
	bdev_notdef(),			/* 13 */
	bdev_disk_init(NVND,vnd),	/* 14: vnode disk driver */
	bdev_notdef(),			/* 15: was: Sony CD-ROM */
	bdev_notdef(),			/* 16: was: concatenated disk driver */
	bdev_disk_init(NRD,rd),		/* 17: ram disk driver */
	bdev_notdef(),			/* 18 */
	bdev_notdef(),			/* 19 was: RAIDframe disk driver */
};
int	nblkdev = nitems(bdevsw);

/* open, close, read, write, ioctl, tty, mmap */
#define cdev_pc_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
	dev_init(c,n,tty), ttselect, dev_init(c,n,mmap), D_TTY }

/* open, close, read, ioctl */
#define cdev_joy_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, seltrue, \
	(dev_type_mmap((*))) enodev }

/* open, close, ioctl, select -- XXX should be a generic device */
#define cdev_ocis_init(c,n) { \
        dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
        (dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
        (dev_type_stop((*))) enodev, 0,  dev_init(c,n,poll), \
        (dev_type_mmap((*))) enodev, 0 }

/* open, close, read */
#define cdev_nvram_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, (dev_type_ioctl((*))) enodev, \
	(dev_type_stop((*))) enodev, 0, seltrue, \
	(dev_type_mmap((*))) enodev, 0 }

/* open, close, ioctl */
#define cdev_vmm_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), \
	(dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, \
	 dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, seltrue, \
	(dev_type_mmap((*))) enodev }


#define	mmread	mmrw
#define	mmwrite	mmrw
cdev_decl(mm);
cdev_decl(wd);
#include "bio.h"
#include "pty.h"
#include "com.h"
cdev_decl(com);
cdev_decl(fd);
#include "lpt.h"
cdev_decl(lpt);
#include "ch.h"
#include "bpfilter.h"
#if 0
#include "pcmcia.h"
cdev_decl(pcmcia);
#endif
#include "spkr.h"
cdev_decl(spkr);
#if 0 /* old (non-wsmouse) drivers */
#include "mms.h"
cdev_decl(mms);
#include "lms.h"
cdev_decl(lms);
#include "opms.h"
cdev_decl(pms);
#endif
#include "cy.h"
cdev_decl(cy);
#include "tun.h"
#include "audio.h"
#include "video.h"
#include "midi.h"
#include "acpi.h"
#include "pctr.h"
#include "bktr.h"
#include "ksyms.h"
#include "usb.h"
#include "uhid.h"
#include "ugen.h"
#include "ulpt.h"
#include "ucom.h"
#include "cz.h"
cdev_decl(cztty);
#include "radio.h"
#include "nvram.h"
cdev_decl(nvram);
#include "drm.h"
cdev_decl(drm);
#include "viocon.h"
cdev_decl(viocon);

#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"
#include "wsmux.h"

#ifdef USER_PCICONF
#include "pci.h"
cdev_decl(pci);
#endif

#include "pf.h"
#include "hotplug.h"
#include "gpio.h"
#include "vscsi.h"
#include "pppx.h"
#include "fuse.h"
#include "pvbus.h"
#include "ipmi.h"
#include "switch.h"

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_disk_init(NWD,wd),		/* 3: ST506/ESDI/IDE disk */
	cdev_notdef(),			/* 4 was /dev/drum */
	cdev_tty_init(NPTY,pts),	/* 5: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 6: pseudo-tty master */
	cdev_log_init(1,log),		/* 7: /dev/klog */
	cdev_tty_init(NCOM,com),	/* 8: serial port */
	cdev_disk_init(NFD,fd),		/* 9: floppy disk */
	cdev_vmm_init(NVMM,vmm),	/* 10 vmm */
	cdev_notdef(),			/* 11: Sony CD-ROM */
	cdev_wsdisplay_init(NWSDISPLAY,	/* 12: frame buffers, etc. */
	    wsdisplay),
	cdev_disk_init(NSD,sd),		/* 13: SCSI disk */
	cdev_tape_init(NST,st),		/* 14: SCSI tape */
	cdev_disk_init(NCD,cd),		/* 15: SCSI CD-ROM */
	cdev_lpt_init(NLPT,lpt),	/* 16: parallel printer */
	cdev_ch_init(NCH,ch),		/* 17: SCSI autochanger */
	cdev_notdef(),			/* 18: was: concatenated disk driver */
	cdev_notdef(),			/* 19 */
	cdev_uk_init(NUK,uk),		/* 20: unknown SCSI */
	cdev_notdef(),			/* 21 */
	cdev_fd_init(1,filedesc),	/* 22: file descriptor pseudo-device */
	cdev_bpf_init(NBPFILTER,bpf),	/* 23: Berkeley packet filter */
	cdev_notdef(),			/* 24 */
#if 0
	cdev_ocis_init(NPCMCIA,pcmcia), /* 25: PCMCIA Bus */
#else
	cdev_notdef(),			/* 25 */
#endif
	cdev_notdef(),			/* 26 */
	cdev_spkr_init(NSPKR,spkr),	/* 27: PC speaker */
	cdev_notdef(),			/* 28 was LKM */
	cdev_notdef(),			/* 29 */
	cdev_notdef(),			/* 30 */
	cdev_notdef(),			/* 31 */
	cdev_notdef(),			/* 32 */
	cdev_notdef(),			/* 33 */
	cdev_notdef(),			/* 34 */
	cdev_notdef(),			/* 35: Microsoft mouse */
	cdev_notdef(),			/* 36: Logitech mouse */
	cdev_notdef(),			/* 37: Extended PS/2 mouse */
	cdev_tty_init(NCY,cy),		/* 38: Cyclom serial port */
	cdev_notdef(),			/* 39: Mitsumi CD-ROM */
	cdev_tun_init(NTUN,tun),	/* 40: network tunnel */
	cdev_disk_init(NVND,vnd),	/* 41: vnode disk driver */
	cdev_audio_init(NAUDIO,audio),	/* 42: generic audio I/O */
	cdev_notdef(),			/* 43 */
	cdev_video_init(NVIDEO,video),	/* 44: generic video I/O */
	cdev_random_init(1,random),	/* 45: random data source */
	cdev_ocis_init(NPCTR,pctr),	/* 46: performance counters */
	cdev_disk_init(NRD,rd),		/* 47: ram disk driver */
	cdev_notdef(),			/* 48 */
	cdev_bktr_init(NBKTR,bktr),     /* 49: Bt848 video capture device */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 50: Kernel symbols device */
	cdev_notdef(),			/* 51 */
	cdev_midi_init(NMIDI,midi),	/* 52: MIDI I/O */
	cdev_notdef(),			/* 53 was: sequencer I/O */
	cdev_notdef(),			/* 54 was: RAIDframe disk driver */
	cdev_notdef(),			/* 55: */
	/* The following slots are reserved for isdn4bsd. */
	cdev_notdef(),			/* 56: i4b main device */
	cdev_notdef(),			/* 57: i4b control device */
	cdev_notdef(),			/* 58: i4b raw b-channel access */
	cdev_notdef(),			/* 59: i4b trace device */
	cdev_notdef(),			/* 60: i4b phone device */
	/* End of reserved slots for isdn4bsd. */
	cdev_usb_init(NUSB,usb),	/* 61: USB controller */
	cdev_usbdev_init(NUHID,uhid),	/* 62: USB generic HID */
	cdev_usbdev_init(NUGEN,ugen),	/* 63: USB generic driver */
	cdev_ulpt_init(NULPT,ulpt),	/* 64: USB printers */
	cdev_notdef(),			/* 65: urio */
	cdev_tty_init(NUCOM,ucom),	/* 66: USB tty */
	cdev_mouse_init(NWSKBD, wskbd),	/* 67: keyboards */
	cdev_mouse_init(NWSMOUSE,	/* 68: mice */
	    wsmouse),
	cdev_mouse_init(NWSMUX, wsmux),	/* 69: ws multiplexor */
	cdev_notdef(),			/* 70: was: /dev/crypto */
	cdev_tty_init(NCZ,cztty),	/* 71: Cyclades-Z serial port */
#ifdef USER_PCICONF
	cdev_pci_init(NPCI,pci),        /* 72: PCI user */
#else
	cdev_notdef(),
#endif
	cdev_pf_init(NPF,pf),		/* 73: packet filter */
	cdev_notdef(),			/* 74: ALTQ (deprecated) */
	cdev_notdef(),
	cdev_radio_init(NRADIO, radio), /* 76: generic radio I/O */
	cdev_notdef(),			/* 77: was USB scanners */
	cdev_notdef(),			/* 78 */
	cdev_bio_init(NBIO,bio),	/* 79: ioctl tunnel */
	cdev_notdef(),			/* 80: gpr? XXX */
	cdev_ptm_init(NPTY,ptm),	/* 81: pseudo-tty ptm device */
	cdev_hotplug_init(NHOTPLUG,hotplug), /* 82: devices hot plugging */
	cdev_acpi_init(NACPI,acpi),	/* 83: ACPI */
	cdev_notdef(),
	cdev_nvram_init(NNVRAM,nvram),	/* 85: NVRAM interface */
	cdev_notdef(),			/* 86 */
	cdev_drm_init(NDRM,drm),	/* 87: drm */
	cdev_gpio_init(NGPIO,gpio),	/* 88: gpio */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 89: vscsi */
	cdev_disk_init(1,diskmap),	/* 90: disk mapper */
	cdev_pppx_init(NPPPX,pppx),     /* 91: pppx */
	cdev_fuse_init(NFUSE,fuse),	/* 92: fuse */
	cdev_tun_init(NTUN,tap),	/* 93: Ethernet network tunnel */
	cdev_tty_init(NVIOCON,viocon),  /* 94: virtio console */
	cdev_pvbus_init(NPVBUS,pvbus),	/* 95: pvbus(4) control interface */
	cdev_ipmi_init(NIPMI,ipmi),	/* 96: ipmi */
	cdev_switch_init(NSWITCH,switch), /* 97: switch(4) control interface */
};
int	nchrdev = nitems(cdevsw);

int	mem_no = 2;	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(1, 0);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev_t dev)
{

	return (major(dev) == mem_no && (minor(dev) < 2 || minor(dev) == 14));
}

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev_t dev)
{

	return (major(dev) == mem_no && minor(dev) == 12);
}

dev_t
getnulldev(void)
{
	return makedev(mem_no, 2);
}

int chrtoblktbl[] = {
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	0,		/* wd */
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	NODEV,
	/*  9 */	2,		/* fd */
	/* 10 */	NODEV,
	/* 11 */	NODEV,
	/* 12 */	NODEV,
	/* 13 */	4,		/* sd */
	/* 14 */	NODEV,
	/* 15 */	6,		/* cd */
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	NODEV,
	/* 19 */	NODEV,
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	NODEV,
	/* 27 */	NODEV,
	/* 28 */	NODEV,
	/* 29 */	NODEV,
	/* 30 */	NODEV,
	/* 31 */	NODEV,
	/* 32 */	NODEV,
	/* 33 */	NODEV,
	/* 34 */	NODEV,
	/* 35 */	NODEV,
	/* 36 */	NODEV,
	/* 37 */	NODEV,
	/* 38 */	NODEV,
	/* 39 */	NODEV,
	/* 40 */	NODEV,
	/* 41 */	14,		/* vnd */
	/* 42 */	NODEV,
	/* 43 */	NODEV,
	/* 44 */	NODEV,
	/* 45 */	NODEV,
	/* 46 */	NODEV,
	/* 47 */	17,		/* rd */
};

int nchrtoblktbl = nitems(chrtoblktbl);

/*
 * In order to map BSD bdev numbers of disks to their BIOS equivalents
 * we use several heuristics, one being using checksums of the first
 * few blocks of a disk to get a signature we can match with /boot's
 * computed signatures.  To know where from to read, we must provide a
 * disk driver name -> bdev major number table, which follows.
 * Note: floppies are not included as those are differentiated by the BIOS.
 */
int findblkmajor(struct device *dv);
dev_t dev_rawpart(struct device *);	/* XXX */

dev_t
dev_rawpart(struct device *dv)
{
	int majdev;

	majdev = findblkmajor(dv);

	switch (majdev) {
	/* add here any device you want to be checksummed on boot */
	case 0:		/* wd */
	case 4:		/* sd */
		return (MAKEDISKDEV(majdev, dv->dv_unit, RAW_PART));
		break;
	default:
		;
	}

	return (NODEV);
}

#include <dev/cons.h>

cons_decl(com);
cons_decl(ws);

struct	consdev constab[] = {
#if NWSDISPLAY > 0
	cons_init(ws),
#endif
#if NCOM > 0
	cons_init(com),
#endif
	{ 0 },
};
@


1.59
log
@Add switch(4) cdev entry

ok deraadt@@ yasuoka@@ reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.58 2016/04/25 20:09:14 tedu Exp $	*/
d61 1
a61 1
	bdev_tape_init(NST,st),		/* 5: SCSI tape */
d358 1
a358 1
	/* 14 */	5,		/* st */
@


1.58
log
@remove systrace
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.57 2016/02/26 09:10:04 natano Exp $	*/
d186 1
d299 1
@


1.57
log
@Remove stale RAIDframe entries from chrtoblktbl.

While there truncate the tables to the minimum required size; chrtoblk()
and blktochr() are designed to handle a table shorter than cdevsw.

"Looks good to me" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.56 2016/02/05 06:29:01 uebayasi Exp $	*/
a119 1
#include "systrace.h"
d279 1
a279 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 78: system call tracing */
@


1.56
log
@Implement FreeBSD-compatible IOCTL to access BMC in ipmi(4)

Initial help & testing by jmatthew@@
Code review & input by mpi@@
Final review & OK by jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.55 2016/01/27 09:04:19 reyk Exp $	*/
a390 7
	/* 48 */	NODEV,
	/* 49 */	NODEV,
	/* 50 */	NODEV,
	/* 51 */	NODEV,
	/* 52 */	NODEV,
	/* 53 */	NODEV,
	/* 54 */	19,		/* raid */
@


1.55
log
@Add a key-value interface to pvbus(4) that allows to get or set values
in the underlying information store of the host from the OpenBSD-VM's
userspace.  OpenBSD did not provide access to these stores before,
mostly because we did not want to add a custom tool and interface for
each hypervisor.  The pvbus(4) interface provides backends for
xen(4)'s XenStore and vmt(4)'s VMware Tools "guestinfo".  These
information stores are fairly different, XenStore is a "filesystem"
while vmt is a RPC, and the key-value abstraction limits them a bit
but provides the most wanted functionality.

Discussed with many
OK mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.54 2016/01/08 11:20:58 reyk Exp $	*/
d186 1
d298 1
@


1.54
log
@Add "vmm" pledge to allow restricted ioctl access to /dev/vmm.

This will allow to pledge vmd(8)'s vmm and vm processes, so that VMs
themselves run "sandboxed", including their host-side virtio layer.
It will remain disabled for now (in userland) to not get into the way
of ongoing development and upcoming changes in vmd and the ioctl
interface.

OK mlarkin@@ deraadt@@ "kernel side in, but not the callers in userland"
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.53 2015/12/21 22:15:53 sf Exp $	*/
d185 1
d296 1
@


1.53
log
@add virtio-console driver

This patch adds a new driver for use of virtio-console devices as
ttys.  It's still in an early state and not compiled by default, yet.
Currently it is only wired into amd64. i386 is still missing.

Discussed with uebayasi@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.52 2015/11/13 07:52:20 mlarkin Exp $	*/
a165 2
#include "vmm.h"
cdev_decl(vmm);
@


1.52
log
@
vmm(4) kernel code

circulated on hackers@@, no objections. Disabled by default.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.51 2015/10/23 15:10:52 claudio Exp $	*/
d168 2
d296 1
@


1.51
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.50 2015/03/14 03:38:46 jsg Exp $	*/
d106 9
d166 2
d198 1
a198 1
	cdev_notdef(),			/* 10 */
@


1.50
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.49 2014/12/11 19:44:16 tedu Exp $	*/
d282 1
@


1.49
log
@dragonflybsd has added a urio driver. conservation of urios requires
that we delete ours, which isn't actually useful.
ok mpi sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.48 2014/10/09 04:10:03 tedu Exp $	*/
a33 1
#include <sys/buf.h>
@


1.48
log
@mechanical translation of dev_lkm_dummy() to dev_notdef()
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.47 2014/10/09 03:59:58 tedu Exp $	*/
a149 1
#include "urio.h"
d250 1
a250 1
	cdev_urio_init(NURIO,urio),	/* 65: USB Diamond Rio 500 */
@


1.47
log
@remove LKM devices
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.46 2014/08/20 06:14:42 mikeb Exp $	*/
d65 6
a70 6
	bdev_lkm_dummy(),		/* 8 */
	bdev_lkm_dummy(),		/* 9 */
	bdev_lkm_dummy(),		/* 10 */
	bdev_lkm_dummy(),		/* 11 */
	bdev_lkm_dummy(),		/* 12 */
	bdev_lkm_dummy(),		/* 13 */
d75 1
a75 1
	bdev_lkm_dummy(),		/* 18 */
d190 1
a190 1
	cdev_lkm_dummy(),		/* 11: Sony CD-ROM */
d213 6
a218 6
	cdev_lkm_dummy(),		/* 29 */
	cdev_lkm_dummy(),		/* 30 */
	cdev_lkm_dummy(),		/* 31 */
	cdev_lkm_dummy(),		/* 32 */
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
@


1.46
log
@unlink crypto(4) pseudo device from the architecture dependant character
device tables and kernel config files.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.45 2014/03/14 23:42:40 kettenis Exp $	*/
d212 1
a212 1
	cdev_lkm_init(NLKM,lkm),	/* 28: loadable module driver */
a326 1
	/* XXXX This needs to be dynamic for LKMs. */
@


1.45
log
@Remove the userland AGP interface.  Now that we have KMS, it is no longer
used by any of the remaining xenocara drivers.  Except perhaps for the
legacy i810 support in the xf86-video-intel driver.  But i810 support has
almost certainly been broken for more than a year now, and any remaining
users are probably better off using the xf86-video-vesa driver ever since
XAA support was removed from the X server.

ok deraadt@@, jsg@@, mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.44 2013/11/04 17:14:26 deraadt Exp $	*/
a42 2
#include "inet.h"

d257 1
a257 1
	cdev_crypto_init(NCRYPTO,crypto), /* 70: /dev/crypto */
@


1.44
log
@more iop.h left; Mark Patruck
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.43 2013/11/04 14:11:29 deraadt Exp $	*/
a158 2
#include "agp.h"
cdev_decl(agp);
d279 1
a279 1
	cdev_agp_init(NAGP,agp),	/* 86: agp */
@


1.43
log
@remove iop(4) driver.  it is entirely unmaintained and supports something
which basically doesn't exist at all.
reminded about it by brad
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.42 2013/08/20 14:27:25 ajacoutot Exp $	*/
a145 1
#include "iop.h"
@


1.42
log
@Remove uscanner(4). It was disabled in GENERIC more than 2.5 years ago.
No regression has been reported since libusb became the prefered
solution to work with USB scanners.

req. by mpi@@
ok ian@@ mpi@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.41 2013/06/03 15:54:47 tedu Exp $	*/
a144 1
#include "bthub.h"
d271 1
a271 1
	cdev_iop_init(NIOP,iop),	/* 75: I2O IOP control interface */
d280 1
a280 1
	cdev_bthub_init(NBTHUB,bthub),	/* 84: bthub */
@


1.41
log
@changes for isc fuse support. not enabled. ok beck deraadt.
from Sylvestre Gallon ccna.syl gmail.com
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.40 2013/03/15 09:10:52 ratchov Exp $	*/
a155 1
#include "uscanner.h"
d274 1
a274 1
	cdev_usbdev_init(NUSCANNER,uscanner),	/* 77: USB scanners */
@


1.40
log
@Delete the sequencer(4) driver, since its not used any longer. Diff
mostly from armani.
ok miod, mpi, jsg and help from sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.39 2013/03/02 11:08:38 kettenis Exp $	*/
d182 1
d290 1
@


1.39
log
@Properly conditionalize adding wscons to the list of consoles on
NWSDISPLAY.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.38 2012/08/23 06:12:49 deraadt Exp $	*/
a143 2
#include "sequencer.h"
cdev_decl(music);
d243 1
a243 1
	cdev_midi_init(NSEQUENCER,sequencer),	/* 53: sequencer I/O */
@


1.38
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.37 2012/04/06 15:10:39 jsing Exp $	*/
d432 1
a432 1
#if 1 || NWSDISPLAY > 0
@


1.37
log
@tedu the raidframe.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.35 2011/07/04 22:53:53 tedu Exp $	*/
a149 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a242 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 51: nnpfs communication device */
#else
a243 1
#endif
@


1.36
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@a54 1
#include "raid.h"
d78 1
a78 1
	bdev_disk_init(NRAID,raid),	/* 19: RAIDframe disk driver */
d254 1
a254 1
	cdev_disk_init(NRAID,raid),	/* 54: RAIDframe disk driver */
@


1.35
log
@remove compat_svr4 support.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.34 2011/06/26 23:19:11 tedu Exp $	*/
a54 1
#include "ccd.h"
d75 2
a76 2
	bdev_lkm_dummy(),		/* 15: Sony CD-ROM */
	bdev_disk_init(NCCD,ccd),	/* 16: concatenated disk driver */
d211 1
a211 1
	cdev_disk_init(NCCD,ccd),	/* 18: concatenated disk driver */
d363 1
a363 1
	/* 18 */	16,		/* ccd */
@


1.34
log
@kill mcd dead.  ok krw matthew millert thib
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.33 2011/03/22 15:29:48 marco Exp $	*/
a240 3
#ifdef COMPAT_SVR4
	cdev_svr4_net_init(1,svr4_net),	/* 43: svr4 net pseudo-device */
#else
a241 1
#endif
@


1.33
log
@renegade spaces; no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32 2011/01/14 19:04:08 jasper Exp $	*/
a53 2
#include "mcd.h"
bdev_decl(mcd);
d68 1
a68 1
	bdev_disk_init(NMCD,mcd),	/* 7: Mitsumi CD-ROM */
a121 1
cdev_decl(scd);
a141 1
cdev_decl(mcd);
d237 1
a237 1
	cdev_disk_init(NMCD,mcd),	/* 39: Mitsumi CD-ROM */
d389 1
a389 1
	/* 39 */	7,		/* mcd */
@


1.32
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.31 2010/11/22 21:10:42 miod Exp $	*/
d219 1
a219 1
	cdev_notdef(), 			/* 21 */
d276 1
a276 1
	cdev_ulpt_init(NULPT,ulpt), 	/* 64: USB printers */
d296 1
a296 1
 	cdev_bio_init(NBIO,bio),	/* 79: ioctl tunnel */
d312 1
a312 1
int	mem_no = 2; 	/* major device number of memory special file */
@


1.31
log
@Remove old comment about constab[] being eventually generated by config(8).
This has never happened and this wouldn't make much sense on anything but
hp300, if at all, nowadays.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2010/09/22 13:03:47 claudio Exp $	*/
d84 1
a84 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
d310 1
a310 1
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d411 1
a411 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.30
log
@Add a new interface pppx(4) -- the ppp multiplexer to be used with npppd
and pipex. pppx(4) creates an interface whenever a session is created
so that altq and pf can work on these.
Started by dlg@@ debugged and made usable by myself
OK dlg@@ yasuoka@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.29 2010/07/03 03:59:16 krw Exp $	*/
a443 6
/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
@


1.29
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2010/06/09 15:25:32 jsing Exp $	*/
d193 1
d308 1
@


1.28
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 2009/08/10 14:40:27 jsg Exp $	*/
a124 1
#include "ss.h"
d216 1
a216 1
	cdev_ss_init(NSS,ss),           /* 19: SCSI scanner */
@


1.27
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d307 1
@


1.26
log
@gpio for amd64.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2009/06/03 14:45:50 jj Exp $	*/
d193 1
d306 1
@


1.25
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 2009/01/25 17:30:48 miod Exp $	*/
d192 1
d304 1
@


1.24
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2008/11/22 21:26:47 oga Exp $	*/
d157 3
a159 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d255 2
a256 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
@


1.23
log
@Move the drm drivers over from:

vga1 at pci0
inteldrm0 at vga1

to

vga1 at pci0
inteldrm0 at vga1
drm0 at inteldrm0

i.e. a similar scheme to audio(4) where the interface attaches on top of
the wildly different drivers. This helps to clean up the code a lot
(more is coming) and help me start to move drm to being essentially bus
independent, which will help in the future.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2008/06/10 07:12:24 mglocker Exp $	*/
d199 1
a199 1
	cdev_swap_init(1,sw),		/* 4: /dev/drum (swap pseudo-device) */
@


1.22
log
@Add /dev/video* for amd64.

Help and OK todd@@, OK robert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2008/05/27 19:45:29 oga Exp $	*/
d177 1
a177 1
#include "drmbase.h"
d302 1
a302 1
	cdev_drm_init(NDRMBASE,drm),	/* 87: drm */
@


1.21
log
@Since the vtophys stuff was nuked, drm now works on amd64 too. Add the
relavent config goo.

DRM_NO_MTRR is still needed on amd64 since the mtrr apis differ between
it and i386.

ok kettenis@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2008/05/14 20:49:46 miod Exp $	*/
d149 1
d248 1
a248 1
	cdev_notdef(),			/* 44 */
@


1.20
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2008/04/30 13:59:32 dlg Exp $	*/
d176 2
d301 1
@


1.19
log
@fix serial console handling on amd64. currently only glass console ever
works, even if the boot loader is configured to use serial console.

after the changes jsing and i made, the initial probe of the serial port
was failing since the default base addres for the port is invalid. cos of
that the kernel would only ever consider the glass console for use. this
fixes it by reprobing the serial port if we get any config for it from the
boot loader.

advice on aesthetics from miod@@
advice and ok from kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2008/04/08 14:31:54 claudio Exp $	*/
d347 1
a347 1
	/*  3 */	0,
d353 3
a355 3
	/*  9 */	2,
	/* 10 */	3,
	/* 11 */	15,
d357 3
a359 3
	/* 13 */	4,
	/* 14 */	5,
	/* 15 */	6,
d362 1
a362 1
	/* 18 */	16,
d368 1
a368 1
	/* 24 */	18,
d383 1
a383 1
	/* 39 */	7,
d385 1
a385 1
	/* 41 */	14,
d391 1
a391 1
	/* 47 */	17,
d398 1
a398 1
	/* 54 */	19,
@


1.18
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 2007/11/25 17:11:12 oga Exp $	*/
d449 1
a449 1
#if NCOM + NPCCOM > 0
@


1.17
log
@Make agp attach as a device. This means that many more agp bridges
actually get detected and attached. Also adds a kernel api for
manipulating agp.

Enable this on i386 and amd64.

"I think you should commit it" deraadt@@, ok matthieu. Looked over by
several others.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2007/09/12 18:18:27 deraadt Exp $	*/
d216 1
a216 1
	cdev_bpftun_init(NBPFILTER,bpf),/* 23: Berkeley packet filter */
d237 1
a237 1
	cdev_bpftun_init(NTUN,tun),	/* 40: network tunnel */
@


1.16
log
@port of i386 pctr code to amd64; Mike Belopuhov
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2007/08/02 16:40:27 deraadt Exp $	*/
d174 2
d298 1
@


1.15
log
@copy nvram code from i386, because amd64 can use it too.  done by
tybollt@@solace.miun.se, ok jcs
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 2007/07/25 18:45:25 todd Exp $	*/
d103 1
a103 1
        (dev_type_stop((*))) enodev, 0,  dev_init(c,n,select), \
d154 1
d245 1
a245 1
	cdev_notdef(),			/* 46 */
@


1.14
log
@bthub for amd64, based on diff from johan
reads ok xsa@@ compile tested phessler
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 2007/05/29 19:03:35 krw Exp $	*/
d106 7
d171 2
d294 1
@


1.13
log
@Die Die Die wt.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 2007/05/28 02:13:44 krw Exp $	*/
d146 1
d284 1
@


1.12
log
@Remove the Archive/Wangtek cartidge tape driver, wt(4). All tapes are
st(4).

ok tom@@ deraadt@@ jason@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 2007/02/06 22:39:13 dlg Exp $	*/
a116 1
cdev_decl(wt);
@


1.11
log
@define the bio(4) cdev stuff in conf.h, rather than having a per machine
definition. switch amd64 and i386 to the conf.h version, and add it to
macppc.

original diff ok gwk@@ tweaks and ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 2007/01/15 23:19:05 jsg Exp $	*/
a49 2
#include "wt.h"
bdev_decl(wt);
d66 1
a66 1
	bdev_tape_init(NWT,wt),		/* 3: QIC-02/QIC-36 tape */
d78 1
a78 1
	bdev_lkm_dummy(),	/* 15: Sony CD-ROM */
d190 1
a190 1
	cdev_tape_init(NWT,wt),		/* 10: QIC-02/QIC-36 tape */
@


1.10
log
@ansi/deregister
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 2006/06/11 10:56:39 mk Exp $	*/
a100 7
/* open, close, ioctl -- XXX should be a generic device */
#define cdev_oci_init(c,n) { \
        dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
        (dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
        (dev_type_stop((*))) enodev, 0,  seltrue, \
        (dev_type_mmap((*))) enodev, 0 }

d281 1
a281 1
 	cdev_oci_init(NBIO,bio),	/* 79: ioctl tunnel */
@


1.9
log
@Get rid of the wdt(4) char device.  We have watchdog(4) and
watchdogd(4), so there's no point in supporting old, unused,
non-generic interfaces.

Tested by < jg , rilk - com>.

The sensors available on the WDT501 model will be supported later using
the sensors framework.

ok mickey markus
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 2005/07/31 06:39:06 dlg Exp $	*/
d313 1
a313 2
iskmemdev(dev)
	dev_t dev;
d323 1
a323 2
iszerodev(dev)
	dev_t dev;
d330 1
a330 1
getnulldev()
d409 1
a409 2
dev_rawpart(dv)
	struct device *dv;
@


1.8
log
@remove the config glue between the /dev entry for ses and its driver

sure deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 2005/06/02 20:09:38 tholo Exp $	*/
a114 6
/* open, close, read, ioctl */
#define	cdev_wdt_init(c, n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, seltrue, (dev_type_mmap((*))) enodev }

a161 2
#include "wdt.h"
cdev_decl(wdt);
d257 1
a257 1
	cdev_wdt_init(NWDT,wdt),	/* 55: WDT50x watchdog timer */
@


1.7
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2004/05/30 08:11:26 grange Exp $	*/
a52 1
#include "ses.h"
d222 1
a222 1
	cdev_ses_init(NSES,ses),	/* 24: SES/SAF-TE SCSI */
@


1.6
log
@Devices hot plugging support.
The hotplug pseudo-device passes device attachment and detachment events
to userland.  When a device attaches or detaches, the corresponding event
is queued.  The events can then be obtained from the queue through the
read(2) call on the /dev/hotplug device file. Each event consists of
event type (attach/detach), device class (DV_*) and device name (sd1 e.g.).

We have hotplug pseudo-device on alpha, amd64, i386, macppc and sparc64.
Since it was tested only on i386 other archs has it commented out
in GENERIC until tested.

The idea liked peter@@ tedu@@ drahn@@ millert@@ marco@@ henning@@.
Ok deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2004/04/15 00:15:32 pvalchev Exp $	*/
d162 1
d301 1
@


1.5
log
@Fix urio(4) entry, MAKEDEV was correct already; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2004/02/23 01:19:52 tom Exp $	*/
d193 1
d299 1
@


1.4
log
@- Pick up the /boot argc, argv in locore.S (though not currently used)
- Probe for console devices (incl serial) in /boot
- Pass console device from /boot to kernel (temp via additional param)

With this, boot> set tty com0 now works.

"just don't break a build" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2004/02/10 01:31:21 millert Exp $	*/
d276 1
a276 1
	cdev_usbdev_init(NURIO,urio),	/* 65: USB Diamond Rio 500 */
@


1.3
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2004/02/03 12:09:47 mickey Exp $	*/
d451 1
a451 1
#if 0 && NCOM > 0
@


1.3.2.1
log
@The merge of these files were done to another date than the rest, fix.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d296 2
@


1.3.2.2
log
@Merge with the trunk
@
text
@a192 1
#include "hotplug.h"
d276 1
a276 1
	cdev_urio_init(NURIO,urio),	/* 65: USB Diamond Rio 500 */
a295 3
	cdev_notdef(),			/* 80: gpr? XXX */
	cdev_ptm_init(NPTY,ptm),	/* 81: pseudo-tty ptm device */
	cdev_hotplug_init(NHOTPLUG,hotplug), /* 82: devices hot plugging */
d449 1
a449 1
#if NCOM + NPCCOM > 0
@


1.2
log
@das boot; das cloned das from das i386
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2004/01/28 01:39:38 mickey Exp $	*/
d296 2
@


1.1
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a441 1
cons_decl(pc);
a453 1

@

