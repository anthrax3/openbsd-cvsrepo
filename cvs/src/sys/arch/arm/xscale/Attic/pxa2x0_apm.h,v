head	1.9;
access;
symbols
	OPENBSD_6_0:1.8.0.30
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.26
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.28
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.20
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.24
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.22
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.18
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.16
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.14
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.12
	OPENBSD_5_0:1.8.0.10
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.8
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.16
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.14
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.12
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.10
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.8
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.6
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5;
locks; strict;
comment	@ * @;


1.9
date	2016.09.03.13.37.42;	author guenther;	state dead;
branches;
next	1.8;
commitid	6T3r4QcMFKe3Fo5T;

1.8
date	2009.03.27.16.01.37;	author oga;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.13.05.40.07;	author uwe;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.11.03.07.09;	author uwe;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.03.22.55.00;	author uwe;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.22.21.53.03;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.26.06.34.53;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.20.23.34.36;	author uwe;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.19.02.02.34;	author uwe;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Retire zaurus, as it hasn't made the EABI jump and will be permanently broken
shortly when we use the hardware thread register in userland
@
text
@/*	$OpenBSD: pxa2x0_apm.h,v 1.8 2009/03/27 16:01:37 oga Exp $	*/

/*
 * Copyright (c) 2005 Uwe Stuehler <uwe@@bsdx.de>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _PXA2X0_APM_H_
#define _PXA2X0_APM_H_

#include <sys/event.h>

#include <machine/bus.h>
#include <machine/apmvar.h>

struct pxa2x0_apm_softc {
	struct	device sc_dev;
	struct	proc *sc_thread;
	struct	rwlock sc_lock;
	struct	klist sc_note;
	int	sc_flags;
	int	sc_wakeon;	/* enabled wakeup sources */
	int	sc_batt_life;
	bus_space_tag_t sc_iot;
	bus_space_handle_t sc_pm_ioh;
	bus_space_handle_t sc_memctl_ioh;
	int	(*sc_get_event)(struct pxa2x0_apm_softc *, u_int *);
	void	(*sc_power_info)(struct pxa2x0_apm_softc *,
	    struct apm_power_info *);
	void	(*sc_suspend)(struct pxa2x0_apm_softc *);
	int	(*sc_resume)(struct pxa2x0_apm_softc *);
};

void	pxa2x0_apm_attach_sub(struct pxa2x0_apm_softc *);
void	pxa2x0_apm_sleep(struct pxa2x0_apm_softc *);

#define PXA2X0_WAKEUP_POWERON	(1<<0)
#define PXA2X0_WAKEUP_GPIORST	(1<<1)
#define PXA2X0_WAKEUP_SD	(1<<2)
#define PXA2X0_WAKEUP_RC	(1<<3)
#define PXA2X0_WAKEUP_SYNC	(1<<4)
#define PXA2X0_WAKEUP_KEYNS0	(1<<5)
#define PXA2X0_WAKEUP_KEYNS1	(1<<6)
#define PXA2X0_WAKEUP_KEYNS2	(1<<7)
#define PXA2X0_WAKEUP_KEYNS3	(1<<8)
#define PXA2X0_WAKEUP_KEYNS4	(1<<9)
#define PXA2X0_WAKEUP_KEYNS5	(1<<10)
#define PXA2X0_WAKEUP_KEYNS6	(1<<11)
#define PXA2X0_WAKEUP_CF0	(1<<12)
#define PXA2X0_WAKEUP_CF1	(1<<13)
#define PXA2X0_WAKEUP_USBD	(1<<14)
#define PXA2X0_WAKEUP_LOCKSW	(1<<15)
#define PXA2X0_WAKEUP_JACKIN	(1<<16)
#define PXA2X0_WAKEUP_CHRGFULL	(1<<17)
#define PXA2X0_WAKEUP_RTC	(1<<18)

#define PXA2X0_WAKEUP_KEYNS_ALL	(PXA2X0_WAKEUP_KEYNS0|			\
    PXA2X0_WAKEUP_KEYNS1|PXA2X0_WAKEUP_KEYNS2|PXA2X0_WAKEUP_KEYNS3|	\
    PXA2X0_WAKEUP_KEYNS4|PXA2X0_WAKEUP_KEYNS5|PXA2X0_WAKEUP_KEYNS6)

#define PXA2X0_WAKEUP_CF_ALL	(PXA2X0_WAKEUP_CF0|PXA2X0_WAKEUP_CF1)

#define PXA2X0_WAKEUP_ALL	(PXA2X0_WAKEUP_POWERON|			\
    PXA2X0_WAKEUP_GPIORST|PXA2X0_WAKEUP_SD|PXA2X0_WAKEUP_RC|		\
    PXA2X0_WAKEUP_SYNC|PXA2X0_WAKEUP_KEYNS_ALL|PXA2X0_WAKEUP_CF_ALL|	\
    PXA2X0_WAKEUP_USBD|PXA2X0_WAKEUP_LOCKSW|PXA2X0_WAKEUP_JACKIN|	\
    PXA2X0_WAKEUP_CHRGFULL|PXA2X0_WAKEUP_RTC)

void	pxa2x0_wakeup_config(u_int, int);
u_int	pxa2x0_wakeup_status(void);

#endif
@


1.8
log
@convert arm apm lock to rwlock.

ok drahn@@, todd@@ tested.
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.7 2005/04/13 05:40:07 uwe Exp $	*/
@


1.7
log
@Call special suspend and resume hooks.  The latter can cancel a resume.
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.6 2005/04/11 03:07:09 uwe Exp $	*/
d30 1
a30 1
	struct	lock sc_lock;
@


1.6
log
@- ask upper layer for events and call apm_record_event() as appropriate
- allow upper layer to detect the wake-up source which caused a resume
- avoid a temporary bus space mapping
- suspend on battery low events
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.5 2005/03/03 22:55:00 uwe Exp $	*/
d33 1
d41 2
@


1.5
log
@Support APM_IOC_PRN_CTL, and machdep.apmwarn as documented in apm(4), and
apmd(8); missing sysctl variable noticed by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.4 2005/02/22 21:53:03 uwe Exp $	*/
d33 1
d36 2
a37 1
	void	(*sc_periodic_check)(struct pxa2x0_apm_softc *);
a39 4
	u_char	sc_ac_state;
	u_char	sc_batt_state;
	u_char	sc_batt_life;
	u_char	sc_prev_batt_life;
d41 1
d43 1
d77 2
a78 1
void	pxa2x0_wakeup_config(u_int32_t, int);
@


1.4
log
@Initial suspend/resume code with additional powerhooks.  Enter/exit
suspend mode with power button or zzz.  May not work for everyone yet.
ok drahn@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.3 2005/01/26 06:34:53 uwe Exp $	*/
d38 4
@


1.3
log
@New device for the dedicated SSP unit, automatic battery charging, and
reporting the remaining battery life to apmd(8).
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.2 2005/01/20 23:34:36 uwe Exp $	*/
d39 1
d41 33
a73 1
extern	void pxa2x0_apm_attach_sub(struct pxa2x0_apm_softc *);
@


1.2
log
@Enable apm/scoop drivers and report A/C power status correctly.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_apm.h,v 1.1 2005/01/19 02:02:34 uwe Exp $	*/
d25 1
a25 10

#define PXAAPM_AC_PRESENT	(1<<0)
#define PXAAPM_BATT_PRESENT	(1<<1)

struct pxaapm_battery_info {
	int	flags;
	u_int	cur_charge;
	u_int	max_charge;
	int	draw;
};
a34 1
	void	(*sc_battery_info)(struct pxaapm_battery_info *);
d36 2
@


1.1
log
@APM emulation framework and zaurus scoop driver.  Not enabled yet.
ok drahn@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 10
d44 2
@

