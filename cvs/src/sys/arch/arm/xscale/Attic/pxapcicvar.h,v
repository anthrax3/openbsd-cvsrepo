head	1.8;
access;
symbols
	OPENBSD_6_0:1.7.0.44
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.40
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.42
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.34
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.38
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.36
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.32
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.30
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.28
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.26
	OPENBSD_5_0:1.7.0.24
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.22
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.20
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.16
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5;
locks; strict;
comment	@ * @;


1.8
date	2016.09.03.13.37.42;	author guenther;	state dead;
branches;
next	1.7;
commitid	6T3r4QcMFKe3Fo5T;

1.7
date	2005.12.14.15.08.51;	author uwe;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.01.23.51.55;	author uwe;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.23.00.08.16;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.18.16.26.36;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.04.05.37.43;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.02.19.52.37;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.30.23.50.07;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Retire zaurus, as it hasn't made the EABI jump and will be permanently broken
shortly when we use the hardware thread register in userland
@
text
@/*	$OpenBSD: pxapcicvar.h,v 1.7 2005/12/14 15:08:51 uwe Exp $ */

/*
 * Copyright (c) 2005 Dale Rahn <drahn@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct pxapcic_socket {
        struct pxapcic_softc *sc;
        int socket;		/* socket number */
        struct device *pcmcia;
	struct proc *event_thread;

        int flags;
        int power_capability;	/* PXAPCIC_POWER_3V | PXAPCIC_POWER_5V */

	int irqpin;
	void *irq;

        void *pcictag_cookie;	/* opaque data for pcictag functions */
	struct pxapcic_tag *pcictag;
};

/* event */
#define PXAPCIC_EVENT_INSERTION	0
#define PXAPCIC_EVENT_REMOVAL	1

/* flags */
#define PXAPCIC_FLAG_CARDD	0
#define PXAPCIC_FLAG_CARDP	1

struct pxapcic_tag {
	u_int (*read)(struct pxapcic_socket *, int);
	void (*write)(struct pxapcic_socket *, int, u_int);
	void (*set_power)(struct pxapcic_socket *, int);
	void (*clear_intr)(struct pxapcic_socket *);
	void *(*intr_establish)(struct pxapcic_socket *, int,
	    int (*)(void *), void *);
	void (*intr_disestablish)(struct pxapcic_socket *, void *);
	const char *(*intr_string)(struct pxapcic_socket *);
};

/* pcictag registers and their values */
#define PXAPCIC_CARD_STATUS	0
#define  PXAPCIC_CARD_INVALID	0
#define  PXAPCIC_CARD_VALID	1
#define PXAPCIC_CARD_READY	1
#define PXAPCIC_CARD_POWER	2
#define  PXAPCIC_POWER_OFF	0
#define  PXAPCIC_POWER_3V	1
#define  PXAPCIC_POWER_5V	2
#define PXAPCIC_CARD_RESET	3

struct pxapcic_softc {
	struct device sc_dev;
	struct pxapcic_socket sc_socket[2];

        bus_space_tag_t sc_iot;
        bus_space_handle_t sc_memctl_ioh;

	void *sc_irq;
        int sc_shutdown;
	int sc_nslots;
	int sc_irqpin[2];
	int sc_irqcfpin[2];
};

void	pxapcic_attach(struct pxapcic_softc *,
    void (*socket_setup_hook)(struct pxapcic_socket *));
int	pxapcic_intr(void *);
@


1.7
log
@Don't hard-code card present and number of socket bits in the PCMCIA bus
configuration register, but control these bits from PCMCIA code.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pxapcicvar.h,v 1.6 2005/07/01 23:51:55 uwe Exp $ */
@


1.6
log
@Move all zaurus specific code from pxa2x0_pcic.c into scoop_pcic.c
without affecting the way the driver works.
@
text
@d1 1
a1 1
/*	$OpenBSD: pxapcicvar.h,v 1.5 2005/02/23 00:08:16 drahn Exp $ */
d70 1
@


1.5
log
@Add missing copyright.
@
text
@d1 2
a2 1
/*	$OpenBSD: pxapcicvar.h,v 1.4 2005/01/18 16:26:36 drahn Exp $ */
d21 1
a21 1
        int socket;                     /* socket number */
a24 2
	bus_space_handle_t scooph;

d26 1
a27 1
        int power_capability;
d31 2
a32 1
        void *pcictag_cookie;   /* opaque data for pcictag functions */
d36 2
a37 2
#define PXAPCIC_EVENT_INSERTION    0
#define PXAPCIC_EVENT_REMOVAL      1
d39 3
a41 3
/* laststatus */
#define PXAPCIC_FLAG_CARDD 0
#define PXAPCIC_FLAG_CARDP 1
d44 2
a45 2
	int (*read)(struct pxapcic_socket *, int);
	void (*write)(struct pxapcic_socket *, int, int);
d47 1
a47 1
	void (*clear_intr)(int);
d51 1
d54 10
d78 3
a80 40
 
#define SCOOP_REG_MCR  0x00
#define SCOOP_REG_CDR  0x04
#define SCOOP_REG_CSR  0x08
#define SCOOP_REG_CPR  0x0C
#define SCOOP_REG_CCR  0x10
#define SCOOP_REG_IRR  0x14
#define SCOOP_REG_IRM  0x14
#define SCOOP_REG_IMR  0x18
#define SCOOP_REG_ISR  0x1C
#define SCOOP_REG_GPCR 0x20
#define SCOOP_REG_GPWR 0x24
#define SCOOP_REG_GPRR 0x28

#define SCP_CDR_DETECT	0x0002

#define SCP_CSR_READY	0x0002
#define SCP_CSR_MISSING	0x0004
#define SCP_CSR_WPROT	0x0008
#define SCP_CSR_BVD1	0x0010
#define SCP_CSR_BVD2	0x0020
#define SCP_CSR_3V	0x0040
#define SCP_CSR_PWR	0x0080

#define SCP_CPR_OFF	0x0000
#define SCP_CPR_3V	0x0001
#define SCP_CPR_5V	0x0002
#define SCP_CPR_PWR	0x0080


#define SCP_MCR_IOCARD	0x0010
#define SCP_CCR_RESET	0x0080

#define SCP_IMR_READY	0x0002
#define SCP_IMR_DETECT	0x0004
#define SCP_IMR_WRPROT	0x0008
#define SCP_IMR_STSCHG	0x0010
#define SCP_IMR_BATWARN	0x0020
#define SCP_IMR_UNKN0	0x0040
#define SCP_IMR_UNKN1	0x0080
@


1.4
log
@Clean up pxapcic attachment code, make it closer to easy to split the
driver. Also attach the slots in reverse order, so that the internal
HD on C3000 always is wd0.
@
text
@d1 17
a17 1
/*	$OpenBSD: pxapcicvar.h,v 1.3 2005/01/04 05:37:43 drahn Exp $ */
@


1.3
log
@Framed up support for C3000, however not working yet so match is disabled.
@
text
@d1 1
a1 1
/*	$OpenBSD: pxapcicvar.h,v 1.2 2005/01/02 19:52:37 drahn Exp $ */
a44 1
	int sc_gpio;
d46 3
@


1.2
log
@OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d6 3
a8 3
	/*
        struct pxapcic_tag *pcictag;
	*/
d13 2
a42 1
	bus_space_handle_t sc_scooph;
a43 1
	struct proc *sc_event_thread;
@


1.1
log
@xscale bits, taken from NetBSD with modifications as appropriate for OpenBSD.
@
text
@d1 1
@

