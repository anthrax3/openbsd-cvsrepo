head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.42
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.38
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.40
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.32
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.36
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.34
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.30
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.28
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.26
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.24
	OPENBSD_5_0:1.3.0.22
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.20
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2006.04.04.11.45.40;	author pascoe;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.26.03.52.07;	author pascoe;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.15.00.09.06;	author pascoe;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add input routines to the i2s layer to support future Zaurus audio input.

ok robert@@
@
text
@/*	$OpenBSD: pxa2x0_i2s.h,v 1.2 2005/05/26 03:52:07 pascoe Exp $	*/

/*
 * Copyright (c) 2005 Uwe Stuehler <uwe@@bsdx.de>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _PXA2X0_I2S_H_
#define _PXA2X0_I2S_H_

#include <machine/bus.h>

struct pxa2x0_i2s_dma;

struct pxa2x0_i2s_softc {
	bus_space_tag_t sc_iot;
	bus_space_handle_t sc_ioh;
	bus_size_t sc_size;
	bus_dma_tag_t sc_dmat;

	int sc_open;
	u_int32_t sc_sadiv;

	struct pxa2x0_i2s_dma *sc_dmas;
};

void	pxa2x0_i2s_init(struct pxa2x0_i2s_softc *sc);
int	pxa2x0_i2s_attach_sub(struct pxa2x0_i2s_softc *);
int	pxa2x0_i2s_detach_sub(struct pxa2x0_i2s_softc *);
void	pxa2x0_i2s_open(struct pxa2x0_i2s_softc *);
void	pxa2x0_i2s_close(struct pxa2x0_i2s_softc *);
void	pxa2x0_i2s_write(struct pxa2x0_i2s_softc *, u_int32_t);

void	pxa2x0_i2s_setspeed(struct pxa2x0_i2s_softc *, u_long *);

void *	pxa2x0_i2s_allocm(void *, int, size_t, int, int);
void	pxa2x0_i2s_freem(void  *, void *, int);
paddr_t	pxa2x0_i2s_mappage(void *, void *, off_t, int);
int	pxa2x0_i2s_round_blocksize(void *, int);
size_t	pxa2x0_i2s_round_buffersize(void *, int, size_t);

int	pxa2x0_i2s_start_output(struct pxa2x0_i2s_softc *, void *, int,
	    void (*)(void *), void *);
int	pxa2x0_i2s_start_input(struct pxa2x0_i2s_softc *, void *, int,
	    void (*)(void *), void *);

#endif
@


1.2
log
@Reset the zaurus audio components after resume, so that subsequent opens
can play sound again.
@
text
@d1 1
a1 1
/*	$OpenBSD: pxa2x0_i2s.h,v 1.1 2005/04/15 00:09:06 pascoe Exp $	*/
d54 2
@


1.1
log
@Functions for accessing the pxa2x0 I2S controller.

ok dlg@@ drahn@@ uwe@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: $	*/
d38 1
@

