head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2016.08.10.06.51.57;	author kettenis;	state Exp;
branches;
next	1.5;
commitid	072w8y2APSQB4Ylc;

1.5
date	2016.08.04.15.52.52;	author kettenis;	state Exp;
branches;
next	1.4;
commitid	WNhzA3xU3jFFVhST;

1.4
date	2016.05.02.08.15.55;	author patrick;	state Exp;
branches;
next	1.3;
commitid	SxPSz6lxaCE62Tnc;

1.3
date	2013.09.09.14.31.54;	author patrick;	state Exp;
branches;
next	1.2;

1.2
date	2013.05.02.19.15.53;	author patrick;	state Exp;
branches;
next	1.1;

1.1
date	2013.05.01.00.16.26;	author patrick;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Dynamically attach agtimer(4).  Since agtimer(4) also provides the delay()
function for platforms that have it, rework the code a bit such that it can
be used before agtimer(4) attaches.  Introduce a new agtimer_init()
function that checks whether the CPU implements the Generic Timer feature
and switches to agtimer_delay() if that feature is present.  Call this
function from the generic platform initialization code.

ok jsg@@
@
text
@#	$OpenBSD: files.cortex,v 1.5 2016/08/04 15:52:52 kettenis Exp $

# ARM core
device	cortex {}
attach	cortex at fdt
file	arch/arm/cortex/cortex.c		cortex

device	ampintc
attach	ampintc at fdt
file	arch/arm/cortex/ampintc.c		ampintc

device	amptimer
attach	amptimer at cortex
file	arch/arm/cortex/amptimer.c		amptimer

device	agtimer
attach	agtimer at fdt
file	arch/arm/cortex/agtimer.c		agtimer

device	armliicc
attach	armliicc at cortex
file	arch/arm/cortex/arml2cc.c		armliicc
@


1.5
log
@Dynamically attach ampintc(4) and make it register itself as an interrupt
controller.  Switch all i.MX6 devices over to the new FDT-aware interrupt
establish API and enable imxgpc(4).

This may break other platforms that use ampintc(4) as their interrupt
controller.  We will fix this as soon as possible by switching them over
to the new interrupt establish API as well.

This also removes the hack in fec(4) to avoid the gpio-based interrupt
workaround.  This commit is an essential step on the road to fix that
issue properly.

ok patrick@@, jsg@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.cortex,v 1.4 2016/05/02 08:15:55 patrick Exp $
d17 1
a17 1
attach	agtimer at cortex
@


1.4
log
@Rework mainbus and implement simplebus to be able to span a tree-like
topology based on device tree information.  Introduce a common attach
args structure to be used for all fdt-capable bus devices.

ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.cortex,v 1.3 2013/09/09 14:31:54 patrick Exp $
d9 1
a9 1
attach	ampintc at cortex
@


1.3
log
@Support for the ARM Generic Timer used in the Cortex-A7 and Cortex-A15.
@
text
@d1 1
a1 1
#	$OpenBSD: files.cortex,v 1.2 2013/05/02 19:15:53 patrick Exp $
d5 1
a5 1
attach	cortex at mainbus
@


1.2
log
@Add a driver for the secondary cache controller on the PandaBoard and
other ARM Cortex based boards. Disabled for now, until proper
secondary cache flushing is done where it's needed.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.cortex,v 1.1 2013/05/01 00:16:26 patrick Exp $
d15 4
@


1.1
log
@Add a cortex bus which represents the ARM MPCore Complex.
It will attach only to ARM Cortex A9 and A15 SoCs.
The generic interrupt controller and timer will attach to this bus,
later a secondary cache controller can be added.
The base address for those controllers are figured out using
the periphbase register.

ok bmercer@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d15 4
@

