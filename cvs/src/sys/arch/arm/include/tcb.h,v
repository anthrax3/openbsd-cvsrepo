head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.6
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2016.10.02.20.11.32;	author guenther;	state Exp;
branches;
next	1.2;
commitid	c9CZXARrsRzqRwBH;

1.2
date	2016.09.24.21.02.31;	author patrick;	state Exp;
branches;
next	1.1;
commitid	dFklIjOtjr4TmfA5;

1.1
date	2011.10.27.04.01.17;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.3
log
@The userspace TCB_GET() shouldn't take an argument

ok deraadt@@ tom@@ patrick@@
@
text
@/*	$OpenBSD: tcb.h,v 1.2 2016/09/24 21:02:31 patrick Exp $	*/

/*
 * Copyright (c) 2011 Philip Guenther <guenther@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MACHINE_TCB_H_
#define _MACHINE_TCB_H_

#ifdef _KERNEL

#include <machine/pcb.h>

static inline void
__arm_set_tcb(void *tcb)
{
	__asm volatile("mcr p15, 0, %0, c13, c0, 3\n" : : "r" (tcb));
}

#define TCB_GET(p)		\
	((struct pcb *)(p)->p_addr)->pcb_tcb

#define TCB_SET(p, addr)	\
	do {							\
		((struct pcb *)(p)->p_addr)->pcb_tcb = (addr);	\
		__arm_set_tcb(addr);				\
	} while (0)

#else /* _KERNEL */

/* ELF TLS ABI calls for small TCB, with static TLS data after it */
#define TLS_VARIANT	1

static inline void *
__arm_read_tcb(void)
{
	void *tcb;
	__asm volatile("mrc p15, 0, %0, c13, c0, 3\n" : "=r" (tcb));
	return tcb;
}

#define TCB_GET()		__arm_read_tcb()

#endif /* _KERNEL */

#endif /* _MACHINE_TCB_H_ */
@


1.2
log
@Stick the thread control block pointer into a CPU register on ARMv7.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcb.h,v 1.1 2011/10/27 04:01:17 guenther Exp $	*/
d54 1
a54 2
#define TCB_GET(p)		\
	__arm_read_tcb()
@


1.1
log
@Specify the TLS variant for each platform.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 16
a39 1
#error "not yet"
d45 11
@

