head	1.10;
access;
symbols
	OPENBSD_6_0:1.8.0.8
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.3.0.22
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.20
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.16
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.18
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.14
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.10
date	2017.02.06.03.52.35;	author dlg;	state Exp;
branches;
next	1.9;
commitid	PNVPdiX8gisxTxHB;

1.9
date	2017.01.06.00.46.49;	author jsg;	state Exp;
branches;
next	1.8;
commitid	rPhjKNTsItfZO0B3;

1.8
date	2015.01.11.11.18.36;	author dlg;	state Exp;
branches;
next	1.7;
commitid	JbYhV9jYU4GOy50e;

1.7
date	2014.07.12.16.25.08;	author guenther;	state Exp;
branches;
next	1.6;
commitid	r9gXh8PA6rI3P7q2;

1.6
date	2011.11.08.17.06.51;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.11.15.17.08;	author pirofti;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.00.35.23;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.20.15.04.54;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.09.49;	author drahn;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.19.10.48.02;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@add a license for the code in here, all of which i seem to have written.

this has been pointed out to me by a couple of people now.
@
text
@/*	$OpenBSD: endian.h,v 1.9 2017/01/06 00:46:49 jsg Exp $	*/

/*
 * Copyright (c) 2015 David Gwynne <dlg@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _ARM_ENDIAN_H_
#define _ARM_ENDIAN_H_

#ifdef _KERNEL
#ifdef __GNUC__

static inline __uint16_t
___swap16md(__uint16_t x)
{
	__uint16_t rv;

	__asm ("rev16 %0, %1" : "=r" (rv) : "r" (x));

	return (rv);
}
#define __swap16md(x) ___swap16md(x)

static inline __uint32_t
___swap32md(__uint32_t x)
{
	__uint32_t rv;

	__asm ("rev %0, %1" : "=r" (rv) : "r" (x));

	return (rv);
}
#define __swap32md(x) ___swap32md(x)

static inline __uint64_t
___swap64md(__uint64_t x)
{
	__uint64_t rv;

	rv = (__uint64_t)__swap32md(x >> 32) |
	    (__uint64_t)__swap32md(x) << 32;

	return (rv);
}
#define __swap64md(x) ___swap64md(x)

/* Tell sys/endian.h we have MD variants of the swap macros.  */
#define __HAVE_MD_SWAP

#endif  /* __GNUC__ */
#endif  /* _KERNEL */

#define _BYTE_ORDER _LITTLE_ENDIAN
#define	__STRICT_ALIGNMENT

#ifndef __FROM_SYS__ENDIAN
#include <sys/endian.h>
#endif
#endif /* _ARM_ENDIAN_H_ */
@


1.9
log
@there is no longer a need to ifdef __armv7__ armv6 rev instructions
@
text
@d1 17
a17 1
/*	$OpenBSD: endian.h,v 1.8 2015/01/11 11:18:36 dlg Exp $	*/
@


1.8
log
@armv6 introduced opcodes for reversing words in registers. we can
use these on armv7 as a backend for byteswapping things that endian.h
provide.

i dunno if its faster, but it makes smaller code. saves 30k on
GENERIC-OMAP.

ok jsing@@ bmercer@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.7 2014/07/12 16:25:08 guenther Exp $	*/
a6 1
#ifdef __armv7__
a46 1
#endif  /* __armv7__ */
@


1.7
log
@Tackle the endian.h mess.  Make it so that:
 * you can #include <sys/endian.h> instead of <machine/endian.h>,
   and ditto <endian.h>  (fixes code that pulls in <sys/endian.h> first)

 * those will always export the symbols that POSIX specified for
   <endian.h>, including the new {be,le}{16,32,64}toh() set.  c.f.
	http://austingroupbugs.net/view.php?id=162

   if __BSD_VISIBLE then you also get the symbols that our <machine/endian.h>
   currently exports (ntohs, NTOHS, dlg's bemtoh*, etc)

 * when doing POSIX compiles (not __BSD_VISIBLE), then <netinet/in.h> and
   <arpa/inet.h> will *stop* exporting the extra symbols like BYTE_ORDER
   and betoh*

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.6 2011/11/08 17:06:51 deraadt Exp $	*/
d5 45
@


1.6
log
@remove support for big endian; ok drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.5 2011/03/23 16:54:34 pirofti Exp $	*/
d8 2
d11 1
a11 1

@


1.5
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.4 2011/03/11 15:17:08 pirofti Exp $	*/
a5 3
#ifdef __ARMEB__
#define _BYTE_ORDER _BIG_ENDIAN
#else
a6 1
#endif
@


1.4
log
@Use _MACHINE_ENDIAN_H_ for this is The Right Thing To Do.

Okay guenther@@, millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.3 2005/12/13 00:35:23 millert Exp $	*/
d3 2
a4 2
#ifndef _MACHINE_ENDIAN_H_
#define _MACHINE_ENDIAN_H_
d14 1
a14 1
#endif /* _MACHINE_ENDIAN_H_ */
@


1.3
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 4
a4 1
/*	$OpenBSD: endian.h,v 1.2 2005/01/20 15:04:54 drahn Exp $	*/
d13 2
@


1.2
log
@ARM is strict alignment (practically) so let the kernel know this. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.2 2004/01/29 16:17:16 drahn Exp $	*/
d4 1
a4 1
#define BYTE_ORDER BIG_ENDIAN
d6 1
a6 1
#define BYTE_ORDER LITTLE_ENDIAN
@


1.1
log
@Arm port, NetBSD codebase stripped down, 32bit only support.
@
text
@d8 1
@


1.1.2.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@

