head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.26
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.22
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.18
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.20
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.12
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.7.0.10
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.8
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.4
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	SMP:1.1.0.4
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.8;

1.8
date	2011.03.02.18.31.58;	author matthew;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.23.21.25.07;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.09.03.07.52;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.06.18.53.05;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.14.21.46.30;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.24.20.49.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.02.19.52.36;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.05.13.42.19;	author drahn;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2004.06.05.23.10.45;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@/*	$OpenBSD: stdarg.h,v 1.8 2011/03/02 18:31:58 matthew Exp $ */
/*	$NetBSD: stdarg.h,v 1.7 2003/08/07 16:26:53 agc Exp $	*/

/*
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)stdarg.h	8.1 (Berkeley) 6/10/93
 */

#ifndef _ARM_STDARG_H_
#define	_ARM_STDARG_H_

#include <sys/cdefs.h>
#include <machine/_types.h>

typedef __va_list	va_list;
#ifdef __lint__
#define __builtin_next_arg(t)		((t) ? 0 : 0)
#define	__builtin_stdarg_start(a, l)	((a) = ((l) ? 0 : 0))
#define	__builtin_va_arg(a, t)		((a) ? 0 : 0)
#define	__builtin_va_end		/* nothing */
#define	__builtin_va_copy(d, s)		((d) = (s))
#endif

#define	va_start(ap, last)	__builtin_stdarg_start((ap), (last))

#define	va_arg(ap, type)	__builtin_va_arg((ap), type)
#define	va_end(ap)		__builtin_va_end((ap))
#define	__va_copy(dest, src)	__builtin_va_copy((dest), (src))

#endif /* !_ARM_STDARG_H_ */
@


1.8
log
@Change va_arg and va_end definitions from object-like macros to
function-like macros.  Allows (questionable but legal) use of "va_arg"
as a local variable name in code that includes <stdarg.h>.

"seems right" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.h,v 1.7 2008/10/23 21:25:07 kettenis Exp $ */
d35 2
a36 2
#ifndef _ARM32_STDARG_H_
#define	_ARM32_STDARG_H_
d56 1
a56 1
#endif /* !_ARM32_STDARG_H_ */
@


1.7
log
@Move the va_copy define to <sys/stdrag.h> making sure it is uniformaly
protected by __ISO_C_VISIBLE > 1999.  With a little help from miod@@.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.h,v 1.6 2006/04/09 03:07:52 deraadt Exp $ */
d52 2
a53 2
#define	va_arg			__builtin_va_arg
#define	va_end			__builtin_va_end
@


1.6
log
@#ifdef lint wraps for va_start
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.h,v 1.5 2006/01/06 18:53:05 millert Exp $ */
a54 4

#if __ISO_C_VISIBLE >= 1999
#define	va_copy(dest, src)	__va_copy((dest), (src))
#endif
@


1.5
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.h,v 1.4 2005/12/14 21:46:30 millert Exp $ */
d51 1
@


1.4
log
@convert _FOO_SOURCE -> __FOO_VISIBLE in machine.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.h,v 1.3 2005/11/24 20:49:44 deraadt Exp $ */
d39 1
a39 1
#include <machine/ansi.h>
d41 1
a41 1
typedef _BSD_VA_LIST_	va_list;
@


1.3
log
@remove __GNUC_PREREQ__(2, 96) block because lint pukes; idea for solution from miod
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.h,v 1.2 2005/01/02 19:52:36 drahn Exp $ */
d38 1
d55 1
a55 3
#if !defined(_ANSI_SOURCE) &&						\
    (defined(_ISOC99_SOURCE) || (__STDC_VERSION__ - 0) >= 199901L ||	\
     defined(_NETBSD_SOURCE))
@


1.2
log
@OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a48 1
#if __GNUC_PREREQ__(2, 96)
a52 15
#else
#define	__va_size(type) \
	(((sizeof(type) + sizeof(long) - 1) / sizeof(long)) * sizeof(long))

#define	va_start(ap, last) \
	((ap) = (va_list)__builtin_next_arg(last))

#define	va_arg(ap, type) \
	((type *)(ap += sizeof(type)))[-1]

#define	va_end(ap)

#define	__va_copy(dest, src)	((dest) = (src))

#endif /* __GNUC_PREREQ__(2, 96) */
@


1.1
log
@xlint compatible headers. (non-gcc)
@
text
@d1 1
@


1.1.4.1
log
@Merge with the trunk
@
text
@@

