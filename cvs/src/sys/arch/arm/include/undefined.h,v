head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.54
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.50
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.46
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.48
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.40
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.44
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.42
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.38
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.36
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.34
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.32
	OPENBSD_5_0:1.2.0.30
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.28
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.26
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.22
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.24
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.20
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.18
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.16
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.14
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.12
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2004.05.19.03.17.07;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.09.49;	author drahn;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.19.10.48.02;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.06.05.23.10.45;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@de __P of sys/arch/arm.
@
text
@/*	$OpenBSD: undefined.h,v 1.1 2004/02/01 05:09:49 drahn Exp $	*/
/*	$NetBSD: undefined.h,v 1.4 2001/12/20 01:20:23 thorpej Exp $	*/

/*
 * Copyright (c) 1995-1996 Mark Brinicombe.
 * Copyright (c) 1995 Brini.
 * All rights reserved.
 *
 * This code is derived from software written for Brini by Mark Brinicombe
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Brini.
 * 4. The name of the company nor the name of the author may be used to
 *    endorse or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY BRINI ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL BRINI OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * RiscBSD kernel project
 *
 * undefined.h
 *
 * Undefined instruction types, symbols and prototypes
 *
 * Created      : 08/02/95
 */


#ifndef _ARM_UNDEFINED_H_
#define _ARM_UNDEFINED_H_
#ifdef _KERNEL

#include <sys/queue.h>

typedef int (*undef_handler_t) (unsigned int, unsigned int, trapframe_t *, int);

#define FP_COPROC	1
#define FP_COPROC2	2
#define MAX_COPROCS	16

/* Prototypes for undefined.c */

void *install_coproc_handler (int, undef_handler_t);
void remove_coproc_handler (void *);
void undefined_init (void);

/*
 * XXX Stuff below here is for use before malloc() is available.  Most code
 * shouldn't use it.
 */

struct undefined_handler {
	LIST_ENTRY(undefined_handler) uh_link;
	undef_handler_t uh_handler;
};

/*
 * Handlers installed using install_coproc_handler_static shouldn't be
 * removed.
 */
void install_coproc_handler_static (int, struct undefined_handler *);

/* Calls up to undefined.c from trap handlers */
void undefinedinstruction(struct trapframe *);

#endif

/* End of undefined.h */

#endif /* _ARM_UNDEFINED_H_ */
@


1.1
log
@Arm port, NetBSD codebase stripped down, 32bit only support.
@
text
@d1 1
a1 1
/*	$OpenBSD: undefined.h,v 1.2 2004/01/29 16:17:16 drahn Exp $	*/
d54 1
a54 1
typedef int (*undef_handler_t) __P((unsigned int, unsigned int, trapframe_t *, int));
d62 3
a64 3
void *install_coproc_handler __P((int, undef_handler_t));
void remove_coproc_handler __P((void *));
void undefined_init __P((void));
d80 1
a80 1
void install_coproc_handler_static __P((int, struct undefined_handler *));
@


1.1.2.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.2.2
log
@Merge with the trunk
@
text
@d54 1
a54 1
typedef int (*undef_handler_t) (unsigned int, unsigned int, trapframe_t *, int);
d62 3
a64 3
void *install_coproc_handler (int, undef_handler_t);
void remove_coproc_handler (void *);
void undefined_init (void);
d80 1
a80 1
void install_coproc_handler_static (int, struct undefined_handler *);
@


