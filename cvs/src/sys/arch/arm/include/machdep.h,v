head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.20
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.16
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.18
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.10
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.14
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.28
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.26
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.22
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.24
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.20
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.18
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.16
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.14
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.12
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2016.09.24.13.43.25;	author kettenis;	state Exp;
branches;
next	1.4;
commitid	K8bvq8OtVadfpwkG;

1.4
date	2011.10.19.20.18.31;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.19.03.17.07;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.09.49;	author drahn;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.19.10.48.02;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.06.05.23.10.45;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@If the value of r0 upon entering the kernel is zero, interpret this as the
address of the end of the symbol table.  This will make it possible to get
rid of the code in the bootloader that patches up the kernel with the updated
esym value.

ok tom@@, patrick@@
@
text
@/*	$OpenBSD: machdep.h,v 1.4 2011/10/19 20:18:31 drahn Exp $	*/
/* $NetBSD: machdep.h,v 1.7 2002/02/21 02:52:21 thorpej Exp $ */

#ifndef _ARM_MACHDEP_H_
#define _ARM_MACHDEP_H_

/* misc prototypes used by the many arm machdeps */
void halt (void);
void parse_mi_bootargs (char *);
void data_abort_handler (trapframe_t *);
void prefetch_abort_handler (trapframe_t *);
void undefinedinstruction_bounce (trapframe_t *);
void dumpsys	(void);

/* 
 * note that we use void * as all the platforms have different ideas on what
 * the structure is
 */
u_int initarm (void *, void *, void *, paddr_t);

/* from arm/arm/intr.c */
void dosoftints (void);
void set_spl_masks (void);
#ifdef DIAGNOSTIC
void dump_spl_masks (void);
#endif
#endif
@


1.4
log
@API change to initarm to pass arguments from the bootloader thru to MD
C code. Will be used on beagle to process machine id and atags.
Looked at by uwe@@, tested on beagle/armish/zaurus.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.3 2011/03/23 16:54:34 pirofti Exp $	*/
d19 1
a19 1
u_int initarm (void *, void *, void *);
@


1.3
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.2 2004/05/19 03:17:07 drahn Exp $	*/
d19 1
a19 1
u_int initarm (void *);
@


1.2
log
@de __P of sys/arch/arm.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.1 2004/02/01 05:09:49 drahn Exp $	*/
d4 2
a5 2
#ifndef _ARM32_BOOT_MACHDEP_H_
#define _ARM32_BOOT_MACHDEP_H_
@


1.1
log
@Arm port, NetBSD codebase stripped down, 32bit only support.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.2 2004/01/29 16:17:16 drahn Exp $	*/
d8 6
a13 6
void halt __P((void));
void parse_mi_bootargs __P((char *));
void data_abort_handler __P((trapframe_t *));
void prefetch_abort_handler __P((trapframe_t *));
void undefinedinstruction_bounce __P((trapframe_t *));
void dumpsys	__P((void));
d19 1
a19 1
u_int initarm __P((void *));
d22 2
a23 2
void dosoftints __P((void));
void set_spl_masks __P((void));
d25 1
a25 1
void dump_spl_masks __P((void));
@


1.1.2.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.2.2
log
@Merge with the trunk
@
text
@d8 6
a13 6
void halt (void);
void parse_mi_bootargs (char *);
void data_abort_handler (trapframe_t *);
void prefetch_abort_handler (trapframe_t *);
void undefinedinstruction_bounce (trapframe_t *);
void dumpsys	(void);
d19 1
a19 1
u_int initarm (void *);
d22 2
a23 2
void dosoftints (void);
void set_spl_masks (void);
d25 1
a25 1
void dump_spl_masks (void);
@


