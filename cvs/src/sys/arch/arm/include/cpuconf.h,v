head	1.19;
access;
symbols
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.7.0.16
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.18
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.10
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.14
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.10
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.8
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.6
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.19
date	2017.01.06.00.06.02;	author jsg;	state Exp;
branches;
next	1.18;
commitid	YCbIRye8xzoWl68V;

1.18
date	2017.01.04.00.40.49;	author jsg;	state Exp;
branches;
next	1.17;
commitid	wyJlaIFS0yAv07lJ;

1.17
date	2016.08.14.11.30.54;	author jsg;	state Exp;
branches;
next	1.16;
commitid	3XHAPSr5dKOYN1hw;

1.16
date	2016.03.22.23.35.01;	author patrick;	state Exp;
branches;
next	1.15;
commitid	RkEnvixfXW2bEpue;

1.15
date	2016.03.22.23.28.02;	author patrick;	state Exp;
branches;
next	1.14;
commitid	bAxWaXK3mkjM56Iw;

1.14
date	2016.03.22.11.18.17;	author patrick;	state Exp;
branches;
next	1.13;
commitid	YjNMWFHczdMD8Xoi;

1.13
date	2016.03.19.09.51.24;	author patrick;	state Exp;
branches;
next	1.12;
commitid	E8GUcpv6nbDyd4Ml;

1.12
date	2016.03.19.09.47.54;	author patrick;	state Exp;
branches;
next	1.11;
commitid	WySdpoZsQMX20beB;

1.11
date	2016.03.19.09.36.57;	author patrick;	state Exp;
branches;
next	1.10;
commitid	PJBEdVboqiwjXPXy;

1.10
date	2016.03.18.13.35.25;	author jsg;	state Exp;
branches;
next	1.9;
commitid	clNIiOG8BcdedJSx;

1.9
date	2016.03.18.13.16.02;	author jsg;	state Exp;
branches;
next	1.8;
commitid	RKG2cJTBtpcdjKgj;

1.8
date	2016.03.18.06.54.21;	author jsg;	state Exp;
branches;
next	1.7;
commitid	82aYg3LAWI4D5T1j;

1.7
date	2011.09.20.22.02.13;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.24.04.56.19;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.08.02.57.32;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.11.02.38.14;	author kevlo;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.27.20.36.05;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.30.23.40.07;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.09.49;	author drahn;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.19.10.48.02;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.19
log
@unifdef CPU_ARMv7 and ARM_ARCH_7
ok kettenis@@ patrick@@
@
text
@/*	$OpenBSD: cpuconf.h,v 1.18 2017/01/04 00:40:49 jsg Exp $	*/
/*	$NetBSD: cpuconf.h,v 1.7 2003/05/23 00:57:24 ichiro Exp $	*/

/*
 * Copyright (c) 2002 Wasabi Systems, Inc.
 * All rights reserved.
 *
 * Written by Jason R. Thorpe for Wasabi Systems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed for the NetBSD Project by
 *	Wasabi Systems, Inc.
 * 4. The name of Wasabi Systems, Inc. may not be used to endorse
 *    or promote products derived from this software without specific prior
 *    written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY WASABI SYSTEMS, INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL WASABI SYSTEMS, INC
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _ARM_CPUCONF_H_
#define	_ARM_CPUCONF_H_

/*
 * IF YOU CHANGE THIS FILE, MAKE SURE TO UPDATE THE DEFINITION OF
 * "PMAP_NEEDS_PTE_SYNC" IN <arm/arm/pmap.h> FOR THE CPU TYPE
 * YOU ARE ADDING SUPPORT FOR.
 */

/*
 * Define which MMU classes are configured:
 *
 *      ARM_MMU_V7		v6/v7 MMU with XP bit enabled subpage
 *				protection is not used, TEX/AP is used instead.
 */

#define ARM_MMU_V7		1

#define	ARM_NMMUS		(ARM_MMU_V7)

#endif /* _ARM_CPUCONF_H_ */
@


1.18
log
@unifdef CPU_XSCALE_PXA2X0, ARM_MMU_XSCALE, ARM_MMU_GENERIC (armv3)
and remove some xscale definitions.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.17 2016/08/14 11:30:54 jsg Exp $	*/
a48 9
 * Determine which ARM architecture versions are configured.
 */
#if defined(CPU_ARMv7)
#define ARM_ARCH_7     1
#else 
#define ARM_ARCH_7     0
#endif

/*
a54 1
#if defined(CPU_ARMv7)
a55 3
#else
#define ARM_MMU_V7		0
#endif
@


1.17
log
@Remove code for Intel 80219/80321 xscale processors used by armish.
Generic xscale support and support for pxa2x0 used by zaurus remains.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.16 2016/03/22 23:35:01 patrick Exp $	*/
a50 6
#if defined(CPU_XSCALE_PXA2X0)
#define	ARM_ARCH_5	1
#else
#define	ARM_ARCH_5	0
#endif

a59 5
 *	ARM_MMU_GENERIC		Generic ARM MMU, compatible with ARM6.
 *
 *	ARM_MMU_XSCALE		XScale MMU.  Compatible with generic ARM
 *				MMU, but also has several extensions which
 *				require different PTE layout to use.
a64 12
#define	ARM_MMU_GENERIC		1
#else
#define	ARM_MMU_GENERIC		0
#endif

#if defined(CPU_XSCALE_PXA2X0)
#define	ARM_MMU_XSCALE		1
#else
#define	ARM_MMU_XSCALE		0
#endif

#if defined(CPU_ARMv7)
d70 1
a70 2
#define	ARM_NMMUS		(ARM_MMU_GENERIC +	\
				 ARM_MMU_XSCALE + ARM_MMU_V7)
@


1.16
log
@Remove support for ARM11.  This was the last unused and unmaintained
processor in our code.  Now we're left with only armv7 and XScale for
armish and zaurus.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.15 2016/03/22 23:28:02 patrick Exp $	*/
d51 1
a51 1
#if (defined(CPU_XSCALE_80321) || defined(CPU_XSCALE_PXA2X0))
d81 1
a81 1
#if (defined(CPU_XSCALE_80321) || defined(CPU_XSCALE_PXA2X0))
a94 12

/*
 * Define features that may be present on a subset of CPUs
 *
 *	ARM_XSCALE_PMU		Performance Monitoring Unit on 80321
 */

#if defined(CPU_XSCALE_80321)
#define ARM_XSCALE_PMU	1
#else
#define ARM_XSCALE_PMU	0
#endif
@


1.15
log
@Remove support for ARM10.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.14 2016/03/22 11:18:17 patrick Exp $	*/
a56 6
#if defined(CPU_ARM11)
#define ARM_ARCH_6     1
#else 
#define ARM_ARCH_6     0
#endif

d75 1
a75 1
#if (defined(CPU_ARM11) || defined(CPU_ARMv7))
@


1.14
log
@Remove support for ARM9E.  This is another step in the plan to remove
all unused and unmaintained ARM processors from the past.

ok bmercer@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.13 2016/03/19 09:51:24 patrick Exp $	*/
d51 1
a51 2
#if (defined(CPU_ARM10) || \
     defined(CPU_XSCALE_80321) || defined(CPU_XSCALE_PXA2X0))
d81 1
a81 2
#if (defined(CPU_ARM10) || \
     defined(CPU_ARM11) || defined(CPU_ARMv7) )
@


1.13
log
@Remove support for the XScale 80200.  We don't use it, it didn't compile
and the included headers didn't even exist.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.12 2016/03/19 09:47:54 patrick Exp $	*/
d51 1
a51 1
#if (defined(CPU_ARM9E) || defined(CPU_ARM10) || 			\
d82 1
a82 1
#if (defined(CPU_ARM9E) || defined(CPU_ARM10) || \
@


1.12
log
@Remove support for IXP425.  This is another architecture that is not
used and has probably never been used at all.  Some included headers
do not even exist.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.11 2016/03/19 09:36:57 patrick Exp $	*/
d52 1
a52 2
     defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321) ||		\
     defined(CPU_XSCALE_PXA2X0))
d89 1
a89 2
#if (defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321) ||		\
     defined(CPU_XSCALE_PXA2X0))
d107 1
a107 1
 *	ARM_XSCALE_PMU		Performance Monitoring Unit on 80200 and 80321
d110 1
a110 1
#if (defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321))
@


1.11
log
@Remove support for StrongARM (SA1) and IXP12x0.  Both are ARMv4 and
are not used by any of the arm platforms.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.10 2016/03/18 13:35:25 jsg Exp $	*/
d53 1
a53 1
     defined(CPU_XSCALE_PXA2X0) || defined(CPU_XSCALE_IXP425))
d91 1
a91 1
     defined(CPU_XSCALE_PXA2X0) || defined(CPU_XSCALE_IXP425))
@


1.10
log
@IXP425 is v5 not v4.  Same change by msaitoh in NetBSD rev 1.16.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.9 2016/03/18 13:16:02 jsg Exp $	*/
a50 7
#if (defined(CPU_SA1100) || defined(CPU_SA1110) || \
     defined(CPU_IXP12X0))
#define	ARM_ARCH_4	1
#else
#define	ARM_ARCH_4	0
#endif

a75 3
 *	ARM_MMU_SA1		StrongARM SA-1 MMU.  Compatible with generic
 *				ARM MMU, but has no write-through cache mode.
 *
a89 7
#if (defined(CPU_SA1100) || defined(CPU_SA1110) ||\
     defined(CPU_IXP12X0))
#define	ARM_MMU_SA1		1
#else
#define	ARM_MMU_SA1		0
#endif

d104 1
a104 1
				 ARM_MMU_SA1 + ARM_MMU_XSCALE + ARM_MMU_V7)
@


1.9
log
@Remove support for ARM9T (armv4t).  Not used by any of the arm platforms.
From Patrick Wildt.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.8 2016/03/18 06:54:21 jsg Exp $	*/
d52 1
a52 1
     defined(CPU_IXP12X0) || defined(CPU_XSCALE_IXP425))
d60 1
a60 1
     defined(CPU_XSCALE_PXA2X0))
@


1.8
log
@Remove support for ARM8, an old armv4 processor without thumb that was
never supported by any arm port and wouldn't have built due to a missing
cpufunc_asm_arm8.S file.

From Patrick Wildt.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.7 2011/09/20 22:02:13 miod Exp $	*/
d51 1
a51 2
#if (defined(CPU_ARM9) || \
     defined(CPU_SA1100) || defined(CPU_SA1110) || \
d93 2
a94 2
#if (defined(CPU_ARM9) || defined(CPU_ARM9E) || \
     defined(CPU_ARM10) || defined(CPU_ARM11) || defined(CPU_ARMv7) )
@


1.7
log
@Late spring cleaning of the arm code for old dusty bits we do not want to
keep:
- remove bootconfig parameter passing feature (unused).
- unifdef __PROG32 and remove all remains of arm26 code.
- remove ARMFPE support (unused).
- remove support for ARM2, ARM2AS, ARM3, ARM6, ARM7, ARM7TDMI and StrongARM
  processor families, and the related silicon bug workarounds (especially
  the SA-110 STM^ bug).
- remove cpu_functions no longer necessary after previous removals.
- remove ARM32_DISABLE_ALIGNMENT_FAULTS option (unused).
- make FIQ support conditional on option FIQ (unused, but may be eventually).

Discussed with drahn@@ and jasper@@ long ago, I was sitting on this commit for
no good reason.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.6 2009/05/24 04:56:19 drahn Exp $	*/
d51 1
a51 1
#if (defined(CPU_ARM8) || defined(CPU_ARM9) ||	\
d94 1
a94 1
#if (defined(CPU_ARM8) || defined(CPU_ARM9) || defined(CPU_ARM9E) ||	\
@


1.6
log
@Improve the ARMv7 support, still work in progress.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.5 2009/05/08 02:57:32 drahn Exp $	*/
d51 2
a52 14
#if (defined(CPU_ARM2) || defined(CPU_ARM250) || defined(CPU_ARM3))
#define	ARM_ARCH_2	1
#else
#define	ARM_ARCH_2	0
#endif

#if (defined(CPU_ARM6) || defined(CPU_ARM7))
#define	ARM_ARCH_3	1
#else
#define	ARM_ARCH_3	0
#endif

#if (defined(CPU_ARM7TDMI) || defined(CPU_ARM8) || defined(CPU_ARM9) ||	\
     defined(CPU_SA110) || defined(CPU_SA1100) || defined(CPU_SA1110) || \
a81 3
 *	ARM_MMU_MEMC		Prehistoric, external memory controller
 *				and MMU for ARMv2 CPUs.
 *
a92 5
#if (defined(CPU_ARM2) || defined(CPU_ARM250) || defined(CPU_ARM3))
#define	ARM_MMU_MEMC		1
#else
#define	ARM_MMU_MEMC		0
#endif
d94 1
a94 2
#if (defined(CPU_ARM6) || defined(CPU_ARM7) || defined(CPU_ARM7TDMI) ||	\
     defined(CPU_ARM8) || defined(CPU_ARM9) || defined(CPU_ARM9E) ||	\
d101 1
a101 1
#if (defined(CPU_SA110) || defined(CPU_SA1100) || defined(CPU_SA1110) ||\
d121 1
a121 1
#define	ARM_NMMUS		(ARM_MMU_MEMC + ARM_MMU_GENERIC +	\
@


1.5
log
@Pieces of arm11 and armv7 support for newer cpus. This is work in progress
and not complete.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.4 2008/09/11 02:38:14 kevlo Exp $	*/
d105 2
d137 1
a137 1
#define ARM_MMU_v7		1
d139 1
a139 1
#define ARM_MMU_v7		0
d143 1
a143 1
				 ARM_MMU_SA1 + ARM_MMU_XSCALE + ARM_MMU_v7)
@


1.4
log
@add support for arm9e core, taken from NetBSD.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.3 2006/05/27 20:36:05 miod Exp $	*/
d79 12
d114 1
a114 1
     defined(CPU_ARM10))
d134 6
d141 1
a141 1
				 ARM_MMU_SA1 + ARM_MMU_XSCALE)
@


1.3
log
@Nuke defopt remains. Tested on cats and zaurus.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.2 2004/12/30 23:40:07 drahn Exp $	*/
d64 2
a65 2
     defined(CPU_ARM10) || defined(CPU_SA110) || defined(CPU_SA1100) || \
     defined(CPU_SA1110) || defined(CPU_IXP12X0) || defined(CPU_XSCALE_IXP425))
d71 2
a72 1
#if (defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321) ||		\
d101 2
a102 1
     defined(CPU_ARM8) || defined(CPU_ARM9) || defined(CPU_ARM10))
@


1.2
log
@Work around the previous xscale/sa1xx muck, should now work for cats and xscale
systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.1 2004/02/01 05:09:49 drahn Exp $	*/
d49 1
a49 22
 * Step 1: Count the number of CPU types configured into the kernel.
 */
#if defined(_KERNEL_OPT)
#define	CPU_NTYPES	(defined(CPU_ARM2) + defined(CPU_ARM250) +	\
			 defined(CPU_ARM3) +				\
			 defined(CPU_ARM6) + defined(CPU_ARM7) +	\
			 defined(CPU_ARM7TDMI) +			\
			 defined(CPU_ARM8) + defined(CPU_ARM9) +	\
			 defined(CPU_ARM10) +				\
			 defined(CPU_SA110) + defined(CPU_SA1100) +	\
			 defined(CPU_SA1110) +				\
			 defined(CPU_IXP12X0) +				\
			 defined(CPU_XSCALE_80200) +			\
			 defined(CPU_XSCALE_80321) +			\
			 defined(CPU_XSCALE_PXA2X0) + 			\
			 defined(CPU_XSCALE_IXP425))
#else
#define	CPU_NTYPES	2
#endif /* _KERNEL_OPT */

/*
 * Step 2: Determine which ARM architecture versions are configured.
a77 5
#define	ARM_NARCH	(ARM_ARCH_2 + ARM_ARCH_3 + ARM_ARCH_4 + ARM_ARCH_5)
#if ARM_NARCH == 0
#error ARM_NARCH is 0
#endif

d79 1
a79 1
 * Step 3: Define which MMU classes are configured:
a121 3
#if ARM_NMMUS == 0
#error ARM_NMMUS is 0
#endif
d124 1
a124 1
 * Step 4: Define features that may be present on a subset of CPUs
d129 1
a129 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321))
@


1.1
log
@Arm port, NetBSD codebase stripped down, 32bit only support.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.2 2004/01/29 16:17:16 drahn Exp $	*/
a41 4
#if defined(_KERNEL_OPT)
#include "opt_cputypes.h"
#endif /* _KERNEL_OPT */

d72 1
a72 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_ARM2) || defined(CPU_ARM250) || defined(CPU_ARM3))
d78 1
a78 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_ARM6) || defined(CPU_ARM7))
d84 1
a84 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_ARM7TDMI) || defined(CPU_ARM8) || defined(CPU_ARM9) ||	\
d92 1
a92 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321) ||		\
d119 1
a119 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_ARM2) || defined(CPU_ARM250) || defined(CPU_ARM3))
d125 1
a125 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_ARM6) || defined(CPU_ARM7) || defined(CPU_ARM7TDMI) ||	\
d132 1
a132 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_SA110) || defined(CPU_SA1100) || defined(CPU_SA1110) ||\
d139 1
a139 2
#if !defined(_KERNEL_OPT) ||						\
    (defined(CPU_XSCALE_80200) || defined(CPU_XSCALE_80321) ||		\
@


1.1.2.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@

