head	1.50;
access;
symbols
	OPENBSD_6_2_BASE:1.50
	OPENBSD_6_1:1.50.0.4
	OPENBSD_6_1_BASE:1.50
	OPENBSD_6_0:1.46.0.2
	OPENBSD_6_0_BASE:1.46
	OPENBSD_5_9:1.42.0.2
	OPENBSD_5_9_BASE:1.42
	OPENBSD_5_8:1.41.0.6
	OPENBSD_5_8_BASE:1.41
	OPENBSD_5_7:1.41.0.2
	OPENBSD_5_7_BASE:1.41
	OPENBSD_5_6:1.37.0.6
	OPENBSD_5_6_BASE:1.37
	OPENBSD_5_5:1.37.0.4
	OPENBSD_5_5_BASE:1.37
	OPENBSD_5_4:1.35.0.2
	OPENBSD_5_4_BASE:1.35
	OPENBSD_5_3:1.33.0.2
	OPENBSD_5_3_BASE:1.33
	OPENBSD_5_2:1.32.0.2
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.2
	OPENBSD_5_0:1.29.0.4
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.29.0.2
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.26.0.2
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.23.0.2
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.22.0.4
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.21.0.2
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@ * @;


1.50
date	2017.01.23.08.37.08;	author deraadt;	state Exp;
branches;
next	1.49;
commitid	8anb8Ophv7ljB5nz;

1.49
date	2016.09.04.10.51.23;	author naddy;	state Exp;
branches;
next	1.48;
commitid	4OWaAfwqMvhOCLOI;

1.48
date	2016.09.02.17.06.12;	author goda;	state Exp;
branches;
next	1.47;
commitid	J1JzeTsS8K8zyH3c;

1.47
date	2016.07.31.09.18.01;	author jsg;	state Exp;
branches;
next	1.46;
commitid	5do1fawIQ98C9bBm;

1.46
date	2016.05.23.00.05.34;	author deraadt;	state Exp;
branches;
next	1.45;
commitid	Lca4at0KuB1ho5Xb;

1.45
date	2016.05.21.21.24.36;	author kettenis;	state Exp;
branches;
next	1.44;
commitid	JypHiPUuFFLvJ1DT;

1.44
date	2016.04.25.20.09.14;	author tedu;	state Exp;
branches;
next	1.43;
commitid	43yo2G4zZOY9ab4i;

1.43
date	2016.02.26.09.10.04;	author natano;	state Exp;
branches;
next	1.42;
commitid	NHDvdrxPpwDqGtpK;

1.42
date	2015.10.23.15.10.52;	author claudio;	state Exp;
branches;
next	1.41;
commitid	g17gxjQh9N9egLbB;

1.41
date	2014.12.11.19.44.17;	author tedu;	state Exp;
branches;
next	1.40;
commitid	jUSAZlQ30WF1ESM9;

1.40
date	2014.10.09.04.10.03;	author tedu;	state Exp;
branches;
next	1.39;
commitid	Db8IHIncfKM3SDX9;

1.39
date	2014.10.09.03.59.58;	author tedu;	state Exp;
branches;
next	1.38;
commitid	I0KLtD9aVxAdm6aW;

1.38
date	2014.08.20.06.14.42;	author mikeb;	state Exp;
branches;
next	1.37;
commitid	qXFkosC6o9cv78HT;

1.37
date	2013.11.04.14.11.29;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2013.08.20.14.27.25;	author ajacoutot;	state Exp;
branches;
next	1.35;

1.35
date	2013.06.03.17.33.58;	author tedu;	state Exp;
branches;
next	1.34;

1.34
date	2013.03.15.09.10.52;	author ratchov;	state Exp;
branches;
next	1.33;

1.33
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2012.04.06.15.10.39;	author jsing;	state Exp;
branches;
next	1.31;

1.31
date	2011.10.06.20.49.27;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2011.09.16.21.01.45;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.28;

1.28
date	2010.11.28.20.48.44;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.26;

1.26
date	2010.07.03.03.59.16;	author krw;	state Exp;
branches;
next	1.25;

1.25
date	2010.06.09.15.25.32;	author jsing;	state Exp;
branches;
next	1.24;

1.24
date	2010.03.30.19.16.09;	author matthieu;	state Exp;
branches;
next	1.23;

1.23
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.03.14.45.50;	author jj;	state Exp;
branches;
next	1.21;

1.21
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2008.11.27.11.40.18;	author drahn;	state Exp;
branches;
next	1.19;

1.19
date	2008.06.12.20.03.48;	author mglocker;	state Exp;
branches;
next	1.18;

1.18
date	2008.05.14.20.49.48;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2006.07.28.17.35.55;	author kettenis;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.29.17.01.42;	author drahn;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.13.22.54.00;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.19.02.02.33;	author uwe;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.18.16.27.26;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.04.14.13.06;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.03.21.25.44;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.30.23.41.58;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.28.15.18.53;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2004.04.07.03.20.47;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.11.22.03.17;	author miod;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2004.02.10.01.31.21;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.09.48;	author drahn;	state Exp;
branches;
next	;

1.3.2.1
date	2004.02.19.10.48.00;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2004.06.05.23.10.44;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.50
log
@remove #defines present in MI conf.h; ok kettenis
@
text
@/*	$OpenBSD: conf.c,v 1.49 2016/09/04 10:51:23 naddy Exp $	*/
/*	$NetBSD: conf.c,v 1.10 2002/04/19 01:04:38 wiz Exp $	*/

/*
 * Copyright (c) 1994-1998 Mark Brinicombe.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mark Brinicombe
 *	for the NetBSD Project.
 * 4. The name of the company nor the name of the author may be used to
 *    endorse or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * RiscBSD kernel project
 *
 * conf.c
 *
 * Character and Block Device configuration
 * Console configuration
 *
 * Defines the structures [bc]devsw
 *
 * Created      : 17/09/94
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/conf.h>
#include <sys/vnode.h>

#include <machine/conf.h>

/*
 * From this point, these need to be MI foo.h files.
 */

/*
 * Standard MI devices (e.g. ones in dev/ic)
 */
#include "com.h"		/* NS164x0 serial ports */

/*
 * Standard pseudo-devices
 */
#include "bpfilter.h"
#include "pf.h"
#include "pty.h"
#include "tun.h"
#include "ksyms.h"

/*
 * APM interface
 */
#ifdef CONF_HAVE_APM
#include "apm.h"
#else
#define NAPM	0
#endif

/*
 * Disk/Filesystem pseudo-devices
 */
#include "rd.h"				/* memory disk driver */
#include "vnd.h"			/* vnode disk driver */

/*
 * WD/ATA devices
 */
#include "wd.h"
bdev_decl(wd);

#ifdef USER_PCICONF
#include "pci.h"
cdev_decl(pci);
#endif

/*
 * SCSI/ATAPI devices
 */
#include "sd.h"
#include "st.h"
#include "cd.h"
#include "ch.h"
#include "uk.h"
#include "bio.h"

/*
 * Audio devices
 */
#include "audio.h"
#include "video.h"
#include "midi.h"

/*
 * USB devices
 */
#include "usb.h"
#include "ucom.h"
#include "ugen.h"
#include "uhid.h"
#include "ulpt.h"

/*
 * WSCONS devices
 */
#include "wsdisplay.h"
/*
#include "wsfont.h"
*/
#include "wskbd.h"
#include "wsmouse.h"
#include "wsmux.h"
cdev_decl(wskbd);
cdev_decl(wsmouse);

#include "lpt.h"

#include "radio.h"
cdev_decl(radio);

#include <arm/conf.h>

/* Block devices */

struct bdevsw bdevsw[] = {
	bdev_notdef(),			/*  0: */
	bdev_swap_init(1, sw),		/*  1: swap pseudo-device */
	bdev_notdef(),			/*  2: */
	bdev_notdef(),			/*  3: */
	bdev_notdef(),			/*  4: */
	bdev_notdef(),			/*  5: */
	bdev_notdef(),			/*  6: */
	bdev_notdef(),			/*  7: */
	bdev_notdef(),			/*  8: */
	bdev_notdef(),			/*  9: */
	bdev_notdef(),			/* 10: */
	bdev_notdef(),			/* 11: */
	bdev_notdef(),			/* 12: */
	bdev_notdef(),			/* 13: */
	bdev_notdef(),			/* 14: */
	bdev_notdef(),			/* 15: */
	bdev_disk_init(NWD,wd),		/* 16: Internal IDE disk */
	bdev_notdef(),			/* 17: */
	bdev_disk_init(NRD,rd),		/* 18: memory disk */
	bdev_disk_init(NVND,vnd),	/* 19: vnode disk driver */
	bdev_notdef(),			/* 20: */
 	bdev_notdef(),			/* 21: was: concatenated disk driver */
	bdev_notdef(),			/* 22: */
	bdev_notdef(),			/* 23: */
	bdev_disk_init(NSD,sd),		/* 24: SCSI disk */
	bdev_notdef(),			/* 25: was: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 26: SCSI cdrom */
	bdev_notdef(),			/* 27: */
	bdev_notdef(),			/* 28: */
	bdev_notdef(),			/* 29: */
	bdev_notdef(),			/* 30: */
	bdev_notdef(),			/* 31: */
	bdev_notdef(),			/* 32: */
	bdev_notdef(),			/* 33: */
	bdev_notdef(),			/* 34: */
	bdev_notdef(),			/* 35: */
	bdev_notdef(),			/* 36: */
	bdev_notdef(),			/* 37: */
	bdev_notdef(),			/* 38: */
	bdev_notdef(),			/* 39: */
	bdev_notdef(),			/* 40: */
	bdev_notdef(),			/* 41: */
	bdev_notdef(),			/* 42: */
	bdev_notdef(),			/* 43: */
	bdev_notdef(),			/* 44: */
	bdev_notdef(),			/* 45: */
	bdev_notdef(),			/* 46: */
	bdev_notdef(),			/* 47: */
	bdev_notdef(),			/* 48: */
	bdev_notdef(),			/* 49: */
	bdev_notdef(),			/* 50: */
	bdev_notdef(),			/* 51: */
	bdev_notdef(),			/* 52: */
	bdev_notdef(),			/* 53: */
	bdev_notdef(),			/* 54: */
	bdev_notdef(),			/* 55: */
	bdev_notdef(),			/* 56: */
	bdev_notdef(),			/* 57: */
	bdev_notdef(),			/* 58: */
	bdev_notdef(),			/* 59: */
	bdev_notdef(),			/* 60: */
	bdev_notdef(),			/* 61: */
	bdev_notdef(),			/* 62: */
	bdev_notdef(),			/* 63: */
	bdev_notdef(),			/* 64: */
	bdev_notdef(),			/* 65: */
	bdev_notdef(),			/* 66: */
	bdev_notdef(),			/* 67: */
	bdev_notdef(),			/* 68: */
	bdev_notdef(),			/* 69: */
	bdev_notdef(),			/* 70: */
	bdev_notdef(),			/* 71 was: RAIDframe disk driver */
	bdev_notdef(),			/* 72: */
	bdev_notdef(),			/* 73: */
	bdev_notdef(),			/* 74: */
	bdev_notdef(),			/* 75: */
	bdev_notdef(),			/* 76: */
	bdev_notdef(),			/* 77: */
	bdev_notdef(),			/* 78: */
	bdev_notdef(),			/* 79: */
	bdev_notdef(),			/* 80: */
	bdev_notdef(),			/* 81: */
	bdev_notdef(),			/* 82: */
	bdev_notdef(),			/* 83: */
	bdev_notdef(),			/* 84: */
	bdev_notdef(),			/* 85: */
	bdev_notdef(),			/* 86: */
	bdev_notdef(),			/* 87: */
	bdev_notdef(),			/* 88: */
	bdev_notdef(),			/* 89: */
	bdev_notdef(),			/* 90: */
	bdev_notdef(),			/* 91: */
	bdev_notdef(),			/* 93: */
	bdev_notdef(),			/* 94: */
	bdev_notdef(),			/* 95: */
	bdev_notdef(),			/* 96: */
	bdev_notdef(),			/* 97: */
};

#include "hotplug.h"
#include "vscsi.h"
#include "pppx.h"
#include "fuse.h"
#include "openprom.h"

#ifdef CONF_HAVE_GPIO
#include "gpio.h"
#else
#define	NGPIO 0
#endif

#ifdef CONF_HAVE_SPKR
#include "spkr.h"
#else
#define	NSPKR 0
#endif

#include "switch.h"

struct cdevsw cdevsw[] = {
	cdev_cn_init(1,cn),			/*  0: virtual console */
	cdev_ctty_init(1,ctty),			/*  1: controlling terminal */
	cdev_mm_init(1,mm),			/*  2: /dev/{null,mem,kmem,...} */
	cdev_notdef(),				/*  3 was /dev/drum */
	cdev_tty_init(NPTY,pts),		/*  4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),		/*  5: pseudo-tty master */
	cdev_log_init(1,log),			/*  6: /dev/klog */
	cdev_fd_init(1,filedesc),		/*  7: file descriptor pseudo-device */
	cdev_ksyms_init(NKSYMS,ksyms),		/*  8: Kernel symbols device */
	cdev_lpt_init(NLPT,lpt),		/*  9: parallel printer */
	cdev_notdef(),				/* 10: */
	cdev_notdef(),				/* 11: */
	cdev_tty_init(NCOM,com),		/* 12: serial port */
	cdev_gpio_init(NGPIO,gpio),     	/* 13: GPIO interface */
	cdev_notdef(),				/* 14 was alternate serial port */
	cdev_notdef(),				/* 15: */
	cdev_disk_init(NWD,wd),			/* 16: ST506/ESDI/IDE disk */
	cdev_notdef(),				/* 17: */
	cdev_disk_init(NRD,rd),			/* 18: ram disk driver */
	cdev_disk_init(NVND,vnd),		/* 19: vnode disk driver */
	cdev_notdef(),				/* 20: */
	cdev_notdef(),				/* 21: was: concatenated disk driver */
	cdev_bpf_init(NBPFILTER,bpf),		/* 22: Berkeley packet filter */
	cdev_notdef(),				/* 23: */
	cdev_disk_init(NSD,sd),			/* 24: SCSI disk */
	cdev_tape_init(NST,st),			/* 25: SCSI tape */
	cdev_disk_init(NCD,cd),			/* 26: SCSI CD-ROM */
	cdev_ch_init(NCH,ch),	 		/* 27: SCSI autochanger */
	cdev_uk_init(NUK,uk),	 		/* 28: SCSI unknown */
	cdev_notdef(),				/* 29: */
	cdev_notdef(),				/* 30: */
	cdev_notdef(),				/* 31: */
	cdev_notdef(),				/* 32: */
	cdev_tun_init(NTUN,tun),		/* 33: network tunnel */
	cdev_apm_init(NAPM,apm),		/* 34: APM interface */
	cdev_notdef(),				/* 35: was LKM */
	cdev_audio_init(NAUDIO,audio),		/* 36: generic audio I/O */
	cdev_hotplug_init(NHOTPLUG,hotplug),	/* 37: devices hot plugging*/
	cdev_video_init(NVIDEO,video),		/* 38: generic video I/O */
	cdev_notdef(),				/* 39: reserved */
	cdev_random_init(1,random),		/* 40: random generator */
	cdev_notdef(),				/* 41: reserved */
	cdev_notdef(),				/* 42: reserved */
	cdev_notdef(),				/* 43: reserved */
	cdev_notdef(),				/* 44: reserved */
	cdev_notdef(),				/* 45: reserved */
	cdev_pf_init(NPF,pf),           	/* 46: packet filter */
	cdev_notdef(),				/* 47: was: /dev/crypto */
	cdev_notdef(),				/* 48: reserved */
	cdev_notdef(),				/* 49: reserved */
	cdev_notdef(),				/* 50: reserved */
	cdev_notdef(),				/* 51: reserved */
 	cdev_bio_init(NBIO,bio),		/* 52: ioctl tunnel */
	cdev_notdef(),				/* 53: reserved */
	cdev_notdef(),				/* 54 was FOOTBRIDGE console */
	cdev_notdef(),				/* 55: Reserved for bypass device */	
	cdev_notdef(),				/* 56: reserved */
	cdev_midi_init(NMIDI,midi),		/* 57: MIDI I/O */
	cdev_notdef(),				/* 58 was: sequencer I/O */
	cdev_notdef(),				/* 59: reserved */
	cdev_wsdisplay_init(NWSDISPLAY,wsdisplay), /* 60: frame buffers, etc.*/
	cdev_mouse_init(NWSKBD,wskbd),		/* 61: keyboards */
	cdev_mouse_init(NWSMOUSE,wsmouse),	/* 62: mice */
	cdev_mouse_init(NWSMUX,wsmux),		/* 63: ws multiplexor */
	cdev_usb_init(NUSB,usb),		/* 64: USB controller */
	cdev_usbdev_init(NUHID,uhid),		/* 65: USB generic HID */
	cdev_ulpt_init(NULPT,ulpt),		/* 66: USB printer */
	cdev_notdef(),				/* 67: was urio */
	cdev_tty_init(NUCOM,ucom),		/* 68: USB tty */
	cdev_notdef(),				/* 69: was USB scanners */
	cdev_usbdev_init(NUGEN,ugen),		/* 70: USB generic driver */
	cdev_notdef(),    			/* 71 was: RAIDframe disk driver */
	cdev_notdef(),				/* 72: reserved */
	cdev_notdef(),				/* 73: reserved */
	cdev_notdef(),				/* 74: reserved */
	cdev_notdef(),				/* 75: reserved */
	cdev_notdef(),				/* 76: reserved */
	cdev_fuse_init(NFUSE,fuse),		/* 77: fuse */
	cdev_notdef(),                          /* 78: removed device */
	cdev_notdef(),                          /* 79: removed device */
	cdev_notdef(),                          /* 80: removed device */
	cdev_notdef(),                          /* 81: removed device */
	cdev_openprom_init(NOPENPROM,openprom),	/* 82: /dev/openprom */
	cdev_notdef(),                          /* 83: removed device */
	cdev_notdef(),                          /* 84: removed device */
	cdev_notdef(),                          /* 85: removed device */
	cdev_notdef(),                          /* 86: removed device */
	cdev_notdef(),                          /* 87: removed device */
#ifdef USER_PCICONF
	cdev_pci_init(NPCI,pci),		/* 88: PCI user */
#else
	cdev_notdef(),
#endif
	cdev_notdef(),                          /* 89: removed device */
	cdev_notdef(),                          /* 90: removed device */
	cdev_notdef(),                          /* 91: removed device */
	cdev_notdef(),                          /* 92: removed device */
	cdev_notdef(),                          /* 93: removed device */
	cdev_notdef(),                          /* 94: removed device */
	cdev_notdef(),                          /* 95: removed device */
	cdev_notdef(),                          /* 96: removed device */
	cdev_radio_init(NRADIO,radio),		/* 97: generic radio I/O */
	cdev_ptm_init(NPTY,ptm),		/* 98: pseudo-tty ptm device */
	cdev_spkr_init(NSPKR,spkr),		/* 99: PC speaker */
	cdev_vscsi_init(NVSCSI,vscsi),		/* 100: vscsi */
	cdev_notdef(),
	cdev_disk_init(1,diskmap),		/* 102: disk mapper */
	cdev_pppx_init(NPPPX,pppx),		/* 103: pppx */
	cdev_tun_init(NTUN,tap),		/* 104: Ethernet tap */
	cdev_switch_init(NSWITCH,switch),	/* 105: switch(4) control interface */
};

int nblkdev = nitems(bdevsw);
int nchrdev = nitems(cdevsw);

int mem_no = 2; 	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(1, 0);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev_t dev)
{
	return (major(dev) == mem_no && minor(dev) < 2);
}

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev_t dev)
{
	return (major(dev) == mem_no && minor(dev) == 3);
}


int chrtoblktbl[] = {
    /*VCHR*/        /*VBLK*/
    /*  0 */        NODEV,
    /*  1 */        NODEV,
    /*  2 */        NODEV,
    /*  3 */        NODEV,
    /*  4 */        NODEV,
    /*  5 */        NODEV,
    /*  6 */        NODEV,
    /*  7 */        NODEV,
    /*  8 */        NODEV,
    /*  9 */        NODEV,
    /* 10 */        NODEV,
    /* 11 */        NODEV,
    /* 12 */        NODEV,
    /* 13 */        NODEV,
    /* 14 */        NODEV,
    /* 15 */        NODEV,
    /* 16 */        16,		/* wd */
    /* 17 */        NODEV,
    /* 18 */        18,		/* rd */
    /* 19 */        19,		/* vnd */
    /* 20 */        NODEV,
    /* 21 */        NODEV,
    /* 22 */        NODEV,
    /* 23 */        NODEV,
    /* 24 */        24,		/* sd */
    /* 25 */        NODEV,
    /* 26 */        26,		/* cd */
};
int nchrtoblktbl = nitems(chrtoblktbl);

dev_t
getnulldev(void)
{
	return makedev(mem_no, 2);
}
@


1.49
log
@Remove support for tape block devices. Nobody mount(8)s tapes any longer.
ok deraadt@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.48 2016/09/02 17:06:12 goda Exp $	*/
a248 6

/* Character devices */
#define ptstty          ptytty
#define ptsioctl        ptyioctl
#define ptctty          ptytty
#define ptcioctl        ptyioctl
@


1.48
log
@Add switch(4) cdev entry

ok deraadt@@ yasuoka@@ reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.47 2016/07/31 09:18:01 jsg Exp $	*/
d176 1
a176 1
	bdev_tape_init(NST,st),		/* 25: SCSI tape */
d451 1
a451 1
    /* 25 */        25,		/* st */
@


1.47
log
@Use ansi style function declarations.  No binary change.
From Robert Tate.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.46 2016/05/23 00:05:34 deraadt Exp $	*/
d274 2
d386 1
@


1.46
log
@Change openprom into a pseudo-device, because not all arm platforms
will have it.  This is a bit of a hack.  Maybe it should attach off
mainbus as a proper fake device, but that would have more tendrils..
checked by jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.45 2016/05/21 21:24:36 kettenis Exp $	*/
d406 1
a406 2
iskmemdev(dev)
	dev_t dev;
d415 1
a415 2
iszerodev(dev)
	dev_t dev;
d454 1
a454 1
getnulldev()
@


1.45
log
@Implement openprom(4) for armv7.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.44 2016/04/25 20:09:14 tedu Exp $	*/
d260 1
d357 1
a357 1
	cdev_openprom_init(1,openprom),         /* 82: /dev/openprom */
@


1.44
log
@remove systrace
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.43 2016/02/26 09:10:04 natano Exp $	*/
d356 1
a356 1
	cdev_notdef(),                          /* 82: removed device */
@


1.43
log
@Remove stale RAIDframe entries from chrtoblktbl.

While there truncate the tables to the minimum required size; chrtoblk()
and blktochr() are designed to handle a table shorter than cdevsw.

"Looks good to me" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.42 2015/10/23 15:10:52 claudio Exp $	*/
a255 2
#include "systrace.h"

d324 1
a324 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50: system call tracing */
@


1.42
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.41 2014/12/11 19:44:17 tedu Exp $	*/
a452 45
    /* 27 */        NODEV,
    /* 28 */        NODEV,
    /* 29 */        NODEV,
    /* 30 */        NODEV,
    /* 31 */        NODEV,
    /* 32 */        NODEV,
    /* 33 */        NODEV,
    /* 34 */        NODEV,
    /* 35 */        NODEV,
    /* 36 */        NODEV,
    /* 37 */        NODEV,
    /* 38 */        NODEV,
    /* 39 */        NODEV,
    /* 40 */        NODEV,
    /* 41 */        NODEV,
    /* 42 */        NODEV,
    /* 43 */        NODEV,
    /* 44 */        NODEV,
    /* 45 */        NODEV,
    /* 46 */        NODEV,
    /* 47 */        NODEV,
    /* 48 */        NODEV,
    /* 49 */        NODEV,
    /* 50 */        NODEV,
    /* 51 */        NODEV,
    /* 52 */        NODEV,
    /* 53 */        NODEV,
    /* 54 */        NODEV,
    /* 55 */        NODEV,
    /* 56 */	    NODEV,
    /* 57 */	    NODEV,
    /* 58 */	    NODEV,
    /* 59 */        NODEV,
    /* 60 */        NODEV,
    /* 61 */        NODEV,
    /* 62 */        NODEV,
    /* 63 */        NODEV,
    /* 64 */        NODEV,
    /* 65 */        NODEV,
    /* 66 */	    NODEV,
    /* 67 */	    NODEV,
    /* 68 */	    NODEV,
    /* 69 */	    NODEV,
    /* 70 */	    NODEV,
    /* 71 */	    71,		/* raid */
@


1.41
log
@dragonflybsd has added a urio driver. conservation of urios requires
that we delete ours, which isn't actually useful.
ok mpi sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.40 2014/10/09 04:10:03 tedu Exp $	*/
d384 1
@


1.40
log
@mechanical translation of dev_lkm_dummy() to dev_notdef()
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.39 2014/10/09 03:59:58 tedu Exp $	*/
a126 1
#include "urio.h"
d343 1
a343 1
	cdev_urio_init(NURIO,urio),		/* 67: Diamond Rio 500 */
@


1.39
log
@remove LKM devices
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.38 2014/08/20 06:14:42 mikeb Exp $	*/
d152 1
a152 1
	bdev_lkm_dummy(),		/*  0: */
d154 14
a167 14
	bdev_lkm_dummy(),		/*  2: */
	bdev_lkm_dummy(),		/*  3: */
	bdev_lkm_dummy(),		/*  4: */
	bdev_lkm_dummy(),		/*  5: */
	bdev_lkm_dummy(),		/*  6: */
	bdev_lkm_dummy(),		/*  7: */
	bdev_lkm_dummy(),		/*  8: */
	bdev_lkm_dummy(),		/*  9: */
	bdev_lkm_dummy(),		/* 10: */
	bdev_lkm_dummy(),		/* 11: */
	bdev_lkm_dummy(),		/* 12: */
	bdev_lkm_dummy(),		/* 13: */
	bdev_lkm_dummy(),		/* 14: */
	bdev_lkm_dummy(),		/* 15: */
d169 1
a169 1
	bdev_lkm_dummy(),		/* 17: */
d172 1
a172 1
	bdev_lkm_dummy(),		/* 20: */
d174 2
a175 2
	bdev_lkm_dummy(),		/* 22: */
	bdev_lkm_dummy(),		/* 23: */
d179 44
a222 44
	bdev_lkm_dummy(),		/* 27: */
	bdev_lkm_dummy(),		/* 28: */
	bdev_lkm_dummy(),		/* 29: */
	bdev_lkm_dummy(),		/* 30: */
	bdev_lkm_dummy(),		/* 31: */
	bdev_lkm_dummy(),		/* 32: */
	bdev_lkm_dummy(),		/* 33: */
	bdev_lkm_dummy(),		/* 34: */
	bdev_lkm_dummy(),		/* 35: */
	bdev_lkm_dummy(),		/* 36: */
	bdev_lkm_dummy(),		/* 37: */
	bdev_lkm_dummy(),		/* 38: */
	bdev_lkm_dummy(),		/* 39: */
	bdev_lkm_dummy(),		/* 40: */
	bdev_lkm_dummy(),		/* 41: */
	bdev_lkm_dummy(),		/* 42: */
	bdev_lkm_dummy(),		/* 43: */
	bdev_lkm_dummy(),		/* 44: */
	bdev_lkm_dummy(),		/* 45: */
	bdev_lkm_dummy(),		/* 46: */
	bdev_lkm_dummy(),		/* 47: */
	bdev_lkm_dummy(),		/* 48: */
	bdev_lkm_dummy(),		/* 49: */
	bdev_lkm_dummy(),		/* 50: */
	bdev_lkm_dummy(),		/* 51: */
	bdev_lkm_dummy(),		/* 52: */
	bdev_lkm_dummy(),		/* 53: */
	bdev_lkm_dummy(),		/* 54: */
	bdev_lkm_dummy(),		/* 55: */
	bdev_lkm_dummy(),		/* 56: */
	bdev_lkm_dummy(),		/* 57: */
	bdev_lkm_dummy(),		/* 58: */
	bdev_lkm_dummy(),		/* 59: */
	bdev_lkm_dummy(),		/* 60: */
	bdev_lkm_dummy(),		/* 61: */
	bdev_lkm_dummy(),		/* 62: */
	bdev_lkm_dummy(),		/* 63: */
	bdev_lkm_dummy(),		/* 64: */
	bdev_lkm_dummy(),		/* 65: */
	bdev_lkm_dummy(),		/* 66: */
	bdev_lkm_dummy(),		/* 67: */
	bdev_lkm_dummy(),		/* 68: */
	bdev_lkm_dummy(),		/* 69: */
	bdev_lkm_dummy(),		/* 70: */
d224 25
a248 25
	bdev_lkm_dummy(),		/* 72: */
	bdev_lkm_dummy(),		/* 73: */
	bdev_lkm_dummy(),		/* 74: */
	bdev_lkm_dummy(),		/* 75: */
	bdev_lkm_dummy(),		/* 76: */
	bdev_lkm_dummy(),		/* 77: */
	bdev_lkm_dummy(),		/* 78: */
	bdev_lkm_dummy(),		/* 79: */
	bdev_lkm_dummy(),		/* 80: */
	bdev_lkm_dummy(),		/* 81: */
	bdev_lkm_dummy(),		/* 82: */
	bdev_lkm_dummy(),		/* 83: */
	bdev_lkm_dummy(),		/* 84: */
	bdev_lkm_dummy(),		/* 85: */
	bdev_lkm_dummy(),		/* 86: */
	bdev_lkm_dummy(),		/* 87: */
	bdev_lkm_dummy(),		/* 88: */
	bdev_lkm_dummy(),		/* 89: */
	bdev_lkm_dummy(),		/* 90: */
	bdev_lkm_dummy(),		/* 91: */
	bdev_lkm_dummy(),		/* 93: */
	bdev_lkm_dummy(),		/* 94: */
	bdev_lkm_dummy(),		/* 95: */
	bdev_lkm_dummy(),		/* 96: */
	bdev_lkm_dummy(),		/* 97: */
d287 2
a288 2
	cdev_lkm_dummy(),			/* 10: */
	cdev_lkm_dummy(),			/* 11: */
d292 1
a292 1
	cdev_lkm_dummy(),			/* 15: */
d294 1
a294 1
	cdev_lkm_dummy(),			/* 17: */
d297 1
a297 1
	cdev_lkm_dummy(),			/* 20: */
d300 1
a300 1
	cdev_lkm_dummy(),			/* 23: */
d307 3
a309 3
	cdev_lkm_dummy(),			/* 30: */
	cdev_lkm_dummy(),			/* 31: */
	cdev_lkm_dummy(),			/* 32: */
d316 1
a316 1
	cdev_lkm_dummy(),			/* 39: reserved */
d318 5
a322 5
	cdev_lkm_dummy(),			/* 41: reserved */
	cdev_lkm_dummy(),			/* 42: reserved */
	cdev_lkm_dummy(),			/* 43: reserved */
	cdev_lkm_dummy(),			/* 44: reserved */
	cdev_lkm_dummy(),			/* 45: reserved */
d325 2
a326 2
	cdev_lkm_dummy(),			/* 48: reserved */
	cdev_lkm_dummy(),			/* 49: reserved */
d332 1
a332 1
	cdev_lkm_dummy(),			/* 55: Reserved for bypass device */	
d349 5
a353 5
	cdev_lkm_dummy(),			/* 72: reserved */
	cdev_lkm_dummy(),			/* 73: reserved */
	cdev_lkm_dummy(),			/* 74: reserved */
	cdev_lkm_dummy(),			/* 75: reserved */
	cdev_lkm_dummy(),			/* 76: reserved */
@


1.38
log
@unlink crypto(4) pseudo device from the architecture dependant character
device tables and kernel config files.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.37 2013/11/04 14:11:29 deraadt Exp $	*/
d312 1
a312 1
	cdev_lkm_init(NLKM,lkm),		/* 35: loadable module driver */
a424 1
/* XXXX This needs to be dynamic for LKMs. */
@


1.37
log
@remove iop(4) driver.  it is entirely unmaintained and supports something
which basically doesn't exist at all.
reminded about it by brad
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.36 2013/08/20 14:27:25 ajacoutot Exp $	*/
a57 2
#include "inet.h"

d324 1
a324 1
	cdev_crypto_init(NCRYPTO,crypto), 	/* 47: /dev/crypto */
@


1.36
log
@Remove uscanner(4). It was disabled in GENERIC more than 2.5 years ago.
No regression has been reported since libusb became the prefered
solution to work with USB scanners.

req. by mpi@@
ok ian@@ mpi@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.35 2013/06/03 17:33:58 tedu Exp $	*/
a131 5
 * Bluetooth devices
 */
#include "bthub.h"

/*
d384 1
a384 1
	cdev_bthub_init(NBTHUB,bthub),		/* 101: bthub */
@


1.35
log
@more fuse in more places. credit: miod
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.34 2013/03/15 09:10:52 ratchov Exp $	*/
a129 1
#include "uscanner.h"
d353 1
a353 1
	cdev_usbdev_init(NUSCANNER,uscanner),	/* 69: USB scanner */
@


1.34
log
@Delete the sequencer(4) driver, since its not used any longer. Diff
mostly from armani.
ok miod, mpi, jsg and help from sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.33 2012/08/23 06:12:49 deraadt Exp $	*/
d270 1
d362 1
a362 1
	cdev_notdef(),                          /* 77: removed device */
@


1.33
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32 2012/04/06 15:10:39 jsing Exp $	*/
a119 1
#include "sequencer.h"
d342 1
a342 1
	cdev_midi_init(NSEQUENCER,sequencer),	/* 58: sequencer I/O */
@


1.32
log
@tedu the raidframe.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2011/09/16 21:01:45 miod Exp $	*/
a265 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a335 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 51: nnpfs communication device */
#else
a336 1
#endif
@


1.31
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@a90 1
#include "raid.h"			/* RAIDframe */
d232 1
a232 1
	bdev_disk_init(NRAID,raid),	/* 71: RAIDframe disk driver */
d364 1
a364 1
	cdev_disk_init(NRAID,raid),    		/* 71: RAIDframe disk driver */
@


1.30
log
@Use cdev_ulpt_init() to setup ulpt(4) instead of cdev_lpt_init, for
consistency.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.29 2011/01/14 19:04:08 jasper Exp $	*/
a89 1
#include "ccd.h"			/* concatenated disk driver */
d183 1
a183 1
 	bdev_disk_init(NCCD,ccd),	/* 21: concatenated disk driver */
d311 1
a311 1
	cdev_disk_init(NCCD,ccd),		/* 21: concatenated disk driver */
d465 1
a465 1
    /* 21 */        21,		/* ccd */
@


1.29
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2010/11/28 20:48:44 miod Exp $	*/
d361 1
a361 1
	cdev_lpt_init(NULPT,ulpt),		/* 66: USB printer */
@


1.28
log
@Remove inapplicable or no longer used cdevsw[] entries and macros.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 2010/09/23 05:02:14 claudio Exp $	*/
d405 2
a406 2
int nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
int nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d518 1
a518 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.27
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 2010/07/03 03:59:16 krw Exp $	*/
d43 1
a43 1
 * Defines the structures cdevsw and constab
a68 7
#ifdef CONF_HAVE_SSCOM
#include "sscom.h"
cdev_decl(sscom);
#else
#define NSSCOM 0
#endif

a153 5
#ifdef CONF_HAVE_FCOM
#include "fcom.h"
#else
#define NFCOM	0
#endif
d305 1
a305 1
	cdev_tty_init(NSSCOM,sscom),		/* 14: alternate serial port */
d349 1
a349 1
	cdev_tty_init(NFCOM,fcom),		/* 54: FOOTBRIDGE console */
@


1.26
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2010/06/09 15:25:32 jsing Exp $	*/
d288 1
d414 1
@


1.25
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2009/08/13 15:04:20 dlg Exp $	*/
a120 1
#include "ss.h"
d331 1
a331 1
	cdev_scanner_init(NSS,ss),		/* 29: SCSI scanner */
@


1.24
log
@Add missing bthub device entries on arches that support bluetooth.
ok miod@@, deraadt@@, todd@@.
@
text
@d413 1
@


1.23
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2009/06/03 14:45:50 jj Exp $	*/
d144 5
d412 1
@


1.22
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2009/01/25 17:30:48 miod Exp $	*/
d283 1
d406 1
@


1.21
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2008/11/27 11:40:18 drahn Exp $	*/
d276 3
a278 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d348 2
a349 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),		/* 51: xfs communication device */
@


1.20
log
@Add sscom to cdevswitch like fcom used to be.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2008/06/12 20:03:48 mglocker Exp $	*/
a106 1
bdev_decl(sw);
d300 1
a300 1
	cdev_swap_init(1,sw),			/*  3: /dev/drum (swap pseudo-device) */
@


1.19
log
@Enable /dev/video* for all USB capable archs.  MAKEDEV bits will follow
shortly.

OK todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2008/05/14 20:49:48 miod Exp $	*/
d69 7
d312 1
a312 1
	cdev_lkm_dummy(),			/* 14: */
@


1.18
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 2008/04/08 14:31:54 claudio Exp $	*/
d122 1
d329 1
a329 1
	cdev_notdef(),				/* 38: removed cpu device */
@


1.17
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2007/05/28 22:26:03 todd Exp $	*/
d441 1
a441 1
    /*  1 */        1,
d456 4
a459 4
    /* 16 */        16,
    /* 17 */        17,
    /* 18 */        18,
    /* 19 */        19,
d461 1
a461 1
    /* 21 */        21,
d464 3
a466 3
    /* 24 */        24,
    /* 25 */        25,
    /* 26 */        26,
d511 1
a511 27
    /* 71 */	    71,
    /* 72 */	    NODEV,
    /* 73 */	    NODEV,
    /* 74 */	    NODEV,
    /* 75 */	    NODEV,
    /* 76 */	    NODEV,
    /* 77 */	    NODEV,
    /* 78 */	    NODEV,
    /* 79 */	    NODEV,
    /* 80 */	    NODEV,
    /* 81 */	    NODEV,
    /* 82 */	    NODEV,
    /* 83 */	    NODEV,
    /* 84 */	    NODEV,
    /* 85 */	    NODEV,
    /* 86 */	    NODEV,
    /* 87 */	    NODEV,
    /* 88 */	    NODEV,
    /* 89 */	    NODEV,
    /* 90 */	    NODEV,
    /* 91 */	    NODEV,
    /* 92 */	    92,
    /* 93 */	    NODEV,
    /* 94 */	    NODEV,
    /* 95 */	    NODEV,
    /* 96 */	    NODEV,
    /* 97 */	    NODEV,
a513 1

@


1.16
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2007/05/27 01:50:36 todd Exp $	*/
d312 1
a312 1
	cdev_bpftun_init(NBPFILTER,bpf),	/* 22: Berkeley packet filter */
d323 1
a323 1
	cdev_bpftun_init(NTUN,tun),		/* 33: network tunnel */
@


1.15
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 2007/05/26 19:54:24 todd Exp $	*/
d116 1
d346 1
a346 1
	cdev_notdef(),				/* 52: reserved */
@


1.14
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 2006/07/28 17:35:55 kettenis Exp $	*/
a115 1
#include "bio.h"
a392 3
#ifdef __zaurus__
	cdev_disk_init(NFLASH,flash),		/* 96: flash ROM devices */
#else
a393 1
#endif
a534 3
#ifdef __zaurus__
    /* 96 */	    96,
#else
a535 1
#endif
@


1.13
log
@Make option USER_PCICONF work.

ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 2006/05/29 17:01:42 drahn Exp $	*/
d116 1
d394 3
d398 1
d540 3
d544 1
@


1.12
log
@Add support for i80321 based systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 2005/05/13 22:54:00 miod Exp $	*/
d102 1
a102 2
#ifdef CONF_HAVE_PCI
#include "iop.h"
d104 1
a104 5
#else
#define NIOP	0
#define NMLX	0
#define NMLY	0
#define NPCI	0
d106 1
a106 1
#define	NAGP	0
d381 5
a385 1
	cdev_notdef(),                          /* 88: removed device */
@


1.11
log
@/dev/speaker node on cats.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 2005/01/19 02:02:33 uwe Exp $	*/
d281 6
d307 1
a307 1
	cdev_lkm_dummy(),			/* 13: */
@


1.10
log
@APM emulation framework and zaurus scoop driver.  Not enabled yet.
ok drahn@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 2005/01/18 16:27:26 drahn Exp $	*/
d281 6
d391 1
@


1.9
log
@Add hotplug support.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 2005/01/04 14:13:06 drahn Exp $	*/
d79 9
d316 1
a316 1
	cdev_lkm_dummy(),			/* 34: */
@


1.8
log
@cleaner pci/fcom arm cats vs zaurus config.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 2005/01/03 21:25:44 miod Exp $	*/
d270 2
d310 1
a310 1
	cdev_notdef(),				/* 37: removed cpu device */
@


1.7
log
@Bring life to /dev/*random; Dale, you owe me a beer.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2004/12/30 23:41:58 drahn Exp $	*/
d145 1
d147 3
@


1.6
log
@Properly include fcom.h defines.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2004/09/28 15:18:53 drahn Exp $	*/
d307 1
a307 1
	cdev_lkm_dummy(),			/* 40: reserved */
@


1.5
log
@add the missing ksym entry into the cdev table. pointed out by kevlo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2004/04/07 03:20:47 drahn Exp $	*/
d145 1
@


1.4
log
@align /dev/crypto with it's device node. would allow crypto cards to be used.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2004/02/11 22:03:17 miod Exp $	*/
d76 1
d274 1
a274 1
	cdev_lkm_dummy(),			/*  8: */
@


1.3
log
@Give systrace and xfs a chance to work.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2004/02/10 01:31:21 millert Exp $	*/
d58 2
d312 1
a312 1
	cdev_lkm_dummy(),			/* 47: reserved */
@


1.3.2.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a89 17
/*
 * ISDN devices
 */
#ifdef CONF_HAVE_ISDN
#include "isdn.h"
#include "isdnctl.h"
#include "isdntrc.h"
#include "isdnbchan.h"
#include "isdntel.h"
#else
#define	NISDN	0
#define	NISDNCTL	0
#define	NISDNTRC	0
#define	NISDNBCHAN	0
#define	NISDNTEL	0
#endif

a250 5
cdev_decl(isdn);
cdev_decl(isdnctl);
cdev_decl(isdntrc);
cdev_decl(isdnbchan);
cdev_decl(isdntel);
d256 6
d309 1
a309 1
	cdev_pf_init(NPF,pf),           	/* 39: packet filter */
d313 4
a316 1
	cdev_lkm_dummy(),			/* 50: reserved */
d318 1
d365 1
@


1.3.2.2
log
@Merge with the trunk
@
text
@a57 2
#include "inet.h"

d90 17
d268 5
a277 6
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
#endif
#include "systrace.h"

d325 2
a326 2
	cdev_pf_init(NPF,pf),           	/* 46: packet filter */
	cdev_crypto_init(NCRYPTO,crypto), 	/* 47: /dev/crypto */
d329 1
a329 4
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50: system call tracing */
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),		/* 51: xfs communication device */
#else
a330 1
#endif
a376 1
	cdev_ptm_init(NPTY,ptm),		/* 98: pseudo-tty ptm device */
@


1.2
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2004/02/01 05:09:48 drahn Exp $	*/
a89 17
/*
 * ISDN devices
 */
#ifdef CONF_HAVE_ISDN
#include "isdn.h"
#include "isdnctl.h"
#include "isdntrc.h"
#include "isdnbchan.h"
#include "isdntel.h"
#else
#define	NISDN	0
#define	NISDNCTL	0
#define	NISDNTRC	0
#define	NISDNBCHAN	0
#define	NISDNTEL	0
#endif

a250 5
cdev_decl(isdn);
cdev_decl(isdnctl);
cdev_decl(isdntrc);
cdev_decl(isdnbchan);
cdev_decl(isdntel);
d256 6
d309 1
a309 1
	cdev_pf_init(NPF,pf),           	/* 39: packet filter */
d313 4
a316 1
	cdev_lkm_dummy(),			/* 50: reserved */
d318 1
@


1.1
log
@Arm port, NetBSD codebase stripped down, 32bit only support.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2004/01/29 16:17:16 drahn Exp $	*/
d377 1
@

