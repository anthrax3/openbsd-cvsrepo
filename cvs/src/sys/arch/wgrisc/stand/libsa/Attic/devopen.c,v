head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	UBC_SYNC_B:1.4
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	WGRISC_1_0:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2001.02.07.07.47.05;	author art;	state dead;
branches;
next	1.3;

1.3
date	97.07.21.06.58.14;	author pefo;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.05.11.16.17.55;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	97.02.06.16.02.44;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.02.06.16.02.44;	author pefo;	state Exp;
branches;
next	;

1.3.12.1
date	2001.05.14.21.40.02;	author niklas;	state dead;
branches;
next	;


desc
@@


1.4
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: devopen.c,v 1.3 1997/07/21 06:58:14 pefo Exp $ */

/*
 * Copyright (c) 1997 Per Fogelstrom
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Per Fogelstrom.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <lib/libsa/stand.h>

static int
a2i(ch)
    char *ch;
{
	unsigned int v;

	v = *ch - '0';
	if(v > 9)
		v = 0;
	return(v);
}

int
devopen(f, fname, file)
	struct open_file *f;
	const char *fname;
	char **file;	/* out */
{
	const char *cp;
	char *ncp;
	struct devsw *dp;
	unsigned int c;
	int ctlr = 0, unit = 0, part = 0;
	char namebuf[20];
	int rc, n;

	cp = fname;
	ncp = namebuf;

	while ((c = *cp++) != '\0' && c != '(') {
		*ncp++ = c;
	}
	*ncp = '\0';

	if(c == '(') {
		/* get controller number */
		ctlr = a2i(cp);
		cp += 2;
		/* get SCSI device number */
		unit = a2i(cp);
		cp += 2;
		/* get partition number */
		part = a2i(cp);
		cp += 2;
		if (cp[-1] != ')')
			return (ENXIO);
	}

	dp = devsw;
	n = ndevs;
	while(n--) {
		if (strcmp (namebuf, dp->dv_name) == 0) {
			rc = (dp->dv_open)(f, ctlr, unit, part);
			if (!rc) {
				f->f_dev = dp;
				if (file && *cp != '\0')
					*file = (char *)cp;
			}
			return (rc);
		}
		dp++;
	}
	return ENXIO;
}
@


1.3
log
@New boot code that fits into the boot record with embedded label.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@


1.3.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.3 1997/07/21 06:58:14 pefo Exp $ */
@


1.2
log
@Boot block for the wgrisc!
@
text
@d1 1
a1 1
/*	$NetBSD: devopen.c,v 1.5 1995/01/18 06:53:54 mellon Exp $	*/
d3 3
a5 7
/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
d16 4
a19 5
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d21 5
a25 5
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
a32 1
 *	@@(#)devopen.c	8.1 (Berkeley) 6/10/93
d37 12
a48 4
/*
 * Decode the string 'fname', open the device and return the remaining
 * file name if any.
 */
d58 1
a58 1
	int c, i;
d61 1
a61 1
	int rc;
d66 4
a69 10
		/* expect a string like 'sd(0,0,0)vmunix' */
		while ((c = *cp) != '\0') {
			if (c == '(') {
				cp++;
				break;
			}
			if (ncp < namebuf + sizeof(namebuf) - 1)
				*ncp++ = c;
			cp++;
		}
d71 1
d73 11
a83 4
		if ((c = *cp) >= '0' && c <= '9') {
			ctlr = c - '0';
			c = *++cp;
		}
d85 9
a93 13
		if (c == ',') {
			/* get SCSI device number */
			if ((c = *++cp) >= '0' && c <= '9') {
				unit = c - '0';
				c = *++cp;
			}

			if (c == ',') {
				/* get partition number */
				if ((c = *++cp) >= '0' && c <= '9') {
					part = c - '0';
					c = *++cp;
				}
d95 1
d97 1
a97 8
		if (c != ')')
			return (ENXIO);
		cp++;
	*ncp = '\0';

	if (strcmp (namebuf, "sd")) {
		printf ("Unknown device: %s\n", namebuf);
		return ENXIO;
d99 1
a99 11
	dp = devsw;
	i = 0;

	rc = (dp->dv_open)(f, ctlr, unit, part);
	if (rc)
		return (rc);

	f->f_dev = dp;
	if (file && *cp != '\0')
		*file = (char *)cp;
	return (0);
@


1.1
log
@Initial revision
@
text
@d47 1
d53 4
a56 4
	register char *cp;
	register char *ncp;
	register struct devsw *dp;
	register int c, i;
d64 1
a64 1
		/* expect a string like 'rz(0,0,0)vmunix' */
d101 1
a101 2
#ifdef SMALL
	if (strcmp (namebuf, "rz")) {
a106 10
#else
	for (dp = devsw, i = 0; i < ndevs; dp++, i++)
		if (dp->dv_name && strcmp(namebuf, dp->dv_name) == 0)
			goto fnd;
	printf("Unknown device '%s'\nKnown devices are:", namebuf);
	for (dp = devsw, i = 0; i < ndevs; dp++, i++)
		if (dp->dv_name)
			printf(" %s", dp->dv_name);
	printf("\n");
	return (ENXIO);
a107 2
fnd:
#endif
d114 1
a114 1
		*file = cp;
@


1.1.1.1
log
@Import of WGRISC port. (Willowglen R3081 board)
@
text
@@
