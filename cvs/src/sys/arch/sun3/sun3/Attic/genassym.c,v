head	1.11;
access;
symbols
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	UBC_SYNC_A:1.11
	UBC_SYNC_B:1.11
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.16
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.14
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.12
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.10
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.8
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2001.01.04.22.41.22;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2000.11.09.01.27.38;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.14.14.27.04;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	97.02.14.21.53.18;	author kstailey;	state Exp;
branches
	1.8.14.1;
next	1.7;

1.7
date	97.02.14.21.13.49;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.01.16.04.04.21;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.01.07.23.36.27;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.12.31.06.13.42;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.11.23.07.55.07;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.16.04.38;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.01;	author deraadt;	state Exp;
branches;
next	;

1.8.14.1
date	2001.05.14.21.37.34;	author niklas;	state dead;
branches;
next	;


desc
@@


1.11
log
@Convert the old genassym.c to .cf style. Remove unneeded definitions,
change some names to be not different from other m68k arches.
@
text
@/*	$OpenBSD: genassym.c,v 1.10 2000/11/09 01:27:38 miod Exp $	*/
/*	$NetBSD: genassym.c,v 1.32 1996/10/23 16:39:27 gwr Exp $	*/

/*
 * Copyright (c) 1994, 1995 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
 * Copyright (c) 1982, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)genassym.c	8.3 (Berkeley) 1/4/94
 *	from: genassym.c,v 1.9 1994/05/23 06:14:19 mycroft
 */

#include <sys/param.h>
#include <sys/types.h>
#include <sys/cdefs.h>
#include <sys/errno.h>
#include <sys/proc.h>
#include <sys/syscall.h>

#include <vm/vm.h>

#include <machine/control.h>
#include <machine/cpu.h>
#include <machine/dvma.h>
#include <machine/pcb.h>
#include <machine/psl.h>
#include <machine/pte.h>
#include <machine/machdep.h>
#include <machine/mon.h>
#include <machine/vmparam.h>

#include "intersil7170.h"
#include "interreg.h"
#include "buserr.h"

#if 1	/* XXX - Temporary hack... */
/*
 * Make this work correctly on a SPARC!
 * Should be able to fix this by adding:
 * __attribute__((packed)) where needed.
 */
struct mytrapframe {
	int 	tf_regs[16];
	short	tf_pad;
	short	tf_stackadj;
	u_short	tf_sr;
	u_short	tf_pc[2];	/* XXX was:  u_int tf_pc; */
	u_short	tf_format:4,
	        tf_vector:12;
};
#define trapframe mytrapframe
#endif	/* XXX */

#ifdef	__STDC__
#define	def1(name) def(#name, name)
#else
#define	def1(name) def("name", name)
#endif

extern void printf __P((char *fmt, ...));
extern void exit __P((int));

void
def(what, val)
	char *what;
	int val;
{
	printf("#define\t%s\t", what);
	/* This just makes the output easier to verify. */
	printf(((val > 999) ? "0x%x\n" : "%d\n"), val);
}

int
main()
{
	struct pcb *pcb = (struct pcb *) 0;
	struct proc *p = (struct proc *) 0;
	struct vmspace *vms = (struct vmspace *) 0;
	struct intersil7170 *intersil_addr = (struct intersil7170 *) 0;
	struct trapframe *tf = (struct trapframe *) 0;
	struct fpframe *fpf = (struct fpframe *) 0;

	/* intersil clock internals */
	def("IREG_CLOCK_ENAB_5", IREG_CLOCK_ENAB_5);
	def("INTERSIL_INTR_OFFSET", &intersil_addr->clk_intr_reg);
	def1(INTERSIL_INTER_CSECONDS);

	/* bus error stuff */
	def1(BUSERR_REG);
	def1(BUSERR_MMU);

	/* 68k isms */
	def1(PSL_LOWIPL);
	def1(PSL_HIGHIPL);
	def1(PSL_USER);
	def1(PSL_S);
	def1(PSL_IPL7);
	def1(FC_CONTROL);
	def1(FC_SUPERD);
	def1(FC_USERD);
	def1(IC_CLEAR);

	/* sun3 control space isms */
	def1(CONTEXT_0);
	def1(CONTEXT_REG);
	def1(CONTEXT_NUM);
	def1(SYSTEM_ENAB);
	def1(SYSTEM_ENAB_FPP);
	def1(SEGMAP_BASE);
	def1(NBPG);
	def1(NBSG);

	/* sun3 memory map */
	def1(DVMA_SPACE_START);
	def1(MONSTART);
	def1(PROM_BASE);
	def1(USRSTACK);

	/* kernel-isms */
	def1(KERNBASE);
	def1(USPACE);

	/* system calls */
	def1(SYS_sigreturn);

	/* errno-isms */
	def1(EFAULT);
	def1(ENAMETOOLONG);

	/* trap types: locore.s includes trap.h */

	/*
	 * unix structure-isms
	 */

	/* proc fields and values */
	def("P_FORW", &p->p_forw);
	def("P_BACK", &p->p_back);
	def("P_VMSPACE", &p->p_vmspace);
	def("P_ADDR", &p->p_addr);
	def("P_PRIORITY", &p->p_priority);
	def("P_STAT", &p->p_stat);
	def("P_WCHAN", &p->p_wchan);
	def("P_FLAG", &p->p_flag);
	def("P_MDFLAG", &p->p_md.md_flags);
	def("P_MDREGS", &p->p_md.md_regs);
	def1(SRUN);

	/* HP-UX trace bit */
	def("MDP_TRCB", ffs(MDP_HPUXTRACE) - 1);

	/* VM structure fields */
	def("VM_PMAP", &vms->vm_map.pmap);

	/* pcb offsets */
	def("PCB_FLAGS", &pcb->pcb_flags);
	def("PCB_PS", &pcb->pcb_ps);
	def("PCB_USP", &pcb->pcb_usp);
	def("PCB_REGS", pcb->pcb_regs);
	def("PCB_ONFAULT", &pcb->pcb_onfault);
	def("PCB_FPCTX", &pcb->pcb_fpregs);
	def("SIZEOF_PCB", sizeof(*pcb));

	/* exception frame offset/sizes */
	def("FR_SP", &tf->tf_regs[15]);
	def("FR_ADJ", &tf->tf_stackadj);
	def("FR_HW", &tf->tf_sr);
	def("FR_SIZE", sizeof(*tf));

	/* FP frame offsets */
	def("FPF_REGS", &fpf->fpf_regs[0]);
	def("FPF_FPCR", &fpf->fpf_fpcr);

	exit(0);
}
@


1.10
log
@Do not use vm_pmap anymore. Requested by art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.9 2000/07/14 14:27:04 miod Exp $	*/
@


1.9
log
@Remove unneeded definitions
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.8 1997/02/14 21:53:18 kstailey Exp $	*/
d182 1
a182 1
	def("VM_PMAP", &vms->vm_pmap);
@


1.8
log
@add SPL#, back out Makefile.sun3 change
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.7 1997/02/14 21:13:49 kstailey Exp $	*/
a201 8

	/* SPL values */
	def("SPL1", PSL_S | PSL_IPL1);
	def("SPL2", PSL_S | PSL_IPL2);
	def("SPL3", PSL_S | PSL_IPL3);
	def("SPL4", PSL_S | PSL_IPL4);
	def("SPL5", PSL_S | PSL_IPL5);
	def("SPL6", PSL_S | PSL_IPL6);
@


1.8.14.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.8 1997/02/14 21:53:18 kstailey Exp $	*/
@


1.7
log
@add PSL_IPL7
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.6 1997/01/16 04:04:21 kstailey Exp $	*/
d202 8
@


1.6
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d126 1
@


1.5
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d51 1
d53 1
d57 1
a57 1
#include <machine/control.h>
a59 1
#include <machine/dvma.h>
d89 3
d102 1
d159 1
a159 1
	
@


1.4
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.33 1996/12/17 21:11:25 gwr Exp $	*/
d59 2
a61 1
#include "machdep.h"
a86 3
extern void printf __P((char *fmt, ...));
extern void exit __P((int));

d102 1
d106 5
d153 1
a153 1

@


1.3
log
@sync with NetBSD
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.32 1996/10/23 16:39:27 gwr Exp $	*/
a58 2
#include "intersil7170.h"
#include "interreg.h"
d60 1
d86 3
a103 1
	struct intersil7170 *intersil_addr = (struct intersil7170 *) 0;
a106 5
	/* intersil clock internals */
	def("IREG_CLOCK_ENAB_5", IREG_CLOCK_ENAB_5);
	def("INTERSIL_INTR_OFFSET", &intersil_addr->clk_intr_reg);
	def1(INTERSIL_INTER_CSECONDS);

d149 1
a149 1
	
@


1.2
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.31 1996/02/16 23:36:52 gwr Exp $	*/
d63 18
d103 1
a103 1
	struct frame *fp = (struct frame *) 0;
d184 1
a184 1
	def("SIZEOF_PCB", sizeof(struct pcb));
d187 4
a190 4
	def("FR_SP", &fp->f_regs[15]);
	def("FR_HW", &fp->f_sr);
	def("FR_ADJ", &fp->f_stackadj);
	def("FR_SIZE", sizeof(struct trapframe));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.29 1995/09/26 04:02:19 gwr Exp $	*/
a40 2
#define _KERNEL

d172 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
