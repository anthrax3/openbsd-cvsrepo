head	1.10;
access;
symbols
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.2
	UBC_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2002.12.31.16.35.41;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.47;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.06.02.49.22;	author art;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.09.11.20.05.24;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.02.21.49.36;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	97.01.16.04.04.13;	author kstailey;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	97.01.07.23.36.23;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.12.31.06.13.30;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.08.26.02;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.00;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.05.14.21.37.33;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2001.10.31.03.08.00;	author nate;	state Exp;
branches;
next	1.5.14.3;

1.5.14.3
date	2001.11.13.21.04.18;	author niklas;	state Exp;
branches;
next	1.5.14.4;

1.5.14.4
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.5.14.5;

1.5.14.5
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.8.2.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2003.05.19.21.49.46;	author tedu;	state dead;
branches;
next	;


desc
@@


1.10
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: cache.c,v 1.9 2002/03/14 01:26:47 millert Exp $	*/
/*	$NetBSD: cache.c,v 1.5 1996/11/20 18:57:24 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * cache flush operations specific to the Sun3 custom MMU
 * all are done using writes to control space
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/malloc.h>
#include <sys/user.h>
#include <sys/queue.h>

#include <uvm/uvm_extern.h>

#include <machine/cpu.h>
#include <machine/pte.h>
#include <machine/control.h>
#include <machine/machdep.h>

#define	CACHE_LINE	16	/* bytes */
#define	VAC_FLUSH_INCR	512	/* bytes */
#define VADDR_MASK	0xfFFffFF	/* 28 bits */

static void cache_clear_tags(void);

void
cache_flush_page(pgva)
	vm_offset_t pgva;
{
	register char *va, *endva;
	register int old_dfc, ctl_dfc;
	register int data;

	pgva &= (VADDR_MASK & ~PGOFSET);
	pgva |= VAC_FLUSH_BASE;

	/* Set up for writes to control space. */
	__asm __volatile ("movc dfc, %0" : "=d" (old_dfc));
	ctl_dfc = FC_CONTROL;
	__asm __volatile ("movc %0, dfc" : : "d" (ctl_dfc));

	/* Write to control space for each cache line. */
	va = (char *) pgva;
	endva = (char *) (pgva + NBPG);
	data = VAC_FLUSH_PAGE;

	do {
		__asm __volatile ("movsl %0, %1@@" : : "d" (data), "a" (va));
		va += VAC_FLUSH_INCR;
	} while (va < endva);

	/* Restore destination function code. */
	__asm __volatile ("movc %0, dfc" : : "d" (old_dfc));
}

void
cache_flush_segment(sgva)
	vm_offset_t sgva;
{
	register char *va, *endva;
	register int old_dfc, ctl_dfc;
	register int data;

	sgva &= (VADDR_MASK & ~SEGOFSET);
	sgva |= VAC_FLUSH_BASE;

	/* Set up for writes to control space. */
	__asm __volatile ("movc dfc, %0" : "=d" (old_dfc));
	ctl_dfc = FC_CONTROL;
	__asm __volatile ("movc %0, dfc" : : "d" (ctl_dfc));

	/* Write to control space for each cache line. */
	va = (char *) sgva;
	endva = (char *) (sgva + cache_size);
	data = VAC_FLUSH_SEGMENT;

	do {
		__asm __volatile ("movsl %0, %1@@" : : "d" (data), "a" (va));
		va += VAC_FLUSH_INCR;
	} while (va < endva);

	/* Restore destination function code. */
	__asm __volatile ("movc %0, dfc" : : "d" (old_dfc));
}

void
cache_flush_context()
{
	register char *va, *endva;
	register int old_dfc, ctl_dfc;
	register int data;

	/* Set up for writes to control space. */
	__asm __volatile ("movc dfc, %0" : "=d" (old_dfc));
	ctl_dfc = FC_CONTROL;
	__asm __volatile ("movc %0, dfc" : : "d" (ctl_dfc));

	/* Write to control space for each cache line. */
	va = (char *) VAC_FLUSH_BASE;
	endva = (char *) (VAC_FLUSH_BASE + cache_size);
	data = VAC_FLUSH_CONTEXT;

	do {
		__asm __volatile ("movsl %0, %1@@" : : "d" (data), "a" (va));
		va += VAC_FLUSH_INCR;
	} while (va < endva);

	/* Restore destination function code. */
	__asm __volatile ("movc %0, dfc" : : "d" (old_dfc));
}

static void
cache_clear_tags()
{
	register char *va, *endva;
	register int old_dfc, ctl_dfc;
	register int data;

	/* Set up for writes to control space. */
	__asm __volatile ("movc dfc, %0" : "=d" (old_dfc));
	ctl_dfc = FC_CONTROL;
	__asm __volatile ("movc %0, dfc" : : "d" (ctl_dfc));

	/* Write to control space for each cache line. */
	va = (char *) VAC_CACHE_TAGS;
	endva = (char *) (VAC_CACHE_TAGS + cache_size);
	data = 0;	/* invalid tags */

	do {
		__asm __volatile ("movsl %0, %1@@" : : "d" (data), "a" (va));
		va += CACHE_LINE;
	} while (va < endva);

	/* Restore destination function code. */
	__asm __volatile ("movc %0, dfc" : : "d" (old_dfc));
}

void
cache_enable()
{
	int enab_reg;

	if (cache_size == 0)
		return;

	/* Have to invalidate all tags before enabling the cache. */
	cache_clear_tags();

	/* OK, just set the "enable" bit. */
	enab_reg = get_control_byte((char *) SYSTEM_ENAB);
	enab_reg |= SYSTEM_ENAB_CACHE;
	set_control_byte((char *) SYSTEM_ENAB, enab_reg);

	/* Brag... */
	printf("cache enabled\n");
}
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.8 2001/11/06 02:49:22 art Exp $	*/
@


1.8
log
@remove the last uses of vm/vm_page.h
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.7 2001/09/11 20:05:24 miod Exp $	*/
d63 1
a63 1
static void cache_clear_tags __P((void));
@


1.8.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.8 2001/11/06 02:49:22 art Exp $	*/
d63 1
a63 1
static void cache_clear_tags(void);
@


1.8.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.8.2.1 2002/06/11 03:39:01 art Exp $	*/
@


1.7
log
@Don't include <vm/vm_kern.h> if you don't need foo_map.
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.6 2000/05/02 21:49:36 miod Exp $	*/
d52 1
a52 2
#include <vm/vm.h>
#include <vm/vm_page.h>
@


1.6
log
@<machine/vmparam.h> not welcomed here
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.5 1997/01/16 04:04:13 kstailey Exp $	*/
a52 1
#include <vm/vm_kern.h>
@


1.5
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a59 1
#include <machine/vmparam.h>
@


1.5.14.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.6 2000/05/02 21:49:36 miod Exp $	*/
d60 1
@


1.5.14.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.5.14.1 2001/05/14 21:37:33 niklas Exp $	*/
d53 1
@


1.5.14.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d52 2
a53 1
#include <uvm/uvm_extern.h>
@


1.5.14.4
log
@Merge in -current from about a week ago
@
text
@d63 1
a63 1
static void cache_clear_tags(void);
@


1.5.14.5
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: cache.c,v 1.5.14.4 2002/03/28 11:26:45 niklas Exp $	*/
@


1.4
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d59 1
a61 2
#include "cache.h"

d65 2
@


1.3
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: cache.c,v 1.6 1996/12/17 21:11:16 gwr Exp $	*/
d60 1
a60 1
#include "machdep.h"
a64 2

static void cache_clear_tags __P((void));
@


1.2
log
@sync with NetBSD -- copyright changes only
@
text
@d1 1
a1 1
/*	$NetBSD: cache.c,v 1.5 1996/11/20 18:57:24 gwr Exp $	*/
d60 1
a60 1
#include "cache.h"
d65 2
@


1.1
log
@Initial revision
@
text
@d1 1
d3 2
a4 2
/*
 * Copyright (c) 1995 Gordon W. Ross
d7 3
d18 1
a18 3
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 4. All advertising materials mentioning features or use of this software
d20 5
a24 1
 *      This product includes software developed by Gordon W. Ross
d26 11
a36 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
