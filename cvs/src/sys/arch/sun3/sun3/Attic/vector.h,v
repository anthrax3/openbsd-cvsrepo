head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.8
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2002.12.31.16.35.42;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.47;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.28.22.06.36;	author miod;	state Exp;
branches
	1.6.8.1;
next	1.5;

1.5
date	97.01.16.04.04.36;	author kstailey;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	97.01.07.23.36.36;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.12.31.06.14.09;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.08.26.13;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.02;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.05.14.21.37.37;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.5.14.3;

1.5.14.3
date	2003.03.27.23.52.19;	author niklas;	state dead;
branches;
next	;

1.6.8.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.6.8.2;

1.6.8.2
date	2003.05.19.21.49.46;	author tedu;	state dead;
branches;
next	;


desc
@@


1.8
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: vector.h,v 1.7 2002/03/14 01:26:47 millert Exp $	*/
/*	$NetBSD: vector.h,v 1.10 1996/11/20 18:57:40 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Adam Glass.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define NVECTORS 256

#define AUTOVEC_BASE 0x18

extern void (*vector_table[])(void);

void addrerr(void);
void badtrap(void);
void buserr(void);
void chkinst(void);
void coperr(void);
void fmterr(void);
void fpfline(void);
void fpunsupp(void);
void illinst(void);
void privinst(void);
void trace(void);
void trap0(void);
void trap1(void);
void trap12(void);
void trap15(void);
void trap2(void);
void trapvinst(void);
void zerodiv(void);
void fpfault(void);

void _isr_autovec(void);

@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: vector.h,v 1.6 2000/08/28 22:06:36 miod Exp $	*/
@


1.6
log
@Prototypes for interrupt handlers should go into .h file, not .c
@
text
@d1 1
a1 1
/*	$OpenBSD: vector.h,v 1.5 1997/01/16 04:04:36 kstailey Exp $	*/
d44 1
a44 1
extern void (*vector_table[]) __P((void));
d46 19
a64 19
void addrerr __P((void));
void badtrap __P((void));
void buserr __P((void));
void chkinst __P((void));
void coperr __P((void));
void fmterr __P((void));
void fpfline __P((void));
void fpunsupp __P((void));
void illinst __P((void));
void privinst __P((void));
void trace __P((void));
void trap0 __P((void));
void trap1 __P((void));
void trap12 __P((void));
void trap15 __P((void));
void trap2 __P((void));
void trapvinst __P((void));
void zerodiv __P((void));
void fpfault __P((void));
d66 1
a66 1
void _isr_autovec __P((void));
@


1.6.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vector.h,v 1.6 2000/08/28 22:06:36 miod Exp $	*/
d44 1
a44 1
extern void (*vector_table[])(void);
d46 19
a64 19
void addrerr(void);
void badtrap(void);
void buserr(void);
void chkinst(void);
void coperr(void);
void fmterr(void);
void fpfline(void);
void fpunsupp(void);
void illinst(void);
void privinst(void);
void trace(void);
void trap0(void);
void trap1(void);
void trap12(void);
void trap15(void);
void trap2(void);
void trapvinst(void);
void zerodiv(void);
void fpfault(void);
d66 1
a66 1
void _isr_autovec(void);
@


1.6.8.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: vector.h,v 1.6.8.1 2002/06/11 03:39:01 art Exp $	*/
@


1.5
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
d48 20
@


1.5.14.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: vector.h,v 1.6 2000/08/28 22:06:36 miod Exp $	*/
a45 1
void addrerr __P((void));
a46 20
void buserr __P((void));
void chkinst __P((void));
void coperr __P((void));
void fmterr __P((void));
void fpfline __P((void));
void fpunsupp __P((void));
void illinst __P((void));
void privinst __P((void));
void trace __P((void));
void trap0 __P((void));
void trap1 __P((void));
void trap12 __P((void));
void trap15 __P((void));
void trap2 __P((void));
void trapvinst __P((void));
void zerodiv __P((void));
void fpfault __P((void));

void _isr_autovec __P((void));

@


1.5.14.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
extern void (*vector_table[])(void);
d46 19
a64 19
void addrerr(void);
void badtrap(void);
void buserr(void);
void chkinst(void);
void coperr(void);
void fmterr(void);
void fpfline(void);
void fpunsupp(void);
void illinst(void);
void privinst(void);
void trace(void);
void trap0(void);
void trap1(void);
void trap12(void);
void trap15(void);
void trap2(void);
void trapvinst(void);
void zerodiv(void);
void fpfault(void);
d66 1
a66 1
void _isr_autovec(void);
@


1.5.14.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: vector.h,v 1.5.14.2 2002/03/28 11:26:45 niklas Exp $	*/
@


1.4
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d44 3
a46 1
extern void (*vector_table[])();
@


1.3
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: vector.h,v 1.11 1996/12/17 21:11:44 gwr Exp $	*/
d43 1
a43 23
extern void *vector_table[];

void _isr_autovec __P((void));

void addrerr __P((void));
void badtrap __P((void));
void buserr __P((void));
void chkinst __P((void));
void coperr __P((void));
void fmterr __P((void));
void fpfline __P((void));
void fpunsupp __P((void));
void illinst __P((void));
void privinst __P((void));
void trace __P((void));
void trap0 __P((void));
void trap1 __P((void));
void trap12 __P((void));
void trap15 __P((void));
void trap2 __P((void));
void trapvinst __P((void));
void zerodiv __P((void));
void fpfault __P((void));
@


1.2
log
@sync with NetBSD -- copyright changes only
@
text
@d1 1
a1 1
/*	$NetBSD: vector.h,v 1.10 1996/11/20 18:57:40 gwr Exp $	*/
d43 23
a65 1
extern void (*vector_table[])();
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: vector.h,v 1.9 1995/08/21 21:37:43 gwr Exp $	*/
d3 2
a4 2
/*
 * Copyright (c) 1993 Adam Glass
d7 3
d20 5
a24 3
 *	This product includes software developed by Adam Glass.
 * 4. The name of the Author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d26 11
a36 11
 * THIS SOFTWARE IS PROVIDED BY Adam Glass ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
