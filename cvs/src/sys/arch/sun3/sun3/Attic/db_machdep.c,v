head	1.14;
access;
symbols
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	UBC_SYNC_B:1.13
	UBC:1.12.0.2
	UBC_BASE:1.12
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.20
	OPENBSD_2_8:1.9.0.18
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.16
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.14
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.12
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.10
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.8
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.6
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.4
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2002.12.31.16.35.41;	author miod;	state dead;
branches;
next	1.13;

1.13
date	2002.03.14.01.26.47;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.06.19.53.16;	author miod;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2001.05.30.20.35.57;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.29.19.02.45;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	97.01.16.08.08.39;	author kstailey;	state Exp;
branches
	1.9.14.1;
next	1.8;

1.8
date	97.01.16.04.04.16;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	97.01.07.23.36.24;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	96.12.31.06.13.36;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.11.23.08.26.04;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.05.03.16.04.29;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.14.05.27.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.26.01.15.40;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.01;	author deraadt;	state Exp;
branches;
next	;

1.9.14.1
date	2001.07.04.10.24.07;	author niklas;	state Exp;
branches;
next	1.9.14.2;

1.9.14.2
date	2001.11.13.21.04.18;	author niklas;	state Exp;
branches;
next	1.9.14.3;

1.9.14.3
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.9.14.4;

1.9.14.4
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.12.2.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2003.05.19.21.49.46;	author tedu;	state dead;
branches;
next	;


desc
@@


1.14
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: db_machdep.c,v 1.13 2002/03/14 01:26:47 millert Exp $	*/
/*	$NetBSD: db_machdep.c,v 1.8 1996/11/20 18:57:27 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Machine-dependent functions used by ddb
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>

#include <uvm/uvm_extern.h>

#include <machine/control.h>
#include <machine/db_machdep.h>
#include <machine/machdep.h>
#include <machine/pte.h>

#include <ddb/db_command.h>
#include <ddb/db_output.h>

static void db_mach_pagemap(db_expr_t, int, db_expr_t, char *);
static void db_mach_abort(db_expr_t, int, db_expr_t, char *);

static void pte_print(int);

static char *pgt_names[] = {
	"MEM", "OBIO", "VMES", "VMEL" };

void
pte_print(pte)
	int pte;
{
	int t;

	if (pte & PG_VALID) {
		db_printf(" V");
		if (pte & PG_WRITE)
			db_printf(" W");
		if (pte & PG_SYSTEM)
			db_printf(" S");
		if (pte & PG_NC)
			db_printf(" NC");
		if (pte & PG_REF)
			db_printf(" Ref");
		if (pte & PG_MOD)
			db_printf(" Mod");

		t = (pte >> PG_TYPE_SHIFT) & 3;
		db_printf(" %s", pgt_names[t]);
		db_printf(" PA=0x%x\n", PG_PA(pte));
	}
	else db_printf(" INVALID\n");
}

static void
db_mach_pagemap(addr, have_addr, count, modif)
	db_expr_t       addr;
	int             have_addr;
	db_expr_t       count;
	char *          modif;
{
	int pte, sme;

	sme = get_segmap(addr);
	if (sme == 0xFF) pte = 0;
	else pte = get_pte(addr);

	db_printf("0x%08x [%02x] 0x%08x", addr, sme, pte);
	pte_print(pte);
	db_next = addr + NBPG;
}

/*
 * Machine-specific ddb commands for the sun3:
 *    abort:	Drop into monitor via abort (allows continue)
 *    pgmap:	Given addr, Print addr, segmap, pagemap, pte
 */

static void
db_mach_abort(addr, have_addr, count, modif)
        db_expr_t       addr;
        int             have_addr;
        db_expr_t       count;
        char *          modif;
{

        sun3_mon_abort();
}

struct db_command db_machine_cmds[] = {
	{ "abort",	db_mach_abort,	 0,		0 },
	{ "pgmap",	db_mach_pagemap, CS_SET_DOT, 	0 },
	{ (char *)0, }
};

/*
 * This is called before ddb_init() to install the
 * machine-specific command table. (see machdep.c)
 */
void
db_machine_init()
{

	db_machine_commands_install(db_machine_cmds);
}
@


1.13
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.12 2001/11/06 19:53:16 miod Exp $	*/
@


1.12
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.11 2001/05/30 20:35:57 miod Exp $	*/
d58 2
a59 2
static void db_mach_pagemap __P((db_expr_t, int, db_expr_t, char *));
static void db_mach_abort   __P((db_expr_t, int, db_expr_t, char *));
d61 1
a61 1
static void pte_print __P((int));
@


1.12.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.12 2001/11/06 19:53:16 miod Exp $	*/
d58 2
a59 2
static void db_mach_pagemap(db_expr_t, int, db_expr_t, char *);
static void db_mach_abort(db_expr_t, int, db_expr_t, char *);
d61 1
a61 1
static void pte_print(int);
@


1.12.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.12.2.1 2002/06/11 03:39:01 art Exp $	*/
@


1.11
log
@Oops
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.10 2001/04/29 19:02:45 miod Exp $	*/
d48 1
a48 1
#include <vm/vm.h>
@


1.10
log
@ddb command `machine halt' is superceded by `boot halt' now, so remove it
and remove `machine reboot' as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.9 1997/01/16 08:08:39 kstailey Exp $	*/
a59 1
static void db_mach_reboot  __P((db_expr_t, int, db_expr_t, char *));
@


1.9
log
@Use RB_TIMEBAD in boot() to know not to update the battery backed up clock
via resettodr().  Make Sun3-only command "machine reboot" only print
a warning that the command is obsolete and that you should use the "boot"
command instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.8 1997/01/16 04:04:16 kstailey Exp $	*/
a59 1
static void db_mach_halt    __P((db_expr_t, int, db_expr_t, char *));
a113 2
 *    halt: 	Exit to monitor as in halt(8)
 *    reboot:	Reboot the machine as in reboot(8) XXX obsolete, use "boot" cmd
a127 26
static void
db_mach_halt(addr, have_addr, count, modif)
        db_expr_t       addr;
        int             have_addr;
        db_expr_t       count;
        char *          modif;
{

        sun3_mon_halt();
}

static void
db_mach_reboot(addr, have_addr, count, modif)
        db_expr_t       addr;
        int             have_addr;
        db_expr_t       count;
        char *          modif;
{

#if 0 /* XXX */
        sun3_mon_reboot("");
#else
	db_printf("`machine reboot' command is obsolete, use `boot' command\n");
#endif
}

a129 2
	{ "halt",	db_mach_halt,	 0,		0 },
	{ "reboot",	db_mach_reboot,	 0,		0 },
@


1.9.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.9 1997/01/16 08:08:39 kstailey Exp $	*/
d60 2
d115 2
d131 26
d159 2
@


1.9.14.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 1
a48 1
#include <uvm/uvm_extern.h>
@


1.9.14.3
log
@Merge in -current from about a week ago
@
text
@d58 2
a59 2
static void db_mach_pagemap(db_expr_t, int, db_expr_t, char *);
static void db_mach_abort(db_expr_t, int, db_expr_t, char *);
d61 1
a61 1
static void pte_print(int);
@


1.9.14.4
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.c,v 1.9.14.3 2002/03/28 11:26:45 niklas Exp $	*/
@


1.8
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 1
d116 1
a116 1
 *    reboot:	Reboot the machine as in reboot(8)
d150 1
d152 3
@


1.7
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d49 1
d51 3
d55 1
d57 4
a60 1
#include <machine/pte.h>
d62 1
d67 2
a68 1
void pte_print(pte)
d94 5
a98 2
db_pagemap(addr)
	db_expr_t	addr;
d119 10
a128 2
extern void sun3_mon_abort();
extern void sun3_mon_halt();
d130 17
a146 2
void
db_mon_reboot()
d148 2
a149 1
	sun3_mon_reboot("");
d153 4
a156 4
	{ "abort",	sun3_mon_abort,	0,	0 },
	{ "halt",	sun3_mon_halt,	0,	0 },
	{ "reboot",	db_mon_reboot,	0,	0 },
	{ "pgmap",	db_pagemap, 	CS_SET_DOT, 0 },
d167 1
@


1.6
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.c,v 1.9 1996/12/17 21:11:19 gwr Exp $	*/
a47 1
#include <machine/control.h>
a49 1
#include <ddb/db_output.h>
a51 1
#include "machdep.h"
a52 6
static void db_mach_pagemap __P((db_expr_t, int, db_expr_t, char *));
static void db_mach_abort   __P((db_expr_t, int, db_expr_t, char *));
static void db_mach_halt    __P((db_expr_t, int, db_expr_t, char *));
static void db_mach_reboot  __P((db_expr_t, int, db_expr_t, char *));

static void pte_print __P((int));
d57 1
a57 2
static void
pte_print(pte)
d83 1
a83 1
db_mach_pagemap(addr, have_addr, count, modif)
a84 3
	int		have_addr;
	db_expr_t	count;
	char *		modif;
d105 2
a106 9
static void
db_mach_abort(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
{
	sun3_mon_abort();
}
d108 2
a109 16
static void
db_mach_halt(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
{
	sun3_mon_halt();
}

static void
db_mach_reboot(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
d115 4
a118 4
	{ "abort",	db_mach_abort,	0,	0 },
	{ "halt",	db_mach_halt,	0,	0 },
	{ "reboot",	db_mach_reboot,	0,	0 },
	{ "pgmap",	db_mach_pagemap, 	CS_SET_DOT, 0 },
@


1.5
log
@sync with NetBSD -- copyright changes only
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.c,v 1.8 1996/11/20 18:57:27 gwr Exp $	*/
d48 1
d51 1
d54 1
d56 6
d66 2
a67 1
void pte_print(pte)
d93 1
a93 1
db_pagemap(addr)
d95 3
d118 9
a126 2
extern void sun3_mon_abort();
extern void sun3_mon_halt();
d128 16
a143 2
void
db_mon_reboot()
d149 4
a152 4
	{ "abort",	sun3_mon_abort,	0,	0 },
	{ "halt",	sun3_mon_halt,	0,	0 },
	{ "reboot",	db_mon_reboot,	0,	0 },
	{ "pgmap",	db_pagemap, 	CS_SET_DOT, 0 },
@


1.4
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.c,v 1.7 1996/02/16 20:08:44 gwr Exp $	*/
d3 2
a4 2
/*
 * Copyright (c) 1994, 1995 Gordon W. Ross
d7 3
d18 1
a18 3
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 4. All advertising materials mentioning features or use of this software
d20 5
a24 1
 *      This product includes software developed by Gordon Ross
d26 11
a36 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.3
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.c,v 1.6 1995/10/23 18:40:35 gwr Exp $	*/
a46 143
#undef	DEBUG

#ifdef	DEBUG
int db_machdep_debug;
#endif

/*
 * Interface to the debugger for virtual memory read/write.
 *
 * To write in the text segment, we have to first make
 * the page writable, do the write, then restore the PTE.
 * For writes outside the text segment, and all reads,
 * just do the access -- if it causes a fault, the debugger
 * will recover with a longjmp to an appropriate place.
 *
 * ALERT!  If you want to access device registers with a
 * specific size, then the read/write functions have to
 * make sure to do the correct sized pointer access.
 */

/*
 * Read bytes from kernel address space for debugger.
 * This used to check for valid PTEs, but now that
 * traps in DDB work correctly, "Just Do It!"
 */
void
db_read_bytes(addr, size, data)
	vm_offset_t	addr;
	register int	size;
	register char	*data;
{
	register char	*src;
	register char	incr;

#ifdef	DEBUG
	if (db_machdep_debug)
		printf("db_read_bytes: addr=0x%x, size=%d\n", addr, size);
#endif

	if (size == 4) {
		*((int*)data) = *((int*)addr);
		return;
	}

	if (size == 2) {
		*((short*)data) = *((short*)addr);
		return;
	}

	src = (char *)addr;
	while (size > 0) {
		--size;
		*data++ = *src++;
	}
}

/*
 * Write one byte somewhere in kernel text.
 * It does not matter if this is slow.
 */
static void
db_write_text(dst, ch)
	char *dst;
	int ch;
{
	int		oldpte, tmppte;
	vm_offset_t pgva = sun3_trunc_page((long)dst);
	extern int cache_size;

	/* Flush read-only VAC entry so we'll see the new one. */
#ifdef	HAVECACHE
	if (cache_size)
		cache_flush_page(pgva);
#endif
	oldpte = get_pte(pgva);
	if ((oldpte & PG_VALID) == 0) {
		db_printf(" address 0x%x not a valid page\n", dst);
		return;
	}
	tmppte = oldpte | PG_WRITE | PG_NC;

	set_pte(pgva, tmppte);

	/* Now we can write in this page of kernel text... */
	*dst = (char) ch;

	/* Temporary PTE was non-cacheable; no flush needed. */
	set_pte(pgva, oldpte);
	ICIA();
}

/*
 * Write bytes to kernel address space for debugger.
 */
void
db_write_bytes(addr, size, data)
	vm_offset_t	addr;
	int	size;
	char	*data;
{
	extern char	kernel_text[], etext[] ;
	register char	*dst = (char *)addr;

#ifdef	DEBUG
	if (db_machdep_debug)
		printf("db_write_bytes: addr=0x%x, size=%d ", addr, size);
#endif

	/* If any part is in kernel text, use db_write_text() */
	if ((dst < etext) && ((dst + size) > kernel_text)) {
		/* This is slow, but is only used for breakpoints. */
#ifdef	DEBUG
		if (db_machdep_debug)
			printf("(in text)\n");
#endif
		while (size > 0) {
			--size;
			db_write_text(dst, *data);
			dst++; data++;
		}
		return;
	}

#ifdef	DEBUG
		if (db_machdep_debug)
			printf("(in data)\n");
#endif

	if (size == 4) {
		*((int*)addr) = *((int*)data);
		return;
	}

	if (size == 2) {
		*((short*)addr) = *((short*)data);
		return;
	}

	while (size > 0) {
		--size;
		*dst++ = *data++;
	}
}
@


1.2
log
@update from netbsd tree
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.c,v 1.5.2.1 1995/10/23 21:53:16 gwr Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.c,v 1.5 1995/06/27 14:44:49 gwr Exp $	*/
d47 6
d61 4
d79 16
d97 2
a98 1
	while (--size >= 0)
d100 1
d148 1
a148 1
	char	*dst;
d150 14
a163 3
	dst = (char *)addr;
	while (--size >= 0) {
		if ((dst >= kernel_text) && (dst < etext))
d165 23
a187 3
		else
			*dst = *data;
		dst++; data++;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
