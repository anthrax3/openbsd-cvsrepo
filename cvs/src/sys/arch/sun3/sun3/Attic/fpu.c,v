head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.24
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.22
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.20
	OPENBSD_2_8:1.7.0.18
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.16
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.14
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.12
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2002.12.31.16.35.41;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.47;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.04.05.20.24.24;	author kstailey;	state Exp;
branches
	1.7.14.1
	1.7.24.1;
next	1.6;

1.6
date	97.01.16.04.04.20;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.01.07.23.36.26;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.12.31.06.13.40;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.11.23.08.26.06;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.16.04.34;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.01;	author deraadt;	state Exp;
branches;
next	;

1.7.14.1
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.7.14.2;

1.7.14.2
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.7.24.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.7.24.2;

1.7.24.2
date	2003.05.19.21.49.46;	author tedu;	state dead;
branches;
next	;


desc
@@


1.9
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: fpu.c,v 1.8 2002/03/14 01:26:47 millert Exp $	*/
/*	$NetBSD: fpu.c,v 1.9 1996/11/20 18:57:29 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Floating Point Unit (MC68881)
 * Probe for the FPU at autoconfig time.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/time.h>
#include <sys/kernel.h>
#include <sys/device.h>

#include <machine/control.h>
#include <machine/cpu.h>
#include <machine/frame.h>
#include <machine/machdep.h>
#include <machine/mon.h>
#include <machine/psl.h>

#include "interreg.h"

static char *fpu_descr[] = {
#ifdef	FPU_EMULATE
	"emulator", 		/* 0 */
#else
	"no math support",	/* 0 */
#endif
	"mc68881",			/* 1 */
	"mc68882",			/* 2 */
	"?" };

static int fpu_probe(void);

void
initfpu()
{
	char *descr;
	int enab_reg;

	/* Set the FPU bit in the "system enable register" */
	enab_reg = get_control_byte((char *) SYSTEM_ENAB);
	enab_reg |= SYSTEM_ENAB_FPP;
	set_control_byte((char *) SYSTEM_ENAB, enab_reg);

	fputype = fpu_probe();
	if ((0 <= fputype) && (fputype <= 2))
		descr = fpu_descr[fputype];
	else
		descr = "unknown type";

	printf("fpu: %s\n", descr);

	if (fputype == 0) {
		/* Might as well turn the enable bit back off. */
		enab_reg = get_control_byte((char *) SYSTEM_ENAB);
		enab_reg &= ~SYSTEM_ENAB_FPP;
		set_control_byte((char *) SYSTEM_ENAB, enab_reg);
	}
}

static int
fpu_probe()
{
	label_t	faultbuf;
	struct fpframe null_fpframe;

	nofault = &faultbuf;
	if (setjmp(&faultbuf)) {
		nofault = NULL;
		return(0);
	}
	bzero(&null_fpframe, sizeof(null_fpframe));
	m68881_restore(&null_fpframe);
	nofault = NULL;
	return(1);
}
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.7 1997/04/05 20:24:24 kstailey Exp $	*/
@


1.7
log
@fpu_type -> fputype
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.6 1997/01/16 04:04:20 kstailey Exp $	*/
d70 1
a70 1
static int fpu_probe __P((void));
@


1.7.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.7 1997/04/05 20:24:24 kstailey Exp $	*/
d70 1
a70 1
static int fpu_probe(void);
@


1.7.24.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.7.24.1 2002/06/11 03:39:01 art Exp $	*/
@


1.7.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 1
a70 1
static int fpu_probe(void);
@


1.7.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.7.14.1 2002/03/28 11:26:45 niklas Exp $	*/
@


1.6
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d83 3
a85 3
	fpu_type = fpu_probe();
	if ((0 <= fpu_type) && (fpu_type <= 2))
		descr = fpu_descr[fpu_type];
d91 1
a91 1
	if (fpu_type == 0) {
@


1.5
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d51 1
a51 1
#include <machine/psl.h>
d54 1
d56 1
a56 1
#include <machine/control.h>
a59 5
extern int fpu_type;
extern long *nofault;

int fpu_probe();

d70 4
a73 1
void initfpu()
d99 2
a100 1
int fpu_probe()
d103 1
a103 1
	int null_fpframe[2];
d105 1
a105 1
	nofault = (long *) &faultbuf;
d110 2
a111 3
	null_fpframe[0] = 0;
	null_fpframe[1] = 0;
	m68881_restore(null_fpframe);
@


1.4
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: fpu.c,v 1.10 1996/12/17 21:11:23 gwr Exp $	*/
a56 1
#include "machdep.h"
d58 4
a61 1
static int fpu_probe __P((void));
d73 1
a73 2
void
initfpu()
d99 1
a99 2
static int
fpu_probe()
d102 1
a102 1
	struct fpframe null_fpf;
d104 1
a104 1
	nofault = &faultbuf;
d109 3
a111 3
	bzero(&null_fpf, sizeof(null_fpf));
	/* This will trap if there is no FPU present. */
	m68881_restore(&null_fpf);
@


1.3
log
@sync with NetBSD -- copyright changes only
@
text
@d1 1
a1 1
/*	$NetBSD: fpu.c,v 1.9 1996/11/20 18:57:29 gwr Exp $	*/
d57 1
d59 1
a59 4
extern int fpu_type;
extern long *nofault;

int fpu_probe();
d71 2
a72 1
void initfpu()
d98 2
a99 1
int fpu_probe()
d102 1
a102 1
	int null_fpframe[2];
d104 1
a104 1
	nofault = (long *) &faultbuf;
d109 3
a111 3
	null_fpframe[0] = 0;
	null_fpframe[1] = 0;
	m68881_restore(null_fpframe);
@


1.2
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: fpu.c,v 1.6 1996/03/26 15:16:45 gwr Exp $	*/
d3 2
a4 2
/*
 * Copyright (c) 1995 Gordon W. Ross
d7 3
d18 1
a18 3
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 4. All advertising materials mentioning features or use of this software
d20 5
a24 1
 *      This product includes software developed by Gordon Ross
d26 11
a36 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: fpu.c,v 1.2 1995/06/27 14:40:14 gwr Exp $	*/
a43 1
#include <machine/autoconf.h>
a49 2
#include <setjmp.h>

a54 2
int fpu_match __P((struct device *, void *vcf, void *args));
void fpu_attach __P((struct device *, struct device *, void *));
a56 18
struct cfdriver fpucd = {
	NULL, "fpu", fpu_match, fpu_attach,
	DV_DULL, sizeof(struct device), 0 };

int fpu_match(parent, vcf, args)
    struct device *parent;
    void *vcf, *args;
{
    struct cfdata *cf = vcf;
	struct confargs *ca = args;

	/* This driver only supports one unit. */
	if (cf->cf_unit != 0)
		return (0);

	return (1);
}

d67 1
a67 4
void fpu_attach(parent, self, args)
	struct device *parent;
	struct device *self;
	void *args;
a68 1
	struct confargs *ca = args;
d83 1
a83 1
	printf(" (%s)\n", descr);
d95 1
a95 1
	jmp_buf	faultbuf;
d99 1
a99 1
	if (setjmp(nofault)) {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
