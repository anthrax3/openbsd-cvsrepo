head	1.11;
access;
symbols
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.2
	UBC_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2002.12.31.16.35.41;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2002.03.14.01.26.47;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.06.19.53.16;	author miod;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.06.27.04.44.02;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.30.20.40.03;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.03.01.47.30;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	97.01.16.04.04.23;	author kstailey;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	97.01.07.23.36.28;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.12.31.06.13.47;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.07.55.08;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	96.05.03.16.04.39;	author mickey;	state Exp;
branches;
next	;

1.5.14.1
date	2001.05.14.21.37.34;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2001.07.04.10.24.10;	author niklas;	state Exp;
branches;
next	1.5.14.3;

1.5.14.3
date	2001.11.13.21.04.18;	author niklas;	state Exp;
branches;
next	1.5.14.4;

1.5.14.4
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.5.14.5;

1.5.14.5
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.9.2.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2003.05.19.21.49.46;	author tedu;	state dead;
branches;
next	;


desc
@@


1.11
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: intreg.c,v 1.10 2002/03/14 01:26:47 millert Exp $	*/
/*	$NetBSD: intreg.c,v 1.5 1996/11/20 18:57:32 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Adam Glass and Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This handles multiple attach of autovectored interrupts,
 * and the handy software interrupt request register.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/vmmeter.h>

#include <net/netisr.h>

#include <machine/autoconf.h>
#include <machine/cpu.h>
#include <machine/machdep.h>
#include <machine/mon.h>
#include <machine/obio.h>

#include <uvm/uvm_extern.h>

#include "interreg.h"

struct intreg_softc {
	struct device sc_dev;
	volatile u_char *sc_reg;
};

static int  intreg_match(struct device *, void *vcf, void *args);
static void intreg_attach(struct device *, struct device *, void *);
static int soft1intr(void *);

struct cfattach intreg_ca = {
	sizeof(struct intreg_softc), intreg_match, intreg_attach
};

struct cfdriver intreg_cd = {
	NULL, "intreg", DV_DULL
};

volatile u_char *interrupt_reg;


/* called early (by internal_configure) */
void
intreg_init()
{
	interrupt_reg = obio_find_mapping(OBIO_INTERREG, 1);
	if (!interrupt_reg)
		mon_panic("interrupt reg VA not found\n");
	/* Turn off all interrupts until clock_attach */
	*interrupt_reg = 0;
}


static int
intreg_match(parent, vcf, args)
	struct device *parent;
	void *vcf, *args;
{
	struct cfdata *cf = vcf;
	struct confargs *ca = args;

	/* This driver only supports one unit. */
	if (cf->cf_unit != 0)
		return (0);

	/* Validate the given address. */
	if (ca->ca_paddr != OBIO_INTERREG)
		return (0);

	return (1);
}


static void
intreg_attach(parent, self, args)
	struct device *parent;
	struct device *self;
	void *args;
{
	struct intreg_softc *sc = (void *)self;

	printf("\n");

	sc->sc_reg = interrupt_reg;

	/* Install handler for our "soft" interrupt. */
	isr_add_autovect(soft1intr, (void *)sc, 1);
}


/*
 * Level 1 software interrupt.
 * Possible reasons:
 *	Network software interrupt
 *	Soft clock interrupt
 */
static int
soft1intr(arg)
	void *arg;
{
	union sun3sir sir;
	int n, s;

	s = splhigh();
	sir.sir_any = sun3sir.sir_any;
	sun3sir.sir_any = 0;
	isr_soft_clear(1);
	splx(s);

	if (sir.sir_any) {
		uvmexp.softs++;
		if (sir.sir_which[SIR_NET]) {
			s = splhigh();
			n = netisr;
			netisr = 0;
			splx(s);
			sir.sir_which[SIR_NET] = 0;
#define DONETISR(bit, fn) \
	do { \
		if (n & (1 << bit)) \
			fn(); \
	} while (0)
#include <net/netisr_dispatch.h>
#undef DONETISR
		}
		if (sir.sir_which[SIR_CLOCK]) {
			sir.sir_which[SIR_CLOCK] = 0;
			softclock();
		}
		if (sir.sir_which[SIR_SPARE2]) {
			sir.sir_which[SIR_SPARE2] = 0;
			/* spare2intr(); */
		}
		if (sir.sir_which[SIR_SPARE3]) {
			sir.sir_which[SIR_SPARE3] = 0;
			/* spare3intr(); */
		}
		return (1);
	}
	return (0);
}

static int isr_soft_pending;

void
isr_soft_request(level)
	int level;
{
	u_char bit, reg_val;
	int s;

	if ((level < 1) || (level > 3))
		panic("isr_soft_request");

	bit = 1 << level;

	/* XXX - Should do this in the callers... */
	if (isr_soft_pending & bit)
		return;

	s = splhigh();
	isr_soft_pending |= bit;
	reg_val = *interrupt_reg;
	*interrupt_reg &= ~IREG_ALL_ENAB;

	*interrupt_reg |= bit;
	*interrupt_reg |= IREG_ALL_ENAB;
	splx(s);
}

void
isr_soft_clear(level)
	int level;
{
	u_char bit, reg_val;
	int s;

	if ((level < 1) || (level > 3))
		panic("isr_soft_clear");

	bit = 1 << level;

	s = splhigh();
	isr_soft_pending &= ~bit;
	reg_val = *interrupt_reg;
	*interrupt_reg &= ~IREG_ALL_ENAB;

	*interrupt_reg &= ~bit;
	*interrupt_reg |= IREG_ALL_ENAB;
	splx(s);
}

@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.9 2001/11/06 19:53:16 miod Exp $	*/
@


1.9
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.8 2001/06/27 04:44:02 art Exp $	*/
d67 3
a69 3
static int  intreg_match __P((struct device *, void *vcf, void *args));
static void intreg_attach __P((struct device *, struct device *, void *));
static int soft1intr __P((void *));
@


1.9.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.9 2001/11/06 19:53:16 miod Exp $	*/
d67 3
a69 3
static int  intreg_match(struct device *, void *vcf, void *args);
static void intreg_attach(struct device *, struct device *, void *);
static int soft1intr(void *);
@


1.9.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.9.2.1 2002/06/11 03:39:01 art Exp $	*/
@


1.8
log
@Zap old vm.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.7 2001/05/30 20:40:03 miod Exp $	*/
a56 2

#include <vm/vm.h>
@


1.7
log
@Preliminary UVM support. UVM kernels don't work for the moment, though.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.6 2001/01/03 01:47:30 miod Exp $	*/
a59 1
#ifdef UVM
a60 1
#endif
a152 1
#ifdef UVM
a153 3
#else
		cnt.v_soft++;
#endif
@


1.6
log
@Use netisr_dispatch.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.5 1997/01/16 04:04:23 kstailey Exp $	*/
d58 6
d155 3
d159 1
@


1.5
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 2
d140 1
a140 1
	int s;
d151 4
d156 7
a162 1
			netintr();
d178 1
a178 1
	return(0);
@


1.5.14.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.6 2001/01/03 01:47:30 miod Exp $	*/
a49 2
#include <net/netisr.h>

d138 1
a138 1
	int n, s;
a148 4
			s = splhigh();
			n = netisr;
			netisr = 0;
			splx(s);
d150 1
a150 7
#define DONETISR(bit, fn) \
	do { \
		if (n & (1 << bit)) \
			fn(); \
	} while (0)
#include <net/netisr_dispatch.h>
#undef DONETISR
d166 1
a166 1
	return (0);
@


1.5.14.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.5.14.1 2001/05/14 21:37:34 niklas Exp $	*/
a57 4
#include <vm/vm.h>

#include <uvm/uvm_extern.h>

d149 1
a149 1
		uvmexp.softs++;
@


1.5.14.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 2
@


1.5.14.4
log
@Merge in -current from about a week ago
@
text
@d67 3
a69 3
static int  intreg_match(struct device *, void *vcf, void *args);
static void intreg_attach(struct device *, struct device *, void *);
static int soft1intr(void *);
@


1.5.14.5
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.c,v 1.5.14.4 2002/03/28 11:26:45 niklas Exp $	*/
@


1.4
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d52 1
a54 1
#include <machine/isr.h>
d65 1
a65 1
static int soft1intr();
d79 2
a80 1
void intreg_init()
d92 2
a93 2
    struct device *parent;
    void *vcf, *args;
d95 1
a95 1
    struct cfdata *cf = vcf;
a96 1
	int pa;
a116 1
	struct cfdata *cf = self->dv_cfdata;
d133 2
a134 1
int soft1intr(arg)
d138 1
a138 1
	int n, s;
d169 1
d171 2
a172 2
static int isr_soft_pending;
void isr_soft_request(level)
d197 2
a198 1
void isr_soft_clear(level)
@


1.3
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: intreg.c,v 1.6 1996/12/17 21:11:28 gwr Exp $	*/
d53 1
a55 1
#include "machdep.h"
d62 1
a62 1
static int  intreg_match __P((struct device *, void *, void *));
d64 1
a64 1
static int soft1intr __P((void *));
d78 1
a78 2
void
intreg_init()
d93 1
a93 1
	struct cfdata *cf = vcf;
d95 1
d116 1
d133 1
a133 2
static int
soft1intr(arg)
d137 1
a137 1
	int s;
@


1.2
log
@sync with NetBSD
@
text
@d1 1
a1 1
/*	$NetBSD: intreg.c,v 1.5 1996/11/20 18:57:32 gwr Exp $	*/
a52 1
#include <machine/isr.h>
d55 1
d62 1
a62 1
static int  intreg_match __P((struct device *, void *vcf, void *args));
d64 1
a64 1
static int soft1intr();
d78 2
a79 1
void intreg_init()
d94 1
a94 1
    struct cfdata *cf = vcf;
a95 1
	int pa;
a115 1
	struct cfdata *cf = self->dv_cfdata;
d132 2
a133 1
int soft1intr(arg)
d137 1
a137 1
	int n, s;
@


1.1
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: intreg.c,v 1.1 1996/03/26 15:03:11 gwr Exp $	*/
d3 2
a4 3
/*
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
d7 3
d20 5
a24 3
 *	This product includes software developed by Adam Glass.
 * 4. The name of the authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d26 11
a36 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d101 2
a102 9
	if ((pa = cf->cf_paddr) == -1) {
		/* Use our default PA. */
		pa = OBIO_INTERREG;
	} else {
		/* Validate the given PA. */
		if (pa != OBIO_INTERREG)
			panic("clock: wrong address");
	}
	if (pa != ca->ca_paddr)
@
