head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.2
	UBC_BASE:1.5
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2001.11.01.12.13.46;	author art;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	97.01.16.04.03.45;	author kstailey;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	97.01.07.23.36.06;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.12.31.06.12.35;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.51;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.11.13.21.04.18;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2003.03.27.23.52.17;	author niklas;	state dead;
branches;
next	;

1.5.2.1
date	2003.05.19.21.49.44;	author tedu;	state dead;
branches;
next	;


desc
@@


1.6
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: fb.c,v 1.5 2001/11/01 12:13:46 art Exp $	*/
/*	$NetBSD: fb.c,v 1.3 1995/04/10 05:45:56 mycroft Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)fb.c	8.1 (Berkeley) 6/11/93
 */

/*
 * /dev/fb (indirect frame buffer driver).
 */

#include <sys/param.h>
#include <sys/conf.h>
#include <sys/device.h>
#include <sys/ioctl.h>
#include <sys/proc.h>

#include <machine/conf.h>
#include <machine/fbio.h>
#include <machine/machdep.h>

#include "fbvar.h"

static struct fbdevice *devfb;
static int fbpriority;

/*
 * This is called by the real driver (i.e. bw2, cg3, ...)
 * to declare itself as a potential default frame buffer.
 */
void
fb_attach(fb, newpri)
	struct fbdevice *fb;
	int newpri;
{
	if (fbpriority < newpri) {
		fbpriority = newpri;
		devfb = fb;
	}
}

int
fbopen(dev, flags, mode, p)
	dev_t dev;
	int flags, mode;
	struct proc *p;
{

	if (devfb == NULL)
		return (ENXIO);
	return ((*devfb->fb_driver->fbd_open)(dev, flags, mode, p));
}

int
fbclose(dev, flags, mode, p)
	dev_t dev;
	int flags, mode;
	struct proc *p;
{

	return ((*devfb->fb_driver->fbd_close)(dev, flags, mode, p));
}

int
fbioctl(dev, cmd, data, flags, p)
	dev_t dev;
	u_long cmd;
	caddr_t data;
	int flags;
	struct proc *p;
{
	return (fbioctlfb(devfb, cmd, data));
}

paddr_t
fbmmap(dev, off, prot)
	dev_t dev;
	off_t off;
	int prot;
{
	return ((*devfb->fb_driver->fbd_mmap)(dev, off, prot));
}

void
fb_unblank()
{
	int on = 1;

	if (devfb) {
		(void) fbioctlfb(devfb, FBIOSVIDEO, (caddr_t)&on);
	}
}

/*
 * Common fb ioctl function
 */
int
fbioctlfb(fb, cmd, data)
	struct fbdevice *fb;
	u_long cmd;
	caddr_t data;
{
	struct fbdriver *fbd = fb->fb_driver;
	int error;

	switch (cmd) {

	case FBIOGTYPE:
		*(struct fbtype *)data = fb->fb_fbtype;
		error = 0;
		break;

	case FBIOGATTR:
		error = (*fbd->fbd_gattr)(fb, (struct fbgattr *)data);
		break;

	case FBIOGVIDEO:
		error = (*fbd->fbd_gvideo)(fb, (int *)data);
		break;

	case FBIOSVIDEO:
		error = (*fbd->fbd_svideo)(fb, (int *)data);
		break;

	case FBIOGETCMAP:
		error = (*fbd->fbd_getcmap)(fb, (struct fbcmap *)data);
		break;

	case FBIOPUTCMAP:
		error = (*fbd->fbd_putcmap)(fb, (struct fbcmap *)data);
		break;

	default:
		error = ENOTTY;
	}
	return (error);
}
@


1.5
log
@Change d_mmap in struct cdevsw from:
        int     (*d_mmap)       __P((dev_t, int, int));
to:
	paddr_t	(*d_mmap)	__P((dev_t, off_t, int));

This allows us to mmap devices past 4GB offsets.
@
text
@d1 1
a1 1
/*	$OpenBSD: fb.c,v 1.4 1997/01/16 04:03:45 kstailey Exp $	*/
@


1.5.2.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: fb.c,v 1.5 2001/11/01 12:13:46 art Exp $	*/
@


1.4
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d115 1
a115 1
int
d118 2
a119 1
	int off, prot;
@


1.4.14.1
log
@Merge in -current
@
text
@d115 1
a115 1
paddr_t
d118 1
a118 2
	off_t off;
	int prot;
@


1.4.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: fb.c,v 1.4.14.1 2001/11/13 21:04:18 niklas Exp $	*/
@


1.3
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d58 1
d60 1
@


1.2
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: fb.c,v 1.4 1996/12/17 21:10:41 gwr Exp $ */
a51 1
#include <sys/systm.h>
a60 2
cdev_decl(fb);

d120 10
a139 1
	void *vp = (void *)data;
d145 1
a145 1
		*(struct fbtype *)vp = fb->fb_fbtype;
d150 1
a150 1
		error = (*fbd->fbd_gattr)(fb, vp);
d154 1
a154 1
		error = (*fbd->fbd_gvideo)(fb, vp);
d158 1
a158 1
		error = (*fbd->fbd_svideo)(fb, vp);
d162 1
a162 1
		error = (*fbd->fbd_getcmap)(fb, vp);
d166 1
a166 1
		error = (*fbd->fbd_putcmap)(fb, vp);
a173 24

void
fb_unblank()
{
	int on = 1;

	if (devfb == NULL)
		return;

	(*devfb->fb_driver->fbd_svideo)(devfb, (void *)&on);
}

/*
 * Default ioctl function to put in struct fbdriver
 * for functions that are not supported.
 */
int
fb_noioctl(fbd, vp)
	struct fbdevice *fbd;
	void *vp;
{
	return ENOTTY;
}

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: fb.c,v 1.3 1995/04/10 05:45:56 mycroft Exp $ */
d52 1
d62 2
a122 10
void
fb_unblank()
{
	int on = 1;

	if (devfb) {
		(void) fbioctlfb(devfb, FBIOSVIDEO, (caddr_t)&on);
	}
}

d133 1
d139 1
a139 1
		*(struct fbtype *)data = fb->fb_fbtype;
d144 1
a144 1
		error = (*fbd->fbd_gattr)(fb, (struct fbgattr *)data);
d148 1
a148 1
		error = (*fbd->fbd_gvideo)(fb, (int *)data);
d152 1
a152 1
		error = (*fbd->fbd_svideo)(fb, (int *)data);
d156 1
a156 1
		error = (*fbd->fbd_getcmap)(fb, (struct fbcmap *)data);
d160 1
a160 1
		error = (*fbd->fbd_putcmap)(fb, (struct fbcmap *)data);
d168 24
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
