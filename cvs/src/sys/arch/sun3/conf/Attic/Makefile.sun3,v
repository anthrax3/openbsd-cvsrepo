head	1.35;
access;
symbols
	SMP_SYNC_A:1.35
	SMP_SYNC_B:1.35
	UBC_SYNC_A:1.35
	OPENBSD_3_2:1.32.0.2
	OPENBSD_3_2_BASE:1.32
	OPENBSD_3_1:1.30.0.2
	OPENBSD_3_1_BASE:1.30
	UBC_SYNC_B:1.32
	UBC:1.28.0.2
	UBC_BASE:1.28
	OPENBSD_3_0:1.27.0.2
	OPENBSD_3_0_BASE:1.27
	OPENBSD_2_9_BASE:1.25
	OPENBSD_2_9:1.25.0.2
	OPENBSD_2_8:1.23.0.2
	OPENBSD_2_8_BASE:1.23
	OPENBSD_2_7:1.22.0.12
	OPENBSD_2_7_BASE:1.22
	SMP:1.22.0.10
	SMP_BASE:1.22
	kame_19991208:1.22
	OPENBSD_2_6:1.22.0.8
	OPENBSD_2_6_BASE:1.22
	OPENBSD_2_5:1.22.0.6
	OPENBSD_2_5_BASE:1.22
	OPENBSD_2_4:1.22.0.4
	OPENBSD_2_4_BASE:1.22
	OPENBSD_2_3:1.22.0.2
	OPENBSD_2_3_BASE:1.22
	OPENBSD_2_2:1.21.0.2
	OPENBSD_2_2_BASE:1.21
	OPENBSD_2_1:1.19.0.2
	OPENBSD_2_1_BASE:1.19
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.35
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.34;

1.34
date	2002.12.25.21.10.26;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2002.12.02.09.00.26;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2002.08.09.20.24.43;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2002.06.22.14.05.51;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2001.12.25.21.43.47;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2001.12.24.23.12.14;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2001.12.14.08.51.21;	author miod;	state Exp;
branches
	1.28.2.1;
next	1.27;

1.27
date	2001.08.30.22.10.18;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2001.07.15.13.10.50;	author assar;	state Exp;
branches;
next	1.25;

1.25
date	2001.01.04.22.39.12;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2000.11.09.02.10.21;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2000.09.28.23.50.12;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	98.03.03.22.35.11;	author niklas;	state Exp;
branches
	1.22.10.1;
next	1.21;

1.21
date	97.09.15.02.40.36;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	97.06.09.19.45.29;	author kstailey;	state Exp;
branches;
next	1.19;

1.19
date	97.03.02.19.27.40;	author kstailey;	state Exp;
branches;
next	1.18;

1.18
date	97.02.22.19.36.05;	author kstailey;	state Exp;
branches;
next	1.17;

1.17
date	97.02.14.21.53.20;	author kstailey;	state Exp;
branches;
next	1.16;

1.16
date	97.02.14.21.45.25;	author kstailey;	state Exp;
branches;
next	1.15;

1.15
date	97.02.11.20.23.38;	author kstailey;	state Exp;
branches;
next	1.14;

1.14
date	97.02.07.03.20.34;	author kstailey;	state Exp;
branches;
next	1.13;

1.13
date	97.02.04.01.25.52;	author kstailey;	state Exp;
branches;
next	1.12;

1.12
date	97.01.16.04.03.40;	author kstailey;	state Exp;
branches;
next	1.11;

1.11
date	96.12.28.23.10.34;	author kstailey;	state Exp;
branches;
next	1.10;

1.10
date	96.12.22.19.59.51;	author kstailey;	state Exp;
branches;
next	1.9;

1.9
date	96.11.23.07.54.48;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	96.11.13.12.12.18;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.10.11.23.05.45;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.05.03.15.18.24;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.04.24.12.05.26;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	95.12.14.05.26.36;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.19.13.52.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.13.06.49.52;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.50;	author deraadt;	state Exp;
branches;
next	;

1.22.10.1
date	2001.05.14.21.37.23;	author niklas;	state Exp;
branches;
next	1.22.10.2;

1.22.10.2
date	2001.10.31.03.07.59;	author nate;	state Exp;
branches;
next	1.22.10.3;

1.22.10.3
date	2002.03.06.02.04.47;	author niklas;	state Exp;
branches;
next	1.22.10.4;

1.22.10.4
date	2003.03.27.23.52.17;	author niklas;	state dead;
branches;
next	;

1.28.2.1
date	2002.01.31.22.55.25;	author niklas;	state Exp;
branches;
next	1.28.2.2;

1.28.2.2
date	2002.10.29.00.28.12;	author art;	state Exp;
branches;
next	1.28.2.3;

1.28.2.3
date	2003.05.19.21.49.44;	author tedu;	state dead;
branches;
next	;


desc
@@


1.35
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@#	$OpenBSD: Makefile.sun3,v 1.34 2002/12/25 21:10:26 miod Exp $
#	$NetBSD: Makefile.sun3,v 1.51 1996/09/09 21:07:08 mycroft Exp $

# Makefile for OpenBSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/sun3/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/sun3/conf/Makefile.sun3
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

# DEBUG is set to -g if debugging.
# PROF is set to -pg if profiling.

.include <bsd.own.mk>

MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif
SUN3=	$S/arch/sun3
M68K=	$S/arch/m68k

INCLUDES=	-I. -I$S/arch -I$S -nostdinc
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Dsun3
CWARNFLAGS= 	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main
CMACHFLAGS=	-m68020 -msoft-float -fno-stack-protector
COPTS?=		-O2
CFLAGS= 	${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE ${CMACHFLAGS}
LINKFLAGS=	-N -Ttext 0E004000 -e start
STRIPFLAGS=	-d

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

# compile rules: rules are named ${TYPE}_${SUFFIX} where TYPE is NORMAL or
# HOSTED}, and SUFFIX is the file suffix, capitalized (e.g. C for a .c file).

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-S
.endif

%LOAD

assym.h: $S/kern/genassym.sh \
	 ${M68K}/m68k/genassym.cf ${SUN3}/sun3/genassym.cf Makefile
	cat ${M68K}/m68k/genassym.cf ${SUN3}/sun3/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    > assym.h.tmp && \
	mv -f assym.h.tmp assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C}

ioconf.o: ioconf.c
	${NORMAL_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

clean::
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks assym.h

lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} -UKGDB \
	    ${CFILES} ${SUN3}/sun3/swapgeneric.c ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

SRCS=	${SUN3}/sun3/locore.s \
	param.c ioconf.c ${CFILES} ${SFILES}

depend:: .depend
.depend: ${SRCS} assym.h param.c
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${SUN3}/sun3/locore.s
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}

# depend on root or device configuration
autoconf.o conf.o: Makefile
 
# depend on network or filesystem configuration 
uipc_proto.o vfs_conf.o: Makefile 

# depend on maxusers
assym.h machdep.o: Makefile

# depend on CPU configuration 
db_machdep.o dvma.o machdep.o pmap.o sun3_startup.o vm_machdep.o: Makefile

locore.o: ${SUN3}/sun3/locore.s assym.h
	${NORMAL_S}

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

%RULES
@


1.34
log
@No need to define FOO?=foo for AS, CC, CPP and LD, as they are always already
set from <sys.mk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.33 2002/12/02 09:00:26 miod Exp $
@


1.33
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.32 2002/08/09 20:24:43 miod Exp $
a26 4
AS?=	as
CC?=	cc
CPP?=	cpp
LD?=	ld
d44 1
a44 1
COPTS?=	-O2
@


1.32
log
@Add an explicit dependancy of assym.h to Makefile.
This makes sure it will be regenerated if you run config(8) again.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.31 2002/06/22 14:05:51 millert Exp $
d47 1
a47 1
CMACHFLAGS=	-m68020 -msoft-float
@


1.31
log
@Add ${PIPE} to CFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.30 2001/12/25 21:43:47 miod Exp $
d112 1
a112 1
	 ${M68K}/m68k/genassym.cf ${SUN3}/sun3/genassym.cf
@


1.30
log
@Oops, I barfed there, too.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.29 2001/12/24 23:12:14 miod Exp $
d49 1
a49 1
CFLAGS= 	${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS}
@


1.29
log
@Harmonize and complete wrt cross-compilation.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.28 2001/12/14 08:51:21 miod Exp $
d31 2
a33 1
COPTS?=	-O2
d48 1
a48 1

@


1.28
log
@Sync compilation flags definition accross m68k-based arches.
mvme68k still lacks some -Wfoo flags, until it is warnings clean.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.27 2001/08/30 22:10:18 miod Exp $
d96 1
a96 1
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@
@


1.28.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.30 2001/12/25 21:43:47 miod Exp $
a30 2
MKDEP?=	mkdep
SIZE?=	size
d32 1
d47 1
a47 1
COPTS?=	-O2
d96 1
a96 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
@


1.28.2.2
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.28.2.1 2002/01/31 22:55:25 niklas Exp $
d49 1
a49 1
CFLAGS= 	${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
d112 1
a112 1
	 ${M68K}/m68k/genassym.cf ${SUN3}/sun3/genassym.cf Makefile
@


1.28.2.3
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.28.2.2 2002/10/29 00:28:12 art Exp $
@


1.27
log
@Invoke genassym.sh with both m68k/m68k/genassym.cf and
machine/machine/genassym.cf files (poor man's inclusion).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.26 2001/07/15 13:10:50 assar Exp $
d27 1
d29 1
a30 1
MKDEP?=	mkdep
d32 1
d42 2
a43 1
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmc68020 -Dsun3
a46 1
COPTS?=		-O2
d48 1
a48 1
CFLAGS= 	${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS}
@


1.26
log
@add install target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.25 2001/01/04 22:39:12 miod Exp $
d37 1
d108 6
a113 4
assym.h: $S/kern/genassym.sh ${SUN3}/sun3/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${SUN3}/sun3/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
@


1.25
log
@Harmonization with other m68k arch Makefiles. Stricter compilation
flags, compile C code with -m68020.
Switch the generation of assym.h from a standalone genassym.c to a
regular genassym.cf.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.24 2000/11/09 02:10:21 miod Exp $
d25 2
d169 12
@


1.24
log
@Argh, repair CFLAGS.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.23 2000/09/28 23:50:12 miod Exp $
d37 8
a44 6
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Dsun3
CWARNFLAGS= 	-Werror -Wall -Wstrict-prototypes \
		-Wno-format -Wno-uninitialized -Wno-main
CFLAGS= 	${DEBUG} ${COPTS} ${CWARNFLAGS} -msoft-float -fno-defer-pop
AFLAGS=		-m68020 -x assembler-with-cpp -traditional-cpp -D_LOCORE
d48 1
a48 1
HOSTED_CC=	${CC}
a73 2
HOSTED_C=	${HOSTED_CC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

d105 4
a108 11
assym.h: genassym
	./genassym >assym.h

# Doing a cross-build of this is very tricky, and very dependent
# on compatibility of things like structure member alignment in
# the compiler used as HOSTED_CC (must match the native compiler).
# Often this is not possible at all, and you just have to build
# the assym.h file by hand on some other machine. -gwr
genassym: ${SUN3}/sun3/genassym.c
	${CC} ${CPPFLAGS} -E $< > $@@.i
	${HOSTED_CC} -o $@@ $@@.i
a123 1

d126 1
a126 1
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h
d146 1
d149 3
a151 14
	${MKDEP} ${AFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	${MKDEP} -a ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${SUN3}/sun3/genassym.c

# XXX - see below
#	${MKDEP} -a ${APPFLAGS} ${SUN3}/sun3/locore.s
#	${MKDEP} -a ${APPFLAGS} ${SFILES}
#
# For cross-compilation, the "gcc -M" mkdep script is convenient,
# but that does not correctly make rules from *.s files.  The
# easiest compromise is to just list those dependencies here.
locore.o: assym.h machine/trap.h m68k/trap.h
copy.o:   assym.h $S/sys/errno.h

d160 1
a160 1
genassym.o machdep.o: Makefile
a163 1

@


1.23
log
@Update compilation flags, make cross-compilation work.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.22 1998/03/03 22:35:11 niklas Exp $
d40 1
a40 1
		-Wno-format -Wno-uninitialized -Wno-main \
@


1.22
log
@Add -Wno-main for GCC 2.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.21 1997/09/15 02:40:36 deraadt Exp $
a35 1
# Override CPP defaults entirely, so cross-compilation works.
a36 1
XDEFS=		-undef -D__OpenBSD__ -Dm68k -Dmc68000
d38 1
a38 1
		-Dmc68020 -Dsun3 ${XDEFS}
d41 1
a41 2
		# -Wmissing-prototypes
CFLAGS= 	${DEBUG} ${CWARNFLAGS} -O2 -msoft-float -fno-defer-pop
@


1.22.10.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.25 2001/01/04 22:39:12 miod Exp $
d36 1
d38 8
a45 8
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmc68020 -Dsun3
CWARNFLAGS= 	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main
CMACHFLAGS=	-m68020 -msoft-float
COPTS?=		-O2

CFLAGS= 	${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE ${CMACHFLAGS}
d49 1
a49 1
HOSTCC?=	${CC}
d75 2
d108 11
a118 4
assym.h: $S/kern/genassym.sh ${SUN3}/sun3/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${SUN3}/sun3/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
d134 1
d137 1
a137 1
	    [Ee]rrs linterrs makelinks assym.h
a156 1

d159 14
a172 3
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${SUN3}/sun3/locore.s
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
d181 1
a181 1
assym.h machdep.o: Makefile
d185 1
@


1.22.10.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.22.10.1 2001/05/14 21:37:23 niklas Exp $
a24 2
.include <bsd.own.mk>

a34 1
M68K=	$S/arch/m68k
d105 4
a108 6
assym.h: $S/kern/genassym.sh \
	 ${M68K}/m68k/genassym.cf ${SUN3}/sun3/genassym.cf
	cat ${M68K}/m68k/genassym.cf ${SUN3}/sun3/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    > assym.h.tmp && \
	mv -f assym.h.tmp assym.h
a166 12

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif
@


1.22.10.3
log
@Merge in trunk
@
text
@d1 1
a1 1
#	$OpenBSD$
a26 1
AS?=	as
a27 1
CPP?=	cpp
a29 1
SIZE?=	size
d40 1
a40 2
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Dsun3
d44 3
a46 2
COPTS?=	-O2
CFLAGS= 	${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS}
d94 1
a94 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
@


1.22.10.4
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.22.10.3 2002/03/06 02:04:47 niklas Exp $
@


1.21
log
@kill Locore.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.20 1997/06/09 19:45:29 kstailey Exp $
d42 1
a42 1
		-Wno-format -Wno-uninitialized \
@


1.20
log
@Ceci n'est pas une pipe
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.19 1997/03/02 19:27:40 kstailey Exp $
d141 1
a141 2
	    ${SUN3}/sun3/Locore.c ${CFILES} ${SUN3}/sun3/swapgeneric.c \
	    ioconf.c param.c | \
@


1.19
log
@add -fno-defer-pop to CFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.sun3,v 1.18 1997/02/22 19:36:05 kstailey Exp $
d44 1
a44 1
CFLAGS= 	${DEBUG} ${CWARNFLAGS} -O2 -msoft-float -fno-defer-pop -pipe
@


1.18
log
@add tag; NetBSD -> OpenBSD
@
text
@d1 1
a1 1
#	$OpenBSD$
d44 1
a44 1
CFLAGS= 	${DEBUG} ${CWARNFLAGS} -O2 -msoft-float -pipe
@


1.17
log
@add SPL#, back out Makefile.sun3 change
@
text
@d1 1
d4 1
a4 1
# Makefile for NetBSD
@


1.16
log
@make things get out-of-date if genassym.c is touched
@
text
@d115 2
a116 1
genassym: genassym.i
a117 3

genassym.i: ${SUN3}/sun3/genassym.c
	${CC} ${CPPFLAGS} -E ${SUN3}/sun3/genassym.c > $@@
@


1.15
log
@add -m68020 to AFLAGS
@
text
@d115 1
a115 2
genassym: ${SUN3}/sun3/genassym.c
	${CC} ${CPPFLAGS} -E $< > $@@.i
d117 3
@


1.14
log
@add -Wno-uninitialized
@
text
@d44 1
a44 1
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
@


1.13
log
@adjust warning flags
@
text
@d41 1
a41 1
		-Wno-format \
@


1.12
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d40 3
a42 1
CWARNFLAGS= 	-Werror -# Wall -Wstrict-prototypes -Wmissing-prototypes
@


1.11
log
@changed __NetBSD__ to __OpenBSD__
@
text
@d40 2
a41 2
CWARNFLAGS= 	-Werror # -Wall -Wstrict-prototypes -Wmissing-prototypes
CFLAGS= 	${DEBUG} ${CWARNFLAGS} -O2 -msoft-float
d108 8
a115 5
genassym: genassym.o
	${CC} -o $@@ genassym.o

genassym.o: ${SUN3}/sun3/genassym.c
	${HOSTED_C}
@


1.10
log
@removed netbsd refs from "clean" target
@
text
@d37 1
a37 1
XDEFS=		-undef -D__NetBSD__ -Dm68k -Dmc68000
@


1.9
log
@sync with NetBSD
@
text
@d130 1
a130 1
	rm -f eddep *netbsd netbsd.gdb tags *.[io] [a-z]*.s \
@


1.8
log
@kernel is bsd
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.sun3,v 1.43 1996/02/29 20:57:38 cgd Exp $
d10 1
a10 1
#	 config machineid
a23 1
AS?=	as
a24 1
CPP?=	cpp
d26 2
a27 2
STRIP?=	strip -d
TOUCH?=	touch -f -c
d30 4
a33 2
S=	../../../..
SUN3=	../..
d35 7
a41 3
INCLUDES=	-I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Dsun3
CFLAGS=		${DEBUG} -O2 -Werror -msoft-float
d44 5
d50 1
a50 1
# What to use for libkern:
d66 2
a67 4
# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
d70 1
a70 1
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d72 1
a72 5
DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<
d98 1
a98 1
		echo ${STRIP} $@@; ${STRIP} $@@
d112 1
a112 1
	${NORMAL_C_C}
d119 1
a119 1
	${NORMAL_C_C}
d130 1
a130 1
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
d134 1
a134 1
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
d154 13
a166 4
	mkdep ${AFLAGS} ${CPPFLAGS} ${SUN3}/sun3/locore.s
	mkdep -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	mkdep -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	mkdep -a ${CFLAGS} ${CPPFLAGS} ${PARAM} ${SUN3}/sun3/genassym.c
d171 1
a171 1

@


1.7
log
@sync + our changes
@
text
@d127 1
a127 1
	rm -f eddep *netbsd netbsd.gdb tags *.[io] [a-z]*.s \
@


1.6
log
@sync with 0430
@
text
@d149 1
a149 1
depend: .depend
@


1.5
log
@Add network config dependencies.
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.sun3,v 1.35 1995/11/17 23:31:14 gwr Exp $
a2 1
#
d21 9
a29 8
# DEBUG is set to -g by config if debugging is requested (config -g).
DEBUG?=-O
# PROF is set to -pg by config if profiling is requested (config -p).
AS=	as
CC=	cc
CPP=	cpp
LD=	ld
TOUCH=	touch -f -c
d35 5
a39 4
INCLUDES= -I. -I../.. -I$S/arch -I$S/sys -I$S
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Dsun3
# We do NOT want accidental FP instructions in the kernel.
CFLAGS= -Werror -msoft-float ${DEBUG} ${COPTS}
d62 2
a63 5
NORMAL_C=	${CC} ${CFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${PROF} ${PARAM} -c $<
d65 2
a66 4
PROFILE_C=	${CC} ${COPTS} -S $<; \
		ex - $*.s < ${GPROF.EX}; \
		${AS} -o $@@ $*.s; \
		rm -f $*.s
d68 2
a69 2
NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@@
d75 2
d82 9
d92 4
a95 1
LDX=-X
d97 1
a97 1
LDX=-S
a98 11
SYSTEM_OBJ=	locore.o vnode_if.o ${OBJS} param.o ioconf.o
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_LD_HEAD=	@@echo loading $@@; rm -f $@@
SYSTEM_LD=	-@@echo ${LD} ${LDX} -n -N -e start -T 0E004000 -o $@@ \
		    '$${SYSTEM_OBJ}' vers.o ${LIBKERN} ${LIBCOMPAT}; \
		${LD} ${LDX} -n -N -e start -T 0E004000 -o $@@ \
		    ${SYSTEM_OBJ} vers.o ${LIBKERN} ${LIBCOMPAT}
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@; \
		[ X${DEBUG} = X-g ] && { \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo strip -d $@@; strip -d $@@; } || true
d102 20
a121 1
newvers:
d123 2
a124 1
	${CC} $(CFLAGS) -c vers.c
d127 2
a128 2
	rm -f eddep netbsd* tags *.o locore.i [a-z]*.s \
		Errs errs linterrs makelinks vnode_if.[ch] genassym
d130 2
a131 2
lint: /tmp param.c
	@@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
d134 1
a134 2
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'
d136 2
a137 28
locore.o: assym.s ${SUN3}/sun3/locore.s ${SUN3}/include/asm.h \
	  ${SUN3}/include/trap.h $S/arch/m68k/include/trap.h
	${CPP} -DLOCORE ${COPTS} ${SUN3}/sun3/locore.s | ${AS} -o locore.o

# depends on root or device configuration
autoconf.o conf.o : Makefile

# depends on the supported CPU types
locore.o sun3_startup.o pmap.o trap.o : Makefile

# depends on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o kern_xxx.o : Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile

# depend on maxusers
assym.s: Makefile

assym.s: genassym
	./genassym >assym.s

genassym:
	${CC} ${INCLUDES} ${IDENT} ${PARAM} -Dmc68020 -Dsun3 \
	    -o genassym ${SUN3}/sun3/genassym.c

depend: assym.s ioconf.c param.c vnode_if.c
	mkdep ${COPTS} ${CFILES} ioconf.c param.c vnode_if.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${SUN3}/sun3/genassym.c
d144 1
a144 1
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
d147 12
a158 2
tags:
	@@echo "see $S/kern/Makefile for tags"
d160 2
a161 2
ioconf.o: ioconf.c
	${CC} ${CFLAGS} -c ioconf.c
d163 2
a164 3
param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .
d166 2
a167 2
param.o: param.c Makefile
	${CC} ${CFLAGS} ${PARAM} -c param.c
a168 3
vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh ${KERN_IDENT} ${IDENT}
	${CC} ${CFLAGS} -c vers.c
d170 2
a171 2
vnode_if.c vnode_if.h : $S/kern/vnode_if.sh $S/kern/vnode_if.src
	AWK="${AWK}" sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
@


1.4
log
@update from netbsd (verbatim)
@
text
@d129 3
a131 1
uipc_proto.o vfs_conf.o kern_xxx.o : Makefile
@


1.3
log
@from netbsd; Switch to ncr_si (will just do PIO for now) and cleanup
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.sun3,v 1.34.2.1 1995/11/18 07:16:06 gwr Exp $
@


1.2
log
@do not use -fno-builtin for kernels; the reasons why are manifold
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.sun3,v 1.34 1995/09/19 23:54:29 thorpej Exp $
d9 1
a9 1
#	/sys/conf/``machineid''
d13 1
a13 1
#	/sys/conf/Makefile.``machinetype''
d114 1
a114 1
	    ioconf.c param.c| \
d122 2
a123 2
# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile
d125 2
a126 2
# depends on device configuration
conf.o : Makefile
d129 1
a129 6
uipc_proto.o vfs_conf.o : Makefile

# depends on value of SYMTAB_SPACE
db_aout.o : Makefile

sun3_startup.o pmap.o kern_xxx.o: Makefile
@


1.1
log
@Initial revision
@
text
@d38 1
a38 1
CFLAGS= -Werror -fno-builtin -msoft-float ${DEBUG} ${COPTS}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

