head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2002.12.31.16.35.41;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2002.03.14.03.16.01;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.04.08.33.49;	author niklas;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	96.10.11.23.06.47;	author deraadt;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	96.05.03.16.04.03;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.58;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.58;	author deraadt;	state Exp;
branches;
next	;

1.3.14.1
date	2001.10.31.03.08.00;	author nate;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.3.14.3;

1.3.14.3
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.4.4.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.6
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: exec_sun.c,v 1.5 2002/03/14 03:16:01 millert Exp $ */
/*	$NetBSD: exec_sun.c,v 1.6 1996/06/20 03:59:41 gwr Exp $ */

/*-
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	@@(#)boot.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <machine/mon.h>
#include <a.out.h>

#include "stand.h"

extern int debug;
int errno;

/*ARGSUSED*/
int
exec_sun(file, loadaddr)
	char	*file;
	char	*loadaddr;
{
	register int io;
	struct exec x;
	int cc, magic;
	void (*entry)();
	register char *cp;
	register int *ip;

#ifdef	DEBUG
	printf("exec_sun: file=%s loadaddr=0x%x\n", file, loadaddr);
#endif

	io = open(file, 0);
	if (io < 0)
		return(-1);

	/*
	 * Read in the exec header, and validate it.
	 */
	if (read(io, (char *)&x, sizeof(x)) != sizeof(x))
		goto shread;
	if (N_BADMAG(x)) {
		errno = EFTYPE;
		goto closeout;
	}

	cp = loadaddr;
	magic = N_GETMAGIC(x);
	if (magic == ZMAGIC)
		cp += sizeof(x);
	entry = (void (*)())cp;

	/*
	 * Leave a copy of the exec header before the text.
	 * The sun3 kernel uses this to verify that the
	 * symbols were loaded by this boot program.
	 */
	bcopy(&x, cp - sizeof(x), sizeof(x));

	/*
	 * Read in the text segment.  Note:
	 * a.out header part of text in zmagic
	 */
	printf("%d", x.a_text);
	cc = x.a_text;
	if (magic == ZMAGIC) 
		cc -= sizeof(x);
	if (read(io, cp, cc) != cc)
		goto shread;
	cp += cc;

	/*
	 * NMAGIC may have a gap between text and data.
	 */
	if (magic == NMAGIC) {
		register int mask = N_PAGSIZ(x) - 1;
		while ((int)cp & mask)
			*cp++ = 0;
	}

	/*
	 * Read in the data segment.
	 */
	printf("+%d", x.a_data);
	if (read(io, cp, x.a_data) != x.a_data)
		goto shread;
	cp += x.a_data;

	/*
	 * Zero out the BSS section.
	 * (Kernel doesn't care, but do it anyway.)
	 */
	printf("+%d", x.a_bss);
	cc = x.a_bss;
	while ((int)cp & 3) {
		*cp++ = 0;
		--cc;
	}
	ip = (int *)cp;
	cp += cc;
	while ((char *)ip < cp)
		*ip++ = 0;

	/*
	 * Read in the symbol table and strings.
	 * (Always set the symtab size word.)
	 */
	*ip++ = x.a_syms;
	cp = (char *) ip;

	if (x.a_syms > 0) {

		/* Symbol table and string table length word. */
		cc = x.a_syms;
		printf("+[%d", cc);
		cc += sizeof(int);	/* strtab length too */
		if (read(io, cp, cc) != cc)
			goto shread;
		cp += x.a_syms;
		ip = (int *)cp;  	/* points to strtab length */
		cp += sizeof(int);

		/* String table.  Length word includes itself. */
		cc = *ip;
		printf("+%d]", cc);
		cc -= sizeof(int);
		if (cc <= 0)
			goto shread;
		if (read(io, cp, cc) != cc)
			goto shread;
		cp += cc;
	}
	printf("=0x%x\n", cp - loadaddr);
	close(io);

	printf("Starting program at 0x%x\n", (int)entry);
	asm("_exec_sun_call_entry:");
	(*entry)();
	panic("exec returned");

shread:
	printf("exec: short read\n");
	errno = EIO;
closeout:
	close(io);
	return(-1);
}
@


1.5
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_sun.c,v 1.4 2001/07/04 08:33:49 niklas Exp $ */
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_sun.c,v 1.6 1996/06/20 03:59:41 gwr Exp $ */
d131 1
a131 1
	ip = (int*)cp;
d133 1
a133 1
	while ((char*)ip < cp)
d141 1
a141 1
	cp = (char*) ip;
d152 1
a152 1
		ip = (int*)cp;  	/* points to strtab length */
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_sun.c,v 1.4 2001/07/04 08:33:49 niklas Exp $ */
d131 1
a131 1
	ip = (int *)cp;
d133 1
a133 1
	while ((char *)ip < cp)
d141 1
a141 1
	cp = (char *) ip;
d152 1
a152 1
		ip = (int *)cp;  	/* points to strtab length */
@


1.4.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_sun.c,v 1.4.4.1 2002/06/11 03:39:01 art Exp $ */
@


1.3
log
@sync + our changes
@
text
@d1 1
@


1.3.14.1
log
@Sync the SMP branch to something just after 3.0
@
text
@a0 1
/*	$OpenBSD$ */
@


1.3.14.2
log
@Merge in -current from about a week ago
@
text
@d131 1
a131 1
	ip = (int *)cp;
d133 1
a133 1
	while ((char *)ip < cp)
d141 1
a141 1
	cp = (char *) ip;
d152 1
a152 1
		ip = (int *)cp;  	/* points to strtab length */
@


1.3.14.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_sun.c,v 1.3.14.2 2002/03/28 11:26:45 niklas Exp $ */
@


1.2
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: exec_sun.c,v 1.5 1996/01/29 23:41:06 gwr Exp $ */
d92 2
a93 1
	 * Read in the text segment.
d96 4
a99 1
	if (read(io, cp, x.a_text) != x.a_text)
d101 1
a101 1
	cp += x.a_text;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: exec_sun.c,v 1.4 1995/09/23 03:42:40 gwr Exp $ */
d45 1
a162 6
	if (debug) {
		printf("Debug mode - enter c to continue...");
		/* This will print "\nAbort at ...\n" */
		asm("	trap #0");
	}

d164 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
