head	1.31;
access;
symbols
	SMP_SYNC_A:1.31
	SMP_SYNC_B:1.31
	UBC_SYNC_A:1.31
	OPENBSD_3_2:1.30.0.4
	OPENBSD_3_2_BASE:1.30
	OPENBSD_3_1:1.30.0.2
	OPENBSD_3_1_BASE:1.30
	UBC_SYNC_B:1.30
	UBC:1.29.0.2
	UBC_BASE:1.29
	OPENBSD_3_0:1.27.0.2
	OPENBSD_3_0_BASE:1.27
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_9:1.21.0.4
	OPENBSD_2_8:1.21.0.2
	OPENBSD_2_8_BASE:1.21
	OPENBSD_2_7:1.19.0.2
	OPENBSD_2_7_BASE:1.19
	SMP:1.17.0.12
	SMP_BASE:1.17
	kame_19991208:1.17
	OPENBSD_2_6:1.17.0.10
	OPENBSD_2_6_BASE:1.17
	OPENBSD_2_5:1.17.0.8
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.17.0.6
	OPENBSD_2_4_BASE:1.17
	OPENBSD_2_3:1.17.0.4
	OPENBSD_2_3_BASE:1.17
	OPENBSD_2_2:1.17.0.2
	OPENBSD_2_2_BASE:1.17
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.31
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.30;

1.30
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2001.12.05.01.57.15;	author provos;	state Exp;
branches
	1.29.2.1;
next	1.28;

1.28
date	2001.11.30.20.59.12;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2001.07.06.02.07.44;	author provos;	state Exp;
branches;
next	1.26;

1.26
date	2001.06.13.07.38.42;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2001.05.30.20.35.39;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2001.05.13.02.37.30;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2001.05.10.22.46.49;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2001.05.05.20.56.53;	author art;	state Exp;
branches;
next	1.21;

1.21
date	2000.07.14.14.24.54;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2000.07.06.15.25.04;	author ho;	state Exp;
branches;
next	1.19;

1.19
date	2000.04.30.15.29.47;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.02.23.01.46;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	97.09.11.16.09.58;	author kstailey;	state Exp;
branches
	1.17.12.1;
next	1.16;

1.16
date	97.09.08.18.08.51;	author kstailey;	state Exp;
branches;
next	1.15;

1.15
date	97.09.08.01.30.30;	author kstailey;	state Exp;
branches;
next	1.14;

1.14
date	97.09.07.14.05.17;	author kstailey;	state Exp;
branches;
next	1.13;

1.13
date	97.02.14.23.50.18;	author kstailey;	state Exp;
branches;
next	1.12;

1.12
date	97.02.14.19.24.05;	author kstailey;	state Exp;
branches;
next	1.11;

1.11
date	97.02.14.18.15.27;	author kstailey;	state Exp;
branches;
next	1.10;

1.10
date	97.02.14.18.01.59;	author kstailey;	state Exp;
branches;
next	1.9;

1.9
date	97.02.14.17.57.06;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	97.02.14.17.52.26;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	97.02.14.17.49.36;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	96.12.11.11.13.02;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.10.11.23.06.33;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.03.16.03.52;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.14.05.26.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.13.04.06.46;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.55;	author deraadt;	state Exp;
branches;
next	;

1.17.12.1
date	2000.03.24.09.08.52;	author niklas;	state Exp;
branches;
next	1.17.12.2;

1.17.12.2
date	2001.05.14.21.37.30;	author niklas;	state Exp;
branches;
next	1.17.12.3;

1.17.12.3
date	2001.07.04.10.24.01;	author niklas;	state Exp;
branches;
next	1.17.12.4;

1.17.12.4
date	2001.10.31.03.08.00;	author nate;	state Exp;
branches;
next	1.17.12.5;

1.17.12.5
date	2001.12.05.00.39.14;	author niklas;	state Exp;
branches;
next	1.17.12.6;

1.17.12.6
date	2002.03.06.02.04.47;	author niklas;	state Exp;
branches;
next	1.17.12.7;

1.17.12.7
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.17.12.8;

1.17.12.8
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.29.2.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.29.2.2;

1.29.2.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.31
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: param.h,v 1.30 2002/03/14 01:26:46 millert Exp $	*/
/*	$NetBSD: param.h,v 1.34 1996/03/04 05:04:40 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: Utah Hdr: machparam.h 1.16 92/12/20
 *	from: @@(#)param.h	8.1 (Berkeley) 6/10/93
 */

#ifndef	_MACHINE_PARAM_H_

/*
 * Machine dependent constants for the Sun3 series.
 */
#define	_MACHINE	sun3
#define	MACHINE		"sun3"

/*
 * Round p (pointer or byte index) up to a correctly-aligned value
 * for all data types (int, long, ...).   The result is u_int and
 * must be cast to any desired pointer type.
 */

#define	PGSHIFT		13		/* LOG2(NBPG) */

#define	PAGE_SHIFT	13
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define SEGSHIFT	17	        /* LOG2(NBSG) */
#define NBSG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSG-1)	/* byte offset into segment */

#define	KERNBASE	0x0E000000	/* start of kernel virtual */
#define	KERNTEXTOFF	0x0E004000	/* start of kernel text */

#include <m68k/param.h>

#define MAXBSIZE 0x8000		/* XXX temp until sun3 dma chaining */

#define	MSGBUFOFF	0x200
#define MSGBUFSIZE	(NBPG - MSGBUFOFF)

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)

/*
 * spl functions; all are done in-line
 */

#include <machine/psl.h>
#if defined(_KERNEL) && !defined(_LOCORE)
#include <machine/cpu.h>

extern void _delay(unsigned);
#define delay(us)	_delay((us)<<8)
#define	DELAY(n)	delay(n)
#endif	/* _KERNEL && !_LOCORE */

#endif	/* _MACHINE_PARAM_H_ */
@


1.30
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2001/12/05 01:57:15 provos Exp $	*/
@


1.29
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.28 2001/11/30 20:59:12 miod Exp $	*/
d96 1
a96 1
extern void _delay __P((unsigned));
@


1.29.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2001/12/05 01:57:15 provos Exp $	*/
d96 1
a96 1
extern void _delay(unsigned);
@


1.29.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29.2.1 2002/06/11 03:39:01 art Exp $	*/
@


1.28
log
@Remove duplicates with <m68k/param.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27 2001/07/06 02:07:44 provos Exp $	*/
d82 5
a86 5
 * Size of kernel malloc arena in logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(2048*1024/PAGE_SIZE)
#endif
@


1.27
log
@change MSIZE to 256, okay @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2001/06/13 07:38:42 miod Exp $	*/
d67 2
a68 1
#define NBSG		0x20000	/* bytes/segment */
a69 1
#define SEGSHIFT	17	        /* LOG2(NBSG) */
a76 19

/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* large enough for ether MTU */
#define	MCLOFSET	(MCLBYTES - 1)
#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
#endif
#endif
@


1.26
log
@Recent changes in sys/netinet/ assume you get setsoftnet() via
<machine/param.h>, which was not the case for these arches.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.25 2001/05/30 20:35:39 miod Exp $	*/
d85 1
a85 1
#define	MSIZE		128		/* size of an mbuf */
@


1.25
log
@Define msgbuf area size better, gets rid of occasionnal noise in dmesg
ouptput.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.24 2001/05/13 02:37:30 millert Exp $	*/
d47 1
a47 1
#ifndef	MACHINE
d112 2
a114 1
#if defined(_KERNEL) && !defined(_LOCORE)
d120 1
a120 1
#endif	/* MACHINE */
@


1.24
log
@PAGE_MASK is (PAGE_SIZE - 1), *not* (PAGE_SHIFT - 1)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.23 2001/05/10 22:46:49 miod Exp $	*/
d97 2
a98 1
#define MSGBUFSIZE	(NBPG >> 1)
@


1.23
log
@Provide PAGE_{MASK,SHIFT,SIZE} constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 2001/05/05 20:56:53 art Exp $	*/
d65 1
a65 1
#define	PAGE_MASK	(PAGE_SHIFT - 1)
@


1.22
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2000/07/14 14:24:54 miod Exp $	*/
d62 4
@


1.21
log
@Move splXXXX() stuff from <machine/param.h> to <machine/psl.h>, and
define more inline functions for dealing with this.
From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2000/07/06 15:25:04 ho Exp $	*/
d76 1
a76 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d96 1
a96 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d99 1
a99 1
#define	NKMEMCLUSTERS	(2048*1024/CLBYTES)
@


1.20
log
@Add spllowersoftclock(), same as splsoftclock(). (art@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2000/04/30 15:29:47 miod Exp $	*/
a106 57

#define _spl(s) \
({ \
	register int _spl_r; \
\
	__asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
		"=&d" (_spl_r) : "di" (s)); \
	_spl_r; \
})

/*
 * The rest of this is sun3 specific, because other ports may
 * need to do special things in spl0() (i.e. simulate SIR).
 * Suns have a REAL interrupt register, so spl0() and splx(s)
 * have no need to check for any simulated interrupts, etc.
 */

#define spl0()  _spl(PSL_S|PSL_IPL0)
#define spl1()  _spl(PSL_S|PSL_IPL1)
#define spl2()  _spl(PSL_S|PSL_IPL2)
#define spl3()  _spl(PSL_S|PSL_IPL3)
#define spl4()  _spl(PSL_S|PSL_IPL4)
#define spl5()  _spl(PSL_S|PSL_IPL5)
#define spl6()  _spl(PSL_S|PSL_IPL6)
#define spl7()  _spl(PSL_S|PSL_IPL7)
#define splx(x)  _spl(x)

/* IPL used by soft interrupts: netintr(), softclock() */
#define spllowersoftclock() spl1()
#define splsoftclock()      spl1()
#define splsoftnet()        spl1()

/* Highest block device (strategy) IPL. */
#define splbio()        spl2()

/* Highest network interface IPL. */
#define splnet()        spl3()

/* Highest tty device IPL. */
#define spltty()        spl4()

/* Requirement: imp >= (highest network, tty, or disk IPL) */
#define splimp()        spl4()

/* Intersil clock hardware interrupts (hard-wired at 5) */
#define splclock()      spl5()
#define splstatclock()  splclock()

/* Zilog Serial hardware interrupts (hard-wired at 6) */
#define splzs()         spl6()

/* Block out all interrupts (except NMI of course). */
#define splhigh()       spl7()
#define splsched()      spl7()

/* Get current sr value (debug, etc.) */
extern int getsr __P((void));
@


1.19
log
@Fix kernel msgbuf buffer size and position
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2000/03/02 23:01:46 todd Exp $	*/
d135 3
a137 2
#define splsoftclock()  spl1()
#define splsoftnet()    spl1()
@


1.18
log
@sun3 is alive, thanks to Miod Vallat <miodrag@@ifrance.com>
add ksyms, proto fix.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 1997/09/11 16:09:58 kstailey Exp $	*/
d93 1
a93 1
#define MSGBUFSIZE	NBPG
@


1.17
log
@activate sun3 SCSI DVMA
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 1997/09/08 18:08:51 kstailey Exp $	*/
d93 2
d113 1
a113 1
		"&=d" (_spl_r) : "di" (s)); \
@


1.17.12.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a92 2
#define MSGBUFSIZE	NBPG

d111 1
a111 1
		"=&d" (_spl_r) : "di" (s)); \
@


1.17.12.2
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2000/07/14 14:24:54 miod Exp $	*/
d93 1
a93 1
#define MSGBUFSIZE	(NBPG >> 1)
d107 56
@


1.17.12.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17.12.2 2001/05/14 21:37:30 niklas Exp $	*/
d47 1
a47 1
#ifndef	_MACHINE_PARAM_H_
a62 4
#define	PAGE_SHIFT	13
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

d76 1
a76 1
 * MCLBYTES must be no larger than the software page size, and,
d93 1
a93 2
#define	MSGBUFOFF	0x200
#define MSGBUFSIZE	(NBPG - MSGBUFOFF)
d96 1
a96 1
 * Size of kernel malloc arena in logical pages
d99 1
a99 1
#define	NKMEMCLUSTERS	(2048*1024/PAGE_SIZE)
d107 1
a108 2
#include <machine/cpu.h>

d114 1
a114 1
#endif	/* _MACHINE_PARAM_H_ */
@


1.17.12.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17.12.3 2001/07/04 10:24:01 niklas Exp $	*/
d85 1
a85 1
#define	MSIZE		256		/* size of an mbuf */
@


1.17.12.5
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17.12.4 2001/10/31 03:08:00 nate Exp $	*/
d67 2
a69 2
#define NBSG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSG-1)	/* byte offset into segment */
d77 19
@


1.17.12.6
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d82 5
a86 5
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
@


1.17.12.7
log
@Merge in -current from about a week ago
@
text
@d96 1
a96 1
extern void _delay(unsigned);
@


1.17.12.8
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17.12.7 2002/03/28 11:26:45 niklas Exp $	*/
@


1.16
log
@remove more stuff redundant to m68k/param.h
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 1997/09/08 01:30:30 kstailey Exp $	*/
a53 3
#define	_MACHINE_ARCH	m68k
#define	MACHINE_ARCH	"m68k"
#define	MID_MACHINE	MID_M68K
d71 21
@


1.15
log
@include <m68k/param.h>
remove some redundant (and conflicting) #defines.  There may be more
redundant #defines that I will clean up later.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 1997/09/07 14:05:17 kstailey Exp $	*/
a63 2
#define	ALIGN(p)	(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)

a70 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
a75 19
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define	MSIZE		128		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* large enough for ether MTU */
#define	MCLOFSET	(MCLBYTES - 1)
#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
#endif
#endif

/*
a80 20

/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
@


1.14
log
@switch from private Mach derived conversion macros to m68k ones
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 1997/02/14 23:50:18 kstailey Exp $	*/
d63 1
a63 1
#define	ALIGNBYTES	3
a65 2
#define	NBPG		8192		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
d76 1
a76 14
#define	DEV_BSIZE	512
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define	CLSIZE		1
#define	CLSIZELOG2	0

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */

#define	UPAGES		2		/* pages of u-area */
#define	USPACE		(UPAGES << PGSHIFT)
@


1.13
log
@back out changes to rei function
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 1997/02/14 19:24:05 kstailey Exp $	*/
a137 13

/*
 * Mach derived conversion macros
 */
#define sun3_round_seg(x)	((((unsigned)(x)) + SEGOFSET) & ~SEGOFSET)
#define sun3_trunc_seg(x)	((unsigned)(x) & ~SEGOFSET)
#define sun3_btos(x)		((unsigned)(x) >> SEGSHIFT)
#define sun3_stob(x)		((unsigned)(x) << SEGSHIFT)

#define sun3_round_page(x)	((((unsigned)(x)) + PGOFSET) & ~PGOFSET)
#define sun3_trunc_page(x)	((unsigned)(x) & ~PGOFSET)
#define sun3_btop(x)		((unsigned)(x) >> PGSHIFT)
#define sun3_ptob(x)		((unsigned)(x) << PGSHIFT)
@


1.12
log
@move prototype of spl0() to param.h
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 1997/02/14 18:15:27 kstailey Exp $	*/
d153 1
a153 1
 * spl functions; all but spl0 are done in-line
d174 1
d182 1
a209 5

void spl0 __P((void));		/* XXX where should this go? */

/* watch out for side effects */
#define	splx(s)		(s & PSL_IPL ? _spl(s) : spl0())
@


1.11
log
@remove old #define of splx() and update rei funciton in locore.s
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 1997/02/14 18:01:59 kstailey Exp $	*/
d208 2
@


1.10
log
@change spl0 from macro to assember function in locore.s
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1997/02/14 17:57:06 kstailey Exp $	*/
a180 1
#define splx(x)	_spl(x)
@


1.9
log
@change inline version of _spl() to macro
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1997/02/14 17:52:26 kstailey Exp $	*/
a173 1
#define spl0()  _spl(PSL_S|PSL_IPL0)
d209 3
@


1.8
log
@add tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d152 4
d158 8
a165 22
#if defined(_KERNEL) && !defined(_LOCORE)

#ifndef __GNUC__
/* No inline, use real function in locore.s */
extern int _spl(int new);
#else	/* GNUC */
/*
 * Define an inline function for PSL manipulation.
 * This is as close to a macro as one can get.
 * If not optimizing, the one in locore.s is used.
 * (See the GCC extensions info document.)
 */
extern __inline__ int _spl(int new)
{
	register int old;

	__asm __volatile (
		"clrl %0; movew sr,%0; movew %1,sr" :
			"&=d" (old) : "di" (new));
	return (old);
}
#endif	/* GNUC */
d214 1
@


1.7
log
@move spl() stuff from psl.h to param.h
@
text
@d1 1
@


1.6
log
@MCLSHIFT=11, and calc MCLBYTES in such terms. found by pefo
@
text
@a150 1
/* XXX - Does this really belong here? -gwr */
d154 69
@


1.5
log
@sync + our changes
@
text
@a99 1
#define	MCLBYTES	2048		/* large enough for ether MTU */
d101 1
@


1.4
log
@sync with 0430.
@
text
@d51 2
a52 2
#define	_MACHINE     sun3
#define	MACHINE     "sun3"
d55 1
a55 1
#define MID_MACHINE MID_M68K
@


1.3
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.30 1995/11/10 22:04:48 gwr Exp $	*/
d51 1
d53 1
d154 3
a156 2
#ifdef _KERNEL
#ifndef LOCORE
d158 1
a158 9
extern int cpuspeed;
static inline void delay2us()
{
	register int n = cpuspeed;

	__asm __volatile ("0: subql #4,%0; jgt 0b" : "=d" (n) : "0" (n));
}
#endif	/* !LOCORE */
#endif	/* _KERNEL */
@


1.2
log
@from netbsd:Need to define KERNTEXTOFF for kvm_mkdb
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.29.2.1 1995/11/10 22:09:00 gwr Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.29 1995/06/27 14:37:22 gwr Exp $	*/
d73 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
