head	1.19;
access;
symbols
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	UBC_SYNC_A:1.19
	OPENBSD_3_2:1.18.0.4
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	UBC_SYNC_B:1.18
	UBC:1.16.0.2
	UBC_BASE:1.16
	OPENBSD_3_0:1.15.0.2
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	SMP:1.8.0.10
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.8
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7;
locks; strict;
comment	@ * @;


1.19
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.18;

1.18
date	2002.03.14.03.16.01;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2001.11.06.18.41.10;	author art;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2001.08.25.11.37.26;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.20.19.49.03;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.25.00.43.17;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.05.22.34.22;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.03.01.48.07;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.14.14.26.18;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.02.23.01.46;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	98.03.01.00.37.48;	author niklas;	state Exp;
branches
	1.8.10.1;
next	1.7;

1.7
date	97.04.05.20.22.02;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.02.14.23.50.17;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.02.14.19.24.04;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.02.14.19.08.21;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	97.02.14.18.55.10;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	97.02.14.18.41.48;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	97.01.16.04.04.08;	author kstailey;	state Exp;
branches;
next	;

1.8.10.1
date	2000.03.24.09.08.52;	author niklas;	state Exp;
branches;
next	1.8.10.2;

1.8.10.2
date	2001.05.14.21.37.30;	author niklas;	state Exp;
branches;
next	1.8.10.3;

1.8.10.3
date	2001.07.04.10.24.01;	author niklas;	state Exp;
branches;
next	1.8.10.4;

1.8.10.4
date	2001.10.31.03.08.00;	author nate;	state Exp;
branches;
next	1.8.10.5;

1.8.10.5
date	2001.11.13.21.04.18;	author niklas;	state Exp;
branches;
next	1.8.10.6;

1.8.10.6
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.8.10.7;

1.8.10.7
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.16.2.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.16.2.2;

1.16.2.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.19
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: machdep.h,v 1.18 2002/03/14 03:16:01 millert Exp $	*/

/*
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: Utah Hdr: cpu.h 1.16 91/03/25
 *	from: @@(#)cpu.h	7.7 (Berkeley) 6/27/91
 *	cpu.h,v 1.2 1993/05/22 07:58:17 cgd Exp
 */

#ifdef _KERNEL

#define	FC_CONTROL	3	/* sun control space
				   XXX HP uses FC_PURGE instead */

/* Prototypes... */

struct frame;
struct fpframe;
struct pcb;
struct proc;
struct reg;
struct trapframe;
struct pmap;

extern int cache_size;
extern int fputype;

extern label_t *nofault;

extern vm_offset_t vmmap;	/* XXX - See mem.c */

/* Kernel virtual address space available: */
extern vm_offset_t virtual_avail, virtual_end;
/* Physical address space available: */
extern vm_offset_t avail_start, avail_end;
/* The "hole" (used to skip the Sun3/50 video RAM) */
extern vm_offset_t hole_start, hole_size;

void	ICIA(void);
void	DCIA(void);
void	DCIU(void);

void	cache_enable(void);
void	cache_flush_page(vm_offset_t pgva);
void	cache_flush_segment(vm_offset_t sgva);
void	cache_flush_context(void);

int 	cachectl(int req, caddr_t addr, int len);

void	cninit(void);

void	dumpconf(void);
void	dumpsys(void);

void	fb_unblank(void);

int 	fpu_emulate(struct frame *, struct fpframe *);

/* Backward compatibility... */
#define getsr	_getsr

void  **getvbr(void);

vm_offset_t high_segment_alloc(int npages);

void	initfpu(void);

void	intreg_init(void);

void	isr_init(void);
void	isr_config(void);

void	m68881_save(struct fpframe *);
void	m68881_restore(struct fpframe *);

void	proc_do_uret(void);
void	proc_trampoline(void);

void	pmap_bootstrap(void);
vm_offset_t pmap_map(vm_offset_t, vm_offset_t, vm_offset_t, int);
int 	pmap_fault_reload(struct pmap *, vm_offset_t, int);
void	pmap_get_ksegmap(u_char *);
void	pmap_get_pagemap(int *pt, int off);

int	reboot2(int, char *);

void	savectx(struct pcb *);

void	setvbr(void **);

void	sun3_mon_abort(void);
void	sun3_mon_halt(void);
void	sun3_mon_reboot(char *);
void	sun3_pmeg_init(void);
void	sun3_reserve_pmeg(int pmeg_num);

void	swapconf(void);
void	swapgeneric(void);

void	switch_exit(struct proc *);

#endif	/* _KERNEL */
@


1.18
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.17 2002/03/14 01:26:46 millert Exp $	*/
@


1.17
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.16 2001/11/06 18:41:10 art Exp $	*/
d99 1
a99 1
void**	getvbr(void);
@


1.16
log
@Let fork1, uvm_fork, and cpu_fork take a function/argument pair as argument,
instead of doing fork1, cpu_set_kpc. This lets us retire cpu_set_kpc and
avoid a multiprocessor race.

This commit breaks vax because it doesn't look like any other arch, someone
working on vax might want to look at this and try to adapt the code to be
more like the rest of the world.

Idea and uvm parts from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.15 2001/08/25 11:37:26 espie Exp $	*/
d76 3
a78 3
void	ICIA __P((void));
void	DCIA __P((void));
void	DCIU __P((void));
d80 1
a80 1
void	cache_enable __P((void));
d85 1
a85 1
int 	cachectl __P((int req, caddr_t addr, int len));
d87 1
a87 1
void	cninit __P((void));
d89 2
a90 2
void	dumpconf __P((void));
void	dumpsys __P((void));
d92 1
a92 1
void	fb_unblank __P((void));
d94 1
a94 1
int 	fpu_emulate __P((struct frame *, struct fpframe *));
d99 1
a99 1
void**	getvbr __P((void));
d101 1
a101 1
vm_offset_t high_segment_alloc __P((int npages));
d103 1
a103 1
void	initfpu __P((void));
d105 1
a105 1
void	intreg_init __P((void));
d107 2
a108 2
void	isr_init __P((void));
void	isr_config __P((void));
d110 2
a111 2
void	m68881_save __P((struct fpframe *));
void	m68881_restore __P((struct fpframe *));
d113 2
a114 2
void	proc_do_uret __P((void));
void	proc_trampoline __P((void));
d116 5
a120 5
void	pmap_bootstrap __P((void));
vm_offset_t pmap_map __P((vm_offset_t, vm_offset_t, vm_offset_t, int));
int 	pmap_fault_reload __P((struct pmap *, vm_offset_t, int));
void	pmap_get_ksegmap __P((u_char *));
void	pmap_get_pagemap __P((int *pt, int off));
d122 1
a122 1
int	reboot2 __P((int, char *));
d124 1
a124 1
void	savectx __P((struct pcb *));
d126 1
a126 1
void	setvbr __P((void **));
d128 5
a132 5
void	sun3_mon_abort __P((void));
void	sun3_mon_halt __P((void));
void	sun3_mon_reboot __P((char *));
void	sun3_pmeg_init __P((void));
void	sun3_reserve_pmeg __P((int pmeg_num));
d134 2
a135 2
void	swapconf __P((void));
void	swapgeneric __P((void));
d137 1
a137 1
void	switch_exit __P((struct proc *));
@


1.16.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.16 2001/11/06 18:41:10 art Exp $	*/
d76 3
a78 3
void	ICIA(void);
void	DCIA(void);
void	DCIU(void);
d80 1
a80 1
void	cache_enable(void);
d85 1
a85 1
int 	cachectl(int req, caddr_t addr, int len);
d87 1
a87 1
void	cninit(void);
d89 2
a90 2
void	dumpconf(void);
void	dumpsys(void);
d92 1
a92 1
void	fb_unblank(void);
d94 1
a94 1
int 	fpu_emulate(struct frame *, struct fpframe *);
d99 1
a99 1
void  **getvbr(void);
d101 1
a101 1
vm_offset_t high_segment_alloc(int npages);
d103 1
a103 1
void	initfpu(void);
d105 1
a105 1
void	intreg_init(void);
d107 2
a108 2
void	isr_init(void);
void	isr_config(void);
d110 2
a111 2
void	m68881_save(struct fpframe *);
void	m68881_restore(struct fpframe *);
d113 2
a114 2
void	proc_do_uret(void);
void	proc_trampoline(void);
d116 5
a120 5
void	pmap_bootstrap(void);
vm_offset_t pmap_map(vm_offset_t, vm_offset_t, vm_offset_t, int);
int 	pmap_fault_reload(struct pmap *, vm_offset_t, int);
void	pmap_get_ksegmap(u_char *);
void	pmap_get_pagemap(int *pt, int off);
d122 1
a122 1
int	reboot2(int, char *);
d124 1
a124 1
void	savectx(struct pcb *);
d126 1
a126 1
void	setvbr(void **);
d128 5
a132 5
void	sun3_mon_abort(void);
void	sun3_mon_halt(void);
void	sun3_mon_reboot(char *);
void	sun3_pmeg_init(void);
void	sun3_reserve_pmeg(int pmeg_num);
d134 2
a135 2
void	swapconf(void);
void	swapgeneric(void);
d137 1
a137 1
void	switch_exit(struct proc *);
@


1.16.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.16.2.1 2002/06/11 03:39:01 art Exp $	*/
@


1.15
log
@One regdump to dump them all...

(moid@@ wants that commit, because it interferes with stuff he's cleaning,
and he's prepared to clean up stuff I may have forgotten, even though this
was tested)
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.14 2001/08/20 19:49:03 miod Exp $	*/
a85 2

void	child_return __P((void *));
@


1.14
log
@Bring get[sd]fc() prototypes to <m68k/cpu.h>, this will be needed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.13 2001/06/25 00:43:17 mickey Exp $	*/
a124 2

void	regdump __P((struct frame *, int));
@


1.13
log
@cold is in systm now
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.12 2001/05/05 22:34:22 art Exp $	*/
a96 3

int 	getdfc __P((void));
int 	getsfc __P((void));
@


1.12
log
@Rename configure() to cpu_configure().
Move it from cpu_startup() to main().
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.11 2001/01/03 01:48:07 miod Exp $	*/
a62 1
extern int cold;
@


1.11
log
@netintr() doesn't exist anymore
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.10 2000/07/14 14:26:18 miod Exp $	*/
a89 1
void	configure __P((void));
@


1.10
log
@Remove unneeded definition
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.9 2000/03/02 23:01:46 todd Exp $	*/
a118 2

void	netintr __P((void));
@


1.9
log
@sun3 is alive, thanks to Miod Vallat <miodrag@@ifrance.com>
add ksyms, proto fix.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.8 1998/03/01 00:37:48 niklas Exp $	*/
a51 5
#define	SPL1		(PSL_S | PSL_IPL1); /* used in locore.s
					     * XXX mvme68k does this in
					     * genassym.c
					     */

d102 3
@


1.8
log
@Merge of MACHINE_NEW_CONTIG (aka MNN) code from Chuck Cranor,
<chuck@@openbsd.org>. This code is as of yet disabled on all platforms,
actually not yet supported on more than mvme68k, although other
platforms are expected soon, as code is already available.
This code makes handling of multiple physical memory regions
consistent over all platforms, as well as keeping the performance of
maintaining a single continuous memory chunk.  It is also a
requirement for the upcoming UVM replacement VM system.

What I did in this merge: just declared the pmap_map function in a
MD include file per port that needs it.  It's not an exported pmap
interface, says Chuck.  It ended up in differnt include files on
differnet ports, as I tried to follow the current policy on a per-arch
basis.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.7 1997/04/05 20:22:02 kstailey Exp $	*/
d93 1
a93 1
void	child_return __P((struct proc *));
@


1.8.10.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d93 1
a93 1
void	child_return __P((void *));
@


1.8.10.2
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.11 2001/01/03 01:48:07 miod Exp $	*/
d52 5
a107 3
/* Backward compatibility... */
#define getsr	_getsr

d121 2
@


1.8.10.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.8.10.2 2001/05/14 21:37:30 niklas Exp $	*/
d63 1
d90 1
@


1.8.10.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.8.10.3 2001/07/04 10:24:01 niklas Exp $	*/
d98 3
d128 2
@


1.8.10.5
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d86 2
@


1.8.10.6
log
@Merge in -current from about a week ago
@
text
@d76 3
a78 3
void	ICIA(void);
void	DCIA(void);
void	DCIU(void);
d80 1
a80 1
void	cache_enable(void);
d85 1
a85 1
int 	cachectl(int req, caddr_t addr, int len);
d87 1
a87 1
void	cninit(void);
d89 2
a90 2
void	dumpconf(void);
void	dumpsys(void);
d92 1
a92 1
void	fb_unblank(void);
d94 1
a94 1
int 	fpu_emulate(struct frame *, struct fpframe *);
d99 1
a99 1
void  **getvbr(void);
d101 1
a101 1
vm_offset_t high_segment_alloc(int npages);
d103 1
a103 1
void	initfpu(void);
d105 1
a105 1
void	intreg_init(void);
d107 2
a108 2
void	isr_init(void);
void	isr_config(void);
d110 2
a111 2
void	m68881_save(struct fpframe *);
void	m68881_restore(struct fpframe *);
d113 2
a114 2
void	proc_do_uret(void);
void	proc_trampoline(void);
d116 5
a120 5
void	pmap_bootstrap(void);
vm_offset_t pmap_map(vm_offset_t, vm_offset_t, vm_offset_t, int);
int 	pmap_fault_reload(struct pmap *, vm_offset_t, int);
void	pmap_get_ksegmap(u_char *);
void	pmap_get_pagemap(int *pt, int off);
d122 1
a122 1
int	reboot2(int, char *);
d124 1
a124 1
void	savectx(struct pcb *);
d126 1
a126 1
void	setvbr(void **);
d128 5
a132 5
void	sun3_mon_abort(void);
void	sun3_mon_halt(void);
void	sun3_mon_reboot(char *);
void	sun3_pmeg_init(void);
void	sun3_reserve_pmeg(int pmeg_num);
d134 2
a135 2
void	swapconf(void);
void	swapgeneric(void);
d137 1
a137 1
void	switch_exit(struct proc *);
@


1.8.10.7
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.8.10.6 2002/03/28 11:26:45 niklas Exp $	*/
@


1.7
log
@fpu_type -> fputype
@
text
@d1 2
a2 1
/*	$OpenBSD: machdep.h,v 1.6 1997/02/14 23:50:17 kstailey Exp $	*/
d128 1
@


1.6
log
@back out changes to rei function
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.5 1997/02/14 19:24:04 kstailey Exp $	*/
d68 1
a68 1
extern int fpu_type;
@


1.5
log
@move prototype of spl0() to param.h
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.4 1997/02/14 19:08:21 kstailey Exp $	*/
d48 1
a48 1
#define	FC_CONTROL 3		/* sun control space
d50 5
@


1.4
log
@add prototype of spl0(), but should it go here?
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.3 1997/02/14 18:55:10 kstailey Exp $	*/
a138 2

void	spl0 __P((void));
@


1.3
log
@put back FC_CONTROL
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.2 1997/02/14 18:41:48 kstailey Exp $	*/
d139 2
@


1.2
log
@remove stuff that is in <m68k/cpu.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.h,v 1.1 1997/01/16 04:04:08 kstailey Exp $	*/
d47 3
@


1.1
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a46 24

/*
 * Internal definitions unique to sun3/68k cpu support.
 * These are the "private" declarations - those needed
 * only here in machine-independent code.  The "public"
 * definitions are in cpu.h (used by common code).
 */

/* 680X0 function codes */
#define	FC_USERD	1	/* user data space */
#define	FC_USERP	2	/* user program space */
#define	FC_CONTROL	3	/* sun control space */
#define	FC_SUPERD	5	/* supervisor data space */
#define	FC_SUPERP	6	/* supervisor program space */
#define	FC_CPU		7	/* CPU space */

/* fields in the 68020 cache control register */
#define	IC_ENABLE	0x0001	/* enable instruction cache */
#define	IC_FREEZE	0x0002	/* freeze instruction cache */
#define	IC_CE		0x0004	/* clear instruction cache entry */
#define	IC_CLR		0x0008	/* clear entire instruction cache */

#define IC_CLEAR (IC_CLR|IC_ENABLE)

@

