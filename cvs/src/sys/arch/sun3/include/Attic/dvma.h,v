head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.24
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.22
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.01.16.04.04.06;	author kstailey;	state Exp;
branches
	1.6.14.1
	1.6.24.1;
next	1.5;

1.5
date	97.01.07.23.36.17;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.12.31.06.13.11;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.11.23.08.25.54;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.16.03.49;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.54;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.54;	author deraadt;	state Exp;
branches;
next	;

1.6.14.1
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.6.14.2;

1.6.14.2
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.6.24.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.6.24.2;

1.6.24.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.8
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: dvma.h,v 1.7 2002/03/14 01:26:46 millert Exp $	*/
/*	$NetBSD: dvma.h,v 1.4 1996/11/20 18:57:08 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * DVMA (Direct Virtual Memory Access - like DMA)
 *
 * The Sun3 MMU is presented to secondary masters using DVMA.
 * Before such devices can access kernel memory, that memory
 * must be mapped into the kernel DVMA space.  All DVMA space
 * is presented as slave-accessible memory for VME and OBIO
 * devices, though not at the same address seen by the CPU.
 *
 * Relevant parts of virtual memory map are:
 *
 * 0FE0.0000  monitor map (devices)
 * 0FF0.0000  DVMA space
 * 0FFE.0000  monitor RAM seg.
 * 0FFF.E000  monitor RAM page
 *
 * Note that while the DVMA harware makes the last 1MB visible
 * for secondary masters, the PROM "owns" the last page of it.
 * Also note that OBIO devices can actually see the last 16MB
 * of kernel virtual space.  That can be mostly ignored, except
 * when calculating the alias address for slave access.
 */

/*
 * To convert an address in DVMA space to a slave address,
 * just use a logical AND with one of the following masks.
 * To convert back, just logical OR with the base address.
 */
#define DVMA_OBIO_SLAVE_BASE 0x0F000000
#define DVMA_OBIO_SLAVE_MASK 0x00FFffff	/* 16MB */

#define DVMA_VME_SLAVE_BASE  0x0FF00000	/*  1MB */
#define DVMA_VME_SLAVE_MASK  0x000Fffff	/*  1MB */


/* DVMA is the last 1MB, but the PROM gets the last page. */
#define	DVMA_SPACE_START	0x0FF00000
#define DVMA_SPACE_END  	0x0FFFE000

void dvma_init(void);

/* Allocate/free actual pages of DVMA space. */
caddr_t dvma_malloc(size_t bytes);
void dvma_free(caddr_t addr, size_t bytes);

/* Remap/unmap kernel memory in DVMA space. */
caddr_t dvma_mapin(char *kva, int len);
void dvma_mapout(caddr_t dvma_addr, int len);

/* Convert a kernel DVMA pointer to a slave address. */
long dvma_kvtopa(long kva, int bus);

@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: dvma.h,v 1.6 1997/01/16 04:04:06 kstailey Exp $	*/
@


1.6
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d79 1
a79 1
void dvma_init __P((void));
@


1.6.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: dvma.h,v 1.6 1997/01/16 04:04:06 kstailey Exp $	*/
d79 1
a79 1
void dvma_init(void);
@


1.6.24.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: dvma.h,v 1.6.24.1 2002/06/11 03:39:01 art Exp $	*/
@


1.6.14.1
log
@Merge in -current from about a week ago
@
text
@d79 1
a79 1
void dvma_init(void);
@


1.6.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: dvma.h,v 1.6.14.1 2002/03/28 11:26:45 niklas Exp $	*/
@


1.5
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d78 2
@


1.4
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: dvma.h,v 1.5 1996/12/17 21:11:05 gwr Exp $	*/
a77 2
void dvma_init __P((void));

d79 1
a79 1
caddr_t dvma_malloc __P((size_t bytes));
d83 2
a84 2
caddr_t dvma_mapin __P((char *kva, int len));
void dvma_mapout __P((caddr_t dvma_addr, int len));
d87 1
a87 1
long dvma_kvtopa __P((long kva, int bus));
@


1.3
log
@sync with NetBSD -- copyright changes only
@
text
@d1 1
a1 1
/*	$NetBSD: dvma.h,v 1.4 1996/11/20 18:57:08 gwr Exp $	*/
d78 2
d81 1
a81 1
caddr_t dvma_malloc(size_t bytes);
d85 2
a86 2
caddr_t dvma_mapin(char *kva, int len);
void dvma_mapout(caddr_t dvma_addr, int len);
d89 1
a89 1
long dvma_kvtopa(long kva, int bus);
@


1.2
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: dvma.h,v 1.3 1996/02/20 22:06:28 gwr Exp $	*/
d3 2
a4 2
/*
 * Copyright (c) 1995 Gordon W. Ross
d7 3
d18 1
a18 3
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 4. All advertising materials mentioning features or use of this software
d20 5
a24 1
 *      This product includes software developed by Gordon W. Ross
d26 11
a36 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: dvma.h,v 1.1 1995/09/26 04:02:08 gwr Exp $	*/
a56 16
 * This range could be managed as whole MMU segments.
 * The last segment is pre-allocated (see below)
 */
#define DVMA_SEGMAP_BASE	0x0FF00000
#define DVMA_SEGMAP_SIZE	0x000E0000
#define DVMA_SEGMAP_END (DVMA_SEGMAP_BASE+DVMA_SEGMAP_SIZE)

/*
 * This range is managed as individual pages.
 * The last page is owned by the PROM monitor.
 */
#define DVMA_PAGEMAP_BASE	0x0FFE0000
#define DVMA_PAGEMAP_SIZE	0x0001E000
#define DVMA_PAGEMAP_END (DVMA_PAGEMAP_BASE+DVMA_PAGEMAP_SIZE)

/*
d59 1
a59 1
 * To convert back, use logical OR with DVMA_SEGMAP_BASE.
d68 3
a70 13
#if 1	/* XXX - temporary */
/*
 * XXX - For compatibility, until DVMA is re-worked.
 * Total DVMA space covers SEGMAP + PAGEMAP
 */
#define	DVMA_SPACE_START DVMA_SEGMAP_BASE
#define DVMA_SPACE_END   DVMA_PAGEMAP_END
#define DVMA_SPACE_SIZE	 (DVMA_SPACE_END - DVMA_SPACE_START)
#endif	/* XXX */

/*
 * XXX - These will change!  (will be like the sparc)
 */
d72 1
d76 1
d80 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
