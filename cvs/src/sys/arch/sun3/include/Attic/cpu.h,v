head	1.17;
access;
symbols
	SMP_SYNC_A:1.17
	SMP_SYNC_B:1.17
	UBC_SYNC_A:1.17
	OPENBSD_3_2:1.16.0.2
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	UBC_SYNC_B:1.16
	UBC:1.14.0.2
	UBC_BASE:1.14
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.6
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	SMP:1.10.0.10
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.8
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.6
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.4
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.4
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.16;

1.16
date	2002.06.07.21.33.43;	author nordin;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.06.18.41.10;	author art;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.09.28.20.40.20;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.05.22.34.21;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.02.23.01.45;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	97.11.04.12.32.03;	author kstailey;	state Exp;
branches
	1.10.10.1;
next	1.9;

1.9
date	97.02.14.18.30.42;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	97.02.13.22.32.38;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	97.02.13.22.14.01;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.01.16.04.04.05;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.01.07.23.36.16;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.12.31.06.13.08;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.11.08.02.20.08;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	95.12.21.14.40.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.54;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.54;	author deraadt;	state Exp;
branches;
next	;

1.10.10.1
date	2000.03.24.09.08.52;	author niklas;	state Exp;
branches;
next	1.10.10.2;

1.10.10.2
date	2001.07.04.10.24.00;	author niklas;	state Exp;
branches;
next	1.10.10.3;

1.10.10.3
date	2001.10.31.03.08.00;	author nate;	state Exp;
branches;
next	1.10.10.4;

1.10.10.4
date	2001.11.13.21.04.18;	author niklas;	state Exp;
branches;
next	1.10.10.5;

1.10.10.5
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.10.10.6;

1.10.10.6
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.14.2.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.17
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: cpu.h,v 1.16 2002/06/07 21:33:43 nordin Exp $	*/
/*	$NetBSD: cpu.h,v 1.20 1995/12/21 05:02:10 mycroft Exp $	*/

/*
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: Utah Hdr: cpu.h 1.16 91/03/25
 *	from: @@(#)cpu.h	7.7 (Berkeley) 6/27/91
 *	cpu.h,v 1.2 1993/05/22 07:58:17 cgd Exp
 */

#ifndef _SUN3_CPU_H_
#define _SUN3_CPU_H_

/*
 * Get common m68k CPU definitions.
 */
#include <m68k/cpu.h>

#ifdef _KERNEL

/*
 * Exported definitions unique to sun3/68k cpu support.
 */

/*
 * definitions of cpu-dependent requirements
 * referenced in generic code
 */
#define	cpu_swapin(p)			/* nothing */
#define	cpu_wait(p)			/* nothing */

/*
 * Arguments to hardclock and gatherstats encapsulate the previous
 * machine state in an opaque clockframe.  One the sun3, we use
 * what the hardware pushes on an interrupt (frame format 0).
 */
struct clockframe {
	u_short	sr;		/* sr at time of interrupt */
	u_long	pc;		/* pc at time of interrupt */
	u_short	vo;		/* vector offset (4-word frame) */
};

#define	CLKF_USERMODE(framep)	(((framep)->sr & PSL_S) == 0)
#define	CLKF_PC(framep)		((framep)->pc)
#if 0
/* We would like to do it this way... */
#define	CLKF_INTR(framep)	(((framep)->sr & PSL_M) == 0)
#else
/* but until we start using PSL_M, we have to do this instead */
#define	CLKF_INTR(framep)	(0)	/* XXX */
#endif

extern int astpending;	 /* need to trap before returning to user mode */
#define aston() (astpending++)

/*
 * Preempt the current process if in interrupt from user mode,
 * or after the current trap/syscall if in system mode.
 */
extern int want_resched; /* resched() was called */
#define	need_resched()	{ want_resched++; aston(); }

/*
 * Give a profiling tick to the current process when the user profiling
 * buffer pages are invalid.  On the sun3, request an ast to send us
 * through trap, marking the proc as needing a profiling tick.
 */
#define	need_proftick(p)	((p)->p_flag |= P_OWEUPC, aston())

/*
 * Notify the current process (p) that it has a signal pending,
 * process as soon as possible.
 */
#define	signotify(p)	aston()

/*
 * Software Interrupt Register (SIR)
 * The sun3 has a real software interrupt register set by
 * isr_soft_request() so this scheme just multiplexes four
 * software interrupt `sources' on the level one handler.
 */
extern void isr_soft_request(int level);
union sun3sir {
	int 	sir_any;
	char	sir_which[4];
} sun3sir;

#define SIR_NET  	0
#define SIR_CLOCK	1
#define SIR_SPARE2	2
#define SIR_SPARE3	3

#define	setsoftint()	isr_soft_request(1)
#define setsoftnet()	(sun3sir.sir_which[SIR_NET] = 1, setsoftint())
#define setsoftclock()	(sun3sir.sir_which[SIR_CLOCK] = 1, setsoftint())

/* values for cpu_machine_id */

#define CPU_ARCH_MASK  0xf0
#define SUN3_ARCH      0x10
#define SUN3_IMPL_MASK 0x0f
#define SUN3_MACH_160  0x01
#define SUN3_MACH_50   0x02
#define SUN3_MACH_260  0x03
#define SUN3_MACH_110  0x04
#define SUN3_MACH_60   0x07
#define SUN3_MACH_E    0x08

extern	unsigned char cpu_machine_id;

/* dma.c */
long	dvma_kvtopa(long, int);

/* machdep.c */
void	dumpconf(void);

struct pcb;
void	savectx(struct pcb *);
void	switch_exit(struct proc *);
void	proc_trampoline(void);

#endif	/* _KERNEL */

/* 
 * CTL_MACHDEP definitions.
 */
#define	CPU_CONSDEV		1	/* dev_t: console terminal device */
#define	CPU_MAXID		2	/* number of valid machdep ids */

#define	CTL_MACHDEP_NAMES { \
	{ 0, 0 }, \
	{ "console_device", CTLTYPE_STRUCT }, \
}

#endif /* !_SUN3_CPU_H_ */
@


1.16
log
@Remove obsolete CLKF_BASEPRI(). ok niklas@@, miod@@ and art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.15 2002/03/14 01:26:46 millert Exp $	*/
@


1.15
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.14 2001/11/06 18:41:10 art Exp $	*/
a80 1
#define	CLKF_BASEPRI(framep)	(((framep)->sr & PSL_IPL) == 0)
@


1.14
log
@Let fork1, uvm_fork, and cpu_fork take a function/argument pair as argument,
instead of doing fork1, cpu_set_kpc. This lets us retire cpu_set_kpc and
avoid a multiprocessor race.

This commit breaks vax because it doesn't look like any other arch, someone
working on vax might want to look at this and try to adapt the code to be
more like the rest of the world.

Idea and uvm parts from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.13 2001/09/28 20:40:20 miod Exp $	*/
d120 1
a120 1
extern void isr_soft_request __P((int level));
d150 1
a150 1
long	dvma_kvtopa __P((long, int));
d153 1
a153 1
void	dumpconf __P((void));
d156 3
a158 3
void	savectx __P((struct pcb *));
void	switch_exit __P((struct proc *));
void	proc_trampoline __P((void));
@


1.14.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.14 2001/11/06 18:41:10 art Exp $	*/
d81 1
d120 1
a120 1
extern void isr_soft_request(int level);
d150 1
a150 1
long	dvma_kvtopa(long, int);
d153 1
a153 1
void	dumpconf(void);
d156 3
a158 3
void	savectx(struct pcb *);
void	switch_exit(struct proc *);
void	proc_trampoline(void);
@


1.14.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.14.2.1 2002/06/11 03:39:01 art Exp $	*/
@


1.13
log
@No need duplicating defines.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.12 2001/05/05 22:34:21 art Exp $	*/
a158 3

/* trap.c */
void	child_return __P((void *));
@


1.12
log
@Rename configure() to cpu_configure().
Move it from cpu_startup() to main().
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.11 2000/03/02 23:01:45 todd Exp $	*/
a133 12


/*
 * CTL_MACHDEP definitions.
 */
#define	CPU_CONSDEV		1	/* dev_t: console terminal device */
#define	CPU_MAXID		2	/* number of valid machdep ids */

#define	CTL_MACHDEP_NAMES { \
	{ 0, 0 }, \
	{ "console_device", CTLTYPE_STRUCT }, \
}
@


1.11
log
@sun3 is alive, thanks to Miod Vallat <miodrag@@ifrance.com>
add ksyms, proto fix.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.10 1997/11/04 12:32:03 kstailey Exp $	*/
a159 3

/* autoconf.c */
void	configure __P((void));
@


1.10
log
@remove prototype for fusword(); now in shared m68k cpu.h
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.9 1997/02/14 18:30:42 kstailey Exp $	*/
d176 1
a176 1
void	child_return __P((struct proc *));
@


1.10.10.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d176 1
a176 1
void	child_return __P((void *));
@


1.10.10.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.10.10.1 2000/03/24 09:08:52 niklas Exp $	*/
d160 3
@


1.10.10.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.10.10.2 2001/07/04 10:24:00 niklas Exp $	*/
d134 12
@


1.10.10.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d159 3
@


1.10.10.5
log
@Merge in -current from about a week ago
@
text
@d120 1
a120 1
extern void isr_soft_request(int level);
d150 1
a150 1
long	dvma_kvtopa(long, int);
d153 1
a153 1
void	dumpconf(void);
d156 3
a158 3
void	savectx(struct pcb *);
void	switch_exit(struct proc *);
void	proc_trampoline(void);
@


1.10.10.6
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.10.10.5 2002/03/28 11:26:45 niklas Exp $	*/
@


1.9
log
@remove stuff that is in <m68k/cpu.h>
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a168 3

/* locore.s */
short	fusword __P((void *));
@


1.8
log
@prototypes (strike one)
@
text
@d1 1
d51 5
a159 16

/* 680X0 function codes */
#define	FC_USERD	1	/* user data space */
#define	FC_USERP	2	/* user program space */
#define	FC_CONTROL	3	/* sun control space */
#define	FC_SUPERD	5	/* supervisor data space */
#define	FC_SUPERP	6	/* supervisor program space */
#define	FC_CPU		7	/* CPU space */

/* fields in the 68020 cache control register */
#define	IC_ENABLE	0x0001	/* enable instruction cache */
#define	IC_FREEZE	0x0002	/* freeze instruction cache */
#define	IC_CE		0x0004	/* clear instruction cache entry */
#define	IC_CLR		0x0008	/* clear entire instruction cache */

#define IC_CLEAR (IC_CLR|IC_ENABLE)
@


1.7
log
@prototypes
@
text
@d181 1
a181 2
short	fusword __P((u_short *));
int	susword __P((u_short *t, u_short));
@


1.6
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d171 21
@


1.5
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d114 1
@


1.4
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: cpu.h,v 1.21 1996/12/17 21:11:03 gwr Exp $	*/
d47 3
d53 1
a53 9
 * External definitions unique to sun3/68k cpu support.
 * These are the "public" declarations - those needed in
 * machine-independent source code.  The "priviate" ones
 * are in machdep.h (used only inside sys/arch/sun3).
 *
 * Note that the name of this file is NOT meant to imply
 * that it has anything to do with mc68020 CPU stuff.
 * The name "cpu" is historical, and used in the common
 * code to identify machine-dependent functions, etc.
d60 1
d66 1
a66 1
 * what the locore.s glue puts on the stack before calling C-code.
d69 3
a71 4
	u_int	cf_regs[4];	/* d0,d1,a0,a1 */
	u_short	cf_sr;		/* sr at time of interrupt */
	u_long	cf_pc;		/* pc at time of interrupt */
	u_short	cf_vo;		/* vector offset (4-word frame) */
d74 3
a76 3
#define	CLKF_USERMODE(framep)	(((framep)->cf_sr & PSL_S) == 0)
#define	CLKF_BASEPRI(framep)	(((framep)->cf_sr & PSL_IPL) == 0)
#define	CLKF_PC(framep)		((framep)->cf_pc)
d79 1
a79 1
#define	CLKF_INTR(framep)	(((framep)->cf_sr & PSL_M) == 0)
d86 1
a86 1
#define aston() (astpending = 1)
d93 1
a93 1
#define	need_resched()	{ want_resched = 1; aston(); }
a113 1
extern void isr_soft_request __P((int level));
d124 45
a168 3
#define	setsoftint(x)	isr_soft_request(x)
#define setsoftnet()	(sun3sir.sir_which[SIR_NET] = 1, setsoftint(1))
#define setsoftclock()	(sun3sir.sir_which[SIR_CLOCK] = 1, setsoftint(1))
d172 12
a183 1
#include <m68k/sysctl.h>
@


1.3
log
@Added protection against multiple inclusions.
Added CTL_MACHDEP definitions.
"The Way Out Is The Way In" -- Laraaji
@
text
@d1 1
a1 1
/*	$NetBSD: cpu.h,v 1.20 1995/12/21 05:02:10 mycroft Exp $	*/
a46 3
#ifndef _SUN3_CPU_H_
#define _SUN3_CPU_H_

d50 9
a58 1
 * Exported definitions unique to sun3/68k cpu support.
a64 1
#define	cpu_swapin(p)			/* nothing */
d70 1
a70 1
 * what the hardware pushes on an interrupt (frame format 0).
d73 4
a76 3
	u_short	sr;		/* sr at time of interrupt */
	u_long	pc;		/* pc at time of interrupt */
	u_short	vo;		/* vector offset (4-word frame) */
d79 3
a81 3
#define	CLKF_USERMODE(framep)	(((framep)->sr & PSL_S) == 0)
#define	CLKF_BASEPRI(framep)	(((framep)->sr & PSL_IPL) == 0)
#define	CLKF_PC(framep)		((framep)->pc)
d84 1
a84 1
#define	CLKF_INTR(framep)	(((framep)->sr & PSL_M) == 0)
d91 1
a91 1
#define aston() (astpending++)
d98 1
a98 1
#define	need_resched()	{ want_resched++; aston(); }
d119 1
d130 3
a132 45
#define	setsoftint()	isr_soft_request(1)
#define setsoftnet()	(sun3sir.sir_which[SIR_NET] = 1, setsoftint())
#define setsoftclock()	(sun3sir.sir_which[SIR_CLOCK] = 1, setsoftint())


/*
 * CTL_MACHDEP definitions.
 */
#define	CPU_CONSDEV		1	/* dev_t: console terminal device */
#define	CPU_MAXID		2	/* number of valid machdep ids */

#define	CTL_MACHDEP_NAMES { \
	{ 0, 0 }, \
	{ "console_device", CTLTYPE_STRUCT }, \
}

/* values for cpu_machine_id */

#define CPU_ARCH_MASK  0xf0
#define SUN3_ARCH      0x10
#define SUN3_IMPL_MASK 0x0f
#define SUN3_MACH_160  0x01
#define SUN3_MACH_50   0x02
#define SUN3_MACH_260  0x03
#define SUN3_MACH_110  0x04
#define SUN3_MACH_60   0x07
#define SUN3_MACH_E    0x08

extern	unsigned char cpu_machine_id;

/* 680X0 function codes */
#define	FC_USERD	1	/* user data space */
#define	FC_USERP	2	/* user program space */
#define	FC_CONTROL	3	/* sun control space */
#define	FC_SUPERD	5	/* supervisor data space */
#define	FC_SUPERP	6	/* supervisor program space */
#define	FC_CPU		7	/* CPU space */

/* fields in the 68020 cache control register */
#define	IC_ENABLE	0x0001	/* enable instruction cache */
#define	IC_FREEZE	0x0002	/* freeze instruction cache */
#define	IC_CE		0x0004	/* clear instruction cache entry */
#define	IC_CLR		0x0008	/* clear entire instruction cache */

#define IC_CLEAR (IC_CLR|IC_ENABLE)
d136 1
a136 12
/* 
 * CTL_MACHDEP definitions.
 */
#define	CPU_CONSDEV		1	/* dev_t: console terminal device */
#define	CPU_MAXID		2	/* number of valid machdep ids */

#define	CTL_MACHDEP_NAMES { \
	{ 0, 0 }, \
	{ "console_device", CTLTYPE_STRUCT }, \
}

#endif /* !_SUN3_CPU_H_ */
@


1.2
log
@from netbsd; cpu_setstack() is depricated
@
text
@d47 3
d171 13
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: cpu.h,v 1.19 1995/06/28 02:56:08 cgd Exp $	*/
a58 1
#define cpu_setstack(p, ap)		(p)->p_md.md_regs[SP] = ap
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
