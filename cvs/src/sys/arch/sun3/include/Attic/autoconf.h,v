head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.24
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.22
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.20
	OPENBSD_2_8:1.7.0.18
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.16
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.14
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.12
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2002.12.31.16.35.40;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.01.16.04.04.04;	author kstailey;	state Exp;
branches
	1.7.14.1
	1.7.24.1;
next	1.6;

1.6
date	97.01.07.23.36.15;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.12.31.06.13.03;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.11.23.07.55.01;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.10.11.23.06.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.16.03.47;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.54;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.54;	author deraadt;	state Exp;
branches;
next	;

1.7.14.1
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.7.14.2;

1.7.14.2
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.7.24.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.7.24.2;

1.7.24.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.9
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: autoconf.h,v 1.8 2002/03/14 01:26:46 millert Exp $	*/
/*	$NetBSD: autoconf.h,v 1.12 1996/11/20 18:57:05 gwr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Adam Glass and Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Autoconfiguration information.
 */

/* These are the "bus" types: */
#define	BUS_OBMEM	0	/* "obmem" */
#define	BUS_OBIO	1	/* "obio"  */
#define	BUS_VME16	2	/* "vmes"  */
#define	BUS_VME32	3	/* "vmel"  */

/*
 * This is the "args" parameter to the bus match/attach functions.
 */
struct confargs {
	int ca_bustype;		/* BUS_OBIO, ... */
	int ca_paddr;		/* physical address */
	int ca_intpri;		/* interrupt priority level */
	int ca_intvec;		/* interrupt vector index */
};

/* Locator aliases */
#define cf_paddr	cf_loc[0]
#define cf_intpri	cf_loc[1]
#define cf_intvec	cf_loc[2]

int bus_scan(struct device *, void *, void *);
int bus_print(void *, const char *);
int bus_peek(int, int, int);
char * bus_mapin(int, int, int);

typedef int (*isr_func_t)(void *);
void isr_add_custom(int, void *);
void isr_add_autovect(isr_func_t, void *arg, int level);
void isr_add_vectored(isr_func_t, void *arg, int pri, int vec);

void isr_soft_request(int level);
void isr_soft_clear(int level);

/* Bus-error tolerant access to mapped address. */
int     peek_byte(caddr_t);
int     peek_word(caddr_t);
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7 1997/01/16 04:04:04 kstailey Exp $	*/
@


1.7
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 9
a73 9
int bus_scan __P((struct device *, void *, void *));
int bus_print __P((void *, const char *));
int bus_peek __P((int, int, int));
char * bus_mapin __P((int, int, int));

typedef int (*isr_func_t) __P((void *));
void isr_add_custom __P((int, void *));
void isr_add_autovect __P((isr_func_t, void *arg, int level));
void isr_add_vectored __P((isr_func_t, void *arg, int pri, int vec));
d75 2
a76 2
void isr_soft_request __P((int level));
void isr_soft_clear __P((int level));
d79 2
a80 2
int     peek_byte __P((caddr_t));
int     peek_word __P((caddr_t));
@


1.7.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7 1997/01/16 04:04:04 kstailey Exp $	*/
d65 9
a73 9
int bus_scan(struct device *, void *, void *);
int bus_print(void *, const char *);
int bus_peek(int, int, int);
char * bus_mapin(int, int, int);

typedef int (*isr_func_t)(void *);
void isr_add_custom(int, void *);
void isr_add_autovect(isr_func_t, void *arg, int level);
void isr_add_vectored(isr_func_t, void *arg, int pri, int vec);
d75 2
a76 2
void isr_soft_request(int level);
void isr_soft_clear(int level);
d79 2
a80 2
int     peek_byte(caddr_t);
int     peek_word(caddr_t);
@


1.7.24.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7.24.1 2002/06/11 03:39:01 art Exp $	*/
@


1.7.14.1
log
@Merge in -current from about a week ago
@
text
@d65 4
a68 4
int bus_scan(struct device *, void *, void *);
int bus_print(void *, const char *);
int bus_peek(int, int, int);
char * bus_mapin(int, int, int);
d70 4
a73 4
typedef int (*isr_func_t)(void *);
void isr_add_custom(int, void *);
void isr_add_autovect(isr_func_t, void *arg, int level);
void isr_add_vectored(isr_func_t, void *arg, int pri, int vec);
d75 2
a76 2
void isr_soft_request(int level);
void isr_soft_clear(int level);
d79 2
a80 2
int     peek_byte(caddr_t);
int     peek_word(caddr_t);
@


1.7.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7.14.1 2002/03/28 11:26:45 niklas Exp $	*/
@


1.6
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d1 1
d70 11
@


1.5
log
@sync with 17-Dec-1996
@
text
@d1 1
a1 1
/*	$NetBSD: autoconf.h,v 1.13 1996/12/17 21:11:01 gwr Exp $	*/
a40 1
 * (machdep parts of driver/kernel interface)
a68 13
/* These are how drivers connect interrupt handlers. */
typedef int (*isr_func_t) __P((void *));
void isr_add_autovect __P((isr_func_t, void *arg, int level));
void isr_add_vectored __P((isr_func_t, void *arg, int pri, int vec));
void isr_add_custom __P((int, void *));

/* These control the software interrupt register. */
void isr_soft_request __P((int level));
void isr_soft_clear __P((int level));

/* Bus-error tolerant access to mapped address. */
int 	peek_byte __P((caddr_t));
int 	peek_word __P((caddr_t));
@


1.4
log
@sync with NetBSD
@
text
@d1 1
a1 1
/*	$NetBSD: autoconf.h,v 1.12 1996/11/20 18:57:05 gwr Exp $	*/
d41 1
d70 13
@


1.3
log
@sync + our changes
@
text
@d1 1
a1 1
/*	$NetBSD: autoconf.h,v 1.10 1996/03/26 15:16:28 gwr Exp $	*/
d3 2
a4 3
/*
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
d7 3
d20 5
a24 3
 *	This product includes software developed by Adam Glass.
 * 4. The name of the Author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d26 11
a36 11
 * THIS SOFTWARE IS PROVIDED BY Adam Glass ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d65 1
a65 1
int bus_print __P((void *, char *));
@


1.2
log
@sync with 0430.
@
text
@d61 2
a62 2
int  bus_print __P((void *, char *));
int  bus_peek __P((int, int, int));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: autoconf.h,v 1.9 1995/01/11 20:38:33 gwr Exp $	*/
a43 2
/* These are pseudo buses: */
#define	BUS_OBCTL	4
d55 6
a60 2
int always_match __P((struct device *, void *, void *));
void bus_scan __P((struct device *, void *, int));
d64 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
