head	1.10;
access;
symbols
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.18
	OPENBSD_2_8:1.7.0.16
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.14
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.12
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2002.12.31.16.35.41;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.18.22.37.40;	author art;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	97.09.21.04.21.26;	author niklas;	state Exp;
branches
	1.7.12.1;
next	1.6;

1.6
date	97.01.16.04.04.10;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.01.07.23.36.21;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.12.31.06.13.26;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.11.23.08.26.00;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.16.03.55;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.01.31.06.41.18;	author deraadt;	state Exp;
branches;
next	;

1.7.12.1
date	2001.10.31.03.08.00;	author nate;	state Exp;
branches;
next	1.7.12.2;

1.7.12.2
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.7.12.3;

1.7.12.3
date	2003.03.27.23.52.18;	author niklas;	state dead;
branches;
next	;

1.8.4.1
date	2002.06.11.03.39.01;	author art;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2003.05.19.21.49.45;	author tedu;	state dead;
branches;
next	;


desc
@@


1.10
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: z8530var.h,v 1.9 2002/03/14 01:26:46 millert Exp $	*/
/*	$NetBSD: z8530var.h,v 1.5 1996/10/13 03:47:44 christos Exp $	*/

/*
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)zsvar.h	8.1 (Berkeley) 6/11/93
 */

#include <dev/ic/z8530sc.h>
struct zsc_softc {
        struct  device zsc_dev;         /* required first: base device */
        struct  zs_chanstate zsc_cs[2]; /* channel A and B soft state */
};

/*
 * Functions to read and write individual registers in a channel.
 * The ZS chip requires a 1.6 uSec. recovery time between accesses,
 * and the Sun3 hardware does NOT take care of this for you.
 * The delay is now handled inside the chip access functions.
 * These could be inlines, but with the delay, speed is moot.
 */

u_char zs_read_reg(struct zs_chanstate *cs, u_char reg);
u_char zs_read_csr(struct zs_chanstate *cs);
u_char zs_read_data(struct zs_chanstate *cs);

void  zs_write_reg(struct zs_chanstate *cs, u_char reg, u_char val);
void  zs_write_csr(struct zs_chanstate *cs, u_char val);
void  zs_write_data(struct zs_chanstate *cs, u_char val);


/*
 * How to request a "soft" interrupt.
 * This could be a macro if you like.
 */
void zsc_req_softint(struct zsc_softc *zsc);

/* Handle user request to enter kernel debugger. */
void zs_abort(void);

/*
 * Some warts needed by z8530tty.c -
 * The default parity REALLY needs to be the same as the PROM uses,
 * or you can not see messages done with printf during boot-up...
 */
#define	ZSTTY_MAJOR 	12		/* XXX */
#define	ZSTTY_DEF_CFLAG 	(CREAD | CS8 | HUPCL)
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.8 2001/08/18 22:37:40 art Exp $	*/
@


1.8
log
@Move the softc into the machdep parts.
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.7 1997/09/21 04:21:26 niklas Exp $	*/
d63 7
a69 7
u_char zs_read_reg __P((struct zs_chanstate *cs, u_char reg));
u_char zs_read_csr __P((struct zs_chanstate *cs));
u_char zs_read_data __P((struct zs_chanstate *cs));

void  zs_write_reg __P((struct zs_chanstate *cs, u_char reg, u_char val));
void  zs_write_csr __P((struct zs_chanstate *cs, u_char val));
void  zs_write_data __P((struct zs_chanstate *cs, u_char val));
d76 1
a76 1
void zsc_req_softint __P((struct zsc_softc *zsc));
d79 1
a79 1
void zs_abort __P((void));
@


1.8.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.8 2001/08/18 22:37:40 art Exp $	*/
d63 7
a69 7
u_char zs_read_reg(struct zs_chanstate *cs, u_char reg);
u_char zs_read_csr(struct zs_chanstate *cs);
u_char zs_read_data(struct zs_chanstate *cs);

void  zs_write_reg(struct zs_chanstate *cs, u_char reg, u_char val);
void  zs_write_csr(struct zs_chanstate *cs, u_char val);
void  zs_write_data(struct zs_chanstate *cs, u_char val);
d76 1
a76 1
void zsc_req_softint(struct zsc_softc *zsc);
d79 1
a79 1
void zs_abort(void);
@


1.8.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.8.4.1 2002/06/11 03:39:01 art Exp $	*/
@


1.7
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.5 1996/10/13 03:47:44 christos Exp $	*/
d50 4
@


1.7.12.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.7 1997/09/21 04:21:26 niklas Exp $	*/
a49 4
struct zsc_softc {
        struct  device zsc_dev;         /* required first: base device */
        struct  zs_chanstate zsc_cs[2]; /* channel A and B soft state */
};
@


1.7.12.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 7
a69 7
u_char zs_read_reg(struct zs_chanstate *cs, u_char reg);
u_char zs_read_csr(struct zs_chanstate *cs);
u_char zs_read_data(struct zs_chanstate *cs);

void  zs_write_reg(struct zs_chanstate *cs, u_char reg, u_char val);
void  zs_write_csr(struct zs_chanstate *cs, u_char val);
void  zs_write_data(struct zs_chanstate *cs, u_char val);
d76 1
a76 1
void zsc_req_softint(struct zsc_softc *zsc);
d79 1
a79 1
void zs_abort(void);
@


1.7.12.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.7.12.2 2002/03/28 11:26:45 niklas Exp $	*/
@


1.6
log
@all modified code can now compile with -Werror -Wall -Wstrict-prototypes
CAVEAT: turning off -O2 produces warnings about "defined but not used"
        functions from libkern.h

removed internal copy of gets() replaced with call to getsn()

fixed #ifdef ... #endif mismatch in swapgeneric.c

fixed printf() in if_ie.c that was missing an argument

fixed si.c so that it compiles

added tags to all edited files
@
text
@d1 1
@


1.5
log
@backed out prev. netbsd merge except for smaller proc table
@
text
@d74 1
a74 1
void zs_abort();
@


1.4
log
@sync with 17-Dec-1996
@
text
@a82 3

/* Zilog Serial hardware interrupts (hard-wired at 6) */
#define splzs()         spl6()
@


1.3
log
@sync with NetBSD -- copyright changes only
@
text
@d83 3
@


1.2
log
@sync with 0430.
@
text
@d1 1
a1 1
/*	$NetBSD: z8530var.h,v 1.3 1996/01/30 22:35:04 gwr Exp $	*/
@


1.1
log
@sync with netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: z8530var.h,v 1.2 1996/01/24 22:40:48 gwr Exp $	*/
d51 5
a55 3
 * Macros to read and write individual registers (except 0) in a channel.
 * The ZS chip requires a 1.6 uSec. recovery time between accesses, and
 * the Sun3 hardware does NOT take care of this for you.
a56 3
#define	ZS_READ(c, r)		zs_read_reg(c, r)
#define	ZS_WRITE(c, r, v)	zs_write_reg(c, r, v)
#define ZS_DELAY()			delay2us()
d58 8
a65 2
u_char zs_read_reg __P((struct zs_chanstate *zc, u_char reg));
void  zs_write_reg __P((struct zs_chanstate *zc, u_char reg, u_char val));
@
