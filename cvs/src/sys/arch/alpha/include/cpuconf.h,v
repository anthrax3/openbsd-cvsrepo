head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.24
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.22
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.18
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.20
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.12
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.16
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.24
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.22
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.20
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.18
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.16
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.14
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.12
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.10
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.10
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.15.20.08.29;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.08.21.27.18;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.08.16.01.11;	author art;	state Exp;
branches;
next	1.2;

1.2
date	97.11.10.15.53.09;	author niklas;	state Exp;
branches
	1.2.10.1;
next	1.1;

1.1
date	97.01.24.19.57.11;	author niklas;	state Exp;
branches;
next	;

1.2.10.1
date	2001.04.18.16.00.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@/*	$OpenBSD: cpuconf.h,v 1.5 2006/06/15 20:08:29 brad Exp $	*/
/*	$NetBSD: cpuconf.h,v 1.12 2000/06/08 03:10:06 thorpej Exp $	*/

/*
 * Copyright (c) 1996 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * Additional reworking by Matthew Jacob for NASA/Ames Research Center.
 * Copyright (c) 1997
 */

#ifndef	_MACHINE_CPUCONF_H_
#define	_MACHINE_CPUCONF_H_

/*
 * Platform Specific Information and Function Hooks.
 *
 * The tags family and model information are strings describing the platform.
 * 
 * The tag iobus describes the primary iobus for the platform- primarily
 * to give a hint as to where to start configuring. The likely choices
 * are one of tcasic, lca, apecs, cia, or tlsb.
 */

struct clockframe;

struct platform {
	/*
	 * Platform Information.
	 */
	const char	*family;	/* Family Name */
	const char	*model;		/* Model (variant) Name */
	const char	*iobus;		/* Primary iobus name */

	/*
	 * Platform Specific Function Hooks
	 *	cons_init 	-	console initialization
	 *	device_register	-	boot configuration aid
	 *	clockintr	-	Clock Interrupt Handler
	 *	mcheck_handler	-	Platform Specific Machine Check Handler
	 */
	void	(*cons_init)(void);
	void	(*device_register)(struct device *, void *);
	void	(*clockintr)(struct clockframe *);
	void	(*mcheck_handler)(unsigned long, struct trapframe *,
		    unsigned long, unsigned long);
	void	(*powerdown)(void);
};

/*
 * There is an array of functions to initialize the platform structure.
 *
 * It's responsible for filling in the family, model_name and iobus
 * tags. It may optionally fill in the cons_init, device_register and
 * mcheck_handler tags.
 *
 * The iointr tag is filled in by set_iointr (in interrupt.c).
 * The clockintr tag is filled in by cpu_initclocks (in clock.c).
 *
 * nocpu is function to call when you can't figure what platform you're on.
 * There's no return from this function.
 */

struct cpuinit {
	void	(*init)(void);
	u_int64_t systype;
	const char *option;
};

#ifdef _KERNEL
#define	cpu_notsupp(st, str)	{ platform_not_supported, st, str }

#define	cpu_init(st, fn, opt)	{ fn, st, opt }

extern struct platform platform;
extern const struct cpuinit *platform_lookup(int);
extern void platform_not_configured(void);
extern void platform_not_supported(void);
#endif /* _KERNEL */
#endif /* ! _MACHINE_CPUCONF_H_ */
@


1.5
log
@Rework the interrupt code, shaving some cycles off in the process.
Rather than an "iointr" routine that decomposes a vector into an
IRQ, we maintain a vector table directly, hooking up each "iointr"
routine at the correct vector. This also allows us to hook device
interrupts up to specific vectors.

From thorpej NetBSD

Tested by myself and a number of end-users.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.4 2000/11/08 21:27:18 ericj Exp $	*/
d38 2
a39 2
#ifndef	_ALPHA_CPUCONF_H_
#define	_ALPHA_CPUCONF_H_
d106 1
a106 1
#endif /* ! _ALPHA_CPUCONF_H_ */
@


1.4
log
@tag the rest of alpha tree
@
text
@d1 1
a1 1
/*	$OpenBSD: cpuconf.h,v 1.12 2000/06/08 03:10:06 thorpej Exp $	*/
a64 1
	 *	iointr		-	I/O interrupt handler
a69 1
	void	(*iointr)(void *, unsigned long);
@


1.3
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 2
/*	$OpenBSD: cpuconf.h,v 1.1 1996/11/12 05:14:40 cgd Exp $	*/
/*	$NetBSD: cpuconf.h,v 1.1 1996/11/12 05:14:40 cgd Exp $	*/
d32 7
d40 35
a74 8
struct cpusw {
	const char	*family, *option;
	int		present;
	const char	*(*model_name) __P((void));
	void		(*cons_init) __P((void));
	const char	*(*iobus_name) __P((void));
	void		(*device_register) __P((struct device *dev,
			    void *aux));
d77 13
a89 1
#define	CONCAT(a,b)		__CONCAT(a,b)
d91 8
a98 1
#define	cpu_fn_name(p,f)	CONCAT(CONCAT(p,_),f)
d100 1
a100 22
#define	cpu_decl(p)							\
	extern const char	*cpu_fn_name(p,model_name) __P((void));	\
	extern void		cpu_fn_name(p,cons_init) __P((void));	\
	extern const char	*cpu_fn_name(p,iobus_name) __P((void));	\
	extern void		cpu_fn_name(p,device_register)		\
				    __P((struct device *, void*));

#define	cpu_unknown()	{ NULL, NULL, 0, }
#define cpu_notdef(f)	{ f, NULL, 0 }

#define	cpu_option_string(o)	__STRING(o)
#define	cpu_option_present(o)	(CONCAT(N,o) > NULL)
#define	cpu_function_init(o,p,f)					\
	    (cpu_option_present(o) ? cpu_fn_name(p,f) : 0)
#define	cpu_init(f,o,p)							\
	{								\
		f, cpu_option_string(o) , cpu_option_present(o),	\
		cpu_function_init(o,p,model_name),			\
		cpu_function_init(o,p,cons_init),			\
		cpu_function_init(o,p,iobus_name),			\
		cpu_function_init(o,p,device_register),			\
	}
d102 6
a107 4
#ifdef _KERNEL
extern const struct cpusw cpusw[];
extern const int ncpusw;
#endif
@


1.2.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/*	$OpenBSD: cpuconf.h,v 1.4 2000/11/08 21:27:18 ericj Exp $	*/
/*	$NetBSD: cpuconf.h,v 1.12 2000/06/08 03:10:06 thorpej Exp $	*/
a32 4
/*
 * Additional reworking by Matthew Jacob for NASA/Ames Research Center.
 * Copyright (c) 1997
 */
d34 9
a42 2
#ifndef	_ALPHA_CPUCONF_H_
#define	_ALPHA_CPUCONF_H_
d44 1
a44 9
/*
 * Platform Specific Information and Function Hooks.
 *
 * The tags family and model information are strings describing the platform.
 * 
 * The tag iobus describes the primary iobus for the platform- primarily
 * to give a hint as to where to start configuring. The likely choices
 * are one of tcasic, lca, apecs, cia, or tlsb.
 */
d46 1
a46 1
struct clockframe;
d48 22
a69 44
struct platform {
	/*
	 * Platform Information.
	 */
	const char	*family;	/* Family Name */
	const char	*model;		/* Model (variant) Name */
	const char	*iobus;		/* Primary iobus name */

	/*
	 * Platform Specific Function Hooks
	 *	cons_init 	-	console initialization
	 *	device_register	-	boot configuration aid
	 *	iointr		-	I/O interrupt handler
	 *	clockintr	-	Clock Interrupt Handler
	 *	mcheck_handler	-	Platform Specific Machine Check Handler
	 */
	void	(*cons_init)(void);
	void	(*device_register)(struct device *, void *);
	void	(*iointr)(void *, unsigned long);
	void	(*clockintr)(struct clockframe *);
	void	(*mcheck_handler)(unsigned long, struct trapframe *,
		    unsigned long, unsigned long);
	void	(*powerdown)(void);
};

/*
 * There is an array of functions to initialize the platform structure.
 *
 * It's responsible for filling in the family, model_name and iobus
 * tags. It may optionally fill in the cons_init, device_register and
 * mcheck_handler tags.
 *
 * The iointr tag is filled in by set_iointr (in interrupt.c).
 * The clockintr tag is filled in by cpu_initclocks (in clock.c).
 *
 * nocpu is function to call when you can't figure what platform you're on.
 * There's no return from this function.
 */

struct cpuinit {
	void	(*init)(void);
	u_int64_t systype;
	const char *option;
};
d72 3
a74 10
#define	cpu_notsupp(st, str)	{ platform_not_supported, st, str }

#define	cpu_init(st, fn, opt)	{ fn, st, opt }

extern struct platform platform;
extern const struct cpuinit *platform_lookup(int);
extern void platform_not_configured(void);
extern void platform_not_supported(void);
#endif /* _KERNEL */
#endif /* ! _ALPHA_CPUCONF_H_ */
@


1.1
log
@Sync with NetBSD 961207
@
text
@d1 1
@
