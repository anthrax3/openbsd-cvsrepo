head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.2
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.12
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.14
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.6
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.10
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.8
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.4
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.10.0.26
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.24
	OPENBSD_5_0:1.10.0.22
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.20
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.18
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.14
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.16
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.14
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.12
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.10
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.8
	UBC:1.5.0.6
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2017.04.13.03.52.25;	author guenther;	state Exp;
branches;
next	1.12;
commitid	ziRFTEFDWOo0M88l;

1.12
date	2016.05.15.23.37.42;	author guenther;	state Exp;
branches;
next	1.11;
commitid	Hg9xYq6uyjPNjU8k;

1.11
date	2012.11.01.21.09.17;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.17.21.43.29;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.23.23.53.30;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.28.20.55.14;	author pvalchev;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.12.11.58.14;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.08.16.01.13;	author art;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	97.01.24.19.57.16;	author niklas;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.10.30.22.39.19;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.07.29.22.59.03;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.43;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.04.18.16.00.57;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	1.4.14.3;

1.4.14.3
date	2003.03.27.23.18.06;	author niklas;	state Exp;
branches;
next	;

1.5.6.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Provide mips64 with kernel-facing TCB_{GET,SET} macros that store it
in struct mdproc.  With that, all archs have those and the __HAVE_MD_TCB
macro can be unifdef'ed as always defined.

ok kettenis@@ visa@@ jsing@@
@
text
@/*	$OpenBSD: proc.h,v 1.12 2016/05/15 23:37:42 guenther Exp $	*/
/*	$NetBSD: proc.h,v 1.2 1995/03/24 15:01:36 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <machine/cpu.h>
/*
 * Machine-dependent part of the proc struct for the Alpha.
 */

struct mdbpt {
	vaddr_t	addr;
	u_int32_t contents;
};

struct mdproc {
	u_int md_flags;
	volatile u_int md_astpending;	/* AST pending for this process */
	struct trapframe *md_tf;	/* trap/syscall registers */
	struct pcb *md_pcbpaddr;	/* phys addr of the pcb */
	struct mdbpt md_sstep[2];	/* two breakpoints for sstep */
};

/*
 * md_flags usage
 * --------------
 * MDP_FPUSED
 *      A largely unused bit indicating the presence of FPU history.
 *      Cleared on exec. Set but not used by the fpu context switcher
 *      itself.
 * 
 * MDP_FP_C
 *      The architected FP Control word. It should forever begin at bit 1,
 *      as the bits are AARM specified and this way it doesn't need to be
 *      shifted.
 * 
 *      Until C99 there was never an IEEE 754 API, making most of the
 *      standard useless.  Because of overlapping AARM, OSF/1, NetBSD, and
 *      C99 API's, the use of the MDP_FP_C bits is defined variously in
 *      ieeefp.h and fpu.h.
 */
#define	MDP_FPUSED	0x00000001		/* Process used the FPU */
#ifndef NO_IEEE
#define	MDP_FP_C	0x007ffffe	/* Extended FP_C Quadword bits */
#endif
#define MDP_STEP1	0x00800000	/* Single step normal */
#define MDP_STEP2	0x01800000	/* Single step branch */
@


1.12
log
@Implement TCB_{GET,SET} using PAL_{rd,wr}unique.
Inline asm from NetBSD

testing deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.11 2012/11/01 21:09:17 miod Exp $	*/
a47 2

#define	__HAVE_MD_TCB
@


1.11
log
@Switch alpha to per-process astpending.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.10 2006/03/17 21:43:29 miod Exp $	*/
d48 2
@


1.10
log
@Fix single-stepping via ptrace(2); ok art@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.9 2006/02/23 23:53:30 miod Exp $	*/
d42 2
a43 1
	u_long md_flags;
@


1.9
log
@Remove duplicate switch_exit() definition with <machine/cpu.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.8 2002/04/28 20:55:14 pvalchev Exp $	*/
d66 1
a66 1
#define	MDP_FPUSED	0x0001		/* Process used the FPU */
d68 1
a68 1
#define	MDP_FP_C	0x7ffffe	/* Extended FP_C Quadword bits */
d70 2
a71 2
#define MDP_STEP1	0x0002		/* Single step normal */
#define MDP_STEP2	0x0003		/* Single step branch */
@


1.8
log
@IEEE 754 floating point completion code, and implementation of the
FP_C (Floating Point Control Quadword).

From ross@@NetBSD.  Added a way to disable it with option NO_IEEE,
which appears on the ramdisks to save space.  This affects only
programs compiled with -mieee, and what it essentially does is
enabling infinities and NaNs, instead of generating SIGFPE on
division by zero, overflow, etc.
ok art, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.7 2002/03/14 01:26:27 millert Exp $	*/
a71 4

#ifdef _KERNEL
void switch_exit(struct proc *);
#endif
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.6 2002/03/12 11:58:14 art Exp $	*/
d48 18
d67 3
@


1.6
log
@Emulate ptrace(PT_STEP in software.
More or less directly from FreeBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.5 2000/11/08 16:01:13 art Exp $	*/
d53 1
a53 1
void switch_exit __P((struct proc *));
@


1.5
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.4 1997/01/24 19:57:16 niklas Exp $	*/
d36 5
d42 2
a43 2
	u_long	md_flags;
	struct	trapframe *md_tf;	/* trap/syscall registers */
d45 1
d49 2
@


1.5.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.5 2000/11/08 16:01:13 art Exp $	*/
a35 5
struct mdbpt {
	vaddr_t	addr;
	u_int32_t contents;
};

d37 2
a38 2
	u_long md_flags;
	struct trapframe *md_tf;	/* trap/syscall registers */
a39 1
	struct mdbpt md_sstep[2];	/* two breakpoints for sstep */
a41 18
/*
 * md_flags usage
 * --------------
 * MDP_FPUSED
 *      A largely unused bit indicating the presence of FPU history.
 *      Cleared on exec. Set but not used by the fpu context switcher
 *      itself.
 * 
 * MDP_FP_C
 *      The architected FP Control word. It should forever begin at bit 1,
 *      as the bits are AARM specified and this way it doesn't need to be
 *      shifted.
 * 
 *      Until C99 there was never an IEEE 754 API, making most of the
 *      standard useless.  Because of overlapping AARM, OSF/1, NetBSD, and
 *      C99 API's, the use of the MDP_FP_C bits is defined variously in
 *      ieeefp.h and fpu.h.
 */
a42 5
#ifndef NO_IEEE
#define	MDP_FP_C	0x7ffffe	/* Extended FP_C Quadword bits */
#endif
#define MDP_STEP1	0x0002		/* Single step normal */
#define MDP_STEP2	0x0003		/* Single step branch */
d45 1
a45 1
void switch_exit(struct proc *);
@


1.4
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.3 1996/10/30 22:39:19 niklas Exp $	*/
d31 1
@


1.4.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.5 2000/11/08 16:01:13 art Exp $	*/
a30 1
#include <machine/cpu.h>
@


1.4.14.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a35 5
struct mdbpt {
	vaddr_t	addr;
	u_int32_t contents;
};

d37 2
a38 2
	u_long md_flags;
	struct trapframe *md_tf;	/* trap/syscall registers */
a39 1
	struct mdbpt md_sstep[2];	/* two breakpoints for sstep */
a42 2
#define MDP_STEP1	0x0002		/* Single step normal */
#define MDP_STEP2	0x0003		/* Single step branch */
d45 1
a45 1
void switch_exit(struct proc *);
@


1.4.14.3
log
@Sync the SMP branch with 3.3
@
text
@a47 18
/*
 * md_flags usage
 * --------------
 * MDP_FPUSED
 *      A largely unused bit indicating the presence of FPU history.
 *      Cleared on exec. Set but not used by the fpu context switcher
 *      itself.
 * 
 * MDP_FP_C
 *      The architected FP Control word. It should forever begin at bit 1,
 *      as the bits are AARM specified and this way it doesn't need to be
 *      shifted.
 * 
 *      Until C99 there was never an IEEE 754 API, making most of the
 *      standard useless.  Because of overlapping AARM, OSF/1, NetBSD, and
 *      C99 API's, the use of the MDP_FP_C bits is defined variously in
 *      ieeefp.h and fpu.h.
 */
a48 3
#ifndef NO_IEEE
#define	MDP_FP_C	0x7ffffe	/* Extended FP_C Quadword bits */
#endif
@


1.3
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.2 1995/03/24 15:01:36 cgd Exp $	*/
a44 1
void switch_trampoline __P((void (*) __P((struct proc *)), void *));
@


1.2
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d42 5
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
