head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.6
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.4
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.12
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.10
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.8
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.7
	UBC:1.4.0.24
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2015.05.05.02.13.46;	author guenther;	state Exp;
branches;
next	1.10;
commitid	dNPv28CJI5BxtRGW;

1.10
date	2014.03.29.18.09.28;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.30.20.55.50;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.10.17.00.57;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.28.20.55.14;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.24.19.57.15;	author niklas;	state Exp;
branches
	1.4.14.1
	1.4.24.1;
next	1.3;

1.3
date	96.10.30.22.39.14;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.07.29.22.58.59;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2003.03.27.23.18.06;	author niklas;	state Exp;
branches;
next	;

1.4.24.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	1.4.24.2;

1.4.24.2
date	2002.10.29.00.28.00;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@/*	$OpenBSD: pcb.h,v 1.10 2014/03/29 18:09:28 guenther Exp $	*/
/*	$NetBSD: pcb.h,v 1.5 1996/11/13 22:21:00 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef _MACHINE_PCB_H_
#define _MACHINE_PCB_H_

#include <machine/frame.h>
#include <machine/reg.h>

#include <machine/alpha_cpu.h>

/*
 * PCB: process control block
 *
 * In this case, the hardware structure that is the defining element
 * for a process, and the additional state that must be saved by software
 * on a context switch.  Fields marked [HW] are mandated by hardware; fields
 * marked [SW] are for the software.
 *
 * It's said in the VMS PALcode section of the AARM that the pcb address
 * passed to the swpctx PALcode call has to be a physical address.  Not
 * knowing this (and trying a virtual) address proved this correct.
 * So we cache the physical address of the pcb in the md_proc struct.
 */
struct pcb {
	struct alpha_pcb pcb_hw;		/* PALcode defined */
	unsigned long	pcb_context[9];		/* s[0-6], ra, ps	[SW] */
	struct fpreg	pcb_fp;			/* FP registers		[SW] */
	unsigned long	pcb_onfault;		/* for copy faults	[SW] */
	struct cpu_info *volatile pcb_fpcpu;	/* CPU with our FP state[SW] */
};

#ifdef _KERNEL
void savectx(struct pcb *);
#endif

#endif /* _MACHINE_PCB_H_ */
@


1.10
log
@It's been a quarter century: we can assume volatile is present with that name.

ok dlg@@ mpi@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.9 2011/03/23 16:54:34 pirofti Exp $	*/
a57 10
};

/*
 * The pcb is augmented with machine-dependent additional data for
 * core dumps. For the Alpha, that's a trap frame and the floating
 * point registers.
 */
struct md_coredump {
	struct	trapframe md_tf;
	struct	fpreg md_fpstate;
@


1.9
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.8 2005/10/30 20:55:50 miod Exp $	*/
d57 1
a57 1
	struct cpu_info *__volatile pcb_fpcpu;	/* CPU with our FP state[SW] */
@


1.8
log
@Remove unused pcb field (this should have been part of the fetch(9)/store(9)
removal ages ago).
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.7 2002/10/10 17:00:57 pvalchev Exp $	*/
d31 2
a32 2
#ifndef _ALPHA_PCB_H_
#define _ALPHA_PCB_H_
d74 1
a74 1
#endif /* _ALPHA_PCB_H_ */
@


1.7
log
@protect against multiple inclusion; pointed out by naddy, miod ok
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.6 2002/04/28 20:55:14 pvalchev Exp $	*/
a56 1
	unsigned long	pcb_accessaddr;		/* for [fs]uswintr	[SW] */
@


1.6
log
@IEEE 754 floating point completion code, and implementation of the
FP_C (Floating Point Control Quadword).

From ross@@NetBSD.  Added a way to disable it with option NO_IEEE,
which appears on the ramdisks to save space.  This affects only
programs compiled with -mieee, and what it essentially does is
enabling infinities and NaNs, instead of generating SIGFPE on
division by zero, overflow, etc.
ok art, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.5 2002/03/14 01:26:27 millert Exp $	*/
d31 3
d74 2
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4 1997/01/24 19:57:15 niklas Exp $	*/
d55 1
@


1.4
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.3 1996/10/30 22:39:14 niklas Exp $	*/
d68 1
a68 1
void savectx __P((struct pcb *));
@


1.4.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4 1997/01/24 19:57:15 niklas Exp $	*/
a54 1
	struct cpu_info *__volatile pcb_fpcpu;	/* CPU with our FP state[SW] */
d68 1
a68 1
void savectx(struct pcb *);
@


1.4.24.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4.24.1 2002/06/11 03:33:40 art Exp $	*/
a30 3
#ifndef _ALPHA_PCB_H_
#define _ALPHA_PCB_H_

a70 2

#endif /* _ALPHA_PCB_H_ */
@


1.4.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d68 1
a68 1
void savectx(struct pcb *);
@


1.4.14.2
log
@Sync the SMP branch with 3.3
@
text
@a30 3
#ifndef _ALPHA_PCB_H_
#define _ALPHA_PCB_H_

a54 1
	struct cpu_info *__volatile pcb_fpcpu;	/* CPU with our FP state[SW] */
a69 2

#endif /* _ALPHA_PCB_H_ */
@


1.3
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 2
a2 2
/*	$OpenBSD: pcb.h,v 1.4 1996/10/07 23:57:21 cgd Exp $	*/
/*	$NetBSD: pcb.h,v 1.4 1996/10/07 23:57:21 cgd Exp $	*/
d5 1
a5 1
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
@


1.2
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: pcb.h,v 1.1 1995/02/13 23:07:43 cgd Exp $	*/
/*	$NetBSD: pcb.h,v 1.1 1995/02/13 23:07:43 cgd Exp $	*/
d34 1
a34 3
/*
 * XXX where did this info come from?
 */
d50 2
a51 9
	u_int64_t	pcb_ksp;		/* kernel stack ptr	[HW] */
	u_int64_t	pcb_usp;		/* user stack ptr	[HW] */
	u_int64_t	pcb_ptbr;		/* page table base reg	[HW] */
	u_int32_t	pcb_pcc;		/* process cycle cntr	[HW] */
	u_int32_t	pcb_asn;		/* address space number	[HW] */
	u_int64_t	pcb_unique;		/* process unique value	[HW] */
	u_int64_t	pcb_fen;		/* FP enable (in bit 0)	[HW] */
	u_int64_t	pcb_decrsv[2];		/* DEC reserved		[HW] */
	u_int64_t	pcb_context[9];		/* s[0-6], ra, ps	[SW] */
d53 2
a54 1
	caddr_t		pcb_onfault;		/* for copy faults	[SW] */
d64 1
d66 4
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
