head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.64
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.60
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.62
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.54
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.58
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.56
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.52
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.50
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.48
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.46
	OPENBSD_5_0:1.12.0.44
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.42
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.40
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.36
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.38
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.34
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.32
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.30
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.28
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.26
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.24
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.22
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.20
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.18
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.16
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.14
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.12
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.10
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.8
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.6
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.12.0.4
	UBC_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.7.0.18
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.16
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.14
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.12
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2001.09.01.05.48.18;	author jason;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.05.22.33.26;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.08.21.44.35;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2000.11.08.21.27.17;	author ericj;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.08.16.01.10;	author art;	state Exp;
branches;
next	1.7;

1.7
date	97.01.24.19.57.08;	author niklas;	state Exp;
branches
	1.7.14.1;
next	1.6;

1.6
date	96.10.30.22.38.54;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.18.14.47.07;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.29.22.58.27;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.06.18.09.43.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.03;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.41;	author deraadt;	state Exp;
branches;
next	;

1.7.14.1
date	2001.04.18.16.00.46;	author niklas;	state Exp;
branches;
next	1.7.14.2;

1.7.14.2
date	2001.07.04.10.14.35;	author niklas;	state Exp;
branches;
next	1.7.14.3;

1.7.14.3
date	2001.10.31.02.52.44;	author nate;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Add __HAVE_DEVICE_REGISTER to hp300/alpha (sparc64 already had it) and
clean up the arch specific #ifdef's in subr_autoconf.c; from NetBSD.
(tested by me on alpha/sparc64 and miod on hp300)
@
text
@/* $OpenBSD: autoconf.h,v 1.11 2001/05/05 22:33:26 art Exp $ */
/* $NetBSD: autoconf.h,v 1.19 2000/06/08 03:10:06 thorpej Exp $ */

/*
 * Copyright (c) 1994, 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * Machine-dependent structures of autoconfiguration
 */

struct mainbus_attach_args {
	const char *ma_name;		/* device name */
	int	    ma_slot;		/* CPU "slot" number; only meaningful
					   when attaching CPUs */
};

struct bootdev_data {
	char	*protocol;
	int	bus;
	int	slot;
	int	channel;
	char	*remote_address;
	int	unit;
	int	boot_dev_type;
	char	*ctrl_dev_type;
};

/*
 * The boot program passes a pointer (in the boot environment virtual
 * address address space; "BEVA") to a bootinfo to the kernel using
 * the following convention:
 *
 *	a0 contains first free page frame number
 *	a1 contains page number of current level 1 page table
 *	if a2 contains BOOTINFO_MAGIC and a4 is nonzero:
 *		a3 contains pointer (BEVA) to bootinfo
 *		a4 contains bootinfo version number
 *	if a2 contains BOOTINFO_MAGIC and a4 contains 0 (backward compat):
 *		a3 contains pointer (BEVA) to bootinfo version
 *		    (u_long), then the bootinfo
 */

#define	BOOTINFO_MAGIC			0xdeadbeeffeedface

struct bootinfo_v1 {
	u_long	ssym;			/* 0: start of kernel sym table	*/
	u_long	esym;			/* 8: end of kernel sym table	*/
	char	boot_flags[64];		/* 16: boot flags		*/
	char	booted_kernel[64];	/* 80: name of booted kernel	*/
	void	*hwrpb;			/* 144: hwrpb pointer (BEVA)	*/
	u_long	hwrpbsize;		/* 152: size of hwrpb data	*/
	int	(*cngetc)(void);	/* 160: console getc pointer	*/
	void	(*cnputc)(int);		/* 168: console putc pointer	*/
	void	(*cnpollc)(int);	/* 176: console pollc pointer	*/
	u_long	pad[9];			/* 184: rsvd for future use	*/
					/* 256: total size		*/
};

/*
 * Kernel-internal structure used to hold important bits of boot
 * information.  NOT to be used by boot blocks.
 *
 * Note that not all of the fields from the bootinfo struct(s)
 * passed by the boot blocks aren't here (because they're not currently
 * used by the kernel!).  Fields here which aren't supplied by the
 * bootinfo structure passed by the boot blocks are supposed to be
 * filled in at startup with sane contents.
 */
struct bootinfo_kernel {
	u_long	ssym;			/* start of syms */
	u_long	esym;			/* end of syms */
	u_long	hwrpb_phys;		/* hwrpb physical address */
	u_long	hwrpb_size;		/* size of hwrpb data */
	char	boot_flags[64];		/* boot flags */
	char	booted_kernel[64];	/* name of booted kernel */
	char	booted_dev[64];		/* name of booted device */
};

/*
 * Lookup table entry for Alpha system variations.
 */
struct alpha_variation_table {
	u_int64_t	avt_variation;	/* variation, from HWRPB */
	const char	*avt_model;	/* model string */
};

#ifdef _KERNEL
extern struct device *booted_device;
extern int booted_partition;
extern struct bootdev_data *bootdev_data;
extern struct bootinfo_kernel bootinfo;

const char *alpha_variation_name(u_int64_t,
    const struct alpha_variation_table *);
const char *alpha_unknown_sysname(void);
#endif /* _KERNEL */
@


1.11
log
@Rename configure() to cpu_configure().
Move it from cpu_startup() to main().
@
text
@d1 1
a1 1
/* $OpenBSD: autoconf.h,v 1.10 2000/11/08 21:44:35 art Exp $ */
a119 2

void	device_register __P((struct device *, void *));
@


1.10
log
@extern struct device *booted_device
@
text
@d1 1
a1 1
/* $OpenBSD: autoconf.h,v 1.9 2000/11/08 21:27:17 ericj Exp $ */
a120 1
void	configure	__P((void));
@


1.9
log
@tag the rest of alpha tree
@
text
@d1 1
a1 1
/* $OpenBSD: autoconf.h,v 1.19 2000/06/08 03:10:06 thorpej Exp $ */
d112 1
@


1.8
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.7
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 2
/*	$OpenBSD: autoconf.h,v 1.6 1996/10/30 22:38:54 niklas Exp $	*/
/*	$NetBSD: autoconf.h,v 1.6 1996/11/13 21:13:17 cgd Exp $	*/
d34 4
a37 36
struct confargs;

typedef int (*intr_handler_t) __P((void *));

struct abus {
	struct	device *ab_dv;		/* back-pointer to device */
	int	ab_type;		/* bus type (see below) */
	void	(*ab_intr_establish)	/* bus's set-handler function */
		    __P((struct confargs *, intr_handler_t, void *));
	void	(*ab_intr_disestablish)	/* bus's unset-handler function */
		    __P((struct confargs *));
	caddr_t	(*ab_cvtaddr)		/* convert slot/offset to address */
		    __P((struct confargs *));
	int	(*ab_matchname)		/* see if name matches driver */
		    __P((struct confargs *, char *));
};

#define	BUS_MAIN	1		/* mainbus */
#define	BUS_TC		2		/* TurboChannel */
#define	BUS_ASIC	3		/* IOCTL ASIC; under TurboChannel */
#define	BUS_TCDS	4		/* TCDS ASIC; under TurboChannel */

#define	BUS_INTR_ESTABLISH(ca, handler, val)				\
	    (*(ca)->ca_bus->ab_intr_establish)((ca), (handler), (val))
#define	BUS_INTR_DISESTABLISH(ca)					\
	    (*(ca)->ca_bus->ab_intr_establish)(ca)
#define	BUS_CVTADDR(ca)							\
	    (*(ca)->ca_bus->ab_cvtaddr)(ca)
#define	BUS_MATCHNAME(ca, name)						\
	    (*(ca)->ca_bus->ab_matchname)((ca), (name))

struct confargs {
	char	*ca_name;		/* Device name. */
	int	ca_slot;		/* Device slot. */
	int	ca_offset;		/* Offset into slot. */
	struct	abus *ca_bus;		/* bus device resides on. */
d51 58
a108 7
void	configure		__P((void));
void	device_register		__P((struct device *, void *));
void	dumpconf		__P((void));

#ifdef EVCNT_COUNTERS
extern struct evcnt clock_intr_evcnt;
#endif
d110 1
a110 1
extern struct device *booted_device;
d113 9
@


1.7.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/* $OpenBSD: autoconf.h,v 1.10 2000/11/08 21:44:35 art Exp $ */
/* $NetBSD: autoconf.h,v 1.19 2000/06/08 03:10:06 thorpej Exp $ */
d35 36
a70 4
struct mainbus_attach_args {
	const char *ma_name;		/* device name */
	int	    ma_slot;		/* CPU "slot" number; only meaningful
					   when attaching CPUs */
d84 7
a90 58
/*
 * The boot program passes a pointer (in the boot environment virtual
 * address address space; "BEVA") to a bootinfo to the kernel using
 * the following convention:
 *
 *	a0 contains first free page frame number
 *	a1 contains page number of current level 1 page table
 *	if a2 contains BOOTINFO_MAGIC and a4 is nonzero:
 *		a3 contains pointer (BEVA) to bootinfo
 *		a4 contains bootinfo version number
 *	if a2 contains BOOTINFO_MAGIC and a4 contains 0 (backward compat):
 *		a3 contains pointer (BEVA) to bootinfo version
 *		    (u_long), then the bootinfo
 */

#define	BOOTINFO_MAGIC			0xdeadbeeffeedface

struct bootinfo_v1 {
	u_long	ssym;			/* 0: start of kernel sym table	*/
	u_long	esym;			/* 8: end of kernel sym table	*/
	char	boot_flags[64];		/* 16: boot flags		*/
	char	booted_kernel[64];	/* 80: name of booted kernel	*/
	void	*hwrpb;			/* 144: hwrpb pointer (BEVA)	*/
	u_long	hwrpbsize;		/* 152: size of hwrpb data	*/
	int	(*cngetc)(void);	/* 160: console getc pointer	*/
	void	(*cnputc)(int);		/* 168: console putc pointer	*/
	void	(*cnpollc)(int);	/* 176: console pollc pointer	*/
	u_long	pad[9];			/* 184: rsvd for future use	*/
					/* 256: total size		*/
};

/*
 * Kernel-internal structure used to hold important bits of boot
 * information.  NOT to be used by boot blocks.
 *
 * Note that not all of the fields from the bootinfo struct(s)
 * passed by the boot blocks aren't here (because they're not currently
 * used by the kernel!).  Fields here which aren't supplied by the
 * bootinfo structure passed by the boot blocks are supposed to be
 * filled in at startup with sane contents.
 */
struct bootinfo_kernel {
	u_long	ssym;			/* start of syms */
	u_long	esym;			/* end of syms */
	u_long	hwrpb_phys;		/* hwrpb physical address */
	u_long	hwrpb_size;		/* size of hwrpb data */
	char	boot_flags[64];		/* boot flags */
	char	booted_kernel[64];	/* name of booted kernel */
	char	booted_dev[64];		/* name of booted device */
};

/*
 * Lookup table entry for Alpha system variations.
 */
struct alpha_variation_table {
	u_int64_t	avt_variation;	/* variation, from HWRPB */
	const char	*avt_model;	/* model string */
};
a91 1
#ifdef _KERNEL
a94 9
extern struct bootinfo_kernel bootinfo;

const char *alpha_variation_name(u_int64_t,
    const struct alpha_variation_table *);
const char *alpha_unknown_sysname(void);

void	configure	__P((void));
void	device_register __P((struct device *, void *));
#endif /* _KERNEL */
@


1.7.14.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/* $OpenBSD: autoconf.h,v 1.7.14.1 2001/04/18 16:00:46 niklas Exp $ */
d121 1
@


1.7.14.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/* $OpenBSD: autoconf.h,v 1.7.14.2 2001/07/04 10:14:35 niklas Exp $ */
d120 2
@


1.6
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 2
a2 2
/*	$OpenBSD: autoconf.h,v 1.5 1996/07/14 04:12:59 cgd Exp $	*/
/*	$NetBSD: autoconf.h,v 1.5 1996/07/14 04:12:59 cgd Exp $	*/
a83 3
void	set_clockintr		__P((void));
void	set_iointr		__P((void (*)(void *, unsigned long)));
int	badaddr			__P((void *, size_t));
@


1.5
log
@device_register proto added
@
text
@d1 2
a2 2
/*	$OpenBSD: autoconf.h,v 1.4 1996/07/29 22:58:27 niklas Exp $	*/
/*	$NetBSD: autoconf.h,v 1.2.4.2 1996/06/13 18:35:23 cgd Exp $	*/
d84 6
a89 4
void	device_register __P((struct device *, void *));
void	set_clockintr __P((void));
void	set_iointr __P((void (*)(void *, int)));
int	badaddr __P((void *, u_int64_t));
@


1.4
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.2.4.2 1996/06/13 18:35:23 cgd Exp $	*/
d84 1
d87 1
a87 1
int	badaddr			__P((void *, u_int64_t));
@


1.3
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.2
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: autoconf.h,v 1.2 1995/11/23 02:35:50 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
d72 11
d90 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: autoconf.h,v 1.1 1995/02/13 23:07:31 cgd Exp $	*/
d72 1
a72 1
void	set_clockintr __P((void (*)(struct clockframe *)));
d75 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
