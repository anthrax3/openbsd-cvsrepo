head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.26
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.22
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.18
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.20
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.62
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.60
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.56
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.58
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.54
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.52
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.50
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.48
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.46
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.44
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.42
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.40
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.38
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.36
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.34
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.32
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.30
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.28
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.26
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.24
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.3;

1.3
date	96.10.30.22.39.06;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.07.29.22.58.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@/*	$OpenBSD: frame.h,v 1.3 1996/10/30 22:39:06 niklas Exp $	*/
/*	$NetBSD: frame.h,v 1.3 1996/07/11 05:31:32 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef _MACHINE_FRAME_H_
#define	_MACHINE_FRAME_H_

#include <machine/alpha_cpu.h>

/*
 * Software trap, exception, and syscall frame.
 *
 * Includes "hardware" (PALcode) frame.
 *
 * PALcode puts ALPHA_HWFRAME_* fields on stack.  We have to add
 * all of the general-purpose registers except for zero, for sp
 * (which is automatically saved in the PCB's USP field for entries
 * from user mode, and which is implicitly saved and restored by the
 * calling conventions for entries from kernel mode), and (on traps
 * and exceptions) for a0, a1, and a2 (which are saved by PALcode).
 */

/* Quadword offsets of the registers to be saved. */
#define	FRAME_V0	0
#define	FRAME_T0	1
#define	FRAME_T1	2
#define	FRAME_T2	3
#define	FRAME_T3	4
#define	FRAME_T4	5
#define	FRAME_T5	6
#define	FRAME_T6	7
#define	FRAME_T7	8
#define	FRAME_S0	9
#define	FRAME_S1	10
#define	FRAME_S2	11
#define	FRAME_S3	12
#define	FRAME_S4	13
#define	FRAME_S5	14
#define	FRAME_S6	15
#define	FRAME_A3	16
#define	FRAME_A4	17
#define	FRAME_A5	18
#define	FRAME_T8	19
#define	FRAME_T9	20
#define	FRAME_T10	21
#define	FRAME_T11	22
#define	FRAME_RA	23
#define	FRAME_T12	24
#define	FRAME_AT	25
#define	FRAME_SP	26

#define	FRAME_SW_SIZE	(FRAME_SP + 1)
#define	FRAME_HW_OFFSET	FRAME_SW_SIZE

#define	FRAME_PS	(FRAME_HW_OFFSET + ALPHA_HWFRAME_PS)
#define	FRAME_PC	(FRAME_HW_OFFSET + ALPHA_HWFRAME_PC)
#define	FRAME_GP	(FRAME_HW_OFFSET + ALPHA_HWFRAME_GP)
#define	FRAME_A0	(FRAME_HW_OFFSET + ALPHA_HWFRAME_A0)
#define	FRAME_A1	(FRAME_HW_OFFSET + ALPHA_HWFRAME_A1)
#define	FRAME_A2	(FRAME_HW_OFFSET + ALPHA_HWFRAME_A2)

#define	FRAME_HW_SIZE	ALPHA_HWFRAME_SIZE
#define	FRAME_SIZE	(FRAME_HW_OFFSET + FRAME_HW_SIZE)

struct trapframe {
	unsigned long	tf_regs[FRAME_SIZE];	/* See above */
};

#endif /* _MACHINE_FRAME_H_ */
@


1.3
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: frame.h,v 1.3 1996/07/11 05:31:32 cgd Exp $	*/
d31 2
a32 2
#ifndef _ALPHA_FRAME_H_
#define	_ALPHA_FRAME_H_
d95 1
a95 1
#endif /* _ALPHA_FRAME_H_ */
@


1.2
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: frame.h,v 1.1 1995/02/13 23:07:39 cgd Exp $	*/
/*	$NetBSD: frame.h,v 1.1 1995/02/13 23:07:39 cgd Exp $	*/
d34 1
a34 3
/*
 * XXX where did this info come from?
 */
d37 1
a37 1
 * Trap and syscall frame.
d39 8
a46 4
 * Hardware puts fields marked "[HW]" on stack.  We have to add
 * all of the general-purpose registers except for zero, for sp,
 * which is automatically saved in usp for traps, and implicitly
 * saved for syscalls, and for a0-a2, which are saved by hardware.
d49 1
a49 4
/* Number of registers saved, including padding. */
#define	FRAME_NSAVEREGS	28

/* The offsets of the registers to be saved, into the array. */
d77 13
a89 1
#define	FRAME_SPARE	27	/* spare; padding */
d92 1
a92 7
	u_int64_t	tf_regs[FRAME_NSAVEREGS]; /* GPRs (listed above) */
	u_int64_t	tf_ps;			/* processor status [HW] */
	u_int64_t	tf_pc;			/* program counter [HW] */
	u_int64_t	tf_gp;			/* global pointer [HW] */
	u_int64_t	tf_a0;			/* saved a0 [HW] */
	u_int64_t	tf_a1;			/* saved a1 [HW] */
	u_int64_t	tf_a2;			/* saved a2 [HW] */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
