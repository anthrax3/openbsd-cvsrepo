head	1.28;
access;
symbols
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.27.0.6
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.25.0.6
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.4
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.8
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.6
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.4
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.19.0.2
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.18.0.8
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.4
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.6
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.14.0.12
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.10
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.8
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.2
	UBC_BASE:1.9
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.28
date	2015.11.01.20.09.59;	author miod;	state Exp;
branches;
next	1.27;
commitid	sHllVPiKPJBfwmTJ;

1.27
date	2015.02.08.03.48.25;	author deraadt;	state Exp;
branches;
next	1.26;
commitid	FyI2yQpd2OUfUZHS;

1.26
date	2015.02.05.23.06.22;	author deraadt;	state Exp;
branches;
next	1.25;
commitid	3ih3vC0eJxychlMb;

1.25
date	2014.01.30.18.16.41;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.23.22.06.29;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2014.01.01.22.13.52;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2013.03.23.16.12.18;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2011.05.30.22.25.20;	author oga;	state Exp;
branches;
next	1.20;

1.20
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.19;

1.19
date	2010.12.15.05.30.18;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2008.10.06.23.09.37;	author brad;	state Exp;
branches;
next	1.17;

1.17
date	2008.07.25.21.24.49;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2008.07.25.20.51.56;	author kurt;	state Exp;
branches;
next	1.15;

1.15
date	2008.06.24.21.24.01;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.11.15.12.59;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.28.01.36.38;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.23.21.20.54;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.27.43;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.17.22.59.52;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.05.16.25.44;	author art;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.11.30.17.37.43;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.27.06.19.42;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.08.21.27.25;	author ericj;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.08.16.01.14;	author art;	state Exp;
branches;
next	1.4;

1.4
date	96.10.30.22.39.34;	author niklas;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.07.29.22.59.31;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.44;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.04.18.16.01.00;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2001.07.04.10.14.37;	author niklas;	state Exp;
branches;
next	1.4.14.3;

1.4.14.3
date	2001.12.05.00.39.08;	author niklas;	state Exp;
branches;
next	1.4.14.4;

1.4.14.4
date	2002.03.06.00.47.44;	author niklas;	state Exp;
branches;
next	1.4.14.5;

1.4.14.5
date	2003.06.07.11.11.33;	author ho;	state Exp;
branches;
next	1.4.14.6;

1.4.14.6
date	2004.02.19.09.59.34;	author niklas;	state Exp;
branches;
next	;

1.9.2.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.28
log
@Remove the definition of USRTEXT. It has no relevance outside of the non-PIE
a.out world.
ok deraadt@@ kettenis@@
@
text
@/* $OpenBSD: vmparam.h,v 1.27 2015/02/08 03:48:25 deraadt Exp $ */
/* $NetBSD: vmparam.h,v 1.18 2000/05/22 17:13:54 thorpej Exp $ */

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department and Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: vmparam.h 1.16 91/01/18$
 *
 *	@@(#)vmparam.h	8.2 (Berkeley) 4/22/94
 */

#ifndef	_MACHINE_VMPARAM_H_
#define	_MACHINE_VMPARAM_H_

/*
 * Machine dependent constants for Alpha.
 */

#define	USRSTACK	((vaddr_t)0x0000000200000000)		/* 8G */

/*
 * Virtual memory related constants, all in bytes
 */
#ifndef MAXTSIZ
#define	MAXTSIZ		(1*1024*1024*1024)	/* max text size */
#endif
#ifndef DFLDSIZ
#define	DFLDSIZ		(128*1024*1024)		/* initial data size */
#endif
#ifndef MAXDSIZ
#define	MAXDSIZ		(1*1024*1024*1024)	/* max data size */
#endif
#ifndef BRKSIZ
#define	BRKSIZ		MAXDSIZ			/* heap gap size */
#endif
#ifndef	DFLSSIZ
#define	DFLSSIZ		(2*1024*1024)		/* initial stack size */
#endif
#ifndef	MAXSSIZ
#define	MAXSSIZ		(32*1024*1024)		/* max stack size */
#endif

#define STACKGAP_RANDOM	256*1024

/*
 * PTEs for mapping user space into the kernel for physio operations.
 * 64 pte's are enough to cover 8 disks * MAXBSIZE.
 */
#ifndef USRIOSIZE
#define USRIOSIZE	64
#endif

/*
 * PTEs for system V style shared memory.
 * This is basically slop for kmempt which we actually allocate (malloc) from.
 */
#ifndef SHMMAXPGS
#define SHMMAXPGS	4096		/* 32mb */
#endif

/*
 * Mach derived constants
 */

/* user/kernel map constants */
#define VM_MIN_ADDRESS		((vaddr_t)PAGE_SIZE)
#define VM_MAXUSER_ADDRESS	((vaddr_t)(ALPHA_USEG_END + 1L))    /* 4T */
#define VM_MAX_ADDRESS		VM_MAXUSER_ADDRESS
#define VM_MIN_KERNEL_ADDRESS	((vaddr_t)ALPHA_K1SEG_BASE)
#define VM_MAX_KERNEL_ADDRESS	((vaddr_t)ALPHA_K1SEG_END)

/* map PIE into the first quarter of the address space before stack */
#define VM_PIE_MIN_ADDR		PAGE_SIZE
#define VM_PIE_MAX_ADDR		0x80000000

/* virtual sizes (bytes) for various kernel submaps */
#define VM_PHYS_SIZE		(USRIOSIZE * PAGE_SIZE)

/* some Alpha-specific constants */
#define	VPTBASE		((vaddr_t)0xfffffffc00000000)	/* Virt. pg table */

#define	VM_PHYSSEG_MAX		16		/* XXX */
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_BSEARCH
#define	VM_PHYSSEG_NOADD			/* no more after vm_mem_init */

#endif	/* ! _MACHINE_VMPARAM_H_ */
@


1.27
log
@Hilarious!  We are not ready yet for large stack random biases, due to
the stack region handling in uvm.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.26 2015/02/05 23:06:22 deraadt Exp $ */
a48 12
/*
 * USRTEXT is the start of the user text/data space, while USRSTACK
 * is the top (end) of the user stack.  Immediately above the user stack
 * resides the user structure, which is UPAGES long and contains the
 * kernel stack.
 *
 * Digital UNIX (formerly DEC OSF/1) places the stack below the
 * text segment (i.e. growing downward from 4G).  We may want to
 * consider doing that at some point, but it might require changes
 * to the exec code.
 */
#define	USRTEXT		PAGE_SIZE
@


1.26
log
@Expand STACKGAP_RANDOM to 2MB on machines with large user VA
ok kettenis
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.26 2015/02/05 22:49:04 deraadt Exp $ */
d85 1
a85 1
#define STACKGAP_RANDOM	2*1024*1024
@


1.25
log
@Move declaration of struct vm_page_md from <machine/vmparam.h> to
<machine/pmap.h> where it belongs, and compensate in <uvm/uvm_extern.h>
by including <uvm/uvm_pmap.h> before <uvm/uvm_page.h>. Tested on all
MACHINE_ARCH but amd64 and i386 (and hppa64).
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.24 2014/01/23 22:06:29 miod Exp $ */
d85 1
a85 1
#define STACKGAP_RANDOM	256*1024
@


1.24
log
@unifdef -D__HAVE_VM_PAGE_MD - no functional change.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.23 2014/01/01 22:13:52 miod Exp $ */
a126 14

/*
 * pmap-specific data stored in the vm_page structure.
 */
struct vm_page_md {
	struct pv_entry *pvh_list;	/* pv entry list */
	int pvh_attrs;			/* page attributes */
};

#define	VM_MDPAGE_INIT(pg)						\
do {									\
	(pg)->mdpage.pvh_list = NULL;					\
	(pg)->mdpage.pvh_attrs = 0;					\
} while (0)
@


1.23
log
@Switch alpha to __HAVE_VM_PAGE_MD. From NetBSD.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.22 2013/03/23 16:12:18 deraadt Exp $ */
a130 1
#define __HAVE_VM_PAGE_MD
@


1.22
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.21 2011/05/30 22:25:20 oga Exp $ */
d129 1
a129 1
 * pmap-specific data stored in the vm_physmem[] array.
d131 4
a134 3
#define __HAVE_PMAP_PHYSSEG
struct pmap_physseg {
	struct pv_head *pvhead;		/* pv list of this seg */
d136 6
@


1.21
log
@Remove the freelist member from vm_physseg

The new world order of pmemrange makes this data completely redundant
(being dealt with by the pmemrange constraints instead). Remove all code
that messes with the freelist.

While touching every caller of uvm_page_physload() anyway, add the flags
argument to all callers (all but one is 0 and that one already used
PHYSLOAD_DEVICE) and remove the macro magic to allow callers to continue
without it.

Should shrink the code a bit, as well.

matthew@@ pointed out some mistakes i'd made.
``freelist death, I like. Ok.' ariane@@
`I agree with the general direction, go ahead and i'll fix any fallout
shortly'' miod@@ (68k 88k and vax i could not check would build)
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.20 2011/03/23 16:54:34 pirofti Exp $ */
d60 1
a60 1
#define	USRTEXT		NBPG
d119 1
a119 1
#define VM_PHYS_SIZE		(USRIOSIZE*NBPG)
@


1.20
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.19 2010/12/15 05:30:18 tedu Exp $ */
a126 3

#define	VM_NFREELIST		1
#define	VM_FREELIST_DEFAULT	0
@


1.19
log
@oops, i forgot to check in the BRKSIZ define in uvm, but deraadt thinks
its better as a per arch MD define anyway.  all default to MAXDSIZ as before.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.18 2008/10/06 23:09:37 brad Exp $ */
d42 2
a43 2
#ifndef	_ALPHA_VMPARAM_H_
#define	_ALPHA_VMPARAM_H_
d139 1
a139 1
#endif	/* ! _ALPHA_VMPARAM_H_ */
@


1.18
log
@more readable virtual memory size values.

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.17 2008/07/25 21:24:49 miod Exp $ */
d74 3
@


1.17
log
@phyio -> physio
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.16 2008/07/25 20:51:56 kurt Exp $ */
d67 1
a67 1
#define	MAXTSIZ		(1<<30)			/* max text size (1G) */
d70 1
a70 1
#define	DFLDSIZ		(1<<27)			/* initial data size (128M) */
d73 1
a73 1
#define	MAXDSIZ		(1<<30)			/* max data size (1G) */
d76 1
a76 1
#define	DFLSSIZ		(1<<21)			/* initial stack size (2M) */
d79 1
a79 1
#define	MAXSSIZ		(1<<25)			/* max stack size (32M) */
@


1.16
log
@The PIE address range defaults are too big for alpha and can land on or
above the stack. Fix by mapping PIE into the first quarter of the address
space before stack. "will do for now" miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.15 2008/06/24 21:24:01 deraadt Exp $ */
d85 1
a85 1
 * PTEs for mapping user space into the kernel for phyio operations.
@


1.15
log
@On user/kernel shared page table machines, do not let processes map their
own page 0, as discussed with miod (and many others previously, including
art and toby).  On sparc, make this __LDPGSZ because PAGE_SIZE is non-constant
ok miod tedu
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.14 2005/04/11 15:12:59 deraadt Exp $ */
d110 4
@


1.14
log
@use MD #define to choose stackgap size per-architecture.  on sparc, special
case sun4c/sun4 -- because address space is more constrained
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.13 2004/11/28 01:36:38 mickey Exp $ */
d105 1
a105 1
#define VM_MIN_ADDRESS		((vaddr_t)ALPHA_USEG_BASE)	    /* 0 */
@


1.13
log
@MAXSLP is not really an MD-configurable define so move it to param.h; miod@@ testing
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.12 2004/01/23 21:20:54 millert Exp $ */
d81 2
@


1.12
log
@Crank SHMMAXPGS to 32mb; deraadt@@ OK for all, drahn@@ OK for macppc + pegasos
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.11 2003/06/02 23:27:43 millert Exp $ */
a96 11

/*
 * The time for a process to be blocked before being very swappable.
 * This is a number of seconds which the system takes as being a non-trivial
 * amount of real time.  You probably shouldn't change this;
 * it is used in subtle ways (fractions and multiples of it are, that is, like
 * half of a ``long time'', almost a long time, etc.)
 * It is related to human patience and other factors which don't really
 * change over time.
 */
#define	MAXSLP 		20
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.10 2002/02/17 22:59:52 maja Exp $ */
d95 1
a95 1
#define SHMMAXPGS	1024		/* 8mb */
@


1.10
log
@Patch from Daniel Lucq <daniel@@lucq.org>

The patch allows you to change the value of NMBCLUSTERS, BUFCACHEPERCENT
and NKMEMPAGES using the config command, instead of recompiling the kernel.

This is the kernel part of the patch. I have compiled it on i386, sparc64,
alpha and macppc. -moj ok art@@ maja@@
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.9 2001/12/05 16:25:44 art Exp $ */
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@VM_KMEM_SIZE no longer needed.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.8 2001/11/30 17:37:43 art Exp $ */
a124 1
#define VM_MBUF_SIZE		(NMBCLUSTERS*MCLBYTES)
@


1.9.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.9 2001/12/05 16:25:44 art Exp $ */
d125 1
@


1.8
log
@Now that pmaps can have vm_page_md, make pmap_physseg optional.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.7 2001/06/27 06:19:42 art Exp $ */
a125 1
#define VM_KMEM_SIZE		(NKMEMCLUSTERS*NBPG)
@


1.7
log
@MNN is no longer an option.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.6 2000/11/08 21:27:25 ericj Exp $ */
d142 1
@


1.6
log
@tag the rest of alpha tree
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.18 2000/05/22 17:13:54 thorpej Exp $ */
a130 2

#define MACHINE_NEW_NONCONTIG
@


1.5
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.4
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 2
/*	$OpenBSD: vmparam.h,v 1.3 1996/07/09 00:28:25 cgd Exp $	*/
/*	$NetBSD: vmparam.h,v 1.3 1996/07/09 00:28:25 cgd Exp $	*/
d45 3
d51 1
d57 5
d63 2
a64 2
#define	USRTEXT		CLBYTES
#define	USRSTACK	VM_MAXUSER_ADDRESS
a85 10
 * Default sizes of swap allocation chunks (see dmap.h).
 * The actual values may be changed in vminit() based on MAXDSIZ.
 * With MAXDSIZ of 16Mb and NDMAP of 38, dmmax will be 1024.
 * DMMIN should be at least ctod(1) so that vtod() works.
 * vminit() insures this.
 */
#define	DMMIN	32			/* smallest swap allocation */
#define	DMMAX	4096			/* largest potential swap allocation */

/*
a101 12
 * Boundary at which to place first MAPMEM segment if not explicitly
 * specified.  Should be a power of two.  This allows some slop for
 * the data segment to grow underneath the first mapped segment.
 */
#define MMSEG		0x200000

/*
 * The size of the clock loop.
 */
#define	LOOPPAGES	(maxfree - firstfree)

/*
a112 11
 * A swapped in process is given a small amount of core without being bothered
 * by the page replacement algorithm.  Basically this says that if you are
 * swapped in you deserve some resources.  We protect the last SAFERSS
 * pages against paging and will just swap you out rather than paging you.
 * Note that each process has at least UPAGES+CLSIZE pages which are not
 * paged anyways, in addition to SAFERSS.
 */
#define	SAFERSS		10		/* nominal ``small'' resident set size
					   protected against replacement */

/*
d117 2
a118 2
#define VM_MIN_ADDRESS		((vm_offset_t)ALPHA_USEG_BASE) /* 0 */
#define VM_MAXUSER_ADDRESS	((vm_offset_t)0x0000000200000000) /* 8G XXX */
d120 2
a121 2
#define VM_MIN_KERNEL_ADDRESS	((vm_offset_t)ALPHA_K1SEG_BASE)
#define VM_MAX_KERNEL_ADDRESS	((vm_offset_t)ALPHA_K1SEG_END)
d125 2
a126 2
#define VM_KMEM_SIZE		(NKMEMCLUSTERS*CLBYTES)
#define VM_PHYS_SIZE		(USRIOSIZE*CLBYTES)
d129 19
a147 1
#define	VPTBASE		((vm_offset_t)0xfffffffc00000000) /* Virt. pg table */
@


1.4.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/* $OpenBSD: vmparam.h,v 1.6 2000/11/08 21:27:25 ericj Exp $ */
/* $NetBSD: vmparam.h,v 1.18 2000/05/22 17:13:54 thorpej Exp $ */
a45 3
#ifndef	_ALPHA_VMPARAM_H_
#define	_ALPHA_VMPARAM_H_

a48 1

a53 5
 *
 * Digital UNIX (formerly DEC OSF/1) places the stack below the
 * text segment (i.e. growing downward from 4G).  We may want to
 * consider doing that at some point, but it might require changes
 * to the exec code.
d55 2
a56 2
#define	USRTEXT		NBPG
#define	USRSTACK	((vaddr_t)0x0000000200000000)		/* 8G */
d78 10
d104 12
d127 11
d142 2
a143 2
#define VM_MIN_ADDRESS		((vaddr_t)ALPHA_USEG_BASE)	    /* 0 */
#define VM_MAXUSER_ADDRESS	((vaddr_t)(ALPHA_USEG_END + 1L))    /* 4T */
d145 2
a146 2
#define VM_MIN_KERNEL_ADDRESS	((vaddr_t)ALPHA_K1SEG_BASE)
#define VM_MAX_KERNEL_ADDRESS	((vaddr_t)ALPHA_K1SEG_END)
d150 2
a151 2
#define VM_KMEM_SIZE		(NKMEMCLUSTERS*NBPG)
#define VM_PHYS_SIZE		(USRIOSIZE*NBPG)
d154 1
a154 19
#define	VPTBASE		((vaddr_t)0xfffffffc00000000)	/* Virt. pg table */

#define MACHINE_NEW_NONCONTIG

#define	VM_PHYSSEG_MAX		16		/* XXX */
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_BSEARCH
#define	VM_PHYSSEG_NOADD			/* no more after vm_mem_init */

#define	VM_NFREELIST		1
#define	VM_FREELIST_DEFAULT	0

/*
 * pmap-specific data stored in the vm_physmem[] array.
 */
struct pmap_physseg {
	struct pv_head *pvhead;		/* pv list of this seg */
};

#endif	/* ! _ALPHA_VMPARAM_H_ */
@


1.4.14.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.4.14.1 2001/04/18 16:01:00 niklas Exp $ */
d131 2
@


1.4.14.3
log
@Merge in -current
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.4.14.2 2001/07/04 10:14:37 niklas Exp $ */
a141 1
#define __HAVE_PMAP_PHYSSEG
@


1.4.14.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d125 2
@


1.4.14.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: vmparam.h,v 1.4.14.4 2002/03/06 00:47:44 niklas Exp $ */
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.4.14.6
log
@Merge of -current from two weeks ago into the SMP branch
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d95 1
a95 1
#define SHMMAXPGS	4096		/* 32mb */
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: vmparam.h,v 1.2 1995/11/23 02:36:46 cgd Exp $	*/
/*	$NetBSD: vmparam.h,v 1.2 1995/11/23 02:36:46 cgd Exp $	*/
a86 9
#ifdef THESE_ARE_WRONG
/*
 * Sizes of the system and user portions of the system page table.
 */
/* SYSPTSIZE IS SILLY; (really number of buffers for I/O) */
#define	SYSPTSIZE	1228
#define	USRPTSIZE 	1024
#endif /* WRONG */

d132 1
a132 6
 * paged anyways (this is currently 8+2=10 pages or 5k bytes), so this
 * number just means a swapped in process is given around 25k bytes.
 * Just for fun: current memory prices are 4600$ a megabyte on VAX (4/22/81),
 * so we loan each swapped in process memory worth 100$, or just admit
 * that we don't consider it worthwhile and swap it out to disk which costs
 * $30/mb or about $0.75.
d134 1
a134 1
#define	SAFERSS		4		/* nominal ``small'' resident set size
a136 5
#ifdef THESE_ARE_WRONG
#define	mapin(pte, v, pfnum, prot) \
	(*(int *)(pte) = ((pfnum) << PG_SHIFT) | (prot), MachTLBFlushAddr(v))
#endif /* WRONG */

d142 2
a143 2
#define VM_MIN_ADDRESS		((vm_offset_t)0x0000000000000000) /* 0 */
#define VM_MAXUSER_ADDRESS	((vm_offset_t)0x0000000200000000) /* 8G */
d145 2
a146 2
#define VM_MIN_KERNEL_ADDRESS	((vm_offset_t)0xfffffe0000000000)
#define VM_MAX_KERNEL_ADDRESS	((vm_offset_t)0xffffffffffffffff)
a154 5

#ifdef THESE_ARE_WRONG
/* pcb base */
#define	pcbb(p)		((u_int)(p)->p_addr)
#endif /* WRONG */
@


1.2
log
@update to netbsd
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: vmparam.h,v 1.1 1995/02/13 23:08:01 cgd Exp $	*/
a171 1
#define	VM_MAX_PHYSADDR	((vm_offset_t)0x0000000080000000) /* max phys addr */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
