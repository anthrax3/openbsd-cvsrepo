head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	UBC_SYNC_A:1.7
	UBC_SYNC_B:1.7
	OPENBSD_3_0:1.6.0.22
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2001.11.30.00.33.47;	author miod;	state dead;
branches;
next	1.6;

1.6
date	96.10.30.22.39.22;	author niklas;	state Exp;
branches
	1.6.14.1;
next	1.5;

1.5
date	96.10.17.22.19.45;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.29.22.59.08;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.06.18.09.43.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.43;	author deraadt;	state Exp;
branches;
next	;

1.6.14.1
date	2001.12.05.00.39.08;	author niklas;	state dead;
branches;
next	;


desc
@@


1.7
log
@This file was just a placeholder required for kern_exit_43.c to compile.
@
text
@/*	$OpenBSD: psl.h,v 1.6 1996/10/30 22:39:22 niklas Exp $	*/
/*	$NetBSD: psl.h,v 1.6 1996/07/09 00:37:51 cgd Exp $	*/

/*
 * Everything which would be defined here is defined in
 * alpha_cpu.h, and this file is no longer necessary for the
 * Alpha.  However, some machine-independent code (e.g.
 * /sys/compat/common/kern_exit_43.c) still wants a file with
 * this name to be around.
 */
@


1.6
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.6 1996/07/09 00:37:51 cgd Exp $	*/
@


1.6.14.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.6 1996/10/30 22:39:22 niklas Exp $	*/
@


1.5
log
@-Wall happiness
@
text
@d1 2
a2 2
/*	$OpenBSD: psl.h,v 1.4 1996/07/29 22:59:08 niklas Exp $	*/
/*	$NetBSD: psl.h,v 1.5 1996/04/23 15:24:09 cgd Exp $	*/
d5 5
a9 24
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
a10 68

#ifndef __ALPHA_PSL_H__
#define	__ALPHA_PSL_H__

/*
 * Processor Status register definitions.
 */
#define	PSL_U		0x08		/* PS<3> == 1 -> User mode */
#define	PSL_IPL		0x07		/* PS<2:0> -> Interrupt mask */

/*
 * The interrupt priority levels.
 * Other IPL's are configured in software, and are listed below.
 */
#define	PSL_IPL_0	0		/* all interrupts enabled */
#define PSL_IPL_SOFT	1		/* block software interrupts */
#define	PSL_IPL_IO	4		/* block I/O device interrupts */
#define	PSL_IPL_CLOCK	5		/* block clock interrupts */
#define	PSL_IPL_HIGH	6		/* block everything except mchecks */

/*
 * Miscellaneous PSL definitions
 */
#define	PSL_MBZ		(0xfffffffffffffff0)	/* Must be always zero */
#define	PSL_USERSET	(PSL_U)			/* Must be set for user-mode */
#define	PSL_USERCLR	(PSL_MBZ|PSL_IPL)	/* Must be clr for user-mode */
#define	USERMODE(ps)	((ps & PSL_U) != 0)	/* Is it user-mode? */

#ifdef _KERNEL
/*
 * Translation buffer invalidation macro definitions.
 */
#define	TBI_A		-2		/* Flush all TB entries */
#define	TBI_AP		-1		/* Flush all per-process TB entries */
#define	TBI_SI		1		/* Invalidate ITB entry for va */
#define	TBI_SD		2		/* Invalidate DTB entry for va */
#define	TBI_S		3		/* Invalidate all entries for va */

#define	TBIA()		pal_tbi(TBI_A, NULL)
#define	TBIAP()		pal_tbi(TBI_AP, NULL)
#define	TBISI(va)	pal_tbi(TBI_SI, va)
#define	TBISD(va)	pal_tbi(TBI_SD, va)
#define	TBIS(va)	pal_tbi(TBI_S, va)

/*
 * Cache invalidation/flush routines.
 */

/* Flush all write buffers */
static __inline void wbflush __P((void));
static __inline void
wbflush()
{
	/* XXX? wmb */
	__asm __volatile("mb" : : : "memory");
}

#define	IMB()		pal_imb()	/* Sync instruction cache w/data */

void alpha_mb __P((void));		/* Flush all write buffers */
void pal_imb __P((void));		/* Sync instruction cache */
u_int64_t pal_swpipl __P((u_int64_t));	/* write new IPL, return old */
u_int64_t profile_swpipl __P((u_int64_t));	/* pal_swpipl w/o profiling */
void pal_tbi __P((u_int64_t, void *));	/* Invalidate TLB entries */
void pal_halt __P((void)) __attribute__((__noreturn__)); /* halt/reboot */
#endif /* _KERNEL */

#endif /* !__ALPHA_PSL_H__ */
@


1.4
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.5 1996/04/23 15:24:09 cgd Exp $	*/
d79 8
a86 2
static __inline int wbflush() \
	{ __asm __volatile("mb" : : : "memory"); }	/* XXX? wmb */
@


1.3
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.2
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: psl.h,v 1.4 1995/11/23 02:36:33 cgd Exp $	*/
d78 2
a79 2
static __inline int wbflush() { __asm __volatile("mb"); }	/* XXX? wmb */

d87 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: psl.h,v 1.3 1995/08/03 00:03:09 cgd Exp $	*/
d30 3
d76 1
a76 3
#if 0
#define	wbflush()	alpha_mb()	/* Flush all write buffers */
#else
d78 2
a79 2
#define	wbflush()	__asm __volatile("mb")
#endif
d85 1
d88 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
