head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.16
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.14
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.6
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.8
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.24
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.22
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.20
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.18
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.16
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.12
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.4
	UBC:1.3.0.2
	UBC_BASE:1.3
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.7
date	2014.03.29.18.09.28;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.23.16.54.34;	author pirofti;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.26.05.42.08;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.10.10.13.27;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.04.23.00.11;	author art;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.11.08.21.27.17;	author ericj;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2000.11.08.16.01.11;	author art;	state Exp;
branches;
next	;

1.2.2.1
date	2001.04.18.16.00.48;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.11.13.21.00.49;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2003.03.27.23.18.06;	author niklas;	state Exp;
branches;
next	;

1.3.2.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@It's been a quarter century: we can assume volatile is present with that name.

ok dlg@@ mpi@@ deraadt@@
@
text
@/* $OpenBSD: bwx.h,v 1.6 2011/03/23 16:54:34 pirofti Exp $ */
/* $NetBSD: bwx.h,v 1.3 2000/06/08 02:55:37 thorpej Exp $ */

/*-
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_BWX_H_
#define	_MACHINE_BWX_H_

/*
 * Alpha Byte/Word Extension instructions.
 *
 * These instructions are available on EV56 (21164A) and later processors.
 *
 * See "Alpha Architecture Handbook, Version 3", DEC order number EC-QD2KB-TE.
 */

#define BWX_EV56_INT8	(0L << 37)
#define BWX_EV56_INT4	(1L << 37)
#define BWX_EV56_INT2	(2L << 37)
#define BWX_EV56_INT1	(3L << 37)

static __inline u_int8_t
alpha_ldbu(volatile u_int8_t *a0)
{
	u_int8_t v0;

	__asm volatile("ldbu %0, %1"
		: "=r" (v0)
		: "m" (*a0));

	return (v0);
}

static __inline u_int16_t
alpha_ldwu(volatile u_int16_t *a0)
{
	u_int16_t v0;

	__asm volatile("ldwu %0, %1"
		: "=r" (v0)
		: "m" (*a0));

	return (v0);
}

static __inline u_int32_t
alpha_ldlu(volatile u_int32_t *a0)
{
	return (*a0);
}

static __inline void
alpha_stb(volatile u_int8_t *a0, u_int8_t a1)
{

	__asm volatile("stb %1, %0"
		: "=m" (*a0)
		: "r" (a1)
		: "memory");
}

static __inline void
alpha_stw(volatile u_int16_t *a0, u_int16_t a1)
{

	__asm volatile("stw %1, %0"
		: "=m" (*a0)
		: "r" (a1)
		: "memory");
}

static __inline void
alpha_stl(volatile u_int32_t *a0, u_int32_t a1)
{

	__asm volatile("stl %1, %0"
		: "=m" (*a0)
		: "r" (a1)
		: "memory");
}

static __inline u_int8_t
alpha_sextb(u_int8_t a0)
{
	u_int8_t v0;

	__asm volatile("sextb %1, %0"
		: "=r" (v0)
		: "r" (a0)
		: "memory");

	return (v0);
}

static __inline u_int16_t
alpha_sextw(u_int16_t a0)
{
	u_int16_t v0;

	__asm volatile("sextw %1, %0"
		: "=r" (v0)
		: "r" (a0)
		: "memory");

	return (v0);
}

#endif /* _MACHINE_BWX_H_ */
@


1.6
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.5 2008/06/26 05:42:08 ray Exp $ */
d51 1
a51 1
alpha_ldbu(__volatile u_int8_t *a0)
d55 1
a55 1
	__asm __volatile("ldbu %0, %1"
d63 1
a63 1
alpha_ldwu(__volatile u_int16_t *a0)
d67 1
a67 1
	__asm __volatile("ldwu %0, %1"
d75 1
a75 1
alpha_ldlu(__volatile u_int32_t *a0)
d81 1
a81 1
alpha_stb(__volatile u_int8_t *a0, u_int8_t a1)
d84 1
a84 1
	__asm __volatile("stb %1, %0"
d91 1
a91 1
alpha_stw(__volatile u_int16_t *a0, u_int16_t a1)
d94 1
a94 1
	__asm __volatile("stw %1, %0"
d101 1
a101 1
alpha_stl(__volatile u_int32_t *a0, u_int32_t a1)
d104 1
a104 1
	__asm __volatile("stl %1, %0"
d115 1
a115 1
	__asm __volatile("sextb %1, %0"
d128 1
a128 1
	__asm __volatile("sextw %1, %0"
@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.4 2002/05/10 10:13:27 art Exp $ */
d34 2
a35 2
#ifndef _ALPHA_BWX_H_
#define	_ALPHA_BWX_H_
d136 1
a136 1
#endif /* _ALPHA_BWX_H_ */
@


1.4
log
@Mark all those __asm directives as clobbering memory, because
that's what they are supposed to do.
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.3 2001/11/04 23:00:11 art Exp $ */
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.3
log
@Add alpha_ldlu and alpha_stl.
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.2 2000/11/08 21:27:17 ericj Exp $ */
d93 2
a94 1
		: "r" (a1));
d103 2
a104 1
		: "r" (a1));
d113 2
a114 1
		: "r" (a1));
d124 2
a125 1
		: "r" (a0));
d137 2
a138 1
		: "r" (a0));
@


1.3.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.3 2001/11/04 23:00:11 art Exp $ */
d93 1
a93 2
		: "r" (a1)
		: "memory");
d102 1
a102 2
		: "r" (a1)
		: "memory");
d111 1
a111 2
		: "r" (a1)
		: "memory");
d121 1
a121 2
		: "r" (a0)
		: "memory");
d133 1
a133 2
		: "r" (a0)
		: "memory");
@


1.2
log
@tag the rest of alpha tree
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.3 2000/06/08 02:55:37 thorpej Exp $ */
d52 5
d81 6
d101 9
@


1.2.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/* $OpenBSD: bwx.h,v 1.2 2000/11/08 21:27:17 ericj Exp $ */
@


1.2.2.2
log
@Merge in -current
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a51 5
#define BWX_EV56_INT8	(0L << 37)
#define BWX_EV56_INT4	(1L << 37)
#define BWX_EV56_INT2	(2L << 37)
#define BWX_EV56_INT1	(3L << 37)

a75 6
static __inline u_int32_t
alpha_ldlu(__volatile u_int32_t *a0)
{
	return (*a0);
}

a89 9
		: "=m" (*a0)
		: "r" (a1));
}

static __inline void
alpha_stl(__volatile u_int32_t *a0, u_int32_t a1)
{

	__asm __volatile("stl %1, %0"
@


1.2.2.3
log
@Sync the SMP branch with 3.3
@
text
@d93 1
a93 2
		: "r" (a1)
		: "memory");
d102 1
a102 2
		: "r" (a1)
		: "memory");
d111 1
a111 2
		: "r" (a1)
		: "memory");
d121 1
a121 2
		: "r" (a0)
		: "memory");
d133 1
a133 2
		: "r" (a0)
		: "memory");
@


1.1
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@

