head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.18
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.14
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.10
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.12
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.30
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.28
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.26
	OPENBSD_5_0:1.10.0.24
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.22
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.20
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.8.0.22
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.20
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.18
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.16
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.14
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.12
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.10
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.8
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.8.0.6
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.6
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.10.00.04.03;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.24.20.46.41;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.16.00.08.53;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.15.12.05.57;	author art;	state Exp;
branches;
next	1.6;

1.6
date	99.02.04.23.30.18;	author niklas;	state Exp;
branches
	1.6.6.1;
next	1.5;

1.5
date	96.10.30.22.38.56;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.29.22.58.30;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.06.18.09.43.09;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.24.16.46.38;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches;
next	;

1.6.6.1
date	2001.04.18.16.00.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@/*	$OpenBSD: cdefs.h,v 1.10 2006/01/10 00:04:03 millert Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef _MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define	__strong_alias(alias,sym)				\
	__asm__(".global " __STRING(alias) " ; "		\
	    __STRING(alias) " = " __STRING(sym))
#define	__weak_alias(alias,sym)					\
	__asm__(".weak " __STRING(alias) " ; "			\
	    __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)				\
	__asm__(".section .gnu.warning." __STRING(sym)		\
	    " ; .ascii \"" msg "\" ; .text")

#endif /* !_MACHINE_CDEFS_H_ */
@


1.10
log
@Remove duplicate _C_LABEL define.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.9 2005/11/24 20:46:41 deraadt Exp $	*/
d33 3
a35 5
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__STDC__)
a41 1
#endif
@


1.9
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2001/01/16 00:08:53 art Exp $	*/
a31 2

#define	_C_LABEL(x)	_STRING(x)
@


1.8
log
@Don't define __indr_reference for ELF.
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.7 2001/01/15 12:05:57 art Exp $	*/
/*	$NetBSD: cdefs.h,v 1.5 1996/10/12 18:08:12 cgd Exp $	*/
d35 12
a46 32
#ifdef __ELF__

#ifdef __STDC__

#define	__weak_alias(alias,sym)						\
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")

#else /* !__STDC__ */

#define	__weak_alias(alias,sym)						\
    __asm__(".weak alias ; alias = sym")
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning.sym ; .ascii msg ; .text")

#endif /* !__STDC__ */

#else /* !__ELF__ */

/*
 * We don't support indirect references and don't do anything with warnings.
 */

#ifdef __STDC__
#define	__weak_alias(alias,sym)		__asm__(".weakext " __STRING(alias) ", " __STRING(sym))
#else /* !__STDC__ */
#define	__weak_alias(alias,sym)		__asm__(".weakext alias, sym")
#endif /* !__STDC__ */
#define	__warn_references(sym,msg)	/* nothing */

#endif /* !__ELF__ */
@


1.7
log
@Use __STRING() macro instead of manually trying to do the same thing.
From d@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6 1999/02/04 23:30:18 niklas Exp $	*/
a36 2

#define	__indr_reference(sym,alias)	/* nada, since we do weak refs */
@


1.6
log
@implement __weak_alias macro in ECOFF case too
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5 1996/10/30 22:38:56 niklas Exp $	*/
d43 1
a43 1
    __asm__(".weak " #alias " ; " #alias " = " #sym)
d45 1
a45 1
    __asm__(".section .gnu.warning." #sym " ; .ascii \"" msg "\" ; .text")
d63 1
a63 1
#define	__weak_alias(alias,sym)		__asm__(".weakext " #alias ", " #sym)
@


1.6.6.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2001/01/16 00:08:53 art Exp $	*/
d38 2
d43 1
a43 1
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
d45 1
a45 1
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
d63 1
a63 1
#define	__weak_alias(alias,sym)		__asm__(".weakext " __STRING(alias) ", " __STRING(sym))
@


1.5
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5 1996/10/12 18:08:12 cgd Exp $	*/
d59 1
a59 2
 * Very little to do if not ELF: we support neither indirect or
 * weak references, and don't do anything with warnings.
d62 5
@


1.4
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: cdefs.h,v 1.2 1995/05/03 00:13:55 cgd Exp $	*/
/*	$NetBSD: cdefs.h,v 1.2 1995/05/03 00:13:55 cgd Exp $	*/
d5 1
a5 1
 * Copyright (c) 1995 Carnegie-Mellon University.
d36 27
a62 1
#define	__indr_references(sym,msg)	/* nothing */
d64 2
@


1.3
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.2
log
@Do not define __indr_reference when running lint(1)
@
text
@d35 1
a35 3
#ifndef lint
#define	__indr_reference(sym,msg)	/* nothing */
#endif
@


1.1
log
@Initial revision
@
text
@d35 3
a37 1
#define	__indr_references(sym,msg)	/* nothing */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
