head	1.40;
access;
symbols
	OPENBSD_6_1:1.40.0.4
	OPENBSD_6_1_BASE:1.40
	OPENBSD_6_0:1.39.0.14
	OPENBSD_6_0_BASE:1.39
	OPENBSD_5_9:1.39.0.10
	OPENBSD_5_9_BASE:1.39
	OPENBSD_5_8:1.39.0.12
	OPENBSD_5_8_BASE:1.39
	OPENBSD_5_7:1.39.0.4
	OPENBSD_5_7_BASE:1.39
	OPENBSD_5_6:1.39.0.8
	OPENBSD_5_6_BASE:1.39
	OPENBSD_5_5:1.39.0.6
	OPENBSD_5_5_BASE:1.39
	OPENBSD_5_4:1.39.0.2
	OPENBSD_5_4_BASE:1.39
	OPENBSD_5_3:1.36.0.4
	OPENBSD_5_3_BASE:1.36
	OPENBSD_5_2:1.36.0.2
	OPENBSD_5_2_BASE:1.36
	OPENBSD_5_1_BASE:1.35
	OPENBSD_5_1:1.35.0.2
	OPENBSD_5_0:1.34.0.8
	OPENBSD_5_0_BASE:1.34
	OPENBSD_4_9:1.34.0.6
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.34.0.4
	OPENBSD_4_8_BASE:1.34
	OPENBSD_4_7:1.34.0.2
	OPENBSD_4_7_BASE:1.34
	OPENBSD_4_6:1.33.0.10
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.6
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.4
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.33.0.2
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.32.0.2
	OPENBSD_4_2_BASE:1.32
	OPENBSD_4_1:1.31.0.4
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.31.0.2
	OPENBSD_4_0_BASE:1.31
	OPENBSD_3_9:1.29.0.2
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.26.0.2
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.25.0.4
	OPENBSD_3_7_BASE:1.25
	OPENBSD_3_6:1.25.0.2
	OPENBSD_3_6_BASE:1.25
	SMP_SYNC_A:1.24
	SMP_SYNC_B:1.24
	OPENBSD_3_5:1.23.0.4
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.23.0.2
	OPENBSD_3_4_BASE:1.23
	UBC_SYNC_A:1.22
	OPENBSD_3_3:1.22.0.6
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.22.0.4
	OPENBSD_3_2_BASE:1.22
	OPENBSD_3_1:1.22.0.2
	OPENBSD_3_1_BASE:1.22
	UBC_SYNC_B:1.22
	UBC:1.21.0.2
	UBC_BASE:1.21
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9:1.19.0.2
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	SMP:1.10.0.12
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.10
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.8
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.6
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.4
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.40
date	2016.09.03.14.25.27;	author bluhm;	state Exp;
branches;
next	1.39;
commitid	9KYyCUntEsgBdw9n;

1.39
date	2013.03.26.05.04.08;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2013.03.23.16.12.18;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2012.06.26.01.59.47;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.34;

1.34
date	2009.10.02.17.57.23;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2007.09.15.10.10.37;	author martin;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.31;

1.31
date	2006.08.12.17.54.38;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2006.03.19.01.47.23;	author martin;	state Exp;
branches;
next	1.29;

1.29
date	2005.12.13.01.56.43;	author martin;	state Exp;
branches;
next	1.28;

1.28
date	2005.10.28.19.10.26;	author martin;	state Exp;
branches;
next	1.27;

1.27
date	2005.10.21.11.10.06;	author martin;	state Exp;
branches;
next	1.26;

1.26
date	2005.07.31.15.31.08;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2004.08.06.22.31.30;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2004.04.19.22.55.45;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2003.06.02.23.27.43;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2001.12.05.01.57.14;	author provos;	state Exp;
branches
	1.21.2.1;
next	1.20;

1.20
date	2001.05.05.20.56.31;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2001.03.16.16.56.25;	author art;	state Exp;
branches;
next	1.18;

1.18
date	2001.03.03.21.21.48;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2001.02.27.17.13.50;	author art;	state Exp;
branches;
next	1.16;

1.16
date	2000.11.24.03.57.49;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2000.11.19.01.11.29;	author art;	state Exp;
branches;
next	1.14;

1.14
date	2000.11.08.21.27.21;	author ericj;	state Exp;
branches;
next	1.13;

1.13
date	2000.11.08.16.01.12;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2000.07.06.13.38.30;	author ericj;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.22.19.27.40;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.09.17.17.44.04;	author downsj;	state Exp;
branches
	1.10.12.1;
next	1.9;

1.9
date	97.01.24.19.57.14;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.12.11.11.12.51;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.12.08.00.20.25;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.10.30.22.39.13;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.07.29.22.58.58;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.06.18.09.43.26;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.12.26.18.14.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.42;	author deraadt;	state Exp;
branches;
next	;

1.10.12.1
date	2000.03.02.07.04.25;	author niklas;	state Exp;
branches;
next	1.10.12.2;

1.10.12.2
date	2001.04.18.16.00.56;	author niklas;	state Exp;
branches;
next	1.10.12.3;

1.10.12.3
date	2001.07.04.10.14.37;	author niklas;	state Exp;
branches;
next	1.10.12.4;

1.10.12.4
date	2002.03.06.00.47.44;	author niklas;	state Exp;
branches;
next	1.10.12.5;

1.10.12.5
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	1.10.12.6;

1.10.12.6
date	2003.06.07.11.11.33;	author ho;	state Exp;
branches;
next	1.10.12.7;

1.10.12.7
date	2004.06.05.23.10.43;	author niklas;	state Exp;
branches;
next	;

1.21.2.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.40
log
@Increase the number of mbufs on most architectures.  This is based
on a guess how much memory a typical machine has.  If the value is
too high, users may run out of kernel memory.  Then we will have
to adjust this again.
OK claudio@@ deraadt@@
@
text
@/* $OpenBSD: param.h,v 1.39 2013/03/26 05:04:08 deraadt Exp $ */

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department and Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#define	_MACHINE	alpha
#define	MACHINE		"alpha"
#define	_MACHINE_ARCH	alpha
#define	MACHINE_ARCH	"alpha"
#define	MID_MACHINE	MID_ALPHA

#ifdef _KERNEL
#include <machine/cpu.h>
#endif

#define	PAGE_SHIFT	13
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define	KERNBASE	0xfffffc0000580000	/* start of kernel virtual */

#ifdef _KERNEL

#define	NBPG		PAGE_SIZE		/* bytes/page */
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */

#define	UPAGES		2			/* pages of u-area */
#define	USPACE		(UPAGES * PAGE_SIZE)	/* total size of u-area */
#define	USPACE_ALIGN	0			/* u-area alignment 0-none */

#define	NMBCLUSTERS	(16 * 1024)		/* max cluster allocation */

#ifndef	MSGBUFSIZE
#define	MSGBUFSIZE	(2 * PAGE_SIZE)		/* default message buffer size */
#endif

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT	((128 * 1024 * 1024) >> PAGE_SHIFT)

#ifndef _LOCORE

#include <machine/intr.h>

void	delay(unsigned long);
#define	DELAY(n)	delay(n)

/* XXX THE FOLLOWING PROTOTYPE BELONGS IN INTR.H */
int spl0(void);			/* drop ipl to zero */
/* XXX END INTR.H */

/* XXX THE FOLLOWING PROTOTYPE SHOULD BE A BUS.H INTERFACE */
paddr_t alpha_XXX_dmamap(vaddr_t);
/* XXX END BUS.H */

#endif
#endif /* !_KERNEL */

#endif /* _MACHINE_PARAM_H_ */
@


1.39
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.38 2013/03/25 17:46:24 deraadt Exp $ */
d66 1
a66 1
#define	NMBCLUSTERS	4096			/* map size, max cluster allocation */
@


1.38
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.37 2013/03/23 16:12:18 deraadt Exp $ */
a52 2
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */
d59 2
@


1.37
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.36 2012/06/26 01:59:47 deraadt Exp $ */
a48 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.36
log
@Stop the song and dance where alpha param.h tries to include the world.
"Why is this not commited yet?" says miod
@
text
@d1 1
a1 2
/* $OpenBSD: param.h,v 1.35 2011/09/08 03:40:32 guenther Exp $ */
/* $NetBSD: param.h,v 1.30 2000/06/09 16:03:04 thorpej Exp $ */
a34 4
 *
 * from: Utah $Hdr: machparam.h 1.11 89/08/14$
 *
 *	@@(#)param.h	8.1 (Berkeley) 6/10/93
d37 3
a39 3
/*
 * Machine dependent constants for the Alpha.
 */
d54 5
a58 7
#define	NBPG		(1 << 13)		/* bytes/page */
#define	PGOFSET		(NBPG-1)		/* byte off. into pg */
#define	PGSHIFT		13			/* LOG2(NBPG) */

#define PAGE_SHIFT	13
#define PAGE_SIZE	(1 << PAGE_SHIFT)
#define PAGE_MASK	(PAGE_SIZE - 1)
d62 3
a64 6
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define	BLKDEV_IOSIZE	2048
#ifndef	MAXPHYS
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
#endif
d67 2
a68 2
#define	USPACE		(UPAGES * NBPG)		/* total size of u-area */
#define	USPACE_ALIGN	(0)			/* u-area alignment 0-none */
d70 4
a73 2
#ifndef MSGBUFSIZE
#define MSGBUFSIZE	NBPG		/* default message buffer size */
d77 1
a77 7
 * Constants related to network buffer management.
 */
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */


/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
a79 1
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
a81 9
/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)

#ifdef _KERNEL
d99 2
@


1.35
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.34 2009/10/02 17:57:23 miod Exp $ */
d51 1
a51 1
#include <machine/alpha_cpu.h>
d53 1
d59 3
a61 3
#define	NBPG		(1 << ALPHA_PGSHIFT)		/* bytes/page */
#define	PGOFSET		(NBPG-1)			/* byte off. into pg */
#define	PGSHIFT		ALPHA_PGSHIFT			/* LOG2(NBPG) */
@


1.34
log
@Link the kernel at a higher physical address, in order to accomodate SRM
with larger footprint than the usual 2MB, as encountered on some of the
most recent alpha systems.
Tested on many models (DEC 3000, PC164, AS500, ES40, and more)
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.33 2007/09/15 10:10:37 martin Exp $ */
d54 3
a56 14
/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_long and must be cast to
 * any desired pointer type.
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
 *
 */
#define	ALIGNBYTES		7
#define	ALIGN(p)		(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
@


1.33
log
@replace ctob and btoc with ptoa and atop respectively

help and ok miod@@ thib@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.32 2007/05/28 21:02:49 thib Exp $ */
d77 1
a77 1
#define	KERNBASE	0xfffffc0000230000	/* start of kernel virtual */
@


1.32
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.31 2006/08/12 17:54:38 krw Exp $ */
a109 4

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
@


1.31
log
@Make all DEV_BSIZE definitions consistant by using (1 << DEV_BSHIFT)
in the six cases using "512".

As DEV_BSHIFT is always 9, this should be a no-op.

"no objections" miod@@ "I can't see any problem doing this." pedro@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.30 2006/03/19 01:47:23 martin Exp $ */
a95 4
 * MCLBYTES must be no larger than NBPG (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a96 7
#define	MSIZE		256		/* size of an mbuf */
#ifndef MCLSHIFT
#define	MCLSHIFT	11		/* convert bytes to m_buf clusters */
					/* 2K cluster can hold Ether frame */
#endif	/* MCLSHIFT */
#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define	MCLOFSET	(MCLBYTES - 1)
@


1.30
log
@remove unused bdbtofsb(bn) macro

found by drahn@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.29 2005/12/13 01:56:43 martin Exp $ */
a78 1
#define	DEV_BSIZE	512
d80 1
@


1.29
log
@nuke unused BTOPKERNBASE define

pointed out by miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.28 2005/10/28 19:10:26 martin Exp $ */
a128 8

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
@


1.28
log
@no more Mach-macros
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.27 2005/10/21 11:10:06 martin Exp $ */
a77 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
@


1.27
log
@remove two unused and deprecated Mach macros, alpha_round_page() and
alpha_trunc_page()

looks ok to Miod
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.26 2005/07/31 15:31:08 miod Exp $ */
a137 6

/*
 * Mach derived conversion macros
 */
#define	alpha_btop(x)		((unsigned long)(x) >> PGSHIFT)
#define	alpha_ptob(x)		((unsigned long)(x) << PGSHIFT)
@


1.26
log
@Get rid of unused SINCR and SSIZE constants.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.25 2004/08/06 22:31:30 mickey Exp $ */
a141 2
#define	alpha_round_page(x)	((((unsigned long)(x)) + NBPG - 1) & ~(NBPG-1))
#define	alpha_trunc_page(x)	((unsigned long)(x) & ~(NBPG-1))
@


1.25
log
@provide md USPACE_ALIGN zero on all but mips; deradat@@ pefo@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.24 2004/04/19 22:55:45 deraadt Exp $ */
a85 3

#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
@


1.24
log
@remove the GATEWAY junk thingy; at the same time, select a new fat
cluster value that noone will really need to crank.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.23 2003/06/02 23:27:43 millert Exp $ */
d92 1
@


1.23
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.22 2002/03/14 01:26:27 millert Exp $ */
d106 1
a106 1
# define	MCLSHIFT	11	/* convert bytes to m_buf clusters */
d111 1
a111 1
#ifndef NMBCLUSTERS
a112 6
#ifdef GATEWAY
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
#endif
#endif
@


1.22
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.21 2001/12/05 01:57:14 provos Exp $ */
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.21
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.19 2001/03/16 16:56:25 art Exp $ */
d168 1
a168 1
int spl0 __P((void));			/* drop ipl to zero */
@


1.21.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.21 2001/12/05 01:57:14 provos Exp $ */
d168 1
a168 1
int spl0(void);			/* drop ipl to zero */
@


1.20
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d125 5
a129 6
 * Size of kernel malloc arena in CLBYTES-sized logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define NKMEMCLUSTERS	(32768*1024/NBPG)
#endif

@


1.19
log
@Now that pmap_growkernel is implemented set NKMEMCLUSTERS to 32m again.
millert@@ ok.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.18 2001/03/03 21:21:48 millert Exp $ */
a89 3

#define CLSIZE		1
#define CLSIZELOG2	0
@


1.18
log
@Lower NKMEMCLUSTERS by a factor of 2 from 32768*1024/NBPG to 16384*1024/NBPG.
Fixes problems on 64meg and 256meg machines; OK'd by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.17 2001/02/27 17:13:50 art Exp $ */
d131 1
a131 1
#define NKMEMCLUSTERS	(16384*1024/NBPG)
@


1.17
log
@crank NKMEMCLUSTERS fron 4MB to 32MB.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.16 2000/11/24 03:57:49 millert Exp $ */
d131 1
a131 1
#define NKMEMCLUSTERS	(32768*1024/NBPG)
@


1.16
log
@PAGE_SIZE on alpha is 8192 thus PAGE_SHIFT should be 13, not 12.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.15 2000/11/19 01:11:29 art Exp $ */
d131 1
a131 1
#define NKMEMCLUSTERS	(4096*1024/NBPG)	/* XXX? */
@


1.15
log
@PAGE_SIZE (and friends) does not change on alpha.
Make it a constant.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.14 2000/11/08 21:27:21 ericj Exp $ */
d77 1
a77 1
#define PAGE_SHIFT	12
@


1.14
log
@tag the rest of alpha tree
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.30 2000/06/09 16:03:04 thorpej Exp $ */
d76 4
@


1.13
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.12
log
@#ifndef MSGBUFSIZE, ok niklas@@
@
text
@d1 1
a1 2
/*	$OpenBSD: param.h,v 1.11 2000/02/22 19:27:40 deraadt Exp $	*/
/*	$NetBSD: param.h,v 1.15 1996/11/13 21:13:19 cgd Exp $	*/
d61 6
d68 3
a70 2
#define	ALIGNBYTES	7
#define	ALIGN(p)	(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
a74 5
#define	NPTEPG		(1 << (PGSHIFT-PTESHIFT))	/* pte's/page */

#define	SEGSHIFT	(PGSHIFT + (PGSHIFT-PTESHIFT))	/* LOG2(NBSEG) */
#define	NBSEG		(1 << SEGSHIFT)			/* bytes/segment (8M) */
#define	SEGOFSET	(NBSEG-1)			/* byte off. into seg */
d82 1
d84 1
d86 2
a87 2
#define	CLSIZE		1
#define	CLSIZELOG2	0
a88 1
/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
d95 4
d101 1
a101 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d107 5
a111 2
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* large enough for ether MTU */
d114 1
a121 4
#ifndef MSGBUFSIZE
#define MSGBUFSIZE	1*NBPG
#endif

d126 1
a126 1
#define	NKMEMCLUSTERS	(4096*1024/CLBYTES)	/* XXX? */
d129 1
a157 2
#include <machine/intr.h>

d161 3
a163 1
void	delay __P((unsigned long));
d167 1
a167 1
int spl0 __P((void));					/* drop ipl to zero */
d171 1
a171 1
vm_offset_t alpha_XXX_dmamap __P((vm_offset_t));
@


1.11
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 1997/09/17 17:44:04 downsj Exp $	*/
d112 3
a114 1
#define MSGBUFSIZE	8192
@


1.10
log
@Double default NMBCLUSTERS settings.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1997/01/24 19:57:14 niklas Exp $	*/
d111 2
@


1.10.12.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a110 2

#define MSGBUFSIZE	8192
@


1.10.12.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/* $OpenBSD: param.h,v 1.19 2001/03/16 16:56:25 art Exp $ */
/* $NetBSD: param.h,v 1.30 2000/06/09 16:03:04 thorpej Exp $ */
a61 6
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
 *
d63 2
a64 3
#define	ALIGNBYTES		7
#define	ALIGN(p)		(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
d69 1
d71 3
a73 3
#define PAGE_SHIFT	13
#define PAGE_SIZE	(1 << PAGE_SHIFT)
#define PAGE_MASK	(PAGE_SIZE - 1)
a80 1
#ifndef	MAXPHYS
a81 1
#endif
d83 2
a84 2
#define CLSIZE		1
#define CLSIZELOG2	0
d86 1
a92 4
#ifndef MSGBUFSIZE
#define MSGBUFSIZE	NBPG		/* default message buffer size */
#endif

d95 1
a95 1
 * MCLBYTES must be no larger than NBPG (the software page size), and,
d101 2
a102 5
#ifndef MCLSHIFT
# define	MCLSHIFT	11	/* convert bytes to m_buf clusters */
					/* 2K cluster can hold Ether frame */
#endif	/* MCLSHIFT */
#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
a104 1

d112 2
d118 1
a118 1
#define NKMEMCLUSTERS	(32768*1024/NBPG)
a120 1

d149 2
d154 1
a154 3
#include <machine/intr.h>

void	delay(unsigned long);
d158 1
a158 1
int spl0 __P((void));			/* drop ipl to zero */
d162 1
a162 1
paddr_t alpha_XXX_dmamap(vaddr_t);
@


1.10.12.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.10.12.2 2001/04/18 16:00:56 niklas Exp $ */
d90 3
@


1.10.12.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d125 6
a130 5
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((128 * 1024 * 1024) >> PAGE_SHIFT)
@


1.10.12.5
log
@Merge in -current from about a week ago
@
text
@d168 1
a168 1
int spl0(void);			/* drop ipl to zero */
@


1.10.12.6
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: param.h,v 1.10.12.5 2002/03/28 10:06:13 niklas Exp $ */
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.10.12.7
log
@Merge with the trunk
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d106 1
a106 1
#define	MCLSHIFT	11		/* convert bytes to m_buf clusters */
d111 1
a111 1
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */
d113 6
@


1.9
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1996/12/11 11:12:51 deraadt Exp $	*/
d106 2
a108 2
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
@


1.8
log
@MCLSHIFT=11, and calc MCLBYTES in such terms. found by pefo
@
text
@d1 2
a2 2
/*	$OpenBSD: param.h,v 1.7 1996/12/08 00:20:25 niklas Exp $	*/
/*	$NetBSD: param.h,v 1.14 1996/10/25 20:48:59 cgd Exp $	*/
d56 1
@


1.7
log
@Merge to NetBSD 961107, i.e. mostly new bus.h
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 1996/10/30 22:39:13 niklas Exp $	*/
a99 1
#define	MCLBYTES	2048		/* large enough for ether MTU */
d101 1
@


1.6
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 2
a2 2
/*	$OpenBSD: param.h,v 1.13 1996/07/09 00:33:23 cgd Exp $	*/
/*	$NetBSD: param.h,v 1.13 1996/07/09 00:33:23 cgd Exp $	*/
d154 1
a154 1
/* XXX ALL OF THE FOLLOWING BELONG IN INTR.H */
d157 4
@


1.5
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: param.h,v 1.12 1996/03/04 05:04:10 cgd Exp $	*/
/*	$NetBSD: param.h,v 1.12 1996/03/04 05:04:10 cgd Exp $	*/
d55 1
a55 3
#ifdef _KERNEL				/* XXX */
#include <machine/cpu.h>		/* XXX */
#endif					/* XXX */
d65 1
a65 1
#define	NBPG		8192				/* bytes/page */
d67 1
a67 1
#define	PGSHIFT		13				/* LOG2(NBPG) */
d146 1
a146 13
#include <machine/psl.h>

#define	splx(s)                 (s == PSL_IPL_0 ? spl0() : pal_swpipl(s))
#define	splsoft()		pal_swpipl(PSL_IPL_SOFT)
#define	splsoftclock()		splsoft()
#define	splsoftnet()		splsoft()
#define	splnet()                pal_swpipl(PSL_IPL_IO)
#define	splbio()                pal_swpipl(PSL_IPL_IO)
#define	splimp()                pal_swpipl(PSL_IPL_IO)
#define	spltty()                pal_swpipl(PSL_IPL_IO)
#define	splclock()              pal_swpipl(PSL_IPL_CLOCK)
#define	splstatclock()		pal_swpipl(PSL_IPL_CLOCK)
#define	splhigh()               pal_swpipl(PSL_IPL_HIGH)
d151 1
a151 3
/* This was calibrated empirically */
extern	u_int64_t cycles_per_usec;
int delay __P((int));
d154 1
d156 1
a159 5

int prtloc;
extern int ticks;
#define	LOC()	do { if (prtloc) printf("(%ld:%ld) %s: %d\n", curproc ? curproc->p_pid : -1, (long)ticks, __FILE__, __LINE__); } while (0)
#define	PLOC(str) panic("XXX: (%ld:%ld) %s at %s: %d\n", curproc ? curproc->p_pid : -1, (long)ticks, str, __FILE__, __LINE__);
@


1.4
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.3
log
@from netbsd: move DELAY's functionality into delay()
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.10 1995/12/20 00:08:43 cgd Exp $	*/
d48 1
d50 1
d162 1
a162 1
#ifndef LOCORE
@


1.2
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.9 1995/11/23 02:36:15 cgd Exp $	*/
d164 2
a165 4
#define	DELAY(n)	{ 						\
	register long long N = cycles_per_usec * (n);			\
	do N -= 3; while (N > 0);					\
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.8 1995/08/13 00:03:11 mycroft Exp $	*/
d73 1
a73 1
#define	KERNBASE	0xfffffe0000000000	/* start of kernel virtual */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
