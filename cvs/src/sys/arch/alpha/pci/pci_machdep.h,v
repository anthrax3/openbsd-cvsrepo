head	1.30;
access;
symbols
	OPENBSD_6_1:1.30.0.6
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.30.0.2
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.29.0.4
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.6
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.4
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.27.0.4
	OPENBSD_5_4_BASE:1.27
	OPENBSD_5_3:1.27.0.2
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.26.0.4
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.2
	OPENBSD_5_0:1.25.0.2
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.24.0.2
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.23.0.2
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.21.0.8
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.4
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.2
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.20.0.8
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.6
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.20.0.4
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.2
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.19.0.18
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.16
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.14
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.12
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	OPENBSD_3_5:1.19.0.10
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.8
	OPENBSD_3_4_BASE:1.19
	UBC_SYNC_A:1.19
	OPENBSD_3_3:1.19.0.6
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.19.0.4
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.19.0.2
	OPENBSD_3_1_BASE:1.19
	UBC_SYNC_B:1.19
	UBC:1.17.0.2
	UBC_BASE:1.17
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.9.0.14
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.12
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.10
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.8
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.30
date	2016.05.04.14.30.00;	author kettenis;	state Exp;
branches;
next	1.29;
commitid	n9OfCKyY3NAvSMg8;

1.29
date	2015.07.26.05.09.44;	author miod;	state Exp;
branches;
next	1.28;
commitid	5evJqb5U3VOxLlWE;

1.28
date	2013.11.05.10.12.35;	author mpi;	state Exp;
branches;
next	1.27;

1.27
date	2012.09.04.19.37.40;	author kettenis;	state Exp;
branches;
next	1.26;

1.26
date	2011.10.10.19.42.34;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2011.05.21.21.36.39;	author kettenis;	state Exp;
branches;
next	1.24;

1.24
date	2010.12.04.17.06.31;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.29.22.08.28;	author jordan;	state Exp;
branches;
next	1.22;

1.22
date	2009.08.22.02.54.50;	author mk;	state Exp;
branches;
next	1.21;

1.21
date	2008.07.22.18.45.51;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2006.03.26.20.23.08;	author brad;	state Exp;
branches;
next	1.19;

1.19
date	2002.03.14.03.15.50;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2001.11.04.23.12.46;	author art;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	2001.08.25.10.13.28;	author art;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.17.22.26.58;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.26.21.13.44;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.26.20.25.51;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.25.23.03.04;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.25.22.02.08;	author csapuntz;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.25.21.49.43;	author csapuntz;	state Exp;
branches;
next	1.9;

1.9
date	98.07.01.02.47.37;	author angelos;	state Exp;
branches
	1.9.8.1;
next	1.8;

1.8
date	98.06.28.02.36.23;	author angelos;	state Exp;
branches;
next	1.7;

1.7
date	97.01.24.19.57.53;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.12.08.00.20.43;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.30.22.40.09;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.29.23.00.45;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.06.18.09.44.31;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.32;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.49.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.45;	author deraadt;	state Exp;
branches;
next	;

1.9.8.1
date	2001.07.04.10.14.45;	author niklas;	state Exp;
branches;
next	1.9.8.2;

1.9.8.2
date	2001.10.31.02.52.44;	author nate;	state Exp;
branches;
next	1.9.8.3;

1.9.8.3
date	2001.11.13.21.00.49;	author niklas;	state Exp;
branches;
next	1.9.8.4;

1.9.8.4
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	;

1.17.2.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.30
log
@Initial support for MSI-X.  Only supported on amd64 for now.  I have diffs to
actually use this in em(4) and xhci(4), but I'm not committing those yet
because we almost certainly need to save and restore the MSI-X registers
during suspend/resume.  However, this allows mpi@@ to play with multiple-vector
support in networking hardware.

Requested by mpi@@
ok mlarkin@@, mikeb@@
@
text
@/*	$OpenBSD: pci_machdep.h,v 1.29 2015/07/26 05:09:44 miod Exp $	*/
/*	$NetBSD: pci_machdep.h,v 1.6 1996/11/19 04:49:21 cgd Exp $	*/

/*
 * Copyright (c) 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * Machine-specific definitions for PCI autoconfiguration.
 */

/*
 * Types provided to machine-independent PCI code
 */
typedef struct alpha_pci_chipset *pci_chipset_tag_t;
typedef u_long pcitag_t;
typedef u_long pci_intr_handle_t;

/*
 * Forward declarations.
 */
struct pci_attach_args;

/*
 * alpha-specific PCI structure and type definitions.
 * NOT TO BE USED DIRECTLY BY MACHINE INDEPENDENT CODE.
 */
struct alpha_pci_chipset {
	void		*pc_conf_v;
	void		(*pc_attach_hook)(struct device *,
			    struct device *, struct pcibus_attach_args *);
	int		(*pc_bus_maxdevs)(void *, int);
	pcitag_t	(*pc_make_tag)(void *, int, int, int);
	void		(*pc_decompose_tag)(void *, pcitag_t, int *,
			    int *, int *);
	int		(*pc_conf_size)(void *, pcitag_t);
	pcireg_t	(*pc_conf_read)(void *, pcitag_t, int);
	void		(*pc_conf_write)(void *, pcitag_t, int, pcireg_t);

	void		*pc_intr_v;
	int		(*pc_intr_map)(struct pci_attach_args *,
			    pci_intr_handle_t *);
	const char	*(*pc_intr_string)(void *, pci_intr_handle_t);
	int		(*pc_intr_line)(void *, pci_intr_handle_t);
	void		*(*pc_intr_establish)(void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, const char *);
	void		(*pc_intr_disestablish)(void *, void *);

        /* alpha-specific */
        void            *(*pc_pciide_compat_intr_establish)(void *,
                            struct device *, struct pci_attach_args *, int,
                            int (*)(void *), void *);
	void            (*pc_pciide_compat_intr_disestablish)(void *,
			    void *);
	char 		*pc_name;	/* PCI chipset name */
	vaddr_t		pc_mem;		/* PCI memory address */
	vaddr_t		pc_dense;	/* PCI dense memory address */
	vaddr_t		pc_ports;	/* PCI port address */
	long		pc_hae_mask;	/* PCI chipset mask for HAE register */
	int		pc_bwx;		/* chipset supports BWX */
};

extern struct alpha_pci_chipset *alpha_pci_chipset;
int alpha_sysctl_chipset(int *, u_int, char *, size_t *);

/*
 * Functions provided to machine-independent PCI code.
 */
#define	pci_attach_hook(p, s, pba)					\
    (*(pba)->pba_pc->pc_attach_hook)((p), (s), (pba))
#define	pci_bus_maxdevs(c, b)						\
    (*(c)->pc_bus_maxdevs)((c)->pc_conf_v, (b))
#define	pci_make_tag(c, b, d, f)					\
    (*(c)->pc_make_tag)((c)->pc_conf_v, (b), (d), (f))
#define	pci_decompose_tag(c, t, bp, dp, fp)				\
    (*(c)->pc_decompose_tag)((c)->pc_conf_v, (t), (bp), (dp), (fp))
#define	pci_conf_size(c, t)						\
    (*(c)->pc_conf_size)((c)->pc_conf_v, (t))
#define	pci_conf_read(c, t, r)						\
    (*(c)->pc_conf_read)((c)->pc_conf_v, (t), (r))
#define	pci_conf_write(c, t, r, v)					\
    (*(c)->pc_conf_write)((c)->pc_conf_v, (t), (r), (v))
#define	pci_intr_map_msi(pa, ihp)	(-1)
#define	pci_intr_map_msix(pa, vec, ihp)	(-1)
#define	pci_intr_string(c, ih)						\
    (*(c)->pc_intr_string)((c)->pc_intr_v, (ih))
#define	pci_intr_line(c, ih)						\
    (*(c)->pc_intr_line)((c)->pc_intr_v, (ih))
#define	pci_intr_establish(c, ih, l, h, a, nm)				\
    (*(c)->pc_intr_establish)((c)->pc_intr_v, (ih), (l), (h), (a), (nm))
#define	pci_intr_disestablish(c, iv)					\
    (*(c)->pc_intr_disestablish)((c)->pc_intr_v, (iv))
#define	pci_probe_device_hook(c, a)	(0)

#define	pci_min_powerstate(c, t)	(PCI_PMCSR_STATE_D3)
#define	pci_set_powerstate_md(c, t, s, p)

/*
 * alpha-specific PCI functions.
 * NOT TO BE USED DIRECTLY BY MACHINE INDEPENDENT CODE.
 */
void	pci_display_console(bus_space_tag_t, bus_space_tag_t,
	    pci_chipset_tag_t, int, int, int);
#define alpha_pciide_compat_intr_establish(c, d, p, ch, f, a)		\
    ((c)->pc_pciide_compat_intr_establish == NULL ? NULL :		\
     (*(c)->pc_pciide_compat_intr_establish)((c)->pc_conf_v, (d), (p),	\
        (ch), (f), (a)))

#define alpha_pciide_compat_intr_disestablish(c, cookie)		\
    do { if ((c)->pc_pciide_compat_intr_disestablish != NULL)		\
	    ((c)->pc_pciide_compat_intr_disestablish)((c)->pc_conf_v,	\
            (cookie)); } while (0)

#define	pci_dev_postattach(a, b)

#ifdef _KERNEL
void	pci_display_console(bus_space_tag_t, bus_space_tag_t, pci_chipset_tag_t,
	    int, int, int);
int	pci_intr_map(struct pci_attach_args *, pci_intr_handle_t *);
#endif /* _KERNEL */
@


1.29
log
@Make sure pci_intr_map() will perform proper interrupt swizzling for devices
behind a bridge, if the SRM didn't pick an interrupt line for them.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.28 2013/11/05 10:12:35 mpi Exp $	*/
d107 1
@


1.28
log
@Add a stub for the new MD hook needed to handle ACPI Power Resources.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.27 2012/09/04 19:37:40 kettenis Exp $	*/
a105 2
#define	pci_intr_map(pa, ihp)						\
    (*((pa)->pa_pc)->pc_intr_map)((pa), (ihp))
d139 3
a141 1
void pci_display_console(bus_space_tag_t, bus_space_tag_t, pci_chipset_tag_t, int, int, int);
@


1.27
log
@Implement pci_min_powerstate().
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.26 2011/10/10 19:42:34 miod Exp $	*/
d120 1
@


1.26
log
@Introduce pci_probe_device_hook(pci_chipset_tag_t, struct pci_attach_args *).
This mandatory function will get invoked in pci_probe_device(), and allows
a pci host driver to alter the pci_attach_args passed to a device when
attaching.

This function will also, if returning non-zero, cause the device to be
skipped completely during all the phases of the PCI device discovery
(i.e. ressource enumeration, ressource assignment, and actual attachment).
This particular feature is experimental and might be reverted in the future
(or the scope narrowed to device attachment only).

A dummy #define pci_probe_device_hook() 0 is added to all platforms except
sgi, where real functions (currently only returning 0) are added; real meat
will be added shortly.

Discussed at s2k11, no objection from the usual suspects.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.25 2011/05/21 21:36:39 kettenis Exp $	*/
d118 2
@


1.25
log
@Add pci_intr_map_msi() stub.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.24 2010/12/04 17:06:31 miod Exp $	*/
d117 1
@


1.24
log
@Introduce a new pci routine, pci_conf_size(), which returns the size of a
given pcitag_t configuration address space. Currently, all pci controllers
will return the usual 0x100 bytes of PCI configuration space, but this will
eventually change on PCIe-capable controlers.
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.23 2010/06/29 22:08:28 jordan Exp $	*/
d108 1
@


1.23
log
@Add support for mapping ACPI to PCI devices
ok kettenis, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.22 2009/08/22 02:54:50 mk Exp $	*/
d59 1
d100 2
@


1.22
log
@Constify the what/name parameter of pci_intr_establish().

Tested by myself, sthen, oga, kettenis, and jasper.
Input from sthen and jasper.

ok kettenis

(Manpage follows shortly.)
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.21 2008/07/22 18:45:51 miod Exp $	*/
d129 2
@


1.21
log
@Modify pci_intr_map() implementation to pass the pci_attach_args to the
per-platform implementation, instead of selected members of it; this allows
us to get rid of some globals, and paves the way for better bridge support
on some models.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.20 2006/03/26 20:23:08 brad Exp $	*/
d68 1
a68 1
			    int, int (*)(void *), void *, char *);
@


1.20
log
@Replace usage of alpha_pci_decompose_tag() with pci_decompose_tag() and
remove alpha_pci_decompose_tag().

From NetBSD

ok martin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.19 2002/03/14 03:15:50 millert Exp $	*/
d63 1
a63 1
	int		(*pc_intr_map)(void *, pcitag_t, int, int,
d104 1
a104 2
    (*((pa)->pa_pc)->pc_intr_map)((pa)->pa_pc->pc_intr_v, 		\
	(pa)->pa_intrtag, (pa)->pa_intrpin, (pa)->pa_intrline, (ihp))
@


1.19
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.18 2002/03/14 01:26:27 millert Exp $	*/
a120 2
#define alpha_pci_decompose_tag(c, t, bp, dp, fp)			\
    (*(c)->pc_decompose_tag)((c)->pc_conf_v, (t), (bp), (dp), (fp))
@


1.18
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.17 2001/11/04 23:12:46 art Exp $	*/
d67 2
a68 2
	void		*(*pc_intr_establish) __P((void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, char *));
d72 1
a72 1
        void            *(*pc_pciide_compat_intr_establish) __P((void *,
d74 1
a74 1
                            int (*)(void *), void *));
@


1.17
log
@Two new sysctls in the chipset tree.
CPU_CHIPSET_PORTS - address of the I/O ports.
CPU_CHIPSET_HAE_MASK - mask for the HAE register.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.16 2001/08/25 10:13:28 art Exp $	*/
d53 8
a60 8
	void		(*pc_attach_hook) __P((struct device *,
			    struct device *, struct pcibus_attach_args *));
	int		(*pc_bus_maxdevs) __P((void *, int));
	pcitag_t	(*pc_make_tag) __P((void *, int, int, int));
	void		(*pc_decompose_tag) __P((void *, pcitag_t, int *,
			    int *, int *));
	pcireg_t	(*pc_conf_read) __P((void *, pcitag_t, int));
	void		(*pc_conf_write) __P((void *, pcitag_t, int, pcireg_t));
d63 4
a66 4
	int		(*pc_intr_map) __P((void *, pcitag_t, int, int,
			    pci_intr_handle_t *));
	const char	*(*pc_intr_string) __P((void *, pci_intr_handle_t));
	int		(*pc_intr_line) __P((void *, pci_intr_handle_t));
d69 1
a69 1
	void		(*pc_intr_disestablish) __P((void *, void *));
d75 2
a76 2
	void            (*pc_pciide_compat_intr_disestablish) __P((void *,
			    void *));
d119 2
a120 2
void	pci_display_console __P((bus_space_tag_t, bus_space_tag_t,
	    pci_chipset_tag_t, int, int, int));
d134 1
a134 2
void pci_display_console
    __P((bus_space_tag_t, bus_space_tag_t, pci_chipset_tag_t, int, int, int));
@


1.17.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.17 2001/11/04 23:12:46 art Exp $	*/
d53 8
a60 8
	void		(*pc_attach_hook)(struct device *,
			    struct device *, struct pcibus_attach_args *);
	int		(*pc_bus_maxdevs)(void *, int);
	pcitag_t	(*pc_make_tag)(void *, int, int, int);
	void		(*pc_decompose_tag)(void *, pcitag_t, int *,
			    int *, int *);
	pcireg_t	(*pc_conf_read)(void *, pcitag_t, int);
	void		(*pc_conf_write)(void *, pcitag_t, int, pcireg_t);
d63 7
a69 7
	int		(*pc_intr_map)(void *, pcitag_t, int, int,
			    pci_intr_handle_t *);
	const char	*(*pc_intr_string)(void *, pci_intr_handle_t);
	int		(*pc_intr_line)(void *, pci_intr_handle_t);
	void		*(*pc_intr_establish)(void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, char *);
	void		(*pc_intr_disestablish)(void *, void *);
d72 1
a72 1
        void            *(*pc_pciide_compat_intr_establish)(void *,
d74 3
a76 3
                            int (*)(void *), void *);
	void            (*pc_pciide_compat_intr_disestablish)(void *,
			    void *);
d119 2
a120 2
void	pci_display_console(bus_space_tag_t, bus_space_tag_t,
	    pci_chipset_tag_t, int, int, int);
d134 2
a135 1
void pci_display_console(bus_space_tag_t, bus_space_tag_t, pci_chipset_tag_t, int, int, int);
@


1.16
log
@Change pci_intr_map to take pci_attach_args as an argument.
All callers actually took all arguments to pci_intr_map from pci_attach_args
structs, so this simplifies code.
This also allows more complicated interrupt assignment schemes like the one
on sparc64.

This makes sparc64 pci interrupts work.

Inspired by the same change in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.15 2001/08/17 22:26:58 mickey Exp $	*/
d80 2
@


1.15
log
@provide a way to get the number used for irq line, not only a string
representation, this is needed for devices like cbb which pass
the interrupt line down to the cardbus attachment and not
getting the right line before pci_intr_map() has done it's
dirty deed.
tested on i386 by jason@@, compiles on alpha by art@@.
ppc and mveppc are to be test-compiled, but should work (;
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.14 2001/06/26 21:13:44 art Exp $	*/
d101 3
a103 2
#define	pci_intr_map(c, it, ip, il, ihp)				\
    (*(c)->pc_intr_map)((c)->pc_intr_v, (it), (ip), (il), (ihp))
@


1.14
log
@More chipset info needed by X.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.13 2001/06/26 20:25:51 art Exp $	*/
d66 1
d105 2
@


1.13
log
@Provide some chipset information to usreland through sysctl.
The chipset support is not here yet, but the skeleton works.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.12 2001/06/25 23:03:04 art Exp $	*/
d78 1
@


1.12
log
@Be more careful in pciide_compat_intr_disestablish.
While I'm here, clean up spaces.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.11 2001/06/25 22:02:08 csapuntz Exp $	*/
d76 3
d80 3
@


1.11
log
@Fix earlier commit of pciide disestablish
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.10 2001/06/25 21:49:43 csapuntz Exp $	*/
d108 1
a108 1
#define alpha_pci_decompose_tag(c, t, bp, dp, fp)                       \
d110 3
a112 3
#define alpha_pciide_compat_intr_establish(c, d, p, ch, f, a)           \
    ((c)->pc_pciide_compat_intr_establish == NULL ? NULL :              \
     (*(c)->pc_pciide_compat_intr_establish)((c)->pc_conf_v, (d), (p),  \
d115 3
a117 2
#define alpha_pciide_compat_intr_disestablish(c, cookie)                \
    do { ((c)->pc_pciide_compat_intr_disestablish)((c)->pc_conf_v,      \
@


1.10
log
@

Add disestablish for pciide on Alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.9 1998/07/01 02:47:37 angelos Exp $	*/
d75 1
a75 1
			    pci_chipset_tag_t pc, void *));
d115 2
a116 2
#define alpha_pciide_compat_intr_disestablish(c, p, cookie)             \
    do { ((c)->pc_pciide_compat_intr_disestablish)((c)->pc_conf_v, (p), \
@


1.9
log
@NetBSD sync.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.8 1998/06/28 02:36:23 angelos Exp $	*/
d74 2
d114 4
@


1.9.8.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.9 1998/07/01 02:47:37 angelos Exp $	*/
a73 6
	void            (*pc_pciide_compat_intr_disestablish) __P((void *,
			    void *));
	char 		*pc_name;	/* PCI chipset name */
	vaddr_t		pc_mem;		/* PCI memory address */
	vaddr_t		pc_dense;	/* PCI dense memory address */
	int		pc_bwx;		/* chipset supports BWX */
a75 3
extern struct alpha_pci_chipset *alpha_pci_chipset;
int alpha_sysctl_chipset(int *, u_int, char *, size_t *);

d106 1
a106 1
#define alpha_pci_decompose_tag(c, t, bp, dp, fp)			\
d108 3
a110 3
#define alpha_pciide_compat_intr_establish(c, d, p, ch, f, a)		\
    ((c)->pc_pciide_compat_intr_establish == NULL ? NULL :		\
     (*(c)->pc_pciide_compat_intr_establish)((c)->pc_conf_v, (d), (p),	\
a111 5

#define alpha_pciide_compat_intr_disestablish(c, cookie)		\
    do { if ((c)->pc_pciide_compat_intr_disestablish != NULL)		\
	    ((c)->pc_pciide_compat_intr_disestablish)((c)->pc_conf_v,	\
            (cookie)); } while (0)
@


1.9.8.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.9.8.1 2001/07/04 10:14:45 niklas Exp $	*/
a65 1
	int		(*pc_intr_line) __P((void *, pci_intr_handle_t));
d100 2
a101 3
#define	pci_intr_map(pa, ihp)						\
    (*((pa)->pa_pc)->pc_intr_map)((pa)->pa_pc->pc_intr_v, 		\
	(pa)->pa_intrtag, (pa)->pa_intrpin, (pa)->pa_intrline, (ihp))
a103 2
#define	pci_intr_line(c, ih)						\
    (*(c)->pc_intr_line)((c)->pc_intr_v, (ih))
@


1.9.8.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a79 2
	vaddr_t		pc_ports;	/* PCI port address */
	long		pc_hae_mask;	/* PCI chipset mask for HAE register */
@


1.9.8.4
log
@Merge in -current from about a week ago
@
text
@d53 8
a60 8
	void		(*pc_attach_hook)(struct device *,
			    struct device *, struct pcibus_attach_args *);
	int		(*pc_bus_maxdevs)(void *, int);
	pcitag_t	(*pc_make_tag)(void *, int, int, int);
	void		(*pc_decompose_tag)(void *, pcitag_t, int *,
			    int *, int *);
	pcireg_t	(*pc_conf_read)(void *, pcitag_t, int);
	void		(*pc_conf_write)(void *, pcitag_t, int, pcireg_t);
d63 7
a69 7
	int		(*pc_intr_map)(void *, pcitag_t, int, int,
			    pci_intr_handle_t *);
	const char	*(*pc_intr_string)(void *, pci_intr_handle_t);
	int		(*pc_intr_line)(void *, pci_intr_handle_t);
	void		*(*pc_intr_establish)(void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, char *);
	void		(*pc_intr_disestablish)(void *, void *);
d72 1
a72 1
        void            *(*pc_pciide_compat_intr_establish)(void *,
d74 3
a76 3
                            int (*)(void *), void *);
	void            (*pc_pciide_compat_intr_disestablish)(void *,
			    void *);
d119 2
a120 2
void	pci_display_console(bus_space_tag_t, bus_space_tag_t,
	    pci_chipset_tag_t, int, int, int);
d134 2
a135 1
void pci_display_console(bus_space_tag_t, bus_space_tag_t, pci_chipset_tag_t, int, int, int);
@


1.8
log
@Some more defines from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.7 1997/01/24 19:57:53 niklas Exp $	*/
d43 5
d69 5
@


1.7
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.6 1996/12/08 00:20:43 niklas Exp $	*/
d96 6
@


1.6
log
@Merge to NetBSD 961107, i.e. mostly new bus.h
@
text
@d1 2
a2 2
/*	$OpenBSD: pci_machdep.h,v 1.5 1996/10/30 22:40:09 niklas Exp $	*/
/*	$NetBSD: pci_machdep.h,v 1.4 1996/04/12 06:08:52 cgd Exp $	*/
d89 7
@


1.5
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.4 1996/04/12 06:08:52 cgd Exp $	*/
d92 1
a92 1
    __P((bus_chipset_tag_t, pci_chipset_tag_t, int, int, int));
@


1.4
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d89 5
@


1.3
log
@sync to 0616, retaining local diffs
@
text
@d1 1
d62 1
a62 1
			    int, int (*)(void *), void *));
d85 2
a86 2
#define	pci_intr_establish(c, ih, l, h, a)				\
    (*(c)->pc_intr_establish)((c)->pc_intr_v, (ih), (l), (h), (a))
@


1.2
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: pci_machdep.h,v 1.1 1995/06/28 01:26:01 cgd Exp $	*/
d4 2
a5 1
 * Copyright (c) 1994 Charles Hannum.  All rights reserved.
d7 21
a27 24
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Charles Hannum.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a31 2
 *
 * See the comments in pci_machdep.c for more explanation.
d35 1
a35 4
 * Configuration tag; created from a {bus,device,function} triplet by
 * pci_make_tag(), and passed to pci_conf_read() and pci_conf_write().
 * We could instead always pass the {bus,device,function} triplet to
 * the read and write routines, but this would cause extra overhead.
d37 1
d39 1
d42 2
a43 2
 * Type of a value read from or written to a configuration register.
 * Always 32 bits.
d45 19
a63 1
typedef u_int32_t pcireg_t;
d65 23
a87 2
extern int pci_mode;
extern int pci_mode_detect __P((void));
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
