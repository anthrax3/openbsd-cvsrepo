head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.62
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.58
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.54
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.56
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.48
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.52
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.50
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.46
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.44
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.42
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.40
	OPENBSD_5_0:1.3.0.38
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.36
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.34
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.30
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.32
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.28
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.26
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.24
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.22
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.20
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.18
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.16
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.14
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.12
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.10
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.22
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.3
	UBC:1.2.0.20
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.18
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.16
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.10
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.08.15.17.01.38;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.11.10.15.53.13;	author niklas;	state Exp;
branches
	1.2.10.1
	1.2.20.1;
next	1.1;

1.1
date	97.01.24.19.57.50;	author niklas;	state Exp;
branches;
next	;

1.2.10.1
date	2003.03.27.23.18.06;	author niklas;	state Exp;
branches;
next	;

1.2.20.1
date	2002.10.29.00.28.01;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix END() label
@
text
@/*	$OpenBSD: pci_eb164_intr.s,v 1.2 1997/11/10 15:53:13 niklas Exp $	*/
/*	$NetBSD: pci_eb164_intr.s,v 1.1 1996/11/25 03:47:07 cgd Exp $	*/

/*
 * Copyright (c) 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * The description of how to enable and disable interrupts in the
 * AlphaPC 164 motherboard technical reference manual is incorrect,
 * at least for the OSF/1 PALcode.
 *
 * These functions were written by disassembling a Digital UNIX kernel's
 * eb164_intrdsabl and eb164_intrenabl functions (because they had
 * interesting names), and then playing with them to see how to call
 * them correctly.
 *
 * It looks like the right thing to do is to call them with the interrupt
 * request that you want to enable or disable (presumably in the range
 * 0 -> 23, since there are 3 8-bit interrupt-enable bits in the
 * interrupt mask PLD).
 */

#include <machine/asm.h>

	.text
LEAF(eb164_intr_enable,1)
	mov	a0, a1
	ldiq	a0, 0x34
	call_pal PAL_cserve
	RET
	END(eb164_intr_enable)

	.text
LEAF(eb164_intr_disable,1)
	mov	a0, a1
	ldiq	a0, 0x35
	call_pal PAL_cserve
	RET
	END(eb164_intr_disable)
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_eb164_intr.s,v 1.1 1996/11/25 03:47:07 cgd Exp $	*/
d63 1
a63 1
	END(eb164_intr_enable)
@


1.2.10.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
	END(eb164_intr_disable)
@


1.2.20.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_eb164_intr.s,v 1.2 1997/11/10 15:53:13 niklas Exp $	*/
d63 1
a63 1
	END(eb164_intr_disable)
@


1.1
log
@Sync with NetBSD 961207
@
text
@d1 1
@
