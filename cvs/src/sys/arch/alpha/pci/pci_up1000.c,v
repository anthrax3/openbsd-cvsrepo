head	1.18;
access;
symbols
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.8
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.9.0.8
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.12
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.10
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.18
date	2017.09.08.05.36.51;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	uRv5pa9QDlZaYgwD;

1.17
date	2015.08.15.19.18.27;	author miod;	state Exp;
branches;
next	1.16;
commitid	W6qKMuv75Fevdi8E;

1.16
date	2015.07.26.05.09.44;	author miod;	state Exp;
branches;
next	1.15;
commitid	5evJqb5U3VOxLlWE;

1.15
date	2009.08.22.02.54.50;	author mk;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.22.18.45.51;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.26.05.42.09;	author ray;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.02.21.50.14;	author martin;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.15.20.08.29;	author brad;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.26.20.23.08;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.18.02.18.26;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2004.06.28.02.28.43;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.14.00.44.59;	author nate;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.06.19.53.13;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.17.22.26.58;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.25.22.02.08;	author csapuntz;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.25.21.49.43;	author csapuntz;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.17.14.53.34;	author art;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.04.14.17.51.40;	author art;	state Exp;
branches;
next	;

1.2.2.1
date	2001.04.18.16.01.28;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.07.04.10.14.46;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.10.31.02.52.45;	author nate;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2001.11.13.21.00.49;	author niklas;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2002.03.06.00.55.15;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.18
log
@If you use sys/param.h, you don't need sys/types.h
@
text
@/*	$OpenBSD: pci_up1000.c,v 1.17 2015/08/15 19:18:27 miod Exp $	*/
/* $NetBSD: pci_up1000.c,v 1.6 2000/12/28 22:59:07 sommerfeld Exp $ */

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/time.h>
#include <sys/systm.h>
#include <sys/errno.h>
#include <sys/device.h>

#include <uvm/uvm_extern.h>

#include <machine/autoconf.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/isa/isavar.h>

#include <dev/pci/pcireg.h>
#include <dev/pci/pcivar.h>
#include <dev/pci/ppbreg.h>
#include <dev/pci/pciidereg.h>
#include <dev/pci/pciidevar.h>

#include <alpha/pci/irongatevar.h>

#include <alpha/pci/pci_up1000.h>
#include <alpha/pci/siovar.h>

#include "sio.h"

int     api_up1000_intr_map(struct pci_attach_args *, pci_intr_handle_t *);
const char *api_up1000_intr_string(void *, pci_intr_handle_t);
int	api_up1000_intr_line(void *, pci_intr_handle_t);
void    *api_up1000_intr_establish(void *, pci_intr_handle_t,
	    int, int (*func)(void *), void *, const char *);
void    api_up1000_intr_disestablish(void *, void *);

void	*api_up1000_pciide_compat_intr_establish(void *, struct device *,
	    struct pci_attach_args *, int, int (*)(void *), void *);
void    api_up1000_pciide_compat_intr_disestablish(void *, void *);

void
pci_up1000_pickintr(struct irongate_config *icp)
{
	bus_space_tag_t iot = &icp->ic_iot;
	pci_chipset_tag_t pc = &icp->ic_pc;

	pc->pc_intr_v = icp;
	pc->pc_intr_map = api_up1000_intr_map;
	pc->pc_intr_string = api_up1000_intr_string;
	pc->pc_intr_line = api_up1000_intr_line;
	pc->pc_intr_establish = api_up1000_intr_establish;
	pc->pc_intr_disestablish = api_up1000_intr_disestablish;

	pc->pc_pciide_compat_intr_establish =
	    api_up1000_pciide_compat_intr_establish;
	pc->pc_pciide_compat_intr_disestablish =
	    api_up1000_pciide_compat_intr_disestablish;

#if NSIO
	sio_intr_setup(pc, iot);
#else
	panic("pci_up1000_pickintr: no I/O interrupt handler (no sio)");
#endif
}

int
api_up1000_intr_map(struct pci_attach_args *pa, pci_intr_handle_t *ihp)
{
	int buspin, line = pa->pa_intrline;

	/*
	 * The console places the interrupt mapping in the "line" value.
	 * We trust it whenever possible.
	 */
	if (line >= 0 && line <= 15) {
		if (line == 2) {
#ifdef DEBUG
			printf("api_up1000_intr_map: changed IRQ 2 to IRQ 9\n");
#endif
			line = 9;
		}

		*ihp = line;
		return 0;
	}

	if (pa->pa_bridgetag) {
		buspin = PPB_INTERRUPT_SWIZZLE(pa->pa_rawintrpin,
		    pa->pa_device);
		if (pa->pa_bridgeih[buspin - 1] != 0) {
			*ihp = pa->pa_bridgeih[buspin - 1];
			return 0;
		}
	}

	return 1;
}

const char *
api_up1000_intr_string(void *icv, pci_intr_handle_t ih)
{
#if 0
	struct irongate_config *icp = icv;
#endif

	return sio_intr_string(NULL /*XXX*/, ih);
}

int
api_up1000_intr_line(void *icv, pci_intr_handle_t ih)
{
	return sio_intr_line(NULL /*XXX*/, ih);
}

void *
api_up1000_intr_establish(void *icv, pci_intr_handle_t ih, int level,
    int (*func)(void *), void *arg, const char *name)
{
#if 0
	struct irongate_config *icp = icv;
#endif

	return sio_intr_establish(NULL /*XXX*/, ih, IST_LEVEL, level, func,
	    arg, name);
}

void
api_up1000_intr_disestablish(void *icv, void *cookie)
{
#if 0
	struct irongate_config *icp = icv;
#endif

	sio_intr_disestablish(NULL /*XXX*/, cookie);
}

void *
api_up1000_pciide_compat_intr_establish(void *icv, struct device *dev,
    struct pci_attach_args *pa, int chan, int (*func)(void *), void *arg)
{
	pci_chipset_tag_t pc = pa->pa_pc;
	void *cookie = NULL;
	int bus, irq;

	pci_decompose_tag(pc, pa->pa_tag, &bus, NULL, NULL);

	/*
	 * If this isn't PCI bus #0, all bets are off.
	 */
	if (bus != 0)
		return (NULL);

	irq = PCIIDE_COMPAT_IRQ(chan);
#if NSIO
	cookie = sio_intr_establish(NULL /*XXX*/, irq, IST_EDGE, IPL_BIO,
	    func, arg, dev->dv_xname);
	if (cookie == NULL)
		return (NULL);
#endif
	return (cookie);
}

void
api_up1000_pciide_compat_intr_disestablish(void *v, void *cookie)
{
	sio_intr_disestablish(NULL, cookie);
}
@


1.17
log
@No need to cargo-cult include <alpha/pci/sioreg.h> here.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.16 2015/07/26 05:09:44 miod Exp $	*/
a32 1
#include <sys/types.h>
@


1.16
log
@Make sure pci_intr_map() will perform proper interrupt swizzling for devices
behind a bridge, if the SRM didn't pick an interrupt line for them.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.15 2009/08/22 02:54:50 mk Exp $	*/
a57 1
#include <alpha/pci/sioreg.h>
@


1.15
log
@Constify the what/name parameter of pci_intr_establish().

Tested by myself, sthen, oga, kettenis, and jasper.
Input from sthen and jasper.

ok kettenis

(Manpage follows shortly.)
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.14 2008/07/22 18:45:51 miod Exp $	*/
d50 1
d101 1
a101 16
	pcitag_t bustag = pa->pa_intrtag;
	int buspin = pa->pa_intrpin, line = pa->pa_intrline;
	pci_chipset_tag_t pc = pa->pa_pc;
	int bus, device, function;

	if (buspin == 0) {
		/* No IRQ used. */
		return 1;
	}
	if (buspin > 4) {
		printf("api_up1000_intr_map: bad interrupt pin %d\n",
		    buspin);
		return 1;
	}

	pci_decompose_tag(pc, bustag, &bus, &device, &function);
d105 1
a105 1
	 * A value of (char)-1 indicates there is no mapping.
d107 10
a116 4
	if (line == 0xff) {
		printf("api_up1000_intr_map: no mapping for %d/%d/%d\n",
		    bus, device, function);
		return (1);
d119 7
a125 13
	/* XXX Check for 0? */
	if (line > 15) {
#ifdef DIAGNOSTIC
		printf("api_up1000_intr_map: ISA IRQ too large (%d)\n",
		    line);
#endif
		return (1);
	}
	if (line == 2) {
#ifdef DIAGNOSTIC
		printf("api_up1000_intr_map: changed IRQ 2 to IRQ 9\n");
#endif
		line = 9;
d128 1
a128 2
	*ihp = line;
	return (0);
@


1.14
log
@Modify pci_intr_map() implementation to pass the pci_attach_args to the
per-platform implementation, instead of selected members of it; this allows
us to get rid of some globals, and paves the way for better bridge support
on some models.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.13 2008/06/26 05:42:09 ray Exp $	*/
d65 1
a65 1
	    int, int (*func)(void *), void *, char *);
d164 1
a164 1
    int (*func)(void *), void *arg, char *name)
@


1.13
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.12 2007/05/02 21:50:14 martin Exp $	*/
d61 1
a61 1
int     api_up1000_intr_map(void *, pcitag_t, int, int, pci_intr_handle_t *);
d98 1
a98 1
api_up1000_intr_map(void *icv, pcitag_t bustag, int buspin, int line, pci_intr_handle_t *ihp)
d100 3
a102 2
	struct irongate_config *icc = icv;
	pci_chipset_tag_t pc = &icc->ic_pc;
@


1.12
log
@supply the real devicename to sio_intr_establish() instead a generic
platform interrupt string when establishing pciide interrupts
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.11 2006/06/15 20:08:29 brad Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.11
log
@Rework the interrupt code, shaving some cycles off in the process.
Rather than an "iointr" routine that decomposes a vector into an
IRQ, we maintain a vector table directly, hooking up each "iointr"
routine at the correct vector. This also allows us to hook device
interrupts up to specific vectors.

From thorpej NetBSD

Tested by myself and a number of end-users.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.10 2006/03/26 20:23:08 brad Exp $	*/
d209 1
a209 1
	    func, arg, "up 1000 irq");
@


1.10
log
@Replace usage of alpha_pci_decompose_tag() with pci_decompose_tag() and
remove alpha_pci_decompose_tag().

From NetBSD

ok martin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.9 2004/07/18 02:18:26 deraadt Exp $	*/
a98 1
	set_iointr(&sio_iointr);
@


1.9
log
@shrink
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.8 2004/06/28 02:28:43 aaron Exp $	*/
d122 1
a122 1
	alpha_pci_decompose_tag(pc, bustag, &bus, &device, &function);
d199 1
a199 1
	alpha_pci_decompose_tag(pc, pa->pa_tag, &bus, NULL, NULL);
@


1.8
log
@Use new event counter API for interrupt counting on alpha.  By me, with some
edits by Theo.  deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.7 2001/12/14 00:44:59 nate Exp $	*/
d136 1
d139 1
d143 1
d145 1
@


1.7
log
@Don't use a single static struct alpha_bus_space since there are machines
that can have more than one system bus attached to mainbus
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.6 2001/11/06 19:53:13 miod Exp $	*/
a70 1
const struct evcnt *api_up1000_intr_evcnt(void *, pci_intr_handle_t);
a88 3
#if 0
	pc->pc_intr_evcnt = api_up1000_intr_evcnt;
#endif
a163 12

#if 0
const struct evcnt *
api_up1000_intr_evcnt(void *icv, pci_intr_handle_t ih)
{
#if 0
	struct irongate_config *icp = icv;
#endif

	return sio_intr_evcnt(NULL /*XXX*/, ih);
}
#endif
@


1.6
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.5 2001/08/17 22:26:58 mickey Exp $	*/
d83 1
a83 1
	bus_space_tag_t iot = icp->ic_iot;
@


1.5
log
@provide a way to get the number used for irq line, not only a string
representation, this is needed for devices like cbb which pass
the interrupt line down to the cardbus attachment and not
getting the right line before pci_intr_map() has done it's
dirty deed.
tested on i386 by jason@@, compiles on alpha by art@@.
ppc and mveppc are to be test-compiled, but should work (;
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.4 2001/06/25 22:02:08 csapuntz Exp $	*/
a46 1
#include <vm/vm.h>
@


1.4
log
@Fix earlier commit of pciide disestablish
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.3 2001/06/25 21:49:43 csapuntz Exp $	*/
d71 1
d90 1
d162 6
@


1.3
log
@

Add disestablish for pciide on Alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.2 2001/04/17 14:53:34 art Exp $	*/
d78 1
a78 2
void    api_up1000_pciide_compat_intr_disestablish(void *, pci_chipset_tag_t,
            void *);
d223 1
a223 2
api_up1000_pciide_compat_intr_disestablish(void *v, pci_chipset_tag_t pc,
    void *cookie)
@


1.2
log
@OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d78 2
d98 2
a218 2
	printf("%s: %s channel interrupting at %s\n", dev->dv_xname,
	    PCIIDE_CHANNEL_NAME(chan), sio_intr_string(NULL /*XXX*/, irq));
d221 7
@


1.2.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.2 2001/04/17 14:53:34 art Exp $	*/
@


1.2.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.2.2.1 2001/04/18 16:01:28 niklas Exp $	*/
a77 1
void    api_up1000_pciide_compat_intr_disestablish(void *, void *);
a95 2
	pc->pc_pciide_compat_intr_disestablish =
	    api_up1000_pciide_compat_intr_disestablish;
d215 2
a218 6
}

void
api_up1000_pciide_compat_intr_disestablish(void *v, void *cookie)
{
	sio_intr_disestablish(NULL, cookie);
@


1.2.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_up1000.c,v 1.2.2.2 2001/07/04 10:14:46 niklas Exp $	*/
a70 1
int	api_up1000_intr_line(void *, pci_intr_handle_t);
a88 1
	pc->pc_intr_line = api_up1000_intr_line;
a159 6
}

int
api_up1000_intr_line(void *icv, pci_intr_handle_t ih)
{
	return sio_intr_line(NULL /*XXX*/, ih);
@


1.2.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 1
@


1.2.2.5
log
@Merge in trunk
@
text
@d83 1
a83 1
	bus_space_tag_t iot = &icp->ic_iot;
@


1.1
log
@Add support for Alpha Processor, Inc. UP1000.
From NetBSD.
@
text
@d1 1
@

