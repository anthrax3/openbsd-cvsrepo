head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.66
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.62
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.64
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.56
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.60
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.58
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.54
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.52
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.50
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.48
	OPENBSD_5_0:1.9.0.46
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.44
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.42
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.38
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.40
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.36
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.34
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.32
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.30
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.28
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.26
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.24
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.22
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.20
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.18
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.16
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.14
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.12
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.10
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.9.0.6
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.4
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.7.0.12
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.10
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.8
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2000.11.08.20.59.25;	author ericj;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.08.16.01.18;	author art;	state Exp;
branches;
next	1.7;

1.7
date	98.06.28.03.00.25;	author angelos;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	98.06.28.02.58.50;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	97.01.24.19.57.40;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.10.30.22.39.57;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.23.00.23;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.18.09.44.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.03.53.23;	author deraadt;	state Exp;
branches;
next	;

1.7.8.1
date	2001.04.18.16.01.12;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.9
log
@add tags
@
text
@/* $OpenBSD$ */
/* $NetBSD: ciareg.h,v 1.22 1998/06/06 20:40:14 thorpej Exp $ */

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Authors: Chris G. Demetriou, Jason R. Thorpe
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * 21171 Chipset registers and constants.
 *
 * Taken from EC-QE18B-TE.
 */

#define	REGVAL(r)	(*(volatile int32_t *)ALPHA_PHYS_TO_K0SEG(r))
#define	REGVAL64(r)	(*(volatile u_int64_t *)ALPHA_PHYS_TO_K0SEG(r))

/*
 * Base addresses
 */
#define	CIA_PCI_SMEM1	0x8000000000UL
#define	CIA_PCI_SMEM2	0x8400000000UL
#define	CIA_PCI_SMEM3	0x8500000000UL
#define	CIA_PCI_SIO1	0x8580000000UL
#define	CIA_PCI_SIO2	0x85c0000000UL
#define	CIA_PCI_DENSE	0x8600000000UL
#define	CIA_PCI_CONF	0x8700000000UL
#define	CIA_PCI_IACK	0x8720000000UL
#define	CIA_CSRS	0x8740000000UL
#define	CIA_PCI_MC_CSRS	0x8750000000UL
#define	CIA_PCI_ATRANS	0x8760000000UL
#define	CIA_PCI_TBIA	0x8760000100UL
#define	CIA_EV56_BWMEM	0x8800000000UL
#define	CIA_EV56_BWIO	0x8900000000UL
#define	CIA_EV56_BWCONF0 0x8a00000000UL
#define	CIA_EV56_BWCONF1 0x8b00000000UL

#define	CIA_PCI_W0BASE	0x8760000400UL
#define	CIA_PCI_W0MASK	0x8760000440UL
#define	CIA_PCI_T0BASE	0x8760000480UL

#define	CIA_PCI_W1BASE	0x8760000500UL
#define	CIA_PCI_W1MASK	0x8760000540UL
#define	CIA_PCI_T1BASE	0x8760000580UL

#define	CIA_PCI_W2BASE	0x8760000600UL
#define	CIA_PCI_W2MASK	0x8760000640UL
#define	CIA_PCI_T2BASE	0x8760000680UL

#define	CIA_PCI_W3BASE	0x8760000700UL
#define	CIA_PCI_W3MASK	0x8760000740UL
#define	CIA_PCI_T3BASE	0x8760000780UL

#define	PYXIS_INT_REQ	0x87a0000000UL
#define	PYXIS_INT_MASK	0x87a0000040UL
#define	PYXIS_GPO	0x87a0000180UL

/*
 * Values for CIA_PCI_TBIA
 */
#define	CIA_PCI_TBIA_NOOP	0	/* no operation */
#define	CIA_PCI_TBIA_LOCKED	1	/* invalidate and unlock locked tags */
#define	CIA_PCI_TBIA_UNLOCKED	2	/* invalidate unlocked tags */
#define	CIA_PCI_TBIA_ALL	3	/* invalidate and unlock all tags */

#define	CIA_TLB_NTAGS		8	/* number of TLB entries */

/*
 * Values for CIA_PCI_WnBASE
 */
#define	CIA_PCI_WnBASE_W_BASE	0xfff00000
#define	CIA_PCI_WnBASE_DAC_EN	0x00000008	/* W3BASE only */
#define	CIA_PCI_WnBASE_MEMCS_EN	0x00000004	/* W0BASE only */
#define	CIA_PCI_WnBASE_SG_EN	0x00000002
#define	CIA_PCI_WnBASE_W_EN	0x00000001

/*
 * Values for CIA_PCI_WnMASK
 */
#define	CIA_PCI_WnMASK_W_MASK	0xfff00000
#define	CIA_PCI_WnMASK_1M	0x00000000
#define	CIA_PCI_WnMASK_2M	0x00100000
#define	CIA_PCI_WnMASK_4M	0x00300000
#define	CIA_PCI_WnMASK_8M	0x00700000
#define	CIA_PCI_WnMASK_16M	0x00f00000
#define	CIA_PCI_WnMASK_32M	0x01f00000
#define	CIA_PCI_WnMASK_64M	0x03f00000
#define	CIA_PCI_WnMASK_128M	0x07f00000
#define	CIA_PCI_WnMASK_256M	0x0ff00000
#define	CIA_PCI_WnMASK_512M	0x1ff00000
#define	CIA_PCI_WnMASK_1G	0x3ff00000
#define	CIA_PCI_WnMASK_2G	0x7ff00000
#define	CIA_PCI_WnMASK_4G	0xfff00000

/*
 * Values for CIA_PCI_TnBASE
 */
#define	CIA_PCI_TnBASE_MASK	0xfffffff0
#define	CIA_PCI_TnBASE_SHIFT	2

/*
 * General CSRs
 */

#define	CIA_CSR_REV	(CIA_CSRS + 0x80)

#define		REV_MASK		0x000000ff
#define		REV_ALT_MEM		0x00000100	/* not on Pyxis */

#define		REV_PYXIS_ID_MASK	0x0000ff00
#define		REV_PYXIS_ID_21174	0x00000100

#define	CIA_CSR_CTRL	(CIA_CSRS + 0x100)

#define		CTRL_RCI_EN		0x00000001
#define		CTRL_PCI_LOCK_EN	0x00000002
#define		CTRL_PCI_LOOP_EN	0x00000004
#define		CTRL_FST_BB_EN		0x00000008
#define		CTRL_PCI_MST_EN		0x00000010
#define		CTRL_PCI_MEM_EN		0x00000020
#define		CTRL_PCI_REQ64_EN	0x00000040
#define		CTRL_PCI_ACK64_EN	0x00000080
#define		CTRL_ADDR_PE_EN		0x00000100
#define		CTRL_PERR_EN		0x00000200
#define		CTRL_FILL_ERR_EN	0x00000400
#define		CTRL_ECC_CHK_EN		0x00001000
#define		CTRL_CACK_EN_PE		0x00002000
#define		CTRL_CON_IDLE_BC	0x00004000
#define		CTRL_CSR_IOA_BYPASS	0x00008000
#define		CTRL_IO_FLUSHREQ_EN	0x00010000
#define		CTRL_CPU_CLUSHREQ_EN	0x00020000
#define		CTRL_ARB_EV5_EN		0x00040000
#define		CTRL_EN_ARB_LINK	0x00080000
#define		CTRL_RD_TYPE		0x00300000
#define		CTRL_RL_TYPE		0x03000000
#define		CTRL_RM_TYPE		0x30000000

/* a.k.a. CIA_CSR_PYXIS_CTRL1 */
#define	CIA_CSR_CNFG	(CIA_CSRS + 0x140)

#define		CNFG_BWEN		0x00000001
#define		CNFG_MWEN		0x00000010
#define		CNFG_DWEN		0x00000020
#define		CNFG_WLEN		0x00000100

#define	CIA_CSR_CNFG_BITS	"\20\11WLEN\6DWEN\5MWEN\1BWEN"

#define	CIA_CSR_HAE_MEM	(CIA_CSRS + 0x400)

#define		HAE_MEM_REG1_START(x)	(((u_int32_t)(x) & 0xe0000000UL) << 0)
#define		HAE_MEM_REG1_MASK	0x1fffffffUL
#define		HAE_MEM_REG2_START(x)	(((u_int32_t)(x) & 0x0000f800UL) << 16)
#define		HAE_MEM_REG2_MASK	0x07ffffffUL
#define		HAE_MEM_REG3_START(x)	(((u_int32_t)(x) & 0x000000fcUL) << 24)
#define		HAE_MEM_REG3_MASK	0x03ffffffUL

#define	CIA_CSR_HAE_IO	(CIA_CSRS + 0x440)

#define		HAE_IO_REG1_START(x)	0UL
#define		HAE_IO_REG1_MASK	0x01ffffffUL
#define		HAE_IO_REG2_START(x)	(((u_int32_t)(x) & 0xfe000000UL) << 0)
#define		HAE_IO_REG2_MASK	0x01ffffffUL

#define	CIA_CSR_CFG	(CIA_CSRS + 0x480)

#define		CFG_CFG_MASK		0x00000003UL

#define	CIA_CSR_CIA_ERR	(CIA_CSRS + 0x8200)

#define		CIA_ERR_COR_ERR		  0x00000001
#define		CIA_ERR_UN_COR_ERR	  0x00000002
#define		CIA_ERR_CPU_PE		  0x00000004
#define		CIA_ERR_MEM_NEM		  0x00000008
#define		CIA_ERR_PCI_SERR	  0x00000010
#define		CIA_ERR_PERR		  0x00000020
#define		CIA_ERR_PCI_ADDR_PE	  0x00000040
#define		CIA_ERR_RCVD_MAS_ABT	  0x00000080
#define		CIA_ERR_RCVD_TAR_ABT	  0x00000100
#define		CIA_ERR_PA_PTE_INV	  0x00000200
#define		CIA_ERR_FROM_WRT_ERR	  0x00000400
#define		CIA_ERR_IOA_TIMEOUT	  0x00000800
#define		CIA_ERR_LOST_COR_ERR	  0x00010000
#define		CIA_ERR_LOST_UN_COR_ERR	  0x00020000
#define		CIA_ERR_LOST_CPU_PE	  0x00040000
#define		CIA_ERR_LOST_MEM_NEM	  0x00080000
#define		CIA_ERR_LOST_PERR	  0x00200000
#define		CIA_ERR_LOST_PCI_ADDR_PE  0x00400000
#define		CIA_ERR_LOST_RCVD_MAS_ABT 0x00800000
#define		CIA_ERR_LOST_RCVD_TAR_ABT 0x01000000
#define		CIA_ERR_LOST_PA_PTE_INV	  0x02000000
#define		CIA_ERR_LOST_FROM_WRT_ERR 0x04000000
#define		CIA_ERR_LOST_IOA_TIMEOUT  0x08000000
#define		CIA_ERR_VALID		  0x80000000
@


1.8
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.7
log
@I'm clearly having problems with cut-and-paste today.
@
text
@d1 1
a1 2
/*	$OpenBSD: ciareg.h,v 1.6 1998/06/28 02:58:50 angelos Exp $	*/
/*	$NetBSD: ciareg.h,v 1.7 1996/11/23 06:42:55 cgd Exp $	*/
d7 1
a7 1
 * Author: Chris G. Demetriou
d33 1
a33 1
 * Taken from XXX
d36 2
a37 1
#define	REGVAL(r)	(*(int32_t *)ALPHA_PHYS_TO_K0SEG(r))
d53 25
a77 25
#define CIA_PCI_TBIA    0x8760000100UL
#define CIA_EV56_BWMEM  0x8800000000UL
#define CIA_EV56_BWIO   0x8900000000UL
#define CIA_EV56_BWCONF0 0x8a00000000UL  
#define CIA_EV56_BWCONF1 0x8b00000000UL

#define CIA_PCI_W0BASE  0x8760000400UL
#define CIA_PCI_W0MASK  0x8760000440UL
#define CIA_PCI_T0BASE  0x8760000480UL

#define CIA_PCI_W1BASE  0x8760000500UL
#define CIA_PCI_W1MASK  0x8760000540UL
#define CIA_PCI_T1BASE  0x8760000580UL

#define CIA_PCI_W2BASE  0x8760000600UL
#define CIA_PCI_W2MASK  0x8760000640UL
#define CIA_PCI_T2BASE  0x8760000680UL

#define CIA_PCI_W3BASE  0x8760000700UL
#define CIA_PCI_W3MASK  0x8760000740UL
#define CIA_PCI_T3BASE  0x8760000780UL

#define PYXIS_INT_REQ   0x87a0000000UL
#define PYXIS_INT_MASK  0x87a0000040UL
#define PYXIS_GPO       0x87a0000180UL
d82 4
a85 4
#define CIA_PCI_TBIA_NOOP       0       /* no operation */
#define CIA_PCI_TBIA_LOCKED     1       /* invalidate and unlock locked tags */
#define CIA_PCI_TBIA_UNLOCKED   2       /* invalidate unlocked tags */
#define CIA_PCI_TBIA_ALL        3       /* invalidate and unlock all tags */
d87 1
a87 1
#define CIA_TLB_NTAGS           8       /* number of TLB entries */
d92 5
a96 5
#define CIA_PCI_WnBASE_W_BASE   0xfff00000
#define CIA_PCI_WnBASE_DAC_EN   0x00000008      /* W3BASE only */
#define CIA_PCI_WnBASE_MEMCS_EN 0x00000004      /* W0BASE only */
#define CIA_PCI_WnBASE_SG_EN    0x00000002
#define CIA_PCI_WnBASE_W_EN     0x00000001
d101 14
a114 14
#define CIA_PCI_WnMASK_W_MASK   0xfff00000
#define CIA_PCI_WnMASK_1M       0x00000000
#define CIA_PCI_WnMASK_2M       0x00100000
#define CIA_PCI_WnMASK_4M       0x00300000
#define CIA_PCI_WnMASK_8M       0x00700000
#define CIA_PCI_WnMASK_16M      0x00f00000
#define CIA_PCI_WnMASK_32M      0x01f00000
#define CIA_PCI_WnMASK_64M      0x03f00000
#define CIA_PCI_WnMASK_128M     0x07f00000
#define CIA_PCI_WnMASK_256M     0x0ff00000
#define CIA_PCI_WnMASK_512M     0x1ff00000
#define CIA_PCI_WnMASK_1G       0x3ff00000
#define CIA_PCI_WnMASK_2G       0x7ff00000
#define CIA_PCI_WnMASK_4G       0xfff00000
d119 2
a120 2
#define CIA_PCI_TnBASE_MASK     0xfffffff0
#define CIA_PCI_TnBASE_SHIFT    2
d126 1
a126 1
#define CIA_CSR_REV     (CIA_CSRS + 0x80)
d128 2
a129 2
#define         REV_MASK                0x000000ff
#define         REV_ALT_MEM             0x00000100      /* not on Pyxis */
d131 2
a132 2
#define         REV_PYXIS_ID_MASK       0x0000ff00
#define         REV_PYXIS_ID_21174      0x00000100
d134 24
a157 24
#define CIA_CSR_CTRL    (CIA_CSRS + 0x100)

#define         CTRL_RCI_EN             0x00000001
#define         CTRL_PCI_LOCK_EN        0x00000002
#define         CTRL_PCI_LOOP_EN        0x00000004
#define         CTRL_FST_BB_EN          0x00000008
#define         CTRL_PCI_MST_EN         0x00000010
#define         CTRL_PCI_MEM_EN         0x00000020
#define         CTRL_PCI_REQ64_EN       0x00000040
#define         CTRL_PCI_ACK64_EN       0x00000080
#define         CTRL_ADDR_PE_EN         0x00000100
#define         CTRL_PERR_EN            0x00000200
#define         CTRL_FILL_ERR_EN        0x00000400
#define         CTRL_ECC_CHK_EN         0x00001000
#define         CTRL_CACK_EN_PE         0x00002000
#define         CTRL_CON_IDLE_BC        0x00004000
#define         CTRL_CSR_IOA_BYPASS     0x00008000  
#define         CTRL_IO_FLUSHREQ_EN     0x00010000
#define         CTRL_CPU_CLUSHREQ_EN    0x00020000  
#define         CTRL_ARB_EV5_EN         0x00040000
#define         CTRL_EN_ARB_LINK        0x00080000
#define         CTRL_RD_TYPE            0x00300000
#define         CTRL_RL_TYPE            0x03000000
#define         CTRL_RM_TYPE            0x30000000
d160 1
a160 1
#define CIA_CSR_CNFG    (CIA_CSRS + 0x140)
d162 4
a165 4
#define         CNFG_BWEN               0x00000001
#define         CNFG_MWEN               0x00000010
#define         CNFG_DWEN               0x00000020
#define         CNFG_WLEN               0x00000100
d167 1
a167 1
#define CIA_CSR_CNFG_BITS       "\20\11WLEN\6DWEN\5MWEN\1BWEN"
d185 1
a185 1
#define CIA_CSR_CFG     (CIA_CSRS + 0x480)
d187 1
a187 1
#define         CFG_CFG_MASK            0x00000003UL
d191 24
a214 24
#define         CIA_ERR_COR_ERR           0x00000001
#define         CIA_ERR_UN_COR_ERR        0x00000002
#define         CIA_ERR_CPU_PE            0x00000004
#define         CIA_ERR_MEM_NEM           0x00000008
#define         CIA_ERR_PCI_SERR          0x00000010
#define         CIA_ERR_PERR              0x00000020
#define         CIA_ERR_PCI_ADDR_PE       0x00000040
#define         CIA_ERR_RCVD_MAS_ABT      0x00000080
#define         CIA_ERR_RCVD_TAR_ABT      0x00000100
#define         CIA_ERR_PA_PTE_INV        0x00000200
#define         CIA_ERR_FROM_WRT_ERR      0x00000400
#define         CIA_ERR_IOA_TIMEOUT       0x00000800
#define         CIA_ERR_LOST_COR_ERR      0x00010000
#define         CIA_ERR_LOST_UN_COR_ERR   0x00020000
#define         CIA_ERR_LOST_CPU_PE       0x00040000
#define         CIA_ERR_LOST_MEM_NEM      0x00080000
#define         CIA_ERR_LOST_PERR         0x00200000
#define         CIA_ERR_LOST_PCI_ADDR_PE  0x00400000
#define         CIA_ERR_LOST_RCVD_MAS_ABT 0x00800000
#define         CIA_ERR_LOST_RCVD_TAR_ABT 0x01000000
#define         CIA_ERR_LOST_PA_PTE_INV   0x02000000
#define         CIA_ERR_LOST_FROM_WRT_ERR 0x04000000
#define         CIA_ERR_LOST_IOA_TIMEOUT  0x08000000
#define         CIA_ERR_VALID             0x80000000
@


1.7.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/* $OpenBSD: ciareg.h,v 1.9 2000/11/08 20:59:25 ericj Exp $ */
/* $NetBSD: ciareg.h,v 1.22 1998/06/06 20:40:14 thorpej Exp $ */
d8 1
a8 1
 * Authors: Chris G. Demetriou, Jason R. Thorpe
d34 1
a34 1
 * Taken from EC-QE18B-TE.
d37 1
a37 2
#define	REGVAL(r)	(*(volatile int32_t *)ALPHA_PHYS_TO_K0SEG(r))
#define	REGVAL64(r)	(*(volatile u_int64_t *)ALPHA_PHYS_TO_K0SEG(r))
d53 25
a77 25
#define	CIA_PCI_TBIA	0x8760000100UL
#define	CIA_EV56_BWMEM	0x8800000000UL
#define	CIA_EV56_BWIO	0x8900000000UL
#define	CIA_EV56_BWCONF0 0x8a00000000UL
#define	CIA_EV56_BWCONF1 0x8b00000000UL

#define	CIA_PCI_W0BASE	0x8760000400UL
#define	CIA_PCI_W0MASK	0x8760000440UL
#define	CIA_PCI_T0BASE	0x8760000480UL

#define	CIA_PCI_W1BASE	0x8760000500UL
#define	CIA_PCI_W1MASK	0x8760000540UL
#define	CIA_PCI_T1BASE	0x8760000580UL

#define	CIA_PCI_W2BASE	0x8760000600UL
#define	CIA_PCI_W2MASK	0x8760000640UL
#define	CIA_PCI_T2BASE	0x8760000680UL

#define	CIA_PCI_W3BASE	0x8760000700UL
#define	CIA_PCI_W3MASK	0x8760000740UL
#define	CIA_PCI_T3BASE	0x8760000780UL

#define	PYXIS_INT_REQ	0x87a0000000UL
#define	PYXIS_INT_MASK	0x87a0000040UL
#define	PYXIS_GPO	0x87a0000180UL
d82 4
a85 4
#define	CIA_PCI_TBIA_NOOP	0	/* no operation */
#define	CIA_PCI_TBIA_LOCKED	1	/* invalidate and unlock locked tags */
#define	CIA_PCI_TBIA_UNLOCKED	2	/* invalidate unlocked tags */
#define	CIA_PCI_TBIA_ALL	3	/* invalidate and unlock all tags */
d87 1
a87 1
#define	CIA_TLB_NTAGS		8	/* number of TLB entries */
d92 5
a96 5
#define	CIA_PCI_WnBASE_W_BASE	0xfff00000
#define	CIA_PCI_WnBASE_DAC_EN	0x00000008	/* W3BASE only */
#define	CIA_PCI_WnBASE_MEMCS_EN	0x00000004	/* W0BASE only */
#define	CIA_PCI_WnBASE_SG_EN	0x00000002
#define	CIA_PCI_WnBASE_W_EN	0x00000001
d101 14
a114 14
#define	CIA_PCI_WnMASK_W_MASK	0xfff00000
#define	CIA_PCI_WnMASK_1M	0x00000000
#define	CIA_PCI_WnMASK_2M	0x00100000
#define	CIA_PCI_WnMASK_4M	0x00300000
#define	CIA_PCI_WnMASK_8M	0x00700000
#define	CIA_PCI_WnMASK_16M	0x00f00000
#define	CIA_PCI_WnMASK_32M	0x01f00000
#define	CIA_PCI_WnMASK_64M	0x03f00000
#define	CIA_PCI_WnMASK_128M	0x07f00000
#define	CIA_PCI_WnMASK_256M	0x0ff00000
#define	CIA_PCI_WnMASK_512M	0x1ff00000
#define	CIA_PCI_WnMASK_1G	0x3ff00000
#define	CIA_PCI_WnMASK_2G	0x7ff00000
#define	CIA_PCI_WnMASK_4G	0xfff00000
d119 2
a120 2
#define	CIA_PCI_TnBASE_MASK	0xfffffff0
#define	CIA_PCI_TnBASE_SHIFT	2
d126 1
a126 1
#define	CIA_CSR_REV	(CIA_CSRS + 0x80)
d128 2
a129 2
#define		REV_MASK		0x000000ff
#define		REV_ALT_MEM		0x00000100	/* not on Pyxis */
d131 2
a132 2
#define		REV_PYXIS_ID_MASK	0x0000ff00
#define		REV_PYXIS_ID_21174	0x00000100
d134 24
a157 24
#define	CIA_CSR_CTRL	(CIA_CSRS + 0x100)

#define		CTRL_RCI_EN		0x00000001
#define		CTRL_PCI_LOCK_EN	0x00000002
#define		CTRL_PCI_LOOP_EN	0x00000004
#define		CTRL_FST_BB_EN		0x00000008
#define		CTRL_PCI_MST_EN		0x00000010
#define		CTRL_PCI_MEM_EN		0x00000020
#define		CTRL_PCI_REQ64_EN	0x00000040
#define		CTRL_PCI_ACK64_EN	0x00000080
#define		CTRL_ADDR_PE_EN		0x00000100
#define		CTRL_PERR_EN		0x00000200
#define		CTRL_FILL_ERR_EN	0x00000400
#define		CTRL_ECC_CHK_EN		0x00001000
#define		CTRL_CACK_EN_PE		0x00002000
#define		CTRL_CON_IDLE_BC	0x00004000
#define		CTRL_CSR_IOA_BYPASS	0x00008000
#define		CTRL_IO_FLUSHREQ_EN	0x00010000
#define		CTRL_CPU_CLUSHREQ_EN	0x00020000
#define		CTRL_ARB_EV5_EN		0x00040000
#define		CTRL_EN_ARB_LINK	0x00080000
#define		CTRL_RD_TYPE		0x00300000
#define		CTRL_RL_TYPE		0x03000000
#define		CTRL_RM_TYPE		0x30000000
d160 1
a160 1
#define	CIA_CSR_CNFG	(CIA_CSRS + 0x140)
d162 4
a165 4
#define		CNFG_BWEN		0x00000001
#define		CNFG_MWEN		0x00000010
#define		CNFG_DWEN		0x00000020
#define		CNFG_WLEN		0x00000100
d167 1
a167 1
#define	CIA_CSR_CNFG_BITS	"\20\11WLEN\6DWEN\5MWEN\1BWEN"
d185 1
a185 1
#define	CIA_CSR_CFG	(CIA_CSRS + 0x480)
d187 1
a187 1
#define		CFG_CFG_MASK		0x00000003UL
d191 24
a214 24
#define		CIA_ERR_COR_ERR		  0x00000001
#define		CIA_ERR_UN_COR_ERR	  0x00000002
#define		CIA_ERR_CPU_PE		  0x00000004
#define		CIA_ERR_MEM_NEM		  0x00000008
#define		CIA_ERR_PCI_SERR	  0x00000010
#define		CIA_ERR_PERR		  0x00000020
#define		CIA_ERR_PCI_ADDR_PE	  0x00000040
#define		CIA_ERR_RCVD_MAS_ABT	  0x00000080
#define		CIA_ERR_RCVD_TAR_ABT	  0x00000100
#define		CIA_ERR_PA_PTE_INV	  0x00000200
#define		CIA_ERR_FROM_WRT_ERR	  0x00000400
#define		CIA_ERR_IOA_TIMEOUT	  0x00000800
#define		CIA_ERR_LOST_COR_ERR	  0x00010000
#define		CIA_ERR_LOST_UN_COR_ERR	  0x00020000
#define		CIA_ERR_LOST_CPU_PE	  0x00040000
#define		CIA_ERR_LOST_MEM_NEM	  0x00080000
#define		CIA_ERR_LOST_PERR	  0x00200000
#define		CIA_ERR_LOST_PCI_ADDR_PE  0x00400000
#define		CIA_ERR_LOST_RCVD_MAS_ABT 0x00800000
#define		CIA_ERR_LOST_RCVD_TAR_ABT 0x01000000
#define		CIA_ERR_LOST_PA_PTE_INV	  0x02000000
#define		CIA_ERR_LOST_FROM_WRT_ERR 0x04000000
#define		CIA_ERR_LOST_IOA_TIMEOUT  0x08000000
#define		CIA_ERR_VALID		  0x80000000
@


1.6
log
@More defines from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: ciareg.h,v 1.5 1997/01/24 19:57:40 niklas Exp $	*/
d167 1
a167 1
#define CIA_CSR_CNFG_BITS       "\20\11WLEN\6DWEN\5MWEN\1BW
@


1.5
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: ciareg.h,v 1.4 1996/10/30 22:39:57 niklas Exp $	*/
d53 68
d126 43
d185 4
d190 25
@


1.4
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 2
a2 2
/*	$OpenBSD: ciareg.h,v 1.5 1996/07/09 00:54:44 cgd Exp $	*/
/*	$NetBSD: ciareg.h,v 1.5 1996/07/09 00:54:44 cgd Exp $	*/
d42 11
a52 11
#define	CIA_PCI_SMEM1	0x8000000000L
#define	CIA_PCI_SMEM2	0x8400000000L
#define	CIA_PCI_SMEM3	0x8500000000L
#define	CIA_PCI_SIO1	0x8580000000L
#define	CIA_PCI_SIO2	0x85c0000000L
#define	CIA_PCI_DENSE	0x8600000000L
#define	CIA_PCI_CONF	0x8700000000L
#define	CIA_PCI_IACK	0x8720000000L
#define	CIA_CSRS	0x8740000000L
#define	CIA_PCI_MC_CSRS	0x8750000000L
#define	CIA_PCI_ATRANS	0x8760000000L
d60 6
a65 6
#define		HAE_MEM_REG1_START(x)	(((u_int32_t)(x) & 0xe0000000) << 0)
#define		HAE_MEM_REG1_MASK	0x1fffffff
#define		HAE_MEM_REG2_START(x)	(((u_int32_t)(x) & 0x0000f800) << 16)
#define		HAE_MEM_REG2_MASK	0x07ffffff
#define		HAE_MEM_REG3_START(x)	(((u_int32_t)(x) & 0x000000fc) << 16)
#define		HAE_MEM_REG3_MASK	0x03ffffff
d69 6
a74 4
#define		HAE_IO_REG1_START(x)	0
#define		HAE_IO_REG1_MASK	0x01ffffff
#define		HAE_IO_REG2_START(x)	(((u_int32_t)(x) & 0xfe000000) << 0)
#define		HAE_IO_REG2_MASK	0x01ffffff
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: ciareg.h,v 1.1.4.3 1996/06/13 18:35:27 cgd Exp $	*/
/*	$NetBSD: ciareg.h,v 1.1.4.3 1996/06/13 18:35:27 cgd Exp $	*/
d37 1
a37 1
#define	REGVAL(r)	(*(int32_t *)phystok0seg(r))
@


1.2
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.1
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: ciareg.h,v 1.1 1995/11/23 02:37:31 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1995 Carnegie-Mellon University.
d41 5
a45 5
#define	CIA_PCI_SPARSE0	0x8000000000L
#define	CIA_PCI_SPARSE1	0x8400000000L
#define	CIA_PCI_SPARSE2	0x8500000000L
#define	CIA_PCI_SIO0	0x8580000000L
#define	CIA_PCI_SIO1	0x85c0000000L
d52 20
@
