head	1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.42
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.38
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.34
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.36
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.28
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.32
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.30
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.26
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.24
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.22
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.20
	OPENBSD_5_0:1.1.0.18
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.16
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.14
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2007.03.16.21.22.27;	author robert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@add DEC_KN300 support from NetBSD;

This code makes it possible to run on some of the AlphaServers,
namely AlphaServer 4100 and 1200.

add mcbus(4) and mcpcia(4) to provide support for the system bus and
the MCPCIA-to-PCI bus adapter that can be found in these systems

allow the pci_swiz_bus code to handle variable extent names
to be able to handle more than one mcpcia(4)

"just commit it" deraadt@@
@
text
@/* $OpenBSD$ */
/* $NetBSD: mcbusvar.h,v 1.6 2005/12/11 12:16:17 christos Exp $ */

/*
 * Copyright (c) 1998 by Matthew Jacob
 * NASA AMES Research Center.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice immediately at the beginning of the file, without modification,
 *    this list of conditions, and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Soft definitions for the MCBUS main system
 * bus found on AlphaServer 4100 systems.
 */

/*
 * The structure used to attach devices to the MCbus.
 */
struct mcbus_dev_attach_args {
	char *		ma_name;	/* so things aren't confused */
	u_int8_t	ma_gid;		/* GID of MCBUS (MCBUS #) */
	u_int8_t	ma_mid;		/* Module ID on MCBUS */
	u_int8_t	ma_type;	/* Module "type" */
	u_int8_t	ma_configured;	/* nonzero if configured */
};
#define	MCBUS_GID_FROM_INSTANCE(unit)	(7 - unit)

/*
 * Bus-dependent structure for CPUs. This is dynamically allocated
 * for each CPU on the MCbus, and glued into the cpu_softc as sc_busdep,
 * if there is such a beast available. Otherwise, a single global version
 * is used so that the MCPCIA configuration code can determine toads
 * like module id and bcache size of the master CPU.
 */
struct mcbus_cpu_busdep {
	u_int8_t	mcbus_cpu_mid;	/* MCbus Module ID */
	u_int8_t	mcbus_bcache;	/* BCache on this CPU */
	u_int8_t	mcbus_valid;
};

#define	MCBUS_CPU_BCACHE_0MB	0
#define	MCBUS_CPU_BCACHE_1MB	1
#define	MCBUS_CPU_BCACHE_4MB	2

/*
 * "types"
 */
#define	MCBUS_TYPE_RES	0
#define	MCBUS_TYPE_UNK	1
#define	MCBUS_TYPE_MEM	2
#define	MCBUS_TYPE_CPU	3
#define	MCBUS_TYPE_PCI	4

#ifdef _KERNEL
extern struct mcbus_cpu_busdep mcbus_primary;
extern const int mcbus_mcpcia_probe_order[];
#endif
@
