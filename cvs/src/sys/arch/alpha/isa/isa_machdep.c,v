head	1.14;
access;
symbols
	OPENBSD_6_1:1.13.0.48
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.44
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.40
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.42
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.34
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.38
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.36
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.32
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.30
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.28
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.26
	OPENBSD_5_0:1.13.0.24
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.22
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.20
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.16
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.18
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.14
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.12
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.10
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.16
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.14
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.12
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.10
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.9.0.2
	UBC_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.09.08.05.36.51;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	uRv5pa9QDlZaYgwD;

1.13
date	2006.02.12.21.09.08;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.24.19.52.48;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.23.05.06.40;	author ericj;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.06.19.53.13;	author miod;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.08.08.15.21.28;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2000.11.16.04.33.47;	author ericj;	state Exp;
branches;
next	1.6;

1.6
date	97.11.10.15.53.10;	author niklas;	state Exp;
branches
	1.6.10.1;
next	1.5;

1.5
date	97.11.06.12.27.02;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	97.07.31.02.25.16;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.01.24.19.57.23;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.16;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.49.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.44;	author deraadt;	state Exp;
branches;
next	;

1.6.10.1
date	2001.04.18.16.01.01;	author niklas;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2001.10.31.02.52.44;	author nate;	state Exp;
branches;
next	1.6.10.3;

1.6.10.3
date	2001.11.13.21.00.49;	author niklas;	state Exp;
branches;
next	1.6.10.4;

1.6.10.4
date	2002.03.06.00.47.44;	author niklas;	state Exp;
branches;
next	1.6.10.5;

1.6.10.5
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	;

1.9.2.1
date	2002.01.31.22.55.05;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@If you use sys/param.h, you don't need sys/types.h
@
text
@/* $OpenBSD: isa_machdep.c,v 1.13 2006/02/12 21:09:08 miod Exp $ */
/* $NetBSD: isa_machdep.c,v 1.12 1998/08/07 10:26:39 drochner Exp $ */

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * Machine-specific functions for ISA autoconfiguration.
 */

#include <sys/param.h>
#include <sys/time.h>
#include <sys/systm.h>
#include <sys/errno.h>
#include <sys/device.h>

#include <uvm/uvm_extern.h>

#include <dev/isa/isavar.h>

#include "vga.h"
#if NVGA_ISA
#include <dev/ic/mc6845reg.h>
#include <dev/ic/pcdisplayvar.h>
#include <dev/isa/vga_isavar.h>
#endif

int
isa_display_console(iot, memt)
	bus_space_tag_t iot, memt;
{
	int res = ENXIO;
#if NVGA_ISA
	res = vga_isa_cnattach(iot, memt);
	if (!res)
		return(0);
#endif
	return(res);
}
@


1.13
log
@Remove dead isabeep driver and unused isabeep() function.
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.12 2002/03/14 01:26:27 millert Exp $ */
a34 1
#include <sys/types.h>
@


1.12
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.11 2002/01/24 19:52:48 miod Exp $ */
a52 20
#include "pcppi.h"
#if (NPCPPI > 0)
#include <dev/isa/pcppivar.h>

int isabeepmatch(struct device *, void *, void *);
void isabeepattach(struct device *, struct device *, void *);
void isabeep(int, int);

struct cfattach isabeep_ca = {
	sizeof(struct device), isabeepmatch, isabeepattach
};

struct cfdriver isabeep_cd = {
	NULL, "isabeep", DV_DULL
};

static int ppi_attached;
static pcppi_tag_t ppicookie;
#endif /* PCPPI */

a64 30

#if (NPCPPI > 0)
int
isabeepmatch(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	return (!ppi_attached);
}

void
isabeepattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	printf("\n");

	ppicookie = ((struct pcppi_attach_args *)aux)->pa_cookie;
	ppi_attached = 1;
}

void
isabeep(pitch, period)
	int pitch, period;
{
	if (ppi_attached)
		pcppi_bell(ppicookie, pitch, period, 0);
}
#endif
@


1.11
log
@RAMDISKB compiles again...
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.10 2002/01/23 05:06:40 ericj Exp $ */
d57 3
a59 3
int isabeepmatch __P((struct device *, void *, void *));
void isabeepattach __P((struct device *, struct device *, void *));
void isabeep __P((int, int));
@


1.10
log
@
enable spkr, isabeep devices
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.9 2001/11/06 19:53:13 miod Exp $ */
a105 1
#endif
a110 1
#if (NPCPPI > 0)
d113 1
a114 1
}
@


1.9
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.8 2001/08/08 15:21:28 millert Exp $ */
d57 1
a57 1
int isabeepmatch __P((struct device *, struct cfdata *, void *));
d59 1
d65 4
d90 1
a90 1
	struct cfdata *match;
a107 1
#if 0
a116 1
#endif
@


1.9.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.11 2002/01/24 19:52:48 miod Exp $ */
d57 1
a57 1
int isabeepmatch __P((struct device *, void *, void *));
a58 1
void isabeep __P((int, int));
a63 4
struct cfdriver isabeep_cd = {
	NULL, "isabeep", DV_DULL
};

d85 1
a85 1
	void *match;
d101 1
d103 1
d108 1
d111 1
@


1.9.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.9.2.1 2002/01/31 22:55:05 niklas Exp $ */
d57 3
a59 3
int isabeepmatch(struct device *, void *, void *);
void isabeepattach(struct device *, struct device *, void *);
void isabeep(int, int);
@


1.8
log
@vga_{isa,pci}.h -> vga.h since the former no longer exists.
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.7 2000/11/16 04:33:47 ericj Exp $ */
a41 1
#include <vm/vm.h>
@


1.7
log
@
configure vga, mouse and keyboard's once again. Currently only on eb164.
others soon. Some of this from NetBSD.
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.12 1998/08/07 10:26:39 drochner Exp $ */
d47 1
a47 1
#include "vga_isa.h"
@


1.6
log
@$OpenBSD$
@
text
@d1 2
a2 2
/*	$OpenBSD: isa_machdep.c,v 1.5 1996/11/23 06:38:49 cgd Exp $	*/
/*	$NetBSD: isa_machdep.c,v 1.5 1996/11/23 06:38:49 cgd Exp $	*/
d41 1
d43 1
d49 2
d54 20
a73 4
struct {
	int	(*probe) __P((bus_space_tag_t, bus_space_tag_t));
	void	(*console) __P((bus_space_tag_t, bus_space_tag_t));
} isa_display_console_devices[] = {
d75 3
a77 1
	{ vga_isa_console_match, vga_isa_console_attach },
d79 12
a90 2
	{ },
};
d93 3
a95 2
isa_display_console(iot, memt)
	bus_space_tag_t iot, memt;
d97 1
a97 1
	int i = 0;
d99 2
a100 5
	while (isa_display_console_devices[i].probe != NULL)
		if ((*isa_display_console_devices[i].probe)(iot, memt)) {
			(*isa_display_console_devices[i].console)(iot, memt);
			break;
		}
d102 13
@


1.6.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/* $OpenBSD: isa_machdep.c,v 1.7 2000/11/16 04:33:47 ericj Exp $ */
/* $NetBSD: isa_machdep.c,v 1.12 1998/08/07 10:26:39 drochner Exp $ */
a40 1

a41 1
#include <uvm/uvm_extern.h>
a46 2
#include <dev/ic/mc6845reg.h>
#include <dev/ic/pcdisplayvar.h>
d50 8
a57 9
#include "pcppi.h"
#if (NPCPPI > 0)
#include <dev/isa/pcppivar.h>

int isabeepmatch __P((struct device *, struct cfdata *, void *));
void isabeepattach __P((struct device *, struct device *, void *));

struct cfattach isabeep_ca = {
	sizeof(struct device), isabeepmatch, isabeepattach
d60 1
a60 5
static int ppi_attached;
static pcppi_tag_t ppicookie;
#endif /* PCPPI */

int
d64 1
a64 8
	int res = ENXIO;
#if NVGA_ISA
	res = vga_isa_cnattach(iot, memt);
	if (!res)
		return(0);
#endif
	return(res);
}
d66 5
a70 8
#if (NPCPPI > 0)
int
isabeepmatch(parent, match, aux)
	struct device *parent;
	struct cfdata *match;
	void *aux;
{
	return (!ppi_attached);
a71 24

void
isabeepattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	printf("\n");

	ppicookie = ((struct pcppi_attach_args *)aux)->pa_cookie;
	ppi_attached = 1;
}
#endif

#if 0
void
isabeep(pitch, period)
	int pitch, period;
{
#if (NPCPPI > 0)
	if (ppi_attached)
		pcppi_bell(ppicookie, pitch, period, 0);
#endif
}
#endif
@


1.6.10.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/* $OpenBSD: isa_machdep.c,v 1.6.10.1 2001/04/18 16:01:01 niklas Exp $ */
d47 1
a47 1
#include "vga.h"
@


1.6.10.3
log
@Merge in -current
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 1
@


1.6.10.4
log
@Merge in trunk
@
text
@d57 1
a57 1
int isabeepmatch __P((struct device *, void *, void *));
a58 1
void isabeep __P((int, int));
a63 4
struct cfdriver isabeep_cd = {
	NULL, "isabeep", DV_DULL
};

d85 1
a85 1
	void *match;
d101 1
d103 1
d108 1
d111 1
@


1.6.10.5
log
@Merge in -current from about a week ago
@
text
@d57 3
a59 3
int isabeepmatch(struct device *, void *, void *);
void isabeepattach(struct device *, struct device *, void *);
void isabeep(int, int);
@


1.5
log
@Add some missing things for the MI vga driver.  Move wscons to an MI place as
well.  $OpenBSD$ tagging
@
text
@d1 1
@


1.4
log
@typo
@
text
@d46 1
a46 1
#include <alpha/isa/vga_isavar.h>
@


1.3
log
@Sync with NetBSD 961207
@
text
@d31 1
a31 1
 * Machine-specific functions for PCI autoconfiguration.
@


1.2
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: isa_machdep.c,v 1.2 1995/08/03 01:23:08 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1995 Carnegie-Mellon University.
d30 5
d36 1
d38 1
a38 3
#include <sys/kernel.h>
#include <sys/conf.h>
#include <sys/malloc.h>
d40 1
a41 7
#include <machine/autoconf.h>
#include <machine/pio.h>
#include <machine/rpb.h>
#include <machine/vmparam.h>
#include <machine/pte.h>

#include <dev/isa/isareg.h>
a42 1
#include <dev/isa/isadmavar.h>
d44 4
a47 2
#include <alpha/isa/isa_intr.h>
#include <alpha/isa/isa_dma.h>
d49 8
a56 5
int isamatch __P((struct device *, void *, void *));
void isaattach __P((struct device *, struct device *, void *));

struct cfdriver isacd = {
	NULL, "isa", isamatch, isaattach, DV_DULL, sizeof(struct isa_softc), 1
a58 103
int
isamatch(parent, cfdata, aux)
	struct device *parent;
	void *cfdata, *aux;
{
	struct cfdata *cf = cfdata;
	struct confargs *ca = aux;

#if 0 /* XXX -- Assume that it's valid if unit number OK */
	/* It can only occur on the mainbus. */
	if (ca->ca_bus->ab_type != BUS_MAIN)
		return (0);

	/* Make sure that we're looking for this type of device. */
	if (!BUS_MATCHNAME(ca, "isa"))
		return (0);
#endif /* XXX */

	/* See if the unit number is valid. */
	switch (hwrpb->rpb_type) {
#if defined(DEC_2100_A50)
	case ST_DEC_2100_A50:
		if (cf->cf_unit > 0)
			return (0);
		break;
#endif
	default:
		return (0);
	}

	return (1);
}

void
isaattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct isa_softc *sc = (struct isa_softc *)self;

	printf("\n");

	TAILQ_INIT(&sc->sc_subdevs);

	/* XXX set up ISA DMA controllers? */

	config_scan(isascan, self);
}

void *
isa_intr_establish(irq, type, level, ih_fun, ih_arg)
	int irq;
	isa_intrtype type;
	isa_intrlevel level;
	int (*ih_fun)(void *);
	void *ih_arg;
{

	return (*isa_intr_fcns->isa_intr_establish)(irq, type, level,
	    ih_fun, ih_arg);
}

void
isa_intr_disestablish(handler)
	void *handler;
{

	(*isa_intr_fcns->isa_intr_disestablish)(handler);
}

int
isadma_map(addr, size, mappings, flags)
	caddr_t addr;
	vm_size_t size;
	vm_offset_t *mappings;
	int flags;
{

	(*isadma_fcns->isadma_map)(addr, size, mappings, flags);
}

void
isadma_unmap(addr, size, nmappings, mappings)
	caddr_t addr;
	vm_size_t size;
	int nmappings;
	vm_offset_t *mappings;
{

	(*isadma_fcns->isadma_unmap)(addr, size, nmappings, mappings);
}

void
isadma_copytobuf(addr, size, nmappings, mappings)
	caddr_t addr;
	vm_size_t size;
	int nmappings;
	vm_offset_t *mappings;
{

	(*isadma_fcns->isadma_copytobuf)(addr, size, nmappings, mappings);
}

d60 2
a61 5
isadma_copyfrombuf(addr, size, nmappings, mappings)
	caddr_t addr;
	vm_size_t size;
	int nmappings;
	vm_offset_t *mappings;
d63 1
d65 5
a69 1
	(*isadma_fcns->isadma_copyfrombuf)(addr, size, nmappings, mappings);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
