head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.60
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.62
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.58
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.54
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.56
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.48
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.52
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.50
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.46
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.44
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.42
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.40
	OPENBSD_5_0:1.7.0.38
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.36
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.34
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.30
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.32
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.28
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.26
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.24
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.22
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.20
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.18
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.16
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.14
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.12
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.10
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.8
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.7
	UBC:1.5.0.16
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.14
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.12
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.6
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.06.25.21.33.21;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.01.11.05.11.02;	author millert;	state Exp;
branches
	1.5.6.1
	1.5.16.1;
next	1.4;

1.4
date	96.10.30.22.39.38;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.22.59.46;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.18.09.43.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.44;	author deraadt;	state Exp;
branches;
next	;

1.5.6.1
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	1.5.6.2;

1.5.6.2
date	2003.03.27.23.18.06;	author niklas;	state Exp;
branches;
next	;

1.5.16.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	1.5.16.2;

1.5.16.2
date	2002.10.29.00.28.00;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@No \n at the end of a panic() message... I thought all occurences had been
squashed already.
@
text
@/*	$OpenBSD: isafcns_jensen.c,v 1.6 2002/03/14 01:26:27 millert Exp $	*/
/*	$NetBSD: isafcns_jensen.c,v 1.4 1996/10/13 02:59:54 christos Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/types.h>
#include <machine/pio.h>
#include <machine/pte.h>

static u_int8_t		jensen_inb(int port);
/* static void		jensen_insb(int port, void *addr, int cnt); */
static u_int16_t	jensen_inw(int port);
/* static void		jensen_insw(int port, void *addr, int cnt); */
u_int32_t		jensen_inl(int port);
/* static void		jensen_insl(int port, void *addr, int cnt); */

static void		jensen_outb(int port, u_int8_t datum);
/* static void		jensen_outsb(int port, void *addr, int cnt); */
static void		jensen_outw(int port, u_int16_t datum);
/* static void		jensen_outsw(int port, void *addr, int cnt); */
static void		jensen_outl(int port, u_int32_t datum);
/* static void		jensen_outsl(int port, void *addr, int cnt); */

struct alpha_isafcndesc jensen_isafcns = {
	jensen_inb,	0 /* jensen_insb */,
	jensen_inw,	0 /* jensen_insw */,
	jensen_inl,	0 /* jensen_insl */,
	jensen_outb,	0 /* jensen_outsb */,
	jensen_outw,	0 /* jensen_outsw */,
	jensen_outl,	0 /* jensen_outsl */,
};

u_int8_t
jensen_inb(ioaddr)
	int ioaddr;
{
	u_int32_t *port, val;
	u_int8_t rval;
	int offset;

	offset = ioaddr & 3;
	port = (int32_t *)phystok0seg(0x300000000L | 0 << 5 | ioaddr << 7);
	val = *port;
	rval = ((val) >> (8 * offset)) & 0xff;
	rval = val & 0xff;

printf("inb(0x%x) => 0x%x @@ %p => 0x%x\n", ioaddr, val, port, rval);

	return rval;
}

u_int16_t
jensen_inw(ioaddr)
	int ioaddr;
{
	u_int32_t *port, val;
	u_int16_t rval;
	int offset;

	offset = ioaddr & 3;
	port = (int32_t *)phystok0seg(0x300000000L | 1 << 5 | ioaddr << 7);
	val = *port;
	rval = ((val) >> (8 * offset)) & 0xffff;
	rval = val & 0xffff;

printf("inw(0x%x) => 0x%x @@ %p => 0x%x", ioaddr, val, port, rval);

	return rval;
}

u_int32_t
jensen_inl(ioaddr)
	int ioaddr;
{
	u_int32_t *port, val;
	u_int32_t rval;
	int offset;

	offset = ioaddr & 3;
	port = (int32_t *)phystok0seg(0x300000000L | 3 << 5 | ioaddr << 7);
	val = *port;
	rval = ((val) >> (8 * offset)) & 0xffffffff;
	rval = val & 0xffffffff;

printf("inl(0x%x) => 0x%x @@ %p => 0x%x\n", ioaddr, val, port, rval);

	return rval;
}

void
jensen_outb(ioaddr, val)
	int ioaddr;
	u_int8_t val;
{
	u_int32_t *port, nval;
	int offset;

	offset = ioaddr & 3;
	nval = val /*<< (8 * offset)*/;
	port = (int32_t *)phystok0seg(0x300000000L | 0 << 5 | ioaddr << 7);

printf("outb(0x%x, 0x%x) => 0x%x @@ %p\n", ioaddr, val, nval, port);

	*port = nval;
}

void
jensen_outw(ioaddr, val)
	int ioaddr;
	u_int16_t val;
{
	u_int32_t *port, nval;
	int offset;

	offset = ioaddr & 3;
	nval = val /*<< (8 * offset)*/;
	port = (int32_t *)phystok0seg(0x300000000L | 1 << 5 | ioaddr << 7);

printf("outb(0x%x, 0x%x) => 0x%x @@ %p\n", ioaddr, val, nval, port);

	*port = nval;
}

void
jensen_outl(ioaddr, val)
	int ioaddr;
	u_int32_t val;
{
	u_int32_t *port, nval;
	int offset;

	offset = ioaddr & 3;
	nval = val /*<< (8 * offset)*/;
	port = (int32_t *)phystok0seg(0x300000000L | 3 << 5 | ioaddr << 7);

printf("outb(0x%x, 0x%x) => 0x%x @@ %p\n", ioaddr, val, nval, port);

	*port = nval;
}
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: isafcns_jensen.c,v 1.5 1999/01/11 05:11:02 millert Exp $	*/
d91 1
a91 1
panic("inw(0x%x) => 0x%x @@ %p => 0x%x", ioaddr, val, port, rval);
@


1.5
log
@panic prints a newline for you, don't do it in the panic string
@
text
@d1 1
a1 1
/*	$OpenBSD: isafcns_jensen.c,v 1.4 1996/10/30 22:39:38 niklas Exp $	*/
d35 6
a40 6
static u_int8_t		jensen_inb __P((int port));
/* static void		jensen_insb __P((int port, void *addr, int cnt)); */
static u_int16_t	jensen_inw __P((int port));
/* static void		jensen_insw __P((int port, void *addr, int cnt)); */
u_int32_t		jensen_inl __P((int port));
/* static void		jensen_insl __P((int port, void *addr, int cnt)); */
d42 6
a47 6
static void		jensen_outb __P((int port, u_int8_t datum));
/* static void		jensen_outsb __P((int port, void *addr, int cnt)); */
static void		jensen_outw __P((int port, u_int16_t datum));
/* static void		jensen_outsw __P((int port, void *addr, int cnt)); */
static void		jensen_outl __P((int port, u_int32_t datum));
/* static void		jensen_outsl __P((int port, void *addr, int cnt)); */
@


1.5.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: isafcns_jensen.c,v 1.5 1999/01/11 05:11:02 millert Exp $	*/
d35 6
a40 6
static u_int8_t		jensen_inb(int port);
/* static void		jensen_insb(int port, void *addr, int cnt); */
static u_int16_t	jensen_inw(int port);
/* static void		jensen_insw(int port, void *addr, int cnt); */
u_int32_t		jensen_inl(int port);
/* static void		jensen_insl(int port, void *addr, int cnt); */
d42 6
a47 6
static void		jensen_outb(int port, u_int8_t datum);
/* static void		jensen_outsb(int port, void *addr, int cnt); */
static void		jensen_outw(int port, u_int16_t datum);
/* static void		jensen_outsw(int port, void *addr, int cnt); */
static void		jensen_outl(int port, u_int32_t datum);
/* static void		jensen_outsl(int port, void *addr, int cnt); */
@


1.5.16.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: isafcns_jensen.c,v 1.5.16.1 2002/06/11 03:33:40 art Exp $	*/
d91 1
a91 1
printf("inw(0x%x) => 0x%x @@ %p => 0x%x", ioaddr, val, port, rval);
@


1.5.6.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 6
a40 6
static u_int8_t		jensen_inb(int port);
/* static void		jensen_insb(int port, void *addr, int cnt); */
static u_int16_t	jensen_inw(int port);
/* static void		jensen_insw(int port, void *addr, int cnt); */
u_int32_t		jensen_inl(int port);
/* static void		jensen_insl(int port, void *addr, int cnt); */
d42 6
a47 6
static void		jensen_outb(int port, u_int8_t datum);
/* static void		jensen_outsb(int port, void *addr, int cnt); */
static void		jensen_outw(int port, u_int16_t datum);
/* static void		jensen_outsw(int port, void *addr, int cnt); */
static void		jensen_outl(int port, u_int32_t datum);
/* static void		jensen_outsl(int port, void *addr, int cnt); */
@


1.5.6.2
log
@Sync the SMP branch with 3.3
@
text
@d91 1
a91 1
printf("inw(0x%x) => 0x%x @@ %p => 0x%x", ioaddr, val, port, rval);
@


1.4
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: isafcns_jensen.c,v 1.4 1996/10/13 02:59:54 christos Exp $	*/
d91 1
a91 1
panic("inw(0x%x) => 0x%x @@ %p => 0x%x\n", ioaddr, val, port, rval);
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: isafcns_jensen.c,v 1.2 1996/04/12 01:54:04 cgd Exp $	*/
/*	$NetBSD: isafcns_jensen.c,v 1.2 1996/04/12 01:54:04 cgd Exp $	*/
@


1.2
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 28
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
