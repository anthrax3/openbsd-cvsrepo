head	1.8;
access;
symbols
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.48
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.44
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.40
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.42
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.34
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.38
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.36
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.32
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.30
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.28
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.26
	OPENBSD_5_0:1.8.0.24
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.16
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.14
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.12
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.10
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.24
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.22
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2006.01.02.05.21.24;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.01.24.19.57.24;	author niklas;	state Exp;
branches
	1.6.14.1
	1.6.24.1;
next	1.5;

1.5
date	96.12.08.00.20.27;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.11.12.20.29.31;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.10.30.22.39.39;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.07.29.22.59.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.06.18.09.43.46;	author deraadt;	state Exp;
branches;
next	;

1.6.14.1
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	;

1.6.24.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove last traces of __BROKEN_INDIRECT_CONFIG.

Thanks to aanriot@@ and Michael Knudsen for checking that alpha/i386/macppc
kernels still compile.
@
text
@/*	$OpenBSD: mcclock_isa.c,v 1.7 2002/03/14 01:26:27 millert Exp $	*/
/*	$NetBSD: mcclock_isa.c,v 1.5 1996/12/05 01:39:29 cgd Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/kernel.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/bus.h>

#include <alpha/alpha/clockvar.h>
#include <alpha/alpha/mcclockvar.h>
#include <dev/ic/mc146818reg.h>
#include <dev/isa/isavar.h>

struct mcclock_isa_softc {
	struct mcclock_softc	sc_mcclock;

	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_ioh;
};

int	mcclock_isa_match(struct device *, void *, void *);
void	mcclock_isa_attach(struct device *, struct device *, void *);

struct cfattach mcclock_isa_ca = {
	sizeof (struct mcclock_isa_softc), mcclock_isa_match,
	    mcclock_isa_attach, 
};

void	mcclock_isa_write(struct mcclock_softc *, u_int, u_int);
u_int	mcclock_isa_read(struct mcclock_softc *, u_int);

const struct mcclock_busfns mcclock_isa_busfns = {
	mcclock_isa_write, mcclock_isa_read,
};

int
mcclock_isa_match(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	struct isa_attach_args *ia = aux;
	bus_space_handle_t ioh;

        if ((ia->ia_iobase != IOBASEUNK && ia->ia_iobase != 0x70) ||
            /* (ia->ia_iosize != 0 && ia->ia_iosize != 0x2) || XXX isa.c */
            ia->ia_maddr != MADDRUNK || ia->ia_msize != 0 ||
            ia->ia_irq != IRQUNK || ia->ia_drq != DRQUNK)
                return (0);

	if (bus_space_map(ia->ia_iot, 0x70, 0x2, 0, &ioh))
		return (0);

	bus_space_unmap(ia->ia_iot, ioh, 0x2);

	ia->ia_iobase = 0x70;
	ia->ia_iosize = 0x2;

	return (1);
}

void
mcclock_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct isa_attach_args *ia = aux;
	struct mcclock_isa_softc *sc = (struct mcclock_isa_softc *)self;

	sc->sc_iot = ia->ia_iot;
	if (bus_space_map(sc->sc_iot, ia->ia_iobase, ia->ia_iosize, 0,
	    &sc->sc_ioh))
		panic("mcclock_isa_attach: couldn't map clock I/O space");

	mcclock_attach(&sc->sc_mcclock, &mcclock_isa_busfns);
}

void
mcclock_isa_write(mcsc, reg, datum)
	struct mcclock_softc *mcsc;
	u_int reg, datum;
{
	struct mcclock_isa_softc *sc = (struct mcclock_isa_softc *)mcsc;
	bus_space_tag_t iot = sc->sc_iot;
	bus_space_handle_t ioh = sc->sc_ioh;

	bus_space_write_1(iot, ioh, 0, reg);
	bus_space_write_1(iot, ioh, 1, datum);
}

u_int
mcclock_isa_read(mcsc, reg)
	struct mcclock_softc *mcsc;
	u_int reg;
{
	struct mcclock_isa_softc *sc = (struct mcclock_isa_softc *)mcsc;
	bus_space_tag_t iot = sc->sc_iot;
	bus_space_handle_t ioh = sc->sc_ioh;

	bus_space_write_1(iot, ioh, 0, reg);
	return bus_space_read_1(iot, ioh, 1);
}
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock_isa.c,v 1.6 1997/01/24 19:57:24 niklas Exp $	*/
a49 1
#ifdef __BROKEN_INDIRECT_CONFIG
a50 3
#else
int	mcclock_isa_match(struct device *, struct cfdata *, void *);
#endif
a67 1
#ifdef __BROKEN_INDIRECT_CONFIG
a68 3
#else
	struct cfdata *match;
#endif
@


1.6
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock_isa.c,v 1.5 1996/12/08 00:20:27 niklas Exp $	*/
d51 1
a51 1
int	mcclock_isa_match __P((struct device *, void *, void *));
d53 1
a53 1
int	mcclock_isa_match __P((struct device *, struct cfdata *, void *));
d55 1
a55 1
void	mcclock_isa_attach __P((struct device *, struct device *, void *));
d62 2
a63 2
void	mcclock_isa_write __P((struct mcclock_softc *, u_int, u_int));
u_int	mcclock_isa_read __P((struct mcclock_softc *, u_int));
@


1.6.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock_isa.c,v 1.6 1997/01/24 19:57:24 niklas Exp $	*/
d51 1
a51 1
int	mcclock_isa_match(struct device *, void *, void *);
d53 1
a53 1
int	mcclock_isa_match(struct device *, struct cfdata *, void *);
d55 1
a55 1
void	mcclock_isa_attach(struct device *, struct device *, void *);
d62 2
a63 2
void	mcclock_isa_write(struct mcclock_softc *, u_int, u_int);
u_int	mcclock_isa_read(struct mcclock_softc *, u_int);
@


1.6.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d51 1
a51 1
int	mcclock_isa_match(struct device *, void *, void *);
d53 1
a53 1
int	mcclock_isa_match(struct device *, struct cfdata *, void *);
d55 1
a55 1
void	mcclock_isa_attach(struct device *, struct device *, void *);
d62 2
a63 2
void	mcclock_isa_write(struct mcclock_softc *, u_int, u_int);
u_int	mcclock_isa_read(struct mcclock_softc *, u_int);
@


1.5
log
@Merge to NetBSD 961107, i.e. mostly new bus.h
@
text
@d1 2
a2 2
/*	$OpenBSD: mcclock_isa.c,v 1.4 1996/11/12 20:29:31 niklas Exp $	*/
/*	$NetBSD: mcclock_isa.c,v 1.3 1996/10/23 04:12:19 cgd Exp $	*/
d50 1
d52 3
d72 6
a77 1
	void *match, *aux;
d80 1
d82 7
a88 1
	if (ia->ia_iobase != 0x70 && ia->ia_iobase != -1)
d91 4
a94 3
	ia->ia_iobase = 0x70;		/* XXX */
	ia->ia_iosize = 2;		/* XXX */
	ia->ia_msize = 0;
@


1.4
log
@s/bus.h/bus.old.h/ to make the transit to the bus_space bus.h an easy road
possibly taken in small steps
@
text
@d1 2
a2 2
/*	$OpenBSD: mcclock_isa.c,v 1.3 1996/10/30 22:39:39 niklas Exp $	*/
/*	$NetBSD: mcclock_isa.c,v 1.2 1996/04/17 22:22:46 cgd Exp $	*/
d36 1
a36 1
#include <machine/bus.old.h>
d46 2
a47 2
	bus_chipset_tag_t	sc_bc;
	bus_io_handle_t		sc_ioh;
d90 3
a92 2
	sc->sc_bc = ia->ia_bc;
	if (bus_io_map(sc->sc_bc, ia->ia_iobase, ia->ia_iosize, &sc->sc_ioh))
d104 2
a105 2
	bus_chipset_tag_t bc = sc->sc_bc;
	bus_io_handle_t ioh = sc->sc_ioh;
d107 2
a108 2
	bus_io_write_1(bc, ioh, 0, reg);
	bus_io_write_1(bc, ioh, 1, datum);
d117 2
a118 2
	bus_chipset_tag_t bc = sc->sc_bc;
	bus_io_handle_t ioh = sc->sc_ioh;
d120 2
a121 2
	bus_io_write_1(bc, ioh, 0, reg);
	return bus_io_read_1(bc, ioh, 1);
@


1.3
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock_isa.c,v 1.2 1996/04/17 22:22:46 cgd Exp $	*/
d36 1
a36 1
#include <machine/bus.h>
@


1.2
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@@


1.1
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@
