head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.86
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.84
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.80
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.82
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.74
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.78
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.76
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.72
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.70
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.68
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.66
	OPENBSD_5_0:1.4.0.64
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.62
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.60
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.56
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.58
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.54
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.52
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.50
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.48
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.46
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.44
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.42
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.40
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.38
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.36
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.34
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.32
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.30
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.28
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.26
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.24
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	96.10.30.22.40.34;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.23.01.25;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.18.09.45.01;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.03.53.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@/*	$OpenBSD: prom_disp.S,v 1.5 1996/10/17 02:50:39 cgd Exp $	*/
/*	$NetBSD: prom_disp.S,v 1.5 1996/10/17 02:50:39 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef _LOCORE
#include "include/asm.h"
#include "include/prom.h"
#include "include/rpb.h"
#endif

	.globl	prom_dispatch_v
	.comm	prom_dispatch_v,16

	.text
	.align	4

/*
 * Dispatcher routine.  Implements prom's calling machinery, saves our
 * callee-saved registers as required by C.
 */
#define	D_RA			 (7*8)
#define	D_S0			 (8*8)
#define	D_S1			 (9*8)
#define	D_S2			(10*8)
#define	D_S3			(11*8)
#define	D_S4			(12*8)
#define	D_S5			(13*8)
#define	D_S6			(14*8)
#define	DISPATCH_FRAME_SIZE	(15*8)
#define	DISPATCH_REGS		IM_RA|IM_S0|IM_S1|IM_S2|IM_S3|IM_S4|IM_S5|IM_S6

NESTED(prom_dispatch, 5, DISPATCH_FRAME_SIZE, ra, DISPATCH_REGS, 0)
	LDGP(pv)

	lda	sp, -DISPATCH_FRAME_SIZE(sp)
	stq	ra, D_RA(sp)
	stq	s0, D_S0(sp)
	stq	s1, D_S1(sp)
	stq	s2, D_S2(sp)
	stq	s3, D_S3(sp)
	stq	s4, D_S4(sp)
	stq	s5, D_S5(sp)
	stq	s6, D_S6(sp)

	/* Lord have mercy because.. I would not. */
/* #define	STUPID_PROM_IS_32_BITS */
#ifdef	STUPID_PROM_IS_32_BITS
	ldah	s0, 0x2000(zero)	/* hack for hack */
	lda	s0, (0x2000-8)(s0)

	stq	sp, 0(s0)
	or	s0, zero, sp
#endif	/* STUPID_PROM_IS_32_BITS */

	lda	pv, prom_dispatch_v
	ldq	v0, 0(pv)		/* routine */
	ldq	pv, 8(pv)		/* routine_arg */
	
	jsr	ra, (v0)

#ifdef	STUPID_PROM_IS_32_BITS
	ldah	s0, 0x2000(zero)	/* hack for hack */
	lda	s0, (0x2000-8)(s0)

	ldq	sp, 0(s0)
#endif	/* STUPID_PROM_IS_32_BITS */

	ldq	ra, D_RA(sp)
	ldq	s0, D_S0(sp)
	ldq	s1, D_S1(sp)
	ldq	s2, D_S2(sp)
	ldq	s3, D_S3(sp)
	ldq	s4, D_S4(sp)
	ldq	s5, D_S5(sp)
	ldq	s6, D_S6(sp)
	lda	sp, DISPATCH_FRAME_SIZE(sp)
	RET
END(prom_dispatch)

#undef	D_RA			
#undef	D_S0			
#undef	D_S1			
#undef	D_S2			
#undef	D_S3			
#undef	D_S4			
#undef	D_S5			
#undef	D_S6			
#undef	DISPATCH_FRAME_SIZE
#undef	DISPATCH_REGS
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: prom_disp.S,v 1.3 1996/04/12 06:09:38 cgd Exp $	*/
/*	$NetBSD: prom_disp.S,v 1.3 1996/04/12 06:09:38 cgd Exp $	*/
d38 1
a38 1
	.comm	prom_dispatch_v	16
d59 1
a59 1
	SETGP(pv)
@


1.2
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.1
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: prom_disp.S,v 1.1 1995/11/23 02:39:10 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
d30 1
a30 1
#ifndef LOCORE
@
