head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.12
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.8
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.10
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.24
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.22
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.20
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.18
	OPENBSD_5_0:1.9.0.16
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.14
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.12
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.8
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.10
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.6
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.4
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.20
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.18
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.16
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.14
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.12
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.10
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.6
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.10
date	2013.10.15.05.17.31;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.29.13.02.31;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.10.16.58.42;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.15.12.07.35;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.14.13.47.47;	author art;	state Exp;
branches;
next	1.5;

1.5
date	96.11.27.19.54.47;	author niklas;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	96.10.30.22.40.30;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.23.01.20;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.18.09.45.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.03.53.48;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.04.18.16.01.40;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@this does not need sys/exec_ecoff.h
(bit suprising)
@
text
@/*	$OpenBSD: headersize.c,v 1.9 2008/01/29 13:02:31 krw Exp $	*/
/*	$NetBSD: headersize.c,v 1.5 1996/09/23 04:32:59 cgd Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#define	ELFSIZE		64

#include <sys/types.h>
#include <sys/fcntl.h>
#include <sys/exec.h>
#include <sys/exec_elf.h>

#include <unistd.h>
#include <stdio.h>
#include <err.h>

#define	HDR_BUFSIZE	512

int
main(argc, argv)
	int argc;
	char *argv[];
{
	char buf[HDR_BUFSIZE], *fname;
#ifdef ALPHA_BOOT_ELF
	Elf64_Ehdr *elfp;
#endif
	int fd;
	unsigned long loadaddr;

	if (argc != 3)
		errx(1, "must be given two arguments (load addr, file name)");
	if (sscanf(argv[1], "%lx", &loadaddr) != 1)
		errx(1, "load addr argument (%s) not valid", argv[1]);
	fname = argv[2];

	if ((fd = open(fname, O_RDONLY, 0)) == -1)
		err(1, "%s: open failed", fname);

	if (read(fd, &buf, HDR_BUFSIZE) != HDR_BUFSIZE)
		err(1, "%s: read failed", fname);
#ifdef ALPHA_BOOT_ELF
	elfp = (Elf64_Ehdr *)buf;
#endif

#ifdef ALPHA_BOOT_ELF
	if (memcmp(ELFMAG, elfp->e_ident, SELFMAG) == 0) {
		Elf64_Phdr phdr;

		/* XXX assume the first segment is the one we want */
		if (lseek(fd, elfp->e_phoff, SEEK_SET) == -1)
			err(1, "%s: lseek phdr failed", fname);
		if (read(fd, (void *)&phdr, sizeof(phdr)) != sizeof(phdr))
			err(1, "%s: read phdr failed", fname);

		printf("%ld\n", phdr.p_offset + (loadaddr - phdr.p_vaddr));
	}
	else
#endif
		errx(1, "%s: bad magic number", fname);

	close(fd);
	exit(0);
}
@


1.9
log
@More read/write result checking fixes to avoid unsigned comparisons vs
-1.

ok henning@@ beck@@ ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.8 2005/08/10 16:58:42 todd Exp $	*/
a35 1
#include <sys/exec_ecoff.h>
@


1.8
log
@suggested by art, go for it deraadt, ok miod@@
remove ECOFF support
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.7 2001/01/15 12:07:35 art Exp $	*/
d66 1
a66 1
	if (read(fd, &buf, HDR_BUFSIZE) < HDR_BUFSIZE)
@


1.7
log
@Some ECOFF ifdefs and various fixes.
From d@@
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.6 2000/12/14 13:47:47 art Exp $	*/
a50 3
#ifdef ALPHA_BOOT_ECOFF
	struct ecoff_exechdr *ecoffp;
#endif
a67 3
#ifdef ALPHA_BOOT_ECOFF
	ecoffp = (struct ecoff_exechdr *)buf;
#endif
a71 6
#ifdef ALPHA_BOOT_ECOFF
	if (!ECOFF_BADMAG(ecoffp)) {
		printf("%ld\n", ECOFF_TXTOFF(ecoffp));
	}
	else
#endif
@


1.6
log
@First shot at making ELF compile.
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.5 1996/11/27 19:54:47 niklas Exp $	*/
d41 1
d51 1
d53 1
d67 1
a67 1
		err(1, "%s: open failed", 0);
d71 1
d73 1
d78 1
d80 1
a80 1
		printf("%d\n", ECOFF_TXTOFF(ecoffp));
d82 2
d85 1
a85 1
	else if (memcmp(ELFMAG, elfp->e_ident, SELFMAG) == 0) {
d94 1
a94 1
		printf("%d\n", phdr.p_offset + (loadaddr - phdr.p_vaddr));
d96 1
a97 1
	else
d101 1
@


1.5
log
@Make compilable in our env.  Involved disabling ELF support,
reordering includes (due to -Wstrict-prototypes) and other -Wall goo
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.4 1996/10/30 22:40:30 niklas Exp $	*/
d52 1
a52 1
	Elf_Ehdr *elfp;
d70 1
a70 1
	elfp = (Elf_Ehdr *)buf;
d77 2
a78 2
	else if (memcmp(Elf_e_ident, elfp->e_ident, Elf_e_siz) == 0) {
		Elf_Phdr phdr;
@


1.5.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.7 2001/01/15 12:07:35 art Exp $	*/
a40 1
#include <err.h>
a49 1
#ifdef ALPHA_BOOT_ECOFF
a50 1
#endif
d52 1
a52 1
	Elf64_Ehdr *elfp;
d64 1
a64 1
		err(1, "%s: open failed", fname);
a67 1
#ifdef ALPHA_BOOT_ECOFF
a68 1
#endif
d70 1
a70 1
	elfp = (Elf64_Ehdr *)buf;
a72 1
#ifdef ALPHA_BOOT_ECOFF
d74 1
a74 1
		printf("%ld\n", ECOFF_TXTOFF(ecoffp));
a75 2
	else
#endif
d77 2
a78 2
	if (memcmp(ELFMAG, elfp->e_ident, SELFMAG) == 0) {
		Elf64_Phdr phdr;
d86 1
a86 1
		printf("%ld\n", phdr.p_offset + (loadaddr - phdr.p_vaddr));
d88 1
a89 1
#endif
a92 1
	exit(0);
@


1.4
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: headersize.c,v 1.5 1996/09/23 04:32:59 cgd Exp $	*/
d51 1
d53 1
d69 1
d71 1
d75 3
a77 1
	} else if (memcmp(Elf_e_ident, elfp->e_ident, Elf_e_siz) == 0) {
d87 3
a89 1
	} else
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: headersize.c,v 1.3.4.1 1996/06/13 18:35:33 cgd Exp $	*/
/*	$NetBSD: headersize.c,v 1.3.4.1 1996/06/13 18:35:33 cgd Exp $	*/
d31 2
d34 1
d37 4
d44 4
a47 1
main()
d49 34
a82 8
	char buf[HDR_BUFSIZE];
	struct ecoff_exechdr *execp;

	if (read(0, &buf, HDR_BUFSIZE) < HDR_BUFSIZE) {
		perror("read");
		exit(1);
	}
	execp = (struct ecoff_exechdr *)buf;
d84 1
a84 1
	printf("%d\n", ECOFF_TXTOFF(execp));
@


1.2
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.1
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: headersize.c,v 1.1 1995/11/23 02:38:59 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1995 Carnegie-Mellon University.
d32 1
a32 1
#include <machine/coff.h>
d39 1
d45 1
d47 1
a47 2
	printf("%d\n", N_COFFTXTOFF(*((struct filehdr *)buf),
	    *((struct aouthdr *)(buf + sizeof(struct filehdr)))) );
@
