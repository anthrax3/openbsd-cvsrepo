head	1.17;
access;
symbols
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.10
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.8
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.32
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.30
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.26
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.28
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.24
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.22
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.20
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.18
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.10
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.8
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.6
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.10.0.4
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.12
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.10
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.8
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.6
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.4
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.10.01.16.08.19;	author krw;	state Exp;
branches;
next	1.16;
commitid	43YBo4Ce0DxgFS6N;

1.16
date	2015.07.17.16.13.26;	author miod;	state Exp;
branches;
next	1.15;
commitid	IG60DdKPWzdWVOMv;

1.15
date	2014.07.12.21.03.38;	author tedu;	state Exp;
branches;
next	1.14;
commitid	BPzam5MbotE66TAj;

1.14
date	2014.07.12.18.44.41;	author tedu;	state Exp;
branches;
next	1.13;
commitid	uKVPYMN2MLxdZxzH;

1.13
date	2013.11.12.01.37.40;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2011.03.13.00.13.52;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.27.44;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.16.01.34.32;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.25.03.50.46;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	98.09.04.16.59.06;	author millert;	state Exp;
branches
	1.8.8.1;
next	1.7;

1.7
date	97.05.05.06.01.52;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.04.07.06.23.10;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.11.27.19.54.52;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.10.30.22.40.42;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.23.01.38;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.53.59;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.46;	author deraadt;	state Exp;
branches;
next	;

1.8.8.1
date	2001.04.18.16.01.42;	author niklas;	state Exp;
branches;
next	1.8.8.2;

1.8.8.2
date	2001.10.31.02.52.45;	author nate;	state Exp;
branches;
next	1.8.8.3;

1.8.8.3
date	2003.06.07.11.11.33;	author ho;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Remove more blinding trailing whitespace.
@
text
@/*	$OpenBSD: disk.c,v 1.16 2015/07/17 16:13:26 miod Exp $	*/
/*	$NetBSD: disk.c,v 1.6 1997/04/06 08:40:33 cgd Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Van Jacobson of Lawrence Berkeley Laboratory and Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)rz.c	8.1 (Berkeley) 6/10/93
 */

#include <lib/libsa/stand.h>

#include <sys/param.h>
#include <sys/disklabel.h>

#include <machine/rpb.h>
#include <machine/prom.h>

#include "disk.h"

struct	disk_softc {
	int	sc_fd;			/* PROM channel number */
	int	sc_ctlr;		/* controller number */
	int	sc_unit;		/* disk unit number */
	int	sc_part;		/* disk partition number */
	struct	disklabel sc_label;	/* disk label for this disk */
};

int
diskstrategy(void *devdata, int rw, daddr32_t bn, size_t reqcnt, void *addrvoid,
    size_t *cnt)
{
	char *addr = addrvoid;
	struct disk_softc *sc;
	struct partition *pp;
	prom_return_t ret;
	int s;

	if ((reqcnt & 0xffffff) != reqcnt ||
	    reqcnt == 0)
		asm("call_pal 0");

	twiddle();

	/* Partial-block transfers not handled. */
	if (reqcnt & (DEV_BSIZE - 1)) {
		*cnt = 0;
		return (EINVAL);
	}

	sc = (struct disk_softc *)devdata;
	pp = &sc->sc_label.d_partitions[sc->sc_part];

	ret.bits = prom_read(sc->sc_fd, reqcnt, addr, bn + pp->p_offset);
	if (ret.u.status)
		return (EIO);
	*cnt = ret.u.retval;
	return (0);
}

int
diskopen(struct open_file *f, int ctlr, int unit, int part)
{
	struct disklabel *lp;
	prom_return_t ret;
	size_t cnt;
	int devlen, i;
	char *msg, buf[DEV_BSIZE], devname[32];
	struct disk_softc *sc;

	if (unit >= 16 || part >= MAXPARTITIONS)
		return (ENXIO);
	/*
	 * XXX
	 * We don't know what device names look like yet,
	 * so we can't change them.
	 */
	ret.bits = prom_getenv(PROM_E_BOOTED_DEV, devname, sizeof(devname));
	devlen = ret.u.retval;

	ret.bits = prom_open(devname, devlen);
	if (ret.u.status == 2)
		return (ENXIO);
	if (ret.u.status == 3)
		return (EIO);

	sc = alloc(sizeof(struct disk_softc));
	bzero(sc, sizeof(struct disk_softc));
	f->f_devdata = (void *)sc;

	sc->sc_fd = ret.u.retval;
	sc->sc_ctlr = ctlr;
	sc->sc_unit = unit;
	sc->sc_part = part;

	/* Try to read disk label and partition table information. */
	lp = &sc->sc_label;
	lp->d_secsize = DEV_BSIZE;
	lp->d_secpercyl = 1;
	lp->d_npartitions = MAXPARTITIONS;
	DL_SETPOFFSET(&lp->d_partitions[part], 0);
	DL_SETPSIZE(&lp->d_partitions[part], 0x7fffffff);
	i = diskstrategy(sc, F_READ,
	    (daddr32_t)LABELSECTOR, DEV_BSIZE, buf, &cnt);
	if (i || cnt != DEV_BSIZE) {
		printf("disk%d: error reading disk label\n", unit);
		goto bad;
	} else if (((struct disklabel *)(buf + LABELOFFSET))->d_magic !=
		    DISKMAGIC) {
		/* No label at all.  Fake all partitions as whole disk. */
		for (i = 0; i < MAXPARTITIONS; i++) {
			DL_SETPOFFSET(&lp->d_partitions[part], 0);
			DL_SETPSIZE(&lp->d_partitions[part], 0x7fffffff);
		}
	} else {
		msg = getdisklabel(buf + LABELOFFSET, lp);
		if (msg) {
			printf("disk%d: %s\n", unit, msg);
			goto bad;
		}
	}

	if (part >= lp->d_npartitions ||
	    DL_GETPSIZE(&lp->d_partitions[part]) == 0) {
bad:		free(sc, sizeof(struct disk_softc));
		return (ENXIO);
	}
	return (0);
}

int
diskclose(struct open_file *f)
{
	struct disk_softc *sc;

	sc = f->f_devdata;
	(void)prom_close(sc->sc_fd);

	free(sc, sizeof(struct disk_softc));
	f->f_devdata = NULL;
	return (0);
}
@


1.16
log
@Proper prototypes and return values.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.15 2014/07/12 21:03:38 tedu Exp $	*/
d69 1
a69 1
	    
d100 1
a100 1
	/* 
@


1.15
log
@revert a few stragglers hiding out
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.14 2014/07/12 18:44:41 tedu Exp $	*/
d57 2
a58 7
diskstrategy(devdata, rw, bn, reqcnt, addrvoid, cnt)
	void *devdata;
	int rw;
	daddr32_t bn;
	size_t reqcnt;
	void *addrvoid;
	size_t *cnt;	/* out: number of bytes transferred */
d89 1
a89 3
diskopen(f, ctlr, unit, part)
	struct open_file *f;
	int ctlr, unit, part;
d158 2
a159 2
diskclose(f)
	struct open_file *f;
@


1.14
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.13 2013/11/12 01:37:40 krw Exp $	*/
d159 1
a159 1
bad:		free(sc, sizeof(struct disk_softc), 0);
d173 1
a173 1
	free(sc, sizeof(struct disk_softc), 0);
@


1.13
log
@Use DL_[GET|SET]POFFSET() and DL_[GET|SET]PSIZE() to get and set
partition offsets and sizes.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.12 2011/03/13 00:13:52 deraadt Exp $	*/
d159 1
a159 1
bad:		free(sc, sizeof(struct disk_softc));
d173 1
a173 1
	free(sc, sizeof(struct disk_softc));
@


1.12
log
@Change daddr_t to daddr32_t.  The bootblocks on our architectures only
do 32-bit block spanning.  If later on we get some that can/should do
64-bit, that can be done now using daddr64_t (but of course, we are taking
this step to finalize the daddr_t 64-bit conversion).
ok miod krw
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.11 2003/06/02 23:27:44 millert Exp $	*/
d135 2
a136 2
	lp->d_partitions[part].p_offset = 0;
	lp->d_partitions[part].p_size = 0x7fffffff;
d146 2
a147 2
			lp->d_partitions[part].p_offset = 0;
			lp->d_partitions[part].p_size = 0x7fffffff;
d157 2
a158 1
	if (part >= lp->d_npartitions || lp->d_partitions[part].p_size == 0) {
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.10 2001/09/16 01:34:32 art Exp $	*/
d60 1
a60 1
	daddr_t bn;
d138 1
a138 1
	    (daddr_t)LABELSECTOR, DEV_BSIZE, buf, &cnt);
@


1.10
log
@Fix this so it understands disklabels.
Fix from janjaap@@stack.nl. PR 1775
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.9 2001/01/25 03:50:46 todd Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@spelling
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.7 1997/05/05 06:01:52 millert Exp $	*/
d146 2
a147 1
	} else if (lp->d_magic != DISKMAGIC) {
d154 1
a154 1
		msg = getdisklabel(buf, lp);
@


1.8
log
@unit numbers should be < 16, not < 8 since we can have wide drives
@
text
@d67 1
a67 1
	size_t *cnt;	/* out: number of bytes transfered */
@


1.8.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.9 2001/01/25 03:50:46 todd Exp $	*/
d67 1
a67 1
	size_t *cnt;	/* out: number of bytes transferred */
@


1.8.8.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.8.8.1 2001/04/18 16:01:42 niklas Exp $	*/
d146 1
a146 2
	} else if (((struct disklabel *)(buf + LABELOFFSET))->d_magic !=
		    DISKMAGIC) {
d153 1
a153 1
		msg = getdisklabel(buf + LABELOFFSET, lp);
@


1.8.8.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.8.8.2 2001/10/31 02:52:45 nate Exp $	*/
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.7
log
@Updates from NetBSD (cgd):
 - seriously clean up makefiles.  use libsa/libkern/libz as appropriate,
   and don't build the various sources into objs locally by specifying
   them directly in the Makefiles.
 - move the secondary bootstrap down (to 0x20004000), and add a HEAP_LIMIT
   so that we don't exhaust our bootstrap address space (when using the new,
   not yet checked in, memory allocator).
 - clean up installboot, deal with secondary bootstrap programs not on
   'a' partition or 'a' partition not starting at 0.
 - add padding to structures in bbinfo.h for future expansion.  Add a
   netbbinfo structure to allow netboot information to be hard-coded in
   network boot blocks, so that they can be made to work even on systems
   with firmware which doesn't support the new "ethernet address in boot
   device" convention.
 - move the sync() calls to the correct place in installboot.c
 - remove a kludge in disk.c which was breaking multiple opens/closes
   of the disk
 - allow netboot ethernet address to be hard-coded into binary so that
   machines with old firmware which doesn't pass it in the boot device
   can work.  Assume that if the ethernet address isn't passed in, it
   uses the old (dain-bramaged) 'read' interface works on my 3000/300LX.
 - Add setnetbootinfo, a program to hard code an ethernet address into
   a network boot.
 - move an 'int debug;' into boot.c (it was the only diff between boot.c and
   netboot.c), and nuke netboot.c (using boot.c instead for net boot blocks).
 - add cd9660 file system ops to the file system ops table in filesystem.c
 - if a file name is given (i.e. BOOTED_FILE) is set, boot only that file,
   but if not then try to boot "bsd", "bsd.bak", "bsd.old", and
   "obsd" (in that order) until one is found or until the list of names
   is exhausted.
 - add support for reading gzipped kernels.
 - use strerror() to print errors, rather than just printing error numbers
 - if no disk label exists, fake one up
 - slightly relax the block size checks in bootxx.c; they were a bit to paranoid

And local changes:
 - don't build a copy of libsa/libkern/libz for each boot prog,
   just build a single copy and use it for everything.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.6 1997/04/07 06:23:10 millert Exp $	*/
d109 1
a109 1
	if (unit >= 8 || part >= MAXPARTITIONS)
@


1.6
log
@Use MAXPARTITIONS not ``8''
@
text
@d1 2
a2 2
/*	$OpenBSD: disk.c,v 1.5 1996/11/27 19:54:52 niklas Exp $	*/
/*	$NetBSD: disk.c,v 1.3 1995/11/23 02:39:40 cgd Exp $	*/
d107 1
a107 6
	static struct disk_softc *sc;

	if (sc != NULL) {
		f->f_devdata = (void *)sc;
		return 0;
	}
d146 6
@


1.5
log
@Make compilable in our env.  Involved disabling ELF support,
reordering includes (due to -Wstrict-prototypes) and other -Wall goo
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.4 1996/10/30 22:40:42 niklas Exp $	*/
d109 4
a112 4
if (sc != NULL) {
	f->f_devdata = (void *)sc;
	return 0;
}
d114 1
a114 1
	if (unit >= 8 || part >= 8)
@


1.4
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: disk.c,v 1.3 1995/11/23 02:39:40 cgd Exp $	*/
d47 1
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@@


1.2
log
@update to netbsd
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: disk.c,v 1.2 1995/02/16 02:32:55 cgd Exp $	*/
d48 2
d59 1
a59 1
diskstrategy(devdata, rw, bn, reqcnt, addr, cnt)
d63 3
a65 3
	u_int reqcnt;
	char *addr;
	u_int *cnt;	/* out: number of bytes transfered */
d67 1
d73 4
d102 2
a103 1
	int cnt, devlen, i;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
