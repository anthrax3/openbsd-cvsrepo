head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.54
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.50
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.46
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.48
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.40
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.44
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.42
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.38
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.36
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.34
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.32
	OPENBSD_5_0:1.10.0.30
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.28
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.26
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.22
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.24
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.20
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.18
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.16
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.14
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.12
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.10
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.8
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.6
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.4
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.10
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.8
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.20
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.18
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.16
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.14
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.10
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.8
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.10
date	2004.07.05.19.59.17;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.27;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.03.06.05.17.19;	author millert;	state Exp;
branches
	1.8.10.1
	1.8.20.1;
next	1.7;

1.7
date	97.05.05.06.01.46;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.11.27.19.54.47;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.30.22.40.29;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.31.10.38.46;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.23.01.19;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.18.09.44.59;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.03.53.47;	author deraadt;	state Exp;
branches;
next	;

1.8.10.1
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	;

1.8.20.1
date	2002.06.11.03.33.40;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@remove some stuff to make the blocks slightly smaller.  we could go further
still.  tested by matthieu
@
text
@/*	$OpenBSD: bootxx.c,v 1.9 2002/03/14 01:26:27 millert Exp $	*/
/*	$NetBSD: bootxx.c,v 1.4 1997/01/18 00:28:59 cgd Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <machine/rpb.h>
#include <machine/prom.h>

#include "bbinfo.h"

extern _end, start;

struct bbinfoloc desc = {
	0xbabefacedeadbeef,
	(u_int64_t)&start,
	(u_int64_t)&_end,
	{ 0, },
	0xdeadbeeffacebabe
};

int
open_dev(fd)
	int *fd;
{
	prom_return_t ret;
	char devname[64];
	int devlen;

	/*
	 * XXX
         * We don't know what device names look like yet,
         * so we can't change them.
         */
        ret.bits = prom_getenv(PROM_E_BOOTED_DEV, devname, sizeof(devname));
        devlen = ret.u.retval;

        ret.bits = prom_open(devname, devlen);
        if (ret.u.status)
                return 0;

	*fd = ret.u.retval;

	return 1;
}

int
load_file(bbinfop, loadaddr)
	struct bbinfo *bbinfop;
	char *loadaddr;
{
	prom_return_t ret;
	int32_t cksum, *int32p;
	int i, n, fd, rv;
	char *cp;

	if (bbinfop->nblocks <= 0) {
		puts("invalid number of blocks in boot program description\n");
		return 0;
	}
	if (bbinfop->bsize < DEV_BSIZE || bbinfop->bsize > MAXBSIZE) {
		puts("invalid block size in boot program description\n");
		return 0;
	}

	int32p = (int32_t *)&_end;
	n = bbinfop->nblocks +
	    (sizeof(*bbinfop) / sizeof(bbinfop->blocks[0])) - 1;
	if ((long)&_end - (long)&start + sizeof(bbinfop->blocks[0]) * n >
	    15 * 512) {
		puts("way too many blocks\n");
		return 0;
	}

	for (i = 0, cksum = 0; i < n; i++)
		cksum += *int32p++;
	if (cksum != 0) {
		puts("invalid checksum in boot program description\n");
		return 0;
	}

	if (!open_dev(&fd)) {
		puts("couldn't open disk device\n");
		return 0;
	}

	cp = loadaddr;
	rv = 1;
	for (i = 0; i < bbinfop->nblocks; i++) {
puts(".");
		ret.bits = prom_read(fd, bbinfop->bsize, cp,
		    bbinfop->blocks[i]);
puts("\b");
		if (ret.u.status) {
			rv = 0;
			puts("BLOCK READ ERROR!\n");
			break;
		}
		cp += bbinfop->bsize;
	}
	prom_close(fd);

	return (rv);
}

int
main()
{
	struct bbinfo *bbinfop;
	char *loadaddr;
	void (*entry)(void);

	/* Init prom callback vector. */
	init_prom_calls();

	puts("\nOpenBSD/Alpha Primary Boot\n");

	bbinfop = (struct bbinfo *)&_end;
	loadaddr = (char *)SECONDARY_LOAD_ADDRESS;
	if (!load_file(bbinfop, loadaddr)) {
		puts("\nLOAD FAILED!\n\n");
		return;
	}

#if 0
	puts("Jumping to entry point...\n");
#endif
	entry = (void (*)())loadaddr;
	(*entry)();
	puts("SECONDARY BOOT BLOCK RETURNED!\n");
}
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: bootxx.c,v 1.8 1998/03/06 05:17:19 millert Exp $	*/
d150 1
d152 1
@


1.8
log
@main returns int
@
text
@d1 1
a1 1
/*	$OpenBSD: bootxx.c,v 1.7 1997/05/05 06:01:46 millert Exp $	*/
d136 1
a136 1
	void (*entry) __P((void));
@


1.8.20.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bootxx.c,v 1.8 1998/03/06 05:17:19 millert Exp $	*/
d136 1
a136 1
	void (*entry)(void);
@


1.8.10.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d136 1
a136 1
	void (*entry)(void);
@


1.7
log
@Updates from NetBSD (cgd):
 - seriously clean up makefiles.  use libsa/libkern/libz as appropriate,
   and don't build the various sources into objs locally by specifying
   them directly in the Makefiles.
 - move the secondary bootstrap down (to 0x20004000), and add a HEAP_LIMIT
   so that we don't exhaust our bootstrap address space (when using the new,
   not yet checked in, memory allocator).
 - clean up installboot, deal with secondary bootstrap programs not on
   'a' partition or 'a' partition not starting at 0.
 - add padding to structures in bbinfo.h for future expansion.  Add a
   netbbinfo structure to allow netboot information to be hard-coded in
   network boot blocks, so that they can be made to work even on systems
   with firmware which doesn't support the new "ethernet address in boot
   device" convention.
 - move the sync() calls to the correct place in installboot.c
 - remove a kludge in disk.c which was breaking multiple opens/closes
   of the disk
 - allow netboot ethernet address to be hard-coded into binary so that
   machines with old firmware which doesn't pass it in the boot device
   can work.  Assume that if the ethernet address isn't passed in, it
   uses the old (dain-bramaged) 'read' interface works on my 3000/300LX.
 - Add setnetbootinfo, a program to hard code an ethernet address into
   a network boot.
 - move an 'int debug;' into boot.c (it was the only diff between boot.c and
   netboot.c), and nuke netboot.c (using boot.c instead for net boot blocks).
 - add cd9660 file system ops to the file system ops table in filesystem.c
 - if a file name is given (i.e. BOOTED_FILE) is set, boot only that file,
   but if not then try to boot "bsd", "bsd.bak", "bsd.old", and
   "obsd" (in that order) until one is found or until the list of names
   is exhausted.
 - add support for reading gzipped kernels.
 - use strerror() to print errors, rather than just printing error numbers
 - if no disk label exists, fake one up
 - slightly relax the block size checks in bootxx.c; they were a bit to paranoid

And local changes:
 - don't build a copy of libsa/libkern/libz for each boot prog,
   just build a single copy and use it for everything.
@
text
@d1 1
a1 1
/*	$OpenBSD: bootxx.c,v 1.6 1996/11/27 19:54:47 niklas Exp $	*/
d131 1
a131 1
void
@


1.6
log
@Make compilable in our env.  Involved disabling ELF support,
reordering includes (due to -Wstrict-prototypes) and other -Wall goo
@
text
@d1 2
a2 2
/*	$OpenBSD: bootxx.c,v 1.5 1996/10/30 22:40:29 niklas Exp $	*/
/*	$NetBSD: bootxx.c,v 1.3 1996/06/14 20:04:45 cgd Exp $	*/
d43 1
d86 1
a86 1
	if (bbinfop->bsize < 4096 || bbinfop->bsize > MAXBSIZE) {
@


1.5
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: bootxx.c,v 1.3 1996/06/14 20:04:45 cgd Exp $	*/
d32 1
@


1.4
log
@We are OpenBSD!
@
text
@d1 2
a2 2
/*	$OpenBSD: bootxx.c,v 1.3 1996/07/29 23:01:19 niklas Exp $	*/
/*	$NetBSD: bootxx.c,v 1.2 1996/04/12 06:09:36 cgd Exp $	*/
d139 1
a139 1
	puts("\nOpenBSD/Alpha primary boot...\n");
@


1.3
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 1
a1 1
/*	$OpenBSD: bootxx.c,v 1.2 1996/04/12 06:09:36 cgd Exp $	*/
d139 1
a139 1
	puts("\nNetBSD/Alpha primary boot...\n");
@


1.2
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.1
log
@update to netbsd
@
text
@d1 29
@

