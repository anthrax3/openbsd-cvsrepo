head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.14
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.10
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.6
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.8
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.14.0.8
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.10.0.12
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.10
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.8
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.6
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.15
date	2014.04.13.08.35.27;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2012.12.17.19.03.22;	author martynas;	state Exp;
branches;
next	1.13;

1.13
date	2012.11.08.12.14.08;	author otto;	state Exp;
branches;
next	1.12;

1.12
date	2011.06.05.21.49.36;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2010.05.14.21.08.28;	author naddy;	state Exp;
branches;
next	1.10;

1.10
date	2006.09.26.23.14.52;	author martin;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.30.02.03.48;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.13.21.03.36;	author marc;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.02.09.00.22;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.03.03.22.47;	author art;	state Exp;
branches
	1.6.6.1;
next	1.5;

1.5
date	2000.11.08.16.01.24;	author art;	state Exp;
branches;
next	1.4;

1.4
date	97.05.05.06.01.45;	author millert;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.10.30.22.40.27;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.07.29.23.01.14;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.03.53.45;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.04.18.16.01.39;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2003.03.27.23.18.06;	author niklas;	state Exp;
branches;
next	;

1.6.6.1
date	2003.05.19.21.38.53;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Clean up last bits of TCP_WRAPPERS and ELF_TOOLCHAIN.

ok miod@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.14 2012/12/17 19:03:22 martynas Exp $
#	$NetBSD: Makefile.inc,v 1.8 1997/04/06 08:39:38 cgd Exp $

BINDIR=			/usr/mdec

# For descriptions of regions available to bootstrap programs, see
# section 3.4.1.2 (pp. III 3-14 - III 3-18) of the second edition of
# the Alpha AXP Architecture Reference Manual.

# "Region 1 start"
PRIMARY_LOAD_ADDRESS=	20000000
# "Region 1 start" + 32k
SECONDARY_LOAD_ADDRESS=	20004000
# "Region 1 start" + 256k
HEAP_LIMIT=		20040000

CPPFLAGS+=		-DPRIMARY_LOAD_ADDRESS="0x${PRIMARY_LOAD_ADDRESS}"
CPPFLAGS+=		-DSECONDARY_LOAD_ADDRESS="0x${SECONDARY_LOAD_ADDRESS}"

CPPFLAGS+=		-D_STANDALONE

EXTRACFLAGS+=		-DHEAP_LIMIT="0x${HEAP_LIMIT}"

CFLAGS+=		-fno-stack-protector -fno-builtin-printf \
			-fno-builtin-vprintf -fno-builtin-putchar \
			-fno-builtin-puts -fno-builtin-exit
@


1.14
log
@Unbreak bootblocks on Alpha by fixing the primary load address.  A
typo crept in in rev. 1.13.  "yeah!  the as800 netboots" naddy@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2012/11/08 12:14:08 otto Exp $
a2 2

.include <bsd.own.mk>			# for ELF_TOOLCHAIN definition
@


1.13
log
@now that our make is more strict, fix ws issue; ok espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2011/06/05 21:49:36 miod Exp $
d13 1
a13 1
PRIMARY_LOAD_ADDRESS=	2000000
@


1.12
log
@Update alpha bootblocks to use MI loadfile code instead of rolling our own;
also print a meaningful message if the kernel load address conflicts with the
SRM memory areas, so that we can know which kernel load address to use.

Requires `make includes' before attempting to build bootblocks.

Tweaks mk@@, `nice' deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2010/05/14 21:08:28 naddy Exp $
d12 6
a17 3
PRIMARY_LOAD_ADDRESS=	20000000	# "Region 1 start"
SECONDARY_LOAD_ADDRESS=	20004000	# "Region 1 start" + 32k
HEAP_LIMIT=		20040000	# "Region 1 start" + 256k
@


1.11
log
@don't warn about libsa's exit(); pull in declaration for memcpy()
courtesy of gcc4; ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2006/09/26 23:14:52 martin Exp $
d21 1
a21 1
XCPPFLAGS+=		-DHEAP_LIMIT="0x${HEAP_LIMIT}"
@


1.10
log
@switch alpha to gcc3; joint work with drahn@@ and brad@@

ok drahn@@ brad@@ mickey@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2005/12/30 02:03:48 millert Exp $
d25 1
a25 1
			-fno-builtin-puts
@


1.9
log
@Now that errno.h and sys/errno.h are separate header files there is no
need to use the -Derrno=errno workaround added when __errno() was
introduced.  OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2004/07/13 21:03:36 marc Exp $
d23 3
a25 1
CFLAGS+=		-fno-stack-protector
@


1.8
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2002/12/02 09:00:22 miod Exp $
a19 1
CPPFLAGS+=		-Derrno=errno
@


1.7
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2001/02/03 03:22:47 art Exp $
d20 1
@


1.6
log
@Don't define ECOFF_COMPAT. We're ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2000/11/08 16:01:24 art Exp $
d23 1
@


1.6.6.1
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
a22 1
CFLAGS+=		-fno-stack-protector
@


1.5
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1997/05/05 06:01:45 millert Exp $
a22 3
.if !defined(ELF_TOOLCHAIN)
CPPFLAGS+=	-DECOFF_COMPAT
.endif
@


1.4
log
@Updates from NetBSD (cgd):
 - seriously clean up makefiles.  use libsa/libkern/libz as appropriate,
   and don't build the various sources into objs locally by specifying
   them directly in the Makefiles.
 - move the secondary bootstrap down (to 0x20004000), and add a HEAP_LIMIT
   so that we don't exhaust our bootstrap address space (when using the new,
   not yet checked in, memory allocator).
 - clean up installboot, deal with secondary bootstrap programs not on
   'a' partition or 'a' partition not starting at 0.
 - add padding to structures in bbinfo.h for future expansion.  Add a
   netbbinfo structure to allow netboot information to be hard-coded in
   network boot blocks, so that they can be made to work even on systems
   with firmware which doesn't support the new "ethernet address in boot
   device" convention.
 - move the sync() calls to the correct place in installboot.c
 - remove a kludge in disk.c which was breaking multiple opens/closes
   of the disk
 - allow netboot ethernet address to be hard-coded into binary so that
   machines with old firmware which doesn't pass it in the boot device
   can work.  Assume that if the ethernet address isn't passed in, it
   uses the old (dain-bramaged) 'read' interface works on my 3000/300LX.
 - Add setnetbootinfo, a program to hard code an ethernet address into
   a network boot.
 - move an 'int debug;' into boot.c (it was the only diff between boot.c and
   netboot.c), and nuke netboot.c (using boot.c instead for net boot blocks).
 - add cd9660 file system ops to the file system ops table in filesystem.c
 - if a file name is given (i.e. BOOTED_FILE) is set, boot only that file,
   but if not then try to boot "bsd", "bsd.bak", "bsd.old", and
   "obsd" (in that order) until one is found or until the list of names
   is exhausted.
 - add support for reading gzipped kernels.
 - use strerror() to print errors, rather than just printing error numbers
 - if no disk label exists, fake one up
 - slightly relax the block size checks in bootxx.c; they were a bit to paranoid

And local changes:
 - don't build a copy of libsa/libkern/libz for each boot prog,
   just build a single copy and use it for everything.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1996/10/30 22:40:27 niklas Exp $
d18 2
@


1.4.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2001/02/03 03:22:47 art Exp $
a18 2
CPPFLAGS+=		-D_STANDALONE

d21 3
@


1.4.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
a22 1
CFLAGS+=		-fno-stack-protector
@


1.3
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile.inc,v 1.3 1996/10/06 18:32:22 cgd Exp $
#	$NetBSD: Makefile.inc,v 1.3 1996/10/06 18:32:22 cgd Exp $
d8 7
a14 2
PRIMARY_LOAD_ADDRESS=	20000000
SECONDARY_LOAD_ADDRESS=	20020000
d19 2
a23 1

@


1.2
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 4
a4 2
#	$OpenBSD: Makefile.inc,v 1.1 1995/11/23 02:38:48 cgd Exp $
#	$NetBSD: Makefile.inc,v 1.1 1995/11/23 02:38:48 cgd Exp $
d13 5
@


1.1
log
@update to netbsd
@
text
@d1 1
@
