head	1.14;
access;
symbols
	OPENBSD_6_0:1.14.0.14
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.12
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.10
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.8
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.9
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.14
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2013.03.09.02.10.47;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.02.18.01.47;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.26.05.42.08;	author ray;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.16.21.22.27;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.28.17.19.14;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.30.16.24.37;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.25.21.33.19;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.26;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.24.19.45.03;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.23.03.20.41;	author ericj;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.22.21.48.43;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.08.19.16.58;	author ericj;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2000.11.08.16.00.56;	author art;	state Exp;
branches;
next	1.1;

1.1
date	97.01.24.19.56.21;	author niklas;	state Exp;
branches
	1.1.14.1;
next	;

1.1.14.1
date	2001.04.18.16.00.10;	author niklas;	state Exp;
branches;
next	1.1.14.2;

1.1.14.2
date	2002.03.06.00.24.08;	author niklas;	state Exp;
branches;
next	1.1.14.3;

1.1.14.3
date	2002.03.28.10.06.12;	author niklas;	state Exp;
branches;
next	1.1.14.4;

1.1.14.4
date	2003.03.27.22.29.47;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.01.31.22.55.04;	author niklas;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2002.06.11.03.33.39;	author art;	state Exp;
branches;
next	1.3.6.3;

1.3.6.3
date	2002.10.29.00.28.00;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@First steps towards alphabook1 support; from netbsd
miod did not disagree.
@
text
@/* $OpenBSD: cpuconf.c,v 1.13 2009/10/02 18:01:47 miod Exp $ */
/* $NetBSD: cpuconf.c,v 1.27 2000/06/26 02:42:04 enami Exp $ */

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1996 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/systm.h>
#include <machine/cpuconf.h>
#include <machine/rpb.h>

#ifdef DEC_3000_500
extern void dec_3000_500_init(void);
#else
#define	dec_3000_500_init	platform_not_configured
#endif

#ifdef DEC_3000_300
extern void dec_3000_300_init(void);
#else
#define	dec_3000_300_init	platform_not_configured
#endif

#ifdef DEC_AXPPCI_33
extern void dec_axppci_33_init(void);
#else
#define	dec_axppci_33_init	platform_not_configured
#endif

#ifdef DEC_2100_A50
extern void dec_2100_a50_init(void);
#else
#define	dec_2100_a50_init	platform_not_configured
#endif

#ifdef DEC_KN20AA
extern void dec_kn20aa_init(void);
#else
#define	dec_kn20aa_init		platform_not_configured
#endif

#ifdef DEC_EB164
extern void dec_eb164_init(void);
#else
#define	dec_eb164_init		platform_not_configured
#endif

#ifdef DEC_EB64PLUS
extern void dec_eb64plus_init(void);
#else
#define dec_eb64plus_init	platform_not_configured
#endif

#ifdef	DEC_KN300
extern void dec_kn300_init(void);
#else
#define	dec_kn300_init		platform_not_configured
#endif

#ifdef DEC_550
extern void dec_550_init(void);
#else
#define	dec_550_init		platform_not_configured
#endif

#if defined(DEC_1000) || defined(DEC_1000A)
extern void _dec_1000a_init(void);
#endif
#ifdef DEC_1000A
#define	dec_1000a_init		_dec_1000a_init
#else
#define	dec_1000a_init		platform_not_configured
#endif
#ifdef DEC_1000
#define	dec_1000_init		_dec_1000a_init
#else
#define	dec_1000_init		platform_not_configured
#endif

#ifdef DEC_6600
extern void dec_6600_init(void);
#else
#define	dec_6600_init		platform_not_configured
#endif

#ifdef DEC_ALPHABOOK1
extern void dec_alphabook1_init(void);
#else
#define	dec_alphabook1_init	platform_not_configured
#endif

#ifdef API_UP1000
extern void api_up1000_init(void);
#else
#define	api_up1000_init		platform_not_configured
#endif

static const struct cpuinit cpuinit[] = {
	cpu_notsupp(ST_ADU, "Alpha Demo Unit"),
	cpu_notsupp(ST_DEC_4000, "DEC 4000 (``Cobra'')"),
	cpu_notsupp(ST_DEC_7000, "DEC 7000 (``Ruby'')"),
	cpu_init(ST_DEC_3000_500, dec_3000_500_init, "DEC_3000_500"),
	cpu_notsupp(ST_DEC_2000_300, "DEC_2000_300"),
	cpu_init(ST_DEC_3000_300, dec_3000_300_init, "DEC_3000_300"),
	cpu_notsupp(ST_AVALON_A12, "AVALON_A12"),
	cpu_notsupp(ST_DEC_2100_A500, "DEC_2100_A500"),
	cpu_notsupp(ST_DEC_APXVME_64, "AXPvme 64"),
	cpu_init(ST_DEC_AXPPCI_33, dec_axppci_33_init, "DEC_AXPPCI_33"),
	cpu_notsupp(ST_DEC_21000, "DEC_KN8AE"),
	cpu_init(ST_DEC_2100_A50, dec_2100_a50_init, "DEC_2100_A50"),
	cpu_notsupp(ST_DEC_MUSTANG, "Mustang"),
	cpu_init(ST_DEC_KN20AA, dec_kn20aa_init, "DEC_KN20AA"),
	cpu_init(ST_DEC_1000, dec_1000_init, "DEC_1000"),
	cpu_notsupp(ST_EB66, "DEC_EB66"),
	cpu_init(ST_ALPHABOOK1, dec_alphabook1_init, "DEC_ALPHABOOK1"),
	cpu_init(ST_DEC_4100, dec_kn300_init, "DEC_KN300"),
	cpu_notsupp(ST_DEC_EV45_PBP, "EV45 Passive Backplane Board"),
	cpu_notsupp(ST_DEC_2100A_A500, "DEC_2100A_A500"),
	cpu_init(ST_EB164, dec_eb164_init, "DEC_EB164"),
	cpu_init(ST_DEC_1000A, dec_1000a_init, "DEC_1000A"),
	cpu_notsupp(ST_DEC_ALPHAVME_224, "AlphaVME 224"),
	cpu_init(ST_DEC_550, dec_550_init, "DEC_550"),
	cpu_notsupp(ST_DEC_EV56_PBP, "EV56 Passive Backplane Board"),
	cpu_notsupp(ST_DEC_ALPHAVME_320, "AlphaVME 320"),
	cpu_init(ST_DEC_6600, dec_6600_init, "DEC_6600"),
	cpu_init(ST_DEC_TITAN, dec_6600_init, "DEC_6600"),
	cpu_init(ST_API_NAUTILUS, api_up1000_init, "API_UP1000"),
};
static const int ncpuinit = (sizeof(cpuinit) / sizeof(cpuinit[0]));

const struct cpuinit *
platform_lookup(int systype)
{
	const struct cpuinit *c;
	int i;

	for (i = 0; i < ncpuinit; i++) {
		c = &cpuinit[i];
		if (c->systype == systype)
			return (c);
	}
	return (NULL);
}

void
platform_not_configured()
{
	const struct cpuinit *c = platform_lookup(cputype);

	printf("\nSupport for system type %d is not present in this kernel.\n",
	    cputype);
	printf("Please build a kernel with \"options %s\" and reboot.\n",
	    c->option);
	panic("platform not configured");
}

void
platform_not_supported()
{
	const struct cpuinit *c = platform_lookup(cputype);

	printf("\nOpenBSD does not yet support system type %d (%s).\n", cputype,
	    (c != NULL) ? c->option : "???");
	panic("platform not supported");
}
@


1.13
log
@Support for DS15/DS25/ES45 (Titan) alpha models (rpb family 38). These systems
are very close to the Tsunami systems (rpb family 34) and share the existing
Tsunami code; the tsc(4) Tsunami controller code is extended to handle the
Titan differences, except for the Titan AGP GART which is left unsupported
for now.

Tested to not cause regressions on DS20 (deraadt@@) and ES40 (miod@@).
Titan support tested by Sergey Prysiazhnyi on DS25, many thanks for your time!
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.12 2008/06/26 05:42:08 ray Exp $ */
d143 6
d172 1
a172 2
	cpu_init(ST_EB64P, dec_eb64plus_init, "DEC_EB64PLUS"),
	cpu_notsupp(ST_ALPHABOOK1, "DEC_ALPHABOOK1"),
@


1.12
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.11 2007/03/16 21:22:27 robert Exp $ */
d178 1
@


1.11
log
@add DEC_KN300 support from NetBSD;

This code makes it possible to run on some of the AlphaServers,
namely AlphaServer 4100 and 1200.

add mcbus(4) and mcpcia(4) to provide support for the system bus and
the MCPCIA-to-PCI bus adapter that can be found in these systems

allow the pci_swiz_bus code to handle variable extent names
to be able to handle more than one mcpcia(4)

"just commit it" deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.10 2005/04/28 17:19:14 deraadt Exp $ */
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.10
log
@shut up
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.9 2002/06/30 16:24:37 miod Exp $ */
d175 1
a175 1
	cpu_notsupp(ST_DEC_4100, "DEC_KN300"),
@


1.9
log
@AlphaServer 800 and 1000 support; from NetBSD. Tested by Tor Houghton.
Added to floppy31 still fits.
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.8 2002/06/25 21:33:19 miod Exp $ */
d208 1
a208 2
	printf("\n");
	printf("Support for system type %d is not present in this kernel.\n",
a211 1
	printf("\n");   
d220 1
a220 2
	printf("\n");
	printf("OpenBSD does not yet support system type %d (%s).\n", cputype,
a221 1
	printf("\n");
@


1.8
log
@No \n at the end of a panic() message... I thought all occurences had been
squashed already.
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.7 2002/03/14 01:26:26 millert Exp $ */
d130 14
d171 1
a171 1
	cpu_notsupp(ST_DEC_1000, "DEC_1000"),
d179 1
a179 1
	cpu_notsupp(ST_DEC_1000A, "DEC_1000A"),
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.6 2002/01/24 19:45:03 miod Exp $ */
d200 1
a200 1
	panic("platform not configured\n");
@


1.6
log
@Repair compilation.
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.5 2002/01/23 03:20:41 ericj Exp $ */
d77 1
a77 1
extern void dec_3000_500_init __P((void));
d83 1
a83 1
extern void dec_3000_300_init __P((void));
d89 1
a89 1
extern void dec_axppci_33_init __P((void));
d95 1
a95 1
extern void dec_2100_a50_init __P((void));
d101 1
a101 1
extern void dec_kn20aa_init __P((void));
d107 1
a107 1
extern void dec_eb164_init __P((void));
d113 1
a113 1
extern void dec_eb64plus_init __P((void));
d119 1
a119 1
extern void dec_kn300_init __P((void));
d125 1
a125 1
extern void dec_550_init __P((void));
d131 1
a131 1
extern void dec_6600_init __P((void));
d137 1
a137 1
extern void api_up1000_init __P((void));
@


1.5
log
@
add support for AlphaPC 64.
from NetBSD.
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.4 2002/01/22 21:48:43 ericj Exp $ */
d115 1
a115 1
#define dec_eb64plus_init __P((void));
@


1.4
log
@
be realistic about what we support
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.3 2000/11/08 19:16:58 ericj Exp $ */
d112 6
d159 1
a159 1
	cpu_notsupp(ST_EB64P, "DEC_EB64PLUS"),
@


1.3
log
@add tags
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a93 6
#ifdef DEC_KN8AE
extern void dec_kn8ae_init __P((void));
#else
#define	dec_kn8ae_init		platform_not_configured
#endif

a105 6
#ifdef DEC_EB64PLUS
extern void dec_eb64plus_init __P((void));
#else
#define	dec_eb64plus_init	platform_not_configured
#endif

a111 6
#ifdef AVALON_A12
extern void avalon_a12_init __P((void));
#else
#define	avalon_a12_init		platform_not_configured
#endif

a123 26
#if defined(DEC_1000) || defined(DEC_1000A)
extern void _dec_1000a_init __P((void));
#endif
#ifdef DEC_1000A
#define	dec_1000a_init		_dec_1000a_init
#else
#define	dec_1000a_init		platform_not_configured
#endif
#ifdef DEC_1000
#define	dec_1000_init		_dec_1000a_init
#else
#define	dec_1000_init		platform_not_configured
#endif

#ifdef DEC_ALPHABOOK1
extern void dec_alphabook1_init __P((void));
#else
#define	dec_alphabook1_init	platform_not_configured
#endif

#ifdef DEC_EB66
extern void dec_eb66_init __P((void));
#else
#define	dec_eb66_init		platform_not_configured
#endif

a129 14
#if defined(DEC_2100_A500) || defined(DEC_2100A_A500)
extern void _dec_2100_a500_init __P((void));
#endif
#ifdef DEC_2100_A500
#define	dec_2100_a500_init	_dec_2100_a500_init
#else
#define	dec_2100_a500_init	platform_not_configured
#endif
#ifdef DEC_2100A_A500
#define	dec_2100a_a500_init	_dec_2100_a500_init
#else
#define	dec_2100a_a500_init	platform_not_configured
#endif

a135 7
#undef DEC_2000_300	/* XXX - why is it defined in config? */
#ifdef DEC_2000_300
extern void dec_2000_300_init __P((void));
#else
#define	dec_2000_300_init	platform_not_configured
#endif

d141 1
a141 1
	cpu_init(ST_DEC_2000_300, dec_2000_300_init, "DEC_2000_300"),
d143 2
a144 2
	cpu_init(ST_AVALON_A12, avalon_a12_init, "AVALON_A12"),
	cpu_init(ST_DEC_2100_A500, dec_2100_a500_init, "DEC_2100_A500"),
d147 1
a147 1
	cpu_init(ST_DEC_21000, dec_kn8ae_init, "DEC_KN8AE"),
d151 5
a155 5
	cpu_init(ST_DEC_1000, dec_1000_init, "DEC_1000"),
	cpu_init(ST_EB66, dec_eb66_init, "DEC_EB66"),
	cpu_init(ST_EB64P, dec_eb64plus_init, "DEC_EB64PLUS"),
	cpu_init(ST_ALPHABOOK1, dec_alphabook1_init, "DEC_ALPHABOOK1"),
	cpu_init(ST_DEC_4100, dec_kn300_init, "DEC_KN300"),
d157 1
a157 1
	cpu_init(ST_DEC_2100A_A500, dec_2100a_a500_init, "DEC_2100A_A500"),
d159 1
a159 1
	cpu_init(ST_DEC_1000A, dec_1000a_init, "DEC_1000A"),
@


1.3.6.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.6 2002/01/24 19:45:03 miod Exp $ */
d94 6
d112 6
d124 2
a125 2
#ifdef DEC_EB64PLUS
extern void dec_eb64plus_init __P((void));
d127 1
a127 1
#define dec_eb64plus_init	platform_not_configured
d142 26
d174 14
d194 7
d206 1
a206 1
	cpu_notsupp(ST_DEC_2000_300, "DEC_2000_300"),
d208 2
a209 2
	cpu_notsupp(ST_AVALON_A12, "AVALON_A12"),
	cpu_notsupp(ST_DEC_2100_A500, "DEC_2100_A500"),
d212 1
a212 1
	cpu_notsupp(ST_DEC_21000, "DEC_KN8AE"),
d216 2
a217 2
	cpu_notsupp(ST_DEC_1000, "DEC_1000"),
	cpu_notsupp(ST_EB66, "DEC_EB66"),
d219 2
a220 2
	cpu_notsupp(ST_ALPHABOOK1, "DEC_ALPHABOOK1"),
	cpu_notsupp(ST_DEC_4100, "DEC_KN300"),
d222 1
a222 1
	cpu_notsupp(ST_DEC_2100A_A500, "DEC_2100A_A500"),
d224 1
a224 1
	cpu_notsupp(ST_DEC_1000A, "DEC_1000A"),
@


1.3.6.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.3.6.1 2002/01/31 22:55:04 niklas Exp $ */
d77 1
a77 1
extern void dec_3000_500_init(void);
d83 1
a83 1
extern void dec_3000_300_init(void);
d89 1
a89 1
extern void dec_axppci_33_init(void);
d95 1
a95 1
extern void dec_2100_a50_init(void);
d101 1
a101 1
extern void dec_kn20aa_init(void);
d107 1
a107 1
extern void dec_eb164_init(void);
d113 1
a113 1
extern void dec_eb64plus_init(void);
d119 1
a119 1
extern void dec_kn300_init(void);
d125 1
a125 1
extern void dec_550_init(void);
d131 1
a131 1
extern void dec_6600_init(void);
d137 1
a137 1
extern void api_up1000_init(void);
@


1.3.6.3
log
@sync to -current
@
text
@d1 1
a1 1
/* $OpenBSD: cpuconf.c,v 1.3.6.2 2002/06/11 03:33:39 art Exp $ */
a129 14
#if defined(DEC_1000) || defined(DEC_1000A)
extern void _dec_1000a_init(void);
#endif
#ifdef DEC_1000A
#define	dec_1000a_init		_dec_1000a_init
#else
#define	dec_1000a_init		platform_not_configured
#endif
#ifdef DEC_1000
#define	dec_1000_init		_dec_1000a_init
#else
#define	dec_1000_init		platform_not_configured
#endif

d157 1
a157 1
	cpu_init(ST_DEC_1000, dec_1000_init, "DEC_1000"),
d165 1
a165 1
	cpu_init(ST_DEC_1000A, dec_1000a_init, "DEC_1000A"),
d200 1
a200 1
	panic("platform not configured");
@


1.2
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.1
log
@Sync with NetBSD 961207
@
text
@d1 37
a37 2
/*	$OpenBSD: cpuconf.c,v 1.2 1996/11/13 23:42:55 cgd Exp $	*/
/*	$NetBSD: cpuconf.c,v 1.2 1996/11/13 23:42:55 cgd Exp $	*/
a68 7
/*
 * CPU (machine) type configuration switch.
 *
 * This table should probably go at the end of conf.c, but
 * I didn't want to make conf.c "different."
 */

d71 1
d73 1
d75 155
a229 68
#undef DEC_2100_A50		/* config 'option' with flag brokenness */
#include "dec_2100_a50.h"
cpu_decl(dec_2100_a50);

#undef DEC_21000		/* config 'option' with flag brokenness */
#include "dec_21000.h"
cpu_decl(dec_21000);

#undef DEC_3000_300		/* config 'option' with flag brokenness */
#include "dec_3000_300.h"
cpu_decl(dec_3000_300);

#undef DEC_3000_500		/* config 'option' with flag brokenness */
#include "dec_3000_500.h"
cpu_decl(dec_3000_500);

#undef DEC_AXPPCI_33		/* config 'option' with flag brokenness */
#include "dec_axppci_33.h"
cpu_decl(dec_axppci_33);

#undef DEC_EB164		/* config 'option' with flag brokenness */
#include "dec_eb164.h"
cpu_decl(dec_eb164);

#undef DEC_KN20AA		/* config 'option' with flag brokenness */
#include "dec_kn20aa.h"
cpu_decl(dec_kn20aa);

const struct cpusw cpusw[] = {
	cpu_unknown(),				/*  0: ??? */
	cpu_notdef("Alpha Demonstration Unit"),	/*  1: ST_ADU */
	cpu_notdef("DEC 4000 (\"Cobra\")"),	/*  2: ST_DEC_4000 */
	cpu_notdef("DEC 7000 (\"Ruby\")"),	/*  3: ST_DEC_7000 */
	cpu_init("DEC 3000/500 (\"Flamingo\")",DEC_3000_500,dec_3000_500),
						/*  4: ST_DEC_3000_500 */
	cpu_unknown(),				/*  5: ??? */
	cpu_notdef("DEC 2000/300 (\"Jensen\")"),
						/*  6: ST_DEC_2000_300 */
	cpu_init("DEC 3000/300 (\"Pelican\")",DEC_3000_300,dec_3000_300),
						/*  7: ST_DEC_3000_300 */
	cpu_unknown(),				/*  8: ??? */
	cpu_notdef("DEC 2100/A500 (\"Sable\")"),
						/*  9: ST_DEC_2100_A500 */
	cpu_notdef("AXPvme 64"),		/* 10: ST_DEC_APXVME_64 */
	cpu_init("DEC AXPpci",DEC_AXPPCI_33,dec_axppci_33),
						/* 11: ST_DEC_AXPPCI_33 */
	cpu_init("DEC 21000",DEC_21000,dec_21000),
						/* 12: ST_DEC_21000 */
	cpu_init("AlphaStation 200/400 (\"Avanti\")",DEC_2100_A50,dec_2100_a50),
						/* 13: ST_DEC_2100_A50 */
	cpu_notdef("Mustang"),			/* 14: ST_DEC_MUSTANG */
	cpu_init("AlphaStation 600 (KN20AA)",DEC_KN20AA,dec_kn20aa),
						/* 15: ST_DEC_KN20AA */
	cpu_unknown(),				/* 16: ??? */
	cpu_notdef("DEC 1000 (\"Mikasa\")"),	/* 17: ST_DEC_1000 */
	cpu_unknown(),				/* 18: ??? */
	cpu_notdef("EB66"),			/* 19: ST_EB66 */
	cpu_notdef("EB64+"),			/* 20: ST_EB64P */
	cpu_unknown(),				/* 21: ??? */
	cpu_notdef("DEC 4100 (\"Rawhide\")"),	/* 22: ST_DEC_4100 */
	cpu_notdef("??? (\"Lego\")"),		/* 23: ST_DEC_EV45_PBP */
	cpu_notdef("DEC 2100A/A500 (\"Lynx\")"),
						/* 24: ST_DEC_2100A_A500 */
	cpu_unknown(),				/* 25: ??? */
	cpu_init("EB164",DEC_EB164,dec_eb164),	/* 26: ST_EB164 */
	cpu_notdef("DEC 1000A (\"Noritake\")"),	/* 27: ST_DEC_1000A */
	cpu_notdef("AlphaVME 224 (\"Cortex\")"),
						/* 28: ST_DEC_ALPHAVME_224 */
d231 41
a271 1
const int ncpusw = sizeof (cpusw) / sizeof (cpusw[0]);
@


1.1.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 38
/* $OpenBSD: cpuconf.c,v 1.3 2000/11/08 19:16:58 ericj Exp $ */
/* $NetBSD: cpuconf.c,v 1.27 2000/06/26 02:42:04 enami Exp $ */

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
d34 7
a42 1
#include <sys/systm.h>
a43 1
#include <machine/rpb.h>
d45 68
a112 155
#ifdef DEC_3000_500
extern void dec_3000_500_init __P((void));
#else
#define	dec_3000_500_init	platform_not_configured
#endif

#ifdef DEC_3000_300
extern void dec_3000_300_init __P((void));
#else
#define	dec_3000_300_init	platform_not_configured
#endif

#ifdef DEC_AXPPCI_33
extern void dec_axppci_33_init __P((void));
#else
#define	dec_axppci_33_init	platform_not_configured
#endif

#ifdef DEC_KN8AE
extern void dec_kn8ae_init __P((void));
#else
#define	dec_kn8ae_init		platform_not_configured
#endif

#ifdef DEC_2100_A50
extern void dec_2100_a50_init __P((void));
#else
#define	dec_2100_a50_init	platform_not_configured
#endif

#ifdef DEC_KN20AA
extern void dec_kn20aa_init __P((void));
#else
#define	dec_kn20aa_init		platform_not_configured
#endif

#ifdef DEC_EB64PLUS
extern void dec_eb64plus_init __P((void));
#else
#define	dec_eb64plus_init	platform_not_configured
#endif

#ifdef DEC_EB164
extern void dec_eb164_init __P((void));
#else
#define	dec_eb164_init		platform_not_configured
#endif

#ifdef AVALON_A12
extern void avalon_a12_init __P((void));
#else
#define	avalon_a12_init		platform_not_configured
#endif

#ifdef	DEC_KN300
extern void dec_kn300_init __P((void));
#else
#define	dec_kn300_init		platform_not_configured
#endif

#ifdef DEC_550
extern void dec_550_init __P((void));
#else
#define	dec_550_init		platform_not_configured
#endif

#if defined(DEC_1000) || defined(DEC_1000A)
extern void _dec_1000a_init __P((void));
#endif
#ifdef DEC_1000A
#define	dec_1000a_init		_dec_1000a_init
#else
#define	dec_1000a_init		platform_not_configured
#endif
#ifdef DEC_1000
#define	dec_1000_init		_dec_1000a_init
#else
#define	dec_1000_init		platform_not_configured
#endif

#ifdef DEC_ALPHABOOK1
extern void dec_alphabook1_init __P((void));
#else
#define	dec_alphabook1_init	platform_not_configured
#endif

#ifdef DEC_EB66
extern void dec_eb66_init __P((void));
#else
#define	dec_eb66_init		platform_not_configured
#endif

#ifdef DEC_6600
extern void dec_6600_init __P((void));
#else
#define	dec_6600_init		platform_not_configured
#endif

#if defined(DEC_2100_A500) || defined(DEC_2100A_A500)
extern void _dec_2100_a500_init __P((void));
#endif
#ifdef DEC_2100_A500
#define	dec_2100_a500_init	_dec_2100_a500_init
#else
#define	dec_2100_a500_init	platform_not_configured
#endif
#ifdef DEC_2100A_A500
#define	dec_2100a_a500_init	_dec_2100_a500_init
#else
#define	dec_2100a_a500_init	platform_not_configured
#endif

#ifdef API_UP1000
extern void api_up1000_init __P((void));
#else
#define	api_up1000_init		platform_not_configured
#endif

#undef DEC_2000_300	/* XXX - why is it defined in config? */
#ifdef DEC_2000_300
extern void dec_2000_300_init __P((void));
#else
#define	dec_2000_300_init	platform_not_configured
#endif

static const struct cpuinit cpuinit[] = {
	cpu_notsupp(ST_ADU, "Alpha Demo Unit"),
	cpu_notsupp(ST_DEC_4000, "DEC 4000 (``Cobra'')"),
	cpu_notsupp(ST_DEC_7000, "DEC 7000 (``Ruby'')"),
	cpu_init(ST_DEC_3000_500, dec_3000_500_init, "DEC_3000_500"),
	cpu_init(ST_DEC_2000_300, dec_2000_300_init, "DEC_2000_300"),
	cpu_init(ST_DEC_3000_300, dec_3000_300_init, "DEC_3000_300"),
	cpu_init(ST_AVALON_A12, avalon_a12_init, "AVALON_A12"),
	cpu_init(ST_DEC_2100_A500, dec_2100_a500_init, "DEC_2100_A500"),
	cpu_notsupp(ST_DEC_APXVME_64, "AXPvme 64"),
	cpu_init(ST_DEC_AXPPCI_33, dec_axppci_33_init, "DEC_AXPPCI_33"),
	cpu_init(ST_DEC_21000, dec_kn8ae_init, "DEC_KN8AE"),
	cpu_init(ST_DEC_2100_A50, dec_2100_a50_init, "DEC_2100_A50"),
	cpu_notsupp(ST_DEC_MUSTANG, "Mustang"),
	cpu_init(ST_DEC_KN20AA, dec_kn20aa_init, "DEC_KN20AA"),
	cpu_init(ST_DEC_1000, dec_1000_init, "DEC_1000"),
	cpu_init(ST_EB66, dec_eb66_init, "DEC_EB66"),
	cpu_init(ST_EB64P, dec_eb64plus_init, "DEC_EB64PLUS"),
	cpu_init(ST_ALPHABOOK1, dec_alphabook1_init, "DEC_ALPHABOOK1"),
	cpu_init(ST_DEC_4100, dec_kn300_init, "DEC_KN300"),
	cpu_notsupp(ST_DEC_EV45_PBP, "EV45 Passive Backplane Board"),
	cpu_init(ST_DEC_2100A_A500, dec_2100a_a500_init, "DEC_2100A_A500"),
	cpu_init(ST_EB164, dec_eb164_init, "DEC_EB164"),
	cpu_init(ST_DEC_1000A, dec_1000a_init, "DEC_1000A"),
	cpu_notsupp(ST_DEC_ALPHAVME_224, "AlphaVME 224"),
	cpu_init(ST_DEC_550, dec_550_init, "DEC_550"),
	cpu_notsupp(ST_DEC_EV56_PBP, "EV56 Passive Backplane Board"),
	cpu_notsupp(ST_DEC_ALPHAVME_320, "AlphaVME 320"),
	cpu_init(ST_DEC_6600, dec_6600_init, "DEC_6600"),
	cpu_init(ST_API_NAUTILUS, api_up1000_init, "API_UP1000"),
d114 1
a114 41
static const int ncpuinit = (sizeof(cpuinit) / sizeof(cpuinit[0]));

const struct cpuinit *
platform_lookup(int systype)
{
	const struct cpuinit *c;
	int i;

	for (i = 0; i < ncpuinit; i++) {
		c = &cpuinit[i];
		if (c->systype == systype)
			return (c);
	}
	return (NULL);
}

void
platform_not_configured()
{
	const struct cpuinit *c = platform_lookup(cputype);

	printf("\n");
	printf("Support for system type %d is not present in this kernel.\n",
	    cputype);
	printf("Please build a kernel with \"options %s\" and reboot.\n",
	    c->option);
	printf("\n");   
	panic("platform not configured\n");
}

void
platform_not_supported()
{
	const struct cpuinit *c = platform_lookup(cputype);

	printf("\n");
	printf("OpenBSD does not yet support system type %d (%s).\n", cputype,
	    (c != NULL) ? c->option : "???");
	printf("\n");
	panic("platform not supported");
}
@


1.1.14.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d94 6
d112 6
d124 2
a125 2
#ifdef DEC_EB64PLUS
extern void dec_eb64plus_init __P((void));
d127 1
a127 1
#define dec_eb64plus_init	platform_not_configured
d142 26
d174 14
d194 7
d206 1
a206 1
	cpu_notsupp(ST_DEC_2000_300, "DEC_2000_300"),
d208 2
a209 2
	cpu_notsupp(ST_AVALON_A12, "AVALON_A12"),
	cpu_notsupp(ST_DEC_2100_A500, "DEC_2100_A500"),
d212 1
a212 1
	cpu_notsupp(ST_DEC_21000, "DEC_KN8AE"),
d216 2
a217 2
	cpu_notsupp(ST_DEC_1000, "DEC_1000"),
	cpu_notsupp(ST_EB66, "DEC_EB66"),
d219 2
a220 2
	cpu_notsupp(ST_ALPHABOOK1, "DEC_ALPHABOOK1"),
	cpu_notsupp(ST_DEC_4100, "DEC_KN300"),
d222 1
a222 1
	cpu_notsupp(ST_DEC_2100A_A500, "DEC_2100A_A500"),
d224 1
a224 1
	cpu_notsupp(ST_DEC_1000A, "DEC_1000A"),
@


1.1.14.3
log
@Merge in -current from about a week ago
@
text
@d77 1
a77 1
extern void dec_3000_500_init(void);
d83 1
a83 1
extern void dec_3000_300_init(void);
d89 1
a89 1
extern void dec_axppci_33_init(void);
d95 1
a95 1
extern void dec_2100_a50_init(void);
d101 1
a101 1
extern void dec_kn20aa_init(void);
d107 1
a107 1
extern void dec_eb164_init(void);
d113 1
a113 1
extern void dec_eb64plus_init(void);
d119 1
a119 1
extern void dec_kn300_init(void);
d125 1
a125 1
extern void dec_550_init(void);
d131 1
a131 1
extern void dec_6600_init(void);
d137 1
a137 1
extern void api_up1000_init(void);
@


1.1.14.4
log
@Sync the SMP branch with 3.3
@
text
@a129 14
#if defined(DEC_1000) || defined(DEC_1000A)
extern void _dec_1000a_init(void);
#endif
#ifdef DEC_1000A
#define	dec_1000a_init		_dec_1000a_init
#else
#define	dec_1000a_init		platform_not_configured
#endif
#ifdef DEC_1000
#define	dec_1000_init		_dec_1000a_init
#else
#define	dec_1000_init		platform_not_configured
#endif

d157 1
a157 1
	cpu_init(ST_DEC_1000, dec_1000_init, "DEC_1000"),
d165 1
a165 1
	cpu_init(ST_DEC_1000A, dec_1000a_init, "DEC_1000A"),
d200 1
a200 1
	panic("platform not configured");
@


