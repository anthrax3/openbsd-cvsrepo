head	1.14;
access;
symbols
	OPENBSD_6_0:1.14.0.12
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.8
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.10
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.13.0.32
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.30
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.28
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.26
	OPENBSD_5_0:1.13.0.24
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.22
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.20
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.16
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.18
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.14
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.12
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.10
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.6
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.11.0.10
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.8
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.10.0.6
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.8.0.18
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.16
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.14
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.12
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.10
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.8
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2013.12.22.18.52.34;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.34.22;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.08.18.09.31;	author marc;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.26.26;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.08.19.16.59;	author ericj;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	2000.11.08.16.01.01;	author art;	state Exp;
branches;
next	1.8;

1.8
date	97.01.24.19.56.38;	author niklas;	state Exp;
branches
	1.8.14.1;
next	1.7;

1.7
date	96.11.23.21.44.50;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	96.10.30.22.38.15;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.07.29.22.57.45;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.06.18.09.42.21;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.12.26.18.14.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.52.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.40;	author deraadt;	state Exp;
branches;
next	;

1.8.14.1
date	2001.04.18.16.00.23;	author niklas;	state Exp;
branches;
next	1.8.14.2;

1.8.14.2
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	1.8.14.3;

1.8.14.3
date	2004.06.08.21.07.17;	author niklas;	state Exp;
branches;
next	;

1.10.6.1
date	2002.06.11.03.33.39;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Compute ncpusfound correctly. The logic was there but the count variable was
kept MD.
@
text
@/* $OpenBSD: mainbus.c,v 1.13 2005/10/17 18:34:22 miod Exp $ */
/* $NetBSD: mainbus.c,v 1.27 1998/06/24 01:10:35 ross Exp $ */

/*
 * Copyright (c) 1994, 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/reboot.h>
#include <sys/conf.h>

#include <machine/autoconf.h>
#include <machine/rpb.h>
#include <machine/cpuconf.h>

/* Definition of the mainbus driver. */
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);

struct cfattach mainbus_ca = {
	sizeof(struct device), mbmatch, mbattach
};

struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL
};

/* There can be only one. */
int	mainbus_found;

static int
mbmatch(parent, cf, aux)
	struct device *parent;
	void *cf;
	void *aux;
{

	if (mainbus_found)
		return (0);

	return (1);
}

static void
mbattach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	struct mainbus_attach_args ma;
	struct pcs *pcsp;
	int i;

	mainbus_found = 1;

	printf("\n");

	/*
	 * Try to find and attach all of the CPUs in the machine.
	 */
	for (i = 0; i < hwrpb->rpb_pcs_cnt; i++) {
		pcsp = LOCATE_PCS(hwrpb, i);
		if ((pcsp->pcs_flags & PCS_PP) == 0)
			continue;

		ma.ma_name = "cpu";
		ma.ma_slot = i;
		config_found(self, &ma, mbprint);
	}

	if (platform.iobus != NULL) {
		ma.ma_name = platform.iobus;
		ma.ma_slot = 0;			/* meaningless */
		config_found(self, &ma, mbprint);
	}
}

static int
mbprint(aux, pnp)
	void *aux;
	const char *pnp;
{
	struct mainbus_attach_args *ma = aux;

	if (pnp)
		printf("%s at %s", ma->ma_name, pnp);

	return (UNCONF);
}
@


1.13
log
@Rename ncpus to alpha_ncpus so that MI ncpus matches the number of
attached processors; deraadt@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD: mainbus.c,v 1.12 2004/06/08 18:09:31 marc Exp $ */
d78 1
a78 2
	int i, cpuattachcnt;
	extern int alpha_cpus;
a86 1
	cpuattachcnt = 0;
d94 1
a94 2
		if (config_found(self, &ma, mbprint) != NULL)
			cpuattachcnt++;
a95 3
	if (alpha_cpus != cpuattachcnt)
		printf("WARNING: %d cpus in machine, %d attached\n",
			alpha_cpus, cpuattachcnt);
@


1.12
log
@pull ncpus support from smp tree into main branch.
remove alpha specific definition of ncpus.
OK (and tested on alpha) deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: mainbus.c,v 1.11 2002/03/14 01:26:26 millert Exp $ */
d79 1
d99 1
a99 1
	if (ncpus != cpuattachcnt)
d101 1
a101 1
			ncpus, cpuattachcnt);
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: mainbus.c,v 1.10 2000/11/08 19:16:59 ericj Exp $ */
a78 1
	extern int ncpus;
@


1.10
log
@add tags
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 3
a44 3
static int	mbmatch __P((struct device *, void *, void *));
static void	mbattach __P((struct device *, struct device *, void *));
static int	mbprint __P((void *, const char *));
@


1.10.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: mainbus.c,v 1.10 2000/11/08 19:16:59 ericj Exp $ */
d42 3
a44 3
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);
@


1.9
log
@Merge in big portions of the improvements NetBSD did to their alpha port.
Highlights: UVM, PMAP_NEW, bus_dma (only on some buses for now), new hardware
support, possiblity for ELF, etc, etc. Too much to mention.

This is still work in progress. video consoles might be broken, otherwise
we have basically the same functionality as before plus more.
@
text
@d1 1
@


1.8
log
@Sync with NetBSD 961207
@
text
@d1 1
a1 2
/*	$OpenBSD: mainbus.c,v 1.7 1996/11/23 21:44:50 kstailey Exp $	*/
/*	$NetBSD: mainbus.c,v 1.15 1996/12/05 01:39:28 cgd Exp $	*/
d34 1
a39 5
struct mainbus_softc {
	struct	device sc_dv;
	struct	abus sc_bus;
};

a40 1
#ifdef __BROKEN_INDIRECT_CONFIG
a41 3
#else
static int	mbmatch __P((struct device *, struct cfdata *, void *));
#endif
d46 1
a46 1
	sizeof(struct mainbus_softc), mbmatch, mbattach
d53 2
a54 4
void	mb_intr_establish __P((struct confargs *, int (*)(void *), void *));
void	mb_intr_disestablish __P((struct confargs *));
caddr_t	mb_cvtaddr __P((struct confargs *));
int	mb_matchname __P((struct confargs *, char *));
a56 3
#ifdef __BROKEN_INDIRECT_CONFIG
mbmatch(parent, cfdata, aux)
#else
a57 1
#endif
d59 1
a59 5
#ifdef __BROKEN_INDIRECT_CONFIG
	void *cfdata;
#else
	struct cfdata *cf;
#endif
a61 3
#ifdef __BROKEN_INDIRECT_CONFIG
	struct cfdata *cf = cfdata;
#endif
d63 2
a64 5
	/*
	 * Only one mainbus, but some people are stupid...
	 */	
	if (cf->cf_unit > 0)
		return(0);
d66 1
a66 4
	/*
	 * That one mainbus is always here.
	 */
	return(1);
d75 2
a76 2
	struct mainbus_softc *sc = (struct mainbus_softc *)self;
	struct confargs nca;
a77 1
	struct pcs* pcsp;
d79 2
a80 1
	extern const struct cpusw *cpu_fn_switch;
a83 7
	sc->sc_bus.ab_dv = (struct device *)sc;
	sc->sc_bus.ab_type = BUS_MAIN;
	sc->sc_bus.ab_intr_establish = mb_intr_establish;
	sc->sc_bus.ab_intr_disestablish = mb_intr_disestablish;
	sc->sc_bus.ab_cvtaddr = mb_cvtaddr;
	sc->sc_bus.ab_matchname = mb_matchname;

d89 1
a89 2
		pcsp = (struct pcs *)((char *)hwrpb + hwrpb->rpb_pcs_off +
		    (i * hwrpb->rpb_pcs_size));
d93 3
a95 5
		nca.ca_name = "cpu";
		nca.ca_slot = 0;
		nca.ca_offset = 0;
		nca.ca_bus = &sc->sc_bus;
		if (config_found(self, &nca, mbprint) != NULL)
d102 4
a105 9
	if ((*cpu_fn_switch->iobus_name)() != NULL) {
		char iobus_name[16];

		strncpy(iobus_name, (*cpu_fn_switch->iobus_name)(), 16);
		nca.ca_name = iobus_name;
		nca.ca_slot = 0;
		nca.ca_offset = 0;
		nca.ca_bus = &sc->sc_bus;
		config_found(self, &nca, mbprint);
d114 1
a114 1
	struct confargs *ca = aux;
d117 1
a117 1
		printf("%s at %s", ca->ca_name, pnp);
a119 35
}

void
mb_intr_establish(ca, handler, val)
	struct confargs *ca;
	int (*handler) __P((void *));
	void *val;
{

	panic("can never mb_intr_establish");
}

void
mb_intr_disestablish(ca)
	struct confargs *ca;
{

	panic("can never mb_intr_disestablish");
}

caddr_t
mb_cvtaddr(ca)
	struct confargs *ca;
{

	return (NULL);
}

int
mb_matchname(ca, name)
	struct confargs *ca;
	char *name;
{

	return (strcmp(name, ca->ca_name) == 0);
@


1.8.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/* $OpenBSD: mainbus.c,v 1.10 2000/11/08 19:16:59 ericj Exp $ */
/* $NetBSD: mainbus.c,v 1.27 1998/06/24 01:10:35 ross Exp $ */
a34 1
#include <sys/conf.h>
d40 5
d46 1
d48 3
d55 1
a55 1
	sizeof(struct device), mbmatch, mbattach
d62 4
a65 2
/* There can be only one. */
int	mainbus_found;
d68 3
d72 1
d74 5
a78 1
	void *cf;
d81 3
d85 5
a89 2
	if (mainbus_found)
		return (0);
d91 4
a94 1
	return (1);
d103 2
a104 2
	struct mainbus_attach_args ma;
	struct pcs *pcsp;
d106 1
d108 1
d110 1
a110 1
	mainbus_found = 1;
d112 6
a117 1
	printf("\n");
d124 2
a125 1
		pcsp = LOCATE_PCS(hwrpb, i);
d129 5
a133 3
		ma.ma_name = "cpu";
		ma.ma_slot = i;
		if (config_found(self, &ma, mbprint) != NULL)
d140 9
a148 4
	if (platform.iobus != NULL) {
		ma.ma_name = platform.iobus;
		ma.ma_slot = 0;			/* meaningless */
		config_found(self, &ma, mbprint);
d157 1
a157 1
	struct mainbus_attach_args *ma = aux;
d160 1
a160 1
		printf("%s at %s", ma->ma_name, pnp);
d163 35
@


1.8.14.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 3
a44 3
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);
@


1.8.14.3
log
@sync to head
@
text
@d79 1
@


1.7
log
@added const to second parameter of cfprint_t routines
@
text
@d1 2
a2 2
/*	$OpenBSD: mainbus.c,v 1.6 1996/10/30 22:38:15 niklas Exp $	*/
/*	$NetBSD: mainbus.c,v 1.12 1996/10/13 02:59:40 christos Exp $	*/
d38 1
d46 1
d48 3
d68 1
d70 3
d74 1
d76 3
d81 1
d83 1
d106 1
d108 1
a108 1
	extern char *cpu_iobus;
a123 2
		struct pcs *pcsp;

d140 5
a144 2
	if (cpu_iobus != NULL) {
		nca.ca_name = cpu_iobus;
@


1.6
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.12 1996/10/13 02:59:40 christos Exp $	*/
d47 1
a47 1
static int	mbprint __P((void *, /* const */ char *));
d138 1
a138 1
	/* const */ char *pnp;
@


1.5
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: mainbus.c,v 1.9 1996/04/12 06:07:35 cgd Exp $	*/
/*	$NetBSD: mainbus.c,v 1.9 1996/04/12 06:07:35 cgd Exp $	*/
d47 1
a47 1
static int	mbprint __P((void *, char *));
a89 1
	struct pcs *pcsp;
d91 1
a91 1
	extern int cputype, ncpus;
d138 1
a138 1
	char *pnp;
@


1.4
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@


1.3
log
@from netbsd: if subdevice not configured, print something out about it.
@
text
@d1 1
a1 1
/*	$NetBSD: mainbus.c,v 1.6 1995/12/20 00:18:50 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
d47 8
a54 3
struct cfdriver mainbuscd =
    { NULL, "mainbus", mbmatch, mbattach, DV_DULL,
	sizeof (struct mainbus_softc) };
d119 1
a119 1
		if (config_found(self, &nca, mbprint))
@


1.2
log
@update to netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: mainbus.c,v 1.5 1995/11/23 02:34:18 cgd Exp $	*/
d135 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: mainbus.c,v 1.4 1995/08/03 01:01:26 cgd Exp $	*/
a127 6

	/*
	 * XXX: note that the following should be at various places in
	 * machdep.c.
	 */
	/* WEIRD: Note that the "LCA" CPU attches the PCI bus directly... */
a135 2
	if (pnp)
		return (QUIET);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
