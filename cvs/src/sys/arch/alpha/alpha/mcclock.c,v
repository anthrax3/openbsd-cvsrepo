head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.62
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.64
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.60
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.56
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.58
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.50
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.54
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.52
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.48
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.46
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.44
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.42
	OPENBSD_5_0:1.5.0.40
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.38
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.36
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.32
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.34
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.30
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.28
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2002.03.14.01.26.26;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.14.22.18.03;	author mjacob;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	96.10.30.22.38.16;	author niklas;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	96.07.29.22.57.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.06.18.09.42.22;	author deraadt;	state Exp;
branches;
next	;

1.3.14.1
date	2001.04.18.16.00.24;	author niklas;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2002.03.28.10.06.13;	author niklas;	state Exp;
branches;
next	;

1.4.6.1
date	2002.06.11.03.33.39;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@First round of __P removal in sys
@
text
@/*	$OpenBSD: mcclock.c,v 1.4 2001/04/14 22:18:03 mjacob Exp $	*/
/*	$NetBSD: mcclock.c,v 1.4 1996/10/13 02:59:41 christos Exp $	*/

/*
 * Copyright (c) 1994, 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/kernel.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <alpha/alpha/clockvar.h>
#include <alpha/alpha/mcclockvar.h>
#include <dev/ic/mc146818reg.h>

struct cfdriver mcclock_cd = {
	NULL, "mcclock", DV_DULL,
};

void	mcclock_init(struct device *);
void	mcclock_get(struct device *, time_t, struct clocktime *);
void	mcclock_set(struct device *, struct clocktime *);

const struct clockfns mcclock_clockfns = {
	mcclock_init, mcclock_get, mcclock_set,
};

#define	mc146818_write(dev, reg, datum)					\
	    (*(dev)->sc_busfns->mc_bf_write)(dev, reg, datum)
#define	mc146818_read(dev, reg)						\
	    (*(dev)->sc_busfns->mc_bf_read)(dev, reg)

void
mcclock_attach(sc, busfns)
	struct mcclock_softc *sc;
	const struct mcclock_busfns *busfns;
{

	printf(": mc146818 or compatible");

	sc->sc_busfns = busfns;

	/* Turn interrupts off, just in case. */
	mc146818_write(sc, MC_REGB, MC_REGB_BINARY | MC_REGB_24HR);

	clockattach(&sc->sc_dev, &mcclock_clockfns);
}

void
mcclock_init(dev)
	struct device *dev;
{
	struct mcclock_softc *sc = (struct mcclock_softc *)dev;

	mc146818_write(sc, MC_REGA, MC_BASE_32_KHz | MC_RATE_1024_Hz);
	mc146818_write(sc, MC_REGB,
	    MC_REGB_PIE | MC_REGB_SQWE | MC_REGB_BINARY | MC_REGB_24HR);
}

/*
 * Get the time of day, based on the clock's value and/or the base value.
 */
void
mcclock_get(dev, base, ct)
	struct device *dev;
	time_t base;
	struct clocktime *ct;
{
	struct mcclock_softc *sc = (struct mcclock_softc *)dev;
	mc_todregs regs;
	int s;

	s = splclock();
	MC146818_GETTOD(sc, &regs)
	splx(s);

	ct->sec = regs[MC_SEC];
	ct->min = regs[MC_MIN];
	ct->hour = regs[MC_HOUR];
	ct->dow = regs[MC_DOW];
	ct->day = regs[MC_DOM];
	ct->mon = regs[MC_MONTH];
	ct->year = regs[MC_YEAR];
}

/*
 * Reset the TODR based on the time value.
 */
void
mcclock_set(dev, ct)
	struct device *dev;
	struct clocktime *ct;
{
	struct mcclock_softc *sc = (struct mcclock_softc *)dev;
	mc_todregs regs;
	int s;

	s = splclock();
	MC146818_GETTOD(sc, &regs);
	splx(s);

	regs[MC_SEC] = ct->sec;
	regs[MC_MIN] = ct->min;
	regs[MC_HOUR] = ct->hour;
	regs[MC_DOW] = ct->dow;
	regs[MC_DOM] = ct->day;
	regs[MC_MONTH] = ct->mon;
	regs[MC_YEAR] = ct->year;

	s = splclock();
	MC146818_PUTTOD(sc, &regs);
	splx(s);
}
@


1.4
log
@Always make sure that SQWE is enabled- the PROM may not have done this for you.
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock.c,v 1.3 1996/10/30 22:38:16 niklas Exp $	*/
d44 3
a46 3
void	mcclock_init __P((struct device *));
void	mcclock_get __P((struct device *, time_t, struct clocktime *));
void	mcclock_set __P((struct device *, struct clocktime *));
@


1.4.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock.c,v 1.4 2001/04/14 22:18:03 mjacob Exp $	*/
d44 3
a46 3
void	mcclock_init(struct device *);
void	mcclock_get(struct device *, time_t, struct clocktime *);
void	mcclock_set(struct device *, struct clocktime *);
@


1.3
log
@Merge to NetBSD 961020.  Retained our kernel APIs where NetBSD has changed.
-Wall -Wstrict-prototypes -Wmissing-prototypes too.
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock.c,v 1.4 1996/10/13 02:59:41 christos Exp $	*/
d81 1
a81 1
	    MC_REGB_PIE | MC_REGB_BINARY | MC_REGB_24HR);
@


1.3.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: mcclock.c,v 1.4 2001/04/14 22:18:03 mjacob Exp $	*/
d81 1
a81 1
	    MC_REGB_PIE | MC_REGB_SQWE | MC_REGB_BINARY | MC_REGB_24HR);
@


1.3.14.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 3
a46 3
void	mcclock_init(struct device *);
void	mcclock_get(struct device *, time_t, struct clocktime *);
void	mcclock_set(struct device *, struct clocktime *);
@


1.2
log
@Add OpenBSD tags.  Adapt to OpenBSD *_intr_establish calling convention
@
text
@d1 2
a2 2
/*	$OpenBSD: mcclock.c,v 1.2 1996/04/17 22:22:32 cgd Exp $	*/
/*	$NetBSD: mcclock.c,v 1.2 1996/04/17 22:22:32 cgd Exp $	*/
@


1.1
log
@sync to 0616, retaining local diffs
@
text
@d1 1
@
