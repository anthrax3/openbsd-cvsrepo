head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.16
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.14
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.10
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.6
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.18
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.14
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.12
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.10
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.8
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	xmas_lemote:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.03.27.22.16.03;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.08.21.59.56;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.02.12.08.14.02;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.09.21.31.46;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2010.02.05.20.51.22;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.12.25.21.28.23;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.12.25.21.28.23;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove dependency from wscons_machdep upon bonito. Instead of hardcoding bonito
as the northbridge, have the per-platform early setup code register functions
providing access to the PCI configuration space, for the wscons code to walk the
PCI space in search of a graphics board.

No functional change yet.
@
text
@/*	$OpenBSD: bonitovar.h,v 1.5 2010/05/08 21:59:56 miod Exp $	*/
/*	$NetBSD: bonitovar.h,v 1.4 2008/04/28 20:23:28 martin Exp $	*/

/*-
 * Copyright (c) 2001, 2002 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _LOONGSON_DEV_BONITOVAR_H_
#define	_LOONGSON_DEV_BONITOVAR_H_

struct bonito_cfg_hook;
struct extent;

struct bonito_config {
	int		bc_adbase;	/* AD line base for config access */

	/* Prototype interrupt and GPIO registers. */
	uint32_t	bc_gpioIE;
	uint32_t	bc_intEdge;
	uint32_t	bc_intSteer;
	uint32_t	bc_intPol;

	/* PCI Attach hook for the first bus */
	void		(*bc_attach_hook)(pci_chipset_tag_t);
	
	/* PCI Interrupt Assignment for the first bus */
	int		(*bc_intr_map)(int, int, int);
};

struct bonito_softc {
	struct device			 sc_dev;
	int				 sc_compatible;	/* real Bonito hw */
	const struct bonito_config	*sc_bonito;
	struct mips_pci_chipset		 sc_pc;

	/* PCI Configuration Space access hooks */
	SLIST_HEAD(, bonito_cfg_hook)	 sc_hook;
};

#ifdef _KERNEL
void	 bonito_intr_disestablish(void *);
void	*bonito_intr_establish(int, int, int, int (*)(void *), void *,
	    const char *);
int	 bonito_pci_hook(pci_chipset_tag_t, void *,
	    int (*)(void *, pci_chipset_tag_t, pcitag_t, int, pcireg_t *),
	    int (*)(void *, pci_chipset_tag_t, pcitag_t, int, pcireg_t));
int	 bonito_print(void *, const char *);
struct extent
	*bonito_get_resource_extent(pci_chipset_tag_t, int);
void	 bonito_setintrmask(int);

void	 bonito_early_setup(void);
#endif /* _KERNEL */

#endif /* _LOONGSON_DEV_BONITOVAR_H_ */
@


1.5
log
@Huge work-in-progress commit to support Loongson 2E-based evaluation boards
with a VIA 686 southbridge.

Features:
- 686 setup code (no thanks to PMON for not initializing the beast).
- work in progress ISA interrupt handling code.
- support for vga(4) compatible devices as console, in PC-compatible text mode.
- move legacy (ISA) support code out of bonito(4) to make things clearer.
- support more than 256MB on 2E-based systems.

Tested on a generic 2E-based evaluation board by someone who wishes to remain
anonymous; you know who you are, thank you very much for testing.
@
text
@d1 1
a1 1
/*	$OpenBSD: bonitovar.h,v 1.4 2010/02/12 08:14:02 miod Exp $	*/
d76 2
@


1.4
log
@Overhaul per-platform specific operation by moving all the differences into
per-platform structs or function pointers; therefore bonito(4) no longer needs
to know about particular systems.

While there, bring little bits of Fuloong 2F support, tested on otto@@'s
machine.
@
text
@d1 1
a1 1
/*	$OpenBSD: bonitovar.h,v 1.3 2010/02/09 21:31:46 miod Exp $	*/
a35 2
#include <dev/pci/pcivar.h>

a47 2
	int		bc_legacy_pic;	/* nonzero if legacy PIC */

d75 1
@


1.3
log
@Make the bonito_pci_attach_hook per-platform, as a new callback in struct
bonito_config. Move the Geode initalization code previously found there
to yeeloong-specific code; and on Gdium, clear all the BAR of the internal
mini pci slot - it does not get initialized by PMON and the MI PCI code
complains about the bogus values it finds there on cold boots.
@
text
@d1 1
a1 1
/*	$OpenBSD: bonitovar.h,v 1.2 2010/02/05 20:51:22 miod Exp $	*/
d39 1
d50 2
d61 1
d77 2
@


1.2
log
@Blind support for the EMTEC Gdium Liberty netbook. Per-platform configuration
is moved to specific files, and a pointer to the key configuration structure
is now kept in struct sys_config.
bonito(4) interrupt handling is split, to allow PCI+Legacy interrupt systems
(Lemote Yeelong) and PCI-only Legacy-free systems (Gdium) to coexist
peacefully.
@
text
@d1 1
a1 1
/*	$OpenBSD: bonitovar.h,v 1.1.1.1 2009/12/25 21:28:23 miod Exp $	*/
d49 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 3
@


1.1.1.1
log
@By popular demand and peer pressure, check-in work in progress work to support
the Yeelong Lemote mips-based netbook. Kernel bits only for now, needs
polishing; most of this work done during h2k9 last month, although the
porting effort started earlier this year.
@
text
@@
