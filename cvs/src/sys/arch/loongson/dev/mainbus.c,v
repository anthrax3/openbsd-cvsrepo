head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.4
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.8.0.14
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.10
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.12
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	xmas_lemote:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2017.01.19.15.09.04;	author visa;	state Exp;
branches;
next	1.9;
commitid	8FHInuctPjWFPH6r;

1.9
date	2016.11.17.14.41.21;	author visa;	state Exp;
branches;
next	1.8;
commitid	zpQpluEsJrBQDh6U;

1.8
date	2013.05.30.16.15.01;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.14.21.18.47;	author pirofti;	state Exp;
branches;
next	1.6;

1.6
date	2010.09.23.14.12.05;	author pirofti;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.31.10.24.46;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2010.02.28.08.30.27;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.16.21.29.26;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.09.20.33.16;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.12.25.21.11.09;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.12.25.21.11.09;	author miod;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Extend struct platform with MP control functions, and add bootstrap code
for secondary CPUs.

Discussed with miod@@
@
text
@/*	$OpenBSD: mainbus.c,v 1.9 2016/11/17 14:41:21 visa Exp $ */

/*
 * Copyright (c) 2001-2003 Opsycon AB  (www.opsycon.se / www.opsycon.com)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/autoconf.h>

int	mainbus_match(struct device *, void *, void *);
void	mainbus_attach(struct device *, struct device *, void *);
int	mainbus_print(void *, const char *);

const struct cfattach mainbus_ca = {
	sizeof(struct device), mainbus_match, mainbus_attach
};

struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL
};

int
mainbus_match(struct device *parent, void *cfdata, void *aux)
{
	static int mainbus_attached = 0;

	if (mainbus_attached != 0)
		return 0;

	return mainbus_attached = 1;
}

void
mainbus_attach(struct device *parent, struct device *self, void *aux)
{
	struct cpu_attach_args caa;

	printf(": %s %s\n", sys_platform->vendor, sys_platform->product);

	bzero(&caa, sizeof caa);
	caa.caa_maa.maa_name = "cpu";
	caa.caa_hw = &bootcpu_hwinfo;
	config_found(self, &caa, mainbus_print);

#ifdef MULTIPROCESSOR
	if (sys_platform->config_secondary_cpus != NULL)
		sys_platform->config_secondary_cpus(self, mainbus_print);
#endif

	caa.caa_maa.maa_name = "bonito";
	config_found(self, &caa.caa_maa, mainbus_print);

	caa.caa_maa.maa_name = "htb";
	config_found(self, &caa.caa_maa, mainbus_print);

	caa.caa_maa.maa_name = "leioc";
	config_found(self, &caa.caa_maa, mainbus_print);

	if (md_startclock == NULL) {
		caa.caa_maa.maa_name = "clock";
		config_found(self, &caa.caa_maa, mainbus_print);
	}

	caa.caa_maa.maa_name = "apm";
	config_found(self, &caa.caa_maa, mainbus_print);
}

int
mainbus_print(void *aux, const char *pnp)
{
	return pnp != NULL ? QUIET : UNCONF;
}
@


1.9
log
@Add drivers for PCI host bridge and built-in UARTs on Loongson 3A,
and put the pieces together by platform glue.

Feedback from miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.8 2013/05/30 16:15:01 deraadt Exp $ */
d69 5
@


1.8
log
@Enforce ca_activate tree-walks over the entire heirarchy for all events,
cleaning up some shutdown-hook related code on the way.
(A few drivers related to sparc are still skipped at kettenis' request)
ok kettenis mlarkin, tested by many others too
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.7 2013/01/14 21:18:47 pirofti Exp $ */
d71 6
@


1.7
log
@Loongson: Replace the system clock provided by the CPU with a GLX MFGPT.

CPU throttling was not possible due to the fact that the system clock
was the CPU clock. So slowing down the CPU would also slow down the
passing of time.

This commit adds a driver for the MFGPT1 clock from the AMD companion
chip found on lemote and hooks it up as the system clock.

It also changes the frequency value of hz from the default, which was
100, to 128. That's because the scaling on MFGPT clocks is represented
by powers of two.

Okay miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 2010/09/23 14:12:05 pirofti Exp $ */
d40 1
a40 2
	sizeof(struct device), mainbus_match, mainbus_attach,
	NULL, config_activate_children
@


1.6
log
@Move clock attachment later in the game. This is needed for cpu scaling.

Okay miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2010/08/31 10:24:46 pirofti Exp $ */
d74 4
a77 2
	caa.caa_maa.maa_name = "clock";
	config_found(self, &caa.caa_maa, mainbus_print);
@


1.5
log
@WIP suspend/resume support for loongson lemote. Okay miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2010/02/28 08:30:27 otto Exp $ */
d71 1
a71 1
	caa.caa_maa.maa_name = "clock";
d74 1
a74 1
	caa.caa_maa.maa_name = "bonito";
@


1.4
log
@Basic apm(4), providing battery/power status and events. apm(4) is the
generic part, ykbec(4) provides the device specific parts. Other
battery/power status drivers can easily hook to adb(4). With help
from miod@@; ok matthieu@@ miod@@ jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.3 2010/02/16 21:29:26 miod Exp $ */
d40 2
a41 1
	sizeof(struct device), mainbus_match, mainbus_attach
@


1.3
log
@Display the system type on the mainbus0 line as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 2010/01/09 20:33:16 miod Exp $ */
d74 3
@


1.2
log
@Define struct cpu_hwinfo, to hold hardware specific information about each
processor (instead of sys_config.cpu[]), and pass it in the attach_args
when attaching cpu devices.

This allows per-cpu information to be gathered late in the bootstrap process,
and not be limited by an arbitrary MAX_CPUS limit; this will suit IP27 and
IP35 systems better.

While there, use this information to make sure delay() uses the speed
information from the cpu it is invoked on.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1.1.1 2009/12/25 21:11:09 miod Exp $ */
d63 1
a63 1
	printf("\n");
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1 2009/06/13 21:48:03 miod Exp $ */
d61 1
a61 1
	struct mainbus_attach_args maa;
d65 4
a68 5
	bzero(&maa, sizeof maa);
	maa.maa_name = "cpu";
	config_found(self, &maa, mainbus_print);
	maa.maa_name = "clock";
	config_found(self, &maa, mainbus_print);
d70 5
a74 2
	maa.maa_name = "bonito";
	config_found(self, &maa, mainbus_print);
@


1.1.1.1
log
@By popular demand and peer pressure, check-in work in progress work to support
the Yeelong Lemote mips-based netbook. Kernel bits only for now, needs
polishing; most of this work done during h2k9 last month, although the
porting effort started earlier this year.
@
text
@@
