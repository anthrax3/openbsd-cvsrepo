head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.18
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.06.02.19.52.36;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.31.16.13.59;	author pascal;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.23.17.06.36;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.18.06.21.40;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	2010.02.14.22.39.33;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@compile with -fno-builtin-exit

ok miod@@ pirofti@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.4 2012/08/31 16:13:59 pascal Exp $

BINDIR=		/usr/mdec

STANDALONE?=	-D_STANDALONE

.if ${MACHINE} == "loongson"
CPPFLAGS+=	${STANDALONE}
CPPFLAGS+=	-I.
CFLAGS+=	-fno-stack-protector -Wall
CFLAGS+=	-fno-builtin-vprintf -fno-builtin-printf -fno-builtin-putchar
# Silence warnings
CFLAGS+=	-fno-builtin-snprintf
CFLAGS+=	-fno-builtin-memcpy
CFLAGS+=	-fno-builtin-memcmp
CFLAGS+=	-fno-builtin-memset
CFLAGS+=	-fno-builtin-strncpy
CFLAGS+=	-fno-builtin-strncmp
CFLAGS+=	-fno-builtin-exit
CFLAGS+=	-Wa,-mfix-loongson2f-btb
SAABI=		-mips3 -mno-abicalls -G 0 -fno-pic -fno-common
AS?=		as
LD?=		ld
.endif

### Figure out what to use for libsa
LIBSADIR?=               ${.CURDIR}/../libsa

.if exists(${LIBSADIR}/${__objdir})
LIBSAOBJDIR=            ${LIBSADIR}/${__objdir}
.else
LIBSAOBJDIR=            ${LIBSADIR}
.endif

LIBSA=                  ${LIBSAOBJDIR}/libsa.a

### Figure out what to use for libz
LIBZDIR?=                ${.CURDIR}/../libz

.if exists(${LIBZDIR}/${__objdir})
LIBZOBJDIR=             ${LIBZDIR}/${__objdir}
.else
LIBZOBJDIR=             ${LIBZDIR}
.endif

LIBZ=                   ${LIBZOBJDIR}/libz.a
@


1.4
log
@Kill NOPIE and NOPIE_FLAGS in loongson/stand.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2012/08/23 17:06:36 pascal Exp $
d19 1
@


1.3
log
@missed NOPIE_FLAGS, noticed by Brian Callahan

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2011/03/18 06:21:40 matthew Exp $
a19 2
CFLAGS+=	${NOPIE_FLAGS}
AFLAGS+=	${NOPIE_FLAGS}
@


1.2
log
@Fix obj directory probing to support cross compiling.

"Go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2010/02/14 22:39:33 miod Exp $
d20 2
@


1.1
log
@Work in progress standalone boot blocks for OpenBSD/loongson systems. Will
load a kernel from the OpenBSD partition, with symbols.
However:
- does not work on gdium (usb i/o errors)
- no countdown due to PMON limitations, so either `bsd' in the PMON
  environment contains a kernel filename to load, and it will get loaded
  immediately, or it doesn't (e.g. the variable does no exist) and you get
  a prompt and can pass options to the kernel. Note that /etc/boot.conf
  commands can still be used in both cases.
- does not work for me when loaded automatically from PMON (put in the `al'
  environment variable). However, `boot $al' works fine. Need to investigate.
@
text
@d1 1
a1 1
#	$OpenBSD$
d28 2
a29 4
.if exists(${LIBSADIR}/obj.${MACHINE})
LIBSAOBJDIR=            ${LIBSADIR}/obj.${MACHINE}
.elif exists(${LIBSADIR}/obj)
LIBSAOBJDIR=            ${LIBSADIR}/obj
d39 2
a40 4
.if exists(${LIBZDIR}/obj.${MACHINE})
LIBZOBJDIR=             ${LIBZDIR}/obj.${MACHINE}
.elif exists(${LIBZDIR}/obj)
LIBZOBJDIR=             ${LIBZDIR}/obj
@

