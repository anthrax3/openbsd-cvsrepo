head	1.6;
access;
symbols
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.12
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2016.07.30.03.25.48;	author guenther;	state Exp;
branches;
next	1.5;
commitid	HVbAtwruDlJazNH2;

1.5
date	2016.03.30.06.38.45;	author jmc;	state Exp;
branches;
next	1.4;
commitid	LN9ijdk9SEnzWAbM;

1.4
date	2012.11.04.16.30.44;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.31.16.13.59;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2010.02.17.19.51.30;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2010.02.14.22.39.33;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Prep for relro: make sure it's off for any non-PIE stand/ program

ok millert@@ kettenis@@
@
text
@#	$OpenBSD: Makefile,v 1.5 2016/03/30 06:38:45 jmc Exp $

NOMAN=
#MAN=		boot.8
.if ${MACHINE} == "loongson"
PROG=		boot
.include	"${.CURDIR}/Makefile.inc"
.else
NOPROG=
.endif
CFLAGS+=-fno-pie
AFLAGS+=-fno-pie
LDFLAGS+=-nopie -znorelro

.include <bsd.prog.mk>
@


1.5
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2012/11/04 16:30:44 matthieu Exp $
d13 1
a13 1
LDFLAGS+=-nopie
@


1.4
log
@Simplify Makefiles a bit, removing redundant stuff. ok espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2012/08/31 16:13:59 pascal Exp $
a4 1
#MLINKS=	boot.8 boot.conf.5
@


1.3
log
@Kill NOPIE and NOPIE_FLAGS in loongson/stand.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2010/02/17 19:51:30 miod Exp $
d8 1
a8 1
.include	"${.CURDIR}/../boot/Makefile.inc"
@


1.2
log
@Split boot/Makefile in case we need to build several boot.${VENDOR} compiled
from the same sources with different CFLAGS; the need for this has not arisen
yet but I fear it will hit the fan soon enough; no functional change in the
meantime.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2010/02/14 22:39:33 miod Exp $
d12 3
@


1.1
log
@Work in progress standalone boot blocks for OpenBSD/loongson systems. Will
load a kernel from the OpenBSD partition, with symbols.
However:
- does not work on gdium (usb i/o errors)
- no countdown due to PMON limitations, so either `bsd' in the PMON
  environment contains a kernel filename to load, and it will get loaded
  immediately, or it doesn't (e.g. the variable does no exist) and you get
  a prompt and can pass options to the kernel. Note that /etc/boot.conf
  commands can still be used in both cases.
- does not work for me when loaded automatically from PMON (put in the `al'
  environment variable). However, `boot $al' works fine. Need to investigate.
@
text
@d1 1
a1 3
#	$OpenBSD$

.include	"${.CURDIR}/../Makefile.inc"
a5 1

d8 1
a8 36

S=		${.CURDIR}/../../../..

CPPFLAGS+=	${SAABI} -mno-abicalls -D_NO_ABICALLS \
		-nostdinc -D__loongson__ \
		-I${S} -I${S}/lib/libsa \
		-I${.OBJDIR} -I${.CURDIR}

LDSCRIPT=	${.CURDIR}/ld.script
LDFLAGS+=	${SALDFLAGS} -T ${LDSCRIPT} -e __start

AFLAGS+=	${SAABI}

SRCS=		start.S
SRCS+=		conf.c cons.c dev.c devopen.c exec.c machdep.c
.PATH:		${S}/arch/loongson/loongson
SRCS+=		pmon.c pmon32.S

#### MI boot code
.PATH:		${S}/stand/boot
SRCS+=		boot.c cmd.c vars.c

#### libkern
.PATH:		${S}/lib/libkern/arch/mips64 ${S}/lib/libkern
SRCS+=		strlcat.c strlcpy.c strlen.c
SRCS+=		udivdi3.c qdivrem.c

.if !make(obj)
.BEGIN:
	@@([ -h machine ] || ln -s ${.CURDIR}/../../include machine)
	@@([ -h mips64 ] || ln -s ${.CURDIR}/../../../mips64/include mips64)
CLEANFILES+= machine mips64
.endif

${PROG}: ${OBJS} ${LIBSA}
	${LD} ${LDFLAGS} -o ${PROG} ${OBJS} -L${LIBSADIR} ${LIBSA}
@

