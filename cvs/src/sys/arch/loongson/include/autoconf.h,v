head	1.17;
access;
symbols
	OPENBSD_6_1:1.15.0.4
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.11.0.10
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.6
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.8
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.6
	OPENBSD_5_0:1.8.0.4
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	xmas_lemote:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2017.05.21.13.00.53;	author visa;	state Exp;
branches;
next	1.16;
commitid	CQbxXzxDtYW7UvJn;

1.16
date	2017.05.10.15.21.02;	author visa;	state Exp;
branches;
next	1.15;
commitid	Iu3GUgmqP9ZOpTol;

1.15
date	2017.02.19.08.59.41;	author visa;	state Exp;
branches;
next	1.14;
commitid	0TmUBawebSoGJLOY;

1.14
date	2017.01.19.15.09.04;	author visa;	state Exp;
branches;
next	1.13;
commitid	8FHInuctPjWFPH6r;

1.13
date	2016.12.11.07.57.14;	author visa;	state Exp;
branches;
next	1.12;
commitid	L2Mn0DF4e8j2GjWB;

1.12
date	2016.11.05.05.28.39;	author visa;	state Exp;
branches;
next	1.11;
commitid	q0eTQiLq9R1JJX2t;

1.11
date	2014.03.29.23.59.49;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2014.03.27.22.16.03;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2012.10.03.21.44.51;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2010.08.31.10.24.46;	author pirofti;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.08.21.59.56;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.02.16.21.31.35;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2010.02.12.19.37.31;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.02.12.08.14.02;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.05.20.51.22;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.09.20.33.16;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.21.18.30.18;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.11.21.18.30.18;	author miod;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Enable radeondrm(4) on loongson to get accelerated graphics
with the RS780E chipset.

OK kettenis@@, jsg@@
@
text
@/*	$OpenBSD: autoconf.h,v 1.16 2017/05/10 15:21:02 visa Exp $ */

/*
 * Copyright (c) 2001-2003 Opsycon AB  (www.opsycon.se / www.opsycon.com)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

/*
 * Definitions used by autoconfiguration.
 */

#ifndef _MACHINE_AUTOCONF_H_
#define _MACHINE_AUTOCONF_H_

#include <machine/bus.h>

struct bonito_config;
struct htb_config;
struct mips_isa_chipset;

/*
 * List of legacy I/O ranges.
 */
struct legacy_io_range {
	bus_addr_t	start;
	bus_size_t	end;	/* inclusive */
};

/*
 * Per platform information.
 */
struct platform {
	int				 system_type;
#define	LOONGSON_2E		0x0000	/* Generic Loongson 2E system */
#define	LOONGSON_YEELOONG	0x0001	/* Lemote Yeeloong */
#define	LOONGSON_GDIUM		0x0002	/* EMTEC Gdium Liberty */
#define	LOONGSON_FULOONG	0x0003	/* Lemote Fuloong */
#define	LOONGSON_LYNLOONG	0x0004	/* Lemote Lynloong */
#define	LOONGSON_EBT700		0x0005	/* eBenton EBT700 */
#define	LOONGSON_3A		0x0066	/* Loongson 2Gq or 3A based system */

	char				*vendor;
	char				*product;

	const struct bonito_config	*bonito_config;
	const struct htb_config		*htb_config;
	struct mips_isa_chipset		*isa_chipset;
	const struct legacy_io_range	*legacy_io_ranges;

	void				(*setup)(void);
	void				(*device_register)(struct device *,
					    void *);

	void				(*powerdown)(void);
	void				(*reset)(void);
	int				(*suspend)(void);
	int				(*resume)(void);

#ifdef MULTIPROCESSOR
	void				(*config_secondary_cpus)(
					    struct device *, cfprint_t);
	void				(*boot_secondary_cpu)(
					    struct cpu_info *);
	int				(*ipi_establish)(int (*)(void *),
					    cpuid_t);
	void				(*ipi_set)(cpuid_t);
	void				(*ipi_clear)(cpuid_t);
#endif /* MULTIPROCESSOR */
};

#define LOONGSON_MAXCPUS	16

extern const struct platform *sys_platform;
extern void *loongson_videobios;
extern uint loongson_cpumask;
extern uint loongson_ver;
extern int nnodes;

#ifdef MULTIPROCESSOR
extern uint64_t cpu_spinup_a0;
extern uint64_t cpu_spinup_sp;
#endif

struct mainbus_attach_args {
	const char	*maa_name;
};

extern struct device *bootdv;
extern char bootdev[];
extern enum devclass bootdev_class;

extern bus_space_tag_t early_mem_t;
extern bus_space_tag_t early_io_t;

#define	REGVAL8(x)	*((volatile uint8_t *)PHYS_TO_XKPHYS((x), CCA_NC))
#define	REGVAL32(x)	*((volatile uint32_t *)PHYS_TO_XKPHYS((x), CCA_NC))
#define	REGVAL64(x)	*((volatile uint64_t *)PHYS_TO_XKPHYS((x), CCA_NC))

#define	REGVAL(x)	REGVAL32(x)

#include <mips64/autoconf.h>

#endif /* _MACHINE_AUTOCONF_H_ */
@


1.16
log
@Add a PCI attach hook mechanism for htb(4), similar to the one
in bonito(4). Use the hook for setting up the PIC.

Discussed with miod@@ long ago
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.15 2017/02/19 08:59:41 visa Exp $ */
d95 1
@


1.15
log
@Add SMP config and IPI control logic for Loongson 3A.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.14 2017/01/19 15:09:04 visa Exp $ */
d39 1
d67 1
@


1.14
log
@Extend struct platform with MP control functions, and add bootstrap code
for secondary CPUs.

Discussed with miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.13 2016/12/11 07:57:14 visa Exp $ */
d96 5
@


1.13
log
@Determine the available CPUs.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.12 2016/11/05 05:28:39 visa Exp $ */
d77 11
@


1.12
log
@Move the definition of REGVAL into a common header to make it usable
outside bonito(4).

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.11 2014/03/29 23:59:49 miod Exp $ */
d79 2
d82 1
d84 1
@


1.11
log
@Update the loongson codebase to recognize the so-called `EFI-like' interface
supposedly provided by newer PMON firmware (on Loongson 2Gq and Loongson 3A
systems).
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.10 2014/03/27 22:16:03 miod Exp $ */
d92 6
@


1.10
log
@Remove dependency from wscons_machdep upon bonito. Instead of hardcoding bonito
as the northbridge, have the per-platform early setup code register functions
providing access to the PCI configuration space, for the wscons code to walk the
PCI space in search of a graphics board.

No functional change yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.9 2012/10/03 21:44:51 miod Exp $ */
d60 1
@


1.9
log
@Do not use <mips64/archtype.h> for loongson model numbers, but rather put the
list in loongson's <machine/autoconf.h> directly. <mips64/archtype.h> is
intended to be only used on ARCBios-like platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.8 2010/08/31 10:24:46 pirofti Exp $ */
d88 3
@


1.8
log
@WIP suspend/resume support for loongson lemote. Okay miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7 2010/05/08 21:59:56 miod Exp $ */
d54 7
@


1.7
log
@Huge work-in-progress commit to support Loongson 2E-based evaluation boards
with a VIA 686 southbridge.

Features:
- 686 setup code (no thanks to PMON for not initializing the beast).
- work in progress ISA interrupt handling code.
- support for vga(4) compatible devices as console, in PC-compatible text mode.
- move legacy (ISA) support code out of bonito(4) to make things clearer.
- support more than 256MB on 2E-based systems.

Tested on a generic 2E-based evaluation board by someone who wishes to remain
anonymous; you know who you are, thank you very much for testing.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.6 2010/02/16 21:31:35 miod Exp $ */
d67 2
@


1.6
log
@Move part of the device_register() logic into platform-specific code. Add
correct root device identification for Gdium (assuming it is booted from the
G-Key), although it will not attach as sd0 if there is anything connected to
the usb port next to the Ethernet port.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.5 2010/02/12 19:37:31 miod Exp $ */
d39 1
d58 1
d70 1
@


1.5
log
@Allow for two more per-platform function pointers, one for extra setup work
while pmon is still available, and one for reset (in addition to the already
existing powerdown routine).
Add reset and powerdown code to the fuloong 2f platform; this also fixes
reset on yeeloong.
Tested by otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.4 2010/02/12 08:14:02 miod Exp $ */
d60 3
d72 4
@


1.4
log
@Overhaul per-platform specific operation by moving all the differences into
per-platform structs or function pointers; therefore bonito(4) no longer needs
to know about particular systems.

While there, bring little bits of Fuloong 2F support, tested on otto@@'s
machine.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.3 2010/02/05 20:51:22 miod Exp $ */
d59 1
d61 1
@


1.3
log
@Blind support for the EMTEC Gdium Liberty netbook. Per-platform configuration
is moved to specific files, and a pointer to the key configuration structure
is now kept in struct sys_config.
bonito(4) interrupt handling is split, to allow PCI+Legacy interrupt systems
(Lemote Yeelong) and PCI-only Legacy-free systems (Gdium) to coexist
peacefully.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.2 2010/01/09 20:33:16 miod Exp $ */
d41 1
a41 1
 * Structure holding all misc config information.
d43 15
a57 2
struct sys_rec {
	int	system_type;
d59 1
a59 2
	/* Bonito configuration */
	const struct bonito_config *sys_bc;
d62 1
a62 1
extern struct sys_rec sys_config;
a66 3

extern const struct bonito_config gdium_bonito;
extern const struct bonito_config yeeloong_bonito;
@


1.2
log
@Define struct cpu_hwinfo, to hold hardware specific information about each
processor (instead of sys_config.cpu[]), and pass it in the attach_args
when attaching cpu devices.

This allows per-cpu information to be gathered late in the bootstrap process,
and not be limited by an arbitrary MAX_CPUS limit; this will suit IP27 and
IP35 systems better.

While there, use this information to make sure delay() uses the speed
information from the cpu it is invoked on.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.1.1.1 2009/11/21 18:30:18 miod Exp $ */
d38 2
d46 2
a47 2
	/* Serial console configuration. */
	struct mips_bus_space console_io;
d55 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.18 2009/06/13 21:48:03 miod Exp $ */
a40 2
#define MAX_CPUS	1

a43 12
	struct cpuinfo {
		u_int16_t type;
		u_int8_t  vers_maj;
		u_int8_t  vers_min;
		u_int16_t fptype;
		u_int8_t  fpvers_maj;
		u_int8_t  fpvers_min;
		u_int32_t clock;
		u_int32_t tlbsize;
		u_int32_t tlbwired;
	} cpu[MAX_CPUS];

d53 2
@


1.1.1.1
log
@By popular demand and peer pressure, check-in work in progress work to support
the Yeelong Lemote mips-based netbook. Kernel bits only for now, needs
polishing; most of this work done during h2k9 last month, although the
porting effort started earlier this year.
@
text
@@
