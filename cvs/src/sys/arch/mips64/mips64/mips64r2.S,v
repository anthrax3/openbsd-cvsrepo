head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.06.11.03.35.30;	author visa;	state Exp;
branches;
next	1.3;
commitid	xcjj4iIMUAMBmIOZ;

1.3
date	2016.08.14.08.23.52;	author visa;	state Exp;
branches;
next	1.2;
commitid	at8t1tG4p7ou4Cj7;

1.2
date	2012.10.03.11.18.23;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.24.20.06.02;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix TLB size computation on OCTEON II and III. The CPUs have utilized
the whole TLB space even before this. However, TLB initialization on
boot and TLB flush on ASID wraparound have been incomplete. These have
caused crashes of processes.
@
text
@/*	$OpenBSD: mips64r2.S,v 1.3 2016/08/14 08:23:52 visa Exp $	*/

/*
 * Copyright (c) 2011 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Routines to access extra coprocessor 0 registers
 */

#include <machine/asm.h>
#include <mips64/mips_cpu.h>

	.set	noreorder
	.set	mips64r2

LEAF(cp0_get_config_1, 0)
	j	ra
	mfc0	v0, COP_0_CONFIG, 1
END(cp0_get_config_1)

LEAF(cp0_get_config_2, 0)
	j	ra
	mfc0	v0, COP_0_CONFIG, 2
END(cp0_get_config_2)

LEAF(cp0_get_config_3, 0)
	j	ra
	mfc0	v0, COP_0_CONFIG, 3
END(cp0_get_config_3)

LEAF(cp0_get_config_4, 0)
	j	ra
	mfc0	v0, COP_0_CONFIG, 4
END(cp0_get_config_4)

LEAF(cp0_get_pagegrain, 0)
	j	ra
	 mfc0	v0, COP_0_TLB_PG_GRAIN
END(cp0_get_pagegrain)

LEAF(cp0_set_pagegrain, 0)
	mtc0	a0, COP_0_TLB_PG_GRAIN
	jr.hb	ra
	 nop
END(cp0_set_pagegrain)
@


1.3
log
@Utilize the TLB Execute-Inhibit bit with non-executable mappings on CPUs
that support the Execute-Inhibit exception. This makes user space W^X
effective on Octeon Plus and later Octeon versions.

Feedback from miod@@, thanks!
No objection from deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mips64r2.S,v 1.2 2012/10/03 11:18:23 miod Exp $	*/
d43 5
@


1.2
log
@Split ever-growing mips <machine/cpu.h> into what 99% of the kernel needs,
which will remain in <machine/cpu.h>, and a new mips_cpu.h containing only the
goriest md details, which are only of interest to a handful set of files; this
is similar in spirit to what alpha does, but here <machine/cpu.h> does not
include the new file.
@
text
@d1 1
a1 1
/*	$OpenBSD: mips64r2.S,v 1.1 2012/03/24 20:06:02 miod Exp $	*/
d43 11
@


1.1
log
@Add a few trivial routines to get mips64r2 specific config registers. Not used
by anything yet, but has been lying in one of my trees for too long.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 1
a24 1
#include <machine/cpu.h>
@

