head	1.8;
access;
symbols
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.12
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2009.06.13.21.48.03;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2009.04.19.12.52.33;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2008.04.07.22.36.26;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.20.18.46.18;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.31.21.35.50;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.10.20.15.47;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.09.14.57.26;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.20.56.03;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Enumerate all available nodes for hardware on IP27/IP35 systems; works to some
extent, but isp(4) on other nodes do not work correctly yet.
@
text
@/*	$OpenBSD: mainbus.c,v 1.7 2009/04/19 12:52:33 miod Exp $ */

/*
 * Copyright (c) 2001-2003 Opsycon AB  (www.opsycon.se / www.opsycon.com)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/reboot.h>

#include <mips64/archtype.h>
#include <machine/autoconf.h>

/* Definition of the mainbus driver. */
int	mbmatch(struct device *, void *, void *);
void	mbattach(struct device *, struct device *, void *);
int	mbprint(void *, const char *);

const struct cfattach mainbus_ca = {
	sizeof(struct device), mbmatch, mbattach
};

struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL
};

int
mbmatch(struct device *parent, void *cfdata, void *aux)
{
	struct cfdata *cf = cfdata;

	if (cf->cf_unit > 0)
		return (0);
	return (1);
}

void
mbattach(struct device *parent, struct device *self, void *aux)
{
	struct confargs nca;

	printf("\n");

	/*
	 * Try to find and attach all of the CPUs in the machine.
	 * ( Right now only one CPU so code is simple )
	 */

	bzero(&nca, sizeof nca);
	nca.ca_name = "cpu";
	config_found(self, &nca, mbprint);
	nca.ca_name = "clock";
	config_found(self, &nca, mbprint);

	switch (sys_config.system_type) {
#ifdef TGT_O2
	case SGI_O2:
		nca.ca_name = "macebus";
		config_found(self, &nca, mbprint);
		nca.ca_name = "gbe";
		config_found(self, &nca, mbprint);
		break;
#endif
#if defined(TGT_ORIGIN200) || defined(TGT_ORIGIN2000) || defined(TGT_OCTANE)
	case SGI_O200:
	case SGI_O300:
	case SGI_OCTANE:
		nca.ca_name = "xbow";
		config_found(self, &nca, mbprint);
		break;
#endif
	}
}

int
mbprint(void *aux, const char *pnp)
{
	if (pnp)
		return (QUIET);
	return (UNCONF);
}
@


1.7
log
@Add heuristics to tell IP27 and IP35 apart, as they will need to be handled
differently at times.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 2008/04/07 22:36:26 miod Exp $ */
@


1.6
log
@Split clock attachment in two parts: a timecounter attachment (at mainbus),
and a time-of-day chip (wherever it gets found).
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2008/02/20 18:46:18 miod Exp $ */
d89 1
@


1.5
log
@Completely overhault attachment rules on sgi. No more indirect configuration
inherited from OpenBSD/arc machines with ISA bus; mainbus children match on
device name and other hierarchies match on simplified locators.
As a bonus, attachment lines in dmesg will now print their locators.

ok jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2005/01/31 21:35:50 grange Exp $ */
d74 2
@


1.4
log
@Un-__P.

ok pefo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.3 2004/08/10 20:15:47 deraadt Exp $ */
a36 5
struct mainbus_softc {
	struct	device sc_dv;
	struct	abus sc_bus;
};

d38 3
a40 3
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);
d42 2
a43 2
struct cfattach mainbus_ca = {
	sizeof(struct mainbus_softc), mbmatch, mbattach
d45 1
d47 1
a47 1
	NULL, "mainbus", DV_DULL, NULL, 0
d50 2
a51 11
void	*mb_intr_establish(void *, u_long, int, int, int (*)(void *),
	    void *, char *);
void	mb_intr_disestablish(void *, void *);
caddr_t	mb_cvtaddr(struct confargs *);
int	mb_matchname(struct confargs *, char *);

static int
mbmatch(parent, cfdata, aux)
	struct device *parent;
	void *cfdata;
	void *aux;
d56 2
a57 2
		return(0);
	return(1);
d60 2
a61 5
static void
mbattach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
a62 1
	struct mainbus_softc *sc = (struct mainbus_softc *)self;
a66 7
	sc->sc_bus.ab_dv = (struct device *)sc;
	sc->sc_bus.ab_type = BUS_MAIN;
	sc->sc_bus.ab_intr_establish = mb_intr_establish;
	sc->sc_bus.ab_intr_disestablish = mb_intr_disestablish;
	sc->sc_bus.ab_cvtaddr = mb_cvtaddr;
	sc->sc_bus.ab_matchname = mb_matchname;

d72 1
a73 1
	nca.ca_bus = &sc->sc_bus;
d76 3
a78 13
	/*
	 *  Attach the clocks.
	 */
	nca.ca_name = "clock";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);

	if (sys_config.system_type == SGI_INDY) {
		nca.ca_name = "indy";
		nca.ca_bus = &sc->sc_bus;
		config_found(self, &nca, mbprint);
	}
	else if (sys_config.system_type == SGI_O2) {
a79 17
		nca.ca_bus = &sc->sc_bus;
		config_found(self, &nca, mbprint);

		nca.ca_name = "macepcibr";
		nca.ca_bus = &sc->sc_bus;
		nca.ca_num = 0;
		config_found(self, &nca, mbprint);
	}
	else if (sys_config.system_type == ALGOR_P4032 ||
            sys_config.system_type == ALGOR_P5064 ||
	    sys_config.system_type == MOMENTUM_CP7000 ||
	    sys_config.system_type == MOMENTUM_CP7000G ||
	    sys_config.system_type == MOMENTUM_JAGUAR ||
	    sys_config.system_type == GALILEO_EV64240) {

		nca.ca_name = "localbus";
		nca.ca_bus = &sc->sc_bus;
d81 1
a81 4

		nca.ca_name = "pcibr";
		nca.ca_bus = &sc->sc_bus;
		nca.ca_num = 0;
d83 6
a88 4

		nca.ca_name = "pcibr";
		nca.ca_bus = &sc->sc_bus;
		nca.ca_num = 1;
d90 2
d95 2
a96 4
static int
mbprint(aux, pnp)
	void *aux;
	const char *pnp;
a100 34
}

void *
mb_intr_establish(icp, irq, type, level, ih_fun, ih_arg, ih_what)
        void *icp;
        u_long irq;     /* XXX pci_intr_handle_t compatible XXX */
        int type;
        int level;
        int (*ih_fun)(void *);
        void *ih_arg;
        char *ih_what;
{
	panic("can never mb_intr_establish");
}

void
mb_intr_disestablish(void *p1, void *p2)
{
	panic("can never mb_intr_disestablish");
}

caddr_t
mb_cvtaddr(ca)
	struct confargs *ca;
{
	return (NULL);
}

int
mb_matchname(ca, name)
	struct confargs *ca;
	char *name;
{
	return (strcmp(name, ca->ca_name) == 0);
@


1.3
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 2004/08/09 14:57:26 pefo Exp $ */
d43 3
a45 3
static int	mbmatch __P((struct device *, void *, void *));
static void	mbattach __P((struct device *, struct device *, void *));
static int	mbprint __P((void *, const char *));
d54 5
a58 5
void	*mb_intr_establish __P((void *, u_long, int, int, int (*)(void *), void *, char
 *));
void	mb_intr_disestablish __P((void *, void *));
caddr_t	mb_cvtaddr __P((struct confargs *));
int	mb_matchname __P((struct confargs *, char *));
d161 1
a161 1
        int (*ih_fun) __P((void *));
@


1.2
log
@Big cleanup. Removed some unused obsolete stuff and fixed copyrights
on some files. Arcbios support is now in, thus detects memorysize and cpu
clock frequency.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1 2004/08/06 20:56:03 pefo Exp $ */
d5 1
a5 1
 * 
@


1.1
log
@initial mips64
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@

