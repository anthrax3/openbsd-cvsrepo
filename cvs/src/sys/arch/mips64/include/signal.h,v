head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.12
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.14
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.6
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.10
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.8
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.4
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.11
date	2016.05.10.18.39.47;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	qfOifNidEGDB2jL1;

1.10
date	2012.12.02.07.03.31;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.09.18.18.37;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.08.14.20.17;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.14.21.46.31;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.29.02.26.49;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.28.22.02.16;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.07.07.29.44;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.10.20.28.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.20.56.02;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.11
log
@SROP mitigation.  sendsig() stores a (per-process ^ &sigcontext) cookie
inside the sigcontext.  sigreturn(2) checks syscall entry was from the
exact PC addr in the (per-process ASLR) sigtramp, verifies the cookie,
and clears it to prevent sigcontext reuse.
not yet tested on landisk, sparc, *88k, socppc.
ok kettenis
@
text
@/*	$OpenBSD: signal.h,v 1.10 2012/12/02 07:03:31 guenther Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)signal.h	8.1 (Berkeley) 6/10/93
 */

#ifndef _MIPS64_SIGNAL_H_
#define _MIPS64_SIGNAL_H_

#include <sys/cdefs.h>

#if !defined(__LANGUAGE_ASSEMBLY)
#include <sys/types.h>

/*
 * Machine-dependent signal definitions
 */
typedef int sig_atomic_t;

#if __BSD_VISIBLE || __XPG_VISIBLE >= 420
/*
 * Information pushed on stack when a signal is delivered.
 * This is used by the kernel to restore state following
 * execution of the signal handler.  It is also made available
 * to the handler to allow it to restore state properly if
 * a non-standard exit is performed.
 */
struct	sigcontext {
	long	sc_cookie;
	long	 sc_mask;	/* signal mask to restore XXX should be int */
	__register_t sc_pc;	/* pc at time of signal */
	__register_t sc_regs[32]; /* processor regs 0 to 31 */
	__register_t mullo;	/* mullo and mulhi registers... */
	__register_t mulhi;	/* mullo and mulhi registers... */
	f_register_t sc_fpregs[33]; /* fp regs 0 to 31 and csr */
	long	sc_fpused;	/* fp has been used */
	long	sc_fpc_eir;	/* floating point exception instruction reg */
	long	xxx[8];		/* XXX reserved */
};
#endif /* __BSD_VISIBLE || __XPG_VISIBLE >= 420 */

#else /* __LANGUAGE_ASSEMBLY */
#define SC_ONSTACK	(0 * REGSZ)
#define	SC_MASK		(1 * REGSZ)
#define	SC_PC		(2 * REGSZ)
#define	SC_REGS		(3 * REGSZ)
#define	SC_MULLO	(35 * REGSZ)
#define	SC_MULHI	(36 * REGSZ)
#define	SC_FPREGS	(37 * REGSZ)
#define	SC_FPUSED	(70 * REGSZ)
#define	SC_FPC_EIR	(71 * REGSZ)
#endif /* __LANGUAGE_ASSEMBLY */

#endif	/* !_MIPS64_SIGNAL_H_ */
@


1.10
log
@Determine whether we're currently on the alternative signal stack
dynamically, by comparing the stack pointer against the altstack
base and size, so that you get the correct answer if you longjmp
out of the signal handler, as tested by regress/sys/kern/stackjmp/.
Also, fix alt stack handling on vax, where it was completely broken.

Testing and corrections by miod@@, krw@@, tobiasu@@, pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.9 2011/03/23 16:54:36 pirofti Exp $	*/
d59 2
a60 2
	long	__sc_unused;
	long	 sc_mask;	/* signal mask to restore */
@


1.9
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.8 2006/01/09 18:18:37 millert Exp $	*/
d59 1
a59 1
	long	sc_onstack;	/* sigstack state to restore */
@


1.8
log
@Use protected version of register_t in struct sigcontext for the
case where _XOPEN_SOURCE was defined but BSD-specific types are
not visible.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.7 2006/01/08 14:20:17 millert Exp $	*/
d37 2
a38 2
#ifndef _MIPS_SIGNAL_H_
#define _MIPS_SIGNAL_H_
d84 1
a84 1
#endif	/* !_MIPS_SIGNAL_H_ */
@


1.7
log
@Expose struct sigcontext, struct sigstat and struct sigaltstack for XPG4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.6 2005/12/14 21:46:31 millert Exp $	*/
d61 4
a64 4
	register_t sc_pc;	/* pc at time of signal */
	register_t sc_regs[32];	/* processor regs 0 to 31 */
	register_t mullo;	/* mullo and mulhi registers... */
	register_t mulhi;	/* mullo and mulhi registers... */
@


1.6
log
@convert _FOO_SOURCE -> __FOO_VISIBLE in machine.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.5 2005/11/29 02:26:49 deraadt Exp $	*/
d50 1
a50 1
#if __BSD_VISIBLE
d70 1
a70 1
#endif	/* __BSD_VISIBLE */
@


1.5
log
@backout miod's change because he did not compile libc.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.3 2005/08/07 07:29:44 miod Exp $	*/
d40 2
d50 1
a50 2
#ifndef _ANSI_SOURCE

d70 1
a70 1
#endif	/* !_ANSI_SOURCE */
@


1.4
log
@Remove older-than-gramps poor man's assym.h defines; .S files do not even need
these constants.
@
text
@d40 1
d70 12
@


1.3
log
@Remove advertising clause from UCB licenses; ok deraad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.2 2004/08/10 20:28:13 deraadt Exp $	*/
a39 1
#if !defined(__LANGUAGE_ASSEMBLY)
a68 12

#else /* __LANGUAGE_ASSEMBLY */
#define SC_ONSTACK	(0 * REGSZ)
#define	SC_MASK		(1 * REGSZ)
#define	SC_PC		(2 * REGSZ)
#define	SC_REGS		(3 * REGSZ)
#define	SC_MULLO	(35 * REGSZ)
#define	SC_MULHI	(36 * REGSZ)
#define	SC_FPREGS	(37 * REGSZ)
#define	SC_FPUSED	(70 * REGSZ)
#define	SC_FPC_EIR	(71 * REGSZ)
#endif /* __LANGUAGE_ASSEMBLY */
@


1.2
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1 2004/08/06 20:56:02 pefo Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.1
log
@initial mips64
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.2 1999/01/27 04:10:03 imp Exp $	*/
d71 1
a71 1
	long	xxx[8];		/* XXX reserved */ 
@

