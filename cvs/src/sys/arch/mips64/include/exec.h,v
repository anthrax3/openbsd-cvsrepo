head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.8.0.4
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.14
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.1.0.22
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.18
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.16
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.14
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.12
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2017.08.13.14.56.09;	author visa;	state Exp;
branches;
next	1.8;
commitid	tMVYo9X3LCLkm1ug;

1.8
date	2017.02.08.05.09.25;	author guenther;	state Exp;
branches;
next	1.7;
commitid	V3fgN8BO1mri8xSU;

1.7
date	2015.08.29.01.58.39;	author guenther;	state Exp;
branches;
next	1.6;
commitid	tXJb6vLxru5vPZNh;

1.6
date	2013.02.09.19.25.13;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2012.09.11.15.44.18;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2009.12.12.20.03.16;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2009.11.30.18.41.13;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.19.20.13.51;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.18.19.05.36;	author grange;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Make R_MIPS_* defines available via <machine/reloc.h>.

OK guenther@@
@
text
@/*	$OpenBSD: exec.h,v 1.8 2017/02/08 05:09:25 guenther Exp $	*/

/*
 * Copyright (c) 1996-2004 Per Fogelstrom, Opsycon AB
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MIPS64_EXEC_H_
#define _MIPS64_EXEC_H_

#define	__LDPGSZ	16384

#define	ARCH_ELFSIZE 64
#define ELF_TARG_CLASS  ELFCLASS64

#if defined(__MIPSEB__)
#define ELF_TARG_DATA		ELFDATA2MSB
#else
#define ELF_TARG_DATA		ELFDATA2LSB
#endif
#define ELF_TARG_MACH		EM_MIPS

/* Information taken from MIPS ABI supplement */

/* Architecture dependent Segment types - p_type */
#define PT_MIPS_REGINFO 0x70000000      /* Register usage information */

/* Architecture dependent d_tag field for Elf32_Dyn.  */
#define DT_MIPS_RLD_VERSION  0x70000001 /* Runtime Linker Interface ID */
#define DT_MIPS_TIME_STAMP   0x70000002 /* Timestamp */
#define DT_MIPS_ICHECKSUM    0x70000003 /* Cksum of ext. str. and com. sizes */
#define DT_MIPS_IVERSION     0x70000004 /* Version string (string tbl index) */
#define DT_MIPS_FLAGS        0x70000005 /* Flags */
#define DT_MIPS_BASE_ADDRESS 0x70000006 /* Segment base address */
#define DT_MIPS_CONFLICT     0x70000008 /* Adr of .conflict section */
#define DT_MIPS_LIBLIST      0x70000009 /* Address of .liblist section */
#define DT_MIPS_LOCAL_GOTNO  0x7000000a /* Number of local .GOT entries */
#define DT_MIPS_CONFLICTNO   0x7000000b /* Number of .conflict entries */
#define DT_MIPS_LIBLISTNO    0x70000010 /* Number of .liblist entries */
#define DT_MIPS_SYMTABNO     0x70000011 /* Number of .dynsym entries */
#define DT_MIPS_UNREFEXTNO   0x70000012 /* First external DYNSYM */
#define DT_MIPS_GOTSYM       0x70000013 /* First GOT entry in .dynsym */
#define DT_MIPS_HIPAGENO     0x70000014 /* Number of GOT page table entries */
#define DT_MIPS_RLD_MAP      0x70000016 /* Address of debug map pointer */

#define DT_PROCNUM (DT_MIPS_RLD_MAP - DT_LOPROC + 1)

/*
 * Legal values for e_flags field of Elf32_Ehdr.
 */
#define EF_MIPS_NOREORDER	0x00000001	/* .noreorder was used */
#define EF_MIPS_PIC		0x00000002	/* Contains PIC code */
#define EF_MIPS_CPIC		0x00000004	/* Uses PIC calling sequence */
#define	EF_MIPS_ABI2		0x00000020	/* -n32 on Irix 6 */
#define	EF_MIPS_32BITMODE	0x00000100	/* 64 bit in 32 bit mode... */
#define EF_MIPS_ARCH		0xf0000000	/* MIPS architecture level */
#define	E_MIPS_ARCH_1		0x00000000
#define	E_MIPS_ARCH_2		0x10000000
#define	E_MIPS_ARCH_3		0x20000000
#define	E_MIPS_ARCH_4		0x30000000
#define	EF_MIPS_ABI		0x0000f000	/* ABI level */
#define	E_MIPS_ABI_NONE		0x00000000	/* ABI level not set */
#define	E_MIPS_ABI_O32		0x00001000
#define	E_MIPS_ABI_O64		0x00002000
#define	E_MIPS_ABI_EABI32	0x00004000
#define	E_MIPS_ABI_EABI64	0x00004000

/*
 * Mips special sections.
 */
#define	SHN_MIPS_ACOMMON	0xff00		/* Allocated common symbols */
#define	SHN_MIPS_SCOMMON	0xff03		/* Small common symbols */
#define	SHN_MIPS_SUNDEFINED	0xff04		/* Small undefined symbols */

/*
 * Legal values for sh_type field of Elf32_Shdr.
 */
#define	SHT_MIPS_LIBLIST  0x70000000	/* Shared objects used in link */
#define	SHT_MIPS_CONFLICT 0x70000002	/* Conflicting symbols */
#define	SHT_MIPS_GPTAB    0x70000003	/* Global data area sizes */
#define	SHT_MIPS_UCODE    0x70000004	/* Reserved for SGI/MIPS compilers */
#define	SHT_MIPS_DEBUG    0x70000005	/* MIPS ECOFF debugging information */
#define	SHT_MIPS_REGINFO  0x70000006	/* Register usage information */

/*
 * Legal values for sh_flags field of Elf32_Shdr.
 */
#define	SHF_MIPS_GPREL	0x10000000	/* Must be part of global data area */

#if 0
/*
 * Entries found in sections of type SHT_MIPS_GPTAB.
 */
typedef union {
	struct {
		Elf32_Word gt_current_g_value;	/* -G val used in compilation */
		Elf32_Word gt_unused;	/* Not used */
	} gt_header;			/* First entry in section */
	struct {
		Elf32_Word gt_g_value;	/* If this val were used for -G */
		Elf32_Word gt_bytes;	/* This many bytes would be used */
	} gt_entry;			/* Subsequent entries in section */
} Elf32_gptab;

/*
 * Entry found in sections of type SHT_MIPS_REGINFO.
 */
typedef struct {
	Elf32_Word	ri_gprmask;	/* General registers used */
	Elf32_Word	ri_cprmask[4];	/* Coprocessor registers used */
	Elf32_Sword	ri_gp_value;	/* $gp register value */
} Elf32_RegInfo;
#endif

#endif	/* !_MIPS64_EXEC_H_ */
@


1.8
log
@In exec_elf.c: expand ELFNAME(), ELFNAME2(), and ELFNAMEEND() except
leaving out the size, so that
	ELFNAME2(exec,makecmds)
becomes
	exec_elf_makecmds
instead of
	exec_elf{32,64}_makecmds
and then delete the ELFNAME2() and ELFNAMEEND() macros.

Move the prototypes for functions local to exec_elf.c to there from
exec_elf.h.

Simplify the SMALL_KERNEL conditionals around the ELF coredump code.

Change exec_conf.c to use the size-generic names and macros

Remove exec_elf{32,64}.c and just build exec_elf.c; delete the
_KERN_DO_ELF and _KERN_DO_ELF64 #defines.

ok jca@@, encouragement from deraadt@@ and tom@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.7 2015/08/29 01:58:39 guenther Exp $	*/
a134 24


/*
 * Mips relocations.
 */

#define	R_MIPS_NONE	0	/* No reloc */
#define	R_MIPS_16	1	/* Direct 16 bit */
#define	R_MIPS_32	2	/* Direct 32 bit */
#define	R_MIPS_REL32	3	/* PC relative 32 bit */
#define	R_MIPS_26	4	/* Direct 26 bit shifted */
#define	R_MIPS_HI16	5	/* High 16 bit */
#define	R_MIPS_LO16	6	/* Low 16 bit */
#define	R_MIPS_GPREL16	7	/* GP relative 16 bit */
#define	R_MIPS_LITERAL	8	/* 16 bit literal entry */
#define	R_MIPS_GOT16	9	/* 16 bit GOT entry */
#define	R_MIPS_PC16	10	/* PC relative 16 bit */
#define	R_MIPS_CALL16	11	/* 16 bit GOT entry for function */
#define	R_MIPS_GPREL32	12	/* GP relative 32 bit */

#define	R_MIPS_64	18

#define	R_MIPS_REL32_64	((R_MIPS_64 << 8) | R_MIPS_REL32)

@


1.7
log
@_NLIST_DO_ELF is no longer needed: it's the only option

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.6 2013/02/09 19:25:13 miod Exp $	*/
a42 2

#define _KERN_DO_ELF64
@


1.6
log
@No longer define EXEC_SCRIPT (probably coming from old PefoBSD). Also,
DB_ELFSIZE ought to be defined in <machine/db_machdep.h>, not <machine/exec.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.5 2012/09/11 15:44:18 deraadt Exp $	*/
a42 2

#define _NLIST_DO_ELF
@


1.5
log
@Remove the 'OLF method' used for the transition from a.out to ELF and
for all the compat layers which are now gone.  Linux compat still works
because it always used another method in any case, and nothing looks at
p_os anymore.
ok jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.4 2009/12/12 20:03:16 miod Exp $	*/
a33 9
/*
 *  Define what exec "formats" we should handle.
 */
#define NATIVE_ELFSIZE 64
#define	EXEC_SCRIPT

/*
 *  If included from sys/exec.h define kernels ELF format.
 */
a34 1
#define DB_ELFSIZE 64
d48 1
a48 1
/* Information taken from MIPS ABI supplemental */
@


1.4
log
@unifdef -D__LP64__
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.3 2009/11/30 18:41:13 miod Exp $	*/
a36 1
#define NATIVE_EXEC_ELF
@


1.3
log
@Crank __LDPGSZ from 4KB to 16KB, in preparation for a kernel page size
increase as well.

Binaries compiled before this change will not work once the kernel page size
is cranked (in a few weeks), so you might want to update your userland and
packages soon.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.2 2009/11/19 20:13:51 miod Exp $	*/
a43 1
#ifdef __LP64__
a46 5
#else
#define	ARCH_ELFSIZE 32
#define DB_ELFSIZE 32
#define ELF_TARG_CLASS  ELFCLASS32
#endif
a56 1
#if defined(_LP64)
a57 3
#else
#define _KERN_DO_ELF
#endif
@


1.2
log
@Remove code allowing native binaries with O32 ABI to run, there aren't any...
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.1 2004/10/18 19:05:36 grange Exp $	*/
d32 1
a32 1
#define	__LDPGSZ	4096
@


1.1
log
@Move exec.h out from sgi to share it with other mips64 ports; with
a tip from miod@@.

ok pefo@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a64 3
#if defined(COMPAT_O32)
#define _KERN_DO_ELF
#endif
@

