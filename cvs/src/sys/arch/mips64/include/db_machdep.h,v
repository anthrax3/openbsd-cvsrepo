head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.2
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.15.0.6
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.8
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.13.0.8
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4;
locks; strict;
comment	@ * @;


1.17
date	2016.04.27.11.10.48;	author mpi;	state Exp;
branches;
next	1.16;
commitid	57btDderNGPG4fjG;

1.16
date	2016.03.06.19.42.27;	author mpi;	state Exp;
branches;
next	1.15;
commitid	cyYKarj4qRTft4gD;

1.15
date	2014.03.21.23.05.41;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2014.03.16.20.31.46;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2013.02.09.19.25.13;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.11;

1.11
date	2010.11.27.19.57.23;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2010.09.20.23.37.08;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2010.08.30.08.52.10;	author syuu;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.19.15.23.37;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.31.21.35.49;	author grange;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.04.21.14.35;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.21.05.51.13;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.09.22.21.41;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.10.20.28.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.10.20.07.15;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.20.56.01;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.17
log
@G/C DDB_REGS.
@
text
@/*	$OpenBSD: db_machdep.h,v 1.16 2016/03/06 19:42:27 mpi Exp $ */

/*
 * Copyright (c) 1998-2003 Opsycon AB (www.opsycon.se)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef	_MIPS64_DB_MACHDEP_H_
#define	_MIPS64_DB_MACHDEP_H_

#include <machine/frame.h>
#include <machine/trap.h>
#include <uvm/uvm_param.h>

#define DB_MACHINE_COMMANDS	/* We have machine specific commands */

typedef struct trapframe db_regs_t;
extern db_regs_t	ddb_regs;

typedef	long		db_expr_t;
typedef vaddr_t		db_addr_t;

#define	SOFTWARE_SSTEP		/* Need software single step */
#define	SOFTWARE_SSTEP_EMUL	/* next_instr_address() emulates 100% */
db_addr_t	next_instr_address(db_addr_t, boolean_t);
#define	BKPT_SIZE   (4)
#define	BKPT_SET(ins)	(BREAK_DDB)
#define	DB_VALID_BREAKPOINT(addr)	(((addr) & 3) == 0)

#define	IS_BREAKPOINT_TRAP(type, code)	((type) == T_BREAK)
#define IS_WATCHPOINT_TRAP(type, code)	(0)	/* XXX mips3 watchpoint */

#define	PC_REGS(regs)	((db_addr_t)(regs)->pc)
#define	SET_PC_REGS(regs, value)	(regs)->pc = (register_t)(value)

/*
 *  Test of instructions to see class.
 */
#define	inst_branch(i)		(classify_insn(i) == INSNCLASS_BRANCH)
#define	inst_trap_return(i)	((i) & 0)
#define	inst_call(i)		(classify_insn(i) == INSNCLASS_CALL)
#define	inst_return(i)		((i) == 0x03e00008)

void db_machine_init(void);

int db_enter_ddb(void);
void db_startcpu(int);
void db_stopcpu(int);

int	dbmd_print_insn(uint32_t, db_addr_t, int (*)(const char *, ...));

extern struct mutex ddb_mp_mutex;

#define DDB_STATE_NOT_RUNNING	0
#define DDB_STATE_RUNNING	1
#define DDB_STATE_EXITING	2

#endif	/* !_MIPS64_DB_MACHDEP_H_ */
@


1.16
log
@Rename mips64's trap_frame into trapframe.

For coherency with other archs and in order to use it in MI code.

ok visa@@, tobiasu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.15 2014/03/21 23:05:41 miod Exp $ */
a55 1
#define DDB_REGS	(&ddb_regs)
@


1.15
log
@Rename db_inst_type() into classify_insn() and make that function available
outside of ddb. It will be used by regular kernel code shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.14 2014/03/16 20:31:46 guenther Exp $ */
d38 1
a38 1
typedef struct trap_frame db_regs_t;
@


1.14
log
@DDB supports ELF symbols are all archs, and it's always the same as the
native size, so eliminate the #defines.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.13 2013/02/09 19:25:13 miod Exp $ */
d61 1
a61 4
#define	IT_CALL		0x01
#define	IT_BRANCH	0x02

#define	inst_branch(i)	(db_inst_type(i) == IT_BRANCH)
d63 2
a64 2
#define	inst_call(i)	(db_inst_type(i) == IT_CALL)
#define	inst_return(i)	((i) == 0x03e00008)
a65 1
int db_inst_type(int);
@


1.13
log
@No longer define EXEC_SCRIPT (probably coming from old PefoBSD). Also,
DB_ELFSIZE ought to be defined in <machine/db_machdep.h>, not <machine/exec.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.12 2011/03/23 16:54:36 pirofti Exp $ */
a36 2
#define	DB_ELF_SYMBOLS		/* Elf style symbol table support */
#define	DB_ELFSIZE	64
@


1.12
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.11 2010/11/27 19:57:23 miod Exp $ */
d38 1
@


1.11
log
@Remove ddb single-step load and store counters. Most platforms do not
implement them, and they are of questionable usefulness.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.10 2010/09/20 23:37:08 miod Exp $ */
d29 2
a30 2
#ifndef	_MIPS_DB_MACHDEP_H_
#define	_MIPS_DB_MACHDEP_H_
d85 1
a85 1
#endif	/* !_MIPS_DB_MACHDEP_H_ */
@


1.10
log
@Make md_printins() get the printf-like function as an extra parameter, and
make it visible so that md parts of the kernel can use it for debug messages.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.9 2010/08/30 08:52:10 syuu Exp $ */
a63 2
#define	IT_LOAD		0x03
#define	IT_STORE	0x04
a68 2
#define	inst_load(i)	(db_inst_type(i) == IT_LOAD)
#define	inst_store(i)	(db_inst_type(i) == IT_STORE)
@


1.9
log
@ddbcpu for sgi. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.8 2005/04/19 15:23:37 miod Exp $ */
d80 2
@


1.8
log
@Nuke DB_NO_AOUT, and have platforms with a.out symbols explicitely provide
DB_AOUT_SYMBOLS.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.7 2005/01/31 21:35:49 grange Exp $ */
d76 10
@


1.7
log
@Un-__P.

ok pefo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.6 2005/01/04 21:14:35 espie Exp $ */
a37 1
#define	DB_NO_AOUT		/* For crying out loud! */
@


1.6
log
@SET_PC_REGS, arches tested between me and miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.5 2004/09/21 05:51:13 miod Exp $ */
d48 1
a48 1
db_addr_t	next_instr_address __P((db_addr_t, boolean_t));
d75 2
a76 2
int db_inst_type __P((int));
void db_machine_init __P((void));
@


1.5
log
@Nuke commons.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4 2004/09/09 22:21:41 pefo Exp $ */
d57 1
@


1.4
log
@these should have gone in with the other 64 bit changes
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.3 2004/08/10 20:28:13 deraadt Exp $ */
d41 1
a41 1
db_regs_t		ddb_regs;
@


1.3
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.2 2004/08/10 20:07:15 pefo Exp $ */
a38 1
#define	DB_ELFSIZE	32	/* This is the size of symtab stuff */
@


1.2
log
@remove MID_MACHINE from here. one is enough
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.1 2004/08/06 20:56:01 pefo Exp $ */
d5 1
a5 1
 * 
@


1.1
log
@initial mips64
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.2 1998/09/15 10:50:12 pefo Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
a35 1
#define	MID_MACHINE 0		/* XXX booo... */
@

