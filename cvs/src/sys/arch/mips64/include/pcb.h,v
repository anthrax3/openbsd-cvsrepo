head	1.8;
access;
symbols
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.6
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.18
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.14
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2016.03.06.19.42.27;	author mpi;	state Exp;
branches;
next	1.7;
commitid	cyYKarj4qRTft4gD;

1.7
date	2015.05.05.02.13.47;	author guenther;	state Exp;
branches;
next	1.6;
commitid	dNPv28CJI5BxtRGW;

1.6
date	2014.03.22.00.01.04;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2010.02.13.14.04.45;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.16.03.55.46;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.07.07.29.44;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.20.56.02;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Rename mips64's trap_frame into trapframe.

For coherency with other archs and in order to use it in MI code.

ok visa@@, tobiasu@@
@
text
@/*      $OpenBSD: pcb.h,v 1.7 2015/05/05 02:13:47 guenther Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department and Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: Utah Hdr: pcb.h 1.13 89/04/23
 *	from: @@(#)pcb.h	8.1 (Berkeley) 6/10/93
 */

#ifndef _MIPS64_PCB_H_
#define _MIPS64_PCB_H_

#include <machine/frame.h>

/*
 * MIPS process control block. This is first in the U-area.
 */
struct pcb {
	struct trapframe pcb_regs;	/* saved CPU and registers */
	struct {
		register_t val[13];
	} pcb_context;			/* kernel context for resume */
	int	pcb_onfault;		/* for copyin/copyout faults */
	void	*pcb_segtab;		/* copy of pmap pm_segtab */
	uint	pcb_nwired;		/* number of extra wired TLB entries */
	vaddr_t	pcb_wiredva;		/* va of above */
	vaddr_t	pcb_wiredpc;		/* last tracked pc value within above */
};

#endif	/* !_MIPS64_PCB_H_ */
@


1.7
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.6 2014/03/22 00:01:04 miod Exp $	*/
d49 1
a49 1
	struct trap_frame pcb_regs;	/* saved CPU and registers */
@


1.6
log
@Second draft of my attempt to workaround the infamous R4000 end-of-page errata,
affecting R4000 processors revision 2.x and below (found on most R4000 Indigo
and a few R4000 Indy).

Since this errata gets triggered by TLB misses when the code flow crosses a
page boundary, this code attempts to identify code pages prone to trigger the
errata, and force the next page to be mapped for at least as long as the
current pc lies in the troublesome page, by creating wiring extra TLB entries.
These entries get recycled in a lazy-but-aggressive-enough way, either because
of context switches, or because of further tlb exceptions reaching trap().

The errata workaround code is only compiled on R4000-capable kernels (i.e.
sgi GENERIC-IP22 and nothing else), and only enabled on affected processors
(i.e. not on R4000 revision 3, or on R4400).

There is still room for improvemnt in unlucky cases, but in this simple enough
incarnation, this allows my R4000 2.2 Indigo to finally reliably boot multiuser,
even though both /sbin/init and /bin/sh contain code pages which can trigger
the errata.
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.5 2011/03/23 16:54:36 pirofti Exp $	*/
a57 8
};

/*
 * The pcb is augmented with machine-dependent additional data for
 * core dumps. For the MIPS, there is nothing to add.
 */
struct md_coredump {
	long	md_pad[8];
@


1.5
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.4 2010/02/13 14:04:45 miod Exp $	*/
d55 3
@


1.4
log
@Since we don't use the saved ipl in pcb anymore, remove it from the struct
layout.
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.3 2005/12/16 03:55:46 deraadt Exp $	*/
d40 2
a41 2
#ifndef _MIPS_PCB_H_
#define _MIPS_PCB_H_
d65 1
a65 1
#endif	/* !_MIPS_PCB_H_ */
@


1.3
log
@do not use a label_t in the pcb.  label_t may not exist in all contexts,
and causes a real pain with _KERNEL that we wish to avoid for sys/user.h
so clone a label_t thingy here
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.2 2005/08/07 07:29:44 miod Exp $	*/
d51 1
a51 1
		register_t val[14];
a53 1
	int	pcb_kernel;
@


1.2
log
@Remove advertising clause from UCB licenses; ok deraad@@
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.1 2004/08/06 20:56:02 pefo Exp $	*/
d48 1
a48 2
struct pcb
{
d50 3
a52 1
	label_t	pcb_context;		/* kernel context for resume */
@


1.1
log
@initial mips64
@
text
@d1 1
a1 1
/*      $OpenBSD: pcb.h,v 1.3 1998/09/15 10:50:12 pefo Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@

