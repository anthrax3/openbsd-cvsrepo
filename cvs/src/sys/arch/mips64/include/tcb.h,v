head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.1.0.24
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@ * @;


1.4
date	2017.04.20.16.07.52;	author visa;	state Exp;
branches;
next	1.3;
commitid	9CgPZOFcHiM9FgHe;

1.3
date	2017.04.20.15.42.26;	author visa;	state Exp;
branches;
next	1.2;
commitid	pxUSNsLcOM556nqP;

1.2
date	2017.04.13.03.52.25;	author guenther;	state Exp;
branches;
next	1.1;
commitid	ziRFTEFDWOo0M88l;

1.1
date	2011.10.27.04.01.17;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Get TCB address using the RDHWR instruction instead of __get_tcb().
This gives fast access to the address on systems that implement
the UserLocal register. TCB caching is still used when running
in the single-threaded mode in order not to penalize old systems.

The kernel counterpart of this change must be in place before
using this diff!

With guenther@@
@
text
@/*	$OpenBSD: tcb.h,v 1.3 2017/04/20 15:42:26 visa Exp $	*/

/*
 * Copyright (c) 2011 Philip Guenther <guenther@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MACHINE_TCB_H_
#define _MACHINE_TCB_H_

#ifdef _KERNEL

static inline void
__mips64_set_tcb(struct proc *p, void *tcb)
{
#ifdef CPU_MIPS64R2
	extern int cpu_has_userlocal;

	if (cpu_has_userlocal)
		cp0_set_userlocal(tcb);
#endif

	p->p_md.md_tcb = tcb;
}

#define TCB_SET(p, addr)	__mips64_set_tcb(p, addr)
#define TCB_GET(p)		((p)->p_md.md_tcb)

#else /* _KERNEL */

/* ELF TLS ABI calls for small TCB, with static TLS data after it */
#define TLS_VARIANT	1

static inline void *
__mips64_get_tcb(void)
{
	void *tcb;

	/*
	 * This invokes emulation in kernel if the system does not implement
	 * the RDHWR instruction or the UserLocal register.
	 */
	__asm__ volatile (
	"	.set	push\n"
	"	.set	mips64r2\n"
	"	rdhwr	%0, $29\n"
	"	.set	pop\n" : "=r" (tcb));
	return tcb;
}

#define TCB_GET()		__mips64_get_tcb()

#endif /* _KERNEL */

#endif /* _MACHINE_TCB_H_ */
@


1.3
log
@Make TCB address available to userspace via the UserLocal register.
This lets programs get the address without a system call on OCTEON II
and later.

Add UserLocal load emulation for systems that do not implement
the RDHWR instruction or the UserLocal register.

OK guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcb.h,v 1.2 2017/04/13 03:52:25 guenther Exp $	*/
d44 19
@


1.2
log
@Provide mips64 with kernel-facing TCB_{GET,SET} macros that store it
in struct mdproc.  With that, all archs have those and the __HAVE_MD_TCB
macro can be unifdef'ed as always defined.

ok kettenis@@ visa@@ jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcb.h,v 1.1 2011/10/27 04:01:17 guenther Exp $	*/
d24 14
a37 2
/* Not a real register; just saved in struct mdproc */
#define TCB_SET(p, addr)	((p)->p_md.md_tcb = (addr))
@


1.1
log
@Specify the TLS variant for each platform.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 3
a26 1
#error "not yet"
@

