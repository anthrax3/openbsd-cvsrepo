head	1.35;
access;
symbols
	OPENBSD_6_2:1.35.0.6
	OPENBSD_6_2_BASE:1.35
	OPENBSD_6_1:1.35.0.4
	OPENBSD_6_1_BASE:1.35
	OPENBSD_6_0:1.34.0.4
	OPENBSD_6_0_BASE:1.34
	OPENBSD_5_9:1.34.0.2
	OPENBSD_5_9_BASE:1.34
	OPENBSD_5_8:1.33.0.12
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.33.0.4
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.33.0.8
	OPENBSD_5_6_BASE:1.33
	OPENBSD_5_5:1.33.0.6
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.30.0.6
	OPENBSD_5_3_BASE:1.30
	OPENBSD_5_2:1.30.0.4
	OPENBSD_5_2_BASE:1.30
	OPENBSD_5_1_BASE:1.30
	OPENBSD_5_1:1.30.0.2
	OPENBSD_5_0:1.29.0.2
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.27.0.2
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.26.0.4
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.26.0.2
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.20.0.4
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.18.0.4
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.2
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4;
locks; strict;
comment	@ * @;


1.35
date	2016.09.03.14.25.27;	author bluhm;	state Exp;
branches;
next	1.34;
commitid	9KYyCUntEsgBdw9n;

1.34
date	2015.11.02.20.13.45;	author miod;	state Exp;
branches;
next	1.33;
commitid	IjuTf8lKFxLV6VnD;

1.33
date	2013.03.26.05.04.10;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2013.03.23.16.12.25;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.29;

1.29
date	2011.04.07.15.45.17;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.27;

1.27
date	2010.11.28.20.35.15;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2009.12.13.08.27.15;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2009.12.12.20.10.22;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2009.12.12.20.08.07;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2009.12.08.22.13.20;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2009.12.07.19.05.57;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2009.12.07.18.58.32;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2009.05.22.20.37.53;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2009.05.06.20.02.44;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2008.05.04.09.57.47;	author martin;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.16.20.01.00;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2007.04.05.16.04.17;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.19.01.47.24;	author martin;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.14.11.45.43;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.04.20.27.35;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.13.01.56.44;	author martin;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.06.10.26.56;	author martin;	state Exp;
branches;
next	1.9;

1.9
date	2005.09.12.23.05.05;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.07.07.29.44;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.31.15.31.15;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.31.21.35.49;	author grange;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.17.18.31.51;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.09.22.21.41;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.10.20.28.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.06.22.31.31;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.20.56.02;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Increase the number of mbufs on most architectures.  This is based
on a guess how much memory a typical machine has.  If the value is
too high, users may run out of kernel memory.  Then we will have
to adjust this again.
OK claudio@@ deraadt@@
@
text
@/*      $OpenBSD: param.h,v 1.34 2015/11/02 20:13:45 miod Exp $ */

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department and Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MIPS64_PARAM_H_
#define	_MIPS64_PARAM_H_

#ifdef _KERNEL
#include <machine/cpu.h>
#endif

#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#ifdef _KERNEL

#ifndef KERNBASE
#define	KERNBASE	0xffffffff80000000L	/* start of kernel virtual */
#endif

#define	NBPG		PAGE_SIZE
#define	PGSHIFT		PAGE_SHIFT
#define	PGOFSET		PAGE_MASK

#define	USPACE		16384
#define	UPAGES		(USPACE >> PAGE_SHIFT)
#if PAGE_SHIFT > 12
#define	USPACE_ALIGN	0
#else
#define	USPACE_ALIGN	(2 * PAGE_SIZE)	/* align to an even TLB boundary */
#endif

#define	NMBCLUSTERS	(8 * 1024)		/* max cluster allocation */

#ifndef MSGBUFSIZE
#if PAGE_SHIFT > 12
#define	MSGBUFSIZE	PAGE_SIZE
#else
#define	MSGBUFSIZE	8192
#endif
#endif

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT  ((128 * 1024 * 1024) >> PAGE_SHIFT)

#ifndef _LOCORE
#define	DELAY(n)	delay(n)
void delay(int);
#endif

#endif /* _KERNEL */

#endif /* _MIPS64_PARAM_H_ */
@


1.34
log
@Only define KERNBASE if defined(_KERNEL), for nothing in userland needs it,
and only if not already defined. Allows for KERNBASE to be defined elsewhere.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.33 2013/03/26 05:04:10 deraadt Exp $ */
d65 1
a65 1
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */
@


1.33
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.32 2013/03/25 17:46:24 deraadt Exp $ */
d47 3
d51 1
a51 2

#ifdef _KERNEL
@


1.32
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.31 2013/03/23 16:12:25 deraadt Exp $ */
a45 2
#define	PGSHIFT		PAGE_SHIFT
#define	PGOFSET		PAGE_MASK
d52 2
@


1.31
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.30 2011/09/08 03:40:32 guenther Exp $ */
a42 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.30
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.29 2011/04/07 15:45:17 miod Exp $ */
a34 3
 *
 *	from: Utah Hdr: machparam.h 1.11 89/08/14
 *	from: @@(#)param.h	8.1 (Berkeley) 6/10/93
d37 2
a38 2
#ifndef _MIPS64_PARAM_H_
#define _MIPS64_PARAM_H_
d48 3
a50 4
#define PAGE_SIZE	(1 << PAGE_SHIFT)
#define PAGE_MASK	(PAGE_SIZE - 1)

#define	NBPG		PAGE_SIZE
a51 1
#define	PGSHIFT		PAGE_SHIFT
d55 3
a57 4
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
d59 1
a59 2
#define USPACE		(16384)
#ifdef _KERNEL
a65 1
#endif	/* _KERNEL */
a66 3
/*
 * Constants related to network buffer management.
 */
d69 1
a69 1
#ifdef _KERNEL
d75 1
d77 4
a80 2
/* Default malloc arena size */
#define	NKMEMPAGES_MIN_DEFAULT  ((8 * 1024 * 1024) >> PAGE_SHIFT)
a81 9
#endif /* _KERNEL */

/* pages ("clicks") to disk blocks */
#define	ctod(x)	((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)	((x) >> (PGSHIFT - DEV_BSHIFT))

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define dbtob(x)	((x) << DEV_BSHIFT)
a82 1
#ifdef _KERNEL
d87 1
d90 1
a90 1
#endif /* !_MIPS64_PARAM_H_ */
@


1.29
log
@Make sure the ALIGN() macro uses u_long on all platforms for consistency, and
update the comment block accordingly.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.28 2011/03/23 16:54:36 pirofti Exp $ */
d47 3
a49 8
/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_long and must be cast to
 * any desired pointer type.
 */
#define	ALIGNBYTES	7
#define	ALIGN(p)	(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define ALIGNED_POINTER(p, t)  ((((u_long)(p)) & (sizeof (t) - 1)) == 0)
@


1.28
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.27 2010/11/28 20:35:15 miod Exp $ */
d49 1
a49 1
 * data types (int, long, ...).   The result is u_int and must be cast to
@


1.27
log
@Update comment to no longer mention a page is 4KB, since this may not be the
case.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.26 2009/12/13 08:27:15 deraadt Exp $ */
d40 2
a41 2
#ifndef _MIPS_PARAM_H_
#define _MIPS_PARAM_H_
d112 1
a112 1
#endif /* !_MIPS_PARAM_H_ */
@


1.26
log
@bit less aggressive about hiding; ok miod
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.25 2009/12/12 20:10:22 miod Exp $ */
d97 1
a97 1
/* pages ("clicks") (4096 bytes) to disk blocks */
@


1.25
log
@Protect more definitions userland doesn't need to care about with _KERNEL
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.24 2009/12/12 20:08:07 miod Exp $ */
d95 1
d105 1
a106 1

@


1.24
log
@Switch page size from 4KB to 16KB on R10k kernels without R5k support
(i.e. IP27 and IP30 sgi kernels).
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.23 2009/12/08 22:13:20 miod Exp $ */
d71 1
d78 1
d85 1
a103 1
#ifdef _KERNEL
d109 1
a109 1
#endif /* !_KERNEL */
@


1.23
log
@Use a whole page for msgbuf if page size is larger than 4KB, instead of
the current 8KB.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.22 2009/12/07 19:05:57 miod Exp $ */
a55 3
#ifndef	PAGE_SHIFT
#error	PAGE_SHIFT is not defined
#endif
@


1.22
log
@Support for 16KB page size kernels; page size is now set in <machine/param.h>
rather than <mips64/param.h>.

For now, kernels are kept at 4KB to give people some time to build 16KB
compatible binaries; this will change before the end of this release cycle.

Use of 16KB page size kernels yields a 18% speedup (which, offset by the
1.6% slowdown caused by the pmap changes, yields a 16.6% overall speedup).
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.21 2009/12/07 18:58:32 miod Exp $ */
d86 3
d90 1
@


1.21
log
@Use a pool to manage pmap pte pages and top level segment table, instead of
directly allocating pages from uvm; this will allow us to eventually use
a different kernel page size without having to alter the pmap structures
layout.
No functional change; measured slowdown of 1.6% for 4KB page kernels.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.20 2009/05/22 20:37:53 miod Exp $ */
d56 3
a58 5
#define	NBPG		4096		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	PGSHIFT		12		/* LOG2(NBPG) */

#define PAGE_SHIFT	12
d62 3
a65 1
#ifdef __LP64__
a66 3
#else
#define	KERNBASE	0x80000000	/* start of kernel virtual */
#endif
d73 4
a76 2
#ifdef __LP64__
#define	UPAGES		4		/* pages of u-area */
d78 1
a78 1
#define	UPAGES		2		/* pages of u-area */
a79 3

#define USPACE		(UPAGES*NBPG)	/* size of u-area in bytes */
#define	USPACE_ALIGN	(2*NBPG)	/* u-area alignment 0-none */
@


1.20
log
@Drop almost unused <machine/psl.h> on sgi; move USERMODE() definition from
there to trap.c which is its only user. This also cleans up multiple
inclusion of <machine/cpu.h> (because <machine/psl.h> includes it) in many
places.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.19 2009/05/06 20:02:44 miod Exp $ */
a63 5
#define	NPTEPG		(NBPG/4)

#define NBSEG		0x400000	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
#define	SEGSHIFT	22		/* LOG2(NBSEG) */
@


1.19
log
@Fix signedness of comparison used to know whether we have already reached
the next scheduled clock interrupt; the comparison would before always be
true, causing the clock to really run at hz/2.

While there, remove unused nanodelay() and attempt to clean clock
initialization a bit.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.18 2008/05/04 09:57:47 martin Exp $ */
a43 3
#ifdef _LOCORE
#include <machine/psl.h>
#else
a44 1
#endif
@


1.18
log
@convert arm and mips64 platforms to ptoa/atop

tested by maja@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.17 2007/05/28 21:02:49 thib Exp $ */
a117 1
void nanodelay(int);
@


1.17
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.16 2007/04/16 20:01:00 miod Exp $ */
a107 4

/* pages to bytes */
#define	ctob(x)	((x) << PGSHIFT)
#define btoc(x) (((x) + PGOFSET) >> PGSHIFT)
@


1.16
log
@Crank MAXPHYS to the regular 64KB.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.15 2007/04/05 16:04:17 deraadt Exp $ */
a95 4
 * MCLBYTES must be no larger than PAGE_SIZE (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a96 5
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* enough for whole Ethernet packet */
#define	MCLOFSET	(MCLBYTES - 1)
#ifndef NMBCLUSTERS
a97 1
#endif
@


1.15
log
@delete userland DELAY() version; ok miod
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.14 2006/03/19 01:47:24 martin Exp $ */
d83 1
a83 1
#define	MAXPHYS		(32 * 1024)	/* max raw I/O transfer size */
@


1.14
log
@remove unused bdbtofsb(bn) macro

found by drahn@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.13 2006/01/14 11:45:43 miod Exp $ */
a133 3

#else /* !_KERNEL */
#define	DELAY(n)	{ int N = (n); while (--N > 0); }
@


1.13
log
@Revert 1.12 and go back to 32K MAXPHYS; 64k MAXPHYS exposes subtle bugs
and is not reliable enough.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.12 2006/01/04 20:27:35 miod Exp $ */
a125 8

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
@


1.12
log
@Crank MAXPHYS to 64KB again and remove bogus comment.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.11 2005/12/13 01:56:44 martin Exp $ */
d83 1
a83 1
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
@


1.11
log
@nuke unused BTOPKERNBASE define

pointed out by miod@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.10 2005/11/06 10:26:56 martin Exp $ */
d83 1
a83 2
/* XXX Maxphys temporary changed to 32K while SCSI driver is fixed. */
#define	MAXPHYS		(32 * 1024)	/* max raw I/O transfer size */
@


1.10
log
@byebye Mach macros

testing and ok kettenis@@, hshoexer@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.9 2005/09/12 23:05:05 miod Exp $ */
a78 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
@


1.9
log
@Change the NKMEMPAGES range to 4-64MB for 32bit arches, and 8-128MB for 64bit
arches; except on sparc where the range is 4-8 for !sun4m and 4-64 for sun4m,
selected at runtime.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.8 2005/08/07 07:29:44 miod Exp $ */
a135 8

/*
 * Conversion macros
 */
#define mips_round_page(x)	((((u_long)(x)) + NBPG - 1) & ~(NBPG-1))
#define mips_trunc_page(x)	((u_long)(x) & ~(NBPG-1))
#define mips_btop(x)		((u_long)(x) >> PGSHIFT)
#define mips_ptob(x)		((u_long)(x) << PGSHIFT)
@


1.8
log
@Remove advertising clause from UCB licenses; ok deraad@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.7 2005/07/31 15:31:15 miod Exp $ */
d115 1
a115 1
#define	NKMEMPAGES_MAX_DEFAULT  ((64 * 1024 * 1024) >> PAGE_SHIFT)
@


1.7
log
@Get rid of unused SINCR and SSIZE constants.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.6 2005/01/31 21:35:49 grange Exp $ */
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Un-__P.

ok pefo@@
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.5 2004/09/17 18:31:51 miod Exp $ */
a89 3

#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
@


1.5
log
@Crank MSIZE and NMBCLUSTERS, per other 64bit arches.
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.4 2004/09/09 22:21:41 pefo Exp $ */
d156 2
a157 2
void delay __P((int));
void nanodelay __P((int));
@


1.4
log
@these should have gone in with the other 64 bit changes
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.3 2004/08/10 20:28:13 deraadt Exp $ */
d110 1
a110 1
#define	MSIZE		128		/* size of an mbuf */
d115 1
a115 5
#ifdef GATEWAY
#define	NMBCLUSTERS	2048		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#endif
@


1.3
log
@spacing
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.2 2004/08/06 22:31:31 mickey Exp $ */
d78 1
a78 1
#if (_MIPS_SZPTR == 64)
d94 2
a95 2
#if (_MIPS_SZPTR == 64)
#define	UPAGES		4			/* pages of u-area */
a99 7
#if 0
#define	UVPN		(UADDR>>PGSHIFT)/* virtual page number of u */
#define	KERNELSTACK	(UADDR+UPAGES*NBPG)	/* top of kernel stack */
#define	UADDR		0xffffc000	/* address of u */
#define	UADDR		0xffffffffffffa000	/* address of u */
#endif

a101 2

#define PMAP_NEW
@


1.2
log
@provide md USPACE_ALIGN zero on all but mips; deradat@@ pefo@@ ok
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.1 2004/08/06 20:56:02 pefo Exp $ */
d47 1
a47 1
#ifdef _KERNEL    
d49 2
a50 2
#include <machine/psl.h>                                             
#else                                                                
d52 2
a53 2
#endif                                                              
#endif                                                             
@


1.1
log
@initial mips64
@
text
@d1 1
a1 1
/*      $OpenBSD: param.h,v 1.11 1998/08/30 22:05:35 millert Exp $ */
d108 1
a108 1
#define	USPACE_ALIGN	(2*NBPG)
@

