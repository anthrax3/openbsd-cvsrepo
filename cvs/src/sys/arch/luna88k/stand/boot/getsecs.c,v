head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.3
date	2013.11.12.13.56.23;	author aoyama;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.29.21.49.07;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.28.22.13.12;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix the bootloader random hang-up while counting down on LUNA-88K2.
The same logic is also applied to luna88k/dev/timekeeper.c.

suggested and ok miod@@
@
text
@/*	$OpenBSD: getsecs.c,v 1.2 2013/10/29 21:49:07 miod Exp $	*/
/*	$NetBSD: getsecs.c,v 1.1 2013/01/13 14:10:55 tsutsui Exp $	*/

/*-
 * Copyright (c) 2004 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by UCHIYAMA Yasushi.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <luna88k/stand/boot/samachdep.h>
#include <machine/board.h>
#include <luna88k/dev/timekeeper.h>

#define _DS_GET(off, data) \
	do { *chiptime = (off); (data) = (*chipdata); } while (0)
#define _DS_SET(off, data) \
	do { *chiptime = (off); *chipdata = (u_int8_t)(data); } while (0)

time_t
getsecs(void)
{
	u_int t;

	if (machtype == LUNA_88K) {
		volatile uint32_t *mclock =
		    (volatile uint32_t *)(NVRAM_ADDR + MK_NVRAM_SPACE);
		mclock[MK_CSR] |= MK_CSR_READ << 24;
		t =  bcdtobin(mclock[MK_SEC] >> 24);
		t += bcdtobin(mclock[MK_MIN] >> 24) * 60;
		t += bcdtobin(mclock[MK_HOUR] >> 24) * 60 * 60;
		mclock[MK_CSR] &= ~(MK_CSR_READ << 24);
	} else {
		volatile uint8_t *chiptime = (volatile uint8_t *)NVRAM_ADDR;
		volatile u_int8_t *chipdata = chiptime + 1;

		uint8_t c;

		/* specify 24hr and BCD mode */
		_DS_GET(DS_REGB, c);
		c |= DS_REGB_24HR;
		c &= ~DS_REGB_BINARY;
		_DS_SET(DS_REGB, c);

		/* update in progress; spin loop */
		for (;;) {
			*chiptime = DS_REGA;
			if ((*chipdata & DS_REGA_UIP) == 0)
				break;
		}

		*chiptime = DS_SEC;
		t =  bcdtobin(*chipdata);
		*chiptime = DS_MIN;
		t += bcdtobin(*chipdata) * 60;
		*chiptime = DS_HOUR;
		t += bcdtobin(*chipdata) * 60 * 60;
	}

	return (time_t)t;
}
@


1.2
log
@More cleanups:
- accept empty controller and partition numbers, as well as empty filenames,
  and use defaults (0, 0 and "bsd") instead of complaining the boot path
  is invalid.
- do not attempt to detect and report devices at boot, using a small
  list of possible devices (only scsi id #6 and #5, come on!).
  Instead, parse the user-supplied boot string to figure out which controller
  and device to talk to. (still no SCSI LUN support, though).

Because of the last change, SCSI unit numbers ought to match the PROM
numbering now (10 * controller + 6 - device id).

Crank version to 0.2.
@
text
@d1 1
a1 1
/*	$OpenBSD: getsecs.c,v 1.1 2013/10/28 22:13:12 miod Exp $	*/
d68 5
a72 3
		*chiptime = DS_REGA;
		while (*chipdata & DS_REGA_UIP)
			;
@


1.1
log
@The first steps of a native OpenBSD/luna88k bootloader. Able to boot ELF
kernels with symbols from disk or network.
Based upon the NetBSD/luna68k bootloader which got recently overhauled from
4.3BSD (thanks, tsutsui@@ !), updated to match the luna88k hardware layout
and turned into a polling-only binary.
Tested on luna88k (not -2) only so far.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
		    (volatile uint32_t *)(0x45000000 + MK_NVRAM_SPACE);
d56 1
a56 1
		volatile uint8_t *chiptime = (volatile uint8_t *)0x45000000;
@

