head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.6.0.12
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.10
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6;
locks; strict;
comment	@# @;


1.9
date	2016.12.03.03.34.33;	author aoyama;	state Exp;
branches;
next	1.8;
commitid	PRmsLh0XZqYIbfx3;

1.8
date	2016.11.06.16.42.00;	author tb;	state Exp;
branches;
next	1.7;
commitid	peo8JdlgBE9dXbST;

1.7
date	2016.07.30.03.25.49;	author guenther;	state Exp;
branches;
next	1.6;
commitid	HVbAtwruDlJazNH2;

1.6
date	2014.02.23.20.01.04;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.12.14.04.15;	author aoyama;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.30.20.39.05;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.29.22.13.28;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.29.21.49.07;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.28.22.13.12;	author miod;	state Exp;
branches;
next	;


desc
@@


1.9
log
@luna88k bootloader needs __ashldi3 to compile sys/lib/libsa/ufs.c 1.26.
@
text
@#	$OpenBSD: Makefile,v 1.8 2016/11/06 16:42:00 tb Exp $
#	$NetBSD: Makefile,v 1.9 2013/01/22 15:48:40 tsutsui Exp $
#	@@(#)Makefile	8.2 (Berkeley) 8/15/93

NOMAN= # defined

S= ${.CURDIR}/../../../..

CPPFLAGS+=	-nostdinc -D_STANDALONE
CPPFLAGS+=	-I${.CURDIR} -I${.OBJDIR} -I${S} -I${S}/arch

CPPFLAGS+=	-DSUPPORT_DISK
CPPFLAGS+=	-DSUPPORT_ETHERNET
CPPFLAGS+=	-DSUPPORT_BOOTP
#CPPFLAGS+=	-DBOOTP_DEBUG -DNETIF_DEBUG -DETHER_DEBUG -DNFS_DEBUG
#CPPFLAGS+=	-DRPC_DEBUG -DRARP_DEBUG -DNET_DEBUG -DDEBUG -DPARANOID

OBJCOPY?=	objcopy
TEXTADDR=	0x700000	# 7MB
LDSCRIPT=	${.CURDIR}/boot.ldscript
LINKFORMAT=	-static -N -Ttext ${TEXTADDR} -T ${LDSCRIPT} \
		--warn-common -nopie -znorelro

SRCS=	locore.S
SRCS+=	init_main.c
SRCS+=	fault.c setjmp.S
SRCS+=	bcd.c
SRCS+=	devopen.c
SRCS+=	conf.c
SRCS+=	getline.c parse.c
SRCS+=	boot.c
SRCS+=	cons.c prf.c awaitkey.c
SRCS+=	sio.c
SRCS+=	bmc.c bmd.c font.c kbd.c
SRCS+=	sc.c sd.c
SRCS+=	ufs_disksubr.c

# netboot support
SRCS+=	if_le.c lance.c getsecs.c
SRCS+=	dev_net.c

PROG=   boot

### find out what to use for libkern
.PATH:	${S}/lib/libkern
SRCS+=	memcpy.c strlcat.c strlcpy.c strlen.c
SRCS+=	muldi3.c negdi2.c ashldi3.c ashrdi3.c

### find out what to use for libsa
.PATH:	${S}/lib/libsa
SRCS+=	strtol.c

SAREL=
SADST=	.
USE_LOADFILE=	yes
.include "${S}/lib/libsa/Makefile.inc"

LIBS=	${SALIB} ${ZLIB} ${KERNLIB}

${PROG}: ${LDSCRIPT} ${OBJS} ${LIBS}
	${LD} ${LINKFORMAT} -x -o ${PROG}.elf ${OBJS} ${LIBS}
	${OBJCOPY} -S -O a.out-m88k-openbsd --impure ${PROG}.elf ${PROG}

install: ${PROG}
	install -m 555 -g bin -o bin ${PROG} ${DESTDIR}${MDEC_DIR}

CLEANFILES+=	${PROG}.elf

.if !make(clean) && !make(cleandir) && !make(includes) && !make(obj)
.BEGIN:
	@@([ -h machine ] || ln -s ${.CURDIR}/../../include machine)
	@@([ -h m88k ] || ln -s ${.CURDIR}/../../../m88k/include m88k)
.endif

.include <bsd.prog.mk>
@


1.8
log
@Do not create machine@@ symlinks in obj as root during includes:, but
defer their creation to later, so that they are owned by BUILDUSER.
This eliminates the last root-owned files in obj/ from 'make build'.
In addition, place a MACHINE == hppa test in hppa/stand/Makefile.inc
to avoid creating bogus symlinks on all other archs.

joint work with & ok natano, "let's try it" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2016/07/30 03:25:49 guenther Exp $
d47 1
a47 1
SRCS+=	muldi3.c negdi2.c ashrdi3.c
@


1.7
log
@Prep for relro: make sure it's off for any non-PIE stand/ program

ok millert@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2014/02/23 20:01:04 miod Exp $
d69 1
d73 1
@


1.6
log
@Try and load /etc/random.seed before attempting to load the kernel.
Bump version.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2013/11/12 14:04:15 aoyama Exp $
d22 1
a22 1
		--warn-common -nopie
@


1.5
log
@We always make symlinks to 'machine' and 'm88k' to compile.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2013/10/30 20:39:05 miod Exp $
d46 1
a46 1
SRCS+=	memcpy.c strlen.c
@


1.4
log
@Fix native builds of the luna88k boot block. Install it into /usr/mdec.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2013/10/29 22:13:28 miod Exp $
a68 1
.if ${MACHINE} != "luna88k"
a71 1
.endif
@


1.3
log
@Get boot device and partition from NVRAM. Boot filename still defaults to
"bsd", since the PROM boot_filename has to point to the bootloader itself
(I store mine as /vmunix).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2013/10/29 21:49:07 miod Exp $
d64 3
a69 1
.if !make(obj)
a72 1
.endif
@


1.2
log
@More cleanups:
- accept empty controller and partition numbers, as well as empty filenames,
  and use defaults (0, 0 and "bsd") instead of complaining the boot path
  is invalid.
- do not attempt to detect and report devices at boot, using a small
  list of possible devices (only scsi id #6 and #5, come on!).
  Instead, parse the user-supplied boot string to figure out which controller
  and device to talk to. (still no SCSI LUN support, though).

Because of the last change, SCSI unit numbers ought to match the PROM
numbering now (10 * controller + 6 - device id).

Crank version to 0.2.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2013/10/28 22:13:12 miod Exp $
a7 1
LIBSADIR=	${S}/lib/libsa
a43 2
NEWVERSWHAT=	"${PROG}"

d50 3
d54 1
a64 8

plop:
	echo ${OBJS}

cleandir distclean: cleanlibdir

cleanlibdir:
	-rm -rf lib
@


1.1
log
@The first steps of a native OpenBSD/luna88k bootloader. Able to boot ELF
kernels with symbols from disk or network.
Based upon the NetBSD/luna68k bootloader which got recently overhauled from
4.3BSD (thanks, tsutsui@@ !), updated to match the luna88k hardware layout
and turned into a polling-only binary.
Tested on luna88k (not -2) only so far.
@
text
@d1 1
a1 1
#	$OpenBSD$
d26 1
a26 1
SRCS+=	init_main.c autoconf.c ioconf.c
@

