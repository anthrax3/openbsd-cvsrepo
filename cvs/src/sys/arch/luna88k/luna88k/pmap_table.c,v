head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.6
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.8
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.4
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.7.0.12
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.10
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	SMP:1.2.0.2
	LUNA88K_INIT:1.1.1.1
	AOYAMA:1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.03.20.19.42.51;	author miod;	state Exp;
branches;
next	1.13;
commitid	lg6LOXS5qq7MW4hz;

1.13
date	2014.11.21.12.28.13;	author aoyama;	state Exp;
branches;
next	1.12;
commitid	aNYWJfQa1h5fZlMu;

1.12
date	2014.11.16.12.30.57;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	yv0ECmCdICvq576h;

1.11
date	2014.04.16.12.01.33;	author aoyama;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.02.15.30.34;	author aoyama;	state Exp;
branches;
next	1.9;

1.9
date	2013.11.16.18.45.20;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2013.11.13.20.35.59;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.02.13.40.07;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.31.21.38.08;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.27.14.07.36;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.25.11.06.41;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.14.12.57.02;	author aoyama;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.02.13.49.43;	author miod;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2004.04.21.15.24.13;	author aoyama;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.04.21.15.24.13;	author aoyama;	state Exp;
branches;
next	;

1.2.2.1
date	2004.06.05.23.09.47;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Do not map resources which are actually not used within the kernel. Saves
24KB of page tables memory.

help and luna88k-2 tests aoyama@@; ok aoyama@@
@
text
@/*	$OpenBSD: pmap_table.c,v 1.13 2014/11/21 12:28:13 aoyama Exp $	*/

/* 
 * Mach Operating System
 * Copyright (c) 1993-1992 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
 * the rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <uvm/uvm_extern.h>

#include <machine/board.h>
#include <machine/pmap_table.h>

#define	R	PROT_READ
#define	RW	(PROT_READ | PROT_WRITE)
#define	CW	CACHE_WT
#define	CI	CACHE_INH
#define	CG	CACHE_GLOBAL

/*  start, size, prot, cacheability */
const struct pmap_table
luna88k_board_table[] = {
#if 0
	{ PROM_ADDR,		PROM_SPACE,		R,	CI },
#endif
	{ FUSE_ROM_ADDR,	FUSE_ROM_SPACE,		R,	CI },
	{ NVRAM_ADDR,		NVRAM_SPACE,		RW,	CI },
	{ NVRAM_ADDR_88K2,	PAGE_SIZE,		RW,	CI },
	{ OBIO_PIO0_BASE,	PAGE_SIZE,		RW,	CI },
	{ OBIO_PIO1_BASE,	PAGE_SIZE,		RW,	CI },
	{ OBIO_SIO,		PAGE_SIZE,		RW,	CI },
	{ OBIO_TAS,		PAGE_SIZE,		RW,	CI },
	{ OBIO_CLOCK0,		PAGE_SIZE,		RW,	CI },
	{ INT_ST_MASK0,		PAGE_SIZE,		RW,	CI },
	{ SOFT_INT0,		PAGE_SIZE,		RW,	CI },
	{ SOFT_INT_FLAG0,	PAGE_SIZE,		RW,	CI },
	{ RESET_CPU0,		PAGE_SIZE,		RW,	CI },
	{ TRI_PORT_RAM,		TRI_PORT_RAM_SPACE,	RW,	CI },
#if 0
	{ EXT_A_ADDR,		EXT_A_SPACE,		RW,	CI },
	{ EXT_B_ADDR,		EXT_B_SPACE,		RW,	CI },
#endif
	{ PC_BASE,		PC_SPACE,		RW,	CI },
#if 0
	{ MROM_ADDR,		MROM_SPACE,		R,	CI },
#endif
	{ BMAP_RFCNT,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMSEL,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMP,		BMAP_BMAP0 - BMAP_BMP,	RW,	CI, TRUE },
	{ BMAP_BMAP0,		BMAP_BMAP1 - BMAP_BMAP0, RW,	CI, TRUE },
	{ BMAP_BMAP1,		BMAP_BMAP2 - BMAP_BMAP1, RW,	CI, TRUE },
	{ BMAP_BMAP2,		BMAP_BMAP3 - BMAP_BMAP2, RW,	CI, TRUE },
	{ BMAP_BMAP3,		BMAP_BMAP4 - BMAP_BMAP3, RW,	CI, TRUE },
	{ BMAP_BMAP4,		BMAP_BMAP5 - BMAP_BMAP4, RW,	CI, TRUE },
	{ BMAP_BMAP5,		BMAP_BMAP6 - BMAP_BMAP5, RW,	CI, TRUE },
	{ BMAP_BMAP6,		BMAP_BMAP7 - BMAP_BMAP6, RW,	CI, TRUE },
	{ BMAP_BMAP7,		BMAP_FN - BMAP_BMAP7,	RW,	CI, TRUE },
	{ BMAP_FN,		PAGE_SIZE,		RW,	CI },
#if 0
	{ BMAP_FN0,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN1,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN2,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN3,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN4,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN5,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN6,		PAGE_SIZE,		RW,	CI },
	{ BMAP_FN7,		PAGE_SIZE,		RW,	CI },
	{ BMAP_PALLET0,		PAGE_SIZE,		RW,	CI },
	{ BMAP_PALLET1,		PAGE_SIZE,		RW,	CI },
#endif
	{ BMAP_PALLET2,		PAGE_SIZE,		RW,	CI },
#if 0
	{ BOARD_CHECK_REG,	PAGE_SIZE,		RW,	CI },
	{ BMAP_CRTC,		PAGE_SIZE,		RW,	CI },
#endif
	{ SCSI_ADDR,		PAGE_SIZE,		RW,	CI },
	{ LANCE_ADDR,		PAGE_SIZE,		RW,	CI },
	{ 0,			0xffffffff,		0,	0 },
};

const struct pmap_table *
pmap_table_build()
{
	return luna88k_board_table;
}
@


1.13
log
@We can map 'fuse ROM' area with read only.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.12 2014/11/16 12:30:57 deraadt Exp $	*/
d46 1
d48 1
d67 1
d69 1
d82 1
d93 1
d95 1
d98 1
@


1.12
log
@Replace a plethora of historical protection options with just
PROT_NONE, PROT_READ, PROT_WRITE, and PROT_EXEC from mman.h.
PROT_MASK is introduced as the one true way of extracting those bits.
Remove UVM_ADV_* wrapper, using the standard names.
ok doug guenther kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.11 2014/04/16 12:01:33 aoyama Exp $	*/
d47 1
a47 1
	{ FUSE_ROM_ADDR,	FUSE_ROM_SPACE,		RW,	CI },
@


1.11
log
@Add generic driver for "NEC PC-9801(*) extension board slot" on
LUNA-88K.

LUNA-88K{,2} has one or two slot(s) that can attach the extension
board designed for PC-9801.  This driver provides dedicated mmap(2)
and capability for waiting specified interrupt on that slot so that we
can use the extension board from userland program.

(*)PC-9801 is a Japanese popular personal computer, mainly used in
   1980-90's. (see http://en.wikipedia.org/wiki/NEC_PC-9801)

ok miod@@, and man pages jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.10 2014/01/02 15:30:34 aoyama Exp $	*/
d37 2
a38 2
#define	R	VM_PROT_READ
#define	RW	(VM_PROT_READ | VM_PROT_WRITE)
@


1.10
log
@Add primary support for LUNA-88K 4bpp/8bpp frame buffer.

This brings color support on LUNA's wscons.  And, with the help of recent
development version of 'mlterm-fb' (frame buffer version of ports/x11/mlterm),
graphic images can be displayed in 16/256 colors on the screen.  Thanks to
arakiken, the original developer of mlterm!

This diff is based on NetBSD/luna68k work:
http://mail-index.netbsd.org/source-changes/2013/12/28/msg050266.html

Need more work to coexist with the monochrome X.Org server.

"go ahead!" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.9 2013/11/16 18:45:20 miod Exp $	*/
d63 1
a64 1
#endif
@


1.9
log
@Allow initial device mappings (from pmap_table) to be backed up by BATC.
Use this on luna88k to map the bitmap planes of the frame buffer used by
the driver. 10% speedup under X.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.8 2013/11/13 20:35:59 miod Exp $	*/
d70 7
a76 17
#if 0 /* not until console or X11 needs them */
	{ BMAP_BMAP1,		BMAP_BMAP2 - BMAP_BMAP1, RW,	CI },
	{ BMAP_BMAP2,		BMAP_BMAP3 - BMAP_BMAP2, RW,	CI },
	{ BMAP_BMAP3,		BMAP_BMAP4 - BMAP_BMAP3, RW,	CI },
	{ BMAP_BMAP4,		BMAP_BMAP5 - BMAP_BMAP4, RW,	CI },
	{ BMAP_BMAP5,		BMAP_BMAP6 - BMAP_BMAP5, RW,	CI },
	{ BMAP_BMAP6,		BMAP_BMAP7 - BMAP_BMAP6, RW,	CI },
	{ BMAP_BMAP7,		BMAP_FN - BMAP_BMAP7,	RW,	CI },
#else
	{ BMAP_BMAP1,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMAP2,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMAP3,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMAP4,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMAP5,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMAP6,		PAGE_SIZE,		RW,	CI },
	{ BMAP_BMAP7,		PAGE_SIZE,		RW,	CI },
#endif
a77 1
#if 0 /* not until console or X11 needs them */
a85 1
#endif
@


1.8
log
@Do not map frame buffer resources the kernel doesn't use; only keep the
lowest bitmap plane, and a page per plane to be able to probe the frame buffer
depth.

Saves an insignificant amount of kernel memory (about 4KB), still worth doing.

ok aoyama@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.7 2011/01/02 13:40:07 miod Exp $	*/
d68 2
a69 2
	{ BMAP_BMP,		BMAP_BMAP0 - BMAP_BMP,	RW,	CI },
	{ BMAP_BMAP0,		BMAP_BMAP1 - BMAP_BMAP0, RW,	CI },
@


1.7
log
@Kill pmap_table_t typedef.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.6 2010/12/31 21:38:08 miod Exp $	*/
d66 32
a97 1
	{ BMAP_START,		BMAP_SPACE,		RW,	CI },
@


1.6
log
@Massive overhauling of the m88k pmap, though I can't pretend it's a new pmap
since a large part of the structures and logic remains.

Since m88k has separate supervisor/user spaces, we can map physical memory 1:1
in supervisor space, and have the kernel virtual address space start from the
end of physical memory.

This allows us to switch to __HAVE_PMAP_DIRECT. And to get rid of the double
mapped sdt, since now their virtual and physical addresses will always match.

The upper bound of the kernel virtual memory space is now platform dependent,
until the code which relies upon some hardware devices being mapped 1:1 in
supervisor mode is updated to no longer require this (this is mainly a PITA on
luna88k, where onboard devices start at 0x40000000, leaving only 1GB of KVA at
the moment - still much better than the previous 512MB).

Tested on mvme88k only (187, 188, 197LE, 197DP). Other platforms ought to
work, aviion will be checked shortly and fixed if necessary. No known
OpenBSD/luna88k system in working condition at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.5 2005/04/27 14:07:36 miod Exp $	*/
a34 1
#include <machine/cmmu.h>
d44 1
a44 1
const pmap_table_entry
d77 2
a78 2
pmap_table_t 
pmap_table_build(void)
@


1.5
log
@Always include <uvm/uvm_extern.h> before <machine/cmmu.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.4 2004/07/25 11:06:41 miod Exp $	*/
d44 1
a44 1
/*  phys_start, virt_start, size, prot, cacheability */
d47 14
a60 14
	{ PROM_ADDR   , PROM_ADDR   , PROM_SPACE  ,  R,   CI },
	{ FUSE_ROM_ADDR, FUSE_ROM_ADDR, FUSE_ROM_SPACE,  RW,    CI },
	{ NVRAM_ADDR   , NVRAM_ADDR   , NVRAM_SPACE  ,   RW,     CI },
	{ NVRAM_ADDR_88K2,    NVRAM_ADDR_88K2, PAGE_SIZE, RW,     CI },
	{ OBIO_PIO0_BASE,     OBIO_PIO0_BASE, PAGE_SIZE,  RW,     CI },
	{ OBIO_PIO1_BASE,     OBIO_PIO1_BASE, PAGE_SIZE,  RW,     CI },
	{ OBIO_SIO      ,     OBIO_SIO,       PAGE_SIZE,  RW,     CI },
	{ OBIO_TAS      ,     OBIO_TAS,       PAGE_SIZE,  RW,     CI },
	{ OBIO_CLOCK0   ,     OBIO_CLOCK0,    PAGE_SIZE,  RW,     CI },
	{ INT_ST_MASK0  ,     INT_ST_MASK0,   PAGE_SIZE,  RW,     CI },
	{ SOFT_INT0     ,     SOFT_INT0,      PAGE_SIZE,  RW,     CI },
	{ SOFT_INT_FLAG0,     SOFT_INT_FLAG0, PAGE_SIZE,  RW,     CI },
	{ RESET_CPU0    ,     RESET_CPU0,     PAGE_SIZE,  RW,     CI },
	{ TRI_PORT_RAM, TRI_PORT_RAM, TRI_PORT_RAM_SPACE, RW, CI },
d62 3
a64 3
	{ EXT_A_ADDR    ,     EXT_A_ADDR,     EXT_A_SPACE,  RW,     CI },
	{ EXT_B_ADDR    ,     EXT_B_ADDR,     EXT_B_SPACE,  RW,     CI },
	{ PC_BASE       ,     PC_BASE,        PC_SPACE,    RW,     CI },
d66 10
a75 10
	{ MROM_ADDR     ,     MROM_ADDR,      MROM_SPACE, R,      CI },
	{ BMAP_START    ,     BMAP_START,     BMAP_SPACE, RW,     CI },
	{ BMAP_PALLET0  ,     BMAP_PALLET0,   PAGE_SIZE,      RW,     CI },
	{ BMAP_PALLET1  ,     BMAP_PALLET1,   PAGE_SIZE,      RW,     CI },
	{ BMAP_PALLET2  ,     BMAP_PALLET2,   PAGE_SIZE,      RW,     CI },
	{ BOARD_CHECK_REG,    BOARD_CHECK_REG,PAGE_SIZE,      RW,     CI },
	{ BMAP_CRTC,          BMAP_CRTC,      PAGE_SIZE,      RW,     CI },
	{ SCSI_ADDR,          SCSI_ADDR,      PAGE_SIZE,      RW,     CI },
	{ LANCE_ADDR,         LANCE_ADDR,     PAGE_SIZE,      RW,     CI },
	{ 0,           0,          0xffffffff,             0,      0  },
@


1.4
log
@Merge luna88k and mvme88k pmap. The pmap will now assume that the memory
below the kernel text is reserved for the PROM, instead of using fixed
(but different) values between luna88k and mvme88k.

Tested on mvme88k by myself, on luna88k by aoyama@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.3 2004/06/14 12:57:02 aoyama Exp $	*/
d31 3
a35 1
#include <uvm/uvm_extern.h>
@


1.3
log
@Added some codes that check if the machine is LUNA-88K or LUNA-88K2
and retrieve the boot device information from NVRAM.
Only works on LUNA-88K2 at this moment.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.2 2004/06/02 13:49:43 miod Exp $	*/
a30 1
#include <sys/types.h>
@


1.2
log
@More realistic kernel pdt sizing for the Luna88k (sync with recent mvme88k
changes) - makes almost 3MB more memory available for userland.

Tested by aoyama@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.1.1.1 2004/04/21 15:24:13 aoyama Exp $	*/
d49 1
@


1.2.2.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.15 2003/09/16 20:52:22 miod Exp $	*/
d46 1
a46 10
#if 0
	{ 0           , VEQR_ADDR   , 48*1024*1024 /* XXX memory size */, RW,  CG},
#endif
	{ 0           , 0           , round_page(0x20000)  /* XXX kernel start */, RW,  CG},
	{ OBIO_START  , OBIO_START  , round_page(OBIO_SIZE),  RW,     CI },
#if 0
	{ TRI_PORT_RAM, TRI_PORT_RAM, TRI_PORT_RAM_SPACE, RW, CI },
	{ 0           , VEQR_ADDR   , 48*1024*1024 /* XXX memory size */, RW,  CG},
	{ 0           , 0           , 0x20000 /* XXX kernel start */, RW,  CG},
	{ PROM_ADDR   , PROM_ADDR   , PROM_SPACE  ,  R,   C },
d49 10
a58 9
	{ OBIO_PIO0_BASE,     OBIO_PIO0_BASE, PAGE,  RW,     CI },
	{ OBIO_PIO1_BASE,     OBIO_PIO1_BASE, PAGE,  RW,     CI },
	{ OBIO_SIO      ,     OBIO_SIO,       PAGE,  RW,     CI },
	{ OBIO_TAS      ,     OBIO_TAS,       PAGE,  RW,     CI },
	{ OBIO_CLOCK0   ,     OBIO_CLOCK0,    PAGE,  RW,     CI },
	{ INT_ST_MASK0  ,     INT_ST_MASK0,   PAGE,  RW,     CI },
	{ SOFT_INT0     ,     SOFT_INT0,      PAGE,  W,     CI },
	{ SOFT_INT_FLAG0,     SOFT_INT_FLAG0, PAGE,  RW,     CI },
	{ RESET_CPU0    ,     RESET_CPU0,     PAGE,  RW,     CI },
d66 7
a72 8
	{ BMAP_PALLET0  ,     BMAP_PALLET0,   PAGE,       RW,     CI },
	{ BMAP_PALLET1  ,     BMAP_PALLET1,   PAGE,       RW,     CI },
	{ BMAP_PALLET2  ,     BMAP_PALLET2,   PAGE,       RW,     CI },
	{ BOARD_CHECK_REG,    BOARD_CHECK_REG,PAGE,       RW,     CI },
	{ BMAP_CRTC,          BMAP_CRTC,      PAGE,      RW,     CI },
	{ SCSI_ADDR,          SCSI_ADDR,      PAGE,      RW,     C},
	{ LANCE_ADDR,         LANCE_ADDR,     PAGE,      RW,     CI },
#endif
@


1.1.1.1
log
@Initial commit for OpenBSD/luna88k, based on OpenBSD/mvme88k, NetBSD/luna68k and CMU Mach.
@
text
@@
