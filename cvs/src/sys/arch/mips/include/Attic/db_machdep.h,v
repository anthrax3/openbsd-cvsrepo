head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.6
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2001.06.26.03.34.07;	author brad;	state dead;
branches;
next	1.4;

1.4
date	99.01.27.04.46.05;	author imp;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	98.10.15.21.30.14;	author imp;	state Exp;
branches;
next	1.2;

1.2
date	98.09.15.10.50.12;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	98.03.16.09.03.05;	author pefo;	state Exp;
branches;
next	;

1.4.6.1
date	2001.07.04.10.18.50;	author niklas;	state dead;
branches;
next	;


desc
@@


1.5
log
@bye bye
--
Ok'd by deraadt@@ & ericj@@
@
text
@/*	$OpenBSD: db_machdep.h,v 1.4 1999/01/27 04:46:05 imp Exp $ */

/*
 * Copyright (c) 1998 Per Fogelstrom, Opsycon AB
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Per Fogelstrom, Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef	_MIPS_DB_MACHDEP_H_
#define	_MIPS_DB_MACHDEP_H_

#include <machine/regnum.h>
#include <machine/frame.h>
#include <machine/trap.h>
#include <vm/vm_param.h>

#define	MID_MACHINE 0		/* XXX booo... */

typedef struct trap_frame db_regs_t;
db_regs_t           ddb_regs;

typedef	int         db_expr_t;
typedef vm_offset_t db_addr_t;

#define	SOFTWARE_SSTEP		/* Need software single step */
#define	SOFTWARE_SSTEP_EMUL	/* next_instr_address() emulates 100% */
db_addr_t	next_instr_address __P((db_addr_t, boolean_t));
#define	BKPT_SIZE   (4)
#define	BKPT_SET(ins)	(BREAK_DDB)
#define	DB_VALID_BREAKPOINT(addr)	(((addr) & 3) == 0)

#define	IS_BREAKPOINT_TRAP(type, code)	((type) == T_BREAK)
#define IS_WATCHPOINT_TRAP(type, code)	(0)	/* XXX mips3 watchpoint */

#define	PC_REGS(regs)	((db_addr_t)(regs)->reg[PC])
#define DDB_REGS	(&ddb_regs)

/*
 *  Test of instructions to see class.
 */
#define	IT_CALL		0x01
#define	IT_BRANCH	0x02
#define	IT_LOAD		0x03
#define	IT_STORE	0x04

#define	inst_branch(i)	(db_inst_type(i) == IT_BRANCH)
#define	inst_trap_return(i)	((i) & 0)
#define	inst_call(i)	(db_inst_type(i) == IT_CALL)
#define	inst_return(i)	((i) == 0x03e00008)
#define	inst_load(i)	(db_inst_type(i) == IT_LOAD)
#define	inst_store(i)	(db_inst_type(i) == IT_STORE)

int db_inst_type __P((int));
#endif	/* !_MIPS_DB_MACHDEP_H_ */
@


1.4
log
@Protect against multiple includes and regularize cpp symbols used
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.3 1998/10/15 21:30:14 imp Exp $ */
@


1.4.6.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4 1999/01/27 04:46:05 imp Exp $ */
@


1.3
log
@
Back out PEFO's trap change.  It breaks everybody, it seems.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.1 1998/03/16 09:03:05 pefo Exp $ */
d35 2
a36 2
#ifndef	_MACHINE_DB_MACHDEP_H_
#define	_MACHINE_DB_MACHDEP_H_
d80 1
a80 1
#endif	/* _MACHINE_DB_MACHDEP_H_ */
@


1.2
log
@New mi code to add a real trapframe and remove the need for __FORK_BRAINDAMAGE.
@
text
@d38 1
d61 1
a61 1
#define	PC_REGS(regs)	((db_addr_t)(regs)->pc)
@


1.1
log
@DDB for mips, first cut. Will add some machine dep commands and tune
up a little. Basically works. Still needs symbol table support.
Load store counting does not handle branch likely situations.

Also, some code moved into here as 'machine independent'.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a37 1
#include <machine/regnum.h>
d60 1
a60 1
#define	PC_REGS(regs)	((db_addr_t)(regs)->reg[PC])
@


