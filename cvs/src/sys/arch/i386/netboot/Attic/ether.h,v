head	1.2;
access;
symbols
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	UBC_SYNC_A:1.2
	UBC_SYNC_B:1.2
	SMP:1.2.0.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.2
date	97.11.05.02.47.15;	author mickey;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.50.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@who needs that junk (;
@
text
@/*	$NetBSD: ether.h,v 1.3 1994/10/27 04:21:12 cgd Exp $	*/

/*
 * source in this file came from
 * the Mach ethernet boot written by Leendert van Doorn.
 *
 * Ethernet definitions
 */

#define	ETH_ADDRSIZE	6		/* address size */

/*
 * Structure of an ethernet header
 */
typedef struct {
  u_char eth_dst[ETH_ADDRSIZE];	/* destination address */
  u_char eth_src[ETH_ADDRSIZE];	/* source address */
  u_short eth_proto;			/* protocol type */
} ethhdr_t;

/* protocol types */
#define	ETHTYPE_IP	0x0800		/* IP protocol */
#define	ETHTYPE_ARP	0x0806		/* ARP protocol */
#define	ETHTYPE_RARP	0x8035		/* Reverse ARP protocol */

extern u_char eth_myaddr[];

int EtherInit(void);
void EtherReset(void);
void EtherStop(void);
void EtherSend(packet_t *pkt, u_short proto, u_char *dest);
packet_t *EtherReceive(void);
void EtherPrintAddr(u_char *addr);

/* TBD - move these elsewhere? */

static inline u_short
htons(u_short x) {
  return ((x >> 8) & 0xff)
    | ((x & 0xff) << 8);
}

#if 0
static inline u_short
ntohs(u_short x) {
  return x >> 8 & 0xff
    | (x & 0xff) << 8;
}
#else
static inline u_short
ntohs(u_short x) {
  return htons(x);
}
#endif

static inline u_long
htonl(u_long x) {
  return (x >> 24 & 0xffL)
    | (x >> 8 & 0xff00L)
      | (x << 8 & 0xff0000L)
	| (x << 24 & 0xff000000L);
}

#if 0
static inline u_long
ntohl(u_long x) {
  return x >> 24 & 0xffL
    | x >> 8 & 0xff00L
      | x << 8 & 0xff0000L
	| x << 24 & 0xff000000L;
}
#else
static inline u_long
ntohl(u_long x) {
  return htonl(x);
}
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
