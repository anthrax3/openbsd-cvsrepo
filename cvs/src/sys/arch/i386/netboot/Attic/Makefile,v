head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	SMP:1.3.0.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.3
date	97.11.05.02.47.09;	author mickey;	state dead;
branches;
next	1.2;

1.2
date	96.04.26.18.22.51;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@who needs that junk (;
@
text
@#	$OpenBSD: Makefile,v 1.2 1996/04/26 18:22:51 mickey Exp $
#	$NetBSD: Makefile,v 1.4 1994/10/27 04:20:59 cgd Exp $

# uncomment one of these as appropriate for the board being used
#ETH_OBJ = ne2100.o
ETH_OBJ = wd80x3.o

# set this to the size of the eprom (decimal)
ROM_SIZE = 16384

.SUFFIXES: .s .c .o .list
.c.list:
	$(CC) $(CFLAGS) $(INC) -nostdinc -S $<
	$(AS) $*.s -a -o /dev/null > $@@
	rm $*.s

.s.o:
	@@echo $(AS) -o $*.o $< [$(DEFINES)]
	-@@trap "/bin/rm -f $*.i X$*.c; exit 0" 0 1 2 3 10 15; \
	/bin/rm -f X$*.c; \
	ln -s $< X$*.c; \
	$(CC) -I${.CURDIR} -E $(CFLAGS) -nostdinc X$*.c > $*.i; \
	if [ $$? != 0 ]; then :; \
	else \
	 $(AS) $*.i -o $@@; \
	fi

.s.list:
	@@echo $(AS) -o $*.o $< [$(DEFINES)]
	-@@trap "/bin/rm -f $*.i X$*.c; exit 0" 0 1 2 3 10 15; \
	/bin/rm -f X$*.c;	\
	ln -s $< X$*.c;	\
	$(CC) -E $(CFLAGS) -nostdinc X$*.c > $*.i;	\
	if [ $$? != 0 ]; then :;	\
	else \
		$(AS) $*.i -a -o /dev/null > $@@;	\
	fi

# the relocation address (hex)
RELOC=	98000
CFLAGS=	-O2 $(DEFINES)
DEFINES=-DRELOC=0x$(RELOC) -DROM_SIZE=$(ROM_SIZE) -DTRACE=0 -Dprinte=printf \
 -DDEBUG -DUSE_BOOTP -DUSE_RARP #-DPhysBcopy=bcopy -DPhysBzero=bzero
NOMAN=	noman

PROG=	genprom
BOOT_OBJS+= start.o main.o cga.o kbd.o packet.o tftp.o arp.o \
 $(ETH_OBJ) misc.o asm.o

all: genprom boot.bin

boot.bin: $(BOOT_OBJS)
	${LD} -e _start -N -T ${RELOC} ${BOOT_OBJS}
	cp a.out boot.sym
	rm -f $@@
	strip a.out
	dd if=a.out of=boot.v ibs=32 skip=1 obs=1024b
	./genprom <boot.v >$@@
	rm -f a.out boot.v

# copy to dos floppy for testing (faster than burning an eprom)
dostest: boot.bin
	mcopy -n boot.bin a:

TAGS:	main.c cga.c kbd.c packet.c tftp.c arp.c wd80x3.c misc.c proto.h
	etags main.c cga.c kbd.c packet.c tftp.c arp.c wd80x3.c misc.c proto.h

clean:
	rm -f *.o *.list *~ genprom

cleandir: clean
	rm -f boot.bin boot.sym

.include <bsd.prog.mk>

@


1.2
log
@Fix the code, so it compiles now.
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d1 1
d13 1
a13 1
	$(CC) $(CFLAGS) $(INC) -S $<
d21 2
a22 2
	ln $*.s X$*.c; \
	$(CC) -E $(CFLAGS) X$*.c > $*.i; \
d27 1
d32 2
a33 2
	ln $*.s X$*.c;	\
	$(CC) -E $(CFLAGS) X$*.c > $*.i;	\
d40 3
a42 3
RELOC = 98000
CFLAGS = -O $(DEFINES) -nostdinc
DEFINES = -DRELOC=0x$(RELOC) -DROM_SIZE=$(ROM_SIZE) -DTRACE=0 -Dprinte=printf \
d44 1
d46 2
a47 1
OBJS = start.o main.o cga.o kbd.o packet.o tftp.o arp.o \
d50 1
a50 1
all: boot.bin
d52 2
a53 2
boot.bin: $(OBJS) genprom
	${LD} -e _start -N -T ${RELOC} $(OBJS)
d58 1
a58 1
	genprom <boot.v >$@@
a60 3
genprom: genprom.c
	$(CC) -o $@@ -DROM_SIZE=$(ROM_SIZE) genprom.c

d75 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
