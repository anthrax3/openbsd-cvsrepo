head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	UBC_SYNC_A:1.7
	UBC_SYNC_B:1.7
	SMP:1.7.0.2
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	97.03.29.07.12.06;	author tholo;	state dead;
branches;
next	1.6;

1.6
date	96.06.22.21.52.52;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.05.07.07.21.39;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.04.29.14.12.54;	author hvozda;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.16.27;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.19.21.09.17;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.32;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.32;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Use genassym.sh
@
text
@/*	$NetBSD: genassym.c,v 1.49 1996/05/03 19:42:07 christos Exp $	*/

/*-
 * Copyright (c) 1995 Charles M. Hannum.  All rights reserved.
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)genassym.c	5.11 (Berkeley) 5/10/91
 */

#include <sys/param.h>
#include <sys/proc.h>
#include <sys/resourcevar.h>
#include <sys/device.h>
#include <sys/user.h>
#ifdef INET
#include <sys/mbuf.h>
#endif

#include <vm/vm.h>

#include <machine/trap.h>
#include <machine/pmap.h>
#include <machine/vmparam.h>

#include "apm.h"
#if NAPM > 0
#include <machine/apmvar.h>
#endif

#ifdef COMPAT_SVR4
#include <compat/svr4/svr4_ucontext.h>
#endif

#ifdef COMPAT_LINUX
#include <machine/linux_machdep.h>
#endif

#ifdef COMPAT_FREEBSD
#include <machine/freebsd_machdep.h>
#endif

#include "isa.h"
#if NISA > 0
#include <i386/isa/isa_machdep.h>
#endif

#include <stdio.h>
#include <stddef.h>

int main __P((void));

int
main()
{

#define	def(N,V)	printf("#define\t%s %d\n", N, V)
#define	off(N,S,M)	def(N, (int)offsetof(S, M))

	def("SRUN", SRUN);

	def("PTDPTDI", PTDPTDI);
	def("KPTDI", KPTDI);
	def("NKPDE", NKPDE);
	def("APTDPTDI", APTDPTDI);

	def("VM_MAXUSER_ADDRESS", (int)VM_MAXUSER_ADDRESS);

	off("P_ADDR", struct proc, p_addr);
	off("P_BACK", struct proc, p_back);
	off("P_FORW", struct proc, p_forw);
	off("P_PRIORITY", struct proc, p_priority);
	off("P_STAT", struct proc, p_stat);
	off("P_WCHAN", struct proc, p_wchan);
	off("P_VMSPACE", struct proc, p_vmspace);
	off("P_FLAG", struct proc, p_flag);

	def("P_SYSTEM", P_SYSTEM);

	off("V_TRAP", struct vmmeter, v_trap);
	off("V_INTR", struct vmmeter, v_intr);

	off("PCB_CR3", struct pcb, pcb_cr3);
	off("PCB_EBP", struct pcb, pcb_ebp);
	off("PCB_ESP", struct pcb, pcb_esp);
	off("PCB_FS", struct pcb, pcb_fs);
	off("PCB_GS", struct pcb, pcb_gs);
	off("PCB_CR0", struct pcb, pcb_cr0);
	off("PCB_LDT_SEL", struct pcb, pcb_ldt_sel);
	off("PCB_TSS_SEL", struct pcb, pcb_tss_sel);
	off("PCB_ONFAULT", struct pcb, pcb_onfault);

	off("TF_CS", struct trapframe, tf_cs);
	off("TF_TRAPNO", struct trapframe, tf_trapno);
	off("TF_EFLAGS", struct trapframe, tf_eflags);

	def("FRAMESIZE", sizeof(struct trapframe));

	off("SIGF_HANDLER", struct sigframe, sf_handler);
	off("SIGF_SC", struct sigframe, sf_sc);
	off("SC_FS", struct sigcontext, sc_fs);
	off("SC_GS", struct sigcontext, sc_gs);
	off("SC_EFLAGS", struct sigcontext, sc_eflags);

#ifdef INET
	off("M_NEXT", struct mbuf, m_next);
	off("M_DATA", struct mbuf, m_data);
	off("M_LEN", struct mbuf, m_len);
#endif

#ifdef COMPAT_SVR4
	off("SVR4_SIGF_HANDLER", struct svr4_sigframe, sf_handler);
	off("SVR4_SIGF_UC", struct svr4_sigframe, sf_uc);
	off("SVR4_UC_FS", struct svr4_ucontext, uc_mcontext.greg[SVR4_X86_FS]);
	off("SVR4_UC_GS", struct svr4_ucontext, uc_mcontext.greg[SVR4_X86_GS]);
	off("SVR4_UC_EFLAGS", struct svr4_ucontext, uc_mcontext.greg[SVR4_X86_EFL]);
#endif

#ifdef COMPAT_LINUX
	off("LINUX_SIGF_HANDLER", struct linux_sigframe, sf_handler);
	off("LINUX_SIGF_SC", struct linux_sigframe, sf_sc);
	off("LINUX_SC_FS", struct linux_sigcontext, sc_fs);
	off("LINUX_SC_GS", struct linux_sigcontext, sc_gs);
	off("LINUX_SC_EFLAGS", struct linux_sigcontext, sc_eflags);
#endif

#ifdef COMPAT_FREEBSD
	off("FREEBSD_SIGF_HANDLER", struct freebsd_sigframe, sf_handler);
	off("FREEBSD_SIGF_SC", struct freebsd_sigframe, sf_sc);
#endif

#if NISA > 0
	off("IH_FUN", struct intrhand, ih_fun);
	off("IH_ARG", struct intrhand, ih_arg);
	off("IH_COUNT", struct intrhand, ih_count);
	off("IH_NEXT", struct intrhand, ih_next);
#endif
#if NAPM > 0
	off("APM_CODE32", struct apm_connect_info, apm_code32_seg_base);
	off("APM_CODE16", struct apm_connect_info, apm_code16_seg_base);
	off("APM_DATA", struct apm_connect_info, apm_data_seg_base);
	off("APM_CODE32_LEN", struct apm_connect_info, apm_code32_seg_len);
	off("APM_DATA_LEN", struct apm_connect_info, apm_data_seg_len);
	off("APM_ENTRY", struct apm_connect_info, apm_entrypt);
	off("APM_DETAIL", struct apm_connect_info, apm_detail);
	off("APM_CALL", struct apm_connect_info, apm_entrypt);
	def("APM_SIZE", sizeof(struct apm_connect_info));
	off("APMREG_AX", struct apmregs, ax);
	off("APMREG_BX", struct apmregs, bx);
	off("APMREG_CX", struct apmregs, cx);
	off("APMREG_DX", struct apmregs, dx);
#endif

	exit(0);
}
@


1.6
log
@Assembly version of in_cksum by Dave Richards.  >20% faster in the usual
cases, up to 62% faster in other cases.
@
text
@@


1.5
log
@sync with 0504; prototype changes
@
text
@d47 3
d135 6
@


1.4
log
@Pull in John Kohl's [jtk@@netbsd.org] most recent (15Apr96) APM and PCMCIA work
(original PCMCIA framework  by Stefan Grefen [grefen@@convex.com]).
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.48 1996/03/28 23:44:04 mycroft Exp $	*/
d78 2
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d54 5
d157 15
@


1.2
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.46 1996/02/02 19:42:43 mycroft Exp $	*/
d71 4
a76 22
	struct proc *p = 0;
	struct vmmeter *vm = 0;
	struct pcb *pcb = 0;
	struct trapframe *tf = 0;
	struct sigframe *sigf = 0;
	struct sigcontext *sc = 0;
	struct uprof *uprof = 0;
#if NISA > 0
	struct intrhand *ih = 0;
#endif
#ifdef COMPAT_SVR4
	struct svr4_sigframe *svr4_sigf = 0;
	struct svr4_ucontext *svr4_uc = 0;
#endif
#ifdef COMPAT_LINUX
	struct linux_sigframe *linux_sigf = 0;
	struct linux_sigcontext *linux_sc = 0;
#endif
#ifdef COMPAT_FREEBSD
	struct freebsd_sigframe *freebsd_sigf = 0;
	struct freebsd_sigcontext *freebsd_sc = 0;
#endif
d79 1
d88 1
a88 1
	def("VM_MAXUSER_ADDRESS", VM_MAXUSER_ADDRESS);
d90 8
a97 8
	def("P_ADDR", &p->p_addr);
	def("P_BACK", &p->p_back);
	def("P_FORW", &p->p_forw);
	def("P_PRIORITY", &p->p_priority);
	def("P_STAT", &p->p_stat);
	def("P_WCHAN", &p->p_wchan);
	def("P_VMSPACE", &p->p_vmspace);
	def("P_FLAG", &p->p_flag);
d101 2
a102 2
	def("V_TRAP", &vm->v_trap);
	def("V_INTR", &vm->v_intr);
d104 13
a116 13
	def("PCB_CR3", &pcb->pcb_cr3);
	def("PCB_EBP", &pcb->pcb_ebp);
	def("PCB_ESP", &pcb->pcb_esp);
	def("PCB_FS", &pcb->pcb_fs);
	def("PCB_GS", &pcb->pcb_gs);
	def("PCB_CR0", &pcb->pcb_cr0);
	def("PCB_LDT_SEL", &pcb->pcb_ldt_sel);
	def("PCB_TSS_SEL", &pcb->pcb_tss_sel);
	def("PCB_ONFAULT", &pcb->pcb_onfault);

	def("TF_CS", &tf->tf_cs);
	def("TF_TRAPNO", &tf->tf_trapno);
	def("TF_EFLAGS", &tf->tf_eflags);
d120 5
a124 5
	def("SIGF_HANDLER", &sigf->sf_handler);
	def("SIGF_SC", &sigf->sf_sc);
	def("SC_FS", &sc->sc_fs);
	def("SC_GS", &sc->sc_gs);
	def("SC_EFLAGS", &sc->sc_eflags);
d127 5
a131 5
	def("SVR4_SIGF_HANDLER", &svr4_sigf->sf_handler);
	def("SVR4_SIGF_UC", &svr4_sigf->sf_uc);
	def("SVR4_UC_FS", &svr4_uc->uc_mcontext.greg[SVR4_X86_FS]);
	def("SVR4_UC_GS", &svr4_uc->uc_mcontext.greg[SVR4_X86_GS]);
	def("SVR4_UC_EFLAGS", &svr4_uc->uc_mcontext.greg[SVR4_X86_EFL]);
d135 5
a139 5
	def("LINUX_SIGF_HANDLER", &linux_sigf->sf_handler);
	def("LINUX_SIGF_SC", &linux_sigf->sf_sc);
	def("LINUX_SC_FS", &linux_sc->sc_fs);
	def("LINUX_SC_GS", &linux_sc->sc_gs);
	def("LINUX_SC_EFLAGS", &linux_sc->sc_eflags);
d143 2
a144 2
	def("FREEBSD_SIGF_HANDLER", &freebsd_sigf->sf_handler);
	def("FREEBSD_SIGF_SC", &freebsd_sigf->sf_sc);
d148 4
a151 4
	def("IH_FUN", &ih->ih_fun);
	def("IH_ARG", &ih->ih_arg);
	def("IH_COUNT", &ih->ih_count);
	def("IH_NEXT", &ih->ih_next);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.45 1995/10/11 04:19:38 mycroft Exp $	*/
a41 2
#define _KERNEL

d46 2
a48 1
#include <sys/user.h>
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
