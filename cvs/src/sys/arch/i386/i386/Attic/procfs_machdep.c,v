head	1.8;
access;
symbols
	OPENBSD_5_6:1.7.0.30
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.28
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.24
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.22
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.20
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.18
	OPENBSD_5_0:1.7.0.16
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.14
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.12
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.8
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.10
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.6
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.4
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.20
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.18
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.16
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.14
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.12
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.6
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.8
date	2014.09.08.03.01.43;	author guenther;	state dead;
branches;
next	1.7;
commitid	e6rfSrl5GVFlXC8H;

1.7
date	2007.11.28.17.05.09;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2006.12.20.17.50.40;	author gwk;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.29.20.03.20;	author dim;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.27.13.18.21;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.21.00.31.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.22.17.41.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.09.07.14.16;	author tholo;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.04.18.16.07.23;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.07.04.10.16.41;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@...and the other file I missed cvs rm'ing in the procfs purge.

noted by doug@@
@
text
@/*	$OpenBSD: procfs_machdep.c,v 1.7 2007/11/28 17:05:09 tedu Exp $	*/
/*	$NetBSD: procfs_machdep.c,v 1.6 2001/02/21 21:39:59 jdolecek Exp $	*/

/*
 * Copyright (c) 2001 Wasabi Systems, Inc.
 * All rights reserved.
 *
 * Written by Frank van der Linden for Wasabi Systems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed for the NetBSD Project by
 *      Wasabi Systems, Inc.
 * 4. The name of Wasabi Systems, Inc. may not be used to endorse
 *    or promote products derived from this software without specific prior
 *    written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY WASABI SYSTEMS, INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL WASABI SYSTEMS, INC
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */


#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mount.h>
#include <sys/vnode.h>
#include <miscfs/procfs/procfs.h>
#include <machine/cpu.h>
#include <machine/cpufunc.h>
#include <machine/specialreg.h>

extern int i386_fpu_present, i386_fpu_exception, i386_fpu_fdivbug;

static const char * const i386_features[] = {
	"fpu", "vme", "de", "pse", "tsc", "msr", "pae", "mce",
	"cx8", "apic", NULL, "sep", "mtrr", "pge", "mca", "cmov",
	"pat", "pse36", "pn", "clflush", NULL, "dts", "acpi", "mmx",
	"fxsr", "sse", "sse2", "ss", "ht", "tm", "ia64", "pbe"
};


/*
 * Linux-style /proc/cpuinfo.
 * Only used when procfs is mounted with -o linux.
 *
 * In the multiprocessor case, this should be a loop over all CPUs.
 */
int
procfs_getcpuinfstr(char *buf, int *len)
{
	int left, l, i;
	char featurebuf[256], *p;

	p = featurebuf;
	left = sizeof featurebuf;
	for (i = 0; i < 32; i++) {
		if ((cpu_feature & (1 << i)) && i386_features[i]) {
			l = snprintf(p, left, "%s ", i386_features[i]);
			if (l == -1)
				l = 0;
			else if (l >= left)
				l = left - 1;
			left -= l;
			p += l;
			if (left <= 0)
				break;
		}
	}

	p = buf;
	left = *len;
	l = snprintf(p, left,
		"processor\t: %d\n"
		"vendor_id\t: %s\n"
		"cpu family\t: %d\n"
		"model\t\t: %d\n"
		"model name\t: %s\n"
		"stepping\t: ",
		0,
		cpu_vendor,
		cpuid_level >= 0 ? ((cpu_id >> 8) & 15) : cpu_class + 3,
		cpuid_level >= 0 ? ((cpu_id >> 4) & 15) : 0,
		cpu_model
	    );
	if (l == -1)
		l = 0;
	else if (l >= left)
		l = left - 1;

	left -= l;
	p += l;
	if (left <= 0)
		return 0;

	if (cpuid_level >= 0)
		l = snprintf(p, left, "%d\n", cpu_id & 15);
	else
		l = snprintf(p, left, "unknown\n");

	if (l == -1)
		l = 0;
	else if (l >= left)
		l = left - 1;
	left -= l;
	p += l;
	if (left <= 0)
		return 0;

	if (cpuspeed != 0)
		l = snprintf(p, left, "cpu MHz\t\t: %d\n",
		    cpuspeed);
	else
		l = snprintf(p, left, "cpu MHz\t\t: unknown\n");

	if (l == -1)
		l = 0;
	else if (l >= left)
		l = left - 1;
	left -= l;
	p += l;
	if (left <= 0)
		return 0;

	l = snprintf(p, left,
		"fdiv_bug\t: %s\n"
		"fpu\t\t: %s\n"
		"fpu_exception:\t: %s\n"
		"cpuid level\t: %d\n"
		"wp\t\t: %s\n"
		"flags\t\t: %s\n",
		i386_fpu_fdivbug ? "yes" : "no",
		i386_fpu_present ? "yes" : "no",
		i386_fpu_exception ? "yes" : "no",
		cpuid_level,
		(rcr0() & CR0_WP) ? "yes" : "no",
		featurebuf);
	if (l == -1)
		l = 0;
	else if (l >= left)
		l = left - 1;

	*len = (p + l) - buf;

	return 0;
}
@


1.7
log
@quite a bit of simplification by removing cpu classes.
also assume that 386 cpus are really unknown, and promote them to 486
instead of panic.
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.6 2006/12/20 17:50:40 gwk Exp $	*/
@


1.6
log
@"#ifdef is a tool of the weak!"
Rename pentium_mhz to cpuspeed which is consistant with amd64 making
shared ACPI code less nasty.
ok marco, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.5 2006/11/29 20:03:20 dim Exp $	*/
a125 1
#if defined(I586_CPU) || defined(I686_CPU)
a129 1
#endif
@


1.5
log
@Remove all the extern cpu_{id,model,whatever} declarations from most
stuff in arch/i386/i386.  This should prevent more screwups like the
one I did before in ichpcib.c...

ok dlg@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.4 2005/04/27 13:18:21 fgsch Exp $	*/
d127 1
a127 1
	if (pentium_mhz != 0)
d129 1
a129 1
		    pentium_mhz);
@


1.4
log
@add missing flags to /proc/cpuinfo and don't print invalid ones; deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.3 2005/04/21 00:31:23 deraadt Exp $	*/
a49 4
extern int cpu_feature;
extern char cpu_model[];
extern char cpu_vendor[];
extern int cpu_id, cpu_class;
@


1.3
log
@no need to check for 0, it copes, spotted by beck
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.2 2001/04/22 17:41:50 deraadt Exp $	*/
d57 3
a59 3
	"cx8", "apic", "10", "sep", "mtrr", "pge", "mca", "cmov",
	"fgpat", "pse36", "psn", "19", "20", "21", "22", "mmx",
	"fxsr", "xmm", "26", "27", "28", "29", "30", "31"
d78 1
a78 1
		if (cpu_feature & (1 << i)) {
@


1.2
log
@permit compilation without I586_CPU or I686_CPU; armin@@wolfermann.org
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.1 2001/04/09 07:14:16 tholo Exp $	*/
d80 4
d106 4
d121 4
d138 4
d160 4
@


1.1
log
@Add emulation of Linux features to procfs; mostly from NetBSD.  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d118 1
a118 1
		
d123 1
@


1.1.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.1 2001/04/09 07:14:16 tholo Exp $	*/
@


1.1.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: procfs_machdep.c,v 1.1.2.1 2001/04/18 16:07:23 niklas Exp $	*/
d118 1
a118 1
#if defined(I586_CPU) || defined(I686_CPU)
a122 1
#endif
@


