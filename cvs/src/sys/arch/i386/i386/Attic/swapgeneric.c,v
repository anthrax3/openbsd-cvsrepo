head	1.13;
access;
symbols
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.10.0.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.8
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.6
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.4
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.9.0.2
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.8.0.8
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2003.05.25.17.31.49;	author tedu;	state dead;
branches;
next	1.12;

1.12
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.29.18.40.32;	author miod;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	99.07.18.22.40.52;	author csapuntz;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	99.03.17.22.55.08;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.12.06.15.51.09;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.11.06.01.30.04;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.06.01.11.54.32;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.05.07.07.21.55;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.04.21.22.16.39;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.18.19.18.12;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.04.17.05.18.58;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.34;	author deraadt;	state Exp;
branches;
next	;

1.10.4.1
date	2001.10.31.03.01.12;	author nate;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2003.06.07.11.11.37;	author ho;	state dead;
branches;
next	;

1.11.4.1
date	2002.06.11.03.35.53;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@how did i miss this one?  thanks Wouter Clarie
@
text
@/*	$OpenBSD: swapgeneric.c,v 1.12 2002/03/14 01:26:33 millert Exp $	*/
/*	$NetBSD: swapgeneric.c,v 1.12 1996/05/03 19:42:28 christos Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)swapgeneric.c	5.5 (Berkeley) 5/9/91
 */

/*
 * fake swapgeneric.c -- should do this differently.
 */

#include <sys/param.h>
#include <sys/conf.h>

int (*mountroot)(void) = NULL;

dev_t	rootdev = NODEV;
dev_t	dumpdev = NODEV;

struct	swdevt swdevt[] = {
	{ NODEV, 0, 0 },	/* to be filled in */
	{ NODEV, 0, 0 }
};
@


1.12
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.11 2001/09/29 18:40:32 miod Exp $	*/
@


1.11
log
@The "swap generic" configuration needs only two entries in swdevt[].
So shrink it when necessary, and remove unwanted stuff as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.10 1999/07/18 22:40:52 csapuntz Exp $	*/
d49 1
a49 1
int (*mountroot) __P((void)) = NULL;
@


1.11.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.11 2001/09/29 18:40:32 miod Exp $	*/
d49 1
a49 1
int (*mountroot)(void) = NULL;
@


1.10
log
@

Get rid of useless #include's of wdc.h
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.9 1999/03/17 22:55:08 deraadt Exp $	*/
d42 4
a47 15
#include <sys/buf.h>
#include <sys/systm.h>
#include <sys/reboot.h>
#include <sys/device.h>
#include <sys/disklabel.h>

#include <dev/cons.h>

#include <machine/pte.h>
#include <machine/cpu.h>

#include "fdc.h"
#include "sd.h"
#include "cd.h"
#include "mcd.h"
d49 2
a50 3
/*
 * Generic configuration;  all in one
 */
d53 1
d55 2
a56 6
	{ makedev(4, 1),	0,	0 },	/* sd0 */
	{ makedev(4, 17),	0,	0 },	/* sd1 */
	{ makedev(4, 33),	0,	0 },	/* sd2 */
	{ makedev(4, 49),	0,	0 },	/* sd3 */
	{ NODEV,		0,	0 },
	{ NODEV,		0,	0 },
a57 2

int (*mountroot) __P((void)) = NULL;
@


1.10.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.10 1999/07/18 22:40:52 csapuntz Exp $	*/
a41 4
/*
 * fake swapgeneric.c -- should do this differently.
 */

d44 15
d60 3
a62 2
int (*mountroot) __P((void)) = NULL;

a64 1

d66 6
a71 2
	{ NODEV, 0, 0 },	/* to be filled in */
	{ NODEV, 0, 0 }
d73 2
@


1.10.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
int (*mountroot)(void) = NULL;
@


1.10.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.10.4.2 2002/03/28 10:31:04 niklas Exp $	*/
@


1.9
log
@sd3b too
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.8 1996/12/06 15:51:09 deraadt Exp $	*/
a54 1
#include "wdc.h"
@


1.8
log
@a temporary hack until i fix some confusing swapbsd.c handling
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.7 1996/11/06 01:30:04 deraadt Exp $	*/
d70 1
@


1.7
log
@fix mountroot decl
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.6 1996/06/01 11:54:32 deraadt Exp $	*/
d67 5
a71 2
	{ NODEV,	1,	0 },
	{ NODEV,	0,	0 },
@


1.6
log
@first attempt at `swap generic' and `boot -a' support. it is a bit ugly,
but it works.
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.5 1996/05/07 07:21:55 deraadt Exp $	*/
d71 1
a71 2
int (*mountroot) __P((void *)) = NULL;

@


1.5
log
@sync with 0504; prototype changes
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.4 1996/04/21 22:16:39 deraadt Exp $	*/
a64 1
dev_t	argdev = NODEV;
a65 1
int	nswap;
a69 2
long	dumplo;
int	dmmin, dmmax, dmtext;
d71 1
a71 43
#if NWDC > 0
extern	struct cfdriver wd_cd;
#endif
#if NFDC > 0
extern	struct cfdriver fd_cd;
#endif
#if NSD > 0
extern	struct cfdriver sd_cd;
#endif
#if NCD > 0
extern	struct cfdriver cd_cd;
#endif
#if NMCD > 0
extern	struct cfdriver mcd_cd;
#endif

struct	genericconf {
	struct cfdriver *gc_driver;
	char *gc_name;
	dev_t gc_major;
} genericconf[] = {
#if NWDC > 0
	{ &wd_cd,  "wd",  0 },
#endif
#if NSD > 0
	{ &sd_cd,  "sd",  4 },
#endif
#if NCD > 0
	{ &cd_cd,  "cd",  6 },
#endif
#if NMCD > 0
	{ &mcd_cd, "mcd", 7 },
#endif
#if NFDC > 0
	{ &fd_cd,  "fd",  2 },
#endif
	{ 0 }
};

extern int ffs_mountroot __P((void *));
int (*mountroot) __P((void *)) = ffs_mountroot;

void	gets __P((char *));
a72 100
void
setconf()
{
	register struct genericconf *gc;
	int unit, swaponroot = 0;

	if (rootdev != NODEV)
		goto doswap;

	if (genericconf[0].gc_driver == 0)
		goto verybad;

	if (boothowto & RB_ASKNAME) {
		char name[128];
retry:
		printf("root device? ");
		gets(name);
		for (gc = genericconf; gc->gc_driver; gc++)
			if (gc->gc_name[0] == name[0] &&
			    gc->gc_name[1] == name[1])
				goto gotit;
		goto bad;
gotit:
		if (name[3] == '*') {
			name[3] = name[4];
			swaponroot++;
		}
		if (name[2] >= '0' && name[2] <= '7' && name[3] == 0) {
			unit = name[2] - '0';
			goto found;
		}
		printf("bad/missing unit number\n");
bad:
		printf("use:\n");	
		for (gc = genericconf; gc->gc_driver; gc++)
			printf("\t%s%%d\n", gc->gc_name);
		goto retry;
	}
	unit = 0;
	for (gc = genericconf; gc->gc_driver; gc++) {
		if (gc->gc_driver->cd_ndevs > unit &&
		    gc->gc_driver->cd_devs[unit]) {
			printf("root on %s0\n", gc->gc_name);
			goto found;
		}
	}
verybad:
	printf("no suitable root -- hit any key to reboot\n");
	printf("\n>");						/* XXX */						/* XXX */						/* XXX */
	cngetc();
	cpu_reset();
	for (;;) ;

found:
	rootdev = makedev(gc->gc_major, unit * MAXPARTITIONS);
doswap:
	swdevt[0].sw_dev = argdev = dumpdev =
	    makedev(major(rootdev), minor(rootdev) + 1);
	/* swap size and dumplo set during autoconfigure */
	if (swaponroot)
		rootdev = dumpdev;
}

void
gets(cp)
	char *cp;
{
	register char *lp;
	register c;

	lp = cp;
	for (;;) {
		printf("%c", c = cngetc()&0177);
		switch (c) {
		case '\n':
		case '\r':
			*lp++ = '\0';
			return;
		case '\b':
		case '\177':
			if (lp > cp) {
				printf(" \b");
				lp--;
			}
			continue;
		case '#':
			lp--;
			if (lp < cp)
				lp = cp;
			continue;
		case '@@':
		case 'u'&037:
			lp = cp;
			printf("%c", '\n');
			continue;
		default:
			*lp++ = c;
		}
	}
}
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD: swapgeneric.c,v 1.3 1996/04/18 19:18:12 niklas Exp $	*/
/*	$NetBSD: swapgeneric.c,v 1.11 1996/04/03 09:15:26 mycroft Exp $	*/
d50 2
d53 1
d114 2
a115 2
extern int ffs_mountroot();
int (*mountroot)() = ffs_mountroot;
@


1.3
log
@Merge of NetBSD 960317
@
text
@d1 2
a2 2
/*	$OpenBSD: swapgeneric.c,v 1.2 1996/04/17 05:18:58 mickey Exp $	*/
/*	$NetBSD: swapgeneric.c,v 1.9 1994/11/04 09:57:52 mycroft Exp $	*/
a57 2
void	gets __P((char *));

d73 1
a73 1
extern	struct cfdriver wdcd;
d76 1
a76 1
extern	struct cfdriver fdcd;
d79 1
a79 1
extern	struct cfdriver sdcd;
d82 1
a82 1
extern	struct cfdriver cdcd;
d85 1
a85 1
extern	struct cfdriver mcdcd;
d94 1
a94 1
	{ &wdcd,  "wd",  0 },
d97 1
a97 1
	{ &sdcd,  "sd",  4 },
d100 1
a100 1
	{ &cdcd,  "cd",  6 },
d103 1
a103 1
	{ &mcdcd, "mcd", 7 },
d106 1
a106 1
	{ &fdcd,  "fd",  2 },
d113 2
@


1.2
log
@Cleanups & fixes from latest NetBSD primarily to run doscmd, etc.
GENERIC added to the compile/.cvsignore (it is used for 'make links'
for example), thus conf/GENERIC should appear magically ...
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 2
@


1.1
log
@Initial revision
@
text
@d1 1
d114 1
d177 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
