head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.14
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.10
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.8
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.6
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.4
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.15.0.14
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.12
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.8
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.10
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.6
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.4
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.10
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.8
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.6
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.12
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.10
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.8
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.17
date	2014.03.29.18.09.29;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.15;

1.15
date	2007.10.24.17.56.59;	author mikeb;	state Exp;
branches;
next	1.14;

1.14
date	2007.10.17.14.54.32;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2007.10.17.02.30.25;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.27.23.52.01;	author fgsch;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.05.05.05.38;	author pvalchev;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.26.23.32.14;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	98.05.25.08.02.24;	author downsj;	state Exp;
branches
	1.9.8.1;
next	1.8;

1.8
date	97.09.16.07.52.35;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.09.08.21.21.42;	author dm;	state Exp;
branches;
next	1.6;

1.6
date	97.08.16.18.26.30;	author dm;	state Exp;
branches;
next	1.5;

1.5
date	96.10.20.15.27.48;	author dm;	state Exp;
branches;
next	1.4;

1.4
date	96.08.16.00.02.36;	author dm;	state Exp;
branches;
next	1.3;

1.3
date	96.08.14.22.03.16;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	96.08.14.03.02.53;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	96.08.08.18.47.04;	author dm;	state Exp;
branches;
next	;

1.9.8.1
date	2001.04.18.16.07.37;	author niklas;	state Exp;
branches;
next	1.9.8.2;

1.9.8.2
date	2001.07.04.10.16.48;	author niklas;	state Exp;
branches;
next	1.9.8.3;

1.9.8.3
date	2003.06.07.11.11.37;	author ho;	state Exp;
branches;
next	;


desc
@@


1.17
log
@It's been a quarter century: we can assume volatile is present with that name.

ok dlg@@ mpi@@ deraadt@@
@
text
@/*	$OpenBSD: pctr.h,v 1.16 2011/03/23 16:54:35 pirofti Exp $	*/

/*
 * Pentium performance counter driver for OpenBSD.
 * Copyright 1996 David Mazieres <dm@@lcs.mit.edu>.
 *
 * Modification and redistribution in source and binary forms is
 * permitted provided that due credit is given to the author and the
 * OpenBSD project by leaving this copyright notice intact.
 */

#ifndef _MACHINE_PCTR_H_
#define _MACHINE_PCTR_H_

#include <sys/ioccom.h>

typedef u_int64_t	pctrval;

#define PCTR_NUM	4

struct pctrst {
	u_int pctr_fn[PCTR_NUM];	/* Current settings of counters */
	pctrval pctr_tsc;		/* Free-running 64-bit cycle counter */
	pctrval pctr_hwc[PCTR_NUM];	/* Values of the hardware counters */
};

/* Bit values in fn fields and PIOCS ioctl's */
#define P5CTR_K		0x40		/* Monitor kernel-level events */
#define P5CTR_U		0x80		/* Monitor user-level events */
#define P5CTR_C		0x100		/* count cycles rather than events */

#define PCTR_U		0x010000	/* Monitor user-level events */
#define PCTR_K		0x020000	/* Monitor kernel-level events */
#define PCTR_E		0x040000	/* Edge detect */
#define PCTR_EN		0x400000	/* Enable counters (counter 0 only) */
#define PCTR_I		0x800000	/* Invert counter mask */

/* Unit Mask bits */
#define PCTR_UM_M	0x0800		/* Modified cache lines */
#define PCTR_UM_E	0x0400		/* Exclusive cache lines */
#define PCTR_UM_S	0x0200		/* Shared cache lines */
#define PCTR_UM_I	0x0100		/* Invalid cache lines */
#define PCTR_UM_MESI	(PCTR_UM_M|PCTR_UM_E|PCTR_UM_S|PCTR_UM_I)
#define PCTR_UM_A	0x2000		/* Any initiator */

#define PCTR_UM_SHIFT	8		/* Left shift for unit mask */
#define PCTR_CM_SHIFT	24		/* Left shift for counter mask */

/* ioctl to set which counter a device tracks */
#define PCIOCRD _IOR('c', 1, struct pctrst)	/* Read counter value */
#define PCIOCS0 _IOW('c', 8, unsigned int)	/* Set counter 0 function */
#define PCIOCS1 _IOW('c', 9, unsigned int)	/* Set counter 1 function */
#define PCIOCS2 _IOW('c', 10, unsigned int)	/* Set counter 0 function */
#define PCIOCS3 _IOW('c', 11,  unsigned int)	/* Set counter 1 function */

#define _PATH_PCTR "/dev/pctr"

#define rdtsc()							\
({								\
	pctrval v;						\
	__asm volatile ("rdtsc" : "=A" (v));			\
	v;							\
})

/* Read the performance counters (Pentium Pro only) */
#define rdpmc(ctr)						\
({								\
	pctrval v;						\
	__asm volatile ("rdpmc\n"				\
	    "\tandl $0xff, %%edx"				\
	    : "=A" (v) : "c" (ctr));				\
	v;							\
})

#ifdef _KERNEL

#define rdmsr(msr)						\
({								\
	pctrval v;						\
	__asm volatile ("rdmsr" : "=A" (v) : "c" (msr));	\
	v;							\
})

#define wrmsr(msr, v) \
	__asm volatile ("wrmsr" :: "A" ((u_int64_t) (v)), "c" (msr));

void	pctrattach(int);
int	pctropen(dev_t, int, int, struct proc *);
int	pctrclose(dev_t, int, int, struct proc *);
int	pctrioctl(dev_t, u_long, caddr_t, int, struct proc *);

#endif /* _KERNEL */
#endif /* ! _MACHINE_PCTR_H_ */
@


1.16
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.15 2007/10/24 17:56:59 mikeb Exp $	*/
d61 1
a61 1
	__asm __volatile ("rdtsc" : "=A" (v));			\
d69 1
a69 1
	__asm __volatile ("rdpmc\n"				\
d80 1
a80 1
	__asm __volatile ("rdmsr" : "=A" (v) : "c" (msr));	\
d85 1
a85 1
	__asm __volatile ("wrmsr" :: "A" ((u_int64_t) (v)), "c" (msr));
@


1.15
log
@Remove idle loop counter.

ok art deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.14 2007/10/17 14:54:32 deraadt Exp $	*/
d12 2
a13 2
#ifndef _I386_PCTR_H_
#define _I386_PCTR_H_
d93 1
a93 1
#endif /* ! _I386_PCTR_H_ */
@


1.14
log
@more unification between amd64 and i386 (API changes, but we think
noone else uses this acpi except the command); from Mike Belopuhov
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.13 2007/10/17 02:30:25 deraadt Exp $	*/
a24 1
	pctrval pctr_idl;		/* Iterations of the idle loop */
@


1.13
log
@replacement for the pctr codebase that can handle amd64 processors as
well (in fact, all 4 combinations of codebase and processor) written by
Mike Belopuhov and Aleksey Lomovtsev
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.12 2003/05/27 23:52:01 fgsch Exp $	*/
d24 1
a24 1
	pctrval	pctr_hwc[PCTR_NUM];	/* Values of the hardware counters */
d33 5
a37 5
#define P6CTR_U		0x010000	/* Monitor user-level events */
#define P6CTR_K		0x020000	/* Monitor kernel-level events */
#define P6CTR_E		0x040000	/* Edge detect */
#define P6CTR_EN		0x400000	/* Enable counters (counter 0 only) */
#define P6CTR_I		0x800000	/* Invert counter mask */
d40 6
a45 6
#define P6CTR_UM_M	0x0800		/* Modified cache lines */
#define P6CTR_UM_E	0x0400		/* Exclusive cache lines */
#define P6CTR_UM_S	0x0200		/* Shared cache lines */
#define P6CTR_UM_I	0x0100		/* Invalid cache lines */
#define P6CTR_UM_MESI	(P6CTR_UM_M|P6CTR_UM_E|P6CTR_UM_S|P6CTR_UM_I)
#define P6CTR_UM_A	0x2000		/* Any initiator */
d47 2
a48 2
#define P6CTR_UM_SHIFT	8		/* Left shift for unit mask */
#define P6CTR_CM_SHIFT	24		/* Left shift for counter mask */
d86 1
a86 1
	__asm __volatile ("wrmsr" :: "A" ((u_quad_t) (v)), "c" (msr));
@


1.12
log
@change .byte for the correct opcodes now that gas can handle'em.
art@@ toby@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.11 2001/06/05 05:05:38 pvalchev Exp $	*/
d17 1
a17 1
typedef u_quad_t pctrval;
d19 1
a19 1
#define PCTR_NUM 2
d22 1
a22 1
	u_int pctr_fn[PCTR_NUM];	/* Current settings of hardware counters */
d24 1
a24 1
	pctrval pctr_hwc[PCTR_NUM];	/* Values of the hardware counters */
d29 9
a37 9
#define P5CTR_K 0x40          /* Monitor kernel-level events */
#define P5CTR_U 0x80          /* Monitor user-level events */
#define P5CTR_C 0x100         /* count cycles rather than events */

#define P6CTR_U  0x010000     /* Monitor user-level events */
#define P6CTR_K  0x020000     /* Monitor kernel-level events */
#define P6CTR_E  0x040000     /* Edge detect */
#define P6CTR_EN 0x400000     /* Enable counters (counter 0 only) */
#define P6CTR_I  0x800000     /* Invert counter mask */
d40 16
a55 13
#define P6CTR_UM_M 0x0800     /* Modified cache lines */
#define P6CTR_UM_E 0x0400     /* Exclusive cache lines */
#define P6CTR_UM_S 0x0200     /* Shared cache lines */
#define P6CTR_UM_I 0x0100     /* Invalid cache lines */
#define P6CTR_UM_MESI (P6CTR_UM_M|P6CTR_UM_E|P6CTR_UM_S|P6CTR_UM_I)
#define P6CTR_UM_A 0x2000     /* Any initiator (as opposed to self) */

#define P6CTR_CM_SHIFT 24     /* Left shift for counter mask */

/* ioctl to set which counter a device tracks. */
#define PCIOCRD _IOR('c', 1, struct pctrst)   /* Read counter value */
#define PCIOCS0 _IOW('c', 8, unsigned int)    /* Set counter 0 function */
#define PCIOCS1 _IOW('c', 9, unsigned int)    /* Set counter 1 function */
d59 5
a63 5
#define rdtsc()						\
({							\
  pctrval v;						\
  __asm __volatile ("rdtsc" : "=A" (v));		\
  v;							\
d67 7
a73 7
#define rdpmc(ctr)				\
({						\
  pctrval v;					\
  __asm __volatile ("rdpmc\n"			\
		    "\tandl $0xff, %%edx"	\
		    : "=A" (v) : "c" (ctr));	\
  v;						\
d80 3
a82 3
  pctrval v;							\
  __asm __volatile ("rdmsr" : "=A" (v) : "c" (msr));		\
  v;								\
d86 6
a91 1
     __asm __volatile ("wrmsr" :: "A" ((u_quad_t) (v)), "c" (msr));
@


1.11
log
@License clarification from David Mazieres, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.10 2001/01/26 23:32:14 mickey Exp $	*/
d59 1
a59 1
  __asm __volatile (".byte 0xf, 0x31" : "=A" (v));	\
d67 1
a67 1
  __asm __volatile (".byte 0xf, 0x33\n"		\
d78 1
a78 1
  __asm __volatile (".byte 0xf, 0x32" : "=A" (v) : "c" (msr));	\
d83 1
a83 1
     __asm __volatile (".byte 0xf, 0x30" :: "A" ((u_quad_t) (v)), "c" (msr));
@


1.10
log
@more special regs definitions; use names from pctr.h for those it uses
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.9 1998/05/25 08:02:24 downsj Exp $	*/
d9 1
a9 2
 * OpenBSD project (for instance by leaving this copyright notice
 * intact).
@


1.9
log
@Remove gobs of unneeded code.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.8 1997/09/16 07:52:35 deraadt Exp $	*/
a74 9

#define MSR_TSC 0x10          /* MSR for TSC */
#define P5MSR_CTRSEL 0x11     /* MSR for selecting both counters on P5 */
#define P5MSR_CTR0 0x12       /* Value of Ctr0 on P5 */
#define P5MSR_CTR1 0x13       /* Value of Ctr1 on P5 */
#define P6MSR_CTRSEL0 0x186   /* MSR for programming CTR0 on P6 */
#define P6MSR_CTRSEL1 0x187   /* MSR for programming CTR0 on P6 */
#define P6MSR_CTR0 0xc1       /* Ctr0 on P6 */
#define P6MSR_CTR1 0xc2       /* Ctr1 on P6 */
@


1.9.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.10 2001/01/26 23:32:14 mickey Exp $	*/
d75 9
@


1.9.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.9.8.1 2001/04/18 16:07:37 niklas Exp $	*/
d9 2
a10 1
 * OpenBSD project by leaving this copyright notice intact.
@


1.9.8.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.9.8.2 2001/07/04 10:16:48 niklas Exp $	*/
d59 1
a59 1
  __asm __volatile ("rdtsc" : "=A" (v));		\
d67 1
a67 1
  __asm __volatile ("rdpmc\n"			\
d78 1
a78 1
  __asm __volatile ("rdmsr" : "=A" (v) : "c" (msr));		\
d83 1
a83 1
     __asm __volatile ("wrmsr" :: "A" ((u_quad_t) (v)), "c" (msr));
@


1.8
log
@no need to include sys/ioccom.h; guy@@netapp.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.7 1997/09/08 21:21:42 dm Exp $	*/
a56 39
#define __cpuid()				\
({						\
  pctrval id;					\
  __asm __volatile ("pushfl\n"			\
		    "\tpopl %%eax\n"		\
		    "\tmovl %%eax,%%ecx\n"	\
		    "\txorl %1,%%eax\n"		\
		    "\tpushl %%eax\n"		\
		    "\tpopfl\n"			\
		    "\tpushfl\n"		\
		    "\tpopl %%eax\n"		\
		    "\tpushl %%ecx\n"		\
		    "\tpopfl\n"			\
		    "\tcmpl %%eax,%%ecx\n"	\
		    "\tmovl $0,%%eax\n"		\
		    "\tje 1f\n"			\
		    "\tcpuid\n"			\
		    "\ttestl %%eax,%%eax\n"	\
		    "\tje 1f\n"			\
		    "\tmovl $1,%%eax\n"		\
		    "\tcpuid\n"			\
		    "\tjmp 2f\n"		\
		    "1:\t"			\
		    "\txorl %%eax,%%eax\n"	\
		    "\txorl %%edx,%%edx\n"	\
		    "2:\t"			\
		    : "=A" (id) : "i" (PSL_ID)	\
		    : "edx", "ecx", "ebx");	\
  id;						\
})

#define __hastsc(id) (((id) & 0x1000000000ULL) != 0ULL)
#define __hasp5ctr(id) (((id) & 0xf00) == 0x500		\
			&& (((id) & 0xf0) == 0x10	\
			    || ((id) & 0xf0) == 0x20))
#define __hasp6ctr(id) (((id) & 0xf00) == 0x600)		

#define __cpufamily() ((__cpuid() >> 8) & 0xf)

a74 3

#define CR4_TSD 0x004         /* Time stamp disable */
#define CR4_PCE 0x100         /* Performance counter enable */
@


1.7
log
@Bug: fixed bits around in %cr4.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.6 1997/08/16 18:26:30 dm Exp $	*/
d16 2
d23 4
a26 4
  u_int pctr_fn[PCTR_NUM];    /* Current settings of hardware counters */
  pctrval pctr_tsc;           /* Free-running 64-bit cycle counter */
  pctrval pctr_hwc[PCTR_NUM]; /* Values of the hardware counters */
  pctrval pctr_idl;           /* Iterations of the idle loop */
a55 1

@


1.6
log
@Bug.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.5 1996/10/20 15:27:48 dm Exp $	*/
d114 1
a114 1
#define CR4_TSD 0x040         /* Time stamp disable */
@


1.5
log
@Truncate rdpmc result to 40 bits.  Make pctr.c build with -Wall.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.4 1996/08/16 00:02:36 dm Exp $	*/
d77 1
d79 3
@


1.4
log
@Some mostly cosmetic bug fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.3 1996/08/14 22:03:16 dm Exp $	*/
d99 7
a105 5
#define rdpmc(ctr)						\
({								\
  pctrval v;							\
  __asm __volatile (".byte 0xf, 0x33" : "=A" (v) : "c" (ctr));	\
  v;								\
@


1.3
log
@Pentium Pro support
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.2 1996/08/14 03:02:53 dm Exp $	*/
d13 2
a14 2
#ifndef _I386_PERFCNT_H_
#define _I386_PERFCNT_H_
d21 4
a24 4
  u_int pctr_fn[PCTR_NUM];
  pctrval pctr_tsc;
  pctrval pctr_hwc[PCTR_NUM];
  pctrval pctr_idl;
d28 9
a36 9
#define P5CTR_K 0x40        /* Monitor kernel-level events */
#define P5CTR_U 0x80        /* Monitor user-level events */
#define P5CTR_C 0x100       /* count cycles rather than events */

#define P6CTR_U  0x010000   /* Monitor user-level events */
#define P6CTR_K  0x020000   /* Monitor kernel-level events */
#define P6CTR_E  0x040000   /* Edge detect */
#define P6CTR_EN 0x400000   /* Enable counters (counter 0 only) */
#define P6CTR_I  0x800000   /* Invert counter mask */
d39 4
a42 4
#define P6CTR_UM_M 0x0800   /* Modified cache lines */
#define P6CTR_UM_E 0x0400   /* Exclusive cache lines */
#define P6CTR_UM_S 0x0200   /* Shared cache lines */
#define P6CTR_UM_I 0x0100   /* Invalid cache lines */
d44 3
a46 1
#define P6CTR_UM_A 0x2000   /* Any initiator (as opposed to self) */
d108 2
a109 2
#define CR4_TSD 0x040       /* Time stamp disable */
#define CR4_PCE 0x100       /* Performance counter enable */
d111 8
a118 8
#define MSR_TSC 0x10        /* MSR for TSC */
#define P5MSR_CTRSEL 0x11   /* MSR for selecting both counters on P5 */
#define P5MSR_CTR0 0x12     /* Value of Ctr0 on P5 */
#define P5MSR_CTR1 0x13     /* Value of Ctr1 on P5 */
#define P6MSR_CTRSEL0 0x186 /* MSR for programming CTR0 on P6 */
#define P6MSR_CTRSEL1 0x187 /* MSR for programming CTR0 on P6 */
#define P6MSR_CTR0 0xc1     /* Ctr0 on P6 */
#define P6MSR_CTR1 0xc2     /* Ctr1 on P6 */
d131 1
a131 1
#endif /* ! _I386_PERFCNT_H_ */
@


1.2
log
@Added support in the driver for the Pentium Pro (pctrctl still needs to
be done, though).
@
text
@d1 1
a1 1
/*	$OpenBSD: pctr.h,v 1.1 1996/08/08 18:47:04 dm Exp $	*/
d38 8
d126 1
a126 1
     __asm __volatile (".byte 0xf, 0x30" :: "A" (v), "c" (msr));
@


1.1
log
@Added a pctr pseudo-device for accessing the Pentium performance counters,
and a program pctrctl to set the counter functions.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 6
a10 1
 * Author: David Mazieres <dm@@lcs.mit.edu>
d21 1
a21 1
  u_short pctr_fn[PCTR_NUM];
d28 9
a36 3
#define PCTR_K 0x40    /* Monitor kernel-level events */
#define PCTR_U 0x80    /* Monitor user-level events */
#define PCTR_C 0x100   /* count cycles rather than events */
d40 2
a41 2
#define PCIOCS0 _IOW('c', 8, unsigned short)  /* Set counter 0 function */
#define PCIOCS1 _IOW('c', 9, unsigned short)  /* Set counter 1 function */
d45 76
@
