head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.18
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.10
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@ * @;


1.4
date	2016.09.04.08.49.35;	author guenther;	state Exp;
branches;
next	1.3;
commitid	9U1gSnTGyMYe1aHL;

1.3
date	2015.11.10.06.06.35;	author guenther;	state Exp;
branches;
next	1.2;
commitid	ljB3zXWsMqHY02rb;

1.2
date	2011.12.24.04.21.19;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.07.15.46.06;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.4
log
@TCB_GET_MEMBER() is no longer used after the TIB changes
@
text
@/*	$OpenBSD: tcb.h,v 1.3 2015/11/10 06:06:35 guenther Exp $	*/
/*
 * Copyright (c) 2011 Philip Guenther <guenther@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MACHINE_TCB_H_
#define _MACHINE_TCB_H_

#ifdef _KERNEL

#include <machine/sysarch.h>
#include <machine/pcb.h>

#define TCB_GET(p)		\
	((void *)i386_get_threadbase(p, TSEG_GS))
#define TCB_SET(p, addr)	\
	i386_set_threadbase(p, (uint32_t)(addr), TSEG_GS)

#else /* _KERNEL */

/* ELF TLS ABI calls for big TCB, with static TLS data at negative offsets */
#define TLS_VARIANT	2

/* Read a slot from the TCB */
static inline void *
__i386_read_tcb(int offset)
{
	void	*val;
	__asm__ ("movl %%gs:(%1),%0" : "=r" (val) : "r" (offset));
	return val;
}

/* Get a pointer to the TCB itself */
#define TCB_GET()		__i386_read_tcb(0)

/* Setting the TCB pointer can only be done via syscall, so no TCB_SET() */

#endif /* _KERNEL */
#endif /* _MACHINE_TCB_H_ */
@


1.3
log
@Make TCB_GET() in the kernel return a (void *) like all the others archs

problem reported by semarie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcb.h,v 1.2 2011/12/24 04:21:19 guenther Exp $	*/
a32 2
#include <stddef.h>		/* for offsetof */

a47 4
/* Get the value of a specific member in the TCB */
#define TCB_GET_MEMBER(member)	\
	__i386_read_tcb(offsetof(struct thread_control_block, member))

a50 1

@


1.2
log
@Need <machine/pcb.h> for TSEG_GS
@
text
@d1 1
a1 1
/*	$OpenBSD: tcb.h,v 1.1 2011/11/07 15:46:06 guenther Exp $	*/
d27 1
a27 1
	i386_get_threadbase(p, TSEG_GS)
@


1.1
log
@TLS-lite support for i386
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 1
@

