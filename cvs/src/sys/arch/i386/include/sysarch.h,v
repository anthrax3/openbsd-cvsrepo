head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.4
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.6
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.2
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.12.0.12
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.14
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.6
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.10
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.8
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.4
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.5.0.26
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.24
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.20
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.22
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.18
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.16
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.14
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.12
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.10
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.8
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2016.03.24.04.56.08;	author guenther;	state Exp;
branches;
next	1.13;
commitid	VRKppYthMQboSLVW;

1.13
date	2016.03.03.12.41.30;	author naddy;	state Exp;
branches;
next	1.12;
commitid	Ykztt9UU7jxBEqeD;

1.12
date	2012.12.05.23.20.12;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2012.10.10.11.23.47;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.07.15.41.33;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2011.08.03.16.11.31;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.04.21.50.41;	author pirofti;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.12.03.52.26;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.15.18.46.50;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.05.22.07.33;	author niklas;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	96.01.11.17.59.08;	author deraadt;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.50.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.36;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.04.18.16.07.46;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	;

1.3.8.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Delete i386_{get,set}_ioperm(2) APIs and underlying sysarch(2) bits.
They're no longer used by anything and should let us simplify the TSS
handling.

ok mikeb@@ naddy@@
@
text
@/*	$OpenBSD: sysarch.h,v 1.13 2016/03/03 12:41:30 naddy Exp $	*/
/*	$NetBSD: sysarch.h,v 1.8 1996/01/08 13:51:44 mycroft Exp $	*/

#ifndef _MACHINE_SYSARCH_H_
#define _MACHINE_SYSARCH_H_

/*
 * Architecture specific syscalls (i386)
 */
#define	I386_IOPL	2
#define	I386_VM86	5
#define	I386_GET_FSBASE	6
#define	I386_SET_FSBASE	7
#define	I386_GET_GSBASE	8
#define	I386_SET_GSBASE	9

struct i386_iopl_args {
	int iopl;
};

#ifdef _KERNEL
uint32_t i386_get_threadbase(struct proc *, int);
int i386_set_threadbase(struct proc *, uint32_t, int);
#else

#include <sys/cdefs.h>

__BEGIN_DECLS
int i386_iopl(int);
int i386_get_fsbase(void **);
int i386_set_fsbase(void *);
int i386_get_gsbase(void **);
int i386_set_gsbase(void *);
int sysarch(int, void *);
__END_DECLS
#endif

#endif /* !_MACHINE_SYSARCH_H_ */
@


1.13
log
@Remove option USER_LDT and everything depending on it.
Remove machdep.userldt sysctl.
Remove i386_[gs]et_ldt syscall stub from libi386.
Remove i386_[gs]et_ldt regression test.

ok mlarkin@@ millert@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.12 2012/12/05 23:20:12 deraadt Exp $	*/
a10 2
#define	I386_GET_IOPERM	3
#define	I386_SET_IOPERM	4
a20 8
struct i386_get_ioperm_args {
	u_long *iomap;
};

struct i386_set_ioperm_args {
	u_long *iomap;
};

a29 2
int i386_get_ioperm(u_long *);
int i386_set_ioperm(u_long *);
@


1.12
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.11 2012/10/10 11:23:47 sthen Exp $	*/
a9 2
#define I386_GET_LDT	0
#define I386_SET_LDT	1
a18 12
struct i386_get_ldt_args {
	int start;
	union descriptor *desc;
	int num;
};

struct i386_set_ldt_args {
	int start;
	union descriptor *desc;
	int num;
};

a38 2
int i386_get_ldt(int, union descriptor *, int);
int i386_set_ldt(int, union descriptor *, int);
@


1.11
log
@Add __BEGIN_DECLS so that programs using C++ can use functions
defined in sysarch.h again, they were broken following the change
to NO_IMPLICIT_EXTERN_C.  help/ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.10 2011/11/07 15:41:33 guenther Exp $	*/
a6 2
#include <sys/cdefs.h>

d45 7
a51 1
#ifndef _KERNEL
a63 3
#else
uint32_t i386_get_threadbase(struct proc *, int);
int i386_set_threadbase(struct proc *, uint32_t, int);
@


1.10
log
@Lift the copyout() from i386_get_threadbase() to sys_sysarch(), so that
it can be used correctly from linux_sys_get_thread_area() and tcb.h.
linux_sys_set_thread_area() should use the copied in value instead of
deferencing SCARG() again.  i386_set_threadbase() should only update
curcpu's GDT if it's being called for curproc.

ok pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.9 2011/08/03 16:11:31 guenther Exp $	*/
d7 2
d48 1
d59 1
@


1.9
log
@Fix linux compat breakage: can't copyin() from kernel-space, so
move that out of i386_set_threadbase(), and have clone() pass NULL
to fork1() for the child func argument so that it gets the child
proc pointer.

Report and verification by pirofti@@, heavy lifting by matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.8 2011/04/04 21:50:41 pirofti Exp $	*/
d57 1
a57 1
int i386_get_threadbase(struct proc *, void *, int);
@


1.8
log
@Add linux_sys_[g|s]et_set_thread_area() support. Okay guenther@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.7 2011/03/23 16:54:35 pirofti Exp $	*/
d58 1
a58 1
int i386_set_threadbase(struct proc *, void *, int);
@


1.7
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.6 2011/03/12 03:52:26 guenther Exp $	*/
d56 3
@


1.6
log
@Provide distinct segments for the %fs and %gs selectors to use by
default, with per-rthread base offsets and with sysarch() functions,
I386_{GET,SET}_{FS,GS}BASE, for fetching and setting those base
offsets.  This is necessary for both rthread and Linux compat support.

suggestions from kettenis@@, prodding from pirofti@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.5 2004/09/15 18:46:50 deraadt Exp $	*/
d4 2
a5 2
#ifndef _I386_SYSARCH_H_
#define _I386_SYSARCH_H_
d58 1
a58 1
#endif /* !_I386_SYSARCH_H_ */
@


1.5
log
@fix proto for sysarch()
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.4 2002/03/14 01:26:33 millert Exp $	*/
d16 4
d51 4
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.3 2000/08/05 22:07:33 niklas Exp $	*/
d47 1
a47 1
int sysarch(int, char *);
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.8 1996/01/08 13:51:44 mycroft Exp $	*/
d42 6
a47 6
int i386_get_ldt __P((int, union descriptor *, int));
int i386_set_ldt __P((int, union descriptor *, int));
int i386_iopl __P((int));
int i386_get_ioperm __P((u_long *));
int i386_set_ioperm __P((u_long *));
int sysarch __P((int, char *));
@


1.3.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sysarch.h,v 1.3 2000/08/05 22:07:33 niklas Exp $	*/
d42 6
a47 6
int i386_get_ldt(int, union descriptor *, int);
int i386_set_ldt(int, union descriptor *, int);
int i386_iopl(int);
int i386_get_ioperm(u_long *);
int i386_set_ioperm(u_long *);
int sysarch(int, char *);
@


1.2
log
@from netbsd; VM86 support, by John Kohl, touched up a bit by charles
@
text
@d1 1
@


1.2.16.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: sysarch.h,v 1.3 2000/08/05 22:07:33 niklas Exp $	*/
@


1.2.16.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 6
a47 6
int i386_get_ldt(int, union descriptor *, int);
int i386_set_ldt(int, union descriptor *, int);
int i386_iopl(int);
int i386_get_ioperm(u_long *);
int i386_set_ioperm(u_long *);
int sysarch(int, char *);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: sysarch.h,v 1.7 1995/10/11 04:20:26 mycroft Exp $	*/
d14 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
