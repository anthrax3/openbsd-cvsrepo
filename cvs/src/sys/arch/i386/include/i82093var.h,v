head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.28
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.26
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.22
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.18
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.20
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.12
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.16
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.14
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	UBC_SYNC_A:1.1
	UBC_SYNC_B:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.11
date	2011.05.21.15.14.57;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.22.02.54.50;	author mk;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.13.13.24.48;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.05.16.57.36;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.26.05.42.10;	author ray;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.09.18.41.22;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.23.09.24.52;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.23.17.14.31;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.13.21.49.16;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.14.10.02.36;	author ho;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.07.14.10.02.37;	author ho;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.07.15.15.13.28;	author ho;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.07.16.21.39.06;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2004.03.14.22.08.21;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.11
log
@First stab at supporting Message Signaled Interrupts on i386.  Still work in
progress.  The code is effectively disabled as long as PCI_FLAGS_MSI_ENABLED
doesn't get set for the root PCI bus.
@
text
@/*	$OpenBSD: i82093var.h,v 1.10 2011/03/23 16:54:35 pirofti Exp $	*/
/* $NetBSD: i82093var.h,v 1.1 2003/02/26 21:26:10 fvdl Exp $ */

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by RedBack Networks Inc.
 *
 * Author: Bill Sommerfeld
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_I82093VAR_H_
#define _MACHINE_I82093VAR_H_

#include <machine/apicvar.h>

struct ioapic_pin 
{
	struct intrhand		*ip_handler; 
	struct ioapic_pin	*ip_next; /* next pin on this vector */
	struct mp_intr_map 	*ip_map;
	int			ip_vector; /* IDT vector */
	int			ip_type;
	int			ip_minlevel;
	int			ip_maxlevel;
};

struct ioapic_softc {
	struct pic		sc_pic;
	struct ioapic_softc	*sc_next;
	int			sc_apicid;
	int			sc_apic_vers;
	int			sc_apic_vecbase; /* global int base if ACPI */
	int			sc_apic_sz;	/* apic size*/
	int			sc_flags;
	paddr_t			sc_pa;		/* PA of ioapic */
	volatile u_int32_t	*sc_reg;	/* KVA of ioapic addr */
	volatile u_int32_t	*sc_data;	/* KVA of ioapic data */
	struct ioapic_pin	*sc_pins;	/* sc_apic_sz entries */
};      

/*
 * MP: intr_handle_t is bitfielded.
 * ih&0xff -> line number.
 * ih&0x10000000 -> if 0, old-style isa irq; if 1, routed via ioapic.
 * (ih&0xff0000)>>16 -> ioapic id.
 * (ih&0x00ff00)>>8 -> ioapic line.
 */

#define APIC_INT_VIA_APIC	0x10000000
#define APIC_INT_VIA_MSG	0x20000000
#define APIC_INT_APIC_MASK	0x00ff0000
#define APIC_INT_APIC_SHIFT	16
#define APIC_INT_PIN_MASK	0x0000ff00
#define APIC_INT_PIN_SHIFT	8
#define APIC_INT_LINE_MASK	0x000000ff

#define APIC_IRQ_APIC(x) ((x & APIC_INT_APIC_MASK) >> APIC_INT_APIC_SHIFT)
#define APIC_IRQ_PIN(x) ((x & APIC_INT_PIN_MASK) >> APIC_INT_PIN_SHIFT)

void   *apic_intr_establish(int, int, int, int (*)(void *), void *,
    const char *); 
void	apic_intr_disestablish(void *);

void	ioapic_print_redir(struct ioapic_softc *, char *, int);
void	ioapic_format_redir(char *, char *, int, u_int32_t, u_int32_t);
struct ioapic_softc *ioapic_find(int);
struct ioapic_softc *ioapic_find_bybase(int);

void	ioapic_enable(void);
void	lapic_vectorset(void); /* XXX */

extern int ioapic_bsp_id;
extern int nioapics;
extern struct ioapic_softc *ioapics;
extern u_int16_t ioapic_id_map;
extern u_int8_t ioapic_id_remap[];

#endif /* !_MACHINE_I82093VAR_H_ */
@


1.10
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.9 2009/08/22 02:54:50 mk Exp $	*/
d74 1
@


1.9
log
@Constify the what/name parameter of pci_intr_establish().

Tested by myself, sthen, oga, kettenis, and jasper.
Input from sthen and jasper.

ok kettenis

(Manpage follows shortly.)
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.8 2009/08/13 13:24:48 kettenis Exp $	*/
d35 2
a36 2
#ifndef _I386_I82093VAR_H_
#define _I386_I82093VAR_H_
d101 1
a101 1
#endif /* !_I386_I82093VAR_H_ */
@


1.8
log
@Make the i386 APIC code closer to the amd64 version.  Many whitespace fixes,
some additional code.

ok toby@@, oga@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.7 2008/10/05 16:57:36 kettenis Exp $	*/
d83 2
a84 1
void   *apic_intr_establish(int, int, int, int (*)(void *), void *, char *); 
@


1.7
log
@Remove IOAPIC ID remapping code.  It should not be necessary to avoid reusing
LAPIC IDs and if there are MPBIOSes we handle them with ACPI now.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.6 2008/06/26 05:42:10 ray Exp $	*/
d52 1
a52 1
	struct 			device sc_dev;	/* generic device glue */
@


1.6
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.5 2006/05/09 18:41:22 kettenis Exp $	*/
a81 9

/* I/O APIC ID remapping helper macros. */
#define IOAPIC_REMAP_MASK	(IOAPIC_ID_MASK >> IOAPIC_ID_SHIFT)
#define IOAPIC_REMAP_FLAG	((IOAPIC_REMAP_MASK + 1) << 1)
#define IOAPIC_REMAP(old_id, new_id) \
    (ioapic_id_remap[(old_id)] = IOAPIC_REMAP_FLAG | (new_id))
#define IOAPIC_REMAPPED(id)	(ioapic_id_remap[(id)] & IOAPIC_REMAP_FLAG)
#define IOAPIC_REMAPPED_ID(id)	\
    (IOAPIC_REMAPPED(id) ? ioapic_id_remap[(id)] & IOAPIC_REMAP_MASK : (id))
@


1.5
log
@Import global ACPI interrupt code from amd64.
ok brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.4 2005/11/23 09:24:52 mickey Exp $	*/
a20 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.4
log
@resolve a couple of problems in mpbios-mapped interrupts:
- synthesise isa mappings (as 1-1) should those be missing in mpbios;
- for rcc osb* firce "special" ints into isa mappings always.
niklas@@ ok and testing by many since
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.3 2004/06/23 17:14:31 niklas Exp $	*/
d63 1
@


1.3
log
@Renumber I/O APICs who clash with other APICs. Also clear the delivery
mode before setting it to fixed, since the MP BIOS may have left something
in that field. This fixed a Quad Xeon we have been loaned over the c2k4.
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.2 2004/06/13 21:49:16 niklas Exp $	*/
d84 1
@


1.2
log
@debranch SMP, have fun
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d88 9
d111 2
@


1.1
log
@file i82093var.h was initially added on branch SMP.
@
text
@d1 103
@


1.1.2.1
log
@Initial import of some SMP code from NetBSD.
Not really working here yet, but there is some work in progress.
@
text
@a0 96
/* $NetBSD: i82093var.h,v 1.1.2.3 2000/02/27 20:26:06 sommerfeld Exp $ */

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by RedBack Networks Inc.
 *
 * Author: Bill Sommerfeld
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _I386_I82093VAR_H_
#define _I386_I82093VAR_H_

#include <machine/apicvar.h>

struct ioapic_pin 
{
	struct intrhand		*ip_handler; 
	struct ioapic_pin	*ip_next; /* next pin on this vector */
	struct mp_intr_map 	*ip_map;
	int			ip_vector; /* IDT vector */
	int			ip_type;
	int			ip_level;
};

struct ioapic_softc {
	struct 			device sc_dev;	/* generic device glue */
	int			sc_apicid;
	int			sc_apic_vers;
	int			sc_apic_sz;	/* apic size*/
	int			sc_flags;
	paddr_t			sc_pa;		/* PA of ioapic */
	volatile u_int32_t	*sc_reg;	/* KVA of ioapic addr */
	volatile u_int32_t	*sc_data;	/* KVA of ioapic data */
	struct ioapic_pin	*sc_pins;	/* sc_apic_sz entries */
};      

/*
 * MP: intr_handle_t is bitfielded.
 * ih&0xff -> line number.
 * ih&0x10000000 -> if 0, old-style isa irq; if 1, routed via ioapic.
 * (ih&0xff0000)>>16 -> ioapic id.
 * (ih&0x00ff00)>>8 -> ioapic line.
 */

#define APIC_INT_VIA_APIC	0x10000000
#define APIC_INT_APIC_MASK	0x00ff0000
#define APIC_INT_APIC_SHIFT	16
#define APIC_INT_PIN_MASK	0x0000ff00
#define APIC_INT_PIN_SHIFT	8

#define APIC_IRQ_APIC(x) ((x & APIC_INT_APIC_MASK) >> APIC_INT_APIC_SHIFT)
#define APIC_IRQ_PIN(x) ((x & APIC_INT_PIN_MASK) >> APIC_INT_PIN_SHIFT)

void *apic_intr_establish __P((int, int, int, int (*)(void *), void *)); 
void apic_intr_disestablish __P((void *));

void ioapic_print_redir (struct ioapic_softc *, char *, int);
void ioapic_format_redir (char *, char *, int, u_int32_t, u_int32_t);

void ioapic_enable __P((void));
void lapic_vectorset __P((void)); /* XXX */

extern int ioapic_bsp_id;

#endif /* !_I386_I82093VAR_H_ */
@


1.1.2.2
log
@Add $OpenBSD$.
@
text
@a0 1
/*	$OpenBSD$	*/
@


1.1.2.3
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: i82093var.h,v 1.1.2.2 2001/07/15 15:13:28 ho Exp $	*/
d86 2
a87 2
void   *apic_intr_establish(int, int, int, int (*)(void *), void *, char *); 
void	apic_intr_disestablish(void *);
d89 2
a90 2
void	ioapic_print_redir(struct ioapic_softc *, char *, int);
void	ioapic_format_redir(char *, char *, int, u_int32_t, u_int32_t);
d92 2
a93 2
void	ioapic_enable(void);
void	lapic_vectorset(void); /* XXX */
@


1.1.2.4
log
@Some merged code from NetBSD, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD: i82093var.h,v 1.1.2.3 2001/07/16 21:39:06 niklas Exp $	*/
/* $NetBSD: i82093var.h,v 1.1 2003/02/26 21:26:10 fvdl Exp $ */
d54 1
a54 2
	int			ip_minlevel;
	int			ip_maxlevel;
a58 1
	struct ioapic_softc	*sc_next;
a90 2
struct ioapic_softc *ioapic_find(int);
struct ioapic_softc *ioapic_find_bybase(int);
a95 2
extern int nioapics;
extern struct ioapic_softc *ioapics;
@


