head	1.48;
access;
symbols
	OPENBSD_6_1:1.48.0.2
	OPENBSD_6_1_BASE:1.48
	OPENBSD_6_0:1.47.0.14
	OPENBSD_6_0_BASE:1.47
	OPENBSD_5_9:1.47.0.10
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.47.0.12
	OPENBSD_5_8_BASE:1.47
	OPENBSD_5_7:1.47.0.4
	OPENBSD_5_7_BASE:1.47
	OPENBSD_5_6:1.47.0.8
	OPENBSD_5_6_BASE:1.47
	OPENBSD_5_5:1.47.0.6
	OPENBSD_5_5_BASE:1.47
	OPENBSD_5_4:1.47.0.2
	OPENBSD_5_4_BASE:1.47
	OPENBSD_5_3:1.44.0.6
	OPENBSD_5_3_BASE:1.44
	OPENBSD_5_2:1.44.0.4
	OPENBSD_5_2_BASE:1.44
	OPENBSD_5_1_BASE:1.44
	OPENBSD_5_1:1.44.0.2
	OPENBSD_5_0:1.43.0.2
	OPENBSD_5_0_BASE:1.43
	OPENBSD_4_9:1.42.0.14
	OPENBSD_4_9_BASE:1.42
	OPENBSD_4_8:1.42.0.12
	OPENBSD_4_8_BASE:1.42
	OPENBSD_4_7:1.42.0.8
	OPENBSD_4_7_BASE:1.42
	OPENBSD_4_6:1.42.0.10
	OPENBSD_4_6_BASE:1.42
	OPENBSD_4_5:1.42.0.6
	OPENBSD_4_5_BASE:1.42
	OPENBSD_4_4:1.42.0.4
	OPENBSD_4_4_BASE:1.42
	OPENBSD_4_3:1.42.0.2
	OPENBSD_4_3_BASE:1.42
	OPENBSD_4_2:1.40.0.2
	OPENBSD_4_2_BASE:1.40
	OPENBSD_4_1:1.39.0.2
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.36.0.2
	OPENBSD_4_0_BASE:1.36
	OPENBSD_3_9:1.33.0.2
	OPENBSD_3_9_BASE:1.33
	OPENBSD_3_8:1.30.0.2
	OPENBSD_3_8_BASE:1.30
	OPENBSD_3_7:1.29.0.4
	OPENBSD_3_7_BASE:1.29
	OPENBSD_3_6:1.29.0.2
	OPENBSD_3_6_BASE:1.29
	SMP_SYNC_A:1.27
	SMP_SYNC_B:1.27
	OPENBSD_3_5:1.26.0.2
	OPENBSD_3_5_BASE:1.26
	OPENBSD_3_4:1.24.0.2
	OPENBSD_3_4_BASE:1.24
	UBC_SYNC_A:1.23
	OPENBSD_3_3:1.21.0.4
	OPENBSD_3_3_BASE:1.21
	OPENBSD_3_2:1.21.0.2
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.20.0.4
	OPENBSD_3_1_BASE:1.20
	UBC_SYNC_B:1.21
	UBC:1.20.0.2
	UBC_BASE:1.20
	OPENBSD_3_0:1.18.0.2
	OPENBSD_3_0_BASE:1.18
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	SMP:1.9.0.2
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.48
date	2016.09.03.14.25.27;	author bluhm;	state Exp;
branches;
next	1.47;
commitid	9KYyCUntEsgBdw9n;

1.47
date	2013.03.26.05.04.10;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2013.03.23.16.12.23;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.43;

1.43
date	2011.04.07.15.45.17;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2007.10.01.12.10.55;	author martin;	state Exp;
branches;
next	1.41;

1.41
date	2007.09.01.15.14.44;	author martin;	state Exp;
branches;
next	1.40;

1.40
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.39;

1.39
date	2007.02.20.21.15.01;	author tom;	state Exp;
branches;
next	1.38;

1.38
date	2006.11.30.21.20.41;	author dim;	state Exp;
branches;
next	1.37;

1.37
date	2006.11.29.20.03.20;	author dim;	state Exp;
branches;
next	1.36;

1.36
date	2006.04.27.15.37.53;	author mickey;	state Exp;
branches;
next	1.35;

1.35
date	2006.03.19.01.47.23;	author martin;	state Exp;
branches;
next	1.34;

1.34
date	2006.03.14.09.02.29;	author mickey;	state Exp;
branches;
next	1.33;

1.33
date	2005.12.13.01.56.43;	author martin;	state Exp;
branches;
next	1.32;

1.32
date	2005.11.23.15.57.33;	author mickey;	state Exp;
branches;
next	1.31;

1.31
date	2005.11.14.23.50.26;	author martin;	state Exp;
branches;
next	1.30;

1.30
date	2005.07.31.15.31.13;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2004.08.06.22.31.31;	author mickey;	state Exp;
branches;
next	1.28;

1.28
date	2004.06.13.21.49.16;	author niklas;	state Exp;
branches;
next	1.27;

1.27
date	2004.04.19.22.55.49;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2004.01.14.01.45.50;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2004.01.13.23.56.56;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2003.06.02.23.27.47;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2003.04.17.03.42.14;	author drahn;	state Exp;
branches;
next	1.22;

1.22
date	2003.04.09.07.53.57;	author niklas;	state Exp;
branches;
next	1.21;

1.21
date	2002.06.26.08.42.39;	author art;	state Exp;
branches;
next	1.20;

1.20
date	2001.12.05.18.21.52;	author drahn;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2001.12.05.01.57.14;	author provos;	state Exp;
branches;
next	1.18;

1.18
date	2001.07.18.10.47.04;	author art;	state Exp;
branches;
next	1.17;

1.17
date	2001.07.06.02.07.41;	author provos;	state Exp;
branches;
next	1.16;

1.16
date	2001.05.05.23.25.46;	author art;	state Exp;
branches;
next	1.15;

1.15
date	2001.05.05.20.56.39;	author art;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.07.17.17.28;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	2001.04.03.01.32.24;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.04.02.23.24.12;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.07.21.05.05;	author mjacob;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.22.19.27.48;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.11.27.16.25.32;	author deraadt;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	99.09.20.17.06.00;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.09.17.16.52.05;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.05.28.13.30.14;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.09.17.17.40.23;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.10.25.11.14.15;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.18.19.21.38;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.03.19.21.09.25;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches;
next	;

1.9.2.1
date	2000.03.02.07.04.29;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2001.04.18.16.07.35;	author niklas;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2001.07.04.10.16.48;	author niklas;	state Exp;
branches;
next	1.9.2.4;

1.9.2.4
date	2001.07.14.10.02.40;	author ho;	state Exp;
branches;
next	1.9.2.5;

1.9.2.5
date	2001.10.31.03.01.12;	author nate;	state Exp;
branches;
next	1.9.2.6;

1.9.2.6
date	2002.03.06.01.01.00;	author niklas;	state Exp;
branches;
next	1.9.2.7;

1.9.2.7
date	2003.03.27.23.26.55;	author niklas;	state Exp;
branches;
next	1.9.2.8;

1.9.2.8
date	2003.05.13.19.42.08;	author ho;	state Exp;
branches;
next	1.9.2.9;

1.9.2.9
date	2003.06.07.11.11.37;	author ho;	state Exp;
branches;
next	1.9.2.10;

1.9.2.10
date	2004.06.05.23.09.00;	author niklas;	state Exp;
branches;
next	;

1.20.2.1
date	2002.10.29.00.28.04;	author art;	state Exp;
branches;
next	1.20.2.2;

1.20.2.2
date	2003.05.19.21.45.11;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.48
log
@Increase the number of mbufs on most architectures.  This is based
on a guess how much memory a typical machine has.  If the value is
too high, users may run out of kernel memory.  Then we will have
to adjust this again.
OK claudio@@ deraadt@@
@
text
@/*	$OpenBSD: param.h,v 1.47 2013/03/26 05:04:10 deraadt Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#ifdef _KERNEL
#ifdef _LOCORE
#include <machine/psl.h>
#else
#include <machine/cpu.h>
#endif
#endif

#define	_MACHINE	i386
#define	MACHINE		"i386"
#define	_MACHINE_ARCH	i386
#define	MACHINE_ARCH	"i386"
#define	MID_MACHINE	MID_I386

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define	KERNBASE	0xd0000000

#ifdef _KERNEL

#define	KERNTEXTOFF	(KERNBASE+0x200000)	/* start of kernel text */

#define	NBPG		PAGE_SIZE		/* bytes/page */
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */

#define	UPAGES		2			/* pages of u-area */
#define	USPACE		(UPAGES * PAGE_SIZE)	/* total size of u-area */
#define	USPACE_ALIGN	0			/* u-area alignment 0-none */

#define	NMBCLUSTERS	(32 * 1024)		/* max cluster allocation */

#ifndef	MSGBUFSIZE
#define	MSGBUFSIZE	(4 * PAGE_SIZE)		/* default message buffer size */
#endif

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)

#endif /* _KERNEL */

#endif /* _MACHINE_PARAM_H_ */
@


1.47
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.46 2013/03/25 17:46:24 deraadt Exp $	*/
d70 1
a70 1
#define	NMBCLUSTERS	6144			/* map size, max cluster allocation */
@


1.46
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.45 2013/03/23 16:12:23 deraadt Exp $	*/
a54 2
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */
d63 2
@


1.45
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.44 2011/09/08 03:40:32 guenther Exp $	*/
a50 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.44
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 2
/*	$OpenBSD: param.h,v 1.43 2011/04/07 15:45:17 miod Exp $	*/
/*	$NetBSD: param.h,v 1.29 1996/03/04 05:04:26 cgd Exp $	*/
a32 2
 *
 *	@@(#)param.h	5.8 (Berkeley) 6/28/91
d35 2
a36 3
/*
 * Machine dependent constants for Intel 386.
 */
d56 5
a60 7
#define	PGSHIFT		12		/* LOG2(NBPG) */
#define	NBPG		(1 << PGSHIFT)	/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */

#define PAGE_SHIFT	12
#define PAGE_SIZE	(1 << PAGE_SHIFT)
#define PAGE_MASK	(PAGE_SIZE - 1)
d62 1
a62 1
#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))
d64 1
a64 5
/*
 * Start of kernel virtual space.  Remember to alter the memory and
 * page table layout description in pmap.h when changing this.
 */
#define	KERNBASE	0xd0000000
d68 5
a72 6
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define	BLKDEV_IOSIZE	2048
#ifndef	MAXPHYS
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
#endif
d74 1
a74 3
#define	UPAGES		2		/* pages of u-area */
#define	USPACE		(UPAGES * NBPG)	/* total size of u-area */
#define	USPACE_ALIGN	(0)		/* u-area alignment 0-none */
d76 2
a77 2
#ifndef MSGBUFSIZE
#define MSGBUFSIZE	4*NBPG		/* default message buffer size */
d81 1
a81 6
 * Constants related to network buffer management.
 */
#define	NMBCLUSTERS	6144		/* map size, max cluster allocation */

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
a83 1
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
d86 1
a86 7
/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* bytes to disk blocks */
#define	dbtob(x)	((x) << DEV_BSHIFT)
#define	btodb(x)	((x) >> DEV_BSHIFT)
d88 1
a88 5
/*
 * Mach derived conversion macros
 */
#define	i386_round_pdr(x)	((((unsigned)(x)) + PDOFSET) & ~PDOFSET)
#define	i386_trunc_pdr(x)	((unsigned)(x) & ~PDOFSET)
@


1.43
log
@Make sure the ALIGN() macro uses u_long on all platforms for consistency, and
update the comment block accordingly.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.42 2007/10/01 12:10:55 martin Exp $	*/
d56 3
a58 13
/*
 * Round p (pointer or byte index) up to a correctly-aligned value
 * for all data types (int, long, ...).   The result is u_long and
 * must be cast to any desired pointer type.
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
 */
#define ALIGNBYTES	(sizeof(int) - 1)
#define ALIGN(p)	(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define ALIGNED_POINTER(p,t)   1
@


1.42
log
@more btoc -> atop
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.41 2007/09/01 15:14:44 martin Exp $	*/
d58 1
a58 1
 * for all data types (int, long, ...).   The result is u_int and
d67 1
a67 1
#define ALIGN(p)	(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)
@


1.41
log
@replace the machine dependant bytes-to-clicks macro by the MI ptoa()
version for i386

more architectures and ctob() replacement is being worked on

prodded by and ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.40 2007/05/28 21:02:49 thib Exp $	*/
a117 3

/* bytes to pages */
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
@


1.40
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.39 2007/02/20 21:15:01 tom Exp $	*/
a119 1
#define	ctob(x)		((x) << PGSHIFT)
@


1.39
log
@Revert PAE pmap for now, until the strange bug is found.  This stops
the freezes many of us are seeing (especially on amd64 machines running
OpenBSD/i386).

Much testing by nick@@ (as always - thanks!), hugh@@, ian@@, kettenis@@
and Sam Smith (s (at) msmith (dot) net).

Requested by, input from, and ok deraadt@@  ok art@@, kettenis@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.38 2006/11/30 21:20:41 dim Exp $	*/
a104 4
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a105 4
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11		/* convert bytes to m_buf clusters */
#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define	MCLOFSET	(MCLBYTES - 1)	/* offset within a m_buf cluster */
@


1.38
log
@Oops, didn't mean to increase the default msgbufsize for i386. Noticed by brad, thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.37 2006/11/29 20:03:20 dim Exp $	*/
d78 2
d134 6
@


1.37
log
@Remove all the extern cpu_{id,model,whatever} declarations from most
stuff in arch/i386/i386.  This should prevent more screwups like the
one I did before in ichpcib.c...

ok dlg@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.36 2006/04/27 15:37:53 mickey Exp $	*/
d98 1
a98 1
#define MSGBUFSIZE	64*NBPG		/* default message buffer size */
@


1.36
log
@implement separate PAE pmap that allows access to 64g of physmem
if supported by the cpu(s). currently not enabled by default and
not compiled into ramdisks. this grows paddr_t to 64bit but yet
leaves bus_addr_t at 32bits. measures are taken to favour dmaable
memory allocation from below 4g line such that buffer cache is
already allocated form below, pool backend allocator prefers lower
memory and then finally bounce buffers are used as last resort.
PAE is engaged only if global variable cpu_pae is manually set
to non-zero and there is physical memory present above 4g.
simplify pcibios address math to use u_long as we always will
be in the 32bit space.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.35 2006/03/19 01:47:23 martin Exp $	*/
d98 1
a98 1
#define MSGBUFSIZE	4*NBPG		/* default message buffer size */
@


1.35
log
@remove unused bdbtofsb(bn) macro

found by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.34 2006/03/14 09:02:29 mickey Exp $	*/
a77 2
#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))

a131 6

/*
 * Mach derived conversion macros
 */
#define	i386_round_pdr(x)	((((unsigned)(x)) + PDOFSET) & ~PDOFSET)
#define	i386_trunc_pdr(x)	((unsigned)(x) & ~PDOFSET)
@


1.34
log
@move the kernel 1m up to provide more space for isadma; deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.33 2005/12/13 01:56:43 martin Exp $	*/
a133 8

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE / DEV_BSIZE))
@


1.33
log
@nuke unused BTOPKERNBASE define

pointed out by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.32 2005/11/23 15:57:33 mickey Exp $	*/
d86 1
a86 1
#define	KERNTEXTOFF	(KERNBASE+0x100000)	/* start of kernel text */
@


1.32
log
@kill two old mach macros that are not used anywhere in the tree anymore (or ever)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.31 2005/11/14 23:50:26 martin Exp $	*/
a86 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
@


1.31
log
@convert and remove the last traces of i386_round_page(),
i386_trunc_page(), i386_btop() and i386_ptob()
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.30 2005/07/31 15:31:13 miod Exp $	*/
a148 2
#define	i386_btod(x)		((unsigned)(x) >> PDSHIFT)
#define	i386_dtob(x)		((unsigned)(x) << PDSHIFT)
@


1.30
log
@Get rid of unused SINCR and SSIZE constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2004/08/06 22:31:31 mickey Exp $	*/
a150 4
#define	i386_round_page(x)	((((unsigned)(x)) + PGOFSET) & ~PGOFSET)
#define	i386_trunc_page(x)	((unsigned)(x) & ~PGOFSET)
#define	i386_btop(x)		((unsigned)(x) >> PGSHIFT)
#define	i386_ptob(x)		((unsigned)(x) << PGSHIFT)
@


1.29
log
@provide md USPACE_ALIGN zero on all but mips; deradat@@ pefo@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.28 2004/06/13 21:49:16 niklas Exp $	*/
a95 2
#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
@


1.28
log
@debranch SMP, have fun
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d100 1
@


1.27
log
@remove the GATEWAY junk thingy; at the same time, select a new fat
cluster value that noone will really need to crank.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2004/01/14 01:45:50 miod Exp $	*/
d102 1
a102 1
#define MSGBUFSIZE	2*NBPG		/* default message buffer size */
@


1.26
log
@Revert previous; this will cause issues on some machines, says drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.25 2004/01/13 23:56:56 miod Exp $	*/
d116 1
a116 4

#ifndef NMBCLUSTERS
#define	NMBCLUSTERS	2048		/* map size, max cluster allocation */
#endif
@


1.25
log
@Fix KERNTEXTOFF value (long) after the move to ELF.

tricked-to-commit-into-i386-land millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.24 2003/06/02 23:27:47 millert Exp $	*/
d86 1
a86 1
#define	KERNTEXTOFF	(KERNBASE+0x100120)	/* start of kernel text */
@


1.24
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.23 2003/04/17 03:42:14 drahn Exp $	*/
d86 1
a86 1
#define	KERNTEXTOFF	(KERNBASE+0x100000)	/* start of kernel text */
@


1.23
log
@i386 changes to move to ELF. asm cleanup. Change MAXDSIZ to 512M for 1Gsep.
DARPA funded work.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 2003/04/09 07:53:57 niklas Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.22
log
@Correct commentary describing page table layouts
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2002/06/26 08:42:39 art Exp $	*/
d64 5
d72 1
@


1.21
log
@Bump i386 kvm size to 768M.
deraadt@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2001/12/05 18:21:52 drahn Exp $	*/
d78 6
a83 1
#define	KERNBASE	0xd0000000		/* start of kernel virtual space */
@


1.20
log
@change KMEMPAGES back to 64M, 128M does not work on large memory machines.
ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2001/12/05 18:16:22 drahn Exp $	*/
d78 1
a78 1
#define	KERNBASE	0xe0000000		/* start of kernel virtual space */
@


1.20.2.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2001/12/05 18:21:52 drahn Exp $	*/
d78 1
a78 1
#define	KERNBASE	0xd0000000		/* start of kernel virtual space */
@


1.20.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a63 5
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
a66 1
#define ALIGNED_POINTER(p,t)   1
d78 1
a78 6
/*
 * Start of kernel virtual space.  Remember to alter the memory and
 * page table layout description in pmap.h when changing this.
 */
#define	KERNBASE	0xd0000000

@


1.19
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2001/07/06 02:07:41 provos Exp $	*/
d119 1
a119 1
#define	NKMEMPAGES_MAX_DEFAULT	((128 * 1024 * 1024) >> PAGE_SHIFT)
@


1.18
log
@Get rid of the PMAP_NEW option by making it mandatory for all archs.
The archs that didn't have a proper PMAP_NEW now have a dummy implementation
with wrappers around the old functions.
@
text
@d115 5
a119 5
 * Size of kernel malloc arena in logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / PAGE_SIZE)
#endif
@


1.17
log
@change MSIZE to 256, okay @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/05/05 23:25:46 art Exp $	*/
a96 2

#define PMAP_NEW
@


1.16
log
@PMAP_NEW and UVM are no longer optional on i386.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/05/05 20:56:39 art Exp $	*/
d107 1
a107 1
#define	MSIZE		128		/* size of an mbuf */
@


1.15
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/04/07 17:17:28 niklas Exp $	*/
a97 3
#if !defined(UVM) && defined(PMAP_NEW)
#error PMAP_NEW is not compatible with old VM
#elif defined(UVM) && !defined(PMAP_NEW) && !defined(PMAP_OLD)
a98 3
#elif defined(PMAP_NEW) && defined(PMAP_OLD)
#error Both PMAP_NEW and PMAP_OLD cannot be defined concurrently
#endif
@


1.14
log
@OK, PMAP_NEW by default once again.  This time it should work better for
 userland since art removed the vm_pmap field that made UVM and old VM
differ.  An option PMAP_OLD is provided should someone need to configure
with the old pmap.  This is suspected to go away soon so I will not
document it.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/04/02 23:24:12 niklas Exp $	*/
a88 4
#define	CLSIZELOG2	0
#define	CLSIZE		(1 << CLSIZELOG2)

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
d108 1
a108 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d123 1
a123 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d126 1
a126 1
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / CLBYTES)
@


1.13
log
@If you cannot test your work, please do not do commits and then break userland
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2000/04/07 21:05:05 mjacob Exp $	*/
d100 8
@


1.12
log
@PMAP_NEW is now default behaviour, get old pmap with option PMAP_OLD.
However PMAP_OLD is just there for emergencies, and will go away in the future
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/04/02 23:18:12 niklas Exp $	*/
a99 6
#endif

#if !defined(PMAP_NEW) && !defined(PMAP_OLD)
#define PMAP_NEW
#elif defined(PMAP_NEW) && defined(PMAP_OLD)
#error Both PMAP_NEW and PMAP_OLD cannot be defined concurrently
@


1.11
log
@Protect MAXPHYS against redefinition- this allows you to make a config
option for increasing it to something reasonable for large I/O subsystems
(you get 22MB/s on some of the DataDirect RAID arrays at 64K, about 37MB/s
when you get go to 256KB transfers).
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2000/02/22 19:27:48 deraadt Exp $	*/
d100 6
@


1.10
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1999/11/27 16:25:32 deraadt Exp $	*/
d85 1
d87 1
@


1.9
log
@define PAGE_SIZE and friends, 4K kernel size reduction and probable speed increase; art
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1999/09/20 17:06:00 deraadt Exp $	*/
d95 4
@


1.9.2.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a94 4

#ifndef MSGBUFSIZE
#define MSGBUFSIZE	2*NBPG		/* default message buffer size */
#endif
@


1.9.2.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/04/07 17:17:28 niklas Exp $	*/
a84 1
#ifndef	MAXPHYS
a85 1
#endif
a97 8
#endif

#if !defined(UVM) && defined(PMAP_NEW)
#error PMAP_NEW is not compatible with old VM
#elif defined(UVM) && !defined(PMAP_NEW) && !defined(PMAP_OLD)
#define PMAP_NEW
#elif defined(PMAP_NEW) && defined(PMAP_OLD)
#error Both PMAP_NEW and PMAP_OLD cannot be defined concurrently
@


1.9.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.2.2 2001/04/18 16:07:35 niklas Exp $	*/
d89 4
d102 3
d106 3
d112 1
a112 1
 * MCLBYTES must be no larger than the software page size, and,
d127 1
a127 1
 * Size of kernel malloc arena in logical pages
d130 1
a130 1
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / PAGE_SIZE)
@


1.9.2.4
log
@Initial import of some SMP code from NetBSD.
Not really working here yet, but there is some work in progress.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.2.3 2001/07/04 10:16:48 niklas Exp $	*/
d95 1
a95 1
#define MSGBUFSIZE	4*NBPG		/* default message buffer size */
@


1.9.2.5
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.2.4 2001/07/14 10:02:40 ho Exp $	*/
d98 2
d107 1
a107 1
#define	MSIZE		256		/* size of an mbuf */
@


1.9.2.6
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d115 5
a119 5
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)
@


1.9.2.7
log
@Sync the SMP branch with 3.3
@
text
@d78 1
a78 1
#define	KERNBASE	0xd0000000		/* start of kernel virtual space */
@


1.9.2.8
log
@Sync the SMP branch to -current, plus some ELF-related fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.2.7 2003/03/27 23:26:55 niklas Exp $	*/
a63 5
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
a66 1
#define ALIGNED_POINTER(p,t)   1
d78 1
a78 6
/*
 * Start of kernel virtual space.  Remember to alter the memory and
 * page table layout description in pmap.h when changing this.
 */
#define	KERNBASE	0xd0000000

@


1.9.2.9
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.2.8 2003/05/13 19:42:08 ho Exp $	*/
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.9.2.10
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d116 4
a119 1
#define	NMBCLUSTERS	6144		/* map size, max cluster allocation */
@


1.8
log
@kvm is larger; crank NMBCLUSTERS and NKMEMCLUSTERS
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 1999/09/17 16:52:05 deraadt Exp $	*/
d71 5
@


1.7
log
@grown i386 kvm to 512MB
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 1998/05/28 13:30:14 mickey Exp $	*/
d104 1
a104 5
#ifdef GATEWAY
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
#endif
d111 1
a111 1
#define	NKMEMCLUSTERS	(8 * 1024 * 1024 / CLBYTES)
@


1.6
log
@grow kernel malloc area by 2M
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 1997/09/17 17:40:23 downsj Exp $	*/
d73 2
a74 5
#define	KERNBASE	0xf0000000	/* start of kernel virtual space */
#if 0
#define	KERNSIZE	0x01800000	/* size of kernel virtual space */
#endif
#define	KERNTEXTOFF	0xf0100000	/* start of kernel text */
@


1.5
log
@Double default NMBCLUSTERS, they're too small for modern networks.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 1996/10/25 11:14:15 deraadt Exp $	*/
d118 1
a118 1
#define	NKMEMCLUSTERS	(6 * 1024 * 1024 / CLBYTES)
@


1.4
log
@grow kvm space; fix an over-agressive pmap optimization
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.3 1996/04/18 19:21:38 niklas Exp $	*/
d108 2
a110 2
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
@


1.3
log
@Merge of NetBSD 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d73 2
a74 1
#define	KERNBASE	0xf8000000	/* start of kernel virtual space */
d76 2
a77 1
#define	KERNTEXTOFF	0xf8100000	/* start of kernel text */
@


1.2
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d1 2
a2 1
/*	$NetBSD: param.h,v 1.27 1996/02/01 22:30:47 mycroft Exp $	*/
d54 5
a58 3
#define MACHINE		"i386"
#define MACHINE_ARCH	"i386"
#define MID_MACHINE	MID_I386
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.26 1995/06/26 06:55:58 cgd Exp $	*/
d46 1
a46 1
#ifdef LOCORE
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
