head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.16
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.18
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.30
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.28
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.26
	OPENBSD_5_0:1.9.0.24
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.22
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.20
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.16
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.7.0.10
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.8
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.2
	SMP_BASE:1.5
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.24.20.46.45;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.17.03.42.14;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.18.02.35.06;	author brad;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2000.08.05.22.07.31;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.06.16.40.50;	author d;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2000.01.06.09.02.34;	author d;	state Exp;
branches;
next	1.3;

1.3
date	97.07.26.22.51.27;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.03.24.16.51.43;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.34;	author deraadt;	state Exp;
branches;
next	;

1.5.2.1
date	2001.04.18.16.07.29;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.10.31.03.01.12;	author nate;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2003.05.13.19.42.08;	author ho;	state Exp;
branches;
next	;

1.7.4.1
date	2003.05.19.21.45.11;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@/*	$OpenBSD: cdefs.h,v 1.9 2005/11/24 20:46:45 deraadt Exp $	*/

/*
 * Written by J.T. Conklin <jtc@@wimsey.com> 01/17/95.
 * Public domain.
 */

#ifndef	_MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define __strong_alias(alias,sym)			\
	__asm__(".global " __STRING(alias) " ; "	\
	    __STRING(alias) " = " __STRING(sym))
#define __weak_alias(alias,sym)				\
	__asm__(".weak " __STRING(alias) " ; "		\
	    __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)			\
	__asm__(".section .gnu.warning." __STRING(sym)	\
	    " ; .ascii \"" msg "\" ; .text")

#endif /* !_MACHINE_CDEFS_H_ */
@


1.9
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2003/04/17 03:42:14 drahn Exp $	*/
d11 3
a13 5
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
a19 1
#endif
@


1.8
log
@i386 changes to move to ELF. asm cleanup. Change MAXDSIZ to 512M for 1Gsep.
DARPA funded work.
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.7 2001/08/18 02:35:06 brad Exp $	*/
/*	$NetBSD: cdefs.h,v 1.2 1995/03/23 20:10:26 jtc Exp $	*/
d11 2
a12 7
#if defined(__GNUC__) && defined(__STDC__)
#define __weak_alias(alias,sym)						\
	__asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)					\
	__asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
#else
#define __indr_reference(sym,alias)
d14 8
a21 1
#define __weak_alias(alias,sym)
@


1.7
log
@consistency nit, add some missing preprocessor symbols.
--
Ok'd by: d@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6 2000/08/05 22:07:31 niklas Exp $	*/
d12 5
a16 28
#ifndef	_C_LABEL
#ifdef __STDC__
#define _C_LABEL(x)	__STRING(_ ## x)
#else
#define _C_LABEL(x)	__STRING(_/**/x)
#endif
#endif /* _C_LABEL */

#ifdef __GNUC__
#ifdef __STDC__
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_" #alias "\",11,0,0,0");	\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs \"" msg "\",30,0,0,0");		\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __weak_alias(alias,sym)				\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
#else
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_/**/alias\",11,0,0,0");	\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs msg,30,0,0,0");			\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __weak_alias(alias,sym)				\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
#endif
@


1.7.4.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d12 28
a39 5
#if defined(__GNUC__) && defined(__STDC__)
#define __weak_alias(alias,sym)						\
	__asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)					\
	__asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.2 1995/03/23 20:10:26 jtc Exp $	*/
d41 3
a43 1
#define	__warn_references(sym,msg)	/* nothing */
@


1.5
log
@don't use _C_LABEL. but do use __STRING
@
text
@d1 1
@


1.5.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: cdefs.h,v 1.6 2000/08/05 22:07:31 niklas Exp $	*/
@


1.5.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5.2.1 2001/04/18 16:07:29 niklas Exp $	*/
d41 1
a41 3
#define __indr_reference(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)
@


1.5.2.3
log
@Sync the SMP branch to -current, plus some ELF-related fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5.2.2 2001/10/31 03:01:12 nate Exp $	*/
d12 28
a39 5
#if defined(__GNUC__) && defined(__STDC__)
#define __weak_alias(alias,sym)						\
	__asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)					\
	__asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
@


1.4
log
@add __weak_alias() macro
@
text
@d13 1
a13 1
#define _C_LABEL(x)	_STRING(_ ## x)
d15 1
a15 1
#define _C_LABEL(x)	_STRING(_/**/x)
d27 2
d36 2
a41 4

#define __weak_alias(alias,sym)				\
	__asm__(".weak " _C_LABEL(alias) ";"		\
	_C_LABEL(alias) "=" _C_LABEL(sym))
@


1.3
log
@protect from asm.h _C_LABEL pre-inclusion
@
text
@d39 4
@


1.2
log
@Provide empty __warn_references() when we are not running GCC
@
text
@d11 1
d17 1
@


1.1
log
@Initial revision
@
text
@d33 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
