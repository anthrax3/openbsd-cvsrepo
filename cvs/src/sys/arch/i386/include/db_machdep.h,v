head	1.26;
access;
symbols
	OPENBSD_6_1:1.26.0.2
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.25.0.2
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.23.0.6
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.8
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.4
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.21.0.14
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.10
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.8
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.6
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.4
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.20.0.2
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.19.0.12
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.8
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.10
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.6
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.4
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.2
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.17.0.4
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.2
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.2
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.14.0.4
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.2
	UBC_BASE:1.6
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.26
date	2017.02.06.09.13.41;	author mpi;	state Exp;
branches;
next	1.25;
commitid	wTgEeyM3ktFNF2jh;

1.25
date	2016.04.27.11.10.48;	author mpi;	state Exp;
branches;
next	1.24;
commitid	57btDderNGPG4fjG;

1.24
date	2016.02.27.13.08.07;	author mpi;	state Exp;
branches;
next	1.23;
commitid	hnv9KfQtxhCytAnd;

1.23
date	2014.03.16.20.31.46;	author guenther;	state Exp;
branches;
next	1.22;

1.22
date	2014.03.16.07.48.00;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.20;

1.20
date	2010.11.27.19.57.23;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2008.02.11.20.44.11;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2007.10.19.18.11.18;	author fgsch;	state Exp;
branches;
next	1.17;

1.17
date	2006.11.29.22.40.13;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.15.15.50.41;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2005.11.13.17.50.44;	author fgsch;	state Exp;
branches;
next	1.14;

1.14
date	2005.01.04.21.14.35;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.20.20.18.53;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2004.07.02.16.29.55;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	2004.06.21.22.41.11;	author andreas;	state Exp;
branches;
next	1.10;

1.10
date	2004.06.13.21.49.16;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.18.02.43.13;	author andreas;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.17.03.42.14;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.06.19.53.14;	author miod;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.01.24.09.38.01;	author hugh;	state Exp;
branches;
next	1.4;

1.4
date	97.08.07.09.09.38;	author niklas;	state Exp;
branches
	1.4.12.1;
next	1.3;

1.3
date	97.03.21.00.48.45;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.07.22.06;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2001.04.18.16.07.30;	author niklas;	state Exp;
branches;
next	1.4.12.2;

1.4.12.2
date	2001.11.13.21.00.52;	author niklas;	state Exp;
branches;
next	1.4.12.3;

1.4.12.3
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	1.4.12.4;

1.4.12.4
date	2003.05.13.19.42.08;	author ho;	state Exp;
branches;
next	1.4.12.5;

1.4.12.5
date	2003.05.17.16.07.37;	author andreas;	state Exp;
branches;
next	1.4.12.6;

1.4.12.6
date	2003.05.18.17.41.16;	author niklas;	state Exp;
branches;
next	1.4.12.7;

1.4.12.7
date	2003.06.07.11.11.37;	author ho;	state Exp;
branches;
next	1.4.12.8;

1.4.12.8
date	2004.02.20.22.19.55;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2003.05.19.21.45.11;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Implement Dynamic Profiling, a ddb(4) based & gprof compatible kernel
profiling framework, for i386.

Code patching is used to enable probes when entering functions.  The
probes will call a mcount()-like function to match the behavior of a
GPROF kernel.

A new sysctl knob, ddb.profile, need to be set to 1 in securelevel 0
to be able to use this feature.

ok jasper@@, guenther@@, mlarkin@@
@
text
@/*	$OpenBSD: db_machdep.h,v 1.25 2016/04/27 11:10:48 mpi Exp $	*/
/*	$NetBSD: db_machdep.h,v 1.9 1996/05/03 19:23:59 christos Exp $	*/

/* 
 * Mach Operating System
 * Copyright (c) 1991,1990 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 */

#ifndef	_MACHINE_DB_MACHDEP_H_
#define	_MACHINE_DB_MACHDEP_H_

/*
 * Machine-dependent defines for new kernel debugger.
 */

#include <sys/param.h>
#include <uvm/uvm_extern.h>
#include <machine/trap.h>

typedef	vaddr_t		db_addr_t;	/* address - unsigned */
typedef	long		db_expr_t;	/* expression - signed */

typedef struct trapframe db_regs_t;
extern db_regs_t	ddb_regs;	/* register state */

#define	PC_REGS(regs)	((db_addr_t)(regs)->tf_eip)
#define	SET_PC_REGS(regs, value) (regs)->tf_eip = (int)(value)

#define	BKPT_INST	0xcc		/* breakpoint instruction */
#define	BKPT_SIZE	(1)		/* size of breakpoint inst */
#define	BKPT_SET(inst)	(BKPT_INST)

#define	SSF_INST	0x55
#define	SSF_SIZE	(1)

#define	FIXUP_PC_AFTER_BREAK(regs)	((regs)->tf_eip -= BKPT_SIZE)

#define	db_clear_single_step(regs)	((regs)->tf_eflags &= ~PSL_T)
#define	db_set_single_step(regs)	((regs)->tf_eflags |=  PSL_T)

#define	IS_BREAKPOINT_TRAP(type, code)	((type) == T_BPTFLT)
#define IS_WATCHPOINT_TRAP(type, code)	((type) == T_TRCTRAP && (code) & 15)

#define	I_CALL		0xe8
#define	I_CALLI		0xff
#define	I_RET		0xc3
#define	I_IRET		0xcf

#define	inst_trap_return(ins)	(((ins)&0xff) == I_IRET)
#define	inst_return(ins)	(((ins)&0xff) == I_RET)
#define	inst_call(ins)		(((ins)&0xff) == I_CALL || \
				 (((ins)&0xff) == I_CALLI && \
				  ((ins)&0x3800) == 0x1000))

#define DB_MACHINE_COMMANDS

/*
 * Constants for KGDB.
 */
typedef	long		kgdb_reg_t;
#define	KGDB_NUMREGS	16
#define	KGDB_BUFLEN	512

#define KGDB_ENTER	breakpoint()

/* macro for checking if a thread has used floating-point */

int db_ktrap(int, int, db_regs_t *);

void db_machine_init(void);
int db_enter_ddb(void);
void db_startcpu(int);
void db_stopcpu(int);
void i386_ipi_db(struct cpu_info *);

extern struct mutex ddb_mp_mutex;

/* For ddb_state */
#define DDB_STATE_NOT_RUNNING	0
#define DDB_STATE_RUNNING	1
#define DDB_STATE_EXITING	2

#endif	/* _MACHINE_DB_MACHDEP_H_ */
@


1.25
log
@G/C DDB_REGS.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.24 2016/02/27 13:08:07 mpi Exp $	*/
d53 3
@


1.24
log
@Rename kdb_trap() into db_ktrap().

The goal is to include it in the list of functions that must not be
instrumented.  All ddb(8) functions should be in this list and have
their names start with 'db_'.

ok visa@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.23 2014/03/16 20:31:46 guenther Exp $	*/
a45 1
#define	DDB_REGS	(&ddb_regs)
@


1.23
log
@DDB supports ELF symbols are all archs, and it's always the same as the
native size, so eliminate the #defines.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.22 2014/03/16 07:48:00 guenther Exp $	*/
d87 1
a87 1
int kdb_trap(int, int, db_regs_t *);
@


1.22
log
@Kill DB_*TASK_NAME* macros which were only ever on i386/amd64 and never used.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.21 2011/03/23 16:54:35 pirofti Exp $	*/
a74 3

#define DB_ELF_SYMBOLS
#define DB_ELFSIZE		32
@


1.21
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.20 2010/11/27 19:57:23 miod Exp $	*/
a75 6
/* macros for printing OS server dependent task name */

#define DB_TASK_NAME(task)	db_task_name(task)
#define DB_TASK_NAME_TITLE	"COMMAND                "
#define DB_TASK_NAME_LEN	23
#define DB_NULL_TASK_NAME	"?                      "
a86 4

#if 0
void		db_task_name(/* task_t */);
#endif
@


1.20
log
@Remove ddb single-step load and store counters. Most platforms do not
implement them, and they are of questionable usefulness.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.19 2008/02/11 20:44:11 miod Exp $	*/
d30 2
a31 2
#ifndef	_I386_DB_MACHDEP_H_
#define	_I386_DB_MACHDEP_H_
d115 1
a115 1
#endif	/* _I386_DB_MACHDEP_H_ */
@


1.19
log
@g/c db_thread_fp_used()
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.18 2007/10/19 18:11:18 fgsch Exp $	*/
a72 2
#define inst_load(ins)		0
#define inst_store(ins)		0
@


1.18
log
@remove vars from some prototypes.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.17 2006/11/29 22:40:13 miod Exp $	*/
a100 2

#define db_thread_fp_used(thread)	((thread)->pcb->ims.ifps != 0)
@


1.17
log
@Nuke all commons but one, and enable --warn-common in LINKFLAGS.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.16 2006/03/15 15:50:41 mickey Exp $	*/
d108 2
a109 2
void db_startcpu(int cpu);
void db_stopcpu(int cpu);
@


1.16
log
@remove dead macros
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.15 2005/11/13 17:50:44 fgsch Exp $	*/
d45 1
a45 1
db_regs_t	ddb_regs;	/* register state */
@


1.15
log
@move kgdb_connect and kgdb_panic into MI. looked by miod@@ and kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.14 2005/01/04 21:14:35 espie Exp $	*/
a74 19

/* access capability and access macros */

#define DB_ACCESS_LEVEL		2	/* access any space */
#define DB_CHECK_ACCESS(addr,size,task)				\
	db_check_access(addr,size,task)
#define DB_PHYS_EQ(task1,addr1,task2,addr2)			\
	db_phys_eq(task1,addr1,task2,addr2)
#define DB_VALID_KERN_ADDR(addr)				\
	((addr) >= VM_MIN_KERNEL_ADDRESS && 			\
	 (addr) < VM_MAX_KERNEL_ADDRESS)
#define DB_VALID_ADDRESS(addr,user)				\
	((!(user) && DB_VALID_KERN_ADDR(addr)) ||		\
	 ((user) && (addr) < VM_MAX_ADDRESS))

#if 0
boolean_t 	db_check_access(vaddr_t, int, task_t);
boolean_t	db_phys_eq(task_t, vaddr_t, task_t, vaddr_t);
#endif
@


1.14
log
@SET_PC_REGS, arches tested between me and miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.13 2004/07/20 20:18:53 art Exp $	*/
d112 2
@


1.13
log
@Use mutex instead of SIMPLELOCK for protecting ddb on mp systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.12 2004/07/02 16:29:55 niklas Exp $	*/
d49 1
@


1.12
log
@Maintain %f and %gs over traps.  Mostly from NetBSD.  Preparation for SMP
speedups.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.11 2004/06/21 22:41:11 andreas Exp $	*/
d128 1
a128 1
extern struct SIMPLELOCK ddb_mp_slock;
@


1.11
log
@Make 'machine ddbcpu' work, and use CPU device number instead of APIC id
KNF lesson and ok from niklas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.10 2004/06/13 21:49:16 niklas Exp $	*/
d109 1
a109 1
#define	KGDB_NUMREGS	14
@


1.10
log
@debranch SMP, have fun
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d123 1
a123 2
void db_enter_ddb(void);
void db_leave_ddb(void);
a125 1
void db_movetocpu(int cpu);
d129 5
@


1.9
log
@Add 'machine sysregs' command to ddb for 1386; show idtr, gdtr, ldtr, tr
and cr0-ct4
OK by niklas@@ and more or less by ho@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.8 2003/04/17 03:42:14 drahn Exp $	*/
d123 8
@


1.8
log
@i386 changes to move to ELF. asm cleanup. Change MAXDSIZ to 512M for 1Gsep.
DARPA funded work.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.7 2002/03/14 01:26:33 millert Exp $	*/
d94 2
d121 2
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.6 2001/11/06 19:53:14 miod Exp $	*/
d100 2
@


1.6
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.5 2001/01/24 09:38:01 hugh Exp $	*/
d90 2
a91 2
boolean_t 	db_check_access __P((vaddr_t, int, task_t));
boolean_t	db_phys_eq __P((task_t, vaddr_t, task_t, vaddr_t));
d116 1
a116 1
int kdb_trap __P((int, int, db_regs_t *));
@


1.6.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.6 2001/11/06 19:53:14 miod Exp $	*/
d90 2
a91 2
boolean_t 	db_check_access(vaddr_t, int, task_t);
boolean_t	db_phys_eq(task_t, vaddr_t, task_t, vaddr_t);
d116 1
a116 1
int kdb_trap(int, int, db_regs_t *);
@


1.6.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a99 2
#define DB_ELF_SYMBOLS
#define DB_ELFSIZE		32
@


1.5
log
@KGDB for i386 from NetBSD via niklas, with tweaks and accommodations.
Tested by various, vetted by mickey & theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4 1997/08/07 09:09:38 niklas Exp $	*/
d38 1
a38 1
#include <vm/vm.h>
@


1.4
log
@RCS tag
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.9 1996/05/03 19:23:59 christos Exp $	*/
d41 2
a42 2
typedef	vm_offset_t	db_addr_t;	/* address - unsigned */
typedef	int		db_expr_t;	/* expression - signed */
d90 2
a91 2
boolean_t 	db_check_access __P((vm_offset_t, int, task_t));
boolean_t	db_phys_eq __P((task_t, vm_offset_t, task_t, vm_offset_t));
d100 7
@


1.4.12.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.5 2001/01/24 09:38:01 hugh Exp $	*/
d41 2
a42 2
typedef	vaddr_t		db_addr_t;	/* address - unsigned */
typedef	long		db_expr_t;	/* expression - signed */
d90 2
a91 2
boolean_t 	db_check_access __P((vaddr_t, int, task_t));
boolean_t	db_phys_eq __P((task_t, vaddr_t, task_t, vaddr_t));
a99 7

/*
 * Constants for KGDB.
 */
typedef	long		kgdb_reg_t;
#define	KGDB_NUMREGS	14
#define	KGDB_BUFLEN	512
@


1.4.12.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
#include <uvm/uvm_extern.h>
@


1.4.12.3
log
@Merge in -current from about a week ago
@
text
@d90 2
a91 2
boolean_t 	db_check_access(vaddr_t, int, task_t);
boolean_t	db_phys_eq(task_t, vaddr_t, task_t, vaddr_t);
d116 1
a116 1
int kdb_trap(int, int, db_regs_t *);
@


1.4.12.4
log
@Sync the SMP branch to -current, plus some ELF-related fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4.12.3 2002/03/28 10:31:04 niklas Exp $	*/
a99 2
#define DB_ELF_SYMBOLS
#define DB_ELFSIZE		32
@


1.4.12.5
log
@Some i386-specific stuff:
Stop other CPUs when entering ddb
'machine sysregs' shows system registers not usually used by applications
'machine cpuinfo' shows the status of the processors
'machine startcpu n' starts CPU n
'machine stopcpu n' stops CPU n
'machine ddbcpu n' transfers ddb control to CPU n (not very useful yet
though since the second processor can't use the keyboard...)

Niklas said that I should test this first to at least make sure it
compiles, but I'm too anxious to do my first commit. :)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4.12.4 2003/05/13 19:42:08 ho Exp $	*/
a93 2
#define DB_MACHINE_COMMANDS

a118 10

void db_machine_init(void);
void db_enter_ddb(void);
void db_leave_ddb(void);
void db_startcpu(int cpu);
void db_stopcpu(int cpu);
void db_movetocpu(int cpu);
void i386_ipi_db(void);

extern struct simplelock ddb_mp_slock;
@


1.4.12.6
log
@Go back to defining simplelocks as noops, even if MULTIPROCESSOR.  Instead use
a new real simple recursive-lock capable lock implementation for the few
necessary locks (kernel, scheduler, tlb shootdown, printf and ddb MP).
This because we cannot trust the old fine-grained locks spread out all over
our kernel, and not really tested.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4.12.5 2003/05/17 16:07:37 andreas Exp $	*/
d130 1
a130 1
extern struct SIMPLELOCK ddb_mp_slock;
@


1.4.12.7
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4.12.6 2003/05/18 17:41:16 niklas Exp $	*/
@


1.4.12.8
log
@Import NetBSD updates to NPX logic, and IPI API
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d128 1
a128 1
void i386_ipi_db(struct cpu_info *);
@


1.3
log
@New FIXUP_PC_AFTER_BREAK convention from NetBSD
@
text
@d1 1
@


1.2
log
@sync with 0504; prototype changes
@
text
@d53 1
a53 1
#define	FIXUP_PC_AFTER_BREAK		ddb_regs.tf_eip -= BKPT_SIZE;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: db_machdep.h,v 1.8 1994/10/27 04:16:02 cgd Exp $	*/
d88 4
a91 2
boolean_t 	db_check_access(/* vm_offset_t, int, task_t */);
boolean_t	db_phys_eq(/* task_t, vm_offset_t, task_t, vm_offset_t */);
d100 1
d102 1
d107 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
