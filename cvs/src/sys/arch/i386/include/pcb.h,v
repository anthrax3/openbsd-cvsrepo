head	1.20;
access;
symbols
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.6
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.8
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.6
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.8
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.6
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.4
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.14.0.14
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.12
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.8
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.10
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.6
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.4
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.13.0.14
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.7.0.12
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.10
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.6
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.16
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.03.24.04.56.08;	author guenther;	state Exp;
branches;
next	1.19;
commitid	VRKppYthMQboSLVW;

1.19
date	2016.03.15.03.17.51;	author guenther;	state Exp;
branches;
next	1.18;
commitid	hTA8iQcFPhTNwQXL;

1.18
date	2015.05.05.02.13.46;	author guenther;	state Exp;
branches;
next	1.17;
commitid	dNPv28CJI5BxtRGW;

1.17
date	2013.05.08.15.36.30;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.12.03.52.26;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2007.10.03.07.51.26;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.02.16.29.55;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.13.21.49.16;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.01.19.05.23;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.01.12.26.45;	author grange;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.27.47;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.02.21.07.50;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.24.18.11.48;	author millert;	state Exp;
branches
	1.7.6.1;
next	1.6;

1.6
date	2001.03.22.23.36.52;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.05.22.07.32;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.24.21.07.51;	author bjc;	state Exp;
branches;
next	1.3;

1.3
date	96.08.27.10.46.54;	author downsj;	state Exp;
branches
	1.3.16.1;
next	1.2;

1.2
date	96.01.11.17.59.06;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches;
next	;

1.3.16.1
date	2001.04.18.16.07.36;	author niklas;	state Exp;
branches;
next	1.3.16.2;

1.3.16.2
date	2001.07.14.10.02.40;	author ho;	state Exp;
branches;
next	1.3.16.3;

1.3.16.3
date	2003.04.11.16.12.57;	author niklas;	state Exp;
branches;
next	1.3.16.4;

1.3.16.4
date	2003.05.13.19.42.08;	author ho;	state Exp;
branches;
next	1.3.16.5;

1.3.16.5
date	2003.06.07.11.11.37;	author ho;	state Exp;
branches;
next	1.3.16.6;

1.3.16.6
date	2004.02.19.10.48.42;	author niklas;	state Exp;
branches;
next	1.3.16.7;

1.3.16.7
date	2004.06.10.11.40.25;	author niklas;	state Exp;
branches;
next	;

1.7.6.1
date	2003.05.19.21.45.11;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Delete i386_{get,set}_ioperm(2) APIs and underlying sysarch(2) bits.
They're no longer used by anything and should let us simplify the TSS
handling.

ok mikeb@@ naddy@@
@
text
@/*	$OpenBSD: pcb.h,v 1.19 2016/03/15 03:17:51 guenther Exp $	*/
/*	$NetBSD: pcb.h,v 1.21 1996/01/08 13:51:42 mycroft Exp $	*/

/*-
 * Copyright (c) 1995 Charles M. Hannum.  All rights reserved.
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)pcb.h	5.10 (Berkeley) 5/12/91
 */

/*
 * Intel 386 process control block
 */

#ifndef _MACHINE_PCB_H_
#define _MACHINE_PCB_H_

#include <sys/signal.h>

#include <machine/segments.h>
#include <machine/tss.h>
#include <machine/npx.h>
#include <machine/sysarch.h>

struct pcb {
	struct	i386tss pcb_tss;
#define	pcb_cr3	pcb_tss.tss_cr3
#define	pcb_esp	pcb_tss.tss_esp
#define	pcb_ebp	pcb_tss.tss_ebp
#define	pcb_cs	pcb_tss.tss_cs
	int	pcb_cr0;		/* saved image of CR0 */
	caddr_t	pcb_onfault;		/* copyin/out fault recovery */
	union	savefpu pcb_savefpu;	/* floating point state for FPU */
	struct	segment_descriptor pcb_threadsegs[2];
					/* per-thread descriptors */
	int	vm86_eflags;		/* virtual eflags for vm86 mode */
	int	vm86_flagmask;		/* flag mask for vm86 mode */
	void	*vm86_userp;		/* XXX performance hack */
	struct  pmap *pcb_pmap;         /* back pointer to our pmap */
	struct	cpu_info *pcb_fpcpu;	/* cpu holding our fpu state */
	int	pcb_flags;
#define PCB_SAVECTX	0x00000001
};

/* the indexes of the %fs/%gs segments in pcb_threadsegs */
#define	TSEG_FS		0
#define	TSEG_GS		1

#endif /* _MACHINE_PCB_H_ */
@


1.19
log
@Burn more LDT deadwood: stop allocating one for each idle thread,
load the ldt register with the null selector (disabling use of it),
stop reloading it on every context switch, and blow away the table
itself, as well as the pcb and pmap bits that were used to track
it (making sure to keep pcb_savefpu correctly aligned).

testing naddy@@
ok kettenis@@ mpi@@ mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.18 2015/05/05 02:13:46 guenther Exp $	*/
a52 2
#define	NIOPORTS	1024		/* # of ports we allow to be mapped */

d60 1
a60 1
	int	__pcb_padding;		/* for 16-byte align of pcb_savefpu */
a63 4
/*
 * Software pcb (extension)
 */
	caddr_t	pcb_onfault;		/* copyin/out fault recovery */
a68 2
	u_long	pcb_iomap[NIOPORTS/32];	/* I/O bitmap */
	u_char	pcb_iomap_pad;	/* required; must be 0xff, says intel */
@


1.18
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.17 2013/05/08 15:36:30 tedu Exp $	*/
d61 2
a62 3
#define	pcb_ldt_sel	pcb_tss.tss_ldt
	union	descriptor *pcb_ldt;	/* per process (user) LDT */
	int	pcb_ldt_len;		/*      number of LDT entries */
a63 1
	int	pcb_cr0;		/* saved image of CR0 */
@


1.17
log
@remove stale cyrix emc support, and switch to just using intial npxcw
ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.16 2011/03/23 16:54:35 pirofti Exp $	*/
a85 8

/*    
 * The pcb is augmented with machine-dependent additional data for 
 * core dumps. For the i386, there is nothing to add.
 */     
struct md_coredump {
	long	md_pad[8];
};    
@


1.16
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.15 2011/03/12 03:52:26 guenther Exp $	*/
a65 1
	struct	emcsts pcb_saveemc;	/* Cyrix EMC state */
@


1.15
log
@Provide distinct segments for the %fs and %gs selectors to use by
default, with per-rthread base offsets and with sysarch() functions,
I386_{GET,SET}_{FS,GS}BASE, for fetching and setting those base
offsets.  This is necessary for both rthread and Linux compat support.

suggestions from kettenis@@, prodding from pirofti@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.14 2007/10/03 07:51:26 kettenis Exp $	*/
d43 2
a44 2
#ifndef _I386_PCB_H_
#define _I386_PCB_H_
d96 1
a96 1
#endif /* _I386_PCB_H_ */
@


1.14
log
@Add pcb_flags member to 'struct pcb', and set PCB_SAVECTX on contexts saved
by savectx().

ok art@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.13 2004/07/02 16:29:55 niklas Exp $	*/
a61 1
	int	pcb_tss_sel;
d64 1
a65 2
	int	pcb_pad[2];		/* savefpu on 16-byte boundary */
	union	savefpu pcb_savefpu;	/* floating point state for FPU */
d67 2
d83 4
@


1.13
log
@Maintain %f and %gs over traps.  Mostly from NetBSD.  Preparation for SMP
speedups.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.12 2004/06/13 21:49:16 niklas Exp $	*/
d80 2
@


1.12
log
@debranch SMP, have fun
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a60 2
#define	pcb_fs	pcb_tss.tss_fs
#define	pcb_gs	pcb_tss.tss_gs
@


1.11
log
@Enable FXSR all the time, and cope with NPX/FXSR conversions; from netbsd.
Pass SSE/SSE2/XCRYPT flags out via syctl, and prepare for being able to do
xcrypt-* in userland; ok naddy, tested a lot by pvalchev and jolan, also
works on amd64 in 32bit mode
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.10 2004/02/01 12:26:45 grange Exp $	*/
d78 2
a79 1
	struct pmap *pcb_pmap;		/* back pointer to our pmap */
a90 4

#ifdef _KERNEL
struct pcb *curpcb;		/* our current running pcb */
#endif
@


1.10
log
@Sync user ldt code with NetBSD:
- finally remove it from pcb, it's a pmap thing only
- more sanity checks
- better lockin
- may be something else

Fixes panics when using apps requiring it (mplayer-win32 e.g.).
Problem found and test espie@@.
OKs from miod@@ (sshhh, don't tell anyone) and art@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.9 2003/06/02 23:27:47 millert Exp $	*/
d65 2
a66 2
        union	descriptor *pcb_ldt;	/* per process (user) LDT */
        int	pcb_ldt_len;		/*      number of LDT entries */
d68 2
a69 1
	union	fsave87 pcb_savefpu;	/* floating point state for 287/387 */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.8 2003/05/02 21:07:50 mickey Exp $	*/
a72 2
	int	pcb_flags;
#define	PCB_USER_LDT	0x01		/* has user-set LDT */
@


1.8
log
@when flipping the code descriptors also update cs in the
tss and not only in the frame since we might be returning that way too.
add a heuristic for detecting an exec protection fault:
iff we get a read protection fault (which we normally never
get due to our segments being always readable) we assume that
it was an exec protection indeed and go to page fault
routine which will decide the rest for us (including sending
a signal should that be needed).
problem found by drahn@@ and testing by many ppl.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.7 2001/03/24 18:11:48 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@Remove an #ifdef PMAP_NEW so userland (specifically ps) doesn't
have to define PMAP_NEW all over the place.  This means there is an
unused entry in struct pcb for pmap.old but that's going away (and
it doesn't hurt anything).
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.6 2001/03/22 23:36:52 niklas Exp $	*/
d64 1
@


1.7.6.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a63 1
#define	pcb_cs	pcb_tss.tss_cs
@


1.6
log
@Merge in NetBSD's PMAP_NEW, still disabled
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.5 2000/08/05 22:07:32 niklas Exp $	*/
a81 1
#ifdef PMAP_NEW
a82 1
#endif
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.21 1996/01/08 13:51:42 mycroft Exp $	*/
d82 3
@


1.4
log
@Add an extra byte to the end of struct pcb and make sure that it is set to
0xff.  Intel (vol1 section 9.5.2) says that there must be a byte inside the
TSS after the iomap because it always reads two bytes when checking
permissions for io accesses.  before this, bits 1016-1023 were ignored.

This means that the entire pcb_iomap (and i386_*_ioperm) are accurate;
pr#1190 fixed
@
text
@d1 1
@


1.3
log
@Add:
	* GPL_MATH_EMULATE: fpemul
	* ALWAYS_MATH_EMULATE: causes npx probe to always fail.
	* better fp context in struct pcb.
@
text
@d82 1
@


1.3.16.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: pcb.h,v 1.7 2001/03/24 18:11:48 millert Exp $	*/
a80 1
	struct pmap *pcb_pmap;		/* back pointer to our pmap */
a81 1
	u_char	pcb_iomap_pad;	/* required; must be 0xff, says intel */
@


1.3.16.2
log
@Initial import of some SMP code from NetBSD.
Not really working here yet, but there is some work in progress.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.3.16.1 2001/04/18 16:07:36 niklas Exp $	*/
d82 1
a82 2
	struct  pmap *pcb_pmap;         /* back pointer to our pmap */
	struct	cpu_info *pcb_fpcpu;	/* cpu holding our fpu state */
a95 1
#ifndef MULTIPROCESSOR
a96 1
#endif
@


1.3.16.3
log
@Move TSS selector from the PCB to MD part of proc and to cpu_info.
Maintain a list of CPUs and provide an iterator for it.
Ifdef out IPI debugging.  Call pmap_{de,}activate as part of context switching.
Mostly from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.3.16.2 2001/07/14 10:02:40 ho Exp $	*/
d67 1
@


1.3.16.4
log
@Sync the SMP branch to -current, plus some ELF-related fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.3.16.3 2003/04/11 16:12:57 niklas Exp $	*/
a63 1
#define	pcb_cs	pcb_tss.tss_cs
@


1.3.16.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.3.16.4 2003/05/13 19:42:08 ho Exp $	*/
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3.16.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d64 2
a65 3
	int	pcb_tss_sel;
	union	descriptor *pcb_ldt;	/* per process (user) LDT */
	int	pcb_ldt_len;		/*      number of LDT entries */
d67 1
a67 2
	int	pcb_pad[2];		/* savefpu on 16-byte boundary */
	union	savefpu pcb_savefpu;	/* floating point state for FPU */
d72 2
@


1.3.16.7
log
@sync with head, make i386 __HAVE_CPUINFO
@
text
@d92 6
@


1.2
log
@from netbsd; VM86 support, by John Kohl, touched up a bit by charles
@
text
@d70 1
a70 1
	struct	save87 pcb_savefpu;	/* floating point state for 287/387 */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: pcb.h,v 1.20 1995/10/11 04:20:16 mycroft Exp $	*/
d56 2
d78 4
a81 1
	u_long	pcb_iomap[1024/32];	/* I/O bitmap */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
