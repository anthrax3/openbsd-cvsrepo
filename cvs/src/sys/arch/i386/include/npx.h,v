head	1.19;
access;
symbols
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.18
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.14
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.10
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.12
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.4
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.8
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.6
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.15.0.2
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.14
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.8
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2013.05.08.15.48.05;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2013.05.08.15.36.30;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.16;

1.16
date	2011.03.20.21.44.08;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2010.09.29.15.11.31;	author joshe;	state Exp;
branches;
next	1.14;

1.14
date	2010.09.29.13.46.38;	author joshe;	state Exp;
branches;
next	1.13;

1.13
date	2010.07.01.17.30.27;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.29.21.13.43;	author thib;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.03.21.51.01;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.01.18.07.56;	author kettenis;	state Exp;
branches
	1.10.8.1
	1.10.10.1
	1.10.14.1;
next	1.9;

1.9
date	2006.07.25.19.16.51;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.20.05.37.14;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.13.21.49.16;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.01.19.05.23;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.27.47;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.05.22.07.32;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.02.08.20.21.33;	author tholo;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	96.08.27.10.46.54;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches;
next	;

1.3.14.1
date	2001.04.18.16.07.35;	author niklas;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2003.06.07.11.11.37;	author ho;	state Exp;
branches;
next	1.3.14.3;

1.3.14.3
date	2004.02.19.10.48.42;	author niklas;	state Exp;
branches;
next	1.3.14.4;

1.3.14.4
date	2004.04.06.13.36.19;	author niklas;	state Exp;
branches;
next	1.3.14.5;

1.3.14.5
date	2004.06.08.20.17.09;	author drahn;	state Exp;
branches;
next	;

1.10.8.1
date	2009.10.05.00.36.05;	author sthen;	state Exp;
branches;
next	;

1.10.10.1
date	2009.10.05.00.36.33;	author sthen;	state Exp;
branches;
next	;

1.10.14.1
date	2009.10.05.00.37.54;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.19
log
@this comment is not attached to this value. remove
@
text
@/*	$OpenBSD: npx.h,v 1.18 2013/05/08 15:36:30 tedu Exp $	*/
/*	$NetBSD: npx.h,v 1.11 1994/10/27 04:16:11 cgd Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)npx.h	5.3 (Berkeley) 1/18/91
 */

/*
 * 287/387 NPX Coprocessor Data Structures and Constants
 * W. Jolitz 1/90
 */

#ifndef	_MACHINE_NPX_H_
#define	_MACHINE_NPX_H_

/* Environment information of floating point unit */
struct	env87 {
	long	en_cw;		/* control word (16bits) */
	long	en_sw;		/* status word (16bits) */
	long	en_tw;		/* tag word (16bits) */
	long	en_fip;		/* floating point instruction pointer */
	u_short	en_fcs;		/* floating code segment selector */
	u_short	en_opcode;	/* opcode last executed (11 bits ) */
	long	en_foo;		/* floating operand offset */
	long	en_fos;		/* floating operand segment selector */
};

#define EN_SW_IE	0x0001	/* invalid operation */
#define EN_SW_DE	0x0002	/* denormal */
#define EN_SW_ZE	0x0004	/* divide by zero */
#define EN_SW_OE	0x0008	/* overflow */
#define EN_SW_UE	0x0010	/* underflow */
#define EN_SW_PE	0x0020	/* loss of precision */

/* Contents of each floating point accumulator */
struct	fpacc87 {
#ifdef dontdef	/* too unportable */
	u_long	fp_mantlo;	/* mantissa low (31:0) */
	u_long	fp_manthi;	/* mantissa high (63:32) */
	int	fp_exp:15;	/* exponent */
	int	fp_sgn:1;	/* mantissa sign */
#else
	u_char	fp_bytes[10];
#endif
};

/* Floating point and emulator context */
struct	save87 {
	struct	env87 sv_env;		/* floating point control/status */
	struct	fpacc87 sv_ac[8];	/* accumulator contents, 0-7 */
	u_long	sv_ex_sw;		/* status word for last exception */
	u_long	sv_ex_tw;		/* tag word for last exception */
};

/* Environment of FPU/MMX/SSE/SSE2. */
struct envxmm {
/*0*/	uint16_t en_cw;		/* FPU Control Word */
	uint16_t en_sw;		/* FPU Status Word */
	uint8_t  en_tw;		/* FPU Tag Word (abridged) */
	uint8_t  en_rsvd0;
	uint16_t en_opcode;	/* FPU Opcode */
	uint32_t en_fip;	/* FPU Instruction Pointer */
	uint16_t en_fcs;	/* FPU IP selector */
	uint16_t en_rsvd1;
/*16*/	uint32_t en_foo;	/* FPU Data pointer */
	uint16_t en_fos;	/* FPU Data pointer selector */
	uint16_t en_rsvd2;
	uint32_t en_mxcsr;	/* MXCSR Register State */
	uint32_t en_mxcsr_mask; /* Mask for valid MXCSR bits (may be 0) */
};

/* FPU regsters in the extended save format. */
struct fpaccxmm {
	uint8_t	fp_bytes[10];
	uint8_t	fp_rsvd[6];
};

/* SSE/SSE2 registers. */
struct xmmreg {
	uint8_t sse_bytes[16];
};

/* FPU/MMX/SSE/SSE2 context */
struct savexmm {
	struct envxmm sv_env;		/* control/status context */
	struct fpaccxmm sv_ac[8];	/* ST/MM regs */
	struct xmmreg sv_xmmregs[8];	/* XMM regs */
	uint8_t sv_rsvd[16 * 14];
	/* 512-bytes --- end of hardware portion of save area */
	uint32_t sv_ex_sw;		/* saved SW from last exception */
	uint32_t sv_ex_tw;		/* saved TW from last exception */
};

union savefpu {
	struct save87 sv_87;
	struct savexmm sv_xmm;
};

#define	__INITIAL_NPXCW__	0x037f

/*
 * The default MXCSR value at reset is 0x1f80, IA-32 Instruction
 * Set Reference, pg. 3-369.
 */
#define	__INITIAL_MXCSR__	0x1f80
#define	__INITIAL_MXCSR_MASK__	0xffbf

/*
 * The standard control word from finit is 0x37F, giving:
 *	round to nearest
 *	64-bit precision
 *	all exceptions masked.
 */

void    process_xmm_to_s87(const struct savexmm *, struct save87 *);
void    process_s87_to_xmm(const struct save87 *, struct savexmm *);

struct cpu_info;
struct trapframe;

extern uint32_t	fpu_mxcsr_mask;

void	npxinit(struct cpu_info *);
void	npxtrap(struct trapframe *);
void	fpu_kernel_enter(void);
void	fpu_kernel_exit(void);

#endif /* !_MACHINE_NPX_H_ */
@


1.18
log
@remove stale cyrix emc support, and switch to just using intial npxcw
ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.17 2011/03/23 16:54:35 pirofti Exp $	*/
a128 1
/* Intel prefers long real (53 bit) precision */
@


1.17
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.16 2011/03/20 21:44:08 guenther Exp $	*/
a128 7
/* Cyrix EMC memory - mapped coprocessor context switch information */
struct	emcsts {
	long	em_msw;		/* memory mapped status register when swtched */
	long	em_tar;		/* memory mapped temp A register when swtched */
	long	em_dl;		/* memory mapped D low register when swtched */
};

d130 1
a130 2
#define __BDE_NPXCW__		0x1272		/* FreeBSD */
#define	__OpenBSD_NPXCW__	0x37f
a144 2

#define	__INITIAL_NPXCW__	__OpenBSD_NPXCW__
@


1.16
log
@When reading MXCSR from userland sigcontext or a ptrace request,
mask out invalid bits to prevent a protect fault.

Original diff by joshe@@; further feedback and ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.15 2010/09/29 15:11:31 joshe Exp $	*/
d43 2
a44 2
#ifndef	_I386_NPX_H_
#define	_I386_NPX_H_
d169 1
a169 1
#endif /* !_I386_NPX_H_ */
@


1.15
log
@Back out previous, it appears to be broken.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.13 2010/07/01 17:30:27 tedu Exp $	*/
d99 1
a99 1
	uint32_t en_rsvd3;
d144 2
a145 1
#define __INITIAL_MXCSR__       0x1f80
d161 2
@


1.14
log
@When reading MXCSR from userland sigcontext, mask out invalid bits.

This prevents a protection fault if a userland signal handler
scribbles all over it's struct sigcontext

Help from and ok guenther@@ kettenis@@
@
text
@d99 1
a99 1
	uint32_t en_mxcsr_mask; /* Mask for valid MXCSR bits (may be 0) */
a144 1
#define __INITIAL_MXCSR_MASK__	0xffbf
a159 2

extern uint32_t	fpu_mxcsr_mask;
@


1.13
log
@another day, another compat gets removed.  today is ibcs2's turn
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.12 2010/06/29 21:13:43 thib Exp $	*/
d99 1
a99 1
	uint32_t en_rsvd3;
d145 1
d161 2
@


1.12
log
@fpu_kernel_{enter,exit}; Functions to allow the use of
the FPU in the kernel.

From Mike Belopuhov; Little bits by myself.

Comments/OK kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.11 2009/10/03 21:51:01 kettenis Exp $	*/
a136 1
#define	__iBCS_NPXCW__		0x262
a150 6
 *
 * The iBCS control word has underflow, overflow, zero divide, and invalid
 * operation exceptions unmasked.  But that causes an unexpected exception
 * in the test program 'paranoia' and makes denormals useless (DBL_MIN / 2
 * underflows).  It doesn't make a lot of sense to trap underflow without
 * trapping denormals.
@


1.11
log
@Properly handle XMM exceptions instead of panicing the kernel.  Fixes the
issue reported by Slava Pestov.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.10 2006/10/01 18:07:56 kettenis Exp $	*/
d170 2
@


1.10
log
@Switch fpu control word to the hardware default.  This makes us use 64-bit
precision instead of 53-bit precision, giving us proper support for
"long double".

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.9 2006/07/25 19:16:51 kettenis Exp $	*/
d164 1
d166 1
d169 1
@


1.10.14.1
log
@Properly handle XMM exceptions instead of panicing the kernel.  Fixes the
issue reported by Slava Pestov. Fix from kettenis@@.

MFC requested by deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.10 2006/10/01 18:07:56 kettenis Exp $	*/
a163 1

a164 1
struct trapframe;
a166 1
void	npxtrap(struct trapframe *);
@


1.10.10.1
log
@Properly handle XMM exceptions instead of panicing the kernel.  Fixes the
issue reported by Slava Pestov. Fix from kettenis@@.

MFC requested by deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.10 2006/10/01 18:07:56 kettenis Exp $	*/
a163 1

a164 1
struct trapframe;
a166 1
void	npxtrap(struct trapframe *);
@


1.10.8.1
log
@Properly handle XMM exceptions instead of panicing the kernel.  Fixes the
issue reported by Slava Pestov. Fix from kettenis@@.

MFC requested by deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.10 2006/10/01 18:07:56 kettenis Exp $	*/
a163 1

a164 1
struct trapframe;
a166 1
void	npxtrap(struct trapframe *);
@


1.9
log
@Kill option GPL_MATH_EMULATE.

ok deraadt@@ and many others.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.8 2004/07/20 05:37:14 kettenis Exp $	*/
d139 1
a139 1
#define	__OpenBSD_NPXCW__	0x127f
a151 10
 *
 * Now we want:
 *	affine mode (if we decide to support 287's)
 *	round to nearest
 *	53-bit precision
 *	all exceptions masked.
 *
 * 64-bit precision often gives bad results with high level languages
 * because it makes the results of calculations depend on whether
 * intermediate values are stored in memory or in FPU registers.
@


1.8
log
@Move tag word to the right location in `struct envxmm'.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.7 2004/06/13 21:49:16 niklas Exp $	*/
a76 4
#ifdef GPL_MATH_EMULATE
#include <gnu/arch/i386/fpemul/math_emu.h>
#endif

a126 5
#ifdef GPL_MATH_EMULATE
	union i387_union gplemu;
#else
	u_char emupad[176];		/* sizeof(i387_union) */
#endif
@


1.7
log
@debranch SMP, have fun
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d93 1
a94 1
	uint8_t  en_tw;		/* FPU Tag Word (abridged) */
@


1.6
log
@Enable FXSR all the time, and cope with NPX/FXSR conversions; from netbsd.
Pass SSE/SSE2/XCRYPT flags out via syctl, and prepare for being able to do
xcrypt-* in userland; ok naddy, tested a lot by pvalchev and jolan, also
works on amd64 in 32bit mode
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.5 2003/06/02 23:27:47 millert Exp $	*/
d183 3
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.4 2000/08/05 22:07:32 niklas Exp $	*/
d89 42
a130 3
/* For the pcb. */
union	fsave87 {
	struct	save87 npx;
d151 6
d180 3
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.11 1994/10/27 04:16:11 cgd Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@Add definitions for the exception bits in the status word
@
text
@d1 1
@


1.3.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: npx.h,v 1.4 2000/08/05 22:07:32 niklas Exp $	*/
@


1.3.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.3.14.1 2001/04/18 16:07:35 niklas Exp $	*/
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3.14.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d89 3
a91 42
/* Environment of FPU/MMX/SSE/SSE2. */
struct envxmm {
/*0*/	uint16_t en_cw;		/* FPU Control Word */
	uint16_t en_sw;		/* FPU Status Word */
	uint8_t  en_rsvd0;
	uint8_t  en_tw;		/* FPU Tag Word (abridged) */
	uint16_t en_opcode;	/* FPU Opcode */
	uint32_t en_fip;	/* FPU Instruction Pointer */
	uint16_t en_fcs;	/* FPU IP selector */
	uint16_t en_rsvd1;
/*16*/	uint32_t en_foo;	/* FPU Data pointer */
	uint16_t en_fos;	/* FPU Data pointer selector */
	uint16_t en_rsvd2;
	uint32_t en_mxcsr;	/* MXCSR Register State */
	uint32_t en_rsvd3;
};

/* FPU regsters in the extended save format. */
struct fpaccxmm {
	uint8_t	fp_bytes[10];
	uint8_t	fp_rsvd[6];
};

/* SSE/SSE2 registers. */
struct xmmreg {
	uint8_t sse_bytes[16];
};

/* FPU/MMX/SSE/SSE2 context */
struct savexmm {
	struct envxmm sv_env;		/* control/status context */
	struct fpaccxmm sv_ac[8];	/* ST/MM regs */
	struct xmmreg sv_xmmregs[8];	/* XMM regs */
	uint8_t sv_rsvd[16 * 14];
	/* 512-bytes --- end of hardware portion of save area */
	uint32_t sv_ex_sw;		/* saved SW from last exception */
	uint32_t sv_ex_tw;		/* saved TW from last exception */
};

union savefpu {
	struct save87 sv_87;
	struct savexmm sv_xmm;
a111 6
 * The default MXCSR value at reset is 0x1f80, IA-32 Instruction
 * Set Reference, pg. 3-369.
 */
#define __INITIAL_MXCSR__       0x1f80

/*
a134 3

void    process_xmm_to_s87(const struct savexmm *, struct save87 *);
void    process_s87_to_xmm(const struct save87 *, struct savexmm *);
@


1.3.14.4
log
@forgot proto
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.3.14.3 2004/02/19 10:48:42 niklas Exp $	*/
a182 2

void	npxinit(struct cpu_info *);
@


1.3.14.5
log
@fix includes:
The following patches clean up the build for userland, systat/vmstat build,
systm.h and sched.h should not be picked up by these userland programs,
but they define _KERNEL.

intrdefs.h is needed to build the kernel after the include removals
(interdefs.h is present in cpu.h on amd64 too)

add 'struct cpu_info' to quiet a bunch of warnings in userland in npx.h
@
text
@d1 1
a1 1
/*	$OpenBSD: npx.h,v 1.3.14.4 2004/04/06 13:36:19 niklas Exp $	*/
a182 1
struct cpu_info;
@


1.2
log
@Add:
	* GPL_MATH_EMULATE: fpemul
	* ALWAYS_MATH_EMULATE: causes npx probe to always fail.
	* better fp context in struct pcb.
@
text
@d61 7
@


1.1
log
@Initial revision
@
text
@d73 5
a77 1
/* Floating point context */
d80 12
a91 5
	struct	fpacc87	sv_ac[8];	/* accumulator contents, 0-7 */
#ifndef dontdef
	u_long	sv_ex_sw;	/* status word for last exception (was pad) */
	u_long	sv_ex_tw;	/* tag word for last exception (was pad) */
	u_char	sv_pad[8 * 2 - 2 * 4];	/* bogus historical padding */
d104 2
a105 1
#define	__NetBSD_NPXCW__	0x127f
d130 1
a130 1
#define	__INITIAL_NPXCW__	__NetBSD_NPXCW__
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
