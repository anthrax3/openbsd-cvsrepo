head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.12
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.8
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.4
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.12
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.10
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.6
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.4
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.2
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.10
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.8
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.4
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.6
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.15.0.28
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.26
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.24
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.22
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.20
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.18
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.16
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.14
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.12
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.15.0.10
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.8
	OPENBSD_3_4_BASE:1.15
	UBC_SYNC_A:1.15
	OPENBSD_3_3:1.15.0.6
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.4
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	UBC_SYNC_B:1.15
	UBC:1.14.0.2
	UBC_BASE:1.14
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.2
	SMP_BASE:1.9
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.4
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.20
date	2015.02.06.08.16.49;	author dcoppa;	state Exp;
branches;
next	1.19;
commitid	Y0BsHx9r6GXhiW4Y;

1.19
date	2012.07.08.18.02.45;	author guenther;	state Exp;
branches;
next	1.18;

1.18
date	2012.03.26.16.21.34;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.16;

1.16
date	2009.02.26.17.19.47;	author oga;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.14.17.07.40;	author mickey;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.08.18.06.08.08;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.24.21.17.33;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.24.20.38.06;	author fgsch;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.07.22.25.47;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.29.21.46.59;	author mickey;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	99.02.15.20.42.23;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	98.07.27.23.24.10;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	98.07.27.23.16.36;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	98.07.18.02.40.35;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	97.09.29.03.42.28;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.09.21.04.27.57;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.09.16.07.52.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.04.29.14.14.01;	author hvozda;	state Exp;
branches;
next	;

1.9.2.1
date	2001.04.18.16.07.26;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2001.07.04.10.16.45;	author niklas;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2001.10.31.03.01.12;	author nate;	state Exp;
branches;
next	1.9.2.4;

1.9.2.4
date	2002.03.06.01.01.00;	author niklas;	state Exp;
branches;
next	1.9.2.5;

1.9.2.5
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	;

1.14.2.1
date	2002.06.11.03.35.53;	author art;	state Exp;
branches;
next	;


desc
@@


1.20
log
@
Handle hibernate button in the same way as suspend does: send an
APM_USER_HIBERNATE_REQ event so apmd(8) can get it if it's running.

ok mlarkin@@, deraadt@@, miod@@
@
text
@/*	$OpenBSD: apmvar.h,v 1.19 2012/07/08 18:02:45 guenther Exp $	*/

/*
 *  Copyright (c) 1995 John T. Kohl
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  3. The name of the author may not be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 */
#ifndef _MACHINE_APMVAR_H_
#define _MACHINE_APMVAR_H_

#include <sys/ioccom.h>

/* Advanced Power Management (v1.0 and v1.1 specification)
 * functions/defines/etc.
 */

#define	APM_VERSION	0x0102

/*
 * APM info word from boot loader
 */
#define APM_16BIT_SUPPORTED	0x00010000
#define APM_32BIT_SUPPORTED	0x00020000
#define APM_IDLE_SLOWS		0x00040000
#define APM_BIOS_PM_DISABLED	0x00080000
#define APM_BIOS_PM_DISENGAGED	0x00100000
#define	APM_MAJOR(f)		(((f) >> 8) & 0xff)
#define	APM_MINOR(f)		((f) & 0xff)
#define	APM_VERMASK		0x0000ffff
#define	APM_NOCLI		0x00010000
#define	APM_BEBATT		0x00020000

/* APM error codes */
#define	APM_ERR_CODE(regs)	(((regs)->ax & 0xff00) >> 8)
#define	APM_ERR_PM_DISABLED	0x01
#define	APM_ERR_REALALREADY	0x02
#define	APM_ERR_NOTCONN		0x03
#define	APM_ERR_16ALREADY	0x05
#define	APM_ERR_16NOTSUPP	0x06
#define	APM_ERR_32ALREADY	0x07
#define	APM_ERR_32NOTSUPP	0x08
#define	APM_ERR_UNRECOG_DEV	0x09
#define	APM_ERR_ERANGE		0x0A
#define	APM_ERR_NOTENGAGED	0x0B
#define	APM_ERR_EOPNOSUPP	0x0C
#define	APM_ERR_RTIMER_DISABLED	0x0D
#define APM_ERR_UNABLE		0x60
#define APM_ERR_NOEVENTS	0x80
#define	APM_ERR_NOT_PRESENT	0x86

#define APM_DEV_APM_BIOS	0x0000
#define APM_DEV_ALLDEVS		0x0001
/* device classes are high byte; device IDs go in low byte */
#define		APM_DEV_DISPLAY(x)	(0x0100|((x)&0xff))
#define		APM_DEV_DISK(x)		(0x0200|((x)&0xff))
#define		APM_DEV_PARALLEL(x)	(0x0300|((x)&0xff))
#define		APM_DEV_SERIAL(x)	(0x0400|((x)&0xff))
#define		APM_DEV_NETWORK(x)	(0x0500|((x)&0xff))
#define		APM_DEV_PCMCIA(x)	(0x0600|((x)&0xff))
#define		APM_DEV_BATTERIES(x)	(0x8000|((x)&0xff))
#define		APM_DEV_ALLUNITS	0xff
/* 0x8100-0xDFFF - reserved	*/
/* 0xE000-0xEFFF - OEM-defined	*/
/* 0xF000-0xFFFF - reserved	*/

#define	APM_INSTCHECK		0x5300	/* int15 only */
#define		APM_16BIT_SUPPORT	0x01
#define		APM_32BIT_SUPPORT	0x02
#define		APM_CPUIDLE_SLOW	0x04
#define		APM_DISABLED		0x08
#define		APM_DISENGAGED		0x10

#define	APM_REAL_CONNECT	0x5301	/* int15 only */
#define	APM_PROT16_CONNECT	0x5302	/* int15 only */
#define	APM_PROT32_CONNECT	0x5303	/* int15 only */
#define APM_DISCONNECT		0x5304	/* %bx = APM_DEV_APM_BIOS */

#define APM_CPU_IDLE		0x5305
#define APM_CPU_BUSY		0x5306

#define APM_SET_PWR_STATE	0x5307
#define		APM_SYS_READY		0x0000	/* %cx */
#define		APM_SYS_STANDBY		0x0001
#define		APM_SYS_SUSPEND		0x0002
#define		APM_SYS_OFF		0x0003
#define		APM_LASTREQ_INPROG	0x0004
#define		APM_LASTREQ_REJECTED	0x0005
/* 0x0006 - 0x001f	Reserved system states    */
/* 0x0020 - 0x003f	OEM-defined system states */
/* 0x0040 - 0x007f	OEM-defined device states */
/* 0x0080 - 0xffff	Reserved device states    */

/* system standby is device ID (%bx) 0x0001, APM_SYS_STANDBY */
/* system suspend is device ID (%bx) 0x0001, APM_SYS_SUSPEND */

#define APM_PWR_MGT_ENABLE	0x5308
#define		APM_MGT_ALL	0xffff	/* %bx */
#define		APM_MGT_DISABLE	0x0	/* %cx */
#define		APM_MGT_ENABLE	0x1

#define APM_SYSTEM_DEFAULTS	0x5309
#define		APM_DEFAULTS_ALL	0xffff	/* %bx */

#define APM_POWER_STATUS	0x530a
#define		APM_AC_OFF		0x00
#define		APM_AC_ON		0x01
#define		APM_AC_BACKUP		0x02
#define		APM_AC_UNKNOWN		0xff
#define		APM_BATT_HIGH		0x00
#define		APM_BATT_LOW		0x01
#define		APM_BATT_CRITICAL	0x02
#define		APM_BATT_CHARGING	0x03
#define		APM_BATT_UNKNOWN	0xff
#define		APM_BATT_FLAG_HIGH	0x01
#define		APM_BATT_FLAG_LOW	0x02
#define		APM_BATT_FLAG_CRITICAL	0x04
#define		APM_BATT_FLAG_CHARGING	0x08
#define		APM_BATT_FLAG_NOBATTERY	0x10
#define		APM_BATT_FLAG_NOSYSBATT	0x80
#define		APM_BATT_LIFE_UNKNOWN	0xff
#define		BATT_STATE(regp) ((regp)->bx & 0xff)
#define		BATT_FLAGS(regp) (((regp)->cx & 0xff00) >> 8)
#define		AC_STATE(regp) (((regp)->bx & 0xff00) >> 8)
#define		BATT_LIFE(regp) ((regp)->cx & 0xff) /* in % */
/* Return time in minutes. According to the APM 1.2 spec:
	DX = Remaining battery life -- time units
		Bit 15 = 0	Time units are seconds
		       = 1 	Time units are minutes
		Bits 14-0 =	Number of seconds or minutes */
#define		BATT_REMAINING(regp) (((regp)->dx & 0x8000) ? \
				      ((regp)->dx & 0x7fff) : \
				      ((regp)->dx & 0x7fff)/60)
#define		BATT_REM_VALID(regp) (((regp)->dx & 0xffff) != 0xffff)
#define		BATT_COUNT(regp)	((regp)->si)

#define	APM_GET_PM_EVENT	0x530b
#define		APM_NOEVENT		0x0000
#define		APM_STANDBY_REQ		0x0001 /* %bx on return */
#define		APM_SUSPEND_REQ		0x0002
#define		APM_NORMAL_RESUME	0x0003
#define		APM_CRIT_RESUME		0x0004 /* suspend/resume happened
						  without us */
#define		APM_BATTERY_LOW		0x0005
#define		APM_POWER_CHANGE	0x0006
#define		APM_UPDATE_TIME		0x0007
#define		APM_CRIT_SUSPEND_REQ	0x0008
#define		APM_USER_STANDBY_REQ	0x0009
#define		APM_USER_SUSPEND_REQ	0x000A
#define		APM_SYS_STANDBY_RESUME	0x000B
#define		APM_CAPABILITY_CHANGE	0x000C	/* apm v1.2 */
/* 0x000d - 0x00ff	Reserved system events */
#define		APM_USER_HIBERNATE_REQ	0x000D
/* 0x0100 - 0x01ff	Reserved device events */
/* 0x0200 - 0x02ff	OEM-defined APM events */
/* 0x0300 - 0xffff	Reserved */
#define		APM_EVENT_MASK		0xffff

#define	APM_EVENT_COMPOSE(t,i)	((((i) & 0x7fff) << 16)|((t) & APM_EVENT_MASK))
#define	APM_EVENT_TYPE(e)	((e) & APM_EVENT_MASK)
#define	APM_EVENT_INDEX(e)	((e) >> 16)

#define	APM_GET_POWER_STATE	0x530c
#define	APM_DEVICE_MGMT_ENABLE	0x530d

#define	APM_DRIVER_VERSION	0x530e
/* %bx should be DEV value (APM_DEV_APM_BIOS)
   %ch = driver major vno
   %cl = driver minor vno
   return: %ah = conn major; %al = conn minor
   */
#define		APM_CONN_MINOR(regp) ((regp)->ax & 0xff)
#define		APM_CONN_MAJOR(regp) (((regp)->ax & 0xff00) >> 8)

#define APM_PWR_MGT_ENGAGE	0x530F
#define		APM_MGT_DISENGAGE	0x0	/* %cx */
#define		APM_MGT_ENGAGE		0x1

/* %bx - APM_DEV_APM_BIOS
 * %bl - number of batteries
 * %cx - capabilities
 */
#define	APM_GET_CAPABILITIES	0x5310
#define		APM_NBATTERIES(regp)	((regp)->bx)
#define		APM_GLOBAL_STANDBY	0x0001
#define		APM_GLOBAL_SUSPEND	0x0002
#define		APM_RTIMER_STANDBY	0x0004	/* resume time wakes up */
#define		APM_RTIMER_SUSPEND	0x0008
#define		APM_IRRING_STANDBY	0x0010	/* internal ring wakes up */
#define		APM_IRRING_SUSPEND	0x0020
#define		APM_PCCARD_STANDBY	0x0040	/* pccard wakes up */
#define		APM_PCCARD_SUSPEND	0x0080

/* %bx - APM_DEV_APM_BIOS
 * %cl - function
 *	for %cl=2 (set resume timer)
 * %ch - seconds in BCD
 * %dh - hours in BCD
 * %dl - minutes in BCD
 * %si - month in BCD (high), day in BCD (low)
 * %di - year in BCD
 */
#define	APM_RESUME_TIMER	0x5311
#define		APM_RT_DISABLE	0x0
#define		APM_RT_GET	0x1
#define		APM_RT_SET	0x2

/* %bx - APM_DEV_APM_BIOS
 * %cx - function
 */
#define	APM_RESUME_ON_RING	0x5312
#define		APM_ROR_DISABLE	0x0
#define		APM_ROR_ENABLE	0x1
#define		APM_ROR_STATUS	0x2

/* %bx - APM_EDV_APM_BIOS
 * %cx - function
 */
#define	APM_INACTIVITY_TIMER	0x5313
#define		APM_IT_DISABLE	0x0
#define		APM_IT_ENABLE	0x1
#define		APM_IT_STATUS	0x2

/* %bh - function */
#define APM_OEM			0x5380
#define		APM_OEM_INSTCHECK	0x7f	/* %bx - OEM ID */

/*
 * LP (Laptop Package)
 *
 * Copyright (C) 1994 by HOSOKAWA Tatsumi <hosokawa@@mt.cs.keio.ac.jp>
 *
 * This software may be used, modified, copied, and distributed, in
 * both source and binary form provided that the above copyright and
 * these terms are retained. Under no circumstances is the author 
 * responsible for the proper functioning of this software, nor does 
 * the author assume any responsibility for damages incurred with its 
 * use.
 *
 * Sep., 1994	Implemented on FreeBSD 1.1.5.1R (Toshiba AVS001WD)
 */

#define APM_BATTERY_ABSENT 4

struct apm_power_info {
	u_char battery_state;
	u_char ac_state;
	u_char battery_life;
	u_char spare1;
	u_int minutes_left;		/* estimate */
	u_int spare2[6];
};

struct apm_ctl {
	u_int dev;
	u_int mode;
};

#define	APM_IOC_REJECT	_IOW('A', 0, struct apm_event_info) /* reject request # */
#define	APM_IOC_STANDBY	_IO('A', 1)	/* put system into standby */
#define	APM_IOC_SUSPEND	_IO('A', 2)	/* put system into suspend */
#define	APM_IOC_GETPOWER _IOR('A', 3, struct apm_power_info) /* fetch battery state */
#define	APM_IOC_DEV_CTL	_IOW('A', 5, struct apm_ctl) /* put device into mode */
#define APM_IOC_PRN_CTL _IOW('A', 6, int ) /* driver power status msg */
#define		APM_PRINT_ON	0	/* driver power status displayed */
#define		APM_PRINT_OFF	1	/* driver power status not displayed */
#define		APM_PRINT_PCT	2	/* driver power status only displayed
					   if the percentage changes */
#define	APM_IOC_STANDBY_REQ	_IO('A', 7)	/* request standby */
#define	APM_IOC_SUSPEND_REQ	_IO('A', 8)	/* request suspend */
#define	APM_IOC_HIBERNATE	_IO('A', 9)	/* put system into hibernate */


#ifdef _KERNEL
extern void apm_cpu_busy(void);
extern void apm_cpu_idle(void);
extern void apminit(void);
int apm_set_powstate(u_int devid, u_int powstate);
#endif /* _KERNEL */

#endif /* _MACHINE_APMVAR_H_ */
@


1.19
log
@apm_kqfilter() is gone

ok nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.18 2012/03/26 16:21:34 deraadt Exp $	*/
d175 1
@


1.18
log
@Add APM_IOC_HIBERNATE
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.17 2011/03/23 16:54:35 pirofti Exp $	*/
a299 1
int apm_kqfilter(dev_t dev, struct knote *kn);
@


1.17
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.16 2009/02/26 17:19:47 oga Exp $	*/
d292 1
@


1.16
log
@Add a two new ioctls to the apm(4) interface.

APM_IOC_{SUSPEND,STANDBY}_REQ: This is to fix an issue with apm suspend
where a call to zzz suspended the machine immediately, not giving anyone
listening for apm events (other than apmd) a chance to deal with the
upcoming change. This hit X hard since the introduction of drm, since it
needs to have time to idle the 3d engine and otherwise get the device
into a recoverable state. Such things are needed until we support
modesetting in the kernel.

Now, instead of forcing a suspend, using ioctl sends out an event similar
to if you had put the lid down, giving all userland applications a
chance to reply.

tested by sthen@@ and beck@@, especial thanks to sthen for sitting there
while I tried to debug this remotely, I owe him beer.

Prompted by and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.15 2002/03/14 01:26:33 millert Exp $	*/
d31 2
a32 2
#ifndef _I386_APMVAR_H_
#define _I386_APMVAR_H_
d302 1
a302 1
#endif /* _I386_APMVAR_H_ */
@


1.15
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.14 2001/12/14 17:07:40 mickey Exp $	*/
d290 3
@


1.14
log
@on some sony vaios (con dios) battery life is reported
in big endian order, swap if flags was given.
reported by: Hans-Joerg Hoexer <Hans-Joerg.Hoexer@@yerbouti.franken.de>
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.13 2001/08/18 06:08:08 mickey Exp $	*/
d292 5
a296 5
extern void apm_cpu_busy __P((void));
extern void apm_cpu_idle __P((void));
extern void apminit __P((void));
int apm_set_powstate __P((u_int devid, u_int powstate));
int apm_kqfilter __P((dev_t dev, struct knote *kn));
@


1.14.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.14 2001/12/14 17:07:40 mickey Exp $	*/
d292 5
a296 5
extern void apm_cpu_busy(void);
extern void apm_cpu_idle(void);
extern void apminit(void);
int apm_set_powstate(u_int devid, u_int powstate);
int apm_kqfilter(dev_t dev, struct knote *kn);
@


1.13
log
@make apm use kqueue for transferring events to luse listener.
apparently i thought i comitted this already before apmd.
tested by me, art@@ and jason@@ .
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.12 2001/06/24 21:17:33 mickey Exp $	*/
d54 1
@


1.12
log
@wrong place for cold
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.11 2001/06/24 20:38:06 fgsch Exp $	*/
d177 5
a181 1
#define		APM_DEFEVENT		0xffffffff	/* for customization */
a262 6
struct apm_event_info {
	u_int type;
	u_int index;
	u_int spare[8];
};

a282 1
#define	APM_IOC_NEXTEVENT _IOR('A', 4, struct apm_event_info) /* fetch event */
d295 1
@


1.11
log
@move cold to .h
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.10 2000/06/07 22:25:47 mickey Exp $	*/
a293 1
extern int cold;
@


1.10
log
@look into config flags for version enforcement and other flags
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.9 2000/01/29 21:46:59 mickey Exp $	*/
d294 1
@


1.9
log
@bring in some mods for apm1.2 proto;
account for 16bit and 32bit code segments at different bases;
leave interrupts enabled when calling apm bios;
a few more debugging printfs (ifdef'ed appropriately).
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.8 1999/02/15 20:42:23 mickey Exp $	*/
d52 2
@


1.9.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.10 2000/06/07 22:25:47 mickey Exp $	*/
a51 2
#define	APM_VERMASK		0x0000ffff
#define	APM_NOCLI		0x00010000
@


1.9.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.9.2.1 2001/04/18 16:07:26 niklas Exp $	*/
@


1.9.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.9.2.2 2001/07/04 10:16:45 niklas Exp $	*/
d177 1
a177 5
#define		APM_EVENT_MASK		0xffff

#define	APM_EVENT_COMPOSE(t,i)	((((i) & 0x7fff) << 16)|((t) & APM_EVENT_MASK))
#define	APM_EVENT_TYPE(e)	((e) & APM_EVENT_MASK)
#define	APM_EVENT_INDEX(e)	((e) >> 16)
d259 6
d285 1
a297 1
int apm_kqfilter __P((dev_t dev, struct knote *kn));
@


1.9.2.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a53 1
#define	APM_BEBATT		0x00020000
@


1.9.2.5
log
@Merge in -current from about a week ago
@
text
@d292 5
a296 5
extern void apm_cpu_busy(void);
extern void apm_cpu_idle(void);
extern void apminit(void);
int apm_set_powstate(u_int devid, u_int powstate);
int apm_kqfilter(dev_t dev, struct knote *kn);
@


1.8
log
@more definitions from apm 1.2
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.7 1998/07/27 23:24:10 marc Exp $	*/
d40 1
a40 1
#define	APM_VERSION	0x0101
d65 2
d138 2
a139 1
#define		APM_BATT_FLAG_NOBATTERY	0x80
d154 1
d170 1
a170 1
#define		APM_CAPABILITY_CHANGE	0x000C
d193 4
d198 9
@


1.7
log
@oops, remove bugus trailing spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.6 1998/07/27 23:16:36 marc Exp $	*/
d40 2
d50 2
d78 1
d80 3
d166 2
a167 1
/* 0x000c - 0x00ff	Reserved system events */
d189 33
d223 1
@


1.6
log
@Fix BATT_REMAINING macro so it returns values in minutes (as documented)
not seconds
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.5 1998/07/18 02:40:35 marc Exp $	*/
d140 2
a141 2
				      ((regp)->dx & 0x7fff) : \   
				      ((regp)->dx & 0x7fff)/60)  
@


1.5
log
@add ioctl to apm to set message display to one of three states:
1) default: print out all messages.  I made this the default so there
   would be no visable change to people who are used to what they have.

2) disable all messages.  This mode is set by apmd when it starts up.
   I think it is reasonable for apmd to disable the driver display
   because it is collecting the data and syslogging it.  Don't need
   to see it three and 4 times.

3) print percentage changes.  For those who have a _noisy_ machine
   such as me but don't want to see lots and lots of messages I added
   a mode where the messages will only be displayed if the estimated
   battery percenge changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: apmvar.h,v 1.4 1997/09/29 03:42:28 mickey Exp $	*/
d134 5
d140 2
a141 2
				      ((regp)->dx & 0x7fff)*60 : \
				      ((regp)->dx & 0x7fff))
@


1.4
log
@apm0 at bios0
configs will be updated
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d220 5
@


1.3
log
@support new boots
add to your config:
bios0 at mainbus0
apm0 at mainbus0	# (if you are using APM)
@
text
@d1 1
a1 1
/*	$NetBSD$	*/
d31 2
a32 2
#ifndef __I386_APM_H__
#define __I386_APM_H__
d39 1
a39 3
#define APM_BIOS_FNCODE	(0x53)
#define APM_SYSTEM_BIOS	(0x15)
#define APM_BIOS_FN(x)	((APM_BIOS_FNCODE<<8)|(x))
a42 2
#define	APM_MAJOR_VERS(info) (((info)&0xff00)>>8)
#define	APM_MINOR_VERS(info) ((info)&0xff)
d49 1
d76 20
a95 12
#define	APM_INSTALLATION_CHECK	0x00	/* int15 only */
#define	APM_REALMODE_CONNECT	0x01	/* int15 only */
#define	APM_16BIT_CONNECT	0x02	/* int15 only */
#define	APM_32BIT_CONNECT	0x03	/* int15 only */
#define APM_DISCONNECT		0x04	/* %bx = APM_DEV_APM_BIOS */
#define APM_CPU_IDLE		0x05
#define APM_CPU_BUSY		0x06
#define APM_SET_PWR_STATE	0x07
#define		APM_SYS_READY	0x0000	/* %cx */
#define		APM_SYS_STANDBY	0x0001
#define		APM_SYS_SUSPEND	0x0002
#define		APM_SYS_OFF	0x0003
d98 4
d106 1
a106 1
#define APM_PWR_MGT_ENABLE	0x08
d111 1
a111 1
#define APM_SYSTEM_DEFAULTS	0x09
d114 1
a114 1
#define APM_POWER_STATUS	0x0a
d138 3
a140 1
#define	APM_GET_PM_EVENT	0x0b
d153 5
d159 2
a160 2
#define	APM_GET_POWER_STATE	0x0c
#define	APM_DEVICE_MGMT_ENABLE	0x0d
d162 1
a162 1
#define	APM_DRIVER_VERSION	0x0e
d171 1
a171 1
#define APM_PWR_MGT_ENGAGE	0x0F
d175 1
a175 1
#define APM_OEM			0x80
a176 1
#ifndef _LOCORE
a191 20
/* filled in by apmcall */ 
struct apmregs {
	u_short ax;
	u_short bx;
	u_short cx;
	u_short dx;
};

struct apm_connect_info {
	u_int apm_code32_seg_base;	/* real-mode style segment selector */
	u_int apm_code16_seg_base;
	u_int apm_data_seg_base;
	u_int apm_entrypt;
	u_short	apm_segsel;		/* segment selector for APM */
	u_short _pad1;
	u_int apm_code32_seg_len;
	u_int apm_data_seg_len;
	u_int apm_detail;
};

a220 4
struct apm_attach_args {
	char *aaa_busname;
};

a221 3
extern struct apm_connect_info apminfo;	/* in locore */
extern int apmpresent;
extern int apmcall __P((int function, struct apmregs *regs));
d227 2
a228 2
#endif /* _LOCORE */
#endif /* __i386_apm_h__ */
@


1.2
log
@no need to include sys/ioccom.h; guy@@netapp.com
@
text
@d2 1
d161 1
a161 1
#ifdef _LOCORE
a175 26

/* Error code of APM initializer */
#define APMINI_CANTFIND		0xffffffff
#define APMINI_NOT32BIT		0xfffffffe
#define APMINI_CONNECTERR	0xfffffffd

#define	SIZEOF_GDTE		8
#define BOOTSTRAP_GDT_NUM	9	/* see i386/boot/table.c */

#define APM_INIT_CS_INDEX	(BOOTSTRAP_GDT_NUM - 3)
#define APM_INIT_DS_INDEX	(BOOTSTRAP_GDT_NUM - 2)
#define APM_INIT_CS16_INDEX	(BOOTSTRAP_GDT_NUM - 1)
#define APM_INIT_CS_SEL		(APM_INIT_CS_INDEX << 3)
#define APM_INIT_DS_SEL		(APM_INIT_DS_INDEX << 3)
#define APM_INIT_CS16_SEL	(APM_INIT_CS16_INDEX << 3)

#define CS32_ATTRIB		0xCF9e
#define CS16_ATTRIB		0x0F9e
#define DS32_ATTRIB		0xCF92

#define BOOTSTRAP_DS_SEL	0x10
/* APM initializer physical address */
#define APM_OURADDR		0x00080000
#define APM_RELOC(x)	((x) - _apm_init_image)

#else /* !_LOCORE */
@


1.1
log
@Pull in John Kohl's [jtk@@netbsd.org] most recent (15Apr96) APM and PCMCIA work
(original PCMCIA framework  by Stefan Grefen [grefen@@convex.com]).
@
text
@d33 2
d204 4
a207 4
    u_short ax;
    u_short bx;
    u_short cx;
    u_short dx;
@
