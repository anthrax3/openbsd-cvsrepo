head	1.16;
access;
symbols
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.15.0.22
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.18
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.20
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.12
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.16
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.14
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.10
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.8
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.6
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.4
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.8
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.12.0.8
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.6
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.9
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.7.0.18
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.16
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.14
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.12
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.16
date	2016.10.21.06.56.38;	author mlarkin;	state Exp;
branches;
next	1.15;
commitid	5xh9q2ooOi34uhvF;

1.15
date	2011.07.04.16.52.41;	author nicm;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.21.15.40.04;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.25.15.42.15;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.31.21.22.34;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2005.06.02.20.09.39;	author tholo;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.23.16.51.11;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.11.05.15.19;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.18.06.08.08;	author mickey;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	97.09.27.06.31.32;	author mickey;	state Exp;
branches
	1.7.12.1;
next	1.6;

1.6
date	97.09.24.23.00.03;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.09.24.22.52.57;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.09.24.22.18.13;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.09.21.04.27.58;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.10.12.45.10;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.07.07.22.04;	author deraadt;	state Exp;
branches;
next	;

1.7.12.1
date	2001.10.31.03.01.12;	author nate;	state Exp;
branches;
next	1.7.12.2;

1.7.12.2
date	2003.03.27.23.26.55;	author niklas;	state Exp;
branches;
next	1.7.12.3;

1.7.12.3
date	2004.02.19.10.48.42;	author niklas;	state Exp;
branches;
next	;

1.8.4.1
date	2002.10.29.00.28.04;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@
pledge changes needed to support pledging vmd(8) on i386, forthcoming.

ok deraadt@@
@
text
@/*	$OpenBSD: conf.h,v 1.15 2011/07/04 16:52:41 nicm Exp $	*/
/*	$NetBSD: conf.h,v 1.2 1996/05/05 19:28:34 christos Exp $	*/

/*
 * Copyright (c) 1996 Christos Zoulas.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/conf.h>

#define	mmread	mmrw
#define	mmwrite	mmrw
cdev_decl(mm);
cdev_decl(pms);

bdev_decl(fd);
cdev_decl(fd);

/* open, close, read, write, ioctl, tty, mmap */
#define cdev_pc_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
	dev_init(c,n,tty), ttpoll, dev_init(c,n,mmap), D_TTY }

cdev_decl(pc);


#define	cdev_acpiapm_init(c,n) {\
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, selfalse, \
	(dev_type_mmap((*))) enodev, 0, 0, dev_init(c,n,kqfilter) }

cdev_decl(spkr);

cdev_decl(mms);

cdev_decl(lms);

cdev_decl(pms);

cdev_decl(joy);

#define biospoll seltrue
cdev_decl(bios);

cdev_decl(acpi);

cdev_decl(apm);

cdev_decl(acpiapm);

#define pctrpoll seltrue
cdev_decl(pctr);

#include "vmm.h"
cdev_decl(vmm);

@


1.15
log
@Nuke the useless D_KQFILTER flag and just check that d_kqfilter is
filled in. Move D_CLONE down to 0x0001 as suggested by thib.

ok deraadt thib
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.14 2010/07/21 15:40:04 deraadt Exp $	*/
d79 4
@


1.14
log
@Fix more cdev initializations which were using enodev for poll; ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.13 2007/11/25 15:42:15 tedu Exp $	*/
d56 1
a56 1
	(dev_type_mmap((*))) enodev, 0, D_KQFILTER, dev_init(c,n,kqfilter) }
@


1.13
log
@fake out the apm device to switch between apm and acpi on i386.  now
a single device node will talk to the right kernel code automatically.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.12 2005/12/31 21:22:34 miod Exp $	*/
d55 1
a55 1
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
@


1.12
log
@Split the d_type field of cdevsw entries into d_type and d_flags for clarity.
Discussed with and ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.11 2005/06/02 20:09:39 tholo Exp $	*/
d52 1
a52 7
#define	cdev_apm_init(c,n) {\
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
	(dev_type_mmap((*))) enodev, 0, D_KQFILTER, dev_init(c,n,kqfilter) }

#define	cdev_acpi_init(c,n) {\
d74 2
@


1.11
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.10 2003/09/23 16:51:11 millert Exp $	*/
d56 1
a56 1
	(dev_type_mmap((*))) enodev, D_KQFILTER, dev_init(c,n,kqfilter) }
d62 1
a62 1
	(dev_type_mmap((*))) enodev, D_KQFILTER, dev_init(c,n,kqfilter) }
@


1.10
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.9 2002/06/11 05:15:19 miod Exp $	*/
d58 6
d76 2
@


1.9
log
@Move cdev_lpt_init() to a common location.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.8 2001/08/18 06:08:08 mickey Exp $	*/
d47 1
a47 1
	dev_init(c,n,tty), ttselect, dev_init(c,n,mmap), D_TTY }
d55 1
a55 1
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
d68 1
a68 1
#define biosselect seltrue
d73 1
a73 1
#define pctrselect seltrue
@


1.8
log
@make apm use kqueue for transferring events to luse listener.
apparently i thought i comitted this already before apmd.
tested by me, art@@ and jason@@ .
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.7 1997/09/27 06:31:32 mickey Exp $	*/
a50 5
/* open, close, write, ioctl */
#define	cdev_spkr_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }
@


1.8.4.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.8 2001/08/18 06:08:08 mickey Exp $	*/
d51 5
@


1.7
log
@add ID, we have mods here
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d56 6
@


1.7.12.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.7 1997/09/27 06:31:32 mickey Exp $	*/
a55 6

#define	cdev_apm_init(c,n) {\
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
	(dev_type_mmap((*))) enodev, D_KQFILTER, dev_init(c,n,kqfilter) }
@


1.7.12.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d51 5
@


1.7.12.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d47 1
a47 1
	dev_init(c,n,tty), ttpoll, dev_init(c,n,mmap), D_TTY }
d55 1
a55 1
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
d68 1
a68 1
#define biospoll seltrue
d73 1
a73 1
#define pctrpoll seltrue
@


1.6
log
@bios and pctr are both ocis w/ seltrue
@
text
@d1 1
@


1.5
log
@bios device is ocis from now
@
text
@d66 1
d70 3
@


1.4
log
@cdev_decl(apm) in machine/conf.h
@
text
@d66 1
a66 6
/* open, close, ioctl, mmap */
#define cdev_bios_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }
a67 1
cdev_decl(bios);
@


1.3
log
@support new boots
add to your config:
bios0 at mainbus0
apm0 at mainbus0	# (if you are using APM)
@
text
@d74 1
@


1.2
log
@decl joystick
@
text
@d65 9
@


1.1
log
@sync with 0504; prototype changes
@
text
@d1 1
a1 1
/*	$NetBSD: conf.h,v 1.1 1996/05/03 19:34:11 christos Exp $	*/
d63 2
@
