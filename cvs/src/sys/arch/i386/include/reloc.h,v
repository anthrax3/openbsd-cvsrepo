head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.30
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.32
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.28
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.26
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.24
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	UBC:1.1.0.4
	UBC_SYNC_A:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.27.03.11.44;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.17.03.42.14;	author drahn;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.05.12.19.57.38;	author ho;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@/* $OpenBSD: reloc.h,v 1.2 2010/06/27 03:11:44 guenther Exp $ */

/*
 * Copyright (c) 2002,2003 Dale Rahn
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef  _MACHINE_RELOC_H_
#define  _MACHINE_RELOC_H_
#define R_TYPE(X)       __CONCAT(RELOC_,X)


#define RELOC_NONE      	0   /* No reloc */
#define RELOC_32        	1   /* Direct 32 bit  */
#define RELOC_PC32      	2   /* PC relative 32 bit */
#define RELOC_GOT32     	3   /* 32 bit GOT entry */
#define RELOC_PLT32     	4   /* 32 bit PLT address */
#define RELOC_COPY      	5   /* Copy symbol at runtime */
#define RELOC_GLOB_DAT  	6   /* Create GOT entry */
#define RELOC_JUMP_SLOT 	7   /* Create PLT entry */
#define RELOC_RELATIVE  	8   /* Adjust by program base */
#define RELOC_GOTOFF    	9   /* 32 bit offset to GOT */
#define RELOC_GOTPC     	10  /* 32 bit PC relative offset to GOT */
#define RELOC_TLS_TPOFF		14  /* negative offset in static TLS block */
#define RELOC_16        	20 
#define RELOC_PC16      	21 
#define RELOC_8         	22 
#define RELOC_PC8       	23 
#define RELOC_TLS_DTPMOD32	35 /* ID of module containing symbol */
#define RELOC_TLS_DTPOFF32	36 /* Offset in TLS block */
#define RELOC_TLS_TPOFF32	37 /* Offset in static TLS block */

#endif /* _MACHINE_RELOC_H_ */
@


1.2
log
@Add the TPOFF* and DTP{MOD,OFF}* definitions that ld.so will need for
doing thread-local storage and fix a typo in one that was already defined.
ok kettenis@@ drahn@@
@
text
@d1 1
a1 1
/* $OpenBSD: reloc.h,v 1.1 2003/04/17 03:42:14 drahn Exp $ */
d27 2
a28 2
#ifndef  _MACH_RELOC_H 
#define  _MACH_RELOC_H 
d52 1
a52 3
#endif /* _MACH_RELOC_H */


@


1.1
log
@i386 changes to move to ELF. asm cleanup. Change MAXDSIZ to 512M for 1Gsep.
DARPA funded work.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d32 19
a50 15
#define RELOC_NONE      0   /* No reloc */
#define RELOC_32        1   /* Direct 32 bit  */
#define RELOC_PC32      2   /* PC relative 32 bit */
#define RELOC_GOT32     3   /* 32 bit GOT entry */
#define RELOC_PLT32     4   /* 32 bit PLT address */
#define RELOC_COPY      5   /* Copy symbol at runtime */
#define RELOC_GLOB_DAT  6   /* Create GOT entry */
#define RELOC_JUMP_SLOT 7   /* Create PLT entry */
#define RELOC_RELATIVE  8   /* Adjust by program base */
#define RELOC_GOTOFF    9   /* 32 bit offset to GOT */
#define RELOC_GOTPC     10   /* 32 bit PC relative offset to GOT */
#define RELOC_16        20 
#define RELOC_PC16      21 
#define RELOC_8         22 
#define RELOC_PC8       23 
@


1.1.2.1
log
@Add new file to SMP branch
@
text
@@

