head	1.35;
access;
symbols
	OPENBSD_6_2:1.35.0.10
	OPENBSD_6_2_BASE:1.35
	OPENBSD_6_1:1.35.0.8
	OPENBSD_6_1_BASE:1.35
	OPENBSD_6_0:1.35.0.4
	OPENBSD_6_0_BASE:1.35
	OPENBSD_5_9:1.35.0.2
	OPENBSD_5_9_BASE:1.35
	OPENBSD_5_8:1.34.0.36
	OPENBSD_5_8_BASE:1.34
	OPENBSD_5_7:1.34.0.28
	OPENBSD_5_7_BASE:1.34
	OPENBSD_5_6:1.34.0.32
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.34.0.30
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.34.0.26
	OPENBSD_5_4_BASE:1.34
	OPENBSD_5_3:1.34.0.24
	OPENBSD_5_3_BASE:1.34
	OPENBSD_5_2:1.34.0.22
	OPENBSD_5_2_BASE:1.34
	OPENBSD_5_1_BASE:1.34
	OPENBSD_5_1:1.34.0.20
	OPENBSD_5_0:1.34.0.18
	OPENBSD_5_0_BASE:1.34
	OPENBSD_4_9:1.34.0.16
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.34.0.14
	OPENBSD_4_8_BASE:1.34
	OPENBSD_4_7:1.34.0.10
	OPENBSD_4_7_BASE:1.34
	OPENBSD_4_6:1.34.0.12
	OPENBSD_4_6_BASE:1.34
	OPENBSD_4_5:1.34.0.8
	OPENBSD_4_5_BASE:1.34
	OPENBSD_4_4:1.34.0.6
	OPENBSD_4_4_BASE:1.34
	OPENBSD_4_3:1.34.0.4
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.34.0.2
	OPENBSD_4_2_BASE:1.34
	OPENBSD_4_1:1.32.0.2
	OPENBSD_4_1_BASE:1.32
	OPENBSD_4_0:1.28.0.2
	OPENBSD_4_0_BASE:1.28
	OPENBSD_3_9:1.27.0.6
	OPENBSD_3_9_BASE:1.27
	OPENBSD_3_8:1.27.0.4
	OPENBSD_3_8_BASE:1.27
	OPENBSD_3_7:1.27.0.2
	OPENBSD_3_7_BASE:1.27
	OPENBSD_3_6:1.26.0.4
	OPENBSD_3_6_BASE:1.26
	SMP_SYNC_A:1.26
	SMP_SYNC_B:1.26
	OPENBSD_3_5:1.26.0.2
	OPENBSD_3_5_BASE:1.26
	OPENBSD_3_4:1.25.0.4
	OPENBSD_3_4_BASE:1.25
	UBC_SYNC_A:1.25
	OPENBSD_3_3:1.25.0.2
	OPENBSD_3_3_BASE:1.25
	OPENBSD_3_2:1.24.0.4
	OPENBSD_3_2_BASE:1.24
	OPENBSD_3_1:1.24.0.2
	OPENBSD_3_1_BASE:1.24
	UBC_SYNC_B:1.24
	UBC:1.23.0.6
	UBC_BASE:1.23
	OPENBSD_3_0:1.23.0.4
	OPENBSD_3_0_BASE:1.23
	OPENBSD_2_9:1.23.0.2
	OPENBSD_2_9_BASE:1.23
	OPENBSD_2_8:1.22.0.6
	OPENBSD_2_8_BASE:1.22
	OPENBSD_2_7:1.22.0.4
	OPENBSD_2_7_BASE:1.22
	SMP:1.22.0.2
	SMP_BASE:1.22
	kame_19991208:1.22
	OPENBSD_2_6:1.20.0.4
	OPENBSD_2_6_BASE:1.20
	OPENBSD_2_5:1.20.0.2
	OPENBSD_2_5_BASE:1.20
	OPENBSD_2_4:1.19.0.4
	OPENBSD_2_4_BASE:1.19
	OPENBSD_2_3:1.19.0.2
	OPENBSD_2_3_BASE:1.19
	OPENBSD_2_2:1.16.0.2
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.8.0.2
	OPENBSD_2_0_BASE:1.8
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.35
date	2015.09.30.14.57.03;	author krw;	state Exp;
branches;
next	1.34;
commitid	DqSeHy1IhaIjFHPj;

1.34
date	2007.06.20.18.15.45;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2007.06.17.00.27.27;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2006.10.20.23.47.42;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2006.10.18.20.09.38;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2006.10.17.23.42.37;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2006.10.04.00.52.55;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2006.07.01.16.50.33;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2004.11.10.10.36.12;	author grange;	state Exp;
branches;
next	1.26;

1.26
date	2003.11.16.20.30.06;	author avsm;	state Exp;
branches;
next	1.25;

1.25
date	2003.01.06.01.31.42;	author weingart;	state Exp;
branches;
next	1.24;

1.24
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2000.12.06.17.18.58;	author deraadt;	state Exp;
branches
	1.23.6.1;
next	1.22;

1.22
date	99.12.04.03.35.57;	author deraadt;	state Exp;
branches
	1.22.2.1;
next	1.21;

1.21
date	99.10.26.03.43.48;	author downsj;	state Exp;
branches;
next	1.20;

1.20
date	99.03.23.16.36.18;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	98.02.24.04.22.37;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	98.02.19.20.36.31;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	98.01.11.20.42.00;	author provos;	state Exp;
branches;
next	1.16;

1.16
date	97.10.14.01.02.52;	author weingart;	state Exp;
branches;
next	1.15;

1.15
date	97.09.29.01.12.19;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.08.29.19.44.10;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	97.08.29.17.32.33;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	97.08.29.17.29.40;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	97.08.29.17.22.58;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	97.08.08.21.46.44;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	97.04.10.13.06.24;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.10.04.02.49.59;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.09.25.11.56.39;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.09.24.11.34.29;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.09.24.04.27.24;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.09.22.09.58.12;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.09.12.02.40.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.18.19.21.36;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.35;	author deraadt;	state Exp;
branches;
next	;

1.22.2.1
date	2001.04.18.16.07.31;	author niklas;	state Exp;
branches;
next	1.22.2.2;

1.22.2.2
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	1.22.2.3;

1.22.2.3
date	2003.03.27.23.26.55;	author niklas;	state Exp;
branches;
next	1.22.2.4;

1.22.2.4
date	2004.02.19.10.48.42;	author niklas;	state Exp;
branches;
next	;

1.23.6.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	1.23.6.2;

1.23.6.2
date	2003.05.19.21.45.11;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Use consistant whitespace/comments for #define'ing LABELSECTOR,
LABELOFFSET and MAXPARTITIONS. Easier on the eye when scanning
through all these files. No functional change.
@
text
@/*	$OpenBSD: disklabel.h,v 1.34 2007/06/20 18:15:45 deraadt Exp $	*/

/*
 * Copyright (c) 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_DISKLABEL_H_
#define _MACHINE_DISKLABEL_H_

#define	LABELSECTOR	1	/* sector containing label */
#define	LABELOFFSET	0	/* offset of label in sector */
#define	MAXPARTITIONS	16	/* number of partitions */

#endif /* _MACHINE_DISKLABEL_H_ */
@


1.34
log
@b_cylinder does not need to be set on the callpath down into drivers.
cpu_disklabel can go away, since nothing anymore needs to use it; ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.33 2007/06/17 00:27:27 deraadt Exp $	*/
d36 3
a38 3
#define	LABELSECTOR	1		/* sector containing label */
#define	LABELOFFSET	0		/* offset of label in sector */
#define	MAXPARTITIONS	16		/* number of partitions */
@


1.33
log
@significantly simplified disklabel infrastructure.  MBR handling becomes MI
to support hotplug media on most architectures.  disklabel setup and
verification done using new helper functions.  Disklabels must *always*
have a correct checksum now.  Same code paths are used to learn on-disk
location disklabels, to avoid new errors sneaking in.  Tested on almost all
cases, testing help from todd, kettenis, krw, otto, dlg, robert, gwk, drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.32 2006/10/20 23:47:42 krw Exp $	*/
a38 3

struct cpu_disklabel {
};
@


1.32
log
@Try again with local variable to avoid alignment issues.

"The dosparts member of cpu_disklabel was not used for any persistant
data. Eliminate it, and just use the data being read in while
processing MBR and EBR records.

Should be no functional change.

ok weingart@@ deraadt@@"
@
text
@d1 1
a1 2
/*	$OpenBSD: disklabel.h,v 1.31 2006/10/18 20:09:38 deraadt Exp $	*/
/*	$NetBSD: disklabel.h,v 1.3 1996/03/09 20:52:54 ghudson Exp $	*/
a38 46
#define	RAW_PART	2		/* raw partition: ie. rsd0c */

/* DOS partition table -- located in boot block */
#define	DOSBBSECTOR	0		/* DOS boot block relative sector # */
#define	DOSPARTOFF	446
#define	DOSDISKOFF	444
#define	NDOSPART	4
#define	DOSACTIVE	0x80		/* active partition */

struct dos_partition {
	u_int8_t	dp_flag;	/* bootstrap flags */
	u_int8_t	dp_shd;		/* starting head */
	u_int8_t	dp_ssect;	/* starting sector */
	u_int8_t	dp_scyl;	/* starting cylinder */
	u_int8_t	dp_typ;		/* partition type (see below) */
	u_int8_t	dp_ehd;		/* end head */
	u_int8_t	dp_esect;	/* end sector */
	u_int8_t	dp_ecyl;	/* end cylinder */
	u_int32_t	dp_start;	/* absolute starting sector number */
	u_int32_t	dp_size;	/* partition size in sectors */
};

/* Known DOS partition types. */
#define	DOSPTYP_UNUSED	0x00		/* Unused partition */
#define DOSPTYP_FAT12	0x01		/* 12-bit FAT */
#define DOSPTYP_FAT16S	0x04		/* 16-bit FAT, less than 32M */
#define DOSPTYP_EXTEND	0x05		/* Extended; contains sub-partitions */
#define DOSPTYP_FAT16B	0x06		/* 16-bit FAT, more than 32M */
#define DOSPTYP_FAT32	0x0b		/* 32-bit FAT */
#define DOSPTYP_FAT32L	0x0c		/* 32-bit FAT, LBA-mapped */
#define DOSPTYP_FAT16L	0x0e		/* 16-bit FAT, LBA-mapped */
#define DOSPTYP_EXTENDL 0x0f		/* Extended, LBA-mapped; contains sub-partitions */
#define DOSPTYP_ONTRACK	0x54
#define	DOSPTYP_LINUX	0x83		/* That other thing */
#define DOSPTYP_FREEBSD	0xa5		/* FreeBSD partition type */
#define DOSPTYP_OPENBSD	0xa6		/* OpenBSD partition type */
#define DOSPTYP_NETBSD	0xa9		/* NetBSD partition type */

struct dos_mbr {
	u_int8_t		dmbr_boot[DOSPARTOFF];
	struct dos_partition	dmbr_parts[NDOSPART];
	u_int16_t		dmbr_sign;
} __packed;

#define DOSMBR_SIGNATURE	(0xaa55)
#define DOSMBR_SIGNATURE_OFF	(0x1fe)
a41 4

/* Isolate the relevant bits to get sector and cylinder. */
#define	DPSECT(s)	((s) & 0x3f)
#define	DPCYL(c, s)	((c) + (((s) & 0xc0) << 2))
@


1.31
log
@back out disksubr changes ... since they violate strict alignment on
some architectures (kaboom); that will be fixed in the next iteration
hopefully!
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.29 2006/10/04 00:52:55 krw Exp $	*/
a87 1
	struct dos_partition dosparts[NDOSPART];
@


1.30
log
@The dosparts member of cpu_disklabel was not used for any persistant
data. Eliminate it, and just use the data being read in while
processing MBR and EBR records.

Should be no functional change.

ok weingart@@ deraadt@@
@
text
@d88 1
@


1.29
log
@Zap bad144 bad sector info in disklabels. Sparsely used if at all for
a few obsolete and easily replaced disk models. And didn't work anyway
according to Bob, who has tried.

ok beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.28 2006/07/01 16:50:33 krw Exp $	*/
a87 1
	struct dos_partition dosparts[NDOSPART];
@


1.28
log
@Eliminate redundant get_le() in favour of letoh32(). Add letoh32()
calls in alpha, hppa, hppa64 and mips63 when accessing the two DOS MBR
u_int32_t fields dp_size and dp_start.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.27 2004/11/10 10:36:12 grange Exp $	*/
a86 1
#include <sys/dkbad.h>
a88 1
	struct dkbad bad;
a89 2

#define DKBAD(x) ((x)->bad)
@


1.27
log
@Remove __cplusplus crud.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.26 2003/11/16 20:30:06 avsm Exp $	*/
a97 14

static __inline u_int32_t get_le(void *);

static __inline u_int32_t
get_le(void *p)
{
	u_int8_t *_p = (u_int8_t *)p;
	u_int32_t x;
	x = _p[0];
	x |= _p[1] << 8;
	x |= _p[2] << 16;
	x |= _p[3] << 24;
	return x;
}
@


1.26
log
@convert __attribute__((__packed__)) to __packed so that parsers unaware
of gcc extensions have more of a chance.
ok mcbride@@, no objections from millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.25 2003/01/06 01:31:42 weingart Exp $	*/
a101 1
#ifdef __cplusplus
a102 4
#else
get_le(p)
	void *p;
#endif
@


1.25
log
@Document MBR offset (used by NT4 at least).
OK deraadt@@, millert@@, and others.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.24 2002/03/14 01:26:33 millert Exp $	*/
d82 1
a82 1
} __attribute__((__packed__));
@


1.24
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.23 2000/12/06 17:18:58 deraadt Exp $	*/
d45 1
@


1.23
log
@use __x__ formats for __attribute__ arguments; guenther@@gac.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.22 1999/12/04 03:35:57 deraadt Exp $	*/
d98 1
a98 1
static __inline u_int32_t get_le __P((void *));
@


1.23.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.23 2000/12/06 17:18:58 deraadt Exp $	*/
d98 1
a98 1
static __inline u_int32_t get_le(void *);
@


1.23.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 1
#define	DOSDISKOFF	444
@


1.22
log
@DOSPTYP_EXTENDL; sigh@@kuzirabekon.econ.nagasaki-u.ac.jp
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.21 1999/10/26 03:43:48 downsj Exp $	*/
d81 1
a81 1
} __attribute__((packed));
@


1.22.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.23 2000/12/06 17:18:58 deraadt Exp $	*/
d81 1
a81 1
} __attribute__((__packed__));
@


1.22.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d98 1
a98 1
static __inline u_int32_t get_le(void *);
@


1.22.2.3
log
@Sync the SMP branch with 3.3
@
text
@a44 1
#define	DOSDISKOFF	444
@


1.22.2.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d82 1
a82 1
} __packed;
@


1.21
log
@Fix inline function decls to work with C++.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.20 1999/03/23 16:36:18 millert Exp $	*/
d70 1
@


1.20
log
@Add DOSMBR_SIGNATURE_OFF define, needed for last disklabel change
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.19 1998/02/24 04:22:37 deraadt Exp $	*/
d100 3
d105 1
@


1.19
log
@rename some DOS MBR partition types
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.18 1998/02/19 20:36:31 deraadt Exp $	*/
d83 1
@


1.18
log
@add netbsd partition, rename 386BSD one to FreeBSD..
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.17 1998/01/11 20:42:00 provos Exp $	*/
d68 2
a69 1
#define DOSPTYP_FAT16C	0x0e		/* 16-bit FAT, CHS-mapped */
@


1.17
log
@disklabel spoofing for FAT32.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.16 1997/10/14 01:02:52 weingart Exp $	*/
d71 1
a71 2
#define DOSPTYP_386BSD	0xa5		/* 386BSD partition type */
#define DOSPTYP_NETBSD	DOSPTYP_386BSD	/* NetBSD partition type (XXX) */
d73 1
@


1.16
log
@Neater this way.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.15 1997/09/29 01:12:19 deraadt Exp $	*/
d67 1
@


1.15
log
@ignore partitions larger than device, as an attempt to ignore floppies without MBR
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.14 1997/08/29 19:44:10 mickey Exp $	*/
a73 1
#define __MBR_XXX	__attribute__((packed))
d75 4
a78 5
	u_int8_t		dmbr_boot[DOSPARTOFF] __MBR_XXX;
	struct dos_partition	dmbr_parts[NDOSPART]  __MBR_XXX;
	u_int16_t		dmbr_sign             __MBR_XXX;
};
#undef __MBR_XXX
@


1.14
log
@define DOSACTIVE for bootable partition
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.13 1997/08/29 17:32:33 mickey Exp $	*/
d95 15
@


1.13
log
@s/XXX/__MBR_XXX/ and undef it after use
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.12 1997/08/29 17:29:40 mickey Exp $	*/
d46 1
@


1.12
log
@undef XXX after use
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.11 1997/08/29 17:22:58 mickey Exp $	*/
d73 1
a73 1
#define XXX	__attribute__((packed))
d75 3
a77 3
	u_int8_t		dmbr_boot[DOSPARTOFF] XXX;
	struct dos_partition	dmbr_parts[NDOSPART]  XXX;
	u_int16_t		dmbr_sign             XXX;
d79 1
a79 1
#undef XXX
@


1.11
log
@add struct dos_mbr
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.10 1997/08/08 21:46:44 niklas Exp $	*/
d79 1
@


1.10
log
@Change the bounds_check_with_label API to also take a cpu_disklabel
reference for making transferral of meta-information possible from
readdisklabel to bounds_check_with_label.  The first (and maybe only)
thing that will use this is the multi-disklabel-format code on the
alpha where the labelsector is passed via cpu_disklabel so the label
write-protection can work correctly no matter what label was found.

Also use a new macro DKBAD to get at the dkbad field of the cpu_disklabel
implementations that contain it.  This too is for multi-disklabel
architectures where the "bad" field can be inside a union.  Use this
macro as a means for a driver to check if an architecture supports
dkbad constructs.

Remove proto of bounds_check_with_label from all MD disklabel.h as it
is in sys/disklabel.h.

I have not been able to test the changes everywhere, if I break anything
I apologize, and promise to fix it as soon as I become aware of it.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.9 1997/04/10 13:06:24 deraadt Exp $	*/
d72 9
@


1.9
log
@additions & fixes from niklas & i
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.8 1996/10/04 02:49:59 deraadt Exp $	*/
d79 2
a83 5

#ifdef _KERNEL
struct disklabel;
int	bounds_check_with_label __P((struct buf *, struct disklabel *, int));
#endif
@


1.8
log
@do not decl global; from christos
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.7 1996/09/25 11:56:39 deraadt Exp $	*/
d61 8
a71 5
#define DOSPTYP_FAT12	0x1		/* 12-bit FAT */
#define DOSPTYP_FAT16S	0x4		/* 16-bit FAT, less than 32M */
#define DOSPTYP_FAT16B	0x6		/* 16-bit FAT, more than 32M */
#define DOSPTYP_FAT16C	0xe		/* 16-bit FAT, CHS-mapped */
#define DOSPTYP_ONTRACK	0x54
@


1.7
log
@u_int*_t types
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.6 1996/09/24 11:34:29 deraadt Exp $	*/
d58 1
a58 1
} dos_partitions[NDOSPART];
@


1.6
log
@DOSPTYP_OPENBSD = 0xa6 (everything i checked says this is available)
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.5 1996/09/24 04:27:24 deraadt Exp $	*/
d48 10
a57 10
	unsigned char	dp_flag;	/* bootstrap flags */
	unsigned char	dp_shd;		/* starting head */
	unsigned char	dp_ssect;	/* starting sector */
	unsigned char	dp_scyl;	/* starting cylinder */
	unsigned char	dp_typ;		/* partition type (see below) */
	unsigned char	dp_ehd;		/* end head */
	unsigned char	dp_esect;	/* end sector */
	unsigned char	dp_ecyl;	/* end cylinder */
	unsigned long	dp_start;	/* absolute starting sector number */
	unsigned long	dp_size;	/* partition size in sectors */
@


1.5
log
@RAW_PART = 2, ie. sd0c, now -- make sure your c partitions are your whole disk
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.4 1996/09/22 09:58:12 deraadt Exp $	*/
d61 1
a61 1
#define	DOSPTYP_386BSD	0xa5		/* 386BSD partition type */
d63 1
@


1.4
log
@add ontrack format
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.3 1996/09/12 02:40:20 deraadt Exp $	*/
d40 1
a40 1
#define	RAW_PART	3		/* raw partition: XX?d (XXX) */
@


1.3
log
@16 partitions
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.2 1996/04/18 19:21:36 niklas Exp $	*/
d67 1
@


1.2
log
@Merge of NetBSD 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 1
a39 1
#define	MAXPARTITIONS	8		/* number of partitions */
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: disklabel.h,v 1.2 1995/03/28 18:16:51 jtc Exp $	*/
d63 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
