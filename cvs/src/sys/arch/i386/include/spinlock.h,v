head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.62
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.60
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.58
	OPENBSD_5_0:1.1.0.56
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.54
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.52
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.48
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.50
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.46
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.44
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.42
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.40
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.38
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.36
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.34
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.32
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.30
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.28
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.26
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.24
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.22
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.20
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.18
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.16
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.14
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.12
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.10
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.8
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.6
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.06.01.20.47.40;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	99.01.08.08.25.34;	author d;	state Exp;
branches;
next	;


desc
@@


1.2
log
@cleanup and consolidate the spinlock_lock (what a name!) code.
it's now atomic_lock to better reflect its usage, and librthread now
features a new spinlock that's really a ticket lock.
thrlseep can handle both types of lock via a flag in the clock arg.
(temp back compat hack)
remove some old stuff that's accumulated along the way and no longer used.
some feedback from dlg, who is concerned with all things ticket lock.
(you need to boot a new kernel before installing librthread)
@
text
@/*	$OpenBSD: spinlock.h,v 1.1 1999/01/08 08:25:34 d Exp $	*/

#ifndef _MACHINE_SPINLOCK_H_
#define _MACHINE_SPINLOCK_H_

#define _ATOMIC_LOCK_UNLOCKED	(0)
#define _ATOMIC_LOCK_LOCKED	(1)
typedef int _atomic_lock_t;

#ifndef _KERNEL
int _atomic_lock(volatile _atomic_lock_t *);
#endif

#endif
@


1.1
log
@move spinlock.h into the real world
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d6 7
a12 3
#define _SPINLOCK_UNLOCKED	(0)
#define _SPINLOCK_LOCKED	(1)
typedef int _spinlock_lock_t;
@

