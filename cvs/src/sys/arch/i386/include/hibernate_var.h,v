head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.8
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.4
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.15
date	2015.01.09.03.43.52;	author mlarkin;	state Exp;
branches;
next	1.14;
commitid	TzpVlzYKb3Vx3GSZ;

1.14
date	2014.12.23.01.24.51;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	u5ByZ7JDYGBMbD06;

1.13
date	2014.12.22.23.59.43;	author mlarkin;	state Exp;
branches;
next	1.12;
commitid	VnzXkNOPyYOCYtPk;

1.12
date	2014.12.08.07.12.37;	author mlarkin;	state Exp;
branches;
next	1.11;
commitid	9gsjQWzKEbWkbtZI;

1.11
date	2014.11.22.20.09.36;	author mlarkin;	state Exp;
branches;
next	1.10;
commitid	wRLVawd8196eSbjn;

1.10
date	2014.10.01.19.41.06;	author mlarkin;	state Exp;
branches;
next	1.9;
commitid	8DlKHWU83o4MRkyW;

1.9
date	2014.01.05.20.23.57;	author mlarkin;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.04.16.21.24;	author mlarkin;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.04.01.20.23;	author pirofti;	state Exp;
branches;
next	1.6;

1.6
date	2012.07.08.18.22.04;	author mlarkin;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.20.17.31.55;	author mlarkin;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.13.18.38.10;	author mlarkin;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.21.02.51.23;	author mlarkin;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.09.00.08.04;	author mlarkin;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.30.15.33.18;	author mlarkin;	state Exp;
branches;
next	;


desc
@@


1.15
log
@
Cleanup some macros and #defines in i386 pmap. Previously committed and
backed out because of libkvm breakage, recommitting now with libkvm fix.

ok deraadt@@
@
text
@/*	$OpenBSD: hibernate_var.h,v 1.14 2014/12/23 01:24:51 deraadt Exp $	*/

/*
 * Copyright (c) 2011 Mike Larkin <mlarkin@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define HIB_PD_MASK		0xffc00000
#define PIGLET_PAGE_MASK 	(HIB_PD_MASK)

#define HIBERNATE_PD_PAGE	(PAGE_SIZE * 21)
#define HIBERNATE_PT_PAGE	(PAGE_SIZE * 22)
/* 2 pages for stack */
#define HIBERNATE_STACK_PAGE	(PAGE_SIZE * 24)
#define HIBERNATE_INFLATE_PAGE	(PAGE_SIZE * 25)
/* HIBERNATE_HIBALLOC_PAGE must be the last stolen page (see machdep.c) */
#define HIBERNATE_HIBALLOC_PAGE (PAGE_SIZE * 26)

/* Use 4MB hibernation chunks */
#define HIBERNATE_CHUNK_SIZE		0x400000

#define HIBERNATE_CHUNK_TABLE_SIZE	0x100000

#define HIBERNATE_STACK_OFFSET	0x0F00

#define atop_4m(x) ((x) >> PDSHIFT)
#define atop_4k(x) ((x) >> PAGE_SHIFT)
#define s4pde_4m(va) ((pt_entry_t *)HIBERNATE_PD_PAGE + atop_4m(va))
#define s4pde_4k(va) ((pt_entry_t *)HIBERNATE_PD_PAGE + atop_4k(va))
#define s4pte_4k(va) ((pt_entry_t *)HIBERNATE_PT_PAGE + atop_4k(va))
@


1.14
log
@backout previous, because libkvm needs two pieces.  will let mike
find a different way.
@
text
@d1 1
a1 1
/*	$OpenBSD: hibernate_var.h,v 1.12 2014/12/08 07:12:37 mlarkin Exp $	*/
d19 2
a20 1
#define PIGLET_PAGE_MASK (PD_MASK)
@


1.13
log
@Move PD_MASK, PT_MASK and a couple macros into pmap.c. The only other
user of these was hibernate, which now gets its own PD_MASK (since
the resume time PD_MASK is essentially disjoint from the runtime
PD_MASK). No functional change, just moving the deck chairs around in
preparation for an upcoming change.

ok deraadt
@
text
@d19 1
a19 2
#define HIB_PD_MASK		0xffc00000
#define PIGLET_PAGE_MASK 	(HIB_PD_MASK)
@


1.12
log
@
Split the ACPI resume trampoline into code and data, move the data page to
.rodata (kernel copies to the RW page), protect the code page with RX
permissions, protect the code page with RW permissions.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hibernate_var.h,v 1.11 2014/11/22 20:09:36 mlarkin Exp $	*/
d19 2
a20 1
#define PIGLET_PAGE_MASK (PD_MASK)
@


1.11
log
@
Previous diff changed the location of the ACPI S3/S4 trampoline, which has
a common #defined location for both i386 and amd64. This diff fixes i386 to
match.

Also fix a tab/space issue in amd64 hibernate_var.h

discussed with deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: hibernate_var.h,v 1.10 2014/10/01 19:41:06 mlarkin Exp $	*/
d21 2
a22 2
#define HIBERNATE_PD_PAGE	(PAGE_SIZE * 20)
#define HIBERNATE_PT_PAGE	(PAGE_SIZE * 21)
d24 2
a25 2
#define HIBERNATE_STACK_PAGE	(PAGE_SIZE * 23)
#define HIBERNATE_INFLATE_PAGE	(PAGE_SIZE * 24)
d27 1
a27 1
#define HIBERNATE_HIBALLOC_PAGE (PAGE_SIZE * 25)
@


1.10
log
@

Move some hibernate #defines to pte.h and eliminate some duplicate defines
from hibernate code that were already defined in pte.h (with different
names). No functional change.

ok sf@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hibernate_var.h,v 1.9 2014/01/05 20:23:57 mlarkin Exp $	*/
d21 2
a22 2
#define HIBERNATE_PD_PAGE	(PAGE_SIZE * 18)
#define HIBERNATE_PT_PAGE	(PAGE_SIZE * 19)
d24 2
a25 2
#define HIBERNATE_STACK_PAGE	(PAGE_SIZE * 21)
#define HIBERNATE_INFLATE_PAGE	(PAGE_SIZE * 22)
d27 1
a27 1
#define HIBERNATE_HIBALLOC_PAGE (PAGE_SIZE * 23)
@


1.9
log
@

Don't use the first 64KB for anything, including tramps. Move tramps and
hibernate goo up after 64KB to avoid posible corruption by buggy BIOS SMM
code. Diff also ensures the first 64KB doesn't get handed to UVM either.

ok deraadt@@, tested by many with no regressions reported
@
text
@d1 1
a1 1
/*	$OpenBSD: hibernate_var.h,v 1.8 2013/06/04 16:21:24 mlarkin Exp $	*/
d19 1
a19 7
/* i386 hibernate support definitions */

#define PAGE_SHIFT_4M 22
#define PAGE_MASK_4M (NBPD - 1)
#define PMAP_PA_MASK_4M ~((paddr_t)PAGE_MASK_4M)

#define PIGLET_PAGE_MASK ~((paddr_t)PAGE_MASK_4M)
d36 1
a36 1
#define atop_4m(x) ((x) >> PAGE_SHIFT_4M)
@


1.8
log
@

Remove remaining references to HIBERNATE_COPY_PAGE. It was effectively
removed at n2k13 but a few errant references still remained. No functional
change. Spot tested by my on i386 and amd64 UP environments, no regressions
seen.

noticed by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hibernate_var.h,v 1.7 2013/06/04 01:20:23 pirofti Exp $	*/
d27 7
a33 5
#define HIBERNATE_PD_PAGE	(PAGE_SIZE * 5)
#define HIBERNATE_PT_PAGE	(PAGE_SIZE * 6)
#define HIBERNATE_STACK_PAGE	(PAGE_SIZE * 8)
#define HIBERNATE_INFLATE_PAGE	(PAGE_SIZE * 9)
#define HIBERNATE_HIBALLOC_PAGE (PAGE_SIZE * 10)
@


1.7
log
@Add RCS ids.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 2
#define HIBERNATE_COPY_PAGE	(PAGE_SIZE * 10)
#define HIBERNATE_HIBALLOC_PAGE (PAGE_SIZE * 11)
@


1.6
log
@

Move the hibernate utility pages up to account for the MP tramp page.

ok deraadt@@
@
text
@d1 2
@


1.5
log
@

Fix some hibernate issues on machines with > 3.5GB phys mem

ok deraadt@@
@
text
@d27 4
a30 4
#define HIBERNATE_STACK_PAGE	(PAGE_SIZE * 7)
#define HIBERNATE_INFLATE_PAGE	(PAGE_SIZE * 8)
#define HIBERNATE_COPY_PAGE	(PAGE_SIZE * 9)
#define HIBERNATE_HIBALLOC_PAGE (PAGE_SIZE * 10)
@


1.4
log
@

Fix a handful of bugs that were causing reboots and other bad behavior
during hibernate resumes.
@
text
@d30 1
d35 1
a35 5
/* 1MB of chunk table from 1MB-2MB phys */
#define HIBERNATE_CHUNK_TABLE_START		0x100000
#define HIBERNATE_CHUNK_TABLE_END		0x200000
#define HIBERNATE_CHUNK_TABLE_SIZE		(HIBERNATE_CHUNK_TABLE_END - \
						 HIBERNATE_CHUNK_TABLE_START)
@


1.3
log
@

Perform most of the remaining refactoring of hibernate code into
MI/MD parts. This also introduces a chunk placement routine that was
originally developed at c2k11 with help from drahn and ariane.

There are still a few more things to do for hibernate, but those can be
worked on in-tree. This code is disabled by default, and not yet called.

ok deraadt@@ (and deraadt@@ said kettenis@@ also ok'ed it :) )
@
text
@d23 2
d29 1
@


1.2
log
@

Separate some MD and MI bits and a bit of refactoring to make subsequent
commits easier.

Work in progress, hibernate will still not work for you.

ok deraadt@@
@
text
@d23 4
a26 9
#define HIBERNATE_STACK_PAGE	(PAGE_SIZE * 5)
#define HIBERNATE_IO_PAGE	(PAGE_SIZE * 6)
#define HIBERNATE_TEMP_PAGE	(PAGE_SIZE * 10)
#define HIBERNATE_TEMP_PAGE2	(PAGE_SIZE * 11)
#define HIBERNATE_PD_PAGE	(PAGE_SIZE * 12)
#define HIBERNATE_PT_PAGE	(PAGE_SIZE * 13)
#define HIBERNATE_ALLOC_PAGE	(PAGE_SIZE * 14)

#define HIBERNATE_CHUNKS_PAGE	(PAGE_SIZE * 15)
a35 6

/* 320KB (80 pages) for gzip allocator */
#define HIBERNATE_ZLIB_SCRATCH	(PAGE_SIZE * 20)
#define HIBERNATE_ZLIB_START	(PAGE_SIZE * 21)
#define HIBERNATE_ZLIB_END	(PAGE_SIZE * (21 + 80))
#define HIBERNATE_ZLIB_SIZE	(HIBERNATE_ZLIB_END - HIBERNATE_ZLIB_START)
@


1.1
log
@Preliminary plumbing code for i386 hibernate (suspend-to-disk).
This code is not yet called as there are still some important parts
not completed.

ok deraadt@@, kettenis@@ "looks reasonable"
@
text
@d26 22
a47 2
#define HIBERNATE_PT_PAGE	(PAGE_SIZE * 11)
#define HIBERNATE_ALLOC_PAGE	(PAGE_SIZE * 12)
d51 4
a54 1
#define s4pte_4m(va) ((pt_entry_t *)HIBERNATE_PT_PAGE + atop_4m(va))
@

