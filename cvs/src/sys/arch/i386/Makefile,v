head	1.23;
access;
symbols
	OPENBSD_6_0:1.21.0.12
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.8
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.10
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.12
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.10
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.8
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.6
	OPENBSD_5_0:1.20.0.4
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.2
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.18.0.2
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.17.0.8
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.10
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.6
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.4
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.13.0.12
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.10
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.13.0.8
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.6
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.13
	UBC:1.12.0.4
	UBC_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.7.0.14
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.10
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.8
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.6
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.4
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.23
date	2017.01.22.03.27.31;	author tb;	state Exp;
branches;
next	1.22;
commitid	7xfCYX9g3lREuZZf;

1.22
date	2016.10.14.18.42.58;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	dUZQxi6w3YqAb6KQ;

1.21
date	2013.12.08.14.46.39;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2010.11.12.17.11.44;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2010.11.03.20.08.03;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.31.22.21.43;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2007.10.22.01.26.31;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2006.07.29.12.18.44;	author thib;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.06.11.16.47;	author pedro;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.06.03.08.01;	author marco;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.15.21.29.16;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.12.21.51.11;	author deraadt;	state Exp;
branches
	1.12.4.1;
next	1.11;

1.11
date	2001.05.29.22.11.26;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.31.09.58.27;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.30.03.01.39;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.30.01.57.11;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.11.05.02.53.21;	author mickey;	state Exp;
branches
	1.7.10.1;
next	1.6;

1.6
date	97.11.05.02.49.46;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.04.14.11.07.17;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.14.18.05.01;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.03.19.21.09.06;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.02.25.10.51.37;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.29;	author deraadt;	state Exp;
branches;
next	;

1.7.10.1
date	2001.04.18.16.06.58;	author niklas;	state Exp;
branches;
next	1.7.10.2;

1.7.10.2
date	2001.07.04.10.16.16;	author niklas;	state Exp;
branches;
next	1.7.10.3;

1.7.10.3
date	2003.03.27.23.26.55;	author niklas;	state Exp;
branches;
next	;

1.12.4.1
date	2002.10.29.00.28.03;	author art;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Introduce the KEEPKERNELS variable: if this is set either in mk.conf or
the environment, 'make cleandir' does not descend into kernel build
directories.  Thus, kernel object files survive 'make build' on slower
architectures.

WARNING:
If you set this variable, you run the risk of breaking 'make release':
Be sure to run 'make cleandir' from /sys/arch/$(machine)/compile before
doing 'make release'.  This issue will be addressed shortly.

requested by kettenis;
ok deraadt
@
text
@#	$OpenBSD: Makefile,v 1.22 2016/10/14 18:42:58 deraadt Exp $

.include <bsd.own.mk>    # for KEEPKERNELS

S=	${.CURDIR}/../..
KFILE=	GENERIC
.if exists(conf/GENERIC.MP)
KFILE=	GENERIC.MP
.endif
TDIRS=	${_arch} include pci isa eisa
TAGS=	${.CURDIR}/tags

NOPROG=
NOMAN=
NOOBJ=
SUBDIR=	stand
.if !defined(KEEPKERNELS) || !(make(clean) || make(cleandir))
SUBDIR+=compile
.endif

# config the fattest kernel we can find into a temporary dir
# to create a Makefile.  Then use make to pull some variables
# out and push them into the sub-shell to expand the paths,
# and finally run ctags.
tags::
	TDIR=`mktemp -d /tmp/_tagXXXXXXXXXX` || exit 1; \
	eval "S=${S}" && \
	config -s ${S} -b $${TDIR} ${.CURDIR}/conf/${KFILE} && \
	eval "_arch=\"`make -V _arch -f $${TDIR}/Makefile`\"" && \
	eval "_mach=\"`make -V _mach -f $${TDIR}/Makefile`\"" && \
	eval "_machdir=\$S/arch/$${_mach}" && \
	eval "_archdir=\$S/arch/$${_arch}" && \
	eval "HFILES=\"`find $S \( -path $S/'arch' -o -path $S/stand -o -path $S/lib/libsa -o -path $S'/lib/libkern/arch' \) -prune -o -name '*.h'; find $${_machdir} $${_archdir} $S/lib/libkern/arch/$${_mach} \( -name boot -o -name stand \) -prune -o -name '*.h'`\"" && \
	eval "SFILES=\"`make -V SFILES -f $${TDIR}/Makefile`\"" && \
	eval "CFILES=\"`make -V CFILES -f $${TDIR}/Makefile`\"" && \
	eval "AFILES=\"`make -V AFILES -f $${TDIR}/Makefile`\"" && \
	ctags -wd -f ${TAGS} $${CFILES} $${HFILES} && \
	egrep "^[_A-Z]*ENTRY[_A-Z]*\(.*\)" $${SFILES} $${AFILES} | \
	    sed "s;\\([^:]*\\):\\([^(]*\\)(\\([^, )]*\\)\\(.*\\);\\3	\\1	/^\\2(\\3\\4$$/;" \
	    >> ${TAGS} && \
	sort -o ${TAGS} ${TAGS} && \
	rm -rf $${TDIR}

links:
	-for i in conf ${TDIRS}; do \
	    (cd $$i && rm -f tags; ln -s tags tags); done

obj:	_SUBDIRUSE

.include <bsd.prog.mk>
@


1.22
log
@Kernel builds now happen in compile/CONFIG/obj@@ -> /usr/obj/... [or ./obj/,
if srctree is not rooted at /usr/src].  As a result, stock GENERIC & RAMDISK
kernels are commited to the tree, to ensure the src tree can be "readonly"
during builds, with all writes occuring inside the obj space.  config -b
options are handled by ../Makefile.inc.  The canonical new way to configure
one of these kernels is:
    % cd /sys/arch/amd64/compile/GENERIC.MP
    % doas make obj
    % make config
    % make
    % doas cp obj/bsd /bsd
The build infrastructure will use this new mechanism in a de-escalation
way using BUILDUSER.
Much help from natano and tb.
@
text
@d1 3
a3 1
#	$OpenBSD: Makefile,v 1.21 2013/12/08 14:46:39 espie Exp $
d16 4
a19 1
SUBDIR=	stand compile
@


1.21
log
@reflect reality, mark as NOOBJ
"sure" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2010/11/12 17:11:44 deraadt Exp $
d14 1
a14 1
SUBDIR=	stand
@


1.20
log
@Push all potential (as in, all system MI not utilized by the bootblocks)
.h files into the ctags run as well to bring #define's and structs and
such into scope.  Problem reported by thib
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2010/11/03 20:08:03 deraadt Exp $
d13 1
@


1.19
log
@no need to specify the -t flag to ctags
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2010/05/31 22:21:43 deraadt Exp $
d27 1
d31 1
a31 1
	ctags -wd -f ${TAGS} $${CFILES} && \
@


1.18
log
@Completely rewrite the tags file creation process.  use config(8) against
a fat kernel (GERERIC or GENERIC.MP) into a temporary dir, then extract some
variables using make -V, and after some more singing and dancing use this
full and (more) correct list of files with ctags.  Don't read this code.
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2007/10/22 01:26:31 deraadt Exp $
d30 1
a30 1
	ctags -wdt -f ${TAGS} $${CFILES} && \
@


1.17
log
@no need for NOPROG and bsd.prog.mk
@
text
@d1 1
a1 3
#	$OpenBSD: Makefile,v 1.16 2006/07/29 12:18:44 thib Exp $
#	$NetBSD: Makefile,v 1.6 1996/02/01 22:31:28 mycroft Exp $
#	@@(#)Makefile	7.3 (Berkeley) 6/9/91
d3 7
a9 4
# Makefile for i386 tags file and boot blocks

S=${.CURDIR}/../..
.include "$S/kern/Make.tags.inc"
d11 2
d15 21
a35 16
TI386=	$S/arch/i386/tags
SI386=	$S/arch/i386/eisa/*.[ch] $S/arch/i386/i386/*.[ch] \
	$S/arch/i386/include/*.h $S/arch/i386/include/pc/*.h \
	$S/arch/i386/isa/*.[ch] $S/arch/i386/pci/*.[ch]
AI386=	$S/arch/i386/i386/*.[sS] $S/arch/i386/isa/*.[sS] \
	$S/lib/libkern/arch/i386/*.[sS]

# Directories in which to place i386 tags links
DI386=	conf eisa i386 include isa pci

tags:
	-ctags -wdtf ${TI386} ${COMM} ${SI386}
	egrep "^ENTRY(.*)|^ALTENTRY(.*)" ${AI386} | \
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3	\1	/^\2(\3\4$$/;" \
		>> ${TI386}
	sort -o ${TI386} ${TI386}
d38 2
a39 2
	-for i in ${DI386}; do \
	    (cd $$i && rm -f tags; ln -s ${TI386} tags); done
d43 1
a43 1
.include <bsd.subdir.mk>
@


1.16
log
@remove gnu stuff from the 'tags' target.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2005/05/06 11:16:47 pedro Exp $
a9 3
NOPROG=	noprog
NOMAN=	noman

d35 1
a35 1
.include <bsd.prog.mk>
@


1.15
log
@generate vim-compatible tag files, from netbsd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2005/05/06 03:08:01 marco Exp $
a20 1
GI386=	$S/gnu/arch/i386/*/*.[ch]
d26 1
a26 1
	-ctags -wdtf ${TI386} ${COMM} ${SI386} ${GI386}
@


1.14
log
@Fix links target.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/07/15 21:29:16 mickey Exp $
d29 1
a29 1
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3 \1 /^\2(\3\4$$/;" \
@


1.13
log
@repair tags building (due to obj dirs in /sys)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2001/06/12 21:51:11 deraadt Exp $
d35 1
a35 1
	    cd $$i && rm -f tags; ln -s ${TI386} tags; done
@


1.12
log
@deal with gnu kernel dependencies right; cyxob@@thief.dyndns.org
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2001/05/29 22:11:26 mickey Exp $
d7 2
a8 1
.include "../../kern/Make.tags.inc"
d15 7
a21 5
TI386=	../i386/tags
SI386=	../i386/eisa/*.[ch] ../i386/i386/*.[ch] ../i386/include/*.h \
	../i386/include/pc/*.h ../i386/isa/*.[ch] ../i386/pci/*.[ch]
AI386=	../i386/i386/*.s ../i386/isa/*.s
GI386= ../../gnu/arch/i386/*/*.[ch]
d35 1
a35 1
	    cd $$i && rm -f tags; ln -s ../tags tags; done
@


1.12.4.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2001/06/12 21:51:11 deraadt Exp $
d7 1
a7 2
S=${.CURDIR}/../..
.include "$S/kern/Make.tags.inc"
d14 5
a18 7
TI386=	$S/arch/i386/tags
SI386=	$S/arch/i386/eisa/*.[ch] $S/arch/i386/i386/*.[ch] \
	$S/arch/i386/include/*.h $S/arch/i386/include/pc/*.h \
	$S/arch/i386/isa/*.[ch] $S/arch/i386/pci/*.[ch]
AI386=	$S/arch/i386/i386/*.[sS] $S/arch/i386/isa/*.[sS] \
	$S/lib/libkern/arch/i386/*.[sS]
GI386=	$S/gnu/arch/i386/*/*.[ch]
d32 1
a32 1
	    cd $$i && rm -f tags; ln -s ${TI386} tags; done
@


1.11
log
@pcvt no more
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2001/01/31 09:58:27 deraadt Exp $
d18 1
d24 1
a24 1
	-ctags -wdtf ${TI386} ${COMM} ${SI386}
@


1.10
log
@still need pcvt files to build X, for now
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2001/01/30 03:01:39 mickey Exp $
d12 1
a12 1
SUBDIR=	stand isa/pcvt/Util
@


1.9
log
@do not install pcvt includes either; aaron@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/01/30 01:57:11 deraadt Exp $
d12 1
a12 1
SUBDIR=	stand
@


1.8
log
@do not build pcvt tools
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/11/05 02:53:21 mickey Exp $
d16 1
a16 2
	../i386/include/pc/*.h ../i386/isa/*.[ch] ../i386/isa/pcvt/*.[ch] \
	../i386/pci/*.[ch]
@


1.7
log
@tag it
@
text
@d1 1
a1 1
#	$OpenBSD$
d12 1
a12 1
SUBDIR=	stand isa/pcvt/Util
@


1.7.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2001/01/31 09:58:27 deraadt Exp $
d16 2
a17 1
	../i386/include/pc/*.h ../i386/isa/*.[ch] ../i386/pci/*.[ch]
@


1.7.10.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7.10.1 2001/04/18 16:06:58 niklas Exp $
d12 1
a12 1
SUBDIR=	stand
a17 1
GI386= ../../gnu/arch/i386/*/*.[ch]
d23 1
a23 1
	-ctags -wdtf ${TI386} ${COMM} ${SI386} ${GI386}
@


1.7.10.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
a7 2
S=${.CURDIR}/../..
.include "$S/kern/Make.tags.inc"
d14 5
a18 7
TI386=	$S/arch/i386/tags
SI386=	$S/arch/i386/eisa/*.[ch] $S/arch/i386/i386/*.[ch] \
	$S/arch/i386/include/*.h $S/arch/i386/include/pc/*.h \
	$S/arch/i386/isa/*.[ch] $S/arch/i386/pci/*.[ch]
AI386=	$S/arch/i386/i386/*.[sS] $S/arch/i386/isa/*.[sS] \
	$S/lib/libkern/arch/i386/*.[sS]
GI386=	$S/gnu/arch/i386/*/*.[ch]
d32 1
a32 1
	    cd $$i && rm -f tags; ln -s ${TI386} tags; done
@


1.6
log
@Do not build in directories Mickey deleted
@
text
@d1 1
@


1.5
log
@build stand (AND boot)
@
text
@d11 1
a11 1
SUBDIR=	boot boot.dos stand isa/pcvt/Util
@


1.4
log
@fix NetBSD PR#1136.
@
text
@d11 1
a11 1
SUBDIR=	boot boot.dos isa/pcvt/Util
@


1.3
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d11 1
a11 1
SUBDIR=	boot
d33 1
a33 1
obj: _SUBDIRUSE
@


1.2
log
@Make it possible to build a kernel tags file
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.8 1994/10/27 04:14:23 cgd Exp $
@


1.1
log
@Initial revision
@
text
@d6 2
d14 4
a17 2
SI386=	../i386/i386/*.[ch] ../i386/include/*.h ../i386/isa/*.[ch]
AI386=	../i386/i386/*.s
d20 1
a20 1
DI386=	eisa isa mca include
d23 1
a23 1
	-ctags -dtf ${TI386} ${COMM} ${SI386}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
