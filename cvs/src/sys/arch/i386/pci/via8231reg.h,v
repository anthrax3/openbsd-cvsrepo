head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.46
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.44
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.40
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.42
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.34
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.38
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.36
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.32
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.30
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.28
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.26
	OPENBSD_5_0:1.4.0.24
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.1.0.12
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.10
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.8
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2005.10.26.21.38.28;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.26.01.41.36;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.20.15.09.31;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.30.05.26.33;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@fix 8237 trigger mask
@
text
@/*	$OpenBSD: via8231reg.h,v 1.3 2005/10/26 01:41:36 mickey Exp $	*/

/*
 * Copyright (c) 2005, by Michael Shalayeff
 * Copyright (c) 2003, by Matthew Gream
 * Copyright (c) 1999, by UCHIYAMA Yasushi
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the developer may NOT be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Register definitions for the VIA8231 PCI to ISA Bridge
 */

/*
 * Edge Triggered Interrupt Select register. (0x54)
 * bits 7-4: reserved
 * bit 3: Edge Triggered Interrupt Select for PCI Interrupt A
 * bit 2: Edge Triggered Interrupt Select for PCI Interrupt B
 * bit 1: Edge Triggered Interrupt Select for PCI Interrupt C
 * bit 0: Edge Triggered Interrupt Select for PCI Interrupt D
 *   0 = Non-invert (level)
 *   1 = Invert (edge)
 *
 * PIRQ Select register. (0x55 - 0x57)
 * (0x55)
 * bits 7-4:   PINTA# Routing
 * bits 3-0:   reserved
 * (0x56)
 * bits 7-4:   PINTC# Routing
 * bits 3-0:   PINTB# Routing
 * (0x57)
 * bits 7-4:   PINTD# Routing
 * bits 3-0:   reserved
 * PIRQ Select register. (0x44 - 0x47)
 * (0x44)
 * bits 7-4:   PINTF# Routing
 * bits 3-0:   PINTE# Routing
 * (0x45)
 * bits 7-4:   PINTH# Routing
 * bits 3-0:   PINTG# Routing
 * (0x46)
 * bit 4:	EFGH/ABCD share (1 -- use above mappings)
 * bit 3: Edge Triggered Interrupt Select for PCI Interrupt H
 * bit 2: Edge Triggered Interrupt Select for PCI Interrupt G
 * bit 1: Edge Triggered Interrupt Select for PCI Interrupt F
 * bit 0: Edge Triggered Interrupt Select for PCI Interrupt E
 *
 *   0000: Disabled  0100: IRQ4      1000: Reserved  1100: IRQ12
 *   0001: IRQ1      0101: IRQ5      1001: IRQ9      1101: Reserved
 *   0010: Reserved  0110: IRQ6      1010: IRQ10     1110: IRQ14
 *   0011: IRQ3      0111: IRQ7      1011: IRQ11     1111: IRQ15
 */
#define VIA8231_CFG_PIR		0x54
#define VIA8237_CFG_PIR		0x44

#define VIA8231_TRIGGER_CNFG_MASK		0x000000ff
#define VIA8231_TRIGGER_CNFG_SHFT		0
#define VIA8237_TRIGGER_CNFG_MASK		0x000f0000
#define VIA8237_TRIGGER_CNFG_SHFT		16
#define VIA8231_TRIGGER_CNFG_LEVEL		0
#define VIA8231_TRIGGER_CNFG_EDGE		1
#define VIA8237_TRIGGER_CNFG_ENA		0x00100000

#define VIA8231_GET_TRIGGER(ph)						\
	((pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8231_CFG_PIR)	\
	    & VIA8231_TRIGGER_CNFG_MASK) >> VIA8231_TRIGGER_CNFG_SHFT)
#define VIA8237_GET_TRIGGER(ph)						\
	((pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8237_CFG_PIR)	\
	    & VIA8237_TRIGGER_CNFG_MASK) >> VIA8237_TRIGGER_CNFG_SHFT)

#define VIA8231_SET_TRIGGER(ph, n)					\
	pci_conf_write((ph)->ph_pc, (ph)->ph_tag, VIA8231_CFG_PIR,	\
	(pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8231_CFG_PIR)	\
	    & ~VIA8231_TRIGGER_CNFG_MASK) | ((n) << VIA8231_TRIGGER_CNFG_SHFT))
#define VIA8237_SET_TRIGGER(ph, n)					\
	pci_conf_write((ph)->ph_pc, (ph)->ph_tag, VIA8237_CFG_PIR,	\
	(pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8237_CFG_PIR)	\
	    & ~VIA8237_TRIGGER_CNFG_MASK) | ((n) << VIA8237_TRIGGER_CNFG_SHFT))


#define VIA8231_ROUTING_CNFG_MASK		0xffffff00
#define VIA8231_ROUTING_CNFG_SHFT		8 /* skip 0x54 triggers */
#define VIA8231_ROUTING_CNFG_DISABLED		0
#define VIA8237_ROUTING_CNFG_MASK		0xffff
#define VIA8237_ROUTING_CNFG_SHFT		0

#define VIA8231_GET_ROUTING(ph)						\
	((pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8231_CFG_PIR)	\
	    & VIA8231_ROUTING_CNFG_MASK) >> VIA8231_ROUTING_CNFG_SHFT)
#define VIA8237_GET_ROUTING(ph)						\
	((pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8237_CFG_PIR)	\
	    & VIA8237_ROUTING_CNFG_MASK) >> VIA8237_ROUTING_CNFG_SHFT)

#define VIA8231_SET_ROUTING(ph, n)					\
	pci_conf_write((ph)->ph_pc, (ph)->ph_tag, VIA8231_CFG_PIR,	\
	(pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8231_CFG_PIR)	\
	    & ~VIA8231_ROUTING_CNFG_MASK) | ((n) << VIA8231_ROUTING_CNFG_SHFT))
#define VIA8237_SET_ROUTING(ph, n)					\
	pci_conf_write((ph)->ph_pc, (ph)->ph_tag, VIA8237_CFG_PIR,	\
	(pci_conf_read((ph)->ph_pc, (ph)->ph_tag, VIA8237_CFG_PIR)	\
	    & ~VIA8237_ROUTING_CNFG_MASK) | \
	    ((n) << VIA8237_ROUTING_CNFG_SHFT) | VIA8237_TRIGGER_CNFG_ENA)


#define VIA8231_PIRQ_MASK		0xdefa
#define VIA8231_PIRQ_LEGAL(irq)		\
	((irq) >= 0 && (irq) <= 15 && ((1 << (irq)) & VIA8231_PIRQ_MASK))
#define VIA8231_LINK_MAX		3
#define VIA8237_LINK_MAX		7
#define	VIA8231_LINK_LEGAL(link)	\
	((link) >= 0 && (link) <= VIA8231_LINK_MAX)
#define	VIA8237_LINK_LEGAL(link)	\
	((link) >= 0 && (link) <= VIA8237_LINK_MAX)
#define VIA8231_TRIG_LEGAL(trig)	\
	((trig) == IST_LEVEL || (trig) == IST_EDGE)

@


1.3
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: via8231reg.h,v 1.2 2005/10/20 15:09:31 mickey Exp $	*/
d78 1
a78 1
#define VIA8237_TRIGGER_CNFG_MASK		0x00ff0000
d82 1
a82 1
#define VIA8237_TRIGGER_CNFG_ENA		0x100000
@


1.2
log
@add 8237 support and repair 8231 that was confused very bad; lots of testing help by henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: via8231reg.h,v 1.1 2003/07/30 05:26:33 mickey Exp $	*/
d109 1
a109 1
	    & VIA8237_ROUTING_CNFG_MASK) >> VIA8231_ROUTING_CNFG_SHFT)
d112 1
a112 1
	    & VIA8231_ROUTING_CNFG_MASK) >> VIA8237_ROUTING_CNFG_SHFT)
@


1.1
log
@support for vt8231 from netbsd via pr3362 and tested by matthew.gream@@pobox.com
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
d54 14
d73 2
a74 2
#define VIA8231_CFG_PIR				0x54

d78 2
d82 1
d86 4
a89 1
	    & VIA8231_TRIGGER_CNFG_MASK)  >> VIA8231_TRIGGER_CNFG_SHFT)
d95 4
d104 2
d109 4
a112 1
	    & VIA8231_ROUTING_CNFG_MASK) >> VIA8231_ROUTING_CNFG_SHFT)
d118 5
d127 1
a127 1
	((irq) >= 0 && (irq) <= 15 && ((1 << (irq)) & VIA8231_PIRQ_MASK) != 0)
d129 1
d132 2
@

