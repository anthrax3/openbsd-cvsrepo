head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.8
	UBC_SYNC_B:1.8
	SMP:1.8.0.2
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2000.10.31.18.56.42;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2000.09.07.20.50.39;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.04.16.58.41;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.17.20.15.40;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.08.19.12.48;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.28.03.37.59;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.27.08.35.22;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.26.22.38.38;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.8
log
@rename pcibios.h to pcibiosvar.h
@
text
@/*	$OpenBSD: pcibios.h,v 1.7 2000/09/07 20:50:39 mickey Exp $	*/
/*	$NetBSD: pcibios.h,v 1.2 2000/04/28 17:15:16 uch Exp $	*/

/*
 * Copyright (c) 1999, by UCHIYAMA Yasushi
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the developer may NOT be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
 */

/*
 * Data structure definitions for the PCI BIOS interface.
 */

#define	PCIBIOS_ADDR_FIXUP	0x001
#define	PCIBIOS_BUS_FIXUP	0x002
#define	PCIBIOS_INTR_FIXUP	0x004
#define	PCIBIOS_INTR_GUESS	0x008

/*
 * PCI BIOS return codes.
 */
#define	PCIBIOS_SUCCESS			0x00
#define	PCIBIOS_SERVICE_NOT_PRESENT	0x80
#define	PCIBIOS_FUNCTION_NOT_SUPPORTED	0x81
#define	PCIBIOS_BAD_VENDOR_ID		0x83
#define	PCIBIOS_DEVICE_NOT_FOUND	0x86
#define	PCIBIOS_BAD_REGISTER_NUMBER	0x87
#define	PCIBIOS_SET_FAILED		0x88
#define	PCIBIOS_BUFFER_TOO_SMALL	0x89

/*
 * PCI IRQ Routing Table definitions.
 */

/*
 * Slot entry (per PCI 2.1)
 */
struct pcibios_linkmap {
	u_int8_t	link;
	u_int16_t	bitmap;
} __attribute__((__packed__));

struct pcibios_intr_routing {
	u_int8_t	bus;
	u_int8_t	device;
	struct pcibios_linkmap linkmap[4];	/* INT[A:D]# */
	u_int8_t	slot;
	u_int8_t	reserved;
} __attribute__((__packed__));

/*
 * $PIR header.  Reference:
 *
 *	http://www.microsoft.com/HWDEV/busbios/PCIIRQ.htm
 */
struct pcibios_pir_header {
	u_int32_t	signature;		/* $PIR */
	u_int16_t	version;
	u_int16_t	tablesize;
	u_int8_t	router_bus;
	u_int8_t	router_devfunc;
	u_int16_t	exclusive_irq;
	u_int32_t	compat_router;		/* PCI vendor/product */
	u_int32_t	miniport;
	u_int8_t	reserved[11];
	u_int8_t	checksum;
} __attribute__((__packed__));

#define	PIR_DEVFUNC_DEVICE(devfunc)	(((devfunc) >> 3) & 0x1f)
#define	PIR_DEVFUNC_FUNCTION(devfunc)	((devfunc) & 7)

void	pcibios_init __P((void));

extern struct pcibios_pir_header pcibios_pir_header;
extern struct pcibios_intr_routing *pcibios_pir_table;
extern int pcibios_pir_table_nentries;
extern int pcibios_max_bus;

void pci_device_foreach __P((pci_chipset_tag_t, int,
			     void (*) (pci_chipset_tag_t, pcitag_t)));

#ifdef PCIBIOSVERBOSE
extern int pcibiosverbose;

#define	PCIBIOS_PRINTV(arg) \
	do { \
		if (pcibiosverbose) \
			printf arg; \
	} while (0)
#define	PCIBIOS_PRINTVN(n, arg) \
	do { \
		 if (pcibiosverbose > (n)) \
			printf arg; \
	} while (0)
#else
#define	PCIBIOS_PRINTV(arg)
#define	PCIBIOS_PRINTVN(n, arg)
#endif

void pci_device_foreach __P((pci_chipset_tag_t, int,
    void (*) __P((pci_chipset_tag_t, pcitag_t))));

int pcibios_flags;
@


1.7
log
@do not call pcibios_pir_init() if intr_fixup was disabled; also, sync w/ latetest netbsd developments
@
text
@d1 1
a1 1
/*	$OpenBSD: pcibios.h,v 1.6 2000/09/04 16:58:41 mickey Exp $	*/
@


1.6
log
@export pcibios config flags
@
text
@d1 1
a1 1
/*	$OpenBSD: pcibios.h,v 1.5 2000/08/17 20:15:40 mickey Exp $	*/
d36 1
@


1.5
log
@pcibios0 at bios0 flags 0x0000
this is now a real device, which looks in flags for disabling
address, interrupt or bus fixup.
bios0's flags are to disable bios32 and pcibios probing.
since boot_config support editing flags, it's posible
to adjust pcibios functionality in the generic kernel
upon boot time. man is coming.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcibios.h,v 1.4 2000/08/08 19:12:48 mickey Exp $	*/
d120 2
@


1.4
log
@sync w/ netbsd almost -current code (;
fixes quite a few problems.
adds new option PCIBIOS_ADDR_FIXUP.
numerous extra fixes by me, also pointed out by other ppl,
such as avoid panics, ifdef on pciverbose, not diagnostic,
some other smaller knits; some have been forwarded back
to netbsd developers, some will go soon too.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcibios.h,v 1.3 2000/03/28 03:37:59 mickey Exp $	*/
d32 4
@


1.3
log
@fix netbsd rcsids up.
also, from the 3rd try make proper openbsd rcsids, rediculous
3 commits just to add proper openbsd rcsids.
i think someone forgot to _look_ at the diffs before commit.
@
text
@d1 2
a2 2
/*	$OpenBSD: pcibios.h,v 1.2 2000/03/27 08:35:22 brad Exp $	*/
/*	$NetBSD: pcibios.h,v 1.1 1999/11/17 01:16:37 thorpej Exp $	*/
d83 3
d92 24
@


1.2
log
@add missing OpenBSD RCS IDs
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD$	*/
@


1.1
log
@from netbsd: pci interrupt routing code.
also, change a few pcidevs names to match netbsd (and more descriptive).
tested on a bunch of laptops, helps resolving 'pin X unmapped'
problems for (usually) usb and cardbus cntrollers.
@
text
@d1 1
@

