head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.40
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.38
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.34
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.30
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.32
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.24
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.28
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.26
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.22
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.20
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.18
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.16
	OPENBSD_5_0:1.8.0.14
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.12
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.10
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.6
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.8
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.6
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.20
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.18
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.16
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.14
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.12
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.8
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_9_BASE:1.5
	SMP:1.5.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2008.06.26.05.42.11;	author ray;	state Exp;
branches;
next	1.7;

1.7
date	2006.09.19.11.06.34;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.25.00.07.40;	author mickey;	state Exp;
branches
	1.5.2.1
	1.5.8.1;
next	1.4;

1.4
date	2000.08.02.02.42.50;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.28.03.37.59;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.27.08.35.21;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.26.22.38.36;	author mickey;	state Exp;
branches;
next	;

1.5.2.1
date	2001.04.18.16.08.24;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	;

1.5.8.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@/*	$OpenBSD: opti82c558.c,v 1.7 2006/09/19 11:06:34 jsg Exp $	*/
/*	$NetBSD: opti82c558.c,v 1.2 2000/07/18 11:24:09 soda Exp $	*/

/*-
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1999, by UCHIYAMA Yasushi
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the developer may NOT be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
 */

/*
 * Support for the Opti 82c558 PCI-ISA bridge interrupt controller.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/malloc.h>

#include <machine/intr.h>
#include <machine/bus.h>

#include <dev/pci/pcivar.h>
#include <dev/pci/pcireg.h>
#include <dev/pci/pcidevs.h>

#include <i386/pci/pcibiosvar.h>
#include <i386/pci/opti82c558reg.h>

int	opti82c558_getclink(pciintr_icu_handle_t, int, int *);
int	opti82c558_get_intr(pciintr_icu_handle_t, int, int *);
int	opti82c558_set_intr(pciintr_icu_handle_t, int, int);
int	opti82c558_get_trigger(pciintr_icu_handle_t, int, int *);
int	opti82c558_set_trigger(pciintr_icu_handle_t, int, int);

const struct pciintr_icu opti82c558_pci_icu = {
	opti82c558_getclink,
	opti82c558_get_intr,
	opti82c558_set_intr,
	opti82c558_get_trigger,
	opti82c558_set_trigger,
};

struct opti82c558_handle {
	pci_chipset_tag_t ph_pc;
	pcitag_t ph_tag;
};

static const int viper_pirq_decode[] = {
	-1, 5, 9, 10, 11, 12, 14, 15
};

static const int viper_pirq_encode[] = {
	-1,		/* 0 */
	-1,		/* 1 */
	-1,		/* 2 */
	-1,		/* 3 */
	-1,		/* 4 */
	VIPER_PIRQ_5,	/* 5 */
	-1,		/* 6 */
	-1,		/* 7 */
	-1,		/* 8 */
	VIPER_PIRQ_9,	/* 9 */
	VIPER_PIRQ_10,	/* 10 */
	VIPER_PIRQ_11,	/* 11 */
	VIPER_PIRQ_12,	/* 12 */
	-1,		/* 13 */
	VIPER_PIRQ_14,	/* 14 */
	VIPER_PIRQ_15,	/* 15 */
};

int
opti82c558_init(pci_chipset_tag_t pc, bus_space_tag_t iot, pcitag_t tag,
    pciintr_icu_tag_t *ptagp, pciintr_icu_handle_t *phandp)
{
	struct opti82c558_handle *ph;

	ph = malloc(sizeof(*ph), M_DEVBUF, M_NOWAIT);
	if (ph == NULL)
		return (1);

	ph->ph_pc = pc;
	ph->ph_tag = tag;

	*ptagp = &opti82c558_pci_icu;
	*phandp = ph;
	return (0);
}

int
opti82c558_getclink(pciintr_icu_handle_t v, int link, int *clinkp)
{

	if (VIPER_LEGAL_LINK(link - 1)) {
		*clinkp = link - 1;
		return (0);
	}

	return (1);
}

int
opti82c558_get_intr(pciintr_icu_handle_t v, int clink, int *irqp)
{
	struct opti82c558_handle *ph = v;
	pcireg_t reg;
	int val;

	if (VIPER_LEGAL_LINK(clink) == 0)
		return (1);

	reg = pci_conf_read(ph->ph_pc, ph->ph_tag, VIPER_CFG_PIRQ);
	val = VIPER_PIRQ(reg, clink);
	*irqp = (val == VIPER_PIRQ_NONE) ? 0xff : viper_pirq_decode[val];

	return (0);
}

int
opti82c558_set_intr(pciintr_icu_handle_t v, int clink, int irq)
{
	struct opti82c558_handle *ph = v;
	int shift;
	pcireg_t reg;

	if (VIPER_LEGAL_LINK(clink) == 0 || VIPER_LEGAL_IRQ(irq) == 0)
		return (1);

	reg = pci_conf_read(ph->ph_pc, ph->ph_tag, VIPER_CFG_PIRQ);
	shift = VIPER_PIRQ_SELECT_SHIFT * clink;
	reg &= ~(VIPER_PIRQ_SELECT_MASK << shift);
	reg |= (viper_pirq_encode[irq] << shift);
	pci_conf_write(ph->ph_pc, ph->ph_tag, VIPER_CFG_PIRQ, reg);

	return (0);
}

int
opti82c558_get_trigger(pciintr_icu_handle_t v, int irq, int *triggerp)
{
	struct opti82c558_handle *ph = v;
	pcireg_t reg;

	if (VIPER_LEGAL_IRQ(irq) == 0) {
		/* ISA IRQ? */
		*triggerp = IST_EDGE;
		return (0);
	}

	reg = pci_conf_read(ph->ph_pc, ph->ph_tag, VIPER_CFG_PIRQ);
	if ((reg >> (VIPER_CFG_TRIGGER_SHIFT + viper_pirq_encode[irq])) & 1)
		*triggerp = IST_LEVEL;
	else
		*triggerp = IST_EDGE;

	return (0);
}

int
opti82c558_set_trigger(pciintr_icu_handle_t v, int irq, int trigger)
{
	struct opti82c558_handle *ph = v;
	int shift;
	pcireg_t reg;

	if (VIPER_LEGAL_IRQ(irq) == 0) {
		/* ISA IRQ? */
		return ((trigger != IST_LEVEL) ? 0 : 1);
	}

	reg = pci_conf_read(ph->ph_pc, ph->ph_tag, VIPER_CFG_PIRQ);
	shift = (VIPER_CFG_TRIGGER_SHIFT + viper_pirq_encode[irq]);
	if (trigger == IST_LEVEL)
		reg |= (1 << shift);
	else
		reg &= ~(1 << shift);
	pci_conf_write(ph->ph_pc, ph->ph_tag, VIPER_CFG_PIRQ, reg);

	return (0);
}
@


1.7
log
@ansi/deregister
@
text
@d1 1
a1 1
/*	$OpenBSD: opti82c558.c,v 1.6 2002/03/14 01:26:33 millert Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: opti82c558.c,v 1.5 2001/01/25 00:07:40 mickey Exp $	*/
d128 2
a129 6
opti82c558_init(pc, iot, tag, ptagp, phandp)
	pci_chipset_tag_t pc;
	bus_space_tag_t iot;
	pcitag_t tag;
	pciintr_icu_tag_t *ptagp;
	pciintr_icu_handle_t *phandp;
d146 1
a146 3
opti82c558_getclink(v, link, clinkp)
	pciintr_icu_handle_t v;
	int link, *clinkp;
d158 1
a158 3
opti82c558_get_intr(v, clink, irqp)
	pciintr_icu_handle_t v;
	int clink, *irqp;
d175 1
a175 3
opti82c558_set_intr(v, clink, irq)
	pciintr_icu_handle_t v;
	int clink, irq;
d194 1
a194 3
opti82c558_get_trigger(v, irq, triggerp)
	pciintr_icu_handle_t v;
	int irq, *triggerp;
d215 1
a215 3
opti82c558_set_trigger(v, irq, trigger)
	pciintr_icu_handle_t v;
	int irq, trigger;
@


1.5
log
@put pci_intr_fixup.h into pcibiosvar.h; billions of tiny headers for nothing
@
text
@d1 1
a1 1
/*	$OpenBSD: opti82c558.c,v 1.4 2000/08/02 02:42:50 mickey Exp $	*/
d85 5
a89 5
int	opti82c558_getclink __P((pciintr_icu_handle_t, int, int *));
int	opti82c558_get_intr __P((pciintr_icu_handle_t, int, int *));
int	opti82c558_set_intr __P((pciintr_icu_handle_t, int, int));
int	opti82c558_get_trigger __P((pciintr_icu_handle_t, int, int *));
int	opti82c558_set_trigger __P((pciintr_icu_handle_t, int, int));
@


1.5.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: opti82c558.c,v 1.5 2001/01/25 00:07:40 mickey Exp $	*/
d85 5
a89 5
int	opti82c558_getclink(pciintr_icu_handle_t, int, int *);
int	opti82c558_get_intr(pciintr_icu_handle_t, int, int *);
int	opti82c558_set_intr(pciintr_icu_handle_t, int, int);
int	opti82c558_get_trigger(pciintr_icu_handle_t, int, int *);
int	opti82c558_set_trigger(pciintr_icu_handle_t, int, int);
@


1.5.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: opti82c558.c,v 1.5 2001/01/25 00:07:40 mickey Exp $	*/
@


1.5.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d85 5
a89 5
int	opti82c558_getclink(pciintr_icu_handle_t, int, int *);
int	opti82c558_get_intr(pciintr_icu_handle_t, int, int *);
int	opti82c558_set_intr(pciintr_icu_handle_t, int, int);
int	opti82c558_get_trigger(pciintr_icu_handle_t, int, int *);
int	opti82c558_set_trigger(pciintr_icu_handle_t, int, int);
@


1.4
log
@update n-rcsids
@
text
@d1 1
a1 1
/*	$OpenBSD: opti82c558.c,v 1.3 2000/03/28 03:37:59 mickey Exp $	*/
d82 1
a82 1
#include <i386/pci/pci_intr_fixup.h>
@


1.3
log
@fix netbsd rcsids up.
also, from the 3rd try make proper openbsd rcsids, rediculous
3 commits just to add proper openbsd rcsids.
i think someone forgot to _look_ at the diffs before commit.
@
text
@d1 2
a2 2
/*	$OpenBSD: opti82c558.c,v 1.2 2000/03/27 08:35:21 brad Exp $	*/
/*	$NetBSD: opti82c558.c,v 1.1 1999/11/17 01:21:20 thorpej Exp $	*/
@


1.2
log
@add missing OpenBSD RCS IDs
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD$	*/
@


1.1
log
@from netbsd: pci interrupt routing code.
also, change a few pcidevs names to match netbsd (and more descriptive).
tested on a bunch of laptops, helps resolving 'pin X unmapped'
problems for (usually) usb and cardbus cntrollers.
@
text
@d1 1
@

