head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	UBC_SYNC_B:1.6
	SMP:1.6.0.2
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.4
	OPENBSD_2_0_BASE:1.3
	new:1.3.0.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.6
date	97.11.05.02.47.01;	author mickey;	state dead;
branches;
next	1.5;

1.5
date	97.07.17.22.43.08;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.11.22.11.11.27;	author graichen;	state Exp;
branches;
next	1.3;

1.3
date	96.05.18.10.33.13;	author mickey;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	95.10.23.15.46.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.29;	author deraadt;	state Exp;
branches;
next	;

1.3.2.1
date	96.09.21.19.32.55;	author mickey;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	96.09.26.12.11.26;	author mickey;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	96.10.23.08.37.49;	author mickey;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	96.10.28.12.14.24;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@who needs that junk (;
@
text
@#	$NetBSD: Makefile,v 1.20 1995/06/26 03:24:17 christos Exp $
#
# Ported to boot 386BSD by Julian Elischer (julian@@tfs.com)
# September 1992
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
# CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
# ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# Carnegie Mellon requests users of this software to return to
#
#  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
#  School of Computer Science
#  Carnegie Mellon University
#  Pittsburgh PA 15213-3890
#
# any improvements or extensions that they make and grant Carnegie Mellon
# the rights to redistribute these changes.
#

S=	${.CURDIR}/../../..

machine-links:
	-rm -f machine && \
	    ln -s ${.CURDIR}/../include machine
	-rm -f ${MACHINE_ARCH} && \
	    ln -s ${.CURDIR}/../include ${MACHINE_ARCH}

all: machine-links biosboot bootbios

NOPROG=	noprog
NOMAN=	noman

CFLAGS=	-O6 -D_KERNEL -DI386_CPU -DI486_CPU -DI586_CPU
CFLAGS+=-DDO_BAD144 -I. -I${.CURDIR} -I$S -I${.CURDIR}/../..

# Uncomment this to make the boot block talk to a serial port.
#CPPFLAGS+=-DSERIAL -DCOMCONSOLE=0x3F8 -DCONSPEED=9600

# start.o should be first
OBJS=	start.o table.o boot.o asm.o bios.o io.o disk.o sys.o version.o \
	serial.o

boot.sym:	${OBJS}
	${LD} -Bstatic -e start -N -T 0 -o boot.sym ${OBJS}

boot: boot.sym
	@@if [ `size boot.sym | awk 'BEGIN {getline} {print $$1+$$2}'` -gt 7680 ];\
	then \
		echo BOOT BLOCKS ARE TOO BIG;\
		exit 1; \
	fi
	@@cp boot.sym boot
	@@strip boot
	@@sh ${.CURDIR}/rmaouthdr boot boot.tmp
	@@mv -f boot.tmp boot
	@@ls -l boot

biosboot:	boot
	dd if=boot of=biosboot count=1

bootbios:	boot
	dd if=boot of=bootbios skip=1

${DESTDIR}/usr/mdec/bootsd:	bootbios
	cp bootbios ${DESTDIR}/usr/mdec/bootsd

${DESTDIR}/usr/mdec/sdboot:	biosboot
	cp biosboot ${DESTDIR}/usr/mdec/sdboot

${DESTDIR}/usr/mdec/bootwd:	${DESTDIR}/usr/mdec/bootsd
	rm -f ${DESTDIR}/usr/mdec/bootwd
	ln ${DESTDIR}/usr/mdec/bootsd ${DESTDIR}/usr/mdec/bootwd

${DESTDIR}/usr/mdec/wdboot:	${DESTDIR}/usr/mdec/sdboot
	rm -f ${DESTDIR}/usr/mdec/wdboot
	ln ${DESTDIR}/usr/mdec/sdboot ${DESTDIR}/usr/mdec/wdboot

${DESTDIR}/usr/mdec/bootfd:	${DESTDIR}/usr/mdec/bootsd
	rm -f ${DESTDIR}/usr/mdec/bootfd
	ln ${DESTDIR}/usr/mdec/bootsd ${DESTDIR}/usr/mdec/bootfd

${DESTDIR}/usr/mdec/fdboot:	${DESTDIR}/usr/mdec/sdboot
	rm -f ${DESTDIR}/usr/mdec/fdboot
	ln ${DESTDIR}/usr/mdec/sdboot ${DESTDIR}/usr/mdec/fdboot

sd:	${DESTDIR}/usr/mdec/bootsd ${DESTDIR}/usr/mdec/sdboot
wd:	${DESTDIR}/usr/mdec/bootwd ${DESTDIR}/usr/mdec/wdboot
fd:	${DESTDIR}/usr/mdec/bootfd ${DESTDIR}/usr/mdec/fdboot

install: wd sd fd

CLEANFILES+=bootbios boot biosboot boot.sym machine ${MACHINE_ARCH}

clean::
	rm -f a.out [Ee]rrs mklog core *.core
	rm -f ${PROG} ${OBJS} ${LOBJS} ${CLEANFILES}


.include <bsd.prog.mk>
@


1.5
log
@proper size/stripping/handling
@
text
@@


1.4
log
@fix booting with serial console - i replaced the bios code from OpenBSD with
FreeBSD's polling code so that it works with all serial terminals - if you now
remove the comment in front of #CPPFLAGS+=-DSERIAL -D... - the bootprompt
should appear on the serial console

note: i had to rename "geometry" in one printf of sys.c to "geom." to get the
      bootblocks small enough for serial console booting
@
text
@d50 5
a54 4
boot:	${OBJS}
	${LD} -Bstatic -e start -N -T 0 -o boot ${OBJS}
	cp boot boot.sym
	@@if [ `size boot | awk 'BEGIN {getline} {print $$1+$$2}'` -gt 7680 ];\
d57 1
a57 1
		fail;\
d59 1
@


1.3
log
@do boot from active partition.
this tested w/ DOS(win95), and BSD.
@
text
@d44 1
a44 1
#CPPFLAGS+=-DSERIAL
d47 2
a48 1
OBJS=	start.o table.o boot.o asm.o bios.o io.o disk.o sys.o version.o
@


1.3.2.1
log
@wipe out printf and twiddle.
use libsa.a, what is it for then?
@
text
@d29 7
a35 1
LOADSZ=15
d37 2
a38 1
DEBUG=	-g -DDEBUG
d40 2
a41 6
OBJDUMP=/usr/i386-unknown-openbsd1.2/bin/objdump
AFLAGS+=-v -Wa,-a -DLOADSZ=${LOADSZ} -B/usr/i386-unknown-openbsd1.2/bin
CFLAGS+=-Werror -m386 -O2 -DNO_SPRINTF
#	-DDO_BAD144
# no 16-bit-code flag yet
OBJDUMPFLAGS=-d
d44 1
a44 6
#CPPFLAGS+=-DSERIAL=0
CPPFLAGS=${DEBUG} -I. -I${.CURDIR} -I$S -I${.CURDIR}/../..

# SA lib stuff
SAREL=
.include "$S/lib/libsa/Makefile.inc"
d47 1
a47 2
OBJS=	start.o table.o boot.o asm.o bios.o io.o disk.o sys.o
CLEANFILES+=bootbios boot biosboot boot.sym machine ${MACHINE_ARCH}
d49 2
a50 8
all: machine-links biosboot bootbios

machine-links:
	ln -fs ${.CURDIR}/../include machine
	ln -fs ${.CURDIR}/../include ${MACHINE_ARCH}

boot:	${OBJS} ${SALIB}
	${LD} -Bstatic -e _boot1 -N -T 0 -o ${.TARGET} ${OBJS} ${SALIB} version.o
d52 5
a57 4
	@@size boot | \
	awk 'BEGIN {getline} \
		{if($$1+$$2>${LOADSZ}*512){\
			print "BOOT BLOCKS ARE TOO BIG"; exit(1)}}'
d75 2
a76 1
	ln -f ${DESTDIR}/usr/mdec/bootsd ${DESTDIR}/usr/mdec/bootwd
d79 2
a80 1
	ln -f ${DESTDIR}/usr/mdec/sdboot ${DESTDIR}/usr/mdec/wdboot
d83 2
a84 1
	ln -f ${DESTDIR}/usr/mdec/bootsd ${DESTDIR}/usr/mdec/bootfd
d87 2
a88 1
	ln -f ${DESTDIR}/usr/mdec/sdboot ${DESTDIR}/usr/mdec/fdboot
d96 1
a96 1
depend::
d100 2
a101 1
	rm -f ${OBJS} ${LOBJS} ${CLEANFILES}
d103 1
@


1.3.2.2
log
@working now. only start.S requires as.new.
tested w/ floppy, expected to work w/ hd too....
/boot is coming soon.
DEBUG enabled!!!
@
text
@d34 3
a36 3
AS=	/usr/i386-unknown-openbsd1.2/bin/as.new
AFLAGS+=-DLOADSZ=${LOADSZ}
CFLAGS+=-Werror -m386 -O2 -DNO_SPRINTF -DDO_BAD144
a39 1
CPPFLAGS=${DEBUG} -I. -I${.CURDIR} -I$S -I${.CURDIR}/../..
d42 1
a46 1
CFLAGS+=-I$S/lib/libsa
a53 6

start.o: ${.CURDIR}/start.S
	@@echo ${CC} ${CPPFLAGS} ${AFLAGS} ${.CURDIR}/start.S
	@@${CC} -E ${CPPFLAGS} ${AFLAGS} ${.CURDIR}/start.S > $*.s
	@@(${AS} -o $*.o $*.s; rm $*.s)

a105 1
.include <bsd.prog.mk>
@


1.3.2.3
log
@reflect recent changes to libsa
@
text
@d65 1
a65 1
boot:	${OBJS} ${SALIB} version.o
@


1.3.2.4
log
@new boots w/ libsa using.
new libsa required too, no commit yet.
this one is to mark the step. but it works for me (:
@
text
@d1 1
a1 1
#	$OpenBSD$
d29 1
a29 1
LOADSZ=16
a31 1
NO_NET=no_net
d33 6
a38 5
CFLAGS+=-Wall -Werror -m386 -O2
# strip off uneeded stuff
CFLAGS+=-DNO_WRITE -DNO_READDIR -DNO_LSEEK -DNO_STAT -DINSECURE -DSTRIPPED
# use kbd io
CFLAGS+=-Dputc=kbd_putc
d40 1
a40 1
CPPFLAGS=${DEBUG} -I${.CURDIR} -I$S -I${.CURDIR}/../stand/libsa
d50 1
a50 1
OBJS=	start.o table.o boot.o conf.o dev_subr.o
d57 3
a59 2
	${CC} -E ${CPPFLAGS} ${AFLAGS} -DLOADSZ=${LOADSZ} ${.CURDIR}/start.S > tmp.s
	${AS} -o $*.o tmp.s && rm tmp.s
@


1.2
log
@no libkern
@
text
@d52 5
@


1.1
log
@Initial revision
@
text
@a28 9
### find out what to use for libkern
KERNREL=
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

d49 2
a50 2
boot:	${OBJS} ${LIBKERN}
	${LD} -Bstatic -e start -N -T 0 -o boot ${OBJS} ${LIBKERN}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
