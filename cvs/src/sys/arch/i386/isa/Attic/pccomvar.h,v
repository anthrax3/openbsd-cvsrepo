head	1.21;
access;
symbols
	OPENBSD_4_4:1.19.0.8
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.6
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.4
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.2
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.16.0.2
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.14.0.16
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.14
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.12
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.10
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.8
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.14
	UBC:1.13.0.4
	UBC_BASE:1.13
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.2
	SMP_BASE:1.9
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.21
date	2008.11.24.09.29.06;	author deraadt;	state dead;
branches;
next	1.20;

1.20
date	2008.11.23.17.59.00;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2006.12.28.20.50.21;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2006.07.31.11.06.20;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.28.16.48.18;	author fkr;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.24.14.22.34;	author fgsch;	state Exp;
branches;
next	1.15;

1.15
date	2005.09.26.22.32.05;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.08.19.07.17;	author mickey;	state Exp;
branches
	1.13.4.1;
next	1.12;

1.12
date	2001.03.15.17.52.20;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.24.09.38.02;	author hugh;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.16.19.15.35;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.04.06.12.21;	author angelos;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	99.08.08.01.34.15;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	99.07.26.12.31.44;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	98.04.05.07.36.45;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	98.02.23.11.40.33;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.07.07.17.08.05;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.12.18.16.51.44;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.07.28.05.07.06;	author downsj;	state dead;
branches;
next	1.1;

1.1
date	96.07.07.00.05.49;	author downsj;	state Exp;
branches;
next	;

1.9.2.1
date	2001.04.18.16.07.54;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2001.10.31.03.01.12;	author nate;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	;

1.13.4.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	;


desc
@@


1.21
log
@die die die
@
text
@@


1.20
log
@pccom can finally die; ok kettenis dlg drahn, tested by okan
@
text
@@


1.19
log
@Support for ST16C654 chips, however these aren't detected as such, so the
attachment code has to know better for now;
from Alexei G. Malinin (alexei.malinin@@inetcomm.ru)
@
text
@a0 153
/*	$OpenBSD: pccomvar.h,v 1.18 2006/07/31 11:06:20 mickey Exp $	*/
/*	$NetBSD: comvar.h,v 1.5 1996/05/05 19:50:47 christos Exp $	*/

/*
 * Copyright (c) 1996 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* XXX - should be shared among com.c and pccom.c */
struct commulti_attach_args {
	int		ca_slave;		/* slave number */

	bus_space_tag_t ca_iot;
	bus_space_handle_t ca_ioh;
	int		ca_iobase;
	int		ca_noien;
};

struct com_softc {
	struct device sc_dev;
	void *sc_ih;
	bus_space_tag_t sc_iot;
	struct tty *sc_tty;
	struct timeout sc_dtr_tmo;
	struct timeout sc_diag_tmo;

	int sc_overflows;
	int sc_floods;
	int sc_errors;

	int sc_halt;

	int sc_iobase;
	int sc_frequency;

	bus_space_handle_t sc_ioh;
	bus_space_handle_t sc_hayespioh;

	u_char sc_uarttype;
#define COM_UART_UNKNOWN	0x00		/* unknown */
#define COM_UART_8250		0x01		/* no fifo */
#define COM_UART_16450		0x02		/* no fifo */
#define COM_UART_16550		0x03		/* no working fifo */
#define COM_UART_16550A		0x04		/* 16 byte fifo */
#define COM_UART_ST16650	0x05		/* no working fifo */
#define COM_UART_ST16650V2	0x06		/* 32 byte fifo */
#define COM_UART_TI16750	0x07		/* 64 byte fifo */
#define	COM_UART_ST16C654	0x08		/* 64 bytes fifo */
#define COM_UART_XR16850	0x10		/* 128 byte fifo */
#define COM_UART_OX16C950	0x12		/* 128 byte fifo */
	u_char sc_uartrev;

	u_char sc_hwflags;
#define	COM_HW_NOIEN	0x01
#define	COM_HW_FIFO	0x02
#define	COM_HW_CONSOLE	0x40
#define COM_HW_KGDB	0x80
	u_char sc_swflags;
#define	COM_SW_SOFTCAR	0x01
#define	COM_SW_CLOCAL	0x02
#define	COM_SW_CRTSCTS	0x04
#define	COM_SW_MDMBUF	0x08
	int	sc_fifolen;
	u_char sc_msr, sc_mcr, sc_lcr, sc_ier;
	u_char sc_dtr;

	u_char	sc_cua;

	u_char	sc_initialize;		/* force initialization */

#define RBUFSIZE 512                                                
#define RBUFMASK 511                                                     
	u_int sc_rxget;
	volatile u_int sc_rxput;
	u_char sc_rxbuf[RBUFSIZE];
	u_char *sc_tba;
	int sc_tbc;

	/* power management hooks */
	int (*enable)(struct com_softc *);
	void (*disable)(struct com_softc *);
	int enabled;
};

int	comprobe1(bus_space_tag_t, bus_space_handle_t);
void	cominit(bus_space_tag_t, bus_space_handle_t, int);
int	comstop(struct tty *, int);
int	comintr(void *);
int	com_detach(struct device *, int);
int	com_activate(struct device *, enum devact);

void	comdiag(void *);
int	comspeed(long, long);
int	comparam(struct tty *, struct termios *);
void	comstart(struct tty *);
void	comsoft(void);
int	comhwiflow(struct tty *, int);
void	com_raisedtr(void *);

struct consdev;
void	comcnprobe(struct consdev *);
void	comcninit(struct consdev *);
int	comcngetc(dev_t);
void	comcnputc(dev_t, int);
void	comcnpollc(dev_t, int);
int	com_common_getc(bus_space_tag_t, bus_space_handle_t);
void	com_common_putc(bus_space_tag_t, bus_space_handle_t, int);

#if defined(DDB) || defined(KGDB)
void	com_enable_debugport(struct com_softc *);
#endif /* DDB || KGDB */

#ifdef KGDB
extern bus_space_tag_t com_kgdb_iot;
extern bus_addr_t com_kgdb_addr;

int	com_kgdb_attach(bus_space_tag_t, bus_addr_t, int, int, tcflag_t);
int	kgdbintr(void *);
#endif /* KGDB */

void	com_attach_subr(struct com_softc *);

extern bus_addr_t comconsaddr;
extern int comconsinit;
extern int comconsattached;
extern bus_space_tag_t comconsiot;
extern bus_space_handle_t comconsioh;
extern tcflag_t comconscflag;
@


1.18
log
@puc@@cardbus (only added (commented out) to whom has puc@@pci enabled)
tested on puc@@pci by fkr and meself on the cardbus.
still needs a bit more work but generally works.
deraadt@@ ok and some input from miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.17 2006/05/28 16:48:18 fkr Exp $	*/
d73 1
@


1.17
log
@remove sc_ic member from struct com_softc as it is not used anywhere
ok miod@@, martin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.16 2005/10/24 14:22:34 fgsch Exp $	*/
d74 1
@


1.16
log
@fix compilation for KGDB; looked by miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.15 2005/09/26 22:32:05 miod Exp $	*/
a62 1
	isa_chipset_tag_t sc_ic;
@


1.15
log
@Share com probe code between com and pccom; allows us to get rid of awkward
code duplication in cardbus, pcmcia and puc attachments.

Joint effort with fgs@@; blessed deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.14 2002/03/14 01:26:33 millert Exp $	*/
d138 4
a141 1
int	com_kgdb_attach(bus_space_tag_t, int, int, int, tcflag_t);
d147 1
a147 1
extern int comconsaddr;
@


1.14
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.13 2001/08/08 19:07:17 mickey Exp $	*/
a59 3
#ifdef COM_HAYESP
	int sc_hayespbase;
#endif
a79 1
#define	COM_HW_HAYESP	0x04
a115 3
#ifdef COM_HAYESP
int comprobeHAYESP(bus_space_handle_t hayespioh, struct com_softc *sc);
#endif
d141 2
@


1.13
log
@move the com_raisedtr proto for timeout_set
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.12 2001/03/15 17:52:20 deraadt Exp $	*/
d108 2
a109 2
	int (*enable) __P((struct com_softc *));
	void (*disable) __P((struct com_softc *));
d113 6
a118 6
int	comprobe1 __P((bus_space_tag_t, bus_space_handle_t));
void	cominit __P((bus_space_tag_t, bus_space_handle_t, int));
int	comstop __P((struct tty *, int));
int	comintr __P((void *));
int	com_detach __P((struct device *, int));
int	com_activate __P((struct device *, enum devact));
d121 1
a121 1
int comprobeHAYESP __P((bus_space_handle_t hayespioh, struct com_softc *sc));
d123 7
a129 7
void	comdiag		__P((void *));
int	comspeed	__P((long, long));
int	comparam	__P((struct tty *, struct termios *));
void	comstart	__P((struct tty *));
void	comsoft		__P((void));
int	comhwiflow	__P((struct tty *, int));
void	com_raisedtr	__P((void *));
d132 7
a138 7
void	comcnprobe	__P((struct consdev *));
void	comcninit	__P((struct consdev *));
int	comcngetc	__P((dev_t));
void	comcnputc	__P((dev_t, int));
void	comcnpollc	__P((dev_t, int));
int	com_common_getc	__P((bus_space_tag_t, bus_space_handle_t));
void	com_common_putc	__P((bus_space_tag_t, bus_space_handle_t, int));
d141 1
a141 1
void	com_enable_debugport	__P((struct com_softc *));
d145 2
a146 2
int	com_kgdb_attach	__P((bus_space_tag_t, int, int, int, tcflag_t));
int	kgdbintr	__P((void *));
@


1.13.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.13 2001/08/08 19:07:17 mickey Exp $	*/
d108 2
a109 2
	int (*enable)(struct com_softc *);
	void (*disable)(struct com_softc *);
d113 6
a118 6
int	comprobe1(bus_space_tag_t, bus_space_handle_t);
void	cominit(bus_space_tag_t, bus_space_handle_t, int);
int	comstop(struct tty *, int);
int	comintr(void *);
int	com_detach(struct device *, int);
int	com_activate(struct device *, enum devact);
d121 1
a121 1
int comprobeHAYESP(bus_space_handle_t hayespioh, struct com_softc *sc);
d123 7
a129 7
void	comdiag(void *);
int	comspeed(long, long);
int	comparam(struct tty *, struct termios *);
void	comstart(struct tty *);
void	comsoft(void);
int	comhwiflow(struct tty *, int);
void	com_raisedtr(void *);
d132 7
a138 7
void	comcnprobe(struct consdev *);
void	comcninit(struct consdev *);
int	comcngetc(dev_t);
void	comcnputc(dev_t, int);
void	comcnpollc(dev_t, int);
int	com_common_getc(bus_space_tag_t, bus_space_handle_t);
void	com_common_putc(bus_space_tag_t, bus_space_handle_t, int);
d141 1
a141 1
void	com_enable_debugport(struct com_softc *);
d145 2
a146 2
int	com_kgdb_attach(bus_space_tag_t, int, int, int, tcflag_t);
int	kgdbintr(void *);
@


1.12
log
@support puc devices with higher speeds (not tested yet)
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.11 2001/01/24 09:38:02 hugh Exp $	*/
d129 1
@


1.11
log
@KGDB for i386 from NetBSD via niklas, with tweaks and accommodations.
Tested by various, vetted by mickey & theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.10 2000/08/16 19:15:35 mickey Exp $	*/
d124 1
a124 1
int	comspeed	__P((long));
@


1.10
log
@morth to use new timeouts
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.9 2000/02/04 06:12:21 angelos Exp $	*/
d59 1
d85 1
d136 11
@


1.9
log
@Externalize comstop()
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.8 1999/08/08 01:34:15 niklas Exp $	*/
d49 2
@


1.9.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.12 2001/03/15 17:52:20 deraadt Exp $	*/
a48 2
	struct timeout sc_dtr_tmo;
	struct timeout sc_diag_tmo;
a56 1
	int sc_frequency;
a81 1
#define COM_HW_KGDB	0x80
d120 1
a120 1
int	comspeed	__P((long, long));
a131 11
int	com_common_getc	__P((bus_space_tag_t, bus_space_handle_t));
void	com_common_putc	__P((bus_space_tag_t, bus_space_handle_t, int));

#if defined(DDB) || defined(KGDB)
void	com_enable_debugport	__P((struct com_softc *));
#endif /* DDB || KGDB */

#ifdef KGDB
int	com_kgdb_attach	__P((bus_space_tag_t, int, int, int, tcflag_t));
int	kgdbintr	__P((void *));
#endif /* KGDB */
@


1.9.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.9.2.1 2001/04/18 16:07:54 niklas Exp $	*/
a128 1
void	com_raisedtr	__P((void *));
@


1.9.2.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 2
a109 2
	int (*enable)(struct com_softc *);
	void (*disable)(struct com_softc *);
d113 6
a118 6
int	comprobe1(bus_space_tag_t, bus_space_handle_t);
void	cominit(bus_space_tag_t, bus_space_handle_t, int);
int	comstop(struct tty *, int);
int	comintr(void *);
int	com_detach(struct device *, int);
int	com_activate(struct device *, enum devact);
d121 1
a121 1
int comprobeHAYESP(bus_space_handle_t hayespioh, struct com_softc *sc);
d123 7
a129 7
void	comdiag(void *);
int	comspeed(long, long);
int	comparam(struct tty *, struct termios *);
void	comstart(struct tty *);
void	comsoft(void);
int	comhwiflow(struct tty *, int);
void	com_raisedtr(void *);
d132 7
a138 7
void	comcnprobe(struct consdev *);
void	comcninit(struct consdev *);
int	comcngetc(dev_t);
void	comcnputc(dev_t, int);
void	comcnpollc(dev_t, int);
int	com_common_getc(bus_space_tag_t, bus_space_handle_t);
void	com_common_putc(bus_space_tag_t, bus_space_handle_t, int);
d141 1
a141 1
void	com_enable_debugport(struct com_softc *);
d145 2
a146 2
int	com_kgdb_attach(bus_space_tag_t, int, int, int, tcflag_t);
int	kgdbintr(void *);
@


1.8
log
@Detach support for com; NetBSD and me
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.7 1999/07/26 12:31:44 niklas Exp $	*/
d111 1
@


1.7
log
@Remove obsolete detach code that has been dead for very long
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.6 1998/04/05 07:36:45 downsj Exp $	*/
d102 5
d112 2
@


1.6
log
@Support for the XR16850; currently just treat it like an ST16650V2 with
bigger FIFOs.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.5 1998/02/23 11:40:33 downsj Exp $	*/
a80 3
#define	COM_HW_ABSENT_PENDING	0x08	/* reattached, awaiting close/reopen */
#define	COM_HW_ABSENT	0x10		/* configure actually failed, or removed */
#define	COM_HW_REATTACH	0x20		/* reattaching */
a106 1
void	com_absent_notify __P((struct com_softc *sc));
@


1.5
log
@New probe routine, add support for ST16650 (works).

Tested with some 16450 and 16550 UARTs.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.4 1997/07/07 17:08:05 niklas Exp $	*/
d74 2
@


1.4
log
@Mirror com changes
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.3 1996/12/18 16:51:44 millert Exp $	*/
d64 10
@


1.3
log
@Make pccom compile.  This stull really needs to be merged into the
normal com driver.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.1 1996/11/30 13:39:31 niklas Exp $	*/
d95 1
a95 1
int	comprobe1 __P((bus_space_tag_t, bus_space_handle_t, int));
@


1.2
log
@pccom and com are now mutually exclusive; pccom moves to major 8, the
same as com.

Also various function renaming and such so that multiport drivers should
now be able to link with pccom.  pccomvar.h is no longer needed.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccomvar.h,v 1.1 1996/07/07 00:05:49 downsj Exp downsj $	*/
d34 2
a35 1
struct pccommulti_attach_args {
d38 2
a39 2
	bus_chipset_tag_t ca_bc;
	bus_io_handle_t ca_ioh;
d44 5
a48 2
int pccomprobe1 __P((bus_chipset_tag_t, bus_io_handle_t, int));
int pccomintr __P((void *));
d50 73
a122 5
extern int pccomconsaddr;
extern int pccomconsattached;
extern bus_chipset_tag_t pccomconsbc;
extern bus_io_handle_t pccomconsioh;
extern tcflag_t pccomconscflag;
@


1.1
log
@Integrate the i386 specific com driver from Onno van der Linden,
<onno@@simplex.nl>, as a seperate driver.  This is the OpenBSD com.c, with
his changes integrated and the functions renamed.

This driver should work with pcmcia, but hasn't been tested.  It will not
work the multiport boards.

Simply switch 'com' to 'pccom' in your conf and change the major number of
your devices in order to use this.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@
