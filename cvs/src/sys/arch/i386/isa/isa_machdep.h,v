head	1.25;
access;
symbols
	OPENBSD_6_2:1.25.0.34
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.25.0.32
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.28
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.24
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.26
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.18
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.25.0.22
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.20
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.25.0.16
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.14
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.12
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.10
	OPENBSD_5_0:1.25.0.8
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.25.0.6
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.4
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.24.0.6
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.24.0.2
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.22.0.2
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.21.0.10
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.8
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.6
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.4
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.2
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.19.0.10
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.8
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.6
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	UBC_SYNC_A:1.18
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.17.0.4
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	UBC_SYNC_B:1.17
	UBC:1.15.0.16
	UBC_BASE:1.15
	OPENBSD_3_0:1.15.0.14
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9:1.15.0.12
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.15.0.10
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.15.0.8
	OPENBSD_2_7_BASE:1.15
	SMP:1.15.0.6
	SMP_BASE:1.15
	kame_19991208:1.15
	OPENBSD_2_6:1.15.0.4
	OPENBSD_2_6_BASE:1.15
	OPENBSD_2_5:1.15.0.2
	OPENBSD_2_5_BASE:1.15
	OPENBSD_2_4:1.14.0.2
	OPENBSD_2_4_BASE:1.14
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.9.0.4
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.25
date	2009.08.22.02.54.50;	author mk;	state Exp;
branches;
next	1.24;

1.24
date	2008.12.11.17.07.14;	author oga;	state Exp;
branches;
next	1.23;

1.23
date	2008.12.03.15.46.07;	author oga;	state Exp;
branches;
next	1.22;

1.22
date	2008.06.26.05.42.11;	author ray;	state Exp;
branches;
next	1.21;

1.21
date	2006.02.12.19.55.39;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2005.11.23.09.32.46;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.02.23.27.47;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2003.01.16.04.17.10;	author art;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.14.03.15.54;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	99.01.13.07.26.00;	author niklas;	state Exp;
branches
	1.15.6.1
	1.15.16.1;
next	1.14;

1.14
date	98.06.29.02.12.59;	author downsj;	state Exp;
branches;
next	1.13;

1.13
date	98.01.20.18.40.21;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	97.12.21.14.44.33;	author downsj;	state Exp;
branches;
next	1.11;

1.11
date	97.09.24.22.28.17;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	97.09.22.21.03.55;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	96.09.23.15.05.57;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	96.06.22.17.36.52;	author tholo;	state Exp;
branches;
next	1.7;

1.7
date	96.05.07.07.22.18;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.04.21.22.16.55;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.03.20.00.31.03;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.03.19.21.09.35;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.20.04.35.31;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	95.11.28.16.43.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.37;	author deraadt;	state Exp;
branches;
next	;

1.15.6.1
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	1.15.6.2;

1.15.6.2
date	2003.03.27.23.26.55;	author niklas;	state Exp;
branches;
next	1.15.6.3;

1.15.6.3
date	2003.06.07.11.11.37;	author ho;	state Exp;
branches;
next	;

1.15.16.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	1.15.16.2;

1.15.16.2
date	2003.05.19.21.45.11;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Constify the what/name parameter of pci_intr_establish().

Tested by myself, sthen, oga, kettenis, and jasper.
Input from sthen and jasper.

ok kettenis

(Manpage follows shortly.)
@
text
@/*	$OpenBSD: isa_machdep.h,v 1.24 2008/12/11 17:07:14 oga Exp $	*/
/*	$NetBSD: isa_machdep.h,v 1.7 1997/06/06 23:28:42 thorpej Exp $	*/

/*-
 * Copyright (c) 1996, 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)isa.h	5.7 (Berkeley) 5/9/91
 */

/*
 * Various pieces of the i386 port want to include this file without
 * or in spite of using isavar.h, and should be fixed.
 */

#ifndef _I386_ISA_MACHDEP_H_			/* XXX */
#define _I386_ISA_MACHDEP_H_			/* XXX */

#include <machine/bus.h>

/*
 * ISA can only DMA to 0-16M.
 */
#define	ISA_DMA_BOUNCE_THRESHOLD	0x00ffffff

/*
 * XXX THIS FILE IS A MESS.  copyright: berkeley's probably.
 * contents from isavar.h and isareg.h, mostly the latter.
 * perhaps charles's?
 *
 * copyright from berkeley's isa.h which is now dev/isa/isareg.h.
 */

/*
 * Types provided to machine-independent ISA code.
 */
typedef void *isa_chipset_tag_t;

struct device;			/* XXX */
struct isabus_attach_args;	/* XXX */

/*
 * Functions provided to machine-independent ISA code.
 */
void	isa_attach_hook(struct device *, struct device *,
	    struct isabus_attach_args *);
int	isa_intr_alloc(isa_chipset_tag_t, int, int, int *);
int	isa_intr_check(isa_chipset_tag_t, int, int);
void	*isa_intr_establish(isa_chipset_tag_t ic, int irq, int type,
	    int level, int (*ih_fun)(void *), void *ih_arg,
	    const char *ih_what);
void	isa_intr_disestablish(isa_chipset_tag_t ic, void *handler);

/*
 * ALL OF THE FOLLOWING ARE MACHINE-DEPENDENT, AND SHOULD NOT BE USED
 * BY PORTABLE CODE.
 */

extern struct bus_dma_tag isa_bus_dma_tag;

/*
 * Cookie used by ISA dma.  A pointer to one of these it stashed in
 * the DMA map.
 */
struct isa_dma_cookie {
	int	id_flags;		/* flags; see below */

	void	*id_origbuf;		/* pointer to orig buffer if
					   bouncing */
	bus_size_t id_origbuflen;	/* ...and size */

	void	*id_bouncebuf;		/* pointer to the bounce buffer */
	bus_size_t id_bouncebuflen;	/* ...and size */
	int	id_nbouncesegs;		/* number of valid bounce segs */
	bus_dma_segment_t id_bouncesegs[0]; /* array of bounce buffer
					       physical memory segments */
};

/* id_flags */
#define	ID_MIGHT_NEED_BOUNCE	0x01	/* map could need bounce buffers */
#define	ID_HAS_BOUNCE		0x02	/* map currently has bounce buffers */
#define	ID_IS_BOUNCING		0x04	/* map is bouncing current xfer */

/*
 * XXX Various seemingly PC-specific constants, some of which may be
 * unnecessary anyway.
 */

/*
 * RAM Physical Address Space (ignoring the above mentioned "hole")
 */
#define	RAM_BEGIN	0x0000000	/* Start of RAM Memory */
#define	RAM_END		0x1000000	/* End of RAM Memory */
#define	RAM_SIZE	(RAM_END - RAM_BEGIN)

/*
 * Oddball Physical Memory Addresses
 */
#define	COMPAQ_RAMRELOC	0x80c00000	/* Compaq RAM relocation/diag */
#define	COMPAQ_RAMSETUP	0x80c00002	/* Compaq RAM setup */
#define	WEITEK_FPU	0xC0000000	/* WTL 2167 */
#define	CYRIX_EMC	0xC0000000	/* Cyrix EMC */

/*
 * stuff that used to be in pccons.c
 */
#define	MONO_BUF	0xB0000
#define	CGA_BUF		0xB8000
#define	IOPHYSMEM	0xA0000


/*
 * ISA DMA bounce buffers.
 * XXX should be made partially machine- and bus-mapping-independent.
 *
 * DMA_BOUNCE is the number of pages of low-addressed physical memory
 * to acquire for ISA bounce buffers. If physical memory below 16 MB
 * then DMA_BOUNCE_LOW will be used.
 *
 * isaphysmem is the address of this physical contiguous low memory.
 * isaphysmempgs is the number of pages allocated.
 */

#ifndef DMA_BOUNCE
#define	DMA_BOUNCE      48		/* number of pages if memory > 16M */
#endif

#ifndef DMA_BOUNCE_LOW
#define	DMA_BOUNCE_LOW  16		/* number of pages if memory <= 16M */
#endif

extern vaddr_t isaphysmem;
extern int isaphysmempgs;


/*
 * Variables and macros to deal with the ISA I/O hole.
 * XXX These should be converted to machine- and bus-mapping-independent
 * function definitions, invoked through the softc.
 */

extern u_long atdevbase;           /* kernel virtual address of "hole" */

/*
 * Given a kernel virtual address for some location
 * in the "hole" I/O space, return a physical address.
 */
#define ISA_PHYSADDR(v) ((void *) ((u_long)(v) - atdevbase + IOM_BEGIN))

/*
 * Given a physical address in the "hole",
 * return a kernel virtual address.
 */
#define ISA_HOLE_VADDR(p)  ((void *) ((u_long)(p) - IOM_BEGIN + atdevbase))

#endif /* _I386_ISA_MACHDEP_H_ XXX */
@


1.24
log
@Kill the $ARCH prefix for isa_dma_cookie. With this change, the i386 and
amd64 isa dma code is identical save for some formatting, and a slight
difference in bus_dmamem_alloc.

"Die x86_!" krw@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.23 2008/12/03 15:46:07 oga Exp $	*/
d107 2
a108 1
	    int level, int (*ih_fun)(void *), void *ih_arg, char *ih_what);
@


1.23
log
@Remove the x86 and i386 prefixes to the bus_dma types. It's really quite
pointless and just makes the code different for no reason. This moves i386 and
amd64 bus_dma to being a lot closer to identical.

suggestion to just remove the prefix instead of merge them from deraadt@@.

no objections art@@, kettenis@@, ok weingart@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.22 2008/06/26 05:42:11 ray Exp $	*/
d121 1
a121 1
struct i386_isa_dma_cookie {
@


1.22
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.21 2006/02/12 19:55:39 miod Exp $	*/
d115 1
a115 1
extern struct i386_bus_dma_tag isa_bus_dma_tag;
@


1.21
log
@Remove dead sysbeep driver and unused sysbeep() routine. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.20 2005/11/23 09:32:46 mickey Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.20
log
@prioritise <16m memory for isa bus_dma'ble memorble memory allocations
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.19 2003/06/02 23:27:47 millert Exp $	*/
a217 6


/*
 * Miscellanous functions.
 */
void sysbeep(int, int);		/* beep with the system speaker */
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.18 2003/01/16 04:17:10 art Exp $	*/
d84 5
@


1.18
log
@getting rid of vm_offset_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.17 2002/03/14 03:15:54 millert Exp $	*/
d56 1
a56 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.17
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.16 2002/03/14 01:26:33 millert Exp $	*/
d194 1
a194 1
extern vm_offset_t isaphysmem;
@


1.16
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.15 1999/01/13 07:26:00 niklas Exp $	*/
d112 2
a113 2
void	*isa_intr_establish __P((isa_chipset_tag_t ic, int irq, int type,
	    int level, int (*ih_fun)(void *), void *ih_arg, char *ih_what));
@


1.15
log
@RCSIds
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.7 1997/06/06 23:28:42 thorpej Exp $	*/
d108 4
a111 4
void	isa_attach_hook __P((struct device *, struct device *,
	    struct isabus_attach_args *));
int	isa_intr_alloc __P((isa_chipset_tag_t, int, int, int *));
int	isa_intr_check __P((isa_chipset_tag_t, int, int));
d114 1
a114 1
void	isa_intr_disestablish __P((isa_chipset_tag_t ic, void *handler));
d222 1
a222 1
void sysbeep __P((int, int));		/* beep with the system speaker */
@


1.15.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.15 1999/01/13 07:26:00 niklas Exp $	*/
d108 7
a114 7
void	isa_attach_hook(struct device *, struct device *,
	    struct isabus_attach_args *);
int	isa_intr_alloc(isa_chipset_tag_t, int, int, int *);
int	isa_intr_check(isa_chipset_tag_t, int, int);
void	*isa_intr_establish(isa_chipset_tag_t ic, int irq, int type,
	    int level, int (*ih_fun)(void *), void *ih_arg, char *ih_what);
void	isa_intr_disestablish(isa_chipset_tag_t ic, void *handler);
d222 1
a222 1
void sysbeep(int, int);		/* beep with the system speaker */
@


1.15.16.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d194 1
a194 1
extern vaddr_t isaphysmem;
@


1.15.6.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 7
a114 7
void	isa_attach_hook(struct device *, struct device *,
	    struct isabus_attach_args *);
int	isa_intr_alloc(isa_chipset_tag_t, int, int, int *);
int	isa_intr_check(isa_chipset_tag_t, int, int);
void	*isa_intr_establish(isa_chipset_tag_t ic, int irq, int type,
	    int level, int (*ih_fun)(void *), void *ih_arg, char *ih_what);
void	isa_intr_disestablish(isa_chipset_tag_t ic, void *handler);
d222 1
a222 1
void sysbeep(int, int);		/* beep with the system speaker */
@


1.15.6.2
log
@Sync the SMP branch with 3.3
@
text
@d194 1
a194 1
extern vaddr_t isaphysmem;
@


1.15.6.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: isa_machdep.h,v 1.15.6.2 2003/03/27 23:26:55 niklas Exp $	*/
d56 5
a60 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.14
log
@Add and use isa_intr_check().
@
text
@d1 1
@


1.13
log
@Merge bus_dma support from NetBSD, mostly by Jason Thorpe.  Only i386 uses it
 so far, the other archs gets placeholders for now.  I wrote a compatibility
layer for OpenBSD's old isadma code so we can still use our old
driver sources.  They will however get changed to native bus_dma use,
on a case by case basis.   Oh yes, I almost forgot, I kept our notion
of isadma being a device so DMA-less ISA-busses still work
@
text
@d110 1
@


1.12
log
@ISA PnP supporting code from NetBSD, and a pccom driver that supports ISA PnP.
@
text
@d1 38
a38 1
/*	$NetBSD: isa_machdep.h,v 1.6 1996/05/03 19:14:56 christos Exp $	*/
d86 2
d118 26
@


1.11
log
@Revert, as we won't have enough time to test this fully before release.
@
text
@d70 1
@


1.10
log
@Use vm_page_alloc_memory API. Some cleanup.
@
text
@d113 3
d126 4
a154 1
void isadma_init __P((void));
@


1.9
log
@separate mc6845 definitions in dev/ic/mc6845.h
@
text
@a112 3
 *
 * isaphysmem is the address of this physical contiguous low memory.
 * isaphysmempgs is the number of pages allocated.
a122 4
extern vm_offset_t isaphysmem;
extern int isaphysmempgs;


d148 1
@


1.8
log
@Move struct intrhand to <machine/psl.h> [again] so user-level programs can
get at it.
@
text
@a100 1
#define	MONO_BASE	0x3B4
a101 1
#define	CGA_BASE	0x3D4
@


1.7
log
@sync with 0504; prototype changes
@
text
@a108 16
 * Interrupt handler chains.  isa_intr_establish() inserts a handler into
 * the list.  The handler is called with its (single) argument.
 */

struct intrhand {
	int	(*ih_fun) __P((void *));
	void	*ih_arg;
	u_long	ih_count;
	struct	intrhand *ih_next;
	int	ih_level;
	int	ih_irq;
	char	*ih_what;
};

 
/*
@


1.6
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$NetBSD: isa_machdep.h,v 1.5 1996/04/11 22:10:11 cgd Exp $	*/
d114 1
a114 1
	int	(*ih_fun)();
@


1.5
log
@Fix back wrong patches.
@
text
@d1 1
a1 1
/*	$NetBSD: isa_machdep.h,v 1.4 1995/05/04 19:39:46 cgd Exp $	*/
d42 8
d57 7
d66 13
d173 2
@


1.4
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d92 1
@


1.3
log
@Pass device name to interrupt establish routines so it can be recorded in
the device interrupt chain structures (isa, pci)

Move interrupt chain structure definition to <machine/psl.h> so vmstat can
get at it (i386)

Remove hack to count interrupts the old way (i386)
@
text
@d81 15
@


1.2
log
@i386 isa bounce buffers by hannken@@eis.cs.tu-bs.de
@
text
@a80 15
 * Interrupt handler chains.  isa_intr_establish() inserts a handler into
 * the list.  The handler is called with its (single) argument.
 */

struct intrhand {
	int	(*ih_fun)();
	void	*ih_arg;
	u_long	ih_count;
	struct	intrhand *ih_next;
	int	ih_level;
	int	ih_irq;
};

 
/*
@


1.1
log
@Initial revision
@
text
@d100 2
a101 1
 * to acquire for ISA bounce buffers.
d103 2
a104 2
 * isaphysmem is the location of those bounce buffers.  (They are currently
 * assumed to be contiguous.
d108 5
a112 1
#define	DMA_BOUNCE      8		/* one buffer per channel */
d116 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
