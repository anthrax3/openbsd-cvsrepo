head	1.11;
access;
symbols
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	UBC_SYNC_A:1.11
	UBC_SYNC_B:1.11
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.6
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.2
	SMP_BASE:1.9
	kame_19991208:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2001.05.29.22.09.35;	author mickey;	state dead;
branches;
next	1.10;

1.10
date	2000.12.07.18.19.11;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.19.15.51.54;	author aaron;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	99.11.26.02.11.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.05.24.15.37.44;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.01.13.07.26.04;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.41.57;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.12.21.22.23.47;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.05.27.22.50.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.21.22.17.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.45;	author deraadt;	state Exp;
branches;
next	;

1.9.2.1
date	2001.04.18.16.08.10;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2001.07.04.10.17.40;	author niklas;	state dead;
branches;
next	;


desc
@@


1.11
log
@remove this used to be great console driver; x11 builds w/o it all fine; aaron@@, todd@@, matthieu@@ ok
@
text
@/*	$OpenBSD: ispcvt.c,v 1.10 2000/12/07 18:19:11 deraadt Exp $	*/

/*
 * Copyright (c) 1992, 1995 Hellmuth Michaelis
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Hellmuth Michaelis
 * 4. The name authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

static char *id =
	"@@(#)ispcvt.c, 3.31, Last Edit-Date: [Tue Sep  5 16:31:24 1995]";

/*---------------------------------------------------------------------------*
 *
 *	history:
 *
 *	-hm	upgraded to report pcvt compile time configuration
 *	-hm	PCVT_INHIBIT_NUMLOCK patch from Joerg
 *	-hm	PCVT_META_ESC patch from Joerg
 *	-hm	PCVT_PCBURST
 *	-hm	new ioctl VGAPCVTINFO
 *	-hm	new CONF_ values for 3.10
 *	-hm	new CONF_ values for 3.20
 *	-hm	removed PCVT_FAKE_SYSCONS10
 *	-hm	added PCVT_PORTIO_DELAY
 *	-hm	removed PCVT_386BSD
 *	-hm	add -d option to specify a device
 *	-hm	PCVT_XSERVER -> XSERVER
 *	-hm	PCVT_MDAFASTSCROLL
 *	-hm	removed PCVT_USL_VT_COMPAT
 *
 *---------------------------------------------------------------------------*/

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <machine/pcvt_ioctl.h>

#define DEFAULTFD 0

void next __P((void));
void usage __P((void));

int
main(argc,argv)
int argc;
char *argv[];
{
	extern int optind;
	extern int opterr;
	extern char *optarg;

	struct pcvtid pcvtid;
	struct pcvtinfo pcvtinfo;	
	int c;
	char *p;
	int verbose = 0;
	int config = 0;	
	int dflag = 0;
	int fd;
	char *device = NULL;

	while( (c = getopt(argc, argv, "vcd:")) != -1)
	{
		switch(c)
		{
			case 'v':
				verbose = 1;
				break;
				
			case 'c':
				config = 1;
				break;
				
			case 'd':
				device = optarg;
				dflag = 1;
				break;
				
			case '?':
			default:
				usage();
				break;
		}
	}

	if(dflag)
	{
		if((fd = open(device, O_RDWR)) == -1)
		{
			if(verbose)
				err(1, "ERROR opening %s", device);
			exit(1);
		}
	}
	else
	{
		fd = DEFAULTFD;
	}

	if(ioctl(fd, VGAPCVTID, &pcvtid) == -1)
	{
		if(verbose)
			perror("ispcvt - ioctl VGAPCVTID failed, error");
		exit(1);
	}

	if(!strcmp(pcvtid.name, PCVTIDNAME))
	{
		if(pcvtid.rmajor == PCVTIDMAJOR)
		{
			if(pcvtid.rminor != PCVTIDMINOR)
			{
				if(verbose)
					fprintf(stderr,"ispcvt - minor revision: expected %d, got %d\n", PCVTIDMINOR, pcvtid.rminor);
				exit(4);	/* minor revision mismatch */
			}
		}
		else
		{
			if(verbose)
				fprintf(stderr,"ispcvt - major revision: expected %d, got %d\n", PCVTIDMAJOR, pcvtid.rmajor);
			exit(3);	/* major revision mismatch */
		}
	}
	else
	{
		if(verbose)
			fprintf(stderr,"ispcvt - name check: expected %s, got %s\n", PCVTIDNAME, pcvtid.name);
		exit(2);	/* name mismatch */
	}

	if(verbose)
	{
		fprintf(stderr,"\nispcvt: kernel and utils match, driver name [%s], release [%1.1d.%02.2d]\n\n",pcvtid.name,pcvtid.rmajor,pcvtid.rminor);
	}

	if(config == 0)
		exit(0);

	if(ioctl(fd, VGAPCVTINFO, &pcvtinfo) == -1)
	{
		if(verbose)
			perror("ispcvt - ioctl VGAPCVTINFO failed, error");
		exit(1);
	}

	if(verbose)
	{
		switch(pcvtinfo.opsys)
		{
			case CONF_NETBSD:
				p = "PCVT_NETBSD";
				break;
				
			case CONF_FREEBSD:
				p = "PCVT_FREEBSD";
				break;
	
			default:
			case CONF_UNKNOWNOPSYS:
				p = "UNKNOWN";
				break;
				
		}			
		fprintf(stderr,"Operating System     = %s\t", p);
		fprintf(stderr,"OS Release Id        = %u\n", pcvtinfo.opsysrel);
		fprintf(stderr,"PCVT_NSCREENS        = %u\t\t", pcvtinfo.nscreens);
		fprintf(stderr,"PCVT_SYSBEEPF        = %u\n", pcvtinfo.sysbeepf);
		fprintf(stderr,"PCVT_PCBURST         = %u\t\t", pcvtinfo.pcburst);
		fprintf(stderr,"PCVT_KBD_FIFO_SZ     = %u\n\n", pcvtinfo.kbd_fifo_sz);
	
	/* config booleans */

		fprintf(stderr,"PCVT_132GENERIC      = %s",
			(pcvtinfo.compile_opts & CONF_132GENERIC) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_24LINESDEF      = %s",
			(pcvtinfo.compile_opts & CONF_24LINESDEF) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_BACKUP_FONTS    = %s",
			(pcvtinfo.compile_opts & CONF_BACKUP_FONTS) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_CTRL_ALT_DEL    = %s",
			(pcvtinfo.compile_opts & CONF_CTRL_ALT_DEL) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_INHIBIT_NUMLOCK = %s",
			(pcvtinfo.compile_opts & CONF_INHIBIT_NUMLOCK) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_KEYBDID         = %s",
			(pcvtinfo.compile_opts & CONF_KEYBDID) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_KBD_FIFO        = %s",
			(pcvtinfo.compile_opts & CONF_KBD_FIFO) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_MDAFASTSCROLL   = %s",
			(pcvtinfo.compile_opts & CONF_MDAFASTSCROLL) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_META_ESC        = %s",
			(pcvtinfo.compile_opts & CONF_META_ESC) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_NOFASTSCROLL    = %s",
			(pcvtinfo.compile_opts & CONF_NOFASTSCROLL) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_NO_LED_UPDATE   = %s",
			(pcvtinfo.compile_opts & CONF_NO_LED_UPDATE) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_NULLCHARS       = %s",
			(pcvtinfo.compile_opts & CONF_NULLCHARS) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_PALFLICKER      = %s",
			(pcvtinfo.compile_opts & CONF_PALFLICKER) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_PORTIO_DELAY    = %s",
			(pcvtinfo.compile_opts & CONF_PORTIO_DELAY) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_PRETTYSCRNS     = %s",
			(pcvtinfo.compile_opts & CONF_PRETTYSCRNS) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_SCREENSAVER     = %s",
			(pcvtinfo.compile_opts & CONF_SCREENSAVER) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_SETCOLOR        = %s",
			(pcvtinfo.compile_opts & CONF_SETCOLOR) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_SIGWINCH        = %s",
			(pcvtinfo.compile_opts & CONF_SIGWINCH) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_SW0CNOUTP       = %s",
			(pcvtinfo.compile_opts & CONF_SW0CNOUTP) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_USEKBDSEC       = %s",
			(pcvtinfo.compile_opts & CONF_USEKBDSEC) ? "ON" : "OFF");
		next();
		fprintf(stderr,"PCVT_WAITRETRACE     = %s",
			(pcvtinfo.compile_opts & CONF_WAITRETRACE) ? "ON" : "OFF");
		next();
		fprintf(stderr,"XSERVER              = %s",
			(pcvtinfo.compile_opts & CONF_XSERVER) ? "ON" : "OFF");

		fprintf(stderr,"\n\n");
	}
	else /* !verbose */
	{
		fprintf(stderr,"BSD Version      = %u\n", pcvtinfo.opsys);
		fprintf(stderr,"PCVT_NSCREENS    = %u\n", pcvtinfo.nscreens);
		fprintf(stderr,"PCVT_SYSBEEPF    = %u\n", pcvtinfo.sysbeepf);
		fprintf(stderr,"Compile options  = 0x%08X\n", (unsigned int)pcvtinfo.compile_opts);
	}
	exit(0);
}

void
usage()
{
	fprintf(stderr,"\nispcvt - verify current video driver is the pcvt-driver\n");
	fprintf(stderr,"  usage: ispcvt [-v] [-c] [-d device]\n");
	fprintf(stderr,"options: -v         be verbose\n");
	fprintf(stderr,"         -c         print compile time configuration\n");
	fprintf(stderr,"         -d <name>  use devicefile <name> for verification\n\n");
	exit(5);
}

void
next()
{
	static int i = 0;

	fprintf(stderr, "%s", (i == 0) ? "\t\t" : "\n");

	i = ~i;
}

/* EOF */
@


1.10
log
@fix various perror() that were buf oflows
@
text
@d1 1
a1 1
/*	$OpenBSD: ispcvt.c,v 1.9 2000/01/19 15:51:54 aaron Exp $	*/
@


1.9
log
@Sloppy me.
@
text
@d1 1
a1 1
/*	$OpenBSD: ispcvt.c,v 1.8 1999/11/26 02:11:15 deraadt Exp $	*/
d119 1
a119 6
			{
				char buffer[80];
				strcpy(buffer,"ERROR opening ");
				strncat(buffer,device,sizeof(buffer) - strlen(buffer));
				perror(buffer);
			}
@


1.9.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: ispcvt.c,v 1.10 2000/12/07 18:19:11 deraadt Exp $	*/
d119 6
a124 1
				err(1, "ERROR opening %s", device);
@


1.9.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ispcvt.c,v 1.9.2.1 2001/04/18 16:08:10 niklas Exp $	*/
@


1.8
log
@undo damage by aaron.  what is it with you guys?  4 people (matthieu,
mjacob, d, aaron) have broken the tree in 48 hours.  don't you guys do
any testing?
@
text
@d1 1
a1 1
/*	$OpenBSD: ispcvt.c,v 1.7 1999/05/24 15:37:44 aaron Exp $	*/
a265 3
		next();
		fprintf(stderr,"PCVT_VT220KEYB       = %s",
			((u_int)pcvtinfo.compile_opts & (u_int)CONF_VT220KEYB) ? "ON" : "OFF");
@


1.7
log
@more buf oflows
@
text
@d1 1
a1 1
/*	$OpenBSD: ispcvt.c,v 1.6 1999/01/13 07:26:04 niklas Exp $	*/
a218 3
		fprintf(stderr,"PCVT_EMU_MOUSE       = %s",
			(pcvtinfo.compile_opts & CONF_EMU_MOUSE) ? "ON" : "OFF");
		next();
a256 3
		next();
		fprintf(stderr,"PCVT_SHOWKEYS        = %s",
			(pcvtinfo.compile_opts & CONF_SHOWKEYS) ? "ON" : "OFF");
@


1.6
log
@RCSIds
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d122 1
a122 1
				strcat(buffer,device);
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 2
@


1.4
log
@-Wall madness.
@
text
@d88 1
a88 1
	while( (c = getopt(argc, argv, "vcd:")) != EOF)
@


1.3
log
@make build
@
text
@d57 1
d59 3
a61 1
#include <fcntl.h>
d66 4
d86 1
a86 1
	char *device;
d287 1
a287 1
		fprintf(stderr,"Compile options  = 0x%08X\n", pcvtinfo.compile_opts);
d289 1
d292 1
d303 1
@


1.2
log
@partial sync with netbsd 960418, more to come
@
text
@a257 3
		fprintf(stderr,"PCVT_SLOW_INTERRUPT  = %s",
			(pcvtinfo.compile_opts & CONF_SLOW_INTERRUPT) ? "ON" : "OFF");
		next();
@


1.1
log
@Initial revision
@
text
@a191 2
		fprintf(stderr,"PCVT_UPDATEFAST      = %u\n", pcvtinfo.updatefast);
		fprintf(stderr,"PCVT_UPDATESLOW      = %u\t\t", pcvtinfo.updateslow);
a281 2
		fprintf(stderr,"PCVT_UPDATEFAST  = %u\n", pcvtinfo.updatefast);
		fprintf(stderr,"PCVT_UPDATESLOW  = %u\n", pcvtinfo.updateslow);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
