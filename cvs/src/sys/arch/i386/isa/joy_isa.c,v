head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.38
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.34
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.36
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.28
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.32
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.30
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.26
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.24
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.22
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.20
	OPENBSD_5_0:1.7.0.18
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.16
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.14
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.16
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.6
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2007.08.01.13.18.18;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2006.09.19.11.06.34;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.02.22.49.59;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.33;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.01.13.07.26.01;	author niklas;	state Exp;
branches
	1.3.6.1
	1.3.16.1;
next	1.2;

1.2
date	98.07.03.08.21.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.06.02.18.46.37;	author deraadt;	state Exp;
branches;
next	;

1.3.6.1
date	2002.03.28.10.31.04;	author niklas;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2003.03.27.23.26.55;	author niklas;	state Exp;
branches;
next	;

1.3.16.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@switch i386 to use the MI i8253 header file and remove the now obsolete MD
timerreg.h

ok miod@@
@
text
@/*	$OpenBSD: joy_isa.c,v 1.6 2006/09/19 11:06:34 jsg Exp $	*/
/*	$NetBSD: joy.c,v 1.3 1996/05/05 19:46:15 christos Exp $	*/

/*-
 * Copyright (c) 1995 Jean-Marc Zucconi
 * All rights reserved.
 *
 * Ported to NetBSD by Matthieu Herrb <matthieu@@laas.fr>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer
 *    in this position and unchanged.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>
#include <sys/errno.h>

#include <machine/cpu.h>
#include <machine/pio.h>
#include <machine/cpufunc.h>
#include <machine/joystick.h>
#include <machine/conf.h>

#include <dev/isa/isavar.h>
#include <dev/isa/isareg.h>
#include <dev/ic/i8253reg.h>
#include <i386/isa/joyreg.h>

int		joy_isa_probe(struct device *, void *, void *);
void		joy_isa_attach(struct device *, struct device *, void *);

struct cfattach joy_isa_ca = {
	sizeof(struct joy_softc), joy_isa_probe, joy_isa_attach
};

int
joy_isa_probe(struct device *parent, void *match, void *aux)
{
	struct isa_attach_args *ia = aux;
#ifdef WANT_JOYSTICK_CONNECTED
	int iobase = ia->ia_iobase;

	outb(iobase, 0xff);
	DELAY(10000);		/* 10 ms delay */
	return (inb(iobase) & 0x0f) != 0x0f;
#else
	ia->ia_iosize = JOY_NPORTS;
	ia->ia_msize = 0;
	return 1;
#endif
}

void
joy_isa_attach(struct device *parent, struct device *self, void *aux)
{
	struct joy_softc *sc = (void *) self;
	struct isa_attach_args *ia = aux;
	int iobase = ia->ia_iobase;

	sc->port = iobase;
	sc->timeout[0] = sc->timeout[1] = 0;
	outb(iobase, 0xff);
	DELAY(10000);		/* 10 ms delay */
#if 0
	printf(": joystick%sconnected\n",
	    (inb(iobase) & 0x0f) == 0x0f ? " not " : " ");
#else
	printf("\n");
#endif
}
@


1.6
log
@ansi/deregister
@
text
@d1 1
a1 1
/*	$OpenBSD: joy_isa.c,v 1.5 2002/06/02 22:49:59 deraadt Exp $	*/
d49 1
a49 1
#include <i386/isa/timerreg.h>
@


1.5
log
@withough -> without
@
text
@d1 1
a1 1
/*	$OpenBSD: joy_isa.c,v 1.4 2002/03/14 01:26:33 millert Exp $	*/
d60 1
a60 3
joy_isa_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
d77 1
a77 3
joy_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: joy_isa.c,v 1.3 1999/01/13 07:26:01 niklas Exp $	*/
d20 1
a20 1
 *    derived from this software withough specific prior written permission
@


1.3
log
@RCSIds
@
text
@d1 1
a1 1
/*	$OpenBSD: joy.c,v 1.3 1996/05/05 19:46:15 christos Exp $	*/
d52 2
a53 2
int		joy_isa_probe __P((struct device *, void *, void *));
void		joy_isa_attach __P((struct device *, struct device *, void *));
@


1.3.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: joy_isa.c,v 1.3 1999/01/13 07:26:01 niklas Exp $	*/
d20 1
a20 1
 *    derived from this software without specific prior written permission
d52 2
a53 2
int		joy_isa_probe(struct device *, void *, void *);
void		joy_isa_attach(struct device *, struct device *, void *);
@


1.3.6.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d52 2
a53 2
int		joy_isa_probe(struct device *, void *, void *);
void		joy_isa_attach(struct device *, struct device *, void *);
@


1.3.6.2
log
@Sync the SMP branch with 3.3
@
text
@d20 1
a20 1
 *    derived from this software without specific prior written permission
@


1.2
log
@who cares if joystick is attached
@
text
@d1 1
@


1.1
log
@untested isapnp joystick driver
@
text
@d90 1
d93 3
@

