head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.12
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.10
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.6
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.4.0.14
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.10
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.12
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	SMP:1.2.0.4
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.11
date	2014.07.13.09.26.08;	author jasper;	state Exp;
branches;
next	1.10;
commitid	Cnjup0HpCIRrcQ6o;

1.10
date	2014.07.12.21.54.58;	author jasper;	state Exp;
branches;
next	1.9;
commitid	3HeD4LaLGiS22I3y;

1.9
date	2011.06.26.23.19.11;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2011.06.26.21.37.52;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.06.22.51.46;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.06.22.11.01;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.27.17.46.57;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.27.20.29.38;	author mk;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.22.15.06.59;	author tom;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2004.03.19.13.48.19;	author tom;	state Exp;
branches;
next	;

1.2.4.1
date	2004.06.05.23.09.01;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.11
log
@move putchar() into libsa

"sure" miod@@
@
text
@/*	$OpenBSD: devopen.c,v 1.10 2014/07/12 21:54:58 jasper Exp $	*/

/*
 * Copyright (c) 2004 Tom Cosgrove
 * Copyright (c) 1996-1999 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "libsa.h"
#include "biosdev.h"
#include <sys/param.h>
#include <dev/cons.h>

extern int debug;

extern char *fs_name[];
extern int nfsname;
extern struct devsw netsw[];

extern char *bootmac;		/* Gets passed to kernel for network boot */

/* XXX use slot for 'rd' for 'hd' pseudo-device */
const char bdevs[][4] = {
	"wd", "", "fd", "", "sd", "st", "cd", "",
	"", "", "", "", "", "", "", "", "", "hd", ""
};
const int nbdevs = nitems(bdevs);

const char cdevs[][4] = {
	"cn", "", "", "", "", "", "", "",
	"com", "", "", "", "pc"
};
const int ncdevs = nitems(cdevs);

/* pass dev_t to the open routines */
int
devopen(struct open_file *f, const char *fname, char **file)
{
	struct devsw *dp = devsw;
	char *p;
	char *stripdev;
	int i, l;
	int rc = 1;

	*file = (char *)fname;

#ifdef DEBUG
	if (debug)
		printf("devopen(%s):", fname);
#endif

	/* Make sure we have a prefix, e.g. hd0a: or tftp:. */
	for (p = (char *)fname; *p != ':' && *p != '\0'; ) p++;
	if (*p != ':')
		return 1;
	stripdev = p + 1;

	l = p - fname;			/* Length of device prefix. */
	for (i = 0; i < nfsname; i++) {
		if ((fs_name[i] != NULL) &&
		    (strncmp(fname, fs_name[i], l) == 0)) {

			/* Force oopen() etc to use this filesystem. */
			f->f_ops = &file_system[i];
			f->f_dev = dp = &netsw[0];

			rc = (*dp->dv_open)(f, NULL);
			if (rc == 0)
				*file = stripdev;
			else
				f->f_dev = NULL;
#ifdef DEBUG
			if (debug)
				putchar('\n');
#endif
			return rc;
		}
	}

	/*
	 * Assume that any network filesystems would be caught by the
	 * code above, so that the next phase of devopen() is only for
	 * local devices.
	 *
	 * Clear bootmac, to signal that we loaded this file from a
	 * non-network device.
	 */
	bootmac = NULL;

	for (i = 0; i < ndevs && rc != 0; dp++, i++) {
#ifdef DEBUG
		if (debug)
			printf(" %s: ", dp->dv_name);
#endif
		if ((rc = (*dp->dv_open)(f, file)) == 0) {
			f->f_dev = dp;
			return 0;
		}
#ifdef DEBUG
		else if (debug)
			printf("%d", rc);
#endif

	}
#ifdef DEBUG
	if (debug)
		putchar('\n');
#endif

	if ((f->f_flags & F_NODEV) == 0)
		f->f_dev = dp;

	return rc;
}

void
devboot(dev_t bootdev, char *p)
{
	*p++ = 't';
	*p++ = 'f';
	*p++ = 't';
	*p++ = 'p';
	*p = '\0';
}

char ttyname_buf[8];

char *
ttyname(int fd)
{
	snprintf(ttyname_buf, sizeof ttyname_buf, "%s%d",
	    cdevs[major(cn_tab->cn_dev)], minor(cn_tab->cn_dev));

	return ttyname_buf;
}

dev_t
ttydev(char *name)
{
	int i, unit = -1;
	char *no = name + strlen(name) - 1;

	while (no >= name && *no >= '0' && *no <= '9')
		unit = (unit < 0 ? 0 : (unit * 10)) + *no-- - '0';
	if (no < name || unit < 0)
		return NODEV;
	for (i = 0; i < ncdevs; i++)
		if (strncmp(name, cdevs[i], no - name + 1) == 0)
			return (makedev(i, unit));
	return NODEV;
}

int
cnspeed(dev_t dev, int sp)
{
	if (major(dev) == 8)	/* comN */
		return (comspeed(dev, sp));

	/* pc0 and anything else */
	return 9600;
}
@


1.10
log
@move getchar() into libsa where applicable

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.9 2011/06/26 23:19:11 tedu Exp $	*/
a144 31
}

int pch_pos = 0;

void
putchar(int c)
{
	switch (c) {
	case '\177':	/* DEL erases */
		cnputc('\b');
		cnputc(' ');
	case '\b':
		cnputc('\b');
		if (pch_pos)
			pch_pos--;
		break;
	case '\t':
		do
			cnputc(' ');
		while (++pch_pos % 8);
		break;
	case '\n':
	case '\r':
		cnputc(c);
		pch_pos=0;
		break;
	default:
		cnputc(c);
		pch_pos++;
		break;
	}
@


1.9
log
@kill mcd dead.  ok krw matthew millert thib
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.8 2011/06/26 21:37:52 tedu Exp $	*/
a175 16
}

int
getchar(void)
{
	register int c = cngetc();

	if (c == '\r')
		c = '\n';

	if ((c < ' ' && c != '\n') || c == '\177')
		return c;

	putchar(c);

	return c;
@


1.8
log
@remove remnants of scd device, discovered by Frederic Perrin
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.7 2010/12/06 22:51:46 jasper Exp $	*/
d45 1
a45 1
	"wd", "", "fd", "", "sd", "st", "cd", "mcd",
@


1.7
log
@- properly remove NENTS now after fixing the fallout.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.6 2010/12/06 22:11:01 jasper Exp $	*/
d46 1
a46 1
	"", "", "", "", "", "", "", "scd", "", "hd", ""
@


1.6
log
@- partially revert previous NENTS removal for arches which got busted.
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.5 2010/12/06 18:44:49 jasper Exp $	*/
d48 1
a48 1
const int nbdevs = NENTS(bdevs);
d54 1
a54 1
const int ncdevs = NENTS(cdevs);
@


1.5
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.4 2007/07/27 17:46:57 tom Exp $	*/
d48 1
a48 1
const int nbdevs = nitems(bdevs);
d54 1
a54 1
const int ncdevs = nitems(cdevs);
@


1.4
log
@We don't want to pass the PXE MAC address to the kernel when booting
from a local disk, since the MAC address causes the kernel to look for
root on NFS.  Do this by remembering (not adding to boot arguments) the
MAC address when opening the PXE device, and clearing this if we happen
to load a file off a non-network disk.

"works as advertised for me" todd@@;
"stop sitting on this/no objections" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.3 2007/06/27 20:29:38 mk Exp $	*/
d48 1
a48 1
const int nbdevs = NENTS(bdevs);
d54 1
a54 1
const int ncdevs = NENTS(cdevs);
@


1.3
log
@wt(4) was removed a while ago, so don't support booting off it anoymore.

i386/amd64 was ok tom
zaurus ok drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.2 2004/03/22 15:06:59 tom Exp $	*/
d41 2
d100 10
@


1.2
log
@Fix dates on my copyrights.

Noticed my miod@@, thanks.  ok deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.1 2004/03/19 13:48:19 tom Exp $	*/
d43 1
a43 1
	"wd", "", "fd", "wt", "sd", "st", "cd", "mcd",
@


1.2.4.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Enter pxeboot, derived from the NetBSD implementation.  Initially
intended to support network installs using bsd.rd over TFTP.

Thanks to the many who tested, including Diana Eichert.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.28 2004/03/09 19:12:12 tom Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994 Tom Cosgrove
@

