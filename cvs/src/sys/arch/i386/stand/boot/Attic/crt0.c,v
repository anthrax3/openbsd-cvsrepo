head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.12
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.8
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.40
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.18
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.8
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2015.09.18.13.30.56;	author miod;	state dead;
branches;
next	1.6;
commitid	1BEcCDYd9p5DIl0g;

1.6
date	2013.03.21.21.51.00;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.20.22.11;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.34;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.05.25.19.20.49;	author mickey;	state Exp;
branches
	1.3.8.1
	1.3.18.1;
next	1.2;

1.2
date	97.03.31.23.06.22;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.03.31.03.12.04;	author weingart;	state Exp;
branches;
next	;

1.3.8.1
date	2002.03.28.10.31.05;	author niklas;	state Exp;
branches;
next	1.3.8.2;

1.3.8.2
date	2003.06.07.11.11.38;	author ho;	state Exp;
branches;
next	;

1.3.18.1
date	2002.06.11.03.35.54;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove support for building the boot blocks with DEBUGFLAGS=-D_TEST, which is
supposed to create a userland binary in order to test non-boot related
functionality. This feature has been bitrotting in a non-compiling state
for years, and causes a too-many-ifdefs disease now that there are intrusive
EFI changes.

No functional change.
@
text
@/*	$OpenBSD: crt0.c,v 1.6 2013/03/21 21:51:00 deraadt Exp $	*/

/*
 * Copyright (c) 1997-1998 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */


#include <sys/param.h>
#include <sys/types.h>
#include <sys/mman.h>
#include <sys/syscall.h>
#include <termios.h>
#include "libsa.h"
#include <lib/libsa/unixdev.h>

void start(void) asm("start");
void _rtt(void);
extern int  boot(dev_t);
static void domap(void);
static void seterm(void);

void
start()
{
	domap();
	seterm();
	uexit(boot(0));
}

void
_rtt()
{
	uexit(1);
}

#define ummap(a,l,p,f,fd,o) (caddr_t)syscall((quad_t)SYS_mmap,a,l,p,f,fd,0,o)

static void
domap()
{
	extern char end[];
	register caddr_t p = (caddr_t)(((u_long)end + PAGE_MASK) & ~PAGE_MASK);

	/* map heap */
	if ( (p = ummap(p, 32*PAGE_SIZE, PROT_READ|PROT_WRITE,
		   MAP_FIXED|MAP_ANON, -1, 0)) == (caddr_t)-1) {
		printf("mmap failed: %d\n", errno);
		uexit(1);
	}
#ifdef DEBUG
	else
		printf("mmap==%p\n", p);
#endif

	/* map kernel */
	if ( (p = ummap(0x100000, 0xf00000, PROT_READ|PROT_WRITE,
		   MAP_FIXED|MAP_ANON, -1, 0)) == (caddr_t)-1) {
		printf("mmap failed: %d\n", errno);
		uexit(1);
	}
#ifdef DEBUG
	else
		printf("mmap==%p\n", p);
#endif

}

void
seterm()
{
	struct termios tc;

	if (uioctl(0, TIOCGETA, (char *)&tc) < 0) {
		printf("cannot get tty\n");
		uexit(1);
	}

        tc.c_iflag &= ~(IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL|IXON);
        tc.c_oflag &= ~OPOST;
        tc.c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
        tc.c_cflag &= ~(CSIZE|PARENB);
        tc.c_cflag |= CS8;

	if (uioctl(0, TIOCSETA, (char *)&tc) < 0) {
		printf("cannot set tty\n");
		uexit(1);
	}
}
@


1.6
log
@NBPG -> PAGE_SIZE, PGSHIFT -> PAGE_SHIFT, PGOFSET -> PAGE_MASK
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.5 2003/06/03 20:22:11 mickey Exp $	*/
@


1.5
log
@three four kills
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.4 2002/03/14 01:26:34 millert Exp $	*/
d65 1
a65 1
	register caddr_t p = (caddr_t)(((u_long)end + PGOFSET) & ~PGOFSET);
d68 1
a68 1
	if ( (p = ummap(p, 32*NBPG, PROT_READ|PROT_WRITE,
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.3 1998/05/25 19:20:49 mickey Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.3
log
@put support for test /boot environment back; some CLEANFILES and spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.2 1997/03/31 23:06:22 mickey Exp $	*/
d44 5
a48 5
void start __P((void)) asm("start");
void _rtt __P((void));
extern int  boot __P((dev_t));
static void domap __P((void));
static void seterm __P((void));
@


1.3.18.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.3 1998/05/25 19:20:49 mickey Exp $	*/
d44 5
a48 5
void start(void) asm("start");
void _rtt(void);
extern int  boot(dev_t);
static void domap(void);
static void seterm(void);
@


1.3.8.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 5
a48 5
void start(void) asm("start");
void _rtt(void);
extern int  boot(dev_t);
static void domap(void);
static void seterm(void);
@


1.3.8.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.3.8.1 2002/03/28 10:31:05 niklas Exp $	*/
d15 5
@


1.2
log
@commit all my mods to the last imported libsa stuff....
including:
- disklabel support;
- better boot cmd line
- smaller size (using some compilation switches ;)
- no more relocations in /boot, it's loaded in the place;
- better disk performance (maybe were already in there)
- installboot -n does not require write perms for device
- more debugs
- missing parts in libsa (such as cd9660 and so)
- i don't like 2 files for exec_i386 (sorry, toby, let's discuss maybe?)
tricks and tails:
- joined .text and .data (saves you a page)
- prot mode switching still in biosboot (it's freezed for awhile)
- biosdisk internals changed
- biosdev is not passed propery to the kernel (i'll fix it soon)
- sure i missed smth here to note (use the source, Luke!)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1997 Michael Shalayeff
d42 1
a42 1
#include "unixdev.h"
d44 3
a46 2
extern void start __P((void)) asm("start");
extern int  main __P((int, char **, char **));
d55 7
a61 1
	uexit(main(0, NULL, NULL));
@


1.1
log
@Initial /boot stuff (from Mickey)
@
text
@a63 6
	register size_t sz = 0x10000 - (u_long)p - NBPG;

#ifdef DEBUG
	/* we are low on memory w/ the DEBUG defined ); */
	sz = 40 * NBPG;
#endif
d66 1
a66 1
	if ( (p = ummap(p, sz, PROT_READ|PROT_WRITE,
@
