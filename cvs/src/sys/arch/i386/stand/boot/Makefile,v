head	1.66;
access;
symbols
	OPENBSD_6_2:1.66.0.4
	OPENBSD_6_2_BASE:1.66
	OPENBSD_6_1:1.64.0.4
	OPENBSD_6_1_BASE:1.64
	OPENBSD_6_0:1.59.0.2
	OPENBSD_6_0_BASE:1.59
	OPENBSD_5_9:1.58.0.2
	OPENBSD_5_9_BASE:1.58
	OPENBSD_5_8:1.56.0.8
	OPENBSD_5_8_BASE:1.56
	OPENBSD_5_7:1.56.0.2
	OPENBSD_5_7_BASE:1.56
	OPENBSD_5_6:1.56.0.4
	OPENBSD_5_6_BASE:1.56
	OPENBSD_5_5:1.54.0.4
	OPENBSD_5_5_BASE:1.54
	OPENBSD_5_4:1.52.0.2
	OPENBSD_5_4_BASE:1.52
	OPENBSD_5_3:1.49.0.2
	OPENBSD_5_3_BASE:1.49
	OPENBSD_5_2:1.36.0.4
	OPENBSD_5_2_BASE:1.36
	OPENBSD_5_1_BASE:1.36
	OPENBSD_5_1:1.36.0.2
	OPENBSD_5_0:1.35.0.6
	OPENBSD_5_0_BASE:1.35
	OPENBSD_4_9:1.35.0.4
	OPENBSD_4_9_BASE:1.35
	OPENBSD_4_8:1.35.0.2
	OPENBSD_4_8_BASE:1.35
	OPENBSD_4_7:1.34.0.8
	OPENBSD_4_7_BASE:1.34
	OPENBSD_4_6:1.34.0.10
	OPENBSD_4_6_BASE:1.34
	OPENBSD_4_5:1.34.0.6
	OPENBSD_4_5_BASE:1.34
	OPENBSD_4_4:1.34.0.4
	OPENBSD_4_4_BASE:1.34
	OPENBSD_4_3:1.34.0.2
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.33.0.4
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.33.0.2
	OPENBSD_4_1_BASE:1.33
	OPENBSD_4_0:1.32.0.6
	OPENBSD_4_0_BASE:1.32
	OPENBSD_3_9:1.32.0.4
	OPENBSD_3_9_BASE:1.32
	OPENBSD_3_8:1.32.0.2
	OPENBSD_3_8_BASE:1.32
	OPENBSD_3_7:1.31.0.8
	OPENBSD_3_7_BASE:1.31
	OPENBSD_3_6:1.31.0.6
	OPENBSD_3_6_BASE:1.31
	SMP_SYNC_A:1.31
	SMP_SYNC_B:1.31
	OPENBSD_3_5:1.31.0.4
	OPENBSD_3_5_BASE:1.31
	OPENBSD_3_4:1.31.0.2
	OPENBSD_3_4_BASE:1.31
	UBC_SYNC_A:1.31
	OPENBSD_3_3:1.29.0.14
	OPENBSD_3_3_BASE:1.29
	OPENBSD_3_2:1.29.0.12
	OPENBSD_3_2_BASE:1.29
	OPENBSD_3_1:1.29.0.10
	OPENBSD_3_1_BASE:1.29
	UBC_SYNC_B:1.29
	UBC:1.29.0.8
	UBC_BASE:1.29
	OPENBSD_3_0:1.29.0.6
	OPENBSD_3_0_BASE:1.29
	OPENBSD_2_9:1.29.0.4
	OPENBSD_2_9_BASE:1.29
	OPENBSD_2_8:1.29.0.2
	OPENBSD_2_8_BASE:1.29
	OPENBSD_2_7:1.24.0.6
	OPENBSD_2_7_BASE:1.24
	SMP:1.24.0.4
	SMP_BASE:1.24
	kame_19991208:1.24
	OPENBSD_2_6:1.24.0.2
	OPENBSD_2_6_BASE:1.24
	OPENBSD_2_5:1.23.0.4
	OPENBSD_2_5_BASE:1.23
	OPENBSD_2_4:1.23.0.2
	OPENBSD_2_4_BASE:1.23
	OPENBSD_2_3:1.17.0.2
	OPENBSD_2_3_BASE:1.17
	OPENBSD_2_2:1.16.0.2
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6;
locks; strict;
comment	@# @;


1.66
date	2017.06.19.22.50.50;	author deraadt;	state Exp;
branches;
next	1.65;
commitid	qxUetDs8y9dCgVHx;

1.65
date	2017.06.01.11.18.53;	author naddy;	state Exp;
branches;
next	1.64;
commitid	2KWSDyINV9AVvCHv;

1.64
date	2016.09.18.16.34.59;	author jsing;	state Exp;
branches;
next	1.63;
commitid	xxSOamF7jPcxnio1;

1.63
date	2016.09.11.17.52.47;	author jsing;	state Exp;
branches;
next	1.62;
commitid	OIt9eg6fQy6pFToA;

1.62
date	2016.09.11.15.54.11;	author jsing;	state Exp;
branches;
next	1.61;
commitid	m28Q0aUDbVqwDb3p;

1.61
date	2016.09.10.16.38.16;	author jsing;	state Exp;
branches;
next	1.60;
commitid	Guvt83tYQgzHIRwk;

1.60
date	2016.07.30.03.25.48;	author guenther;	state Exp;
branches;
next	1.59;
commitid	HVbAtwruDlJazNH2;

1.59
date	2016.03.30.06.38.45;	author jmc;	state Exp;
branches;
next	1.58;
commitid	LN9ijdk9SEnzWAbM;

1.58
date	2015.09.18.13.30.56;	author miod;	state Exp;
branches;
next	1.57;
commitid	1BEcCDYd9p5DIl0g;

1.57
date	2015.09.02.04.09.24;	author yasuoka;	state Exp;
branches;
next	1.56;
commitid	1T0xGkKNIiRZnTmz;

1.56
date	2014.07.13.09.26.08;	author jasper;	state Exp;
branches;
next	1.55;
commitid	Cnjup0HpCIRrcQ6o;

1.55
date	2014.07.12.21.54.58;	author jasper;	state Exp;
branches;
next	1.54;
commitid	3HeD4LaLGiS22I3y;

1.54
date	2013.12.28.15.16.28;	author jsing;	state Exp;
branches;
next	1.53;

1.53
date	2013.12.28.02.51.07;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2013.06.02.21.01.48;	author guenther;	state Exp;
branches;
next	1.51;

1.51
date	2013.04.23.16.41.13;	author jsing;	state Exp;
branches;
next	1.50;

1.50
date	2013.04.23.12.28.51;	author jsing;	state Exp;
branches;
next	1.49;

1.49
date	2013.01.18.21.09.04;	author espie;	state Exp;
branches;
next	1.48;

1.48
date	2013.01.18.04.10.16;	author jsing;	state Exp;
branches;
next	1.47;

1.47
date	2013.01.18.03.45.23;	author jsing;	state Exp;
branches;
next	1.46;

1.46
date	2012.10.31.15.22.42;	author jsing;	state Exp;
branches;
next	1.45;

1.45
date	2012.10.31.13.57.20;	author jsing;	state Exp;
branches;
next	1.44;

1.44
date	2012.10.13.14.10.35;	author jsing;	state Exp;
branches;
next	1.43;

1.43
date	2012.10.12.15.03.22;	author jsing;	state Exp;
branches;
next	1.42;

1.42
date	2012.10.12.14.58.26;	author jsing;	state Exp;
branches;
next	1.41;

1.41
date	2012.10.12.14.00.02;	author jsing;	state Exp;
branches;
next	1.40;

1.40
date	2012.10.09.11.43.22;	author jsing;	state Exp;
branches;
next	1.39;

1.39
date	2012.09.25.09.01.03;	author pascal;	state Exp;
branches;
next	1.38;

1.38
date	2012.08.29.22.23.07;	author pascal;	state Exp;
branches;
next	1.37;

1.37
date	2012.08.21.14.46.18;	author pascal;	state Exp;
branches;
next	1.36;

1.36
date	2011.11.06.13.39.43;	author jsing;	state Exp;
branches;
next	1.35;

1.35
date	2010.07.10.16.11.43;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2007.11.25.18.25.31;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2006.10.30.18.28.57;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2005.07.30.14.32.46;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2003.04.17.12.06.05;	author mickey;	state Exp;
branches;
next	1.30;

1.30
date	2003.04.17.03.43.18;	author drahn;	state Exp;
branches;
next	1.29;

1.29
date	2000.10.19.17.14.01;	author fgsch;	state Exp;
branches
	1.29.8.1;
next	1.28;

1.28
date	2000.06.08.00.56.07;	author mickey;	state Exp;
branches;
next	1.27;

1.27
date	2000.05.26.11.50.46;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2000.05.25.21.54.59;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2000.05.25.20.32.50;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	99.07.08.20.11.53;	author deraadt;	state Exp;
branches
	1.24.4.1;
next	1.23;

1.23
date	98.07.11.21.13.55;	author angelos;	state Exp;
branches;
next	1.22;

1.22
date	98.07.11.20.58.33;	author angelos;	state Exp;
branches;
next	1.21;

1.21
date	98.05.28.20.52.36;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	98.05.27.13.33.36;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	98.05.25.19.20.47;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	98.05.19.18.59.11;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	98.02.24.07.54.38;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.10.22.23.28.30;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	97.09.29.23.01.06;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	97.09.21.10.02.09;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	97.09.02.21.58.20;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	97.09.02.21.18.12;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	97.08.22.20.16.27;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	97.08.13.04.03.29;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	97.08.02.22.23.07;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	97.07.17.23.30.31;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.06.30.21.11.19;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.04.27.20.56.28;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.04.18.17.53.13;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.04.17.22.46.21;	author weingart;	state Exp;
branches;
next	1.3;

1.3
date	97.03.31.23.06.20;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.03.31.03.12.02;	author weingart;	state Exp;
branches;
next	1.1;

1.1
date	96.12.03.13.16.55;	author mickey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.12.03.13.16.56;	author mickey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	96.12.15.15.49.35;	author mickey;	state Exp;
branches;
next	;

1.24.4.1
date	2001.04.18.16.08.39;	author niklas;	state Exp;
branches;
next	1.24.4.2;

1.24.4.2
date	2003.05.13.19.42.09;	author ho;	state Exp;
branches;
next	;

1.29.8.1
date	2003.05.19.21.45.12;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.66
log
@As early as possible, create a link /bsd.booted to the /bsd kernel we
presume we booted from.  If you boot from another kernel, we cannot help
you later with hibernate, sorry -- The kernel does not get a useable
filename from the bootblocks.

In the bootblocks, detect a live hibernate signature and boot from
/bsd.booted instead.

with yasuoka, lots of discussion with mlarkin, ok tom
@
text
@#	$OpenBSD: Makefile,v 1.65 2017/06/01 11:18:53 naddy Exp $

COPTS?=
MAN?=	boot.8

.if !empty(COPTS:M-DFDBOOT)
SOFTRAID?=no
.else
SOFTRAID?=yes
.endif

.if ${MACHINE} == "i386"
S=	${.CURDIR}/../../../..
SADIR=	${.CURDIR}/..

PROG?=	boot
LD?=	ld
SIZE?=	size
LDFLAGS+=-nostdlib -Bstatic -nopie -znorelro

CLEANFILES+=	crt0.o
SRCS=	srt0.S conf.c
LDFLAGS+=-Ttext $(LINKADDR) -N -x

.PATH:	${S}/stand/boot
SRCS+=	boot.c bootarg.c cmd.c vars.c

.PATH:	${SADIR}/libsa
SRCS+=	debug_i386.S
SRCS+=	gidt.S random_i386.S
SRCS+=	apmprobe.c debug.c pciprobe.c ps2probe.c
SRCS+=	cmd_i386.c dev_i386.c exec_i386.c gateA20.c machdep.c
SRCS+=	bioscons.c biosdev.c diskprobe.c memprobe.c time.c
.if ${SOFTRAID:L} == "yes"
SRCS+=	softraid_i386.c
.endif

.PATH:	${S}/lib/libsa
SRCS+=	alloc.c ctime.c exit.c getchar.c memcmp.c memcpy.c memset.c printf.c \
	putchar.c snprintf.c strcmp.c strerror.c strlen.c strncmp.c strncpy.c \
	strtol.c strtoll.c
SRCS+=	close.c closeall.c cons.c cread.c dev.c disklabel.c dkcksum.c fstat.c \
	lseek.c open.c read.c readdir.c stat.c
SRCS+=	elf32.c elf64.c loadfile.c
SRCS+=	ufs.c
.if ${SOFTRAID:L} == "yes"
SRCS+=	aes_xts.c bcrypt_pbkdf.c blowfish.c explicit_bzero.c hmac_sha1.c \
	pkcs5_pbkdf2.c rijndael.c sha1.c sha2.c softraid.c
.endif

.PATH:	${S}/lib/libkern
SRCS+=	divdi3.c moddi3.c qdivrem.c
SRCS+=	strlcpy.c

.PATH:	${S}/lib/libz
SRCS+=	adler32.c crc32.c inflate.c inftrees.c

boot.bin: boot
	objcopy -v -O binary ${PROG} boot.bin

CLEANFILES+= ${PROG}.new

.depend srt0.o gidt.o: assym.h

${PROG}: $(OBJS)
	$(LD) $(LDFLAGS) -o ${PROG}.new $(OBJS)
	@@perl ${SADIR}/boot/check-boot.pl ${PROG}.new
	@@mv ${PROG}.new ${PROG}
	@@$(SIZE) ${PROG}

.else
NOPROG=
.endif

.include <bsd.prog.mk>

.if ${SOFTRAID:L} == "yes"
CPPFLAGS+=-DSOFTRAID
.endif
CPPFLAGS+=-DBOOTMAGIC=$(BOOTMAGIC) ${DEBUGFLAGS} -DLINKADDR=${LINKADDR}
CPPFLAGS+=-DSLOW -DSMALL -DNOBYFOUR -DNO_GZIP -DDYNAMIC_CRC_TABLE
CPPFLAGS+=-DHIBERNATE
CPPFLAGS+=-DHEAP_LIMIT=${HEAP_LIMIT} -I${S}/stand/boot #-DCOMPAT_UFS
CFLAGS+=-m32 $(SACFLAGS) -D__INTERNAL_LIBSA_CREAD -fno-pie
AFLAGS+=${NO_INTEGR_AS}
AFLAGS+=-m32 # -Wa,-R
# AFLAGS+=-Wa,-a
AFLAGS+=-fno-pie
@


1.65
log
@Sync with amd64 and allow building the i386 bootstrap with clang:
* build with -ffreestanding
* skip the integrated assembler for assym.h
* use as(1) to build biosboot.S and the various versions of srt0.S
ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.64 2016/09/18 16:34:59 jsing Exp $
d82 1
@


1.64
log
@Add bcrypt pbkdf support to the softraid crypto boot loader code.

Based on a diff from djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.63 2016/09/11 17:52:47 jsing Exp $
d84 1
@


1.63
log
@Switch i386 boot code to libsa MI softraid.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.62 2016/09/11 15:54:11 jsing Exp $
d47 2
a48 2
SRCS+=	aes_xts.c explicit_bzero.c hmac_sha1.c pkcs5_pbkdf2.c rijndael.c \
	sha1.c softraid.c
@


1.62
log
@Rename softraid boot files, which are currently in an MD location. This
will allow us to bring in a MI softraid.{c,h} in lib/libsa.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.61 2016/09/10 16:38:16 jsing Exp $
d47 2
a48 1
SRCS+=	aes_xts.c explicit_bzero.c hmac_sha1.c pkcs5_pbkdf2.c rijndael.c sha1.c
@


1.61
log
@Rename libsa pbkdf2.c to pkcs5_pbkdf2.c so that we match libutil.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.60 2016/07/30 03:25:48 guenther Exp $
d35 1
a35 1
SRCS+=	softraid.c
@


1.60
log
@Prep for relro: make sure it's off for any non-PIE stand/ program

ok millert@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.59 2016/03/30 06:38:45 jmc Exp $
d47 1
a47 1
SRCS+=	aes_xts.c explicit_bzero.c hmac_sha1.c pbkdf2.c rijndael.c sha1.c
@


1.59
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.58 2015/09/18 13:30:56 miod Exp $
d19 1
a19 1
LDFLAGS+=-nostdlib -Bstatic -nopie
@


1.58
log
@Remove support for building the boot blocks with DEBUGFLAGS=-D_TEST, which is
supposed to create a userland binary in order to test non-boot related
functionality. This feature has been bitrotting in a non-compiling state
for years, and causes a too-many-ifdefs disease now that there are intrusive
EFI changes.

No functional change.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.57 2015/09/02 04:09:24 yasuoka Exp $
a4 1
MLINKS?=boot.8 boot.conf.5
@


1.57
log
@Bring the boot changes on amd64 to i386.  alloca is deleted.
Also fix the boot from BIOS and bump the version.

input and ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.56 2014/07/13 09:26:08 jasper Exp $
a21 4
.if defined(DEBUGFLAGS) && !empty(DEBUGFLAGS:M-D_TEST)
CLEANFILES+=	srt0.o
SRCS=	crt0.c conf.c
.else
a24 1
.endif
@


1.56
log
@move putchar() into libsa

"sure" miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.55 2014/07/12 21:54:58 jasper Exp $
d36 1
a36 1
SRCS+=	alloca.S gidt.S random_i386.S
@


1.55
log
@move getchar() into libsa where applicable

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2013/12/28 15:16:28 jsing Exp $
d46 2
a47 2
	snprintf.c strcmp.c strerror.c strlen.c strncmp.c strncpy.c strtol.c \
	strtoll.c
@


1.54
log
@Further clean up and unification of the amd64 and i386 boot(8) makefiles.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.53 2013/12/28 02:51:07 deraadt Exp $
d45 3
a47 2
SRCS+=	alloc.c ctime.c exit.c memcmp.c memcpy.c memset.c printf.c snprintf.c \
	strcmp.c strerror.c strlen.c strncmp.c strncpy.c strtol.c strtoll.c
@


1.53
log
@Try to load entropy data from disk:/etc/random.seed, and additionally
use a MD-supplied random function.  Then, insert this into the ELF
openbsd.randomdata of the kernel, so that it has entropy right from
the start.  Some help from jsing for the softraid aspects.
Also tested by phessler
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2013/06/02 21:01:48 guenther Exp $
d24 1
a24 1
SRCS=	crt0.c
d26 2
a28 2
CLEANFILES+=	crt0.o
SRCS=	srt0.S
d32 1
a32 1
SRCS+=	boot.c cmd.c vars.c bootarg.c conf.c
d35 5
a39 4
SRCS+=	alloca.S debug_i386.S gidt.S random_i386.S
SRCS+=	apmprobe.c bioscons.c biosdev.c cmd_i386.c debug.c dev_i386.c \
	diskprobe.c exec_i386.c gateA20.c machdep.c memprobe.c pciprobe.c \
	ps2probe.c time.c
d45 4
a48 5
SRCS+=	alloc.c cread.c ctime.c exit.c memcmp.c memcpy.c memset.c printf.c \
	snprintf.c strcmp.c strerror.c strlen.c strncmp.c strncpy.c strtol.c \
	strtoll.c
SRCS+=	close.c closeall.c cons.c dev.c disklabel.c dkcksum.c fstat.c lseek.c \
	open.c read.c readdir.c stat.c
d56 1
a57 3

.PATH:	${S}/lib/libkern/arch/i386
SRCS+=	divdi3.c moddi3.c qdivrem.c
@


1.52
log
@Revert previous: libsa/ufs.c was fixed to not use big types when not
necessary.  If something crawls in again that needs these we want to know

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2013/04/23 12:28:51 jsing Exp $
d35 1
a35 1
SRCS+=	alloca.S debug_i386.S gidt.S
@


1.51
log
@Include udivdi3/umoddi3 when compiling the amd64/i386 boot blocks - they
are needed for the upcoming type changes.

ok deraadt@@
@
text
@d59 1
a59 1
SRCS+=	divdi3.c moddi3.c qdivrem.c udivdi3.c umoddi3.c
@


1.50
log
@Remove softraid boot support from fdboot (again).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.49 2013/01/18 21:09:04 espie Exp $
d59 1
a59 1
SRCS+=	divdi3.c moddi3.c qdivrem.c
@


1.49
log
@fix bogus dependencies, and allow mkdep to run
checked on amd64 by rpe@@
okay jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2013/01/18 04:10:16 jsing Exp $
d3 1
d7 1
a7 1
.if !empty(CFLAGS:M-DFDBOOT)
@


1.48
log
@Generate assym.h where we need it, instead of reaching around into other
object directories.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.47 2013/01/18 03:45:23 jsing Exp $
d68 1
a68 2
${.CURDIR}/srt0.S: assym.h
${SADIR}/libsa/gidt.S: assym.h
@


1.47
log
@Clean up/standardise makefiles for i386/stand.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2012/10/31 15:22:42 jsing Exp $
d67 3
@


1.46
log
@Unbreak build on !i386.

Pointed out by deraadt@@
@
text
@d1 1
a1 3
#	$OpenBSD: Makefile,v 1.45 2012/10/31 13:57:20 jsing Exp $

.include "${.CURDIR}/../Makefile.inc"
d13 1
a13 1
S	=${.CURDIR}/../../../..
@


1.45
log
@Enable softraid boot support for i386 boot(8).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2012/10/12 15:03:22 jsing Exp $
a7 4
.if ${MACHINE} == "i386"
S	=${.CURDIR}/../../../..
SADIR=	${.CURDIR}/..

d13 4
@


1.44
log
@Only build fdboot on the appropriate architectures. Also fix the path to
check-boot.pl so that it works with both boot and fdboot.
@
text
@d12 6
d40 3
d52 3
d82 3
@


1.43
log
@Now that the file offset/alignment issue has been found and fixed, switch
back to using -N when linking i386 boot(8). This prevents issues with the
.data file offset becoming mismatched with its LMA, once the binary grows.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2012/10/12 14:58:26 jsing Exp $
d60 1
a60 1
	@@perl ${.CURDIR}/check-boot.pl ${PROG}.new
@


1.42
log
@Add a script that checks the file offsets for boot(8)'s .text and .data
sections match up with their LMAs. This is necessary since biosboot does
not perform relocation.

Discussed with deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2012/10/12 14:00:02 jsing Exp $
d21 1
a21 1
LDFLAGS+=-Ttext $(LINKADDR) -Z -x
@


1.41
log
@Build a 'fdboot' that will be used for floppy disk media. This can be made
smaller than the normal 'boot', however for now it is identical.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2012/10/09 11:43:22 jsing Exp $
d56 2
d59 3
a61 1
	$(LD) $(LDFLAGS) -o ${PROG} $(OBJS)
@


1.40
log
@Remove -noinhibit-exec now that we no longer have to deal with
"relocation truncated" linker errors.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2012/09/25 09:01:03 pascal Exp $
d5 2
a6 2
MAN=	boot.8
MLINKS=	boot.8 boot.conf.5
d12 1
a12 1
PROG=	boot
@


1.39
log
@Reduce the diff between amd64/stand and i386/stand, requested by deraadt@@.
These create essentially the same bootblocks, so the build system should not be
diverging too much, or at least easily diffable.
There is still a lot of work to be done here, but this is the low-hanging fruit.

ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2012/08/29 22:23:07 pascal Exp $
d21 1
a21 1
LDFLAGS+=-Ttext $(LINKADDR) -Z -x -noinhibit-exec
@


1.38
log
@Kill all NOPIE and NOPIE_FLAGS in i386/stand, replacing them with -fno-pie
and -nopie directly.  Binaries from a PIE system are identical to those from
a recent snapshot.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2012/08/21 14:46:18 pascal Exp $
d48 1
a48 1
SRCS+=	moddi3.c divdi3.c qdivrem.c
@


1.37
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2011/11/06 13:39:43 jsing Exp $
d15 1
a15 1
LDFLAGS+=-nostdlib -Bstatic
d69 1
a69 2
CFLAGS+=-m32 $(SACFLAGS) -D__INTERNAL_LIBSA_CREAD
CFLAGS+=${NOPIE_FLAGS}
d72 1
a72 1
AFLAGS+=${NOPIE_FLAGS}
@


1.36
log
@Build boot(8) for i386 in the same manner that we build boot(8) for amd64 -
specify a list of source files to compile, instead of building and linking
against libraries.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2007/11/25 18:25:31 deraadt Exp $
d70 1
d73 1
@


1.35
log
@link bootblocks with -Z instead of -N, to ensure that the file offset and
addresses line up correctly.  Newer i386 gcc4 - for some reason -- is
prompting the linker with -N to not do this alignment which it used to do
(perhaps because the alignment of all .o's have dropped to very small
amounts??).  Using -Z wastes around a page of bootblock space which matters
even more on the small install media, so this definately needs revisiting.
Workaround from toby
@
text
@d9 3
d26 1
a27 2
S	=${.CURDIR}/../../../..
SADIR=	${.CURDIR}/..
d29 17
a45 2
LDADD=	${LIBSA} ${LIBZ}
DPADD=	${LIBSA} ${LIBZ}
d47 2
a48 1
.PATH:	${S}/stand/boot
d50 2
a51 2
.PATH:	${S}/lib/libkern/arch/i386 ${S}/lib/libkern
SRCS+=	strlcpy.c moddi3.c divdi3.c qdivrem.c
d56 2
a57 2
${PROG}: $(OBJS) $(DPADD)
	$(LD) $(LDFLAGS) -o ${PROG} $(OBJS) $(LDADD)
d66 5
a70 4
CPPFLAGS+=-DBOOTMAGIC=$(BOOTMAGIC) ${DEBUGFLAGS}
CPPFLAGS+=-DLINKADDR=${LINKADDR}
CFLAGS+=$(SACFLAGS)
#AFLAGS+=-Wa,-R
a71 1

@


1.34
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2006/10/30 18:28:57 jmc Exp $
d18 1
a18 1
LDFLAGS+=-Ttext $(LINKADDR) -N -x -noinhibit-exec
@


1.33
log
@install boot.conf as a section 5 page, not section 8;

from mikolaj kucharski;
ok mk deraadt krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2005/07/30 14:32:46 millert Exp $
d27 2
a28 2
LDADD=	${LIBSA} ${LIBZ} ${LIBKERN}
DPADD=	${LIBSA} ${LIBZ} ${LIBKERN}
d31 3
@


1.32
log
@Add libkern and link it in after libz
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2003/04/17 12:06:05 mickey Exp $
d6 1
a6 1
MLINKS=	boot.8 boot.conf.8
@


1.31
log
@there is no reason to keep both around. just rename
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2003/04/17 03:43:18 drahn Exp $
d27 2
a28 2
LDADD=	${LIBSA} ${LIBZ}
DPADD=	${LIBSA} ${LIBZ}
@


1.30
log
@i386 ELF bootloader. developed with weingart@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2000/10/19 17:14:01 fgsch Exp $
d23 1
a23 1
SRCS+=	boot_loadfile.c cmd.c vars.c bootarg.c conf.c
@


1.29
log
@Pass SACFLAGS correctly so all files are compiled with -fpack-struct,
fixing the help hang and making machine [boot|diskinfo|memory] working
again.
Closes PR #1435. Found by me, fix by mickey and i; deraadt@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2000/06/08 00:56:07 mickey Exp $
d18 1
a18 1
LDFLAGS+=-Ttext $(LINKADDR) -z -x
d23 1
a23 1
SRCS+=	boot.c cmd.c vars.c bootarg.c conf.c
d32 3
d36 2
a37 2
	$(LD) $(LDFLAGS) -o $(PROG) $(OBJS) $(LDADD)
	@@$(SIZE) $(PROG)
d46 1
@


1.29.8.1
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d18 1
a18 1
LDFLAGS+=-Ttext $(LINKADDR) -N -x -noinhibit-exec
a31 3
boot.bin: boot
	objcopy -v -O binary ${PROG} boot.bin

d33 2
a34 2
	$(LD) $(LDFLAGS) -o ${PROG} $(OBJS) $(LDADD)
	@@$(SIZE) ${PROG}
a42 1
CPPFLAGS+=-DLINKADDR=${LINKADDR}
@


1.28
log
@MANSUBDIR is common for this whole dir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2000/05/26 11:50:46 deraadt Exp $
a35 4
CPPFLAGS+=-DBOOTMAGIC=$(BOOTMAGIC) ${DEBUGFLAGS}
CFLAGS+=$(SACFLAGS)
#AFLAGS+=-Wa,-R
# AFLAGS+=-Wa,-a
d42 4
@


1.27
log
@more portable manual pages
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2000/05/25 21:54:59 deraadt Exp $
a5 1
MANSUBDIR=/i386
@


1.26
log
@cause traversal into arch & subdirectories for the purposes of manual page install...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2000/05/25 20:32:50 deraadt Exp $
d5 5
a24 3
MAN=	boot.8
MANSUBDIR=/i386
MLINKS=	boot.8 boot.conf.8
a36 2
.include <bsd.prog.mk>

d41 7
@


1.25
log
@man subdir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 1999/07/08 20:11:53 deraadt Exp $
d21 1
a21 1
MANSUBDIR=i386
@


1.24
log
@install into man8/arch subdirs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 1998/07/11 21:13:55 angelos Exp $
d21 1
a21 1
MANSUBDIR=/i386
@


1.24.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2000/10/19 17:14:01 fgsch Exp $
a4 4
MAN=	boot.8
MLINKS=	boot.8 boot.conf.8

.if ${MACHINE} == "i386"
d20 3
a34 4
.else
NOPROG=
.endif

a40 1

@


1.24.4.2
log
@Sync the SMP branch to -current, plus some ELF-related fixes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24.4.1 2001/04/18 16:08:39 niklas Exp $
d18 1
a18 1
LDFLAGS+=-Ttext $(LINKADDR) -N -x -noinhibit-exec
a31 3
boot.bin: boot
	objcopy -v -O binary ${PROG} boot.bin

d33 2
a34 2
	$(LD) $(LDFLAGS) -o ${PROG} $(OBJS) $(LDADD)
	@@$(SIZE) ${PROG}
a42 1
CPPFLAGS+=-DLINKADDR=${LINKADDR}
@


1.23
log
@Roll-back previous commit; someone is working on getting all the boot*
pages make some sense.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 1998/07/11 20:58:33 angelos Exp $
d21 1
@


1.22
log
@Rename boot.8 to boot-second-stage.8, so it's possible to get it
through man (it conflicted with the boot_$arch.8 page);
wsimpson@@greendragon.com
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 1998/05/28 20:52:36 mickey Exp $
d20 2
a21 2
MAN=	boot-second-stage.8
MLINKS=	boot-second-stage.8 boot.conf.8
@


1.21
log
@cleanup the Makefiles a bit.
make machine link in a smart way, remove unused bits.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 1998/05/27 13:33:36 mickey Exp $
d20 2
a21 2
MAN=	boot.8
MLINKS=	boot.8 boot.conf.8
@


1.20
log
@conditional LD definition
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 1998/05/25 19:20:47 mickey Exp $
a8 1
CLEANFILES+=	i386 machine
a28 7

all:	machine-links

machine-links:
	@@rm -f machine i386
	@@ln -fs ${.CURDIR}/../.. i386
	@@ln -fs ${.CURDIR}/../../include machine
@


1.19
log
@put support for test /boot environment back; some CLEANFILES and spaces
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 1998/05/19 18:59:11 mickey Exp $
d6 1
a6 1
LD=ld
@


1.18
log
@cross-compile ready
@
text
@d1 3
a3 1
#	$OpenBSD: Makefile,v 1.17 1998/02/24 07:54:38 deraadt Exp $
d6 1
a6 5
SRCS=	srt0.S boot.c cmd.c bootarg.c conf.c
#AFLAGS+=-Wa,-R
# AFLAGS+=-Wa,-a
LD?=	ld
LDFLAGS+=-nostdlib -Ttext $(LINKADDR) -z -x -Bstatic
d8 13
d46 2
@


1.17
log
@MNLINK boot.conf(8)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 1997/10/22 23:28:30 mickey Exp $
d7 1
a7 1
LD=ld
d9 1
d29 1
a29 1
	@@size $(PROG)
@


1.16
log
@use bootarg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1997/09/29 23:01:06 mickey Exp $
d10 1
@


1.15
log
@we won't need this
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1997/09/21 10:02:09 mickey Exp $
d4 1
a4 1
SRCS=	srt0.S boot.c cmd.c conf.c
@


1.14
log
@/boot engine is in sys/stand/boot/ now (;
use it, reuse it, i can't imagine any brokenness ...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1997/09/02 21:58:20 mickey Exp $
a23 6

kentry.o: kentry.c
	@@echo ${COMPILE.c} ${.IMPSRC}
	@@${COMPILE.c} -S -o tmp.s ${.IMPSRC}
	@@sed 's/ret/lret/g' tmp.s | ${AS} -f -o $@@
	@@rm tmp.s
@


1.13
log
@strip on install
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/09/02 21:18:12 mickey Exp $
d15 2
@


1.12
log
@completely disable network support
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/08/22 20:16:27 mickey Exp $
a8 1
INSTALL_STRIP=
@


1.11
log
@no kentry for a while
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/08/13 04:03:29 mickey Exp $
a37 3
.ifdef NO_NET
CPPFLAGS+=-DNO_NET
.endif
@


1.10
log
@split off START into LINKADDR and LOADADDR (we will need reloctable boot)
BOOTREL as a linear address, not segment one
more heap (;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/08/02 22:23:07 mickey Exp $
d4 1
a4 1
SRCS=	srt0.S boot.c cmd.c kentry.c conf.c
@


1.9
log
@move kentry() in boot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1997/07/17 23:30:31 mickey Exp $
d8 1
a8 1
LDFLAGS+=-nostdlib -Ttext $(START) -z -x -Bstatic
d24 6
d36 1
a36 1
CPPFLAGS+=-DBOOTMAGIC=$(BOOTMAGIC)
@


1.8
log
@prper variable handling
-nostdinc
do not feed data into text
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/06/30 21:11:19 kstailey Exp $
d4 1
a4 1
SRCS=	srt0.S boot.c cmd.c conf.c
@


1.7
log
@remove obj@@ dependency again
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/04/27 20:56:28 millert Exp $
d5 1
a5 2
CFLAGS+=$(SACFLAGS) -I${.CURDIR}/../../../../lib/libsa -I${.CURDIR}/../libsa
AFLAGS+=-Wa,-R
d8 1
a8 1
LDFLAGS+=-nostdlib -Ttext $(START) -z -x -e start_boot -Bstatic
d11 1
d31 1
@


1.6
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP
This fixes namespace problems where STRIP is sometimes used as
the name of the strip(1) to use and other times used as
the flag to send install(1) when stripping (or not).
COPY doesn't have this problem (yet) but was poorly named.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/04/18 17:53:13 mickey Exp $
d12 1
a12 1
SADIR=${.CURDIR}/..
@


1.5
log
@angelos, please forgive me );
i missed this yesterday.... now it must work for you! (;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/04/17 22:46:21 weingart Exp $
d10 1
a10 1
STRIP=
@


1.4
log
@Add -nostdlib to make sure...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/03/31 23:06:20 mickey Exp $
d10 1
d12 1
d14 2
a15 2
LDADD=	-L../libsa -lsa -L../libz -lz
DPADD=	../libsa/libsa.a ../libz/libz.a
@


1.3
log
@commit all my mods to the last imported libsa stuff....
including:
- disklabel support;
- better boot cmd line
- smaller size (using some compilation switches ;)
- no more relocations in /boot, it's loaded in the place;
- better disk performance (maybe were already in there)
- installboot -n does not require write perms for device
- more debugs
- missing parts in libsa (such as cd9660 and so)
- i don't like 2 files for exec_i386 (sorry, toby, let's discuss maybe?)
tricks and tails:
- joined .text and .data (saves you a page)
- prot mode switching still in biosboot (it's freezed for awhile)
- biosdisk internals changed
- biosdev is not passed propery to the kernel (i'll fix it soon)
- sure i missed smth here to note (use the source, Luke!)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.2.2 1996/12/15 15:49:35 mickey Exp $
d9 1
a9 1
LDFLAGS+=-Ttext $(START) -z -x -e start_boot -Bstatic
@


1.2
log
@Initial /boot stuff (from Mickey)
@
text
@d4 6
a9 6
SRCS=	srt0.S boot.c cmd.c conf.c version.c
CFLAGS=-I${.CURDIR}/../../../../lib/libsa -I${.CURDIR}/../libsa
AFLAGS+=-DREL=$(REL) #-Wa,-a
CFLAGS+=-Wall -O
LDFLAGS=-Wl,-T$(REL),-x,-z -e start_boot
LDFLAGS+=-static -nostdlib
d15 11
d28 1
@


1.1
log
@file Makefile was initially added on branch new.
@
text
@d1 19
@


1.1.2.1
log
@new hierarchy. raw /boot loading, just 1(one) boot stage.
@
text
@a0 54
#	$OpenBSD: Makefile,v 1.4.4.4 1996/10/29 10:27:37 mickey Exp $
#	@@(#)Makefile	7.9 (Berkeley) 5/8/91

S	= ${.CURDIR}/../../../..
I386	= ${.CURDIR}/..
STAND=	/sys/stand
INCPATH=-I${S}/lib/libsa -I${S} -I${.CURDIR}/../libsa
VPATH=	${STAND}
STANDDIR= ${DESTDIR}/usr/mdec
LDADD=	../libsa/libsa.a
DPADD=	../libsa/libsa.a

DEBUG=	-g -DDEBUG
DEBUG+=	-DARP_DEBUG
DEBUG+=	-DRARP_DEBUG
DEBUG+=	-DNET_DEBUG
DEBUG+=	-DNETIF_DEBUG
DEBUG+=	-DETHER_DEBUG
DEBUG+=	-DEXEC_DEBUG
DEBUG+=	-DBOOTP_DEBUG
DEBUG+=	-DNFS_DEBUG
DEBUG+=	-DRPC_DEBUG

# AFLAGS=	-v -Wa,-a
CFLAGS=	-Wall -m386 -O2 -D_STANDALONE -DAT386 -O ${INCPATH}
CPPFLAGS=	${DEBUG} ${INCPATH}

SRCS=	boot.c conf.c biosdev.c bios.S ${ZLIB} version.c

OBJS=	boot.o zlib.o conf.o
#clock.o

.PATH: ${S}/net
# ${I386}/i386 ${I386}/isa ${S}/dev/isa ${S}/kern

ALL=	boot
all:	config ${ALL}

config:
	@@rm -f i386 machine
	@@ln -fs ${I386} i386
	@@ln -fs ${I386}/include machine

# getting booted from disc

boot:	${OBJS} ${DPADD} version.o
	${LD} -o $@@ -e start -N -T 60000 ${OBJS} ${LDADD} version.o
	size $@@
	ls -l $@@

install: ${ALL}
	install -c ${ALL} ${STANDDIR}

.include <bsd.prog.mk>
@


1.1.2.2
log
@protected mode problems fixed for biosboot (now it works!!!)
libsa.a(cd9660.o) requires libkern.a -- removed from conf.c
installboot changed according to the biosboot changes.
-Wall in libsa/Makefile, cleanup!
@
text
@d1 1
a1 2

#	$OpenBSD: Makefile,v 1.1.2.1 1996/12/03 13:16:56 mickey Exp $
d28 1
a28 1
SRCS=	boot.c conf.c ${ZLIB} version.c
d47 1
a47 1
	${LD} -o $@@ -e start -N -T 10000 ${OBJS} ${LDADD} version.o
@
