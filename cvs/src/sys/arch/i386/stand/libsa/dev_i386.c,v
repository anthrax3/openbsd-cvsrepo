head	1.43;
access;
symbols
	OPENBSD_6_1:1.43.0.4
	OPENBSD_6_1_BASE:1.43
	OPENBSD_6_0:1.41.0.4
	OPENBSD_6_0_BASE:1.41
	OPENBSD_5_9:1.41.0.2
	OPENBSD_5_9_BASE:1.41
	OPENBSD_5_8:1.40.0.8
	OPENBSD_5_8_BASE:1.40
	OPENBSD_5_7:1.40.0.2
	OPENBSD_5_7_BASE:1.40
	OPENBSD_5_6:1.40.0.4
	OPENBSD_5_6_BASE:1.40
	OPENBSD_5_5:1.38.0.8
	OPENBSD_5_5_BASE:1.38
	OPENBSD_5_4:1.38.0.4
	OPENBSD_5_4_BASE:1.38
	OPENBSD_5_3:1.38.0.2
	OPENBSD_5_3_BASE:1.38
	OPENBSD_5_2:1.35.0.6
	OPENBSD_5_2_BASE:1.35
	OPENBSD_5_1_BASE:1.35
	OPENBSD_5_1:1.35.0.4
	OPENBSD_5_0:1.35.0.2
	OPENBSD_5_0_BASE:1.35
	OPENBSD_4_9:1.33.0.2
	OPENBSD_4_9_BASE:1.33
	OPENBSD_4_8:1.30.0.14
	OPENBSD_4_8_BASE:1.30
	OPENBSD_4_7:1.30.0.10
	OPENBSD_4_7_BASE:1.30
	OPENBSD_4_6:1.30.0.12
	OPENBSD_4_6_BASE:1.30
	OPENBSD_4_5:1.30.0.8
	OPENBSD_4_5_BASE:1.30
	OPENBSD_4_4:1.30.0.6
	OPENBSD_4_4_BASE:1.30
	OPENBSD_4_3:1.30.0.4
	OPENBSD_4_3_BASE:1.30
	OPENBSD_4_2:1.30.0.2
	OPENBSD_4_2_BASE:1.30
	OPENBSD_4_1:1.29.0.12
	OPENBSD_4_1_BASE:1.29
	OPENBSD_4_0:1.29.0.10
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.8
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.29.0.6
	OPENBSD_3_8_BASE:1.29
	OPENBSD_3_7:1.29.0.4
	OPENBSD_3_7_BASE:1.29
	OPENBSD_3_6:1.29.0.2
	OPENBSD_3_6_BASE:1.29
	SMP_SYNC_A:1.28
	SMP_SYNC_B:1.28
	OPENBSD_3_5:1.28.0.2
	OPENBSD_3_5_BASE:1.28
	OPENBSD_3_4:1.27.0.2
	OPENBSD_3_4_BASE:1.27
	UBC_SYNC_A:1.24
	OPENBSD_3_3:1.24.0.10
	OPENBSD_3_3_BASE:1.24
	OPENBSD_3_2:1.24.0.8
	OPENBSD_3_2_BASE:1.24
	OPENBSD_3_1:1.24.0.6
	OPENBSD_3_1_BASE:1.24
	UBC_SYNC_B:1.24
	UBC:1.24.0.4
	UBC_BASE:1.24
	OPENBSD_3_0:1.24.0.2
	OPENBSD_3_0_BASE:1.24
	OPENBSD_2_9:1.23.0.4
	OPENBSD_2_9_BASE:1.23
	OPENBSD_2_8:1.23.0.2
	OPENBSD_2_8_BASE:1.23
	OPENBSD_2_7:1.22.0.6
	OPENBSD_2_7_BASE:1.22
	SMP:1.22.0.4
	SMP_BASE:1.22
	kame_19991208:1.22
	OPENBSD_2_6:1.22.0.2
	OPENBSD_2_6_BASE:1.22
	OPENBSD_2_5:1.21.0.4
	OPENBSD_2_5_BASE:1.21
	OPENBSD_2_4:1.21.0.2
	OPENBSD_2_4_BASE:1.21
	OPENBSD_2_3:1.20.0.2
	OPENBSD_2_3_BASE:1.20
	OPENBSD_2_2:1.19.0.2
	OPENBSD_2_2_BASE:1.19
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10;
locks; strict;
comment	@ * @;


1.43
date	2016.09.11.17.52.47;	author jsing;	state Exp;
branches;
next	1.42;
commitid	OIt9eg6fQy6pFToA;

1.42
date	2016.09.11.15.54.11;	author jsing;	state Exp;
branches;
next	1.41;
commitid	m28Q0aUDbVqwDb3p;

1.41
date	2015.09.18.13.30.56;	author miod;	state Exp;
branches;
next	1.40;
commitid	1BEcCDYd9p5DIl0g;

1.40
date	2014.07.13.09.26.08;	author jasper;	state Exp;
branches;
next	1.39;
commitid	Cnjup0HpCIRrcQ6o;

1.39
date	2014.07.12.21.54.58;	author jasper;	state Exp;
branches;
next	1.38;
commitid	3HeD4LaLGiS22I3y;

1.38
date	2012.11.01.00.55.38;	author jsing;	state Exp;
branches;
next	1.37;

1.37
date	2012.10.31.13.55.58;	author jsing;	state Exp;
branches;
next	1.36;

1.36
date	2012.10.30.14.06.29;	author jsing;	state Exp;
branches;
next	1.35;

1.35
date	2011.06.26.23.19.11;	author tedu;	state Exp;
branches;
next	1.34;

1.34
date	2011.06.26.21.37.52;	author tedu;	state Exp;
branches;
next	1.33;

1.33
date	2010.12.06.22.51.46;	author jasper;	state Exp;
branches;
next	1.32;

1.32
date	2010.12.06.22.11.01;	author jasper;	state Exp;
branches;
next	1.31;

1.31
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.30;

1.30
date	2007.06.27.20.29.37;	author mk;	state Exp;
branches;
next	1.29;

1.29
date	2004.06.23.00.21.49;	author tom;	state Exp;
branches;
next	1.28;

1.28
date	2004.03.09.19.12.12;	author tom;	state Exp;
branches;
next	1.27;

1.27
date	2003.08.11.06.23.09;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2003.06.03.20.22.11;	author mickey;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.01.17.00.35;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2001.09.11.06.06.15;	author fgsch;	state Exp;
branches;
next	1.23;

1.23
date	2000.06.08.01.51.32;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	99.08.25.00.54.19;	author mickey;	state Exp;
branches
	1.22.4.1;
next	1.21;

1.21
date	98.05.25.19.20.53;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	98.04.18.07.39.49;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	97.08.22.00.38.35;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	97.08.21.22.19.33;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	97.08.13.14.24.02;	author niklas;	state Exp;
branches;
next	1.16;

1.16
date	97.08.12.22.14.36;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	97.08.12.21.44.29;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	97.07.21.15.32.14;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	97.07.17.23.00.27;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	97.06.06.16.26.57;	author kstailey;	state Exp;
branches;
next	1.11;

1.11
date	97.05.29.04.35.29;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	97.04.23.06.49.07;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	97.04.17.21.28.22;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.04.15.21.35.13;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.04.15.03.31.06;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	97.04.08.22.48.28;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.04.07.02.07.06;	author weingart;	state Exp;
branches;
next	1.4;

1.4
date	97.04.06.20.08.25;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.03.31.23.06.28;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.03.31.03.12.12;	author weingart;	state Exp;
branches;
next	1.1;

1.1
date	96.10.29.09.23.01;	author mickey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.10.29.09.23.02;	author mickey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	96.12.03.13.13.46;	author mickey;	state Exp;
branches;
next	;

1.22.4.1
date	2001.04.18.16.08.43;	author niklas;	state Exp;
branches;
next	1.22.4.2;

1.22.4.2
date	2001.10.31.03.01.13;	author nate;	state Exp;
branches;
next	1.22.4.3;

1.22.4.3
date	2003.06.07.11.11.38;	author ho;	state Exp;
branches;
next	1.22.4.4;

1.22.4.4
date	2004.02.19.10.48.43;	author niklas;	state Exp;
branches;
next	1.22.4.5;

1.22.4.5
date	2004.06.05.23.09.01;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.43
log
@Switch i386 boot code to libsa MI softraid.
@
text
@/*	$OpenBSD: dev_i386.c,v 1.42 2016/09/11 15:54:11 jsing Exp $	*/

/*
 * Copyright (c) 1996-1999 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/queue.h>
#include <sys/disklabel.h>
#include <dev/cons.h>

#include "libsa.h"
#include "biosdev.h"
#include "disk.h"

#ifdef SOFTRAID
#include <dev/biovar.h>
#include <dev/softraidvar.h>
#include <lib/libsa/softraid.h>
#include "softraid_i386.h"
#endif

extern int debug;

/* XXX use slot for 'rd' for 'hd' pseudo-device */
const char bdevs[][4] = {
	"wd", "", "fd", "", "sd", "st", "cd", "",
	"", "", "", "", "", "", "", "", "", "hd", ""
};
const int nbdevs = nitems(bdevs);

const char cdevs[][4] = {
	"cn", "", "", "", "", "", "", "",
	"com", "", "", "", "pc"
};
const int ncdevs = nitems(cdevs);

/* pass dev_t to the open routines */
int
devopen(struct open_file *f, const char *fname, char **file)
{
	struct devsw *dp = devsw;
	register int i, rc = 1;

	*file = (char *)fname;

#ifdef DEBUG
	if (debug)
		printf("devopen:");
#endif

	for (i = 0; i < ndevs && rc != 0; dp++, i++) {
#ifdef DEBUG
		if (debug)
			printf(" %s: ", dp->dv_name);
#endif
		if ((rc = (*dp->dv_open)(f, file)) == 0) {
			f->f_dev = dp;
			return 0;
		}
#ifdef DEBUG
		else if (debug)
			printf("%d", rc);
#endif

	}
#ifdef DEBUG
	if (debug)
		putchar('\n');
#endif

	if ((f->f_flags & F_NODEV) == 0)
		f->f_dev = dp;

	return rc;
}

void
devboot(dev_t bootdev, char *p)
{
#ifdef SOFTRAID
	struct sr_boot_volume *bv;
	struct sr_boot_chunk *bc;
	struct diskinfo *dip = NULL;
#endif
	int sr_boot_vol = -1;
	int part_type = FS_UNUSED;

#ifdef SOFTRAID
	/*
	 * Determine the partition type for the 'a' partition of the
	 * boot device.
	 */
	TAILQ_FOREACH(dip, &disklist, list)
		if (dip->bios_info.bios_number == bootdev &&
		    (dip->bios_info.flags & BDI_BADLABEL) == 0)
			part_type = dip->disklabel.d_partitions[0].p_fstype;

	/*
	 * See if we booted from a disk that is a member of a bootable
	 * softraid volume.
	 */
	SLIST_FOREACH(bv, &sr_volumes, sbv_link) {
		if (bv->sbv_flags & BIOC_SCBOOTABLE)
			SLIST_FOREACH(bc, &bv->sbv_chunks, sbc_link)
				if (bc->sbc_disk == bootdev)
					sr_boot_vol = bv->sbv_unit;
		if (sr_boot_vol != -1)
			break;
	}
#endif

	if (sr_boot_vol != -1 && part_type != FS_BSDFFS) {
		*p++ = 's';
		*p++ = 'r';
		*p++ = '0' + sr_boot_vol;
	} else if (bootdev & 0x100) {
		*p++ = 'c';
		*p++ = 'd';
		*p++ = '0';
	} else {
		if (bootdev & 0x80)
			*p++ = 'h';
		else
			*p++ = 'f';
		*p++ = 'd';
		*p++ = '0' + (bootdev & 0x7f);
	}
	*p++ = 'a';
	*p = '\0';
}

char ttyname_buf[8];

char *
ttyname(int fd)
{
	snprintf(ttyname_buf, sizeof ttyname_buf, "%s%d",
	    cdevs[major(cn_tab->cn_dev)], minor(cn_tab->cn_dev));

	return ttyname_buf;
}

dev_t
ttydev(char *name)
{
	int i, unit = -1;
	char *no = name + strlen(name) - 1;

	while (no >= name && *no >= '0' && *no <= '9')
		unit = (unit < 0 ? 0 : (unit * 10)) + *no-- - '0';
	if (no < name || unit < 0)
		return NODEV;
	for (i = 0; i < ncdevs; i++)
		if (strncmp(name, cdevs[i], no - name + 1) == 0)
			return makedev(i, unit);
	return NODEV;
}

int
cnspeed(dev_t dev, int sp)
{
	if (major(dev) == 8)	/* comN */
		return comspeed(dev, sp);

	/* pc0 and anything else */
	return 9600;
}
@


1.42
log
@Rename softraid boot files, which are currently in an MD location. This
will allow us to bring in a MI softraid.{c,h} in lib/libsa.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.41 2015/09/18 13:30:56 miod Exp $	*/
d41 1
@


1.41
log
@Remove support for building the boot blocks with DEBUGFLAGS=-D_TEST, which is
supposed to create a userland binary in order to test non-boot related
functionality. This feature has been bitrotting in a non-compiling state
for years, and causes a too-many-ifdefs disease now that there are intrusive
EFI changes.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.40 2014/07/13 09:26:08 jasper Exp $	*/
d41 1
a41 1
#include "softraid.h"
@


1.40
log
@move putchar() into libsa

"sure" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.39 2014/07/12 21:54:58 jasper Exp $	*/
a108 9

#ifdef _TEST
	*p++ = '/';
	*p++ = 'd';
	*p++ = 'e';
	*p++ = 'v';
	*p++ = '/';
	*p++ = 'r';
#endif
@


1.39
log
@move getchar() into libsa where applicable

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.38 2012/11/01 00:55:38 jsing Exp $	*/
a160 31
}

int pch_pos = 0;

void
putchar(int c)
{
	switch (c) {
	case '\177':	/* DEL erases */
		cnputc('\b');
		cnputc(' ');
	case '\b':
		cnputc('\b');
		if (pch_pos)
			pch_pos--;
		break;
	case '\t':
		do {
			cnputc(' ');
		} while (++pch_pos % 8);
		break;
	case '\n':
	case '\r':
		cnputc(c);
		pch_pos=0;
		break;
	default:
		cnputc(c);
		pch_pos++;
		break;
	}
@


1.38
log
@Fix merge errors.

Found the hard way by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.37 2012/10/31 13:55:58 jsing Exp $	*/
a191 16
}

int
getchar(void)
{
	register int c = cngetc();

	if (c == '\r')
		c = '\n';

	if ((c < ' ' && c != '\n') || c == '\177')
		return c;

	putchar(c);

	return c;
@


1.37
log
@Bring softraid support to i386/stand/libsa.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.12 2012/10/27 15:43:42 jsing Exp $	*/
d30 2
d36 7
@


1.36
log
@Apply a bunch of style(9) and whitespace fixes to i386/amd64 libsa, making
the code actually diffable. No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.34 2011/06/26 21:37:52 tedu Exp $	*/
d29 3
a33 2
#include <sys/param.h>
#include <dev/cons.h>
d93 8
d109 30
a138 1
	if (bootdev & 0x100) {
@


1.35
log
@kill mcd dead.  ok krw matthew millert thib
@
text
@d131 1
a131 1
		do
d133 1
a133 1
		while (++pch_pos % 8);
d186 1
a186 1
			return (makedev(i, unit));
d194 1
a194 1
		return (comspeed(dev, sp));
@


1.34
log
@remove remnants of scd device, discovered by Frederic Perrin
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.33 2010/12/06 22:51:46 jasper Exp $	*/
d38 1
a38 1
	"wd", "", "fd", "", "sd", "st", "cd", "mcd",
@


1.33
log
@- properly remove NENTS now after fixing the fallout.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.32 2010/12/06 22:11:01 jasper Exp $	*/
d39 1
a39 1
	"", "", "", "", "", "", "", "scd", "", "hd", ""
@


1.32
log
@- partially revert previous NENTS removal for arches which got busted.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.31 2010/12/06 18:44:49 jasper Exp $	*/
d41 1
a41 1
const int nbdevs = NENTS(bdevs);
d47 1
a47 1
const int ncdevs = NENTS(cdevs);
@


1.31
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.30 2007/06/27 20:29:37 mk Exp $	*/
d41 1
a41 1
const int nbdevs = nitems(bdevs);
d47 1
a47 1
const int ncdevs = nitems(cdevs);
@


1.30
log
@wt(4) was removed a while ago, so don't support booting off it anoymore.

i386/amd64 was ok tom
zaurus ok drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.29 2004/06/23 00:21:49 tom Exp $	*/
d41 1
a41 1
const int nbdevs = NENTS(bdevs);
d47 1
a47 1
const int ncdevs = NENTS(cdevs);
@


1.29
log
@Enter cdboot, a CD-specific second-stage bootrap.

Testing krw@@ and todd@@, thanks.

assistance, testing and ok weingart@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.28 2004/03/09 19:12:12 tom Exp $	*/
d38 1
a38 1
	"wd", "", "fd", "wt", "sd", "st", "cd", "mcd",
@


1.28
log
@Spacing and KNF.  Partly from Joris Vink <nimadeus at pandora dot be>.

ok henning@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.27 2003/08/11 06:23:09 deraadt Exp $	*/
d100 12
a111 6
	if (bootdev & 0x80)
		*p++ = 'h';
	else
		*p++ = 'f';
	*p++ = 'd';
	*p++ = '0' + (bootdev & 0x7f);
@


1.27
log
@ansification and knf and protos
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.26 2003/06/03 20:22:11 mickey Exp $	*/
d76 1
a76 1
			
d115 1
a115 1
	switch(c) {
d127 1
a127 1
		while(++pch_pos % 8);
d150 1
a150 1
		return(c);
d154 1
a154 1
	return(c);
d163 3
a165 3
	    cdevs[major(cn_tab->cn_dev)],
	    minor(cn_tab->cn_dev));
	return (ttyname_buf);
d177 1
a177 1
		return (NODEV);
d181 1
a181 1
	return (NODEV);
d188 2
a189 1
		return comspeed(dev, sp);
@


1.26
log
@three four kills
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.25 2003/06/01 17:00:35 deraadt Exp $	*/
d90 1
a90 3
devboot(bootdev, p)
	dev_t bootdev;
	char *p;
d113 1
a113 2
putchar(c)
	int c;
d142 1
a142 1
getchar()
d158 1
d160 1
a160 2
ttyname(fd)
	int fd;
d169 1
a169 2
ttydev(name)
	char *name;
d185 1
a185 3
cnspeed(dev, sp)
	dev_t	dev;
	int	sp;
@


1.25
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.24 2001/09/11 06:06:15 fgsch Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.24
log
@remove acd references; millert@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.23 2000/06/08 01:51:32 mickey Exp $	*/
d170 2
a171 1
	sprintf(ttyname_buf, "%s%d", cdevs[major(cn_tab->cn_dev)],
@


1.23
log
@move cnspeed func and comspeed proto in places
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.22 1999/08/25 00:54:19 mickey Exp $	*/
d44 1
a44 1
	"", "", "", "", "", "", "", "scd", "", "hd", "acd"
@


1.22
log
@give better support to the bios memory maps.
provide memory maps editing through the machine memory command.
rearrange probing in machdep, so it provides less output,
also giving a shot for apm to fix the memory maps.
changes to kernel are minimal, only that is required due
to the api version bits addition and such cosmetic changes.
tested on all critical kernel,boot combinations; niklas@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.21 1998/05/25 19:20:53 mickey Exp $	*/
d190 11
@


1.22.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.23 2000/06/08 01:51:32 mickey Exp $	*/
a189 11
}

int
cnspeed(dev, sp)
	dev_t	dev;
	int	sp;
{
	if (major(dev) == 8)	/* comN */
		return comspeed(dev, sp);
	/* pc0 and anything else */
	return 9600;
@


1.22.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.22.4.1 2001/04/18 16:08:43 niklas Exp $	*/
d44 1
a44 1
	"", "", "", "", "", "", "", "scd", "", "hd", ""
@


1.22.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.22.4.2 2001/10/31 03:01:13 nate Exp $	*/
d15 5
d170 1
a170 2
	snprintf(ttyname_buf, sizeof ttyname_buf, "%s%d",
	    cdevs[major(cn_tab->cn_dev)],
@


1.22.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d90 3
a92 1
devboot(dev_t bootdev, char *p)
d115 2
a116 1
putchar(int c)
d145 1
a145 1
getchar(void)
a160 1

d162 2
a163 1
ttyname(int fd)
d172 2
a173 1
ttydev(char *name)
d189 3
a191 1
cnspeed(dev_t dev, int sp)
@


1.22.4.5
log
@Merge with the trunk
@
text
@d76 1
a76 1

d115 1
a115 1
	switch (c) {
d127 1
a127 1
		while (++pch_pos % 8);
d150 1
a150 1
		return c;
d154 1
a154 1
	return c;
d163 3
a165 3
	    cdevs[major(cn_tab->cn_dev)], minor(cn_tab->cn_dev));

	return ttyname_buf;
d177 1
a177 1
		return NODEV;
d181 1
a181 1
	return NODEV;
d188 1
a188 2
		return (comspeed(dev, sp));

@


1.21
log
@put support for test /boot environment back; some CLEANFILES and spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.20 1998/04/18 07:39:49 deraadt Exp $	*/
d4 1
a4 1
 * Copyright (c) 1996 Michael Shalayeff
d17 1
a17 1
 *	This product includes software developed by Michael Shalayeff.
d21 11
a31 12
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
d71 1
a71 1
			printf(" %s", dp->dv_name);
d79 1
a79 1
			printf(":%d", rc);
@


1.20
log
@i386 bootblocks that work for 2.3. A tale too long to tell
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.19 1997/08/22 00:38:35 mickey Exp $	*/
d50 1
a50 1
	"", "", "", "", "", "", "", "",
@


1.19
log
@don't echo all the control chars, not only bs&del
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.18 1997/08/21 22:19:33 mickey Exp $	*/
d118 2
d122 1
a122 1
	register int c;
a123 2
	static int pos = 0;

d130 2
a131 2
		if (pos)
			pos--;
d136 1
a136 1
		while(++pos % 8);
d141 1
a141 1
		pos=0;
d145 1
a145 1
		pos++;
d166 1
d171 1
a171 3
	static char buf[8];

	sprintf(buf, "%s%d", cdevs[major(cn_tab->cn_dev)],
d173 1
a173 1
	return (buf);
@


1.18
log
@\n is handled by cnputc(), don't print \r
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.17 1997/08/13 14:24:02 niklas Exp $	*/
d120 1
a120 1
	register int	c;
d153 1
a153 4
	int c = cngetc();

	if (c == '\b' || c == '\177')
		return(c);
d157 3
@


1.17
log
@s/kbd/pc/ for consistency with kernel.  Do even better __asms for BIOS calls.
Adapt to new console probing and setting API.  Do not try to probe pc0 via
the NVRAM.  Fix some other buglets.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.16 1997/08/12 22:14:36 mickey Exp $	*/
a138 1
		cnputc('\r');
@


1.16
log
@revert to prev-cons behaviour
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.15 1997/08/12 21:44:29 mickey Exp $	*/
d37 2
d49 6
d171 22
a192 1
	return "tty";
@


1.15
log
@new cons
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.14 1997/07/21 15:32:14 mickey Exp $	*/
d154 1
a154 1
	cnputc(c);
@


1.14
log
@add nbdevs for the size of table of block devises' names
remove bogus codeseg
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.13 1997/07/17 23:00:27 mickey Exp $	*/
d112 1
a112 1
	int	c;
d118 6
a123 3
		putc('\b');
		putc(' ');
		putc('\b');
d127 1
a127 1
			putc(' ');
d131 1
a131 1
		putc('\r');
d133 1
a133 1
		putc(c);
d137 1
a137 1
		putc(c);
d146 1
a146 1
	int c = getc();
d154 1
a154 1
	putchar(c);
d159 6
@


1.13
log
@proper includes
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.12 1997/06/06 16:26:57 kstailey Exp $	*/
d41 1
a41 1
const char bdevs[19][4] = {
d45 1
@


1.12
log
@fix twiddle() without breaking backspace
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.11 1997/05/29 04:35:29 mickey Exp $	*/
d35 1
a35 1
#include <libsa.h>
@


1.11
log
@do \b
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.10 1997/04/23 06:49:07 mickey Exp $	*/
d116 1
a116 1
	case '\b':	/* BS erases */
@


1.10
log
@implement 'hd' device (i guess nobody will boot from 'rd')
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.9 1997/04/17 21:28:22 deraadt Exp $	*/
d116 5
@


1.9
log
@fix tab expansion
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.8 1997/04/15 21:35:13 mickey Exp $	*/
d40 1
d43 1
a43 1
	"", "", "", "", "", "", "", "scd", "", "", "acd"
@


1.8
log
@extern int debug;
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.7 1997/04/15 03:31:06 mickey Exp $	*/
d116 1
a116 1
		while(++pos % 8)
d118 1
@


1.7
log
@print debugging stuff only when debug!=0
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.6 1997/04/08 22:48:28 mickey Exp $	*/
d37 2
@


1.6
log
@use new device names: fd(0,a) -> fd0a
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.5 1997/04/07 02:07:06 weingart Exp $	*/
d53 2
a54 1
	printf("devopen:");
d59 2
a60 1
		printf(" %s", dp->dv_name);
d67 1
a67 1
		else
d73 2
a74 1
	putchar('\n');
@


1.5
log
@Fix device name.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.4 1997/04/06 20:08:25 mickey Exp $	*/
a97 3
#ifndef _TEST
	*p++ = '(';
#endif
a98 3
#ifndef _TEST
	*p++ = ',';
#endif
a99 3
#ifndef _TEST
	*p++ = ')';
#endif
@


1.4
log
@devboot commit
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.3 1997/03/31 23:06:28 mickey Exp $	*/
d98 3
d102 3
d106 3
@


1.3
log
@commit all my mods to the last imported libsa stuff....
including:
- disklabel support;
- better boot cmd line
- smaller size (using some compilation switches ;)
- no more relocations in /boot, it's loaded in the place;
- better disk performance (maybe were already in there)
- installboot -n does not require write perms for device
- more debugs
- missing parts in libsa (such as cd9660 and so)
- i don't like 2 files for exec_i386 (sorry, toby, let's discuss maybe?)
tricks and tails:
- joined .text and .data (saves you a page)
- prot mode switching still in biosboot (it's freezed for awhile)
- biosdisk internals changed
- biosdev is not passed propery to the kernel (i'll fix it soon)
- sure i missed smth here to note (use the source, Luke!)
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.1.2.2 1996/12/03 13:13:46 mickey Exp $	*/
d52 8
a59 1
	for (i = 0; i < ndevs && rc != 0; dp++, i++)
d63 6
d70 3
d78 23
@


1.2
log
@Initial /boot stuff (from Mickey)
@
text
@d38 5
d48 1
a48 1
	register int i, rc = 0;
d52 2
a53 2
	for (i = 0; i < ndevs ; dp++, i++)
		if ((rc = (*dp->dv_open)(f, file))== 0) {
d56 1
a56 1
		}
d68 8
a75 2
	putc(c);
	if (c == '\n')
d77 9
d103 1
@


1.1
log
@file dev_i386.c was initially added on branch new.
@
text
@d1 82
@


1.1.2.1
log
@support libsa
@
text
@a0 158
/*	$OpenBSD$	*/

/*
 * Copyright (c) 1996 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <libsa.h>
#include "biosdev.h"

/* pass dev_t to the open routines */
int
devopen(struct open_file *f, const char *fname, char **file)
{
	struct devsw *dp;
	char	*cp = (char *)fname;

	/* search for device specification */
	while (*cp != 0 && *cp != '(')
		cp++;
	if (*cp == 0)	/* no dev */
		cp = (char *)fname;
	else {
		if (*cp++ == '(') {
			char **devp = (char **)devs;

			for (; *devp != NULL && 
				(fname[0] != (*devp)[0] ||
				 fname[1] != (*devp)[1]); devp++)
				;
			if (*devp == NULL) {
				printf("Unknown device");
				errno = ENXIO;
				return -1;
			}
			maj = devp - (char **)devs;
		}
		/* check syntax */
		if (cp[1] != ',' || cp[3] != ')') {
			printf("Syntax error\n");
			errno = EINVAL;
			return -1;
		}

		/* get unit */
		if ('0' <= *cp && *cp <= '9')
			unit = *cp++ - '0';
		else {
			printf("Bad unit number\n");
			errno = ENXIO;
			return -1;
		}
		cp++;	/* skip ',' */
		/* get partition */
		if ('a' <= *cp && *cp <= 'p')
			part = *cp++ - 'a';
		else {
			printf("Bad partition id\n");
			errno = ENXIO;
			return -1;
		}
		cp++;	/* skip ')' */
		if (*cp == 0) {
			errno = EINVAL;
			return -1;
		}

	}

	switch (maj) {
	case 0:
	case 4:
		bootdev = unit | 0x80;
		break;
	case 1:
		bootdev = unit | 0x80;
		unit = 0;
		break;
	case 2:
		bootdev = unit;
		break;
	case 3:
#ifdef DEBUG
		printf("Wangtek is unsupported\n");
#endif
		errno = ENXIO;
		return -1;
	default:
		break;
	}

	*file = (char *)fname;
	f->f_dev = dp = &devsw[0];

	return (*dp->dv_open)(f, *file);
}

void
putchar(c)
	int	c;
{
	if (c == '\n')
		putc('\r');
	putc(c);
}

#ifndef	STRIPPED
int
getchar()
{
	int c = getc();

	if (c == '\b' || c == '\177')
		return(c);

	if (c == '\r')
		c = '\n';

	putchar(c);

	return(c);
}

void
wait(n)
	int	n;
{
	while (n-- && !ischar())
		usleep(10);
}
#endif
@


1.1.2.2
log
@standalone build, some changes and cleanups, debugs and so.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.1.2.1 1996/10/29 09:23:02 mickey Exp $	*/
d134 1
d158 1
@
