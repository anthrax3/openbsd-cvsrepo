head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	SMP:1.5.0.2;
locks; strict;
comment	@# @;


1.5
date	97.04.15.20.01.57;	author mickey;	state dead;
branches;
next	1.4;

1.4
date	97.04.04.17.23.31;	author weingart;	state Exp;
branches;
next	1.3;

1.3
date	97.03.31.23.06.32;	author mickey;	state dead;
branches;
next	1.2;

1.2
date	97.03.31.05.52.25;	author weingart;	state Exp;
branches;
next	1.1;

1.1
date	97.03.31.03.12.17;	author weingart;	state Exp;
branches;
next	;


desc
@@


1.5
log
@no more assembly setup. all the gung is ok already in srt0.S
this is what we were talking about, toby (;
and this shaves a couple of dozens of bytes!
@
text
@/*	$OpenBSD: startprog.S,v 1.4 1997/04/04 17:23:31 weingart Exp $	*/

#include <machine/asm.h>


/*
 * startprog(phyaddr, argv)
 *	start the program on protected mode where phyaddr is the entry point
 */
ENTRY(startprog)
	pushl	%ebp
	movl	%esp, %ebp

	# get things we need into registers
	movl	8(%ebp), %ecx		# entry offset 
	movl	12(%ebp), %eax		# &argv

	# make a new stack at 0:0x90000 (big segs)
	movl	$0x10, %ebx
	movw	%bx, %ss
	movl	$0x90000, %ebx
	movl	%ebx, %esp

	# push some number of args onto the stack
	pushl	28(%eax)		# argv[7] = cnvmem
	pushl	32(%eax)		# argv[8] = extmem
	pushl	16(%eax)		# argv[4] = esym
	pushl	12(%eax)		# argv[3] = cyl offset
	pushl	8(%eax)			# argv[2] = bootdev
	pushl	4(%eax)			# argv[1] = howto
	pushl	$0			# dummy 'return' address

	# push on our entry address
	movl	$0x8, %ebx		# segment
	pushl	%ebx
	pushl	%ecx

	# convert over the other data segs
	movl	$0x10, %ebx
	movl	%bx, %ds
	movl	%bx, %es
	movl	%bx, %ss
	movl	%bx, %fs
	movl	%bx, %gs

	# convert the PC (and code seg)
	lret

@


1.4
log
@Replace exec_i386.S with these two files.  Startprog.S is a
stopgap measure, to be removed once I get locore.s done.
@
text
@d1 1
a1 1
/*	$OpenBSD: startprog.S,v 1.3 1997/03/31 23:06:32 mickey dead $	*/
@


1.3
log
@commit all my mods to the last imported libsa stuff....
including:
- disklabel support;
- better boot cmd line
- smaller size (using some compilation switches ;)
- no more relocations in /boot, it's loaded in the place;
- better disk performance (maybe were already in there)
- installboot -n does not require write perms for device
- more debugs
- missing parts in libsa (such as cd9660 and so)
- i don't like 2 files for exec_i386 (sorry, toby, let's discuss maybe?)
tricks and tails:
- joined .text and .data (saves you a page)
- prot mode switching still in biosboot (it's freezed for awhile)
- biosdisk internals changed
- biosdev is not passed propery to the kernel (i'll fix it soon)
- sure i missed smth here to note (use the source, Luke!)
@
text
@d1 1
a1 1
/*	$OpenBSD: startprog.S,v 1.2 1997/03/31 05:52:25 weingart Exp $	*/
d35 1
a35 1
	pushl	%bx
d42 3
@


1.2
log
@Move closer to boot/.  Add some debug stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: startprog.S,v 1.1 1997/03/31 03:12:17 weingart Exp $	*/
@


1.1
log
@Initial /boot stuff (from Mickey)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 1
a35 1
	pushw	%bx
@
