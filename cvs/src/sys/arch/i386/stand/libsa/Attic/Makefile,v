head	1.51;
access;
symbols
	OPENBSD_5_2:1.47.0.22
	OPENBSD_5_2_BASE:1.47
	OPENBSD_5_1_BASE:1.47
	OPENBSD_5_1:1.47.0.20
	OPENBSD_5_0:1.47.0.18
	OPENBSD_5_0_BASE:1.47
	OPENBSD_4_9:1.47.0.16
	OPENBSD_4_9_BASE:1.47
	OPENBSD_4_8:1.47.0.14
	OPENBSD_4_8_BASE:1.47
	OPENBSD_4_7:1.47.0.10
	OPENBSD_4_7_BASE:1.47
	OPENBSD_4_6:1.47.0.12
	OPENBSD_4_6_BASE:1.47
	OPENBSD_4_5:1.47.0.8
	OPENBSD_4_5_BASE:1.47
	OPENBSD_4_4:1.47.0.6
	OPENBSD_4_4_BASE:1.47
	OPENBSD_4_3:1.47.0.4
	OPENBSD_4_3_BASE:1.47
	OPENBSD_4_2:1.47.0.2
	OPENBSD_4_2_BASE:1.47
	OPENBSD_4_1:1.46.0.2
	OPENBSD_4_1_BASE:1.46
	OPENBSD_4_0:1.45.0.6
	OPENBSD_4_0_BASE:1.45
	OPENBSD_3_9:1.45.0.4
	OPENBSD_3_9_BASE:1.45
	OPENBSD_3_8:1.45.0.2
	OPENBSD_3_8_BASE:1.45
	OPENBSD_3_7:1.44.0.4
	OPENBSD_3_7_BASE:1.44
	OPENBSD_3_6:1.44.0.2
	OPENBSD_3_6_BASE:1.44
	SMP_SYNC_A:1.43
	SMP_SYNC_B:1.43
	OPENBSD_3_5:1.43.0.2
	OPENBSD_3_5_BASE:1.43
	OPENBSD_3_4:1.42.0.2
	OPENBSD_3_4_BASE:1.42
	UBC_SYNC_A:1.40
	OPENBSD_3_3:1.39.0.4
	OPENBSD_3_3_BASE:1.39
	OPENBSD_3_2:1.39.0.2
	OPENBSD_3_2_BASE:1.39
	OPENBSD_3_1:1.38.0.10
	OPENBSD_3_1_BASE:1.38
	UBC_SYNC_B:1.39
	UBC:1.38.0.8
	UBC_BASE:1.38
	OPENBSD_3_0:1.38.0.6
	OPENBSD_3_0_BASE:1.38
	OPENBSD_2_9:1.38.0.4
	OPENBSD_2_9_BASE:1.38
	OPENBSD_2_8:1.38.0.2
	OPENBSD_2_8_BASE:1.38
	OPENBSD_2_7:1.36.0.6
	OPENBSD_2_7_BASE:1.36
	SMP:1.36.0.4
	SMP_BASE:1.36
	kame_19991208:1.36
	OPENBSD_2_6:1.36.0.2
	OPENBSD_2_6_BASE:1.36
	OPENBSD_2_5:1.35.0.4
	OPENBSD_2_5_BASE:1.35
	OPENBSD_2_4:1.35.0.2
	OPENBSD_2_4_BASE:1.35
	OPENBSD_2_3:1.30.0.2
	OPENBSD_2_3_BASE:1.30
	OPENBSD_2_2:1.29.0.2
	OPENBSD_2_2_BASE:1.29
	OPENBSD_2_1:1.12.0.2
	OPENBSD_2_1_BASE:1.12;
locks; strict;
comment	@# @;


1.51
date	2012.10.30.12.21.22;	author jsing;	state dead;
branches;
next	1.50;

1.50
date	2012.10.30.11.08.27;	author jsing;	state Exp;
branches;
next	1.49;

1.49
date	2012.08.29.22.23.08;	author pascal;	state Exp;
branches;
next	1.48;

1.48
date	2012.08.21.14.46.18;	author pascal;	state Exp;
branches;
next	1.47;

1.47
date	2007.05.30.01.25.43;	author tom;	state Exp;
branches;
next	1.46;

1.46
date	2006.09.18.21.14.15;	author mpf;	state Exp;
branches;
next	1.45;

1.45
date	2005.07.30.14.32.46;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	2004.06.26.05.19.37;	author tom;	state Exp;
branches;
next	1.43;

1.43
date	2004.03.19.13.48.18;	author tom;	state Exp;
branches;
next	1.42;

1.42
date	2003.08.08.07.38.45;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2003.06.01.17.00.35;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2003.04.17.03.43.18;	author drahn;	state Exp;
branches;
next	1.39;

1.39
date	2002.06.20.20.22.58;	author weingart;	state Exp;
branches;
next	1.38;

1.38
date	2000.10.25.17.12.07;	author mickey;	state Exp;
branches
	1.38.8.1;
next	1.37;

1.37
date	2000.10.09.20.37.18;	author mickey;	state Exp;
branches;
next	1.36;

1.36
date	99.08.25.00.54.19;	author mickey;	state Exp;
branches
	1.36.4.1;
next	1.35;

1.35
date	98.07.20.18.14.55;	author mickey;	state Exp;
branches;
next	1.34;

1.34
date	98.05.30.02.30.49;	author mickey;	state Exp;
branches;
next	1.33;

1.33
date	98.05.30.01.47.36;	author mickey;	state Exp;
branches;
next	1.32;

1.32
date	98.05.28.20.52.38;	author mickey;	state Exp;
branches;
next	1.31;

1.31
date	98.05.25.19.20.50;	author mickey;	state Exp;
branches;
next	1.30;

1.30
date	98.02.24.22.06.42;	author weingart;	state Exp;
branches;
next	1.29;

1.29
date	97.10.22.23.34.35;	author mickey;	state Exp;
branches;
next	1.28;

1.28
date	97.10.17.18.46.54;	author weingart;	state Exp;
branches;
next	1.27;

1.27
date	97.10.17.15.03.20;	author weingart;	state Exp;
branches;
next	1.26;

1.26
date	97.09.21.10.02.08;	author mickey;	state Exp;
branches;
next	1.25;

1.25
date	97.09.02.20.58.15;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	97.08.27.21.08.49;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	97.08.13.04.03.30;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	97.08.13.03.28.11;	author mickey;	state Exp;
branches;
next	1.21;

1.21
date	97.08.12.21.39.00;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	97.08.12.19.24.56;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	97.08.12.19.05.57;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	97.08.07.01.11.53;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	97.08.02.22.23.09;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	97.07.18.01.09.53;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	97.07.18.00.37.15;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	97.07.17.23.20.24;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	97.06.23.23.45.17;	author kstailey;	state Exp;
branches;
next	1.12;

1.12
date	97.04.30.18.10.08;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	97.04.28.07.39.00;	author weingart;	state Exp;
branches;
next	1.10;

1.10
date	97.04.18.02.14.28;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	97.04.18.01.28.01;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	97.04.15.20.01.55;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.04.05.21.29.49;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	97.04.05.18.56.22;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.04.01.04.52.44;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.03.31.23.06.25;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.03.31.05.52.24;	author weingart;	state Exp;
branches;
next	1.2;

1.2
date	97.03.31.03.12.08;	author weingart;	state Exp;
branches;
next	1.1;

1.1
date	96.12.03.13.13.40;	author mickey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.12.03.13.13.41;	author mickey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	96.12.15.15.49.37;	author mickey;	state Exp;
branches;
next	;

1.36.4.1
date	2001.04.18.16.08.41;	author niklas;	state Exp;
branches;
next	1.36.4.2;

1.36.4.2
date	2003.03.27.23.26.56;	author niklas;	state Exp;
branches;
next	1.36.4.3;

1.36.4.3
date	2003.05.13.19.42.09;	author ho;	state Exp;
branches;
next	1.36.4.4;

1.36.4.4
date	2003.06.07.11.11.38;	author ho;	state Exp;
branches;
next	1.36.4.5;

1.36.4.5
date	2004.02.19.10.48.43;	author niklas;	state Exp;
branches;
next	1.36.4.6;

1.36.4.6
date	2004.06.05.23.09.01;	author niklas;	state Exp;
branches;
next	;

1.38.8.1
date	2002.10.29.00.28.04;	author art;	state Exp;
branches;
next	1.38.8.2;

1.38.8.2
date	2003.05.19.21.45.12;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.51
log
@Actually remove the Makefiles.
@
text
@@


1.50
log
@Remove the now unused i386 libsa/libz Makefiles.

ok deraadt@@
@
text
@@


1.49
log
@Kill all NOPIE and NOPIE_FLAGS in i386/stand, replacing them with -fno-pie
and -nopie directly.  Binaries from a PIE system are identical to those from
a recent snapshot.

ok deraadt@@
@
text
@a0 64
#	$OpenBSD: Makefile,v 1.48 2012/08/21 14:46:18 pascal Exp $

.include "${.CURDIR}/../Makefile.inc"

LIB=	sa

S=${.CURDIR}/../../../..
SADIR=${.CURDIR}/..

# i386 stuff (so, it will possibly load in the same 64k)
SRCS+=	machdep.c dev_i386.c exec_i386.c cmd_i386.c loadfile.c elf32.c elf64.c

.if defined(DEBUGFLAGS) && !empty(DEBUGFLAGS:M-D_TEST)
SRCS+=	unixdev.c unixsys.S nullfs.c memprobe.c
CLEANFILES+=	gidt.o debug_i386.o alloca.o \
	biosdev.o bioscons.o gateA20.o apmprobe.o \
	cpuprobe.o memprobe.o diskprobe.o smpprobe.o \
	time.o biosprobe.o
.else
SRCS+=	gidt.S debug_i386.S alloca.S \
	biosdev.c bioscons.c gateA20.c apmprobe.c \
	cpuprobe.c memprobe.c diskprobe.c pciprobe.c smpprobe.c \
	time.c biosprobe.c ps2probe.c pxe.c pxe_net.c pxe_call.S
CLEANFILES+=	unixdev.o unixsys.o nullfs.o
.endif

# stand routines
SRCS+=	alloc.c exit.c getfile.c gets.c globals.c strcmp.c strlen.c \
	strncmp.c memcmp.c memcpy.c memset.c printf.c snprintf.c \
	strerror.c strncpy.c strtol.c strtoll.c ctime.c

# io routines
SRCS+=	close.c closeall.c dev.c disklabel.c dkcksum.c fstat.c ioctl.c lseek.c \
	open.c read.c stat.c write.c cread.c readdir.c cons.c

# network routines
SRCS+=	arp.c ether.c in_cksum.c net.c netif.c rpc.c

# network info services
SRCS+=	bootp.c bootparam.c rarp.c

# boot filesystems
SRCS+=	ufs.c nfs.c tftp.c cd9660.c

# debugger
SRCS+=	debug.c

NOPROFILE=noprofile
NOPIC=nopic

.PATH:  $S/lib/libsa

all: ${SALIB}

install:

.include <bsd.lib.mk>

CPPFLAGS+=-DLINKADDR=${LINKADDR} -DHEAP_LIMIT=${HEAP_LIMIT} ${DEBUGFLAGS}
CPPFLAGS+=-I${S}/stand/boot #-DCOMPAT_UFS
CFLAGS+=${SACFLAGS} -D__INTERNAL_LIBSA_CREAD -fno-pie
#AS=cat ; 
#AS+=	-R
#AS+=	-a
@


1.48
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.47 2007/05/30 01:25:43 tom Exp $
a49 1
NOPIE=
d61 1
a61 1
CFLAGS+=${SACFLAGS} -D__INTERNAL_LIBSA_CREAD
@


1.47
log
@Pull out the ELF loadfile pieces from the standalone libraries, so that
both 32- and 64-bit versions can be created (previously only one or the
other could be built for a given boot loader).

Use this to allow the i386 and amd64 boot blocks to boot both ELF32 and
ELF64 kernels (i.e. amd64 boot blocks can now load i386 kernels, and
vice versa).  Obviously the system must support LONG mode in order to
successfully run the amd64 kernel once it is loaded.

Advice and discussions from/with dale@@ (going back three years).  Much
testing nick@@ and todd@@; thanks.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2006/09/18 21:14:15 mpf Exp $
d50 1
@


1.46
log
@boot(8) ``machine memory'' support for > 4G.
Convert parser to strtoll(3) and use 64bit printf.
With help from mickey@@
i386 and amd64 tests by me, alpha test by mickey@@
OK mickey@@, miod@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2005/07/30 14:32:46 millert Exp $
d11 1
a11 1
SRCS+=	machdep.c dev_i386.c exec_i386.c cmd_i386.c loadfile.c
@


1.45
log
@Add libkern and link it in after libz
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2004/06/26 05:19:37 tom Exp $
d30 1
a30 1
	strerror.c strncpy.c strtol.c ctime.c
@


1.44
log
@Initial stab at CPU identification code for i386 boot programs.  Added
to i386 libsa, but not yet used by boot etc.

ok weingart@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2004/03/19 13:48:18 tom Exp $
a8 2
DIR_SA=	$S/lib/libsa
DIR_KERN=$S/lib/libkern
d30 1
a30 1
	strerror.c strncpy.c strtol.c ctime.c strlcpy.c strlcat.c
d51 1
a51 1
.PATH:  ${DIR_SA} ${DIR_KERN}
@


1.43
log
@Enter pxeboot, derived from the NetBSD implementation.  Initially
intended to support network installs using bsd.rd over TFTP.

Thanks to the many who tested, including Diana Eichert.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2003/08/08 07:38:45 deraadt Exp $
d19 1
a19 1
	memprobe.o diskprobe.o smpprobe.o \
d24 1
a24 1
	memprobe.c diskprobe.c pciprobe.c smpprobe.c \
@


1.42
log
@let us call COMPAT_UFS dead
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2003/06/01 17:00:35 deraadt Exp $
d25 1
a25 1
	time.c biosprobe.c
d45 1
a45 1
SRCS+=	ufs.c nfs.c cd9660.c
@


1.41
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2003/04/17 03:43:18 drahn Exp $
d62 1
a62 1
CPPFLAGS+=-I${S}/stand/boot -DCOMPAT_UFS
@


1.40
log
@i386 ELF bootloader. developed with weingart@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2002/06/20 20:22:58 weingart Exp $
d31 2
a32 2
	strncmp.c memcmp.c memcpy.c memset.c printf.c strerror.c strncpy.c \
	strtol.c ctime.c
@


1.39
log
@Fix 4GB memory probing and other memory probing issues.
Outstanding issue is with Compaq 16MB detection problem.
ok deraadt@@, and various people from the 'net.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2000/10/25 17:12:07 mickey Exp $
d13 1
a13 1
SRCS+=	machdep.c dev_i386.c exec_i386.c cmd_i386.c
d32 1
a32 1
	strtol.c ctime.c exec.new.c exec_aout.c
@


1.38
log
@add pciprobe back into /boot.
it appears there are machines only equipped w/ real-mode pci bios.
int time, we will benefit from this the other way around, --
we'll elliminate pci bios _calls_ in kernel instead.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2000/10/09 20:37:18 mickey Exp $
d20 1
a20 1
	time.o
d25 1
a25 1
	time.c
@


1.38.8.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2000/10/25 17:12:07 mickey Exp $
d20 1
a20 1
	time.o biosprobe.o
d25 1
a25 1
	time.c biosprobe.c
@


1.38.8.2
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
a13 1
SRCS+=	machdep.c dev_i386.c exec_i386.c cmd_i386.c loadfile.c
d32 1
a32 1
	strtol.c ctime.c
@


1.37
log
@pcibios kernel device is now doing this job
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 1999/08/25 00:54:19 mickey Exp $
d24 1
a24 1
	memprobe.c diskprobe.c smpprobe.c \
@


1.36
log
@give better support to the bios memory maps.
provide memory maps editing through the machine memory command.
rearrange probing in machdep, so it provides less output,
also giving a shot for apm to fix the memory maps.
changes to kernel are minimal, only that is required due
to the api version bits addition and such cosmetic changes.
tested on all critical kernel,boot combinations; niklas@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 1998/07/20 18:14:55 mickey Exp $
d19 1
a19 1
	memprobe.o diskprobe.o pciprobe.o smpprobe.o \
d24 1
a24 1
	memprobe.c diskprobe.c pciprobe.c smpprobe.c \
@


1.36.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2000/10/25 17:12:07 mickey Exp $
d19 1
a19 1
	memprobe.o diskprobe.o smpprobe.o \
@


1.36.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
d20 1
a20 1
	time.o biosprobe.o
d25 1
a25 1
	time.c biosprobe.c
@


1.36.4.3
log
@Sync the SMP branch to -current, plus some ELF-related fixes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36.4.2 2003/03/27 23:26:56 niklas Exp $
d13 1
a13 1
SRCS+=	machdep.c dev_i386.c exec_i386.c cmd_i386.c loadfile.c
d32 1
a32 1
	strtol.c ctime.c
@


1.36.4.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36.4.3 2003/05/13 19:42:09 ho Exp $
d31 2
a32 2
	strncmp.c memcmp.c memcpy.c memset.c printf.c snprintf.c \
	strerror.c strncpy.c strtol.c ctime.c strlcpy.c strlcat.c
@


1.36.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD$
d62 1
a62 1
CPPFLAGS+=-I${S}/stand/boot #-DCOMPAT_UFS
@


1.36.4.6
log
@Merge with the trunk
@
text
@d25 1
a25 1
	time.c biosprobe.c ps2probe.c pxe.c pxe_net.c pxe_call.S
d45 1
a45 1
SRCS+=	ufs.c nfs.c tftp.c cd9660.c
@


1.35
log
@new exec framework
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 1998/05/30 02:30:49 mickey Exp $
d16 1
a16 1
SRCS+=	unixdev.c unixsys.S nullfs.c
@


1.34
log
@no math needed for cd9660 any more
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 1998/05/30 01:47:36 mickey Exp $
d30 1
a30 1
SRCS+=	alloc.c exit.c exec.c getfile.c gets.c globals.c strcmp.c strlen.c \
d32 1
a32 1
	strtol.c ctime.c
d62 1
a62 1
CPPFLAGS+=-I${S}/stand/boot
@


1.33
log
@compile ctime.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 1998/05/28 20:52:38 mickey Exp $
a32 3

# math for cd9660
#SRCS+=	divdi3.c qdivrem.c
@


1.32
log
@cleanup the Makefiles a bit.
make machine link in a smart way, remove unused bits.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 1998/05/25 19:20:50 mickey Exp $
d32 1
a32 1
	strtol.c
@


1.31
log
@put support for test /boot environment back; some CLEANFILES and spaces
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 1998/02/24 22:06:42 weingart Exp $
a10 1
CLEANFILES=i386 machine
d58 1
a58 6
all: machine-links ${SALIB}

machine-links:
	@@rm -f machine i386
	@@ln -s ${.CURDIR}/../.. i386
	@@ln -s ${.CURDIR}/../../include machine
@


1.30
log
@Changes/updates to /boot stuff.  More to come.
Fixes many divide by zero and pointer bugs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 1997/10/22 23:34:35 mickey Exp $
d3 1
d11 1
d13 2
a14 3
#AS=cat ; 
#AS+=	-R
#AS+=	-a
d16 8
a23 3
# i386 stuff (so, it will possibly load in the same 64k)
SRCS=	gidt.S debug_i386.S alloca.S \
	machdep.c dev_i386.c exec_i386.c cmd_i386.c \
d27 2
d73 3
@


1.29
log
@newer, better stuff; some parts by toby@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 1997/10/17 18:46:54 weingart Exp $
d19 2
a20 1
	memprobe.c diskprobe.c time.c
d24 2
a25 1
	strncmp.c memcmp.c memcpy.c memset.c printf.c strerror.c strncpy.c
@


1.28
log
@Cleanup, make it all compile.
Move APM stuff to apmprobe.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 1997/10/17 15:03:20 weingart Exp $
d26 1
a26 1
SRCS+=	divdi3.c qdivrem.c
@


1.27
log
@Use BIOS to probe for memory map.
Probe for BIOS supported disks.
Use BIOS to get geometry for supported disks.

All in preparation to passing the whole thing
to the kernel.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 1997/09/21 10:02:08 mickey Exp $
d18 1
a18 1
	biosdev.c bioscons.c gateA20.c smpprobe.c \
@


1.26
log
@/boot engine is in sys/stand/boot/ now (;
use it, reuse it, i can't imagine any brokenness ...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 1997/09/02 20:58:15 mickey Exp $
d18 2
a19 1
	biosdev.c bioscons.c gateA20.c memprobe.c time.c
@


1.25
log
@machine diskinfo command, toby is filling w/ meat at the moment
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 1997/08/27 21:08:49 mickey Exp $
d60 1
a60 1
CPPFLAGS+=-I${.CURDIR}/../boot
@


1.24
log
@don't mess w/ debugging symbols
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 1997/08/13 04:03:30 mickey Exp $
d17 2
a18 2
	machdep.c dev_i386.c exec_i386.c biosdev.c gateA20.c memprobe.c \
	bioscons.c time.c
d60 1
@


1.23
log
@split off START into LINKADDR and LOADADDR (we will need reloctable boot)
BOOTREL as a linear address, not segment one
more heap (;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 1997/08/13 03:28:11 mickey Exp $
d41 1
a41 1
SRCS+=	debug.c debug_aout.c
@


1.22
log
@inline apm calls
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 1997/08/12 21:39:00 mickey Exp $
d16 3
a18 3
SRCS=	unixsys.S gidt.S debug_i386.S \
	bioscons.c dev_i386.c exec_i386.c biosdev.c gateA20.c memprobe.c \
	time.c alloca.S machdep.c
d59 1
a59 1
CPPFLAGS+=-DSTART=${START} -DHEAP_LIMIT=${HEAP_LIMIT} ${DEBUGFLAGS}
@


1.21
log
@new cons
do inline BIOS calls
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 1997/08/12 19:24:56 mickey Exp $
d18 1
a18 1
	time.c alloca.S apm_init.S machdep.c
@


1.20
log
@call BIOS inline (add struct EDD_cb into biosvar.h)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 1997/08/12 19:05:57 mickey Exp $
d16 2
a17 2
SRCS=	unixsys.S bioscom.S bioskbd.S gidt.S \
	debug_i386.S dev_i386.c exec_i386.c biosdev.c gateA20.c memprobe.c \
@


1.19
log
@move that inline
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 1997/08/07 01:11:53 mickey Exp $
d16 1
a16 1
SRCS=	unixsys.S bioscom.S biosdisk.S bioskbd.S gidt.S \
@


1.18
log
@no more biosmem.S
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 1997/08/02 22:23:09 mickey Exp $
d16 1
a16 1
SRCS=	unixsys.S bioscom.S biosdisk.S bioskbd.S biostime.S gidt.S \
@


1.17
log
@move kentry() in boot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 1997/07/18 01:09:53 mickey Exp $
d16 1
a16 1
SRCS=	unixsys.S bioscom.S biosdisk.S bioskbd.S biostime.S biosmem.S gidt.S \
@


1.16
log
@kernel entry proto
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1997/07/18 00:37:15 mickey Exp $
d18 1
a18 1
	time.c alloca.S apm_init.S machdep.c kentry.c 
@


1.15
log
@yet another small step towards MI boot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1997/07/17 23:20:24 mickey Exp $
d18 1
a18 1
	time.c alloca.S apm_init.S machdep.c # kentry.c 
@


1.14
log
@proper variable handling
add apm_init.S
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1997/06/23 23:45:17 kstailey Exp $
d18 1
a18 1
	time.c alloca.S apm_init.S # kentry.c machdep.c
@


1.13
log
@remove @@obj dependency
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/04/30 18:10:08 mickey Exp $
d11 3
a13 6
CFLAGS+=$(SACFLAGS) -D__INTERNAL_LIBSA_CREAD
CFLAGS+=-DSTART=$(START) -DHEAP_LIMIT=$(HEAP_LIMIT)
CFLAGS+=${DEBUGFLAGS} -I${.CURDIR} -I${.CURDIR}/..
CFLAGS+=-I$(S)/lib/libsa -I$(S)
AS+=	-R
#AS+=	-Wa,-a
d18 1
a18 1
	time.c alloca.S
d52 2
a53 2
	@@ln -s ${S}/arch/i386 i386
	@@ln -s ${S}/arch/i386/include machine
d58 3
@


1.12
log
@solve the bounce buffer problem!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/04/28 07:39:00 weingart Exp $
d7 1
@


1.11
log
@Add getsecs().  Use biostime & biosdate routines.
Parse and convert to seconds since epoch.  Please
test, there is a new command "time", which should
print the current time (according to the BIOS) on
the console.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/04/18 02:14:28 mickey Exp $
d20 1
a20 1
	time.c
@


1.10
log
@no assembly listing
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/04/18 01:28:01 mickey Exp $
d19 2
a20 1
	debug_i386.S dev_i386.c exec_i386.c biosdev.c gateA20.c memprobe.c
@


1.9
log
@no more 60k limit!
no more explicit real<-->prot switching!
fix 2.88 floppy drives.....
kbd fixes coming soon!
test it!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1997/04/15 20:01:55 mickey Exp $
d15 1
a15 1
AS+=	-Wa,-a
@


1.8
log
@no more assembly setup. all the gung is ok already in srt0.S
this is what we were talking about, toby (;
and this shaves a couple of dozens of bytes!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/04/05 21:29:49 mickey Exp $
d11 1
a11 1
CFLAGS+=-DHEAP_START=$(HEAP_START) -DHEAP_LIMIT=$(HEAP_LIMIT)
d15 5
a19 1
#AS+=	-Wa,-a
d22 1
a22 1
SRCS=	alloc.c exit.c exec.c getfile.c gets.c globals.c strcmp.c strlen.c \
d42 1
a42 6
SRCS+=	debug.c debug_aout.c debug_i386.S

# i386 stuff
SRCS+=	asm.S bioscom.S biosdev.c biosdisk.S bioskbd.S biostime.S biosmem.S \
	dev_i386.c gateA20.c memprobe.c real_prot.S unixsys.S exec_i386.c \
	gidt.S
@


1.7
log
@new exec stuff
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/04/05 18:56:22 mickey Exp $
d43 1
a43 1
	startprog.S gidt.S
@


1.6
log
@put gdt & idt in the separate file.
print trapno in dump_regs.
no more NO_IDTR.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/04/01 04:52:44 mickey Exp $
d42 2
a43 2
	dev_i386.c gateA20.c memprobe.c real_prot.S unixsys.S exec_i386.S \
	gidt.S
@


1.5
log
@debugger started.
only one entry for now:
chek_regs (use DUMP_REGS macro instead)
	dumps registers. must be called by lcall or so (to push %cs)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/03/31 23:06:25 mickey Exp $
d42 2
a43 1
	dev_i386.c gateA20.c memprobe.c real_prot.S unixsys.S exec_i386.S
@


1.4
log
@commit all my mods to the last imported libsa stuff....
including:
- disklabel support;
- better boot cmd line
- smaller size (using some compilation switches ;)
- no more relocations in /boot, it's loaded in the place;
- better disk performance (maybe were already in there)
- installboot -n does not require write perms for device
- more debugs
- missing parts in libsa (such as cd9660 and so)
- i don't like 2 files for exec_i386 (sorry, toby, let's discuss maybe?)
tricks and tails:
- joined .text and .data (saves you a page)
- prot mode switching still in biosboot (it's freezed for awhile)
- biosdisk internals changed
- biosdev is not passed propery to the kernel (i'll fix it soon)
- sure i missed smth here to note (use the source, Luke!)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/03/31 05:52:24 weingart Exp $
d6 4
d13 1
a13 1
CFLAGS+=-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libsa
a16 4
S=${.CURDIR}/../../../..
DIR_SA=	$S/lib/libsa
DIR_KERN=$S/lib/libkern

d36 3
@


1.3
log
@Move closer to boot/.  Add some debug stuff
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/03/31 03:12:08 weingart Exp $
d4 1
a4 1
LIB= sa
d6 2
a7 7
CFLAGS+=-Wall
#CFLAGS+=-DBIOS_DEBUG
#CFLAGS+=-DEXEC_DEBUG
CFLAGS+=-DNO_IDTR
CFLAGS+=-DHEAP_START="0x10000"
CFLAGS+=-DHEAP_LIMIT="0xa0000"
CFLAGS+=-D__INTERNAL_LIBSA_CREAD
d10 1
d14 1
a14 1
DIR_SA=$S/lib/libsa
d18 5
a22 2
SRCS=   alloc.c exit.c exec.c getfile.c gets.c globals.c strcmp.c \
        strncmp.c memcmp.c memcpy.c memset.c printf.c strerror.c strncpy.c
d25 2
a26 2
SRCS+=  close.c closeall.c dev.c disklabel.c dkcksum.c fstat.c ioctl.c lseek.c \
        open.c read.c stat.c write.c cread.c readdir.c cons.c
d29 1
a29 1
SRCS+=  arp.c ether.c in_cksum.c net.c netif.c rpc.c
d32 1
a32 1
SRCS+=  bootp.c bootparam.c rarp.c
d35 1
a35 1
SRCS+=  ufs.c nfs.c
d38 2
a39 3
SRCS+= asm.S bioscom.S biosdev.c biosdisk.S bioskbd.S biostime.S startprog.S \
	dev_i386.c exec_i386.c gateA20.c memprobe.c memsize.S probe_keyboard.c \
	real_prot.S srt0.S unixsys.S
d46 8
a53 1
all: ${SALIB}
a55 1

@


1.2
log
@Initial /boot stuff (from Mickey)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.2.2 1996/12/15 15:49:37 mickey Exp $
d8 1
a8 1
CFLAGS+=-DEXEC_DEBUG
@


1.1
log
@file Makefile was initially added on branch new.
@
text
@d1 51
@


1.1.2.1
log
@standalone build, some changes and cleanups, debugs and so.
@
text
@a0 15
#	$OpenBSD$

CFLAGS+=-O2 -DNO_IDTR

S	= ${.CURDIR}/../../../..
SAREL=/
SADST=.
.include "${S}/lib/libsa/Makefile.inc"

all: ${SALIB}

.include <bsd.obj.mk>
.include <bsd.dep.mk>
.include <bsd.subdir.mk>
.include <bsd.sys.mk>
@


1.1.2.2
log
@protected mode problems fixed for biosboot (now it works!!!)
libsa.a(cd9660.o) requires libkern.a -- removed from conf.c
installboot changed according to the biosboot changes.
-Wall in libsa/Makefile, cleanup!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.2.1 1996/12/03 13:13:41 mickey Exp $
d3 1
a3 1
CFLAGS+=-O2 -DNO_IDTR -Wall
@

