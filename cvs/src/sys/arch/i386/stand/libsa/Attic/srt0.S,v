head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@# @;


1.3
date	97.03.31.23.06.31;	author mickey;	state dead;
branches;
next	1.2;

1.2
date	97.03.31.03.12.16;	author weingart;	state Exp;
branches;
next	1.1;

1.1
date	96.10.29.09.23.18;	author mickey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.10.29.09.23.19;	author mickey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	96.12.03.13.13.51;	author mickey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	97.01.23.06.57.32;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@commit all my mods to the last imported libsa stuff....
including:
- disklabel support;
- better boot cmd line
- smaller size (using some compilation switches ;)
- no more relocations in /boot, it's loaded in the place;
- better disk performance (maybe were already in there)
- installboot -n does not require write perms for device
- more debugs
- missing parts in libsa (such as cd9660 and so)
- i don't like 2 files for exec_i386 (sorry, toby, let's discuss maybe?)
tricks and tails:
- joined .text and .data (saves you a page)
- prot mode switching still in biosboot (it's freezed for awhile)
- biosdisk internals changed
- biosdev is not passed propery to the kernel (i'll fix it soon)
- sure i missed smth here to note (use the source, Luke!)
@
text
@/*	$OpenBSD: srt0.S,v 1.2 1997/03/31 03:12:16 weingart Exp $	*/
/*	$NetBSD: srt0.c,v 1.3 1994/10/27 04:21:59 cgd Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)srt0.c	5.3 (Berkeley) 4/28/91
 */

/*
 * Startup code for standalone system
 * Non-relocating version -- for programs which are loaded by boot
 * Relocating version for boot
 * Small relocating version for "micro" boot
 */

#include <machine/psl.h>

	.globl	_end
	.globl	_edata
	.globl	_boot
	.globl	__rtt
	.globl	_bootdev
	.globl	_boothowto
	.globl	_cyloffset

	.data
	.globl	_Gdtr
_Gdtr:
	.long	0
	.word	0
_bootdev:	.long	0
_boothowto:	.long	0
_cyloffset:	.long	0
_esym:		.long	0

	.text

#define	NOP	inb $0x84,%al ; inb $0x84,%al

	.globl	start_boot

start_boot:
	pushl	%ebp
	movl	%esp, %ebp

	/* First, reset the PSL. */
	pushl	$PSL_MBO
	popfl

	movl    8(%ebp), %eax
	movl	%eax, _boothowto
	movl    12(%ebp),%eax
	movl    %eax, _bootdev
	movl    16(%ebp),%eax
	movl    %eax, _cyloffset
	movl    20(%ebp),%eax
	movl    %eax, _esym

	/* save old stack state */
	movl	%esp,savearea
	movl	%ebp,savearea+4

#if 0
	/* setup stack pointer */
	movl	_end, %eax
	addl	$10000, %eax
	movl	%eax, %esp

	/* clear memory as needed */
	movl	%esp,%esi
	movl	$_edata,%edx

	movl	%esp,%eax
	subl	%edx,%eax
	pushl	%edx
	pushl	0
	pushl	%esp
	call	_memset

	#call	_kbdreset	/* resets keyboard and gatea20 brain damage */
	movl	%esi,%esp
#endif
	call	_boot
	jmp	__rtt

	.data

savearea:	.long	0,0	# sp & bp to return to

	.text

__rtt:
	movl	$-7,%eax
#ifdef	REL
#ifndef SMALL
	call	_reset_cpu
#endif
	movw	$0x1234,%ax
	movw	%ax,0x472	# warm boot
	movl	$0,%esp		# segment violation
	ret
#else
	movl	savearea,%esp
	movl	savearea+4,%ebp
	ret
#endif
@


1.2
log
@Initial /boot stuff (from Mickey)
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.1.2.3 1997/01/23 06:57:32 mickey Exp $	*/
@


1.1
log
@file srt0.S was initially added on branch new.
@
text
@d1 139
@


1.1.2.1
log
@support libsa
@
text
@a0 203
/*	$NetBSD: srt0.c,v 1.3 1994/10/27 04:21:59 cgd Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)srt0.c	5.3 (Berkeley) 4/28/91
 */

/*
 * Startup code for standalone system
 * Non-relocating version -- for programs which are loaded by boot
 * Relocating version for boot
 * Small relocating version for "micro" boot
 */

#include <machine/psl.h>

	.globl	_end
	.globl	_edata
	.globl	_boot
	.globl	__rtt
	.globl	_bootdev
	.globl	_boothowto
	.globl	_cyloffset
	.globl	_cnvmem
	.globl	_extmem
	.data
	.globl	_Gdtr
_Gdtr:
	.long	0
	.word	0
_bootdev:	.long	0
_boothowto:	.long	0
_cyloffset:	.long	0
_esym:		.long	0

	.text

#define	NOP	inb $0x84,%al ; inb $0x84,%al

	.globl	start

start:
	/* First, reset the PSL. */
	pushl	$PSL_MBO
	popfl

	#cmpl	8, (%esp)
	#jne	1f

	movl    4(%esp), %eax
	movl	%eax, _boothowto
	movl    8(%esp),%eax
	movl    %eax, _bootdev
	movl    12(%esp),%eax
	movl    %eax, _cyloffset
	movl    16(%esp),%eax
	movl    %eax, _esym

	/* save old stack state */
	movl	%esp,savearea
	movl	%ebp,savearea+4

#if 0
	/* setup stack pointer */
	movl	_end, %eax
	addl	$10000, %eax
	movl	%eax, %esp

	/* clear memory as needed */
	movl	%esp,%esi
	movl	$_edata,%edx

	movl	%esp,%eax
	subl	%edx,%eax
	pushl	%edx
	pushl	%esp
	call	_bzero

	#call	_kbdreset	/* resets keyboard and gatea20 brain damage */
	movl	%esi,%esp
#endif
	call	_boot
	jmp	__rtt

	.data

savearea:	.long	0,0	# sp & bp to return to

	.text
	.globl _wait

__rtt:
	pushl	$1000000
	call	_wait
	popl	%eax
	movl	$-7,%eax
#ifdef	REL
#ifndef SMALL
	call	_reset_cpu
#endif
	movw	$0x1234,%ax
	movw	%ax,0x472	# warm boot
	movl	$0,%esp		# segment violation
	ret
#else
	movl	savearea,%esp
	movl	savearea+4,%ebp
	ret
#endif

	.globl	_inb
_inb:	movl	4(%esp),%edx
	subl	%eax,%eax	# clr eax
	NOP
	inb	%dx,%al
	ret

	.globl	_outb
_outb:	movl	4(%esp),%edx
	NOP
	movl	8(%esp),%eax
	outb	%al,%dx
	ret

	.globl ___udivsi3
___udivsi3:
	movl 4(%esp),%eax
	xorl %edx,%edx
	divl 8(%esp)
	ret

	.globl ___divsi3
___divsi3:
	movl 4(%esp),%eax
	xorl %edx,%edx
	cltd
	idivl 8(%esp)
	ret

	.globl	_insw
_insw:
	pushl	%edi
	movw	8(%esp),%dx
	movl	12(%esp),%edi
	movl	16(%esp),%ecx
	NOP
	cld
	nop
	.byte 0x66,0xf2,0x6d	# rep insw
	nop
	movl	%edi,%eax
	popl	%edi
	ret

	# outsw(port,addr,cnt)
	.globl	_outsw
_outsw:
	pushl	%esi
	movw	8(%esp),%dx
	movl	12(%esp),%esi
	movl	16(%esp),%ecx
	NOP
	cld
	nop
	.byte 0x66,0xf2,0x6f	# rep outsw
	nop
	movl	%esi,%eax
	popl	%esi
	ret

@


1.1.2.2
log
@standalone build, some changes and cleanups, debugs and so.
@
text
@a0 1
/*	$OpenBSD$	*/
d57 2
a58 1

d76 1
a76 3
	pushl	%ebp
	movl	%esp, %ebp
	/* First, reset the PSL.
a78 4
	*/

	movl	$0xb8000, %ebx
	movl	$0x32323434, (%ebx)
d80 2
a81 1
	hlt
d83 1
a83 1
	movl    8(%ebp), %eax
d85 1
a85 1
	movl    12(%ebp),%eax
d87 1
a87 1
	movl    16(%ebp),%eax
d89 1
a89 1
	movl    20(%ebp),%eax
@


1.1.2.3
log
@no bzero no more.
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.1.2.2 1996/12/03 13:13:51 mickey Exp $	*/
d78 1
a78 2

	/* First, reset the PSL. */
d81 6
a113 1
	pushl	0
d115 1
a115 1
	call	_memset
@
