head	1.21;
access;
symbols
	OPENBSD_6_1:1.21.0.16
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.12
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.8
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.10
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.19.0.4
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.2
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.10
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.6
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.4
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.8
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.10
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.9.0.8
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.10
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.8
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	libsa:1.4.4.3
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.21
date	2014.01.20.08.49.58;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2014.01.20.08.43.11;	author jsing;	state Exp;
branches;
next	1.19;

1.19
date	2013.01.18.04.10.16;	author jsing;	state Exp;
branches;
next	1.18;

1.18
date	2012.10.30.11.08.27;	author jsing;	state Exp;
branches;
next	1.17;

1.17
date	2012.10.12.14.00.02;	author jsing;	state Exp;
branches;
next	1.16;

1.16
date	2010.03.04.22.13.57;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.25.18.25.31;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2005.07.30.17.25.19;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.23.00.29.56;	author tom;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.19.13.48.18;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.10.22.17.38;	author weingart;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.26.11.50.46;	author deraadt;	state Exp;
branches
	1.9.8.1;
next	1.8;

1.8
date	98.02.24.22.06.36;	author weingart;	state Exp;
branches
	1.8.10.1;
next	1.7;

1.7
date	97.07.28.22.03.25;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	97.03.31.03.11.58;	author weingart;	state Exp;
branches;
next	1.5;

1.5
date	97.03.31.02.41.44;	author weingart;	state dead;
branches;
next	1.4;

1.4
date	96.09.27.15.46.32;	author niklas;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	96.09.18.08.48.33;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.03.19.21.10.00;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.52;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.52;	author deraadt;	state Exp;
branches;
next	;

1.4.4.1
date	96.10.16.08.51.13;	author mickey;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	96.10.16.10.20.45;	author mickey;	state Exp;
branches;
next	1.4.4.3;

1.4.4.3
date	96.10.29.09.15.45;	author mickey;	state Exp;
branches;
next	1.4.4.4;

1.4.4.4
date	96.10.29.10.27.37;	author mickey;	state Exp;
branches;
next	1.4.4.5;

1.4.4.5
date	96.12.03.13.16.44;	author mickey;	state Exp;
branches;
next	;

1.8.10.1
date	2001.04.18.16.08.37;	author niklas;	state Exp;
branches;
next	1.8.10.2;

1.8.10.2
date	2003.03.27.23.26.56;	author niklas;	state Exp;
branches;
next	1.8.10.3;

1.8.10.3
date	2004.06.05.23.09.00;	author niklas;	state Exp;
branches;
next	;

1.9.8.1
date	2002.10.29.00.28.04;	author art;	state Exp;
branches;
next	;


desc
@@


1.21
log
@These fd0 testing things are not used
@
text
@#	$OpenBSD: Makefile,v 1.20 2014/01/20 08:43:11 jsing Exp $

.if ${MACHINE} == "i386"
SUBDIR=	mbr cdbr
.endif
SUBDIR+=biosboot boot cdboot fdboot pxeboot

.include <bsd.subdir.mk>
@


1.20
log
@Unlink the old amd64/i386 installboot.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2013/01/18 04:10:16 jsing Exp $
a6 13

test-fd0:
	sudo mount /dev/fd0a /mnt
	sudo cp /usr/mdec/fdboot /mnt/boot
	sudo /usr/mdec/installboot -v /mnt/boot /usr/mdec/biosboot fd0
	sudo umount /mnt

zero-fd0:
	sudo dd if=/dev/zero of=/dev/rfd0a count=144 bs=10240

prep-fd0:
	sudo disklabel -w fd0 floppy
	sudo newfs -O 0 -m 0 -o space -i 3000 -c 80 /dev/rfd0a
@


1.19
log
@Generate assym.h where we need it, instead of reaching around into other
object directories.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2012/10/30 11:08:27 jsing Exp $
d6 1
a6 1
SUBDIR+=biosboot boot cdboot fdboot installboot pxeboot
@


1.18
log
@Remove the now unused i386 libsa/libz Makefiles.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2012/10/12 14:00:02 jsing Exp $
d4 1
a4 1
SUBDIR=	etc mbr cdbr
d6 1
a6 1
SUBDIR+= biosboot boot cdboot fdboot installboot pxeboot
@


1.17
log
@Build a 'fdboot' that will be used for floppy disk media. This can be made
smaller than the normal 'boot', however for now it is identical.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2007/11/25 18:25:31 deraadt Exp $
d4 1
a4 1
SUBDIR=	etc libsa libz mbr cdbr
@


1.16
log
@has been no -r flag for a few years; J.C. Roberts
@
text
@d6 1
a6 1
SUBDIR+= biosboot installboot boot pxeboot cdboot
d10 1
a10 1
	sudo cp /usr/mdec/boot /mnt
@


1.15
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2007/04/13 17:34:40 millert Exp $
d18 1
a18 1
	sudo disklabel -rw fd0 floppy
@


1.14
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2005/07/30 17:25:19 millert Exp $
d4 1
a4 1
SUBDIR=	etc libsa libkern libz mbr cdbr
@


1.13
log
@build libkern
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2004/06/23 00:29:56 tom Exp $
d19 1
a19 1
	sudo newfs -O -m 0 -o space -i 3000 -c 80 /dev/rfd0a
@


1.12
log
@Hook cdbr and cdboot into the build (though nothing uses them yet).

suggested by deraadt@@  ok weingart@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2004/03/19 13:48:18 tom Exp $
d4 1
a4 1
SUBDIR=	etc libsa libz mbr cdbr
@


1.11
log
@Enter pxeboot, derived from the NetBSD implementation.  Initially
intended to support network installs using bsd.rd over TFTP.

Thanks to the many who tested, including Diana Eichert.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/06/10 22:17:38 weingart Exp $
d4 1
a4 1
SUBDIR=	etc libsa libz mbr
d6 1
a6 1
SUBDIR+= biosboot installboot boot pxeboot
@


1.10
log
@Maintain my sanity.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2000/05/26 11:50:46 deraadt Exp $
d6 1
a6 1
SUBDIR+= biosboot installboot boot
@


1.9
log
@more portable manual pages
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1998/02/24 22:06:36 weingart Exp $
d13 7
@


1.9.8.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2000/05/26 11:50:46 deraadt Exp $
a12 7

zero-fd0:
	sudo dd if=/dev/zero of=/dev/rfd0a count=144 bs=10240

prep-fd0:
	sudo disklabel -rw fd0 floppy
	sudo newfs -O -m 0 -o space -i 3000 -c 80 /dev/rfd0a
@


1.8
log
@Changes/updates to /boot stuff.  More to come.
Fixes many divide by zero and pointer bugs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/07/28 22:03:25 mickey Exp $
d3 4
a6 1
SUBDIR=	etc libsa libz biosboot installboot boot mbr
@


1.8.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2000/05/26 11:50:46 deraadt Exp $
d3 1
a3 4
.if ${MACHINE} == "i386"
SUBDIR=	etc libsa libz mbr
.endif
SUBDIR+= biosboot installboot boot
@


1.8.10.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
a12 7

zero-fd0:
	sudo dd if=/dev/zero of=/dev/rfd0a count=144 bs=10240

prep-fd0:
	sudo disklabel -rw fd0 floppy
	sudo newfs -O -m 0 -o space -i 3000 -c 80 /dev/rfd0a
@


1.8.10.3
log
@Merge with the trunk
@
text
@d6 1
a6 1
SUBDIR+= biosboot installboot boot pxeboot
@


1.7
log
@generate assym.h
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/03/31 03:11:58 weingart Exp $
d4 6
@


1.6
log
@Initial /boot stuff (from Mickey)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4.4.5 1996/12/03 13:16:44 mickey Exp $
d3 1
a3 1
SUBDIR=	libsa libz biosboot installboot boot mbr
@


1.5
log
@Prepare for /boot stuff...
@
text
@d1 1
a1 2
#	$NetBSD: Makefile,v 1.6 1996/02/01 22:31:28 mycroft Exp $
#	@@(#)Makefile	7.9 (Berkeley) 5/8/91
d3 1
a3 111
S	= ${.CURDIR}/../../..
I386	= ${.CURDIR}/..
CSH	= csh
RMHDR	= ${CSH} ${.CURDIR}/../boot/rmaouthdr
STAND=	/sys/stand
INCPATH=-I${.CURDIR} -I${S} -I${S}/arch -I${S}/ufs -I${S} -I${STAND}
VPATH=	${STAND}
STANDDIR= ${DESTDIR}/usr/mdec

AFLAGS+=	-v -Wa,-a -D_LOCORE
CFLAGS+=	-m386 -O6 -D_STANDALONE -DAT386 -O ${INCPATH}
#CPPFLAGS+=	${INCPATH} -D_KERNEL -DRELOC=0x${RELOC}
CPPFLAGS+=	${INCPATH} -DRELOC=0x${RELOC}
LDADD+=		${LIBC}

RELOC=	98000
RELOC2=	98200

DRIVERS=cga.c fd.c kbd.c wd.c sd.c cd.c
ZLIB=	zlib.c
BOOTS=	fdbootblk.S wdbootblk.S sdbootblk.c cdbootblk.S
SRCS=	boot.c prf.c srt0.S ${BOOTS} ${ZLIB} ${DRIVERS}

CLEANFILES+=	*.o conf[fwsc]d.c bread[fwsc]d.c \
		[fwsc]dboot boot[fwsc]d boot[fwsc]d.sym boot[fwsc]d.c

WDOBJS=	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o wd.o breadwd.o clock.o
FDOBJS=	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o fd.o breadfd.o clock.o
SDOBJS=	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o sd.o breadsd.o clock.o
CDOBJS=	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o cd.o breadcd.o clock.o

.PATH: ${I386}/isa ${S}/net

ALL=	wdboot bootwd fdboot bootfd # sdboot bootsd cdboot bootcd
all:	${ALL}

# startups

wsrt0.o: ${.CURDIR}/srt0.S
	${CC} -c ${CPPFLAGS} ${AFLAGS} -DREL -DSMALL -o ${.TARGET} ${.CURDIR}/srt0.S

relsrt0.o: ${.CURDIR}/srt0.c
	${CC} -c ${CFLAGS} -DREL -o ${.TARGET} ${.CURDIR}/srt0.S

# getting booted from disc

wdboot: wdbootblk.o
	${LD} -N -T ${RELOC} wdbootblk.o
	rm -f ${.TARGET}
	strip a.out
	${RMHDR} a.out ${.TARGET}
	rm -f a.out
	ls -l ${.TARGET}

bootwd.sym bootwd:	${WDOBJS}
	${LD} -T ${RELOC2} ${WDOBJS} ${LDADD}
	cp a.out bootwd.sym
	size a.out
	rm -f $@@; strip a.out; ${RMHDR} a.out $@@; rm -f a.out; ls -l $@@

fdboot: fdbootblk.o
	${LD} -N -T ${RELOC} fdbootblk.o
	rm -f $@@; strip a.out; ${RMHDR} a.out $@@; rm -f a.out; ls -l $@@

bootfd.sym bootfd:	${FDOBJS}
	${LD} -N -T ${RELOC2} ${FDOBJS} ${LDADD}
	cp a.out bootfd.sym
	size a.out
	rm -f $@@; strip a.out; ${RMHDR} a.out $@@; rm -f a.out; ls -l $@@

sdboot:	sdbootblk.o
	${LD} -N -T 7c00 sdbootblk.o
	rm -f $@@; strip a.out; ${RMHDR} a.out $@@; rm -f a.out; ls -l $@@

bootsd.sym bootsd:	${SDOBJS}
	${LD} -N -T ${RELOC2} ${SDOBJS} ${LDADD}
	cp a.out bootsd.sym
	size a.out
	rm -f $@@; strip a.out; ${RMHDR} a.out $@@; rm -f a.out; ls -l $@@

breadwd.o: breadwd.c breadxx.o
breadfd.o: breadfd.c breadxx.o
breadsd.o: breadsd.c breadxx.o

breadxx.o:
	touch breadxx.o

breadwd.c: ${.CURDIR}/breadxx.c
	@@rm -f breadwd.c
	sed -e 's/XX/wd/' -e 's/xx/wd/g' < ${.CURDIR}/breadxx.c >> breadwd.c

breadfd.c: ${.CURDIR}/breadxx.c
	rm -f breadfd.c
	sed -e 's/XX/fd/' -e 's/xx/fd/g' < ${.CURDIR}/breadxx.c >> breadfd.c

breadsd.c: ${.CURDIR}/breadxx.c
	rm -f breadsd.c
	sed -e 's/XX/as/' -e 's/xx/as/g' < ${.CURDIR}/breadxx.c >> breadsd.c

#clean:

.MAKE:  make.out                      
make.out::
	rm -f ${OBJS}
	${MAKE} ${.MAKEFLAGS} ${OBJS} > make.out


install: ${ALL}
	install -c ${ALL} ${STANDDIR}

.include <bsd.prog.mk>
d5 1
@


1.4
log
@Do not count on x perms being there for rmaouthdr
@
text
@@


1.4.4.1
log
@make a ral stand
@
text
@d1 1
a1 1
#	$OpenBSD$
a4 1
SAREL	=
d6 2
d9 1
a9 1
INCPATH=-I. -I${SADIR} -I${S}
d13 13
a25 18
DEBUG=	-g -DDEBUG
DEBUG+=	-DARP_DEBUG
DEBUG+=	-DRARP_DEBUG
DEBUG+=	-DNET_DEBUG
DEBUG+=	-DNETIF_DEBUG
DEBUG+=	-DETHER_DEBUG
DEBUG+=	-DEXEC_DEBUG
DEBUG+=	-DBOOTP_DEBUG
DEBUG+=	-DNFS_DEBUG
DEBUG+=	-DRPC_DEBUG

# AFLAGS=	-v -Wa,-a
CFLAGS=	-Wall -m386 -O2 -D_STANDALONE -DAT386 -O ${INCPATH}
CPPFLAGS=	${DEBUG} ${INCPATH} -DRELOC=0x${RELOC}

.include "${S}/lib/libsa/Makefile.inc"
LDADD=		${SALIB}
DPADD=		${SALIB}
d27 7
a33 1
SRCS=	srt0.S boot.c fs.c dev.c biosdev.c bios.S ${ZLIB} version.c
d35 1
a35 2
CLEANFILES+=	*.o *.h bread[fwsc]d.c \
		[fwsc]dboot boot[fwsc]d boot[fwsc]d.sym boot[fwsc]d.c
d37 2
a38 15
OBJS=	srt0.o boot.o zlib.o
OBJS+=	fs.o dev.o biosdev.o bios.o
#clock.o
OBJS+=	machdep.o real_prot.o

.PATH: ${S}/net
# ${I386}/i386 ${I386}/isa ${S}/dev/isa ${S}/kern

ALL=	boot
all:	config ${ALL}

config:
	@@rm -f i386 machine
	@@ln -fs ${I386} i386
	@@ln -fs ${I386}/include machine
d42 5
a46 2
srt0.o: ${.CURDIR}/srt0.S
	${CC} -c ${CPPFLAGS} ${AFLAGS} -o ${.TARGET} ${.CURDIR}/srt0.S
d50 52
a101 4
boot:	${OBJS} ${DPADD} version.o
	${LD} -o $@@ -N -T 0x90000 ${OBJS} ${LDADD} version.o
	size $@@
	ls -l $@@
d103 1
a103 2
install: ${ALL}
	install -c ${ALL} ${STANDDIR}
d105 1
d110 3
a112 1
clean::
a115 1
.MAKE:  make.out                      
@


1.4.4.2
log
@cleanup according to the libsa
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4.4.1 1996/10/16 08:51:13 mickey Exp $
d5 1
a26 1
SAREL=
d33 3
d37 1
a37 1
OBJS+=	fs.o dev.o biosdev.o bios.o netif.o
d39 1
@


1.4.4.3
log
@support boot and new boot.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4.4.2 1996/10/16 10:20:45 mickey Exp $
d7 1
a7 1
INCPATH=-I${SADIR} -I${S} -I${.CURDIR}/libsa
d31 1
a31 1
SRCS=	boot.c conf.c biosdev.c bios.S ${ZLIB} version.c
d33 2
a34 1
OBJS=	boot.o zlib.o conf.o
d56 1
a56 1
	${LD} -o $@@ -N -T 0x10000 ${OBJS} ${LDADD} version.o
@


1.4.4.4
log
@don't load idt if NO_IDTR defined.
syntax error in conf.c
shave some bytes in *.S files.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4.4.3 1996/10/29 09:15:45 mickey Exp $
d24 1
a24 1
CPPFLAGS=	${DEBUG} ${INCPATH} -DRELOC=0x${RELOC} -DNO_IDTR
@


1.4.4.5
log
@new hierarchy. raw /boot loading, just 1(one) boot stage.
@
text
@d1 2
a2 1
#	$OpenBSD$
d4 6
a9 1
SUBDIR=	libsa biosboot boot installboot
d11 60
a70 1
.include <bsd.subdir.mk>
@


1.3
log
@compiles now.
@
text
@d6 2
a7 1
RMHDR	= ${.CURDIR}/../boot/rmaouthdr
d15 2
a16 1
CPPFLAGS+=	${INCPATH} -D_KERNEL -DRELOC=0x${RELOC}
@


1.2
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d4 3
a6 2
DESTDIR=/usr
LD=/usr/bin/ld
d8 1
a8 1
INCPATH=-I/sys/sys -I/sys -I/sys/ufs  -I${STAND}
d10 1
a10 1
STANDDIR= ${DESTDIR}/mdec
d12 4
a15 2
CC=	cc -traditional
CPP=	cpp -traditional ${INCPATH} -DSTANDALONE -DAT386
d20 12
a31 1
CFLAGS=	-DSTANDALONE -DAT386 -O ${INCPATH}
d33 1
a33 3
DRIVERS=cga.c fd.c kbd.c wd.c as.c
SRCS=	boot.c fdbootblk.c prf.c \
	srt0.c wdbootblk.c ${DRIVERS} ${SASRC}
d35 2
a36 3
ALL= wdboot bootwd fdboot bootfd asboot bootas

all: ${ALL}
d40 2
a41 17
srt0.o: srt0.c
	${CPP} -E -D_LOCORE -DRELOC=0x${RELOC} srt0.c | ${AS} -o srt0.o

wsrt0.o: srt0.c
	${CPP} -E -D_LOCORE -DSMALL -DRELOC=0x${RELOC} -DREL srt0.c | \
	    ${AS} -o wsrt0.o

relsrt0.o: srt0.c
	${CPP} -E -D_LOCORE -DRELOC=0x${RELOC} -DREL srt0.c | ${AS} -o relsrt0.o

# block 0 boots

wdbootblk.o: wdbootblk.c 
	${CPP} -E -D_LOCORE -DRELOC=0x${RELOC} wdbootblk.c | ${AS} -o $@@

fdbootblk.o: fdbootblk.c 
	${CPP} -E -D_LOCORE -DRELOC=0x${RELOC} fdbootblk.c | ${AS} -o $@@
d43 2
a44 2
asbootblk.o: asbootblk.c 
	cc -c -O -DRELOC=0x${RELOC} ${INCPATH} asbootblk.c
d48 1
a48 1
wdboot: wdbootblk.o trimhd
d50 9
a58 5
	rm -f $@@; strip a.out; trimhd 32 <a.out >$@@; rm -f a.out; ls -l $@@

bootwd:	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o wd.o printf.o breadwd.o trimhd
	${LD} -N -T ${RELOC2} wsrt0.o boot.o bmap.o cga.o kbd.o prf.o printf.o \
		breadwd.o fs.o wd.o -lc
d60 1
a60 1
	rm -f $@@; strip a.out; trimhd 32 <a.out >$@@; rm -f a.out; ls -l $@@
d62 1
a62 1
fdboot: fdbootblk.o trimhd
d64 1
a64 1
	rm -f $@@; strip a.out; trimhd 32 <a.out >$@@; rm -f a.out; ls -l $@@
d66 3
a68 3
bootfd:	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o fd.o printf.o breadfd.o trimhd
	${LD} -N -T ${RELOC2} wsrt0.o boot.o bmap.o cga.o kbd.o prf.o printf.o \
		breadfd.o fs.o fd.o -lc
d70 1
a70 1
	rm -f $@@; strip a.out; trimhd 32 <a.out >$@@; rm -f a.out; ls -l $@@
d72 7
a78 7
asboot:	asbootblk.o trimhd
	${LD} -N -T 7c00 asbootblk.o
	rm -f $@@; strip a.out; trimhd 32 <a.out >$@@; rm -f a.out; ls -l $@@

bootas:	wsrt0.o boot.o bmap.o cga.o fs.o kbd.o prf.o as.o printf.o breadas.o trimhd
	${LD} -N -T ${RELOC2} wsrt0.o boot.o bmap.o cga.o kbd.o prf.o printf.o \
		breadas.o fs.o as.o -lc
d80 1
a80 2
	rm -f $@@; strip a.out; trimhd 32 <a.out >$@@; rm -f a.out; ls -l $@@

d84 1
a84 1
breadas.o: breadas.c breadxx.o
d89 3
a91 3
breadwd.c: breadxx.c
	rm -f breadwd.c
	sed -e 's/XX/wd/' -e 's/xx/wd/g'	< breadxx.c >> breadwd.c
d93 1
a93 1
breadfd.c: breadxx.c
d95 1
a95 1
	sed -e 's/XX/fd/' -e 's/xx/fd/g'	< breadxx.c >> breadfd.c
d97 10
a106 12
breadas.c: breadxx.c
	rm -f breadas.c
	sed -e 's/XX/as/' -e 's/xx/as/g'	< breadxx.c >> breadas.c

trimhd:	trimhd.c
	${CC} ${CFLAGS} -s -o trimhd trimhd.c

clean:
	rm -f *.o *.exe *.i sm_*.c trimhd
	rm -f a.out bfd bwd fdb wdb ${ALL}
	rm -f boot[a-wyz]? boot[a-wyz]?? boot[a-wyz]?.c boot[a-wyz]??.c \
		conf[a-wyz]?.c conf[a-wyz]??.c bread[a-wyz]?.c
a107 2
cleandir: clean
	rm -f ${MAN} tags .depend
d109 4
a112 2
depend: ${SRCS}
	mkdep ${INCPATH} -DSTANDALONE ${SRCS} ${DUMMIES}
a113 2
install: ${ALL}
	cp ${ALL} ${STANDDIR}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.5 1994/10/27 04:21:44 cgd Exp $
d30 1
a30 1
	${CPP} -E -DLOCORE -DRELOC=0x${RELOC} srt0.c | ${AS} -o srt0.o
d33 1
a33 1
	${CPP} -E -DLOCORE -DSMALL -DRELOC=0x${RELOC} -DREL srt0.c | \
d37 1
a37 1
	${CPP} -E -DLOCORE -DRELOC=0x${RELOC} -DREL srt0.c | ${AS} -o relsrt0.o
d42 1
a42 1
	${CPP} -E -DLOCORE -DRELOC=0x${RELOC} wdbootblk.c | ${AS} -o $@@
d45 1
a45 1
	${CPP} -E -DLOCORE -DRELOC=0x${RELOC} fdbootblk.c | ${AS} -o $@@
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

