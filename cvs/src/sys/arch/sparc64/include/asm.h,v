head	1.13;
access;
symbols
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.12
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.3
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.13
date	2017.06.29.17.36.16;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	5ZXnhHEGi66VYL0B;

1.12
date	2017.06.23.09.55.10;	author mpi;	state Exp;
branches;
next	1.11;
commitid	PmdDxRA0CFlVfpQA;

1.11
date	2016.09.25.14.58.00;	author fcambus;	state Exp;
branches;
next	1.10;
commitid	EigQrdBOHNJWegdi;

1.10
date	2016.05.27.16.32.39;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	c5mTYSkstZ7XStNS;

1.9
date	2015.08.30.10.19.49;	author guenther;	state Exp;
branches;
next	1.8;
commitid	8jcHMpj3s6RFn6Dt;

1.8
date	2013.03.28.17.41.04;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2013.02.05.09.33.28;	author mpi;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.22.17.19.35;	author pascal;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.12.01.07.30;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.15.17.23.31;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.20.20.23.52;	author jason;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.08.18.19.49.57;	author art;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.07.58;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2003.03.27.23.42.36;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2004.02.19.10.50.00;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.10.29.00.28.11;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@kill RCSID macros; discussed with millert
@
text
@/*	$OpenBSD: asm.h,v 1.12 2017/06/23 09:55:10 mpi Exp $	*/
/*	$NetBSD: asm.h,v 1.15 2000/08/02 22:24:39 eeh Exp $ */

/*
 * Copyright (c) 1994 Allen Briggs
 * All rights reserved.
 *
 * Gleaned from locore.s and sun3 asm.h which had the following copyrights:
 * locore.s:
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * sun3/include/asm.h:
 * Copyright (c) 1993 Adam Glass
 * Copyright (c) 1990 The Regents of the University of California.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _MACHINE_ASM_H_
#define _MACHINE_ASM_H_

/* Pull in CCFSZ, CC64FSZ, and BIAS from frame.h */
#ifndef _LOCORE
#define _LOCORE
#endif
#include <machine/frame.h>

#define	_C_LABEL(name)		name
#define	_ASM_LABEL(name)	name

#ifdef __PIC__
/*
 * PIC_PROLOGUE() is akin to the compiler generated function prologue for
 * PIC code. It leaves the address of the Global Offset Table in DEST,
 * clobbering register TMP in the process. Using the temporary enables us
 * to work without a stack frame (doing so requires saving %o7) .
 */
#define PIC_PROLOGUE(dest,tmp) \
	sethi %hi(_GLOBAL_OFFSET_TABLE_-4),dest; \
	rd %pc, tmp; \
	or dest,%lo(_GLOBAL_OFFSET_TABLE_+4),dest; \
	add dest,tmp,dest

/*
 * PICCY_SET() does the equivalent of a `set var, %dest' instruction in
 * a PIC-like way, but without involving the Global Offset Table. This
 * only works for VARs defined in the same file *and* in the text segment.
 */
#define PICCY_SET(var,dest,tmp) \
	3: rd %pc, tmp; add tmp,(var-3b),dest
#else
#define PIC_PROLOGUE(dest,tmp)
#define PICCY_OFFSET(var,dest,tmp)
#endif

#define FTYPE(x)		.type x,@@function
#define OTYPE(x)		.type x,@@object

#define	_ENTRY(name) \
	.align 4; .globl name; .proc 1; FTYPE(name); name:

#if defined(PROF) || defined(GPROF)
#define _PROF_PROLOGUE \
	.data; .align 8; 1: .uaword 0; .uaword 0; \
	.text; save %sp,-CC64FSZ,%sp; sethi %hi(1b),%o0; call _mcount; \
	or %o0,%lo(1b),%o0; restore
#else
#define _PROF_PROLOGUE
#endif

#define ENTRY(name)		_ENTRY(_C_LABEL(name)); _PROF_PROLOGUE
#define NENTRY(name)		_ENTRY(_C_LABEL(name))
#define	ASENTRY(name)		_ENTRY(_ASM_LABEL(name)); _PROF_PROLOGUE
#define	FUNC(name)		ASENTRY(name)
#define	END(y)			.size y, . - y
#define RODATA(name)		.align 4; .text; .globl _C_LABEL(name); \
				OTYPE(_C_LABEL(name)); _C_LABEL(name):

#define	STRONG_ALIAS(alias,sym)						\
	.global alias;							\
	alias = sym
#define	WEAK_ALIAS(alias,sym)						\
	.weak alias;							\
	alias = sym

/*
 * WARN_REFERENCES: create a warning if the specified symbol is referenced.
 */
#ifdef __STDC__
#define	WARN_REFERENCES(_sym,_msg)				\
	.section .gnu.warning. ## _sym ; .ascii _msg ; .text
#else
#define	WARN_REFERENCES(_sym,_msg)				\
	.section .gnu.warning./**/_sym ; .ascii _msg ; .text
#endif /* __STDC__ */

#endif /* _MACHINE_ASM_H_ */
@


1.12
log
@Unbreak profiling assembly functions in userland by defining the
correct prologue if compiled with -DPROF.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.11 2016/09/25 14:58:00 fcambus Exp $	*/
a99 5


#define ASMSTR			.asciz

#define RCSID(name)		.asciz name
@


1.11
log
@Remove more duplicated includes

OK jca@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.10 2016/05/27 16:32:39 deraadt Exp $	*/
d84 1
a84 1
#ifdef GPROF
@


1.10
log
@Remove the non ELF macros
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.9 2015/08/30 10:19:49 guenther Exp $	*/
a42 5

#ifndef _LOCORE
#define _LOCORE
#endif
#include <machine/frame.h>
@


1.9
log
@Provide remaining arch with END() macro for setting calculated size on
symbols in ASM

ok deraadt@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.8 2013/03/28 17:41:04 martynas Exp $	*/
a54 1
#ifdef __ELF__
a55 7
#else
#ifdef __STDC__
#define _C_LABEL(name)		_ ## name
#else
#define _C_LABEL(name)		_/**/name
#endif
#endif
a110 1
#ifdef __ELF__
a116 1
#endif
a120 1
#ifdef __ELF__
a127 13
#else
#ifdef __STDC__
#define	__STRING(x)			#x
#define	WARN_REFERENCES(sym,msg)					\
	.stabs msg ## ,30,0,0,0 ;					\
	.stabs __STRING(_ ## sym) ## ,1,0,0,0
#else
#define	__STRING(x)			"x"
#define	WARN_REFERENCES(sym,msg)					\
	.stabs msg,30,0,0,0 ;						\
	.stabs __STRING(_/**/sym),1,0,0,0
#endif /* __STDC__ */
#endif /* __ELF__ */
@


1.8
log
@Add STRONG_ALIAS macros to be used from assembly code in libc and
libm.  While at it, remove now unused workarounds for lint.
Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.7 2013/02/05 09:33:28 mpi Exp $	*/
d110 1
@


1.7
log
@Do not profile the various ipi functions. This is a requirement for the
upcoming per-CPU profiling modifications and it does not make much sense
to profile such low-level functions anyway.

ok kettenis@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.6 2012/08/22 17:19:35 pascal Exp $	*/
d119 3
@


1.6
log
@Convert cpp | as rules in bsd.lib.mk and lib/libc/sys/Makefile.inc to pure cc
invocations.  This allows us to use the compiler builtin define __PIC__ to check
for PIC/PIEness rather than passing -DPIC.  Simplifies PIE work a lot.

ok matthew@@, conceptually ok kurt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.5 2011/03/23 16:54:37 pirofti Exp $	*/
d107 1
@


1.5
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.4 2003/06/12 01:07:30 deraadt Exp $	*/
d66 1
a66 1
#ifdef PIC
@


1.4
log
@final bits of obvious UCB term 3 removal
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.3 2002/06/15 17:23:31 art Exp $	*/
d41 2
a42 2
#ifndef _ASM_H_
#define _ASM_H_
d148 1
a148 1
#endif /* _ASM_H_ */
@


1.3
log
@Decruftification.

We will never have a.out kernels.
We will never have 32-bit kernels.
We will never have sun4c, sun4 and sun4m support in the sparc64 kernels.
We don't need support old netbsd libc.
The cpu will never be identified as some of the sun4c and sun4m types.
We don't need the gazillion of fields in cpuinfo that the sparc port uses.
Just generally remove dead code.

This is just a first step in making this meess readable.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.2 2001/08/20 20:23:52 jason Exp $	*/
d24 1
a24 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a51 6

#ifdef __arch64__
#ifndef __ELF__
#define __ELF__
#endif
#endif
@


1.2.6.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.2 2001/08/20 20:23:52 jason Exp $	*/
d52 6
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.2.4.2
log
@Sync the SMP branch with 3.3
@
text
@d53 6
@


1.2.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d24 5
a28 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@More includes from NetBSD.
No modifications.
@
text
@d1 1
@

