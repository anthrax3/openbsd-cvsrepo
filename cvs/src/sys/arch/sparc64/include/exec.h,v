head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.28
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.26
	OPENBSD_5_0:1.7.0.24
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.22
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.20
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.16
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.8
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.5.0.6
	UBC_BASE:1.5
	SMP:1.5.0.4
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5;
locks; strict;
comment	@ * @;


1.11
date	2017.02.08.05.09.26;	author guenther;	state Exp;
branches;
next	1.10;
commitid	V3fgN8BO1mri8xSU;

1.10
date	2015.08.29.01.58.39;	author guenther;	state Exp;
branches;
next	1.9;
commitid	tXJb6vLxru5vPZNh;

1.9
date	2013.06.02.16.40.20;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2012.09.11.15.44.18;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.22.22.06.38;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.15.17.23.31;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.19.20.20.45;	author art;	state Exp;
branches
	1.5.4.1
	1.5.6.1;
next	1.4;

1.4
date	2001.08.19.20.19.03;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.19.20.13.52;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.19.15.22.02;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.18.16.19.28;	author jason;	state Exp;
branches;
next	;

1.5.4.1
date	2001.10.31.03.07.58;	author nate;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2003.03.27.23.42.36;	author niklas;	state Exp;
branches;
next	;

1.5.6.1
date	2002.10.29.00.28.11;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@In exec_elf.c: expand ELFNAME(), ELFNAME2(), and ELFNAMEEND() except
leaving out the size, so that
	ELFNAME2(exec,makecmds)
becomes
	exec_elf_makecmds
instead of
	exec_elf{32,64}_makecmds
and then delete the ELFNAME2() and ELFNAMEEND() macros.

Move the prototypes for functions local to exec_elf.c to there from
exec_elf.h.

Simplify the SMALL_KERNEL conditionals around the ELF coredump code.

Change exec_conf.c to use the size-generic names and macros

Remove exec_elf{32,64}.c and just build exec_elf.c; delete the
_KERN_DO_ELF and _KERN_DO_ELF64 #defines.

ok jca@@, encouragement from deraadt@@ and tom@@
@
text
@/*	$OpenBSD: exec.h,v 1.10 2015/08/29 01:58:39 guenther Exp $	*/
/*	$NetBSD: elf_machdep.h,v 1.7 2001/02/11 00:18:49 eeh Exp $	*/

#define ARCH_ELFSIZE		64	/* MD native binary size */
#define ELF_TARG_CLASS		ELFCLASS64
#define ELF_TARG_MACH		EM_SPARCV9

#define ELF_TARG_DATA		ELFDATA2MSB

/* The following are what is used for AT_SUN_HWCAP: */
#define AV_SPARC_HWMUL_32x32	1	/* 32x32-bit smul/umul is efficient */
#define	AV_SPARC_HWDIV_32x32	2	/* 32x32-bit sdiv/udiv is efficient */
#define	AV_SPARC_HWFSMULD	4	/* fsmuld is efficient */

/*
 * Here are some SPARC specific flags I can't 
 * find a better home for.  They are used for AT_FLAGS
 * and in the exec header.
 */
#define	EF_SPARCV9_MM		0x3
#define	EF_SPARCV9_TSO		0x0
#define	EF_SPARCV9_PSO		0x1
#define	EF_SPARCV9_RMO		0x2

#define EF_SPARC_32PLUS_MASK    0xffff00        /* bits indicating V8+ type */
#define EF_SPARC_32PLUS         0x000100        /* generic V8+ features */
#define EF_SPARC_EXT_MASK       0xffff00        /* bits for vendor extensions */
#define	EF_SPARC_SUN_US1	0x000200	/* UltraSPARC 1 extensions */	
#define	EF_SPARC_HAL_R1		0x000400	/* HAL R1 extensions */
#define	EF_SPARC_SUN_US3	0x000800	/* UltraSPARC 3 extensions */

/* Relocation types */
#define R_SPARC_NONE		0
#define R_SPARC_8		1
#define R_SPARC_16		2
#define R_SPARC_32		3
#define R_SPARC_DISP8		4
#define R_SPARC_DISP16		5
#define R_SPARC_DISP32		6
#define R_SPARC_WDISP30		7
#define R_SPARC_WDISP22		8
#define R_SPARC_HI22		9
#define R_SPARC_22		10
#define R_SPARC_13		11
#define R_SPARC_LO10		12
#define R_SPARC_GOT10		13
#define R_SPARC_GOT13		14
#define R_SPARC_GOT22		15
#define R_SPARC_PC10		16
#define R_SPARC_PC22		17
#define R_SPARC_WPLT30		18
#define R_SPARC_COPY		19
#define R_SPARC_GLOB_DAT	20
#define R_SPARC_JMP_SLOT	21
#define R_SPARC_RELATIVE	22
#define R_SPARC_UA32		23
#define R_SPARC_PLT32		24
#define R_SPARC_HIPLT22		25
#define R_SPARC_LOPLT10		26
#define R_SPARC_PCPLT32		27
#define R_SPARC_PCPLT22		28
#define R_SPARC_PCPLT10		29
#define R_SPARC_10		30
#define R_SPARC_11		31
#define R_SPARC_64		32
#define R_SPARC_OLO10		33
#define R_SPARC_HH22		34
#define R_SPARC_HM10		35
#define R_SPARC_LM22		36
#define R_SPARC_PC_HH22		37
#define R_SPARC_PC_HM10		38
#define R_SPARC_PC_LM22		39
#define R_SPARC_WDISP16		40
#define R_SPARC_WDISP19		41
#define R_SPARC_GLOB_JMP	42
#define R_SPARC_7		43
#define R_SPARC_5		44
#define R_SPARC_6		45
#define	R_SPARC_DISP64		46
#define	R_SPARC_PLT64		47
#define	R_SPARC_HIX22		48
#define	R_SPARC_LOX10		49
#define	R_SPARC_H44		50
#define	R_SPARC_M44		51
#define	R_SPARC_L44		52
#define	R_SPARC_REGISTER	53
#define	R_SPARC_UA64		54
#define	R_SPARC_UA16		55
#define	R_SPARC_TLS_DTPMOD32	74
#define	R_SPARC_TLS_DTPMOD64	75
#define	R_SPARC_TLS_DTPOFF32	76
#define	R_SPARC_TLS_DTPOFF64	77
#define	R_SPARC_TLS_TPOFF32	78
#define	R_SPARC_TLS_TPOFF64	79


#define R_TYPE(name)		__CONCAT(R_SPARC_,name)

#define	__LDPGSZ		8192	/* linker page size */
@


1.10
log
@_NLIST_DO_ELF is no longer needed: it's the only option

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.9 2013/06/02 16:40:20 guenther Exp $	*/
a2 2

#define _KERN_DO_ELF64
@


1.9
log
@Add the TLS relocations
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.8 2012/09/11 15:44:18 deraadt Exp $	*/
a4 1
#define _NLIST_DO_ELF
@


1.8
log
@Remove the 'OLF method' used for the transition from a.out to ELF and
for all the compat layers which are now gone.  Linux compat still works
because it always used another method in any case, and nothing looks at
p_os anymore.
ok jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.7 2006/02/22 22:06:38 miod Exp $	*/
d92 6
@


1.7
log
@Remove long unused ELF{32,64}_MACHDEP macros.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.6 2002/06/15 17:23:31 art Exp $	*/
a3 1
#define NATIVE_EXEC_ELF
@


1.6
log
@Decruftification.

We will never have a.out kernels.
We will never have 32-bit kernels.
We will never have sun4c, sun4 and sun4m support in the sparc64 kernels.
We don't need support old netbsd libc.
The cpu will never be identified as some of the sun4c and sun4m types.
We don't need the gazillion of fields in cpuinfo that the sparc port uses.
Just generally remove dead code.

This is just a first step in making this meess readable.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.5 2001/08/19 20:20:45 art Exp $	*/
a2 12

#define ELF32_MACHDEP_ENDIANNESS	ELFDATA2MSB
#define	ELF32_MACHDEP_ID_CASES						\
		case EM_SPARC:						\
		case EM_SPARC32PLUS:					\
			break;

#define	ELF64_MACHDEP_ENDIANNESS	ELFDATA2MSB
#define	ELF64_MACHDEP_ID_CASES						\
		case EM_SPARC32PLUS:					\
		case EM_SPARCV9:					\
			break;
@


1.5
log
@elf64, not elf.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.4 2001/08/19 20:19:03 art Exp $	*/
a19 1
#ifdef __arch64__
a22 5
#else
#define ARCH_ELFSIZE		32	/* MD native binary size */
#define ELF_TARG_CLASS		ELFCLASS32
#define ELF_TARG_MACH		EM_SPARC
#endif
@


1.5.6.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.5 2001/08/19 20:20:45 art Exp $	*/
d20 1
d24 5
@


1.5.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.5.4.2
log
@Sync the SMP branch with 3.3
@
text
@d20 1
d24 5
@


1.4
log
@_NLIST_DO_ELF and _KERN_DO_ELF are needed too.
This really needs a cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.3 2001/08/19 20:13:52 art Exp $	*/
d17 1
a17 1
#define _KERN_DO_ELF
@


1.3
log
@NATIVE_EXEC_ELF
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.2 2001/08/19 15:22:02 art Exp $	*/
d17 2
@


1.2
log
@match our reality.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.h,v 1.1 2001/08/18 16:19:28 jason Exp $	*/
d15 2
@


1.1
log
@More files needed to compile/link ofwboot
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d18 2
d22 2
d25 2
@

