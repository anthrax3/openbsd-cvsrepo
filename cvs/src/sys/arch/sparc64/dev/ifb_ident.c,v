head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.36
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.34
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.30
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.26
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.28
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2009.06.27.22.43.41;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.29.22.07.35;	author miod;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Stricter checks when deciding which acceleration code to use. Instead of
matching on pci id, and if no match is found, on pci subsystem id, match
on openfirmware device names (which amounts to a pci id AND subsystem id
exact match).

This makes XVR-500 cards (``bobcat'') run without acceleration. Which is
better than trying to use ``jfb'' acceleration and fail.

ok kettenis@@
@
text
@/*	$OpenBSD: ifb_ident.c,v 1.1 2008/12/29 22:07:35 miod Exp $	*/

/*
 * Copyright (c) 2007, 2008 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Identify an Expert3D card.
 * Used by both vgafb and ifb.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/autoconf.h>
#include <machine/openfirm.h>

#include <dev/pci/pcireg.h>
#include <dev/pci/pcivar.h>

#include <dev/wscons/wsdisplayvar.h>
#include <dev/rasops/rasops.h>

#include <machine/fbvar.h>

int
ifb_ident(void *aux)
{
	struct pci_attach_args *paa = aux;
	int node;
	char *name;

	node = PCITAG_NODE(paa->pa_tag);
	name = getpropstring(node, "name");

	if (strcmp(name, "SUNW,Expert3D") == 0 ||
	    strcmp(name, "SUNW,Expert3D-Lite") == 0 ||
	    strcmp(name, "SUNW,XVR-500") == 0 ||
	    strcmp(name, "SUNW,XVR-600") == 0 ||
	    strcmp(name, "SUNW,XVR-1200") == 0)
		return 1;

	return 0;
}
@


1.1
log
@Move ifb identification to its own routine. We can not simply have the ifb
probe win over vgafb, since one may configure a kernel with vgafb but without
ifb (especially slackers who forget to rerun config).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a32 1
#include <dev/pci/pcidevs.h>
a38 7
static const struct pci_matchid ifb_devices[] = {
    { PCI_VENDOR_INTERGRAPH, PCI_PRODUCT_INTERGRAPH_EXPERT3D },
    { PCI_VENDOR_3DLABS,     PCI_PRODUCT_3DLABS_WILDCAT_6210 },
    { PCI_VENDOR_3DLABS,     PCI_PRODUCT_3DLABS_WILDCAT_5110 },/* Sun XVR-500 */
    { PCI_VENDOR_3DLABS,     PCI_PRODUCT_3DLABS_WILDCAT_7210 },
};

a45 4
	if (pci_matchbyid(paa, ifb_devices,
	    sizeof(ifb_devices) / sizeof(ifb_devices[0])) != 0)
		return 1;

d48 1
d50 4
a53 1
	    strcmp(name, "SUNW,Expert3D-Lite") == 0)
@

