head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.16
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.12
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.24
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.22
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.20
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.18
	OPENBSD_5_0:1.8.0.16
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.14
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.12
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.8
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.10
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2014.02.21.21.28.26;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.10.22.23.55.58;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.15.18.43.28;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2007.10.08.03.10.58;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2007.03.29.17.41.33;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.14.01.15.19;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.09.12.16.25;	author dlg;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.08.23.15.58;	author dlg;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.02.01.58.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@spelling
@
text
@/*	$OpenBSD: ofwi2c.c,v 1.8 2007/10/22 23:55:58 deraadt Exp $	*/

/*
 * Copyright (c) 2006 Theo de Raadt
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <dev/i2c/i2cvar.h>
#include <dev/ofw/openfirm.h>

#include <dev/pci/pcivar.h>
#include <dev/pci/pcireg.h>
#include <sparc64/pci_machdep.h>

#include <arch/sparc64/dev/ofwi2cvar.h>

void
ofwiic_pci_scan(struct device *self, struct i2cbus_attach_args *iba, void *aux)
{
	struct pci_attach_args *pa = aux;
	pcitag_t tag = pa->pa_tag;
	int iba_node = PCITAG_NODE(tag);
	char name[32];
	int node;

	for (node = OF_child(iba_node); node; node = OF_peer(node)) {
		memset(name, 0, sizeof(name));

		if (OF_getprop(node, "compatible", name, sizeof(name)) == -1)
			continue;
		if (name[0] == '\0')
			continue;

		if (strcmp(name, "i2c-smbus") == 0 ||
		    strcmp(name, "i2c") == 0)
			ofwiic_scan(self, iba, &node);
	}
}

void
ofwiic_scan(struct device *self, struct i2cbus_attach_args *iba, void *aux)
{
	int iba_node = *(int *)aux;
	extern int iic_print(void *, const char *);
	struct i2c_attach_args ia;
	char name[32];
	u_int32_t reg[2];
	int node;

	for (node = OF_child(iba_node); node; node = OF_peer(node)) {
		memset(name, 0, sizeof(name));
		memset(reg, 0, sizeof(reg));

		if (OF_getprop(node, "compatible", name, sizeof(name)) == -1)
			continue;
		if (name[0] == '\0')
			continue;

		if (OF_getprop(node, "reg", reg, sizeof(reg)) == -1)
			continue;

		memset(&ia, 0, sizeof(ia));
		ia.ia_tag = iba->iba_tag;
		ia.ia_addr = (reg[0] << 7) | (reg[1] >> 1);
		ia.ia_name = name;
		ia.ia_cookie = &node;

		if (strncmp(ia.ia_name, "i2c-", strlen("i2c-")) == 0)
			ia.ia_name += strlen("i2c-");

		/* Skip non-SPD EEPROMs.  */
		if (strcmp(ia.ia_name, "at24c64") == 0 ||
		    strcmp(ia.ia_name, "at34c02") == 0) {
			if (OF_getprop(node, "name", name, sizeof(name)) == -1)
				continue;
			if (strcmp(name, "dimm") == 0 ||
			    strcmp(name, "dimm-spd") == 0)
				ia.ia_name = "spd";
			else
				continue;
		}

		/*
		 * XXX alipm crashes on some machines for an unknown reason
		 * when doing the periodic i2c accesses things like sensors
		 * need.  However, devices accessed only at boot are fine.
		 */
		if (strcmp(self->dv_parent->dv_xname, "alipm0") == 0 &&
		    (ia.ia_addr < 0x50 || ia.ia_addr > 0x57)) {
			iic_print(&ia, self->dv_parent->dv_xname);
			printf(" skipped due to %s bugs\n",
			    self->dv_parent->dv_xname);
			continue;
		}

		config_found(self, &ia, iic_print);
	}
}
@


1.8
log
@let alipm0 still be used for spdmem probes, but skip sensors.  alipm (or
more likely psycho) still has a bug where the pci bus croaks on the
intermittent i2c accesses.  the spdmem accesses are safe, though.
if you wish to help us find out when this bug gets fixed, please run
your machine WITHOUT this diff, though.
ok kettenis jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: ofwi2c.c,v 1.7 2007/10/15 18:43:28 kettenis Exp $	*/
d99 3
a101 4
		 * XXX alipm crashes on some machines for an unknown, skip
		 * reason when doing the periodic i2c accesses things like
		 * sensors need.  However, devices accessed only at boot
		 * are fine.
@


1.7
log
@Skip non-SPD EEPROMs.

somewhat confused ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ofwi2c.c,v 1.5 2007/03/29 17:41:33 deraadt Exp $	*/
d96 14
@


1.6
log
@Don't skip EEPROMs in ofw i2c scan,
match on sparc64 SPD name in spdmem.
Tested on a V120.
ok deraadt@@
@
text
@d86 12
@


1.5
log
@ignore various i2c seeproms that sun puts on all their machine parts; ok miod kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: ofwi2c.c,v 1.4 2006/06/14 01:15:19 deraadt Exp $	*/
a84 5

		/* skip totally boring devices */
		if (strcmp(ia.ia_name, "at24c64") == 0 ||
		    strcmp(ia.ia_name, "at34c02") == 0)
			continue;
@


1.4
log
@support the iic busses on the ultrasparc III machines (something is still
wrong, likely clocking); tested to not break older machines by dlg & djm
@
text
@d1 1
a1 1
/*	$OpenBSD: ofwi2c.c,v 1.3 2006/02/09 12:16:25 dlg Exp $	*/
d85 5
@


1.3
log
@split the ofw scan up into two parts: one to find the i2c bus on a pci
device, and one to find i2c devices on the i2c bus.

tweaks and ok kettenis@@ ok djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ofwi2c.c,v 1.2 2006/02/08 23:15:58 dlg Exp $	*/
d49 2
a50 1
		if (strcmp(name, "i2c-smbus") == 0)
d79 1
a79 1
		ia.ia_addr = reg[1] >> 1;
@


1.2
log
@add a member to the i2c_attach args so that a controller can pass a
cookie down to the device. the most obvious use of this is to pass a
device its ofw node on sparc64 and macppc so it can configure itself more
appropriately.

ok kettenis@@ henning@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ofwi2c.c,v 1.1 2006/01/02 01:58:55 deraadt Exp $	*/
d33 1
a33 1
ofwiic_scan(struct device *self, struct i2cbus_attach_args *iba, void *aux)
d38 20
d65 21
a85 26
		memset(name, 0, sizeof name);
		if (OF_getprop(node, "compatible", &name,
		    sizeof name) && name[0])
			ia.ia_name = name;

		if (strcmp(name, "i2c-smbus") == 0) {
			for (node = OF_child(node); node; node = OF_peer(node)) {
				memset(&ia, 0, sizeof ia);
				ia.ia_tag = iba->iba_tag;
				memset(name, 0, sizeof name);
				if (OF_getprop(node, "compatible", &name,
				    sizeof name) && name[0]) {
					ia.ia_name = name;
					if (strncmp(ia.ia_name, "i2c-",
					    strlen("i2c-")) == 0)
						ia.ia_name += strlen("i2c-");
				}
				if (OF_getprop(node, "reg", &reg,
				    sizeof reg) != sizeof reg)
					continue;
				ia.ia_addr = (reg[1] >> 1);
				if (ia.ia_name)
					config_found(self, &ia, iic_print);
			}
			return;
		}
@


1.1
log
@do i2c initialization using ofw data instead of scanning; ok kettenis
this may require some changes for non-pmu controllers later, which may
do the ofw tables slightly differently
@
text
@d1 1
a1 1
/*	$OpenBSD: maci2c.c,v 1.5 2006/01/01 20:52:25 deraadt Exp $	*/
d52 1
a53 1
				ia.ia_name = NULL;
@

