head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.48
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.44
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.46
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.38
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.42
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.40
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.36
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.34
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.32
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.30
	OPENBSD_5_0:1.7.0.28
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.26
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.24
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.20
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.22
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.18
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2005.03.09.18.41.48;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.01.18.18.49;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.10.10.02.59;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.44;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.01.21.48.23;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.29.02.47.58;	author jason;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.08.22.14.24.46;	author art;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.07.57;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.06.02.04.46;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.28.10.57.11;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2003.03.27.23.42.35;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.06.11.03.38.42;	author art;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2003.05.19.21.46.57;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Preliminary support for the floppy drive on Ultrasparcs. Only tested on
SBus machines so far, although EBus attachment glue is provided but not enabled
by default.

Also, fdformat(8) does not work correctly yet, although reading and writing
is safe; this will hopefully be fixed in the near future.

ok deraadt@@
@
text
@/*	$OpenBSD: auxiovar.h,v 1.6 2004/10/01 18:18:49 jason Exp $	*/
/*	$NetBSD: auxiovar.h,v 1.4 2000/04/15 03:08:13 mrg Exp $	*/

/*
 * Copyright (c) 2000 Matthew R. Green
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * on sun4u, auxio exists with one register (LED) on the sbus, and 5
 * registers on the ebus2 (pci) (LED, PCIMODE, FREQUENCY, SCSI
 * OSCILLATOR, and TEMP SENSE.
 *
 * clients of the auxio registers (eg, blinken lights, or the sbus
 * floppy) should search in auxio_cd for their matching auxio register
 * (to deal with multiple auxio's that may appear.)
 */

struct auxio_softc {
	struct device		sc_dev;
	bus_space_tag_t		sc_tag;
	bus_space_handle_t	sc_led;
	bus_space_handle_t	sc_pci;
	bus_space_handle_t	sc_scsi;
	bus_space_handle_t	sc_freq;
	bus_space_handle_t	sc_temp;
	int			sc_flags;
#define	AUXIO_LEDONLY		0x1
#define	AUXIO_EBUS		0x2
#define	AUXIO_SBUS		0x4
	struct blink_led	sc_blink;
};

#ifndef _LOCORE
int auxio_fd_control(u_int32_t);
#endif
@


1.6
log
@add a blink_led API (shaves ~1k from GENERIC) rather than have the same
logic in 3 files.  Devices register a function to be called to turn the
led on and off based on load average. (Note: rerun config and make depend)
@
text
@d1 1
a1 1
/*	$OpenBSD: auxiovar.h,v 1.5 2003/02/10 10:02:59 jason Exp $	*/
d56 4
@


1.5
log
@unneeded defns
@
text
@d1 1
a1 1
/*	$OpenBSD: auxiovar.h,v 1.4 2002/03/14 01:26:44 millert Exp $	*/
d54 1
a54 1
	struct timeout		sc_to;
a55 7

/*
 * XXX: old interfaces.  we set auxio_reg the first auxio we attach.
 */
#ifndef _LOCORE
void auxio_led_blink(void *);
#endif
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: auxiovar.h,v 1.3 2002/02/01 21:48:23 jason Exp $	*/
a60 6
/*
 * Copy of AUXIO_REG for the benefit of assembler modules (eg. trap handlers)
 * as AUXREG_VA depends on NBPG which is not a constant.
 */
volatile u_char *auxio_reg;
unsigned int auxregbisc(int, int);
@


1.3
log
@Clean up auxio a bit and add machdep.led_blink sysctl (like sparc),
portions from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: auxiovar.h,v 1.2 2001/08/29 02:47:58 jason Exp $	*/
d66 2
a67 2
unsigned int auxregbisc __P((int, int));
void auxio_led_blink __P((void *));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a41 13
struct auxio_registers {
#if 0	/* these do not exist on the Ebus2 */
	volatile u_int32_t *auxio_fd;
	volatile u_int32_t *auxio_audio;
	volatile u_int32_t *auxio_power;
#endif
	volatile u_int32_t *auxio_led;
	volatile u_int32_t *auxio_pci;
	volatile u_int32_t *auxio_freq;
	volatile u_int32_t *auxio_scsi;
	volatile u_int32_t *auxio_temp;
};

d44 6
a49 1
	struct auxio_registers	sc_registers;
d54 1
d67 1
@


1.2.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: auxiovar.h,v 1.2 2001/08/29 02:47:58 jason Exp $	*/
d42 13
d57 1
a57 6
	bus_space_tag_t		sc_tag;
	bus_space_handle_t	sc_led;
	bus_space_handle_t	sc_pci;
	bus_space_handle_t	sc_scsi;
	bus_space_handle_t	sc_freq;
	bus_space_handle_t	sc_temp;
a61 1
	struct timeout		sc_to;
d73 1
a73 2
unsigned int auxregbisc(int, int);
void auxio_led_blink(void *);
@


1.2.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d61 6
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.2.4.2
log
@Merge in trunk
@
text
@d42 13
d57 1
a57 6
	bus_space_tag_t		sc_tag;
	bus_space_handle_t	sc_led;
	bus_space_handle_t	sc_pci;
	bus_space_handle_t	sc_scsi;
	bus_space_handle_t	sc_freq;
	bus_space_handle_t	sc_temp;
a61 1
	struct timeout		sc_to;
a73 1
void auxio_led_blink __P((void *));
@


1.2.4.3
log
@Merge in -current from about a week ago
@
text
@d66 2
a67 2
unsigned int auxregbisc(int, int);
void auxio_led_blink(void *);
@


1.2.4.4
log
@Sync the SMP branch with 3.3
@
text
@d61 6
@


1.1
log
@I hate cvs.
(this file is from NetBSD
@
text
@d1 1
@

