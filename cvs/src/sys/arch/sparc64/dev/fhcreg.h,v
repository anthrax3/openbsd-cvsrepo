head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.40
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.38
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.34
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.36
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.28
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.32
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.30
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.26
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.24
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.22
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.20
	OPENBSD_5_0:1.4.0.18
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.16
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.14
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.10
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.12
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2007.05.01.19.44.56;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.28.16.26.03;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.27.18.15.32;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.24.20.47.39;	author jason;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Don't rely on the PROM to have configured the interrupts.  Make Simics boot
a but further and doesn't hurt a real E4500.

tested by miod@@
@
text
@/*	$OpenBSD: fhcreg.h,v 1.3 2004/09/28 16:26:03 jason Exp $	*/

/*
 * Copyright (c) 2004 Jason L. Wright (jason@@thought.net).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define	FHC_P_ID	0x00000000		/* ID */
#define	FHC_P_RCS	0x00000010		/* reset ctrl/status */
#define	FHC_P_CTRL	0x00000020		/* control */
#define	FHC_P_BSR	0x00000030		/* board status */
#define	FHC_P_ECC	0x00000040		/* ECC control */
#define	FHC_P_JCTRL	0x000000f0		/* JTAG control */

#define	FHC_P_CTRL_ICS		0x00100000	/* ignore centerplane sigs */
#define	FHC_P_CTRL_FRST		0x00080000	/* fatal error reset enable */
#define	FHC_P_CTRL_LFAT		0x00080000	/* AC/DC local error */
#define	FHC_P_CTRL_SLINE	0x00010000	/* firmware sync line */
#define	FHC_P_CTRL_DCD		0x00008000	/* DC/DC converter disable */
#define	FHC_P_CTRL_POFF		0x00004000	/* AC/DC ctlr PLL disable */
#define	FHC_P_CTRL_FOFF		0x00002000	/* FHC ctlr PLL disable */
#define	FHC_P_CTRL_AOFF		0x00001000	/* cpu a sram low pwr mode */
#define	FHC_P_CTRL_BOFF		0x00000800	/* cpu b sram low pwr mode */
#define	FHC_P_CTRL_PSOFF	0x00000400	/* disable fhc power supply */
#define	FHC_P_CTRL_IXIST	0x00000200	/* fhc notifies clock-board */
#define	FHC_P_CTRL_XMSTR	0x00000100	/* xir master enable */
#define	FHC_P_CTRL_LLED		0x00000040	/* left led (reversed) */
#define	FHC_P_CTRL_MLED		0x00000020	/* middle led */
#define	FHC_P_CTRL_RLED		0x00000010	/* right led */
#define	FHC_P_CTRL_BPINS	0x00000003	/* spare bidir pins */

#define	FHC_I_IGN	0x00000000		/* IGN register */

#define	FHC_F_IMAP	0x00000000		/* fanfail intr map */
#define	FHC_F_ICLR	0x00000010		/* fanfail intr clr */

#define	FHC_S_IMAP	0x00000000		/* system intr map */
#define	FHC_S_ICLR	0x00000010		/* system intr clr */

#define	FHC_U_IMAP	0x00000000		/* uart intr map */
#define	FHC_U_ICLR	0x00000010		/* uart intr clr */

#define	FHC_T_IMAP	0x00000000		/* tod intr map */
#define	FHC_T_ICLR	0x00000010		/* tod intr clr */

struct fhc_intr_reg {
	u_int64_t imap;
	u_int64_t unused_0;
	u_int64_t iclr;
	u_int64_t unused_1;
};

#define FHC_INO(ino)	((ino) & 0x7)
#define FHC_S_INO	0
#define FHC_U_INO	1
#define FHC_T_INO	2
#define FHC_F_INO	3
@


1.3
log
@get the offsets of imap/iclr correct (zs now interrupts more than once)
@
text
@d1 1
a1 1
/*	$OpenBSD: fhcreg.h,v 1.2 2004/09/27 18:15:32 jason Exp $	*/
d74 5
@


1.2
log
@setup control register correctly and clear interrupts before attaching children
@
text
@d1 1
a1 1
/*	$OpenBSD: fhcreg.h,v 1.1 2004/09/24 20:47:39 jason Exp $	*/
d69 1
d71 1
@


1.1
log
@fhc registers (enough for now anyway)
@
text
@d1 1
a1 1
/*	$OpenBSD: fhcvar.h,v 1.1 2004/09/22 21:44:45 jason Exp $	*/
d35 17
@

