head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.38
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.34
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.30
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.32
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.24
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.28
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.26
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.22
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.20
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.18
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.16
	OPENBSD_5_0:1.10.0.14
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.12
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.10
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.6
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.8
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.8
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2008.06.26.05.42.13;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.29.09.54.17;	author sobrado;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.02.20.00.56;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.05.01.44.52;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.27.55;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.17.01.29.20;	author henric;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.44;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.04.05.19.26;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.18.21.30.00;	author jason;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.08.18.20.56.41;	author jason;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.07.58;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.06.02.04.47;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.28.11.23.52;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2003.03.27.23.42.36;	author niklas;	state Exp;
branches;
next	1.2.4.5;

1.2.4.5
date	2003.06.07.11.14.45;	author ho;	state Exp;
branches;
next	;

1.2.6.1
date	2002.01.31.22.55.24;	author niklas;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2002.06.11.03.38.43;	author art;	state Exp;
branches;
next	1.2.6.3;

1.2.6.3
date	2003.05.19.21.46.57;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@/*	$OpenBSD: sbusvar.h,v 1.9 2007/05/29 09:54:17 sobrado Exp $	*/
/*	$NetBSD: sbusvar.h,v 1.7 1999/06/05 05:30:43 mrg Exp $ */

/*-
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Paul Kranenburg.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)sbusvar.h	8.1 (Berkeley) 6/11/93
 */

#ifndef _SBUS_VAR_SPARC64_H_
#define _SBUS_VAR_SPARC64_H_

#include <machine/bus.h>

#include <sparc64/dev/iommuvar.h>

/*
 * Most devices are configured according to information kept in
 * the FORTH PROMs.  In particular, we extract the `name', `reg',
 * and `address' properties of each device attached to the mainbus;
 * other drives may also use this information.  The mainbus itself
 * (which `is' the CPU, in some sense) gets just the node, with a
 * fake name ("mainbus").
 */

/* variables per SBus */
struct sbus_softc {
	struct	device		sc_dev;		/* base device */
	bus_space_tag_t		sc_bustag;
	bus_space_handle_t	sc_bh;
	bus_dma_tag_t		sc_dmatag;
	int			sc_clockfreq;	/* clock frequency (in Hz) */
	struct sbus_range	*sc_range;
	int			sc_nrange;
	int			sc_burst;	/* burst transfer sizes supported */
	int			*sc_intr2ipl;	/* Interrupt level translation */
	int			*sc_intr_compat;/* `intr' property to sbus compat */

	int			sc_ign;		/* Interrupt group number for this sysio */
	struct iommu_state	sc_is;		/* IOMMU state, see iommureg.h */
	struct strbuf_ctl	sc_sb;		/* Streaming buffer control */
	int64_t			sc_flush;	/* Streaming buffer flush */
	struct sbus_softc	*sc_master;	/* main SBus */
};

bus_addr_t sbus_bus_addr(bus_space_tag_t, u_int, u_int);

#endif /* _SBUS_VAR_SPARC64_H_ */

@


1.9
log
@use the right capitalization for `SBus'

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.8 2006/06/02 20:00:56 miod Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.8
log
@sbus_establish() and the associated linked list in the sbus softc is now only
used to store a per-device reset callback, for use in sbusreset(). Except
sbusreset() has never, ever, been used since Torek's sbus code went in.
Time to recycle those wasted bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.7 2005/03/05 01:44:52 miod Exp $	*/
d96 1
a96 1
/* variables per Sbus */
@


1.7
log
@Preliminary xbox support: attaches, memory mapping and interrupts work, but
DMA transfers are not implemented yet, and are disabled (which causes drivers
to SBus cards on the xbox to fail to attach).

In practice, this allows frame buffers to work, maybe more devices; DMA
support will be worked on in the near future.
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.6 2003/06/02 23:27:55 millert Exp $	*/
a102 1
	struct sbusdev		*sc_sbdev;	/* list of all children */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.5 2003/02/17 01:29:20 henric Exp $	*/
d114 1
@


1.5
log
@
Add support for the Sun Enterprise 450
Reduce the size of a GENERIC kernel by ~190k
Remove the nasty pointer/bus_space_handle_t casts
Adds debug bus_space code including the ability to trace
    bus operations (it actually works now).

The following rules are now followed (and verfified by the debug
code):

1.  A "bus_space_handle_t" may only be used with the
    "bus_space_tag_t" that created it.
2.  Only "bus_space_map()" may create "bus_space_handle_t"s.
3.  A "bus_space_handle_t" may not be modified after it has
    been created (other than being destroyed by "bus_space_unmap()").


Thanks to help from mcbride, marc, jason, drahn, to anyone that might
have slipped my mind at the moment.

ok jason@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.4 2002/03/14 01:26:44 millert Exp $	*/
d61 1
a61 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.3 2002/01/04 05:19:26 jason Exp $	*/
d104 1
a113 1
	struct sysioreg		*sc_sysio;	/* SBUS control registers */
d116 2
d123 1
@


1.3
log
@expose sbus_bus_addr() so cgsix actually compiles (oops)
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.2 2001/08/18 21:30:00 jason Exp $	*/
d118 1
a118 1
bus_addr_t sbus_bus_addr __P((bus_space_tag_t, u_int, u_int));
@


1.2
log
@RCSids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d117 2
@


1.2.6.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.3 2002/01/04 05:19:26 jason Exp $	*/
a116 2

bus_addr_t sbus_bus_addr __P((bus_space_tag_t, u_int, u_int));
@


1.2.6.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.2.6.1 2002/01/31 22:55:24 niklas Exp $	*/
d118 1
a118 1
bus_addr_t sbus_bus_addr(bus_space_tag_t, u_int, u_int);
@


1.2.6.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a103 1
	bus_space_handle_t	sc_bh;
d113 1
a115 2
	struct strbuf_ctl	sc_sb;		/* Streaming buffer control */
	int64_t			sc_flush;	/* Streaming buffer flush */
a120 1

@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.2.4.2
log
@Merge in trunk
@
text
@a117 2
bus_addr_t sbus_bus_addr __P((bus_space_tag_t, u_int, u_int));

@


1.2.4.3
log
@Merge in -current from about a week ago
@
text
@d118 1
a118 1
bus_addr_t sbus_bus_addr(bus_space_tag_t, u_int, u_int);
@


1.2.4.4
log
@Sync the SMP branch with 3.3
@
text
@a103 1
	bus_space_handle_t	sc_bh;
d113 1
a115 2
	struct strbuf_ctl	sc_sb;		/* Streaming buffer control */
	int64_t			sc_flush;	/* Streaming buffer flush */
a120 1

@


1.2.4.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sbusvar.h,v 1.2.4.4 2003/03/27 23:42:36 niklas Exp $	*/
d61 5
a65 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@enough to get sbus.o from NetBSD
@
text
@d1 1
@

