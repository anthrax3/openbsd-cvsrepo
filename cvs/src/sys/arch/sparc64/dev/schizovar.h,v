head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.40
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.36
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.38
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.30
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.34
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.32
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.28
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.26
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.24
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.22
	OPENBSD_5_0:1.10.0.20
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.18
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.16
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.12
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	SMP:1.4.0.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	UBC_SYNC_B:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	UBC:1.1.0.2;
locks; strict;
comment	@ * @;


1.10
date	2007.01.14.16.19.49;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2006.08.27.18.55.57;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.28.20.06.32;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.01.19.12.45;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.01.07.54.10;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.20.02.49;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.22.19.54.43;	author jason;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2003.02.17.01.29.20;	author henric;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.18.16.45.08;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.08.23.31.30;	author jason;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.06.11.03.38.43;	author art;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.10.29.00.28.11;	author art;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.05.19.21.46.57;	author tedu;	state Exp;
branches;
next	;

1.4.4.1
date	2003.06.07.11.14.45;	author ho;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Add macros to access Schizo's PCI config space.
@
text
@/*	$OpenBSD: schizovar.h,v 1.9 2006/08/27 18:55:57 kettenis Exp $	*/

/*
 * Copyright (c) 2002 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

struct schizo_pbm {
	struct schizo_softc *sp_sc;

	struct schizo_range *sp_range;
	pci_chipset_tag_t sp_pc;
	int sp_nreg;
	int sp_nrange;
	int sp_nintmap;

	bus_space_tag_t		sp_memt;
	bus_space_tag_t		sp_iot;
	bus_space_tag_t		sp_regt;
	bus_space_handle_t	sp_regh;
	bus_space_tag_t		sp_cfgt;
	bus_space_handle_t	sp_cfgh;
	bus_dma_tag_t		sp_dmat;
	int			sp_bus;
	int			sp_flags;
	int			sp_bus_a;
	bus_addr_t		sp_confpaddr;
	struct iommu_state	sp_is;
	struct strbuf_ctl	sp_sb;
	char			sp_flush[0x80];
};

struct schizo_softc {
	struct device sc_dv;
	int sc_node;
	int sc_ign;
	bus_dma_tag_t sc_dmat;
	bus_space_tag_t sc_bust;
	bus_addr_t sc_ctrl;
	bus_space_handle_t sc_ctrlh;

	int sc_tomatillo;
};

#define	schizo_read(sc,r) \
    bus_space_read_8((sc)->sc_bust, (sc)->sc_ctrlh, (r))
#define	schizo_write(sc,r,v) \
    bus_space_write_8((sc)->sc_bust, (sc)->sc_ctrlh, (r), (v))
#define	schizo_pbm_read(pbm,r) \
    bus_space_read_8((pbm)->sp_regt, (pbm)->sp_regh, (r))
#define	schizo_pbm_write(pbm,r,v) \
    bus_space_write_8((pbm)->sp_regt, (pbm)->sp_regh, (r), (v))
#define	schizo_cfg_read(pbm,r) \
    bus_space_read_4((pbm)->sp_cfgt, (pbm)->sp_cfgh, (r))
#define	schizo_cfg_write(pbm,r,v) \
    bus_space_write_4((pbm)->sp_cfgt, (pbm)->sp_cfgh, (r), (v))
@


1.9
log
@Use the correct IGN for the B side of schizo.  Makes interrupts actually work
in the PCI slot of the v210.

ok jason@@
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.8 2006/06/28 20:06:32 deraadt Exp $	*/
d74 4
@


1.8
log
@keep track of what is a schizo and what is tomatillo
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.7 2006/06/01 19:12:45 jason Exp $	*/
d57 1
@


1.7
log
@- stop using magic constants for the onboard error INOs (one was wrong anyway)
- setup pci error interrupts and do an interpretive dance with the registers
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.6 2006/06/01 07:54:10 jason Exp $	*/
d61 2
@


1.6
log
@enable error interrupts and install handlers for same (the handlers don't do much yet)
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.5 2003/06/02 20:02:49 jason Exp $	*/
d67 4
@


1.5
log
@nuke terms 3 & 4
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.4 2003/02/22 19:54:43 jason Exp $	*/
d62 5
@


1.4
log
@rearrange allocations and such so that this actually attaches (still panics
when attaching the pcibus... Still working on it =)
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.3 2003/02/17 01:29:20 henric Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.4.4.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.4 2003/02/22 19:54:43 jason Exp $	*/
d15 5
@


1.3
log
@
Add support for the Sun Enterprise 450
Reduce the size of a GENERIC kernel by ~190k
Remove the nasty pointer/bus_space_handle_t casts
Adds debug bus_space code including the ability to trace
    bus operations (it actually works now).

The following rules are now followed (and verfified by the debug
code):

1.  A "bus_space_handle_t" may only be used with the
    "bus_space_tag_t" that created it.
2.  Only "bus_space_map()" may create "bus_space_handle_t"s.
3.  A "bus_space_handle_t" may not be modified after it has
    been created (other than being destroyed by "bus_space_unmap()").


Thanks to help from mcbride, marc, jason, drahn, to anyone that might
have slipped my mind at the moment.

ok jason@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.2 2002/07/18 16:45:08 jason Exp $	*/
d56 1
a56 1
	char			pp_flush[0x80];
@


1.2
log
@- Add support for both of the schizo iommu's(There is an iommu per pbm)
- const the cfattach
- clean
- deal with the fact that the register property doesn't reflect the true
length of the register set (grr!)
- move away from home grown read/write_8 and use bus_space where possible
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.1 2002/06/08 23:31:30 jason Exp $	*/
d45 2
d55 2
a63 2
	bus_space_tag_t sc_bustag;
	struct iommu_state *sc_is;
a65 1
	struct schizo_regs *sc_regs;
@


1.1
log
@Move stuff around like a crazy man... (split into var/reg)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d52 1
d63 2
@


1.1.2.1
log
@Sync UBC branch to -current
@
text
@@


1.1.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: schizovar.h,v 1.1.2.1 2002/06/11 03:38:43 art Exp $	*/
a51 1
	struct iommu_state	sp_is;
a61 2
	bus_space_handle_t sc_ctrlh;
	struct schizo_regs *sc_regs;
@


1.1.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 2
	bus_space_tag_t		sp_regt;
	bus_space_handle_t	sp_regh;
a52 2
	struct strbuf_ctl	sp_sb;
	char			sp_flush[0x80];
d60 2
d64 1
@


