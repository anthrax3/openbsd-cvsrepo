head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5;
locks; strict;
comment	@# @;


1.5
date	2017.03.15.21.05.27;	author tb;	state Exp;
branches;
next	1.4;
commitid	JT76SX3He8w6WmvE;

1.4
date	2017.02.10.10.39.45;	author mpi;	state Exp;
branches;
next	1.3;
commitid	hRGxuNgAm83wZTYt;

1.3
date	2016.11.05.15.48.54;	author natano;	state Exp;
branches;
next	1.2;
commitid	vYqiGVleagE45aBl;

1.2
date	2016.10.15.13.45.08;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	TtDw6IYffbT8oPEE;

1.1
date	2016.10.14.18.43.01;	author deraadt;	state Exp;
branches;
next	;
commitid	dUZQxi6w3YqAb6KQ;


desc
@@


1.5
log
@Fix building profiling kernels by passing the -p flag to config(8)
if the kernel's name ends in .PROF.

problem reported by jmc via mpi
ok mpi
@
text
@SYSDIR != cd ${.CURDIR}/../../../..; pwd
CONFDIR != cd ${.CURDIR}/../../conf; pwd

.if ${.CURDIR} == ${.OBJDIR}
.PHONY: config
config:
	@@echo make obj required first >&2
	@@false
.else
.PHONY: config clean
config:
	config ${.CURDIR:M*.PROF:C/.*/-p/} -b ${.OBJDIR} \
		-s ${SYSDIR} ${CONFDIR}/${.CURDIR:T:S/.PROF$//}
.endif

cleandir clean:

.include <bsd.obj.mk>

@


1.4
log
@Unbreak 'config -p'.

ok tb@@, jca@@
@
text
@d12 2
a13 1
	config -b ${.OBJDIR} -s ${SYSDIR} ${CONFDIR}/${.CURDIR:T:S/.PROF$//}
@


1.3
log
@Two tweaks for compile/Makefile.inc:

1) Replace '.elif !exists(${OBJDIR}/Makefile)' with just '.else'. espie
   pointed out, that if the file existed, make wouldn't be reading this
   file, so the check is superflous. Less clutter.

2) Unconditionally define the 'clean' and 'cleandir' targets, also when
   obj doesn't exist. This changes the behaviour of 'make clean' to be
   successful (doing nothing) without obj@@ or obj/.

ok tb millert deraadt
@
text
@d12 1
a12 1
	config -b ${.OBJDIR} -s ${SYSDIR} ${CONFDIR}/${.CURDIR:T}
@


1.2
log
@cleandir: target for kernel compile directories
ok natano
@
text
@d9 1
a9 1
.elif !exists(${OBJDIR}/Makefile)
d13 1
a15 2

.endif
@


1.1
log
@Kernel builds now happen in compile/CONFIG/obj@@ -> /usr/obj/... [or ./obj/,
if srctree is not rooted at /usr/src].  As a result, stock GENERIC & RAMDISK
kernels are commited to the tree, to ensure the src tree can be "readonly"
during builds, with all writes occuring inside the obj space.  config -b
options are handled by ../Makefile.inc.  The canonical new way to configure
one of these kernels is:
    % cd /sys/arch/amd64/compile/GENERIC.MP
    % doas make obj
    % make config
    % make
    % doas cp obj/bsd /bsd
The build infrastructure will use this new mechanism in a de-escalation
way using BUILDUSER.
Much help from natano and tb.
@
text
@d14 1
a14 1
clean:
@

