head	1.11;
access;
symbols
	OPENBSD_6_1:1.10.0.4
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6;
locks; strict;
comment	@# @;


1.11
date	2017.05.27.09.01.22;	author kettenis;	state Exp;
branches;
next	1.10;
commitid	6hxVZ8Vr30WwOTaa;

1.10
date	2016.09.04.08.33.50;	author guenther;	state Exp;
branches;
next	1.9;
commitid	EPpVK8IYqcaEUFOt;

1.9
date	2016.09.03.23.11.01;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	KuABpYbIsWTZ7Sb9;

1.8
date	2016.09.03.15.04.10;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	ihDWWoE3qOk28lrS;

1.7
date	2014.11.26.20.06.53;	author stsp;	state Exp;
branches;
next	1.6;
commitid	jELYBgAx2QwBsK5n;

1.6
date	2014.01.06.21.16.31;	author tobiasu;	state Exp;
branches;
next	1.5;

1.5
date	2013.12.28.19.27.35;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2013.12.28.18.20.51;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2013.12.28.17.57.51;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2013.12.28.17.57.14;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.08.16.19.52.08;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Make room for another 4GB of .text.
@
text
@/*	$OpenBSD: ld.script,v 1.10 2016/09/04 08:33:50 guenther Exp $	*/

/*
 * Copyright (c) 2013 Mark Kettenis <kettenis@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

OUTPUT_FORMAT("elf64-sparc")
OUTPUT_ARCH(sparc:v9)
ENTRY(start)

PHDRS
{
	text PT_LOAD;
	data PT_LOAD;
	openbsd_randomize PT_OPENBSD_RANDOMIZE;
	openbsd_bootdata  PT_OPENBSD_BOOTDATA;
}

SECTIONS
{
	. = 0x01000000;
	.text :
	{
		*(.text)
		PROVIDE(etext = .);
	} :text
	.rodata :
	{
		*(.rodata*)
	}
	.openbsd.randomdata :
	{
		*(.openbsd.randomdata)
	} :text :openbsd_randomize
	. = 0x01c00000;
	.data :
	{
		*(.data)
	} :data
	.openbsd.bootdata :
	{
		*(.openbsd.bootdata)
	} :data :openbsd_bootdata
	.bss :
	{
		*(.bss)
		. = ALIGN(64 / 8);
	} :data
	. = ALIGN(64 / 8);
	PROVIDE (end = .);
}
@


1.10
log
@ld also knows about PT_OPENBSD_BOOTDATA
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.9 2016/09/03 23:11:01 deraadt Exp $	*/
d47 1
a47 1
	. = 0x01800000;
@


1.9
log
@ld knows PT_OPENBSD_RANDOMIZE now
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.8 2016/09/03 15:04:10 deraadt Exp $	*/
d28 1
a28 1
	openbsd_bootdata  0x65a41be6; /* PT_OPENBSD_BOOTDATA */
@


1.8
log
@sparc64 kernel still lacks a true RODATA segment.  However we can make
the SSP read-only by moving the randomdata section into RX text, rather
than leaving it in RW data.
ok kettenis, tested by claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.7 2014/11/26 20:06:53 stsp Exp $	*/
d27 1
a27 1
	openbsd_randomize 0x65a3dbe6; /* PT_OPENBSD_RANDOMIZE */
@


1.7
log
@Add a new ELF segment .openbsd.bootdata to the sparc64 kernel.
This can be used to pass boot parameters to the kernel which can't be passed
safely via the Open Firmware interface, such as softraid volume IDs and keys.
The kernel already reads the arguments if available but ofwboot won't provide
them until further changes are committed there.

With support from deraadt, kettenis and matthew.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.6 2014/01/06 21:16:31 tobiasu Exp $	*/
d43 4
a51 4
	.openbsd.randomdata :
	{
		*(.openbsd.randomdata)
	} :data :openbsd_randomize
@


1.6
log
@Fix sparc64 kernel profiling, add the etext symbol back.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.5 2013/12/28 19:27:35 kettenis Exp $	*/
d28 1
d52 4
@


1.5
log
@Make sure the PT_OPENBSD_RANDOMIZE program header actually covers the data
we want to initialize with randomness.  It covered exactly nothing before!
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.4 2013/12/28 18:20:51 kettenis Exp $	*/
d36 1
@


1.4
log
@Back out the previous commit; rodata gets merged with text by the linker.
Having a seperate rodata segment won't work anyway without significant pmap
changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.3 2013/12/28 17:57:51 deraadt Exp $	*/
d46 4
d54 1
a54 1
	}
@


1.3
log
@create rodata PHDR; ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.2 2013/12/28 17:57:14 miod Exp $	*/
a25 1
	rodata PT_LOAD;
@


1.2
log
@Require an explicit PT_OPENBSD_RANDOMIZE program header in the kernel linker
script (note that the amd64 linker script is currently not used).
Discussed with deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.1 2013/08/16 19:52:08 kettenis Exp $	*/
d26 1
@


1.1
log
@Moving the .data section causes problems on some machines (blade100, tadpole).
Move it back and add a linker script to convince the linker that it shouldn't
merge .text and .data.

tested by naddy@@
ok millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d27 1
@

