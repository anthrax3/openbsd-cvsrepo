head	1.121;
access;
symbols
	OPENBSD_6_2_BASE:1.121
	OPENBSD_6_1:1.121.0.6
	OPENBSD_6_1_BASE:1.121
	OPENBSD_6_0:1.121.0.2
	OPENBSD_6_0_BASE:1.121
	OPENBSD_5_9:1.118.0.2
	OPENBSD_5_9_BASE:1.118
	OPENBSD_5_8:1.118.0.4
	OPENBSD_5_8_BASE:1.118
	OPENBSD_5_7:1.117.0.2
	OPENBSD_5_7_BASE:1.117
	OPENBSD_5_6:1.112.0.4
	OPENBSD_5_6_BASE:1.112
	OPENBSD_5_5:1.105.0.4
	OPENBSD_5_5_BASE:1.105
	OPENBSD_5_4:1.103.0.4
	OPENBSD_5_4_BASE:1.103
	OPENBSD_5_3:1.103.0.2
	OPENBSD_5_3_BASE:1.103
	OPENBSD_5_2:1.101.0.6
	OPENBSD_5_2_BASE:1.101
	OPENBSD_5_1_BASE:1.101
	OPENBSD_5_1:1.101.0.4
	OPENBSD_5_0:1.101.0.2
	OPENBSD_5_0_BASE:1.101
	OPENBSD_4_9:1.98.0.4
	OPENBSD_4_9_BASE:1.98
	OPENBSD_4_8:1.98.0.2
	OPENBSD_4_8_BASE:1.98
	OPENBSD_4_7:1.96.0.2
	OPENBSD_4_7_BASE:1.96
	OPENBSD_4_6:1.93.0.2
	OPENBSD_4_6_BASE:1.93
	OPENBSD_4_5:1.85.0.2
	OPENBSD_4_5_BASE:1.85
	OPENBSD_4_4:1.76.0.2
	OPENBSD_4_4_BASE:1.76
	OPENBSD_4_3:1.67.0.2
	OPENBSD_4_3_BASE:1.67
	OPENBSD_4_2:1.66.0.2
	OPENBSD_4_2_BASE:1.66
	OPENBSD_4_1:1.60.0.2
	OPENBSD_4_1_BASE:1.60
	OPENBSD_4_0:1.55.0.2
	OPENBSD_4_0_BASE:1.55
	OPENBSD_3_9:1.50.0.2
	OPENBSD_3_9_BASE:1.50
	OPENBSD_3_8:1.47.0.2
	OPENBSD_3_8_BASE:1.47
	OPENBSD_3_7:1.40.0.2
	OPENBSD_3_7_BASE:1.40
	OPENBSD_3_6:1.28.0.2
	OPENBSD_3_6_BASE:1.28
	SMP_SYNC_A:1.27
	SMP_SYNC_B:1.27
	OPENBSD_3_5:1.27.0.2
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.25.0.2
	OPENBSD_3_4_BASE:1.25
	UBC_SYNC_A:1.23
	OPENBSD_3_3:1.21.0.2
	OPENBSD_3_3_BASE:1.21
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	UBC_SYNC_B:1.17
	UBC:1.12.0.2
	UBC_BASE:1.12
	SMP:1.10.0.4
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10;
locks; strict;
comment	@# @;


1.121
date	2016.07.04.21.51.40;	author kettenis;	state Exp;
branches;
next	1.120;
commitid	dtHb2SosM0PR93d4;

1.120
date	2016.06.28.04.41.37;	author jmatthew;	state Exp;
branches;
next	1.119;
commitid	YZhKLotIHp83F5gq;

1.119
date	2016.04.15.01.40.25;	author dlg;	state Exp;
branches;
next	1.118;
commitid	hefA7twJvPe7FsRw;

1.118
date	2015.07.17.22.52.29;	author tedu;	state Exp;
branches;
next	1.117;
commitid	OOrGfFHYAn65M2qc;

1.117
date	2015.01.21.12.07.36;	author kettenis;	state Exp;
branches;
next	1.116;
commitid	fODJq0ZJHff5NLpx;

1.116
date	2014.12.05.16.48.09;	author kettenis;	state Exp;
branches;
next	1.115;
commitid	4prcDYICGBedfvG9;

1.115
date	2014.11.24.02.03.37;	author brad;	state Exp;
branches;
next	1.114;
commitid	Wmnzf8bGQILqXRTG;

1.114
date	2014.10.10.05.43.36;	author deraadt;	state Exp;
branches;
next	1.113;
commitid	eyBTAcDp3o260Uyq;

1.113
date	2014.09.14.19.02.43;	author brad;	state Exp;
branches;
next	1.112;
commitid	K8JftQh0Erb7Ascc;

1.112
date	2014.04.07.08.27.24;	author brad;	state Exp;
branches;
next	1.111;

1.111
date	2014.04.05.16.33.14;	author deraadt;	state Exp;
branches;
next	1.110;

1.110
date	2014.03.28.16.24.57;	author brad;	state Exp;
branches;
next	1.109;

1.109
date	2014.03.18.16.58.45;	author deraadt;	state Exp;
branches;
next	1.108;

1.108
date	2014.03.15.22.29.28;	author kettenis;	state Exp;
branches;
next	1.107;

1.107
date	2014.03.14.05.38.31;	author jmatthew;	state Exp;
branches;
next	1.106;

1.106
date	2014.03.08.18.28.24;	author kettenis;	state Exp;
branches;
next	1.105;

1.105
date	2014.02.19.05.32.57;	author jmatthew;	state Exp;
branches;
next	1.104;

1.104
date	2013.08.20.09.06.02;	author dlg;	state Exp;
branches;
next	1.103;

1.103
date	2012.10.21.17.46.33;	author deraadt;	state Exp;
branches;
next	1.102;

1.102
date	2012.09.27.14.01.35;	author jsg;	state Exp;
branches;
next	1.101;

1.101
date	2011.06.29.20.52.09;	author matthew;	state Exp;
branches;
next	1.100;

1.100
date	2011.05.24.20.27.11;	author matthew;	state Exp;
branches;
next	1.99;

1.99
date	2011.03.08.19.57.51;	author deraadt;	state Exp;
branches;
next	1.98;

1.98
date	2010.04.19.10.44.33;	author dcoppa;	state Exp;
branches;
next	1.97;

1.97
date	2010.04.03.00.53.30;	author deraadt;	state Exp;
branches;
next	1.96;

1.96
date	2009.11.15.17.24.06;	author deraadt;	state Exp;
branches;
next	1.95;

1.95
date	2009.09.01.19.49.59;	author kettenis;	state Exp;
branches;
next	1.94;

1.94
date	2009.07.12.19.17.50;	author kettenis;	state Exp;
branches;
next	1.93;

1.93
date	2009.07.05.17.13.25;	author kettenis;	state Exp;
branches;
next	1.92;

1.92
date	2009.06.24.15.02.18;	author todd;	state Exp;
branches;
next	1.91;

1.91
date	2009.06.24.11.38.40;	author deraadt;	state Exp;
branches;
next	1.90;

1.90
date	2009.06.04.00.26.17;	author kettenis;	state Exp;
branches;
next	1.89;

1.89
date	2009.06.02.04.34.16;	author kettenis;	state Exp;
branches;
next	1.88;

1.88
date	2009.04.28.17.10.24;	author deraadt;	state Exp;
branches;
next	1.87;

1.87
date	2009.03.29.21.57.26;	author kettenis;	state Exp;
branches;
next	1.86;

1.86
date	2009.03.01.20.59.09;	author kettenis;	state Exp;
branches;
next	1.85;

1.85
date	2009.02.10.19.06.40;	author damien;	state Exp;
branches;
next	1.84;

1.84
date	2009.02.10.18.35.44;	author damien;	state Exp;
branches;
next	1.83;

1.83
date	2009.01.14.13.24.11;	author kettenis;	state Exp;
branches;
next	1.82;

1.82
date	2009.01.10.19.04.58;	author kettenis;	state Exp;
branches;
next	1.81;

1.81
date	2009.01.06.23.03.16;	author jasper;	state Exp;
branches;
next	1.80;

1.80
date	2008.12.28.00.02.35;	author kettenis;	state Exp;
branches;
next	1.79;

1.79
date	2008.10.23.17.26.26;	author deraadt;	state Exp;
branches;
next	1.78;

1.78
date	2008.09.29.22.43.58;	author deraadt;	state Exp;
branches;
next	1.77;

1.77
date	2008.08.24.20.13.21;	author deraadt;	state Exp;
branches;
next	1.76;

1.76
date	2008.07.12.13.20.42;	author kettenis;	state Exp;
branches;
next	1.75;

1.75
date	2008.07.06.08.53.38;	author kettenis;	state Exp;
branches;
next	1.74;

1.74
date	2008.07.06.07.27.43;	author kettenis;	state Exp;
branches;
next	1.73;

1.73
date	2008.07.01.04.50.59;	author brad;	state Exp;
branches;
next	1.72;

1.72
date	2008.06.14.02.07.06;	author kettenis;	state Exp;
branches;
next	1.71;

1.71
date	2008.05.21.19.23.15;	author kettenis;	state Exp;
branches;
next	1.70;

1.70
date	2008.04.02.22.32.43;	author kettenis;	state Exp;
branches;
next	1.69;

1.69
date	2008.03.30.12.30.02;	author kettenis;	state Exp;
branches;
next	1.68;

1.68
date	2008.03.13.23.06.19;	author kettenis;	state Exp;
branches;
next	1.67;

1.67
date	2008.02.02.10.16.41;	author dlg;	state Exp;
branches;
next	1.66;

1.66
date	2007.07.02.14.29.37;	author dlg;	state Exp;
branches;
next	1.65;

1.65
date	2007.07.02.02.28.12;	author jsg;	state Exp;
branches;
next	1.64;

1.64
date	2007.05.26.16.52.10;	author kettenis;	state Exp;
branches;
next	1.63;

1.63
date	2007.05.01.15.22.23;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2007.04.11.08.56.19;	author dlg;	state Exp;
branches;
next	1.61;

1.61
date	2007.04.04.20.47.54;	author kettenis;	state Exp;
branches;
next	1.60;

1.60
date	2007.03.07.06.23.02;	author miod;	state Exp;
branches;
next	1.59;

1.59
date	2007.02.25.22.29.41;	author kettenis;	state Exp;
branches;
next	1.58;

1.58
date	2006.12.09.20.06.48;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2006.11.26.19.10.16;	author dlg;	state Exp;
branches;
next	1.56;

1.56
date	2006.11.25.15.57.16;	author brad;	state Exp;
branches;
next	1.55;

1.55
date	2006.08.30.22.19.29;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2006.08.17.19.24.55;	author brad;	state Exp;
branches;
next	1.53;

1.53
date	2006.06.26.22.16.23;	author miod;	state Exp;
branches;
next	1.52;

1.52
date	2006.06.22.23.10.28;	author brad;	state Exp;
branches;
next	1.51;

1.51
date	2006.06.21.19.28.08;	author jason;	state Exp;
branches;
next	1.50;

1.50
date	2005.11.15.01.12.49;	author brad;	state Exp;
branches;
next	1.49;

1.49
date	2005.11.14.23.03.06;	author brad;	state Exp;
branches;
next	1.48;

1.48
date	2005.10.10.23.02.21;	author brad;	state Exp;
branches;
next	1.47;

1.47
date	2005.06.30.01.37.33;	author brad;	state Exp;
branches;
next	1.46;

1.46
date	2005.06.30.01.08.48;	author brad;	state Exp;
branches;
next	1.45;

1.45
date	2005.06.16.14.13.26;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2005.05.16.16.56.44;	author brad;	state Exp;
branches;
next	1.43;

1.43
date	2005.05.01.07.54.43;	author david;	state Exp;
branches;
next	1.42;

1.42
date	2005.04.14.19.59.49;	author brad;	state Exp;
branches;
next	1.41;

1.41
date	2005.03.30.17.08.57;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2005.03.05.01.49.02;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2005.03.05.01.44.52;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2005.02.15.11.03.46;	author jsg;	state Exp;
branches;
next	1.37;

1.37
date	2004.12.30.02.18.16;	author dlg;	state Exp;
branches;
next	1.36;

1.36
date	2004.12.28.23.04.46;	author brad;	state Exp;
branches;
next	1.35;

1.35
date	2004.11.29.18.12.50;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2004.10.20.23.11.01;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2004.10.20.23.04.57;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2004.09.23.17.34.15;	author jason;	state Exp;
branches;
next	1.31;

1.31
date	2004.09.21.19.19.57;	author drahn;	state Exp;
branches;
next	1.30;

1.30
date	2004.09.16.09.35.37;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2004.09.16.09.14.04;	author mickey;	state Exp;
branches;
next	1.28;

1.28
date	2004.08.26.03.44.49;	author brad;	state Exp;
branches;
next	1.27;

1.27
date	2004.03.20.14.56.05;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2004.01.04.00.29.50;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.13.20.27.50;	author brad;	state Exp;
branches;
next	1.24;

1.24
date	2003.06.13.19.21.25;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2003.05.14.23.32.35;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2003.05.13.22.45.11;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2003.02.12.20.54.45;	author jason;	state Exp;
branches;
next	1.20;

1.20
date	2003.02.06.13.26.44;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.31.02.37.31;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.12.04.17.32.30;	author nate;	state Exp;
branches;
next	1.17;

1.17
date	2002.07.28.01.39.14;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2002.07.01.00.31.49;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.17.01.41.30;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2002.04.18.14.15.11;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.20.18.58.13;	author jason;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.07.23.11.53;	author jason;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2001.12.06.22.28.32;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.15.18.44.56;	author jason;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	2001.10.12.23.09.34;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.10.04.24.12;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.09.21.32.04;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.29.03.17.21;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.26.01.24.36;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.22.18.00.24;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.21.19.54.01;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.21.03.49.40;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.17.22.00.08;	author jason;	state Exp;
branches;
next	;

1.10.4.1
date	2001.10.31.03.07.57;	author nate;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2002.03.06.02.04.46;	author niklas;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2002.03.28.10.57.11;	author niklas;	state Exp;
branches;
next	1.10.4.4;

1.10.4.4
date	2003.03.27.23.42.35;	author niklas;	state Exp;
branches;
next	1.10.4.5;

1.10.4.5
date	2003.05.16.00.29.40;	author niklas;	state Exp;
branches;
next	1.10.4.6;

1.10.4.6
date	2004.02.19.10.49.59;	author niklas;	state Exp;
branches;
next	1.10.4.7;

1.10.4.7
date	2004.06.05.23.10.59;	author niklas;	state Exp;
branches;
next	;

1.12.2.1
date	2002.06.11.03.38.42;	author art;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2002.10.29.00.28.11;	author art;	state Exp;
branches;
next	1.12.2.3;

1.12.2.3
date	2003.05.19.21.46.57;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.121
log
@Add nep(4).
@
text
@#	$OpenBSD: RAMDISK,v 1.120 2016/06/28 04:41:37 jmatthew Exp $

machine		sparc64
maxusers	4

option		TIMEZONE=0
option		DST=0
option		SMALL_KERNEL
option		NO_PROPOLICE
option		BOOT_CONFIG

option		RAMDISK_HOOKS
option		MINIROOTSIZE=6144

option		PCIVERBOSE

option		FFS
option		FFS2
option		NFSCLIENT
option		CD9660
option		MSDOSFS
option		UDF
option		INET6
option		CRYPTO

option		WSEMUL_SUN	# provide sun terminal emulation; required
option		WSEMUL_NO_VT100	# do not provide vt100 terminal emulation
option		WSEMUL_DUMB

option		SUN4US
option		SUN4V

config		bsd root on rd0a

mainbus0	at root
cpu0		at mainbus0
ssm*		at mainbus0
cpu0		at ssm?
cmp*		at mainbus0
cpu0		at cmp?
core*		at cmp?
cpu0		at core?

sbus*		at mainbus0
upa0		at mainbus0
central0	at mainbus0
fhc0		at central0
fhc*		at mainbus0
psycho*		at mainbus0
pci*		at psycho?
schizo*		at mainbus0
schizo*		at ssm?
pci*		at schizo?
pyro*		at mainbus0
pci*		at pyro?
vpci*		at mainbus0
pci*		at vpci?
pci*		at ppb?
ppb*		at pci?
ebus*		at mainbus0
ebus*		at pci?
vbus0		at mainbus0
sbbc*		at pci?
cbus*		at vbus?

cardbus*	at cardslot?
pcmcia*		at cardslot?
cbb*		at pci?
cardslot*	at cbb?

ath*		at pci?			# Atheros AR5k (802.11a/b/g)
ath*		at cardbus?		# Atheros AR5k (802.11a/b/g)
athn*		at pci?			# Atheros AR9k (802.11a/g/n)
athn*		at cardbus?		# Atheros AR9k (802.11a/g/n)
ral*		at pci?			# Ralink RT2500/RT2501/RT2600
ral*		at cardbus?		# Ralink RT2500/RT2501/RT2600
com*		at pcmcia?		# PCMCIA modems/serial ports
ep*		at pcmcia?		# PCMCIA based 3C5xx ethernet
ne*		at pcmcia?		# PCMCIA based NE2000 ethernet
wi*		at pci?			# WaveLAN IEEE 802.11DS
wi*		at pcmcia?		# WaveLAN IEEE 802.11DS

hme*		at pci?			# Sun Happy Meal 10/100
gem*		at pci?			# Sun GEM 10/100/Gigabit
cas*		at pci?			# Sun Cassini 100/Gigabit
nep*		at pci?			# Sun Neptune ethernet
ti*		at pci?			# Alteon Tigon 1Gb ethernet
skc*		at pci?			# SysKonnect GEnesis 984x
sk*		at skc?			#  each port of above
mskc*		at pci?			# Marvell Yukon-2
msk*		at mskc?		#  each port of above
fxp*		at pci?			# EtherExpress 10/100B ethernet
xl*		at pci?			# 3C9xx ethernet
xl*		at cardbus?		# 3C9xx ethernet
pcn*		at pci?			# AMD PCnet-PCI Ethernet
de*		at pci?			# DC21X4X-based ethernet
dc*		at pci?			# 21143, "tulip" clone ethernet
dc*		at cardbus?		# 21143, "tulip" clone ethernet
ne*		at pci?			# NE2000-compat ethernet cards
epic*		at pci?			# SMC EPIC/100 ethernet
em*		at pci?			# Intel Pro/1000 ethernet
ix*		at pci?			# Intel 82598EB 10Gb ethernet
bge*		at pci?			# Broadcom BCM570x (aka Tigon3)
bnx*		at pci?			# Broadcom BCM5706/5708 GigE
stge*		at pci?			# Sundance TC9021 GigE
rl*		at pci?			# Realtek 81[23]9 ethernet
vr*		at pci?			# VIA Rhine ethernet
re*		at pci?			# Realtek 8169/8169S/8110S
re*		at cardbus?		# Realtek 8169/8169S/8110S
jme*		at pci?			# JMicron JMC250/JMC260 Ethernet

auxio*		at ebus?
auxio*		at sbus?
clock*		at sbus?		# Mostek clock
clock*		at ebus?
clock0		at fhc?
rtc*		at ebus?		# DS1287/M5819 clock
timer*		at mainbus0		# Timer chip

vcons0		at vbus?
vrtc0		at vbus?
vrng0		at vbus?
vdsk*		at cbus?
vnet*		at cbus?

le*		at sbus?
ledma*		at sbus?
le*		at ledma?
lebuffer*	at sbus?
le*		at lebuffer?

qec*		at sbus?
qe*		at qec?
be*		at qec?

hme*		at sbus?
ti*		at sbus?
gem*		at sbus?

pciide*		at pci? flags 0x0000
wd*		at pciide? flags 0x0a00
atapiscsi*	at pciide?

# The flags on the esp entries below work around deficiencies in the driver:
#	bits 0-7:  disable disconnect/reselect for the corresponding target
#	bits 8-15: disable synch negotiation for target [bit-8]
#	Note: targets 4-7 have disconnect/reselect enabled on the premise
#	      that tape devices normally have one of these targets. Tape
#	      devices should be allowed to disconnect for the SCSI bus
#	      to operate acceptably.
dma*		at sbus?		# SBus
esp*		at dma?			# SBus
esp*		at sbus?
qla*		at sbus?
qlw*		at sbus?
softraid0	at root

ahc*		at pci?
siop*		at pci?
qlw*		at pci?
qla*		at pci?
option		QLE_NOFIRMWARE
qle*		at pci?
mpi*		at pci?
mpii*		at pci?
sili*		at pci?
arc*		at pci?
jmb*		at pci?
ahci*		at jmb?
pciide*		at jmb?
ahci*		at pci?
nvme*		at pci?

scsibus*	at scsi?
sd*		at scsibus?		# SCSI disks
cd*		at scsibus?		# SCSI CD-ROMs

acphy*		at mii?			# Altima AC101 PHYs
exphy*		at mii?			# 3Com internal PHYs
bmtphy*		at mii?			# Broadcom 10/100 PHYs
brgphy*		at mii?			# Broadcom Gigabit PHYs
eephy*		at mii?			# Marvell 88E1000 series PHY
xmphy*		at mii?			# XaQti XMAC-II PHYs
nsphy*		at mii?			# NS and compatible PHYs
nsphyter*	at mii?			# NS and compatible PHYs
qsphy*		at mii?			# Quality Semi QS6612 PHYs
luphy*		at mii?			# Lucent LU6612 PHY
sqphy*		at mii?			# Seeq 8x220 PHYs
dcphy*		at mii?			# Digital clone PHYs
amphy*		at mii?			# AMD AM79c873 PHYs
icsphy*		at mii?			# ICS 1890 PHYs
iophy*		at mii?			# Intel 82553 PHYs
inphy*		at mii?			# Intel 82555 PHYs
lxtphy*		at mii?			# Level1 LXT970 PHYs
rlphy*		at mii?			# Realtek 8139 internal PHYs
urlphy*		at mii?			# Realtek RTL8150L internal PHY
rgephy*		at mii?			# Realtek 8169S/8110S PHY
gentbi*		at mii?			# Generic 1000BASE-X ten-bit PHY
nsgphy*		at mii?			# NS gigabit PHYs
jmphy*		at mii?			# JMicron JMP202/JMP211 PHYs
ipgphy*		at mii?			# IC Plus IP1000A PHYs
ukphy*		at mii?			# Unknown PHYs

ohci*		at pci?
ohci*		at cardbus?
uhci*		at pci?
ehci*		at pci?
ehci*		at cardbus?
xhci*		at pci?
usb*		at ohci?
usb*		at uhci?
usb*		at ehci?
usb*		at xhci?

uhub*		at usb?
uhub*		at uhub?
uhidev*		at uhub?		# Human Interface Devices
ukbd*		at uhidev?		# USB keyboard
wskbd*		at ukbd?
umass*		at uhub?
aue*		at uhub?		# ADMtek AN986 Pegasus Ethernet
axe*		at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*		at uhub?		# ASIX Electronics AX88179 USB Ethernet
cue*		at uhub?		# CATC USB-EL1201A based Ethernet
kue*		at uhub?		# Kawasaki KL5KUSB101B based Ethernet
smsc*		at uhub?		# SMSC LAN95xx Ethernet
cdce*		at uhub?		# CDC Ethernet
udav*		at uhub?		# Davicom DM9601 based Ethernet
mos*		at uhub?		# MOSCHIP MCS7730/7830 10/100 Ethernet
ural*		at uhub?		# Ralink RT2500USB
rum*		at uhub?		# Ralink RT2501USB/RT2601USB
url*		at uhub?		# Realtek RTL8150L based adapters
ure*		at uhub?		# Realtek RTL8152 based adapters

sab*		at ebus?
sabtty*		at sab?
com*		at ebus?
comkbd*		at ebus?
wskbd*		at comkbd?

zs*		at sbus?
zs*		at fhc?
zstty*		at zs?
zskbd*		at zs?
wskbd*		at zskbd?

pckbc*		at ebus?		# controller
pckbd*		at pckbc?		#  ps2 keyboard
wskbd*		at pckbd?		#   generic keyboard layer

agten*		at sbus?		# Fujitsu AG-10e framebuffer
wsdisplay*	at agten?
bwtwo*		at sbus?		# bwtwo monochrome framebuffer
wsdisplay*	at bwtwo?
cgsix*		at sbus?		# cgsix 8-bit accelerated framebuffer
wsdisplay*	at cgsix?
cgthree*	at sbus?		# cgthree 8-bit framebuffer
wsdisplay*	at cgthree?
cgtwelve*	at sbus?		# cgtwelve 24-bit color framebuffer
wsdisplay*	at cgtwelve?
creator*	at mainbus0		# Creator3D/Elite3D framebuffers
creator*	at upa0
wsdisplay*	at creator?
gfxp*		at pci?			# PGX32 framebuffer
wsdisplay*	at gfxp?
ifb*		at pci?			# Expert3D/XVR-500 framebuffers
wsdisplay*	at ifb?
machfb*		at pci?			# PGX/PGX64 framebuffers
wsdisplay*	at machfb?
mgx*		at sbus?		# SMS MGX/MGXPlus framebuffer
wsdisplay*	at mgx?
radeonfb*	at pci?			# XVR-100 framebuffer
wsdisplay*	at radeonfb?
raptor*		at pci?			# Raptor framebuffer
wsdisplay*	at raptor?
rfx*		at sbus?		# RasterFlex framebuffer series
wsdisplay*	at rfx?
tvtwo*		at sbus?		# Parallax XVideo/PowerVideo framebuffer
wsdisplay*	at tvtwo?
vgafb*		at pci?			# PCI display
wsdisplay*	at vgafb?
vigra*		at sbus?		# Viagra framebuffer series
wsdisplay*	at vigra?
zx*		at sbus?		# Sun Leo (ZX) framebuffer
wsdisplay*	at zx?

xbox*		at sbus?
sbus*		at xbox?

prtc0		at mainbus0
pcons0		at mainbus0
wsdisplay*	at pcons?

pseudo-device	rd 1
pseudo-device	loop 1
pseudo-device	bpfilter 1
pseudo-device	vlan
pseudo-device	bio 1
@


1.120
log
@enable ure(4) where we already have url(4)
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.119 2016/04/15 01:40:25 dlg Exp $
d86 1
@


1.119
log
@enable nvme(4). it Just Works(tm).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.118 2015/07/17 22:52:29 tedu Exp $
d232 1
@


1.118
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.117 2015/01/21 12:07:36 kettenis Exp $
d171 1
@


1.117
log
@Enable ix(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.116 2014/12/05 16:48:09 kettenis Exp $
a22 1
option		INET
@


1.116
log
@Enable xhci(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.115 2014/11/24 02:03:37 brad Exp $
d102 1
@


1.115
log
@use the correct capitalization for Realtek.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.114 2014/10/10 05:43:36 deraadt Exp $
d207 1
a207 1
#xhci*		at pci?
d211 1
a211 1
#usb*		at xhci?
@


1.114
log
@Significant unification of RAMDISK* config files, making them diffable.
This makes it easier to remove components not required to do an install,
and subsequently add other desireable components ...
In snapshots (in various forks) for about a week.
Do some upgrades and installs, please.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.113 2014/09/14 19:02:43 brad Exp $
d105 1
a105 1
rl*		at pci?			# RealTek 81[23]9 ethernet
d107 2
a108 2
re*		at pci?			# RealTek 8169/8169S/8110S
re*		at cardbus?		# RealTek 8169/8169S/8110S
d193 1
a193 1
rlphy*		at mii?			# RealTek 8139 internal PHYs
@


1.113
log
@Add the ne(4) NE2000 PCI frontend.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.112 2014/04/07 08:27:24 brad Exp $
a2 1
# Machine architecture; required by config(8)
d4 1
d6 5
a10 2
# maxusers means mostly "let's get small" in terms of kernel malloc's
maxusers	2
a14 3
option		SUN4US
option		SUN4V

a15 3
#option		USBVERBOSE

#option		DDB		# need this to see what's happening
d17 9
a25 15
option		TIMEZONE=0	# time zone to adjust RTC time by
option		DST=0		# daylight saving time used by RTC

option		SMALL_KERNEL
option		NO_PROPOLICE
option		FFS		# UFS
option		FFS2		# UFS2
option		NFSCLIENT	# Network File System client
option		CD9660		# ISO 9660 + Rock Ridge file system
option		MSDOSFS		# MS-DOS file system
option		UDF		# UDF (DVD) file system
option		INET		# IP + ICMP + TCP + UDP
option		INET6		# IPv6 (needs INET)
option		BOOT_CONFIG	# add support for boot -c
option		CRYPTO		# Cryptographic framework
d31 4
a34 2
# Generic swap; second partition of root disk or network.
config		bsd	root on rd0a
d36 88
a123 95
# Main bus and CPU .. all systems.
mainbus0 at root
cpu0	at mainbus0
ssm*	at mainbus0
cpu0	at ssm?
cmp*	at mainbus0
cpu0	at cmp?
core*	at cmp?
cpu0	at core?

# Bus types found on SPARC systems.
sbus*	at mainbus0
upa0	at mainbus0
central0 at mainbus0
fhc0	at central0
fhc*	at mainbus0
psycho*	at mainbus0
pci*	at psycho?
schizo*	at mainbus0
schizo*	at ssm?
pci*	at schizo?
pyro*	at mainbus0
pci*	at pyro?
vpci*	at mainbus0
pci*	at vpci?
pci*	at ppb?
ppb*	at pci?
ebus*	at mainbus0
ebus*	at pci?
vbus0	at mainbus0
sbbc*	at pci?
cbus*	at vbus?

# CardBus bus support
cardbus* at cardslot?
pcmcia*	at cardslot?
cbb*	at pci?
cardslot* at cbb?

ath*	at pci?			# Atheros AR5k (802.11a/b/g)
ath*	at cardbus?		# Atheros AR5k (802.11a/b/g)
athn*	at pci?			# Atheros AR9k (802.11a/g/n)
athn*	at cardbus?		# Atheros AR9k (802.11a/g/n)
ral*	at pci?			# Ralink RT2500/RT2501/RT2600
ral*	at cardbus?		# Ralink RT2500/RT2501/RT2600
com*	at pcmcia?		# PCMCIA modems/serial ports
ep*	at pcmcia?		# PCMCIA based 3C5xx ethernet
ne*	at pcmcia?		# PCMCIA based NE2000 ethernet
wi*	at pci?			# WaveLAN IEEE 802.11DS
wi*	at pcmcia?		# WaveLAN IEEE 802.11DS

# PCI Ethernet
hme*	at pci?			# Sun Happy Meal 10/100
gem*	at pci?			# Sun GEM 10/100/Gigabit
cas*	at pci?			# Sun Cassini 100/Gigabit
ti*	at pci?			# Alteon Tigon 1Gb ethernet
skc*	at pci?			# SysKonnect GEnesis 984x
sk*	at skc?			#  each port of above
mskc*	at pci?			# Marvell Yukon-2
msk*	at mskc?		#  each port of above
fxp*	at pci?			# EtherExpress 10/100B ethernet
xl*	at pci?			# 3C9xx ethernet
xl*	at cardbus?		# 3C9xx ethernet
pcn*	at pci?			# AMD PCnet-PCI Ethernet
de*	at pci?			# DC21X4X-based ethernet
dc*	at pci?			# 21143, "tulip" clone ethernet
dc*	at cardbus?		# 21143, "tulip" clone ethernet
ne*	at pci?			# NE2000-compat ethernet cards
epic*	at pci?			# SMC EPIC/100 ethernet
em*	at pci?			# Intel Pro/1000 ethernet
#ixgb*	at pci?			# Intel Pro/10Gb ethernet
bge*	at pci?			# Broadcom BCM570x (aka Tigon3)
bnx*	at pci?			# Broadcom BCM5706/5708 GigE
stge*	at pci?			# Sundance TC9021 GigE
rl*	at pci?			# RealTek 81[23]9 ethernet
vr*	at pci?			# VIA Rhine ethernet
re*	at pci?			# RealTek 8169/8169S/8110S
re*	at cardbus?		# RealTek 8169/8169S/8110S
jme*	at pci?			# JMicron JMC250/JMC260 Ethernet

auxio*	at ebus?
auxio*	at sbus?
#com*	at ebus?
clock*	at sbus?			# Mostek clock
clock*	at ebus?
clock0	at fhc?
rtc*	at ebus?			# DS1287/M5819 clock
timer*	at mainbus0			# Timer chip

# Virtual devices for sun4v systems.
vcons0	at vbus?
vrtc0	at vbus?
vrng0	at vbus?
vdsk*	at cbus?
vnet*	at cbus?
a124 1
## Lance Ethernet - AMD7990
d131 13
a143 16
# Quad-ethernet glue device, and sub-devices
qec*	at sbus?
qe*	at qec?
be*	at qec?

hme*	at sbus?
ti*	at sbus?
gem*	at sbus?

pciide*	at pci? flags 0x0000
wd*	at pciide? flags 0x0a00
atapiscsi* at pciide?

#
# Note the flags on the esp entries below, that work around
# deficiencies in the current driver:
d150 97
a246 111
#
dma*	at sbus?		# SBus
esp*	at dma?			# SBus
esp*	at sbus?
qla*	at sbus?
qlw*	at sbus?
softraid0	at root		# Software RAID

ahc*	at pci?
siop*	at pci?
qlw*	at pci?
qla*	at pci?
option QLE_NOFIRMWARE
qle*	at pci?
mpi*	at pci?
mpii*	at pci?
sili*	at pci?
arc*	at pci?
jmb*	at pci?
ahci*	at jmb?
pciide*	at jmb?
ahci*	at pci?


# These entries find devices on all SCSI busses and assign
# unit numers dynamically.
scsibus* at scsi?
sd*	at scsibus?		# SCSI disks
cd*	at scsibus?		# SCSI CD-ROMs

# Media Independent Interface (mii) drivers)
acphy*	at mii?			# Altima AC101 PHYs
exphy*	at mii?			# 3Com internal PHYs
bmtphy*	at mii?			# Broadcom 10/100 PHYs
brgphy*	at mii?			# Broadcom Gigabit PHYs
eephy*	at mii?			# Marvell 88E1000 series PHY
xmphy*	at mii?			# XaQti XMAC-II PHYs
nsphy*	at mii?			# NS and compatible PHYs
nsphyter*	at mii?		# NS and compatible PHYs
qsphy*	at mii?			# Quality Semi QS6612 PHYs
luphy*	at mii?			# Lucent LU6612 PHY
sqphy*	at mii?			# Seeq 8x220 PHYs
dcphy*	at mii?			# Digital clone PHYs
amphy*	at mii?			# AMD AM79c873 PHYs
icsphy*	at mii?			# ICS 1890 PHYs
iophy*	at mii?			# Intel 82553 PHYs
inphy*	at mii?			# Intel 82555 PHYs
lxtphy*	at mii?			# Level1 LXT970 PHYs
rlphy*	at mii?			# RealTek 8139 internal PHYs
urlphy*	at mii?			# Realtek RTL8150L internal PHY
rgephy*	at mii?			# Realtek 8169S/8110S PHY
gentbi*	at mii?			# Generic 1000BASE-X ten-bit PHY
nsgphy*	at mii?			# NS gigabit PHYs
jmphy*	at mii?			# JMicron JMP202/JMP211 PHYs
ipgphy*	at mii?			# IC Plus IP1000A PHYs
ukphy*	at mii?			# Unknown PHYs

# PCI USB Controllers
ohci*	at pci?			# Open Host Controller
ohci*	at cardbus?
uhci*	at pci?			# Universal Host Controller (Intel)
ehci*	at pci?			# Enhanced Host Controller
ehci*	at cardbus?
#xhci*	at pci?			# eXtensible Host Controller

# USB bus support
usb*	at ohci?
usb*	at uhci?
usb*	at ehci?
#usb*	at xhci?

# USB devices
uhub*	at usb?			# USB Hubs
uhub*	at uhub?		# USB Hubs
uhidev*	at uhub?		# Human Interface Devices
ukbd*	at uhidev?		# USB keyboard
wskbd*	at ukbd?
umass*	at uhub?		# USB Mass Storage devices
aue*	at uhub?		# ADMtek AN986 Pegasus Ethernet
axe*	at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*	at uhub?		# ASIX Electronics AX88179 USB Ethernet
cue*	at uhub?		# CATC USB-EL1201A based Ethernet
kue*	at uhub?		# Kawasaki KL5KUSB101B based Ethernet
smsc*	at uhub?		# SMSC LAN95xx Ethernet
cdce*	at uhub?		# CDC Ethernet
udav*	at uhub?		# Davicom DM9601 based Ethernet
mos*	at uhub?		# MOSCHIP MCS7730/7830 10/100 Ethernet
ural*	at uhub?		# Ralink RT2500USB
rum*	at uhub?		# Ralink RT2501USB/RT2601USB
url*	at uhub?		# Realtek RTL8150L based adapters

# SAB82532 based serial ports
sab*	at ebus?
sabtty* at sab?

# NS16550 based serial ports
com*	at ebus?
comkbd*	at ebus?
wskbd* at comkbd?

# Z8530 based serial ports
zs*	at sbus?
zs*	at fhc?
zstty*	at zs?
zskbd*	at zs?
wskbd*	at zskbd?

# i8042 based serial ports (PS/2 ports)
pckbc*	at ebus?			# controller
pckbd*	at pckbc?			#  ps2 keyboard
wskbd*	at pckbd?			#   generic keyboard layer
a247 1
# Framebuffers
a283 1
# ``XBox'' SBus Expansion
d287 9
a295 12
## PROM console driver -- if all else fails
pcons0	at mainbus0			# PROM console
wsdisplay* at pcons?

## PROM clock -- if all else failse
prtc0	at mainbus0

pseudo-device	rd	2	# ramdisk
pseudo-device	loop	1	# network loopback
pseudo-device	bpfilter 1	# packet filter
pseudo-device	vlan		# IEEE 802.1Q VLAN 
pseudo-device	bio	1	# ioctl multiplexing device
@


1.112
log
@Add axen(4) wherever axe(4) is.

ok mpi@@ yuo@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.111 2014/04/05 16:33:14 deraadt Exp $
d110 1
@


1.111
log
@qla and qle are working well enough, so just delete use of isp.  don't
even comment the lines.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.110 2014/03/28 16:24:57 brad Exp $
d247 1
@


1.110
log
@Add commented out entries for xhci(4).

ok mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.109 2014/03/18 16:58:45 deraadt Exp $
a170 1
#isp*	at sbus?
a176 1
#isp*	at pci?
@


1.109
log
@First setup that stops using isp(4), and relies on ql[aew](4).
Not due to testing... but because they can't fit side by side.
ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.108 2014/03/15 22:29:28 kettenis Exp $
d232 1
d238 1
@


1.108
log
@Enable qlw(4) at sbus(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.107 2014/03/14 05:38:31 jmatthew Exp $
d171 1
a171 1
isp*	at sbus?
d178 1
a178 1
isp*	at pci?
d181 1
@


1.107
log
@enable qla(4) and qle(4) in ramdisks, except on sgi where the cdfs overflows
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.106 2014/03/08 18:28:24 kettenis Exp $
d173 1
@


1.106
log
@Enable qlw(4) on alpha/amd64/i386/macppc/sgi/sparc64 to force people to test.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.105 2014/02/19 05:32:57 jmatthew Exp $
d172 1
a172 1
#qla*	at sbus?
d179 2
a180 2
#qla*	at pci?
#qle*	at pci?
@


1.105
log
@add qla and qle everywhere we currently have isp, commented out except for
qle in GENERIC on i386, amd64 and sparc64, where it's reasonably well tested
and likely to be useful.

requested by deraadt@@ and kettenis@@, ok dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.104 2013/08/20 09:06:02 dlg Exp $
d178 1
@


1.104
log
@enable mpii

suggested by kettenis because i enabled it in GENERIC
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.103 2012/10/21 17:46:33 deraadt Exp $
d172 1
d178 2
@


1.103
log
@I want msdos filesystem support on the big bsd.rd
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.102 2012/09/27 14:01:35 jsg Exp $
d178 1
@


1.102
log
@enable smsc
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.101 2011/06/29 20:52:09 matthew Exp $
d29 1
@


1.101
log
@Replace all instances of "scsibus* at hba?" with a single "scsibus* at
scsi?" rule, similar to how ethernet PHY drivers attach at mii.

Discussed on icb.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.100 2011/05/24 20:27:11 matthew Exp $
d241 1
@


1.100
log
@On OpenBSD, we've always attached scsibus(4) to umass(4), even for
ATAPI devices.  atapiscsi(4) is only for handling ATAPI devices on an
ATA bus, so umass(4) shouldn't care about it.

ok krw@@, dlg@@; no objections from deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.99 2011/03/08 19:57:51 deraadt Exp $
a134 1
scsibus* at vdsk?
a155 1
scsibus* at atapiscsi?
a170 1
scsibus* at esp?
a171 1
scsibus* at softraid?
a183 7
scsibus*	at ahc?
scsibus*	at siop?
scsibus*	at mpi?
scsibus*	at sili?
scsibus*	at arc?
scsibus*	at ahci?
scsibus*	at isp?
d187 1
a236 1
scsibus* at umass?
@


1.99
log
@vrng should go onto the ramdisk.
ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.98 2010/04/19 10:44:33 dcoppa Exp $
a247 1
atapiscsi* at umass?
@


1.98
log
@Add missing bits for complete softraid support to sparc/sparc64
ramdisks.

OK marco@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.97 2010/04/03 00:53:30 deraadt Exp $
d133 1
@


1.97
log
@add bnx; from brad
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.96 2009/11/15 17:24:06 deraadt Exp $
d33 1
@


1.96
log
@athn works on sparc64
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.95 2009/09/01 19:49:59 kettenis Exp $
d112 1
@


1.95
log
@Enable SBus ti(4) here as well.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.94 2009/07/12 19:17:50 kettenis Exp $
d80 1
d82 2
@


1.94
log
@Enable gem@@sbus.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.93 2009/07/05 17:13:25 kettenis Exp $
d145 1
@


1.93
log
@radeonfb(4), an accelerated framebuffer for Sun XVR-100 boards (which have an
ATI Radeon 7000 chip on them).  While there, make gfxp(4) depend on rasops32
just in case somebody removes other framebuffers that pull this in from their
kernel config.

ok deraadt@@, miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.92 2009/06/24 15:02:18 todd Exp $
d145 1
a145 1
#gem*	at sbus?
@


1.92
log
@enable softraid
test built and booted by me
ok marco@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.91 2009/06/24 11:38:40 deraadt Exp $
d296 2
@


1.91
log
@for the isp(4) driver, invert the meaning of the options which pull
firmwares into the smaller (and larger) media
ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.90 2009/06/04 00:26:17 kettenis Exp $
d167 2
d324 1
a324 1
pseudo-device	bio	1
@


1.90
log
@Enable gfxp(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.89 2009/06/02 04:34:16 kettenis Exp $
a165 1
option ISP_COMPILE_1000_FW=1
a178 1
option ISP_COMPILE_FW=1
a180 1
scsibus*	at isp?
d185 1
d322 1
@


1.89
log
@Enable machfb(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.88 2009/04/28 17:10:24 deraadt Exp $
d288 2
@


1.88
log
@put vlan support onto these media
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.87 2009/03/29 21:57:26 kettenis Exp $
d290 2
@


1.87
log
@Enable ahc(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.86 2009/03/01 20:59:09 kettenis Exp $
d319 1
@


1.86
log
@Enable raptor(4) here too.  Pointed out by deraadt@@ and miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.85 2009/02/10 19:06:40 damien Exp $
d169 1
d181 1
@


1.85
log
@remove run(4) from some RAMDISK
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.84 2009/02/10 18:35:44 damien Exp $
d290 2
@


1.84
log
@enable run(4) everywhere where ural(4) and rum(4) are enabled.
run(4) has been reported to work on sparc64 by Maxim Belooussov so I'm
pretty confident that it works on all arches.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.83 2009/01/14 13:24:11 kettenis Exp $
a248 1
run*	at uhub?		# Ralink RT2700U/RT2800U/RT3000U
@


1.83
log
@Enable vsdk(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.82 2009/01/10 19:04:58 kettenis Exp $
d249 1
@


1.82
log
@Enable cbus(4) and vnet(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.81 2009/01/06 23:03:16 jasper Exp $
d128 2
@


1.81
log
@- add and enable ipgphy(4) everywhere there's a stge(4) entry.
(if the stge(4) entry is commented, so is the ipgphy(4) entry then).

this allows ipgphy0 to attach to my stge0, which has a IC+ 1000A chip

discussed with and ok jsg@@, ok dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.80 2008/12/28 00:02:35 kettenis Exp $
d72 1
d128 1
@


1.80
log
@Add ifb(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.79 2008/10/23 17:26:26 deraadt Exp $
d212 1
@


1.79
log
@add mos(4) to the most relevant config files
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.78 2008/09/29 22:43:58 deraadt Exp $
d281 2
@


1.78
log
@jme(4) works on sparc64; ok jsg
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.77 2008/08/24 20:13:21 deraadt Exp $
d241 1
@


1.77
log
@many more devices for the RAMDISK
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.76 2008/07/12 13:20:42 kettenis Exp $
d113 1
d211 1
@


1.76
log
@Add core(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.74 2008/07/06 07:27:43 kettenis Exp $
d73 15
d99 1
d103 1
d112 1
d214 1
d217 1
d230 12
@


1.75
log
@Enable ssm(4) and remove hacks that worked around the fact that we didn't
have it.
@
text
@d48 2
@


1.74
log
@Add sbbc(4), a driver for the BootBus controller on Serengeti and StarCat
systems that provides time of day services and (in the future) console
services.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.73 2008/07/01 04:50:59 brad Exp $
d44 2
d58 1
@


1.73
log
@Enable FFS2 on most of the larger RAMDISK media.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.72 2008/06/14 02:07:06 kettenis Exp $
d66 1
@


1.72
log
@Add cmp(4) here too.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.71 2008/05/21 19:23:15 kettenis Exp $
d26 1
@


1.71
log
@First step towards supporting sun4us machines with Fujitsu's SPARC64-V CPU.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.70 2008/04/02 22:32:43 kettenis Exp $
d43 2
@


1.70
log
@Add nsgphy(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.69 2008/03/30 12:30:02 kettenis Exp $
d12 1
@


1.69
log
@More sun4v support.  GENERIC and RAMDISK kernels will now boot on both
sun4u and sun4v.  GENERIC.MP won't work yet though.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.68 2008/03/13 23:06:19 kettenis Exp $
d181 1
@


1.68
log
@Add prtc(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.67 2008/02/02 10:16:41 dlg Exp $
d12 2
d55 2
d61 1
d94 4
@


1.67
log
@id like to install via a fibre gem on my 880, so add the gentbi phy that it
uses.

ok kettenis@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.66 2007/07/02 14:29:37 dlg Exp $
d246 3
@


1.66
log
@allow pciide to attach to jmb as well as ahci
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.65 2007/07/02 02:28:12 jsg Exp $
d171 1
@


1.65
log
@Add arc/jmb/ahci here as well.
Suggested by and ok dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.64 2007/05/26 16:52:10 kettenis Exp $
d134 1
@


1.64
log
@Add re(4).  From brad at comstyle dot com.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.63 2007/05/01 15:22:23 deraadt Exp $
d131 4
d141 2
@


1.63
log
@RAMDISK kernels do not need DIAGNOSTIC
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.62 2007/04/11 08:56:19 dlg Exp $
d79 1
d163 1
@


1.62
log
@sili(4) works, why not enable it?
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.61 2007/04/04 20:47:54 kettenis Exp $
a21 1
option		DIAGNOSTIC	# internal consistency checks
@


1.61
log
@Enable pyro(4) and ebus(4) at mainbus(4).  Reorder bus drivers such that
the order in GENERIC and RAMDISK is identical.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.60 2007/03/07 06:23:02 miod Exp $
d130 1
d136 1
@


1.60
log
@For unsupported (yet) Expert3D style frame buffers, attach pcons and attach
a really dumb wsdisplay to pcons, so that wskbd/wsmouse input drivers can be
used for input, and prom for output.

This is a band-aid for the release, so that people with such frame buffers
do not need to unplug them or switch to serial console to install OpenBSD.

Probably not the best way to do this, but this one has a minimal footprint
and no tentacles in wscons.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.59 2007/02/25 22:29:41 kettenis Exp $
d42 3
d48 2
a49 2

# Bus types found on SPARC systems.
d52 2
a53 4
sbus*	at mainbus0		# Ultra 1/E4500
psycho*	at mainbus0
upa0	at mainbus0
pci*	at psycho?		# Ultra 5
d56 1
@


1.59
log
@Add cas(4).  Ad a few missing comments while there.

stolen from deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.58 2006/12/09 20:06:48 miod Exp $
d33 1
d232 1
@


1.58
log
@Do not make sun terminal emulation selected by the wsemul_sun frame buffer
attribute anymore; remove it and use option WSEMUL_SUN instead, which gets
added to all sparc* kernels.

While there, do not compile vt100 emulation on sparc* kernels, this saves 16+
KB of text.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.57 2006/11/26 19:10:16 dlg Exp $
d57 3
a59 2
hme*	at pci?
gem*	at pci?
@


1.57
log
@enable mpi
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.56 2006/11/25 15:57:16 brad Exp $
d30 3
@


1.56
log
@add commented out entries for gem@@sbus
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.55 2006/08/30 22:19:29 deraadt Exp $
d122 2
a125 1

d127 1
@


1.55
log
@we can fit ehci & pci verbose.  Much nicer.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.54 2006/08/17 19:24:55 brad Exp $
d94 1
d96 1
@


1.54
log
@enable msk(4) in a few more places.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.53 2006/06/26 22:16:23 miod Exp $
d12 3
d155 1
d160 1
@


1.53
log
@Enable wide targets on FAS366 esp; note that this changes the way esp
user-controllable device flags are parsed, be sure to rerun config(8) on your
next kernel compile.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.52 2006/06/22 23:10:28 brad Exp $
d56 2
@


1.52
log
@Enable sk(4).

ok reyk@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.51 2006/06/21 19:28:08 jason Exp $
d107 1
a107 1
esp*	at dma? flags 0x0000	# SBus
@


1.51
log
@Don't need option SUN4U.  It's not -really- an option on sparc64, duh.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.50 2005/11/15 01:12:49 brad Exp $
d54 2
a55 2
#skc*	at pci?			# SysKonnect GEnesis 984x
#sk*	at skc?			#  each port of above
@


1.50
log
@add ixgb(4) though commented out for now.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.49 2005/11/14 23:03:06 brad Exp $
a4 2

option		SUN4U
@


1.49
log
@add de and pcn
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.48 2005/10/10 23:02:21 brad Exp $
d65 1
@


1.48
log
@add ti(4), commented out sk(4) and some PHY
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.47 2005/06/30 01:37:33 brad Exp $
d60 2
@


1.47
log
@enable bge too
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.46 2005/06/30 01:08:48 brad Exp $
d55 3
a57 1
#ti*	at pci?			# Alteon Tigon 1Gb ethernet
d128 1
a128 1
brgphy*	at mii?			# Broadcom PHYs
d130 1
d132 1
d138 1
@


1.46
log
@add stge
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.45 2005/06/16 14:13:26 deraadt Exp $
d61 1
a61 1
#bge*	at pci?			# Broadcom BCM570x (aka Tigon3)
@


1.45
log
@try schizo in RAMDISK
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.44 2005/05/16 16:56:44 brad Exp $
d61 2
d127 1
@


1.44
log
@add epic(4)
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.43 2005/05/01 07:54:43 david Exp $
d42 2
@


1.43
log
@spacing; ok miod@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.42 2005/04/14 19:59:49 brad Exp $
d57 1
d60 1
a60 1
vr*	at pci?				# VIA Rhine ethernet
@


1.42
log
@+luphy
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.41 2005/03/30 17:08:57 deraadt Exp $
@


1.41
log
@UDF here too, says mickey and henning
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.40 2005/03/05 01:49:02 miod Exp $
d124 1
@


1.40
log
@Now that xbox sort-of works on sparc64, port the cgtwelve driver, since
the only way to connect it to a sparc64 machine is via an xbox device.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.38 2005/02/15 11:03:46 jsg Exp $
d25 1
@


1.39
log
@Preliminary xbox support: attaches, memory mapping and interrupts work, but
DMA transfers are not implemented yet, and are disabled (which causes drivers
to SBus cards on the xbox to fail to attach).

In practice, this allows frame buffers to work, maybe more devices; DMA
support will be worked on in the near future.
@
text
@d170 3
a172 3
vgafb*		at pci?			# PCI display
wsdisplay*	at vgafb?
bwtwo*		at sbus?		# bw2, sbus mono framebuffer
d174 1
a174 1
cgsix*		at sbus?		# cg6, sbus color framebuffer
d176 1
a176 1
cgthree*	at sbus?		# cg3, sbus color framebuffer
d178 7
a184 2
zx*		at sbus?		# Sun Leo (ZX) framebuffer
wsdisplay*	at zx?
a186 4
mgx*		at sbus?		# SMS MGX/MGXPlus framebuffer
wsdisplay*	at mgx?
agten*		at sbus?		# Fujitsu AG-10e framebuffer
wsdisplay*	at agten?
d189 2
d193 2
a194 3
creator*	at mainbus0
creator*	at upa0
wsdisplay*	at creator?
@


1.38
log
@Enable phys found in various USB devices on more archs.
ok brad@@, dlg@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.37 2004/12/30 02:18:16 dlg Exp $
d193 4
@


1.37
log
@add ehci and enable atu in GENERIC. get rid of the flags on usb since they
are no longer needed for attachement of devices before root is mounted.

ok deraadt@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.36 2004/12/28 23:04:46 brad Exp $
d117 1
d119 1
d129 2
@


1.36
log
@add sqphy
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.35 2004/11/29 18:12:50 miod Exp $
d134 2
a135 2
usb*	at ohci? flags 0x1
usb*	at uhci? flags 0x1
@


1.35
log
@Port the remaining two sbus framebuffer drivers to sparc64; tvtwo untested
due to lack of hardware.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.34 2004/10/20 23:11:01 miod Exp $
d121 1
@


1.34
log
@Provide real console drivers on installation media, and deem pcons obsolete
(I still need to port a few SBUS video drivers from sparc to sparc64 for
pcons to become really really unlikely used).

GENERIC is just being reordered, RAMDISK* get the real additions, and it
still fits even on the U1/1E/2 floppy disk.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.33 2004/10/20 23:04:57 miod Exp $
d181 4
@


1.33
log
@vr(4) now works out of the box and brings defenceless sparc64 in a new age
of misery, reported by Jean-Marc "Batou" Harang.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.32 2004/09/23 17:34:15 jason Exp $
d43 1
a68 3
## PROM console driver -- if all else fails
pcons0	at mainbus0			# PROM console

d127 60
@


1.32
log
@central@@mainbus, fhc@@central, fhc@@mainbus, and clock@@fhc
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.31 2004/09/21 19:19:57 drahn Exp $
d56 2
@


1.31
log
@Allow for multiple sbus host bridges. eg, on e4500. from jason, ok miod
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.30 2004/09/16 09:35:37 deraadt Exp $
d36 4
d62 1
@


1.30
log
@spacing
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.29 2004/09/16 09:14:04 mickey Exp $
d37 1
a37 1
sbus0	at mainbus0		# Ultra 1
@


1.29
log
@cleanup deafult locators (blah ?); please check that your most hated architecture is still fluffy (;
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.28 2004/08/26 03:44:49 brad Exp $
d56 1
a56 1
clock*	at sbus?			# Mostek clock 
@


1.28
log
@sync with GENERIC for PCI NICs and MII PHY drivers

ok deraadt@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.27 2004/03/20 14:56:05 deraadt Exp $
d37 1
a37 1
sbus0	at mainbus0				# Ultra 1
d39 1
a39 1
pci*	at psycho?				# Ultra 5
d41 1
a41 1
ppb*	at pci? dev ? function ?
d45 7
a51 7
hme*	at pci? dev ? function ?
gem*	at pci? dev ? function ?
#ti*	at pci? dev ? function ?		# Alteon Tigon 1Gb ethernet
fxp*	at pci? dev ? function ?		# EtherExpress 10/100B ethernet
xl*	at pci? dev ? function ?		# 3C9xx ethernet
dc*	at pci? dev ? function ?		# 21143, "tulip" clone ethernet
em*	at pci? dev ? function ?		# Intel Pro/1000 ethernet
d56 1
a56 1
clock*	at sbus?				# Mostek clock 
d58 2
a59 2
rtc*	at ebus?				# DS1287/M5819 clock
timer*	at mainbus0				# Timer chip
d62 1
a62 1
pcons0	at mainbus0				# PROM console
d77 3
a79 3
pciide*	at pci? dev ? function ? flags 0x0000
wd*	at pciide? channel ? drive ? flags 0x0a00
atapiscsi* at pciide? channel ?
d92 2
a93 2
dma*	at sbus?				# SBus
esp*	at dma? flags 0x0000			# SBus
d99 2
a100 2
siop*	at pci? dev ? function ?
isp*	at pci? dev ? function ?
d108 2
a109 2
sd*	at scsibus? target ? lun ?	# SCSI disks
cd*	at scsibus? target ? lun ?	# SCSI CD-ROMs
d112 10
a121 10
exphy*	at mii? phy ?				# 3Com internal PHYs
brgphy*	at mii? phy ?				# Broadcom PHYs
nsphy*	at mii? phy ?				# NS and compatible PHYs
qsphy*	at mii? phy ?				# Quality Semi QS6612 PHYs
dcphy*	at mii? phy ?				# Digital clone PHYs
amphy*	at mii? phy ?				# AMD AM79c873 PHYs
iophy*	at mii? phy ?				# Intel 82553 PHYs
inphy*	at mii? phy ?				# Intel 82555 PHYs
lxtphy*	at mii? phy ?				# Level1 LXT970 PHYs
ukphy*	at mii? phy ?				# Unknown PHYs
@


1.27
log
@add support for the lebuffer sbus le units
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.26 2004/01/04 00:29:50 deraadt Exp $
d44 1
d47 4
a50 2
#ti*	at pci? dev ? function ?
dc*	at pci? dev ? function ?
d112 2
d118 3
@


1.26
log
@put INET6, rtsol, and ping6 onto media where it fits.  install.sub changes
which begin to enable use of this will follow at a later time.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.25 2003/06/13 20:27:50 brad Exp $
d62 5
a66 3
le*	at sbus?
ledma*	at sbus?
le*	at ledma?
@


1.25
log
@no more "option _LP64".
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.24 2003/06/13 19:21:25 deraadt Exp $
d26 1
@


1.24
log
@em fits
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.23 2003/05/14 23:32:35 miod Exp $
a6 1
option		_LP64
@


1.23
log
@Make the "slot" and "offset" locators for sbus drivers optional in
configuration lines.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.22 2003/05/13 22:45:11 miod Exp $
d48 1
@


1.22
log
@Add option NO_PROPOLICE, which explicitely disables the use of the propolice
stack protection when building kernels. Intended to be used on installation
media, with tight space constraints - currently, only added where
SMALL_KERNEL was already defined.

Not thoroughly tested, but requested by deraadt.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.21 2003/02/12 20:54:45 jason Exp $
d50 1
a50 1
auxio*	at sbus? slot ? offset ?
d52 1
a52 1
clock*	at sbus? slot ? offset ?		# Mostek clock 
d61 2
a62 2
le*	at sbus? slot ? offset ?
ledma*	at sbus? slot ? offset ?
d66 1
a66 1
qec*	at sbus? slot ? offset ?
d69 1
a69 1
hme*	at sbus? slot ? offset ?
d86 1
a86 1
dma*	at sbus? slot ? offset ?		# SBus
d88 2
a89 2
esp*	at sbus? slot ? offset ?
isp*	at sbus? slot ? offset ?
@


1.21
log
@disable tigon (uses arithmetic on bus_handle_t's)
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.20 2003/02/06 13:26:44 deraadt Exp $
d21 1
@


1.20
log
@include isp firmware on some sparc64 media; and resize the media that is
too small
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.19 2002/12/31 02:37:31 deraadt Exp $
d45 1
a45 1
ti*	at pci? dev ? function ?
@


1.19
log
@+ NFSCLIENT
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.18 2002/12/04 17:32:30 nate Exp $
d89 1
d94 1
@


1.18
log
@Make ti(4) use busdma and add all of the necessary stuff to support both
endian modes.  This makes ti now work on macppc and sparc64.
While we're at ti, clean up a bit of the code:
  Use SLIST instead of LIST
  Remove register
  Use bus_space instead of bcopy/bzero
  Don't use bitfields since it makes dealing with endianness annoying.

ok jason@@, deraadt@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.17 2002/07/28 01:39:14 krw Exp $
d23 1
a23 1
#option		NFSCLIENT	# Network File System client
@


1.17
log
@Add 'option NFSCLIENT' to macppc RAMDISK.

Delete (comment out) 'option NFSCLIENT' in sparc, sparc64, and sun3
RAMDISKs.

This brings the presence of /sbin/mount_nfs in the boot image and the
presence of NFSCLIENT in the RAMDISK kernel into alignment. Except for
sparc64 which will now have mount_nfs removed from the boot image to
save space.

mvme88k RAMDISK did not need to be adjusted as it only *looks* like it
does not have NFSCLIENT. It actually includes the system GENERIC.

Investigation for inconsistancies prompted by todd@@.

This solution recommended by deraadt@@.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.16 2002/07/01 00:31:49 miod Exp $
d45 1
@


1.16
log
@Add auxio at sbus.
How can I be expected to work on sparc64 if machdep.led_blink sysctl does
not work?
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.15 2002/05/17 01:41:30 deraadt Exp $
d23 1
a23 1
option		NFSCLIENT	# Network File System client
@


1.15
log
@isp* here too
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.14 2002/04/18 14:15:11 jason Exp $
d48 1
@


1.14
log
@Add amphy
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.13 2002/03/20 18:58:13 jason Exp $
d86 1
d90 1
d92 2
@


1.13
log
@add dcphy
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.12 2001/12/07 23:11:53 jason Exp $
d100 1
@


1.12
log
@Oops, need rtc in here, too
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.11 2001/12/06 22:28:32 jason Exp $
d99 1
@


1.12.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.12 2001/12/07 23:11:53 jason Exp $
a85 1
isp*	at sbus? slot ? offset ?
a88 1
isp*	at pci? dev ? function ?
a90 2
scsibus*	at isp?

a98 2
dcphy*	at mii? phy ?				# Digital clone PHYs
amphy*	at mii? phy ?				# AMD AM79c873 PHYs
@


1.12.2.2
log
@sync to -current
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.12.2.1 2002/06/11 03:38:42 art Exp $
d23 1
a23 1
#option		NFSCLIENT	# Network File System client
a47 1
auxio*	at sbus? slot ? offset ?
@


1.12.2.3
log
@sync
@
text
@d1 1
a1 1
# 	$OpenBSD$
a20 1
option		NO_PROPOLICE
d23 1
a23 1
option		NFSCLIENT	# Network File System client
a44 1
#ti*	at pci? dev ? function ?
d48 1
a48 1
auxio*	at sbus?
d50 1
a50 1
clock*	at sbus?				# Mostek clock 
d59 2
a60 2
le*	at sbus?
ledma*	at sbus?
d64 1
a64 1
qec*	at sbus?
d67 1
a67 1
hme*	at sbus?
d84 1
a84 1
dma*	at sbus?				# SBus
d86 2
a87 3
esp*	at sbus?
isp*	at sbus?
option ISP_COMPILE_1000_FW=1
a91 1
option ISP_COMPILE_FW=1
@


1.11
log
@add dc* here, too
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.10 2001/10/15 18:44:56 jason Exp $
d51 1
@


1.10
log
@Acer labs chipsets (like on Blade100/Netra X1) have bugs when UDMA mode 4
is used.  Disable that mode for now; from NetBSD.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.9 2001/10/12 23:09:34 deraadt Exp $
d45 1
@


1.10.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
# 	$OpenBSD$
@


1.10.4.2
log
@Merge in trunk
@
text
@a44 1
dc*	at pci? dev ? function ?
a49 1
rtc*	at ebus?				# DS1287/M5819 clock
@


1.10.4.3
log
@Merge in -current from about a week ago
@
text
@a98 1
dcphy*	at mii? phy ?				# Digital clone PHYs
@


1.10.4.4
log
@Sync the SMP branch with 3.3
@
text
@a44 1
#ti*	at pci? dev ? function ?
a47 1
auxio*	at sbus? slot ? offset ?
a85 2
isp*	at sbus? slot ? offset ?
option ISP_COMPILE_1000_FW=1
a88 2
isp*	at pci? dev ? function ?
option ISP_COMPILE_FW=1
a90 2
scsibus*	at isp?

a99 1
amphy*	at mii? phy ?				# AMD AM79c873 PHYs
@


1.10.4.5
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@a20 1
option		NO_PROPOLICE
d49 1
a49 1
auxio*	at sbus?
d51 1
a51 1
clock*	at sbus?				# Mostek clock 
d60 2
a61 2
le*	at sbus?
ledma*	at sbus?
d65 1
a65 1
qec*	at sbus?
d68 1
a68 1
hme*	at sbus?
d85 1
a85 1
dma*	at sbus?				# SBus
d87 2
a88 2
esp*	at sbus?
isp*	at sbus?
@


1.10.4.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d7 1
a26 1
option		INET6		# IPv6 (needs INET)
a47 1
em*	at pci? dev ? function ?		# Intel Pro/1000 ethernet
@


1.10.4.7
log
@Merge with the trunk
@
text
@d62 3
a64 5
le*		at sbus?
ledma*		at sbus?
le*		at ledma?
lebuffer*	at sbus?
le*		at lebuffer?
@


1.9
log
@disable com*
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.8 2001/10/10 04:24:12 deraadt Exp $
d67 1
a67 1
wd*	at pciide? channel ? drive ? flags 0x0000
@


1.8
log
@clean
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.7 2001/10/09 21:32:04 deraadt Exp $
d47 1
a47 1
com*	at ebus?
@


1.7
log
@no NBUF=
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.6 2001/09/29 03:17:21 art Exp $
a45 2
#### Standard system devices -- all required for a given architecture

a46 1

d48 3
a54 7
## Mostek clock 
clock*	at sbus? slot ? offset ?
clock*	at ebus?

## Timer chip found on (some) sun4u systems.
timer*	at mainbus0

d56 3
a58 3
le*		at sbus? slot ? offset ?
ledma*		at sbus? slot ? offset ?
le*		at ledma?
d61 4
a64 5
qec*		at sbus? slot ? offset ?
qe*		at qec?
be*		at qec?

hme*		at sbus? slot ? offset ?
d84 1
a84 1
scsibus*	at esp?
d91 2
a92 2
sd*		at scsibus? target ? lun ?	# SCSI disks
cd*		at scsibus? target ? lun ?	# SCSI CD-ROMs
@


1.6
log
@com at ebus
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.5 2001/09/26 01:24:36 jason Exp $
a10 2
# force default minimum number of buffers and dependents
option		NBUF=16
@


1.5
log
@add siop (and scsibus at siop)... This allows us to boot on E250
Thanks to chris@@ for testing.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.4 2001/09/22 18:00:24 deraadt Exp $
d51 2
@


1.4
log
@no need for ptys on a RAMDISK
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.3 2001/09/21 19:54:01 jason Exp $
d92 1
d94 2
a95 3
# SCSI bus layer.  SCSI devices attach to the SCSI bus, which attaches
# to the underlying hardware controller.
scsibus*	at esp?
@


1.3
log
@a bit smaller size, and add gem
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.2 2001/09/21 03:49:40 jason Exp $
a109 1
pseudo-device	pty	4	# pseudo-terminals
@


1.2
log
@bump size to 8192 and remove a sparc-ism
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.1 2001/09/17 22:00:08 jason Exp $
d15 1
a15 1
option		MINIROOTSIZE=8192
d46 1
a105 1

@


1.1
log
@ramdisk kernel for sparc64 (compiles... will need tweaking)
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.28 2001/06/27 05:46:27 art Exp $
a13 1
# the size for MINIROOTSIZE must insure: 16384+size(bsd) < RELOC(boot,bootxx)
d15 1
a15 1
option		MINIROOTSIZE=4352
@

