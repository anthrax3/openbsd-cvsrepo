head	1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.60
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.56
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.58
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.50
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.54
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.52
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.48
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.46
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.44
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.42
	OPENBSD_5_0:1.1.0.40
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.38
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.36
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.32
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.34
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.30
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.28
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.26
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.24
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.22
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.20
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.18
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.16
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.14
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.12
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.10
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	UBC:1.1.0.6
	UBC_SYNC_A:1.1
	SMP:1.1.0.4
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.02.17.01.29.20;	author henric;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2003.05.19.21.27.50;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
Add support for the Sun Enterprise 450
Reduce the size of a GENERIC kernel by ~190k
Remove the nasty pointer/bus_space_handle_t casts
Adds debug bus_space code including the ability to trace
    bus operations (it actually works now).

The following rules are now followed (and verfified by the debug
code):

1.  A "bus_space_handle_t" may only be used with the
    "bus_space_tag_t" that created it.
2.  Only "bus_space_map()" may create "bus_space_handle_t"s.
3.  A "bus_space_handle_t" may not be modified after it has
    been created (other than being destroyed by "bus_space_unmap()").


Thanks to help from mcbride, marc, jason, drahn, to anyone that might
have slipped my mind at the moment.

ok jason@@, deraadt@@
@
text
@#! /usr/bin/awk -f
# $OpenBSD: $
#
# Copyright (c) 2003 Henric Jungheim
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

function generate_code(text, lines, key2, value2) {
	for(r in row) {
		print "/*"
		print " * Implementing", value[r,"<TYPE>"]
		print " */"
		print
		for(i = 1; i <= lines; ++i) {
			out = text[i];
			for(k in key)
				gsub(key[k], value[r,key[k]], out);
			for(k in key2)
				gsub(key2[k], value2[key2[k]], out);

			print out;
		}
	}
}

BEGIN {
	lines = 1;
	raw_lines = 1;
	split("<NUM> <TYPE> <FMT> <LOAD> <STORE>", key);
	n = split( \
		"1,u_int8_t,%2.2x,lduba,stba;" \
		"2,u_int16_t,%4.4x,lduha,stha;" \
		"4,u_int32_t,%8.8x,lduwa,stwa;" \
		"8,u_int64_t,%16.16llx,ldxa,stxa", row, ";");
	for(r in row) {
		if(split(row[r], tmp, ",") != length(key)) {
			print "bad column at ", r;
			print "row =", row[r];
			exit;
		}
		for(k in key)
			value[r,key[k]] = tmp[k]; 
		delete tmp;
	}
	print "/*"
	print " * THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT EDIT."
	print " */"
	print
}

match($0, "^ECHO:") {
	print substr($0, RLENGTH + 1);
	next;
}

match($0, "^NRAW:") {
	text[lines] = substr($0, RLENGTH + 1);
	lines++;
	next;
}

match($0, "^RAW:") {
	raw_text[raw_lines] = substr($0, RLENGTH + 1);
	raw_lines++;
	next;
}

{
	text[lines] = $0;
	lines++;
	raw_text[raw_lines] = $0;
	raw_lines++;
}

END {
	k2[1] = "<RAW>"; k2[2] = "<ASI>";
	v2[k2[1]] = "";
	v2[k2[2]] = "asi";
	generate_code(text, lines, k2, v2);
	v2[k2[1]] = "raw_";
	v2[k2[2]] = "sasi";
	generate_code(raw_text, raw_lines, k2, v2);
}

@


1.1.6.1
log
@sync
@
text
@d2 1
a2 1
# $OpenBSD: busop.awk,v 1.1 2003/02/17 01:29:20 henric Exp $
@

