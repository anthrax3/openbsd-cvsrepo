head	1.12;
access;
symbols
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.10
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.6.0.20
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.18
	OPENBSD_5_0:1.6.0.16
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.14
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.12
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.10
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.12
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.10
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.6
	UBC_BASE:1.4
	SMP:1.4.0.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	SPARC64:1.1.1.1
	NETBSD:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2016.11.06.16.04.20;	author tb;	state Exp;
branches;
next	1.11;
commitid	tupV2UpHQlnB6RWH;

1.11
date	2015.11.16.19.33.52;	author miod;	state Exp;
branches;
next	1.10;
commitid	5gnqUR6VheSiU9SF;

1.10
date	2014.11.19.20.01.36;	author miod;	state Exp;
branches;
next	1.9;
commitid	9VZgPwegRuvi9VC1;

1.9
date	2013.01.01.18.49.33;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2012.08.30.19.29.14;	author pascal;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.21.14.46.20;	author pascal;	state Exp;
branches;
next	1.6;

1.6
date	2007.11.26.10.26.03;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.01.17.00.40;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.10.20.41.40;	author miod;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.09.06.19.12.34;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.22.10.20.41;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.18.15.51.10;	author jason;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.18.15.51.10;	author jason;	state Exp;
branches;
next	;

1.4.4.1
date	2001.10.31.03.07.59;	author nate;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2003.06.07.11.14.46;	author ho;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Do not create machine@@ symlinks in obj as root during includes:, but
defer their creation to later, so that they are owned by BUILDUSER.
This eliminates the last root-owned files in obj/ from 'make build'.
In addition, place a MACHINE == hppa test in hppa/stand/Makefile.inc
to avoid creating bogus symlinks on all other archs.

joint work with & ok natano, "let's try it" deraadt
@
text
@#	$OpenBSD: Makefile,v 1.11 2015/11/16 19:33:52 miod Exp $

LIB=	sa

.PATH:	${.CURDIR}/../../../../lib/libsa

CLEANFILES += machine

CFLAGS= ${CEXTRAFLAGS} ${AFLAGS} -O2 -D__INTERNAL_LIBSA_CREAD -nostdinc \
	-fno-pie \
	-I${.CURDIR} -I${.CURDIR}/../include -I${.CURDIR}/../.. \
	-I${.CURDIR}/../../.. -I${.CURDIR}/../../../.. \
	-I${.CURDIR}/../../../../lib/libsa \
	-I${.OBJDIR}

CPPFLAGS+= -D__INTERNAL_LIBSA_CREAD

# stand routines
SRCS=	alloc.c exit.c getfile.c getln.c globals.c \
	memcmp.c memcpy.c memset.c printf.c snprintf.c strerror.c strncpy.c

# io routines
SRCS+=	close.c closeall.c dev.c disklabel.c dkcksum.c fstat.c ioctl.c lseek.c \
	open.c read.c stat.c write.c cread.c

# network routines
SRCS+=	arp.c ether.c in_cksum.c net.c netif.c netudp.c rpc.c

# network info services
SRCS+=	bootp.c bootparam.c rarp.c

# boot filesystems
SRCS+=	ufs.c nfs.c cd9660.c

${OBJS}:	${.CURDIR}/../Makefile.inc

NOPROFILE=
NOPIC=

.if !make(clean) && !make(cleandir) && !make(includes) && !make(libdep) && \
    !make(sadep) && !make(salibdir) && !make(obj)
.BEGIN:
	@@([ -h machine ] || ln -s ${.CURDIR}/../../include machine)
.endif

install:

.include <bsd.lib.mk>
@


1.11
log
@Replace unbounded gets() in libsa with getln() which takes a buffer size,
and convert all gets() users.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2014/11/19 20:01:36 miod Exp $
d40 2
a41 1
.if !make(libdep) && !make(sadep) && !make(salibdir) && !make(obj)
@


1.10
log
@Move {recv,send}udp() out of net.c into their own file; to be used shortly.
Add the new files to the few md libsa builds which require it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2013/01/01 18:49:33 miod Exp $
d19 1
a19 1
SRCS=	alloc.c exit.c getfile.c gets.c globals.c \
@


1.9
log
@Remove libsa exec.c, not used by anything anymore; all boot blocks now use
loadfile or a derivative of.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2012/08/30 19:29:14 pascal Exp $
d27 1
a27 1
SRCS+=	arp.c ether.c in_cksum.c net.c netif.c rpc.c
@


1.8
log
@Kill NOPIE and NOPIE_FLAGS in sparc64/stand.  Binaries are identical according
to deraadt@@, ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2012/08/21 14:46:20 pascal Exp $
d19 1
a19 1
SRCS=	alloc.c exit.c exec.c getfile.c gets.c globals.c \
@


1.7
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2007/11/26 10:26:03 deraadt Exp $
d10 1
a38 1
NOPIE=
@


1.6
log
@few more dribbles of LIBKERN cleanup
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2003/06/01 17:00:40 deraadt Exp $
d38 1
@


1.5
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2001/10/10 20:41:40 miod Exp $
d39 1
a39 1
.if !make(libdep) && !make(sadep) && !make(salibdir) && !make(kernlibdir) && !make(obj)
@


1.4
log
@Enable zlib in libsa (i.e. compressed kernels support in bootloaders)
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2001/09/06 19:12:34 jason Exp $
d19 1
a19 1
	memcmp.c memcpy.c memset.c printf.c strerror.c strncpy.c
@


1.4.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.4.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4.4.1 2001/10/31 03:07:59 nate Exp $
d19 1
a19 1
	memcmp.c memcpy.c memset.c printf.c snprintf.c strerror.c strncpy.c
@


1.3
log
@use some make magic (borrowed from macppc) to build {obj/}machine
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2001/08/22 10:20:41 art Exp $
d14 2
@


1.2
log
@make it work with our make infrastructure.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 2001/08/18 15:51:10 jason Exp $
d37 4
a40 2
.NOPATH: machine
beforedepend: machine
a44 4

machine:
	rm -f machine
	ln -s ${.CURDIR}/../../include machine
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1997/09/17 10:46:23 downsj Exp $
d38 1
a38 1
${SRCS}: machine
@


1.1.1.1
log
@Enough of NetBSD/sparc64 for ofwboot to compile/link
@
text
@@
