head	1.13;
access;
symbols
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.8
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.6
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.4
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.10.0.6
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.4
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.12
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.8
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.6
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.10
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.6
	UBC_BASE:1.3
	SMP:1.3.0.4
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@.\" @;


1.13
date	2014.11.22.15.02.28;	author deraadt;	state dead;
branches;
next	1.12;
commitid	rH4FDTIbh81WkVKX;

1.12
date	2013.09.29.21.30.50;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2012.01.01.16.11.13;	author jsing;	state Exp;
branches;
next	1.10;

1.10
date	2010.04.06.06.33.50;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2010.03.06.16.16.43;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.31.19.20.05;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.14.20.50.15;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.06.20.19.38;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.06.21.45.33;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.07.07.45.13;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.04.23.58.55;	author miod;	state Exp;
branches
	1.3.4.1
	1.3.6.1;
next	1.2;

1.2
date	2001.10.04.23.56.58;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.06.19.49.17;	author jason;	state Exp;
branches;
next	;

1.3.4.1
date	2001.10.31.03.07.59;	author nate;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2003.03.27.23.42.37;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.06.07.11.14.46;	author ho;	state Exp;
branches;
next	;

1.3.6.1
date	2003.05.19.21.46.58;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Switch to using MI installboot, after a conversation with stsp.  He will
need this soon.
install tested by jsg
@
text
@.\"	$OpenBSD: installboot.8,v 1.12 2013/09/29 21:30:50 jmc Exp $
.\"	$NetBSD: installboot.8,v 1.1 1995/09/30 21:32:14 pk Exp $
.\"
.\" Copyright (c) 1995 Paul Kranenburg
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Paul Kranenburg.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 29 2013 $
.Dt INSTALLBOOT 8 sparc64
.Os
.Sh NAME
.Nm installboot
.Nd install a bootstrap on an FFS filesystem partition
.Sh SYNOPSIS
.Nm installboot
.Op Fl nv
.Ar bootblk
.Ar device
.Sh DESCRIPTION
.Nm installboot
prepares an FFS filesystem partition for boot-strapping from the PROM.
The sparc64 boot process is split into two parts: a small first-stage bootblock
that is written into the superblock area of a partition
.Po
and hence is limited in size to SBSIZE - DEV_BSIZE bytes
.Pc ,
and a second-stage boot program that resides in the filesystem proper.
The first-stage bootblock is loaded into memory by the PROM.
After it receives control, it loads the second-stage boot program
.Ar ofwboot
from the filesystem.
The second-stage boot program uses the device driver interface to
the PROM and the stand-alone filesystem code in
.Dq libsa.a
to locate and load the kernel.
The first-stage bootblock and second-stage boot program can be found in
.Pa /usr/mdec/bootblk
and
.Pa /usr/mdec/ofwboot
respectively.
The second-stage boot program commonly resides in the root directory as
.Pa /ofwboot .
.Pp
The options are as follows:
.Bl -tag -width flag
.It Fl n
Do not actually write anything on the disk.
.It Fl v
Verbose mode.
.El
.Pp
The arguments are:
.Bl -tag -width bootblk
.It Ar bootblk
The name of the file containing the first-stage bootblock.
.It Ar device
The name of the raw device in which the first-stage boot program
is to be installed.
This should correspond to the block device on which the file system containing
.Ar ofwboot
is mounted.
.El
.Sh EXAMPLES
The following commands will install the first-stage bootblock in the
root filesystem
.Pq assumed to be mounted on Dq sd0a
using the file
.Pa /ofwboot
as the second-stage boot program:
.Bd -literal -offset indent
# cp /usr/mdec/ofwboot /ofwboot
# /usr/mdec/installboot /usr/mdec/bootblk sd0a
.Ed
.Sh SEE ALSO
.Xr disklabel 8 ,
.Xr init 8
.Sh HISTORY
The
.Nm installboot
first appeared in
.Nx 1.1 .
@


1.12
log
@various fixes to sync usage() with SYNOPSIS, and make these pages a bit
more consistent;

feedback/ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.11 2012/01/01 16:11:13 jsing Exp $
d32 1
a32 1
.Dd $Mdocdate: January 1 2012 $
@


1.11
log
@Improve/clean up sparc64 installboot:

- Use opendev() like we do for installboot on many other archs.

- Use the term bootblock rather than prototype for the first-stage, since
  we install it verbatim.

- Read the bootblock into a zeroed buffer rather than messing around with
  mmap() and zeroing the end of the space.

- Make man page consistent with respect to the first-stage bootblock and
  second-stage boot program.

ok kettenis@@ jmc@@ (for the man part)
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.9 2010/03/06 16:16:43 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: March 6 2010 $
d77 1
a77 1
.Bl -tag -width ofwboot
d79 1
a79 1
the name of the file containing the first-stage bootblock.
d81 1
a81 1
the name of the raw device in which the first-stage boot program
@


1.10
log
@sparc64 has no boot(8) page; from Daniel Dickman
@
text
@d46 2
a47 2
The sparc bootblocks are split into two parts: a small first-stage program that
is written into the superblock area in a partition
d51 3
a53 3
and a second-stage program that resides in the filesystem proper.
The first-stage program is loaded into memory by the PROM.
After it receives control, it loads the second stage program
d60 3
a62 2
The second-stage boot program and the prototype code for the
first-stage bootprogram can be found in
a63 2
and
.Pa /usr/mdec/bootblk
d65 1
a65 1
The second-stage program commonly resides in the root directory as
d79 1
a79 1
the name of the prototype file for the first stage boot program.
d88 1
a88 1
The following commands will install the first-stage bootblocks in the
d93 1
a93 1
as the second-level boot program:
d96 1
a96 1
# /usr/mdec/installboot /usr/mdec/bootblk /dev/rsd0c
@


1.9
log
@remove the (now inaccurate) note about not being able to run
installboot on a mounted partition;

from J.C. Roberts
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.8 2007/05/31 19:20:05 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
a99 1
.Xr boot 8 ,
@


1.8
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.7 2006/05/14 20:50:15 martin Exp $
d32 1
a32 1
.Dd $Mdocdate$
a107 11
.Sh BUGS
.Nm installboot
requires simultaneous access to the mounted file system and
the raw device, but that is not allowed with the kernel
.Dv securelevel
variable set to a value greater than zero
.Pq the default ,
so
.Nm installboot
only works in single-user mode
.Pq or insecure mode - see Xr init 8 .
@


1.7
log
@- /usr/mdec is usually not in path, invoke installboot with full path
- /ofwboot does not get updated by installboot as one might think from
  the example, it has to be copied in place by hand
- Xr. boot(8)

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.6 2004/12/06 20:19:38 deraadt Exp $
d32 1
a32 1
.Dd September 6, 2001
@


1.6
log
@use raw device; wbx@@openbsd.de
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.5 2003/06/06 21:45:33 jmc Exp $
d89 1
a89 1
The following command will install the first-stage bootblocks in the
d96 2
a97 1
# installboot /usr/mdec/bootblk /dev/rsd0c
d100 1
@


1.5
log
@- section reorder
- new sentence, new line
- some macro fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.4 2003/02/07 07:45:13 jmc Exp $
d96 1
a96 1
installboot /usr/mdec/bootblk /dev/rsd0a
@


1.4
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.3 2001/10/04 23:58:55 miod Exp $
d52 2
a53 2
The first-stage program is loaded into memory by the PROM. After it receives
control, it loads the second stage program
d65 2
a66 2
respectively. The second-stage program commonly resides in the root directory
as
d83 2
a84 2
is to be installed.  This should correspond to the block device
on which the file system containing
d98 8
a116 8
.Sh SEE ALSO
.Xr disklabel 8 ,
.Xr init 8
.Sh HISTORY
The
.Nm installboot
first appeared in
.Nx 1.1 .
@


1.3
log
@Oh, and I was told a period should end the final sentence.
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.2 2001/10/04 23:56:58 miod Exp $
d45 1
a45 1
prepares a FFS filesystem partition for boot-strapping from the PROM.
d52 1
a52 1
The first-stage program is loaded into memory by the PROM. After it receiving
@


1.3.6.1
log
@sync
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d45 1
a45 1
prepares an FFS filesystem partition for boot-strapping from the PROM.
d52 1
a52 1
The first-stage program is loaded into memory by the PROM. After it receives
@


1.3.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
.\"	$OpenBSD$
@


1.3.4.2
log
@Sync the SMP branch with 3.3
@
text
@d45 1
a45 1
prepares an FFS filesystem partition for boot-strapping from the PROM.
d52 1
a52 1
The first-stage program is loaded into memory by the PROM. After it receives
@


1.3.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.3.4.2 2003/03/27 23:42:37 niklas Exp $
d52 2
a53 2
The first-stage program is loaded into memory by the PROM.
After it receives control, it loads the second stage program
d65 2
a66 2
respectively.
The second-stage program commonly resides in the root directory as
d83 2
a84 2
is to be installed.
This should correspond to the block device on which the file system containing
a97 8
.Sh SEE ALSO
.Xr disklabel 8 ,
.Xr init 8
.Sh HISTORY
The
.Nm installboot
first appeared in
.Nx 1.1 .
d109 8
@


1.2
log
@Fix one .Bl -width value.
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.1 2001/09/06 19:49:17 jason Exp $
d99 1
a99 1
.Nm
d114 1
a114 1
.Nm
d116 1
a116 1
.Nx 1.1
@


1.1
log
@installboot manpage canabalized from sparc (only documents sparc64 options, tho)
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.4 2000/01/03 20:04:30 pjanzen Exp $
d78 1
a78 1
.Bl -tag -width bootxx
@

