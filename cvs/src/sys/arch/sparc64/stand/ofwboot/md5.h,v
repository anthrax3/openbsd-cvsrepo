head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.66
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.64
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.60
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.56
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.58
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.50
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.54
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.52
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.48
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.46
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.44
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.42
	OPENBSD_5_0:1.3.0.40
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.38
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.36
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.32
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.34
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.30
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.28
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SPARC64:1.1.1.1
	NETBSD:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2002.03.14.01.26.46;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.20.19.55.33;	author jason;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.08.18.15.51.10;	author jason;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.18.15.51.10;	author jason;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.07.59;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.28.11.23.52;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.06.11.03.38.44;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@First round of __P removal in sys
@
text
@/*	$OpenBSD: md5.h,v 1.2 2001/08/20 19:55:33 jason Exp $	*/
/*	$NetBSD: md5.h,v 1.1 2000/08/20 14:58:38 mrg Exp $	*/

/*
 * This file is derived from the RSA Data Security, Inc. MD5 Message-Digest
 * Algorithm and has been modified by Jason R. Thorpe <thorpej@@NetBSD.ORG>
 * for portability and formatting.
 */

/*
 * Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All
 * rights reserved.
 *
 * License to copy and use this software is granted provided that it
 * is identified as the "RSA Data Security, Inc. MD5 Message-Digest
 * Algorithm" in all material mentioning or referencing this software
 * or this function.
 * 
 * License is also granted to make and use derivative works provided
 * that such works are identified as "derived from the RSA Data
 * Security, Inc. MD5 Message-Digest Algorithm" in all material
 * mentioning or referencing the derived work.
 * 
 * RSA Data Security, Inc. makes no representations concerning either
 * the merchantability of this software or the suitability of this
 * software for any particular purpose. It is provided "as is"
 * without express or implied warranty of any kind.
 * 
 * These notices must be retained in any copies of any part of this
 * documentation and/or software.
 */

#ifndef _SYS_MD5_H_
#define _SYS_MD5_H_

#include <sys/types.h>

/* MD5 context. */
typedef struct MD5Context {
	u_int32_t state[4];	/* state (ABCD) */
	u_int32_t count[2];	/* number of bits, modulo 2^64 (lsb first) */
	unsigned char buffer[64]; /* input buffer */
} MD5_CTX;

__BEGIN_DECLS
void	MD5Init(MD5_CTX *);
void	MD5Update(MD5_CTX *, const unsigned char *, unsigned int);
void	MD5Final(unsigned char[16], MD5_CTX *);
#ifndef _KERNEL
char	*MD5End(MD5_CTX *, char *);
char	*MD5File(const char *, char *);
char	*MD5Data(const unsigned char *, unsigned int, char *);
#endif /* _KERNEL */
__END_DECLS

#endif /* _SYS_MD5_H_ */
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 3
a48 3
void	MD5Init __P((MD5_CTX *));
void	MD5Update __P((MD5_CTX *, const unsigned char *, unsigned int));
void	MD5Final __P((unsigned char[16], MD5_CTX *));
d50 3
a52 3
char	*MD5End __P((MD5_CTX *, char *));
char	*MD5File __P((const char *, char *));
char	*MD5Data __P((const unsigned char *, unsigned int, char *));
@


1.2.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: md5.h,v 1.2 2001/08/20 19:55:33 jason Exp $	*/
d46 3
a48 3
void	MD5Init(MD5_CTX *);
void	MD5Update(MD5_CTX *, const unsigned char *, unsigned int);
void	MD5Final(unsigned char[16], MD5_CTX *);
d50 3
a52 3
char	*MD5End(MD5_CTX *, char *);
char	*MD5File(const char *, char *);
char	*MD5Data(const unsigned char *, unsigned int, char *);
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.2.4.2
log
@Merge in -current from about a week ago
@
text
@d46 3
a48 3
void	MD5Init(MD5_CTX *);
void	MD5Update(MD5_CTX *, const unsigned char *, unsigned int);
void	MD5Final(unsigned char[16], MD5_CTX *);
d50 3
a52 3
char	*MD5End(MD5_CTX *, char *);
char	*MD5File(const char *, char *);
char	*MD5Data(const unsigned char *, unsigned int, char *);
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Enough of NetBSD/sparc64 for ofwboot to compile/link
@
text
@@
