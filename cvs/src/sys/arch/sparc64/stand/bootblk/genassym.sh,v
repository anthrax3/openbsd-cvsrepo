head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.60
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.58
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.54
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.50
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.52
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.44
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.48
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.46
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.42
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.40
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.4
	UBC_BASE:1.1
	SMP:1.1.0.2
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	SPARC64:1.1.1.1
	NETBSD:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.07.02.00.37.31;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.08.10.15.07;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.18.04.16.37;	author jason;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.4.1;
next	;

1.1.1.1
date	2001.08.18.04.16.37;	author jason;	state Exp;
branches;
next	;

1.1.2.1
date	2001.10.31.03.07.59;	author nate;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.03.27.23.42.37;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2004.02.19.10.50.01;	author niklas;	state Exp;
branches;
next	;

1.1.4.1
date	2003.05.19.21.46.58;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@bump mktemp randomness from 6->10 X's
@
text
@#	$OpenBSD: genassym.sh,v 1.2 2003/02/08 10:15:07 pvalchev Exp $
#	$NetBSD: genassym.sh,v 1.1 2000/08/20 14:58:45 mrg Exp $

#
# Copyright (c) 1998 Eduardo E. Horvath.
# Copyright (c) 1997 Matthias Pfaller.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by Matthias Pfaller.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# If first argument is -c, create a temporary C file,
# compile it and execute the result.

awk=${AWK:-awk}
TMP1=`mktemp /tmp/genassym1.XXXXXXXXXX` || exit 1
TMP2=`mktemp /tmp/genassym2.XXXXXXXXXX` || {
	rm -f $TMP1
	exit 1
}

trap 'rm -f $TMP1 $TMP2' 0 1 2 3 13 15

if [ $1 = '-c' ] ; then
	shift
	ccode=1
else
	ccode=0
fi

$awk '
BEGIN {
	printf("#ifndef _KERNEL\n#define _KERNEL\n#endif\n");
	printf("#define	offsetof(type, member) ((size_t)(&((type *)0)->member))\n");
	defining = 0;
	type = "long";
	asmtype = "n";
	asmprint = "";
}

$0 ~ /^[ \t]*#.*/ || $0 ~ /^[ \t]*$/ {
	# Just ignore comments and empty lines
	next;
}

$0 ~ /^config[ \t]/ {
	type = $2;
	asmtype = $3;
	asmprint = $4;
	next;
}

/^include[ \t]/ {
	if (defining != 0) {
		defining = 0;
		printf("}\n");
	}
	printf("#%s\n", $0);
	next;
}

$0 ~ /^if[ \t]/ ||
$0 ~ /^ifdef[ \t]/ ||
$0 ~ /^ifndef[ \t]/ ||
$0 ~ /^else/ ||
$0 ~ /^elif[ \t]/ ||
$0 ~ /^endif/ {
	printf("#%s\n", $0);
	next;
}

/^struct[ \t]/ {
	structname = $2;
	$0 = "define " structname "_SIZEOF sizeof(struct " structname ")";
	# fall through
}

/^export[ \t]/ {
	$0 = "define " $2 " " $2;
	# fall through
}

/^define[ \t]/ {
	if (defining == 0) {
		defining = 1;
		printf("void f" FNR "(void);\n");
		printf("void f" FNR "() {\n");
		if (ccode)
			call[FNR] = "f" FNR;
		defining = 1;
	}
	value = $0
	gsub("^define[ \t]+[A-Za-z_][A-Za-z_0-9]*[ \t]+", "", value)
	if (ccode)
		printf("printf(\"#define " $2 " %%ld\\n\", (%s)" value ");\n", type);
	else
		printf("__asm(\"XYZZY d# %%%s0 constant %s\" : : \"%s\" (%s));\n", asmprint, $2, asmtype, value);
	next;
}

/^member[ \t]/ {
	$0 = "define " $2 " offsetof(struct " structname ", " $2 ")";
	if (defining == 0) {
		defining = 1;
		printf("void f" FNR "(void);\n");
		printf("void f" FNR "() {\n");
		if (ccode)
			call[FNR] = "f" FNR;
		defining = 1;
	}
	value = $0
	gsub("^define[ \t]+[A-Za-z_][A-Za-z_0-9]*[ \t]+", "", value)
	if (ccode)
		printf("printf(\"#define " $2 " %%ld\\n\", (%s)" value ");\n", type);
	else
		printf("__asm(\"XYZZY : %s d\# %%%s0 + ;\" : : \"%s\" (%s));\n", $2, asmprint, asmtype, value);
	next;
}

/^quote[ \t]/ {
	gsub("^quote[ \t]+", "");
	print;
	next;
}

{
	printf("syntax error in line %d\n", FNR) >"/dev/stderr";
	exit(1);
}

END {
	if (defining != 0) {
		defining = 0;
		printf("}\n");
	}
	if (ccode) {
		printf("int main(int argc, char **argv) {");
		for (i in call)
			printf(call[i] "();");
		printf("return(0); }\n");
	}
}
' ccode=$ccode > $TMP1 || exit 1

if [ $ccode = 1 ] ; then
	"$@@" -x c $TMP1 -o $TMP2 && $TMP2
else
	# Kill all of the "#" and "$" modifiers; locore.s already
	# prepends the correct "constant" modifier.
	"$@@" -x c -S ${TMP1} -o ${TMP2} || exit 1
	sed 's/\$//g' ${TMP2} | sed -n 's/.*XYZZY//gp'
fi
@


1.2
log
@fix /tmp races; this no longer leaves files around.  ok millert jason henric
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.1 2001/08/18 04:16:37 jason Exp $
d39 2
a40 2
TMP1=`mktemp /tmp/genassym1.XXXXXX` || exit 1
TMP2=`mktemp /tmp/genassym2.XXXXXX` || {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d39 7
a53 2
#trap "rm -f /tmp/$$.c /tmp/genassym.$$" 0 1 2 3 15

d166 1
a166 1
' ccode=$ccode > /tmp/$$.c || exit 1
d169 1
a169 1
	"$@@" /tmp/$$.c -o /tmp/genassym.$$ && /tmp/genassym.$$
d173 2
a174 2
	"$@@" -S /tmp/$$.c -o -| sed -e 's/\$//g' | \
	    sed -n 's/.*XYZZY//gp'
@


1.1.4.1
log
@sync
@
text
@a38 7
TMP1=`mktemp /tmp/genassym1.XXXXXX` || exit 1
TMP2=`mktemp /tmp/genassym2.XXXXXX` || {
	rm -f $TMP1
	exit 1
}

trap 'rm -f $TMP1 $TMP2' 0 1 2 3 13 15
d47 2
d161 1
a161 1
' ccode=$ccode > $TMP1 || exit 1
d164 1
a164 1
	"$@@" -x c $TMP1 -o $TMP2 && $TMP2
d168 2
a169 2
	"$@@" -x c -S ${TMP1} -o ${TMP2} || exit 1
	sed 's/\$//g' ${TMP2} | sed -n 's/.*XYZZY//gp'
@


1.1.2.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.1.2.2
log
@Sync the SMP branch with 3.3
@
text
@a38 7
TMP1=`mktemp /tmp/genassym1.XXXXXX` || exit 1
TMP2=`mktemp /tmp/genassym2.XXXXXX` || {
	rm -f $TMP1
	exit 1
}

trap 'rm -f $TMP1 $TMP2' 0 1 2 3 13 15
d47 2
d161 1
a161 1
' ccode=$ccode > $TMP1 || exit 1
d164 1
a164 1
	"$@@" -x c $TMP1 -o $TMP2 && $TMP2
d168 2
a169 2
	"$@@" -x c -S ${TMP1} -o ${TMP2} || exit 1
	sed 's/\$//g' ${TMP2} | sed -n 's/.*XYZZY//gp'
@


1.1.2.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d39 2
a40 2
TMP1=`mktemp /tmp/genassym1.XXXXXXXXXX` || exit 1
TMP2=`mktemp /tmp/genassym2.XXXXXXXXXX` || {
@


1.1.1.1
log
@Enough of NetBSD/sparc64 to get compilable/working bootblk... more to come.
@
text
@@
