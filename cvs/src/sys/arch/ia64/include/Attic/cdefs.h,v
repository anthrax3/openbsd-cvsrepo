head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.11.22.07.17.50;	author deraadt;	state dead;
branches;
next	1.2;
commitid	7NI3vm6G3k7uyGdu;

1.2
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.04.23.29.08;	author pirofti;	state Exp;
branches;
next	;


desc
@@


1.3
log
@mop up a barely started project... getting in the way of grepping the tree!
@
text
@/*	$OpenBSD: cdefs.h,v 1.2 2013/03/28 17:30:45 martynas Exp $	*/

/*
 * Written by J.T. Conklin <jtc@@wimsey.com> 01/17/95.
 * Public domain.
 */

#ifndef	_MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define __strong_alias(alias,sym)					\
	__asm__(".global " __STRING(alias) " ; " __STRING(alias)	\
	    " = " __STRING(sym))
#define __weak_alias(alias,sym)						\
	__asm__(".weak " __STRING(alias) " ; " __STRING(alias)		\
	    " = " __STRING(sym))
#define __warn_references(sym,msg)					\
	__asm__(".section .gnu.warning." __STRING(sym)			\
	    " ; .ascii \"" msg "\" ; .text")

#endif /* !_MACHINE_CDEFS_H_ */
@


1.2
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.1 2011/07/04 23:29:08 pirofti Exp $	*/
@


1.1
log
@Add ia64 kernel include files needed for userland.

Okay deraadt@@, drahn@@, kettenis@@.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 2
a12 7
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
#define __weak_alias(alias,sym)					\
	__asm__(".weak " __STRING(alias) " ; " __STRING(alias)	\
d14 5
a18 2
#define __warn_references(sym,msg)				\
	__asm__(".section .gnu.warning." __STRING(sym)		\
a19 1
#endif
@

