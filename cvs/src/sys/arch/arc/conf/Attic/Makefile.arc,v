head	1.15;
access;
symbols
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	UBC_SYNC_A:1.15
	UBC_SYNC_B:1.15
	NIKLAS_UNDEAD:1.14.0.4
	OPENBSD_2_8:1.14.0.2
	OPENBSD_2_8_BASE:1.14
	OPENBSD_2_7:1.13.0.6
	OPENBSD_2_7_BASE:1.13
	SMP:1.13.0.4
	SMP_BASE:1.13
	kame_19991208:1.13
	OPENBSD_2_6:1.13.0.2
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.12.0.6
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.12.0.4
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.12.0.2
	OPENBSD_2_3_BASE:1.12
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	PEFO_960624:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@# @;


1.15
date	2001.02.07.07.45.01;	author art;	state dead;
branches;
next	1.14;

1.14
date	2000.08.15.01.03.36;	author imp;	state Exp;
branches;
next	1.13;

1.13
date	99.08.15.20.43.57;	author niklas;	state Exp;
branches
	1.13.4.1;
next	1.12;

1.12
date	98.03.04.07.00.59;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	98.03.03.22.34.48;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	98.01.28.13.46.02;	author pefo;	state Exp;
branches;
next	1.9;

1.9
date	97.09.15.02.40.26;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.05.21.10.06.49;	author pefo;	state Exp;
branches;
next	1.7;

1.7
date	97.04.19.17.19.49;	author pefo;	state Exp;
branches;
next	1.6;

1.6
date	96.09.24.20.04.45;	author pefo;	state Exp;
branches;
next	1.5;

1.5
date	96.09.24.19.37.26;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	96.08.26.10.52.24;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.24.18.35.25;	author imp;	state Exp;
branches;
next	1.2;

1.2
date	96.07.16.07.46.15;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	96.06.24.09.07.20;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.24.09.07.20;	author pefo;	state Exp;
branches;
next	;

1.13.4.1
date	2001.04.18.16.02.34;	author niklas;	state dead;
branches;
next	;


desc
@@


1.15
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@#	$OpenBSD: Makefile.arc,v 1.14 2000/08/15 01:03:36 imp Exp $

#	@@(#)Makefile.arc	8.2 (Berkeley) 2/16/94
#
# Makefile for 4.4 BSD
#
# This makefile is constructed from a machine description:
#	config ``machineid''
# Most changes should be made in the machine description
#	/sys/arch/arc/conf/``machineid''
# after which you should do
#	 config ``machineid''
# Machine generic makefile changes should be made in
#	/sys/arch/arc/conf/Makefile.``machinetype''
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas


# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).

AS?=	as
CC?=	cc
CPP?=	cpp
LD?=	ld
STRIP?=	strip -d
TOUCH?=	touch -f -c

# source tree is located via $S relative to the compilation directory
S=	../../../..
ARC=	../..
MIPS=	../../../mips

INCLUDES=	-I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Darc
CDIAGFLAGS=	-Werror -Wall -Wmissing-prototypes -Wstrict-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main

CFLAGS=		${DEBUG} -O2 ${CDIAGFLAGS} -mno-abicalls -mips2 -mcpu=r4000 \
		${COPTS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

USRLAND_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
USRLAND_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${AS}  ${COPTS} ${PARAM} $< -o $@@

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}

SYSTEM_OBJ=	locore.o fp.o ${OBJS} param.o ioconf.o ${LIBKERN} \
		${LIBCOMPAT}
#
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	-@@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} $$strip -o $@@ -e start -T ../../conf/ld.script \
			'$${SYSTEM_OBJ}' vers.o; \
		${LD} $$strip -o $@@ -e start -T ../../conf/ld.script \
			${SYSTEM_OBJ} vers.o
#
SYSTEM_LD_TAIL=	chmod 755 $@@; \
		elf2ecoff $@@ $@@.ecoff; \
		size $@@

%LOAD

newvers:
	sh $S/conf/newvers.sh
	${CC} $(CFLAGS) -c vers.c

clean::
	rm -f eddep bsd bsd.gdb bsd.ecoff tags *.o locore.i [a-z]*.s \
	    Errs errs linterrs makelinks 

lint: /tmp param.c
	@@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
	    ${CFILES} ioconf.c param.c

symbols.sort: ${ARC}/arc/symbols.raw
	grep -v '^#' ${ARC}/arc/symbols.raw \
	    | sed 's/^	//' | sort -u > symbols.sort

locore.o: ${ARC}/arc/locore.S ${MIPS}/include/asm.h \
	${MIPS}/include/cpu.h ${MIPS}/include/reg.h assym.h
	${NORMAL_S} -mips3 ${ARC}/arc/locore.S

fp.o: ${MIPS}/mips/fp.S ${MIPS}/include/asm.h \
	${ARC}/include/cpu.h ${MIPS}/include/reg.h assym.h
	${NORMAL_S} -mips3 ${MIPS}/mips/fp.S

# the following are necessary because the files depend on the types of
# cpu's included in the system configuration
clock.o machdep.o autoconf.o conf.o: Makefile

# depend on network configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile


assym.h: $S/kern/genassym.sh ${ARC}/arc/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${ARC}/arc/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h


links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

tags:
	@@echo "see $S/kern/Makefile for tags"

ioconf.o: ioconf.c
	${NORMAL_C}

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

depend:: .depend
.depend: ${SRCS} assym.h param.c
	mkdep ${AFLAGS} ${CPPFLAGS} ${ARC}/arc/locore.S
	mkdep -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
#	mkdep -a ${AFLAGS} ${CPPFLAGS} ${SFILES}

%RULES

@


1.14
log
@locore.S and we have no SFILES at the moment
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.13 1999/08/15 20:43:57 niklas Exp $
@


1.13
log
@listen to COPTS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.12 1998/03/04 07:00:59 niklas Exp $
d180 1
a180 1
	mkdep ${AFLAGS} ${CPPFLAGS} ${ARC}/arc/locore.s
d182 1
a182 1
	mkdep -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
@


1.13.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.13 1999/08/15 20:43:57 niklas Exp $
@


1.12
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.11 1998/03/03 22:34:48 niklas Exp $
d44 2
a45 1
CFLAGS=		${DEBUG} -O2 ${CDIAGFLAGS} -mno-abicalls -mips2 -mcpu=r4000
@


1.11
log
@Add -Wno-main for GCC 2.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.10 1998/01/28 13:46:02 pefo Exp $
d41 1
a41 1
CDIAGFLAGS=	-Werror -Wall -Wmissing-protoypes -Wstrict-prototypes \
@


1.10
log
@Moving around files for new mips arch layout
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.9 1997/09/15 02:40:26 deraadt Exp $
d41 2
a42 2
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wno-uninitialized \
		-Wno-format
@


1.9
log
@kill Locore.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.8 1997/05/21 10:06:49 pefo Exp $
d37 1
d128 2
a129 2
locore.o: ${ARC}/arc/locore.S ${ARC}/include/asm.h \
	${ARC}/include/cpu.h ${ARC}/include/reg.h assym.h
d132 3
a134 3
fp.o: ${ARC}/arc/fp.S ${ARC}/include/asm.h \
	${ARC}/include/cpu.h ${ARC}/include/reg.h assym.h
	${NORMAL_S} -mips3 ${ARC}/arc/fp.S
@


1.8
log
@Remove genassym dependency build, spotted by Dale
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.7 1997/04/19 17:19:49 pefo Exp $
d121 1
a121 2
	    ${ARC}/arc/Locore.c ${CFILES} \
	    ioconf.c param.c
@


1.7
log
@-Wall cleanup.
Change to new MI assym.h file generation. (genassym.cf)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.6 1996/09/24 20:04:45 pefo Exp $
a181 1
	mkdep -a ${CFLAGS} ${CPPFLAGS} ${PARAM} ${ARC}/arc/genassym.c
@


1.6
log
@Kernel links now with in tree ld. Needs a ld script though. This script may
be cleaned up (optimized) but works. And if it's not broken, don't fix it :-)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.5 1996/09/24 19:37:26 pefo Exp $
d8 1
a8 1
#	config machineid
d10 1
a10 1
#	/sys/arch/MACHINE/conf/``machineid''
d12 1
a12 1
#	 config machineid
d14 1
a14 1
#	/sys/arch/MACHINE/conf/Makefile.``machinetype''
d26 1
d40 4
a43 1
CFLAGS=		${DEBUG} -O2 -Werror -mno-abicalls -mips2 -mcpu=r4000
d117 1
a117 1
	    Errs errs linterrs makelinks genassym
a144 2
assym.h: genassym
	./genassym >assym.h
d146 4
a149 2
genassym: genassym.o
	${HOSTCC} -o $@@ genassym.o
a150 2
genassym.o: ${ARC}/arc/genassym.c
	${HOSTCC} ${INCLUDES} ${IDENT} -D_KERNEL -Darc -c $<
@


1.5
log
@Some problems with Pica systems and noncontigous memory config fixed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.4 1996/08/26 10:52:24 pefo Exp $
d29 1
a29 1
LD=	ld.ok			# XXX TEMPORARY
d96 1
a96 1
		echo ${LD} $$strip -N -o $@@ -e start -Ttext 80100000 \
d98 1
a98 1
		${LD} $$strip -N -o $@@ -e start -Ttext 80100000 \
@


1.4
log
@Move kernel start from 0x80080000 to 0x80100000
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.3 1996/08/24 18:35:25 imp Exp $
d117 1
a117 1
	    ${ARC}/arc/Locore.c ${CFILES} ${ARC}/arc/swapgeneric.c \
@


1.3
log
@Use HOSTCC to build genassym to fix cross compilations
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.2 1996/07/16 07:46:15 pefo Exp $
d96 1
a96 1
		echo ${LD} $$strip -N -o $@@ -e start -Ttext 80080000 \
d98 1
a98 1
		${LD} $$strip -N -o $@@ -e start -Ttext 80080000 \
@


1.2
log
@Rename some 'pica' names to 'mips'.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.arc,v 1.1.1.1 1996/06/24 09:07:20 pefo Exp $
d145 1
a145 1
	${CC} -o $@@ genassym.o
d148 1
a148 1
	${CC} ${INCLUDES} ${IDENT} -D_KERNEL -Darc -c $<
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d112 1
a112 1
	rm -f eddep bsd bsd.gdb tags *.o locore.i [a-z]*.s \
@


1.1.1.1
log
@Next try. ARC tree import. "New" Mips (spim) ARC compliant systems tree.
This tree will eventually suport viritualy all ARC compliant Mips systems,
that is all we can lay our hands on for porting/testing. It will supersede
the pica tree which will be removed shortly when this tree is functioning.
@
text
@@

