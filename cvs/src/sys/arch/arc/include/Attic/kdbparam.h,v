head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	NIKLAS_UNDEAD:1.2.0.16
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.10
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	PEFO_960624:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.02.07.07.45.08;	author art;	state dead;
branches;
next	1.2;

1.2
date	98.01.28.13.46.16;	author pefo;	state Exp;
branches
	1.2.10.1;
next	1.1;

1.1
date	96.06.24.09.07.17;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.24.09.07.17;	author pefo;	state Exp;
branches;
next	;

1.2.10.1
date	2001.04.18.16.02.49;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: kdbparam.h,v 1.2 1998/01/28 13:46:16 pefo Exp $ */

/* Use Mips generic include file */

#include <mips/kdbparam.h>
@


1.2
log
@Moving around files for new mips arch layout
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@


1.2.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: kdbparam.h,v 1.2 1998/01/28 13:46:16 pefo Exp $ */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
/*	$OpenBSD: kdbparam.h,v 1.2 1996/06/06 23:06:44 deraadt Exp $	*/
/*	$NetBSD: kdbparam.h,v 1.4 1994/10/26 21:09:42 cgd Exp $	*/
d3 1
a3 37
/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)kdbparam.h	8.1 (Berkeley) 6/10/93
 */
d5 1
a5 34
/*
 * Machine dependent definitions for kdb.
 */

#if BYTE_ORDER == LITTLE_ENDIAN
#define kdbshorten(w)	((w) & 0xFFFF)
#define	kdbbyte(w)	((w) & 0xFF)
#define	kdbitol(a,b)	((long)(((b) << 16) | ((a) & 0xFFFF)))
#define	kdbbtol(a)	((long)(a))
#endif

#define LPRMODE		"%R"
#define OFFMODE		"+%R"

#define	SETBP(ins)	BREAK_BRKPT

/* return the program counter value modified if we are in a delay slot */
#define	kdbgetpc(pcb)		(kdbvar[kdbvarchk('t')] < 0 ? \
	(pcb).pcb_regs[34] + 4 : (pcb).pcb_regs[34])
#define	kdbishiddenreg(p)	((p) >= &kdbreglist[33])
#define	kdbisbreak(type)	(((type) & CR_EXC_CODE) == 0x24)

/* check for address wrap around */
#define	kdbaddrwrap(addr,newaddr)	(((addr)^(newaddr)) >> 31)

/* declare machine dependent routines defined in kadb.c */
void	kdbprinttrap __P((unsigned, unsigned));
void	kdbsetsstep __P((void));
void	kdbclrsstep __P((void));
void	kdbreadc __P((char *));
void	kdbwrite __P((char *, int));
void	kdbprintins __P((int, long));
void	kdbstacktrace __P((int));
char	*kdbmalloc __P((int));
@


1.1.1.1
log
@Next try. ARC tree import. "New" Mips (spim) ARC compliant systems tree.
This tree will eventually suport viritualy all ARC compliant Mips systems,
that is all we can lay our hands on for porting/testing. It will supersede
the pica tree which will be removed shortly when this tree is functioning.
@
text
@@
