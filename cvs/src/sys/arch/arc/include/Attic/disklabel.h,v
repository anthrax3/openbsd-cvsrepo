head	1.17;
access;
symbols
	SMP_SYNC_A:1.17
	SMP_SYNC_B:1.17
	UBC_SYNC_A:1.17
	UBC_SYNC_B:1.17
	NIKLAS_UNDEAD:1.16.0.8
	OPENBSD_2_8:1.16.0.6
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.16.0.4
	OPENBSD_2_7_BASE:1.16
	SMP:1.16.0.2
	SMP_BASE:1.16
	kame_19991208:1.16
	OPENBSD_2_6:1.14.0.4
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.14.0.2
	OPENBSD_2_5_BASE:1.14
	OPENBSD_2_4:1.13.0.4
	OPENBSD_2_4_BASE:1.13
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	PEFO_960624:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2001.02.07.07.45.05;	author art;	state dead;
branches;
next	1.16;

1.16
date	99.12.04.03.35.57;	author deraadt;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	99.10.26.03.43.48;	author downsj;	state Exp;
branches;
next	1.14;

1.14
date	99.03.23.16.36.17;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	98.02.24.04.22.36;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.02.19.20.36.30;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	98.01.11.20.41.59;	author provos;	state Exp;
branches;
next	1.10;

1.10
date	97.09.29.18.55.07;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.09.24.02.17.36;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.09.23.12.46.40;	author pefo;	state Exp;
branches;
next	1.7;

1.7
date	97.08.08.21.46.37;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.04.10.13.06.25;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.10.06.19.59.56;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	96.09.24.12.07.08;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.09.21.10.48.47;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.08.26.11.01.35;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	96.06.24.09.07.17;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.24.09.07.17;	author pefo;	state Exp;
branches;
next	;

1.16.2.1
date	2001.04.18.16.02.45;	author niklas;	state dead;
branches;
next	;


desc
@@


1.17
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: disklabel.h,v 1.16 1999/12/04 03:35:57 deraadt Exp $	*/
/*	$NetBSD: disklabel.h,v 1.3 1996/03/09 20:52:54 ghudson Exp $	*/

/*
 * Copyright (c) 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_DISKLABEL_H_
#define _MACHINE_DISKLABEL_H_

#define	LABELSECTOR	1		/* sector containing label */
#define	LABELOFFSET	0		/* offset of label in sector */
#define	MAXPARTITIONS	16		/* number of partitions */
#define	RAW_PART	2		/* raw partition: ie. rsd0c */

/* DOS partition table -- located in boot block */
#define	DOSBBSECTOR	0		/* DOS boot block relative sector # */
#define	DOSPARTOFF	446
#define DOSACTIVE	0x80
#define	NDOSPART	4
#define DOSMBR_SIGNATURE	0xAA55
#define DOSMBR_SIGNATURE_OFF	0x1FE

struct dos_partition {
	u_int8_t	dp_flag;	/* bootstrap flags */
	u_int8_t	dp_shd;		/* starting head */
	u_int8_t	dp_ssect;	/* starting sector */
	u_int8_t	dp_scyl;	/* starting cylinder */
	u_int8_t	dp_typ;		/* partition type (see below) */
	u_int8_t	dp_ehd;		/* end head */
	u_int8_t	dp_esect;	/* end sector */
	u_int8_t	dp_ecyl;	/* end cylinder */
	u_int32_t	dp_start;	/* absolute starting sector number */
	u_int32_t	dp_size;	/* partition size in sectors */
};

/* Known DOS partition types. */
#define	DOSPTYP_UNUSED	0x00		/* Unused partition */
#define DOSPTYP_FAT12	0x01		/* 12-bit FAT */
#define DOSPTYP_FAT16S	0x04		/* 16-bit FAT, less than 32M */
#define DOSPTYP_EXTEND	0x05		/* Extended; contains sub-partitions */
#define DOSPTYP_FAT16B	0x06		/* 16-bit FAT, more than 32M */
#define DOSPTYP_FAT32	0x0b		/* 32-bit FAT */
#define DOSPTYP_FAT32L	0x0c		/* 32-bit FAT, LBA-mapped */
#define DOSPTYP_FAT16L	0x0e		/* 16-bit FAT, LBA-mapped */
#define DOSPTYP_ONTRACK	0x54
#define DOSPTYP_EXTENDL 0x0f		/* Extended, LBA-mapped; contains sub-partitions */
#define	DOSPTYP_LINUX	0x83		/* That other thing */
#define DOSPTYP_FREEBSD	0xa5		/* FreeBSD partition type */
#define DOSPTYP_OPENBSD	0xa6		/* OpenBSD partition type */
#define DOSPTYP_NETBSD	0xa9		/* NetBSD partition type */

#include <sys/dkbad.h>
struct cpu_disklabel {
	struct dos_partition dosparts[NDOSPART];
	struct dkbad bad;
};

#define DKBAD(x) ((x)->bad)

/* Isolate the relevant bits to get sector and cylinder. */
#define	DPSECT(s)	((s) & 0x3f)
#define	DPCYL(c, s)	((c) + (((s) & 0xc0) << 2))

static __inline u_int32_t get_le __P((void *));

static __inline u_int32_t
#ifdef __cplusplus
get_le(void *p)
#else
get_le(p)
	void *p;
#endif
{
	u_int8_t *_p = (u_int8_t *)p;
	u_int32_t x;
	x = _p[0];
	x |= _p[1] << 8;
	x |= _p[2] << 16;
	x |= _p[3] << 24;
	return x;
}

#endif /* _MACHINE_DISKLABEL_H_ */
@


1.16
log
@DOSPTYP_EXTENDL; sigh@@kuzirabekon.econ.nagasaki-u.ac.jp
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.15 1999/10/26 03:43:48 downsj Exp $	*/
@


1.16.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.16 1999/12/04 03:35:57 deraadt Exp $	*/
@


1.15
log
@Fix inline function decls to work with C++.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.14 1999/03/23 16:36:17 millert Exp $	*/
d73 1
@


1.14
log
@Add DOSMBR_SIGNATURE_OFF define, needed for last disklabel change
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.13 1998/02/24 04:22:36 deraadt Exp $	*/
d93 3
d98 1
@


1.13
log
@rename some DOS MBR partition types
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.12 1998/02/19 20:36:30 deraadt Exp $	*/
d48 1
@


1.12
log
@add netbsd partition, rename 386BSD one to FreeBSD..
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.11 1998/01/11 20:41:59 provos Exp $	*/
d69 2
a70 1
#define DOSPTYP_FAT16C	0x0e		/* 16-bit FAT, CHS-mapped */
@


1.11
log
@disklabel spoofing for FAT32.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.10 1997/09/29 18:55:07 deraadt Exp $	*/
d72 1
a72 2
#define DOSPTYP_386BSD	0xa5		/* 386BSD partition type */
#define DOSPTYP_NETBSD	DOSPTYP_386BSD	/* NetBSD partition type (XXX) */
d74 1
@


1.10
log
@DOSMBR_SIGNATURE, DOSACTIVE; weingart
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.9 1997/09/24 02:17:36 deraadt Exp $	*/
d68 1
@


1.9
log
@make this compile.. bad Per..
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.8 1997/09/23 12:46:40 pefo Exp $	*/
d45 1
d47 1
@


1.8
log
@Make disksubr byte order independent. This code is now so generic that it
should be able to use it for i386, arc, powerpc, sgi, and more....
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.7 1997/08/08 21:46:37 niklas Exp $	*/
d85 2
a90 1
	u_int32_t c;
d92 1
a92 1
	int x;
@


1.7
log
@Change the bounds_check_with_label API to also take a cpu_disklabel
reference for making transferral of meta-information possible from
readdisklabel to bounds_check_with_label.  The first (and maybe only)
thing that will use this is the multi-disklabel-format code on the
alpha where the labelsector is passed via cpu_disklabel so the label
write-protection can work correctly no matter what label was found.

Also use a new macro DKBAD to get at the dkbad field of the cpu_disklabel
implementations that contain it.  This too is for multi-disklabel
architectures where the "bad" field can be inside a union.  Use this
macro as a means for a driver to check if an architecture supports
dkbad constructs.

Remove proto of bounds_check_with_label from all MD disklabel.h as it
is in sys/disklabel.h.

I have not been able to test the changes everywhere, if I break anything
I apologize, and promise to fix it as soon as I become aware of it.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.6 1997/04/10 13:06:25 deraadt Exp $	*/
d84 14
@


1.6
log
@additions & fixes from niklas & i
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.8 1996/10/04 02:49:59 deraadt Exp $	*/
d79 2
a83 5

#ifdef _KERNEL
struct disklabel;
int	bounds_check_with_label __P((struct buf *, struct disklabel *, int));
#endif
@


1.5
log
@Fix dlfcn.h and link.h for arc port
@
text
@d1 2
a2 2
/*	$OpenBSD: disklabel.h,v 1.4 1996/09/24 12:07:08 deraadt Exp $	*/
/*	$NetBSD: disklabel.h,v 1.2 1995/01/18 06:37:55 mellon Exp $	*/
d37 4
a40 6
#define	LABELSECTOR	1			/* sector containing label */
#define	LABELOFFSET	0			/* offset of label in sector */
#define	MAXPARTITIONS	16			/* number of partitions */
#define	PARTITIONSHIFT	4			/* log2 */
#define	PARTITIONMASK	0xf			
#define	RAW_PART	2			/* raw partition: xx?c */
d42 1
a42 3
/* DOS partition table -- used when the system is booted from a dos
 * partition. This is the case on NT systems.
 */
d48 11
a58 11
	unsigned char	dp_flag;	/* bootstrap flags */
	unsigned char	dp_shd;		/* starting head */
	unsigned char	dp_ssect;	/* starting sector */
	unsigned char	dp_scyl;	/* starting cylinder */
	unsigned char	dp_typ;		/* partition type (see below) */
	unsigned char	dp_ehd;		/* end head */
	unsigned char	dp_esect;	/* end sector */
	unsigned char	dp_ecyl;	/* end cylinder */
	unsigned long	dp_start;	/* absolute starting sector number */
	unsigned long	dp_size;	/* partition size in sectors */
} dos_partitions[NDOSPART];
d61 8
a71 4
#define DOSPTYP_FAT12   0x1
#define DOSPTYP_FAT16S  0x4
#define DOSPTYP_FAT16B  0x6
#define DOSPTYP_FAT16C  0xe
@


1.4
log
@add DOSPTYP_OPENBSD, like i386 port
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.3 1996/09/21 10:48:47 pefo Exp $	*/
d68 4
@


1.3
log
@Disklabel on ARC has moved to sector 1 offset 0! BEWARE!
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.2 1996/08/26 11:01:35 pefo Exp $	*/
d65 1
a65 1
#define	DOSPTYP_386BSD	0xa5		/* 386BSD partition type */
d67 1
@


1.2
log
@Allow for 16 partition disklabels, hepp!
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.1.1.1 1996/06/24 09:07:17 pefo Exp $	*/
d37 2
a38 2
#define	LABELSECTOR	0			/* sector containing label */
#define	LABELOFFSET	64			/* offset of label in sector */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.2 1996/06/06 23:06:36 deraadt Exp $	*/
d39 3
a41 1
#define	MAXPARTITIONS	8			/* number of partitions */
@


1.1.1.1
log
@Next try. ARC tree import. "New" Mips (spim) ARC compliant systems tree.
This tree will eventually suport viritualy all ARC compliant Mips systems,
that is all we can lay our hands on for porting/testing. It will supersede
the pica tree which will be removed shortly when this tree is functioning.
@
text
@@
