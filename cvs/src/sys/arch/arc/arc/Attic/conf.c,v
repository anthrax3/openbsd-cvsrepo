head	1.29;
access;
symbols
	SMP_SYNC_A:1.29
	SMP_SYNC_B:1.29
	UBC_SYNC_A:1.29
	UBC_SYNC_B:1.29
	NIKLAS_UNDEAD:1.28.0.4
	OPENBSD_2_8:1.28.0.2
	OPENBSD_2_8_BASE:1.28
	OPENBSD_2_7:1.27.0.6
	OPENBSD_2_7_BASE:1.27
	SMP:1.27.0.4
	SMP_BASE:1.27
	kame_19991208:1.27
	OPENBSD_2_6:1.27.0.2
	OPENBSD_2_6_BASE:1.27
	OPENBSD_2_5:1.26.0.4
	OPENBSD_2_5_BASE:1.26
	OPENBSD_2_4:1.26.0.2
	OPENBSD_2_4_BASE:1.26
	OPENBSD_2_3:1.19.0.2
	OPENBSD_2_3_BASE:1.19
	OPENBSD_2_2:1.17.0.4
	OPENBSD_2_2_BASE:1.17
	OPENBSD_2_1:1.17.0.2
	OPENBSD_2_1_BASE:1.17
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	PEFO_960624:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@ * @;


1.29
date	2001.02.07.07.44.59;	author art;	state dead;
branches;
next	1.28;

1.28
date	2000.09.26.14.03.51;	author art;	state Exp;
branches;
next	1.27;

1.27
date	99.08.12.13.06.33;	author niklas;	state Exp;
branches
	1.27.4.1;
next	1.26;

1.26
date	98.10.14.18.28.06;	author imp;	state Exp;
branches;
next	1.25;

1.25
date	98.09.25.09.20.52;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	98.08.29.11.14.08;	author niklas;	state Exp;
branches;
next	1.23;

1.23
date	98.08.24.05.29.49;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	98.07.07.06.55.57;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	98.07.07.03.02.32;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	98.05.06.05.11.16;	author imp;	state Exp;
branches;
next	1.19;

1.19
date	98.01.28.13.45.49;	author pefo;	state Exp;
branches;
next	1.18;

1.18
date	97.11.23.05.21.54;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	97.05.21.18.31.31;	author pefo;	state Exp;
branches;
next	1.16;

1.16
date	97.05.18.13.45.21;	author pefo;	state Exp;
branches;
next	1.15;

1.15
date	97.04.30.22.02.24;	author niklas;	state Exp;
branches;
next	1.14;

1.14
date	97.04.19.17.19.40;	author pefo;	state Exp;
branches;
next	1.13;

1.13
date	97.03.23.11.34.27;	author pefo;	state Exp;
branches;
next	1.12;

1.12
date	97.03.12.19.16.40;	author pefo;	state Exp;
branches;
next	1.11;

1.11
date	96.11.28.23.35.38;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	96.11.25.14.52.57;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	96.11.24.18.12.08;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.11.06.01.38.26;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.10.19.13.26.04;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.09.20.23.12.19;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.08.29.09.25.54;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.16.07.46.12;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.07.15.14.57.00;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.24.20.05.34;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	96.06.24.09.07.20;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.24.09.07.20;	author pefo;	state Exp;
branches;
next	;

1.27.4.1
date	2001.04.18.16.02.28;	author niklas;	state dead;
branches;
next	;


desc
@@


1.29
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: conf.c,v 1.28 2000/09/26 14:03:51 art Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)conf.c	8.2 (Berkeley) 11/14/93
 *      $Id: conf.c,v 1.28 2000/09/26 14:03:51 art Exp $
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/proc.h>
#include <sys/vnode.h>
#include <sys/tty.h>
#include <sys/conf.h>

int	ttselect	__P((dev_t, int, struct proc *));

/*
 *	Block devices.
 */

#include "vnd.h"
bdev_decl(vnd);
bdev_decl(sw);
#include "sd.h"
bdev_decl(sd);
#include "cd.h"
bdev_decl(cd);
#include "fdc.h"
bdev_decl(fd);
#include "wd.h"
bdev_decl(wd);
#include "ccd.h"
#include "rd.h"
bdev_decl(rd);

struct bdevsw	bdevsw[] =
{
	bdev_disk_init(NSD,sd),		/* 0: SCSI disk */
	bdev_swap_init(1,sw),		/* 1: should be here swap pseudo-dev */
	bdev_disk_init(NVND,vnd),	/* 2: vnode disk driver */
	bdev_disk_init(NCD,cd),		/* 3: SCSI CD-ROM */
	bdev_disk_init(NWD,wd),		/* 4: ST506/ESDI/IDE disk */
	bdev_notdef(),			/* 5:  */
	bdev_disk_init(NCCD,ccd),	/* 6: concatenated disk driver */
	bdev_disk_init(NFDC,fd),	/* 7: Floppy disk driver */
	bdev_disk_init(NRD,rd),		/* 8: RAM disk (for install) */
	bdev_notdef(),			/* 9:  */
	bdev_notdef(),			/* 10:  */
	bdev_notdef(),			/* 11:  */
	bdev_notdef(),			/* 12:  */
	bdev_notdef(),			/* 13:  */
	bdev_notdef(),			/* 14:  */
	bdev_notdef(),			/* 15:  */
};

int	nblkdev = sizeof (bdevsw) / sizeof (bdevsw[0]);

/*
 *	Character devices.
 */

/* open, close, read, write, ioctl, tty, mmap */
#define cdev_pc_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
	dev_init(c,n,tty), ttselect, dev_init(c,n,mmap), D_TTY }

/* open, close, write, ioctl */
#define	cdev_lpt_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }

/* open, close, write, ioctl */
#define	cdev_spkr_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }

/* open, close, read, ioctl */
#define cdev_joy_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, seltrue, \
	(dev_type_mmap((*))) enodev }

cdev_decl(cn);
cdev_decl(sw);
cdev_decl(ctty);
cdev_decl(random);
#define mmread mmrw
#define mmwrite mmrw
dev_type_read(mmrw);
cdev_decl(mm);
#include "pty.h"
#define	ptstty		ptytty
#define	ptsioctl	ptyioctl
cdev_decl(pts);
#define	ptctty		ptytty
#define	ptcioctl	ptyioctl
cdev_decl(ptc);
cdev_decl(log);
cdev_decl(fd);
#include "st.h"
cdev_decl(st);
#include "fdc.h"
bdev_decl(fd);
cdev_decl(vnd);
cdev_decl(rd);
#include "bpfilter.h"
cdev_decl(bpf);
#include "com.h"
cdev_decl(com);
#include "lpt.h"
cdev_decl(lpt);
cdev_decl(sd);
#include "pc.h"
cdev_decl(pc);
cdev_decl(pms);
cdev_decl(cd);
#include "ss.h"
#include "uk.h"
cdev_decl(uk);
cdev_decl(wd);
cdev_decl(acd);
#include "joy.h"
cdev_decl(joy);
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
#endif
#include "ksyms.h"
cdev_decl(ksyms);
#include "ch.h"

#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_swap_init(1,sw),		/* 1: /dev/drum (swap pseudo-device) */
	cdev_ctty_init(1,ctty),		/* 2: controlling terminal */
	cdev_mm_init(1,mm),		/* 3: /dev/{null,mem,kmem,...} */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_fd_init(1,filedesc),	/* 7: file descriptor pseudo-dev */
	cdev_disk_init(NCD,cd),		/* 8: SCSI CD */
	cdev_disk_init(NSD,sd),		/* 9: SCSI disk */
	cdev_tape_init(NST,st),		/* 10: SCSI tape */
	cdev_disk_init(NVND,vnd),	/* 11: vnode disk */
	cdev_bpftun_init(NBPFILTER,bpf),/* 12: berkeley packet filter */
	cdev_disk_init(NFDC,fd),	/* 13: Floppy disk */
	cdev_pc_init(NPC,pc),		/* 14: builtin pc style console dev */
	cdev_mouse_init(NPC,pms),	/* 15: builtin PS2 style mouse */
	cdev_lpt_init(NLPT,lpt),	/* 16: Parallel printer interface */
	cdev_tty_init(NCOM,com),	/* 17: 16C450 serial interface */
	cdev_disk_init(NWD,wd),		/* 18: ST506/ESDI/IDE disk */
	cdev_notdef(),			/* 19: */
	cdev_tty_init(NPTY,pts),	/* 20: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 21: pseudo-tty master */
	cdev_disk_init(NRD,rd),		/* 22: ramdisk device */
	cdev_disk_init(NCCD,ccd),       /* 23: concatenated disk driver */
	cdev_notdef(),			/* 24: */
	cdev_notdef(),			/* 25: */
	cdev_joy_init(NJOY,joy),	/* 26: joystick */
	cdev_notdef(),			/* 27: */
	cdev_notdef(),			/* 28: */
	cdev_notdef(),			/* 29: */
	cdev_notdef(),			/* 30: */
	cdev_gen_ipf(NIPF,ipl),         /* 31: IP filter log */
	cdev_uk_init(NUK,uk),		/* 32: unknown SCSI */
	cdev_random_init(1,random),	/* 33: random data source */
	cdev_ss_init(NSS,ss),		/* 34: SCSI scanner */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 35: Kernel symbols device */
	cdev_ch_init(NCH,ch),		/* 36: SCSI autochanger */
	cdev_notdef(),			/* 37: */
	cdev_notdef(),			/* 38: */
	cdev_notdef(),			/* 39: */
	cdev_notdef(),			/* 40: */
	cdev_notdef(),			/* 41: */
	cdev_notdef(),			/* 42: */
	cdev_notdef(),			/* 33: */
	cdev_notdef(),			/* 44: */
	cdev_notdef(),			/* 45: */
	cdev_notdef(),			/* 46: */
	cdev_notdef(),			/* 47: */
	cdev_notdef(),			/* 48: */
	cdev_notdef(),			/* 49: */
	cdev_notdef(),			/* 50: */
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
#else
	cdev_notdef(),			/* 51: */
#endif
};

int	nchrdev = sizeof (cdevsw) / sizeof (cdevsw[0]);

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(1, 0);

/*
 * Routine that identifies /dev/mem and /dev/kmem.
 *
 * A minimal stub routine can always return 0.
 */
int
iskmemdev(dev)
	dev_t dev;
{

#ifdef COMPAT_BSD44
	if (major(dev) == 2 && (minor(dev) == 0 || minor(dev) == 1))
#else
	if (major(dev) == 3 && (minor(dev) == 0 || minor(dev) == 1))
#endif
		return (1);
	return (0);
}

/*
 * Returns true if def is /dev/zero
 */
int
iszerodev(dev)
	dev_t dev;
{
#ifdef COMPAT_BSD44
	return (major(dev) == 2 && minor(dev) == 12);
#else
	return (major(dev) == 3 && minor(dev) == 12);
#endif
}

dev_t
getnulldev()
{
	return makedev(3, 2);
}


static int chrtoblktbl[] =  {
      /* VCHR */      /* VBLK */
	/* 0 */		NODEV,
	/* 1 */		NODEV,
	/* 2 */		NODEV,
	/* 3 */		NODEV,
	/* 4 */		NODEV,
	/* 5 */		NODEV,
	/* 6 */		NODEV,
	/* 7 */		NODEV,
	/* 8 */		NODEV,
	/* 9 */		0,
	/* 10 */	NODEV,
	/* 11 */	2,
	/* 12 */	NODEV,
	/* 13 */	7,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	4,
	/* 19 */	5,
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	8,
};

/*
 * Routine to convert from character to block device number.
 */
dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev ||
	    major(dev) > sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
}

/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
#include <dev/cons.h>

cons_decl(pc);
cons_decl(com);

struct	consdev constab[] = {
#if NPC + NVT > 0
	cons_init(pc),
#endif
#if NCOM > 0
	cons_init(com),
#endif
	{ 0 },
};
@


1.28
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 1999/08/12 13:06:33 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.27 1999/08/12 13:06:33 niklas Exp $
@


1.27
log
@Switchover to new IDE framework, and do away with ed finally
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 1998/10/14 18:28:06 imp Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.26 1998/10/14 18:28:06 imp Exp $
d282 6
@


1.27.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 1999/08/12 13:06:33 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.27 1999/08/12 13:06:33 niklas Exp $
@


1.26
log
@

o include ch.h so that NCH is defined
o spell ksyms with with two s's
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 1998/09/25 09:20:52 todd Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.25 1998/09/25 09:20:52 todd Exp $
d66 1
a66 1
#include "wdc.h"
a67 2
#include "acd.h"
bdev_decl(acd);
d78 2
a79 2
	bdev_disk_init(NWDC,wd),	/* 4: ST506/ESDI/IDE disk */
	bdev_disk_init(NACD,acd),	/* 5: ATAPI CD-ROM */
d198 2
a199 2
	cdev_disk_init(NWDC,wd),	/* 18: ST506/ESDI/IDE disk */
	cdev_disk_init(NACD,acd),	/* 19: ATAPI CD-ROM */
@


1.25
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 1998/08/29 11:14:08 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.24 1998/08/29 11:14:08 niklas Exp $
d172 1
d217 1
a217 1
	cdev_kyms_init(NKSYMS,ksyms),	/* 35: Kernel symbols device */
@


1.24
log
@typo in ksyms spec, add ch too
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 1998/08/24 05:29:49 millert Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.23 1998/08/24 05:29:49 millert Exp $
d166 4
d218 19
@


1.23
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 1998/07/07 06:55:57 deraadt Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.22 1998/07/07 06:55:57 deraadt Exp $
d212 2
a213 1
	cdev_kyms_init(NSS,ksyms),	/* 35: Kernel symbols device */
@


1.22
log
@oops, i did not handle nchrdev correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 1998/07/07 03:02:32 deraadt Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.21 1998/07/07 03:02:32 deraadt Exp $
d166 2
d211 2
a212 1
	cdev_ss_init(NSS,ss),           /* 34: SCSI scanner */
@


1.21
log
@fix chrtoblk() so that it returne ENODEV for entries beyond the end of the table
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 1998/05/06 05:11:16 imp Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.20 1998/05/06 05:11:16 imp Exp $
d259 1
a259 2
#define MAXDEV	57
static int chrtoblktbl[MAXDEV] =  {
d295 1
a295 1
	if (major(dev) >= MAXDEV ||
@


1.20
log
@Add joy device to conf.c at minor 26 to match i386 port
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 1998/01/28 13:45:49 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.19 1998/01/28 13:45:49 pefo Exp $
a284 34
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	NODEV,
	/* 27 */	NODEV,
	/* 28 */	NODEV,
	/* 29 */	NODEV,
	/* 30 */	NODEV,
	/* 31 */	NODEV,
	/* 32 */	NODEV,
	/* 33 */	NODEV,
	/* 34 */	NODEV,
	/* 35 */	NODEV,
	/* 36 */	NODEV,
	/* 37 */	NODEV,
	/* 38 */	NODEV,
	/* 39 */	NODEV,
	/* 40 */	NODEV,
	/* 41 */	NODEV,
	/* 42 */	NODEV,
	/* 43 */	NODEV,
	/* 44 */	NODEV,
	/* 45 */	NODEV,
	/* 46 */	NODEV,
	/* 47 */	NODEV,
	/* 48 */	NODEV,
	/* 49 */	NODEV,
	/* 50 */	NODEV,
	/* 51 */	NODEV,
	/* 52 */	NODEV,
	/* 53 */	NODEV,
	/* 54 */	NODEV,
	/* 55 */	NODEV,
	/* 56 */	NODEV,
d286 1
a288 2
 *
 * A minimal stub routine can always return NODEV.
d296 5
a300 1
	if (major(dev) >= MAXDEV || (blkmaj = chrtoblktbl[major(dev)]) == NODEV)
@


1.19
log
@Moving around files for new mips arch layout
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 1997/11/23 05:21:54 mickey Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.18 1997/11/23 05:21:54 mickey Exp $
d118 7
d164 2
d201 1
a201 1
	cdev_notdef(),			/* 26: */
@


1.18
log
@use MI cdev_decl(ipl)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 1997/05/21 18:31:31 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.17 1997/05/21 18:31:31 pefo Exp $
a203 2

int	mem_no = 2; 	/* major device number of memory special file */
@


1.17
log
@Missing devs...
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 1997/05/18 13:45:21 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.16 1997/05/18 13:45:21 pefo Exp $
a157 2
/* open, close, read, ioctl */
cdev_decl(ipl);
@


1.16
log
@RAMDISK additions
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 1997/04/30 22:02:24 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.15 1997/04/30 22:02:24 niklas Exp $
d191 1
a191 1
	cdev_notdef(),			/* 23: */
@


1.15
log
@Add SCSI scanner device
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 1997/04/19 17:19:40 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.14 1997/04/19 17:19:40 pefo Exp $
d70 3
d82 1
a82 1
	bdev_notdef(),			/* 6:  */
d84 1
a84 1
	bdev_notdef(),			/* 8:  */
d140 1
d190 1
a190 1
	cdev_notdef(),			/* 22: */
d279 1
a279 1
	/* 22 */	NODEV,
@


1.14
log
@-Wall cleanup.
Change to new MI assym.h file generation. (genassym.cf)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 1997/03/23 11:34:27 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.13 1997/03/23 11:34:27 pefo Exp $
d148 1
d198 1
@


1.13
log
@Adding more arches require more structuring and cleanup. More to come...
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 1997/03/12 19:16:40 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.12 1997/03/12 19:16:40 pefo Exp $
d219 1
d236 1
d314 1
@


1.12
log
@Addition of support for a PCI based Vr4300 board from Algorithmics, the P-4032.
Changes to io macros were done to handle sparse bus addressing dynamically.
This is a first cut (rough).
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 1996/11/28 23:35:38 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.11 1996/11/28 23:35:38 niklas Exp $
d178 1
a178 1
	cdev_mouse_init(1,pms),		/* 15: builtin PS2 style mouse */
@


1.11
log
@Adaption to new bus.h from NetBSD.  Various driver has been updated to
NetBSD 961107 state.  Other has not, partly because sometimes the bus.h
changes was coupled with other changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 1996/11/25 14:52:57 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.10 1996/11/25 14:52:57 niklas Exp $
d355 1
a355 1
#if NACE > 0
@


1.10
log
@Fix comment typo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 1996/11/24 18:12:08 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.9 1996/11/24 18:12:08 niklas Exp $
d104 1
a104 1
#define	cdev_lpr_init(c,n) { \
d139 4
a142 4
#include "ace.h"
cdev_decl(ace);
#include "lpr.h"
cdev_decl(lpr);
d179 2
a180 2
	cdev_lpr_init(NLPR,lpr),	/* 16: lpr parallel printer interface */
	cdev_tty_init(NACE,ace),	/* 17: ace 16C450 serial interface */
d349 1
a349 1
cons_decl(ace);
d356 1
a356 1
	cons_init(ace),
@


1.9
log
@Fix typo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 1996/11/06 01:38:26 deraadt Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.8 1996/11/06 01:38:26 deraadt Exp $
d179 1
a179 1
	cdev_lpr_init(NLPR,lpr),	/* 16: lpr paralell printer interface */
@


1.8
log
@add blktochr
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 1996/09/20 23:12:19 niklas Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.7 1996/10/19 13:26:04 mickey Exp $
d78 1
a78 1
	bdev_disk_init(NACD,cd),	/* 5: ATAPI CD-ROM */
@


1.7
log
@random device is permanent now.
@
text
@d39 1
a39 1
 *      $Id: conf.c,v 1.6 1996/09/20 23:12:19 niklas Exp $
d320 18
@


1.6
log
@Add wd & acd entries
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 1996/08/29 09:25:54 deraadt Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.5 1996/08/29 09:25:54 deraadt Exp $
d118 1
a147 2
#include "random.h"
cdev_decl(random);
d196 1
a196 1
	cdev_random_init(NRANDOM,random), /* 33: random data source */
@


1.5
log
@rnd -> random
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 1996/07/16 07:46:12 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.4 1996/07/16 07:46:12 pefo Exp $
d66 4
d77 2
a78 2
	bdev_notdef(),			/* 4:  */
	bdev_notdef(),			/* 5:  */
d151 2
d182 2
a183 2
	cdev_notdef(),			/* 18: */
	cdev_notdef(),			/* 19: */
d268 2
a269 2
	/* 18 */	NODEV,
	/* 19 */	NODEV,
@


1.4
log
@Rename some 'pica' names to 'mips'.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 1996/07/15 14:57:00 mickey Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.3 1996/07/15 14:57:00 mickey Exp $
d143 2
a144 2
#include "rnd.h"
cdev_decl(rnd);
d191 1
a191 1
	cdev_rnd_init(NRND,rnd),	/* 33: random data source */
@


1.3
log
@add rnd driver
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 1996/06/24 20:05:34 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.2 1996/06/24 20:05:34 pefo Exp $
d100 1
a100 1
#define	cdev_lpt_init(c,n) { \
d136 2
a137 2
#include "lpt.h"
cdev_decl(lpt);
d174 1
a174 1
	cdev_lpt_init(NLPT,lpt),	/* 16: lpt paralell printer interface */
@


1.2
log
@com.c -> local ace.c, lpt -> local lpr.c
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1.1.1 1996/06/24 09:07:20 pefo Exp $ */
d39 1
a39 1
 *      $Id: conf.c,v 1.1.1.1 1996/06/24 09:07:20 pefo Exp $
d143 4
d190 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d39 1
a39 1
 *      $Id: conf.c,v 1.6 1996/05/15 07:09:10 pefo Exp $
d171 1
a171 1
	cdev_tty_init(NCOM,ace),	/* 17: ace 16C450 serial interface */
d326 1
a326 1
#if NCOM > 0
@


1.1.1.1
log
@Next try. ARC tree import. "New" Mips (spim) ARC compliant systems tree.
This tree will eventually suport viritualy all ARC compliant Mips systems,
that is all we can lay our hands on for porting/testing. It will supersede
the pica tree which will be removed shortly when this tree is functioning.
@
text
@@
