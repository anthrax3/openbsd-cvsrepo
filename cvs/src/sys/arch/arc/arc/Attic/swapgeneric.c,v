head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	NIKLAS_UNDEAD:1.4.0.20
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	PEFO_960624:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2001.02.07.07.45.00;	author art;	state dead;
branches;
next	1.4;

1.4
date	96.11.06.01.38.16;	author deraadt;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.09.30.15.04.44;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.09.24.19.43.53;	author pefo;	state dead;
branches;
next	1.1;

1.1
date	96.06.24.09.07.21;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.24.09.07.21;	author pefo;	state Exp;
branches;
next	;

1.4.14.1
date	2001.04.18.16.02.30;	author niklas;	state dead;
branches;
next	;


desc
@@


1.5
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: swapgeneric.c,v 1.4 1996/11/06 01:38:16 deraadt Exp $ */

/*-
 * Copyright (c) 1994
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)swapgeneric.c       8.2 (Berkeley) 3/21/94
 */

/*
 * fake swapgeneric.c -- should do this differently.
 */

#include <sys/param.h>
#include <sys/conf.h>
#include <machine/disklabel.h>

int (*mountroot) __P((void)) = NULL;	/* tells autoconf.c that we are "generic" */

dev_t	rootdev = NODEV;
dev_t	dumpdev = NODEV;

struct	swdevt swdevt[] = {
	{ makedev(3, 0*MAXPARTITIONS+1), 0, 0 },	/* sd0b */
	{ makedev(3, 1*MAXPARTITIONS+1), 0, 0 },	/* sd1b */
	{ makedev(3, 2*MAXPARTITIONS+1), 0, 0 },	/* sd2b */
	{ makedev(3, 3*MAXPARTITIONS+1), 0, 0 },	/* sd3b */
	{ makedev(3, 4*MAXPARTITIONS+1), 0, 0 },	/* sd4b */
	{ makedev(3, 5*MAXPARTITIONS+1), 0, 0 },	/* sd5b */
	{ makedev(3, 6*MAXPARTITIONS+1), 0, 0 },	/* sd6b */
	{ makedev(3, 7*MAXPARTITIONS+1), 0, 0 },	/* sd7b */
	{ NODEV, 0, 0 }
};
@


1.4
log
@repair mountroot type
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.3 1996/09/30 15:04:44 pefo Exp $ */
@


1.4.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: swapgeneric.c,v 1.4 1996/11/06 01:38:16 deraadt Exp $ */
@


1.3
log
@Need this...
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d46 1
a46 1
int (*mountroot)() = NULL;	/* tells autoconf.c that we are "generic" */
@


1.2
log
@Excess load.
@
text
@d1 1
a1 2
/*	$OpenBSD: swapgeneric.c,v 1.1 1996/06/24 09:07:21 pefo Exp pefo $	*/
/*	$NetBSD: swapgeneric.c,v 1.3 1995/03/24 15:03:02 cgd Exp $	*/
d4 2
a5 5
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
d17 2
a18 2
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
d35 5
a39 1
 *	@@(#)swapgeneric.c	5.5 (Berkeley) 5/9/91
d44 1
a44 5
#include <sys/buf.h>
#include <sys/systm.h>
#include <sys/reboot.h>
#include <sys/device.h>
#include <sys/disklabel.h>
d46 1
a46 1
#include <machine/pte.h>
a47 3
/*
 * Generic configuration;  all in one
 */
a48 1
dev_t	argdev = NODEV;
d50 1
a50 1
int	nswap;
d52 9
a60 27
	{ NODEV,	1,	0 },
	{ NODEV,	0,	0 },
};
long	dumplo;
int	dmmin, dmmax, dmtext;

#include "sd.h"
#if NSD > 0
extern	struct cfdriver sd_cd;
#endif
#include "fdc.h"
#if NFDC > 0
extern	struct cfdriver fd_cd;
#endif

struct	genericconf {
	struct cfdriver *gc_driver;
	char *gc_name;
	dev_t gc_major;
} genericconf[] = {
#if NSD > 0
	{ &sd_cd,  "sd",  0 },
#endif
#if NFDC > 0
	{ &fd_cd,  "fd",  7 },
#endif
	{ 0 }
a61 108

extern int ffs_mountroot();
int (*mountroot)() = ffs_mountroot;

setconf()
{
	register struct genericconf *gc;
	int unit, swaponroot = 0;

	if (rootdev != NODEV)
		goto doswap;

	if (genericconf[0].gc_driver == 0)
		goto verybad;

	if (boothowto & RB_ASKNAME) {
		char name[128];
retry:
		printf("root device? ");
		gets(name);

		if (strcmp(name, "halt") == 0)
			boot(RB_HALT);
			
		for (gc = genericconf; gc->gc_driver; gc++)
			if (gc->gc_name[0] == name[0] &&
			    gc->gc_name[1] == name[1])
				goto gotit;
		goto bad;
gotit:
		if (name[3] == '*') {
			name[3] = name[4];
			swaponroot++;
		}
		if (name[2] >= '0' && name[2] <= '7' && name[3] == 0) {
			unit = name[2] - '0';
			goto found;
		}
		printf("bad/missing unit number\n");
bad:
		printf("use:\n");	
		for (gc = genericconf; gc->gc_driver; gc++)
			printf("\t%s%%d\n", gc->gc_name);
		printf("\thalt\n");
		goto retry;
	}
	unit = 0;
	for (gc = genericconf; gc->gc_driver; gc++) {
		if (gc->gc_driver->cd_ndevs > unit &&
		    gc->gc_driver->cd_devs[unit]) {
			printf("root on %s0\n", gc->gc_name);
			goto found;
		}
	}
verybad:
	printf("no suitable root\n");
	boot(RB_HALT);

found:
	rootdev = makedev(gc->gc_major, unit * MAXPARTITIONS);
doswap:
	swdevt[0].sw_dev = argdev = dumpdev =
	    makedev(major(rootdev), minor(rootdev) + 1);
	/* swap size and dumplo set during autoconfigure */
	if (swaponroot)
		rootdev = dumpdev;
}

gets(cp)
	char *cp;
{
	register char *lp;
	register c;

	lp = cp;
	for (;;) {
		c = cngetc() & 0177;
		switch (c) {
		case '\n':
		case '\r':
			cnputc(c);
			*lp++ = '\0';
			return;
		case '\b':
		case '\177':
			if (lp > cp) {
				printf("\b \b");
				lp--;
			}
			continue;
		case '#':
			cnputc(c);
			lp--;
			if (lp < cp)
				lp = cp;
			continue;
		case '@@':
		case 'u'&037:
			cnputc(c);
			cnputc('\n');
			lp = cp;
			continue;
		default:
			cnputc(c);
			*lp++ = c;
		}
	}
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.1.1
log
@Next try. ARC tree import. "New" Mips (spim) ARC compliant systems tree.
This tree will eventually suport viritualy all ARC compliant Mips systems,
that is all we can lay our hands on for porting/testing. It will supersede
the pica tree which will be removed shortly when this tree is functioning.
@
text
@@
