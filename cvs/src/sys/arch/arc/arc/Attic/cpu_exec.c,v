head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	SMP:1.5.0.2
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	PEFO_960624:1.1.1.1
	PEFO:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	98.01.28.13.45.51;	author pefo;	state dead;
branches;
next	1.4;

1.4
date	97.04.19.17.19.41;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	97.03.23.11.34.28;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.12.23.02.56.26;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.06.24.09.07.20;	author pefo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.24.09.07.20;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Moving around files for new mips arch layout
@
text
@/*	$OpenBSD: cpu_exec.c,v 1.4 1997/04/19 17:19:41 pefo Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by Ralph
 * Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)machdep.c	8.3 (Berkeley) 1/12/94
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/malloc.h>
#include <sys/vnode.h>
#include <sys/exec.h>
#include <sys/resourcevar.h>
#include <vm/vm.h>

#include <sys/exec_ecoff.h>
#include <machine/reg.h>

#if defined(_KERN_DO_ECOFF)
void cpu_exec_ecoff_setregs __P((struct proc *, struct exec_package *,
				u_long, register_t *));
#endif
/*
 * cpu_exec_aout_makecmds():
 *	cpu-dependent a.out format hook for execve().
 * 
 * Determine of the given exec package refers to something which we
 * understand and, if so, set up the vmcmds for it.
 *
 */
int
cpu_exec_aout_makecmds(p, epp)
	struct proc *p;
	struct exec_package *epp;
{
	return ENOEXEC;
}


#if defined(_KERN_DO_ECOFF)
void
cpu_exec_ecoff_setregs(p, pack, stack, retval)
	struct proc *p;
	struct exec_package *pack;
	u_long stack;
	register_t *retval;
{
	struct ecoff_aouthdr *eap;

	setregs(p, pack, stack, retval);
	eap = (struct ecoff_aouthdr *)
	    ((caddr_t)pack->ep_hdr + sizeof(struct ecoff_filehdr));
	p->p_md.md_regs[GP] = eap->ea_gp_value;
}

/*
 * cpu_exec_ecoff_hook():
 *	cpu-dependent ECOFF format hook for execve().
 * 
 * Do any machine-dependent diddling of the exec package when doing ECOFF.
 *
 */
int
cpu_exec_ecoff_hook(p, epp)
	struct proc *p;
	struct exec_package *epp;
{
#ifdef COMPAT_ULTRIX
	extern struct emul emul_ultrix;
#endif

#if defined(COMPAT_ULTRIX)
	epp->ep_emul = &emul_ultrix;
#endif
	return 0;
}

#endif /* _KERN_DO_ECOFF */
@


1.4
log
@-Wall cleanup.
Change to new MI assym.h file generation. (genassym.cf)
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_exec.c,v 1.3 1997/03/23 11:34:28 pefo Exp $	*/
@


1.3
log
@Adding more arches require more structuring and cleanup. More to come...
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 4
@


1.2
log
@i think this fixes COMPAT_ULTRIX
@
text
@d1 1
a1 1
/*	$NetBSD: cpu_exec.c,v 1.4 1995/04/25 19:16:46 mellon Exp $	*/
@


1.1
log
@Initial revision
@
text
@a68 2
#ifdef COMPAT_ULTRIX
extern struct emul emul_ultrix;
d70 1
d94 1
a94 1
cpu_exec_ecoff_hook(p, epp, eap)
a96 1
	struct ecoff_aouthdr *eap;
d98 3
d102 1
d104 1
d107 2
a108 1
#endif
@


1.1.1.1
log
@Next try. ARC tree import. "New" Mips (spim) ARC compliant systems tree.
This tree will eventually suport viritualy all ARC compliant Mips systems,
that is all we can lay our hands on for porting/testing. It will supersede
the pica tree which will be removed shortly when this tree is functioning.
@
text
@@
