head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	NIKLAS_UNDEAD:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2001.02.07.07.45.03;	author art;	state dead;
branches;
next	1.4;

1.4
date	2000.07.21.17.41.05;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.04.10.16.29.17;	author pefo;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	97.03.23.11.34.34;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	97.03.23.10.14.58;	author pefo;	state Exp;
branches;
next	;

1.3.14.1
date	2001.04.18.16.02.39;	author niklas;	state dead;
branches;
next	;


desc
@@


1.5
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: lpt_lbus.c,v 1.4 2000/07/21 17:41:05 mickey Exp $	*/

/*
 * Copyright (c) 1993, 1994 Charles Hannum.
 * Copyright (c) 1990 William F. Jolitz, TeleMuse
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This software is a component of "386BSD" developed by 
 *	William F. Jolitz, TeleMuse.
 * 4. Neither the name of the developer nor the name "386BSD"
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS A COMPONENT OF 386BSD DEVELOPED BY WILLIAM F. JOLITZ 
 * AND IS INTENDED FOR RESEARCH AND EDUCATIONAL PURPOSES ONLY. THIS 
 * SOFTWARE SHOULD NOT BE CONSIDERED TO BE A COMMERCIAL PRODUCT. 
 * THE DEVELOPER URGES THAT USERS WHO REQUIRE A COMMERCIAL PRODUCT 
 * NOT MAKE USE OF THIS WORK.
 *
 * FOR USERS WHO WISH TO UNDERSTAND THE 386BSD SYSTEM DEVELOPED
 * BY WILLIAM F. JOLITZ, WE RECOMMEND THE USER STUDY WRITTEN 
 * REFERENCES SUCH AS THE  "PORTING UNIX TO THE 386" SERIES 
 * (BEGINNING JANUARY 1991 "DR. DOBBS JOURNAL", USA AND BEGINNING 
 * JUNE 1991 "UNIX MAGAZIN", GERMANY) BY WILLIAM F. JOLITZ AND 
 * LYNNE GREER JOLITZ, AS WELL AS OTHER BOOKS ON UNIX AND THE 
 * ON-LINE 386BSD USER MANUAL BEFORE USE. A BOOK DISCUSSING THE INTERNALS 
 * OF 386BSD ENTITLED "386BSD FROM THE INSIDE OUT" WILL BE AVAILABLE LATE 1992.
 *
 * THIS SOFTWARE IS PROVIDED BY THE DEVELOPER ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE DEVELOPER BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Device Driver for AT parallel printer port
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/autoconf.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/ic/lptreg.h>
#include <dev/ic/lptvar.h>

int lpt_localbus_probe __P((struct device *, void *, void *));
void lpt_localbus_attach __P((struct device *, struct device *, void *));

struct cfattach lpt_pica_ca = {
	sizeof(struct lpt_softc), lpt_localbus_probe, lpt_localbus_attach
};

struct cfattach lpt_algor_ca = {
	sizeof(struct lpt_softc), lpt_localbus_probe, lpt_localbus_attach
};

int
lpt_localbus_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct confargs *ca = aux;
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
	bus_addr_t base;
	u_int8_t mask, data;
	int i;

#ifdef DEBUG
#define	ABORT								     \
	do {								     \
		printf("lpt_localbus_probe: mask %x data %x failed\n", mask, \
		    data);						     \
		return 0;						     \
	} while (0)
#else
#define	ABORT	return 0
#endif

	if(!BUS_MATCHNAME(ca, "lpt"))
		 return(0);

	iot = &arc_bus_io;
	base = (bus_addr_t)BUS_CVTADDR(ca);
	ioh = (bus_space_handle_t)base;

	mask = 0xff;

	data = 0x55;				/* Alternating zeros */
	if (!lpt_port_test(iot, ioh, base, lpt_data, data, mask))
		ABORT;

	data = 0xaa;				/* Alternating ones */
	if (!lpt_port_test(iot, ioh, base, lpt_data, data, mask))
		ABORT;

	for (i = 0; i < CHAR_BIT; i++) {	/* Walking zero */
		data = ~(1 << i);
		if (!lpt_port_test(iot, ioh, base, lpt_data, data, mask))
			ABORT;
	}

	for (i = 0; i < CHAR_BIT; i++) {	/* Walking one */
		data = (1 << i);
		if (!lpt_port_test(iot, ioh, base, lpt_data, data, mask))
			ABORT;
	}

	bus_space_write_1(iot, ioh, lpt_data, 0);
	bus_space_write_1(iot, ioh, lpt_control, 0);

	return 1;
}

void
lpt_localbus_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct lpt_softc *sc = (void *)self;
	struct confargs *ca = aux;

	sc->sc_state = 0;
	sc->sc_iot = &arc_bus_io;
	sc->sc_ioh = (bus_space_handle_t)BUS_CVTADDR(ca);

	lpt_attach_common(sc);

	BUS_INTR_ESTABLISH(ca, lptintr, sc);
}
@


1.4
log
@convert to new timeouts
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_lbus.c,v 1.3 1997/04/10 16:29:17 pefo Exp $	*/
@


1.3
log
@Attempt to clean up local devices.
Added support for new QED RT52x0 processors.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_lbus.c,v 1.2 1997/03/23 11:34:34 pefo Exp $	*/
a142 4
	bus_space_tag_t iot;
	bus_space_handle_t ioh;

	printf("\n");
d145 1
a145 1
	iot = sc->sc_iot = &arc_bus_io;
d148 1
a148 1
	bus_space_write_1(iot, ioh, lpt_control, LPC_NINIT);
@


1.3.14.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_lbus.c,v 1.3 1997/04/10 16:29:17 pefo Exp $	*/
@


1.2
log
@Adding more arches require more structuring and cleanup. More to come...
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_lbus.c,v 1.1 1997/03/23 10:14:58 pefo Exp $	*/
d104 1
a104 1
	iot = &arc_bus;
d149 1
a149 1
	iot = sc->sc_iot = &arc_bus;
@


1.1
log
@Moved from pica since they are not Pica bus specific
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 5
a74 1
struct cfattach lpt_localbus_ca = {
@
