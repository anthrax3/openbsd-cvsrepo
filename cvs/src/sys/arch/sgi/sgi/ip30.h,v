head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.18
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.14
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.16
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.8
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.12
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.10
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.6
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.4
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2012.06.17.12.34.19;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2010.03.07.13.44.26;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2010.01.19.19.54.24;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2010.01.13.22.57.30;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.05.06.44.58;	author syuu;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.31.00.20.46;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.30.08.13.57;	author syuu;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.15.23.40.54;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.14.20.21.16;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.07.22.43.45;	author miod;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Using the LLAddr register to store our curcpu() pointer on R10k SMP kernels
was a nice trick, but this register is only 32-bit wide and will be
sign-extended, which requires all cpu_info structs to be allocated within 2GB
physical - something which may not be possible on some configurations.

This diff changes IP30.MP kernels to no longer use LLAddr to store curcpu,
but use unused fields of the MPConf structure in low memory, indexed with the
physical processor id, which can be obtained from the Heart PRID register.
@
text
@/*	$OpenBSD: ip30.h,v 1.9 2010/03/07 13:44:26 miod Exp $	*/

/*
 * Copyright (c) 2008, 2009 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Physical memory on Octane starts at 512MB.
 *
 * This allows the small windows of all widgets to appear under physical
 * memory, and the Bridge window (#f) to sport the machine PROM at the
 * physical address where the CPU expects it on reset.
 */

#define	IP30_MEMORY_BASE		0x20000000
#define	IP30_MEMORY_ARCBIOS_LIMIT	0x40000000

/*
 * Specific widget assignment
 */

#define	IP30_HEART_WIDGET		8
#define	IP30_BRIDGE_WIDGET		15

#define	IP30_IOC_SLOTNO			2

/*
 * On-board IOC3 specific GPIO registers wiring
 */

/* Light bar control: 0 to dim, 1 to lit */
#define	IP30_GPIO_WHITE_LED		0	/* actually lightbulbs */
#define	IP30_GPIO_RED_LED		1
/* Classic Octane (1) vs Octane 2 (0), read only */
#define	IP30_GPIO_CLASSIC		2

/*
 * Flash PROM physical address, within BRIDGE widget
 */

#define	IP30_FLASH_BASE			0xc00000
#define	IP30_FLASH_SIZE			0x200000
#define	IP30_FLASH_ALT			0xe00000

/*
 * Multiprocessor configuration area
 */

#define	IP30_MAXCPUS		4

#define MPCONF_BASE		0x0000000000000600
#define MPCONF_LEN		0x80
#define	MPCONF_SHIFT		7	/* Log2(MPCONF_LEN) */

#define MPCONF_MAGIC(i)		((i) * MPCONF_LEN + 0x00)
#define MPCONF_PRID(i)		((i) * MPCONF_LEN + 0x04)
#define MPCONF_PHYSID(i)	((i) * MPCONF_LEN + 0x08)
#define MPCONF_VIRTID(i)	((i) * MPCONF_LEN + 0x0c)
#define MPCONF_SCACHESZ(i)	((i) * MPCONF_LEN + 0x10)
#define MPCONF_FANLOADS(i)	((i) * MPCONF_LEN + 0x14)
#define MPCONF_LAUNCH(i)	((i) * MPCONF_LEN + 0x18)
#define MPCONF_RNDVZ(i)		((i) * MPCONF_LEN + 0x20)
#define MPCONF_STACKADDR(i)	((i) * MPCONF_LEN + 0x40)
#define MPCONF_LPARAM(i)	((i) * MPCONF_LEN + 0x48)
#define MPCONF_RPARAM(i)	((i) * MPCONF_LEN + 0x50)
#define MPCONF_IDLEFLAG(i)	((i) * MPCONF_LEN + 0x58)

#define MPCONF_MAGIC_VAL	0xbaddeed2

/*
 * Global data area
 */

#define	GDA_BASE		0x0000000000000400

#define	GDA_MAGIC		0x58464552		/* XFER */

#if !defined(_LOCORE)
struct ip30_gda {
	uint32_t	magic;		/* GDA_MAGIC */
	uint32_t 	promop;
	void		(*nmi_cb)(void);
	uint64_t	masterspid;
	void		*tlb_handlers[3];
	uint64_t	nmi_count;
};

int	ip30_find_video(void);
#endif
@


1.9
log
@Allow iockbc(4) and odysseey(4) to act as console devices and attach early;
this gives us working glass console on Fuel, as well as on Octane systems
with Odyssey graphics.
Joint work with jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.8 2010/01/19 19:54:24 miod Exp $	*/
d63 1
a63 1
#define MPCONF_BASE		0x0000000000000600UL
d65 1
d86 1
a86 1
#define	GDA_BASE		0x0000000000000400UL
@


1.8
log
@Compute the right value for hw.ncpusfound sysctl on IP30 regardless of the
value of MAXCPUS.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.7 2010/01/13 22:57:30 miod Exp $	*/
d37 2
d98 2
@


1.7
log
@Crude handler for the Octane NMI button, for kernels compiled with
option DDB.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.6 2010/01/05 06:44:58 syuu Exp $	*/
d58 2
@


1.6
log
@Dynamic allocation for ASID and ASID generation number on struct pmap. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.5 2009/10/31 00:20:46 miod Exp $	*/
d59 2
a60 17
#define MPCONF_BASE         0x0000000000000600UL
#define MPCONF_LEN          0x80

#define MPCONF_MAGIC(i)     ((i) * MPCONF_LEN + 0x00)
#define MPCONF_PRID(i)      ((i) * MPCONF_LEN + 0x04)
#define MPCONF_PHYSID(i)    ((i) * MPCONF_LEN + 0x08)
#define MPCONF_VIRTID(i)    ((i) * MPCONF_LEN + 0x0c)
#define MPCONF_SCACHESZ(i)  ((i) * MPCONF_LEN + 0x10)
#define MPCONF_FANLOADS(i)  ((i) * MPCONF_LEN + 0x14)
#define MPCONF_LAUNCH(i)    ((i) * MPCONF_LEN + 0x18)
#define MPCONF_RNDVZ(i)     ((i) * MPCONF_LEN + 0x20)
#define MPCONF_STACKADDR(i) ((i) * MPCONF_LEN + 0x40)
#define MPCONF_LPARAM(i)    ((i) * MPCONF_LEN + 0x48)
#define MPCONF_RPARAM(i)    ((i) * MPCONF_LEN + 0x50)
#define MPCONF_IDLEFLAG(i)  ((i) * MPCONF_LEN + 0x58)

#define MPCONF_MAGIC_VAL    0xbaddeed2
d62 33
@


1.5
log
@Blinkenlichten on Octane.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.4 2009/10/30 08:13:57 syuu Exp $	*/
d76 1
@


1.4
log
@Support IP30 secondary cpu bootup. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.3 2009/10/15 23:40:54 miod Exp $	*/
d41 2
a42 2
/* LED bar control: 0 to dim, 1 to lit */
#define	IP30_GPIO_WHITE_LED		0
@


1.3
log
@The Octane boot PROM is accessible through the PCI space of the on-board i/o
widget; make sure we reserve its address span so that no device risks
having its resources overlap the PROM.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.2 2009/10/14 20:21:16 miod Exp $	*/
d54 22
@


1.2
log
@On IP30 and IP35 systems, try harder to figure out exactly what model we are
running on, and report this both as the hw.product sysctl and in dmesg.
Fuel and Origin 350 are no longer reported as being Origin 300 systems!
@
text
@d1 1
a1 1
/*	$OpenBSD: ip30.h,v 1.1 2008/04/07 22:43:45 miod Exp $	*/
d31 7
d46 8
@


1.1
log
@Platform-specific bits for IP30 (Octane). Based on knowledge extracted from
Linux source code.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2008 Miodrag Vallat.
d19 8
d29 10
@

