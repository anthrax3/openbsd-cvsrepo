head	1.39;
access;
symbols
	OPENBSD_6_1:1.39.0.8
	OPENBSD_6_1_BASE:1.39
	OPENBSD_6_0:1.39.0.4
	OPENBSD_6_0_BASE:1.39
	OPENBSD_5_9:1.39.0.2
	OPENBSD_5_9_BASE:1.39
	OPENBSD_5_8:1.38.0.16
	OPENBSD_5_8_BASE:1.38
	OPENBSD_5_7:1.38.0.8
	OPENBSD_5_7_BASE:1.38
	OPENBSD_5_6:1.38.0.12
	OPENBSD_5_6_BASE:1.38
	OPENBSD_5_5:1.38.0.10
	OPENBSD_5_5_BASE:1.38
	OPENBSD_5_4:1.38.0.6
	OPENBSD_5_4_BASE:1.38
	OPENBSD_5_3:1.38.0.4
	OPENBSD_5_3_BASE:1.38
	OPENBSD_5_2:1.38.0.2
	OPENBSD_5_2_BASE:1.38
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.8
	OPENBSD_5_0:1.31.0.6
	OPENBSD_5_0_BASE:1.31
	OPENBSD_4_9:1.31.0.4
	OPENBSD_4_9_BASE:1.31
	OPENBSD_4_8:1.31.0.2
	OPENBSD_4_8_BASE:1.31
	OPENBSD_4_7:1.29.0.2
	OPENBSD_4_7_BASE:1.29
	OPENBSD_4_6:1.18.0.2
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.15.0.2
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7;
locks; strict;
comment	@ * @;


1.39
date	2015.12.25.08.34.50;	author visa;	state Exp;
branches;
next	1.38;
commitid	mGLOAekfSVArdeBr;

1.38
date	2012.06.24.16.26.04;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2012.05.29.17.37.09;	author mikeb;	state Exp;
branches;
next	1.36;

1.36
date	2012.05.27.14.27.10;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2012.04.21.12.20.30;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2012.04.03.21.17.35;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2012.03.28.20.44.23;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2012.03.25.13.52.52;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2010.04.06.19.15.26;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2010.04.06.19.06.04;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2010.01.09.23.34.29;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2010.01.09.20.33.16;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2009.12.25.21.02.18;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2009.11.12.19.46.46;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2009.11.07.22.48.36;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2009.11.07.14.49.01;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2009.10.30.08.13.57;	author syuu;	state Exp;
branches;
next	1.22;

1.22
date	2009.10.26.20.14.42;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2009.10.26.18.00.06;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2009.10.16.00.15.48;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2009.08.06.21.06.32;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2009.06.13.21.48.03;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2009.05.21.16.28.11;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.17.01.30.58;	author jsing;	state Exp;
branches;
next	1.15;

1.15
date	2008.04.24.13.12.59;	author jsing;	state Exp;
branches;
next	1.14;

1.14
date	2008.04.24.12.29.34;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2008.04.07.22.32.46;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2008.02.20.18.46.20;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.20.14.34.23;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.22.20.32.39;	author grange;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.20.12.49.15;	author pefo;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.20.10.31.16;	author pefo;	state Exp;
branches;
next	1.7;

1.7
date	2004.08.10.21.11.42;	author pefo;	state Exp;
branches;
next	1.6;

1.6
date	2004.08.10.19.16.18;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.10.18.52.58;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.10.12.33.21;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.10.07.48.45;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.09.14.57.26;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.21.12.18;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.39
log
@Make interrupt masking MP-aware. Linux IP27 and IP35 ports served as a
substitute for hardware documentation.
@
text
@/*	$OpenBSD: autoconf.h,v 1.38 2012/06/24 16:26:04 miod Exp $ */

/*
 * Copyright (c) 2001-2003 Opsycon AB  (www.opsycon.se / www.opsycon.com)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

/*
 * Definitions used by autoconfiguration.
 */

#ifndef _MACHINE_AUTOCONF_H_
#define _MACHINE_AUTOCONF_H_

#include <machine/bus.h>

/*
 * Structure holding all misc config information.
 */
struct cpu_info;

struct sys_rec {
	int	system_type;
	int	system_subtype;		/* IP35 only */

	/* Serial console configuration. */
	struct mips_bus_space console_io;
};

extern struct sys_rec sys_config;

/*
 * Attachment information for mainbus child devices.
 */
struct mainbus_attach_args {
	const char	*maa_name;
	int16_t		 maa_nasid;
	int16_t		 maa_physid;
};

/*
 * Device physical location information.  Used to match console and boot
 * devices on IP27 and IP30 kernels.
 */
struct sgi_device_location {
	int16_t		nasid;		/* node identifier */
	uint		widget;		/* widget number */

	int		bus;		/* bus number if connected to PIC */
	int		device;		/* device number if PCI */
	int		fn;		/* function number if PCI */

	uint32_t	specific;	/* port on dual-scsibus controllers,
					   device id on serial controllers */
};

#include <mips64/autoconf.h>

void	enaddr_aton(const char *, u_int8_t *);
u_long	bios_getenvint(const char *);

struct device;

void	arcs_device_register(struct device *, void *);
void	dksc_device_register(struct device *, void *);
extern	void (*_device_register)(struct device *, void *);

void	ip22_setup(void);
void	ip22_post_autoconf(void);
void	ip27_setup(void);
void	ip27_autoconf(struct device *);
void	ip30_setup(void);
void	ip30_autoconf(struct device *);
void	ip32_setup(void);

extern char osloadpartition[256];
extern char osloadoptions[129];
extern int16_t masternasid;
extern int16_t currentnasid;

extern struct sgi_device_location console_output, console_input;

int	location_match(struct sgi_device_location *,
	    struct sgi_device_location *);

extern void (*md_halt)(int);
void	arcbios_halt(int);

#endif /* _MACHINE_AUTOCONF_H_ */
@


1.38
log
@Add cache operation functions pointers to struct cpu_info; the various
cache lines and sizes are already there, after all.

The ConfigCache cache routine is responsible for filling these function
pointers; cache routine invocation macros are updated to use the cpu_info
fields, but may still be overriden in <machine/cpu.h> on platforms where
only one set of cache routines is used.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.37 2012/05/29 17:37:09 mikeb Exp $ */
d59 1
@


1.37
log
@Make it possible to disable the Sync-on-Green signal by setting the
ARCBios environment variable OSLoadOptions to "nosog".  Now everyone
can enjoy running O2 without an SGI monitor and don't turn vegetarian
afterwards.  All the essential bits come from NetBSD's crmfb driver
except they've chosen to use a "SyncOnGreen" variable not saved by
the ARCS.  Pointers and corrections from and ok miod, jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.36 2012/05/27 14:27:10 miod Exp $ */
a46 8
	/* Published cache operations. */
	void    (*_SyncCache)(struct cpu_info *);
	void    (*_InvalidateICache)(struct cpu_info *, vaddr_t, size_t);
	void    (*_SyncDCachePage)(struct cpu_info *, vaddr_t, paddr_t);
	void    (*_HitSyncDCache)(struct cpu_info *, vaddr_t, size_t);
	void    (*_IOSyncDCache)(struct cpu_info *, vaddr_t, size_t, int);
	void    (*_HitInvalidateDCache)(struct cpu_info *, vaddr_t, size_t);

d63 1
a63 1
 * devices.
@


1.36
log
@Proper support for the so-called `fast mode' of the Indigo2 ECC memory
controller. In this mode, access to physical memory are not allowed to
bypass the cache, and this allows the memory subsystem to run faster.

Of course, some device drivers will require uncached memory access (e.g.
for proper HPC DMA descriptor operation).

New ip22-specific functions to switch between `fast mode' and `slow mode'
are introduced.

hpc(4) now provides read and write routines to fetch a dma descriptor from
uncached memory into a local copy, and update it from said modified copy.
On systems without the ECC MC, these will do nothing and operation will
continue to access the uncached memory directly. On systems with the ECC MC,
they will perform a copy, and the writeback will be done in slow mode.

bus_dmamem_map() requests for DMA memory with BUS_DMA_COHERENT set in flags,
which would return uncached memory, will now always fail on systems with
the ECC memory controller. Drivers which really need uncached memory, and
are aware of this particular setup, will now pass
BUS_DMA_COHERENT | BUS_DMA_BUS1, which will let the request succeed.

sq(4) will use all of the above to work mostly unmodified on ECC MC systems
in fast mode.

Finally, fast mode is enabled after autoconf.

Tested on IP22 and IP28.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.35 2012/04/21 12:20:30 miod Exp $ */
d105 1
@


1.35
log
@Rework the signature of the cache handling routines again. It makes more sense
to pass both the virtual and physical addresses of the page to clean to
SyncDCachePage, which is the only routine using `Index' operations on the data
cache, which might be virtually indexed at some levels but physically indexed
at others. On the other hand, it does not make any sense to pass a physical
address to routines using `Hit' operations (and they were discarding them
anyway).

In addition to making things cleaner, this fixes sporadic userland misbehaviour
(read: SIGSGEV) on RM7000 O2 systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.34 2012/04/03 21:17:35 miod Exp $ */
d112 3
@


1.34
log
@Default DMA-reachable address constraints to the whole address space, and
narrow these in the various ipXX_machdep.c. On IP22-like systems, narrow
them to 28 bit physical addresses, but unpessimize this by extending this
to 32 bit after autoconf, if no 28-bit limited hpc(4) device has been found.
Since physical memory on these systems start at 128MB, this means that Indigo
systems with more than 128MB memory will behave correctly (and so will Indy
systems with E++ boards and more than 128MB memory).
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.33 2012/03/28 20:44:23 miod Exp $ */
d49 5
a53 5
	void    (*_InvalidateICache)(struct cpu_info *, uint64_t, size_t);
	void    (*_SyncDCachePage)(struct cpu_info *, uint64_t);
	void    (*_HitSyncDCache)(struct cpu_info *, uint64_t, size_t);
	void    (*_IOSyncDCache)(struct cpu_info *, uint64_t, size_t, int);
	void    (*_HitInvalidateDCache)(struct cpu_info *, uint64_t, size_t);
@


1.33
log
@Work in progress support for the SGI Indigo, Indigo 2 and Indy systems
(IP20, IP22, IP24) in 64-bit mode, adapated from NetBSD. Currently limited
to headless operation, input and video drivers will get ported soon.

Should work on all R4000, R4440 and R5000 based systems. L2 cache on R5000SC
Indy not supported yet (coming soon), R4600 not supported yet either (coming
soon as well).

Tested to boot multiuser on: Indigo2 R4000SC, Indy R4000PC, Indy R4000SC,
Indy R5000SC, Indigo2 R4400SC. There are still glitches in the Ethernet driver
which are being looked at.

Expansion support is limited to the GIO E++ board; GIO boards with PCI-GIO
bridges not ported yet due to the lack of hardware, and this kind of driver
does not port blindly.

Most of this work comes from NetBSD, polishing and integration work, as well
as putting as many ``R4x00 in 64-bit mode'' erratas as necessary, by yours
truly.

More work is coming, as well as trying to get some easy way to boot install
kernels (as older PROM can only boot ECOFF binaries, which won't do for the
kernel).
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.32 2012/03/25 13:52:52 miod Exp $ */
d97 1
@


1.32
log
@Move cache handling routines related definitions to a dedicated header file,
rather than abusing <machine/cpu.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.31 2010/04/06 19:15:26 miod Exp $ */
d96 1
@


1.31
log
@Split the device_register() code responsible for boot path recognition into
two distinct sets of routines: one for the ARCBios-compatible path used on
non-KL systems (such as O2 and Octane), and one for the KL system using
dksc() paths.

When trying to match a dksc() path, walk the KL configuration of the whole
system until the dksc controller is found; since the controller numbers are
not assigned sequentially and contiguously, the old code would not work on
complex systems (such as when booting from controller #6 when #3 to #5 are
unaffected).
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.30 2010/04/06 19:06:04 miod Exp $ */
d49 5
a53 5
	void    (*_InvalidateICache)(struct cpu_info *, vaddr_t, size_t);
	void    (*_SyncDCachePage)(struct cpu_info *, vaddr_t);
	void    (*_HitSyncDCache)(struct cpu_info *, vaddr_t, size_t);
	void    (*_IOSyncDCache)(struct cpu_info *, vaddr_t, size_t, int);
	void    (*_HitInvalidateDCache)(struct cpu_info *, vaddr_t, size_t);
@


1.30
log
@Introduce struct sgi_device_location to carry enough information to uniquely
identify a given device by its physical connection, and add a lazy compare
routine. This will be used shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.29 2010/01/09 23:34:29 miod Exp $ */
d91 4
@


1.29
log
@Move cache information from global variables to per-cpu_info fields; this
allows processors with different cache sizes to be used.

Cache management routines now take a struct cpu_info * as first parameter.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.28 2010/01/09 20:33:16 miod Exp $ */
d61 3
d69 16
d101 5
@


1.28
log
@Define struct cpu_hwinfo, to hold hardware specific information about each
processor (instead of sys_config.cpu[]), and pass it in the attach_args
when attaching cpu devices.

This allows per-cpu information to be gathered late in the bootstrap process,
and not be limited by an arbitrary MAX_CPUS limit; this will suit IP27 and
IP35 systems better.

While there, use this information to make sure delay() uses the speed
information from the cpu it is invoked on.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.27 2009/12/25 21:02:18 miod Exp $ */
d41 2
d48 6
a53 6
	void    (*_SyncCache)(void);
	void    (*_InvalidateICache)(vaddr_t, size_t);
	void    (*_SyncDCachePage)(vaddr_t);
	void    (*_HitSyncDCache)(vaddr_t, size_t);
	void    (*_IOSyncDCache)(vaddr_t, size_t, int);
	void    (*_HitInvalidateDCache)(vaddr_t, size_t);
@


1.27
log
@Pass both the virtual address and the physical address of the memory range
when invoking the cache functions. The physical address is needed when
operating on physically-indexed caches, such as the L2 cache on Loongson
processors.

Preprocessor abuse makes sure that the physical address computation gets
compiled out when running on a kernel compiled for virtually-indexed
caches only, such as the sgi kernel.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.26 2009/11/12 19:46:46 miod Exp $ */
a40 2
#define MAX_CPUS	4

a44 12
	struct cpuinfo {
		u_int16_t type;
		u_int8_t  vers_maj;
		u_int8_t  vers_min;
		u_int16_t fptype;
		u_int8_t  fpvers_maj;
		u_int8_t  fpvers_min;
		u_int32_t clock;
		u_int32_t tlbsize;
		u_int32_t tlbwired;
	} cpu[MAX_CPUS];

d63 2
@


1.26
log
@More unused fields in struct sys_rec.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.25 2009/11/07 22:48:36 miod Exp $ */
d61 1
a61 1
	void    (*_InvalidateICache)(vaddr_t, int);
d63 3
a65 3
	void    (*_HitSyncDCache)(vaddr_t, int);
	void    (*_IOSyncDCache)(vaddr_t, int, int);
	void    (*_HitInvalidateDCache)(vaddr_t, int);
@


1.25
log
@In case an ioc(4) device has lost its NIC component, do not recognize it
as the onboard ioc device, if one has already been found on this node.

Also, on Origin 300, do not attempt to attach the PS/2 controller on the
onboard ioc(4) since PS/2 ports are not wired.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.24 2009/11/07 14:49:01 miod Exp $ */
a54 1
		u_int32_t clock_bus;
@


1.24
log
@Change sgi system identification from a single system type list, to a smaller
system type list (which really is the system family) and a subsystem type.

No functional change yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.23 2009/10/30 08:13:57 syuu Exp $ */
d92 1
@


1.23
log
@Support IP30 secondary cpu bootup. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.22 2009/10/26 20:14:42 miod Exp $ */
d45 1
@


1.22
log
@Rename struct confargs to struct mainbus_attach_args for consistency and also
to prevent further abuse of it.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.21 2009/10/26 18:00:06 miod Exp $ */
d86 1
@


1.21
log
@Better crime/mace interrupt handling; interrupt information is no longer
specified in the kernel configuration file, but is provided by macebus(4)
as part of the  child device attachment args, and provide both crime and
mace interrupt bitmasks; this allows us to only really enable interrupt
sources we care about, and to avoid invoking interrupt handler we don't need
to for the few mace interrupts multiplexed at the crime level.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.20 2009/10/16 00:15:48 miod Exp $ */
d73 3
a75 3
struct confargs {
	char		*ca_name;
	int16_t		 ca_nasid;
@


1.20
log
@Get serial console speed from prom, and use it instead of hardcoding 9600 bps,
on all systems but O2 (to catch up soon). Also use the IOC4 MCR register to
figure out the IOC4 clock, instead of checking the widget control register,
to be consistent with iof(4).
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.19 2009/08/06 21:06:32 miod Exp $ */
a75 6
	bus_space_tag_t  ca_iot;
	bus_dma_tag_t	 ca_dmat;
	/* XXX the following are macebus-specific */
	bus_space_tag_t  ca_memt;
	int32_t		 ca_intr;
	bus_addr_t	 ca_baseaddr;
@


1.19
log
@Remove _InvalidateICachePage cache op, it isn't used by anything.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.18 2009/06/13 21:48:03 miod Exp $ */
d85 1
@


1.18
log
@Enumerate all available nodes for hardware on IP27/IP35 systems; works to some
extent, but isp(4) on other nodes do not work correctly yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.17 2009/05/21 16:28:11 miod Exp $ */
a61 1
	void    (*_InvalidateICachePage)(vaddr_t);
@


1.17
log
@Overhaul root device detection; the code will now follow the ARCS bootpath
component by component, from device_register().

IP27 and IP35 systems using the dksc() syntax get their dksc() syntax converted
to an ARCS bootpath, so the same logic will apply.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.16 2008/09/17 01:30:58 jsing Exp $ */
a73 3
/**/
struct confargs;

d75 8
a82 6
	char		*ca_name;	/* Device name. */
	bus_space_tag_t ca_iot;
	bus_space_tag_t ca_memt;
	bus_dma_tag_t	ca_dmat;
	int32_t		ca_intr;
	bus_addr_t	ca_baseaddr;
d87 2
d90 1
d95 1
@


1.16
log
@Garbage collect unused variable from sys_rec structure.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.12 2008/02/20 18:46:20 miod Exp $ */
d91 2
@


1.15
log
@Remove variables that are no longer used to specify the serial console.

ok dlg@@
@
text
@a69 1
	struct mips_bus_space *cons_iot;
@


1.14
log
@Cleanup serial console handling and remove some of the MD code from com.c.
Specify the serial configuration from within the MD code, rather than
passing things via macros. This will allow other platforms to more readily
change the serial console configuration.

Committing this so it actually gets tested.

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.13 2008/04/07 22:32:46 miod Exp $ */
d39 1
a39 1
 *  Structure holding all misc config information.
d45 1
d58 2
a59 1
	/* Published Cache OPS */
d67 2
a68 2
	/* Console/Serial configuration */
	int	cons_baudclk;
a70 1
	bus_addr_t cons_ioaddr;
@


1.13
log
@Unclutter machdep.c by moving the IP32-specific initialization code to its
own file. While there, more dead beef removal in struct sys_rec.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.12 2008/02/20 18:46:20 miod Exp $ */
a72 8

/*
 *  Give com.c method to find console address and speeds
 */
#define	COM_FREQ	(sys_config.cons_baudclk)
#define	CONCOM_FREQ	(sys_config.cons_baudclk)
#define	CONADDR		(sys_config.cons_ioaddr)

@


1.12
log
@Completely overhault attachment rules on sgi. No more indirect configuration
inherited from OpenBSD/arc machines with ISA bus; mainbus children match on
device name and other hierarchies match on simplified locators.
As a bonus, attachment lines in dmesg will now print their locators.

ok jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.11 2007/05/20 14:34:23 miod Exp $ */
a55 2
		u_int32_t cfg_reg;
		u_int32_t stat_reg;
d67 1
a67 1
	struct mips_bus_space console_io;	/* for stupid map designs */
d69 1
a69 1
	bus_addr_t cons_ioaddr[8];		/* up to eight loclbus tty's */
d79 1
a79 1
#define	CONADDR		(sys_config.cons_ioaddr[0])
d95 4
@


1.11
log
@Remove unused badaddr().
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.10 2005/02/22 20:32:39 grange Exp $ */
a66 6
	/* BUS mappings */
	struct mips_bus_space local;
	struct mips_bus_space isa_io;
	struct mips_bus_space isa_mem;
	struct mips_bus_space pci_io[2];
	struct mips_bus_space pci_mem[2];
a86 30
typedef int (*intr_handler_t)(void *);

struct abus {
	struct	device *ab_dv;		/* back-pointer to device */
	int	ab_type;		/* bus type (see below) */
	void	*(*ab_intr_establish)	/* bus's set-handler function */
		    (void *, u_long, int, int, int (*)(void *), void *, char *);
	void	(*ab_intr_disestablish)	/* bus's unset-handler function */
		    (void *, void *);
	caddr_t	(*ab_cvtaddr)		/* convert slot/offset to address */
		    (struct confargs *);
	int	(*ab_matchname)		/* see if name matches driver */
		    (struct confargs *, char *);
};

#define	BUS_MAIN	1		/* mainbus */
#define	BUS_LOCAL	2		/* localbus */
#define	BUS_ISABR	3		/* ISA Bridge Bus */
#define	BUS_PLCHLDR	4		/* placeholder */
#define	BUS_PCIBR	5		/* PCI bridge Bus */

#define BUS_INTR_ESTABLISH(ca, a, b, c, d, e, f, h)			\
	    (*(ca)->ca_bus->ab_intr_establish)((a),(b),(c),(d),(e),(f),(h))
#define BUS_INTR_DISESTABLISH(ca)					\
	    (*(ca)->ca_bus->ab_intr_establish)(ca)
#define BUS_MATCHNAME(ca, name)						\
	    (((ca)->ca_bus->ab_matchname) ?				\
	    (*(ca)->ca_bus->ab_matchname)((ca), (name)) :		\
	    -1)

a88 1
	struct abus	*ca_bus;	/* Bus device resides on. */
a91 5
	u_int32_t	ca_num;		/* which system */
	u_int32_t	ca_sys;		/* which system */
	int		ca_nreg;
	u_int32_t	*ca_reg;
	int		ca_nintr;
@


1.10
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.9 2004/10/20 12:49:15 pefo Exp $ */
a137 1
int	badaddr(void *, u_int64_t);
@


1.9
log
@Fix some 64 bit address problems.
Some function names made more unique.
Other changes for the upcoming Origin 200 support.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.8 2004/09/20 10:31:16 pefo Exp $ */
d30 1
a30 1
 * Definitions used buy autoconfiguration.
@


1.8
log
@Add support for R10K cpu class
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7 2004/08/10 21:11:42 pefo Exp $ */
d45 1
a45 1
	struct {
@


1.7
log
@copyrights
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.6 2004/08/10 19:16:18 deraadt Exp $ */
d59 9
d73 1
a73 1

@


1.6
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.5 2004/08/10 18:52:58 deraadt Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.4 2004/08/10 12:33:21 pefo Exp $ */
d49 1
a49 1
        int     system_type;
d64 5
a68 5
        struct mips_bus_space local;
        struct mips_bus_space isa_io;
        struct mips_bus_space isa_mem;
        struct mips_bus_space pci_io[2];
        struct mips_bus_space pci_mem[2];
d70 2
a71 2
        int     cons_baudclk;
        struct mips_bus_space console_io;	/* for stupid map designs */
d73 1
a73 1
        bus_addr_t cons_ioaddr[8];		/* up to eight loclbus tty's */
d110 1
a110 1
#define BUS_INTR_ESTABLISH(ca, a, b, c, d, e, f, h)                     \
d112 1
a112 1
#define BUS_INTR_DISESTABLISH(ca)                                       \
d114 3
a116 3
#define BUS_MATCHNAME(ca, name)                                         \
	    (((ca)->ca_bus->ab_matchname) ?                             \
	    (*(ca)->ca_bus->ab_matchname)((ca), (name)) :               \
@


1.4
log
@make enaddr_aton in machdep.c global
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.3 2004/08/10 07:48:45 mickey Exp $ */
d5 1
a5 1
 * 
d76 1
a76 1
extern struct sys_rec sys_config; 
d81 2
a82 2
#define	COM_FREQ	(sys_config.cons_baudclk) 
#define	CONCOM_FREQ	(sys_config.cons_baudclk) 
@


1.3
log
@give mace some dma; pefo@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.2 2004/08/09 14:57:26 pefo Exp $ */
d135 1
@


1.2
log
@Big cleanup. Removed some unused obsolete stuff and fixed copyrights
on some files. Arcbios support is now in, thus detects memorysize and cpu
clock frequency.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.1 2004/08/06 21:12:18 pefo Exp $ */
d124 1
@


1.1
log
@initial sgi import
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d46 1
d51 6
a56 3
		u_int32_t type;
		u_int32_t vers_maj;
		u_int32_t vers_min;
d63 1
a63 1
	} cpu;
@

