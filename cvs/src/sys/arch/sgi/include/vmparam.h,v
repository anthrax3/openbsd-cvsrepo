head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.10
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.6
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.8
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.4
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.16
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.14
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.12
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.10
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2014.07.13.15.48.32;	author miod;	state Exp;
branches;
next	1.9;
commitid	NnqneCYtWWfsOrVv;

1.9
date	2011.05.30.22.25.22;	author oga;	state Exp;
branches;
next	1.8;

1.8
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.7;

1.7
date	2009.12.08.22.15.48;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.22.10.05.02;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.22.00.07.04;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.14.20.18.26;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.08.18.42.04;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.07.22.41.52;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.21.12.19;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove stale comment which used to explain why we had a special 31-bit freelist
for DMA, back when this was applicable.
@
text
@/*	$OpenBSD: vmparam.h,v 1.9 2011/05/30 22:25:22 oga Exp $ */
/* public domain */
#ifndef _MACHINE_VMPARAM_H_
#define _MACHINE_VMPARAM_H_

#define	VM_PHYSSEG_MAX	32	/* Max number of physical memory segments */

#include <mips64/vmparam.h>

#endif	/* _MACHINE_VMPARAM_H_ */
@


1.9
log
@Remove the freelist member from vm_physseg

The new world order of pmemrange makes this data completely redundant
(being dealt with by the pmemrange constraints instead). Remove all code
that messes with the freelist.

While touching every caller of uvm_page_physload() anyway, add the flags
argument to all callers (all but one is 0 and that one already used
PHYSLOAD_DEVICE) and remove the macro magic to allow callers to continue
without it.

Should shrink the code a bit, as well.

matthew@@ pointed out some mistakes i'd made.
``freelist death, I like. Ok.' ariane@@
`I agree with the general direction, go ahead and i'll fix any fallout
shortly'' miod@@ (68k 88k and vax i could not check would build)
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.8 2011/03/23 16:54:36 pirofti Exp $ */
a6 11

/*
 * On Origin and Octane families, DMA to 32-bit PCI devices is restricted.
 *
 * Systems with physical memory after the 2GB boundary need to ensure
 * memory which may used for DMA transfers is allocated from the low
 * memory range.
 *
 * Other systems, like the O2, do not have such a restriction, but can not
 * have more than 2GB of physical memory, so this doesn't affect them.
 */
@


1.8
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.7 2009/12/08 22:15:48 miod Exp $ */
a17 3

#define	VM_NFREELIST		2
#define	VM_FREELIST_DMA32	1	/* memory suitable for 32-bit DMA */
@


1.7
log
@Unconditionnaly move kernel virtual memory space to XKSEG, now that previous
context.S fixes allows these settings to work for kernels linked in CKSEG0.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6 2009/11/22 10:05:02 miod Exp $ */
d3 2
a4 2
#ifndef _SGI_VMPARAM_H_
#define _SGI_VMPARAM_H_
d24 1
a24 1
#endif	/* _SGI_VMPARAM_H_ */
@


1.6
log
@grammar fixes in comments; from brad
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.5 2009/11/22 00:07:04 miod Exp $ */
a20 18

/*
 * On systems which may use R5000 processors, we limit the kernel virtual
 * address space to KSSEG and KSEG3.
 * On systems with R10000 family processors, we use the XKSEG which allows
 * for a much larger virtual memory size.
 *
 * All Octane and Origin class systems are R10000 family based only,
 * so TGT_COHERENT is safe to use so far.
 */

#ifdef TGT_COHERENT
#define	VM_MIN_KERNEL_ADDRESS	((vaddr_t)0xc000000000000000L)
#define	VM_MAX_KERNEL_ADDRESS	((vaddr_t)0xc000000040000000L)
#else
#define	VM_MIN_KERNEL_ADDRESS	((vaddr_t)0xffffffffc0000000L)
#define	VM_MAX_KERNEL_ADDRESS	((vaddr_t)0xfffffffffffff000L)
#endif
@


1.5
log
@Allow mips ports to override VM_{MIN,MAX}_KERNEL_ADDRESS, and provide the
address as a kernel variable for use by libkvm.

On sgi IP27 and IP30 kernels, use XKSEG instead of CKSSEG; this will allow
kernel KVM size to grow in the future if necessary.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.4 2009/10/14 20:18:26 miod Exp $ */
d11 1
a11 1
 * Systems with physical memory after the 2GB boundary needs to ensure
d23 1
a23 1
 * On systems with may use R5000 processors, we limit the kernel virtual
@


1.4
log
@Add some comments to explain why the DMA32 physseg is really 2**31 bytes
long. Prompted by deraadt@@ long ago.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.3 2009/05/08 18:42:04 miod Exp $ */
d21 18
@


1.3
log
@Add a new page freelist, to which memory suitable for 32-bit dma on
xbridge(4) is assigned. Then, make bus_dmamem_alloc() allocate from this
range only.

This is transparent on O2, and makes sure the bus_dma memory address
will fit in the 2GB direct map of xbridge(4) chips - this is necessary for
PCI devices which do not handle 64 bit dma addresses.
@
text
@d1 2
a2 2
/*	$OpenBSD: vmparam.h,v 1.2 2008/04/07 22:41:52 miod Exp $ */

d8 11
d20 1
a20 1
#define	VM_FREELIST_DMA32	1	/* memory under 2GB suitable for DMA */
@


1.2
log
@Allow for up to 32 memory segments.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.1 2004/08/06 21:12:19 pefo Exp $ */
d7 3
@


1.1
log
@initial sgi import
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.2 1998/01/28 13:46:35 pefo Exp $ */
d3 4
a6 1
/* Use Mips generic include file */
d9 2
@

