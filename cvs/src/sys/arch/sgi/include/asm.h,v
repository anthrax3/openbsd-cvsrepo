head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.16
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.12
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.10
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.22
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.20
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.18
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.16
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.14
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.12
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.10
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.25.05.52.29;	author visa;	state Exp;
branches;
next	1.5;
commitid	f89xY2823KlPzlNK;

1.5
date	2012.06.17.12.34.19;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.11.11.29.50;	author syuu;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.28.16.20.28;	author syuu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.30.06.22.00;	author syuu;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.21.12.18;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use the ErrorEPC register for curcpu() on Origin, for now.
@
text
@/*	$OpenBSD: asm.h,v 1.5 2012/06/17 12:34:19 miod Exp $ */
#ifndef	_SGI_ASM_H_
#define	_SGI_ASM_H_

#include <mips64/asm.h>
#ifdef TGT_OCTANE
#include <sgi/sgi/ip30.h>
#endif

#ifdef MULTIPROCESSOR

#if defined(TGT_OCTANE)

#include <sgi/xbow/xheartreg.h>

/* Returns the physical cpu identifier */
#define HW_GET_CPU_PRID(prid, tmp)				\
	LOAD_XKPHYS(tmp, CCA_NC);				\
	PTR_L	prid, (HEART_PIU_BASE + HEART_PRID)(tmp)	\

/* Return the cpu_info pointer - see locore.S for the logic behind this */
#define HW_GET_CPU_INFO(ci, tmp)			\
	HW_GET_CPU_PRID(ci, tmp);			\
	LOAD_XKPHYS(tmp, CCA_COHERENT_EXCLWRITE);	\
	PTR_SLL	ci, MPCONF_SHIFT;			\
	PTR_ADD	ci, MPCONF_BASE;			\
	or	tmp, ci;				\
	PTR_L	ci, (MPCONF_LEN - REGSZ)(tmp)

#elif defined(TGT_ORIGIN)

#define HW_GET_CPU_INFO(ci, tmp)			\
	DMFC0	ci, COP_0_ERROR_PC

#endif /* TGT_ORIGIN */

#endif /* MULTIPROCESSOR */

#endif	/* _SGI_ASM_H_ */
@


1.5
log
@Using the LLAddr register to store our curcpu() pointer on R10k SMP kernels
was a nice trick, but this register is only 32-bit wide and will be
sign-extended, which requires all cpu_info structs to be allocated within 2GB
physical - something which may not be possible on some configurations.

This diff changes IP30.MP kernels to no longer use LLAddr to store curcpu,
but use unused fields of the MPConf structure in low memory, indexed with the
physical processor id, which can be obtained from the Heart PRID register.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.4 2010/09/11 11:29:50 syuu Exp $ */
d12 2
a13 1
#ifdef TGT_OCTANE
a28 1
#endif
d30 8
a37 1
#endif
@


1.4
log
@move machine dependent GET_CPU_INFO(), getcurcpu(), setcurcpu() to arch/sgi. ok miod@@
@
text
@d1 8
a8 1
/*	$OpenBSD: asm.h,v 1.3 2010/04/28 16:20:28 syuu Exp $ */
d11 19
a29 4
#define HW_GET_CPU_INFO(ci, tmp)	\
	LOAD_XKPHYS(ci, CCA_CACHED);	\
	mfc0	tmp, COP_0_LLADDR;	\
	or	ci, ci, tmp
d32 1
a32 1
#include <mips64/asm.h>
@


1.3
log
@Storeing current cpu_info address into LLAddr register, for curcpu().
Instead of previous implementation, we won't use physical cpuid to fetch curcpu().
This requires to implement IP27/35 SMP.
Implemented getcurcpu() and setcurcpu() for it, smp_malloc() renamed alloc_contiguous_pages() because now it only allocate by page.
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.2 2009/09/30 06:22:00 syuu Exp $ */
d3 6
a8 1
/* Use Mips generic include file */
@


1.2
log
@curproc, curprocpaddr moved into cpu_info
OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.1 2004/08/06 21:12:18 pefo Exp $ */
a3 9

#ifdef MULTIPROCESSOR
#define HW_CPU_NUMBER(reg)			\
	LA reg, HW_CPU_NUMBER_REG;		\
	PTR_L reg, 0(reg)
#else  /* MULTIPROCESSOR */
#define HW_CPU_NUMBER(reg)			\
	LI reg, 0
#endif /* MULTIPROCESSOR */
@


1.1
log
@initial sgi import
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.7 1998/01/28 13:46:09 pefo Exp $ */
d4 9
@

