head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.30
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.28
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.24
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.26
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2009.10.15.23.42.43;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.14.20.19.23;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.08.19.13.00;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.08.19.10.53;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.25.20.36.18;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.07.22.47.40;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Sort widgets by type instead of manufacturer code, add some TIO widgets,
and add comments explaining why it's very unlikely we'll ever see TIO
widgets on mips-based SGI systems (unless someone builds a Mengele-style
XIO link).
@
text
@$OpenBSD: xbowdevs,v 1.5 2009/10/14 20:19:23 miod Exp $
/*
 * Copyright (c) 2008 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

vendor	SGI		0x0000
vendor	SGI2		0x0023
vendor	SGI3		0x0024
vendor	SGI4		0x0036
vendor	SGI5		0x02aa

/*
 * List of known products.  Grouped by type.
 */

/*
 * Crossbows
 */

product	SGI	XBOW		0x0000	XBow
product	SGI	XXBOW		0xd000	XXBow
product	SGI	PXBOW		0xd100	PXBow

/*
 * Frame buffers and graphics related devices
 */

product	SGI5	IMPACT		0xc003	ImpactSR
product	SGI2	ODYSSEY		0xc013	Odyssey
product	SGI5	KONA		0xc102	Kona
product	SGI3	TPU		0xc202	TPU

/*
 * Non-XIO bus bridges
 */

product	SGI4	BRIDGE		0xc002	Bridge
product	SGI3	XBRIDGE		0xd002	XBridge
/*
 * PIC is really a single chip but with two widgets headers, and 4 PCI-X
 * slots per widget.
 * The second widget register set uses 0xd112 as the product id.
 */
product	SGI3	PIC		0xd102	PIC
/*
 * TIO apparently is a next-generation XIO framework; TIO:CP being a TIO
 * variant of PIC with two PCI-X buses, and TIO:CA an AGP bridge.
 * Unlike PIC, the two heads of TIO:CP would appear as two distinct TIO
 * widgets.
 * TIO widgets are supposedly only found on SN2 systems onwards (i.e.
 * ia64-based Altix systems), but in case there is a way to connect TIO
 * nodes to XIO nodes, better identify them properly.
 */
product	SGI3	TIOCP0		0xe000	TIO:CP
product	SGI3	TIOCP1		0xe010	TIO:CP
product	SGI3	TIOCA		0xe020	TIO:CA

/*
 * Octane HEART memory and interrupt controller
 */
product	SGI4	HEART		0xc001	Heart

/*
 * Miscellaneous widgets
 */

product	SGI4	HUB		0xc101	Hub
product	SGI4	BEDROCK		0xc110	Bedrock
@


1.5
log
@Report the crossbow widget part of bedrock as PXBow for consistency with
the *{X,}Bow names and because this is what IRIX calls it.
@
text
@d1 1
a1 1
$OpenBSD: xbowdevs,v 1.4 2009/10/08 19:13:00 miod Exp $
d25 5
a29 1
 * List of known products.  Grouped by ``manufacturer''.
d34 1
a34 1
product	SGI	BEDROCK		0xd100	PXBow
d36 5
d42 6
d49 1
a49 1
product	SGI3	TPU		0xc202	TPU
d57 11
a67 2
/* Supposedly a PIC-compatible chip, maybe a different revision */
/* product	SGI3	?		0xe000	? (0xe010 for the 2nd widget) */
d70 3
d74 5
a78 1
product	SGI4	BRIDGE		0xc002	Bridge
a80 3

product	SGI5	IMPACT		0xc003	ImpactSR
product	SGI5	KONA		0xc102	Kona
@


1.4
log
@Recognize the Bedrock as an XBow instead of reporting it as ``unknown
xbow''; while there report vendor and product id of unknow xbow chips.
@
text
@d1 1
a1 1
$OpenBSD: xbowdevs,v 1.3 2009/10/08 19:10:53 miod Exp $
d30 1
a30 1
product	SGI	BEDROCK		0xd100	Bedrock
@


1.3
log
@PIC actually comes with two sets of widget registers, with different IDs,
but we only care about the first for matching, so don't bother listing the
second one in xbowdevs, and fix the description.
@
text
@d1 1
a1 1
$OpenBSD: xbowdevs,v 1.2 2009/04/25 20:36:18 miod Exp $
d30 1
@


1.2
log
@More widgets found on high end hardware we don't run on (yet (-: )
@
text
@d1 1
a1 1
$OpenBSD: xbowdevs,v 1.1 2008/04/07 22:47:40 miod Exp $
d35 6
a40 3
/* PIC is really a single chip but two widgets, with 4 PCI-X slots per widget */
product	SGI3	PIC0		0xd102	PIC (bus 0)
product	SGI3	PIC1		0xd112	PIC (bus 1)
d42 1
a42 2
/* product	SGI3	?		0xe000	? (bus 0) */
/* product	SGI3	?		0xe010	? (bus 1) */
@


1.1
log
@A first cut at XBow bus support, very minimal, limited to a local bus only;
HUB driver (for IP27) is a stub, and interrupt support is a shoot in the dark
and will need some serious debugging until it is sane, but I want to reduce
the weight of these diffs first.

Based on a lot of tinkering and experiments, as well as knowledge extracted
from the Linux source code.
@
text
@d1 1
a1 1
$OpenBSD$
d35 7
@

