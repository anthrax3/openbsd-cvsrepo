head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.34
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.32
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.28
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.24
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.26
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5;
locks; strict;
comment	@ * @;


1.5
date	2009.10.16.00.15.46;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.13.21.17.11;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.11.19.36.25;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.07.04.17.46;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.08.18.19.34.15;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Get serial console speed from prom, and use it instead of hardcoding 9600 bps,
on all systems but O2 (to catch up soon). Also use the IOC4 MCR register to
figure out the IOC4 clock, instead of checking the widget control register,
to be consistent with iof(4).
@
text
@/*	$OpenBSD: com_iof.c,v 1.4 2009/10/13 21:17:11 miod Exp $	*/

/*
 * Copyright (c) 2001-2004 Opsycon AB  (www.opsycon.se / www.opsycon.com)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/tty.h>

#include <machine/autoconf.h>
#include <machine/bus.h>

#include <dev/ic/comreg.h>
#include <dev/ic/comvar.h>
#include <dev/ic/ns16550reg.h>

#include <sgi/pci/iofvar.h>

int	com_iof_probe(struct device *, void *, void *);
void	com_iof_attach(struct device *, struct device *, void *);

struct cfattach com_iof_ca = {
	sizeof(struct com_softc), com_iof_probe, com_iof_attach
};

extern struct cfdriver com_cd;

int
com_iof_probe(struct device *parent, void *match, void *aux)
{
	struct cfdata *cf = match;
	struct iof_attach_args *iaa = aux;
	bus_space_tag_t iot = iaa->iaa_memt;
	bus_space_handle_t ioh;
	int rv = 0, console;

	if (strcmp(iaa->iaa_name, com_cd.cd_name) != 0)
		return 0;

	console = iaa->iaa_memh + iaa->iaa_base ==
	    comconsiot->bus_base + comconsaddr;

	/* if it's in use as console, it's there. */
	if (!(console && !comconsattached)) {
		if (bus_space_subregion(iot, iaa->iaa_memh,
		    iaa->iaa_base, COM_NPORTS, &ioh) == 0)
			rv = comprobe1(iot, ioh);
	} else
		rv = 1;

	/* make a config stanza with exact locators match over a generic line */
	if (cf->cf_loc[0] != -1)
		rv += rv;

	return rv;
}

void
com_iof_attach(struct device *parent, struct device *self, void *aux)
{
	struct com_softc *sc = (void *)self;
	struct iof_attach_args *iaa = aux;
	bus_space_handle_t ioh;
	int console;

	console = iaa->iaa_memh + iaa->iaa_base ==
	    comconsiot->bus_base + comconsaddr;

	sc->sc_hwflags = 0;
	sc->sc_swflags = 0;
	sc->sc_frequency = iaa->iaa_clock;

	/* if it's in use as console, it's there. */
	if (!(console && !comconsattached)) {
		sc->sc_iot = iaa->iaa_memt;
		sc->sc_iobase = iaa->iaa_base;

		if (bus_space_subregion(iaa->iaa_memt, iaa->iaa_memh,
		    iaa->iaa_base, COM_NPORTS, &ioh) != 0) {
			printf(": can't map registers\n");
			return;
		}
	} else {
		/*
		 * If we are the console, reuse the existing bus_space
		 * information, so that comcnattach() invokes bus_space_map()
		 * with correct parameters.
		 */
		sc->sc_iot = comconsiot;
		sc->sc_iobase = comconsaddr;

		if (comcnattach(sc->sc_iot, sc->sc_iobase, comconsrate,
		    sc->sc_frequency, (TTYDEF_CFLAG & ~(CSIZE | PARENB)) | CS8))
			panic("can't setup serial console");
		ioh = comconsioh;
	}

	sc->sc_ioh = ioh;

	com_attach_subr(sc);

	iof_intr_establish(parent, iaa->iaa_dev, IPL_TTY, comintr,
	    (void *)sc, sc->sc_dev.dv_xname);
}
@


1.4
log
@Make iof(4) pass its bus speed to children, this in turn allows com(4) to
pick the right clock if the PCI bus the I/O board is on degrades to 33MHz.
@
text
@d1 1
a1 1
/*	$OpenBSD: com_iof.c,v 1.3 2009/10/11 19:36:25 miod Exp $	*/
a114 1
		sc->sc_frequency = comconsfreq;
d116 1
a116 1
		if (comcnattach(sc->sc_iot, sc->sc_iobase, TTYDEF_SPEED,
@


1.3
log
@Make sure com@@io[cf] attachment stanzas with locators win over generic com*
lines. (This is done only to make dmesg look nice)
@
text
@d1 1
a1 1
/*	$OpenBSD: com_iof.c,v 1.2 2009/10/07 04:17:46 miod Exp $	*/
d95 1
a95 4
	/* XXX need to get PCI bus speed from parent */
	sc->sc_frequency = 66666667;
	if (0)
		sc->sc_frequency >>= 1;
@


1.2
log
@Small steps towards getting the serial clock correct on IOC4 serial ports.
@
text
@d1 1
a1 1
/*	$OpenBSD: com_iof.c,v 1.1 2009/08/18 19:34:15 miod Exp $	*/
d55 1
d74 4
@


1.1
log
@Blind partial support for IOC4 chip, found on IO8 and IO9 base I/O boards on
Origin 350 and Tezro systems. While this chip provides serial ports, an ATAPI
interface and a PS/2 keyboard and mouse interface, this code currently only
attempts to support the serial ports.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d90 4
a93 1
	sc->sc_frequency = 22000000 / 3;
d113 1
@

