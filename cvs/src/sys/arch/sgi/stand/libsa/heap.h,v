head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.36
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.34
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.30
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.26
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.28
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.24
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.22
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.18
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.16
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.14
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.05.14.18.57.43;	author miod;	state Exp;
branches;
next	;


desc
@@


1.1
log
@In addition to the existing IP32 boot block, build a real 64 bit boot block
as a relocatable object, suitable for IP27/IP30/IP35.

Boot blocks are now found is /usr/mdec/boot{32,64}, with boot-IP## being
hard links to them for easy boot block pick.
@
text
@/*	$OpenBSD$	*/
/* public domain */

/*
 * Declarations for the libsa heap allocator.
 *
 * Relocatable 64 bit bootblocks use memory below the load address and
 * can not use the `end' symbol.
 */

#ifdef __LP64__
#define	NEEDS_HEAP_INIT

#define	HEAP_LIMIT	heap_limit
#define	HEAP_SIZE	(1UL << 20)	/* 1MB */
#define	HEAP_START	heap_start

static unsigned long heap_start;
static unsigned long heap_limit;
static char *top;			/* no longer declared in alloc.c */

static inline void heap_init(void);
static inline void
heap_init()
{
	extern char __start[];

	if (top == NULL) {
		heap_limit = (unsigned long)&__start;
		heap_start = heap_limit - HEAP_SIZE;
		top = (char *)heap_start;
	}
}

#endif
@
