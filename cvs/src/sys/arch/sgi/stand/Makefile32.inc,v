head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.16
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.14
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.10.05.11.55.45;	author visa;	state Exp;
branches;
next	1.5;
commitid	caBYKspBPiC2w13Q;

1.5
date	2012.10.19.13.51.59;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.14.08.46.13;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.31.20.36.14;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.31.13.22.50;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.14.18.57.41;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Make the sgi boot blocks read the real OpenBSD disklabel instead of
assuming that the 'a' partition starts at the same location as the
volume header partition #0.

Diff from Miod Vallat
@
text
@#	$OpenBSD: Makefile32.inc,v 1.5 2012/10/19 13:51:59 miod Exp $

.ifndef __INCLUDED_STAND_MAKEFILE32_INC
__INCLUDED_STAND_MAKEFILE32_INC=

.if ${MACHINE} == "sgi"
# Silence warnings
CFLAGS+=	-fno-builtin-snprintf
CFLAGS+=	-fno-builtin-memcpy
CFLAGS+=	-fno-builtin-memcmp
CFLAGS+=	-fno-builtin-memset
CFLAGS+=	-fno-builtin-strncpy
CFLAGS+=	-fno-builtin-strncmp
# Override toolchain options to force 32 bit binaries
SAABI=		-mno-abicalls -D_NO_ABICALLS -mabi=32 -mips2 -Wa,-G0
AS?=		as
AS+=		-32
LD?=		ld
LD+=		-m elf32btsmip
LIBSA_CPPFLAGS=
CFLAGS+=	-DLIBSA_LONGLONG_PRINTF
.endif

### Figure out what to use for libsa and libz
LIBSADIR=               ${.CURDIR}/../libsa32
LIBZDIR=                ${.CURDIR}/../libz32

.endif
@


1.5
log
@Be sure to compile boot block objects with -D_NO_ABICALLS, to prevent .S files
in libkern from getting a ".abicalls" pseudo-op from including <machine/asm.h>;
this will in turn flag the .o file as PIC even though it doesn't contain PIC
code, really.

This gets rid of the annoying "linking PIC files with non-PIC files" warnings
spewed by ld at link time.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile32.inc,v 1.4 2010/09/14 08:46:13 miod Exp $
d21 1
@


1.4
log
@Forc -mno-abicalls when compiling non-PIC bootblocks, for gcc 4 passes -KPIC
to the assembler now unless -mno-abicalls is specified.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile32.inc,v 1.3 2009/10/31 20:36:14 miod Exp $
d15 1
a15 1
SAABI=		-mno-abicalls -mabi=32 -mips2 -Wa,-G0
@


1.3
log
@A chunk from my WIP bootblocks tree went in by mistake in previous commit;
spotted by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile32.inc,v 1.2 2009/10/31 13:22:50 miod Exp $
d15 1
a15 1
SAABI=		-mabi=32 -mips2 -Wa,-G0
@


1.2
log
@Do not override AS and LD, to be cross compilation friendly; noticed by syuu@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile32.inc,v 1.1 2009/05/14 18:57:41 miod Exp $
d20 1
a20 1
#LIBSA_CPPFLAGS=
@


1.1
log
@In addition to the existing IP32 boot block, build a real 64 bit boot block
as a relocatable object, suitable for IP27/IP30/IP35.

Boot blocks are now found is /usr/mdec/boot{32,64}, with boot-IP## being
hard links to them for easy boot block pick.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2007/11/26 10:01:42 deraadt Exp $
d16 5
a20 3
AS=		as -32
LD=		ld -m elf32btsmip
LIBSA_CPPFLAGS=
@

