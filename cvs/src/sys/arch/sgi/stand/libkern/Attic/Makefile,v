head	1.6;
access;
symbols
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2007.11.25.18.25.33;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2005.07.21.13.23.01;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.23.12.55.58;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.22.22.06.16;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.16.18.54.48;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.23.14.22.40;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@#	$OpenBSD: Makefile,v 1.5 2005/07/21 13:23:01 deraadt Exp $

LIB=	kern

.PATH:	${.CURDIR}/../../../../lib/libkern

CFLAGS= -O2 ${SAABI} -mno-abicalls -D_NO_ABICALLS ${STANDALONE} \
	-nostdinc -I${.CURDIR}/../include -I${.CURDIR}/../../../.. \
	-I${.CURDIR}/../../../../lib/libkern \
	-I${.CURDIR}/../../../../lib/libkern/arch/mips64 -I${.CURDIR} \
	-I${.OBJDIR}

AFLAGS=	-x assembler-with-cpp -traditional-cpp -I${.CURDIR}/../include \
	-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libkern \
	-I${.CURDIR}/../../../../lib/libkern/arch/mips64 \
	-I${.OBJDIR}

# kern routines
SRCS=	__main.c ashrdi3.c bzero.c divdi3.c qdivrem.c strlen.c \
	strcmp.c strlcat.c strlcpy.c strncmp.c umoddi3.c udivdi3.c \
	moddi3.c

${OBJS}:	${.CURDIR}/../Makefile.inc

CLEANFILES += machine mips64

NOPROFILE=
NOPIC=

.if !make(libdep) && !make(sadep) && !make(salibdir) && !make(kernlibdir) && !make(obj)
.BEGIN:
	@@([ -h machine ] || ln -s ${.CURDIR}/../../include machine)
	@@([ -h mips64 ] || ln -s ${.CURDIR}/../../../mips64/include mips64)
.endif

install:

.include <bsd.lib.mk>
@


1.5
log
@need moddi3 too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2004/09/23 12:55:58 pefo Exp $
@


1.4
log
@use .c versions of certain functions. 32 bit mode
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2004/09/22 22:06:16 miod Exp $
d20 2
a21 1
	strcmp.c strlcat.c strlcpy.c strncmp.c umoddi3.c udivdi3.c
@


1.3
log
@Bring in libsa code for proper %llx printf display; necessary for /boot.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2004/09/16 18:54:48 pefo Exp $
a5 3
.PATH:	${.CURDIR}/../../../../lib/libkern/arch/mips64

.include "${.CURDIR}/../../../../lib/libkern/arch/mips64/Makefile.inc"
d19 1
a19 1
SRCS=	__main.c ashrdi3.c bzero.S divdi3.c qdivrem.c strlen.S \
@


1.2
log
@Update boot with miods ELF64 symtab fixes and my 32 bit compiles
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2004/08/23 14:22:40 pefo Exp $
d23 1
a23 1
	strcmp.c strlcat.c strlcpy.c strncmp.c umoddi3.c
@


1.1
log
@disk boot and tools for sgi
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2003/06/01 17:00:39 deraadt Exp $
d10 1
a10 1
CFLAGS= -O2 -mno-abicalls -D_NO_ABICALLS ${STANDALONE} \
@

