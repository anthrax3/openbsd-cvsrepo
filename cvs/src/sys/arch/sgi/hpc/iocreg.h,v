head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2012.04.08.22.08.25;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.28.20.44.23;	author miod;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Be more careful when reprogramming the sq(4) DMA and PIO timing parameters;
the current logic can be traced back to DaveM's intership at SGI in 1996,
and are adequate for the hardware he had access to.

However, ``recent'' Indigo2 and Indy systems are fit with a faster (33MHz
instead of 25MHz) GIO64 bus, which need different timing parameters, and
guess what? The PROM knows the right values to set.

Since programming these timing registers was apparently only necessary for
the Challenge S second interface:
1) only reprogram those registers on an IP24 (Indy, Challenge S) system.
2) pick proper values depending upon the actual GIO64 bus speed.

Item #1 fixes Ethernet operation on Indigo2 (at least my teal R4400SC).
Item #2 fixes Ethernet operation on my R5000SC Indy.

For the record, programming unoptimal value caused `TX DMA underrun' errors
(documented as `can't happen' in the HPC3 documentation, oh the irony),
which could be reproduced reliably with ypbind(8).
@
text
@/*	$OpenBSD: iocreg.h,v 1.1 2012/03/28 20:44:23 miod Exp $	*/
/* $NetBSD: iocreg.h,v 1.2 2005/12/11 12:18:53 christos Exp $	 */

/*
 * Copyright (c) 2003 Christopher Sekiya
 * Copyright (c) 2001 Rafal K. Boni
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * IOC1/2 memory map.
 *
 * The IOC1/2 is connected to the HPC#0, PBus channel 6, so these registers
 * are based from the external register window for PBus channel 6 on HPC#0.
 *
 */

#define	IOC_BASE			HPC3_PBUS_CH6_DEVREGS

#define IOC_PLP_REGS			0x00	/* Parallel port registers */
#define IOC_PLP_REGS_SIZE		0x2c

#define IOC_PLP_DATA			0x00	/* Data register */
#define IOC_PLP_CTL			0x04	/* Control register */
#define IOC_PLP_STAT			0x08	/* Status register */
#define IOC_PLP_DMACTL			0x0c	/* DMA control register */
#define IOC_PLP_INTSTAT			0x10	/* Interrupt status register */
#define IOC_PLP_INTMASK			0x14	/* Interrupt mask register */
#define IOC_PLP_TIMER1			0x18	/* Timer 1 register */
#define IOC_PLP_TIMER2			0x1c	/* Timer 2 register */
#define IOC_PLP_TIMER3			0x20	/* Timer 3 register */
#define IOC_PLP_TIMER4			0x24	/* Timer 4 register */

#define IOC_SERIAL_REGS			0x30	/* Serial port registers */
#define IOC_SERIAL_REGS_SIZE		0x0c

#define IOC_SERIAL_PORT1_CMD		0x00	/* Port 1 command transfer */
#define IOC_SERIAL_PORT1_DATA		0x04	/* Port 1 data transfer */
#define IOC_SERIAL_PORT2_CMD		0x08	/* Port 2 command transfer */
#define IOC_SERIAL_PORT2_DATA		0x0c	/* Port 2 data transfer */

#define IOC_KB_REGS			0x40	/* Keyboard/mouse registers */
#define IOC_KB_REGS_SIZE		0x08

/* Miscellaneous registers */

#define IOC_MISC_REGS			0x48	/* Misc. IOC regs */
#define IOC_MISC_REGS_SIZE		0x34

#define IOC_GCSEL			0x48	/* General select register */

#define IOC_GCREG			0x4c	/* General control register */
#define	IOC_GCREG_GIO_33MHZ		0x08

#define IOC_PANEL			0x50	/* Front Panel register */
#define IOC_PANEL_POWER_STATE		0x01
#define IOC_PANEL_POWER_IRQ		0x02
#define IOC_PANEL_VDOWN_IRQ		0x10
#define IOC_PANEL_VDOWN_HOLD		0x20
#define IOC_PANEL_VUP_IRQ		0x40
#define IOC_PANEL_VUP_HOLD		0x80

#define IOC_SYSID			0x58	/* System ID register */
#define IOC_SYSID_SYSTYPE		0x01	/* 0: Sapphire, 1: Full House */
#define IOC_SYSID_BOARDREV		0x1e
#define IOC_SYSID_BOARDREV_SHIFT	1
#define IOC_SYSID_CHIPREV		0xe0
#define IOC_SYSID_CHIPREV_SHIFT		5

#define IOC_READ			0x60	/* Read register */
#define IOC_READ_SCSI0_POWER		0x10
#define IOC_READ_SCSI1_POWER		0x20
#define IOC_READ_ENET_POWER		0x40
#define IOC_READ_ENET_LINK		0x80

#define IOC_DMASEL			0x68	/* DMA select register */
#define IOC_DMASEL_ISDN_B		0x01
#define IOC_DMASEL_ISDN_A		0x02
#define IOC_DMASEL_PARALLEL		0x04
#define IOC_DMASEL_SERIAL_10MHZ		0x00
#define IOC_DMASEL_SERIAL_6MHZ		0x10
#define IOC_DMASEL_SERIAL_EXTERNAL	0x20

#define IOC_RESET			0x70	/* Reset (IP24) / Write 1 (IP22)
						   register */
#define IOC_RESET_PARALLEL		0x01
#define IOC_RESET_PCKBC			0x02
#define IOC_RESET_EISA			0x04
#define IOC_RESET_ISDN			0x08
#define IOC_RESET_LED_GREEN		0x10
#define IOC_RESET_LED_RED		0x20
#define IOC_RESET_LED_ORANGE		0x40

#define IOC_WRITE			0x78	/* Write (IP24) / Write 2 (IP22)
						   register */
#define IOC_WRITE_ENET_NTH		0x01
#define IOC_WRITE_ENET_UTP		0x02
#define IOC_WRITE_ENET_AUI		0x04
#define IOC_WRITE_ENET_AUTO		0x08
#define IOC_WRITE_PC_UART2		0x10
#define IOC_WRITE_PC_UART1		0x20
#define IOC_WRITE_MARGIN_LOW		0x40
#define IOC_WRITE_MARGIN_HIGH		0x80
@


1.1
log
@Work in progress support for the SGI Indigo, Indigo 2 and Indy systems
(IP20, IP22, IP24) in 64-bit mode, adapated from NetBSD. Currently limited
to headless operation, input and video drivers will get ported soon.

Should work on all R4000, R4440 and R5000 based systems. L2 cache on R5000SC
Indy not supported yet (coming soon), R4600 not supported yet either (coming
soon as well).

Tested to boot multiuser on: Indigo2 R4000SC, Indy R4000PC, Indy R4000SC,
Indy R5000SC, Indigo2 R4400SC. There are still glitches in the Ethernet driver
which are being looked at.

Expansion support is limited to the GIO E++ board; GIO boards with PCI-GIO
bridges not ported yet due to the lack of hardware, and this kind of driver
does not port blindly.

Most of this work comes from NetBSD, polishing and integration work, as well
as putting as many ``R4x00 in 64-bit mode'' erratas as necessary, by yours
truly.

More work is coming, as well as trying to get some easy way to boot install
kernels (as older PROM can only boot ECOFF binaries, which won't do for the
kernel).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d75 1
d106 2
a107 1
#define IOC_RESET			0x70	/* Reset register */
d116 2
a117 1
#define IOC_WRITE			0x78	/* Write register */
@

