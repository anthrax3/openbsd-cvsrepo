head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.24
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.22
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2012.04.15.20.44.52;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.28.20.44.23;	author miod;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Define symbolic constants for the interrupt controller pin assignments on
IP20, IP22 and IP24, and provide the necessary macros to compute interrupt
vectors numbers (from the int.c point of view) from given sources.
@
text
@/*	$OpenBSD: intreg.h,v 1.1 2012/03/28 20:44:23 miod Exp $	*/
/*	$NetBSD: int2reg.h,v 1.5 2009/02/12 06:33:57 rumble Exp $	*/

/*
 * Copyright (c) 2004 Christopher SEKIYA
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* The INT has known locations on all SGI machines */
#define	INT2_IP20		0x1fb801c0
#define	INT2_IP22		0x1fbd9000
#define	INT2_IP24		0x1fbd9880

/* The following registers are all 8 bit. */
#define INT2_LOCAL0_STATUS	0x03
#define INT2_LOCAL0_STATUS_FIFO	0x01
#define INT2_LOCAL0_MASK	0x07
#define INT2_LOCAL1_STATUS	0x0b
#define INT2_LOCAL1_MASK	0x0f
#define INT2_IP22_MAP_STATUS	0x13
#define INT2_IP22_MAP_MASK0	0x17
#define INT2_IP22_MAP_MASK1	0x1b
#define INT2_IP22_MAP_POL	0x1f
#define INT2_IP20_LED		0x1f
#define INT2_TIMER_CLEAR	0x23
#define INT2_ERROR_STATUS	0x27
#define INT2_TIMER_0		0x33
#define	INT2_TIMER_1		0x37
#define	INT2_TIMER_2		0x3b
#define INT2_TIMER_CONTROL	0x3f

/* LOCAL0 bits */
#define	INT2_L0_FIFO		0
#define	INT2_L0_GIO_SLOT0	0	/* IP24 */
#define	INT2_L0_GIO_LVL0	0	/* IP20/IP22 */
#define	INT2_L0_IP20_PARALLEL	1
#define	INT2_L0_IP22_SCSI0	1
#define	INT2_L0_SCSI1		2
#define	INT2_L0_ENET		3
#define	INT2_L0_GFX_DMA		4
#define	INT2_L0_IP20_SERIAL	5
#define	INT2_L0_IP22_PARALLEL	5
#define	INT2_L0_GIO_LVL1	6	/* IP20/IP22 */
#define	INT2_L0_IP20_VME0	7
#define	INT2_L0_IP22_MAP0	7

/* LOCAL1 bits */
#define	INT2_L1_IP24_ISDN_ISAC	0
#define	INT2_L1_IP20_GR1MODE	1	/* not an interrupt but a status bit */
#define	INT2_L1_IP22_PANEL	1
#define	INT2_L1_IP24_ISDN_HSCX	2
#define	INT2_L1_IP20_VME1	3
#define	INT2_L1_IP22_MAP1	3
#define	INT2_L1_IP20_DSP	4
#define	INT2_L1_IP22_HPC_DMA	4
#define	INT2_L1_ACFAIL		5
#define	INT2_L1_VIDEO		6
#define	INT2_L1_RETRACE		7
#define	INT2_L1_GIO_LVL2	7	/* IP20/IP22 */

/* MAP bits */
#define	INT2_MAP_NEWPORT	0	/* IP24 */
#define	INT2_MAP_PASSWD		1
#define	INT2_MAP_ISDN_POWER	2	/* IP24 */
#define	INT2_MAP_EISA		3	/* IP22 */
#define	INT2_MAP_PCKBC		4
#define	INT2_MAP_SERIAL		5
#define	INT2_MAP_GFX0_DRAIN	6	/* IP22 */
#define	INT2_MAP_GIO_SLOT0	6	/* IP24 */
#define	INT2_MAP_GFX1_DRAIN	7	/* IP22 */
#define	INT2_MAP_GIO_SLOT1	7	/* IP24 */

#define	INT2_L0_INTR(x)		((x) + 0)
#define	INT2_L1_INTR(x)		((x) + 8)
#define	INT2_MAP0_INTR(x)	((x) + 16)
#define	INT2_MAP1_INTR(x)	((x) + 24)
@


1.1
log
@Work in progress support for the SGI Indigo, Indigo 2 and Indy systems
(IP20, IP22, IP24) in 64-bit mode, adapated from NetBSD. Currently limited
to headless operation, input and video drivers will get ported soon.

Should work on all R4000, R4440 and R5000 based systems. L2 cache on R5000SC
Indy not supported yet (coming soon), R4600 not supported yet either (coming
soon as well).

Tested to boot multiuser on: Indigo2 R4000SC, Indy R4000PC, Indy R4000SC,
Indy R5000SC, Indigo2 R4400SC. There are still glitches in the Ethernet driver
which are being looked at.

Expansion support is limited to the GIO E++ board; GIO boards with PCI-GIO
bridges not ported yet due to the lack of hardware, and this kind of driver
does not port blindly.

Most of this work comes from NetBSD, polishing and integration work, as well
as putting as many ``R4x00 in 64-bit mode'' erratas as necessary, by yours
truly.

More work is coming, as well as trying to get some easy way to boot install
kernels (as older PROM can only boot ECOFF binaries, which won't do for the
kernel).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 5
a46 4
#define INT2_MAP_STATUS		0x13
#define INT2_MAP_MASK0		0x17
#define INT2_MAP_MASK1		0x1b
#define INT2_MAP_POL		0x1f
d53 46
@

