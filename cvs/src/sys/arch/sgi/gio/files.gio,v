head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.22
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.14
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.16
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.12
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.10
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.05.10.21.30.09;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.18.17.28.24;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.17.15.36.55;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.28.20.44.23;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix impact(4) header file generation to correctly output NIMPACT_GIO on
IP22 kernels. Oops.
@
text
@# $OpenBSD: files.gio,v 1.3 2012/04/18 17:28:24 miod Exp $
# $NetBSD: files.gio,v 1.11 2009/02/12 06:33:57 rumble Exp $

device	gio {[slot = -1], [addr = -1]}
attach	gio at giobus

file	arch/sgi/gio/gio.c			gio		needs-flag

device	hpc {[offset = -1]}: smc93cx6
attach	hpc at gio
file	arch/sgi/hpc/hpc.c			hpc

# XL graphics
device	newport: wsemuldisplaydev, rasops8
attach	newport at gio
file	arch/sgi/gio/newport.c			newport		needs-flag

# GR2 graphics
device	grtwo: wsemuldisplaydev, rasops8
attach	grtwo at gio
file	arch/sgi/gio/grtwo.c			grtwo		needs-flag

# LG1/LG2 graphics
device	light: wsemuldisplaydev, rasops8
attach	light at gio
file	arch/sgi/gio/light.c			light		needs-flag

# Impact graphics
attach	impact at gio with impact_gio
file	arch/sgi/gio/impact_gio.c		impact_gio

# PCI cards glued to the GIO bus
device	giopci: pcibus
attach	giopci at gio
file	arch/sgi/gio/pci_gio.c			giopci
@


1.3
log
@Split the existing impact@@xbow attachment into generic impact routines, and
bus-specific attachment; impactreg.h and impactvar.h move from sgi/xbow/ to
sgi/dev/.

Teach the generic impact code how to code with pre-ImpactSR boards, which have
a slightly different register layout (information obtained from Peter Fuerst's
Linux IP28 patches).

Add an impact@@gio attachment (unfortunately untested, no Impact GIO boards
here). All Indigo 2 graphics options should be supported now (assuming the
Extreme/Ultra will actually work with grtwo(4) out of the box).

Tested not to disturb operation on IP30.

** ATTENTION! If you are building IP27 or IP30 kernels, be sure to rm impact.d
** before building a new kernel.
@
text
@d1 1
a1 1
# $OpenBSD: files.gio,v 1.2 2012/04/17 15:36:55 miod Exp $
d30 1
a30 2
file	arch/sgi/gio/impact_gio.c		impact &
						impact_gio	needs-flag
@


1.2
log
@Driver for the ``Entry'' LG1 frame buffer found on low-range Indigo systems
only. Ported from NetBSD, not tested due to lack of hardware, hopefully it
will be working as intended (fingers crossed)
@
text
@d1 1
a1 1
# $OpenBSD: files.gio,v 1.1 2012/03/28 20:44:23 miod Exp $
d7 1
a7 1
file	arch/sgi/gio/gio.c		gio needs-flag
d11 1
a11 1
file	arch/sgi/hpc/hpc.c		hpc
d16 1
a16 1
file	arch/sgi/gio/newport.c		newport needs-flag
d21 1
a21 1
file	arch/sgi/gio/grtwo.c		grtwo needs-flag
d26 6
a31 1
file	arch/sgi/gio/light.c		light needs-flag
d36 1
a36 1
file	arch/sgi/gio/pci_gio.c		giopci
@


1.1
log
@Work in progress support for the SGI Indigo, Indigo 2 and Indy systems
(IP20, IP22, IP24) in 64-bit mode, adapated from NetBSD. Currently limited
to headless operation, input and video drivers will get ported soon.

Should work on all R4000, R4440 and R5000 based systems. L2 cache on R5000SC
Indy not supported yet (coming soon), R4600 not supported yet either (coming
soon as well).

Tested to boot multiuser on: Indigo2 R4000SC, Indy R4000PC, Indy R4000SC,
Indy R5000SC, Indigo2 R4400SC. There are still glitches in the Ethernet driver
which are being looked at.

Expansion support is limited to the GIO E++ board; GIO boards with PCI-GIO
bridges not ported yet due to the lack of hardware, and this kind of driver
does not port blindly.

Most of this work comes from NetBSD, polishing and integration work, as well
as putting as many ``R4x00 in 64-bit mode'' erratas as necessary, by yours
truly.

More work is coming, as well as trying to get some easy way to boot install
kernels (as older PROM can only boot ECOFF binaries, which won't do for the
kernel).
@
text
@d1 1
a1 1
# $OpenBSD$
d19 1
a19 1
device	grtwo: wsemuldisplaydev
d24 1
a24 1
device	light: wsemuldisplaydev
@

