head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.18
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.16
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.12
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.14
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5;
locks; strict;
comment	@ * @;


1.6
date	2012.10.03.22.46.09;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.12.16.49.00;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.10.21.36.11;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.10.21.29.28;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.24.20.11.26;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.18.17.28.24;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Don't include <mips64/archtype.h> unless you really need it.
@
text
@/*	$OpenBSD: impact_gio.c,v 1.5 2012/05/12 16:49:00 miod Exp $	*/

/*
 * Copyright (c) 2012 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Driver for the SGI Impact graphics board (GIO attachment).
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>
#include <sys/types.h>

#include <machine/autoconf.h>

#include <mips64/arcbios.h>

#include <sgi/dev/impactreg.h>
#include <sgi/dev/impactvar.h>
#include <sgi/gio/giodevs.h>
#include <sgi/gio/gioreg.h>
#include <sgi/gio/giovar.h>
#include <sgi/sgi/ip22.h>

#include <dev/cons.h>

#define	IMPACT_REG_OFFSET		0x00000000
#define	IMPACT_REG_SIZE			0x00080000

int	impact_gio_match(struct device *, void *, void *);
void	impact_gio_attach(struct device *, struct device *, void *);

const struct cfattach impact_gio_ca = {
	sizeof(struct impact_softc), impact_gio_match, impact_gio_attach
};

int
impact_gio_match(struct device *parent, void *match, void *aux)
{
	struct gio_attach_args *ga = aux;

	if (GIO_PRODUCT_32BIT_ID(ga->ga_product) &&
	    GIO_PRODUCT_PRODUCTID(ga->ga_product) == GIO_PRODUCT_IMPACT)
		return 1;

	return 0;
}

void
impact_gio_attach(struct device *parent, struct device *self, void *aux)
{
	struct gio_attach_args *ga = aux;
	struct impact_softc *sc = (struct impact_softc *)self;
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
	int console;
	extern struct consdev wsdisplay_cons;

	if (ga->ga_descr != NULL && *ga->ga_descr != '\0')
		printf(": %s", ga->ga_descr);

	if (strncmp(bios_graphics, "alive", 5) != 0) {
		printf("\n%s: device has not been setup by firmware!\n",
		    self->dv_xname);
		return;
	}

	printf("\n");

	console = cn_tab == &wsdisplay_cons && giofb_consaddr == ga->ga_addr;

	if (console != 0) {
		iot = NULL;
		ioh = 0;
	} else {
		iot = ga->ga_iot;

		/* Setup bus space mappings. */
		if (bus_space_map(iot, ga->ga_addr + IMPACT_REG_OFFSET,
		    IMPACT_REG_SIZE, 0, &ioh)) {
			printf("failed to map registers\n");
			return;
		}
	}

	if (impact_attach_common(sc, iot, ioh, console, 0) != 0) {
		if (console == 0)
			bus_space_unmap(iot, ioh, IMPACT_REG_SIZE);
	}
}

/*
 * Console support.
 */

int
impact_gio_cnprobe(struct gio_attach_args *ga)
{
	return impact_gio_match(NULL, NULL, ga);
}

int
impact_gio_cnattach(struct gio_attach_args *ga)
{
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
	int rc;

	iot = ga->ga_iot;
	rc = bus_space_map(iot, ga->ga_addr + IMPACT_REG_OFFSET,
	    IMPACT_REG_SIZE, 0, &ioh);
	if (rc != 0)
		return rc;

	rc = impact_cnattach_common(iot, ioh, 0);
	if (rc != 0) {
		bus_space_unmap(iot, ioh, IMPACT_REG_SIZE);
		return rc;
	}

	return 0;
}
@


1.5
log
@Don't forget to print the frame buffer name obtained from ARCS, as all other
GIO frame buffer drivers do.
@
text
@d1 1
a1 1
/*	$OpenBSD: impact_gio.c,v 1.4 2012/05/10 21:36:11 miod Exp $	*/
a29 1
#include <mips64/archtype.h>
@


1.4
log
@GIO devices with a 32-bit device identifier actually do not like halfword and
byte accesses to the ID register; instead of interpreting this is as a lack
of hardware, reconize this as a valid GIO device (if the `has a 32-bit ID'
bit is set, that is).

This allows GIO Impact boards, which use a 32-bit ID, to be recognized
correctly, and to work as a console device.

Commited from an Indigo2 with glass console on the single-board Impact
(MG10) board which arrived in the mail today. Would have been done even
earlier, had I not forgotten to connect the extra power supply cable to
the Impact GIO backplane...
@
text
@d1 1
a1 1
/*	$OpenBSD: impact_gio.c,v 1.3 2012/05/10 21:29:28 miod Exp $	*/
d75 3
d79 2
a80 1
		printf(" device has not been setup by firmware!\n");
@


1.3
log
@Be more strict in the `are we the console device' logic at device attachment
time; not only do we need to match the graphics console address, but cn_tab
needs to point to wsdisplay, too.
@
text
@d1 1
a1 1
/*	$OpenBSD: impact_gio.c,v 1.2 2012/04/24 20:11:26 miod Exp $	*/
d58 3
a60 2
	if (ga->ga_product != GIO_PRODUCT_IMPACT)
		return 0;
d62 1
a62 1
	return 1;
@


1.2
log
@Pour even more smarts into the GIO device identification code, to the point
that it can now tell ID-less framebuffers apart correctly. Therefore, we can
use direct configuration instead of ugly games. Frame buffer drivers match
routines now only need to check for the fake ID they receive.

Tested on various newport and grtwo setups (including multihead configurations)
@
text
@d1 1
a1 1
/*	$OpenBSD: impact_gio.c,v 1.1 2012/04/18 17:28:24 miod Exp $	*/
d41 2
d72 1
d79 3
a81 1
	console = giofb_consaddr == ga->ga_addr;
@


1.1
log
@Split the existing impact@@xbow attachment into generic impact routines, and
bus-specific attachment; impactreg.h and impactvar.h move from sgi/xbow/ to
sgi/dev/.

Teach the generic impact code how to code with pre-ImpactSR boards, which have
a slightly different register layout (information obtained from Peter Fuerst's
Linux IP28 patches).

Add an impact@@gio attachment (unfortunately untested, no Impact GIO boards
here). All Indigo 2 graphics options should be supported now (assuming the
Extreme/Ultra will actually work with grtwo(4) out of the box).

Tested not to disturb operation on IP30.

** ATTENTION! If you are building IP27 or IP30 kernels, be sure to rm impact.d
** before building a new kernel.
@
text
@d1 1
a1 1
/*	$OpenBSD: impact.c,v 1.7 2012/04/16 22:17:16 miod Exp $	*/
a55 14
	/* Impact only exists on Indigo 2 systems */
	if (sys_config.system_type != SGI_IP22 ||
	    sys_config.system_subtype != IP22_INDIGO2)
		return 0;

	/* not looking for a frame buffer */
	if (ga->ga_slot != -1)
		return 0;

	/* EXP1 does not exist on Indigo2 */
	if (ga->ga_addr != GIO_ADDR_GFX && ga->ga_addr != GIO_ADDR_EXP0)
		return 0;

	/* Impact has a real GIO ID */
@

