head	1.30;
access;
symbols
	OPENBSD_6_1:1.30.0.6
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.30.0.2
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.4
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.24.0.4
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.19.0.4
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.2
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.18.0.6
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.4
	OPENBSD_5_0:1.18.0.2
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.11.0.4
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5;
locks; strict;
comment	@# @;


1.30
date	2016.06.28.04.41.37;	author jmatthew;	state Exp;
branches;
next	1.29;
commitid	YZhKLotIHp83F5gq;

1.29
date	2015.11.02.20.14.36;	author miod;	state Exp;
branches;
next	1.28;
commitid	Irb0dUO4X5QhH90i;

1.28
date	2015.07.17.22.52.29;	author tedu;	state Exp;
branches;
next	1.27;
commitid	OOrGfFHYAn65M2qc;

1.27
date	2014.11.24.02.03.37;	author brad;	state Exp;
branches;
next	1.26;
commitid	Wmnzf8bGQILqXRTG;

1.26
date	2014.10.10.05.43.35;	author deraadt;	state Exp;
branches;
next	1.25;
commitid	eyBTAcDp3o260Uyq;

1.25
date	2014.09.14.18.59.18;	author brad;	state Exp;
branches;
next	1.24;
commitid	HJL1EuSP6C8Tkt5M;

1.24
date	2014.04.07.08.27.24;	author brad;	state Exp;
branches;
next	1.23;

1.23
date	2014.03.15.04.09.21;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2014.03.08.18.28.24;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2014.02.19.05.32.57;	author jmatthew;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.15.19.42.20;	author sasano;	state Exp;
branches;
next	1.19;

1.19
date	2012.09.27.14.01.35;	author jsg;	state Exp;
branches;
next	1.18;

1.18
date	2011.06.29.20.52.09;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	2011.05.24.20.27.11;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	2011.05.02.19.51.05;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.03.03.59.17;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.03.01.48.18;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	2010.03.31.19.44.35;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2010.03.22.21.28.11;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2009.12.18.11.40.16;	author jsing;	state Exp;
branches;
next	1.10;

1.10
date	2009.12.12.20.07.10;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2009.11.07.21.42.07;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.26.18.00.04;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2009.07.16.21.02.54;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2009.07.15.18.15.21;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.24.17.27.40;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.21.18.01.54;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.10.18.00.07;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.14.21.27.02;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.14.21.16.40;	author miod;	state Exp;
branches;
next	;


desc
@@


1.30
log
@enable ure(4) where we already have url(4)
@
text
@#	$OpenBSD: RAMDISK-IP32,v 1.29 2015/11/02 20:14:36 miod Exp $
#
# THIS KERNEL IS FOR O2 (IP32) SYSTEMS ONLY.

machine		sgi mips64
maxusers	4

option		TIMEZONE=0
option		DST=0
option		SMALL_KERNEL
option		NO_PROPOLICE
option		BOOT_CONFIG

option		MINIROOTSIZE=10240
option		RAMDISK_HOOKS

makeoption	LINK_ADDRESS="0xffffffff80100000"
option		KERNBASE="0xffffffff80000000"

option		PCIVERBOSE
option		USBVERBOSE

option		CD9660
option		FFS
option		FFS2
option		NFSCLIENT
option		INET6

option		TGT_O2			# O2, O2+
option		ARCBIOS
option		CPU_R5000		# R5000/RM5200 support
option		CPU_RM7000		# RM7000 support
option		CPU_R10000		# R10000/R12000/R14000/R16000 support

config		bsd root on rd0a swap on rd0b

mainbus0	at root
cpu*		at mainbus0
clock0		at mainbus0
macebus0	at mainbus0		# MACE controller localbus.
gbe0		at mainbus0		# GBE Framebuffer
mec0		at macebus0
mkbc0		at macebus0
com0		at macebus0 base 0x00390000
com1		at macebus0 base 0x00398000
dsrtc0		at macebus0
macepcibr0	at macebus0		# MACE controller PCI Bus bridge.
pci*		at macepcibr?		# PCI is on pci bridge

ahc*		at pci?
qlw*		at pci?
qla*		at pci?
qle*		at pci?
mpi*		at pci?
siop*		at pci?

ohci*		at pci?
uhci*		at pci?
ehci*		at pci?
usb*		at ohci?
usb*		at uhci?
usb*		at ehci?

uhub*		at usb?
uhub*		at uhub?
umodem*		at uhub?		# USB Modems/Serial
ucom*		at umodem?
uvscom*		at uhub?		# SUNTAC Slipper U VS-10U serial
ucom*		at uvscom?
ubsa*		at uhub?		# Belkin serial adapter
ucom*		at ubsa?
umass*		at uhub?
uhidev*		at uhub?		# Human Interface Devices
ukbd*		at uhidev?		# USB keyboard
wskbd*		at ukbd? mux 1
uhid*		at uhidev?		# USB generic HID support
atu*		at uhub?		# Atmel AT76c50x based 802.11b
aue*		at uhub?		# ADMtek AN986 Pegasus Ethernet
axe*		at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*		at uhub?		# ASIX Electronics AX88179 USB Ethernet
cdce*		at uhub?		# CDC Ethernet
cue*		at uhub?		# CATC USB-EL1201A based Ethernet
kue*		at uhub?		# Kawasaki KL5KUSB101B based Ethernet
mos*		at uhub?		# MOSCHIP MCS7730/7830 10/100 Ethernet
otus*		at uhub?		# Atheros AR9001U
rum*		at uhub?		# Ralink RT2501USB/RT2601USB
run*		at uhub?		# Ralink RT2700U/RT2800U/RT3000U
smsc*		at uhub?		# SMSC LAN95xx Ethernet
uath*		at uhub?		# Atheros AR5005UG/AR5005UX
udav*		at uhub?		# Davicom DM9601 based Ethernet
upgt*		at uhub?		# Conexant/Intersil PrismGT SoftMAC USB
upl*		at uhub?		# Prolific PL2301/PL2302 host-to-host
ugl*		at uhub?		# Genesys Logic GL620USB-A host-to-host
ural*		at uhub?		# Ralink RT2500USB
url*		at uhub?		# Realtek RTL8150L based adapters
ure*		at uhub?		# Realtek RTL8152 based adapters
urtw*		at uhub?		# Realtek 8187
wi*		at uhub?		# WaveLAN IEEE 802.11DS
zyd*		at uhub?		# Zydas ZD1211
ugen*		at uhub?		# USB Generic driver

ppb*		at pci?
pci*		at ppb?

pcn*		at pci?			# AMD PCnet-PCI Ethernet
epic*		at pci?			# SMC EPIC/100 ethernet
de*		at pci?			# DC21X4X-based ethernet
dc*		at pci?			# 21143, "tulip" clone ethernet
sf*		at pci?			# Adaptec AIC-6915 ethernet
em*		at pci?			# Intel Pro/1000 ethernet
ep*		at pci?			# 3Com 3c59x
fxp*		at pci?			# EtherExpress 10/100B ethernet
mtd*		at pci?			# Myson MTD803 3-in-1 Ethernet
ne*		at pci?			# NE2000-compatible Ethernet
ti*		at pci?			# Alteon ACEnic gigabit Ethernet
stge*		at pci?			# Sundance TC9021 GigE
vr*		at pci?			# VIA Rhine Fast Ethernet
xl*		at pci?			# 3C9xx ethernet
re*		at pci?			# Realtek 8169/8169S/8110S
rl*		at pci?			# Realtek 81[23]9 ethernet
hme*		at pci?			# Sun Happy Meal
gem*		at pci?			# Sun 'gem' ethernet
cas*		at pci?			# Sun Cassini 100/Gigabit
skc*		at pci?			# SysKonnect GEnesis 984x
sk*		at skc?			#  each port of above
mskc*		at pci?			# Marvell Yukon-2
msk*		at mskc?		#  each port of above
bge*		at pci?			# Broadcom BCM570x (aka Tigon3)
vge*		at pci?			# VIA VT612x
bnx*		at pci?			# Broadcom BCM5706/5708 GigE
sis*		at pci?			# SiS 900/7016 ethernet

exphy*		at mii?			# 3Com internal PHYs
inphy*		at mii?			# Intel 82555 PHYs
iophy*		at mii?			# Intel 82553 PHYs
icsphy*		at mii?			# ICS 1890 PHYs
lxtphy*		at mii?			# Level1 LXT970 PHYs
nsphy*		at mii?			# NS and compatible PHYs
nsphyter*	at mii?			# NS and compatible PHYs
qsphy*		at mii?			# Quality Semi QS6612 PHYs
sqphy*		at mii?			# Seeq 8x220 PHYs
luphy*		at mii?			# Lucent LU6612 PHY
rlphy*		at mii?			# Realtek 8139 internal PHYs
mtdphy*		at mii?			# Myson MTD972 PHYs
dcphy*		at mii?			# Digital Clone PHYs
acphy*		at mii?			# Altima AC101 PHYs
amphy*		at mii?			# AMD 79C873 PHYs
tqphy*		at mii?			# TDK 78Q212x PHYs
bmtphy*		at mii?			# Broadcom 10/100 PHYs
brgphy*		at mii?			# Broadcom Gigabit PHYs
ciphy*		at mii?			# Cicada CS8201 10/100/1000 copper PHY
eephy*		at mii?			# Marvell 88E1000 series PHY
xmphy*		at mii?			# XaQti XMAC-II PHYs
nsgphy*		at mii?			# NS gigabit PHYs
urlphy*		at mii?			# Realtek RTL8150L internal PHY
rgephy*		at mii?			# Realtek 8169S/8110S PHY
ipgphy*		at mii?			# IC Plus IP1000A PHYs
gentbi*		at mii?			# Generic 1000BASE-X ten-bit PHY
ukphy*		at mii?			# "unknown" PHYs

wsdisplay*	at gbe?
pckbd*		at mkbc?
wskbd*		at pckbd? console ?

scsibus*	at scsi?
sd*		at scsibus?
st*		at scsibus?
cd*		at scsibus?

pseudo-device	loop 1
pseudo-device	bpfilter 1
pseudo-device	rd 1
pseudo-device	bio 1
@


1.29
log
@Define KERNBASE in addition to LINK_ADDRESS.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.28 2015/07/17 22:52:29 tedu Exp $
d96 1
@


1.28
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.27 2014/11/24 02:03:37 brad Exp $
d18 1
@


1.27
log
@use the correct capitalization for Realtek.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.26 2014/10/10 05:43:35 deraadt Exp $
a25 1
option		INET
@


1.26
log
@Significant unification of RAMDISK* config files, making them diffable.
This makes it easier to remove components not required to do an install,
and subsequently add other desireable components ...
In snapshots (in various forks) for about a week.
Do some upgrades and installs, please.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.25 2014/09/14 18:59:18 brad Exp $
d96 1
a96 1
urtw*		at uhub?		# RealTek 8187
d142 1
a142 1
rlphy*		at mii?			# RealTek 8139 internal PHYs
@


1.25
log
@Clean up isp(4) from kernel configs with the new drivers already
added. The new drivers match at a higher priority.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.24 2014/04/07 08:27:24 brad Exp $
d6 7
d14 2
a15 3
maxusers	4
option		TIMEZONE=0	# minutes west of GMT (for)
option		DST=0		# use daylight savings rules
a16 1
# Make options
d22 6
a27 1
option		DDB
d29 1
a29 17
# Filesystem options
option		CD9660		# ISO 9660 + Rock Ridge file system
option		FFS		# fast filesystem
option		FFS2		# fast filesystem 2
#option		MSDOSFS		# Ability to read write MS-Dos filesystem
option		NFSCLIENT	# Sun NFS-compatible filesystem (client)

# Networking options
option		INET		# IP + ICMP + TCP + UDP
option		INET6		# IPv6 (needs INET)

# RAMDISK stuff
option		MINIROOTSIZE=10240
option		RAMDISK_HOOKS

# Define what targets to support
option		TGT_O2		# O2, O2+
d31 3
a33 3
option		CPU_R5000	# R5000/RM5200 support
option		CPU_RM7000	# RM7000 support
option		CPU_R10000	# R10000/R12000/R14000/R16000 support
d35 1
a35 2
# Specify storage configuration using ramdisk
config		bsd	root on rd0a swap on rd0b
a36 3
#
# Definition of system
#
d40 2
a41 8

#### Main local buses
macebus0	at mainbus0	# MACE controller localbus.

# GBE Framebuffer
gbe0		at mainbus0

#### Localbus devices
d47 2
a49 5
#### PCI Bus
macepcibr0	at macebus0	# MACE controller PCI Bus bridge.
pci*		at macepcibr?	# PCI is on pci bridge

#### SCSI controllers
d57 3
a59 6
# USB Controllers
ohci*		at pci?	# Open Host Controller
uhci*		at pci?	# Universal Host Controller
ehci*		at pci?	# Enhanced Host Controller

# USB bus support
d64 3
a66 4
# USB devices
uhub*		at usb?		# USB Hubs
uhub*		at uhub?	# USB Hubs
umodem*		at uhub?	# USB Modems/Serial
d68 1
a68 1
uvscom*		at uhub?	# SUNTAC Slipper U VS-10U serial
d70 1
a70 1
ubsa*		at uhub?	# Belkin serial adapter
d72 3
a74 6
#ulpt*		at uhub?	# USB Printers	
umass*		at uhub?	# USB Mass Storage devices
uhidev*		at uhub?	# Human Interface Devices
ums*		at uhidev?	# USB mouse
wsmouse*	at ums? mux 0
ukbd*		at uhidev?	# USB keyboard
d76 24
a99 24
uhid*		at uhidev?	# USB generic HID support
atu*		at uhub?	# Atmel AT76c50x based 802.11b
aue*		at uhub?	# ADMtek AN986 Pegasus Ethernet  
axe*		at uhub?	# ASIX Electronics AX88172 USB Ethernet
axen*		at uhub?	# ASIX Electronics AX88179 USB Ethernet
cdce*		at uhub?	# CDC Ethernet
cue*		at uhub?	# CATC USB-EL1201A based Ethernet
kue*		at uhub?	# Kawasaki KL5KUSB101B based Ethernet
mos*		at uhub?	# MOSCHIP MCS7730/7830 10/100 Ethernet
otus*		at uhub?	# Atheros AR9001U
rum*		at uhub?	# Ralink RT2501USB/RT2601USB
run*		at uhub?	# Ralink RT2700U/RT2800U/RT3000U
smsc*		at uhub?	# SMSC LAN95xx Ethernet
uath*		at uhub?	# Atheros AR5005UG/AR5005UX
udav*		at uhub?	# Davicom DM9601 based Ethernet
upgt*		at uhub?	# Conexant/Intersil PrismGT SoftMAC USB
upl*		at uhub?	# Prolific PL2301/PL2302 host-to-host `network'
ugl*		at uhub?	# Genesys Logic GL620USB-A host-to-host `network'
ural*		at uhub?	# Ralink RT2500USB
url*		at uhub?	# Realtek RTL8150L based adapters
urtw*		at uhub?	# RealTek 8187
wi*		at uhub?	# WaveLAN IEEE 802.11DS
zyd*		at uhub?	# Zydas ZD1211
ugen*		at uhub?	# USB Generic driver
d101 1
a101 1
ppb*		at pci?		# PCI-PCI bridges
d104 55
a158 57
#### NICs
pcn*		at pci?		# AMD PCnet-PCI Ethernet
epic*		at pci?		# SMC EPIC/100 ethernet
de*		at pci?		# DC21X4X-based ethernet
dc*		at pci?		# 21143, "tulip" clone ethernet
sf*		at pci?		# Adaptec AIC-6915 ethernet
em*		at pci?		# Intel Pro/1000 ethernet
ep*		at pci?		# 3Com 3c59x
fxp*		at pci?		# EtherExpress 10/100B ethernet
mtd*		at pci?		# Myson MTD803 3-in-1 Ethernet
ne*		at pci?		# NE2000-compatible Ethernet
ti*		at pci?		# Alteon ACEnic gigabit Ethernet
stge*		at pci?		# Sundance TC9021 GigE
vr*		at pci?		# VIA Rhine Fast Ethernet
xl*		at pci?		# 3C9xx ethernet
re*		at pci?		# Realtek 8169/8169S/8110S
rl*		at pci?		# Realtek 81[23]9 ethernet
hme*		at pci?		# Sun Happy Meal
gem*		at pci?		# Sun 'gem' ethernet
cas*		at pci?		# Sun Cassini 100/Gigabit
skc*		at pci?		# SysKonnect GEnesis 984x
sk*		at skc?		#  each port of above
mskc*		at pci?		# Marvell Yukon-2
msk*		at mskc?	#  each port of above
bge*		at pci?		# Broadcom BCM570x (aka Tigon3)
vge*		at pci?		# VIA VT612x
bnx*		at pci?		# Broadcom BCM5706/5708 GigE
sis*		at pci?		# SiS 900/7016 ethernet

##### Media Independent Interface (mii) drivers
exphy*		at mii?		# 3Com internal PHYs
inphy*		at mii?		# Intel 82555 PHYs
iophy*		at mii?		# Intel 82553 PHYs
icsphy*		at mii?		# ICS 1890 PHYs
lxtphy*		at mii?		# Level1 LXT970 PHYs
nsphy*		at mii?		# NS and compatible PHYs
nsphyter*	at mii?		# NS and compatible PHYs
qsphy*		at mii?		# Quality Semi QS6612 PHYs
sqphy*		at mii?		# Seeq 8x220 PHYs
luphy*		at mii?		# Lucent LU6612 PHY
rlphy*		at mii?		# RealTek 8139 internal PHYs
mtdphy*		at mii?		# Myson MTD972 PHYs
dcphy*		at mii?		# Digital Clone PHYs
acphy*		at mii?		# Altima AC101 PHYs
amphy*		at mii?		# AMD 79C873 PHYs
tqphy*		at mii?		# TDK 78Q212x PHYs
bmtphy*		at mii?		# Broadcom 10/100 PHYs
brgphy*		at mii?		# Broadcom Gigabit PHYs
ciphy*		at mii?		# Cicada CS8201 10/100/1000 copper PHY
eephy*		at mii?		# Marvell 88E1000 series PHY
xmphy*		at mii?		# XaQti XMAC-II PHYs
nsgphy*		at mii?		# NS gigabit PHYs
urlphy*		at mii?		# Realtek RTL8150L internal PHY
rgephy*		at mii?		# Realtek 8169S/8110S PHY
ipgphy*		at mii?		# IC Plus IP1000A PHYs
gentbi*		at mii?		# Generic 1000BASE-X ten-bit PHY
ukphy*		at mii?		# "unknown" PHYs
a159 1
#### WS console
a160 2

#### Keyboard and Mouse
a163 2
#### SCSI Bus devices

a167 9
#ch*		at scsibus?
#uk*		at scsibus?

#### PSEUDO Devices
pseudo-device	loop		1	# network loopback
pseudo-device	bpfilter	1	# packet filter ports

pseudo-device	rd		1	# Ram disk.
pseudo-device	bio		1	# ioctl multiplexing device
d169 4
a172 1
option		BOOT_CONFIG	# add support for boot -c
@


1.24
log
@Add axen(4) wherever axe(4) is.

ok mpi@@ yuo@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.23 2014/03/15 04:09:21 miod Exp $
a69 1
isp*		at pci?
@


1.23
log
@Enable qla(4) and qle(4) to match the corresponding RAMDISKs.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.22 2014/03/08 18:28:24 kettenis Exp $
d107 1
@


1.22
log
@Enable qlw(4) on alpha/amd64/i386/macppc/sgi/sparc64 to force people to test.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.21 2014/02/19 05:32:57 jmatthew Exp $
d72 2
a73 2
#qla*		at pci?
#qle*		at pci?
@


1.21
log
@add qla and qle everywhere we currently have isp, commented out except for
qle in GENERIC on i386, amd64 and sparc64, where it's reasonably well tested
and likely to be useful.

requested by deraadt@@ and kettenis@@, ok dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.20 2013/11/15 19:42:20 sasano Exp $
d71 1
@


1.20
log
@Added dev/usb/if_ugl.c, a driver for Genesys Logic GL620USB-A
USB host-to-host link cable. This driver is derived from upl(4).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.19 2012/09/27 14:01:35 jsg Exp $
d71 2
@


1.19
log
@enable smsc
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.18 2011/06/29 20:52:09 matthew Exp $
d116 1
@


1.18
log
@Replace all instances of "scsibus* at hba?" with a single "scsibus* at
scsi?" rule, similar to how ethernet PHY drivers attach at mii.

Discussed on icb.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.17 2011/05/24 20:27:11 matthew Exp $
d111 1
@


1.17
log
@On OpenBSD, we've always attached scsibus(4) to umass(4), even for
ATAPI devices.  atapiscsi(4) is only for handling ATAPI devices on an
ATA bus, so umass(4) shouldn't care about it.

ok krw@@, dlg@@; no objections from deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.16 2011/05/02 19:51:05 miod Exp $
a94 1
scsibus*	at umass?
a190 4
scsibus*	at ahc?
scsibus*	at isp?
scsibus*	at mpi?
scsibus*	at siop?
d192 1
@


1.16
log
@Add PCI-Cardbus bridges and the most popular pcmcia and cardbus drivers. In
my tree for a very long while, no reason not to allow people with such
devices to have fun (and maybe experience new bugs) with them on sgi.

Also, clean up some comments and explicitely mention which `option' lines are
actually mandatory (ARCBIOS, TGT_xxx, etc).
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.15 2010/07/03 03:59:17 krw Exp $
a94 2
atapiscsi*	at umass?
scsibus*	at atapiscsi?
@


1.15
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.14 2010/07/03 01:48:18 matthew Exp $
a13 2
option		ARCBIOS		# Systems uses ARC firmware.

d36 1
d155 1
@


1.14
log
@Omit some silly USB devices from RAMDISK kernels.

suggestion of more devices and ok tedu@@; ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.13 2010/03/31 19:44:35 miod Exp $
a202 1
#ss*		at scsibus?
@


1.13
log
@Add bnx firmware on installation media; this causes a media oflow, so
enlarge bsd.rd filesystem; this in turn causes a cd oflow, so enlarge
cd filesystem.
ok jsing@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.12 2010/03/22 21:28:11 miod Exp $
d94 1
a94 1
ulpt*		at uhub?	# USB Printers	
@


1.12
log
@Put back bnx(4) now that claudio@@ has made the driver work on big endian
systems with page size different than 4KB... 4 months ago.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.11 2009/12/18 11:40:16 jsing Exp $
d33 1
a33 1
option		MINIROOTSIZE=8192
@


1.11
log
@More Ethernet drivers - sf(4), cas(4), vge(4) and ciphy(4) for use by
vge(4). From Brad.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.9 2009/11/07 21:42:07 miod Exp $
d155 1
@


1.10
log
@Introduce various CPU_### options to enable cpu-specific code or workarounds;
be sure to rerun config(8) on your kernel configuration files.
@
text
@d134 1
d148 1
d154 1
d175 1
@


1.9
log
@A few more PCI Ethernet controllers; from Brad.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.8 2009/10/26 18:00:04 miod Exp $
d38 3
@


1.8
log
@Better crime/mace interrupt handling; interrupt information is no longer
specified in the kernel configuration file, but is provided by macebus(4)
as part of the  child device attachment args, and provide both crime and
mace interrupt bitmasks; this allows us to only really enable interrupt
sources we care about, and to avoid invoking interrupt handler we don't need
to for the few mace interrupts multiplexed at the crime level.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.7 2009/07/16 21:02:54 miod Exp $
d127 3
@


1.7
log
@Make the PCI-PCI bridge initialization code bus-independent, relying on a
per-pci_chipset_t function to perform actual resource allocation.
Add the necessary bits to macepcibr(4), and enable ppb(4) on O2 kernels now.

Joint effort with kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.6 2009/07/15 18:15:21 miod Exp $
d56 4
a59 4
mec0		at macebus0 base 0x00280000 irq 4
mkbc0		at macebus0 base 0x00320000 irq 6
com0		at macebus0 base 0x00390000 irq 5
com1		at macebus0 base 0x00398000 irq 5
@


1.6
log
@Sync PCI scsi controllers; from Brad.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.5 2009/06/24 17:27:40 miod Exp $
d122 3
@


1.5
log
@Even more pci ethernet devices, based on a diff from Brad.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.4 2009/06/21 18:01:54 miod Exp $
d68 2
d181 2
@


1.4
log
@Add a bunch of usb devices, per deraadt@@'s pressure.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.3 2009/06/10 18:00:07 miod Exp $
d129 1
d132 9
d152 1
d166 2
@


1.3
log
@Add udl and url, verified to work on Fuel (url to the RAMDISK too)
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.2 2009/05/14 21:27:02 miod Exp $
d91 2
d100 1
d102 6
a107 1
ugen*		at uhub?	# USB Generic driver
d110 5
d116 2
d119 1
d123 1
@


1.2
log
@Add configuration files for IP27 (includes some IP35 support) and IP30
systems. Not connected to the builds yet.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK-IP32,v 1.1 2009/05/14 21:16:40 miod Exp $
d100 4
@


1.1
log
@Rename sgi GENERIC and RAMDISK with -IP32 suffixes, and have the build
machinery minimally cope with this.

Discussed with and reluctantely accepted by deraadt@@; we both dislike
losing the ``naturally comes out of your fingers'' kernel names and the
``one size fits all'' logic; but for now I don't see any easy way to
get a single kernel binary able to run on multiple IP## flavours.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.24 2009/04/13 21:13:46 miod Exp $
d3 1
d37 1
a37 1
option		TGT_O2
@

