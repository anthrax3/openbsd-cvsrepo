head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2017.09.08.05.36.51;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	uRv5pa9QDlZaYgwD;

1.3
date	2017.04.29.17.07.09;	author kettenis;	state Exp;
branches;
next	1.2;
commitid	CLo1gQB2tYptTcgx;

1.2
date	2017.02.19.19.42.40;	author patrick;	state Exp;
branches;
next	1.1;
commitid	TdUDSzcLoL33v9Pz;

1.1
date	2016.12.17.23.38.33;	author patrick;	state Exp;
branches;
next	;
commitid	uicSPzuCfsvjSNQ4;


desc
@@


1.4
log
@If you use sys/param.h, you don't need sys/types.h
@
text
@/* $OpenBSD: ast.c,v 1.3 2017/04/29 17:07:09 kettenis Exp $ */
/*
 * Copyright (c) 2015 Dale Rahn <drahn@@dalerahn.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/user.h>
#include <sys/syscall.h>
#include <sys/syscall_mi.h>
#include <machine/pcb.h>

#include <uvm/uvm_extern.h>

#include <machine/frame.h>

/*
 * Transform cpu ast to mi_ast
 */

void
ast(struct trapframe *tf)
{
	struct proc *p = curcpu()->ci_curproc;

	p->p_md.md_astpending = 0;

	refreshcreds(p);
	uvmexp.softs++;
	mi_ast(p, curcpu()->ci_want_resched);
	userret(p);
}
@


1.3
log
@Call refreshcreds() in ast() since we may get there without going through
do_el0_sync() or mi_syscall().
@
text
@d1 1
a1 1
/* $OpenBSD: ast.c,v 1.2 2017/02/19 19:42:40 patrick Exp $ */
a16 2

#include <sys/types.h>
@


1.2
log
@Fix asynchronous system traps so that they actually work.  Fixes at
least one regression test and allows processes to be killed using
Ctrl-C.  Discussed with Dale Rahn.
@
text
@d1 1
a1 1
/* $OpenBSD: ast.c,v 1.1 2016/12/17 23:38:33 patrick Exp $ */
a39 1
	int want_resched = curcpu()->ci_want_resched;
d43 1
d45 1
a45 1
	mi_ast(p, want_resched);
@


1.1
log
@Import of OpenBSD/arm64

This commit contains all the kernel files related to the OpenBSD/arm64
port.  It is based on the PowerPC pmap, loongson, arm/armv7 code and
FreeBSD aarch64 code.  Hard work done by Dale Rahn.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d41 2
@

