head	1.29;
access;
symbols
	OPENBSD_6_1:1.22.0.4
	OPENBSD_6_1_BASE:1.22;
locks; strict;
comment	@# @;


1.29
date	2017.05.05.17.43.47;	author kettenis;	state Exp;
branches;
next	1.28;
commitid	ZRNlpCAUvYG7SYKF;

1.28
date	2017.05.05.15.23.46;	author kettenis;	state Exp;
branches;
next	1.27;
commitid	cmnNztOL1tBGCx7r;

1.27
date	2017.04.30.17.42.32;	author kettenis;	state Exp;
branches;
next	1.26;
commitid	j4UEUkiMjp0CRDQz;

1.26
date	2017.04.30.14.03.44;	author kettenis;	state Exp;
branches;
next	1.25;
commitid	ILmh3c2giTkbOVK2;

1.25
date	2017.04.30.14.00.06;	author kettenis;	state Exp;
branches;
next	1.24;
commitid	uoHNZJ5ortZ8pnHm;

1.24
date	2017.04.29.17.24.41;	author kettenis;	state Exp;
branches;
next	1.23;
commitid	UF3j8lco6zOKg9Iy;

1.23
date	2017.04.27.10.23.19;	author kettenis;	state Exp;
branches;
next	1.22;
commitid	1OdRkvdhr84s63Do;

1.22
date	2017.03.10.03.27.50;	author jsg;	state Exp;
branches;
next	1.21;
commitid	8VDfWKjuC21ICAl5;

1.21
date	2017.03.08.11.47.07;	author patrick;	state Exp;
branches;
next	1.20;
commitid	R6AcZD639F8zWaEy;

1.20
date	2017.03.08.11.45.23;	author patrick;	state Exp;
branches;
next	1.19;
commitid	O3OU8K8uTjOp2pzY;

1.19
date	2017.03.08.11.41.11;	author patrick;	state Exp;
branches;
next	1.18;
commitid	blirTTuBWzlxcb3k;

1.18
date	2017.03.08.09.23.06;	author jsg;	state Exp;
branches;
next	1.17;
commitid	xhyHqBfwFzW4LZif;

1.17
date	2017.03.08.08.57.16;	author patrick;	state Exp;
branches;
next	1.16;
commitid	XduaX9RCBhfCieyc;

1.16
date	2017.03.07.03.07.12;	author jsg;	state Exp;
branches;
next	1.15;
commitid	29aH3hTRIX9oHFNL;

1.15
date	2017.03.01.01.24.34;	author jsg;	state Exp;
branches;
next	1.14;
commitid	RK1lT9fYts9ctM11;

1.14
date	2017.02.28.07.32.00;	author jsg;	state Exp;
branches;
next	1.13;
commitid	LFUZUuKV7jTK43ap;

1.13
date	2017.02.25.17.05.43;	author patrick;	state Exp;
branches;
next	1.12;
commitid	KHYH6nqEmfbzZKTL;

1.12
date	2017.02.24.10.13.13;	author patrick;	state Exp;
branches;
next	1.11;
commitid	BmmI7qP1ZsMJEgAk;

1.11
date	2017.02.22.23.03.12;	author patrick;	state Exp;
branches;
next	1.10;
commitid	YBZm1CaxOYK8gOTJ;

1.10
date	2017.02.05.00.29.30;	author patrick;	state Exp;
branches;
next	1.9;
commitid	IzeQxYkpaEWshZjR;

1.9
date	2017.01.25.10.19.15;	author jsg;	state Exp;
branches;
next	1.8;
commitid	oOwMF9ErOXIxv9Di;

1.8
date	2017.01.23.14.15.16;	author kettenis;	state Exp;
branches;
next	1.7;
commitid	TeY9mthInugDSiRF;

1.7
date	2017.01.23.14.00.22;	author patrick;	state Exp;
branches;
next	1.6;
commitid	Om9jYcC712snZ4s9;

1.6
date	2017.01.23.13.01.06;	author kettenis;	state Exp;
branches;
next	1.5;
commitid	KDqpkj6oWpFKhau5;

1.5
date	2017.01.23.12.34.06;	author kettenis;	state Exp;
branches;
next	1.4;
commitid	FC9zZqeFWyvI5Z2v;

1.4
date	2017.01.23.08.05.47;	author kettenis;	state Exp;
branches;
next	1.3;
commitid	W2ekE4xLzb8ECWtV;

1.3
date	2017.01.23.00.17.25;	author patrick;	state Exp;
branches;
next	1.2;
commitid	qFCPrwlKG8EI4GF8;

1.2
date	2017.01.21.08.54.24;	author patrick;	state Exp;
branches;
next	1.1;
commitid	dZ9VSgFBr4znGOR8;

1.1
date	2016.12.17.23.38.33;	author patrick;	state Exp;
branches;
next	;
commitid	uicSPzuCfsvjSNQ4;


desc
@@


1.29
log
@Add rkpinctrl(4), a driver to configure pins on Rockchip SoCs.  For now,
only the RK3399 is supported.
@
text
@# $OpenBSD: GENERIC,v 1.28 2017/05/05 15:23:46 kettenis Exp $
#
# GENERIC machine description file
#
# This machine description file is used to generate the default OpenBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling OpenBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

machine		arm64
include		"../../../conf/GENERIC"
maxusers	32

option		TIMEZONE=0	# time zone to adjust RTC time by
option		DST=0		# daylight saving time used by RTC
option		PCIVERBOSE
option		USER_PCICONF	# user-space PCI configuration
option		USBVERBOSE

makeoptions	KERNEL_BASE_PHYS="0x00200000"
makeoptions	KERNEL_BASE_VIRT="0xffffff8000200000"

config		bsd	swap generic

# The main bus device
mainbus0	at root
cpu0		at mainbus?
simplebus*	at fdt?

scsibus*	at scsi?
sd*		at scsibus?
st*		at scsibus?
cd*		at scsibus?
ch*		at scsibus?
uk*		at scsibus?

ampintc*	at fdt?
ampintcmsi*	at fdt?
agintc*		at fdt?
agtimer*	at fdt?
ahci*		at fdt?
ehci*		at fdt?
pciecam*	at fdt?
pci*		at pciecam?
sdhc*		at fdt?
sdmmc*		at sdhc?
xhci*		at fdt?

# NS16550 compatible serial ports
com*		at fdt?

# Virt on-chip devices
pluart*		at fdt?		# onboard uarts
plrtc*		at fdt?
psci*		at fdt?

virtio*		at fdt?
virtio*		at pci?
vio*		at virtio?
vioblk*		at virtio?
viomb*		at virtio?
viornd*		at virtio?
vioscsi*	at virtio?

simplefb*	at fdt?
wsdisplay*	at simplefb?

# Raspberry Pi 3
bcmintc*	at fdt?
bcmdog*		at fdt?
dwctwo*		at fdt?
usb*		at dwctwo?

# Rockchip SoCs
rkclock*	at fdt? early 1
rkgrf*		at fdt? early 1
rkpinctrl*	at fdt? early 1

# Sunxi SoCs
sxipio*		at fdt? early 1	# GPIO pins for leds & PHYs
gpio*		at sxipio?
sxiccmu*	at fdt? early 1	# Clock Control Module/Unit
sxirtc*		at fdt?		# Real Time Clock
sximmc*		at fdt?		# SD/MMC card controller
sdmmc*		at sximmc?	# SD/MMC bus

# PCI
ppb*		at pci?			# PCI-PCI bridges
pci*		at ppb?

# PCI Ethernet
em*		at pci?			# Intel Pro/1000 Ethernet
ix*		at pci?			# Intel 82598EB 10Gb Ethernet
mskc*		at pci?			# Marvell Yukon-2
msk*		at mskc?		#  each port of above
re*		at pci?			# Realtek 8169/8169S/8110S

# PCI SCSI
ahci*		at pci? flags 0x0000	# AHCI SATA controllers
					# flags 0x0001 to force SATA 1 (1.5Gb/s)
nvme*		at pci?			# NVMe controllers

# USB Controllers
ohci*		at pci?			# Open Host Controller
uhci*		at pci?			# Universal Host Controller (Intel)
ehci*		at pci?			# Enhanced Host Controller
xhci*		at pci?			# eXtensible Host Controller

# USB bus support
usb*		at ohci?
usb*		at uhci?
usb*		at ehci?
usb*		at xhci?

# USB devices
uhub*		at usb?			# USB Hubs
uhub*		at uhub?		# USB Hubs
ualea*		at uhub?		# Araneus Alea II TRNG
uonerng*	at uhub?		# Moonbase Otago OneRNG
umodem*		at uhub?		# USB Modems/Serial
ucom*		at umodem?
uvisor*		at uhub?		# Handspring Visor
ucom*		at uvisor?
uvscom*		at uhub?		# SUNTAC Slipper U VS-10U serial
ucom*		at uvscom?
ubsa*		at uhub?		# Belkin serial adapter
ucom*		at ubsa?
uftdi*		at uhub?		# FTDI FT8U100AX serial adapter
ucom*		at uftdi?
uplcom*		at uhub?		# I/O DATA USB-RSAQ2 serial adapter
ucom*		at uplcom?
umct*		at uhub?		# MCT USB-RS232 serial adapter
ucom*		at umct?
uslcom*		at uhub?		# Silicon Laboratories CP210x serial
ucom*		at uslcom?
uark*		at uhub?		# Arkmicro ARK3116 serial
ucom*		at uark?
moscom*		at uhub?		# MosChip MCS7703 serial
ucom*		at moscom?
umcs*		at uhub?		# MosChip MCS78x0 serial
ucom*		at umcs?
uipaq*		at uhub?		# iPAQ serial adapter
ucom*		at uipaq?
umsm*		at uhub?		# Qualcomm MSM EVDO
ucom*		at umsm?
uchcom*		at uhub?		# WinChipHead CH341/340 serial
ucom*		at uchcom?
uticom*		at uhub?		# TI serial
ucom*		at uticom?
uaudio*		at uhub?		# USB Audio
audio*		at uaudio?
umidi*		at uhub?		# USB MIDI
midi*		at umidi?
ulpt*		at uhub?		# USB Printers
umass*		at uhub?		# USB Mass Storage devices
uhidev*		at uhub?		# Human Interface Devices
ums*		at uhidev?		# USB mouse
wsmouse*	at ums? mux 0
uts*		at uhub?		# USB touchscreen
wsmouse*	at uts? mux 0
uwacom*		at uhidev?		# USB Wacom tablet
wsmouse*	at uwacom? mux 0
ukbd*		at uhidev?		# USB keyboard
wskbd*		at ukbd? mux 1
ucycom*		at uhidev?		# Cypress serial
ucom*		at ucycom?
uslhcom*	at uhidev?		# Silicon Labs CP2110 USB HID UART
ucom*		at uslhcom?
uhid*		at uhidev?		# USB generic HID support
upd*		at uhidev?		# USB Power Devices sensors
aue*		at uhub?		# ADMtek AN986 Pegasus Ethernet
atu*		at uhub?		# Atmel AT76c50x based 802.11b
axe*		at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*		at uhub?		# ASIX Electronics AX88179 USB Ethernet
cue*		at uhub?		# CATC USB-EL1201A based Ethernet
kue*		at uhub?		# Kawasaki KL5KUSB101B based Ethernet
smsc*		at uhub?		# SMSC LAN95xx Ethernet
cdce*		at uhub?		# CDC Ethernet
urndis*		at uhub?		# Remote NDIS Ethernet
upl*		at uhub?		# Prolific PL2301/PL2302 host-to-host `network'
ugl*		at uhub?		# Genesys Logic GL620USB-A host-to-host `network'
udav*		at uhub?		# Davicom DM9601 based Ethernet
mos*		at uhub?		# MOSCHIP MCS7730/7830 10/100 Ethernet
url*		at uhub?		# Realtek RTL8150L based adapters
ure*		at uhub?		# Realtek RTL8152 based adapters
wi*		at uhub?		# WaveLAN IEEE 802.11DS
udsbr*		at uhub?		# D-Link DSB-R100 radio
radio*		at udsbr?		# USB radio
uberry*		at uhub?		# Research In Motion BlackBerry
ugen*		at uhub?		# USB Generic driver
uath*		at uhub?		# Atheros AR5005UG/AR5005UX
ural*		at uhub?		# Ralink RT2500USB
rum*		at uhub?		# Ralink RT2501USB/RT2601USB
run*		at uhub?		# Ralink RT2700U/RT2800U/RT3000U
otus*		at uhub?		# Atheros AR9001U
athn*		at uhub?		# Atheros AR9002U
zyd*		at uhub?		# Zydas ZD1211
upgt*		at uhub?		# Conexant/Intersil PrismGT SoftMAC USB
urtw*		at uhub?		# Realtek 8187
rsu*		at uhub?		# Realtek RTL8188SU/RTL8191SU/RTL8192SU
urtwn*		at uhub?		# Realtek RTL8188CU/RTL8192CU
udcf*		at uhub?		# Gude Expert mouseCLOCK
uthum*		at uhidev?		# TEMPerHUM sensor
ugold*		at uhidev?		# gold TEMPer sensor
utrh*		at uhidev?		# USBRH sensor
utwitch*	at uhidev?		# YUREX BBU sensor
uow*		at uhub?		# Maxim/Dallas DS2490 1-Wire adapter
uoakrh*		at uhidev?		# Toradex OAK temp and rel humidity
uoaklux*	at uhidev?		# Toradex OAK LUX
uoakv*		at uhidev?		# Toradex OAK 10V sensor
onewire*	at uow?
uvideo*		at uhub?		# USB Video
video*		at uvideo?
utvfu*		at uhub?		# Fushicai Audio-Video Grabber
video*		at utvfu?
audio*		at utvfu?
udl*		at uhub?		# DisplayLink USB displays
wsdisplay*	at udl?

amphy*		at mii?			# AMD 79C873 PHYs
atphy*		at mii?			# Attansic F1 PHYs
eephy*		at mii?			# Marvell 88E1000 series PHY
rgephy*		at mii?			# Realtek 8169S/8110S PHY
rlphy*		at mii?			# Realtek 8139 internal PHYs
ukphy*		at mii?			# "unknown" PHYs
urlphy*		at mii?			# Realtek RTL8150L internal PHY

scsibus*	at scsi?
sd*		at scsibus?
cd*		at scsibus?
st*		at scsibus?
ch*		at scsibus?
uk*		at scsibus?

# 1-Wire devices
option	ONEWIREVERBOSE
owid*		at onewire?		# ID
owsbm*		at onewire?		# Smart Battery Monitor
owtemp*		at onewire?		# Temperature
owctr*		at onewire?		# Counter device

# Pseudo-Devices
pseudo-device	openprom
pseudo-device	hotplug		1	# devices hot plugging

# mouse & keyboard multiplexor pseudo-devices
pseudo-device	wsmux		2
@


1.28
log
@Add glue to attach SDHC compliant controllers using the FDT.  This makes
the eMMC controller on the Rockchip RK3399 work.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.27 2017/04/30 17:42:32 kettenis Exp $
d88 1
@


1.27
log
@Add rkclock(4), a driver for the Rockchip RK3399 clocks.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.26 2017/04/30 14:03:44 kettenis Exp $
d56 2
@


1.26
log
@Add xhci@@fdt, and move ehci(4) from the sunxi block to the generic block.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.25 2017/04/30 14:00:06 kettenis Exp $
d84 1
@


1.25
log
@Add rkgrf(4), a driver that makes the "generic register file" of the Rockchip
RK3399 available to other drivers through the regmap interface.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.24 2017/04/29 17:24:41 kettenis Exp $
d53 1
d56 1
a92 1
ehci*		at fdt?		# EHCI (shim)
@


1.24
log
@Add agintc(4), a driver for interrupt controllers conforming to ARM's
generic interrupt controller architecture specification v3/4.

The hard work was done by drahn@@, I just cleaned it up a bit and fixed
a couple of bugs.

ok patrick@@, drahn@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.23 2017/04/27 10:23:19 kettenis Exp $
d80 3
@


1.23
log
@Add code to identify the CPUs on arm64 systems.  The primary CPU is attached
and identified early on.  For the secondary CPUs this happens late, such that
the drivers we need to spin up CPUs, such as psci(4), will be available.

This also fixes some code in simplebus(4) where the return value of
OF_getprop() was not properly checked.

Heavily based on an earlier diff from drahn@@.

ok drahn@@, jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.22 2017/03/10 03:27:50 jsg Exp $
d50 1
@


1.22
log
@enable amphy(4) for udav(4) and urlphy(4) for url(4)
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.21 2017/03/08 11:47:07 patrick Exp $
d38 1
@


1.21
log
@Enable msk(4).
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.20 2017/03/08 11:45:23 patrick Exp $
d221 1
d227 1
@


1.20
log
@Enable eephy(4).
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.19 2017/03/08 11:41:11 patrick Exp $
d95 2
@


1.19
log
@Enable re(4).
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.18 2017/03/08 09:23:06 jsg Exp $
d220 1
@


1.18
log
@Enable ix(4).  Requested by deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.17 2017/03/08 08:57:16 patrick Exp $
d95 1
@


1.17
log
@Enable em(4), ahci(4), nvme(4) and USB controllers attached to pci(4).
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.16 2017/03/07 03:07:12 jsg Exp $
d93 2
a94 1
em*		at pci?			# Intel Pro/1000 ethernet
@


1.16
log
@enable vioscsi(4)
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.15 2017/03/01 01:24:34 jsg Exp $
d87 22
d110 1
a220 4

# PCI
ppb*		at pci?			# PCI-PCI bridges
pci*		at ppb?
@


1.15
log
@Remove SYSCALL_DEBUG arm64 has been multiuser for a while now.
ok patrick@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.14 2017/02/28 07:32:00 jsg Exp $
d68 1
@


1.14
log
@build with USER_PCICONF to enable /dev/pci*
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.13 2017/02/25 17:05:43 patrick Exp $
a29 2

option		SYSCALL_DEBUG
@


1.13
log
@Enable ampintcmsi(4), pciecam(4), ppb(4) and virtio(4).
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.12 2017/02/24 10:13:13 patrick Exp $
d28 1
@


1.12
log
@Hook up pciecam(4), but don't compile it yet.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.11 2017/02/22 23:03:12 patrick Exp $
d49 1
d52 2
a53 2
#pciecam*	at fdt?
#pci*		at pciecam?
d64 1
a64 1
#virtio*		at pci?
d200 2
a201 2
#ppb*		at pci?			# PCI-PCI bridges
#pci*		at ppb?
@


1.11
log
@Enable ahci(4).

ok kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.10 2017/02/05 00:29:30 patrick Exp $
d51 2
d63 1
d197 4
@


1.10
log
@Add option PCIVERBOSE.

Prompted by jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.9 2017/01/25 10:19:15 jsg Exp $
d50 1
@


1.9
log
@enable plrtc(4) and psci(4)
ok patrick@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.8 2017/01/23 14:15:16 kettenis Exp $
d27 1
@


1.8
log
@Add bcmdog(4), a watchdog timer for the Raspberry Pi.

Based on code written by patrick@@
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.7 2017/01/23 14:00:22 patrick Exp $
d55 3
@


1.7
log
@Enable USBVERBOSE on both the GENERIC and RAMDISK kernel.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.6 2017/01/23 13:01:06 kettenis Exp $
d66 1
@


1.6
log
@Enable simplefb(4).
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.5 2017/01/23 12:34:06 kettenis Exp $
d27 1
d29 1
a29 1
options		SYSCALL_DEBUG
@


1.5
log
@openprom(4)
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.4 2017/01/23 08:05:47 kettenis Exp $
d59 3
@


1.4
log
@Add drivers for the Raspberry Pi 3.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.3 2017/01/23 00:17:25 patrick Exp $
d200 1
@


1.3
log
@Add RAMDISK config for arm64.  While there, clean up spaces in
the GENERIC config.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.2 2017/01/21 08:54:24 patrick Exp $
d59 5
@


1.2
log
@Add Allwinner A64 devices to OpenBSD/arm64.  This means we can run
on the Pine64.  While there add a few more usb and pseudo devices.
@
text
@d1 1
a1 1
# $OpenBSD: GENERIC,v 1.1 2016/12/17 23:38:33 patrick Exp $
d21 2
a22 2
machine	arm64
include	"../../../conf/GENERIC"
d25 4
a28 4
options	TIMEZONE=0	# time zone to adjust RTC time by
options	DST=0		# daylight saving time used by RTC
#options	NFSCLIENT	# NFS
options	SYSCALL_DEBUG
d71 103
a173 103
uhub*	at usb?			# USB Hubs
uhub*	at uhub?		# USB Hubs
ualea*	at uhub?		# Araneus Alea II TRNG
uonerng* at uhub?		# Moonbase Otago OneRNG
umodem*	at uhub?		# USB Modems/Serial
ucom*	at umodem?
uvisor*	at uhub?		# Handspring Visor
ucom*	at uvisor?
uvscom*	at uhub?		# SUNTAC Slipper U VS-10U serial
ucom*	at uvscom?
ubsa*	at uhub?		# Belkin serial adapter
ucom*	at ubsa?
uftdi*	at uhub?		# FTDI FT8U100AX serial adapter
ucom*	at uftdi?
uplcom* at uhub?		# I/O DATA USB-RSAQ2 serial adapter
ucom*	at uplcom?
umct*	at uhub?		# MCT USB-RS232 serial adapter
ucom*	at umct?
uslcom*	at uhub?		# Silicon Laboratories CP210x serial
ucom*	at uslcom?
uark*	at uhub?		# Arkmicro ARK3116 serial
ucom*	at uark?
moscom*	at uhub?		# MosChip MCS7703 serial
ucom*	at moscom?
umcs*	at uhub?		# MosChip MCS78x0 serial
ucom*	at umcs?
uipaq*	at uhub?		# iPAQ serial adapter
ucom*	at uipaq?
umsm*	at uhub?		# Qualcomm MSM EVDO
ucom*	at umsm?
uchcom*	at uhub?		# WinChipHead CH341/340 serial
ucom*	at uchcom?
uticom*	at uhub?		# TI serial
ucom*	at uticom?
uaudio* at uhub?		# USB Audio
audio*	at uaudio?
umidi*	at uhub?		# USB MIDI
midi*	at umidi?
ulpt*	at uhub?		# USB Printers
umass*	at uhub?		# USB Mass Storage devices
uhidev*	at uhub?		# Human Interface Devices
ums*	at uhidev?		# USB mouse
wsmouse* at ums? mux 0
uts*	at uhub?		# USB touchscreen
wsmouse* at uts? mux 0
uwacom*	at uhidev?		# USB Wacom tablet
wsmouse* at uwacom? mux 0
ukbd*	at uhidev?		# USB keyboard
wskbd*	at ukbd? mux 1
ucycom*	at uhidev?		# Cypress serial
ucom*	at ucycom?
uslhcom* at uhidev?		# Silicon Labs CP2110 USB HID UART
ucom*	at uslhcom?
uhid*	at uhidev?		# USB generic HID support
upd*	at uhidev?		# USB Power Devices sensors
aue*	at uhub?		# ADMtek AN986 Pegasus Ethernet
atu*	at uhub?		# Atmel AT76c50x based 802.11b
axe*	at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*	at uhub?		# ASIX Electronics AX88179 USB Ethernet
cue*	at uhub?		# CATC USB-EL1201A based Ethernet
kue*	at uhub?		# Kawasaki KL5KUSB101B based Ethernet
smsc*	at uhub?		# SMSC LAN95xx Ethernet
cdce*	at uhub?		# CDC Ethernet
urndis*	at uhub?		# Remote NDIS Ethernet
upl*	at uhub?		# Prolific PL2301/PL2302 host-to-host `network'
ugl*	at uhub?		# Genesys Logic GL620USB-A host-to-host `network'
udav*	at uhub?		# Davicom DM9601 based Ethernet
mos*	at uhub?		# MOSCHIP MCS7730/7830 10/100 Ethernet
url*	at uhub?		# Realtek RTL8150L based adapters
ure*	at uhub?		# Realtek RTL8152 based adapters
wi*	at uhub?		# WaveLAN IEEE 802.11DS
udsbr*	at uhub?		# D-Link DSB-R100 radio
radio*	at udsbr?		# USB radio
uberry*	at uhub?		# Research In Motion BlackBerry
ugen*	at uhub?		# USB Generic driver
uath*	at uhub?		# Atheros AR5005UG/AR5005UX
ural*	at uhub?		# Ralink RT2500USB
rum*	at uhub?		# Ralink RT2501USB/RT2601USB
run*	at uhub?		# Ralink RT2700U/RT2800U/RT3000U
otus*	at uhub?		# Atheros AR9001U
athn*	at uhub?		# Atheros AR9002U
zyd*	at uhub?		# Zydas ZD1211
upgt*	at uhub?		# Conexant/Intersil PrismGT SoftMAC USB
urtw*	at uhub?		# Realtek 8187
rsu*	at uhub?		# Realtek RTL8188SU/RTL8191SU/RTL8192SU
urtwn*	at uhub?		# Realtek RTL8188CU/RTL8192CU
udcf*	at uhub?		# Gude Expert mouseCLOCK
uthum*	at uhidev?		# TEMPerHUM sensor
ugold*	at uhidev?		# gold TEMPer sensor
utrh*	at uhidev?		# USBRH sensor
utwitch* at uhidev?		# YUREX BBU sensor
uow*	at uhub?		# Maxim/Dallas DS2490 1-Wire adapter
uoakrh*	at uhidev?		# Toradex OAK temp and rel humidity
uoaklux* at uhidev?		# Toradex OAK LUX
uoakv*	at uhidev?		# Toradex OAK 10V sensor
onewire* at uow?
uvideo*	at uhub?		# USB Video
video*	at uvideo?
utvfu*	at uhub?		# Fushicai Audio-Video Grabber
video*	at utvfu?
audio*	at utvfu?
udl*	at uhub?		# DisplayLink USB displays
wsdisplay* at udl?
@


1.1
log
@Import of OpenBSD/arm64

This commit contains all the kernel files related to the OpenBSD/arm64
port.  It is based on the PowerPC pmap, loongson, arm/armv7 code and
FreeBSD aarch64 code.  Hard work done by Dale Rahn.
@
text
@d1 1
a1 1
# $OpenBSD$
d59 140
@

