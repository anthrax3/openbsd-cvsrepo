head	1.10;
access;
symbols
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.6.0.24
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.22
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2005.01.14.22.39.25;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2003.06.02.23.27.44;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.03.15.52;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.30;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.04.16.11.56.06;	author downsj;	state Exp;
branches
	1.6.14.1
	1.6.24.1;
next	1.5;

1.5
date	97.02.05.16.01.17;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.02.03.04.47.32;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.12.15.12.41;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.04.25.06.36.38;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.19;	author deraadt;	state Exp;
branches;
next	;

1.6.14.1
date	2002.03.28.10.07.18;	author niklas;	state Exp;
branches;
next	1.6.14.2;

1.6.14.2
date	2003.06.07.11.11.34;	author ho;	state Exp;
branches;
next	;

1.6.24.1
date	2002.06.11.03.35.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Switch OpenBSD/hp300 to wscons, still using on-board ROM fonts for now.

Main features:
- MI hil drivers, allowing live plug/unplug of devices, and the keyboard
  does not need to be at id 1 anymore.
- SGC bus support on 4xx models. SGC frame buffers are supported too, but
  not as console, though you can use them as a regular glass terminal if
  you run a getty on ttyC0. Currently not compiled-in, awaiting for an sti(4)
  fix to be commited.
- HP-UX compatibility interfaces are removed. grfinfo and hilinfo are removed.

X11 support is currently broken by these changes; X.org X11R6 support will
be available very soon.

Tested on hyperion and 4 different flavours of catseye/topcat/kathmandu; other,
older frame buffers (davinci, gatorbox and renaissance) could not been tested
but should work; please report any regression.
@
text
@/*	$OpenBSD: grfvar.h,v 1.9 2003/06/02 23:27:44 millert Exp $	*/
/*	$NetBSD: grfvar.h,v 1.10 1997/03/31 07:34:19 scottr Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: grfvar.h 1.11 93/08/13$
 *
 *	@@(#)grfvar.h	8.2 (Berkeley) 9/9/93
 */

/* internal structure of lock page */
#define GRFMAXLCK	256
struct	grf_lockpage {
	u_char	gl_locks[GRFMAXLCK];
};
#define gl_lockslot gl_locks[0]

/* per display info */
struct	grf_data {
	int	g_flags;		/* software flags */
	struct  grfsw *g_sw;		/* static configuration info */
	caddr_t	g_regkva;		/* KVA of registers */
	caddr_t	g_fbkva;		/* KVA of framebuffer */
	struct	grfinfo g_display;	/* hardware description (for ioctl) */
	struct	grf_lockpage *g_lock;	/* lock page associated with device */
	struct	proc *g_lockp;		/* process holding lock */
	short	*g_pid;			/* array of pids with device open */
	int	g_lockpslot;		/* g_pid entry of g_lockp */
	caddr_t	g_data;			/* device dependent data */
};

/*
 * Static configuration info for display types
 */
struct	grfsw {
	int	gd_hwid;	/* id returned by hardware */
	int	gd_swid;	/* id to be returned by software */
	char	*gd_desc;	/* description printed at config time */
				/* boot time init routine */
	int	(*gd_init)(struct grf_data *, int, caddr_t);
				/* misc function routine */
	int	(*gd_mode)(struct grf_data *, int, caddr_t);
};

struct	grf_softc {
	struct	device sc_dev;		/* generic device info */
	int	sc_scode;		/* select code; for grfdevno() */
	struct	grf_data *sc_data;	/* display state information */
	struct	ite_softc *sc_ite;	/* pointer to ite; may be NULL */
};

struct	grfdev_softc {
	struct	device sc_dev;		/* generic device info */
	struct	grf_data *sc_data;	/* generic grf data */
	int	sc_scode;		/* select code, -1 for intio */
};

/*
 * Set up by the hardware driver, and passed all the way down to
 * the ITE, if appropriate.
 */
struct	grfdev_attach_args {
	int	ga_scode;		/* XXX select code, -1 for intio */
	int	ga_isconsole;		/* from hardware; is console? */
	void	*ga_data;		/* hardware-dependent data */
	void	*ga_ite;		/* ITE switch table */
};

/* flags */
#define	GF_ALIVE	0x01
#define GF_OPEN		0x02
#define GF_EXCLUDE	0x04
#define GF_WANTED	0x08
#define GF_BSDOPEN	0x10
#define GF_HPUXOPEN	0x20

/* requests to mode routine */
#define GM_GRFON	1
#define GM_GRFOFF	2
#define GM_GRFOVON	3
#define GM_GRFOVOFF	4
#define GM_DESCRIBE	5
#define GM_MAP		6
#define GM_UNMAP	7

/* minor device interpretation */
#define GRFOVDEV	0x10	/* overlay planes */
#define GRFIMDEV	0x20	/* images planes */
#define GRFUNIT(d)	((d) & 0x7)

#ifdef _KERNEL
extern	struct grf_data grf_cn;		/* grf_data for console device */

/* grf.c prototypes */
int	grfmap(dev_t, caddr_t *, struct proc *);
int	grfunmap(dev_t, caddr_t, struct proc *);
int	grfon(dev_t);
int	grfoff(dev_t);
int	grfaddr(struct grf_softc *, int);

#ifdef COMPAT_HPUX
int	hpuxgrfioctl(dev_t, int, caddr_t, int, struct proc *);

int	grflock(struct grf_data *, int);
int	grfunlock(struct grf_data *);
int	grfdevno(dev_t);

int	iommap(dev_t, caddr_t *);
int	iounmmap(dev_t, caddr_t);

int	grffindpid(struct grf_data *);
void	grfrmpid(struct grf_data *);
int	grflckmmap(dev_t, caddr_t *);
int	grflckunmmap(dev_t, caddr_t);
#endif /* COMPAT_HPUX */

/* grf_subr.c prototypes */
struct itesw;
void	grfdev_attach(struct grfdev_softc *,
	    int (*init)(struct grf_data *, int, caddr_t),
	    caddr_t, struct grfsw *, struct itesw *itesw);
#endif /* _KERNEL */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.8 2002/03/14 03:15:52 millert Exp $	*/
@


1.8
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.7 2002/03/14 01:26:30 millert Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.6 1997/04/16 11:56:06 downsj Exp $	*/
d154 1
a154 1
void	grfdev_attach __P((struct grfdev_softc *,
d156 1
a156 1
	    caddr_t, struct grfsw *, struct itesw *itesw));
@


1.6
log
@Merge portions of NetBSD up to 970415.

This includes:
	* All of the prototyping and KNF changes.
	* The new interrupt system.
	* Portions of the Domain Keyboard support from Mike Smith.

This does not include:
	* m68k changes, namely generic dumps.

Various sundry changes and fixes by me.
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.5 1997/02/05 16:01:17 downsj Exp $	*/
d75 1
a75 1
	int	(*gd_init) __P((struct grf_data *, int, caddr_t));
d77 1
a77 1
	int	(*gd_mode) __P((struct grf_data *, int, caddr_t));
d130 5
a134 5
int	grfmap __P((dev_t, caddr_t *, struct proc *));
int	grfunmap __P((dev_t, caddr_t, struct proc *));
int	grfon __P((dev_t));
int	grfoff __P((dev_t));
int	grfaddr __P((struct grf_softc *, int));
d137 1
a137 1
int	hpuxgrfioctl __P((dev_t, int, caddr_t, int, struct proc *));
d139 11
a149 11
int	grflock __P((struct grf_data *, int));
int	grfunlock __P((struct grf_data *));
int	grfdevno __P((dev_t));

int	iommap __P((dev_t, caddr_t *));
int	iounmmap __P((dev_t, caddr_t));

int	grffindpid __P((struct grf_data *));
void	grfrmpid __P((struct grf_data *));
int	grflckmmap __P((dev_t, caddr_t *));
int	grflckunmmap __P((dev_t, caddr_t));
@


1.6.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.6 1997/04/16 11:56:06 downsj Exp $	*/
d75 1
a75 1
	int	(*gd_init)(struct grf_data *, int, caddr_t);
d77 1
a77 1
	int	(*gd_mode)(struct grf_data *, int, caddr_t);
d130 5
a134 5
int	grfmap(dev_t, caddr_t *, struct proc *);
int	grfunmap(dev_t, caddr_t, struct proc *);
int	grfon(dev_t);
int	grfoff(dev_t);
int	grfaddr(struct grf_softc *, int);
d137 1
a137 1
int	hpuxgrfioctl(dev_t, int, caddr_t, int, struct proc *);
d139 11
a149 11
int	grflock(struct grf_data *, int);
int	grfunlock(struct grf_data *);
int	grfdevno(dev_t);

int	iommap(dev_t, caddr_t *);
int	iounmmap(dev_t, caddr_t);

int	grffindpid(struct grf_data *);
void	grfrmpid(struct grf_data *);
int	grflckmmap(dev_t, caddr_t *);
int	grflckunmmap(dev_t, caddr_t);
d154 1
a154 1
void	grfdev_attach(struct grfdev_softc *,
d156 1
a156 1
	    caddr_t, struct grfsw *, struct itesw *itesw);
@


1.6.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d75 1
a75 1
	int	(*gd_init)(struct grf_data *, int, caddr_t);
d77 1
a77 1
	int	(*gd_mode)(struct grf_data *, int, caddr_t);
d130 5
a134 5
int	grfmap(dev_t, caddr_t *, struct proc *);
int	grfunmap(dev_t, caddr_t, struct proc *);
int	grfon(dev_t);
int	grfoff(dev_t);
int	grfaddr(struct grf_softc *, int);
d137 1
a137 1
int	hpuxgrfioctl(dev_t, int, caddr_t, int, struct proc *);
d139 11
a149 11
int	grflock(struct grf_data *, int);
int	grfunlock(struct grf_data *);
int	grfdevno(dev_t);

int	iommap(dev_t, caddr_t *);
int	iounmmap(dev_t, caddr_t);

int	grffindpid(struct grf_data *);
void	grfrmpid(struct grf_data *);
int	grflckmmap(dev_t, caddr_t *);
int	grflckunmmap(dev_t, caddr_t);
d154 1
a154 1
void	grfdev_attach(struct grfdev_softc *,
d156 1
a156 1
	    caddr_t, struct grfsw *, struct itesw *itesw);
@


1.6.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.6.14.1 2002/03/28 10:07:18 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5
log
@Non-console ITE devices need to be initialized properly, too, ya know.

Add enough glue to the aux attach structure to do so, and teach all the
device drivers how to set it.

This fixes the last ITE panic I know of...
@
text
@d1 2
a2 2
/*	$OpenBSD: grfvar.h,v 1.4 1997/02/03 04:47:32 downsj Exp $	*/
/*	$NetBSD: grfvar.h,v 1.9 1997/01/30 09:18:51 thorpej Exp $	*/
d129 24
@


1.4
log
@Merge new config(8) support from NetBSD, by Jason Thorpe.
Also add siginfo glue, BOOT_CONFIG, and various other changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: grfvar.h,v 1.3 1997/01/12 15:12:41 downsj Exp $	*/
d101 1
d129 1
d132 1
a132 1
	    caddr_t, struct grfsw *));
@


1.3
log
@Mostly sync to NetBSD-current of 011196.  Compiles, links, boots to single
user.

KNOWN NOT WORKING:
	* DIO-II devices
	* Dynamic executables

NOT EVEN TRIED:
	* New config support
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: grfvar.h,v 1.8 1996/12/17 08:41:12 thorpej Exp $	*/
a126 5
#ifndef NEWCONFIG
extern	struct grf_softc grf_softc[];
extern	struct grfsw *grfsw[];
extern	int ngrfsw;
#endif /* ! NEWCONFIG */
a127 1
#ifdef NEWCONFIG
a130 1
#endif /* NEWCONFIG */
@


1.2
log
@sync w/ Net 960424
@
text
@d1 2
a2 1
/*	$NetBSD: grfvar.h,v 1.7 1996/02/24 00:55:18 thorpej Exp $	*/
d81 2
d87 16
d127 1
d131 8
a138 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: grfvar.h,v 1.6 1995/03/28 18:16:06 jtc Exp $	*/
a51 11
/*
 * Static configuration info for display types
 */
struct	grfsw {
	int	gd_hwid;	/* id returned by hardware */
	int	gd_swid;	/* id to be returned by software */
	char	*gd_desc;	/* description printed at config time */
	int	(*gd_init)();	/* boot time init routine */
	int	(*gd_mode)();	/* misc function routine */
};

d53 1
a53 1
struct	grf_softc {
d66 18
d107 1
d109 1
a109 1
extern	struct grfsw grfsw[];
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
