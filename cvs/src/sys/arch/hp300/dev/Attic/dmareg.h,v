head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.8
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.4
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.28
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.26
	OPENBSD_5_0:1.9.0.24
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.22
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.20
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.16
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.6.0.20
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.18
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.16
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.14
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.12
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.10
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2014.03.18.22.36.31;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2013.02.02.13.34.29;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.17.23.56.02;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.27.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.04.02.58.51;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	97.07.06.08.01.49;	author downsj;	state Exp;
branches
	1.6.12.1;
next	1.5;

1.5
date	97.04.16.11.56.00;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.02.03.04.47.22;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.12.15.12.28;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.28.30;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.18;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.18;	author deraadt;	state Exp;
branches;
next	;

1.6.12.1
date	2001.11.13.21.00.50;	author niklas;	state Exp;
branches;
next	1.6.12.2;

1.6.12.2
date	2003.06.07.11.11.34;	author ho;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: dmareg.h,v 1.10 2013/02/02 13:34:29 miod Exp $	*/
/*	$NetBSD: dmareg.h,v 1.12 1997/05/05 21:02:40 thorpej Exp $	*/

/*
 * Copyright (c) 1982, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dmareg.h	8.1 (Berkeley) 6/10/93
 */

#include <hp300/dev/iotypes.h>		/* XXX */

/*
 * Hardware layout for the 98620[ABC]:
 *	98620A (old 320s?):	byte/word DMA in up to 64K chunks
 *	98620B (320s only):	98620A with programmable IPL
 *	98620C (all others):	byte/word/longword DMA in up to 4Gb chunks
 */

struct	dmaBdevice {
	v_char		*dmaB_addr;
	vu_short	dmaB_count;
	vu_short	dmaB_cmd;
#define	dmaB_stat	dmaB_cmd
} __packed;

struct	dmadevice {
	v_char		*dma_addr;
	vu_int		dma_count;
	vu_short	dma_cmd;
	vu_short	dma_stat;
} __packed;

struct	dmareg {
	struct dmaBdevice dma_Bchan0;
	struct dmaBdevice dma_Bchan1;
/* the rest are 98620C specific */
	v_char		  dma_id[4];
	vu_char		  dma_cr;
	char		  dma_pad1[0xEB];
	struct dmadevice  dma_chan0;
	char		  dma_pad2[0xF4];
	struct dmadevice  dma_chan1;
} __packed;

/* The hp300 has 2 DMA channels. */
#define	NDMACHAN	2

/* addresses */
#define	DMA_BASE	IIOV(0x500000)

/* command bits */
#define	DMA_ENAB	0x0001
#define	DMA_WORD	0x0002
#define	DMA_WRT		0x0004
#define	DMA_PRI		0x0008
#define	DMA_IPL(x)	(((x) - 3) << 4)
#define DMA_LWORD	0x0100
#define DMA_START	0x8000

/* status bits */
#define	DMA_ARMED	0x01
#define	DMA_INTR	0x02
#define DMA_ACC		0x04
#define DMA_HALT	0x08
#define DMA_BERR	0x10
#define DMA_ALIGN	0x20
#define DMA_WRAP	0x40

#ifdef _KERNEL
/*
 * Macros to attempt to hide the HW differences between the 98620B DMA
 * board and the 1TQ4-0401 DMA chip (68020C "board").  The latter
 * includes emulation registers for the former but you need to access
 * the "native-mode" registers directly in order to do 32-bit DMA.
 *
 * DMA_CLEAR:	Clear interrupt on DMA board.  We just use the
 *		emulation registers on the 98620C as that is easiest.
 * DMA_STAT:	Read status register.  Again, we always read the
 *		emulation register.  Someday we might want to
 *		look at the 98620C status to get the extended bits.
 * DMA_ARM:	Load address, count and kick-off DMA.
 */
#define	DMA_CLEAR(dc) do {					\
		v_int dmaclr;					\
		dmaclr = (int)dc->dm_Bhwaddr->dmaB_addr;	\
	} while (0);
#define	DMA_STAT(dc)	dc->dm_Bhwaddr->dmaB_stat

#if defined(HP320)
#define	DMA_ARM(sc, dc)	\
	if (sc->sc_type == DMA_B) { \
		struct dmaBdevice *dma = dc->dm_Bhwaddr; \
		dma->dmaB_addr = (v_char *)dc->dm_chain[dc->dm_cur].dc_addr; \
		dma->dmaB_count = dc->dm_chain[dc->dm_cur].dc_count - 1; \
		dma->dmaB_cmd = dc->dm_cmd; \
	} else { \
		struct dmadevice *dma = dc->dm_hwaddr; \
		dma->dma_addr = (v_char *)dc->dm_chain[dc->dm_cur].dc_addr; \
		dma->dma_count = dc->dm_chain[dc->dm_cur].dc_count - 1; \
		dma->dma_cmd = dc->dm_cmd; \
	}
#else
#define	DMA_ARM(sc, dc)	\
	{ \
		struct dmadevice *dma = dc->dm_hwaddr; \
		dma->dma_addr = (v_char *)dc->dm_chain[dc->dm_cur].dc_addr; \
		dma->dma_count = dc->dm_chain[dc->dm_cur].dc_count - 1; \
		dma->dma_cmd = dc->dm_cmd; \
	}
#endif
#endif
@


1.10
log
@hp300 ELF bits. Requires many device and prom related structs to now be declared
as packed due to them containing 32-bit types at 16-bit but not 32-bit aligned
offsets. The boot block updates (especially mkboot) come straight from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: dmareg.h,v 1.9 2005/11/17 23:56:02 miod Exp $	*/
@


1.9
log
@Factorize DMA cache flush code, use modern types and constants, ansify.
@
text
@d1 1
a1 1
/*	$OpenBSD: dmareg.h,v 1.8 2003/06/02 23:27:44 millert Exp $	*/
d49 1
a49 1
};
d56 1
a56 1
};
d68 1
a68 1
};
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: dmareg.h,v 1.7 2001/11/04 02:58:51 miod Exp $	*/
d118 1
a118 1
		dma->dmaB_addr = dc->dm_chain[dc->dm_cur].dc_addr; \
d123 1
a123 1
		dma->dma_addr = dc->dm_chain[dc->dm_cur].dc_addr; \
d131 1
a131 1
		dma->dma_addr = dc->dm_chain[dc->dm_cur].dc_addr; \
@


1.7
log
@hp300spu.h information not needed anymore.
@
text
@d1 1
a1 1
/*	$OpenBSD: dmareg.h,v 1.6 1997/07/06 08:01:49 downsj Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Sync with changes from NetBSD, up to 970705.

This includes all of the new frodo drivers, from Michael Smith, hacked up
by Jason R. Thorpe; other changes, mostly configuration and/or m68k
abstraction related, from Thorpe.  A few others of my own.

This compiles and runs, have not yet tested Domain kbd or apci ports.
@
text
@d1 1
a1 1
/*	$OpenBSD: dmareg.h,v 1.5 1997/04/16 11:56:00 downsj Exp $	*/
a39 1
#include <machine/hp300spu.h>
@


1.6.12.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
@


1.6.12.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: dmareg.h,v 1.6.12.1 2001/11/13 21:00:50 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5
log
@Merge portions of NetBSD up to 970415.

This includes:
	* All of the prototyping and KNF changes.
	* The new interrupt system.
	* Portions of the Domain Keyboard support from Mike Smith.

This does not include:
	* m68k changes, namely generic dumps.

Various sundry changes and fixes by me.
@
text
@d1 2
a2 2
/*	$OpenBSD: dmareg.h,v 1.4 1997/02/03 04:47:22 downsj Exp $	*/
/*	$NetBSD: dmareg.h,v 1.10 1997/04/01 03:10:58 scottr Exp $	*/
d40 1
d120 2
a121 2
#define	DMA_ARM(dc)	\
	if (dc->dm_softc->sc_type == DMA_B) { \
d133 1
a133 1
#define	DMA_ARM(dc)	\
@


1.4
log
@Merge new config(8) support from NetBSD, by Jason Thorpe.
Also add siginfo glue, BOOT_CONFIG, and various other changes.
@
text
@d1 2
a2 2
/*	$OpenBSD: dmareg.h,v 1.3 1997/01/12 15:12:28 downsj Exp $	*/
/*	$NetBSD: dmareg.h,v 1.8 1997/01/30 09:04:34 thorpej Exp $	*/
d112 4
a115 1
#define	DMA_CLEAR(dc)	{ v_int dmaclr = (int) dc->dm_Bhwaddr->dmaB_addr; }
d121 1
a121 1
		register struct dmaBdevice *dma = dc->dm_Bhwaddr; \
d126 1
a126 1
		register struct dmadevice *dma = dc->dm_hwaddr; \
d134 1
a134 1
		register struct dmadevice *dma = dc->dm_hwaddr; \
@


1.3
log
@Mostly sync to NetBSD-current of 011196.  Compiles, links, boots to single
user.

KNOWN NOT WORKING:
	* DIO-II devices
	* Dynamic executables

NOT EVEN TRIED:
	* New config support
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: dmareg.h,v 1.7 1996/12/09 06:18:13 thorpej Exp $	*/
d119 2
a120 2
		dma->dmaB_addr = dc->dm_cur->dc_addr; \
		dma->dmaB_count = dc->dm_cur->dc_count - 1; \
d124 2
a125 2
		dma->dma_addr = dc->dm_cur->dc_addr; \
		dma->dma_count = dc->dm_cur->dc_count - 1; \
d132 2
a133 2
		dma->dma_addr = dc->dm_cur->dc_addr; \
		dma->dma_count = dc->dm_cur->dc_count - 1; \
@


1.2
log
@update from netbsd (verbatim)
@
text
@d1 2
a2 1
/*	$NetBSD: dmareg.h,v 1.6 1995/12/02 02:46:49 thorpej Exp $	*/
a75 3

/* intr level must be >= level of any device using dma.  i.e., splbio */
#define	DMAINTLVL	5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: dmareg.h,v 1.5 1995/03/28 18:15:59 jtc Exp $	*/
d73 2
a74 1
#define	NDMA		2
d114 2
a115 2
#define	DMA_CLEAR(dc)	{ v_int dmaclr = (int)dc->sc_Bhwaddr->dmaB_addr; }
#define	DMA_STAT(dc)	dc->sc_Bhwaddr->dmaB_stat
d119 5
a123 5
	if (dc->sc_type == DMA_B) { \
		register struct dmaBdevice *dma = dc->sc_Bhwaddr; \
		dma->dmaB_addr = dc->sc_cur->dc_addr; \
		dma->dmaB_count = dc->sc_cur->dc_count - 1; \
		dma->dmaB_cmd = dc->sc_cmd; \
d125 4
a128 4
		register struct dmadevice *dma = dc->sc_hwaddr; \
		dma->dma_addr = dc->sc_cur->dc_addr; \
		dma->dma_count = dc->sc_cur->dc_count - 1; \
		dma->dma_cmd = dc->sc_cmd; \
d133 4
a136 4
		register struct dmadevice *dma = dc->sc_hwaddr; \
		dma->dma_addr = dc->sc_cur->dc_addr; \
		dma->dma_count = dc->sc_cur->dc_count - 1; \
		dma->dma_cmd = dc->sc_cmd; \
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
