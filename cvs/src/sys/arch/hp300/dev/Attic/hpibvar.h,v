head	1.12;
access;
symbols
	OPENBSD_5_5:1.11.0.16
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.12
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.10
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.8
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.6
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.20
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.24
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.22
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.11;

1.11
date	2010.09.06.14.44.18;	author jasper;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.18.00.09.15;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.16.21.23.55;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.27.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.30;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.04.16.11.56.09;	author downsj;	state Exp;
branches
	1.6.14.1
	1.6.24.1;
next	1.5;

1.5
date	97.02.03.04.47.34;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.01.12.15.12.45;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.04.25.06.36.41;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.28.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.19;	author deraadt;	state Exp;
branches;
next	;

1.6.14.1
date	2002.03.28.10.07.18;	author niklas;	state Exp;
branches;
next	1.6.14.2;

1.6.14.2
date	2003.06.07.11.11.34;	author ho;	state Exp;
branches;
next	;

1.6.24.1
date	2002.06.11.03.35.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: hpibvar.h,v 1.11 2010/09/06 14:44:18 jasper Exp $	*/
/*	$NetBSD: hpibvar.h,v 1.10 1997/03/31 07:34:25 scottr Exp $	*/

/*
 * Copyright (c) 1996, 1997 Jason R. Thorpe.  All rights reserved.
 * Copyright (c) 1982, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)hpibvar.h	8.1 (Berkeley) 6/10/93
 */

#include <sys/queue.h>

#define	HPIB_IPL(x)	((((x) >> 4) & 0x3) + 3)

#define	HPIBA		32
#define	HPIBB		1
#define	HPIBC		8
#define	HPIBA_BA	21
#define	HPIBC_BA	30
#define	HPIBA_IPL	3

#define	CSA_BA		0x1F

#define	IDS_WDMA	0x04
#define	IDS_WRITE	0x08
#define	IDS_IR		0x40
#define	IDS_IE		0x80
#define	IDS_DMA(x)	(1 << (x))

#define	C_SDC		0x04	/* Selected device clear */
#define	C_SDC_P		0x04	/*  with odd parity */
#define	C_DCL		0x14	/* Universal device clear */
#define	C_DCL_P		0x94	/*  with odd parity */
#define	C_LAG		0x20	/* Listener address group commands */
#define	C_UNL		0x3f	/* Universal unlisten */
#define	C_UNL_P		0xbf	/*  with odd parity */
#define	C_TAG		0x40	/* Talker address group commands */
#define	C_UNA		0x5e	/* Unaddress (master talk address?) */
#define	C_UNA_P		0x5e	/*  with odd parity */
#define	C_UNT		0x5f	/* Universal untalk */
#define	C_UNT_P		0xdf	/*  with odd parity */
#define	C_SCG		0x60	/* Secondary group commands */

struct hpibbus_softc;

/*
 * Each of the HP-IB controller drivers fills in this structure, which
 * is used by the indirect driver to call controller-specific functions.
 */
struct	hpib_controller {
	void	(*hpib_reset)(struct hpibbus_softc *);
	int	(*hpib_send)(struct hpibbus_softc *,
		    int, int, void *, int);
	int	(*hpib_recv)(struct hpibbus_softc *,
		    int, int, void *, int);
	int	(*hpib_ppoll)(struct hpibbus_softc *);
	void	(*hpib_ppwatch)(void *);
	void	(*hpib_go)(struct hpibbus_softc *,
		    int, int, void *, int, int, int);
	void	(*hpib_done)(struct hpibbus_softc *);
	int	(*hpib_intr)(void *);
};

/*
 * Attach an HP-IB bus to an HP-IB controller.
 */
struct hpibdev_attach_args {
	struct	hpib_controller *ha_ops;	/* controller ops vector */
	int	ha_type;			/* XXX */
	int	ha_ba;
	struct hpibbus_softc **ha_softcpp;	/* XXX */
};

/*
 * Attach an HP-IB device to an HP-IB bus.
 */
struct hpibbus_attach_args {
	u_int16_t ha_id;		/* device id */
	int	ha_slave;		/* HP-IB bus slave */
	int	ha_punit;		/* physical unit on slave */
};

/* Locator shorthand */
#define	hpibbuscf_slave		cf_loc[0]
#define	hpibbuscf_punit		cf_loc[1]

#define	HPIBBUS_SLAVE_UNK	-1
#define	HPIBBUS_PUNIT_UNK	-1

#define	HPIB_NSLAVES		8	/* number of slaves on a bus */
#define	HPIB_NPUNITS		2	/* number of punits per slave */

/*
 * An HP-IB job queue entry.  Slave drivers have one of these used
 * to queue requests with the controller.
 */
struct hpibqueue {
	TAILQ_ENTRY(hpibqueue) hq_list;	/* entry on queue */
	void	*hq_softc;		/* slave's softc */
	int	hq_slave;		/* slave on bus */

	/*
	 * Callbacks used to start and stop the slave driver.
	 */
	void	(*hq_start)(void *);
	void	(*hq_go)(void *);
	void	(*hq_intr)(void *);
};

struct dmaqueue;

/*
 * Software state per HP-IB bus.
 */
struct hpibbus_softc {
	struct	device sc_dev;		/* generic device glue */
	struct	hpib_controller *sc_ops; /* controller ops vector */
	volatile int sc_flags;		/* misc flags */
	struct	dmaqueue *sc_dq;
	TAILQ_HEAD(, hpibqueue) sc_queue;
	int	sc_ba;
	int	sc_type;
	char	*sc_addr;
	int	sc_count;
	int	sc_curcnt;
};

/* sc_flags */
#define	HPIBF_IO	0x1
#define	HPIBF_DONE	0x2
#define	HPIBF_PPOLL	0x4
#define	HPIBF_READ	0x8
#define	HPIBF_TIMO	0x10
#define	HPIBF_DMA16	0x8000

/*
 * Description structure for CS/80 devices.
 */

struct cs80_describe {
	u_int	d_iuw:16,	/* controller: installed unit word */
		d_cmaxxfr:16,	/* controller: max transfer rate (Kb) */
		d_ctype:8,	/* controller: controller type */
		d_utype:8,	/* unit: unit type */
		d_name:24,	/* unit: name (6 BCD digits) */
		d_sectsize:16,	/* unit: # of bytes per block (sector) */
		d_blkbuf:8,	/* unit: # of blocks which can be buffered */
		d_burstsize:8,	/* unit: recommended burst size */
		d_blocktime:16,	/* unit: block time (u-sec) */
		d_uavexfr:16,	/* unit: average transfer rate (Kb) */
		d_retry:16,	/* unit: optimal retry time (1/100-sec) */
		d_access:16,	/* unit: access time param (1/100-sec) */
		d_maxint:8,	/* unit: maximum interleave */
		d_fvbyte:8,	/* unit: fixed volume byte */
		d_rvbyte:8,	/* unit: removable volume byte */
		d_maxcyl:24,	/* volume: maximum cylinder */
		d_maxhead:8,	/* volume: maximum head */
		d_maxsect:16,	/* volume: maximum sector on track */
		d_maxvsecth:16,	/* volume: maximum sector on volume (MSW) */
		d_maxvsectl:32,	/* volume: maximum sector on volume (LSWs) */
		d_interleave:8;	/* volume: current interleave */
} __packed;

#ifdef _KERNEL
extern	caddr_t internalhpib;
extern	int hpibtimeout;
extern	int hpibdmathresh;

void	hpibreset(int);
int	hpibsend(int, int, int, void *, int);
int	hpibrecv(int, int, int, void *, int);
int	hpibustart(int);
void	hpibstart(void *);
void	hpibgo(int, int, int, void *, int, int, int);
void	hpibdone(void *);
int	hpibpptest(int, int);
void	hpibppclear(int);
void	hpibawait(int);
int	hpibswait(int, int);
int	hpibid(int, int);

int	hpibreq(struct device *, struct hpibqueue *);
void	hpibfree(struct device *, struct hpibqueue *);

int	hpibintr(void *);
int	hpibdevprint(void *, const char *);
#endif
@


1.11
log
@- spello, short-hand -> shorthand

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.10 2005/11/18 00:09:15 miod Exp $	*/
@


1.10
log
@Define the CS/80 identify structure only once and correctly, instead of
duplicating it in every CS/80 driver and using an hardcoded number for its size.
No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.9 2005/11/16 21:23:55 miod Exp $	*/
d108 1
a108 1
/* Locator short-hand */
@


1.9
log
@Overhaul the way HP-IB devices are probed. We will now do an exhaustive
probe of the (slave, punit) tuple space, since this is the only way we
can get a dual disk or dual tape enclosure to attach two devices of the
same kind.

This allows us to get rid of the hpibbus resource map and related
functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.8 2003/06/02 23:27:44 millert Exp $	*/
d160 28
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.7 2002/03/14 01:26:30 millert Exp $	*/
a150 6

	/*
	 * HP-IB is an indirect bus; this cheezy resource map
	 * keeps track of slave/punit allocations.
	 */
	char	sc_rmap[HPIB_NSLAVES][HPIB_NPUNITS];
a180 2
int	hpibbus_alloc(struct hpibbus_softc *, int, int);
void	hpibbus_free(struct hpibbus_softc *, int, int);
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.6 1997/04/16 11:56:09 downsj Exp $	*/
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Merge portions of NetBSD up to 970415.

This includes:
	* All of the prototyping and KNF changes.
	* The new interrupt system.
	* Portions of the Domain Keyboard support from Mike Smith.

This does not include:
	* m68k changes, namely generic dumps.

Various sundry changes and fixes by me.
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.5 1997/02/03 04:47:34 downsj Exp $	*/
d80 11
a90 11
	void	(*hpib_reset) __P((struct hpibbus_softc *));
	int	(*hpib_send) __P((struct hpibbus_softc *,
		    int, int, void *, int));
	int	(*hpib_recv) __P((struct hpibbus_softc *,
		    int, int, void *, int));
	int	(*hpib_ppoll) __P((struct hpibbus_softc *));
	void	(*hpib_ppwatch) __P((void *));
	void	(*hpib_go) __P((struct hpibbus_softc *,
		    int, int, void *, int, int, int));
	void	(*hpib_done) __P((struct hpibbus_softc *));
	int	(*hpib_intr) __P((void *));
d134 3
a136 3
	void	(*hq_start) __P((void *));
	void	(*hq_go) __P((void *));
	void	(*hq_intr) __P((void *));
d176 17
a192 17
void	hpibreset __P((int));
int	hpibsend __P((int, int, int, void *, int));
int	hpibrecv __P((int, int, int, void *, int));
int	hpibustart __P((int));
void	hpibstart __P((void *));
void	hpibgo __P((int, int, int, void *, int, int, int));
void	hpibdone __P((void *));
int	hpibpptest __P((int, int));
void	hpibppclear __P((int));
void	hpibawait __P((int));
int	hpibswait __P((int, int));
int	hpibid __P((int, int));

int	hpibreq __P((struct device *, struct hpibqueue *));
void	hpibfree __P((struct device *, struct hpibqueue *));
int	hpibbus_alloc __P((struct hpibbus_softc *, int, int));
void	hpibbus_free __P((struct hpibbus_softc *, int, int));
d194 2
a195 2
int	hpibintr __P((void *));
int	hpibdevprint __P((void *, const char *));
@


1.6.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.6 1997/04/16 11:56:09 downsj Exp $	*/
d80 11
a90 11
	void	(*hpib_reset)(struct hpibbus_softc *);
	int	(*hpib_send)(struct hpibbus_softc *,
		    int, int, void *, int);
	int	(*hpib_recv)(struct hpibbus_softc *,
		    int, int, void *, int);
	int	(*hpib_ppoll)(struct hpibbus_softc *);
	void	(*hpib_ppwatch)(void *);
	void	(*hpib_go)(struct hpibbus_softc *,
		    int, int, void *, int, int, int);
	void	(*hpib_done)(struct hpibbus_softc *);
	int	(*hpib_intr)(void *);
d134 3
a136 3
	void	(*hq_start)(void *);
	void	(*hq_go)(void *);
	void	(*hq_intr)(void *);
d176 17
a192 17
void	hpibreset(int);
int	hpibsend(int, int, int, void *, int);
int	hpibrecv(int, int, int, void *, int);
int	hpibustart(int);
void	hpibstart(void *);
void	hpibgo(int, int, int, void *, int, int, int);
void	hpibdone(void *);
int	hpibpptest(int, int);
void	hpibppclear(int);
void	hpibawait(int);
int	hpibswait(int, int);
int	hpibid(int, int);

int	hpibreq(struct device *, struct hpibqueue *);
void	hpibfree(struct device *, struct hpibqueue *);
int	hpibbus_alloc(struct hpibbus_softc *, int, int);
void	hpibbus_free(struct hpibbus_softc *, int, int);
d194 2
a195 2
int	hpibintr(void *);
int	hpibdevprint(void *, const char *);
@


1.6.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d80 11
a90 11
	void	(*hpib_reset)(struct hpibbus_softc *);
	int	(*hpib_send)(struct hpibbus_softc *,
		    int, int, void *, int);
	int	(*hpib_recv)(struct hpibbus_softc *,
		    int, int, void *, int);
	int	(*hpib_ppoll)(struct hpibbus_softc *);
	void	(*hpib_ppwatch)(void *);
	void	(*hpib_go)(struct hpibbus_softc *,
		    int, int, void *, int, int, int);
	void	(*hpib_done)(struct hpibbus_softc *);
	int	(*hpib_intr)(void *);
d134 3
a136 3
	void	(*hq_start)(void *);
	void	(*hq_go)(void *);
	void	(*hq_intr)(void *);
d176 17
a192 17
void	hpibreset(int);
int	hpibsend(int, int, int, void *, int);
int	hpibrecv(int, int, int, void *, int);
int	hpibustart(int);
void	hpibstart(void *);
void	hpibgo(int, int, int, void *, int, int, int);
void	hpibdone(void *);
int	hpibpptest(int, int);
void	hpibppclear(int);
void	hpibawait(int);
int	hpibswait(int, int);
int	hpibid(int, int);

int	hpibreq(struct device *, struct hpibqueue *);
void	hpibfree(struct device *, struct hpibqueue *);
int	hpibbus_alloc(struct hpibbus_softc *, int, int);
void	hpibbus_free(struct hpibbus_softc *, int, int);
d194 2
a195 2
int	hpibintr(void *);
int	hpibdevprint(void *, const char *);
@


1.6.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: hpibvar.h,v 1.6.14.1 2002/03/28 10:07:18 niklas Exp $	*/
d17 5
a21 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5
log
@Merge new config(8) support from NetBSD, by Jason Thorpe.
Also add siginfo glue, BOOT_CONFIG, and various other changes.
@
text
@d1 2
a2 2
/*	$OpenBSD: hpibvar.h,v 1.4 1997/01/12 15:12:45 downsj Exp $	*/
/*	$NetBSD: hpibvar.h,v 1.9 1997/01/30 09:06:52 thorpej Exp $	*/
d179 2
d182 2
d185 3
d191 2
@


1.4
log
@Mostly sync to NetBSD-current of 011196.  Compiles, links, boots to single
user.

KNOWN NOT WORKING:
	* DIO-II devices
	* Dynamic executables

NOT EVEN TRIED:
	* New config support
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: hpibvar.h,v 1.8 1996/02/14 02:44:31 thorpej Exp $	*/
d5 1
d40 2
d73 1
a73 13
struct	hpib_softc {
	struct	hp_ctlr *sc_hc;
	struct	hpib_controller *sc_controller;
	char	*sc_descrip;
	int	sc_flags;
	struct	devqueue sc_dq;
	struct	devqueue sc_sq;
	int	sc_ba;
	int	sc_type;
	char	*sc_addr;
	int	sc_count;
	int	sc_curcnt;
};
d80 6
a85 4
	void	(*hpib_reset) __P((int));
	int	(*hpib_send) __P((int, int, int, void *, int));
	int	(*hpib_recv) __P((int, int, int, void *, int));
	int	(*hpib_ppoll) __P((int));
d87 3
a89 2
	void	(*hpib_go) __P((int, int, int, void *, int, int, int));
	void	(*hpib_done) __P((int));
d93 70
a171 1
extern	struct hpib_softc hpib_softc[];
d179 8
@


1.3
log
@sync w/ Net 960424
@
text
@d1 1
@


1.2
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
/*	$NetBSD: hpibvar.h,v 1.7 1995/11/19 17:57:18 thorpej Exp $	*/
d69 14
d95 1
a95 15
	int	(*hpib_intr) __P((int));
};

struct	hpib_softc {
	struct	hp_ctlr *sc_hc;
	struct	hpib_controller *sc_controller;
	char	*sc_descrip;
	int	sc_flags;
	struct	devqueue sc_dq;
	struct	devqueue sc_sq;
	int	sc_ba;
	int	sc_type;
	char	*sc_addr;
	int	sc_count;
	int	sc_curcnt;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: hpibvar.h,v 1.6 1995/03/28 18:16:09 jtc Exp $	*/
d69 15
d86 2
d111 4
a114 2
void	fhpibppwatch __P((void *arg));
void	nhpibppwatch __P((void *arg));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
