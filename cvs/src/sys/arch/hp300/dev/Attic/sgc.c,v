head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2011.08.18.19.54.18;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.04.15.20.35.21;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.06.20.10.57;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.06.20.09.12;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.16.20.44.38;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.23.00.03.10;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.14.22.39.26;	author miod;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: sgc.c,v 1.7 2011/08/18 19:54:18 miod Exp $	*/

/*
 * Copyright (c) 2005, Miodrag Vallat
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 * SGC bus attachment and mapping glue.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/kernel.h>

#include <machine/autoconf.h>
#include <machine/bus.h>
#include <machine/cpu.h>
#include <machine/hp300spu.h>

#include <hp300/dev/sgcreg.h>
#include <hp300/dev/sgcvar.h>

int	sgcmatch(struct device *, void *, void *);
void	sgcattach(struct device *, struct device *, void *);
int	sgcprint(void *, const char *);

struct cfattach sgc_ca = {
	sizeof(struct device), sgcmatch, sgcattach
};

struct cfdriver sgc_cd = {
	NULL, "sgc", DV_DULL
};

int
sgcmatch(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
static	int sgc_matched = 0;

	/* Allow only one instance. */
	if (sgc_matched)
		return 0;

	/*
	 * Leave out machines which can not have an SGC bus.
	 */

	switch (machineid) {
	case HP_400:
	case HP_425:
	case HP_433:
		return sgc_matched = 1;
	default:
		return 0;
	}
}

void
sgcattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct sgc_attach_args saa;
	caddr_t pa, va;
	int slot, rv;
	extern struct hp300_bus_space_tag hp300_mem_tag;

	printf("\n");

	for (slot = 0; slot < SGC_NSLOTS; slot++) {
		pa = sgc_slottopa(slot);
		va = iomap(pa, PAGE_SIZE);
		if (va == NULL) {
			printf("%s: can't map slot %d\n", self->dv_xname, slot);
			continue;
		}

		/* Check for hardware. */
		rv = badaddr(va);
		iounmap(va, PAGE_SIZE);

		if (rv != 0)
			continue;

		bzero(&saa, sizeof(saa));
		saa.saa_slot = slot;
		saa.saa_iot = &hp300_mem_tag;

		/* Attach matching device. */
		config_found(self, &saa, sgcprint);
	}
}

int
sgcprint(aux, pnp)
	void *aux;
	const char *pnp;
{
	struct sgc_attach_args *saa = aux;

	if (pnp)
		printf("unknown SGC card at %s", pnp);
	printf(" slot %d", saa->saa_slot);
	return (UNCONF);
}

/*
 * Convert a slot number to a system physical address.
 * This is needed for bus_space.
 */
void *
sgc_slottopa(int slot)
{
	u_long rval;

	if (slot < 0 || slot >= SGC_NSLOTS)
		rval = 0;
	else
		rval = SGC_BASE + (slot * SGC_DEVSIZE);

	return ((void *)rval);
}
@


1.7
log
@Because model 362 does not have an SGC bus (or a blind, deaf and mute one),
there is no way we can tell models 360 and 362 apart by probing for an SGC
bus, or for a frodo(4) chip since of the `lil' black swan' 3x2 models, only
model 382 has frodo. So don't bother trying to tell models 360 and 362
apart, and use a common 36X symbol. No functional change except for useless
code removal.
@
text
@d1 1
a1 1
/*	$OpenBSD: sgc.c,v 1.6 2010/04/15 20:35:21 miod Exp $	*/
@


1.6
log
@Let sgc(4) attach on models 362 and 382 - recent documents uploaded to
bitsavers confirm the long suspicion the onboard frame buffer on these
machines is an SGC device.
@
text
@d1 1
a1 1
/*	$OpenBSD: sgc.c,v 1.5 2007/01/06 20:10:57 miod Exp $	*/
a73 2
	case HP_362:
	case HP_382:
@


1.5
log
@Turn bus_space_tag_t into real structures containing a bunch of function
pointers, to be used for the various bus_space operations.

intio devices no longer need to pass an intiobase-relative address to
bus_space_map.
@
text
@d1 1
a1 1
/*	$OpenBSD: sgc.c,v 1.4 2007/01/06 20:09:12 miod Exp $	*/
d67 1
a67 1
		return (0);
d73 10
a82 5
	if (machineid != HP_400 && machineid != HP_425 &&
	    machineid != HP_433)
		return (0);

	return (sgc_matched = 1);
@


1.4
log
@Propagate bus_space_tag_t through device attachment args structures, rather
than having them build their own. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: sgc.c,v 1.3 2006/06/16 20:44:38 miod Exp $	*/
d88 1
d109 1
a109 1
		saa.saa_iot = HP300_BUS_TAG(HP300_BUS_SGC, slot);
@


1.3
log
@Fix range check in sgc_slottopa().
@
text
@d1 1
a1 1
/*	$OpenBSD: sgc.c,v 1.2 2005/01/23 00:03:10 miod Exp $	*/
d39 1
d108 1
@


1.2
log
@Kill redundant or unnecessary includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: sgc.c,v 1.1 2005/01/14 22:39:26 miod Exp $	*/
d135 1
a135 1
	if (slot < 0 || slot > SGC_NSLOTS)
@


1.1
log
@Switch OpenBSD/hp300 to wscons, still using on-board ROM fonts for now.

Main features:
- MI hil drivers, allowing live plug/unplug of devices, and the keyboard
  does not need to be at id 1 anymore.
- SGC bus support on 4xx models. SGC frame buffers are supported too, but
  not as console, though you can use them as a regular glass terminal if
  you run a getty on ttyC0. Currently not compiled-in, awaiting for an sti(4)
  fix to be commited.
- HP-UX compatibility interfaces are removed. grfinfo and hilinfo are removed.

X11 support is currently broken by these changes; X.org X11R6 support will
be available very soon.

Tested on hyperion and 4 different flavours of catseye/topcat/kathmandu; other,
older frame buffers (davinci, gatorbox and renaissance) could not been tested
but should work; please report any regression.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a36 1
#include <sys/device.h>
a40 2

#include <hp300/dev/dmavar.h>
@

