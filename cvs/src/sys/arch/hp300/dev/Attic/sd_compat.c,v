head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	SMP:1.5.0.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	97.02.10.06.43.36;	author downsj;	state dead;
branches;
next	1.4;

1.4
date	97.02.03.04.47.47;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.12.15.13.04;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.01.12.20.20.20;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.21;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Kill COMPAT_NOLABEL.  It is not appropiate in the modern world.
@
text
@/*	$OpenBSD: sd_compat.c,v 1.4 1997/02/03 04:47:47 downsj Exp $	*/
/*	$NetBSD: sd_compat.c,v 1.5 1997/01/30 09:14:21 thorpej Exp $	*/

/*
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Van Jacobson of Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)sd_compat.c	8.1 (Berkeley) 6/10/93
 */

/*
 * Compatibility for SCSI disks without labels.
 */

#include <sys/param.h>
#include <sys/disklabel.h>
#include <sys/disk.h>
#include <sys/device.h>
#include <sys/buf.h>		/* XXX */

#include <hp300/dev/scsireg.h>	/* XXX */
#include <hp300/dev/scsivar.h>
#include <hp300/dev/sdvar.h>

/*
 * Since the SCSI standard tends to hide the disk structure, we define
 * partitions in terms of DEV_BSIZE blocks.  The default partition table
 * (for an unlabeled disk) reserves 512K for a boot area, has an 8 meg
 * root (A) and 32 meg of swap (B).  The rest of the space on the drive
 * goes in the G partition.  As usual, the C partition covers the entire
 * disk (including the boot area).
 *
 * We also define the D, E, F and H partitions as an alternative to B and G.
 * D is 48Mb, starts after A and is intended for swapping.
 * E is 50Mb, starts after D and is intended for /usr.
 * F starts after E and is what ever is left.
 * H starts after D and is what ever is left (i.e. combo of E and F).
 */
struct partition sddefaultpart[] = {
	{  16384,   1024, 1024, FS_BSDFFS, 8 },
	{  65536,  17408,    0, FS_SWAP,   0 },
	{      0,      0,    0, FS_BOOT,   0 },
	{  98304,  17408,    0, FS_SWAP,   0 },
	{ 102400, 115712, 1024, FS_BSDFFS, 8 },
	{      0, 218112, 1024, FS_BSDFFS, 8 },
	{      0,  82944, 1024, FS_BSDFFS, 8 },
	{      0, 115712, 1024, FS_BSDFFS, 8 }
};
int sdnumdefaultpart = sizeof(sddefaultpart)/sizeof(sddefaultpart[0]);

sdmakedisklabel(unit, lp)
	int unit;
	register struct disklabel *lp;
{
	extern struct cfdriver sd_cd;
	struct sd_softc *sc = sd_cd.cd_devs[unit];
	register struct partition *pi, *dpi;
	register int dcount;
	
	lp->d_secperunit = sc->sc_blks;
	lp->d_rpm = 3600;
	lp->d_interleave = 1;
	if (sc->sc_flags & SDF_RMEDIA)
		lp->d_flags |= D_REMOVABLE;
	lp->d_npartitions = sdnumdefaultpart;

	pi = lp->d_partitions;
	dpi = sddefaultpart;
	dcount = sdnumdefaultpart;
	while (dcount-- > 0)
		*pi++ = *dpi++;

	pi = lp->d_partitions;

	/*
	 * C gets everything
	 */
	pi[2].p_size = sc->sc_blks;
	/*
	 * G gets from end of B to end of disk
	 */
	pi[6].p_size = sc->sc_blks - pi[6].p_offset;
	/*
	 * H gets from end of D to end of disk
	 */
	pi[7].p_size = sc->sc_blks - pi[7].p_offset;
	/*
	 * If disk is big enough, define E and F
	 */
	if (sc->sc_blks > pi[5].p_offset)
		pi[5].p_size = sc->sc_blks - pi[5].p_offset;
	else {
		pi[4].p_offset = pi[4].p_size = 0;
		pi[5].p_offset = pi[5].p_size = 0;
	}
}
@


1.4
log
@Merge new config(8) support from NetBSD, by Jason Thorpe.
Also add siginfo glue, BOOT_CONFIG, and various other changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: sd_compat.c,v 1.3 1997/01/12 15:13:04 downsj Exp $	*/
@


1.3
log
@Mostly sync to NetBSD-current of 011196.  Compiles, links, boots to single
user.

KNOWN NOT WORKING:
	* DIO-II devices
	* Dynamic executables

NOT EVEN TRIED:
	* New config support
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: sd_compat.c,v 1.4 1996/01/07 22:02:20 thorpej Exp $	*/
a44 2
#include "sd.h"
#if NSD > 0
d49 5
a53 1
#include <hp300/dev/device.h>
a81 2
extern struct sd_softc sd_softc[];

d86 2
a87 1
	register struct sd_softc *sc = &sd_softc[unit];
a127 1
#endif
@


1.2
log
@from netbsd;
New generic disk framework.  Highlights:
New metrics handling.  Metrics are now kept in the new `struct disk'.
Busy time is now stored as a timeval, and transfer count in bytes.
Storage for disklabels is now dynamically allocated, so that the size
of the disk structure is not machine-dependent.
Several new functions for attaching and detaching disks, and handling
metrics calculation.
Old-style instrumentation is still supported in drivers that did it
before.  However, old-style instrumentation is being deprecated, and
will go away once the userland utilities are updated for the new
framework.
For usage and architectural details, see the forthcoming disk(9)
manual page.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: sd_compat.c,v 1.3 1994/10/26 07:25:08 cgd Exp $	*/
d49 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
