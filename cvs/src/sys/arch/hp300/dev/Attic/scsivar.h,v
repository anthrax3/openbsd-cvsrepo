head	1.8;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.24
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.22
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.20
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2004.08.03.21.46.56;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2003.06.02.23.27.45;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.04.16.11.56.15;	author downsj;	state Exp;
branches
	1.5.14.1
	1.5.24.1;
next	1.4;

1.4
date	97.02.03.04.47.45;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.12.15.13.02;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.28.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.21;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2002.03.28.10.07.18;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2003.06.07.11.11.34;	author ho;	state Exp;
branches;
next	;

1.5.24.1
date	2002.06.11.03.35.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Replace the old 4.4BSD scsi code used on hp300 with a ``real'' driver
interfaced with the MI scsi code.

Adapted from NetBSD with some changes (especially to get tape and old
cd-rom drives to not cause the driver to spin during probe).

Tested by millert@@ and I, ok millert@@
@
text
@/*	$OpenBSD: scsivar.h,v 1.7 2003/06/02 23:27:45 millert Exp $	*/
/*	$NetBSD: scsivar.h,v 1.7 1997/03/31 07:40:05 scottr Exp $	*/

/*
 * Copyright (c) 1997 Jason R. Thorpe.  All rights reserved.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Van Jacobson of Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)scsivar.h	8.1 (Berkeley) 6/10/93
 */

#include <sys/queue.h>

/*
 * A SCSI job queue entry.  Target drivers each have of of these,
 * used to queue requests with the initiator.
 */
struct scsiqueue {
	TAILQ_ENTRY(scsiqueue) sq_list;	/* entry on queue */
	void	*sq_softc;		/* target's softc */
	int	sq_target;		/* target on bus */
	int	sq_lun;			/* lun on target */

	/*
	 * Callbacks used to start and stop the target driver.
	 */
	void	(*sq_start)(void *);
	void	(*sq_go)(void *);
	void	(*sq_intr)(void *, int);
};

struct scsi_inquiry;
struct scsi_fmt_cdb;

struct oscsi_attach_args {
	int	osa_target;	/* target */
	int	osa_lun;	/* logical unit */
				/* inquiry data */
	struct	scsi_inquiry *osa_inqbuf;
};

#ifdef _KERNEL
int	scsi_print(void *, const char *);

void	scsi_delay(int);
void	scsistart(void *);
void	scsireset(int);
int	scsi_test_unit_rdy(int, int, int);
int	scsi_request_sense(int, int, int, u_char *, u_int);
int	scsi_immed_command(int, int, int, struct scsi_fmt_cdb *,
				u_char *, u_int, int);
int	scsi_tt_read(int, int, int, u_char *, u_int, daddr_t, int);
int	scsi_tt_write(int, int, int, u_char *, u_int, daddr_t, int);
int	scsireq(struct device *, struct scsiqueue *);
int	scsiustart(int);
void	scsistart(void *);
int	scsigo(int, int, int, struct buf *, struct scsi_fmt_cdb *, int);
void	scsidone(void *);
int	scsiintr(void *);
void	scsifree(struct device *, struct scsiqueue *);
int	scsi_tt_oddio(int, int, int, u_char *, u_int, int, int);
void	scsi_str(char *, char *, size_t);
int	scsi_probe_device(int, int, int, struct scsi_inquiry *, int);
#endif
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsivar.h,v 1.6 2002/03/14 01:26:30 millert Exp $	*/
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: scsivar.h,v 1.5 1997/04/16 11:56:15 downsj Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@Merge portions of NetBSD up to 970415.

This includes:
	* All of the prototyping and KNF changes.
	* The new interrupt system.
	* Portions of the Domain Keyboard support from Mike Smith.

This does not include:
	* m68k changes, namely generic dumps.

Various sundry changes and fixes by me.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsivar.h,v 1.4 1997/02/03 04:47:45 downsj Exp $	*/
d58 3
a60 3
	void	(*sq_start) __P((void *));
	void	(*sq_go) __P((void *));
	void	(*sq_intr) __P((void *, int));
d74 1
a74 1
int	scsi_print __P((void *, const char *));
d76 19
a94 19
void	scsi_delay __P((int));
void	scsistart __P((void *));
void	scsireset __P((int));
int	scsi_test_unit_rdy __P((int, int, int));
int	scsi_request_sense __P((int, int, int, u_char *, u_int));
int	scsi_immed_command __P((int, int, int, struct scsi_fmt_cdb *,
				u_char *, u_int, int));
int	scsi_tt_read __P((int, int, int, u_char *, u_int, daddr_t, int));
int	scsi_tt_write __P((int, int, int, u_char *, u_int, daddr_t, int));
int	scsireq __P((struct device *, struct scsiqueue *));
int	scsiustart __P((int));
void	scsistart __P((void *));
int	scsigo __P((int, int, int, struct buf *, struct scsi_fmt_cdb *, int));
void	scsidone __P((void *));
int	scsiintr __P((void *));
void	scsifree __P((struct device *, struct scsiqueue *));
int	scsi_tt_oddio __P((int, int, int, u_char *, u_int, int, int));
void	scsi_str __P((char *, char *, size_t));
int	scsi_probe_device __P((int, int, int, struct scsi_inquiry *, int));
@


1.5.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: scsivar.h,v 1.5 1997/04/16 11:56:15 downsj Exp $	*/
d58 3
a60 3
	void	(*sq_start)(void *);
	void	(*sq_go)(void *);
	void	(*sq_intr)(void *, int);
d74 1
a74 1
int	scsi_print(void *, const char *);
d76 19
a94 19
void	scsi_delay(int);
void	scsistart(void *);
void	scsireset(int);
int	scsi_test_unit_rdy(int, int, int);
int	scsi_request_sense(int, int, int, u_char *, u_int);
int	scsi_immed_command(int, int, int, struct scsi_fmt_cdb *,
				u_char *, u_int, int);
int	scsi_tt_read(int, int, int, u_char *, u_int, daddr_t, int);
int	scsi_tt_write(int, int, int, u_char *, u_int, daddr_t, int);
int	scsireq(struct device *, struct scsiqueue *);
int	scsiustart(int);
void	scsistart(void *);
int	scsigo(int, int, int, struct buf *, struct scsi_fmt_cdb *, int);
void	scsidone(void *);
int	scsiintr(void *);
void	scsifree(struct device *, struct scsiqueue *);
int	scsi_tt_oddio(int, int, int, u_char *, u_int, int, int);
void	scsi_str(char *, char *, size_t);
int	scsi_probe_device(int, int, int, struct scsi_inquiry *, int);
@


1.5.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 3
a60 3
	void	(*sq_start)(void *);
	void	(*sq_go)(void *);
	void	(*sq_intr)(void *, int);
d74 1
a74 1
int	scsi_print(void *, const char *);
d76 19
a94 19
void	scsi_delay(int);
void	scsistart(void *);
void	scsireset(int);
int	scsi_test_unit_rdy(int, int, int);
int	scsi_request_sense(int, int, int, u_char *, u_int);
int	scsi_immed_command(int, int, int, struct scsi_fmt_cdb *,
				u_char *, u_int, int);
int	scsi_tt_read(int, int, int, u_char *, u_int, daddr_t, int);
int	scsi_tt_write(int, int, int, u_char *, u_int, daddr_t, int);
int	scsireq(struct device *, struct scsiqueue *);
int	scsiustart(int);
void	scsistart(void *);
int	scsigo(int, int, int, struct buf *, struct scsi_fmt_cdb *, int);
void	scsidone(void *);
int	scsiintr(void *);
void	scsifree(struct device *, struct scsiqueue *);
int	scsi_tt_oddio(int, int, int, u_char *, u_int, int, int);
void	scsi_str(char *, char *, size_t);
int	scsi_probe_device(int, int, int, struct scsi_inquiry *, int);
@


1.5.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: scsivar.h,v 1.5.14.1 2002/03/28 10:07:18 niklas Exp $	*/
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.4
log
@Merge new config(8) support from NetBSD, by Jason Thorpe.
Also add siginfo glue, BOOT_CONFIG, and various other changes.
@
text
@d1 2
a2 2
/*	$OpenBSD: scsivar.h,v 1.3 1997/01/12 15:13:02 downsj Exp $	*/
/*	$NetBSD: scsivar.h,v 1.6 1997/01/30 09:08:56 thorpej Exp $	*/
d73 1
a73 1
int	scsi_probe_device __P((int, int, int, struct scsi_inquiry *, int));
d76 2
d79 6
d86 5
a91 4
int	scsigo __P((int, int, int, struct buf *, struct scsi_fmt_cdb *, int));
int	scsi_request_sense __P((int, int, int, u_char *, u_int));
int	scsiustart __P((int));
int	scsi_tt_write __P((int, int, int, u_char *, u_int, daddr_t, int));
a92 2
int	scsi_immed_command __P((int, int, int, struct scsi_fmt_cdb *,
	    u_char *, u_int, int));
d94 2
a95 1
int	scsi_test_unit_rdy __P((int, int, int));
@


1.3
log
@Mostly sync to NetBSD-current of 011196.  Compiles, links, boots to single
user.

KNOWN NOT WORKING:
	* DIO-II devices
	* Dynamic executables

NOT EVEN TRIED:
	* New config support
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: scsivar.h,v 1.5 1995/12/02 18:22:14 thorpej Exp $	*/
d5 1
d43 18
a60 10
struct	scsi_softc {
	struct	hp_ctlr *sc_hc;
	struct	devqueue sc_dq;
	struct	devqueue sc_sq;
	u_char	sc_flags;
	u_char	sc_sync;
	u_char	sc_scsi_addr;
	u_char	sc_scsiid;	/* XXX unencoded copy of sc_scsi_addr */
	u_char	sc_stat[2];
	u_char	sc_msg[7];
d63 25
a87 8
/* sc_flags */
#define	SCSI_IO		0x80	/* DMA I/O in progress */
#define	SCSI_DMA32	0x40	/* 32-bit DMA should be used */
#define	SCSI_HAVEDMA	0x04	/* controller has DMA channel */
#ifdef DEBUG
#define	SCSI_PAD	0x02	/* 'padded' transfer in progress */
#endif
#define	SCSI_ALIVE	0x01	/* controller initialized */
@


1.2
log
@update from netbsd (verbatim)
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: scsivar.h,v 1.4 1994/10/26 07:25:01 cgd Exp $	*/
d48 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
