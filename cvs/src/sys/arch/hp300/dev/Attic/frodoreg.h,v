head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.32
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.28
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.26
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.24
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.22
	OPENBSD_5_0:1.2.0.20
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.42
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.40
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.38
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.36
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.34
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.32
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.30
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.28
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.26
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.24
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.22
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.2;

1.2
date	2007.01.06.20.17.43;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	97.07.06.08.01.51;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: frodoreg.h,v 1.2 2007/01/06 20:17:43 miod Exp $	*/
/*	$NetBSD: frodoreg.h,v 1.1 1997/05/12 08:03:49 thorpej Exp $	*/

/*
 * Copyright (c) 1997 Michael Smith.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* Base address of the Frodo part */
#define	FRODO_BASE		(INTIOBASE + 0x1c000)

/*
 * Where we find the 8250-like APCI ports, and how far apart they are.
 */
#define	FRODO_APCIBASE		0x0
#define	FRODO_APCISPACE		0x20
#define	FRODO_APCI_OFFSET(x)	(FRODO_APCIBASE + ((x) * FRODO_APCISPACE))

/*
 * Other items in the Frodo part
 */

/* An mc146818-like calendar, but no battery... lame */
#define	FRODO_CALENDAR		0x80

#define	FRODO_TIMER		0xa0	/* 8254-like timer */
#define	FRODO_T1_CTR		0xa0	/* counter 1 */
#define	FRODO_T2_CTR		0xa4	/* counter 2 */
#define	FRODO_T3_CTR		0xa8	/* counter 3 */
#define	FRODO_T_CTRL		0xac	/* control register */
#define	FRODO_T_PSCALE		0xb0	/* prescaler */
#define	FRODO_T_PCOUNT		0xb4	/* precounter ? */
#define	FRODO_T_OVCOUNT		0xb8	/* overflow counter (0, 1, 2) */

#define	FRODO_PIO		0xc0	/* programmable i/o registers start
					   here */
#define	FRODO_IISR		0xc0	/* ISA Interrupt Status Register
					   (also PIR) */
#define	FRODO_IISR_SERVICE	(1<<0)	/* service switch "on" if 0 */
#define	FRODO_IISR_ILOW		(1<<1)	/* IRQ 3,4,5 or 6 on ISA if 0 */
#define	FRODO_IISR_IMID		(1<<2)	/* IRQ 7,9,10 or 11 on ISA if 0 */
#define	FRODO_IISR_IHI		(1<<3)	/* IRQ 12,13,14 or 15 on ISA if 0 */
		/* bits 4 and 5 are DN2500 SCSI interrupts */
		/* bit 6 is unused */
#define	FRODO_IISR_IOCHK	(1<<7)	/* ISA board asserted IOCHK if low */

#define	FRODO_PIO_IPR		0xc4	/* input polarity register
					   (ints 7->0) */

#define	FRODO_PIO_IELR		0xc8	/* input edge/level register */
#define	FRODO_PIO_ISA_CONTROL	0xcc	/* ISA interrupts masking */

/* This is probably not used on the 4xx */
#define	FRODO_DIAGCTL		0xd0	/* Diagnostic Control Register */

#define	FRODO_PIC_MU		0xe0	/* upper Interrupt Mask register */
#define	FRODO_PIC_ML		0xe4	/* lower Interrupt Mask register */
#define	FRODO_PIC_PU		0xe8	/* upper Interrupt Pending register */
#define	FRODO_PIC_PL		0xec	/* lower Interrupt Pending register */
#define	FRODO_PIC_IVR		0xf8	/* Interrupt Vector register */
#define	FRODO_PIC_ACK		0xf8	/* Interrupt Acknowledge */

/* Shorthand for register access. */
#define	FRODO_READ(sc, reg)		((sc)->sc_regs[(reg)])
#define	FRODO_WRITE(sc, reg, val)	(sc)->sc_regs[(reg)] = (val)

/* manipulate interrupt registers */
#define	FRODO_GETMASK(sc)						\
	((FRODO_READ((sc), FRODO_PIC_MU) << 8) | 			\
	    FRODO_READ((sc), FRODO_PIC_ML))
#define	FRODO_SETMASK(sc, val) do {					\
	FRODO_WRITE((sc), FRODO_PIC_MU, ((val) >> 8) & 0xff);		\
	FRODO_WRITE((sc), FRODO_PIC_ML, (val) & 0xff); } while (0)

#define	FRODO_GETPEND(sc)						\
	((FRODO_READ((sc), FRODO_PIC_PU) << 8) |			\
	    FRODO_READ((sc), FRODO_PIC_PL))

/*
 * Interrupt lines.  Use FRODO_INTR_BIT() below to get a bit
 * suitable for one of the interrupt mask registers.  Yes, line
 * 0 is unused.
 */
#define	FRODO_INTR_ILOW		1
#define	FRODO_INTR_IMID		2
#define	FRODO_INTR_IHI		3
#define	FRODO_INTR_SCSIDMA	4	/* DN2500 only */
#define	FRODO_INTR_SCSI		5	/* DN2500 only */
#define	FRODO_INTR_HORIZ	6
#define	FRODO_INTR_IOCHK	7
#define	FRODO_INTR_CALENDAR	8
#define	FRODO_INTR_TIMER0	9
#define	FRODO_INTR_TIMER1	10
#define	FRODO_INTR_TIMER2	11
#define	FRODO_INTR_APCI0	12
#define	FRODO_INTR_APCI1	13
#define	FRODO_INTR_APCI2	14
#define	FRODO_INTR_APCI3	15

#define	FRODO_NINTR		16

#define	FRODO_INTR_ISA(l)	((l) != 0 && (l) <= FRODO_INTR_IHI)
#define	FRODO_INTR_BIT(line)	(1 << (line))
@


1.2
log
@Preliminary support for the hp300 single ISA slot found in 4xx `t' models.
Everything works well but interrupts, where no two devices causes the frodo
chip to behave in the same way... (polling will work nicely)
@
text
@d1 1
a1 1
/*	$OpenBSD: frodoreg.h,v 1.1 1997/07/06 08:01:51 downsj Exp $	*/
@


1.1
log
@Sync with changes from NetBSD, up to 970705.

This includes all of the new frodo drivers, from Michael Smith, hacked up
by Jason R. Thorpe; other changes, mostly configuration and/or m68k
abstraction related, from Thorpe.  A few others of my own.

This compiles and runs, have not yet tested Domain kbd or apci ports.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d60 3
a62 3
#define	FRODO_IISR_ILOW		(1<<1)	/* IRQ 3,4,5 or 6 on ISA if 1 */
#define	FRODO_IISR_IMID		(1<<2)	/* IRQ 7,9,10 or 11 on ISA if 1 */
#define	FRODO_IISR_IHI		(1<<3)	/* IRQ 12,13,14 or 15 on ISA if 1 */
d71 1
a97 2
#define	FRODO_IPEND(sc)							\
	(FRODO_READ((sc), FRODO_PIC_ACK) & 0x0f)
d122 1
@

