head	1.12;
access;
symbols
	OPENBSD_5_5:1.11.0.12
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.8
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.6
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.4
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.10.0.14
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.12
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.10
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.6
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.8
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.26
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.24
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.22
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.20
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.18
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.16
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.14
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.12
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.10
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.8
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.12
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.11;

1.11
date	2011.11.01.21.20.55;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.26.05.42.10;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.03.15.52;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.30;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.06.19.53.14;	author miod;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.11.04.02.58.54;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.05.16.13.14;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.11.23.24.57;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.06.08.01.58;	author downsj;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.04.16.11.56.22;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.01.12.15.13.14;	author downsj;	state Exp;
branches;
next	;

1.3.12.1
date	2001.07.04.10.15.38;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2001.11.13.21.00.50;	author niklas;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2002.03.28.10.07.18;	author niklas;	state Exp;
branches;
next	;

1.7.2.1
date	2002.06.11.03.35.20;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: db_memrw.c,v 1.11 2011/11/01 21:20:55 miod Exp $	*/
/*	$NetBSD: db_memrw.c,v 1.5 1997/06/10 18:48:47 veego Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Gordon W. Ross and Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Interface to the debugger for virtual memory read/write.
 * This file is shared by DDB and KGDB, and must work even
 * when only KGDB is included (thus no db_printf calls).
 *
 * To write in the text segment, we have to first make
 * the page writable, do the write, then restore the PTE.
 * For writes outside the text segment, and all reads,
 * just do the access -- if it causes a fault, the debugger
 * will recover with a longjmp to an appropriate place.
 *
 * ALERT!  If you want to access device registers with a
 * specific size, then the read/write functions have to
 * make sure to do the correct sized pointer access.
 *
 * Modified from sun3 version for hp300 (and probably other m68ks, too)
 * by Jason R. Thorpe <thorpej@@NetBSD.ORG>.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>

#include <uvm/uvm_extern.h>

#include <machine/pte.h>
#include <machine/db_machdep.h>
#include <machine/cpu.h>

#include <ddb/db_access.h>

static void	db_write_text(db_addr_t, size_t, char *);

/*
 * Read bytes from kernel address space for debugger.
 * This used to check for valid PTEs, but now that
 * traps in DDB work correctly, "Just Do It!"
 */
void
db_read_bytes(addr, size, data)
	db_addr_t	addr;
	size_t		size;
	char		*data;
{
	char	*src = (char *)addr;

	if (size == 4) {
		*((int *)data) = *((int *)src);
		return;
	}

	if (size == 2) {
		*((short *)data) = *((short *)src);
		return;
	}

	while (size > 0) {
		--size;
		*data++ = *src++;
	}
}

/*
 * Write bytes somewhere in kernel text.
 * Makes text page writable temporarily.
 * We're probably a little to cache-paranoid.
 */
static void
db_write_text(addr, size, data)
	db_addr_t addr;
	size_t size;
	char *data;
{
	char *dst, *odst;
	pt_entry_t *pte, oldpte, tmppte;
	vaddr_t pgva;
	int limit;

	if (size == 0)
		return;

	dst = (char *)addr;

	do {
		/*
		 * Get the VA for the page.
		 */
		pgva = trunc_page((vaddr_t)dst);

		/*
		 * Save this destination address, for TLB
		 * flush.
		 */
		odst = dst;

		/*
		 * Compute number of bytes that can be written
		 * with this mapping and subtract it from the
		 * total size.
		 */
		limit = NBPG - ((u_long)dst & PGOFSET);
		if (limit > size)
			limit = size;
		size -= limit;

		/*
		 * Make the page writable.  Note the mapping is
		 * cache-inhibited to save hair.
		 */
		pte = kvtopte(pgva);
		oldpte = *pte;

		if ((oldpte & PG_V) == 0) {
			printf(" address %p not a valid page\n", dst);
			return;
		}

		tmppte = (oldpte & ~PG_RO) | PG_RW | PG_CI;
		*pte = tmppte;
		TBIS((vaddr_t)odst);

		/*
		 * Page is now writable.  Do as much access as we
		 * can in this page.
		 */
		for (; limit > 0; limit--)
			*dst++ = *data++;

		/*
		 * Restore the old PTE.
		 */
		*pte = oldpte;
		TBIS((vaddr_t)odst);
	} while (size != 0);

	/*
	 * Invalidate the instruction cache so our changes
	 * take effect.
	 */
	ICIA();
}

/*
 * Write bytes to kernel address space for debugger.
 */
extern char	kernel_text[], etext[];
void
db_write_bytes(addr, size, data)
	db_addr_t	addr;
	size_t	size;
	char	*data;
{
	char	*dst = (char *)addr;

	/* If any part is in kernel text, use db_write_text() */
	if ((dst < etext) && ((dst + size) > kernel_text)) {
		db_write_text(addr, size, data);
		return;
	}

	if (size == 4) {
		*((int *)dst) = *((int *)data);
		return;
	}

	if (size == 2) {
		*((short *)dst) = *((short *)data);
		return;
	}

	while (size > 0) {
		--size;
		*dst++ = *data++;
	}
}
@


1.11
log
@Drop support for the HP MMU. It was only found on two hp300 systems (models
320 and 350), which have been unsupported since a bunch of release already,
because this annoying MMU does not have TT registers (or if it does, it is
not documented) and thus went in the way of PMAP_DIRECT for hp300.
In other words: remove a bunch of code which was either #ifdef'ed out or
had no chance to run in real life.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.10 2008/06/26 05:42:10 ray Exp $	*/
@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.9 2002/03/14 03:15:52 millert Exp $	*/
a136 11

#ifdef M68K_MMU_HP
		/*
		 * Flush the supervisor side of the VAC to
		 * prevent a cache hit on the old, read-only PTE.
		 * XXX Is this really necessary, or am I just
		 * paranoid?
		 */
		if (ectype == EC_VIRT)
			DCIS();
#endif
@


1.9
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.8 2002/03/14 01:26:30 millert Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.7 2001/11/06 19:53:14 miod Exp $	*/
d84 1
a84 1
	char	*src = (char*)addr;
d87 1
a87 1
		*((int*)data) = *((int*)src);
d92 1
a92 1
		*((short*)data) = *((short*)src);
d212 1
a212 1
		*((int*)dst) = *((int*)data);
d217 1
a217 1
		*((short*)dst) = *((short*)data);
@


1.7
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.6 2001/11/04 02:58:54 miod Exp $	*/
d71 1
a71 1
static void	db_write_text __P((db_addr_t, size_t, char *));
@


1.7.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.7 2001/11/06 19:53:14 miod Exp $	*/
d71 1
a71 1
static void	db_write_text(db_addr_t, size_t, char *);
d84 1
a84 1
	char	*src = (char *)addr;
d87 1
a87 1
		*((int *)data) = *((int *)src);
d92 1
a92 1
		*((short *)data) = *((short *)src);
d212 1
a212 1
		*((int *)dst) = *((int *)data);
d217 1
a217 1
		*((short *)dst) = *((short *)data);
@


1.6
log
@hp300spu.h information not needed anymore.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.5 2001/06/05 16:13:14 millert Exp $	*/
d63 1
a63 1
#include <vm/vm.h>
@


1.5
log
@Use mi round_page() and trunc_page() macros
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.4 2001/05/11 23:24:57 millert Exp $	*/
a67 1
#include <machine/hp300spu.h>
@


1.4
log
@Kill remaining vm_offset_t and vm_size_t; NetBSD used as a guide
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.3 1997/07/06 08:01:58 downsj Exp $	*/
d128 1
a128 1
		pgva = m68k_trunc_page((u_long)dst);
@


1.3
log
@Sync with changes from NetBSD, up to 970705.

This includes all of the new frodo drivers, from Michael Smith, hacked up
by Jason R. Thorpe; other changes, mostly configuration and/or m68k
abstraction related, from Thorpe.  A few others of my own.

This compiles and runs, have not yet tested Domain kbd or apci ports.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.2 1997/04/16 11:56:22 downsj Exp $	*/
d72 1
a72 1
static void	db_write_text __P((vm_offset_t, size_t, char *));
d81 3
a83 3
	vm_offset_t	addr;
	size_t	size;
	char	*data;
d110 1
a110 1
	vm_offset_t addr;
d116 1
a116 1
	vm_offset_t pgva;
d171 1
a171 1
		TBIS((vm_offset_t)odst);
d184 1
a184 1
		TBIS((vm_offset_t)odst);
d200 1
a200 1
	vm_offset_t	addr;
@


1.3.12.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_memrw.c,v 1.3 1997/07/06 08:01:58 downsj Exp $	*/
d72 1
a72 1
static void	db_write_text __P((db_addr_t, size_t, char *));
d81 3
a83 3
	db_addr_t	addr;
	size_t		size;
	char		*data;
d110 1
a110 1
	db_addr_t addr;
d116 1
a116 1
	vaddr_t pgva;
d128 1
a128 1
		pgva = trunc_page((vaddr_t)dst);
d171 1
a171 1
		TBIS((vaddr_t)odst);
d184 1
a184 1
		TBIS((vaddr_t)odst);
d200 1
a200 1
	db_addr_t	addr;
@


1.3.12.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
#include <uvm/uvm_extern.h>
d68 1
@


1.3.12.3
log
@Merge in -current from about a week ago
@
text
@d71 1
a71 1
static void	db_write_text(db_addr_t, size_t, char *);
d84 1
a84 1
	char	*src = (char *)addr;
d87 1
a87 1
		*((int *)data) = *((int *)src);
d92 1
a92 1
		*((short *)data) = *((short *)src);
d212 1
a212 1
		*((int *)dst) = *((int *)data);
d217 1
a217 1
		*((short *)dst) = *((short *)data);
@


1.2
log
@Merge portions of NetBSD up to 970415.

This includes:
	* All of the prototyping and KNF changes.
	* The new interrupt system.
	* Portions of the Domain Keyboard support from Mike Smith.

This does not include:
	* m68k changes, namely generic dumps.

Various sundry changes and fixes by me.
@
text
@d1 2
a2 2
/*	$OpenBSD: db_memrw.c,v 1.1 1997/01/12 15:13:14 downsj Exp $	*/
/*	$NetBSD: db_memrw.c,v 1.3 1997/04/01 03:12:12 scottr Exp $	*/
d68 1
d128 1
a128 1
		pgva = hp300_trunc_page((u_long)dst);
@


1.1
log
@Mostly sync to NetBSD-current of 011196.  Compiles, links, boots to single
user.

KNOWN NOT WORKING:
	* DIO-II devices
	* Dynamic executables

NOT EVEN TRIED:
	* New config support
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: db_memrw.c,v 1.2 1996/12/09 17:38:27 thorpej Exp $	*/
d81 2
a82 2
	register size_t	size;
	register char	*data;
d84 1
a84 1
	register char	*src = (char*)addr;
d110 2
a111 2
	register size_t size;
	register char *data;
d113 1
a113 1
	register char *dst, *odst;
d200 2
a201 2
	register size_t	size;
	register char	*data;
d203 1
a203 1
	register char	*dst = (char *)addr;
@
