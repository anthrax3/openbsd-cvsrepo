head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	UBC_SYNC_B:1.4
	SMP:1.4.0.2
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	97.07.14.08.13.31;	author downsj;	state dead;
branches;
next	1.3;

1.3
date	97.01.17.08.32.42;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.04.25.06.37.13;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@/*	$OpenBSD: dca.c,v 1.3 1997/01/17 08:32:42 downsj Exp $	*/
/*	$NetBSD: dca.c,v 1.10 1996/10/06 01:42:48 mycroft Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dca.c	8.1 (Berkeley) 6/10/93
 */

#ifdef DCACONSOLE
#include <sys/param.h>
#include <dev/cons.h>

#include <hp300/dev/dcareg.h>
#include <hp300/stand/consdefs.h>
#include <hp300/stand/samachdep.h>

/* If not using 4.4 devs */
#ifndef dca_reset
#define dca_id dca_irid
#define dca_reset dca_id
#endif

struct dcadevice *dcacnaddr = 0;

#define DCACONSCODE	9	/* XXX */

void
dcaprobe(cp)
	struct consdev *cp;
{
	register struct dcadevice *dca;

	dcacnaddr = (struct dcadevice *) sctoaddr(DCACONSCODE);
	if (badaddr((char *)dcacnaddr)) {
		cp->cn_pri = CN_DEAD;
		return;
	}
#ifdef FORCEDCACONSOLE
	cp->cn_pri = CN_REMOTE;
#else
	dca = dcacnaddr;
	switch (dca->dca_id) {
	case DCAID0:
	case DCAID1:
		cp->cn_pri = CN_NORMAL;
		break;
	case DCAREMID0:
	case DCAREMID1:
		cp->cn_pri = CN_REMOTE;
		break;
	default:
		cp->cn_pri = CN_DEAD;
		break;
	}

#endif
	curcons_scode = DCACONSCODE;
}

void
dcainit(cp)
	struct consdev *cp;
{
	register struct dcadevice *dca = dcacnaddr;

	dca->dca_reset = 0xFF;
	DELAY(100);
	dca->dca_ic = 0;
	dca->dca_cfcr = CFCR_DLAB;
	dca->dca_data = DCABRD(9600) & 0xFF;
	dca->dca_ier = DCABRD(9600) >> 8;
	dca->dca_cfcr = CFCR_8BITS;
	dca->dca_fifo =
	    FIFO_ENABLE | FIFO_RCV_RST | FIFO_XMT_RST | FIFO_TRIGGER_1;
	dca->dca_mcr = MCR_DTR | MCR_RTS;
}

/* ARGSUSED */
#ifndef SMALL
int
dcagetchar(dev)
	dev_t dev;
{
	register struct dcadevice *dca = dcacnaddr;
	short stat;
	int c;

	if (((stat = dca->dca_lsr) & LSR_RXRDY) == 0)
		return(0);
	c = dca->dca_data;
	return(c);
}
#else
int
dcagetchar(dev)
	dev_t dev;
{
	return(0);
}
#endif

/* ARGSUSED */
void
dcaputchar(dev, c)
	dev_t dev;
	register int c;
{
	register struct dcadevice *dca = dcacnaddr;
	register int timo;
	short stat;

	/* wait a reasonable time for the transmitter to come ready */
	timo = 50000;
	while (((stat = dca->dca_lsr) & LSR_TXRDY) == 0 && --timo)
		;
	dca->dca_data = c;
	/* wait for this transmission to complete */
	timo = 1000000;
	while (((stat = dca->dca_lsr) & LSR_TXRDY) == 0 && --timo)
		;
}
#endif
@


1.3
log
@hp300 bootblocks, sync'd with NetBSD 011697, with changes and a new build
method.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2
log
@sync w/ Net 960424
@
text
@d1 2
a2 1
/*	$NetBSD: dca.c,v 1.9 1996/02/26 21:51:25 thorpej Exp $	*/
d108 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: dca.c,v 1.8 1995/10/04 06:54:44 thorpej Exp $	*/
d59 2
d67 1
a67 1
	dcacnaddr = (struct dcadevice *) sctoaddr(CONSCODE);
d91 1
a91 1
	curcons_scode = CONSCODE;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
