head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	UBC_SYNC_B:1.6
	SMP:1.6.0.2
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	97.07.14.08.13.32;	author downsj;	state dead;
branches;
next	1.5;

1.5
date	97.04.16.11.56.37;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.02.03.04.48.02;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.08.32.43;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.04.25.06.37.14;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@/*	$OpenBSD: dcm.c,v 1.5 1997/04/16 11:56:37 downsj Exp $	*/
/*	$NetBSD: dcm.c,v 1.2 1997/04/14 05:58:32 scottr Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dcm.c	8.1 (Berkeley) 6/10/93
 */

#ifdef DCMCONSOLE
#include <sys/param.h>
#include <dev/cons.h>

#include <hp300/dev/dcmreg.h>

#include <hp300/stand/consdefs.h>
#include <hp300/stand/samachdep.h>
#include <hp300/stand/device.h>

struct dcmdevice *dcmcnaddr = NULL;

#define	DCMCONUNIT	1	/* XXX */

void
dcmprobe(cp)
	struct consdev *cp;
{
	extern struct hp_hw sc_table[];
	register struct hp_hw *hw;
	register struct dcmdevice *dcm;

	for (hw = sc_table; hw < &sc_table[MAXCTLRS]; hw++)
		if (HW_ISDEV(hw, D_COMMDCM) && !badaddr((caddr_t)hw->hw_kva))
			break;
	if (!HW_ISDEV(hw, D_COMMDCM)) {
		cp->cn_pri = CN_DEAD;
		return;
	}
	dcmcnaddr = (struct dcmdevice *) hw->hw_kva;

#ifdef FORCEDCMCONSOLE
	cp->cn_pri = CN_REMOTE;
#else
	dcm = dcmcnaddr;
	switch (dcm->dcm_rsid) {
	case DCMID:
		cp->cn_pri = CN_NORMAL;
		break;
	case DCMID|DCMCON:
		cp->cn_pri = CN_REMOTE;
		break;
	default:
		cp->cn_pri = CN_DEAD;
		break;
	}

	curcons_scode = hw->hw_sc;
#endif
}

void
dcminit(cp)
	struct consdev *cp;
{
	register struct dcmdevice *dcm = dcmcnaddr;
	register int port = DCMCONUNIT;

	dcm->dcm_ic = IC_ID;
	while (dcm->dcm_thead[port].ptr != dcm->dcm_ttail[port].ptr)
		;
	dcm->dcm_data[port].dcm_baud = BR_9600;
	dcm->dcm_data[port].dcm_conf = LC_8BITS | LC_1STOP;
	SEM_LOCK(dcm);
	dcm->dcm_cmdtab[port].dcm_data |= CT_CON;
	dcm->dcm_cr |= (1 << port);
	SEM_UNLOCK(dcm);
	DELAY(15000);
}

/* ARGSUSED */
#ifndef SMALL
int
dcmgetchar(dev)
	dev_t dev;
{
	register struct dcmdevice *dcm = dcmcnaddr;
	register struct dcmrfifo *fifo;
	register struct dcmpreg *pp;
	register unsigned head;
	int c, stat, port;

	port = DCMCONUNIT;
	pp = dcm_preg(dcm, port);
	head = pp->r_head & RX_MASK;
	if (head == (pp->r_tail & RX_MASK))
		return(0);
	fifo = &dcm->dcm_rfifos[3-port][head>>1];
	c = fifo->data_char;
	stat = fifo->data_stat;
	pp->r_head = (head + 2) & RX_MASK;
	SEM_LOCK(dcm);
	stat = dcm->dcm_iir;
	SEM_UNLOCK(dcm);
	return(c);
}
#else
int
dcmgetchar(dev)
	dev_t dev;
{
	return(0);
}
#endif

/* ARGSUSED */
void
dcmputchar(dev, c)
	dev_t dev;
	register int c;
{
	register struct dcmdevice *dcm = dcmcnaddr;
	register struct dcmpreg *pp;
	register int timo;
	unsigned tail;
	int port, stat;

	port = DCMCONUNIT;
	pp = dcm_preg(dcm, port);
	tail = pp->t_tail & TX_MASK;
	timo = 50000;
	while (tail != (pp->t_head & TX_MASK) && --timo)
		;
	dcm->dcm_tfifos[3-port][tail].data_char = c;
	pp->t_tail = tail = (tail + 1) & TX_MASK;
	SEM_LOCK(dcm);
	dcm->dcm_cmdtab[port].dcm_data |= CT_TX;
	dcm->dcm_cr |= (1 << port);
	SEM_UNLOCK(dcm);
	timo = 1000000;
	while (tail != (pp->t_head & TX_MASK) && --timo)
		;
	SEM_LOCK(dcm);
	stat = dcm->dcm_iir;
	SEM_UNLOCK(dcm);
}
#endif
@


1.5
log
@Merge portions of NetBSD up to 970415.

This includes:
	* All of the prototyping and KNF changes.
	* The new interrupt system.
	* Portions of the Domain Keyboard support from Mike Smith.

This does not include:
	* m68k changes, namely generic dumps.

Various sundry changes and fixes by me.
@
text
@d1 1
a1 1
/*	$OpenBSD: dcm.c,v 1.4 1997/02/03 04:48:02 downsj Exp $	*/
@


1.4
log
@Merge new config(8) support from NetBSD, by Jason Thorpe.
Also add siginfo glue, BOOT_CONFIG, and various other changes.
@
text
@d1 2
a2 2
/*	$OpenBSD: dcm.c,v 1.3 1997/01/17 08:32:43 downsj Exp $	*/
/*	$NetBSD: dcm.c,v 1.10 1997/01/30 10:32:52 thorpej Exp $	*/
d56 1
a56 1
#define	DCMCONUNIT	0	/* XXX */
d75 3
d92 1
@


1.3
log
@hp300 bootblocks, sync'd with NetBSD 011697, with changes and a new build
method.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: dcm.c,v 1.9 1996/02/27 22:11:44 scottr Exp $	*/
a47 1
#include <hp300/dev/device.h>
d49 1
d52 1
@


1.2
log
@sync w/ Net 960424
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: dcm.c,v 1.8 1995/10/04 06:54:45 thorpej Exp $	*/
d54 2
d94 1
a94 1
	register int port = CONUNIT;
d120 1
a120 1
	port = CONUNIT;
d155 1
a155 1
	port = CONUNIT;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
