head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.14
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.12
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2011.08.18.20.02.58;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.13.00.13.52;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.17.06.31.10;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.04.21.13.37;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.02.23.27.45;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.31;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.08.16.09.43.08;	author downsj;	state Exp;
branches
	1.1.4.1
	1.1.14.1;
next	;

1.1.4.1
date	2002.03.28.10.07.19;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.06.07.11.11.35;	author ho;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2004.02.19.10.48.39;	author niklas;	state Exp;
branches;
next	;

1.1.14.1
date	2002.06.11.03.35.20;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: conf.c,v 1.7 2011/08/18 20:02:58 miod Exp $	*/
/*	$NetBSD: conf.c,v 1.12 1996/10/14 07:29:15 thorpej Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)conf.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>

#include <lib/libsa/stand.h>

#include "samachdep.h"

#include <lib/libsa/cd9660.h>

int	debug = 0;	/* XXX */

/*
 * Device configuration
 */
int	sdstrategy(void *, int, daddr32_t, size_t, void *, size_t *);
int	sdopen(struct open_file *, ...);
int	sdclose(struct open_file *);
#define	sdioctl		noioctl

#define xxstrategy	\
	(int (*)(void *, int, daddr32_t, size_t, void *, size_t *))nullsys
#define xxopen		(int (*)(struct open_file *, ...))nodev
#define xxclose		(int (*)(struct open_file *))nullsys

struct devsw devsw[] = {
	{ "??",	xxstrategy,	xxopen,	xxclose,	noioctl }, /*0*/
	{ "??",	xxstrategy,	xxopen,	xxclose,	noioctl }, /*1*/
	{ "??",	xxstrategy,	xxopen,	xxclose,	noioctl }, /*2*/
	{ "??",	xxstrategy,	xxopen,	xxclose,	noioctl }, /*3*/
	{ "sd",	sdstrategy,	sdopen,	sdclose,	sdioctl }, /*4*/
};
int	ndevs = (sizeof(devsw) / sizeof(devsw[0]));

/*
 * Physical unit/lun detection.
 */
int	punitzero(int, int, int *);

int
punitzero(int ctlr, int slave, int *punit)
{

	*punit = 0;
	return (0);
}

#define	xxpunit		punitzero
#define	sdpunit		punitzero

struct punitsw punitsw[] = {
	{ xxpunit },
	{ xxpunit },
	{ xxpunit },
	{ xxpunit },
	{ sdpunit },
};

/*
 * Filesystem configuration
 */
struct fs_ops file_system_cd9660[] = {
	{ cd9660_open, cd9660_close, cd9660_read, cd9660_write, cd9660_seek,
	  cd9660_stat },
};

struct fs_ops file_system[2];
int	nfsys = 1;		/* default; changed per device type. */
@


1.7
log
@So, it turns out that models 362 and 382 built-in frame buffer only shows up
in DIO-II space, as a fat device spanning four select codes (i.e. 16MB of
memory). This is way too much for an at-most 2 Mpixel 8bit frame buffer, and
it turns out that this is because the device provides both a regular DIO-II
frame buffer (spanning two select codes) and a regular STI frame buffer
(spanning the other two select codes).
This commit introduces a straightforward sti@@dio attachment to get a working
sti(4) and wsdisplay(4) in a ridiculously small number of lines; however
the console code needs some changes to avoid duplicating globals.

While there, add sti@@dio support for the bootblocks, and I couldn't help
myself but clean the most rotten parts of them, and try to have them reuse
various files in sys/arch/hp300/dev instead of rolling their outdated ones.

Tested on a real 382 with the low-resolution frame buffer:
sti0 at dio0 scode 132: rev 8.02;129, ID 0x27134CB440A00499
sti0: 382V, 2048x512 frame buffer, 640x480x8 display
sti0: 8x16 font type 1, 16 bpc, charset 0-255
wsdisplay0 at sti0 mux 1: console (std, vt100 emulation)

Boot blocks updates tested on DIO-II 425t (serial/glass console), SGC 425e
(serial/glass console) and 382 (serial/glass console). And will be tested
on SGC 425t soon as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2011/03/13 00:13:52 deraadt Exp $	*/
@


1.6
log
@Change daddr_t to daddr32_t.  The bootblocks on our architectures only
do 32-bit block spanning.  If later on we get some that can/should do
64-bit, that can be done now using daddr64_t (but of course, we are taking
this step to finalize the daddr_t 64-bit conversion).
ok miod krw
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2006/08/17 06:31:10 miod Exp $	*/
a89 1
int	npunit = (sizeof(punitsw) / sizeof(punitsw[0]));
@


1.5
log
@Large cleanup of the bootblocks, including ansi protos and de-register,
removal of unused hil stuff, oversimplification of the stand ite code
(including dio frame buffer common code factorization), and sgc frame
buffer console support, at last.

This shaves ~1800 bytes off SYS_UBOOT and ~500 bytes of SYS_CDBOOT
despite the addition of the sgc code.

Tested on dca, hyper, topcat and sti.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2003/12/04 21:13:37 miod Exp $	*/
d48 1
a48 1
int	sdstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d54 1
a54 1
	(int (*)(void *, int, daddr_t, size_t, void *, size_t *))nullsys
@


1.4
log
@Typos
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2003/06/02 23:27:45 millert Exp $	*/
d73 1
a73 2
punitzero(ctlr, slave, punit)
	int ctlr, slave, *punit;
a101 11


/*
 * Initialize controllers
 * 
 * XXX this should be a table
 */
void ctlrinit()
{
	scsiinit();
}
@


1.3
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2002/03/14 01:26:31 millert Exp $	*/
d106 1
a106 1
 * Inititalize controllers
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 1999/08/16 09:43:08 downsj Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.1
log
@Implement real CD booting, aka SYS_CDBOOT, the LIF file small enough to
fit in the begining of an ISO9660 image...
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 1997/09/14 07:02:05 downsj Exp $	*/
d52 3
a54 3
int	sdstrategy __P((void *, int, daddr_t, size_t, void *, size_t *));
int	sdopen __P((struct open_file *, ...));
int	sdclose __P((struct open_file *));
d58 3
a60 3
	(int (*) __P((void *, int, daddr_t, size_t, void *, size_t *)))nullsys
#define xxopen		(int (*) __P((struct open_file *, ...)))nodev
#define xxclose		(int (*) __P((struct open_file *)))nullsys
d74 1
a74 1
int	punitzero __P((int, int, int *));
@


1.1.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 1999/08/16 09:43:08 downsj Exp $	*/
d52 3
a54 3
int	sdstrategy(void *, int, daddr_t, size_t, void *, size_t *);
int	sdopen(struct open_file *, ...);
int	sdclose(struct open_file *);
d58 3
a60 3
	(int (*)(void *, int, daddr_t, size_t, void *, size_t *))nullsys
#define xxopen		(int (*)(struct open_file *, ...))nodev
#define xxclose		(int (*)(struct open_file *))nullsys
d74 1
a74 1
int	punitzero(int, int, int *);
@


1.1.4.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d52 3
a54 3
int	sdstrategy(void *, int, daddr_t, size_t, void *, size_t *);
int	sdopen(struct open_file *, ...);
int	sdclose(struct open_file *);
d58 3
a60 3
	(int (*)(void *, int, daddr_t, size_t, void *, size_t *))nullsys
#define xxopen		(int (*)(struct open_file *, ...))nodev
#define xxclose		(int (*)(struct open_file *))nullsys
d74 1
a74 1
int	punitzero(int, int, int *);
@


1.1.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1.4.1 2002/03/28 10:07:19 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d106 1
a106 1
 * Initialize controllers
@


