head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.6.0.20
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.18
	OPENBSD_5_0:1.6.0.16
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.14
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.12
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.10
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.26
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.24
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.22
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.20
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.18
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.16
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.14
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@# @;


1.10
date	2014.03.18.22.36.33;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2013.02.02.13.34.29;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2013.01.01.17.17.44;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.21.14.46.18;	author pascal;	state Exp;
branches;
next	1.6;

1.6
date	2007.11.26.10.01.42;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.17.06.31.10;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.20.15.33.30;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	99.08.16.09.43.11;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.09.14.12.54.29;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.07.14.08.14.54;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: Makefile,v 1.9 2013/02/02 13:34:29 miod Exp $

PROG=	uboot
OBJCOPY?=	objcopy
SIZE?=	size

NOMAN=
NOPIE=

CPPFLAGS+=	${SA_CPPFLAGS}

CFLAGS+=-I${.CURDIR}/../include \
	-I${.CURDIR}/../libsa -I${.CURDIR}/../.. -I${.CURDIR}/../../.. \
	-I${.CURDIR}/../../../..

AFLAGS=	-x assembler-with-cpp -traditional-cpp -I${.CURDIR}/../include \
	-I${.CURDIR}/../libsa -I${.CURDIR}/../.. -I${.CURDIR}/../../.. \
	-I${.CURDIR}/../../../..

SRCS=	srt0.S uboot.c tgets.c netio.c clock.c conf.c prf.c

LIBS=	${LIBCOMMON} ${LIBSAZ} ${LIBZ}

CLEANFILES+=	${PROG}.bin ${PROG}.lif

uboot.lif:	${PROG}
	${OBJCOPY} -S -O binary ${PROG} ${PROG}.bin
	${MKBOOT_PROG} -l 0x${RELOC} ${PROG}.bin $@@

uboot:	${OBJS} ${LIBS}
	${LD} -N -Ttext ${RELOC} -e begin --warn-common ${OBJS} ${LIBS} \
	    `${CC} -print-libgcc-file-name` -o $@@
	@@${SIZE} $@@
	@@echo $@@ total size should not exceed 1044480 bytes

install:	uboot.lif ${MKBOOT_PROG}
	${INSTALL} -d -m 755 -o ${BINOWN} -g ${BINGRP} \
	    ${DESTDIR}/usr/mdec/rbootd
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 444 uboot.lif \
	    ${DESTDIR}/usr/mdec
	rm -f ${DESTDIR}/usr/mdec/hdboot
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/hdboot
	rm -f ${DESTDIR}/usr/mdec/boothd
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/boothd
	rm -f ${DESTDIR}/usr/mdec/sdboot
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/sdboot
	rm -f ${DESTDIR}/usr/mdec/bootsd
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/bootsd
	rm -f ${DESTDIR}/usr/mdec/ctboot
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/ctboot
	rm -f ${DESTDIR}/usr/mdec/bootct
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/bootct
	rm -f ${DESTDIR}/usr/mdec/rbootd/SYS_UBOOT
	ln ${DESTDIR}/usr/mdec/uboot.lif ${DESTDIR}/usr/mdec/rbootd/SYS_UBOOT

.include <bsd.prog.mk>
@


1.9
log
@hp300 ELF bits. Requires many device and prom related structs to now be declared
as packed due to them containing 32-bit types at 16-bit but not 32-bit aligned
offsets. The boot block updates (especially mkboot) come straight from NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2013/01/01 17:17:44 miod Exp $
@


1.8
log
@Define _STANDALONE, not STANDALONE, in the hp300 bootblocks, to follow the
common (and expected) practice. This exposes a flaw, in that mkboot, a host
tool, gets built with boot block settings (and won't compile if _STANDALONE
is defined). Fix this by using different set of CPPFLAGS for host tools and
boot blocks. While there, avoid sourcing ../Makefile.inc twice.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2012/08/21 14:46:18 pascal Exp $
d4 2
d24 1
a24 1
CLEANFILES+=	uboot.lif
d26 3
a28 2
uboot.lif:	uboot
	${MKBOOT_PROG} uboot $@@
d31 1
a31 1
	${LD} -N -T ${RELOC} -e begin ${OBJS} ${LIBS} \
d33 1
a33 1
	@@size $@@
@


1.7
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2007/11/26 10:01:42 deraadt Exp $
d8 1
a8 1
.include "${.CURDIR}/../Makefile.inc"
@


1.6
log
@More LIBKERN bits that go away
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2006/08/17 06:31:10 miod Exp $
d6 1
@


1.5
log
@Large cleanup of the bootblocks, including ansi protos and de-register,
removal of unused hil stuff, oversimplification of the stand ite code
(including dio frame buffer common code factorization), and sgc frame
buffer console support, at last.

This shaves ~1800 bytes off SYS_UBOOT and ~500 bytes of SYS_CDBOOT
despite the addition of the sgc code.

Tested on dca, hyper, topcat and sti.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2005/02/20 15:33:30 miod Exp $
d19 1
a19 1
LIBS=	${LIBCOMMON} ${LIBSAZ} ${LIBZ} ${LIBKERN}
@


1.4
log
@Link uboot with libgcc for quad arithmetic now that gcc won't emit these
instructions natively.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1999/08/16 09:43:11 downsj Exp $
d7 3
a9 1
CFLAGS= -O2 -msoft-float -I${.CURDIR}/../include \
d17 1
a17 1
SRCS=	srt0.S uboot.c tgets.c netio.c clock.c conf.c
a19 2

${OBJS}:	${.CURDIR}/../Makefile.inc
@


1.3
log
@Implement real CD booting, aka SYS_CDBOOT, the LIF file small enough to
fit in the begining of an ISO9660 image...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/09/14 12:54:29 downsj Exp $
d27 2
a28 1
	${LD} -N -T ${RELOC} -e begin ${OBJS} ${LIBS} -o $@@
@


1.2
log
@Make and install a raw version of uboot, too.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1997/07/14 08:14:54 downsj Exp $
d7 1
a7 1
CFLAGS= -O3 -msoft-float -I${.CURDIR}/../include \
d17 1
a17 1
LIBS=	${LIBCOMMON} ${LIBSA} ${LIBZ} ${LIBKERN}
d21 1
a21 1
CLEANFILES+=	uboot.lif uboot.raw
a25 3
uboot.raw:	uboot
	${STRIPBOOT_PROG} uboot $@@

d31 1
a31 1
install:	uboot.lif uboot.raw ${MKBOOT_PROG}
a34 2
	    ${DESTDIR}/usr/mdec
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 444 uboot.raw \
@


1.1
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@d1 1
a1 1
#	$OpenBSD$
d21 1
a21 1
CLEANFILES+=	uboot.lif
d26 3
d34 1
a34 1
install:	uboot.lif ${MKBOOT_PROG}
d38 2
@
