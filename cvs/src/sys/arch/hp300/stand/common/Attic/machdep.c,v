head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.4
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_5_0:1.7.0.22
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.20
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.18
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.14
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.24
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.22
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.20
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.18
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.8
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2013.02.02.13.34.29;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2011.08.18.19.54.19;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.17.06.31.10;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.31.17.59.47;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.22.00.42.16;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.27.46;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.05.10.11.31.19;	author downsj;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	97.11.06.19.42.43;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.07.14.08.14.25;	author downsj;	state Exp;
branches;
next	;

1.3.8.1
date	2003.06.07.11.11.35;	author ho;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: machdep.c,v 1.9 2013/02/02 13:34:29 miod Exp $	*/
/*	$NetBSD: machdep.c,v 1.4 1997/06/28 07:20:25 thorpej Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: machdep.c 1.10 92/06/18
 *
 *	@@(#)machdep.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>

#include <lib/libsa/stand.h>

#include "samachdep.h"

char *
getmachineid()
{
	extern int machineid, mmuid;
	char *cp;

	switch (machineid) {
	case HP_320:
		cp = "320"; break;
	case HP_330:
		cp = "318/319/330"; break;
	case HP_340:
		cp = "340"; break;
	case HP_345:
		cp = "345"; break;
	case HP_350:
		cp = "350"; break;
	case HP_36X:
		/* bootblocks do not tell 360 apart from 362 at the moment */
		cp = "360/362"; break;
	case HP_370:
		cp = "370"; break;
	case HP_375:
		cp = "375"; break;
	case HP_380:
		cp = "380"; break;
	case HP_382:
		cp = "382"; break;
	case HP_385:
		cp = "385"; break;
	case HP_400:
		cp = "400"; break;
	case HP_425:
		switch (mmuid) {
		case MMUID_425_T:
			cp = "425t"; break;
		case MMUID_425_S:
			cp = "425s"; break;
		case MMUID_425_E:
			cp = "425e"; break;
		default:
			cp = "425"; break;
		}
		break;
	case HP_433:
		switch (mmuid) {
		case MMUID_433_T:
			cp = "433t"; break;
		case MMUID_433_S:
			cp = "433s"; break;
		default:
			cp = "433"; break;
		}
		break;
	default:
		cp = "???"; break;
	}
	return(cp);
}

int userom;

struct trapframe {
	int dregs[8];
	int aregs[8];
	int whoknows;
	short sr;
	int pc;
	short frame;
};

int	trap(struct trapframe *);

int
trap(fp)
	struct trapframe *fp;
{
	static int intrap = 0;

	if (intrap)
		return(0);
	intrap = 1;

#if 0
	userom = 1;
#endif

	printf("Got unexpected trap: format=%x vector=%x ps=%x pc=%x\n",
		  (fp->frame>>12)&0xF, fp->frame&0xFFF, fp->sr, fp->pc);
	printf("dregs: %x %x %x %x %x %x %x %x\n",
	       fp->dregs[0], fp->dregs[1], fp->dregs[2], fp->dregs[3],
	       fp->dregs[4], fp->dregs[5], fp->dregs[6], fp->dregs[7]);
	printf("aregs: %x %x %x %x %x %x %x %x\n",
	       fp->aregs[0], fp->aregs[1], fp->aregs[2], fp->aregs[3],
	       fp->aregs[4], fp->aregs[5], fp->aregs[6], fp->aregs[7]);
	printf("bytes at pc: %x %x %x %x %x %x\n",
	    ((char *)fp->pc)[0], ((char *)fp->pc)[1], ((char *)fp->pc)[2],
	    ((char *)fp->pc)[3], ((char *)fp->pc)[4], ((char *)fp->pc)[5]);

#if 0
	userom = 0;
#endif

	intrap = 0;

	return(0);
}

#define ROWS	24
#define COLS	80

void
romputchar(int c)
{
	static char buf[COLS];
	static int col = 0, row = 0;
	int i;

	switch (c) {
	case '\0':
		break;
	case '\r':
		break;	/* ignore */
	case '\n':
		for (i = col; i < COLS-1; i++)
			buf[i] = ' ';
		buf[i] = '\0';
		romout(row, buf);
		col = 0;
		if (++row == ROWS)
			row = 0;
		break;

	case '\t':
		do {
			romputchar(' ');
		} while (col & 7);
		break;

	default:
		buf[col] = c;
		if (++col == COLS-1)
			romputchar('\n');
		break;
	}
}

void
machdep_start(char *entry, int howto, char *loadaddr, char *ssym, char *esym)
{
	/* Fix what we were passed in from exec() */
#define	round_to_size(x) (((int)(x) + sizeof(int) - 1) & ~(sizeof(int) - 1))
	esym = (char *)round_to_size(esym - (char *)loadaddr);
#undef round_to_size

	__asm __volatile ("movl %0,%%d7" : : "m" (howto));
	__asm __volatile ("movl %0,%%d6" : : "m" (opendev));
	__asm __volatile ("movl %0,%%a5" : : "a" (loadaddr));
	__asm __volatile ("movl %0,%%a4" : : "a" (esym));
	(*((int (*)(void))entry))();
}
@


1.9
log
@hp300 ELF bits. Requires many device and prom related structs to now be declared
as packed due to them containing 32-bit types at 16-bit but not 32-bit aligned
offsets. The boot block updates (especially mkboot) come straight from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.8 2011/08/18 19:54:19 miod Exp $	*/
@


1.8
log
@Because model 362 does not have an SGC bus (or a blind, deaf and mute one),
there is no way we can tell models 360 and 362 apart by probing for an SGC
bus, or for a frodo(4) chip since of the `lil' black swan' 3x2 models, only
model 382 has frodo. So don't bother trying to tell models 360 and 362
apart, and use a common 36X symbol. No functional change except for useless
code removal.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.7 2006/08/17 06:31:10 miod Exp $	*/
a198 1
	entry = loadaddr;
d203 4
a206 4
	__asm __volatile ("movl %0,d7" : : "m" (howto));
	__asm __volatile ("movl %0,d6" : : "m" (opendev));
	__asm __volatile ("movl %0,a5" : : "a" (loadaddr));
	__asm __volatile ("movl %0,a4" : : "a" (esym));
@


1.7
log
@Large cleanup of the bootblocks, including ansi protos and de-register,
removal of unused hil stuff, oversimplification of the stand ite code
(including dio frame buffer common code factorization), and sgc frame
buffer console support, at last.

This shaves ~1800 bytes off SYS_UBOOT and ~500 bytes of SYS_CDBOOT
despite the addition of the sgc code.

Tested on dca, hyper, topcat and sti.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.6 2005/12/31 17:59:47 miod Exp $	*/
d65 3
a67 6
	case HP_360:
		cp = "360"; break;
#if 0	/* bootblocks do not tell 360 apart from 362 at the moment */
	case HP_362:
		cp = "362"; break;
#endif
@


1.6
log
@Sync with recent kernel changes: recognize more models, use the same logic
to pick apci as a console on 425e. Crank version.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.5 2005/04/22 00:42:16 miod Exp $	*/
d44 2
d122 2
d141 1
a141 1
	       fp->dregs[0], fp->dregs[1], fp->dregs[2], fp->dregs[3], 
d144 1
a144 1
	       fp->aregs[0], fp->aregs[1], fp->aregs[2], fp->aregs[3], 
d146 3
d155 1
d163 1
a163 2
romputchar(c)
	int c;
d199 1
a199 5
machdep_start(entry, howto, loadaddr, ssym, esym)
	char *entry;
	int howto; 
	char *loadaddr;
	char *ssym, *esym; 
a208 1
	__asm __volatile ("movl %0,d5" : : "m" (cons_scode));
d211 1
a211 1
	(*((int (*)())entry))();
@


1.5
log
@Pass -Wall, complete prototypes, some KNF; no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.4 2003/06/02 23:27:46 millert Exp $	*/
d65 4
d75 2
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.3 1998/05/10 11:31:19 downsj Exp $	*/
d114 1
@


1.3
log
@* Remove stupid, non-working ROM printf()s from apci.c
* Add 425e autodetection.
* Increment version number.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.2 1997/11/06 19:42:43 millert Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3.8.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.3 1998/05/10 11:31:19 downsj Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@Idnetify/support hp385 (33Mhz 68040)
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.1 1997/07/14 08:14:25 downsj Exp $	*/
d85 2
@


1.1
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@d1 1
a1 1
/*	$OpenBSD: machdep.c,v 1.7 1997/07/13 09:43:31 downsj Exp $	*/
d75 2
@
