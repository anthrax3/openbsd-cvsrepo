head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.22
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.22
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.32;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2011.08.18.20.02.58;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.17.06.31.10;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.14.21.05.44;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.02.23.27.46;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.31;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.07.14.08.14.35;	author downsj;	state Exp;
branches
	1.1.12.1
	1.1.22.1;
next	;

1.1.12.1
date	2002.03.28.10.07.19;	author niklas;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2003.06.07.11.11.35;	author ho;	state Exp;
branches;
next	;

1.1.22.1
date	2002.06.11.03.35.20;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: itevar.h,v 1.6 2011/08/18 20:02:58 miod Exp $	*/
/*	$NetBSD: itevar.h,v 1.1 1996/03/03 04:23:42 thorpej Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: itevar.h 1.15 92/12/20$
 *
 *	@@(#)itevar.h	8.1 (Berkeley) 6/10/93
 */

/*
 * Standalone version of hp300 ITE.
 */

struct ite_data;

typedef	void (*ite_windowmover)(struct ite_data *, int, int, int, int, int,
	    int, int);

struct ite_data {
	int	alive;
	int	scode;			/* DIO select code or SGC slot # */
	struct  itesw *isw;
	caddr_t regbase, fbbase;
	short	curx, cury;
	short   cursorx, cursory;
	short   cblankx, cblanky;
	short	rows, cols;
	short   cpl;
	short	dheight, dwidth;
	short	fbheight, fbwidth;
	short	ftheight, ftwidth;
	short	fontx, fonty;
	short	planemask;
	ite_windowmover bmv;
};

struct itesw {
	int	ite_hwid;
	int	(*ite_probe)(struct ite_data *);
	void	(*ite_init)(struct ite_data *);
	void	(*ite_clear)(struct ite_data *, int, int, int, int);
	void	(*ite_putc)(struct ite_data *, int, int, int);
	void	(*ite_cursor)(struct ite_data *, int);
	void	(*ite_scroll)(struct ite_data *);
};

/*
 * X and Y location of character 'c' in the framebuffer, in pixels.
 */
#define	charX(ip,c)	\
	(((c) % (ip)->cpl) * (ip)->ftwidth + (ip)->fontx)

#define	charX1bpp(ip,c)	\
	(((c) % (ip)->cpl) * ((((ip)->ftwidth + 7) / 8) * 8) + (ip)->fontx)

#define	charY(ip,c)	\
	(((c) / (ip)->cpl) * (ip)->ftheight + (ip)->fonty)

/* Replacement Rules */
#define RR_CLEAR		0x0
#define RR_COPY			0x3
#define RR_XOR			0x6
#define RR_COPYINVERTED  	0xc

#define DRAW_CURSOR	0x00
#define ERASE_CURSOR    0x01
#define MOVE_CURSOR	0x02

extern	struct ite_data ite_data[];
extern	struct itesw itesw[];
extern	int nitesw;

/*
 * Prototypes.
 */
void	ite_fontinfo(struct ite_data *);
void	ite_fontinit1bpp(struct ite_data *);
void	ite_fontinit8bpp(struct ite_data *);
void	ite_dio_clear(struct ite_data *, int, int, int, int);
void	ite_dio_cursor(struct ite_data *, int);
void	ite_dio_putc1bpp(struct ite_data *, int, int, int);
void	ite_dio_putc8bpp(struct ite_data *, int, int, int);
void	ite_dio_scroll(struct ite_data *);
void	ite_dio_windowmove1bpp(struct ite_data *, int, int, int, int,
	    int, int, int);

/*
 * Framebuffer-specific ITE prototypes.
 */
void	topcat_init(struct ite_data *);
void	gbox_init(struct ite_data *);
void	gbox_scroll(struct ite_data *);
void	rbox_init(struct ite_data *);
void	dvbox_init(struct ite_data *);
void	hyper_init(struct ite_data *);
void	tvrx_init(struct ite_data *);

int	sti_dio_probe(struct ite_data *);
void	sti_iteinit_dio(struct ite_data *);
void	sti_iteinit_sgc(struct ite_data *);
void	sti_clear(struct ite_data *, int, int, int, int);
void	sti_putc(struct ite_data *, int, int, int);
void	sti_cursor(struct ite_data *, int);
void	sti_scroll(struct ite_data *);
@


1.6
log
@So, it turns out that models 362 and 382 built-in frame buffer only shows up
in DIO-II space, as a fat device spanning four select codes (i.e. 16MB of
memory). This is way too much for an at-most 2 Mpixel 8bit frame buffer, and
it turns out that this is because the device provides both a regular DIO-II
frame buffer (spanning two select codes) and a regular STI frame buffer
(spanning the other two select codes).
This commit introduces a straightforward sti@@dio attachment to get a working
sti(4) and wsdisplay(4) in a ridiculously small number of lines; however
the console code needs some changes to avoid duplicating globals.

While there, add sti@@dio support for the bootblocks, and I couldn't help
myself but clean the most rotten parts of them, and try to have them reuse
various files in sys/arch/hp300/dev instead of rolling their outdated ones.

Tested on a real 382 with the low-resolution frame buffer:
sti0 at dio0 scode 132: rev 8.02;129, ID 0x27134CB440A00499
sti0: 382V, 2048x512 frame buffer, 640x480x8 display
sti0: 8x16 font type 1, 16 bpc, charset 0-255
wsdisplay0 at sti0 mux 1: console (std, vt100 emulation)

Boot blocks updates tested on DIO-II 425t (serial/glass console), SGC 425e
(serial/glass console) and 382 (serial/glass console). And will be tested
on SGC 425t soon as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.5 2006/08/17 06:31:10 miod Exp $	*/
@


1.5
log
@Large cleanup of the bootblocks, including ansi protos and de-register,
removal of unused hil stuff, oversimplification of the stand ite code
(including dio frame buffer common code factorization), and sgc frame
buffer console support, at last.

This shaves ~1800 bytes off SYS_UBOOT and ~500 bytes of SYS_CDBOOT
despite the addition of the sgc code.

Tested on dca, hyper, topcat and sti.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.4 2006/04/14 21:05:44 miod Exp $	*/
d53 1
d71 1
d130 3
a132 1
void	sti_iteinit(struct ite_data *);
@


1.4
log
@Minimal support for the HP98705 ``Tigershark'' TurboVRX frame buffer
(using an overlay plane only for now). Bootblocks, text console and X11
are supported.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.3 2003/06/02 23:27:46 millert Exp $	*/
d46 1
a46 1
#define ITEUNIT(dev)       minor(dev)
d48 2
a49 8
#define getbyte(ip, offset) \
	((*(ip)->isw->ite_readbyte)(ip, offset))

#define getword(ip, offset) \
	((getbyte(ip, offset) << 8) | getbyte(ip, (offset) + 2))

#define writeglyph(ip, offset, fontbuf) \
	((*(ip)->isw->ite_writeglyph)((ip), (offset), (fontbuf)))
d52 1
a52 2
	int	flags;
	struct	tty *tty;
a53 1
	struct  grf_data *grf;
a63 2
	short   attribute;
	u_char	*attrbuf;
d65 1
a65 3
	short	pos;
	char	imode, escape, fpd, hold;
	caddr_t	devdata;			/* display dependent data */
a70 1
	void	(*ite_deinit)(struct ite_data *);
d72 1
a72 1
	void	(*ite_putc)(struct ite_data *, int, int, int, int);
d74 1
a74 3
	void	(*ite_scroll)(struct ite_data *, int, int, int, int);
	u_char	(*ite_readbyte)(struct ite_data *, int);
	void	(*ite_writeglyph)(struct ite_data *, u_char *, u_char *);
a76 26
/* Flags */
#define ITE_ALIVE	0x01	/* hardware exists */
#define ITE_INITED	0x02	/* device has been initialized */
#define ITE_CONSOLE	0x04	/* device can be console */
#define ITE_ISCONS	0x08	/* device is console */
#define ITE_ACTIVE	0x10	/* device is being used as ITE */
#define ITE_INGRF	0x20	/* device in use as non-ITE */
#define ITE_CURSORON	0x40	/* cursor being tracked */

#define attrloc(ip, y, x) \
	(ip->attrbuf + ((y) * ip->cols) + (x))

#define attrclr(ip, sy, sx, h, w) \
	bzero(ip->attrbuf + ((sy) * ip->cols) + (sx), (h) * (w))
  
#define attrmov(ip, sy, sx, dy, dx, h, w) \
	bcopy(ip->attrbuf + ((sy) * ip->cols) + (sx), \
	      ip->attrbuf + ((dy) * ip->cols) + (dx), \
	      (h) * (w))

#define attrtest(ip, attr) \
	((* (u_char *) attrloc(ip, ip->cury, ip->curx)) & attr)

#define attrset(ip, attr) \
	((* (u_char *) attrloc(ip, ip->cury, ip->curx)) = attr)
  
d83 3
a88 26
/*
 * The cursor is just an inverted space.
 */
#define draw_cursor(ip) { \
	WINDOWMOVER(ip, ip->cblanky, ip->cblankx, \
		    ip->cury * ip->ftheight, \
		    ip->curx * ip->ftwidth, \
		    ip->ftheight, ip->ftwidth, RR_XOR); \
        ip->cursorx = ip->curx; \
	ip->cursory = ip->cury; }

#define erase_cursor(ip) \
  	WINDOWMOVER(ip, ip->cblanky, ip->cblankx, \
		    ip->cursory * ip->ftheight, \
		    ip->cursorx * ip->ftwidth, \
		    ip->ftheight, ip->ftwidth, RR_XOR);

/* Character attributes */
#define ATTR_NOR        0x0             /* normal */
#define	ATTR_INV	0x1		/* inverse */
#define	ATTR_UL		0x2		/* underline */
#define ATTR_ALL	(ATTR_INV | ATTR_UL)

/* Keyboard attributes */
#define ATTR_KPAD	0x4		/* keypad transmit */
  
d95 3
a97 27
#define SCROLL_UP	0x01
#define SCROLL_DOWN	0x02
#define SCROLL_LEFT	0x03
#define SCROLL_RIGHT	0x04
#define DRAW_CURSOR	0x05
#define ERASE_CURSOR    0x06
#define MOVE_CURSOR	0x07

#define KBD_SSHIFT	4		/* bits to shift status */
#define	KBD_CHARMASK	0x7F

/* keyboard status */
#define	KBD_SMASK	0xF		/* service request status mask */
#define	KBD_CTRLSHIFT	0x8		/* key + CTRL + SHIFT */
#define	KBD_CTRL	0x9		/* key + CTRL */
#define	KBD_SHIFT	0xA		/* key + SHIFT */
#define	KBD_KEY		0xB		/* key only */

#define KBD_CAPSLOCK    0x18

#define KBD_EXT_LEFT_DOWN     0x12
#define KBD_EXT_LEFT_UP       0x92
#define KBD_EXT_RIGHT_DOWN    0x13
#define KBD_EXT_RIGHT_UP      0x93

#define	TABSIZE		8
#define	TABEND(ip)	((ip)->tty->t_winsize.ws_col - TABSIZE)
d106 10
a115 2
u_char	ite_readbyte(struct ite_data *, int);
void	ite_writeglyph(struct ite_data *, u_char *, u_char *);
a120 5
void	topcat_clear(struct ite_data *, int, int, int, int);
void	topcat_putc(struct ite_data *, int, int, int, int);
void	topcat_cursor(struct ite_data *, int);
void	topcat_scroll(struct ite_data *, int, int, int, int);

d122 1
a122 5
void	gbox_clear(struct ite_data *, int, int, int, int);
void	gbox_putc(struct ite_data *, int, int, int, int);
void	gbox_cursor(struct ite_data *, int);
void	gbox_scroll(struct ite_data *, int, int, int, int);

a123 5
void	rbox_clear(struct ite_data *, int, int, int, int);
void	rbox_putc(struct ite_data *, int, int, int, int);
void	rbox_cursor(struct ite_data *, int);
void	rbox_scroll(struct ite_data *, int, int, int, int);

a124 5
void	dvbox_clear(struct ite_data *, int, int, int, int);
void	dvbox_putc(struct ite_data *, int, int, int, int);
void	dvbox_cursor(struct ite_data *, int);
void	dvbox_scroll(struct ite_data *, int, int, int, int);

d126 1
a126 4
void	hyper_clear(struct ite_data *, int, int, int, int);
void	hyper_putc(struct ite_data *, int, int, int, int);
void	hyper_cursor(struct ite_data *, int);
void	hyper_scroll(struct ite_data *, int, int, int, int);
d128 5
a132 1
void	tvrx_init(struct ite_data *);
@


1.3
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.2 2002/03/14 01:26:31 millert Exp $	*/
d229 2
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.1 1997/07/14 08:14:35 downsj Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.1
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.3 1997/01/17 08:32:52 downsj Exp $	*/
d86 8
a93 8
	void	(*ite_init) __P((struct ite_data *));
	void	(*ite_deinit) __P((struct ite_data *));
	void	(*ite_clear) __P((struct ite_data *, int, int, int, int));
	void	(*ite_putc) __P((struct ite_data *, int, int, int, int));
	void	(*ite_cursor) __P((struct ite_data *, int));
	void	(*ite_scroll) __P((struct ite_data *, int, int, int, int));
	u_char	(*ite_readbyte) __P((struct ite_data *, int));
	void	(*ite_writeglyph) __P((struct ite_data *, u_char *, u_char *));
d198 2
a199 2
u_char	ite_readbyte __P((struct ite_data *, int));
void	ite_writeglyph __P((struct ite_data *, u_char *, u_char *));
d204 29
a232 29
void	topcat_init __P((struct ite_data *));
void	topcat_clear __P((struct ite_data *, int, int, int, int));
void	topcat_putc __P((struct ite_data *, int, int, int, int));
void	topcat_cursor __P((struct ite_data *, int));
void	topcat_scroll __P((struct ite_data *, int, int, int, int));

void	gbox_init __P((struct ite_data *));
void	gbox_clear __P((struct ite_data *, int, int, int, int));
void	gbox_putc __P((struct ite_data *, int, int, int, int));
void	gbox_cursor __P((struct ite_data *, int));
void	gbox_scroll __P((struct ite_data *, int, int, int, int));

void	rbox_init __P((struct ite_data *));
void	rbox_clear __P((struct ite_data *, int, int, int, int));
void	rbox_putc __P((struct ite_data *, int, int, int, int));
void	rbox_cursor __P((struct ite_data *, int));
void	rbox_scroll __P((struct ite_data *, int, int, int, int));

void	dvbox_init __P((struct ite_data *));
void	dvbox_clear __P((struct ite_data *, int, int, int, int));
void	dvbox_putc __P((struct ite_data *, int, int, int, int));
void	dvbox_cursor __P((struct ite_data *, int));
void	dvbox_scroll __P((struct ite_data *, int, int, int, int));

void	hyper_init __P((struct ite_data *));
void	hyper_clear __P((struct ite_data *, int, int, int, int));
void	hyper_putc __P((struct ite_data *, int, int, int, int));
void	hyper_cursor __P((struct ite_data *, int));
void	hyper_scroll __P((struct ite_data *, int, int, int, int));
@


1.1.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.1 1997/07/14 08:14:35 downsj Exp $	*/
d86 8
a93 8
	void	(*ite_init)(struct ite_data *);
	void	(*ite_deinit)(struct ite_data *);
	void	(*ite_clear)(struct ite_data *, int, int, int, int);
	void	(*ite_putc)(struct ite_data *, int, int, int, int);
	void	(*ite_cursor)(struct ite_data *, int);
	void	(*ite_scroll)(struct ite_data *, int, int, int, int);
	u_char	(*ite_readbyte)(struct ite_data *, int);
	void	(*ite_writeglyph)(struct ite_data *, u_char *, u_char *);
d198 2
a199 2
u_char	ite_readbyte(struct ite_data *, int);
void	ite_writeglyph(struct ite_data *, u_char *, u_char *);
d204 29
a232 29
void	topcat_init(struct ite_data *);
void	topcat_clear(struct ite_data *, int, int, int, int);
void	topcat_putc(struct ite_data *, int, int, int, int);
void	topcat_cursor(struct ite_data *, int);
void	topcat_scroll(struct ite_data *, int, int, int, int);

void	gbox_init(struct ite_data *);
void	gbox_clear(struct ite_data *, int, int, int, int);
void	gbox_putc(struct ite_data *, int, int, int, int);
void	gbox_cursor(struct ite_data *, int);
void	gbox_scroll(struct ite_data *, int, int, int, int);

void	rbox_init(struct ite_data *);
void	rbox_clear(struct ite_data *, int, int, int, int);
void	rbox_putc(struct ite_data *, int, int, int, int);
void	rbox_cursor(struct ite_data *, int);
void	rbox_scroll(struct ite_data *, int, int, int, int);

void	dvbox_init(struct ite_data *);
void	dvbox_clear(struct ite_data *, int, int, int, int);
void	dvbox_putc(struct ite_data *, int, int, int, int);
void	dvbox_cursor(struct ite_data *, int);
void	dvbox_scroll(struct ite_data *, int, int, int, int);

void	hyper_init(struct ite_data *);
void	hyper_clear(struct ite_data *, int, int, int, int);
void	hyper_putc(struct ite_data *, int, int, int, int);
void	hyper_cursor(struct ite_data *, int);
void	hyper_scroll(struct ite_data *, int, int, int, int);
@


1.1.12.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d86 8
a93 8
	void	(*ite_init)(struct ite_data *);
	void	(*ite_deinit)(struct ite_data *);
	void	(*ite_clear)(struct ite_data *, int, int, int, int);
	void	(*ite_putc)(struct ite_data *, int, int, int, int);
	void	(*ite_cursor)(struct ite_data *, int);
	void	(*ite_scroll)(struct ite_data *, int, int, int, int);
	u_char	(*ite_readbyte)(struct ite_data *, int);
	void	(*ite_writeglyph)(struct ite_data *, u_char *, u_char *);
d198 2
a199 2
u_char	ite_readbyte(struct ite_data *, int);
void	ite_writeglyph(struct ite_data *, u_char *, u_char *);
d204 29
a232 29
void	topcat_init(struct ite_data *);
void	topcat_clear(struct ite_data *, int, int, int, int);
void	topcat_putc(struct ite_data *, int, int, int, int);
void	topcat_cursor(struct ite_data *, int);
void	topcat_scroll(struct ite_data *, int, int, int, int);

void	gbox_init(struct ite_data *);
void	gbox_clear(struct ite_data *, int, int, int, int);
void	gbox_putc(struct ite_data *, int, int, int, int);
void	gbox_cursor(struct ite_data *, int);
void	gbox_scroll(struct ite_data *, int, int, int, int);

void	rbox_init(struct ite_data *);
void	rbox_clear(struct ite_data *, int, int, int, int);
void	rbox_putc(struct ite_data *, int, int, int, int);
void	rbox_cursor(struct ite_data *, int);
void	rbox_scroll(struct ite_data *, int, int, int, int);

void	dvbox_init(struct ite_data *);
void	dvbox_clear(struct ite_data *, int, int, int, int);
void	dvbox_putc(struct ite_data *, int, int, int, int);
void	dvbox_cursor(struct ite_data *, int);
void	dvbox_scroll(struct ite_data *, int, int, int, int);

void	hyper_init(struct ite_data *);
void	hyper_clear(struct ite_data *, int, int, int, int);
void	hyper_putc(struct ite_data *, int, int, int, int);
void	hyper_cursor(struct ite_data *, int);
void	hyper_scroll(struct ite_data *, int, int, int, int);
@


1.1.12.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.1.12.1 2002/03/28 10:07:19 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


