head	1.8;
access;
symbols
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.28
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.26
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.24
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.22
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@# @;


1.8
date	2007.11.25.18.25.31;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2006.08.17.17.19.44;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.17.06.31.10;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.01.17.00.34;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.07.15.07.52.21;	author downsj;	state Exp;
branches
	1.4.12.1;
next	1.3;

1.3
date	97.07.14.08.14.44;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.01.18.03.18.18;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.01.17.08.33.05;	author downsj;	state Exp;
branches;
next	;

1.4.12.1
date	2003.06.07.11.11.35;	author ho;	state Exp;
branches;
next	;


desc
@@


1.8
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@#	$OpenBSD: Makefile,v 1.7 2006/08/17 17:19:44 miod Exp $

LIB=	kern

.PATH:	${.CURDIR}/../../../../lib/libkern
.PATH:	${.CURDIR}/../../../../lib/libkern/arch/m68k

.include "${.CURDIR}/../Makefile.inc"

CFLAGS+=-I${.CURDIR}/../include \
	-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libkern

AFLAGS=	-x assembler-with-cpp -traditional-cpp -I${.CURDIR}/../include \
	-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libkern

# kern routines
SRCS=	__main.c ashrdi3.c divdi3.c qdivrem.c strlen.S strcmp.S \
	strncmp.S umoddi3.c

NOPROFILE=
NOPIC=

install:

.include <bsd.lib.mk>
@


1.7
log
@No need for divsi and friends, yet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2006/08/17 06:31:10 miod Exp $
@


1.6
log
@Large cleanup of the bootblocks, including ansi protos and de-register,
removal of unused hil stuff, oversimplification of the stand ite code
(including dio frame buffer common code factorization), and sgc frame
buffer console support, at last.

This shaves ~1800 bytes off SYS_UBOOT and ~500 bytes of SYS_CDBOOT
despite the addition of the sgc code.

Tested on dca, hyper, topcat and sti.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2003/06/01 17:00:34 deraadt Exp $
a18 1
SRCS+=	divsi3.S udivsi3.S modsi3.S umodsi3.S
@


1.5
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/07/15 07:52:21 downsj Exp $
d8 3
a10 1
CFLAGS= -O2 -msoft-float -I${.CURDIR}/../include \
d19 1
a19 2

${OBJS}:	${.CURDIR}/../Makefile.inc
@


1.4
log
@Use assembler sources our of arch/m68k where applicable.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/07/14 08:14:44 downsj Exp $
d15 2
a16 2
SRCS=	__main.c ashrdi3.c divdi3.c qdivrem.c strlen.S strcat.S strcmp.S \
	strcpy.S strncmp.S umoddi3.c
@


1.4.12.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/07/15 07:52:21 downsj Exp $
d15 2
a16 2
SRCS=	__main.c ashrdi3.c divdi3.c qdivrem.c strlen.S strcmp.S \
	strncmp.S umoddi3.c
@


1.3
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/01/18 03:18:18 downsj Exp $
d6 1
d11 3
d15 2
a16 2
SRCS=	__main.c ashrdi3.c divdi3.c qdivrem.c strlen.c strcat.c strcmp.c \
	strcpy.c strncmp.c umoddi3.c
@


1.2
log
@Ensure libsa and libkern get compiled with -Dhp300
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1997/01/17 08:33:05 downsj Exp $
a5 1
.PATH:	${.CURDIR}/..
d7 2
a8 3
CFLAGS+-Dhp300 =${DEBUGFLAGS}
CFLAGS+=-I${.CURDIR}/..
CFLAGS+=-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libkern
d13 2
@


1.1
log
@hp300 bootblocks, sync'd with NetBSD 011697, with changes and a new build
method.
@
text
@d1 1
a1 1
#	$OpenBSD$
d8 1
a8 1
CFLAGS+=${DEBUGFLAGS}
@
