head	1.19;
access;
symbols
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.17.0.4
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.15.0.20
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.18
	OPENBSD_5_0:1.15.0.16
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.14
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.12
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.8
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.10
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.6
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.4
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.6
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.13.0.12
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.20
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.18
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.16
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.12.0.14
	UBC_BASE:1.12
	OPENBSD_3_0:1.12.0.12
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.10
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.8
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.6
	OPENBSD_2_7_BASE:1.12
	SMP:1.12.0.4
	SMP_BASE:1.12
	kame_19991208:1.12
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.11.0.8
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.6
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.11.0.4
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.19
date	2014.03.18.22.36.33;	author miod;	state dead;
branches;
next	1.18;

1.18
date	2014.02.23.19.22.40;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2013.01.01.17.18.49;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2013.01.01.17.17.44;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2007.12.28.18.56.08;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2006.08.17.06.31.10;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.01.17.00.34;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	99.08.16.09.43.09;	author downsj;	state Exp;
branches
	1.12.4.1;
next	1.11;

1.11
date	97.09.14.07.02.04;	author downsj;	state Exp;
branches;
next	1.10;

1.10
date	97.07.14.08.14.46;	author downsj;	state Exp;
branches;
next	1.9;

1.9
date	97.07.13.07.21.55;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	97.02.18.01.07.19;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	97.02.10.09.20.48;	author downsj;	state Exp;
branches;
next	1.6;

1.6
date	97.02.06.02.53.51;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	97.02.05.11.16.41;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.01.18.03.18.19;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.08.33.06;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.11.47.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.29;	author deraadt;	state Exp;
branches;
next	;

1.12.4.1
date	2003.06.07.11.11.35;	author ho;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: Makefile,v 1.18 2014/02/23 19:22:40 miod Exp $

LIB=	sa

CPPFLAGS+=	${SA_CPPFLAGS}

CFLAGS+=-I${.CURDIR} -I${.CURDIR}/../include -I${.CURDIR}/../.. \
	-I${.CURDIR}/../../.. -I${.CURDIR}/../../../.. \
	-I${.CURDIR}/../../../../lib/libsa

# local source
SRCS+=	devopen.c exec_hp300.c rawfs.c

# stand routines
.PATH:	${.CURDIR}/../../../../lib/libsa
SRCS+=	alloc.c exit.c getfile.c gets.c globals.c loadfile.c \
	memcmp.c memcpy.c memset.c printf.c snprintf.c strcmp.c \
	strerror.c strlcat.c strlen.c strncmp.c strncpy.c

.PATH:	${.CURDIR}/../../../../lib/libkern
SRCS+=	__main.c

# io routines
SRCS+=	close.c closeall.c dev.c disklabel.c dkcksum.c fstat.c ioctl.c lseek.c \
	open.c read.c stat.c write.c

# network routines
SRCS+=	arp.c ether.c in_cksum.c net.c netif.c rpc.c

# network info services
SRCS+=	bootp.c bootparam.c rarp.c

# boot filesystems
SRCS+=	ufs.c nfs.c cd9660.c

NOPROFILE=
NOPIC=

install:

.include <bsd.lib.mk>
@


1.18
log
@Try and load /etc/random.seed from SYS_UBOOT.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2013/01/01 17:18:49 miod Exp $
@


1.17
log
@Switch hp300 boot blocks to MI loadfile code.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2013/01/01 17:17:44 miod Exp $
d18 1
a18 1
	strerror.c strlen.c strncmp.c strncpy.c
@


1.16
log
@Define _STANDALONE, not STANDALONE, in the hp300 bootblocks, to follow the
common (and expected) practice. This exposes a flaw, in that mkboot, a host
tool, gets built with boot block settings (and won't compile if _STANDALONE
is defined). Fix this by using different set of CPPFLAGS for host tools and
boot blocks. While there, avoid sourcing ../Makefile.inc twice.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2007/12/28 18:56:08 miod Exp $
d11 3
d16 1
a16 1
SRCS+=	alloc.c devopen.c exit.c exec.c getfile.c gets.c globals.c \
d34 1
a34 1
SRCS+=	ufs.c nfs.c rawfs.c cd9660.c
@


1.15
log
@Repair fallout from libkern changes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2006/08/17 06:31:10 miod Exp $
d5 1
a5 1
.include "${.CURDIR}/../Makefile.inc"
@


1.14
log
@Large cleanup of the bootblocks, including ansi protos and de-register,
removal of unused hil stuff, oversimplification of the stand ite code
(including dio frame buffer common code factorization), and sgc frame
buffer console support, at last.

This shaves ~1800 bytes off SYS_UBOOT and ~500 bytes of SYS_CDBOOT
despite the addition of the sgc code.

Tested on dca, hyper, topcat and sti.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2003/06/01 17:00:34 deraadt Exp $
a4 2
.PATH:	${.CURDIR}/../../../../lib/libsa

d12 7
a18 2
SRCS=	alloc.c devopen.c exit.c exec.c getfile.c gets.c globals.c \
	memcmp.c memcpy.c memset.c printf.c snprintf.c strerror.c strncpy.c
@


1.13
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1999/08/16 09:43:09 downsj Exp $
d7 3
a9 2
CFLAGS= -O2 -msoft-float \
	-I${.CURDIR} -I${.CURDIR}/../include -I${.CURDIR}/../.. \
a28 2

${OBJS}:	${.CURDIR}/../Makefile.inc
@


1.12
log
@Implement real CD booting, aka SYS_CDBOOT, the LIF file small enough to
fit in the begining of an ISO9660 image...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/09/14 07:02:04 downsj Exp $
d14 1
a14 1
	memcmp.c memcpy.c memset.c printf.c strerror.c strncpy.c
@


1.12.4.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1999/08/16 09:43:09 downsj Exp $
d14 1
a14 1
	memcmp.c memcpy.c memset.c printf.c snprintf.c strerror.c strncpy.c
@


1.11
log
@Add cd9660 support.  OpenBSD/hp300 boots from SCSI CD-ROM now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/07/14 08:14:46 downsj Exp $
d7 1
a7 1
CFLAGS= -O2 -msoft-float -D__INTERNAL_LIBSA_CREAD \
d18 1
a18 1
	open.c read.c stat.c write.c cread.c
@


1.10
log
@The grand reorganization, OpenBSD style.

Lossely based on the NetBSD reorg, but much improved upon, simpler, and doesn't
scribble needless junk into the bootblocks.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/07/13 07:21:55 downsj Exp $
d27 1
a27 1
SRCS+=	ufs.c nfs.c rawfs.c
@


1.9
log
@APCI support and new CPU configuration from NetBSD.
Fix all of the include refs.
Bump version number to 2.1.
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.8 1997/02/18 01:07:19 downsj Exp $
#	$NetBSD: Makefile,v 1.5 1996/06/26 17:44:42 thorpej Exp $
a5 1
.PATH:	${.CURDIR}/..
d7 4
a10 9
# Don't need these now...
# DEBUGFLAGS=-DNETIF_DEBUG -DRPC_DEBUG -DNFS_DEBUG -DRARP_DEBUG -DNET_DEBUG
# DEBUGFLAGS+=-DEXEC_DEBUG

CFLAGS+=-Dhp300 -DSTANDALONE -DCOMPAT_UFS -DNO_LSEEK
CFLAGS+=-D__INTERNAL_LIBSA_CREAD -DHEAP_LIMIT="0xffffdfff"
CFLAGS+=${DEBUGFLAGS} -I${.CURDIR}/..
CFLAGS+=-I${.CURDIR}/../.. -I${.CURDIR}/../../..
CFLAGS+=-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libsa
d13 1
a13 1
SRCS=	alloc.c exit.c exec.c getfile.c gets.c globals.c \
d27 3
a29 1
SRCS+=	ufs.c nfs.c rawfs.o
@


1.8
log
@Need strncpy.c now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/02/10 09:20:48 downsj Exp $
d16 1
@


1.7
log
@Add HEAP_LIMIT.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/02/06 02:53:51 downsj Exp $
d20 1
a20 1
	memcmp.c memcpy.c memset.c printf.c strerror.c
@


1.6
log
@Enable support for gzip'd kernels.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/02/05 11:16:41 downsj Exp $
d13 2
a14 1
CFLAGS+=-Dhp300 -DSTANDALONE -DCOMPAT_UFS -DNO_LSEEK -D__INTERNAL_LIBSA_CREAD
@


1.5
log
@An 8k kernel may not be loaded at a 4k address, as the ROM supplies.
We align it to the the next 8k address, as per our 8k kernels.
(This ain't NetBSD, baby.)

Fixed with debugging help from niklas.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/01/18 03:18:19 downsj Exp $
d13 2
a14 2
CFLAGS+=-Dhp300 -DSTANDALONE -DCOMPAT_UFS -DNO_LSEEK ${DEBUGFLAGS}
CFLAGS+=-I${.CURDIR}/..
d23 1
a23 1
	open.c read.c stat.c write.c
@


1.4
log
@Ensure libsa and libkern get compiled with -Dhp300
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/01/17 08:33:06 downsj Exp $
d11 1
@


1.3
log
@hp300 bootblocks, sync'd with NetBSD 011697, with changes and a new build
method.
@
text
@d1 1
a1 1
#	$OpenBSD$
d12 1
a12 1
CFLAGS+=-DSTANDALONE -DCOMPAT_UFS -DNO_LSEEK ${DEBUGFLAGS}
@


1.2
log
@sync to 0622
@
text
@d1 2
a2 1
#	$NetBSD: Makefile,v 1.4 1996/01/30 19:47:32 thorpej Exp $
d7 1
d12 2
a13 1
CFLAGS+=-DSTANDALONE -DCOMPAT_UFS ${DEBUGFLAGS}
d17 2
a18 2
SRCS=	alloc.c bcopy.c exit.c exec.c getfile.c gets.c globals.c \
	memcpy.c printf.c strerror.c
d31 1
a31 1
SRCS+=	ufs.c nfs.c
a34 1
OBJMACHINE=
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.2 1995/09/02 05:04:25 thorpej Exp $
d15 1
a15 1
	printf.c strerror.c
d18 2
a19 2
SRCS+=	close.c dev.c disklabel.c ioctl.c lseek.c open.c read.c \
	stat.c write.c
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
