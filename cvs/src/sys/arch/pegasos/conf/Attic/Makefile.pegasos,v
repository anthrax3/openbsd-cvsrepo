head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@# @;


1.4
date	2004.05.03.15.18.20;	author drahn;	state dead;
branches;
next	1.3;

1.3
date	2004.01.20.03.32.44;	author brad;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.11.23.23.26.14;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.31.03.54.33;	author drahn;	state Exp;
branches;
next	;

1.3.2.1
date	2004.02.19.10.49.55;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2004.06.05.23.10.55;	author niklas;	state dead;
branches;
next	;


desc
@@


1.4
log
@Remove OpenBSD/pegaos, this has been announced before but delayed until
the tree was stable. No point in code supporting a company which screws
its employees being in the OpenBSD tree.
@
text
@#	$OpenBSD: Makefile.pegasos,v 1.3 2004/01/20 03:32:44 brad Exp $
#
# Makefile for OpenBSD PowerPC
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/pegasos/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/pegasos/conf/Makefile.pegasos
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas
#
.SUFFIXES:	.S .c .o

# DEBUG is set to -g if debugging.
# PROF is set to -pg if profiling.

.include <bsd.own.mk>

MKDEP?=	mkdep
STRIP?=	strip
SIZE?=	size

# source tree is located via $S relative to the compilation directory
.ifndef	S
S!=	cd ../../../..; pwd
.endif
PEGASOS=	$S/arch/pegasos

INCLUDES=	-I. -I$S/arch -I$S -nostdinc -L${DESTDIR}/usr/include
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL \
		-D__pegasos__
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main
CMACHFLAGS=	-msoft-float -Wa,-m7400 -fno-builtin-printf -fno-builtin-log
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
COPTS?=		-O2
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
AFLAGS=		-D_LOCORE
LINKFLAGS=	-N -Ttext 500114 -e start --warn-common
STRIPFLAGS=	-g -X -x

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

USRLAND_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
USRLAND_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${AS}  ${COPTS} ${PARAM} $< -o $@@


%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-S
.endif

%LOAD

assym.h: $S/kern/genassym.sh ${PEGASOS}/pegasos/genassym.cf Makefile
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    < ${PEGASOS}/pegasos/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

clean::
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
		[Ee]rrs linterrs makelinks genassym genassym.o assym.h

lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} -UKGDB ${CFILES} \
		ioconf.c param.c | \
		grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

SRCS=	${PEGASOS}/pegasos/locore.S \
	param.c ioconf.c ${CFILES} ${SFILES}
depend:: .depend
.depend: ${SRCS} assym.h param.c
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${PEGASOS}/pegasos/locore.S
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if ${SFILES} != ""
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif

# depend on root or device configuration
autoconf.o conf.o: Makefile

# depend on network or filesystem configuration
uipc_proto.o vfs_conf.o: Makefile

# depend on maxusers
genassym.o machdep.o: Makefile

# depend on CPU configuration
locore.o machdep.o: Makefile


locore.o: ${PEGASOS}/pegasos/locore.S assym.h
	${NORMAL_S}

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

%RULES
@


1.3
log
@- macppc -> __macppc__
- remove swapgeneric.c on pegasos and remove bogus Locore
for lint target

ok drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.pegasos,v 1.2 2003/11/23 23:26:14 espie Exp $
@


1.3.2.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.3.2.2
log
@Merge with the trunk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.pegasos,v 1.3.2.1 2004/02/19 10:49:55 niklas Exp $
@


1.2
log
@-fno-builtin*  checked by brad@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.pegasos,v 1.1 2003/10/31 03:54:33 drahn Exp $
d145 1
a145 2
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} -UKGDB \
		${PEGASOS}/pegasos/Locore.c ${CFILES} ${PEGASOS}/pegasos/swapgeneric.c \
@


1.1
log
@OpenBSD port for the Pegasos I, pegasosppc.com heavily derived from macppc.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.pegasos,v 1.1.2.2 2003/10/11 19:15:39 drahn Exp $
d43 1
a43 1
CMACHFLAGS=	-msoft-float -Wa,-m7400
@

