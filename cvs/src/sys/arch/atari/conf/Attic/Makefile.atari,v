head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.8
	UBC_SYNC_B:1.8
	OPENBSD_2_8:1.7.0.16
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.14
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.12
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.8
date	2001.02.07.07.45.44;	author art;	state dead;
branches;
next	1.7;

1.7
date	97.09.15.02.40.27;	author deraadt;	state Exp;
branches
	1.7.12.1;
next	1.6;

1.6
date	96.04.24.12.05.14;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.03.26.15.09.40;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.01.15.20.04.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.12.14.05.28.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.26.01.07.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.09;	author deraadt;	state Exp;
branches;
next	;

1.7.12.1
date	2001.04.18.16.04.45;	author niklas;	state dead;
branches;
next	;


desc
@@


1.8
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@#	$NetBSD: Makefile.atari,v 1.9 1996/01/14 21:06:49 thorpej Exp $
#
# Makefile for NetBSD Atari-TT
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/conf/``machineid''
# after which you should do
#	 config machineid
# Machine generic makefile changes should be made in
#	/sys/conf/Makefile.``machinetype''
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas


# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).
AS=	as ${DEBUG}
CC=	cc ${DEBUG}
CPP=	cpp
LD=	ld 
TOUCH=	touch -f -c

# source tree is located via $S relative to the compilation directory
S=	../../../..
ATARI=	../..

INCLUDES= -I. -I$S/arch -I$S -I$S/sys 
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Datari
CFLAGS=	-O2 -Werror -mc68020 -msoft-float ${COPTS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

### for the Motorola 68040 Floating Point Software Product
.include "$S/arch/m68k/fpsp/Makefile.inc"

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

PROFILE_C=	${CC} -S -c ${COPTS} $<; \
		sed -e s/_mcount/mcount/ -e s/subrmcount/subr_mcount/ <$*.s | \
		${AS} -o $@@; \
		rm -f $*.s

NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@@

%OBJS

%CFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o ${FPSP} ${OBJS} param.o ioconf.o \
		${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	-@@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} $$strip -n -T 0 -o $@@ -e start '$${SYSTEM_OBJ}' vers.o; \
		${LD} $$strip -n -T 0 -o $@@ -e start ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@; \
		[ X${DEBUG} = X-g ] && { \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo strip -d $@@; strip -d $@@; } || true

%LOAD

vers.o:	newvers

newvers:
	sh $S/conf/newvers.sh ${KERN_IDENT}
	${CC} $(CFLAGS) -c vers.c

clean::
	rm -f eddep *netbsd netbsd.gdb tags *.o locore.i [a-z]*.s \
		Errs errs linterrs makelinks genassym

lint: /tmp param.c
	@@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
	    ${CFILES} ${ATARI}/atari/swapgeneric.c ioconf.c param.c| \
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'

locore.o: assym.s ${ATARI}/atari/vectors.s ${ATARI}/atari/locore.s 
locore.o: machine/trap.h machine/psl.h machine/pte.h machine/cpu.h
	${CPP} -DLOCORE ${COPTS} ${ATARI}/atari/locore.s | ${AS} -o locore.o

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile

# the following are necessary because the files depend on the types of
# hp cpu's included in the system configuration
machdep.o sys_machdep.o pmap.o pmap_bootstrap.o trap.o dma.o:	Makefile

# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o locore.o:	Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile

# depend on maxusers
assym.s: Makefile

assym.s: genassym
	./genassym >assym.s

genassym:
	${CC} -static ${INCLUDES} ${IDENT} ${PARAM} -Dmc68020 -Datari \
	    -o genassym ${ATARI}/atari/genassym.c

depend: assym.s param.c
	mkdep ${COPTS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${ATARI}/atari/genassym.c

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

tags:
	@@echo "see $S/kern/Makefile for tags"

ioconf.o: ioconf.c
	${CC} -c ${CFLAGS} ioconf.c

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c

%RULES
@


1.7
log
@kill Locore.c
@
text
@@


1.7.12.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@@


1.6
log
@Add network config dependencies.
@
text
@d114 1
a114 2
	    ${ATARI}/atari/Locore.c ${CFILES} ${ATARI}/atari/swapgeneric.c \
	    ioconf.c param.c| \
@


1.5
log
@From NetBSD: vnode_if.[ch] made machine independent.
very usefull (for <sys/vnode.h> inclusion).
from the other side this is really machine independent ...
tested w/ i386, but should not cause errors w/ other arch's.
pls, test it (don't forget to reconfig kernel ;)
@
text
@d131 3
a133 1
uipc_proto.o vfs_conf.o locore.o:	Makefile
@


1.4
log
@Remove vnode_if.[ch] during a "make clean", per PR#536 from
Dan Carosone <danielce@@ee.mu.oz.au>.
@
text
@d85 1
a85 1
SYSTEM_OBJ=	locore.o ${FPSP} vnode_if.o ${OBJS} param.o ioconf.o \
d110 1
a110 1
		vnode_if.[ch] Errs errs linterrs makelinks genassym
d143 1
a143 1
depend: assym.s param.c vnode_if.h
a166 2
vnode_if.c vnode_if.h:	$S/kern/vnode_if.sh $S/kern/vnode_if.src
	AWK="${AWK}" sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
@


1.3
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.atari,v 1.8 1995/11/30 00:57:51 jtc Exp $
d110 1
a110 1
		Errs errs linterrs makelinks genassym
@


1.2
log
@update from netbsd tree
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.atari,v 1.7.2.1 1995/10/22 21:12:22 leo Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.atari,v 1.7 1995/09/23 20:22:01 leo Exp $
d36 1
a36 1
CFLAGS=	-O2 -Werror -fno-builtin -mc68020 -msoft-float ${COPTS}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
