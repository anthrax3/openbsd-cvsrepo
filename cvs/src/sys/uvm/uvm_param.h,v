head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.12
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.8
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.4
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.15.0.18
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.14
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.12
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.10
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.8
	OPENBSD_5_0:1.15.0.6
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.14.0.8
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.10
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.6
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.4
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.2
	UBC_BASE:1.6
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.18
date	2015.02.07.08.21.24;	author miod;	state Exp;
branches;
next	1.17;
commitid	3WN6O42yLCDNeEYy;

1.17
date	2014.07.08.17.19.26;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	EF98ch02VpFassUi;

1.16
date	2014.07.08.11.38.48;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	myoIhq56iLBOzmdA;

1.15
date	2010.07.22.17.31.39;	author thib;	state Exp;
branches;
next	1.14;

1.14
date	2008.02.17.20.33.47;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2007.12.15.03.42.57;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2007.03.26.08.43.34;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.25.11.31.07;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.25.15.52.11;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.08.19.17.28;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.28.24;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.19.08.58.07;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.04.23.22.42;	author art;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.11.28.19.28.15;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.28.13.47.40;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.27.05.27.12;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.12.01.26.10;	author art;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.11.06.00.30.38;	author art;	state Exp;
branches;
next	;

1.2.2.1
date	2001.11.14.10.19.26;	author ho;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.12.05.01.23.58;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2002.03.06.02.17.14;	author niklas;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2003.06.07.11.09.09;	author ho;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2004.02.19.11.01.44;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2002.11.04.18.02.33;	author art;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2004.02.22.23.52.28;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Introduce VM_KERNEL_SPACE_SIZE as a replacement for
(VM_MAX_KERNEL_ADDRESS - VM_MIN_KERNEL_ADDRESS). This will allow these to no
longer be constants in the future.

ok guenther@@
@
text
@/*	$OpenBSD: uvm_param.h,v 1.17 2014/07/08 17:19:26 deraadt Exp $	*/
/*	$NetBSD: uvm_param.h,v 1.5 2001/03/09 01:02:12 chs Exp $	*/

/* 
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * The Mach Operating System project at Carnegie-Mellon University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)vm_param.h	8.2 (Berkeley) 1/9/95
 *
 *
 * Copyright (c) 1987, 1990 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Authors: Avadis Tevanian, Jr., Michael Wayne Young
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 *	Machine independent virtual memory parameters.
 */

#ifndef	_VM_PARAM_
#define	_VM_PARAM_

#ifdef _KERNEL

#include <machine/vmparam.h>

typedef int	boolean_t;
#define	TRUE	1
#define FALSE	0

#define	DEFAULT_PAGE_SIZE	4096

#define	atop(x)		((x) >> PAGE_SHIFT)
#define	ptoa(x)		((paddr_t)(x) << PAGE_SHIFT)
#define	round_page(x)	(((x) + PAGE_MASK) & ~PAGE_MASK)
#define	trunc_page(x)	((x) & ~PAGE_MASK)

#if !defined(VM_KERNEL_SPACE_SIZE)
#define	VM_KERNEL_SPACE_SIZE	(VM_MAX_KERNEL_ADDRESS - VM_MIN_KERNEL_ADDRESS)
#endif

#endif /* _KERNEL */
#endif /* _VM_PARAM_ */
@


1.17
log
@decouple struct uvmexp into a new file, so that uvm_extern.h and sysctl.h
don't need to be married.
ok guenther miod beck jsing kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.15 2010/07/22 17:31:39 thib Exp $	*/
d85 4
@


1.16
log
@bye bye UBC; ok beck dlg
@
text
@d71 2
a74 3
/*
 * This belongs in types.h, but breaks too many existing programs.
 */
a75 1
#ifndef TRUE
d77 1
a77 4
#endif
#ifndef FALSE
#define	FALSE	0
#endif
a78 4
/*
 *	The machine independent pages are referred to as PAGES.  A page
 *	is some number of hardware pages, depending on the target machine.
 */
a80 54
#if defined(_KERNEL) && !defined(PAGE_SIZE)
/*
 *	All references to the size of a page should be done with PAGE_SIZE
 *	or PAGE_SHIFT.  The fact they are variables is hidden here so that
 *	we can easily make them constant if we so desire.
 */
#define	PAGE_SIZE	uvmexp.pagesize		/* size of page */
#define	PAGE_MASK	uvmexp.pagemask		/* size of page - 1 */
#define	PAGE_SHIFT	uvmexp.pageshift	/* bits to shift for pages */
#endif /* _KERNEL */

/*
 * CTL_VM identifiers
 */
#define	VM_METER	1		/* struct vmmeter */
#define	VM_LOADAVG	2		/* struct loadavg */
#define	VM_PSSTRINGS	3		/* PSSTRINGS */
#define VM_UVMEXP	4		/* struct uvmexp */
#define VM_SWAPENCRYPT	5		/* int */
#define VM_NKMEMPAGES	6		/* int - # kmem_map pages */
#define	VM_ANONMIN	7
#define	VM_VTEXTMIN	8
#define	VM_VNODEMIN	9
#define	VM_MAXSLP	10
#define	VM_USPACE	11
#define	VM_MAXID	12		/* number of valid vm ids */

#define	CTL_VM_NAMES { \
	{ 0, 0 }, \
	{ "vmmeter", CTLTYPE_STRUCT }, \
	{ "loadavg", CTLTYPE_STRUCT }, \
	{ "psstrings", CTLTYPE_STRUCT }, \
	{ "uvmexp", CTLTYPE_STRUCT }, \
	{ "swapencrypt", CTLTYPE_NODE }, \
	{ "nkmempages", CTLTYPE_INT }, \
	{ "anonmin", CTLTYPE_INT }, \
	{ "vtextmin", CTLTYPE_INT }, \
	{ "vnodemin", CTLTYPE_INT }, \
	{ "maxslp", CTLTYPE_INT }, \
	{ "uspace", CTLTYPE_INT }, \
}

struct _ps_strings {
	void	*val;
};

#define SWAPSKIPBYTES	8192	/* never use at the start of a swap space */

#ifndef ASSEMBLER
/*
 *	Convert addresses to pages and vice versa.
 *	No rounding is used.
 */
#ifdef _KERNEL
a82 5

/*
 * Round off or truncate to the nearest page.  These will work
 * for either addresses or counts (i.e., 1 byte rounds to 1 page).
 */
a85 10
extern psize_t		mem_size;	/* size of physical memory (bytes) */

#else
/* out-of-kernel versions of round_page and trunc_page */
#define	round_page(x) \
	((((vaddr_t)(x) + (vm_page_size - 1)) / vm_page_size) * \
	    vm_page_size)
#define	trunc_page(x) \
	((((vaddr_t)(x)) / vm_page_size) * vm_page_size)

a86 1
#endif /* ASSEMBLER */
@


1.15
log
@Remove the VM_KMPAGESFREE sysctl. After the pmemrange
changes it was returing a constant 0, changing to cope
with those changes makes less sense then just removing
as it provides the user with no usefull information.

sthen@@ grepped the port's tree for me and found not hits,
thanks!

OK deraadt@@, matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.14 2008/02/17 20:33:47 kettenis Exp $	*/
a154 4
#ifdef UBC
extern int		ubc_nwins;	/* number of UBC mapping windows */
extern int		ubc_winsize;	/* size of a UBC mapping window */
#endif
@


1.14
log
@Add back cast in ptoa() to prevent problems with integer overflow.
Proper casts should be added to all invocations of ptoa() before this cast
can be removed again.

ok toby@@, marco@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.13 2007/12/15 03:42:57 deraadt Exp $	*/
d115 1
a115 2
#define	VM_KMPAGESFREE	12
#define	VM_MAXID	13		/* number of valid vm ids */
a129 1
	{ "kmpagesfree", CTLTYPE_INT }, \
@


1.13
log
@export kernel uvm_km_pages_free as vm.kmpagesfree; ok tedu, tested jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.12 2007/03/26 08:43:34 art Exp $	*/
d147 1
a147 1
#define	ptoa(x)		((x) << PAGE_SHIFT)
@


1.12
log
@Rip out the KERN_ error codes.
ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.11 2007/03/25 11:31:07 art Exp $	*/
d115 2
a116 1
#define	VM_MAXID	12		/* number of valid vm ids */
d131 1
@


1.11
log
@remove KERN_SUCCESS and use 0 instead.
eyeballed by miod@@ and pedro@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.10 2005/11/25 15:52:11 mickey Exp $	*/
a136 11

/* 
 *	Return values from the VM routines.
 */
#define	KERN_INVALID_ADDRESS	EFAULT
#define	KERN_PROTECTION_FAILURE	EACCES
#define	KERN_NO_SPACE		ENOMEM
#define	KERN_INVALID_ARGUMENT	EINVAL
#define	KERN_FAILURE		EFAULT
#define	KERN_RESOURCE_SHORTAGE	ENOMEM
#define	KERN_PAGES_LOCKED	9		/* XXX never returned */
@


1.10
log
@do not use any casting in the atop/ptoa; tested on all archs by martin@@ miod@@ mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.9 2003/11/08 19:17:28 jmc Exp $	*/
a140 1
#define	KERN_SUCCESS		0
@


1.9
log
@typos from Jonathon Gray;
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.8 2003/06/02 23:28:24 millert Exp $	*/
d156 2
a157 2
#define	atop(x)		(((paddr_t)(x)) >> PAGE_SHIFT)
#define	ptoa(x)		((vaddr_t)((vaddr_t)(x) << PAGE_SHIFT))
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.7 2001/12/19 08:58:07 art Exp $	*/
d85 1
a85 1
 *	The machine independent pages are refered to as PAGES.  A page
@


1.7
log
@UBC was a disaster. It worked very good when it worked, but on some
machines or some configurations or in some phase of the moon (we actually
don't know when or why) files disappeared. Since we've not been able to
track down the problem in two weeks intense debugging and we need -current
to be stable, back out everything to a state it had before UBC.

We apologise for the inconvenience.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.2 2001/11/12 01:26:10 art Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Yet another sync to NetBSD uvm.
Today we add a pmap argument to pmap_update() and allocate map entries for
kernel_map from kmem_map instead of using the static entries. This should
get rid of MAX_KMAPENT panics. Also some uvm_loan problems are fixed.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_param.h,v 1.5 2001/11/28 19:28:15 art Exp $	*/
/*	$NetBSD: uvm_param.h,v 1.12 2001/08/05 03:33:16 matt Exp $	*/
d4 1
a4 1
/*
a74 1
#ifdef _KERNEL
a75 1
#endif
d142 12
d171 1
d173 2
a174 1
extern int		ubc_winshift;	/* shift for a UBC mapping window */
@


1.6.2.1
log
@Huge sync to NetBSD plus lots of bugfixes.
 - uvm is as in netbsd-current minus uvm_map forward merge.
 - various locking bugfixes in nfs.
 - make sure that all specops and fifoops are correct in all vnodeop vectors.
 - make the filesystem code more like filsystem code and less like vm code.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_param.h,v 1.6 2001/12/04 23:22:42 art Exp $	*/
/*	$NetBSD: uvm_param.h,v 1.13 2001/12/09 03:07:19 chs Exp $	*/
d117 2
a118 2
#define	VM_EXECMIN	8
#define	VM_FILEMIN	9
d121 1
a121 4
#define	VM_ANONMAX	12
#define	VM_EXECMAX	13
#define	VM_FILEMAX	14
#define	VM_MAXID	15		/* number of valid vm ids */
d132 2
a133 2
	{ "execmin", CTLTYPE_INT }, \
	{ "filemin", CTLTYPE_INT }, \
a135 3
	{ "anonmax", CTLTYPE_INT }, \
	{ "execmax", CTLTYPE_INT }, \
	{ "filemax", CTLTYPE_INT }, \
@


1.6.2.2
log
@unprotect from _KERNEL
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.6.2.1 2002/11/04 18:02:33 art Exp $	*/
d75 1
d77 1
@


1.5
log
@Sync in more uvm from NetBSD. Mostly just cosmetic stuff.
Contains also support for page coloring.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_param.h,v 1.4 2001/11/28 13:47:40 art Exp $	*/
/*	$NetBSD: uvm_param.h,v 1.11 2001/07/14 06:36:03 matt Exp $	*/
d75 1
d77 1
@


1.4
log
@Sync in more uvm changes from NetBSD.
This time we're getting rid of KERN_* and VM_PAGER_* error codes and
use errnos instead.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_param.h,v 1.3 2001/11/27 05:27:12 art Exp $	*/
/*	$NetBSD: uvm_param.h,v 1.7 2001/03/21 03:16:06 chs Exp $	*/
d4 1
a4 1
/* 
d46 1
a46 1
 * 
d52 3
a54 3
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
d56 1
a56 1
 * 
d117 3
a119 1
#define	VM_MAXID	10		/* number of valid vm ids */
d132 2
@


1.3
log
@Merge in the unified buffer cache code as found in NetBSD 2001/03/10. The
code is written mostly by Chuck Silvers <chuq@@chuq.com>/<chs@@netbsd.org>.

Tested for the past few weeks by many developers, should be in a pretty stable
state, but will require optimizations and additional cleanups.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_param.h,v 1.2 2001/11/12 01:26:10 art Exp $	*/
/*	$NetBSD: uvm_param.h,v 1.5 2001/03/09 01:02:12 chs Exp $	*/
a137 14
/* 
 *	Return values from the VM routines.
 */
#define	KERN_SUCCESS		0
#define	KERN_INVALID_ADDRESS	1
#define	KERN_PROTECTION_FAILURE	2
#define	KERN_NO_SPACE		3
#define	KERN_INVALID_ARGUMENT	4
#define	KERN_FAILURE		5
#define	KERN_RESOURCE_SHORTAGE	6
#define	KERN_NOT_RECEIVER	7
#define	KERN_NO_ACCESS		8
#define	KERN_PAGES_LOCKED	9

d156 1
a156 1
extern int		ubc_winsize;	/* size of a UBC mapping window */
@


1.2
log
@Bring in more changes from NetBSD. Mostly pagedaemon improvements.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.1 2001/11/06 00:30:38 art Exp $	*/
d117 1
a117 1
#define	VM_MAXID	9		/* number of valid vm ids */
a168 1
#ifdef UBC
a170 1
#endif
@


1.2.2.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.2 2001/11/12 01:26:10 art Exp $	*/
@


1.2.2.2
log
@Merge in -current
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: uvm_param.h,v 1.11 2001/07/14 06:36:03 matt Exp $	*/
d4 1
a4 1
/*
d46 1
a46 1
 *
d52 3
a54 3
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
d56 1
a56 1
 *
d117 1
a117 3
#define	VM_MAXSLP	10
#define	VM_USPACE	11
#define	VM_MAXID	12		/* number of valid vm ids */
a129 2
	{ "maxslp", CTLTYPE_INT }, \
	{ "uspace", CTLTYPE_INT }, \
d138 14
d169 1
d171 2
a172 1
extern int		ubc_winshift;	/* shift for a UBC mapping window */
@


1.2.2.3
log
@Merge in trunk
@
text
@d2 1
a2 1
/*	$NetBSD: uvm_param.h,v 1.5 2001/03/09 01:02:12 chs Exp $	*/
d4 1
a4 1
/* 
a141 12
/* 
 *	Return values from the VM routines.
 */
#define	KERN_SUCCESS		0
#define	KERN_INVALID_ADDRESS	EFAULT
#define	KERN_PROTECTION_FAILURE	EACCES
#define	KERN_NO_SPACE		ENOMEM
#define	KERN_INVALID_ARGUMENT	EINVAL
#define	KERN_FAILURE		EFAULT
#define	KERN_RESOURCE_SHORTAGE	ENOMEM
#define	KERN_PAGES_LOCKED	9		/* XXX never returned */

a158 1
#ifdef UBC
d160 1
a160 2
extern int		ubc_winsize;	/* size of a UBC mapping window */
#endif
@


1.2.2.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_param.h,v 1.2.2.3 2002/03/06 02:17:14 niklas Exp $	*/
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d85 1
a85 1
 *	The machine independent pages are referred to as PAGES.  A page
@


1.1
log
@Kill vm/vm_param.h, move it to uvm/uvm_param.h
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: uvm_param.h,v 1.1 2000/06/26 14:59:04 mrg Exp $	*/
d114 4
a117 1
#define	VM_MAXID	7		/* number of valid vm ids */
d127 3
d158 1
a158 1
#define	atop(x)		(((unsigned long)(x)) >> PAGE_SHIFT)
d169 4
@

