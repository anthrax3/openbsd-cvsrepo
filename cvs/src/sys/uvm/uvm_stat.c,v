head	1.29;
access;
symbols
	OPENBSD_6_2:1.29.0.8
	OPENBSD_6_2_BASE:1.29
	OPENBSD_6_1:1.29.0.6
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.29.0.2
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.28.0.4
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.28.0.6
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.27.0.4
	OPENBSD_5_6_BASE:1.27
	OPENBSD_5_5:1.26.0.6
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.26.0.2
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.25.0.8
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.6
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.4
	OPENBSD_5_0:1.25.0.2
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.22.0.8
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.6
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.4
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.17.0.6
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.4
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.15.0.6
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.4
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.13.0.6
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	UBC_SYNC_B:1.13
	UBC:1.10.0.2
	UBC_BASE:1.10
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.29
date	2016.05.08.11.52.32;	author stefan;	state Exp;
branches;
next	1.28;
commitid	hUj20vPhiD6DQNDL;

1.28
date	2014.10.25.12.54.16;	author miod;	state Exp;
branches;
next	1.27;
commitid	vBZvOeuZrDkwCKYY;

1.27
date	2014.07.11.16.35.40;	author jsg;	state Exp;
branches;
next	1.26;
commitid	7NtJNW9udCOFtDNM;

1.26
date	2013.05.14.20.15.25;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2011.07.03.18.36.51;	author oga;	state Exp;
branches;
next	1.24;

1.24
date	2011.07.03.18.34.14;	author oga;	state Exp;
branches;
next	1.23;

1.23
date	2011.06.30.15.51.07;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.17.00.13.59;	author oga;	state Exp;
branches;
next	1.21;

1.21
date	2009.05.08.13.50.15;	author ariane;	state Exp;
branches;
next	1.20;

1.20
date	2009.03.20.15.19.04;	author oga;	state Exp;
branches;
next	1.19;

1.19
date	2007.04.19.16.20.07;	author art;	state Exp;
branches;
next	1.18;

1.18
date	2007.04.11.12.10.42;	author art;	state Exp;
branches;
next	1.17;

1.17
date	2005.12.10.11.45.43;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2005.09.30.02.37.06;	author pedro;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.28.02.20.58;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.29.01.13.57;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.14.01.27.19;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.02.22.22.03;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.12.19.08.58.07;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.28.19.28.15;	author art;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2001.11.12.01.26.10;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.07.02.55.50;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.06.01.35.04;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.26.19.37.13;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.29.02.07.48;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.15.15.50.21;	author art;	state Exp;
branches;
next	1.3;

1.3
date	99.08.23.08.13.25;	author art;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	99.02.26.05.32.08;	author art;	state Exp;
branches;
next	1.1;

1.1
date	99.02.26.01.30.18;	author art;	state Exp;
branches;
next	;

1.3.4.1
date	2000.03.24.09.09.51;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.05.14.22.47.48;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2001.10.31.03.32.14;	author nate;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2001.11.13.23.02.31;	author niklas;	state Exp;
branches;
next	1.3.4.5;

1.3.4.5
date	2001.12.05.01.23.58;	author niklas;	state Exp;
branches;
next	1.3.4.6;

1.3.4.6
date	2002.03.06.02.17.14;	author niklas;	state Exp;
branches;
next	1.3.4.7;

1.3.4.7
date	2002.03.28.14.54.27;	author niklas;	state Exp;
branches;
next	1.3.4.8;

1.3.4.8
date	2003.05.13.19.36.58;	author ho;	state Exp;
branches;
next	1.3.4.9;

1.3.4.9
date	2004.06.05.23.13.13;	author niklas;	state Exp;
branches;
next	;

1.10.2.1
date	2002.01.31.22.55.51;	author niklas;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.02.02.03.28.27;	author art;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2002.06.11.03.33.04;	author art;	state Exp;
branches;
next	1.10.2.4;

1.10.2.4
date	2002.11.04.18.02.33;	author art;	state Exp;
branches;
next	1.10.2.5;

1.10.2.5
date	2003.05.19.22.41.30;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Wait for RAM in uvm_fault when allocating uvm structures fails

Only fail hard when running out of swap space also, as suggested by
kettenis@@

While there, let amap_add() return a success status and handle
amap_add() errors in uvm_fault() similar to other out of RAM situations.
These bits are needed for further amap reorganization diffs.

lots of feedback and ok kettenis@@
@
text
@/*	$OpenBSD: uvm_stat.c,v 1.28 2014/10/25 12:54:16 miod Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.18 2001/03/09 01:02:13 chs Exp $	 */

/*
 * Copyright (c) 1997 Charles D. Cranor and Washington University.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * from: Id: uvm_stat.c,v 1.1.2.3 1997/12/19 15:01:00 mrg Exp
 */

/*
 * uvm_stat.c
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <uvm/uvm.h>
#include <uvm/uvm_ddb.h>

#ifdef DDB

/*
 * uvmexp_print: ddb hook to print interesting uvm counters
 */
void
uvmexp_print(int (*pr)(const char *, ...))
{

	(*pr)("Current UVM status:\n");
	(*pr)("  pagesize=%d (0x%x), pagemask=0x%x, pageshift=%d\n",
	    uvmexp.pagesize, uvmexp.pagesize, uvmexp.pagemask,
	    uvmexp.pageshift);
	(*pr)("  %d VM pages: %d active, %d inactive, %d wired, %d free (%d zero)\n",
	    uvmexp.npages, uvmexp.active, uvmexp.inactive, uvmexp.wired,
	    uvmexp.free, uvmexp.zeropages);
	(*pr)("  min  %d%% (%d) anon, %d%% (%d) vnode, %d%% (%d) vtext\n",
	    uvmexp.anonminpct, uvmexp.anonmin, uvmexp.vnodeminpct,
	    uvmexp.vnodemin, uvmexp.vtextminpct, uvmexp.vtextmin);
	(*pr)("  pages  %d anon, %d vnode, %d vtext\n",
	    uvmexp.anonpages, uvmexp.vnodepages, uvmexp.vtextpages);
	(*pr)("  freemin=%d, free-target=%d, inactive-target=%d, "
	    "wired-max=%d\n", uvmexp.freemin, uvmexp.freetarg, uvmexp.inactarg,
	    uvmexp.wiredmax);
	(*pr)("  faults=%d, traps=%d, intrs=%d, ctxswitch=%d fpuswitch=%d\n",
	    uvmexp.faults, uvmexp.traps, uvmexp.intrs, uvmexp.swtch,
	    uvmexp.fpswtch);
	(*pr)("  softint=%d, syscalls=%d, kmapent=%d\n",
	    uvmexp.softs, uvmexp.syscalls, uvmexp.kmapent);

	(*pr)("  fault counts:\n");
	(*pr)("    noram=%d, noanon=%d, noamap=%d, pgwait=%d, pgrele=%d\n",
	    uvmexp.fltnoram, uvmexp.fltnoanon, uvmexp.fltnoamap,
	    uvmexp.fltpgwait, uvmexp.fltpgrele);
	(*pr)("    ok relocks(total)=%d(%d), anget(retries)=%d(%d), "
	    "amapcopy=%d\n", uvmexp.fltrelckok, uvmexp.fltrelck,
	    uvmexp.fltanget, uvmexp.fltanretry, uvmexp.fltamcopy);
	(*pr)("    neighbor anon/obj pg=%d/%d, gets(lock/unlock)=%d/%d\n",
	    uvmexp.fltnamap, uvmexp.fltnomap, uvmexp.fltlget, uvmexp.fltget);
	(*pr)("    cases: anon=%d, anoncow=%d, obj=%d, prcopy=%d, przero=%d\n",
	    uvmexp.flt_anon, uvmexp.flt_acow, uvmexp.flt_obj, uvmexp.flt_prcopy,
	    uvmexp.flt_przero);

	(*pr)("  daemon and swap counts:\n");
	(*pr)("    woke=%d, revs=%d, scans=%d, obscans=%d, anscans=%d\n",
	    uvmexp.pdwoke, uvmexp.pdrevs, uvmexp.pdscans, uvmexp.pdobscan,
	    uvmexp.pdanscan);
	(*pr)("    busy=%d, freed=%d, reactivate=%d, deactivate=%d\n",
	    uvmexp.pdbusy, uvmexp.pdfreed, uvmexp.pdreact, uvmexp.pddeact);
	(*pr)("    pageouts=%d, pending=%d, nswget=%d\n", uvmexp.pdpageouts,
	    uvmexp.pdpending, uvmexp.nswget);
	(*pr)("    nswapdev=%d, nanon=%d, nanonneeded=%d nfreeanon=%d\n",
	    uvmexp.nswapdev, uvmexp.nanon, uvmexp.nanonneeded,
	    uvmexp.nfreeanon);
	(*pr)("    swpages=%d, swpginuse=%d, swpgonly=%d paging=%d\n",
	    uvmexp.swpages, uvmexp.swpginuse, uvmexp.swpgonly, uvmexp.paging);

	(*pr)("  kernel pointers:\n");
	(*pr)("    objs(kern)=%p\n", uvm.kernel_object);
}
#endif
@


1.28
log
@Display uvmexp.zeropages in ddb's `show uvmexp' command.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.27 2014/07/11 16:35:40 jsg Exp $	 */
d72 3
a74 3
	(*pr)("    noram=%d, noanon=%d, pgwait=%d, pgrele=%d\n",
	    uvmexp.fltnoram, uvmexp.fltnoanon, uvmexp.fltpgwait,
	    uvmexp.fltpgrele);
@


1.27
log
@Chuck Cranor rescinded clauses in his license
on the 2nd of February 2011 in NetBSD.

http://marc.info/?l=netbsd-source-changes&m=129658899212732&w=2
http://marc.info/?l=netbsd-source-changes&m=129659095515558&w=2
http://marc.info/?l=netbsd-source-changes&m=129659157916514&w=2
http://marc.info/?l=netbsd-source-changes&m=129665962324372&w=2
http://marc.info/?l=netbsd-source-changes&m=129666033625342&w=2
http://marc.info/?l=netbsd-source-changes&m=129666052825545&w=2
http://marc.info/?l=netbsd-source-changes&m=129666922906480&w=2
http://marc.info/?l=netbsd-source-changes&m=129667725518082&w=2
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.26 2013/05/14 20:15:25 miod Exp $	 */
d54 1
a54 1
	(*pr)("  %d VM pages: %d active, %d inactive, %d wired, %d free\n",
d56 1
a56 1
	    uvmexp.free);
@


1.26
log
@Remove `swapin' and `swapout' from uvm statistics, since we don't swap out
u areas since quite a few years now.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.25 2011/07/03 18:36:51 oga Exp $	 */
a4 1
 *
a15 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor and
 *      Washington University.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.25
log
@endodoify UVM_CNT too.

``beat it'' tedu@@ the deleteotron
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.24 2011/07/03 18:34:14 oga Exp $	 */
d75 2
a76 3
	(*pr)("  softint=%d, syscalls=%d, swapins=%d, swapouts=%d, "
	    "kmapent=%d\n", uvmexp.softs, uvmexp.syscalls, uvmexp.swapins,
	    uvmexp.swapouts, uvmexp.kmapent);
@


1.24
log
@Rip out and burn support for UVM_HIST.

The vm hackers don't use it, don't maintain it and have to look at it all the
time. About time this 800 lines of code hit /dev/null.

``never liked it'' tedu@@. ariane@@ was very happy when i told her i wrote
this diff.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.23 2011/06/30 15:51:07 tedu Exp $	 */
a47 7
/*
 * globals
 */

struct uvm_cnt *uvm_cnt_head = NULL;


a48 20

/*
 * prototypes
 */

void uvmcnt_dump(void);


void
uvmcnt_dump(void)
{
	struct uvm_cnt *uvc = uvm_cnt_head;

	while (uvc) {
		if ((uvc->t & UVMCNT_MASK) != UVMCNT_CNT)
			continue;
		printf("%s = %d\n", uvc->name, uvc->c);
		uvc = uvc->next;
	}
}
@


1.23
log
@finish ansi in uvm.  ok ariane oga
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.22 2009/06/17 00:13:59 oga Exp $	 */
a53 7
#ifdef UVMHIST
struct uvm_history_head uvm_histories;
#endif

#ifdef UVMHIST_PRINT
int uvmhist_print_enabled = 1;
#endif
a60 5
#ifdef UVMHIST
void uvmhist_dump(struct uvm_history *);
void uvm_hist(u_int32_t);
static void uvmhist_dump_histories(struct uvm_history *[]);
#endif
a62 110

#ifdef UVMHIST
/* call this from ddb */
void
uvmhist_dump(struct uvm_history *l)
{
	int lcv, s;

	s = splhigh();
	lcv = l->f;
	do {
		if (l->e[lcv].fmt)
			uvmhist_print(&l->e[lcv]);
		lcv = (lcv + 1) % l->n;
	} while (lcv != l->f);
	splx(s);
}

/*
 * print a merged list of uvm_history structures
 */
static void
uvmhist_dump_histories(struct uvm_history *hists[])
{
	struct timeval  tv;
	int	cur[MAXHISTS];
	int	s, lcv, hi;

	/* so we don't get corrupted lists! */
	s = splhigh();

	/* find the first of each list */
	for (lcv = 0; hists[lcv]; lcv++)
		 cur[lcv] = hists[lcv]->f;

	/*
	 * here we loop "forever", finding the next earliest
	 * history entry and printing it.  cur[X] is the current
	 * entry to test for the history in hists[X].  if it is
	 * -1, then this history is finished.
	 */
	for (;;) {
		hi = -1;
		tv.tv_sec = tv.tv_usec = 0;

		/* loop over each history */
		for (lcv = 0; hists[lcv]; lcv++) {
restart:
			if (cur[lcv] == -1)
				continue;

			/*
			 * if the format is empty, go to the next entry
			 * and retry.
			 */
			if (hists[lcv]->e[cur[lcv]].fmt == NULL) {
				cur[lcv] = (cur[lcv] + 1) % (hists[lcv]->n);
				if (cur[lcv] == hists[lcv]->f)
					cur[lcv] = -1;
				goto restart;
			}
				
			/*
			 * if the time hasn't been set yet, or this entry is
			 * earlier than the current tv, set the time and history
			 * index.
			 */
			if (tv.tv_sec == 0 ||
			    timercmp(&hists[lcv]->e[cur[lcv]].tv, &tv, <)) {
				tv = hists[lcv]->e[cur[lcv]].tv;
				hi = lcv;
			}
		}

		/* if we didn't find any entries, we must be done */
		if (hi == -1)
			break;

		/* print and move to the next entry */
		uvmhist_print(&hists[hi]->e[cur[hi]]);
		cur[hi] = (cur[hi] + 1) % (hists[hi]->n);
		if (cur[hi] == hists[hi]->f)
			cur[hi] = -1;
	}
	
	/* done! */
	splx(s);
}

/*
 * call this from ddb.  `bitmask' is from <uvm/uvm_stat.h>.  it
 * merges the named histories.
 */
void
uvm_hist(u_int32_t bitmask)	/* XXX only support 32 hists */
{
	struct uvm_history *hists[MAXHISTS + 1];
	int i = 0;

	if ((bitmask & UVMHIST_MAPHIST) || bitmask == 0)
		hists[i++] = &maphist;

	if ((bitmask & UVMHIST_PDHIST) || bitmask == 0)
		hists[i++] = &pdhist;

	hists[i] = NULL;

	uvmhist_dump_histories(hists);
}
#endif /* UVMHIST */
@


1.22
log
@date based reversion of uvm to the 4th May.

More backouts in line with previous ones, this appears to bring us back to a
stable condition.

A machine forced to 64mb of ram cycled 10GB through swap with this diff
and is still running as I type this. Other tests by ariane@@ and thib@@
also seem to show that it's alright.

ok deraadt@@, thib@@, ariane@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.20 2009/03/20 15:19:04 oga Exp $	 */
d187 1
a187 1
uvmcnt_dump()
@


1.21
log
@Remove static qualifier of functions that are not inline.
Makes trace in ddb useful.

ok oga
@
text
@d71 1
a71 1
void uvmhist_dump_histories(struct uvm_history *[]);
d96 1
a96 1
void
@


1.20
log
@While working on some stuff in uvm I've gotten REALLY sick of reading
K&R function declarations, so switch them all over to ansi-style, in
accordance with the prophesy.

"go for it" art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.19 2007/04/19 16:20:07 art Exp $	 */
d71 1
a71 1
static void uvmhist_dump_histories(struct uvm_history *[]);
d96 1
a96 1
static void
@


1.19
log
@Also show fpu context switches in show uvmexp in ddb.

From mickey. art@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.18 2007/04/11 12:10:42 art Exp $	 */
d79 1
a79 2
uvmhist_dump(l)
	struct uvm_history *l;
d97 1
a97 2
uvmhist_dump_histories(hists)
	struct uvm_history *hists[];
d169 1
a169 2
uvm_hist(bitmask)
	u_int32_t	bitmask;	/* XXX only support 32 hists */
@


1.18
log
@Instead of managing pages for intrsafe maps in special objects (aka.
kmem_object) just so that we can remove them, just use pmap_extract
to get the pages to free and simplify a lot of code to not deal with
the list of intrsafe maps, intrsafe objects, etc.

miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.17 2005/12/10 11:45:43 miod Exp $	 */
d224 3
a226 2
	(*pr)("  faults=%d, traps=%d, intrs=%d, ctxswitch=%d\n",
	    uvmexp.faults, uvmexp.traps, uvmexp.intrs, uvmexp.swtch);
@


1.17
log
@{en,re}trys -> {en,re}tries; eyeballed by jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.16 2005/09/30 02:37:06 pedro Exp $	 */
d258 1
a258 2
	(*pr)("    objs(kern/kmem)=%p/%p\n", uvm.kernel_object,
	    uvmexp.kmem_object);
@


1.16
log
@Make ddb's 'show uvmexp' print information about kmapent, okay deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.15 2004/04/28 02:20:58 markus Exp $	 */
d234 1
a234 1
	(*pr)("    ok relocks(total)=%d(%d), anget(retrys)=%d(%d), "
@


1.15
log
@remove mb_object*; ok tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.14 2003/03/29 01:13:57 mickey Exp $	 */
d226 3
a228 2
	(*pr)("  softint=%d, syscalls=%d, swapins=%d, swapouts=%d\n",
	    uvmexp.softs, uvmexp.syscalls, uvmexp.swapins, uvmexp.swapouts);
@


1.14
log
@ubchist is not a fully cooked kadaver and though use the other well formed pdhist one until ubc gaets back. art@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.13 2002/03/14 01:27:19 millert Exp $	 */
d257 2
a258 2
	(*pr)("    objs(kern/kmem/mb)=%p/%p/%p\n", uvm.kernel_object,
	    uvmexp.kmem_object, uvmexp.mb_object);
@


1.13
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.12 2002/01/02 22:22:03 miod Exp $	 */
a181 3

	if ((bitmask & UVMHIST_UBCHIST) || bitmask == 0)
		hists[i++] = &ubchist;
@


1.12
log
@Add more vocabulary (commands) to ddb, from NetBSD.
ok art@@
(manual page update coming soon)
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.11 2001/12/19 08:58:07 art Exp $	 */
d69 3
a71 3
void uvmhist_dump __P((struct uvm_history *));
void uvm_hist __P((u_int32_t));
static void uvmhist_dump_histories __P((struct uvm_history *[]));
d73 1
a73 1
void uvmcnt_dump __P((void));
d209 1
a209 1
uvmexp_print(int (*pr) __P((const char *, ...)))
@


1.11
log
@UBC was a disaster. It worked very good when it worked, but on some
machines or some configurations or in some phase of the moon (we actually
don't know when or why) files disappeared. Since we've not been able to
track down the problem in two weeks intense debugging and we need -current
to be stable, back out everything to a state it had before UBC.

We apologise for the inconvenience.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.9 2001/11/12 01:26:10 art Exp $	 */
d209 1
a209 1
uvmexp_print(void (*pr)(const char *, ...))
@


1.10
log
@Sync in more uvm from NetBSD. Mostly just cosmetic stuff.
Contains also support for page coloring.
@
text
@d2 1
a2 1
/*	$NetBSD: uvm_stat.c,v 1.19 2001/05/25 04:06:17 chs Exp $	 */
d138 1
a138 1

d161 1
a161 1

@


1.10.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.12 2002/01/02 22:22:03 miod Exp $	 */
d209 1
a209 1
uvmexp_print(int (*pr) __P((const char *, ...)))
@


1.10.2.2
log
@Merge in UBC performance changes from NetBSD.
Fix a bunch of merge errors from yesterday.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.10.2.1 2002/01/31 22:55:51 niklas Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.21 2001/11/10 07:37:01 lukem Exp $	 */
d161 2
d258 4
@


1.10.2.3
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.10.2.2 2002/02/02 03:28:27 art Exp $	 */
d69 3
a71 3
void uvmhist_dump(struct uvm_history *);
void uvm_hist(u_int32_t);
static void uvmhist_dump_histories(struct uvm_history *[]);
d73 1
a73 1
void uvmcnt_dump(void);
d207 1
a207 1
uvmexp_print(int (*pr)(const char *, ...))
@


1.10.2.4
log
@Huge sync to NetBSD plus lots of bugfixes.
 - uvm is as in netbsd-current minus uvm_map forward merge.
 - various locking bugfixes in nfs.
 - make sure that all specops and fifoops are correct in all vnodeop vectors.
 - make the filesystem code more like filsystem code and less like vm code.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.10.2.3 2002/06/11 03:33:04 art Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.22 2001/12/09 03:07:20 chs Exp $	 */
d217 5
a221 8
	(*pr)("  min  %d%% (%d) anon, %d%% (%d) file, %d%% (%d) exec\n",
	    uvmexp.anonminpct, uvmexp.anonmin, uvmexp.fileminpct,
	    uvmexp.filemin, uvmexp.execminpct, uvmexp.execmin);
	(*pr)("  max  %d%% (%d) anon, %d%% (%d) file, %d%% (%d) exec\n",
	    uvmexp.anonmaxpct, uvmexp.anonmax, uvmexp.filemaxpct,
	    uvmexp.filemax, uvmexp.execmaxpct, uvmexp.execmax);
	(*pr)("  pages  %d anon, %d file, %d exec\n",
	    uvmexp.anonpages, uvmexp.filepages, uvmexp.execpages);
@


1.10.2.5
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
d180 3
@


1.9
log
@Bring in more changes from NetBSD. Mostly pagedaemon improvements.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.8 2001/11/07 02:55:50 art Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.18 2001/03/09 01:02:13 chs Exp $	 */
d138 1
a138 1
				
d161 1
a161 1
	
@


1.8
log
@Another sync of uvm to NetBSD. Just minor fiddling, no major changes.
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.7 2001/11/06 01:35:04 art Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.15 2000/11/24 07:25:52 chs Exp $	 */
d183 3
d219 5
@


1.7
log
@Move the last content from vm/ to uvm/
The only thing left in vm/ are just dumb wrappers.
vm/vm.h includes uvm/uvm_extern.h
vm/pmap.h includes uvm/uvm_pmap.h
vm/vm_page.h includes uvm/uvm_page.h
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.6 2001/07/26 19:37:13 art Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.14 2000/06/27 17:29:35 mrg Exp $	 */
d46 1
d62 2
a73 1
void uvm_dump   __P((void));
d203 1
a203 1
 * uvm_dump: ddb hook to dump interesting uvm counters
d205 2
a206 2
void 
uvm_dump()
d209 2
a210 2
	printf("Current UVM status:\n");
	printf("  pagesize=%d (0x%x), pagemask=0x%x, pageshift=%d\n",
d213 1
a213 1
	printf("  %d VM pages: %d active, %d inactive, %d wired, %d free\n",
d216 1
a216 1
	printf("  freemin=%d, free-target=%d, inactive-target=%d, "
d219 1
a219 1
	printf("  faults=%d, traps=%d, intrs=%d, ctxswitch=%d\n",
d221 1
a221 1
	printf("  softint=%d, syscalls=%d, swapins=%d, swapouts=%d\n",
d224 2
a225 2
	printf("  fault counts:\n");
	printf("    noram=%d, noanon=%d, pgwait=%d, pgrele=%d\n",
d228 1
a228 1
	printf("    ok relocks(total)=%d(%d), anget(retrys)=%d(%d), "
d231 1
a231 1
	printf("    neighbor anon/obj pg=%d/%d, gets(lock/unlock)=%d/%d\n",
d233 1
a233 1
	printf("    cases: anon=%d, anoncow=%d, obj=%d, prcopy=%d, przero=%d\n",
d237 5
a241 4
	printf("  daemon and swap counts:\n");
	printf("    woke=%d, revs=%d, scans=%d, swout=%d\n", uvmexp.pdwoke,
	    uvmexp.pdrevs, uvmexp.pdscans, uvmexp.pdswout);
	printf("    busy=%d, freed=%d, reactivate=%d, deactivate=%d\n",
d243 1
a243 1
	printf("    pageouts=%d, pending=%d, nswget=%d\n", uvmexp.pdpageouts,
d245 1
a245 1
	printf("    nswapdev=%d, nanon=%d, nanonneeded=%d nfreeanon=%d\n",
d248 1
a248 1
	printf("    swpages=%d, swpginuse=%d, swpgonly=%d paging=%d\n",
d251 2
a252 2
	printf("  kernel pointers:\n");
	printf("    objs(kern/kmem/mb)=%p/%p/%p\n", uvm.kernel_object,
d255 1
@


1.6
log
@Add support for disabling swap devices (swapctl -d).
Improve error handling on I/O errors to swap.
From NetBSD
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.5 2001/01/29 02:07:48 niklas Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.13 2000/01/11 06:57:50 chs Exp $	 */
a43 2

#include <vm/vm.h>
@


1.5
log
@$OpenBSD$
@
text
@d1 2
a2 2
/*	$OpenBSD: uvm_stat.c,v 1.12 1999/03/26 17:34:16 chs Exp $	 */
/*	$NetBSD: uvm_stat.c,v 1.12 1999/03/26 17:34:16 chs Exp $	 */
d244 3
a246 2
	printf("    nswapdev=%d, nanon=%d, nfreeanon=%d\n", uvmexp.nswapdev,
	    uvmexp.nanon, uvmexp.nfreeanon);
@


1.4
log
@Fix the NetBSD id strings.
@
text
@d1 1
@


1.3
log
@sync with NetBSD from 1999.05.24 (there is a reason for this date)
 Mostly cleanups, but also a few improvements to pagedaemon for better
 handling of low memory and/or low swap conditions.
@
text
@d1 1
a1 1
/*	$NetBSD: uvm_stat.c,v 1.11 1999/03/25 18:48:56 mrg Exp $	 */
@


1.3.4.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$NetBSD: uvm_stat.c,v 1.12 1999/03/26 17:34:16 chs Exp $	 */
@


1.3.4.2
log
@merge in approximately 2.9 into SMP branch
@
text
@a0 1
/*	$OpenBSD: uvm_stat.c,v 1.5 2001/01/29 02:07:48 niklas Exp $	 */
@


1.3.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD$	 */
/*	$NetBSD: uvm_stat.c,v 1.13 2000/01/11 06:57:50 chs Exp $	 */
d244 2
a245 3
	printf("    nswapdev=%d, nanon=%d, nanonneeded=%d nfreeanon=%d\n",
	    uvmexp.nswapdev, uvmexp.nanon, uvmexp.nanonneeded,
	    uvmexp.nfreeanon);
@


1.3.4.4
log
@merge in -current
@
text
@d2 1
a2 1
/*	$NetBSD: uvm_stat.c,v 1.18 2001/03/09 01:02:13 chs Exp $	 */
d45 2
a47 1
#include <uvm/uvm_ddb.h>
a62 2
#ifdef DDB

d73 1
a182 3
	if ((bitmask & UVMHIST_UBCHIST) || bitmask == 0)
		hists[i++] = &ubchist;

d203 1
a203 1
 * uvmexp_print: ddb hook to print interesting uvm counters
d205 2
a206 2
void
uvmexp_print(void (*pr)(const char *, ...))
d209 2
a210 2
	(*pr)("Current UVM status:\n");
	(*pr)("  pagesize=%d (0x%x), pagemask=0x%x, pageshift=%d\n",
d213 1
a213 1
	(*pr)("  %d VM pages: %d active, %d inactive, %d wired, %d free\n",
d216 1
a216 6
	(*pr)("  min  %d%% (%d) anon, %d%% (%d) vnode, %d%% (%d) vtext\n",
	    uvmexp.anonminpct, uvmexp.anonmin, uvmexp.vnodeminpct,
	    uvmexp.vnodemin, uvmexp.vtextminpct, uvmexp.vtextmin);
	(*pr)("  pages  %d anon, %d vnode, %d vtext\n",
	    uvmexp.anonpages, uvmexp.vnodepages, uvmexp.vtextpages);
	(*pr)("  freemin=%d, free-target=%d, inactive-target=%d, "
d219 1
a219 1
	(*pr)("  faults=%d, traps=%d, intrs=%d, ctxswitch=%d\n",
d221 1
a221 1
	(*pr)("  softint=%d, syscalls=%d, swapins=%d, swapouts=%d\n",
d224 2
a225 2
	(*pr)("  fault counts:\n");
	(*pr)("    noram=%d, noanon=%d, pgwait=%d, pgrele=%d\n",
d228 1
a228 1
	(*pr)("    ok relocks(total)=%d(%d), anget(retrys)=%d(%d), "
d231 1
a231 1
	(*pr)("    neighbor anon/obj pg=%d/%d, gets(lock/unlock)=%d/%d\n",
d233 1
a233 1
	(*pr)("    cases: anon=%d, anoncow=%d, obj=%d, prcopy=%d, przero=%d\n",
d237 4
a240 5
	(*pr)("  daemon and swap counts:\n");
	(*pr)("    woke=%d, revs=%d, scans=%d, obscans=%d, anscans=%d\n",
	    uvmexp.pdwoke, uvmexp.pdrevs, uvmexp.pdscans, uvmexp.pdobscan,
	    uvmexp.pdanscan);
	(*pr)("    busy=%d, freed=%d, reactivate=%d, deactivate=%d\n",
d242 1
a242 1
	(*pr)("    pageouts=%d, pending=%d, nswget=%d\n", uvmexp.pdpageouts,
d244 1
a244 1
	(*pr)("    nswapdev=%d, nanon=%d, nanonneeded=%d nfreeanon=%d\n",
d247 1
a247 1
	(*pr)("    swpages=%d, swpginuse=%d, swpgonly=%d paging=%d\n",
d250 2
a251 2
	(*pr)("  kernel pointers:\n");
	(*pr)("    objs(kern/kmem/mb)=%p/%p/%p\n", uvm.kernel_object,
a253 1
#endif
@


1.3.4.5
log
@Merge in -current
@
text
@d2 1
a2 1
/*	$NetBSD: uvm_stat.c,v 1.19 2001/05/25 04:06:17 chs Exp $	 */
d138 1
a138 1

d161 1
a161 1

@


1.3.4.6
log
@Merge in trunk
@
text
@d2 1
a2 1
/*	$NetBSD: uvm_stat.c,v 1.18 2001/03/09 01:02:13 chs Exp $	 */
d138 1
a138 1
				
d161 1
a161 1
	
d209 1
a209 1
uvmexp_print(int (*pr) __P((const char *, ...)))
@


1.3.4.7
log
@Merge in -current from roughly a week ago
@
text
@d69 3
a71 3
void uvmhist_dump(struct uvm_history *);
void uvm_hist(u_int32_t);
static void uvmhist_dump_histories(struct uvm_history *[]);
d73 1
a73 1
void uvmcnt_dump(void);
d209 1
a209 1
uvmexp_print(int (*pr)(const char *, ...))
@


1.3.4.8
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvm_stat.c,v 1.3.4.7 2002/03/28 14:54:27 niklas Exp $	 */
d182 3
@


1.3.4.9
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
d257 2
a258 2
	(*pr)("    objs(kern/kmem)=%p/%p\n", uvm.kernel_object,
	    uvmexp.kmem_object);
@


1.2
log
@add OpenBSD tags
@
text
@d1 1
a1 2
/*	$OpenBSD$	*/
/*	$NetBSD: uvm_stat.c,v 1.10 1998/06/20 13:19:00 mrg Exp $	 */
a3 4
 * XXXCDC: "ROUGH DRAFT" QUALITY UVM PRE-RELEASE FILE!
 *	   >>>USE AT YOUR OWN RISK, WORK IS NOT FINISHED<<<
 */
/*
d245 2
@


1.1
log
@Import of uvm from NetBSD. Some local changes, some code disabled
@
text
@d1 1
@

