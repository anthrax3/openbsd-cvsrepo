head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.16
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.12
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.12
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.10
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.8
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.6
	OPENBSD_5_0:1.8.0.4
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.9
date	2013.11.24.16.02.30;	author jsing;	state Exp;
branches;
next	1.8;

1.8
date	2010.08.12.04.26.56;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2009.08.13.16.00.53;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.25.20.39.47;	author oga;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.26.05.42.20;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.13.02.24.08;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.20.21.02.41;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.20.03.23.11;	author mickey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.05.20.03.03.27;	author tedu;	state Exp;
branches;
next	;

1.2.2.1
date	2003.06.07.10.47.03;	author ho;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Clean up the NTFS debug code - use uppercase names for the debug macros,
especially since 'dprintf' now has another meaning (at least outside of
the kernel). Tweak the macro syntax so we can avoid having to double
bracket all invocations. Also apply a good dose of style(9).

ok krw@@
@
text
@/*	$OpenBSD: ntfs_conv.c,v 1.8 2010/08/12 04:26:56 tedu Exp $	*/
/*	$NetBSD: ntfs_conv.c,v 1.1 2002/12/23 17:38:32 jdolecek Exp $	*/

/*-
 * Copyright (c) 2001 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * File name recode stuff.
 *
 * The utf-8 routines were derived from src/lib/libc/locale/utf2.c.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/namei.h>
#include <sys/mount.h>

/* #define NTFS_DEBUG 1 */
#include <ntfs/ntfs.h>
#include <ntfs/ntfs_inode.h>
#include <ntfs/ntfs_subr.h>

/* UTF-8 encoding stuff */

static const int _utf_count[16] = {
        1, 1, 1, 1, 1, 1, 1, 1,
        0, 0, 0, 0, 2, 2, 3, 0,
};

/*
 * Read one wide character off the string, shift the string pointer
 * and return the character.
 */
wchar
ntfs_utf8_wget(const char **str)
{
	int c;
	wchar rune = 0;
	const char *s = *str;

	c = _utf_count[(s[0] >> 4) & 0xf];
	if (c == 0) {
		c = 1;
		goto encoding_error;
	}

	switch (c) {
	case 1:
		rune = s[0] & 0xff;
		break;
	case 2:
		if ((s[1] & 0xc0) != 0x80)
			goto encoding_error;
		rune = ((s[0] & 0x1F) << 6) | (s[1] & 0x3F);
		break;
	case 3:
		if ((s[1] & 0xC0) != 0x80 || (s[2] & 0xC0) != 0x80)
			goto encoding_error;
		rune = ((s[0] & 0x1F) << 12) | ((s[1] & 0x3F) << 6) |
		    (s[2] & 0x3F);
		break;
	}

encoding_error:
	*str = *str + c;
	return rune;
}

/*
 * Encode wide character and write it to the string. 'n' specifies
 * how much space there is in the string. Returns number of bytes written
 * to the target string.
 */
int
ntfs_utf8_wput(char *s, size_t n, wchar wc)
{
        if (wc & 0xf800) {
                if (n < 3) {
                        /* bound check failure */
			DDPRINTF("ntfs_utf8_wput: need 3 bytes\n");
                        return 0;
                }

                s[0] = 0xE0 | ((wc >> 12) & 0x0F);
                s[1] = 0x80 | ((wc >> 6) & 0x3F);
                s[2] = 0x80 | ((wc) & 0x3F);
                return 3;
        } else {
                if (wc & 0x0780) {
                        if (n < 2) {
                                /* bound check failure */
				DDPRINTF("ntfs_utf8_wput: need 2 bytes\n");
                                return 0;
                        }

                        s[0] = 0xC0 | ((wc >> 6) & 0x1F);
                        s[1] = 0x80 | ((wc) & 0x3F);
                        return 2;
                } else {
                        if (n < 1) {
                                /* bound check failure */
				DDPRINTF("ntfs_utf8_wput: need 1 byte\n");
                                return 0;
                        }

                        s[0] = wc;
                        return 1;
                }
        }
}

/*
 * Compare two wide characters, returning 1, 0, -1 if the first is
 * bigger, equal or lower than the second.
 */
int
ntfs_utf8_wcmp(wchar wc1, wchar wc2)
{
	/* no conversions needed for utf8 */

	if (wc1 == wc2)
		return 0;
	else
		return (int) wc1 - (int) wc2; 
}
@


1.8
log
@these files don't need to include nearly so many headers
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.7 2009/08/13 16:00:53 jasper Exp $	*/
d103 1
a103 1
			ddprintf(("ntfs_utf8_wput: need 3 bytes\n"));
d115 1
a115 1
				ddprintf(("ntfs_utf8_wput: need 2 bytes\n"));
d125 1
a125 1
				ddprintf(("ntfs_utf8_wput: need 1 byte\n"));
@


1.7
log
@- remove super-obvious comments from vnodeop_entries[]
- remove #ifdef someos blocks, makes this a tad easier to read

agreed by art@@ and thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.6 2009/03/25 20:39:47 oga Exp $	*/
a38 3
#include <sys/proc.h>
#include <sys/kernel.h>
#include <sys/vnode.h>
a39 5
#include <sys/buf.h>
#include <sys/file.h>
#include <sys/malloc.h>

#include <miscfs/specfs/specdev.h>
a42 1
#include <ntfs/ntfsmount.h>
a43 1
#include <ntfs/ntfs_vfsops.h>
a44 2
#include <ntfs/ntfs_compr.h>
#include <ntfs/ntfs_ihash.h>
d82 2
a83 2
		rune = ((s[0] & 0x1F) << 12) | ((s[1] & 0x3F) << 6)
		    | (s[2] & 0x3F);
@


1.6
log
@convert lockmgr over to rwlock in ntfs, mostly trivial.

Tested by a couple of people, no regressions.
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.5 2008/06/26 05:42:20 ray Exp $	*/
a45 3
#if defined(__FreeBSD__)
#include <machine/clock.h>
#endif
a49 9
#if defined(__FreeBSD__) || defined(__NetBSD__)
#include <fs/ntfs/ntfs.h>
#include <fs/ntfs/ntfsmount.h>
#include <fs/ntfs/ntfs_inode.h>
#include <fs/ntfs/ntfs_vfsops.h>
#include <fs/ntfs/ntfs_subr.h>
#include <fs/ntfs/ntfs_compr.h>
#include <fs/ntfs/ntfs_ihash.h>
#else
a56 1
#endif
@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.4 2008/05/13 02:24:08 brad Exp $	*/
a45 1
#include <sys/lock.h>
@


1.4
log
@Remove commented out NetBSD __KERNEL_RCSID macro usage.

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.3 2005/04/20 21:02:41 brad Exp $	*/
a15 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.3
log
@fix comment
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.2 2003/05/20 03:23:11 mickey Exp $	*/
a41 5

#include <sys/cdefs.h>
#ifdef __KERNEL_RCSID
__KERNEL_RCSID(0, "$NetBSD: ntfs_conv.c,v 1.1 2002/12/23 17:38:32 jdolecek Exp $");
#endif
@


1.2
log
@fix the tags
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_conv.c,v 1.1 2003/05/20 03:03:27 tedu Exp $	*/
d40 1
a40 1
 * The utf-8 routines were derived from basesrc/lib/libc/locale/utf2.c.
@


1.2.2.1
log
@add file to SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@by popular request, NTFS support.  read only.
The code comes from NetBSD and was ported by Julian Bordet.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$Id$	*/
@

