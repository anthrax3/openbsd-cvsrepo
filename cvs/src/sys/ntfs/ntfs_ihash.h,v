head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.16
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@ * @;


1.6
date	2016.08.10.16.12.13;	author natano;	state Exp;
branches;
next	1.5;
commitid	lX9TIlP2dCtAfIaA;

1.5
date	2013.05.30.20.11.06;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.25.20.39.47;	author oga;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.20.03.36.42;	author tedu;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.05.20.03.23.11;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.20.03.03.27;	author tedu;	state Exp;
branches;
next	;

1.3.2.1
date	2003.06.07.10.47.03;	author ho;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Kill stale prototypes.
ok deraadt millert stefan
@
text
@/*	$OpenBSD: ntfs_ihash.h,v 1.5 2013/05/30 20:11:06 guenther Exp $	*/
/*	$NetBSD: ntfs_ihash.h,v 1.1 2002/12/23 17:38:32 jdolecek Exp $	*/

/*-
 * Copyright (c) 1998, 1999 Semen Ustimenko
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	Id: ntfs_ihash.h,v 1.3 1999/05/12 09:42:59 semenu Exp
 */

extern struct rwlock ntfs_hashlock;
void ntfs_nthashinit(void);
struct ntnode   *ntfs_nthashlookup(dev_t, ntfsino_t);
void ntfs_nthashins(struct ntnode *);
void ntfs_nthashrem(struct ntnode *);
@


1.5
log
@More of the same: ntfs doesn't do inode numbers >2^32, so use a smaller type
internally, only using ino_t in the VFS layer APIs: vget, readdir, getattr
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_ihash.h,v 1.4 2009/03/25 20:39:47 oga Exp $	*/
a33 2
void ntfs_nthashreinit(void);
void ntfs_nthashdone(void);
a34 1
struct ntnode   *ntfs_nthashget(dev_t, ntfsino_t);
@


1.4
log
@convert lockmgr over to rwlock in ntfs, mostly trivial.

Tested by a couple of people, no regressions.
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_ihash.h,v 1.3 2003/05/20 03:36:42 tedu Exp $	*/
d36 2
a37 2
struct ntnode   *ntfs_nthashlookup(dev_t, ino_t);
struct ntnode   *ntfs_nthashget(dev_t, ino_t);
@


1.3
log
@un __P
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_ihash.h,v 1.2 2003/05/20 03:23:11 mickey Exp $	*/
d32 1
a32 1
extern struct lock ntfs_hashlock;
@


1.3.2.1
log
@add file to SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2
log
@fix the tags
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_ihash.h,v 1.1 2003/05/20 03:03:27 tedu Exp $	*/
d33 7
a39 7
void ntfs_nthashinit __P((void));
void ntfs_nthashreinit __P((void));
void ntfs_nthashdone __P((void));
struct ntnode   *ntfs_nthashlookup __P((dev_t, ino_t));
struct ntnode   *ntfs_nthashget __P((dev_t, ino_t));
void ntfs_nthashins __P((struct ntnode *));
void ntfs_nthashrem __P((struct ntnode *));
@


1.1
log
@by popular request, NTFS support.  read only.
The code comes from NetBSD and was ported by Julian Bordet.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$Id$	*/
@

