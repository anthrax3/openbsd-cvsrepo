head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.14
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.12
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.8
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.10
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.8
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.6
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.22
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.7
date	2013.11.24.16.02.30;	author jsing;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.14.02.41.03;	author jsing;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.12.04.26.56;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2009.08.13.16.00.53;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.13.02.24.08;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.20.03.23.11;	author mickey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.05.20.03.03.27;	author tedu;	state Exp;
branches;
next	;

1.2.2.1
date	2003.06.07.10.47.03;	author ho;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Clean up the NTFS debug code - use uppercase names for the debug macros,
especially since 'dprintf' now has another meaning (at least outside of
the kernel). Tweak the macro syntax so we can avoid having to double
bracket all invocations. Also apply a good dose of style(9).

ok krw@@
@
text
@/*	$OpenBSD: ntfs_compr.c,v 1.6 2013/01/14 02:41:03 jsing Exp $	*/
/*	$NetBSD: ntfs_compr.c,v 1.1 2002/12/23 17:38:31 jdolecek Exp $	*/

/*-
 * Copyright (c) 1998, 1999 Semen Ustimenko
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	Id: ntfs_compr.c,v 1.4 1999/05/12 09:42:54 semenu Exp
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mount.h>

#include <ntfs/ntfs.h>
#include <ntfs/ntfs_compr.h>

#define GET_UINT16(addr)	(*((u_int16_t *)(addr)))

int
ntfs_uncompblock(u_int8_t *buf, u_int8_t *cbuf)
{
	u_int32_t ctag;
	int len, dshift, lmask;
	int blen, boff;
	int i, j;
	int pos, cpos;

	len = GET_UINT16(cbuf) & 0xFFF;
	DPRINTF("ntfs_uncompblock: block length: %d + 3, 0x%x,0x%04x\n",
	    len, len, GET_UINT16(cbuf));

	if (!(GET_UINT16(cbuf) & 0x8000)) {
		if ((len + 1) != NTFS_COMPBLOCK_SIZE) {
			DPRINTF("ntfs_uncompblock: len: %x instead of %d\n",
			    len, 0xfff);
		}
		memcpy(buf, cbuf + 2, len + 1);
		bzero(buf + len + 1, NTFS_COMPBLOCK_SIZE - 1 - len);
		return (len + 3);
	}
	cpos = 2;
	pos = 0;
	while ((cpos < len + 3) && (pos < NTFS_COMPBLOCK_SIZE)) {
		ctag = cbuf[cpos++];
		for (i = 0; (i < 8) && (pos < NTFS_COMPBLOCK_SIZE); i++) {
			if (ctag & 1) {
				for (j = pos - 1, lmask = 0xFFF, dshift = 12;
				     j >= 0x10; j >>= 1) {
					dshift--;
					lmask >>= 1;
				}
				boff = -1 - (GET_UINT16(cbuf + cpos) >> dshift);
				blen = 3 + (GET_UINT16(cbuf + cpos) & lmask);
				for (j = 0; (j < blen) &&
				    (pos < NTFS_COMPBLOCK_SIZE); j++) {
					buf[pos] = buf[pos + boff];
					pos++;
				}
				cpos += 2;
			} else {
				buf[pos++] = cbuf[cpos++];
			}
			ctag >>= 1;
		}
	}
	return (len + 3);
}

int
ntfs_uncompunit(struct ntfsmount *ntmp, u_int8_t *uup, u_int8_t *cup)
{
	int i;
	int off = 0;
	int new;

	for (i = 0; i * NTFS_COMPBLOCK_SIZE < ntfs_cntob(NTFS_COMPUNIT_CL);
	    i++) {
		new = ntfs_uncompblock(uup + i * NTFS_COMPBLOCK_SIZE,
		    cup + off);
		if (new == 0)
			return (EINVAL);
		off += new;
	}
	return (0);
}
@


1.6
log
@Ansify and apply style(9) to function definitions.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_compr.c,v 1.5 2010/08/12 04:26:56 tedu Exp $	*/
d51 2
a52 2
	dprintf(("ntfs_uncompblock: block length: %d + 3, 0x%x,0x%04x\n",
	    len, len, GET_UINT16(cbuf)));
d56 2
a57 2
			dprintf(("ntfs_uncompblock: len: %x instead of %d\n",
			    len, 0xfff));
@


1.5
log
@these files don't need to include nearly so many headers
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_compr.c,v 1.4 2009/08/13 16:00:53 jasper Exp $	*/
d42 1
a42 1
ntfs_uncompblock(u_int8_t * buf, u_int8_t * cbuf)
d92 1
a92 1
ntfs_uncompunit(struct ntfsmount * ntmp, u_int8_t * uup, u_int8_t * cup)
@


1.4
log
@- remove super-obvious comments from vnodeop_entries[]
- remove #ifdef someos blocks, makes this a tad easier to read

agreed by art@@ and thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_compr.c,v 1.3 2008/05/13 02:24:08 brad Exp $	*/
a33 4
#include <sys/namei.h>
#include <sys/proc.h>
#include <sys/kernel.h>
#include <sys/vnode.h>
a34 5
#include <sys/buf.h>
#include <sys/file.h>
#include <sys/malloc.h>

#include <miscfs/specfs/specdev.h>
d42 1
a42 3
ntfs_uncompblock(
	u_int8_t * buf,
	u_int8_t * cbuf)
d44 5
a48 5
	u_int32_t       ctag;
	int             len, dshift, lmask;
	int             blen, boff;
	int             i, j;
	int             pos, cpos;
d61 1
a61 1
		return len + 3;
d76 2
a77 1
				for (j = 0; (j < blen) && (pos < NTFS_COMPBLOCK_SIZE); j++) {
d88 1
a88 1
	return len + 3;
d92 1
a92 4
ntfs_uncompunit(
	struct ntfsmount * ntmp,
	u_int8_t * uup,
	u_int8_t * cup)
d94 8
a101 6
	int             i;
	int             off = 0;
	int             new;

	for (i = 0; i * NTFS_COMPBLOCK_SIZE < ntfs_cntob(NTFS_COMPUNIT_CL); i++) {
		new = ntfs_uncompblock(uup + i * NTFS_COMPBLOCK_SIZE, cup + off);
@


1.3
log
@Remove commented out NetBSD __KERNEL_RCSID macro usage.

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_compr.c,v 1.2 2003/05/20 03:23:11 mickey Exp $	*/
a41 3
#ifdef __FreeBSD__
#include <machine/clock.h>
#endif
a44 4
#if defined(__FreeBSD__) || defined(__NetBSD__)
#include <fs/ntfs/ntfs.h>
#include <fs/ntfs/ntfs_compr.h>
#else
a46 1
#endif
@


1.2
log
@fix the tags
@
text
@d1 1
a1 1
/*	$OpenBSD: ntfs_compr.c,v 1.1 2003/05/20 03:03:27 tedu Exp $	*/
a30 5

#include <sys/cdefs.h>
#ifdef __KERNEL_RCSID
__KERNEL_RCSID(0, "$NetBSD: ntfs_compr.c,v 1.1 2002/12/23 17:38:31 jdolecek Exp $");
#endif
@


1.2.2.1
log
@add file to SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@by popular request, NTFS support.  read only.
The code comes from NetBSD and was ported by Julian Bordet.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$Id$	*/
@

