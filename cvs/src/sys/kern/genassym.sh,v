head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.12.0.14
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.6
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.44
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.40
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.38
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.36
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.34
	OPENBSD_5_0:1.11.0.32
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.30
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.28
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.24
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.26
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.22
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.20
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.18
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.16
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.14
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.12
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.10
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2017.08.15.01.53.06;	author tedu;	state Exp;
branches;
next	1.12;
commitid	CxY2pT9FKUoIxyFT;

1.12
date	2014.07.05.07.18.33;	author jsg;	state Exp;
branches;
next	1.11;
commitid	WcxS9ypeucISut92;

1.11
date	2004.02.01.13.13.37;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.02.00.37.31;	author avsm;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.08.10.19.30;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.21.02.49.18;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.14.20.00.06;	author ho;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.09.16.14.26.35;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.11.18.26.10;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.30.22.05.57;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.05.39.16;	author mickey;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.07.25.05.20.52;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.03.27.11.50.45;	author niklas;	state Exp;
branches;
next	;

1.3.12.1
date	2001.10.31.03.26.28;	author nate;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2001.11.14.20.01.21;	author ho;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2002.03.06.02.13.22;	author niklas;	state Exp;
branches;
next	1.3.12.4;

1.3.12.4
date	2003.03.28.00.41.26;	author niklas;	state Exp;
branches;
next	1.3.12.5;

1.3.12.5
date	2004.02.19.10.56.37;	author niklas;	state Exp;
branches;
next	;

1.7.2.1
date	2002.06.11.03.29.40;	author art;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2003.05.19.22.31.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@create a temp directory for all the temp files instead of trying to name
them one at a time. solves a problem where .d files were showing up with
static names.
ok deraadt
@
text
@#	$OpenBSD: genassym.sh,v 1.12 2014/07/05 07:18:33 jsg Exp $
#	$NetBSD: genassym.sh,v 1.9 1998/04/25 19:48:27 matthias Exp $

#
# Copyright (c) 1997 Matthias Pfaller.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# If first argument is -c, create a temporary C file,
# compile it and execute the result.

awk=${AWK:-awk}

if [ "x$1" = "x-c" ] ; then
	shift
	ccode=1
else
	ccode=0
fi

WRKDIR=`mktemp -d /tmp/genassym_XXXXXXXXXX` || exit 1

TMPC=${WRKDIR}/genassym.c
TMP=${WRKDIR}/genassym

trap "rm -rf $WRKDIR" 0 1 2 3 15

$awk '
BEGIN {
	printf("#ifndef _KERNEL\n#define _KERNEL\n#endif\n");
	printf("#define	offsetof(type, member) ((size_t)(&((type *)0)->member))\n");
	defining = 0;
	type = "long";
	asmtype = "n";
	asmprint = "";
}

$0 ~ /^[ \t]*#.*/ || $0 ~ /^[ \t]*$/ {
	# Just ignore comments and empty lines
	next;
}

$0 ~ /^config[ \t]/ {
	type = $2;
	asmtype = $3;
	asmprint = $4;
	next;
}

/^include[ \t]/ {
	if (defining != 0) {
		defining = 0;
		printf("}\n");
	}
	if (includes[$2] == 0) {
		printf("#%s\n", $0);
		includes[$2] = 1;
	}
	next;
}

$0 ~ /^if[ \t]/ ||
$0 ~ /^ifdef[ \t]/ ||
$0 ~ /^ifndef[ \t]/ ||
$0 ~ /^else/ ||
$0 ~ /^elif[ \t]/ ||
$0 ~ /^endif/ {
	printf("#%s\n", $0);
	next;
}

/^union[ \t]/ {
	structname = $2;
	prefixname = toupper($3);
	structtype = "union"
	if (union[structname] == 1)
		next;
	else {
		union[structname] = 1;
		$0 = "define " toupper(structname) "_SIZEOF sizeof(union " structname ")";
	}
	# fall through
}

/^struct[ \t]/ {
	structname = $2;
	prefixname = toupper($3);
	structtype = "struct"
	if (struct[structname] == 1)
		next;
	else {
		struct[structname] = 1;
		$0 = "define " toupper(structname) "_SIZEOF sizeof(struct " structname ")";
	}
	# fall through
}

/^member[ \t]/ {
	if (NF > 2)
		$0 = "define " prefixname toupper($2) " offsetof(" structtype " " structname ", " $3 ")";
	else
		$0 = "define " prefixname toupper($2) " offsetof(" structtype " " structname ", " $2 ")";
	# fall through
}

/^export[ \t]/ {
	$0 = "define " $2 " " $2;
	# fall through
}

/^define[ \t]/ {
	if (defining == 0) {
		defining = 1;
		printf("void f" FNR "(void);\n");
		printf("void f" FNR "() {\n");
		if (ccode)
			call[FNR] = "f" FNR;
		defining = 1;
	}
	value = $0
	gsub("^define[ \t]+[A-Za-z_][A-Za-z_0-9]*[ \t]+", "", value)
	if (ccode)
		printf("printf(\"#define " $2 " %%ld\\n\", (%s)" value ");\n", type);
	else
		printf("__asm(\"XYZZY %s %%%s0\" : : \"%s\" (%s));\n", $2, asmprint, asmtype, value);
	next;
}

/^quote[ \t]/ {
	gsub("^quote[ \t]+", "");
	print;
	next;
}

{
	printf("syntax error in line %d\n", FNR) >"/dev/stderr";
	exit(1);
}

END {
	if (defining != 0) {
		defining = 0;
		printf("}\n");
	}
	if (ccode) {
		printf("int main(int argc, char **argv) {");
		for (i in call)
			printf(call[i] "();");
		printf("return(0); }\n");
	}
}
' ccode=$ccode > $TMPC || exit 1

if [ $ccode = 1 ] ; then
	"$@@" -x c $TMPC -o $TMP && $TMP
else
	# Kill all of the "#" and "$" modifiers; locore.s already
	# prepends the correct "constant" modifier.
	"$@@" -x c -S ${TMPC} -o ${TMP} || exit 1
	sed -e 's/#//g' -e 's/\$//g' ${TMP} | sed -n 's/.*XYZZY/#define/gp'
fi
@


1.12
log
@Matthias Pfaller rescinded clauses three and four of his license

http://mail-index.netbsd.org/source-changes/2009/10/18/msg002090.html
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.11 2004/02/01 13:13:37 miod Exp $
d41 6
a46 6
TMPC=`mktemp /tmp/genassym_c.XXXXXXXXXX` || exit 1
TMP=`mktemp /tmp/genassym.XXXXXXXXXX` || {
	rm -f ${TMPC}
	exit 1
}
trap "rm -f $TMPC $TMP" 0 1 2 3 15
@


1.11
log
@Grok union like struct in genassym.cf. Will be needed shortly.
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.10 2003/07/02 00:37:31 avsm Exp $
a15 5
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by Matthias Pfaller.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
@


1.10
log
@bump mktemp randomness from 6->10 X's
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.9 2003/02/08 10:19:30 pvalchev Exp $
d97 13
d113 1
d125 1
a125 1
		$0 = "define " prefixname toupper($2) " offsetof(struct " structname ", " $3 ")";
d127 1
a127 1
		$0 = "define " prefixname toupper($2) " offsetof(struct " structname ", " $2 ")";
@


1.9
log
@When creating > 1 files with mktemp(1), make sure that if the creation
of the n'th (n>1) file fails, the previous ones get removed before exit(1)
Idea by jason; ok millert deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.8 2002/02/21 02:49:18 miod Exp $
d46 2
a47 2
TMPC=`mktemp /tmp/genassym_c.XXXXXX` || exit 1
TMP=`mktemp /tmp/genassym.XXXXXX` || {
@


1.8
log
@Fix /tmp races.
This requires the use of a gcc'ism on the cc commandline, though.
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.7 2001/11/14 20:00:06 ho Exp $
d47 4
a50 1
TMP=`mktemp /tmp/genassym.XXXXXX` || exit 1
@


1.7
log
@Better exit codes. ok mickey,millert,miod,deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.6 2001/09/16 14:26:35 miod Exp $
d46 3
a48 1
trap "rm -f /tmp/$$.c /tmp/genassym.$$" 0 1 2 3 15
d160 1
a160 1
' ccode=$ccode > /tmp/$$.c || exit 1
d163 1
a163 1
	"$@@" /tmp/$$.c -o /tmp/genassym.$$ && /tmp/genassym.$$
d167 2
a168 4
	gentmp=/tmp/$$.c
	( "$@@" -S ${gentmp} -o - || >${gentmp}.bad ) | \
	    sed -e 's/#//g' -e 's/\$//g' | sed -n 's/.*XYZZY/#define/gp'
	[ ! -f ${gentmp}.bad ] || ( rm -f ${gentmp}.bad; exit 1 )
@


1.7.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.7 2001/11/14 20:00:06 ho Exp $
d46 1
a46 3
TMPC=`mktemp /tmp/genassym_c.XXXXXX` || exit 1
TMP=`mktemp /tmp/genassym.XXXXXX` || exit 1
trap "rm -f $TMPC $TMP" 0 1 2 3 15
d158 1
a158 1
' ccode=$ccode > $TMPC || exit 1
d161 1
a161 1
	"$@@" -x c $TMPC -o $TMP && $TMP
d165 4
a168 2
	"$@@" -x c -S ${TMPC} -o ${TMP} || exit 1
	sed -e 's/#//g' -e 's/\$//g' ${TMP} | sed -n 's/.*XYZZY/#define/gp'
@


1.7.2.2
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d47 1
a47 4
TMP=`mktemp /tmp/genassym.XXXXXX` || {
	rm -f ${TMPC}
	exit 1
}
@


1.6
log
@Feature-sync with NetBSD (add the "config" keyword).
Allow multiple occurences of "struct foo".
Add syntaxic sugar to make use of "struct" and "member" keywords more
useful in genassym.cf files.
This will be badly documented in a manpage, to come in a few minutes.
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.5 2001/09/11 18:26:10 miod Exp $
d39 1
a39 1
if [ $1 = '-c' ] ; then
d165 4
a168 2
	"$@@" -S /tmp/$$.c -o -| sed -e 's/#//g' -e 's/\$//g' | \
	    sed -n 's/.*XYZZY/#define/gp'
@


1.5
log
@Get the multi-inclusion code right this time. This broke mac68k builds,
as found by Takeshi Morimoto <takeshim@@kyoto.zaq.ne.jp>
@
text
@d1 2
a2 2
#	$OpenBSD: genassym.sh,v 1.4 2001/08/30 22:05:57 miod Exp $
#	$NetBSD: genassym.sh,v 1.7 1997/06/25 03:09:06 thorpej Exp $
d53 3
d63 7
d94 7
a100 1
	$0 = "define " structname "_SIZEOF sizeof(struct " structname ")";
d105 4
a108 1
	$0 = "define " $2 " offsetof(struct " structname ", " $2 ")";
d129 1
a129 1
		printf("printf(\"#define " $2 " %%ld\\n\", (long)" value ");\n");
d131 1
a131 1
		printf("__asm(\"XYZZY %s %%0\" : : \"n\" (%s));\n", $2, value);
@


1.4
log
@Add a simple protection against multiple inclusion of same headers.
This will be needed very soon.
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.3 1997/07/25 05:39:16 mickey Exp $
d65 1
a65 1
	if (includes[$0] == 0) {
d67 1
a67 1
		includes[$0] = 1;
@


1.3
log
@oops, bad comments
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.2 1997/07/25 05:20:52 mickey Exp $
d65 4
a68 1
	printf("#%s\n", $0);
@


1.3.12.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
#	$OpenBSD: genassym.sh,v 1.3 1997/07/25 05:39:16 mickey Exp $
#	$NetBSD: genassym.sh,v 1.9 1998/04/25 19:48:27 matthias Exp $
a52 3
	type = "long";
	asmtype = "n";
	asmprint = "";
a59 7
$0 ~ /^config[ \t]/ {
	type = $2;
	asmtype = $3;
	asmprint = $4;
	next;
}

d65 1
a65 4
	if (includes[$2] == 0) {
		printf("#%s\n", $0);
		includes[$2] = 1;
	}
d81 1
a81 7
	prefixname = toupper($3);
	if (struct[structname] == 1)
		next;
	else {
		struct[structname] = 1;
		$0 = "define " toupper(structname) "_SIZEOF sizeof(struct " structname ")";
	}
d86 1
a86 4
	if (NF > 2)
		$0 = "define " prefixname toupper($2) " offsetof(struct " structname ", " $3 ")";
	else
		$0 = "define " prefixname toupper($2) " offsetof(struct " structname ", " $2 ")";
d107 1
a107 1
		printf("printf(\"#define " $2 " %%ld\\n\", (%s)" value ");\n", type);
d109 1
a109 1
		printf("__asm(\"XYZZY %s %%%s0\" : : \"%s\" (%s));\n", $2, asmprint, asmtype, value);
@


1.3.12.2
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.6 2001/09/16 14:26:35 miod Exp $
d39 1
a39 1
if [ "x$1" = "x-c" ] ; then
d165 2
a166 4
	gentmp=/tmp/$$.c
	( "$@@" -S ${gentmp} -o - || >${gentmp}.bad ) | \
	    sed -e 's/#//g' -e 's/\$//g' | sed -n 's/.*XYZZY/#define/gp'
	[ ! -f ${gentmp}.bad ] || ( rm -f ${gentmp}.bad; exit 1 )
@


1.3.12.3
log
@Merge in trunk
@
text
@d1 1
a1 1
#	$OpenBSD$
d46 1
a46 3
TMPC=`mktemp /tmp/genassym_c.XXXXXX` || exit 1
TMP=`mktemp /tmp/genassym.XXXXXX` || exit 1
trap "rm -f $TMPC $TMP" 0 1 2 3 15
d158 1
a158 1
' ccode=$ccode > $TMPC || exit 1
d161 1
a161 1
	"$@@" -x c $TMPC -o $TMP && $TMP
d165 4
a168 2
	"$@@" -x c -S ${TMPC} -o ${TMP} || exit 1
	sed -e 's/#//g' -e 's/\$//g' ${TMP} | sed -n 's/.*XYZZY/#define/gp'
@


1.3.12.4
log
@Sync the SMP branch with 3.3
@
text
@d47 1
a47 4
TMP=`mktemp /tmp/genassym.XXXXXX` || {
	rm -f ${TMPC}
	exit 1
}
@


1.3.12.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d46 2
a47 2
TMPC=`mktemp /tmp/genassym_c.XXXXXXXXXX` || exit 1
TMP=`mktemp /tmp/genassym.XXXXXXXXXX` || {
a96 13
/^union[ \t]/ {
	structname = $2;
	prefixname = toupper($3);
	structtype = "union"
	if (union[structname] == 1)
		next;
	else {
		union[structname] = 1;
		$0 = "define " toupper(structname) "_SIZEOF sizeof(union " structname ")";
	}
	# fall through
}

a99 1
	structtype = "struct"
d111 1
a111 1
		$0 = "define " prefixname toupper($2) " offsetof(" structtype " " structname ", " $3 ")";
d113 1
a113 1
		$0 = "define " prefixname toupper($2) " offsetof(" structtype " " structname ", " $2 ")";
@


1.2
log
@add {struct,member,export} keywords, tsarna@@endicor.com
@
text
@d1 1
a1 1
#	$OpenBSD: genassym.sh,v 1.1 1997/03/27 11:50:45 niklas Exp $
d82 1
a82 1
	/* fall through */
d87 1
a87 1
	/* fall through */
d92 1
a92 1
	/* fall through */
@


1.1
log
@Import genassym.sh method from NetBSD
@
text
@d1 2
a2 2
#	$OpenBSD: genassym.sh,v 1.6 1997/03/13 22:47:20 gwr Exp $
#	$NetBSD: genassym.sh,v 1.6 1997/03/13 22:47:20 gwr Exp $
d77 16
@
