head	1.42;
access;
symbols
	OPENBSD_4_9:1.40.0.2
	OPENBSD_4_9_BASE:1.40
	OPENBSD_4_8:1.37.0.2
	OPENBSD_4_8_BASE:1.37
	OPENBSD_4_7:1.36.0.2
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.36.0.4
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.35.0.4
	OPENBSD_4_5_BASE:1.35
	OPENBSD_4_4:1.35.0.2
	OPENBSD_4_4_BASE:1.35
	OPENBSD_4_3:1.34.0.2
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.31.0.2
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.29.0.4
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.2
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.27.0.2
	OPENBSD_3_8_BASE:1.27
	OPENBSD_3_7:1.24.0.4
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.24.0.2
	OPENBSD_3_6_BASE:1.24
	SMP_SYNC_A:1.23
	SMP_SYNC_B:1.23
	OPENBSD_3_5:1.22.0.4
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.22.0.2
	OPENBSD_3_4_BASE:1.22
	UBC_SYNC_A:1.19
	OPENBSD_3_3:1.17.0.2
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.15.0.12
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.10
	OPENBSD_3_1_BASE:1.15
	UBC_SYNC_B:1.15
	UBC:1.15.0.8
	UBC_BASE:1.15
	OPENBSD_3_0:1.15.0.6
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_9:1.15.0.4
	OPENBSD_2_8:1.15.0.2
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.14.0.4
	OPENBSD_2_7_BASE:1.14
	SMP:1.14.0.2
	SMP_BASE:1.14
	kame_19991208:1.13
	OPENBSD_2_6:1.13.0.4
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.13.0.2
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.12.0.2
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.11.0.2
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.42
date	2011.04.07.13.42.53;	author thib;	state dead;
branches;
next	1.41;

1.41
date	2011.04.05.18.51.25;	author thib;	state Exp;
branches;
next	1.40;

1.40
date	2010.12.21.20.14.43;	author thib;	state Exp;
branches;
next	1.39;

1.39
date	2010.09.10.16.34.08;	author thib;	state Exp;
branches;
next	1.38;

1.38
date	2010.09.06.23.44.10;	author thib;	state Exp;
branches;
next	1.37;

1.37
date	2010.04.20.22.05.43;	author tedu;	state Exp;
branches;
next	1.36;

1.36
date	2009.06.03.14.45.54;	author jj;	state Exp;
branches;
next	1.35;

1.35
date	2008.05.07.14.08.37;	author thib;	state Exp;
branches;
next	1.34;

1.34
date	2007.11.28.19.31.31;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	2007.06.01.05.37.14;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.08.20.26.19;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2006.11.18.08.20.51;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2006.09.22.14.23.04;	author pedro;	state Exp;
branches;
next	1.29;

1.29
date	2005.12.06.20.18.57;	author pedro;	state Exp;
branches;
next	1.28;

1.28
date	2005.11.24.12.08.16;	author pedro;	state Exp;
branches;
next	1.27;

1.27
date	2005.05.27.00.58.24;	author pedro;	state Exp;
branches;
next	1.26;

1.26
date	2005.05.26.20.15.20;	author fgsch;	state Exp;
branches;
next	1.25;

1.25
date	2005.03.29.17.24.52;	author pedro;	state Exp;
branches;
next	1.24;

1.24
date	2004.08.03.17.11.48;	author marius;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.13.00.15.28;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2003.08.14.07.46.39;	author mickey;	state Exp;
branches;
next	1.21;

1.21
date	2003.06.02.23.28.07;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2003.05.20.03.05.42;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.12.21.06.00;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2003.05.11.07.25.12;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2003.02.24.20.02.13;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.24.02.17.22;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.17.17.16.05;	author provos;	state Exp;
branches
	1.15.8.1;
next	1.14;

1.14
date	2000.02.07.04.53.33;	author assar;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	99.02.15.05.05.33;	author art;	state Exp;
branches;
next	1.12;

1.12
date	98.08.30.17.11.36;	author art;	state Exp;
branches;
next	1.11;

1.11
date	97.12.26.22.33.01;	author csapuntz;	state Exp;
branches;
next	1.10;

1.10
date	97.11.08.17.21.04;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	97.11.07.16.51.21;	author csapuntz;	state Exp;
branches;
next	1.8;

1.8
date	97.11.06.05.58.26;	author csapuntz;	state Exp;
branches;
next	1.7;

1.7
date	97.10.06.20.20.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.10.06.15.12.37;	author csapuntz;	state Exp;
branches;
next	1.5;

1.5
date	97.02.24.14.20.01;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.11.01.08.41.42;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.06.27.08.14.25;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	95.11.06.21.19.53;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.47;	author deraadt;	state Exp;
branches;
next	;

1.14.2.1
date	2001.05.14.22.32.45;	author niklas;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2003.03.28.00.41.27;	author niklas;	state Exp;
branches;
next	1.14.2.3;

1.14.2.3
date	2003.05.13.19.21.28;	author ho;	state Exp;
branches;
next	1.14.2.4;

1.14.2.4
date	2003.05.16.00.29.43;	author niklas;	state Exp;
branches;
next	1.14.2.5;

1.14.2.5
date	2003.06.07.11.03.41;	author ho;	state Exp;
branches;
next	1.14.2.6;

1.14.2.6
date	2004.02.19.10.56.38;	author niklas;	state Exp;
branches;
next	1.14.2.7;

1.14.2.7
date	2004.06.05.23.13.03;	author niklas;	state Exp;
branches;
next	;

1.15.8.1
date	2003.05.19.22.31.57;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.42
log
@merge vfs_conf.c and vfs_init.c and retire vfs_conf.c;

The contents belong togather a long with other crud,
that should get moved at some point.

ok deraadt@@, miod@@
@
text
@/*	$OpenBSD: vfs_conf.c,v 1.41 2011/04/05 18:51:25 thib Exp $	*/
/*	$NetBSD: vfs_conf.c,v 1.21.4.1 1995/11/01 00:06:26 jtc Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)vfs_conf.c	8.8 (Berkeley) 3/31/94
 */

#include <sys/param.h>
#include <sys/mount.h>
#include <sys/vnode.h>
#include <sys/timeout.h>

#ifdef FFS
#include <ufs/ufs/quota.h>
#include <ufs/ufs/inode.h>
#include <ufs/ffs/ffs_extern.h>
#endif

#ifdef EXT2FS
#include <ufs/ext2fs/ext2fs_extern.h>
#endif

#ifdef CD9660
#include <isofs/cd9660/iso.h>
#include <isofs/cd9660/cd9660_extern.h>
#endif

#ifdef MFS
#include <ufs/mfs/mfs_extern.h>
#endif

#ifdef NFSCLIENT
#include <nfs/rpcv2.h>
#include <nfs/nfsproto.h>
#include <nfs/nfsnode.h>
#include <nfs/nfs.h>
#include <nfs/nfsmount.h>
#endif

/*
 * This defines the root filesystem.
 */
struct vnode *rootvnode;

/*
 * Set up the filesystem operations for vnodes.
 * The types are defined in mount.h.
 */


#ifdef FFS
extern	const struct vfsops ffs_vfsops;
#endif

#ifdef MFS
extern	const struct vfsops mfs_vfsops;
#endif

#ifdef MSDOSFS
extern	const struct vfsops msdosfs_vfsops;
#endif

#ifdef NFSCLIENT
extern	const struct vfsops nfs_vfsops;
#endif

#ifdef PROCFS
extern	const struct vfsops procfs_vfsops;
#endif

#ifdef CD9660
extern	const struct vfsops cd9660_vfsops;
#endif

#ifdef EXT2FS
extern	const struct vfsops ext2fs_vfsops;
#endif

#ifdef NNPFS
extern  const struct vfsops nnpfs_vfsops;
#endif

#ifdef NTFS
extern  const struct vfsops ntfs_vfsops;
#endif

#ifdef UDF
extern  const struct vfsops udf_vfsops;
#endif

/*
 * Set up the filesystem operations for vnodes.
 */
static struct vfsconf vfsconflist[] = {

        /* Fast Filesystem */
#ifdef FFS
        { &ffs_vfsops, MOUNT_FFS, 1, 0, MNT_LOCAL, NULL },
#endif

        /* Memory-based Filesystem */
#ifdef MFS
        { &mfs_vfsops, MOUNT_MFS, 3, 0, MNT_LOCAL, NULL },
#endif

#ifdef EXT2FS
	{ &ext2fs_vfsops, MOUNT_EXT2FS, 17, 0, MNT_LOCAL, NULL },
#endif
        /* ISO9660 (aka CDROM) Filesystem */
#ifdef CD9660
        { &cd9660_vfsops, MOUNT_CD9660, 14, 0, MNT_LOCAL, NULL },
#endif

        /* MSDOS Filesystem */
#ifdef MSDOSFS
        { &msdosfs_vfsops, MOUNT_MSDOS, 4, 0, MNT_LOCAL, NULL },
#endif

        /* Sun-compatible Network Filesystem */
#ifdef NFSCLIENT
        { &nfs_vfsops, MOUNT_NFS, 2, 0, 0, NULL },
#endif

	/* NNPFS */
#ifdef NNPFS
	{ &nnpfs_vfsops, MOUNT_NNPFS, 21, 0, 0, NULL },
#endif
	
        /* /proc Filesystem */
#ifdef PROCFS
        { &procfs_vfsops, MOUNT_PROCFS, 12, 0, 0, NULL },
#endif

	/* NTFS Filesystem */
#ifdef NTFS
	{ &ntfs_vfsops, MOUNT_NTFS, 6, 0, MNT_LOCAL, NULL },
#endif

	/* UDF Filesystem */
#ifdef UDF
	{ &udf_vfsops, MOUNT_UDF, 13, 0, MNT_LOCAL, NULL },
#endif

};


/*
 * Initially the size of the list, vfs_init will set maxvfsconf
 * to the highest defined type number.
 */
int maxvfsconf = sizeof(vfsconflist) / sizeof(struct vfsconf);
struct vfsconf *vfsconf = vfsconflist;
@


1.41
log
@Remove portalfs.

While it is a terribly cool idea, it's just awful and since noone has stepped
up to the plate to keep it up with the current vop state, retire it to the
attic.

ok krw@@, deraadt@@, guenther@@, miod@@.
comments from jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.39 2010/09/10 16:34:08 thib Exp $	*/
@


1.40
log
@Bring back the "End the VOP experiment." diff, naddy's issues where
unrelated, and his alpha is much happier now.

OK deraadt@@
@
text
@a93 4
#ifdef PORTAL
extern	const struct vfsops portal_vfsops;
#endif

a158 5
#endif

        /* Portal Filesystem */
#ifdef PORTAL
        { &portal_vfsops, MOUNT_PORTAL, 8, 0, 0, NULL },
@


1.39
log
@Backout the VOP diff until the issues naddy was seeing on alpha (gcc3)
have been resolved.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.38 2010/09/06 23:44:10 thib Exp $	*/
a188 90


/*
 * vfs_opv_descs enumerates the list of vnode classes, each with its own
 * vnode operation vector.  It is consulted at system boot to build operation
 * vectors.  It is NULL terminated.
 */
extern struct vnodeopv_desc sync_vnodeop_opv_desc;
extern struct vnodeopv_desc ffs_vnodeop_opv_desc;
extern struct vnodeopv_desc ffs_specop_opv_desc;
extern struct vnodeopv_desc ffs_fifoop_opv_desc;
extern struct vnodeopv_desc mfs_vnodeop_opv_desc;
extern struct vnodeopv_desc dead_vnodeop_opv_desc;
extern struct vnodeopv_desc fifo_vnodeop_opv_desc;
extern struct vnodeopv_desc spec_vnodeop_opv_desc;
extern struct vnodeopv_desc nfsv2_vnodeop_opv_desc;
extern struct vnodeopv_desc spec_nfsv2nodeop_opv_desc;
extern struct vnodeopv_desc fifo_nfsv2nodeop_opv_desc;
extern struct vnodeopv_desc portal_vnodeop_opv_desc;
extern struct vnodeopv_desc procfs_vnodeop_opv_desc;
extern struct vnodeopv_desc cd9660_vnodeop_opv_desc;
extern struct vnodeopv_desc cd9660_specop_opv_desc;
extern struct vnodeopv_desc cd9660_fifoop_opv_desc;
extern struct vnodeopv_desc msdosfs_vnodeop_opv_desc;
extern struct vnodeopv_desc ext2fs_vnodeop_opv_desc;
extern struct vnodeopv_desc ext2fs_specop_opv_desc;
extern struct vnodeopv_desc ext2fs_fifoop_opv_desc;
extern struct vnodeopv_desc nnpfs_vnodeop_opv_desc;
extern struct vnodeopv_desc ntfs_vnodeop_opv_desc;
extern struct vnodeopv_desc udf_vnodeop_opv_desc;

struct vnodeopv_desc *vfs_opv_descs[] = {
	&sync_vnodeop_opv_desc,
#ifdef FFS
	&ffs_vnodeop_opv_desc,
	&ffs_specop_opv_desc,
#ifdef FIFO
	&ffs_fifoop_opv_desc,
#endif
#endif
	&dead_vnodeop_opv_desc,
#ifdef FIFO
	&fifo_vnodeop_opv_desc,
#endif
	&spec_vnodeop_opv_desc,
#ifdef MFS
	&mfs_vnodeop_opv_desc,
#endif
#ifdef NFSCLIENT
	&nfsv2_vnodeop_opv_desc,
	&spec_nfsv2nodeop_opv_desc,
#ifdef FIFO
	&fifo_nfsv2nodeop_opv_desc,
#endif
#endif
#ifdef PORTAL
	&portal_vnodeop_opv_desc,
#endif
#ifdef PROCFS
	&procfs_vnodeop_opv_desc,
#endif
#ifdef CD9660
	&cd9660_vnodeop_opv_desc,
	&cd9660_specop_opv_desc,
#ifdef FIFO
	&cd9660_fifoop_opv_desc,
#endif
#endif
#ifdef MSDOSFS
	&msdosfs_vnodeop_opv_desc,
#endif
#ifdef EXT2FS
	&ext2fs_vnodeop_opv_desc,
	&ext2fs_specop_opv_desc,
#ifdef FIFO
	&ext2fs_fifoop_opv_desc,
#endif
#endif
#ifdef NNPFS
	&nnpfs_vnodeop_opv_desc,
#endif
#ifdef NTFS
	&ntfs_vnodeop_opv_desc,
#endif
#ifdef UDF
	&udf_vnodeop_opv_desc,
#endif

	NULL
};
@


1.38
log
@End the VOP experiment. Instead of the ridicolusly complicated operation
vector setup that has questionable features (that have, as far as I can
tell never been used in practice, atleast not in OpenBSD), remove all
the gunk and favor a simple struct full of function pointers that get
set directly by each of the filesystems.

Removes gobs of ugly code and makes things simpler by a magnitude.

The only downside of this is that we loose the vnoperate feature so
the spec/fifo operations of the filesystems need to be kept in sync
with specfs and fifofs, this is no big deal as the API it self is pretty
static.

Many thanks to armani@@ who pulled an earlier version of this diff to
current after c2k10 and Gabriel Kihlman on tech@@ for testing.

Liked by many. "come on, find your balls" deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.37 2010/04/20 22:05:43 tedu Exp $	*/
d189 90
@


1.37
log
@remove proc.h include from uvm_map.h.  This has far reaching effects, as
sysctl.h was reliant on this particular include, and many drivers included
sysctl.h unnecessarily.  remove sysctl.h or add proc.h as needed.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.36 2009/06/03 14:45:54 jj Exp $	*/
a188 90


/*
 * vfs_opv_descs enumerates the list of vnode classes, each with its own
 * vnode operation vector.  It is consulted at system boot to build operation
 * vectors.  It is NULL terminated.
 */
extern struct vnodeopv_desc sync_vnodeop_opv_desc;
extern struct vnodeopv_desc ffs_vnodeop_opv_desc;
extern struct vnodeopv_desc ffs_specop_opv_desc;
extern struct vnodeopv_desc ffs_fifoop_opv_desc;
extern struct vnodeopv_desc mfs_vnodeop_opv_desc;
extern struct vnodeopv_desc dead_vnodeop_opv_desc;
extern struct vnodeopv_desc fifo_vnodeop_opv_desc;
extern struct vnodeopv_desc spec_vnodeop_opv_desc;
extern struct vnodeopv_desc nfsv2_vnodeop_opv_desc;
extern struct vnodeopv_desc spec_nfsv2nodeop_opv_desc;
extern struct vnodeopv_desc fifo_nfsv2nodeop_opv_desc;
extern struct vnodeopv_desc portal_vnodeop_opv_desc;
extern struct vnodeopv_desc procfs_vnodeop_opv_desc;
extern struct vnodeopv_desc cd9660_vnodeop_opv_desc;
extern struct vnodeopv_desc cd9660_specop_opv_desc;
extern struct vnodeopv_desc cd9660_fifoop_opv_desc;
extern struct vnodeopv_desc msdosfs_vnodeop_opv_desc;
extern struct vnodeopv_desc ext2fs_vnodeop_opv_desc;
extern struct vnodeopv_desc ext2fs_specop_opv_desc;
extern struct vnodeopv_desc ext2fs_fifoop_opv_desc;
extern struct vnodeopv_desc nnpfs_vnodeop_opv_desc;
extern struct vnodeopv_desc ntfs_vnodeop_opv_desc;
extern struct vnodeopv_desc udf_vnodeop_opv_desc;

struct vnodeopv_desc *vfs_opv_descs[] = {
	&sync_vnodeop_opv_desc,
#ifdef FFS
	&ffs_vnodeop_opv_desc,
	&ffs_specop_opv_desc,
#ifdef FIFO
	&ffs_fifoop_opv_desc,
#endif
#endif
	&dead_vnodeop_opv_desc,
#ifdef FIFO
	&fifo_vnodeop_opv_desc,
#endif
	&spec_vnodeop_opv_desc,
#ifdef MFS
	&mfs_vnodeop_opv_desc,
#endif
#ifdef NFSCLIENT
	&nfsv2_vnodeop_opv_desc,
	&spec_nfsv2nodeop_opv_desc,
#ifdef FIFO
	&fifo_nfsv2nodeop_opv_desc,
#endif
#endif
#ifdef PORTAL
	&portal_vnodeop_opv_desc,
#endif
#ifdef PROCFS
	&procfs_vnodeop_opv_desc,
#endif
#ifdef CD9660
	&cd9660_vnodeop_opv_desc,
	&cd9660_specop_opv_desc,
#ifdef FIFO
	&cd9660_fifoop_opv_desc,
#endif
#endif
#ifdef MSDOSFS
	&msdosfs_vnodeop_opv_desc,
#endif
#ifdef EXT2FS
	&ext2fs_vnodeop_opv_desc,
	&ext2fs_specop_opv_desc,
#ifdef FIFO
	&ext2fs_fifoop_opv_desc,
#endif
#endif
#ifdef NNPFS
	&nnpfs_vnodeop_opv_desc,
#endif
#ifdef NTFS
	&ntfs_vnodeop_opv_desc,
#endif
#ifdef UDF
	&udf_vnodeop_opv_desc,
#endif

	NULL
};
@


1.36
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.35 2008/05/07 14:08:37 thib Exp $	*/
d38 1
@


1.35
log
@remove the vfc_mountroot member from vfsconf and
do appropriate cleanup;

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.34 2007/11/28 19:31:31 millert Exp $	*/
d109 2
a110 2
#ifdef XFS
extern  const struct vfsops xfs_vfsops;
d154 3
a156 3
	/* XFS */
#ifdef XFS
	{ &xfs_vfsops, MOUNT_XFS, 21, 0, 0, NULL },
d215 1
a215 1
extern struct vnodeopv_desc xfs_vnodeop_opv_desc;
d266 2
a267 2
#ifdef XFS
	&xfs_vnodeop_opv_desc,
@


1.34
log
@g/c mfs_mountroot() and mfs_initminiroot().  We don't support root on
mfs.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.33 2007/06/01 05:37:14 deraadt Exp $	*/
a58 1
#include <sys/rwlock.h>		/*  XXX*/
d128 1
a128 1
        { &ffs_vfsops, MOUNT_FFS, 1, 0, MNT_LOCAL, ffs_mountroot, NULL },
d133 1
a133 1
        { &mfs_vfsops, MOUNT_MFS, 3, 0, MNT_LOCAL, NULL, NULL },
d137 1
a137 1
	{ &ext2fs_vfsops, MOUNT_EXT2FS, 17, 0, MNT_LOCAL, ext2fs_mountroot, NULL },
d141 1
a141 1
        { &cd9660_vfsops, MOUNT_CD9660, 14, 0, MNT_LOCAL, cd9660_mountroot, NULL },
d146 1
a146 1
        { &msdosfs_vfsops, MOUNT_MSDOS, 4, 0, MNT_LOCAL, NULL, NULL },
d151 1
a151 1
        { &nfs_vfsops, MOUNT_NFS, 2, 0, 0, nfs_mountroot, NULL },
d156 1
a156 1
	{ &xfs_vfsops, MOUNT_XFS, 21, 0, 0, NULL, NULL },
d161 1
a161 1
        { &procfs_vfsops, MOUNT_PROCFS, 12, 0, 0, NULL, NULL },
d166 1
a166 1
        { &portal_vfsops, MOUNT_PORTAL, 8, 0, 0, NULL, NULL },
d171 1
a171 1
	{ &ntfs_vfsops, MOUNT_NTFS, 6, 0, MNT_LOCAL, NULL, NULL },
d176 1
a176 1
	{ &udf_vfsops, MOUNT_UDF, 13, 0, MNT_LOCAL, NULL, NULL },
@


1.33
log
@remove crufty adosfs.  everytime we try to change a vfs layer interface,
adosfs has the issue and in an entirely different way.  noone uses this
code so this is hte best way to handle the problem
diff from pedro who went to sleep but we need to move ahead; ok thib
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.32 2007/05/08 20:26:19 deraadt Exp $	*/
d134 1
a134 1
        { &mfs_vfsops, MOUNT_MFS, 3, 0, MNT_LOCAL, mfs_mountroot, NULL },
@


1.32
log
@struct mount *rootfs is never used
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.31 2006/11/18 08:20:51 jmc Exp $	*/
a105 4
#ifdef ADOSFS
extern 	const struct vfsops adosfs_vfsops;
#endif

a149 5
        /* AmigaDOS Filesystem */
#ifdef ADOSFS
        { &adosfs_vfsops, MOUNT_ADOSFS, 16, 0, MNT_LOCAL, NULL, NULL },
#endif

a212 1
extern struct vnodeopv_desc adosfs_vnodeop_opv_desc;
a258 3
#endif
#ifdef ADOSFS
	&adosfs_vnodeop_opv_desc,
@


1.31
log
@typos; from bret lambert
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.30 2006/09/22 14:23:04 pedro Exp $	*/
d68 1
a68 1
 * These define the root filesystem and device.
a69 1
struct mount *rootfs;
@


1.30
log
@Unplug LFS from VFS
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.29 2005/12/06 20:18:57 pedro Exp $	*/
d202 1
a202 1
 * vfs_opv_descs enumerates the list of vnode classes, each with it's own
@


1.29
log
@Remove fdescfs
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.28 2005/11/24 12:08:16 pedro Exp $	*/
a44 4
#ifdef LFS
#include <ufs/lfs/lfs_extern.h>
#endif

a82 4
#ifdef LFS
extern	const struct vfsops lfs_vfsops;
#endif

a136 5
        /* Log-based Filesystem */
#ifdef LFS
        { &lfs_vfsops, MOUNT_LFS, 5, 0, MNT_LOCAL, lfs_mountroot, NULL },
#endif

a209 3
extern struct vnodeopv_desc lfs_vnodeop_opv_desc;
extern struct vnodeopv_desc lfs_specop_opv_desc;
extern struct vnodeopv_desc lfs_fifoop_opv_desc;
a244 7
#ifdef LFS
	&lfs_vnodeop_opv_desc,
	&lfs_specop_opv_desc,
#ifdef FIFO
	&lfs_fifoop_opv_desc,
#endif
#endif
@


1.28
log
@Remove kernfs, okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.27 2005/05/27 00:58:24 pedro Exp $	*/
a102 4
#ifdef FDESC
extern	const struct vfsops fdesc_vfsops;
#endif

a192 5
        /* File Descriptor Filesystem */
#ifdef FDESC
        { &fdesc_vfsops, MOUNT_FDESC, 7, 0, 0, NULL, NULL },
#endif

a232 1
extern struct vnodeopv_desc fdesc_vnodeop_opv_desc;
a276 3
#endif
#ifdef FDESC
	&fdesc_vnodeop_opv_desc,
@


1.27
log
@still union/umap/null leftovers
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.26 2005/05/26 20:15:20 fgsch Exp $	*/
a110 4
#ifdef KERNFS
extern	const struct vfsops kernfs_vfsops;
#endif

a201 5
        /* Kernel Information Filesystem */
#ifdef KERNFS
        { &kernfs_vfsops, MOUNT_KERNFS, 11, 0, 0, NULL, NULL },
#endif

a243 1
extern struct vnodeopv_desc kernfs_vnodeop_opv_desc;
a292 3
#endif
#ifdef KERNFS
	&kernfs_vnodeop_opv_desc,
@


1.26
log
@remove traces from union et al; pedro@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.25 2005/03/29 17:24:52 pedro Exp $	*/
a252 2
extern struct vnodeopv_desc nullfs_vnodeop_opv_desc;
extern struct vnodeopv_desc umapfs_vnodeop_opv_desc;
a257 1
extern struct vnodeopv_desc union_vnodeop_opv_desc;
@


1.25
log
@Bring in UDF support from FreeBSD, disabled for now.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.24 2004/08/03 17:11:48 marius Exp $	*/
a110 8
#ifdef NULLFS
extern	const struct vfsops nullfs_vfsops;
#endif

#ifdef UMAPFS
extern	const struct vfsops umapfs_vfsops;
#endif

a122 4
#ifdef UNION
extern	const struct vfsops union_vfsops;
#endif

a195 15
        /* Loopback (Minimal) Filesystem Layer */
#ifdef NULLFS
        { &nullfs_vfsops, MOUNT_NULL, 9, 0, 0, NULL, NULL },
#endif

        /* Union (translucent) Filesystem */
#ifdef UNION
        { &union_vfsops, MOUNT_UNION, 15, 0, 0, NULL, NULL },
#endif

        /* User/Group Identifer Remapping Filesystem */
#ifdef UMAPFS
        { &umapfs_vfsops, MOUNT_UMAP, 10, 0, 0, NULL, NULL },
#endif

a306 6
#ifdef NULLFS
	&nullfs_vnodeop_opv_desc,
#endif
#ifdef UMAPFS
	&umapfs_vnodeop_opv_desc,
#endif
a318 3
#endif
#ifdef UNION
	&union_vnodeop_opv_desc,
@


1.24
log
@NFS commit coalescion: instead of sending a commit for each block, coalesce
these into larger ranges wherever possible.

this should speed up NFS writes quite a bit.

ok art@@ millert@@ pedro@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.23 2004/04/13 00:15:28 tedu Exp $	*/
d151 4
d243 5
d295 1
d374 3
@


1.23
log
@useless caddr_t cast removal.  same md5s.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.22 2003/08/14 07:46:39 mickey Exp $	*/
d63 1
@


1.22
log
@constify vfsops; tedu@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.21 2003/06/02 23:28:07 millert Exp $	*/
d245 1
a245 1
int maxvfsconf = sizeof(vfsconflist) / sizeof (struct vfsconf);
@


1.21
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.20 2003/05/20 03:05:42 tedu Exp $	*/
d83 1
a83 1
extern	struct vfsops ffs_vfsops;
d87 1
a87 1
extern	struct vfsops lfs_vfsops;
d91 1
a91 1
extern	struct vfsops mfs_vfsops;
d95 1
a95 1
extern	struct vfsops msdosfs_vfsops;
d99 1
a99 1
extern	struct vfsops nfs_vfsops;
d103 1
a103 1
extern	struct vfsops fdesc_vfsops;
d107 1
a107 1
extern	struct vfsops portal_vfsops;
d111 1
a111 1
extern	struct vfsops nullfs_vfsops;
d115 1
a115 1
extern	struct vfsops umapfs_vfsops;
d119 1
a119 1
extern	struct vfsops kernfs_vfsops;
d123 1
a123 1
extern	struct vfsops procfs_vfsops;
d127 1
a127 1
extern	struct vfsops cd9660_vfsops;
d131 1
a131 1
extern	struct vfsops union_vfsops;
d135 1
a135 1
extern 	struct vfsops adosfs_vfsops;
d139 1
a139 1
extern	struct vfsops ext2fs_vfsops;
d143 1
a143 1
extern  struct vfsops xfs_vfsops;
d147 1
a147 1
extern  struct vfsops ntfs_vfsops;
@


1.20
log
@support for NTFS.  from NetBSD via Julien Bordet
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.19 2003/05/12 21:06:00 tedu Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.19
log
@{null,umap}_v* are now named after the file system option:
{nullfs,umapfs}_v*
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.17 2003/02/24 20:02:13 deraadt Exp $	*/
d150 4
d237 5
d288 1
d364 3
@


1.18
log
@remove two remnants of an imaginary in-kernel AFS support
@
text
@d115 1
a115 1
extern	struct vfsops null_vfsops;
d119 1
a119 1
extern	struct vfsops umap_vfsops;
d205 1
a205 1
        { &null_vfsops, MOUNT_NULL, 9, 0, 0, NULL, NULL },
d215 1
a215 1
        { &umap_vfsops, MOUNT_UMAP, 10, 0, 0, NULL, NULL },
d265 2
a266 2
extern struct vnodeopv_desc null_vnodeop_opv_desc;
extern struct vnodeopv_desc umap_vnodeop_opv_desc;
d318 1
a318 1
	&null_vnodeop_opv_desc,
d321 1
a321 1
	&umap_vnodeop_opv_desc,
@


1.17
log
@more tcfs bye bye
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.16 2003/02/24 02:17:22 deraadt Exp $	*/
a129 4
#ifdef AFS
extern	struct vfsops afs_vfsops;
#endif

a190 5
#endif

        /* Andrew Filesystem */
#ifdef AFS
        { &afs_vfsops, MOUNT_AFS, 13, 0, 0, afs_mountroot, NULL },
@


1.16
log
@bye bye tcfs
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.15 2000/06/17 17:16:05 provos Exp $	*/
a287 1
extern struct vnodeopv_desc tcfs_vnodeop_opv_desc;
@


1.15
log
@initial import of tcfs.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.14 2000/02/07 04:53:33 assar Exp $	*/
a153 4
#ifdef TCFS
extern  struct vfsops tcfs_vfsops;
#endif

a241 4
#ifdef TCFS
        { &tcfs_vfsops, MOUNT_TCFS, 22, 0, 0, NULL, NULL },
#endif

a363 3
#endif
#ifdef TCFS
        &tcfs_vnodeop_opv_desc,
@


1.15.8.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d115 1
a115 1
extern	struct vfsops nullfs_vfsops;
d119 1
a119 1
extern	struct vfsops umapfs_vfsops;
d130 4
d154 4
d201 5
d218 1
a218 1
        { &nullfs_vfsops, MOUNT_NULL, 9, 0, 0, NULL, NULL },
d228 1
a228 1
        { &umapfs_vfsops, MOUNT_UMAP, 10, 0, 0, NULL, NULL },
d246 4
d282 2
a283 2
extern struct vnodeopv_desc nullfs_vnodeop_opv_desc;
extern struct vnodeopv_desc umapfs_vnodeop_opv_desc;
d296 1
d336 1
a336 1
	&nullfs_vnodeop_opv_desc,
d339 1
a339 1
	&umapfs_vnodeop_opv_desc,
d372 3
@


1.14
log
@at least make it compile with LFS defined
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.13 1999/02/15 05:05:33 art Exp $	*/
d154 4
d246 4
d296 1
d373 4
@


1.14.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.15 2000/06/17 17:16:05 provos Exp $	*/
a153 4
#ifdef TCFS
extern  struct vfsops tcfs_vfsops;
#endif

a241 4
#ifdef TCFS
        { &tcfs_vfsops, MOUNT_TCFS, 22, 0, 0, NULL, NULL },
#endif

a287 1
extern struct vnodeopv_desc tcfs_vnodeop_opv_desc;
a363 4
#ifdef TCFS
        &tcfs_vnodeop_opv_desc,
#endif

@


1.14.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d154 4
d246 4
d296 1
d372 3
@


1.14.2.3
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.14.2.2 2003/03/28 00:41:27 niklas Exp $	*/
d130 4
d195 5
@


1.14.2.4
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d115 1
a115 1
extern	struct vfsops nullfs_vfsops;
d119 1
a119 1
extern	struct vfsops umapfs_vfsops;
d205 1
a205 1
        { &nullfs_vfsops, MOUNT_NULL, 9, 0, 0, NULL, NULL },
d215 1
a215 1
        { &umapfs_vfsops, MOUNT_UMAP, 10, 0, 0, NULL, NULL },
d265 2
a266 2
extern struct vnodeopv_desc nullfs_vnodeop_opv_desc;
extern struct vnodeopv_desc umapfs_vnodeop_opv_desc;
d318 1
a318 1
	&nullfs_vnodeop_opv_desc,
d321 1
a321 1
	&umapfs_vnodeop_opv_desc,
@


1.14.2.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.14.2.4 2003/05/16 00:29:43 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
a149 4
#ifdef NTFS
extern  struct vfsops ntfs_vfsops;
#endif

a232 5
	/* NTFS Filesystem */
#ifdef NTFS
	{ &ntfs_vfsops, MOUNT_NTFS, 6, 0, MNT_LOCAL, NULL, NULL },
#endif

a278 1
extern struct vnodeopv_desc ntfs_vnodeop_opv_desc;
a353 3
#endif
#ifdef NTFS
	&ntfs_vnodeop_opv_desc,
@


1.14.2.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d83 1
a83 1
extern	const struct vfsops ffs_vfsops;
d87 1
a87 1
extern	const struct vfsops lfs_vfsops;
d91 1
a91 1
extern	const struct vfsops mfs_vfsops;
d95 1
a95 1
extern	const struct vfsops msdosfs_vfsops;
d99 1
a99 1
extern	const struct vfsops nfs_vfsops;
d103 1
a103 1
extern	const struct vfsops fdesc_vfsops;
d107 1
a107 1
extern	const struct vfsops portal_vfsops;
d111 1
a111 1
extern	const struct vfsops nullfs_vfsops;
d115 1
a115 1
extern	const struct vfsops umapfs_vfsops;
d119 1
a119 1
extern	const struct vfsops kernfs_vfsops;
d123 1
a123 1
extern	const struct vfsops procfs_vfsops;
d127 1
a127 1
extern	const struct vfsops cd9660_vfsops;
d131 1
a131 1
extern	const struct vfsops union_vfsops;
d135 1
a135 1
extern 	const struct vfsops adosfs_vfsops;
d139 1
a139 1
extern	const struct vfsops ext2fs_vfsops;
d143 1
a143 1
extern  const struct vfsops xfs_vfsops;
d147 1
a147 1
extern  const struct vfsops ntfs_vfsops;
@


1.14.2.7
log
@Merge with the trunk
@
text
@d245 1
a245 1
int maxvfsconf = sizeof(vfsconflist) / sizeof(struct vfsconf);
@


1.13
log
@We don't need to include xfs_extern.h
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.12 1998/08/30 17:11:36 art Exp $	*/
d47 4
@


1.12
log
@glue for xfs
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.11 1997/12/26 22:33:01 csapuntz Exp $	*/
a59 4
#endif

#ifdef XFS
#include <xfs/xfs_extern.h>
@


1.11
log
@Get rid of string literals for file system names and replace with
MOUNT_* macros. Duhhh.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.10 1997/11/08 17:21:04 niklas Exp $	*/
d62 4
d150 4
d202 5
d287 1
d360 3
@


1.10
log
@Sync to NetBSD; some extra KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.9 1997/11/07 16:51:21 csapuntz Exp $	*/
d153 1
a153 1
        { &ffs_vfsops, "ffs", 1, 0, MNT_LOCAL, ffs_mountroot, NULL },
d158 1
a158 1
        { &lfs_vfsops, "lfs", 5, 0, MNT_LOCAL, lfs_mountroot, NULL },
d163 1
a163 1
        { &mfs_vfsops, "mfs", 3, 0, MNT_LOCAL, mfs_mountroot, NULL },
d171 1
a171 1
        { &cd9660_vfsops, "cd9660", 14, 0, MNT_LOCAL, cd9660_mountroot, NULL },
d176 1
a176 1
        { &msdosfs_vfsops, "msdos", 4, 0, MNT_LOCAL, NULL, NULL },
d181 1
a181 1
        { &adosfs_vfsops, "adosfs", 16, 0, MNT_LOCAL, NULL, NULL },
d186 1
a186 1
        { &nfs_vfsops, "nfs", 2, 0, 0, nfs_mountroot, NULL },
d191 1
a191 1
        { &afs_vfsops, "andrewfs", 13, 0, 0, afs_mountroot, NULL },
d196 1
a196 1
        { &procfs_vfsops, "procfs", 12, 0, 0, NULL, NULL },
d201 1
a201 1
        { &null_vfsops, "loopback", 9, 0, 0, NULL, NULL },
d206 1
a206 1
        { &union_vfsops, "union", 15, 0, 0, NULL, NULL },
d211 1
a211 1
        { &umap_vfsops, "umap", 10, 0, 0, NULL, NULL },
d216 1
a216 1
        { &portal_vfsops, "portal", 8, 0, 0, NULL, NULL },
d221 1
a221 1
        { &fdesc_vfsops, "fdesc", 7, 0, 0, NULL, NULL },
d226 1
a226 1
        { &kernfs_vfsops, "kernfs", 11, 0, 0, NULL, NULL },
@


1.9
log
@EXT2FS somehow disappeared from the list of file systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.8 1997/11/06 05:58:26 csapuntz Exp $	*/
d55 1
@


1.8
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.7 1997/10/06 20:20:09 deraadt Exp $	*/
d49 4
d165 3
@


1.7
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.5 1997/02/24 14:20:01 niklas Exp $	*/
d43 22
d75 2
d142 1
a142 2
 * XXX ORDERING MATTERS, for COMPAT_09.  when that goes away, 
 * empty slots can go away.
d144 3
a146 2
struct vfsops *vfssw[] = {
	NULL,		/* 0 = MOUNT_NONE */
d148 1
a148 3
	&ffs_vfsops,		/* 1 = MOUNT_FFS */
#else
	NULL,
d150 4
a153 4
#ifdef NFSCLIENT
	&nfs_vfsops,		/* 2 = MOUNT_NFS */
#else
	NULL,
d155 2
d158 1
a158 3
	&mfs_vfsops,		/* 3 = MOUNT_MFS */
#else
	NULL,
d160 7
d168 1
a168 3
	&msdosfs_vfsops,	/* 4 = MOUNT_MSDOS */
#else
	NULL,
d170 9
a178 4
#ifdef LFS
	&lfs_vfsops,		/* 5 = MOUNT_LFS */
#else
	NULL,
d180 4
a183 5
	NULL,			/* 6 = MOUNT_LOFS */
#ifdef FDESC
	&fdesc_vfsops,		/* 7 = MOUNT_FDESC */
#else
	NULL,
d185 4
a188 4
#ifdef PORTAL
	&portal_vfsops,		/* 8 = MOUNT_PORTAL */
#else
	NULL,
d190 2
d193 6
a198 3
	&null_vfsops,		/* 9 = MOUNT_NULL */
#else
	NULL,
d200 2
d203 1
a203 3
	&umap_vfsops,		/* 10 = MOUNT_UMAP */
#else
	NULL,
d205 4
a208 4
#ifdef KERNFS
	&kernfs_vfsops,		/* 11 = MOUNT_KERNFS */
#else
	NULL,
d210 4
a213 4
#ifdef PROCFS
	&procfs_vfsops,		/* 12 = MOUNT_PROCFS */
#else
	NULL,
d215 4
a218 4
#ifdef AFS
	&afs_vfsops,		/* 13 = MOUNT_AFS */
#else
	NULL,
d220 1
a220 27
#ifdef CD9660
	&cd9660_vfsops,		/* 14 = MOUNT_ISOFS */
#else
	NULL,
#endif
#ifdef UNION
	&union_vfsops,		/* 15 = MOUNT_UNION */
#else
	NULL,
#endif
#ifdef ADOSFS
	&adosfs_vfsops,		/* 16 = MOUNT_ADOSFS */
#else
	NULL,
#endif
#ifdef EXT2FS
	&ext2fs_vfsops,		/* 17 = MOUNT_EXT2FS */
#else
	NULL,
#endif
#ifdef LKM			/* for LKM's.  add new FS's before these */
	NULL,
	NULL,
	NULL,
	NULL,
#endif
	0
d222 9
a230 1
int	nvfssw = sizeof(vfssw) / sizeof(vfssw[0]);
d237 1
d268 1
@


1.6
log
@VFS Lite2 Changes
@
text
@a42 22
#ifdef FFS
#include <ufs/ufs/quota.h>
#include <ufs/ufs/inode.h>
#include <ufs/ffs/ffs_extern.h>
#endif

#ifdef CD9660
#include <isofs/cd9660/iso.h>
#endif

#ifdef MFS
#include <ufs/mfs/mfs_extern.h>
#endif

#ifdef NFSCLIENT
#include <nfs/rpcv2.h>
#include <nfs/nfsproto.h>
#include <nfs/nfsnode.h>
#include <nfs/nfs.h>
#include <nfs/nfsmount.h>
#endif

a52 2


d118 2
a119 1
 * Set up the filesystem operations for vnodes.
d121 2
a122 3
static struct vfsconf vfsconflist[] = {

        /* Fast Filesystem */
d124 3
a126 1
        { &ffs_vfsops, "ffs", 1, 0, MNT_LOCAL, ffs_mountroot, NULL },
d128 4
a131 4

        /* Log-based Filesystem */
#ifdef LFS
        { &lfs_vfsops, "lfs", 5, 0, MNT_LOCAL, lfs_mountroot, NULL },
a132 2

        /* Memory-based Filesystem */
d134 13
a146 1
        { &mfs_vfsops, "mfs", 3, 0, MNT_LOCAL, mfs_mountroot, NULL },
d148 5
a152 4

        /* ISO9660 (aka CDROM) Filesystem */
#ifdef CD9660
        { &cd9660_vfsops, "cd9660", 14, 0, MNT_LOCAL, cd9660_mountroot, NULL },
d154 4
a157 4

        /* MSDOS Filesystem */
#ifdef MSDOSFS
        { &msdosfs_vfsops, "msdos", 4, 0, MNT_LOCAL, NULL, NULL },
d159 4
a162 4

        /* AmigaDOS Filesystem */
#ifdef ADOSFS
        { &adosfs_vfsops, "adosfs", 16, 0, MNT_LOCAL, NULL, NULL },
d164 4
a167 4

        /* Sun-compatible Network Filesystem */
#ifdef NFSCLIENT
        { &nfs_vfsops, "nfs", 2, 0, 0, nfs_mountroot, NULL },
d169 4
a172 4

        /* Andrew Filesystem */
#ifdef AFS
        { &afs_vfsops, "andrewfs", 13, 0, 0, afs_mountroot, NULL },
a173 2

        /* /proc Filesystem */
d175 3
a177 1
        { &procfs_vfsops, "procfs", 12, 0, 0, NULL, NULL },
d179 9
a187 4

        /* Loopback (Minimal) Filesystem Layer */
#ifdef NULLFS
        { &null_vfsops, "loopback", 9, 0, 0, NULL, NULL },
a188 2

        /* Union (translucent) Filesystem */
d190 3
a192 1
        { &union_vfsops, "union", 15, 0, 0, NULL, NULL },
d194 4
a197 4

        /* User/Group Identifer Remapping Filesystem */
#ifdef UMAPFS
        { &umap_vfsops, "umap", 10, 0, 0, NULL, NULL },
d199 10
a208 14

        /* Portal Filesystem */
#ifdef PORTAL
        { &portal_vfsops, "portal", 8, 0, 0, NULL, NULL },
#endif

        /* File Descriptor Filesystem */
#ifdef FDESC
        { &fdesc_vfsops, "fdesc", 7, 0, 0, NULL, NULL },
#endif

        /* Kernel Information Filesystem */
#ifdef KERNFS
        { &kernfs_vfsops, "kernfs", 11, 0, 0, NULL, NULL },
d210 1
a210 1

d212 1
a212 9


/*
 * Initially the size of the list, vfs_init will set maxvfsconf
 * to the highest defined type number.
 */
int maxvfsconf = sizeof(vfsconflist) / sizeof (struct vfsconf);
struct vfsconf *vfsconf = vfsconflist;

a218 1
extern struct vnodeopv_desc sync_vnodeop_opv_desc;
a248 1
	&sync_vnodeop_opv_desc,
@


1.5
log
@OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: vfs_conf.c,v 1.21.4.1 1995/11/01 00:06:26 jtc Exp $	*/
d43 22
d75 2
d142 1
a142 2
 * XXX ORDERING MATTERS, for COMPAT_09.  when that goes away, 
 * empty slots can go away.
d144 3
a146 2
struct vfsops *vfssw[] = {
	NULL,		/* 0 = MOUNT_NONE */
d148 1
a148 3
	&ffs_vfsops,		/* 1 = MOUNT_FFS */
#else
	NULL,
d150 4
a153 4
#ifdef NFSCLIENT
	&nfs_vfsops,		/* 2 = MOUNT_NFS */
#else
	NULL,
d155 2
d158 1
a158 3
	&mfs_vfsops,		/* 3 = MOUNT_MFS */
#else
	NULL,
d160 7
d168 1
a168 3
	&msdosfs_vfsops,	/* 4 = MOUNT_MSDOS */
#else
	NULL,
d170 9
a178 4
#ifdef LFS
	&lfs_vfsops,		/* 5 = MOUNT_LFS */
#else
	NULL,
d180 4
a183 5
	NULL,			/* 6 = MOUNT_LOFS */
#ifdef FDESC
	&fdesc_vfsops,		/* 7 = MOUNT_FDESC */
#else
	NULL,
d185 4
a188 4
#ifdef PORTAL
	&portal_vfsops,		/* 8 = MOUNT_PORTAL */
#else
	NULL,
d190 2
d193 6
a198 3
	&null_vfsops,		/* 9 = MOUNT_NULL */
#else
	NULL,
d200 2
d203 1
a203 3
	&umap_vfsops,		/* 10 = MOUNT_UMAP */
#else
	NULL,
d205 4
a208 4
#ifdef KERNFS
	&kernfs_vfsops,		/* 11 = MOUNT_KERNFS */
#else
	NULL,
d210 4
a213 4
#ifdef PROCFS
	&procfs_vfsops,		/* 12 = MOUNT_PROCFS */
#else
	NULL,
d215 4
a218 4
#ifdef AFS
	&afs_vfsops,		/* 13 = MOUNT_AFS */
#else
	NULL,
d220 1
a220 27
#ifdef CD9660
	&cd9660_vfsops,		/* 14 = MOUNT_ISOFS */
#else
	NULL,
#endif
#ifdef UNION
	&union_vfsops,		/* 15 = MOUNT_UNION */
#else
	NULL,
#endif
#ifdef ADOSFS
	&adosfs_vfsops,		/* 16 = MOUNT_ADOSFS */
#else
	NULL,
#endif
#ifdef EXT2FS
	&ext2fs_vfsops,		/* 17 = MOUNT_EXT2FS */
#else
	NULL,
#endif
#ifdef LKM			/* for LKM's.  add new FS's before these */
	NULL,
	NULL,
	NULL,
	NULL,
#endif
	0
d222 9
a230 1
int	nvfssw = sizeof(vfssw) / sizeof(vfssw[0]);
d237 1
d268 1
@


1.4
log
@Pull in changes from Manuel.
@
text
@d1 1
@


1.3
log
@Add ext2fs to the vfssw
@
text
@d243 3
d310 7
@


1.2
log
@complete ufs -> ffs change (From John Kohl; PR #1403)
@
text
@d112 4
d195 5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: vfs_conf.c,v 1.21 1994/06/29 06:33:52 cgd Exp $	*/
d53 1
a53 1
extern	struct vfsops ufs_vfsops;
d119 1
a119 1
	&ufs_vfsops,		/* 1 = MOUNT_UFS */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
