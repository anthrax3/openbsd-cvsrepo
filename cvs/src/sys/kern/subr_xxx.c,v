head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.4
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.8
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.6
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.12.0.10
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.8
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.6
	OPENBSD_5_0:1.12.0.4
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.2
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.9.0.20
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.16
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.6.0.26
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.24
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.22
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.20
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.18
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.16
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.12.05.10.11.53;	author tedu;	state Exp;
branches;
next	1.14;
commitid	Cl55DD2g2xm69E6W;

1.14
date	2015.03.14.03.38.50;	author jsg;	state Exp;
branches;
next	1.13;
commitid	p4LJxGKbi0BU2cG6;

1.13
date	2013.03.28.16.55.25;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2010.09.28.20.27.56;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2010.09.24.13.21.30;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	2010.09.21.01.09.10;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.09.09.09.52;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.28.06;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.14.00.20.38;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	97.11.06.05.58.20;	author csapuntz;	state Exp;
branches
	1.6.10.1
	1.6.20.1;
next	1.5;

1.5
date	97.10.06.20.20.00;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.15.12.26;	author csapuntz;	state Exp;
branches;
next	1.3;

1.3
date	97.02.24.14.19.58;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.02.29.13.38.53;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.45;	author deraadt;	state Exp;
branches;
next	;

1.6.10.1
date	2003.05.16.00.29.43;	author niklas;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2003.06.07.11.03.40;	author ho;	state Exp;
branches;
next	;

1.6.20.1
date	2003.05.19.22.31.57;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@remove stale lint annotations
@
text
@/*	$OpenBSD: subr_xxx.c,v 1.14 2015/03/14 03:38:50 jsg Exp $	*/
/*	$NetBSD: subr_xxx.c,v 1.10 1996/02/04 02:16:51 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)subr_xxx.c	8.1 (Berkeley) 6/10/93
 */

/*
 * Miscellaneous trivial functions, including many
 * that are often inline-expanded or done in assembler.
 */
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/conf.h>


/*
 * Unsupported device function (e.g. writing to read-only device).
 */
int
enodev(void)
{

	return (ENODEV);
}

/*
 * Unconfigured device function; driver not configured.
 */
int
enxio(void)
{

	return (ENXIO);
}

/*
 * Unsupported ioctl function.
 */
int
enoioctl(void)
{

	return (ENOTTY);
}

/*
 * Unsupported system function.
 * This is used for an otherwise-reasonable operation
 * that is not supported by the current system binary.
 */
int
enosys(void)
{

	return (ENOSYS);
}

/*
 * Return error for operation not supported
 * on a specific object or file type.
 */
int
eopnotsupp(void *v)
{

	return (EOPNOTSUPP);
}

/*
 * Generic null operation, always returns success.
 */
int
nullop(void *v)
{

	return (0);
}

struct bdevsw *
bdevsw_lookup(dev_t dev)
{
	return (&bdevsw[major(dev)]);
}

struct cdevsw *
cdevsw_lookup(dev_t dev)
{
	return (&cdevsw[major(dev)]);
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
chrtoblk(dev_t dev)
{
	int blkmaj;

	if (major(dev) >= nchrdev || major(dev) >= nchrtoblktbl)
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a block device number to a character device number.
 */
dev_t
blktochr(dev_t dev)
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < nchrtoblktbl; i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
}

/*
 * Check that we're in a context where it's okay to sleep.
 */
void
assertwaitok(void)
{
	splassert(IPL_NONE);
#ifdef DIAGNOSTIC
	if (curcpu()->ci_mutex_level != 0)
		panic("assertwaitok: non-zero mutex count: %d",
		    curcpu()->ci_mutex_level);
#endif
}
@


1.14
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.13 2013/03/28 16:55:25 deraadt Exp $	*/
a89 1
/*ARGSUSED*/
a99 1
/*ARGSUSED*/
@


1.13
log
@do not include machine/cpu.h from a .c file; it is the responsibility of
.h files to pull it in, if needed
ok tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.12 2010/09/28 20:27:56 miod Exp $	*/
a40 1
#include <sys/device.h>
@


1.12
log
@Implement a per-cpu held mutex counter if DIAGNOSTIC on all non-x86 platforms,
to complete matthew@@'s commit of a few days ago, and drop __HAVE_CPU_MUTEX_LEVEL
define. With help from, and ok deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.11 2010/09/24 13:21:30 matthew Exp $	*/
a43 1
#include <machine/cpu.h>
@


1.11
log
@Add stricter asserts to DIAGNOSTIC kernels to help catch mutex and
rwlock misuse.  In particular, this commit makes the following
changes:

  1. i386 and amd64 now count the number of active mutexes so that
assertwaitok(9) can detect attempts to sleep while holding a mutex.

  2. i386 and amd64 check that we actually hold mutexes when passed to
mtx_leave().

  3. Calls to rw_exit*() now call rw_assert_{rd,wr}lock() as
appropriate.

ok krw@@, oga@@; "sounds good to me" deraadt@@; assembly bits double
checked by pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.10 2010/09/21 01:09:10 matthew Exp $	*/
d163 1
a163 1
#ifdef __HAVE_CPU_MUTEX_LEVEL
@


1.10
log
@Add assertwaitok(9) to declare code paths that assume they can sleep.
Currently only checks that we're not in an interrupt context, but will
soon check that we're not holding any mutexes either.

Update malloc(9) and pool(9) to use assertwaitok(9) as appropriate.

"i like it" art@@, oga@@, marco@@; "i see no harm" deraadt@@; too trivial
for me to bother prying actual oks from people.
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.9 2005/12/09 09:09:52 jsg Exp $	*/
d163 5
@


1.9
log
@ansi and deregister. No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.8 2003/06/02 23:28:06 millert Exp $	*/
d154 9
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.7 2003/05/14 00:20:38 tedu Exp $	*/
d50 1
a50 1
enodev()
d60 1
a60 1
enxio()
d70 1
a70 1
enoioctl()
d82 1
a82 1
enosys ()
d94 1
a94 2
eopnotsupp(v)
	void *v;
d105 1
a105 2
nullop(v)
	void *v;
d127 1
a127 2
chrtoblk(dev)
	dev_t dev;
d143 1
a143 2
blktochr(dev)
	dev_t dev;
@


1.7
log
@add {b,c}devsw_lookup convenience functions.
move chrtoblk and blktochr into MI code.
tested on several archs and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.6 1997/11/06 05:58:20 csapuntz Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.5 1997/10/06 20:20:00 deraadt Exp $	*/
d45 2
d115 47
@


1.6.20.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 2
#include <sys/device.h>
#include <sys/conf.h>
a112 47
}

struct bdevsw *
bdevsw_lookup(dev_t dev)
{
	return (&bdevsw[major(dev)]);
}

struct cdevsw *
cdevsw_lookup(dev_t dev)
{
	return (&cdevsw[major(dev)]);
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev || major(dev) >= nchrtoblktbl)
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a block device number to a character device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < nchrtoblktbl; i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
@


1.6.10.1
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 2
#include <sys/device.h>
#include <sys/conf.h>
a112 47
}

struct bdevsw *
bdevsw_lookup(dev_t dev)
{
	return (&bdevsw[major(dev)]);
}

struct cdevsw *
cdevsw_lookup(dev_t dev)
{
	return (&cdevsw[major(dev)]);
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev || major(dev) >= nchrtoblktbl)
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a block device number to a character device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < nchrtoblktbl; i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
@


1.6.10.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.6.10.1 2003/05/16 00:29:43 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.3 1997/02/24 14:19:58 niklas Exp $	*/
d94 1
d96 2
a97 1
eopnotsupp()
@


1.4
log
@VFS Lite2 Changes
@
text
@a93 1
/*ARGSUSED*/
d95 1
a95 2
eopnotsupp(v)
	void *v;
@


1.3
log
@OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: subr_xxx.c,v 1.10 1996/02/04 02:16:51 christos Exp $	*/
d94 1
d96 2
a97 1
eopnotsupp()
@


1.2
log
@From NetBSD: Merge with NetBSD 960217
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: subr_xxx.c,v 1.9 1994/06/29 06:33:03 cgd Exp $	*/
d83 1
a83 1
enosys()
d103 1
d105 2
a106 1
nullop()
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
