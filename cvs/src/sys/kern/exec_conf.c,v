head	1.35;
access;
symbols
	OPENBSD_6_0:1.34.0.2
	OPENBSD_6_0_BASE:1.34
	OPENBSD_5_9:1.33.0.2
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.33.0.4
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.32.0.2
	OPENBSD_5_7_BASE:1.32
	OPENBSD_5_6:1.31.0.6
	OPENBSD_5_6_BASE:1.31
	OPENBSD_5_5:1.31.0.4
	OPENBSD_5_5_BASE:1.31
	OPENBSD_5_4:1.29.0.4
	OPENBSD_5_4_BASE:1.29
	OPENBSD_5_3:1.29.0.2
	OPENBSD_5_3_BASE:1.29
	OPENBSD_5_2:1.28.0.6
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.4
	OPENBSD_5_0:1.28.0.2
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.25.0.4
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.19.0.4
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.6
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.18.0.6
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.12
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.10
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.8
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.6
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.4
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	SMP_SYNC_A:1.17
	SMP_SYNC_B:1.17
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.8
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.6
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.12.0.2
	UBC_BASE:1.12
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.10
	OPENBSD_2_8:1.10.0.8
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.6
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.4
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.35
date	2017.02.08.05.09.25;	author guenther;	state Exp;
branches;
next	1.34;
commitid	V3fgN8BO1mri8xSU;

1.34
date	2016.02.28.15.46.18;	author naddy;	state Exp;
branches;
next	1.33;
commitid	iOuZImHZRAr7Hvd6;

1.33
date	2015.07.18.00.15.10;	author mpi;	state Exp;
branches;
next	1.32;
commitid	svWHR2riSjL5ppiW;

1.32
date	2014.10.09.04.04.27;	author tedu;	state Exp;
branches;
next	1.31;
commitid	29cCQl7KlarTmoPD;

1.31
date	2013.10.17.10.38.28;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2013.10.17.08.02.19;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2013.02.09.21.03.22;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2011.07.04.22.53.53;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2011.06.27.03.27.07;	author tedu;	state Exp;
branches;
next	1.26;

1.26
date	2011.04.05.12.50.15;	author guenther;	state Exp;
branches;
next	1.25;

1.25
date	2010.07.05.22.20.22;	author tedu;	state Exp;
branches;
next	1.24;

1.24
date	2010.07.02.19.57.15;	author tedu;	state Exp;
branches;
next	1.23;

1.23
date	2010.07.01.17.30.25;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2010.06.30.20.38.49;	author tedu;	state Exp;
branches;
next	1.21;

1.21
date	2010.06.29.20.30.33;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.29.18.46.34;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2008.09.19.05.41.29;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.28.23.10.10;	author beck;	state Exp;
branches;
next	1.17;

1.17
date	2004.04.15.00.22.42;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2003.08.23.20.27.30;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.23.20.02.59;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.23.19.21.15;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.21.18.56.07;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.14.14.37.22;	author hugh;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.19.13.28.43;	author art;	state Exp;
branches;
next	1.10;

1.10
date	99.09.10.12.24.27;	author kstailey;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	97.09.02.08.48.30;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	97.01.13.11.07.47;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.12.23.02.42.42;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.06.07.19.38.58;	author pefo;	state Exp;
branches;
next	1.5;

1.5
date	96.05.22.07.53.46;	author etheisen;	state Exp;
branches;
next	1.4;

1.4
date	96.05.22.07.38.30;	author etheisen;	state Exp;
branches;
next	1.3;

1.3
date	96.05.02.08.33.15;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.06.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.43;	author deraadt;	state Exp;
branches;
next	;

1.10.4.1
date	2001.10.31.03.26.28;	author nate;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2001.12.05.01.02.39;	author niklas;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2004.02.19.10.56.37;	author niklas;	state Exp;
branches;
next	1.10.4.4;

1.10.4.4
date	2004.06.05.23.13.01;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.35
log
@In exec_elf.c: expand ELFNAME(), ELFNAME2(), and ELFNAMEEND() except
leaving out the size, so that
	ELFNAME2(exec,makecmds)
becomes
	exec_elf_makecmds
instead of
	exec_elf{32,64}_makecmds
and then delete the ELFNAME2() and ELFNAMEEND() macros.

Move the prototypes for functions local to exec_elf.c to there from
exec_elf.h.

Simplify the SMALL_KERNEL conditionals around the ELF coredump code.

Change exec_conf.c to use the size-generic names and macros

Remove exec_elf{32,64}.c and just build exec_elf.c; delete the
_KERN_DO_ELF and _KERN_DO_ELF64 #defines.

ok jca@@, encouragement from deraadt@@ and tom@@
@
text
@/*	$OpenBSD: exec_conf.c,v 1.34 2016/02/28 15:46:18 naddy Exp $	*/
/*	$NetBSD: exec_conf.c,v 1.16 1995/12/09 05:34:47 cgd Exp $	*/

/*
 * Copyright (c) 1993, 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/exec.h>
#include <sys/exec_script.h>
#include <sys/exec_elf.h>

extern struct emul emul_native;

struct execsw execsw[] = {
	{ EXEC_SCRIPT_HDRSZ, exec_script_makecmds, &emul_native, },	/* shell scripts */
	{ sizeof(Elf_Ehdr), exec_elf_makecmds, &emul_native },	/* elf binaries */
};
int nexecs = (sizeof execsw / sizeof(*execsw));
int exec_maxhdrsz;

void	init_exec(void);

void
init_exec(void)
{
	int i;

	/*
	 * figure out the maximum size of an exec header.
	 */
	for (i = 0; i < nexecs; i++)
		if (execsw[i].es_check != NULL &&
		    execsw[i].es_hdrsz > exec_maxhdrsz)
			exec_maxhdrsz = execsw[i].es_hdrsz;
}
@


1.34
log
@Support for running Linux binaries under emulation is going away.

Remove "option COMPAT_LINUX" and everything directly tied to it from the
kernel and the corresponding man page documentation.

ok visa@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.33 2015/07/18 00:15:10 mpi Exp $	*/
a36 2

#if defined(_KERN_DO_ELF) || defined(_KERN_DO_ELF64)
a37 1
#endif
d43 1
a43 6
#ifdef _KERN_DO_ELF
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_native },	/* elf binaries */
#endif
#ifdef _KERN_DO_ELF64
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_native },	/* elf binaries */
#endif /* ELF64 */
@


1.33
log
@Kill emul left-over.

From Martin Natano
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.32 2014/10/09 04:04:27 tedu Exp $	*/
d42 1
a42 5
#ifdef COMPAT_LINUX
#include <compat/linux/linux_exec.h>
#endif

extern struct emul emul_native, emul_linux_elf;
a51 3
#ifdef COMPAT_LINUX
	{ sizeof(Elf32_Ehdr), exec_linux_elf32_makecmds, &emul_linux_elf },
#endif
@


1.32
log
@remove LKM support
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.31 2013/10/17 10:38:28 deraadt Exp $	*/
d46 1
a46 1
extern struct emul emul_native, emul_elf32, emul_elf64, emul_linux_elf;
@


1.31
log
@another lurking ecoff reference is found..
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.30 2013/10/17 08:02:19 deraadt Exp $	*/
a58 7
#ifdef LKM
	{ 0, NULL, NULL },				/* entries for LKMs */
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
#endif
a71 2
	 * XXX should be able to keep LKM code from modifying exec switch
	 * when we're still using it, but...
@


1.30
log
@Remove support for a.out and ecoff.  We only do elf now.
ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.29 2013/02/09 21:03:22 miod Exp $	*/
a36 4

#if defined(_KERN_DO_ECOFF)
#include <sys/exec_ecoff.h>
#endif
@


1.29
log
@Remove no longer used struct emul extern declarations.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.28 2011/07/04 22:53:53 tedu Exp $	*/
d50 1
a50 2
extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_linux_elf, emul_linux_aout;
a53 10
#ifdef _KERN_DO_AOUT
#ifdef COMPAT_AOUT
	{ sizeof(struct exec), exec_aout_makecmds, &emul_aout },
#else
	{ sizeof(struct exec), exec_aout_makecmds, &emul_native },	/* a.out binaries */
#endif
#endif
#ifdef _KERN_DO_ECOFF
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_native },	/* ecoff binaries */
#endif
a60 1
	{ LINUX_AOUT_HDR_SIZE, exec_linux_aout_makecmds, &emul_linux_aout }, /* linux a.out */
@


1.28
log
@remove compat_svr4 support.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.27 2011/06/27 03:27:07 tedu Exp $	*/
d51 1
a51 2
	emul_freebsd_aout, emul_freebsd_elf,
	emul_linux_elf, emul_linux_aout, emul_netbsd_elf64;
@


1.27
log
@remove compat_vax1k.  no more 4.3bsd reno support.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.26 2011/04/05 12:50:15 guenther Exp $	*/
a45 4
#ifdef COMPAT_SVR4
#include <compat/svr4/svr4_exec.h>
#endif

d52 1
a52 2
	emul_linux_elf, emul_linux_aout, emul_netbsd_elf64,
	emul_sunos, emul_svr4;
a74 3
#endif
#ifdef COMPAT_SVR4
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_svr4 },	/* elf binaries */
@


1.26
log
@Push COMPAT_FREEBSD in front of a whale.  Buggy, out of date, no
one has been weeding it, and it makes life harder.

Toasts of Brennivin for its passing from many; diff ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.25 2010/07/05 22:20:22 tedu Exp $	*/
a53 4
#ifdef COMPAT_VAX1K
#include <compat/vax1k/vax1k_exec.h>
#endif

a79 3
#endif
#ifdef COMPAT_VAX1K
	{ sizeof(struct exec), exec_vax1k_makecmds, &emul_native },	/* vax1k a.out */
@


1.25
log
@remove compat_bsdos support
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.24 2010/07/02 19:57:15 tedu Exp $	*/
a53 4
#ifdef COMPAT_FREEBSD
#include <compat/freebsd/freebsd_exec.h>
#endif

a83 4
#endif
#ifdef COMPAT_FREEBSD
	{ FREEBSD_AOUT_HDR_SIZE, exec_freebsd_aout_makecmds, &emul_freebsd_aout },	/* freebsd */
	{ sizeof(Elf32_Ehdr), exec_freebsd_elf32_makecmds, &emul_freebsd_elf },
@


1.24
log
@remove support for compat_sunos (and m68k4k).  ok deraadt guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.23 2010/07/01 17:30:25 tedu Exp $	*/
a53 4
#ifdef COMPAT_BSDOS
#include <compat/bsdos/bsdos_exec.h>
#endif

d63 1
a63 1
	emul_bsdos, emul_freebsd_aout, emul_freebsd_elf,
a87 3
#endif
#ifdef COMPAT_BSDOS
	{ BSDOS_AOUT_HDR_SIZE, exec_bsdos_aout_makecmds, &emul_bsdos },	/* bsdos */
@


1.23
log
@another day, another compat gets removed.  today is ibcs2's turn
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.22 2010/06/30 20:38:49 tedu Exp $	*/
a61 4
#ifdef COMPAT_M68K4K
#include <compat/m68k4k/m68k4k_exec.h>
#endif

a99 3
#ifdef COMPAT_M68K4K
	{ sizeof(struct exec), exec_m68k4k_makecmds, &emul_native },	/* m68k4k a.out */
#endif
a104 3
#endif
#ifdef COMPAT_SUNOS
	{ sizeof(struct exec), exec_aout_makecmds, &emul_sunos },
@


1.22
log
@remove compat_osf1 support from the kernel
ok deraadt miod
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.21 2010/06/29 20:30:33 guenther Exp $	*/
a49 4
#ifdef COMPAT_IBCS2
#include <compat/ibcs2/ibcs2_exec.h>
#endif

d72 1
a72 1
	emul_ibcs2, emul_linux_elf, emul_linux_aout, emul_netbsd_elf64,
a95 4
#endif
#ifdef COMPAT_IBCS2
	{ COFF_HDR_SIZE, exec_ibcs2_coff_makecmds, &emul_ibcs2 },	/* coff binaries */
	{ XOUT_HDR_SIZE, exec_ibcs2_xout_makecmds, &emul_ibcs2 },	/* x.out binaries */
@


1.21
log
@Remove COMPAT_HPUX.  No one wanted to support it and its fewmets were
blocking other cleanups
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.20 2010/06/29 18:46:34 tedu Exp $	*/
d77 1
a77 1
	emul_osf1, emul_sunos, emul_svr4;
a95 3
#ifdef COMPAT_OSF1
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_osf1 },
#endif
@


1.20
log
@COMPAT_ULTRIX is not used, time to retire it.  ok deraadt miod
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.19 2008/09/19 05:41:29 djm Exp $	*/
a65 4
#ifdef COMPAT_HPUX
#include <compat/hpux/hpux_exec.h>
#endif

d75 1
a75 1
	emul_bsdos, emul_freebsd_aout, emul_freebsd_elf, emul_hpux,
a113 3
#endif
#ifdef COMPAT_HPUX
	{ HPUX_EXEC_HDR_SIZE, exec_hpux_makecmds, &emul_hpux },	/* HP-UX a.out */
@


1.19
log
@increase MAXINTERP from 64 to 128 and allow a little extra room on top
of that for shell scripts to cover the #!, an optional space following
it and a newline at the end. feedback and ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.18 2007/05/28 23:10:10 beck Exp $	*/
d81 1
a81 1
	emul_osf1, emul_sunos, emul_svr4, emul_ultrix;
a126 3
#endif
#ifdef COMPAT_ULTRIX
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_ultrix },	/* ecoff binaries */
@


1.18
log
@Maintaining a broken compatibility layer for a broken OS is not a productive
activity for anyone. Bye bye COMPAT_NETBSD. ok tedu@@, deraadt@@, and many others
in the hackathon room.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.17 2004/04/15 00:22:42 tedu Exp $	*/
d84 1
a84 1
	{ MAXINTERP, exec_script_makecmds, &emul_native, },	/* shell scripts */
@


1.17
log
@rework access to emulations slightly in an effort to both merge and
separate exec format from emulation.  consistent naming of freebsd emuls.
not much in the way of functional changes yet.
testing and ok deraadt@@ and others along the way.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.16 2003/08/23 20:27:30 tedu Exp $	*/
a99 3
#ifdef COMPAT_NETBSD
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_netbsd_elf64 },
#endif
@


1.16
log
@remember to reset exec_maxhdrsz after lkm load/unload.  ok fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.15 2003/08/23 20:02:59 tedu Exp $	*/
d78 5
d84 6
a89 6
#ifdef LKM
	{ 0, NULL, },					/* entries for LKMs */
	{ 0, NULL, },
	{ 0, NULL, },
	{ 0, NULL, },
	{ 0, NULL, },
a90 3
	{ MAXINTERP, exec_script_makecmds, },		/* shell scripts */
#ifdef _KERN_DO_AOUT
	{ sizeof(struct exec), exec_aout_makecmds, },	/* a.out binaries */
d93 1
a93 1
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, },	/* ecoff binaries */
d96 1
a96 1
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, },	/* elf binaries */
d99 6
a104 1
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, },	/* elf binaries */
d106 1
d108 2
a109 1
	{ LINUX_AOUT_HDR_SIZE, exec_linux_aout_makecmds, }, /* linux a.out */
d112 2
a113 2
	{ COFF_HDR_SIZE, exec_ibcs2_coff_makecmds, },	/* coff binaries */
	{ XOUT_HDR_SIZE, exec_ibcs2_xout_makecmds, },	/* x.out binaries */
d116 1
a116 1
	{ BSDOS_AOUT_HDR_SIZE, exec_bsdos_aout_makecmds, },	/* bsdos */
d119 2
a120 1
	{ FREEBSD_AOUT_HDR_SIZE, exec_freebsd_aout_makecmds, },	/* freebsd */
d123 1
a123 1
	{ HPUX_EXEC_HDR_SIZE, exec_hpux_makecmds, },	/* HP-UX a.out */
d126 1
a126 1
	{ sizeof(struct exec), exec_m68k4k_makecmds, },	/* m68k4k a.out */
d129 1
a129 1
	{ sizeof(struct exec), exec_vax1k_makecmds, },	/* vax1k a.out */
d131 2
a132 11
};
int nexecs = (sizeof execsw / sizeof(*execsw));
int exec_maxhdrsz;

extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_bsdos, emul_aout_freebsd, emul_elf_freebsd, emul_hpux,
	emul_ibcs2, emul_linux_elf, emul_linux_aout, emul_elf64_netbsd,
	emul_osf1, emul_sunos, emul_svr4, emul_ultrix;
struct emul *emulsw[] = {
#if defined (_KERN_DO_AOUT) && defined (COMPAT_AOUT)
	&emul_aout,
d134 2
a135 22
#ifdef COMPAT_BSDOS
	&emul_bsdos,
#endif
#ifdef COMPAT_FREEBSD
	&emul_aout_freebsd,
	&emul_elf_freebsd,
#endif
#ifdef COMPAT_HPUX
	&emul_hpux,
#endif
#ifdef COMPAT_IBCS2
	&emul_ibcs2,
#endif
#ifdef COMPAT_LINUX
	&emul_linux_elf,
	&emul_linux_aout,
#endif
#if defined (COMPAT_NETBSD) && defined (_KERN_DO_ELF64)
	&emul_elf64_netbsd,
#endif
#ifdef COMPAT_OSF1
	&emul_osf1,
d138 1
a138 1
	&emul_sunos,
d140 6
a145 5
#ifdef COMPAT_SVR4
	&emul_svr4,
#endif
#ifdef COMPAT_ULTRIX
	&emul_ultrix,
d148 2
a149 1
int	nemuls = sizeof(emulsw) / sizeof(*emulsw);
@


1.15
log
@remove native emulations from emulsw.  you can't change them and probably
aren't interested, so keep them out of the sysctl.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.14 2003/08/23 19:21:15 deraadt Exp $	*/
d180 4
a183 6
	if (exec_maxhdrsz == 0) {
		for (i = 0; i < nexecs; i++)
			if (execsw[i].es_check != NULL &&
			    execsw[i].es_hdrsz > exec_maxhdrsz)
				exec_maxhdrsz = execsw[i].es_hdrsz;
	}
@


1.14
log
@knf
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.13 2003/08/21 18:56:07 tedu Exp $	*/
a129 7
	&emul_native,
#ifdef _KERN_DO_ELF
	&emul_elf32,
#endif
#ifdef _KERN_DO_ELF64
	&emul_elf64,
#endif
@


1.13
log
@emulation is now controlled by sysctl.  changes:
add e_flags to struct emul.  this stores on/off and native flags.
check for emul enabled in check_exec().  gather all the emuls into a
emulsw so a sysctl can find them.  create sysctl.  move maxhdrsiz calcualation
into init_main so it cleans up sys_execve codepath.  teach sysctl utility
to grok kern.emul hierarchy.
requested and ok deraadt@@  some comments from mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.12 2001/11/14 14:37:22 hugh Exp $	*/
d189 2
a190 2
			if (execsw[i].es_check != NULL
			    && execsw[i].es_hdrsz > exec_maxhdrsz)
@


1.12
log
@Compat layer for 1k Vax aout, from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.11 2001/09/19 13:28:43 art Exp $	*/
d124 70
@


1.11
log
@Unify elf32 and elf64 code with macros. This forced a renaming
of a few functions from elf32.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.10 1999/09/10 12:24:27 kstailey Exp $	*/
d74 4
d117 3
@


1.10
log
@ELF64
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.9 1997/09/02 08:48:30 downsj Exp $	*/
d90 1
a90 1
	{ sizeof(Elf32_Ehdr), exec_elf_makecmds, },	/* elf binaries */
@


1.10.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.10 1999/09/10 12:24:27 kstailey Exp $	*/
d90 1
a90 1
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, },	/* elf binaries */
@


1.10.4.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a73 4
#ifdef COMPAT_VAX1K
#include <compat/vax1k/vax1k_exec.h>
#endif

a112 3
#endif
#ifdef COMPAT_VAX1K
	{ sizeof(struct exec), exec_vax1k_makecmds, },	/* vax1k a.out */
@


1.10.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a123 61

extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_bsdos, emul_aout_freebsd, emul_elf_freebsd, emul_hpux,
	emul_ibcs2, emul_linux_elf, emul_linux_aout, emul_elf64_netbsd,
	emul_osf1, emul_sunos, emul_svr4, emul_ultrix;
struct emul *emulsw[] = {
#if defined (_KERN_DO_AOUT) && defined (COMPAT_AOUT)
	&emul_aout,
#endif
#ifdef COMPAT_BSDOS
	&emul_bsdos,
#endif
#ifdef COMPAT_FREEBSD
	&emul_aout_freebsd,
	&emul_elf_freebsd,
#endif
#ifdef COMPAT_HPUX
	&emul_hpux,
#endif
#ifdef COMPAT_IBCS2
	&emul_ibcs2,
#endif
#ifdef COMPAT_LINUX
	&emul_linux_elf,
	&emul_linux_aout,
#endif
#if defined (COMPAT_NETBSD) && defined (_KERN_DO_ELF64)
	&emul_elf64_netbsd,
#endif
#ifdef COMPAT_OSF1
	&emul_osf1,
#endif
#ifdef COMPAT_SUNOS
	&emul_sunos,
#endif
#ifdef COMPAT_SVR4
	&emul_svr4,
#endif
#ifdef COMPAT_ULTRIX
	&emul_ultrix,
#endif
};
int	nemuls = sizeof(emulsw) / sizeof(*emulsw);

void	init_exec(void);

void
init_exec(void)
{
	int i;

	/*
	 * figure out the maximum size of an exec header.
	 * XXX should be able to keep LKM code from modifying exec switch
	 * when we're still using it, but...
	 */
	for (i = 0; i < nexecs; i++)
		if (execsw[i].es_check != NULL &&
		    execsw[i].es_hdrsz > exec_maxhdrsz)
			exec_maxhdrsz = execsw[i].es_hdrsz;
}
@


1.10.4.4
log
@Merge with the trunk
@
text
@a77 5
extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_bsdos, emul_freebsd_aout, emul_freebsd_elf, emul_hpux,
	emul_ibcs2, emul_linux_elf, emul_linux_aout, emul_netbsd_elf64,
	emul_osf1, emul_sunos, emul_svr4, emul_ultrix;

d79 8
a86 1
	{ MAXINTERP, exec_script_makecmds, &emul_native, },	/* shell scripts */
d88 1
a88 5
#ifdef COMPAT_AOUT
	{ sizeof(struct exec), exec_aout_makecmds, &emul_aout },
#else
	{ sizeof(struct exec), exec_aout_makecmds, &emul_native },	/* a.out binaries */
#endif
d91 1
a91 1
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_native },	/* ecoff binaries */
d94 1
a94 1
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_native },	/* elf binaries */
d97 1
a97 6
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_native },	/* elf binaries */
#ifdef COMPAT_NETBSD
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_netbsd_elf64 },
#endif
#ifdef COMPAT_OSF1
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_osf1 },
a98 1
#endif /* ELF64 */
d100 1
a100 2
	{ LINUX_AOUT_HDR_SIZE, exec_linux_aout_makecmds, &emul_linux_aout }, /* linux a.out */
	{ sizeof(Elf32_Ehdr), exec_linux_elf32_makecmds, &emul_linux_elf },
d103 2
a104 2
	{ COFF_HDR_SIZE, exec_ibcs2_coff_makecmds, &emul_ibcs2 },	/* coff binaries */
	{ XOUT_HDR_SIZE, exec_ibcs2_xout_makecmds, &emul_ibcs2 },	/* x.out binaries */
d107 1
a107 1
	{ BSDOS_AOUT_HDR_SIZE, exec_bsdos_aout_makecmds, &emul_bsdos },	/* bsdos */
d110 1
a110 2
	{ FREEBSD_AOUT_HDR_SIZE, exec_freebsd_aout_makecmds, &emul_freebsd_aout },	/* freebsd */
	{ sizeof(Elf32_Ehdr), exec_freebsd_elf32_makecmds, &emul_freebsd_elf },
d113 1
a113 1
	{ HPUX_EXEC_HDR_SIZE, exec_hpux_makecmds, &emul_hpux },	/* HP-UX a.out */
d116 1
a116 1
	{ sizeof(struct exec), exec_m68k4k_makecmds, &emul_native },	/* m68k4k a.out */
d119 16
a134 1
	{ sizeof(struct exec), exec_vax1k_makecmds, &emul_native },	/* vax1k a.out */
d136 16
a151 2
#ifdef COMPAT_ULTRIX
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_ultrix },	/* ecoff binaries */
d153 2
a154 2
#ifdef COMPAT_SVR4
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_svr4 },	/* elf binaries */
d157 4
a160 1
	{ sizeof(struct exec), exec_aout_makecmds, &emul_sunos },
d162 2
a163 6
#ifdef LKM
	{ 0, NULL, NULL },				/* entries for LKMs */
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
d166 1
a166 2
int nexecs = (sizeof execsw / sizeof(*execsw));
int exec_maxhdrsz;
@


1.9
log
@COMPAT_BSDOS exec and compat changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.8 1997/01/13 11:07:47 niklas Exp $	*/
d42 1
a42 1
#if defined(_KERN_DO_ELF)
d91 3
@


1.8
log
@Import compat_m68k4k from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.7 1996/12/23 02:42:42 deraadt Exp $	*/
d58 4
d98 3
@


1.7
log
@use _{NLIST,KERN}_DO_{AOUT,ELF,ECOFF} to select binary types
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.6 1996/06/07 19:38:58 pefo Exp $	*/
d66 4
d100 3
@


1.6
log
@Exec format config changes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a35 17

#undef EXEC_SCRIPT			/* XXX */
#define EXEC_SCRIPT			/* XXX */
#undef EXEC_AOUT			/* XXX */
#define EXEC_AOUT			/* XXX */

#if defined(COMPAT_ULTRIX) || defined(COMPAT_OSF1)
#undef EXEC_ECOFF
#define EXEC_ECOFF
#endif

#if defined(COMPAT_SVR4) || defined(COMPAT_LINUX)
#undef EXEC_ELF
#define EXEC_ELF
#endif

#ifdef EXEC_SCRIPT
a36 1
#endif
d38 1
a38 5
#if defined(NATIVE_EXEC_AOUT) || defined(EXEC_AOUT)
/*#include <sys/exec_aout.h> -- automatically pulled in */
#endif

#if defined(NATIVE_EXEC_ECOFF) || defined(EXEC_ECOFF)
d42 1
a42 1
#if defined(NATIVE_EXEC_ELF) || defined(EXEC_ELF)
a73 1
#ifdef EXEC_SCRIPT
d75 1
a75 2
#endif
#ifdef EXEC_AOUT
d78 1
a78 1
#ifdef EXEC_ECOFF
d81 1
a81 1
#if defined(NATIVE_EXEC_ELF) || defined(EXEC_ELF)
d92 1
a92 1
	{ FREEBSD_AOUT_HDR_SIZE, exec_freebsd_aout_makecmds, },	/* a.out */
@


1.5
log
@Added OpenBSD CVS tag.
@
text
@d34 3
d47 1
a47 1
#if defined(COMPAT_SVR4) || defined(COMPAT_LINUX) || defined(pica)
a51 3
#include <sys/param.h>
#include <sys/exec.h>

d56 1
a56 1
#ifdef EXEC_AOUT
d60 1
a60 1
#ifdef EXEC_ECOFF
d64 1
a64 1
#ifdef EXEC_ELF
d105 1
a105 1
#ifdef EXEC_ELF
@


1.4
log
@Moved contents of elf_abi.h into sys/exec_elf.h.  Adjusted dependant
files to reflect new header.
@
text
@d1 1
@


1.3
log
@pica also uses elf
@
text
@d105 1
a105 1
	{ ELF_HDR_SIZE, exec_elf_makecmds, },	/* elf binaries */
@


1.2
log
@from netbsd:
1) undef various EXEC_ cpp symbols before defining them, in case
they're already defined for some reason (this can happen
on the alpha, for example, which needs to define EXEC_ECOFF
in the std.alpha config file).
2) add hpux compat
@
text
@d43 1
a43 1
#if defined(COMPAT_SVR4) || defined(COMPAT_LINUX)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: exec_conf.c,v 1.14 1995/10/10 01:26:50 mycroft Exp $	*/
d33 3
a35 1
#define	EXEC_SCRIPT			/* XXX */
d39 1
d44 1
d83 4
d116 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
