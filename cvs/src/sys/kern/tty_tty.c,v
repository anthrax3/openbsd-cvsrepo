head	1.20;
access;
symbols
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.14
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.12
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.8
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.6
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.4
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.10.0.10
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.26
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.24
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.22
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.20
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.18
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.16
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.09.06.08.13.23;	author tedu;	state Exp;
branches;
next	1.19;
commitid	0bKTD6KC2GkrSVRG;

1.19
date	2016.09.02.18.11.28;	author tedu;	state Exp;
branches;
next	1.18;
commitid	rTRs82DQAsJjej88;

1.18
date	2016.03.19.12.04.15;	author natano;	state Exp;
branches;
next	1.17;
commitid	gAjwyca5TfuoJAhn;

1.17
date	2015.12.05.10.11.53;	author tedu;	state Exp;
branches;
next	1.16;
commitid	Cl55DD2g2xm69E6W;

1.16
date	2015.12.03.18.21.00;	author blambert;	state Exp;
branches;
next	1.15;
commitid	qGMYU7ZSCOxT1fZi;

1.15
date	2015.05.01.01.30.58;	author millert;	state Exp;
branches;
next	1.14;
commitid	QXOJtYQx3rj1zO0b;

1.14
date	2015.03.14.03.38.51;	author jsg;	state Exp;
branches;
next	1.13;
commitid	p4LJxGKbi0BU2cG6;

1.13
date	2014.12.16.18.30.04;	author tedu;	state Exp;
branches;
next	1.12;
commitid	P6Av4XGqOi3rFasL;

1.12
date	2011.10.06.09.14.35;	author mikeb;	state Exp;
branches;
next	1.11;

1.11
date	2010.07.26.01.56.27;	author guenther;	state Exp;
branches;
next	1.10;

1.10
date	2007.03.15.10.22.30;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.21.12.43.49;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.23.16.51.12;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.28.06;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.11.06.05.58.24;	author csapuntz;	state Exp;
branches
	1.6.10.1;
next	1.5;

1.5
date	97.10.06.20.20.05;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.15.12.32;	author csapuntz;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.27.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.17.20.15;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.46;	author deraadt;	state Exp;
branches;
next	;

1.6.10.1
date	2003.06.07.11.03.40;	author ho;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2004.02.19.10.56.38;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.20
log
@it's not wrong, but it's not clear what the verauth check is for.
add a comment to this effect, and explain the intention.
@
text
@/*	$OpenBSD: tty_tty.c,v 1.19 2016/09/02 18:11:28 tedu Exp $	*/
/*	$NetBSD: tty_tty.c,v 1.13 1996/03/30 22:24:46 christos Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)tty_tty.c	8.2 (Berkeley) 9/23/93
 */

/*
 * Indirect driver for controlling tty.
 */
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/ioctl.h>
#include <sys/proc.h>
#include <sys/tty.h>
#include <sys/vnode.h>
#include <sys/lock.h>
#include <sys/file.h>


#define cttyvp(p) \
	((p)->p_p->ps_flags & PS_CONTROLT ? \
	    (p)->p_p->ps_session->s_ttyvp : NULL)

int
cttyopen(dev_t dev, int flag, int mode, struct proc *p)
{
	struct vnode *ttyvp = cttyvp(p);
	int error;

	if (ttyvp == NULL)
		return (ENXIO);
	vn_lock(ttyvp, LK_EXCLUSIVE | LK_RETRY, p);
	error = VOP_OPEN(ttyvp, flag, NOCRED, p);
	VOP_UNLOCK(ttyvp, p);
	return (error);
}

int
cttyread(dev_t dev, struct uio *uio, int flag)
{
	struct proc *p = uio->uio_procp;
	struct vnode *ttyvp = cttyvp(uio->uio_procp);
	int error;

	if (ttyvp == NULL)
		return (EIO);
	vn_lock(ttyvp, LK_EXCLUSIVE | LK_RETRY, p);
	error = VOP_READ(ttyvp, uio, flag, NOCRED);
	VOP_UNLOCK(ttyvp, p);
	return (error);
}

int
cttywrite(dev_t dev, struct uio *uio, int flag)
{
	struct proc *p = uio->uio_procp;
	struct vnode *ttyvp = cttyvp(uio->uio_procp);
	int error;

	if (ttyvp == NULL)
		return (EIO);
	vn_lock(ttyvp, LK_EXCLUSIVE | LK_RETRY, p);
	error = VOP_WRITE(ttyvp, uio, flag, NOCRED);
	VOP_UNLOCK(ttyvp, p);
	return (error);
}

int
cttyioctl(dev_t dev, u_long cmd, caddr_t addr, int flag, struct proc *p)
{
	struct vnode *ttyvp = cttyvp(p);
	struct session *sess;
	int error, secs;

	if (ttyvp == NULL)
		return (EIO);
	if (cmd == TIOCSCTTY)		/* XXX */
		return (EINVAL);
	if (cmd == TIOCNOTTY) {
		if (!SESS_LEADER(p->p_p)) {
			atomic_clearbits_int(&p->p_p->ps_flags, PS_CONTROLT);
			return (0);
		} else
			return (EINVAL);
	}
	switch (cmd) {
	case TIOCSETVERAUTH:
		if ((error = suser(p, 0)))
			return error;
		secs = *(int *)addr;
		if (secs < 1 || secs > 3600)
			return EINVAL;
		sess = p->p_p->ps_pgrp->pg_session;
		sess->s_verauthuid = p->p_ucred->cr_ruid;
		sess->s_verauthppid = p->p_p->ps_pptr->ps_pid;
		timeout_add_sec(&sess->s_verauthto, secs);
		return 0;
	case TIOCCLRVERAUTH:
		sess = p->p_p->ps_pgrp->pg_session;
		timeout_del(&sess->s_verauthto);
		zapverauth(sess);
		return 0;
	case TIOCCHKVERAUTH:
		/*
		 * It's not clear when or what these checks are for.
		 * How can we reach this code with a differnt ruid?
		 * The ppid check is also more porous than desired.
		 * Nevertheless, the checks reflect the original intention;
		 * namely, that it be the same user using the same shell.
		 */
		sess = p->p_p->ps_pgrp->pg_session;
		if (sess->s_verauthuid == p->p_ucred->cr_ruid &&
		    sess->s_verauthppid == p->p_p->ps_pptr->ps_pid)
			return 0;
		return EPERM;
	}
	return (VOP_IOCTL(ttyvp, cmd, addr, flag, NOCRED, p));
}

int
cttypoll(dev_t dev, int events, struct proc *p)
{
	struct vnode *ttyvp = cttyvp(p);

	if (ttyvp == NULL)	/* try operation to get EOF/failure */
		return (seltrue(dev, events, p));
	return (VOP_POLL(ttyvp, FREAD|FWRITE, events, p));
}

int
cttykqfilter(dev_t dev, struct knote *kn)
{
	struct vnode *ttyvp = cttyvp(curproc);

	if (ttyvp == NULL)
		return (ENXIO);
	return (VOP_KQFILTER(ttyvp, kn));
}
@


1.19
log
@add a concept of 'verified auth' to sessions. When set via ioctl,
the user and parent process are recorded. Later, this info may be tested
and used to bypass authorization requirements.
ie, doas won't ask for your password again.
Great idea from henning.
ok deraadt guenther henning
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.18 2016/03/19 12:04:15 natano Exp $	*/
d132 7
@


1.18
log
@Remove the unused flags argument from VOP_UNLOCK().

torture tested on amd64, i386 and macppc
ok beck mpi stefan
"the change looks right" deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.17 2015/12/05 10:11:53 tedu Exp $	*/
d100 2
d113 24
@


1.17
log
@remove stale lint annotations
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.16 2015/12/03 18:21:00 blambert Exp $	*/
d62 1
a62 1
	VOP_UNLOCK(ttyvp, 0, p);
d77 1
a77 1
	VOP_UNLOCK(ttyvp, 0, p);
d92 1
a92 1
	VOP_UNLOCK(ttyvp, 0, p);
@


1.16
log
@remove code that's been #ifdef'ed out for 20 years

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.15 2015/05/01 01:30:58 millert Exp $	*/
a51 1
/*ARGSUSED*/
a65 1
/*ARGSUSED*/
a80 1
/*ARGSUSED*/
a95 1
/*ARGSUSED*/
a114 1
/*ARGSUSED*/
a124 1
/*ARGSUSED*/
@


1.15
log
@Pass fflag to VOP_POLL so vfs fifo functions can get at the file
flags to check FREAD/FWRITE if needed.  This will be used by fifo_poll
to avoid checking the write end of the fifo when the fd is read-only.
OK guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.14 2015/03/14 03:38:51 jsg Exp $	*/
d62 1
a62 14
#ifdef PARANOID
	/*
	 * Since group is tty and mode is 620 on most terminal lines
	 * and since sessions protect terminals from processes outside
	 * your session, this check is probably no longer necessary.
	 * Since it inhibits setuid root programs that later switch 
	 * to another user from accessing /dev/tty, we have decided
	 * to delete this test. (mckusick 5/93)
	 */
	error = VOP_ACCESS(ttyvp,
	  (flag&FREAD ? VREAD : 0) | (flag&FWRITE ? VWRITE : 0), p->p_ucred, p);
	if (!error)
#endif /* PARANOID */
		error = VOP_OPEN(ttyvp, flag, NOCRED, p);
@


1.14
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.13 2014/12/16 18:30:04 tedu Exp $	*/
d140 1
a140 1
	return (VOP_POLL(ttyvp, events, p));
@


1.13
log
@primary change: move uvm_vnode out of vnode, keeping only a pointer.
objective: vnode.h doesn't include uvm_extern.h anymore.
followup changes: include uvm_extern.h or lock.h where necessary.
ok and help from deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.12 2011/10/06 09:14:35 mikeb Exp $	*/
a45 1
#include <sys/conf.h>
@


1.12
log
@Introduce a kqfilter wrapper for the controlling tty device entry
which allows a correct registration of kqueue(2) notifications on
the /dev/tty instead of calling a function via a null pointer in
the ttkqfilter leading to a local DoS.

Surprisingly the same code is present in NetBSD since the kqueue
merge, but didn't make it to the OpenBSD for 10 years.

Thanks to Anton Yabchinskiy <arn-at-bestmx-dot-ru> for a GHCi crash
report and his willingness to test multiple diffs for over a week.

With input from nicm, ok miod, derraadt.
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.11 2010/07/26 01:56:27 guenther Exp $	*/
d44 1
@


1.11
log
@Correct the links between threads, processes, pgrps, and sessions,
so that the process-level stuff is to/from struct process and not
struct proc.  This fixes a bunch of problem cases in rthreads.
Based on earlier work by blambert and myself, but mostly written
at c2k10.

Tested by many: deraadt, sthen, krw, ray, and in snapshots
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.10 2007/03/15 10:22:30 art Exp $	*/
d141 11
@


1.10
log
@Since p_flag is often manipulated in interrupts and without biglock
it's a good idea to use atomic.h operations on it. This mechanic
change updates all bit operations on p_flag to atomic_{set,clear}bits_int.

Only exception is that P_OWEUPC is set by MI code before calling
need_proftick and it's automatically cleared by ADDUPC. There's
no reason for MD handling of that flag since everyone handles it the
same way.

kettenis@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.9 2005/12/21 12:43:49 jsg Exp $	*/
d48 3
a50 1
#define cttyvp(p) ((p)->p_flag & P_CONTROLT ? (p)->p_session->s_ttyvp : NULL)
d123 2
a124 2
		if (!SESS_LEADER(p)) {
			atomic_clearbits_int(&p->p_flag, P_CONTROLT);
@


1.9
log
@ansi/deregister. No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.8 2003/09/23 16:51:12 millert Exp $	*/
d122 1
a122 1
			p->p_flag &= ~P_CONTROLT;
@


1.8
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.7 2003/06/02 23:28:06 millert Exp $	*/
d52 1
a52 4
cttyopen(dev, flag, mode, p)
	dev_t dev;
	int flag, mode;
	struct proc *p;
d80 1
a80 4
cttyread(dev, uio, flag)
	dev_t dev;
	struct uio *uio;
	int flag;
d83 1
a83 1
	register struct vnode *ttyvp = cttyvp(uio->uio_procp);
d96 1
a96 4
cttywrite(dev, uio, flag)
	dev_t dev;
	struct uio *uio;
	int flag;
d99 1
a99 1
	register struct vnode *ttyvp = cttyvp(uio->uio_procp);
d112 1
a112 6
cttyioctl(dev, cmd, addr, flag, p)
	dev_t dev;
	u_long cmd;
	caddr_t addr;
	int flag;
	struct proc *p;
d132 1
a132 4
cttypoll(dev, events, p)
	dev_t dev;
	int events;
	struct proc *p;
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.6 1997/11/06 05:58:24 csapuntz Exp $	*/
d146 1
a146 1
cttyselect(dev, flag, p)
d148 1
a148 1
	int flag;
d153 3
a155 3
	if (ttyvp == NULL)
		return (1);	/* try operation to get EOF/failure */
	return (VOP_SELECT(ttyvp, flag, FREAD|FWRITE, NOCRED, p));
@


1.6
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.5 1997/10/06 20:20:05 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6.10.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.6 1997/11/06 05:58:24 csapuntz Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.6.10.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d146 1
a146 1
cttypoll(dev, events, p)
d148 1
a148 1
	int events;
d153 3
a155 3
	if (ttyvp == NULL)	/* try operation to get EOF/failure */
		return (seltrue(dev, events, p));
	return (VOP_POLL(ttyvp, events, p));
@


1.5
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.3 1996/04/21 22:27:32 deraadt Exp $	*/
d66 1
a66 1
	VOP_LOCK(ttyvp);
d81 1
a81 1
	VOP_UNLOCK(ttyvp);
d92 1
d98 1
a98 1
	VOP_LOCK(ttyvp);
d100 1
a100 1
	VOP_UNLOCK(ttyvp);
d111 1
d117 1
a117 1
	VOP_LOCK(ttyvp);
d119 1
a119 1
	VOP_UNLOCK(ttyvp);
@


1.4
log
@VFS Lite2 Changes
@
text
@d66 1
a66 1
	vn_lock(ttyvp, LK_EXCLUSIVE | LK_RETRY, p);
d81 1
a81 1
	VOP_UNLOCK(ttyvp, 0, p);
a91 1
	struct proc *p = uio->uio_procp;
d97 1
a97 1
	vn_lock(ttyvp, LK_EXCLUSIVE | LK_RETRY, p);
d99 1
a99 1
	VOP_UNLOCK(ttyvp, 0, p);
a109 1
	struct proc *p = uio->uio_procp;
d115 1
a115 1
	vn_lock(ttyvp, LK_EXCLUSIVE | LK_RETRY, p);
d117 1
a117 1
	VOP_UNLOCK(ttyvp, 0, p);
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: tty_tty.c,v 1.2 1996/03/03 17:20:15 niklas Exp $	*/
d66 1
a66 1
	VOP_LOCK(ttyvp);
d81 1
a81 1
	VOP_UNLOCK(ttyvp);
d92 1
d98 1
a98 1
	VOP_LOCK(ttyvp);
d100 1
a100 1
	VOP_UNLOCK(ttyvp);
d111 1
d117 1
a117 1
	VOP_LOCK(ttyvp);
d119 1
a119 1
	VOP_UNLOCK(ttyvp);
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: tty_tty.c,v 1.12 1996/02/04 02:17:39 christos Exp $	*/
d49 1
a50 1
#include <kern/kern_conf.h>
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: tty_tty.c,v 1.11 1994/10/30 21:48:05 cgd Exp $	*/
a43 1
#include <sys/conf.h>
d50 2
d55 1
d86 1
d104 1
d122 1
d147 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
