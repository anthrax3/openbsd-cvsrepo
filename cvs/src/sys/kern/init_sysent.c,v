head	1.186;
access;
symbols
	OPENBSD_6_1:1.186.0.2
	OPENBSD_6_1_BASE:1.186
	OPENBSD_6_0:1.184.0.2
	OPENBSD_6_0_BASE:1.184
	OPENBSD_5_9:1.179.0.2
	OPENBSD_5_9_BASE:1.179
	OPENBSD_5_8:1.168.0.4
	OPENBSD_5_8_BASE:1.168
	OPENBSD_5_7:1.164.0.2
	OPENBSD_5_7_BASE:1.164
	OPENBSD_5_6:1.155.0.4
	OPENBSD_5_6_BASE:1.155
	OPENBSD_5_5:1.150.0.4
	OPENBSD_5_5_BASE:1.150
	OPENBSD_5_4:1.145.0.2
	OPENBSD_5_4_BASE:1.145
	OPENBSD_5_3:1.138.0.2
	OPENBSD_5_3_BASE:1.138
	OPENBSD_5_2:1.136.0.2
	OPENBSD_5_2_BASE:1.136
	OPENBSD_5_1_BASE:1.132
	OPENBSD_5_1:1.132.0.2
	OPENBSD_5_0:1.130.0.2
	OPENBSD_5_0_BASE:1.130
	OPENBSD_4_9:1.116.0.2
	OPENBSD_4_9_BASE:1.116
	OPENBSD_4_8:1.114.0.2
	OPENBSD_4_8_BASE:1.114
	OPENBSD_4_7:1.110.0.2
	OPENBSD_4_7_BASE:1.110
	OPENBSD_4_6:1.107.0.4
	OPENBSD_4_6_BASE:1.107
	OPENBSD_4_5:1.103.0.4
	OPENBSD_4_5_BASE:1.103
	OPENBSD_4_4:1.103.0.2
	OPENBSD_4_4_BASE:1.103
	OPENBSD_4_3:1.102.0.2
	OPENBSD_4_3_BASE:1.102
	OPENBSD_4_2:1.98.0.4
	OPENBSD_4_2_BASE:1.98
	OPENBSD_4_1:1.98.0.2
	OPENBSD_4_1_BASE:1.98
	OPENBSD_4_0:1.96.0.2
	OPENBSD_4_0_BASE:1.96
	OPENBSD_3_9:1.93.0.2
	OPENBSD_3_9_BASE:1.93
	OPENBSD_3_8:1.87.0.2
	OPENBSD_3_8_BASE:1.87
	OPENBSD_3_7:1.85.0.4
	OPENBSD_3_7_BASE:1.85
	OPENBSD_3_6:1.85.0.2
	OPENBSD_3_6_BASE:1.85
	SMP_SYNC_A:1.78
	SMP_SYNC_B:1.78
	OPENBSD_3_5:1.76.0.2
	OPENBSD_3_5_BASE:1.76
	OPENBSD_3_4:1.70.0.2
	OPENBSD_3_4_BASE:1.70
	UBC_SYNC_A:1.66
	OPENBSD_3_3:1.59.0.2
	OPENBSD_3_3_BASE:1.59
	OPENBSD_3_2:1.57.0.2
	OPENBSD_3_2_BASE:1.57
	OPENBSD_3_1:1.56.0.2
	OPENBSD_3_1_BASE:1.56
	UBC_SYNC_B:1.57
	UBC:1.54.0.4
	UBC_BASE:1.54
	OPENBSD_3_0:1.54.0.2
	OPENBSD_3_0_BASE:1.54
	OPENBSD_2_9_BASE:1.49
	OPENBSD_2_9:1.49.0.2
	OPENBSD_2_8:1.47.0.2
	OPENBSD_2_8_BASE:1.47
	OPENBSD_2_7:1.45.0.2
	OPENBSD_2_7_BASE:1.45
	SMP:1.43.0.2
	SMP_BASE:1.43
	kame_19991208:1.41
	OPENBSD_2_6:1.41.0.2
	OPENBSD_2_6_BASE:1.41
	OPENBSD_2_5:1.36.0.2
	OPENBSD_2_5_BASE:1.36
	OPENBSD_2_4:1.33.0.2
	OPENBSD_2_4_BASE:1.33
	OPENBSD_2_3:1.25.0.2
	OPENBSD_2_3_BASE:1.25
	OPENBSD_2_2:1.18.0.2
	OPENBSD_2_2_BASE:1.18
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.10.0.2
	OPENBSD_2_0_BASE:1.10
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.186
date	2016.09.26.16.43.58;	author jca;	state Exp;
branches;
next	1.185;
commitid	t2jShKFwiA9gaU45;

1.185
date	2016.09.04.17.24.02;	author jsing;	state Exp;
branches;
next	1.184;
commitid	BSbNl91FuYX8ZrTk;

1.184
date	2016.06.27.16.52.01;	author jsing;	state Exp;
branches;
next	1.183;
commitid	zhZfX9LPKxKZfTSR;

1.183
date	2016.05.31.22.10.34;	author deraadt;	state Exp;
branches;
next	1.182;
commitid	MPXoA8w22WfeDURT;

1.182
date	2016.03.30.07.49.45;	author guenther;	state Exp;
branches;
next	1.181;
commitid	7jLJPhQK2zyWzG6Z;

1.181
date	2016.03.28.20.51.09;	author kettenis;	state Exp;
branches;
next	1.180;
commitid	Me86gqaSaGmYUR1L;

1.180
date	2016.03.21.22.41.29;	author bluhm;	state Exp;
branches;
next	1.179;
commitid	hneUpr7ZOJCeNeHP;

1.179
date	2015.11.24.23.50.50;	author deraadt;	state Exp;
branches;
next	1.178;
commitid	TOsawG7nknenUTKw;

1.178
date	2015.11.10.04.32.06;	author guenther;	state Exp;
branches;
next	1.177;
commitid	n9eBxUCVtRKCY8tE;

1.177
date	2015.10.28.12.04.06;	author deraadt;	state Exp;
branches;
next	1.176;
commitid	TK8oge2VXNNoQZjq;

1.176
date	2015.10.18.00.05.59;	author deraadt;	state Exp;
branches;
next	1.175;
commitid	qkbSzHUXFtlhbJG3;

1.175
date	2015.10.09.01.11.12;	author deraadt;	state Exp;
branches;
next	1.174;
commitid	925fvYttovA55HOT;

1.174
date	2015.10.02.17.51.04;	author kettenis;	state Exp;
branches;
next	1.173;
commitid	VpEpbgPSYypy3NfC;

1.173
date	2015.09.26.15.39.57;	author tedu;	state Exp;
branches;
next	1.172;
commitid	h1rusrK4lwb2KbOC;

1.172
date	2015.09.13.17.09.21;	author guenther;	state Exp;
branches;
next	1.171;
commitid	wzXeYk4hQ3rm1WW8;

1.171
date	2015.09.09.17.57.57;	author deraadt;	state Exp;
branches;
next	1.170;
commitid	doHZlEQGjhIpdtGa;

1.170
date	2015.08.26.05.40.40;	author doug;	state Exp;
branches;
next	1.169;
commitid	e0Zbz1k9tgjLaS5E;

1.169
date	2015.08.22.20.18.49;	author deraadt;	state Exp;
branches;
next	1.168;
commitid	6NDuzTPjBp2GqkfQ;

1.168
date	2015.07.20.00.57.06;	author guenther;	state Exp;
branches;
next	1.167;
commitid	uQd7U40rr4GIEFlW;

1.167
date	2015.07.19.02.37.44;	author deraadt;	state Exp;
branches;
next	1.166;
commitid	DP44l2zLFhJybkSd;

1.166
date	2015.05.06.11.26.02;	author jsg;	state Exp;
branches;
next	1.165;
commitid	9vrWUxB650OkCt4B;

1.165
date	2015.03.14.03.38.50;	author jsg;	state Exp;
branches;
next	1.164;
commitid	p4LJxGKbi0BU2cG6;

1.164
date	2015.02.09.13.55.04;	author deraadt;	state Exp;
branches;
next	1.163;
commitid	FZGRHsrcj1Ez7Zul;

1.163
date	2015.02.09.13.41.24;	author pelikan;	state Exp;
branches;
next	1.162;
commitid	A5GI5pfcmwpscN1L;

1.162
date	2015.02.09.13.34.49;	author deraadt;	state Exp;
branches;
next	1.161;
commitid	5yMidS9tJP3CVY3y;

1.161
date	2014.12.08.20.56.34;	author guenther;	state Exp;
branches;
next	1.160;
commitid	Unabqm8CKTCGXUYB;

1.160
date	2014.10.09.03.36.05;	author tedu;	state Exp;
branches;
next	1.159;
commitid	zonjoCc0qF32do3P;

1.159
date	2014.09.18.02.16.32;	author uebayasi;	state Exp;
branches;
next	1.158;
commitid	UU861uRLmkJCqllG;

1.158
date	2014.09.17.19.27.59;	author millert;	state Exp;
branches;
next	1.157;
commitid	RxMxZG9CDI9E2MZA;

1.157
date	2014.09.01.05.13.22;	author doug;	state Exp;
branches;
next	1.156;
commitid	SLapLeLVwWfyTUNP;

1.156
date	2014.08.31.01.47.17;	author guenther;	state Exp;
branches;
next	1.155;
commitid	XuGqbG3iajgb3Otu;

1.155
date	2014.07.10.08.58.30;	author deraadt;	state Exp;
branches;
next	1.154;
commitid	9yOEQmEgrCkgJoXC;

1.154
date	2014.07.07.20.01.21;	author matthew;	state Exp;
branches;
next	1.153;
commitid	4iiBPg78gXlMS7rl;

1.153
date	2014.07.07.00.27.13;	author guenther;	state Exp;
branches;
next	1.152;
commitid	ao5TlrTvPnkvJVg1;

1.152
date	2014.06.14.18.01.55;	author deraadt;	state Exp;
branches;
next	1.151;
commitid	AZPdatTs429ib8GG;

1.151
date	2014.06.13.08.27.04;	author deraadt;	state Exp;
branches;
next	1.150;
commitid	G4h95LDanJxGDw1w;

1.150
date	2014.02.09.10.07.13;	author guenther;	state Exp;
branches;
next	1.149;

1.149
date	2013.09.14.01.36.02;	author guenther;	state Exp;
branches;
next	1.148;

1.148
date	2013.08.16.08.33.56;	author guenther;	state Exp;
branches;
next	1.147;

1.147
date	2013.08.14.05.27.02;	author guenther;	state Exp;
branches;
next	1.146;

1.146
date	2013.08.13.05.54.10;	author guenther;	state Exp;
branches;
next	1.145;

1.145
date	2013.06.09.13.10.27;	author miod;	state Exp;
branches;
next	1.144;

1.144
date	2013.06.01.16.27.51;	author tedu;	state Exp;
branches;
next	1.143;

1.143
date	2013.06.01.09.50.03;	author miod;	state Exp;
branches;
next	1.142;

1.142
date	2013.04.29.17.08.08;	author matthew;	state Exp;
branches;
next	1.141;

1.141
date	2013.04.15.15.37.10;	author jsing;	state Exp;
branches;
next	1.140;

1.140
date	2013.03.14.21.39.05;	author tedu;	state Exp;
branches;
next	1.139;

1.139
date	2013.03.02.07.06.00;	author guenther;	state Exp;
branches;
next	1.138;

1.138
date	2012.09.10.02.22.37;	author deraadt;	state Exp;
branches;
next	1.137;

1.137
date	2012.08.23.06.13.02;	author deraadt;	state Exp;
branches;
next	1.136;

1.136
date	2012.06.21.00.57.59;	author guenther;	state Exp;
branches;
next	1.135;

1.135
date	2012.04.12.12.33.47;	author deraadt;	state Exp;
branches;
next	1.134;

1.134
date	2012.04.12.11.17.16;	author deraadt;	state Exp;
branches;
next	1.133;

1.133
date	2012.04.12.11.10.07;	author deraadt;	state Exp;
branches;
next	1.132;

1.132
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.131;

1.131
date	2011.10.15.23.36.31;	author guenther;	state Exp;
branches;
next	1.130;

1.130
date	2011.07.18.00.17.30;	author matthew;	state Exp;
branches;
next	1.129;

1.129
date	2011.07.09.05.46.58;	author matthew;	state Exp;
branches;
next	1.128;

1.128
date	2011.07.09.05.32.25;	author matthew;	state Exp;
branches;
next	1.127;

1.127
date	2011.07.09.00.18.15;	author deraadt;	state Exp;
branches;
next	1.126;

1.126
date	2011.07.09.00.11.28;	author deraadt;	state Exp;
branches;
next	1.125;

1.125
date	2011.07.08.19.19.59;	author tedu;	state Exp;
branches;
next	1.124;

1.124
date	2011.07.08.05.02.49;	author matthew;	state Exp;
branches;
next	1.123;

1.123
date	2011.07.07.23.46.46;	author matthew;	state Exp;
branches;
next	1.122;

1.122
date	2011.07.07.18.31.17;	author tedu;	state Exp;
branches;
next	1.121;

1.121
date	2011.07.07.01.21.22;	author tedu;	state Exp;
branches;
next	1.120;

1.120
date	2011.07.04.20.35.35;	author deraadt;	state Exp;
branches;
next	1.119;

1.119
date	2011.06.30.13.44.15;	author tedu;	state Exp;
branches;
next	1.118;

1.118
date	2011.06.01.06.22.39;	author guenther;	state Exp;
branches;
next	1.117;

1.117
date	2011.04.04.12.44.43;	author deraadt;	state Exp;
branches;
next	1.116;

1.116
date	2010.10.28.15.03.51;	author millert;	state Exp;
branches;
next	1.115;

1.115
date	2010.09.20.07.20.35;	author deraadt;	state Exp;
branches;
next	1.114;

1.114
date	2010.07.03.04.44.51;	author guenther;	state Exp;
branches;
next	1.113;

1.113
date	2010.07.01.23.11.11;	author tedu;	state Exp;
branches;
next	1.112;

1.112
date	2010.07.01.01.55.33;	author deraadt;	state Exp;
branches;
next	1.111;

1.111
date	2010.06.29.00.29.05;	author tedu;	state Exp;
branches;
next	1.110;

1.110
date	2010.01.18.19.13.06;	author schwarze;	state Exp;
branches;
next	1.109;

1.109
date	2009.11.27.20.06.42;	author guenther;	state Exp;
branches;
next	1.108;

1.108
date	2009.11.27.19.42.24;	author guenther;	state Exp;
branches;
next	1.107;

1.107
date	2009.06.15.17.31.49;	author deraadt;	state Exp;
branches;
next	1.106;

1.106
date	2009.06.03.15.44.02;	author jj;	state Exp;
branches;
next	1.105;

1.105
date	2009.06.03.14.45.54;	author jj;	state Exp;
branches;
next	1.104;

1.104
date	2009.03.12.07.04.49;	author guenther;	state Exp;
branches;
next	1.103;

1.103
date	2008.03.16.19.43.41;	author otto;	state Exp;
branches;
next	1.102;

1.102
date	2008.01.05.00.38.13;	author miod;	state Exp;
branches;
next	1.101;

1.101
date	2008.01.05.00.36.13;	author miod;	state Exp;
branches;
next	1.100;

1.100
date	2007.11.28.13.48.31;	author deraadt;	state Exp;
branches;
next	1.99;

1.99
date	2007.11.27.18.05.59;	author art;	state Exp;
branches;
next	1.98;

1.98
date	2006.09.22.17.36.17;	author pedro;	state Exp;
branches;
next	1.97;

1.97
date	2006.09.22.14.36.56;	author pedro;	state Exp;
branches;
next	1.96;

1.96
date	2006.06.14.19.52.52;	author otto;	state Exp;
branches;
next	1.95;

1.95
date	2006.06.09.00.06.10;	author deraadt;	state Exp;
branches;
next	1.94;

1.94
date	2006.04.28.08.39.32;	author pedro;	state Exp;
branches;
next	1.93;

1.93
date	2005.12.30.04.06.28;	author tedu;	state Exp;
branches;
next	1.92;

1.92
date	2005.12.30.04.02.17;	author tedu;	state Exp;
branches;
next	1.91;

1.91
date	2005.12.13.06.04.14;	author tedu;	state Exp;
branches;
next	1.90;

1.90
date	2005.12.13.06.02.02;	author tedu;	state Exp;
branches;
next	1.89;

1.89
date	2005.12.03.18.11.29;	author tedu;	state Exp;
branches;
next	1.88;

1.88
date	2005.12.03.18.09.08;	author tedu;	state Exp;
branches;
next	1.87;

1.87
date	2005.07.03.20.14.19;	author drahn;	state Exp;
branches;
next	1.86;

1.86
date	2005.06.17.20.53.13;	author millert;	state Exp;
branches;
next	1.85;

1.85
date	2004.07.15.14.36.08;	author deraadt;	state Exp;
branches;
next	1.84;

1.84
date	2004.07.15.11.25.18;	author millert;	state Exp;
branches;
next	1.83;

1.83
date	2004.07.14.23.45.59;	author millert;	state Exp;
branches;
next	1.82;

1.82
date	2004.07.14.18.01.29;	author millert;	state Exp;
branches;
next	1.81;

1.81
date	2004.07.13.21.06.33;	author millert;	state Exp;
branches;
next	1.80;

1.80
date	2004.07.09.23.54.00;	author millert;	state Exp;
branches;
next	1.79;

1.79
date	2004.06.13.21.52.07;	author niklas;	state Exp;
branches;
next	1.78;

1.78
date	2004.05.27.20.49.55;	author tedu;	state Exp;
branches;
next	1.77;

1.77
date	2004.05.05.13.19.44;	author grange;	state Exp;
branches;
next	1.76;

1.76
date	2004.02.28.19.44.30;	author miod;	state Exp;
branches;
next	1.75;

1.75
date	2004.01.14.05.25.10;	author tedu;	state Exp;
branches;
next	1.74;

1.74
date	2004.01.12.18.08.51;	author tedu;	state Exp;
branches;
next	1.73;

1.73
date	2003.12.31.00.13.57;	author millert;	state Exp;
branches;
next	1.72;

1.72
date	2003.12.11.23.04.14;	author millert;	state Exp;
branches;
next	1.71;

1.71
date	2003.12.10.23.12.54;	author millert;	state Exp;
branches;
next	1.70;

1.70
date	2003.09.07.21.01.04;	author miod;	state Exp;
branches;
next	1.69;

1.69
date	2003.07.01.22.19.34;	author tedu;	state Exp;
branches;
next	1.68;

1.68
date	2003.06.23.04.27.55;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2003.06.22.21.34.27;	author deraadt;	state Exp;
branches;
next	1.66;

1.66
date	2003.05.10.17.55.57;	author miod;	state Exp;
branches;
next	1.65;

1.65
date	2003.04.29.19.52.50;	author miod;	state Exp;
branches;
next	1.64;

1.64
date	2003.04.28.21.34.06;	author drahn;	state Exp;
branches;
next	1.63;

1.63
date	2003.04.25.20.34.22;	author drahn;	state Exp;
branches;
next	1.62;

1.62
date	2003.04.25.18.40.46;	author drahn;	state Exp;
branches;
next	1.61;

1.61
date	2003.04.14.06.28.29;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2003.04.14.04.53.50;	author art;	state Exp;
branches;
next	1.59;

1.59
date	2003.01.30.15.32.44;	author millert;	state Exp;
branches;
next	1.58;

1.58
date	2002.10.30.20.05.20;	author millert;	state Exp;
branches;
next	1.57;

1.57
date	2002.07.06.19.20.50;	author nordin;	state Exp;
branches;
next	1.56;

1.56
date	2002.03.14.00.44.16;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2002.02.22.20.55.28;	author drahn;	state Exp;
branches;
next	1.54;

1.54
date	2001.08.26.04.11.12;	author deraadt;	state Exp;
branches
	1.54.4.1;
next	1.53;

1.53
date	2001.06.26.20.07.27;	author dugsong;	state Exp;
branches;
next	1.52;

1.52
date	2001.06.26.19.56.52;	author dugsong;	state Exp;
branches;
next	1.51;

1.51
date	2001.06.16.22.17.13;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2001.05.16.17.17.04;	author millert;	state Exp;
branches;
next	1.49;

1.49
date	2001.03.09.15.12.52;	author art;	state Exp;
branches;
next	1.48;

1.48
date	2000.11.16.20.04.09;	author provos;	state Exp;
branches;
next	1.47;

1.47
date	2000.09.12.17.28.44;	author millert;	state Exp;
branches;
next	1.46;

1.46
date	2000.06.22.22.44.44;	author mickey;	state Exp;
branches;
next	1.45;

1.45
date	2000.05.01.23.12.30;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2000.04.20.06.32.47;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2000.02.07.08.04.17;	author assar;	state Exp;
branches
	1.43.2.1;
next	1.42;

1.42
date	2000.02.07.04.50.04;	author assar;	state Exp;
branches;
next	1.41;

1.41
date	99.08.08.00.32.22;	author niklas;	state Exp;
branches;
next	1.40;

1.40
date	99.06.07.07.18.34;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	99.05.31.18.18.10;	author millert;	state Exp;
branches;
next	1.38;

1.38
date	99.05.31.17.34.47;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	99.05.22.21.25.51;	author weingart;	state Exp;
branches;
next	1.36;

1.36
date	99.02.15.21.29.21;	author millert;	state Exp;
branches;
next	1.35;

1.35
date	99.02.15.20.03.06;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	98.11.18.01.15.59;	author art;	state Exp;
branches;
next	1.33;

1.33
date	98.09.18.00.33.45;	author art;	state Exp;
branches;
next	1.32;

1.32
date	98.08.30.18.18.49;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	98.08.30.18.08.21;	author art;	state Exp;
branches;
next	1.30;

1.30
date	98.06.12.08.32.00;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	98.06.11.18.31.21;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	98.06.02.05.23.10;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	98.05.11.06.14.16;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	98.04.25.07.15.51;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	98.02.16.21.58.16;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	98.02.10.08.44.25;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	98.02.08.22.38.27;	author tholo;	state Exp;
branches;
next	1.22;

1.22
date	98.01.02.05.38.24;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	97.11.14.20.56.49;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	97.11.13.18.37.29;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	97.11.13.07.11.32;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	97.08.30.08.13.56;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	97.08.30.08.11.07;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.08.29.20.45.24;	author kstailey;	state Exp;
branches;
next	1.15;

1.15
date	97.05.31.01.09.40;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.05.30.21.43.32;	author kstailey;	state Exp;
branches;
next	1.13;

1.13
date	97.04.20.20.49.42;	author tholo;	state Exp;
branches;
next	1.12;

1.12
date	97.01.26.05.20.57;	author downsj;	state Exp;
branches;
next	1.11;

1.11
date	96.10.29.16.05.18;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.10.04.01.01.10;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.08.25.09.53.44;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.05.18.08.54.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.05.02.13.12.06;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.04.19.16.08.48;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.01.29.23.05.05;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.01.10.18.02.20;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.01.07.17.20.40;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.24.10;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.43;	author deraadt;	state Exp;
branches;
next	;

1.43.2.1
date	2001.05.14.22.32.39;	author niklas;	state Exp;
branches;
next	1.43.2.2;

1.43.2.2
date	2001.07.04.10.48.15;	author niklas;	state Exp;
branches;
next	1.43.2.3;

1.43.2.3
date	2001.10.31.03.26.29;	author nate;	state Exp;
branches;
next	1.43.2.4;

1.43.2.4
date	2002.03.06.02.13.22;	author niklas;	state Exp;
branches;
next	1.43.2.5;

1.43.2.5
date	2002.03.28.11.43.04;	author niklas;	state Exp;
branches;
next	1.43.2.6;

1.43.2.6
date	2003.03.28.00.41.26;	author niklas;	state Exp;
branches;
next	1.43.2.7;

1.43.2.7
date	2003.05.13.19.21.28;	author ho;	state Exp;
branches;
next	1.43.2.8;

1.43.2.8
date	2003.05.15.04.08.02;	author niklas;	state Exp;
branches;
next	1.43.2.9;

1.43.2.9
date	2004.02.19.10.56.37;	author niklas;	state Exp;
branches;
next	1.43.2.10;

1.43.2.10
date	2004.06.05.23.13.01;	author niklas;	state Exp;
branches;
next	;

1.54.4.1
date	2002.06.11.03.29.40;	author art;	state Exp;
branches;
next	1.54.4.2;

1.54.4.2
date	2002.10.29.00.36.44;	author art;	state Exp;
branches;
next	1.54.4.3;

1.54.4.3
date	2003.05.19.22.31.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.186
log
@Regen
@
text
@/*	$OpenBSD$	*/

/*
 * System call switch table.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from;	OpenBSD: syscalls.master,v 1.174 2016/09/04 17:22:40 jsing Exp 
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/signal.h>
#include <sys/mount.h>
#include <sys/syscallargs.h>
#include <sys/poll.h>

#define	s(type)	sizeof(type)

struct sysent sysent[] = {
	{ 0, 0, 0,
	    sys_nosys },			/* 0 = syscall (indir) */
	{ 1, s(struct sys_exit_args), 0,
	    sys_exit },				/* 1 = exit */
	{ 0, 0, 0,
	    sys_fork },				/* 2 = fork */
	{ 3, s(struct sys_read_args), 0,
	    sys_read },				/* 3 = read */
	{ 3, s(struct sys_write_args), 0,
	    sys_write },			/* 4 = write */
	{ 3, s(struct sys_open_args), 0,
	    sys_open },				/* 5 = open */
	{ 1, s(struct sys_close_args), 0,
	    sys_close },			/* 6 = close */
	{ 2, s(struct sys_getentropy_args), SY_NOLOCK | 0,
	    sys_getentropy },			/* 7 = getentropy */
	{ 2, s(struct sys___tfork_args), 0,
	    sys___tfork },			/* 8 = __tfork */
	{ 2, s(struct sys_link_args), 0,
	    sys_link },				/* 9 = link */
	{ 1, s(struct sys_unlink_args), 0,
	    sys_unlink },			/* 10 = unlink */
	{ 4, s(struct sys_wait4_args), 0,
	    sys_wait4 },			/* 11 = wait4 */
	{ 1, s(struct sys_chdir_args), 0,
	    sys_chdir },			/* 12 = chdir */
	{ 1, s(struct sys_fchdir_args), 0,
	    sys_fchdir },			/* 13 = fchdir */
	{ 3, s(struct sys_mknod_args), 0,
	    sys_mknod },			/* 14 = mknod */
	{ 2, s(struct sys_chmod_args), 0,
	    sys_chmod },			/* 15 = chmod */
	{ 3, s(struct sys_chown_args), 0,
	    sys_chown },			/* 16 = chown */
	{ 1, s(struct sys_obreak_args), 0,
	    sys_obreak },			/* 17 = break */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getdtablecount },		/* 18 = getdtablecount */
	{ 2, s(struct sys_getrusage_args), 0,
	    sys_getrusage },			/* 19 = getrusage */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getpid },			/* 20 = getpid */
	{ 4, s(struct sys_mount_args), 0,
	    sys_mount },			/* 21 = mount */
	{ 2, s(struct sys_unmount_args), 0,
	    sys_unmount },			/* 22 = unmount */
	{ 1, s(struct sys_setuid_args), 0,
	    sys_setuid },			/* 23 = setuid */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getuid },			/* 24 = getuid */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_geteuid },			/* 25 = geteuid */
#ifdef PTRACE
	{ 4, s(struct sys_ptrace_args), 0,
	    sys_ptrace },			/* 26 = ptrace */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 26 = unimplemented ptrace */
#endif
	{ 3, s(struct sys_recvmsg_args), 0,
	    sys_recvmsg },			/* 27 = recvmsg */
	{ 3, s(struct sys_sendmsg_args), 0,
	    sys_sendmsg },			/* 28 = sendmsg */
	{ 6, s(struct sys_recvfrom_args), 0,
	    sys_recvfrom },			/* 29 = recvfrom */
	{ 3, s(struct sys_accept_args), 0,
	    sys_accept },			/* 30 = accept */
	{ 3, s(struct sys_getpeername_args), 0,
	    sys_getpeername },			/* 31 = getpeername */
	{ 3, s(struct sys_getsockname_args), 0,
	    sys_getsockname },			/* 32 = getsockname */
	{ 2, s(struct sys_access_args), 0,
	    sys_access },			/* 33 = access */
	{ 2, s(struct sys_chflags_args), 0,
	    sys_chflags },			/* 34 = chflags */
	{ 2, s(struct sys_fchflags_args), 0,
	    sys_fchflags },			/* 35 = fchflags */
	{ 0, 0, 0,
	    sys_sync },				/* 36 = sync */
	{ 0, 0, 0,
	    sys_nosys },			/* 37 = obsolete o58_kill */
	{ 2, s(struct sys_stat_args), 0,
	    sys_stat },				/* 38 = stat */
	{ 0, 0, 0,
	    sys_getppid },			/* 39 = getppid */
	{ 2, s(struct sys_lstat_args), 0,
	    sys_lstat },			/* 40 = lstat */
	{ 1, s(struct sys_dup_args), 0,
	    sys_dup },				/* 41 = dup */
	{ 4, s(struct sys_fstatat_args), 0,
	    sys_fstatat },			/* 42 = fstatat */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getegid },			/* 43 = getegid */
	{ 4, s(struct sys_profil_args), 0,
	    sys_profil },			/* 44 = profil */
#ifdef KTRACE
	{ 4, s(struct sys_ktrace_args), 0,
	    sys_ktrace },			/* 45 = ktrace */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 45 = unimplemented ktrace */
#endif
	{ 3, s(struct sys_sigaction_args), 0,
	    sys_sigaction },			/* 46 = sigaction */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getgid },			/* 47 = getgid */
	{ 2, s(struct sys_sigprocmask_args), SY_NOLOCK | 0,
	    sys_sigprocmask },			/* 48 = sigprocmask */
	{ 2, s(struct sys_getlogin59_args), 0,
	    sys_getlogin59 },			/* 49 = getlogin59 */
	{ 1, s(struct sys_setlogin_args), 0,
	    sys_setlogin },			/* 50 = setlogin */
#ifdef ACCOUNTING
	{ 1, s(struct sys_acct_args), 0,
	    sys_acct },				/* 51 = acct */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 51 = unimplemented acct */
#endif
	{ 0, 0, 0,
	    sys_sigpending },			/* 52 = sigpending */
	{ 2, s(struct sys_fstat_args), 0,
	    sys_fstat },			/* 53 = fstat */
	{ 3, s(struct sys_ioctl_args), 0,
	    sys_ioctl },			/* 54 = ioctl */
	{ 1, s(struct sys_reboot_args), 0,
	    sys_reboot },			/* 55 = reboot */
	{ 1, s(struct sys_revoke_args), 0,
	    sys_revoke },			/* 56 = revoke */
	{ 2, s(struct sys_symlink_args), 0,
	    sys_symlink },			/* 57 = symlink */
	{ 3, s(struct sys_readlink_args), 0,
	    sys_readlink },			/* 58 = readlink */
	{ 3, s(struct sys_execve_args), 0,
	    sys_execve },			/* 59 = execve */
	{ 1, s(struct sys_umask_args), 0,
	    sys_umask },			/* 60 = umask */
	{ 1, s(struct sys_chroot_args), 0,
	    sys_chroot },			/* 61 = chroot */
	{ 3, s(struct sys_getfsstat_args), 0,
	    sys_getfsstat },			/* 62 = getfsstat */
	{ 2, s(struct sys_statfs_args), 0,
	    sys_statfs },			/* 63 = statfs */
	{ 2, s(struct sys_fstatfs_args), 0,
	    sys_fstatfs },			/* 64 = fstatfs */
	{ 2, s(struct sys_fhstatfs_args), 0,
	    sys_fhstatfs },			/* 65 = fhstatfs */
	{ 0, 0, 0,
	    sys_vfork },			/* 66 = vfork */
	{ 2, s(struct sys_gettimeofday_args), SY_NOLOCK | 0,
	    sys_gettimeofday },			/* 67 = gettimeofday */
	{ 2, s(struct sys_settimeofday_args), 0,
	    sys_settimeofday },			/* 68 = settimeofday */
	{ 3, s(struct sys_setitimer_args), 0,
	    sys_setitimer },			/* 69 = setitimer */
	{ 2, s(struct sys_getitimer_args), 0,
	    sys_getitimer },			/* 70 = getitimer */
	{ 5, s(struct sys_select_args), 0,
	    sys_select },			/* 71 = select */
	{ 6, s(struct sys_kevent_args), 0,
	    sys_kevent },			/* 72 = kevent */
	{ 2, s(struct sys_munmap_args), 0,
	    sys_munmap },			/* 73 = munmap */
	{ 3, s(struct sys_mprotect_args), 0,
	    sys_mprotect },			/* 74 = mprotect */
	{ 3, s(struct sys_madvise_args), 0,
	    sys_madvise },			/* 75 = madvise */
	{ 2, s(struct sys_utimes_args), 0,
	    sys_utimes },			/* 76 = utimes */
	{ 2, s(struct sys_futimes_args), 0,
	    sys_futimes },			/* 77 = futimes */
	{ 3, s(struct sys_mincore_args), 0,
	    sys_mincore },			/* 78 = mincore */
	{ 2, s(struct sys_getgroups_args), SY_NOLOCK | 0,
	    sys_getgroups },			/* 79 = getgroups */
	{ 2, s(struct sys_setgroups_args), 0,
	    sys_setgroups },			/* 80 = setgroups */
	{ 0, 0, 0,
	    sys_getpgrp },			/* 81 = getpgrp */
	{ 2, s(struct sys_setpgid_args), 0,
	    sys_setpgid },			/* 82 = setpgid */
	{ 0, 0, 0,
	    sys_nosys },			/* 83 = obsolete osendsyslog */
	{ 4, s(struct sys_utimensat_args), 0,
	    sys_utimensat },			/* 84 = utimensat */
	{ 2, s(struct sys_futimens_args), 0,
	    sys_futimens },			/* 85 = futimens */
	{ 3, s(struct sys_kbind_args), 0,
	    sys_kbind },			/* 86 = kbind */
	{ 2, s(struct sys_clock_gettime_args), SY_NOLOCK | 0,
	    sys_clock_gettime },		/* 87 = clock_gettime */
	{ 2, s(struct sys_clock_settime_args), 0,
	    sys_clock_settime },		/* 88 = clock_settime */
	{ 2, s(struct sys_clock_getres_args), SY_NOLOCK | 0,
	    sys_clock_getres },			/* 89 = clock_getres */
	{ 2, s(struct sys_dup2_args), 0,
	    sys_dup2 },				/* 90 = dup2 */
	{ 2, s(struct sys_nanosleep_args), 0,
	    sys_nanosleep },			/* 91 = nanosleep */
	{ 3, s(struct sys_fcntl_args), 0,
	    sys_fcntl },			/* 92 = fcntl */
	{ 4, s(struct sys_accept4_args), 0,
	    sys_accept4 },			/* 93 = accept4 */
	{ 5, s(struct sys___thrsleep_args), 0,
	    sys___thrsleep },			/* 94 = __thrsleep */
	{ 1, s(struct sys_fsync_args), 0,
	    sys_fsync },			/* 95 = fsync */
	{ 3, s(struct sys_setpriority_args), 0,
	    sys_setpriority },			/* 96 = setpriority */
	{ 3, s(struct sys_socket_args), 0,
	    sys_socket },			/* 97 = socket */
	{ 3, s(struct sys_connect_args), 0,
	    sys_connect },			/* 98 = connect */
	{ 3, s(struct sys_getdents_args), 0,
	    sys_getdents },			/* 99 = getdents */
	{ 2, s(struct sys_getpriority_args), 0,
	    sys_getpriority },			/* 100 = getpriority */
	{ 2, s(struct sys_pipe2_args), 0,
	    sys_pipe2 },			/* 101 = pipe2 */
	{ 3, s(struct sys_dup3_args), 0,
	    sys_dup3 },				/* 102 = dup3 */
	{ 1, s(struct sys_sigreturn_args), 0,
	    sys_sigreturn },			/* 103 = sigreturn */
	{ 3, s(struct sys_bind_args), 0,
	    sys_bind },				/* 104 = bind */
	{ 5, s(struct sys_setsockopt_args), 0,
	    sys_setsockopt },			/* 105 = setsockopt */
	{ 2, s(struct sys_listen_args), 0,
	    sys_listen },			/* 106 = listen */
	{ 4, s(struct sys_chflagsat_args), 0,
	    sys_chflagsat },			/* 107 = chflagsat */
	{ 2, s(struct sys_pledge_args), 0,
	    sys_pledge },			/* 108 = pledge */
	{ 4, s(struct sys_ppoll_args), 0,
	    sys_ppoll },			/* 109 = ppoll */
	{ 6, s(struct sys_pselect_args), 0,
	    sys_pselect },			/* 110 = pselect */
	{ 1, s(struct sys_sigsuspend_args), 0,
	    sys_sigsuspend },			/* 111 = sigsuspend */
	{ 3, s(struct sys_sendsyslog_args), 0,
	    sys_sendsyslog },			/* 112 = sendsyslog */
	{ 0, 0, 0,
	    sys_nosys },			/* 113 = obsolete orecvmsg */
	{ 0, 0, 0,
	    sys_nosys },			/* 114 = obsolete osendmsg */
	{ 0, 0, 0,
	    sys_nosys },			/* 115 = obsolete vtrace */
	{ 0, 0, 0,
	    sys_nosys },			/* 116 = obsolete t32_gettimeofday */
	{ 0, 0, 0,
	    sys_nosys },			/* 117 = obsolete t32_getrusage */
	{ 5, s(struct sys_getsockopt_args), 0,
	    sys_getsockopt },			/* 118 = getsockopt */
	{ 3, s(struct sys_thrkill_args), 0,
	    sys_thrkill },			/* 119 = thrkill */
	{ 3, s(struct sys_readv_args), 0,
	    sys_readv },			/* 120 = readv */
	{ 3, s(struct sys_writev_args), 0,
	    sys_writev },			/* 121 = writev */
	{ 2, s(struct sys_kill_args), 0,
	    sys_kill },				/* 122 = kill */
	{ 3, s(struct sys_fchown_args), 0,
	    sys_fchown },			/* 123 = fchown */
	{ 2, s(struct sys_fchmod_args), 0,
	    sys_fchmod },			/* 124 = fchmod */
	{ 0, 0, 0,
	    sys_nosys },			/* 125 = obsolete orecvfrom */
	{ 2, s(struct sys_setreuid_args), 0,
	    sys_setreuid },			/* 126 = setreuid */
	{ 2, s(struct sys_setregid_args), 0,
	    sys_setregid },			/* 127 = setregid */
	{ 2, s(struct sys_rename_args), 0,
	    sys_rename },			/* 128 = rename */
	{ 0, 0, 0,
	    sys_nosys },			/* 129 = obsolete otruncate */
	{ 0, 0, 0,
	    sys_nosys },			/* 130 = obsolete oftruncate */
	{ 2, s(struct sys_flock_args), 0,
	    sys_flock },			/* 131 = flock */
	{ 2, s(struct sys_mkfifo_args), 0,
	    sys_mkfifo },			/* 132 = mkfifo */
	{ 6, s(struct sys_sendto_args), 0,
	    sys_sendto },			/* 133 = sendto */
	{ 2, s(struct sys_shutdown_args), 0,
	    sys_shutdown },			/* 134 = shutdown */
	{ 4, s(struct sys_socketpair_args), 0,
	    sys_socketpair },			/* 135 = socketpair */
	{ 2, s(struct sys_mkdir_args), 0,
	    sys_mkdir },			/* 136 = mkdir */
	{ 1, s(struct sys_rmdir_args), 0,
	    sys_rmdir },			/* 137 = rmdir */
	{ 0, 0, 0,
	    sys_nosys },			/* 138 = obsolete t32_utimes */
	{ 0, 0, 0,
	    sys_nosys },			/* 139 = obsolete 4.2 sigreturn */
	{ 2, s(struct sys_adjtime_args), 0,
	    sys_adjtime },			/* 140 = adjtime */
	{ 2, s(struct sys_getlogin_r_args), 0,
	    sys_getlogin_r },			/* 141 = getlogin_r */
	{ 0, 0, 0,
	    sys_nosys },			/* 142 = obsolete ogethostid */
	{ 0, 0, 0,
	    sys_nosys },			/* 143 = obsolete osethostid */
	{ 0, 0, 0,
	    sys_nosys },			/* 144 = obsolete ogetrlimit */
	{ 0, 0, 0,
	    sys_nosys },			/* 145 = obsolete osetrlimit */
	{ 0, 0, 0,
	    sys_nosys },			/* 146 = obsolete okillpg */
	{ 0, 0, 0,
	    sys_setsid },			/* 147 = setsid */
	{ 4, s(struct sys_quotactl_args), 0,
	    sys_quotactl },			/* 148 = quotactl */
	{ 0, 0, 0,
	    sys_nosys },			/* 149 = obsolete oquota */
	{ 0, 0, 0,
	    sys_nosys },			/* 150 = obsolete ogetsockname */
	{ 0, 0, 0,
	    sys_nosys },			/* 151 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 152 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 153 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 154 = unimplemented */
#if defined(NFSCLIENT) || defined(NFSSERVER)
	{ 2, s(struct sys_nfssvc_args), 0,
	    sys_nfssvc },			/* 155 = nfssvc */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 155 = unimplemented */
#endif
	{ 0, 0, 0,
	    sys_nosys },			/* 156 = obsolete ogetdirentries */
	{ 0, 0, 0,
	    sys_nosys },			/* 157 = obsolete statfs25 */
	{ 0, 0, 0,
	    sys_nosys },			/* 158 = obsolete fstatfs25 */
	{ 0, 0, 0,
	    sys_nosys },			/* 159 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 160 = unimplemented */
	{ 2, s(struct sys_getfh_args), 0,
	    sys_getfh },			/* 161 = getfh */
	{ 0, 0, 0,
	    sys_nosys },			/* 162 = obsolete ogetdomainname */
	{ 0, 0, 0,
	    sys_nosys },			/* 163 = obsolete osetdomainname */
	{ 0, 0, 0,
	    sys_nosys },			/* 164 = unimplemented ouname */
	{ 2, s(struct sys_sysarch_args), 0,
	    sys_sysarch },			/* 165 = sysarch */
	{ 0, 0, 0,
	    sys_nosys },			/* 166 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 167 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 168 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 169 = obsolete semsys10 */
	{ 0, 0, 0,
	    sys_nosys },			/* 170 = obsolete msgsys10 */
	{ 0, 0, 0,
	    sys_nosys },			/* 171 = obsolete shmsys10 */
	{ 0, 0, 0,
	    sys_nosys },			/* 172 = unimplemented */
	{ 5, s(struct sys_pread_args), 0,
	    sys_pread },			/* 173 = pread */
	{ 5, s(struct sys_pwrite_args), 0,
	    sys_pwrite },			/* 174 = pwrite */
	{ 0, 0, 0,
	    sys_nosys },			/* 175 = unimplemented ntp_gettime */
	{ 0, 0, 0,
	    sys_nosys },			/* 176 = unimplemented ntp_adjtime */
	{ 0, 0, 0,
	    sys_nosys },			/* 177 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 178 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 179 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 180 = unimplemented */
	{ 1, s(struct sys_setgid_args), 0,
	    sys_setgid },			/* 181 = setgid */
	{ 1, s(struct sys_setegid_args), 0,
	    sys_setegid },			/* 182 = setegid */
	{ 1, s(struct sys_seteuid_args), 0,
	    sys_seteuid },			/* 183 = seteuid */
	{ 0, 0, 0,
	    sys_nosys },			/* 184 = obsolete lfs_bmapv */
	{ 0, 0, 0,
	    sys_nosys },			/* 185 = obsolete lfs_markv */
	{ 0, 0, 0,
	    sys_nosys },			/* 186 = obsolete lfs_segclean */
	{ 0, 0, 0,
	    sys_nosys },			/* 187 = obsolete lfs_segwait */
	{ 0, 0, 0,
	    sys_nosys },			/* 188 = obsolete stat35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 189 = obsolete fstat35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 190 = obsolete lstat35 */
	{ 2, s(struct sys_pathconf_args), 0,
	    sys_pathconf },			/* 191 = pathconf */
	{ 2, s(struct sys_fpathconf_args), 0,
	    sys_fpathconf },			/* 192 = fpathconf */
	{ 3, s(struct sys_swapctl_args), 0,
	    sys_swapctl },			/* 193 = swapctl */
	{ 2, s(struct sys_getrlimit_args), 0,
	    sys_getrlimit },			/* 194 = getrlimit */
	{ 2, s(struct sys_setrlimit_args), 0,
	    sys_setrlimit },			/* 195 = setrlimit */
	{ 0, 0, 0,
	    sys_nosys },			/* 196 = obsolete ogetdirentries48 */
	{ 7, s(struct sys_mmap_args), 0,
	    sys_mmap },				/* 197 = mmap */
	{ 0, 0, 0,
	    sys_nosys },			/* 198 = __syscall (indir) */
	{ 4, s(struct sys_lseek_args), 0,
	    sys_lseek },			/* 199 = lseek */
	{ 3, s(struct sys_truncate_args), 0,
	    sys_truncate },			/* 200 = truncate */
	{ 3, s(struct sys_ftruncate_args), 0,
	    sys_ftruncate },			/* 201 = ftruncate */
	{ 6, s(struct sys_sysctl_args), 0,
	    sys_sysctl },			/* 202 = sysctl */
	{ 2, s(struct sys_mlock_args), 0,
	    sys_mlock },			/* 203 = mlock */
	{ 2, s(struct sys_munlock_args), 0,
	    sys_munlock },			/* 204 = munlock */
	{ 0, 0, 0,
	    sys_nosys },			/* 205 = unimplemented sys_undelete */
	{ 0, 0, 0,
	    sys_nosys },			/* 206 = obsolete t32_futimes */
	{ 1, s(struct sys_getpgid_args), 0,
	    sys_getpgid },			/* 207 = getpgid */
	{ 0, 0, 0,
	    sys_nosys },			/* 208 = obsolete nnpfspioctl */
	{ 3, s(struct sys_utrace_args), 0,
	    sys_utrace },			/* 209 = utrace */
	{ 0, 0, 0,
	    sys_nosys },			/* 210 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 211 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 212 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 213 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 214 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 215 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 216 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 217 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 218 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 219 = unimplemented */
#ifdef SYSVSEM
	{ 0, 0, 0,
	    sys_nosys },			/* 220 = unimplemented */
	{ 3, s(struct sys_semget_args), 0,
	    sys_semget },			/* 221 = semget */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 220 = unimplemented semctl */
	{ 0, 0, 0,
	    sys_nosys },			/* 221 = unimplemented semget */
#endif
	{ 0, 0, 0,
	    sys_nosys },			/* 222 = obsolete semop35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 223 = obsolete semconfig35 */
#ifdef SYSVMSG
	{ 0, 0, 0,
	    sys_nosys },			/* 224 = unimplemented */
	{ 2, s(struct sys_msgget_args), 0,
	    sys_msgget },			/* 225 = msgget */
	{ 4, s(struct sys_msgsnd_args), 0,
	    sys_msgsnd },			/* 226 = msgsnd */
	{ 5, s(struct sys_msgrcv_args), 0,
	    sys_msgrcv },			/* 227 = msgrcv */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 224 = unimplemented msgctl */
	{ 0, 0, 0,
	    sys_nosys },			/* 225 = unimplemented msgget */
	{ 0, 0, 0,
	    sys_nosys },			/* 226 = unimplemented msgsnd */
	{ 0, 0, 0,
	    sys_nosys },			/* 227 = unimplemented msgrcv */
#endif
#ifdef SYSVSHM
	{ 3, s(struct sys_shmat_args), 0,
	    sys_shmat },			/* 228 = shmat */
	{ 0, 0, 0,
	    sys_nosys },			/* 229 = unimplemented */
	{ 1, s(struct sys_shmdt_args), 0,
	    sys_shmdt },			/* 230 = shmdt */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 228 = unimplemented shmat */
	{ 0, 0, 0,
	    sys_nosys },			/* 229 = unimplemented shmctl */
	{ 0, 0, 0,
	    sys_nosys },			/* 230 = unimplemented shmdt */
#endif
	{ 0, 0, 0,
	    sys_nosys },			/* 231 = obsolete shmget35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 232 = obsolete t32_clock_gettime */
	{ 0, 0, 0,
	    sys_nosys },			/* 233 = obsolete t32_clock_settime */
	{ 0, 0, 0,
	    sys_nosys },			/* 234 = obsolete t32_clock_getres */
	{ 0, 0, 0,
	    sys_nosys },			/* 235 = unimplemented timer_create */
	{ 0, 0, 0,
	    sys_nosys },			/* 236 = unimplemented timer_delete */
	{ 0, 0, 0,
	    sys_nosys },			/* 237 = unimplemented timer_settime */
	{ 0, 0, 0,
	    sys_nosys },			/* 238 = unimplemented timer_gettime */
	{ 0, 0, 0,
	    sys_nosys },			/* 239 = unimplemented timer_getoverrun */
	{ 0, 0, 0,
	    sys_nosys },			/* 240 = obsolete t32_nanosleep */
	{ 0, 0, 0,
	    sys_nosys },			/* 241 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 242 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 243 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 244 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 245 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 246 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 247 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 248 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 249 = unimplemented */
	{ 3, s(struct sys_minherit_args), 0,
	    sys_minherit },			/* 250 = minherit */
	{ 0, 0, 0,
	    sys_nosys },			/* 251 = obsolete rfork */
	{ 3, s(struct sys_poll_args), 0,
	    sys_poll },				/* 252 = poll */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_issetugid },			/* 253 = issetugid */
	{ 3, s(struct sys_lchown_args), 0,
	    sys_lchown },			/* 254 = lchown */
	{ 1, s(struct sys_getsid_args), 0,
	    sys_getsid },			/* 255 = getsid */
	{ 3, s(struct sys_msync_args), 0,
	    sys_msync },			/* 256 = msync */
	{ 0, 0, 0,
	    sys_nosys },			/* 257 = obsolete semctl35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 258 = obsolete shmctl35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 259 = obsolete msgctl35 */
	{ 0, 0, 0,
	    sys_nosys },			/* 260 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 261 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 262 = unimplemented */
	{ 1, s(struct sys_pipe_args), 0,
	    sys_pipe },				/* 263 = pipe */
	{ 2, s(struct sys_fhopen_args), 0,
	    sys_fhopen },			/* 264 = fhopen */
	{ 0, 0, 0,
	    sys_nosys },			/* 265 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 266 = unimplemented */
	{ 5, s(struct sys_preadv_args), 0,
	    sys_preadv },			/* 267 = preadv */
	{ 5, s(struct sys_pwritev_args), 0,
	    sys_pwritev },			/* 268 = pwritev */
	{ 0, 0, 0,
	    sys_kqueue },			/* 269 = kqueue */
	{ 0, 0, 0,
	    sys_nosys },			/* 270 = obsolete t32_kevent */
	{ 1, s(struct sys_mlockall_args), 0,
	    sys_mlockall },			/* 271 = mlockall */
	{ 0, 0, 0,
	    sys_munlockall },			/* 272 = munlockall */
	{ 0, 0, 0,
	    sys_nosys },			/* 273 = unimplemented sys_getpeereid */
	{ 0, 0, 0,
	    sys_nosys },			/* 274 = unimplemented sys_extattrctl */
	{ 0, 0, 0,
	    sys_nosys },			/* 275 = unimplemented sys_extattr_set_file */
	{ 0, 0, 0,
	    sys_nosys },			/* 276 = unimplemented sys_extattr_get_file */
	{ 0, 0, 0,
	    sys_nosys },			/* 277 = unimplemented sys_extattr_delete_file */
	{ 0, 0, 0,
	    sys_nosys },			/* 278 = unimplemented sys_extattr_set_fd */
	{ 0, 0, 0,
	    sys_nosys },			/* 279 = unimplemented sys_extattr_get_fd */
	{ 0, 0, 0,
	    sys_nosys },			/* 280 = unimplemented sys_extattr_delete_fd */
	{ 3, s(struct sys_getresuid_args), SY_NOLOCK | 0,
	    sys_getresuid },			/* 281 = getresuid */
	{ 3, s(struct sys_setresuid_args), 0,
	    sys_setresuid },			/* 282 = setresuid */
	{ 3, s(struct sys_getresgid_args), SY_NOLOCK | 0,
	    sys_getresgid },			/* 283 = getresgid */
	{ 3, s(struct sys_setresgid_args), 0,
	    sys_setresgid },			/* 284 = setresgid */
	{ 0, 0, 0,
	    sys_nosys },			/* 285 = obsolete sys_omquery */
	{ 7, s(struct sys_mquery_args), 0,
	    sys_mquery },			/* 286 = mquery */
	{ 1, s(struct sys_closefrom_args), 0,
	    sys_closefrom },			/* 287 = closefrom */
	{ 2, s(struct sys_sigaltstack_args), 0,
	    sys_sigaltstack },			/* 288 = sigaltstack */
#ifdef SYSVSHM
	{ 3, s(struct sys_shmget_args), 0,
	    sys_shmget },			/* 289 = shmget */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 289 = unimplemented shmget */
#endif
#ifdef SYSVSEM
	{ 3, s(struct sys_semop_args), 0,
	    sys_semop },			/* 290 = semop */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 290 = unimplemented semop */
#endif
	{ 0, 0, 0,
	    sys_nosys },			/* 291 = obsolete t32_stat */
	{ 0, 0, 0,
	    sys_nosys },			/* 292 = obsolete t32_fstat */
	{ 0, 0, 0,
	    sys_nosys },			/* 293 = obsolete t32_lstat */
	{ 2, s(struct sys_fhstat_args), 0,
	    sys_fhstat },			/* 294 = fhstat */
#ifdef SYSVSEM
	{ 4, s(struct sys___semctl_args), 0,
	    sys___semctl },			/* 295 = __semctl */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 295 = unimplemented */
#endif
#ifdef SYSVSHM
	{ 3, s(struct sys_shmctl_args), 0,
	    sys_shmctl },			/* 296 = shmctl */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 296 = unimplemented */
#endif
#ifdef SYSVMSG
	{ 3, s(struct sys_msgctl_args), 0,
	    sys_msgctl },			/* 297 = msgctl */
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 297 = unimplemented */
#endif
	{ 0, 0, 0,
	    sys_sched_yield },			/* 298 = sched_yield */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getthrid },			/* 299 = getthrid */
	{ 0, 0, 0,
	    sys_nosys },			/* 300 = obsolete t32___thrsleep */
	{ 2, s(struct sys___thrwakeup_args), 0,
	    sys___thrwakeup },			/* 301 = __thrwakeup */
	{ 1, s(struct sys___threxit_args), 0,
	    sys___threxit },			/* 302 = __threxit */
	{ 3, s(struct sys___thrsigdivert_args), 0,
	    sys___thrsigdivert },		/* 303 = __thrsigdivert */
	{ 2, s(struct sys___getcwd_args), 0,
	    sys___getcwd },			/* 304 = __getcwd */
	{ 2, s(struct sys_adjfreq_args), 0,
	    sys_adjfreq },			/* 305 = adjfreq */
	{ 0, 0, 0,
	    sys_nosys },			/* 306 = obsolete getfsstat53 */
	{ 0, 0, 0,
	    sys_nosys },			/* 307 = obsolete statfs53 */
	{ 0, 0, 0,
	    sys_nosys },			/* 308 = obsolete fstatfs53 */
	{ 0, 0, 0,
	    sys_nosys },			/* 309 = obsolete fhstatfs53 */
	{ 1, s(struct sys_setrtable_args), 0,
	    sys_setrtable },			/* 310 = setrtable */
	{ 0, 0, SY_NOLOCK | 0,
	    sys_getrtable },			/* 311 = getrtable */
	{ 0, 0, 0,
	    sys_nosys },			/* 312 = obsolete t32_getdirentries */
	{ 4, s(struct sys_faccessat_args), 0,
	    sys_faccessat },			/* 313 = faccessat */
	{ 4, s(struct sys_fchmodat_args), 0,
	    sys_fchmodat },			/* 314 = fchmodat */
	{ 5, s(struct sys_fchownat_args), 0,
	    sys_fchownat },			/* 315 = fchownat */
	{ 0, 0, 0,
	    sys_nosys },			/* 316 = obsolete t32_fstatat */
	{ 5, s(struct sys_linkat_args), 0,
	    sys_linkat },			/* 317 = linkat */
	{ 3, s(struct sys_mkdirat_args), 0,
	    sys_mkdirat },			/* 318 = mkdirat */
	{ 3, s(struct sys_mkfifoat_args), 0,
	    sys_mkfifoat },			/* 319 = mkfifoat */
	{ 4, s(struct sys_mknodat_args), 0,
	    sys_mknodat },			/* 320 = mknodat */
	{ 4, s(struct sys_openat_args), 0,
	    sys_openat },			/* 321 = openat */
	{ 4, s(struct sys_readlinkat_args), 0,
	    sys_readlinkat },			/* 322 = readlinkat */
	{ 4, s(struct sys_renameat_args), 0,
	    sys_renameat },			/* 323 = renameat */
	{ 3, s(struct sys_symlinkat_args), 0,
	    sys_symlinkat },			/* 324 = symlinkat */
	{ 3, s(struct sys_unlinkat_args), 0,
	    sys_unlinkat },			/* 325 = unlinkat */
	{ 0, 0, 0,
	    sys_nosys },			/* 326 = obsolete t32_utimensat */
	{ 0, 0, 0,
	    sys_nosys },			/* 327 = obsolete t32_futimens */
	{ 0, 0, 0,
	    sys_nosys },			/* 328 = obsolete __tfork51 */
	{ 1, s(struct sys___set_tcb_args), SY_NOLOCK | 0,
	    sys___set_tcb },			/* 329 = __set_tcb */
	{ 0, 0, SY_NOLOCK | 0,
	    sys___get_tcb },			/* 330 = __get_tcb */
};

@


1.185
log
@Regen.
@
text
@@


1.184
log
@Regen.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.173 2016/06/27 16:50:07 jsing Exp 
d99 2
a100 2
	{ 2, s(struct sys_o58_kill_args), 0,
	    sys_o58_kill },			/* 37 = o58_kill */
@


1.183
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.172 2016/05/31 22:08:53 deraadt Exp 
d99 2
a100 2
	{ 0, 0, 0,
	    sys_nosys },			/* 37 = obsolete o58_kill */
@


1.182
log
@regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.169 2016/03/30 07:49:11 guenther Exp 
d99 2
a100 2
	{ 2, s(struct sys_o58_kill_args), 0,
	    sys_o58_kill },			/* 37 = o58_kill */
d201 2
a202 2
	{ 2, s(struct sys_osendsyslog_args), 0,
	    sys_osendsyslog },			/* 83 = osendsyslog */
@


1.181
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.168 2016/03/28 20:49:58 kettenis Exp 
d128 2
a129 2
	{ 2, s(struct sys_getlogin_args), 0,
	    sys_getlogin },			/* 49 = getlogin */
d317 2
a318 2
	{ 0, 0, 0,
	    sys_nosys },			/* 141 = obsolete ogetpeername */
@


1.180
log
@Rename the system call sendsyslog2 to sendsyslog.  Keep the old one
as osendsyslog for a while.  The three argument variant is the only
one that will stay.
input kettenis@@;  OK deraadt@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.166 2015/11/24 23:47:17 deraadt Exp 
d688 1
a688 1
	{ 0, 0, SY_NOLOCK | 0,
@


1.179
log
@sync
@
text
@d201 2
a202 2
	{ 2, s(struct sys_sendsyslog_args), 0,
	    sys_sendsyslog },			/* 83 = sendsyslog */
d259 2
a260 2
	{ 3, s(struct sys_sendsyslog2_args), 0,
	    sys_sendsyslog2 },			/* 112 = sendsyslog2 */
@


1.178
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.165 2015/11/10 04:30:59 guenther Exp 
d259 2
a260 2
	{ 0, 0, 0,
	    sys_nosys },			/* 112 = obsolete osigstack */
@


1.177
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.164 2015/10/28 12:03:39 deraadt Exp 
d99 2
a100 2
	{ 2, s(struct sys_kill_args), 0,
	    sys_kill },				/* 37 = kill */
d273 2
a274 2
	{ 0, 0, 0,
	    sys_nosys },			/* 119 = obsolete resuba */
d279 2
a280 2
	{ 0, 0, 0,
	    sys_nosys },			/* 122 = obsolete t32_settimeofday */
@


1.176
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.163 2015/10/18 00:04:43 deraadt Exp 
d358 4
a361 4
	{ 3, s(struct sys_dnsconnect_args), 0,
	    sys_dnsconnect },			/* 159 = dnsconnect */
	{ 3, s(struct sys_dnssocket_args), 0,
	    sys_dnssocket },			/* 160 = dnssocket */
@


1.175
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.162 2015/10/09 01:10:27 deraadt Exp 
d358 4
a361 4
	{ 0, 0, 0,
	    sys_nosys },			/* 159 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 160 = unimplemented */
@


1.174
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.161 2015/10/02 17:49:40 kettenis Exp 
d251 2
a252 2
	{ 2, s(struct sys_tame_args), 0,
	    sys_tame },				/* 108 = tame */
@


1.173
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.160 2015/09/26 15:38:53 tedu Exp 
d434 1
a434 1
	{ 7, s(struct sys_mmap_args), SY_NOLOCK | 0,
@


1.172
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.159 2015/09/13 17:08:03 guenther Exp 
d434 1
a434 1
	{ 7, s(struct sys_mmap_args), 0,
@


1.171
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.158 2015/09/09 17:56:59 deraadt Exp 
d444 2
a445 2
	{ 6, s(struct sys___sysctl_args), 0,
	    sys___sysctl },			/* 202 = __sysctl */
@


1.170
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.157 2015/08/26 05:20:06 doug Exp 
@


1.169
log
@Move to tame(int flags, char *paths[]) API/ABI.

The pathlist is a whitelist of dirs and files; anything else returns ENOENT.
Recommendation is to use a narrowly defined list.  Also add TAME_FATTR, which
permits explicit change operations against "struct stat" fields.  Some
other TAME_ flags are refined slightly.

Not cranking libc now, since nothing commited in base uses this and the
timing is uncomfortable for others.  Discussed with many; thanks for a
few bug fixes from semarie, doug, guenther.
ok guenther
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.155 2015/07/20 00:56:10 guenther Exp 
@


1.168
log
@rebuild
@
text
@d251 1
a251 1
	{ 1, s(struct sys_tame_args), 0,
@


1.167
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.154 2015/07/19 02:35:35 deraadt Exp 
d207 2
a208 2
	{ 0, 0, 0,
	    sys_nosys },			/* 86 = obsolete t32_getitimer */
@


1.166
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.153 2015/05/06 11:20:07 jsg Exp 
d251 2
a252 2
	{ 0, 0, 0,
	    sys_nosys },			/* 108 = obsolete osigvec */
@


1.165
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.164 2015/02/09 13:55:04 deraadt Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.152 2015/02/09 13:54:23 deraadt Exp 
@


1.164
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a15 1
#include <sys/event.h>
@


1.163
log
@make sigprocmask(2) not take the kernel lock

Tests on a 4-core CPU show setjmp(3) run four times as fast under load.

discussed on tech@@ some time ago, now by kettenis and guenther, ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.162 2015/02/09 13:34:49 deraadt Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.150 2015/02/09 13:34:19 deraadt Exp 
d715 1
a715 1
	{ 0, 0, 0,
@


1.162
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d127 1
a127 1
	{ 2, s(struct sys_sigprocmask_args), 0,
@


1.161
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.149 2014/12/08 20:56:11 guenther Exp 
d57 1
a57 1
	{ 0, 0, 0,
@


1.160
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.148 2014/10/09 03:35:06 tedu Exp 
d250 2
a251 2
	{ 0, 0, 0,
	    sys_nosys },			/* 107 = obsolete vtimes */
@


1.159
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.146 2014/09/17 19:26:06 millert Exp 
a460 22
#ifdef LKM
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 210 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 211 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 212 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 213 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 214 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 215 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 216 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 217 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 218 = lkmnosys */
	{ 0, 0, 0,
	    sys_lkmnosys },			/* 219 = lkmnosys */
#else	/* !LKM */
a480 1
#endif	/* !LKM */
@


1.158
log
@regen
@
text
@@


1.157
log
@sync generated files
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.145 2014/09/01 05:09:53 doug Exp 
@


1.156
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.144 2014/08/31 01:42:36 guenther Exp 
@


1.155
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.143 2014/07/10 08:55:35 deraadt Exp 
d222 2
a223 2
	{ 0, 0, 0,
	    sys_nosys },			/* 93 = obsolete t32_select */
d238 4
a241 4
	{ 0, 0, 0,
	    sys_nosys },			/* 101 = obsolete osend */
	{ 0, 0, 0,
	    sys_nosys },			/* 102 = obsolete orecv */
@


1.154
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.142 2014/07/07 19:59:00 matthew Exp 
d202 2
a203 2
	{ 0, 0, 0,
	    sys_nosys },			/* 83 = obsolete t32_setitimer */
@


1.153
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.141 2014/07/06 20:55:58 kettenis Exp 
d69 1
a69 1
	{ 0, 0, 0,
d71 1
a71 1
	{ 0, 0, 0,
d112 1
a112 1
	{ 0, 0, 0,
d125 1
a125 1
	{ 0, 0, 0,
d194 1
a194 1
	{ 2, s(struct sys_getgroups_args), 0,
d653 1
a653 1
	{ 3, s(struct sys_getresuid_args), 0,
d657 1
a657 1
	{ 3, s(struct sys_getresgid_args), 0,
@


1.152
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.140 2014/06/14 18:01:42 deraadt Exp 
d35 1
a35 1
	{ 2, s(struct sys_getentropy_args), 0,
@


1.151
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.139 2014/06/13 08:26:10 deraadt Exp 
@


1.150
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.138 2014/02/09 10:04:42 guenther Exp 
d35 2
a36 2
	{ 0, 0, 0,
	    sys_nosys },			/* 7 = obsolete t32_wait4 */
@


1.149
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.137 2013/09/14 01:35:01 guenther Exp 
d218 1
a218 1
	{ 2, s(struct sys_nanosleep_args), SY_NOLOCK | 0,
@


1.148
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.136 2013/08/16 08:33:20 guenther Exp 
a17 6
#ifdef T32
#define t32(func) __CONCAT(t32_,func)
#else
#define t32(func) sys_nosys
#endif

d35 2
a36 2
	{ 4, s(struct t32_sys_wait4_args), 0,
	    t32(sys_wait4) },			/* 7 = t32 wait4 */
d202 2
a203 2
	{ 3, s(struct t32_sys_setitimer_args), 0,
	    t32(sys_setitimer) },		/* 83 = t32 setitimer */
d208 2
a209 2
	{ 2, s(struct t32_sys_getitimer_args), 0,
	    t32(sys_getitimer) },		/* 86 = t32 getitimer */
d222 2
a223 2
	{ 5, s(struct t32_sys_select_args), 0,
	    t32(sys_select) },			/* 93 = t32 select */
d268 4
a271 4
	{ 2, s(struct t32_sys_gettimeofday_args), SY_NOLOCK | 0,
	    t32(sys_gettimeofday) },		/* 116 = t32 gettimeofday */
	{ 2, s(struct t32_sys_getrusage_args), 0,
	    t32(sys_getrusage) },		/* 117 = t32 getrusage */
d280 2
a281 2
	{ 2, s(struct t32_sys_settimeofday_args), 0,
	    t32(sys_settimeofday) },		/* 122 = t32 settimeofday */
d312 2
a313 2
	{ 2, s(struct t32_sys_utimes_args), 0,
	    t32(sys_utimes) },			/* 138 = t32 utimes */
d453 2
a454 2
	{ 2, s(struct t32_sys_futimes_args), 0,
	    t32(sys_futimes) },			/* 206 = t32 futimes */
d555 6
a560 6
	{ 2, s(struct t32_sys_clock_gettime_args), SY_NOLOCK | 0,
	    t32(sys_clock_gettime) },		/* 232 = t32 clock_gettime */
	{ 2, s(struct t32_sys_clock_settime_args), 0,
	    t32(sys_clock_settime) },		/* 233 = t32 clock_settime */
	{ 2, s(struct t32_sys_clock_getres_args), SY_NOLOCK | 0,
	    t32(sys_clock_getres) },		/* 234 = t32 clock_getres */
d571 2
a572 2
	{ 2, s(struct t32_sys_nanosleep_args), SY_NOLOCK | 0,
	    t32(sys_nanosleep) },		/* 240 = t32 nanosleep */
d631 2
a632 2
	{ 6, s(struct t32_sys_kevent_args), 0,
	    t32(sys_kevent) },			/* 270 = t32 kevent */
d683 6
a688 6
	{ 2, s(struct t32_sys_stat_args), 0,
	    t32(sys_stat) },			/* 291 = t32 stat */
	{ 2, s(struct t32_sys_fstat_args), 0,
	    t32(sys_fstat) },			/* 292 = t32 fstat */
	{ 2, s(struct t32_sys_lstat_args), 0,
	    t32(sys_lstat) },			/* 293 = t32 lstat */
d716 2
a717 2
	{ 5, s(struct t32_sys___thrsleep_args), 0,
	    t32(sys___thrsleep) },		/* 300 = t32 __thrsleep */
d740 2
a741 2
	{ 4, s(struct t32_sys_getdirentries_args), 0,
	    t32(sys_getdirentries) },		/* 312 = t32 getdirentries */
d748 2
a749 2
	{ 4, s(struct t32_sys_fstatat_args), 0,
	    t32(sys_fstatat) },			/* 316 = t32 fstatat */
d768 4
a771 4
	{ 4, s(struct t32_sys_utimensat_args), 0,
	    t32(sys_utimensat) },		/* 326 = t32 utimensat */
	{ 2, s(struct t32_sys_futimens_args), 0,
	    t32(sys_futimens) },		/* 327 = t32 futimens */
@


1.147
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.135 2013/08/14 05:26:14 guenther Exp 
@


1.146
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.134 2013/08/13 05:52:24 guenther Exp 
a17 12
#ifdef COMPAT_O51
#define compat_o51(func) __CONCAT(compat_o51_,func)
#else
#define compat_o51(func) sys_nosys
#endif

#ifdef COMPAT_O53
#define compat_o53(func) __CONCAT(compat_o53_,func)
#else
#define compat_o53(func) sys_nosys
#endif

d734 8
a741 8
	{ 3, s(struct compat_o53_sys_getfsstat_args), 0,
	    compat_o53(sys_getfsstat) },	/* 306 = compat_o53 getfsstat */
	{ 2, s(struct compat_o53_sys_statfs_args), 0,
	    compat_o53(sys_statfs) },		/* 307 = compat_o53 statfs */
	{ 2, s(struct compat_o53_sys_fstatfs_args), 0,
	    compat_o53(sys_fstatfs) },		/* 308 = compat_o53 fstatfs */
	{ 2, s(struct compat_o53_sys_fhstatfs_args), 0,
	    compat_o53(sys_fhstatfs) },		/* 309 = compat_o53 fhstatfs */
d778 2
a779 2
	{ 1, s(struct compat_o51_sys___tfork_args), 0,
	    compat_o51(sys___tfork) },		/* 328 = compat_o51 __tfork */
@


1.145
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.133 2013/06/09 13:10:19 miod Exp 
d30 6
d53 2
a54 2
	{ 4, s(struct sys_wait4_args), 0,
	    sys_wait4 },			/* 7 = wait4 */
d61 2
a62 2
	{ 0, 0, 0,
	    sys_nosys },			/* 11 = obsolete execv */
d77 2
a78 2
	{ 0, 0, 0,
	    sys_nosys },			/* 19 = obsolete olseek */
d120 2
a121 2
	{ 0, 0, 0,
	    sys_nosys },			/* 38 = obsolete stat43 */
d124 2
a125 2
	{ 0, 0, 0,
	    sys_nosys },			/* 40 = obsolete lstat43 */
d128 2
a129 2
	{ 0, 0, 0,
	    sys_nosys },			/* 42 = obsolete opipe */
d160 2
a161 2
	{ 0, 0, 0,
	    sys_nosys },			/* 53 = obsolete osigaltstack */
d188 12
a199 12
	{ 0, 0, 0,
	    sys_nosys },			/* 67 = obsolete vread */
	{ 0, 0, 0,
	    sys_nosys },			/* 68 = obsolete vwrite */
	{ 0, 0, 0,
	    sys_nosys },			/* 69 = obsolete sbrk */
	{ 0, 0, 0,
	    sys_nosys },			/* 70 = obsolete sstk */
	{ 0, 0, 0,
	    sys_nosys },			/* 71 = obsolete ommap */
	{ 0, 0, 0,
	    sys_nosys },			/* 72 = obsolete vadvise */
d206 4
a209 4
	{ 0, 0, 0,
	    sys_nosys },			/* 76 = obsolete vhangup */
	{ 0, 0, 0,
	    sys_nosys },			/* 77 = obsolete vlimit */
d220 14
a233 14
	{ 3, s(struct sys_setitimer_args), 0,
	    sys_setitimer },			/* 83 = setitimer */
	{ 0, 0, 0,
	    sys_nosys },			/* 84 = obsolete owait */
	{ 0, 0, 0,
	    sys_nosys },			/* 85 = obsolete swapon25 */
	{ 2, s(struct sys_getitimer_args), 0,
	    sys_getitimer },			/* 86 = getitimer */
	{ 0, 0, 0,
	    sys_nosys },			/* 87 = obsolete ogethostname */
	{ 0, 0, 0,
	    sys_nosys },			/* 88 = obsolete osethostname */
	{ 0, 0, 0,
	    sys_nosys },			/* 89 = obsolete ogetdtablesize */
d236 2
a237 2
	{ 0, 0, 0,
	    sys_nosys },			/* 91 = unimplemented getdopt */
d240 4
a243 4
	{ 5, s(struct sys_select_args), 0,
	    sys_select },			/* 93 = select */
	{ 0, 0, 0,
	    sys_nosys },			/* 94 = unimplemented setdopt */
d252 2
a253 2
	{ 0, 0, 0,
	    sys_nosys },			/* 99 = obsolete oaccept */
d286 4
a289 4
	{ 2, s(struct sys_gettimeofday_args), SY_NOLOCK | 0,
	    sys_gettimeofday },			/* 116 = gettimeofday */
	{ 2, s(struct sys_getrusage_args), 0,
	    sys_getrusage },			/* 117 = getrusage */
d298 2
a299 2
	{ 2, s(struct sys_settimeofday_args), 0,
	    sys_settimeofday },			/* 122 = settimeofday */
d330 2
a331 2
	{ 2, s(struct sys_utimes_args), 0,
	    sys_utimes },			/* 138 = utimes */
d471 2
a472 2
	{ 2, s(struct sys_futimes_args), 0,
	    sys_futimes },			/* 206 = futimes */
d573 6
a578 6
	{ 2, s(struct sys_clock_gettime_args), SY_NOLOCK | 0,
	    sys_clock_gettime },		/* 232 = clock_gettime */
	{ 2, s(struct sys_clock_settime_args), 0,
	    sys_clock_settime },		/* 233 = clock_settime */
	{ 2, s(struct sys_clock_getres_args), SY_NOLOCK | 0,
	    sys_clock_getres },			/* 234 = clock_getres */
d589 2
a590 2
	{ 2, s(struct sys_nanosleep_args), SY_NOLOCK | 0,
	    sys_nanosleep },			/* 240 = nanosleep */
d649 2
a650 2
	{ 6, s(struct sys_kevent_args), 0,
	    sys_kevent },			/* 270 = kevent */
d701 6
a706 6
	{ 2, s(struct sys_stat_args), 0,
	    sys_stat },				/* 291 = stat */
	{ 2, s(struct sys_fstat_args), 0,
	    sys_fstat },			/* 292 = fstat */
	{ 2, s(struct sys_lstat_args), 0,
	    sys_lstat },			/* 293 = lstat */
d734 2
a735 2
	{ 5, s(struct sys___thrsleep_args), 0,
	    sys___thrsleep },			/* 300 = __thrsleep */
d758 2
a759 2
	{ 4, s(struct sys_getdirentries_args), 0,
	    sys_getdirentries },		/* 312 = getdirentries */
d766 2
a767 2
	{ 4, s(struct sys_fstatat_args), 0,
	    sys_fstatat },			/* 316 = fstatat */
d786 4
a789 4
	{ 4, s(struct sys_utimensat_args), 0,
	    sys_utimensat },			/* 326 = utimensat */
	{ 2, s(struct sys_futimens_args), 0,
	    sys_futimens },			/* 327 = futimens */
@


1.144
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.132 2013/06/01 16:27:37 tedu Exp 
@


1.143
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.131 2013/06/01 09:49:50 miod Exp 
a470 1
#ifdef KTRACE
a472 4
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 209 = unimplemented */
#endif
@


1.142
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.130 2013/04/29 17:06:20 matthew Exp 
d471 4
d477 1
@


1.141
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.129 2013/04/15 15:32:19 jsing Exp 
d266 4
a269 4
	{ 0, 0, 0,
	    sys_nosys },			/* 109 = obsolete osigblock */
	{ 0, 0, 0,
	    sys_nosys },			/* 110 = obsolete osigsetmask */
@


1.140
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.128 2013/03/14 21:38:22 tedu Exp 
d18 2
a19 2
#ifdef COMPAT_O48
#define compat_o48(func) __CONCAT(compat_o48_,func)
d21 1
a21 1
#define compat_o48(func) sys_nosys
d24 2
a25 2
#ifdef COMPAT_O51
#define compat_o51(func) __CONCAT(compat_o51_,func)
d27 1
a27 1
#define compat_o51(func) sys_nosys
d172 8
a179 8
	{ 0, 0, 0,
	    sys_nosys },			/* 62 = obsolete fstat43 */
	{ 0, 0, 0,
	    sys_nosys },			/* 63 = obsolete ogetkerninfo */
	{ 0, 0, 0,
	    sys_nosys },			/* 64 = obsolete ogetpagesize */
	{ 0, 0, 0,
	    sys_nosys },			/* 65 = obsolete omsync25 */
d740 8
a747 8
	{ 3, s(struct sys_getfsstat_args), 0,
	    sys_getfsstat },			/* 306 = getfsstat */
	{ 2, s(struct sys_statfs_args), 0,
	    sys_statfs },			/* 307 = statfs */
	{ 2, s(struct sys_fstatfs_args), 0,
	    sys_fstatfs },			/* 308 = fstatfs */
	{ 2, s(struct sys_fhstatfs_args), 0,
	    sys_fhstatfs },			/* 309 = fhstatfs */
@


1.139
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.127 2013/03/02 07:05:18 guenther Exp 
d784 2
a785 2
	{ 0, 0, 0,
	    sys_nosys },			/* 328 = obsolete otfork51 */
@


1.138
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.126 2012/09/10 02:22:17 deraadt Exp 
d784 2
a785 2
	{ 1, s(struct compat_o51_sys___tfork_args), 0,
	    compat_o51(sys___tfork) },		/* 328 = compat_o51 __tfork */
@


1.137
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.125 2012/08/23 06:12:49 deraadt Exp 
d445 2
a446 2
	{ 4, s(struct compat_o48_sys_getdirentries_args), 0,
	    compat_o48(sys_getdirentries) },	/* 196 = compat_o48 getdirentries */
@


1.136
log
@Regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.124 2012/06/21 00:56:59 guenther Exp 
a16 1
#include <nnpfs/nnpfs_pioctl.h>
d469 2
a470 2
	{ 5, s(struct sys_nnpfspioctl_args), 0,
	    sys_nnpfspioctl },			/* 208 = nnpfspioctl */
@


1.135
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.123 2012/04/12 12:33:03 deraadt Exp 
d25 6
d50 2
a51 2
	{ 0, 0, 0,
	    sys_nosys },			/* 8 = obsolete ocreat */
d785 2
a786 2
	{ 1, s(struct sys___tfork_args), 0,
	    sys___tfork },			/* 328 = __tfork */
@


1.134
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.122 2012/04/12 11:16:24 deraadt Exp 
d600 2
a601 2
	{ 1, s(struct sys_rfork_args), 0,
	    sys_rfork },			/* 251 = rfork */
@


1.133
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.121 2012/04/12 11:07:19 deraadt Exp 
a415 10
#ifdef LFS
	{ 3, s(struct lfs_bmapv_args), 0,
	    lfs_bmapv },			/* 184 = lfs_bmapv */
	{ 3, s(struct lfs_markv_args), 0,
	    lfs_markv },			/* 185 = lfs_markv */
	{ 2, s(struct lfs_segclean_args), 0,
	    lfs_segclean },			/* 186 = lfs_segclean */
	{ 2, s(struct lfs_segwait_args), 0,
	    lfs_segwait },			/* 187 = lfs_segwait */
#else
d417 1
a417 1
	    sys_nosys },			/* 184 = unimplemented */
d419 1
a419 1
	    sys_nosys },			/* 185 = unimplemented */
d421 1
a421 1
	    sys_nosys },			/* 186 = unimplemented */
d423 1
a423 2
	    sys_nosys },			/* 187 = unimplemented */
#endif
@


1.132
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.119 2011/10/15 23:35:29 guenther Exp 
d65 1
a65 1
	    sys_nosys },			/* 18 = obsolete getfsstat25 */
@


1.131
log
@sync
@
text
@d734 8
a741 8
	{ 4, s(struct sys_thrsleep_args), 0,
	    sys_thrsleep },			/* 300 = thrsleep */
	{ 2, s(struct sys_thrwakeup_args), 0,
	    sys_thrwakeup },			/* 301 = thrwakeup */
	{ 1, s(struct sys_threxit_args), 0,
	    sys_threxit },			/* 302 = threxit */
	{ 3, s(struct sys_thrsigdivert_args), 0,
	    sys_thrsigdivert },			/* 303 = thrsigdivert */
@


1.130
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.118 2011/07/18 00:16:54 matthew Exp 
d790 6
@


1.129
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.117 2011/07/09 05:46:26 matthew Exp 
d788 2
@


1.128
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.116 2011/07/09 05:31:26 matthew Exp 
d19 2
a20 2
#ifdef COMPAT_48
#define compat_48(func) __CONCAT(compat_48_,func)
d22 1
a22 1
#define compat_48(func) sys_nosys
d451 2
a452 2
	{ 4, s(struct compat_48_sys_getdirentries_args), 0,
	    compat_48(sys_getdirentries) },	/* 196 = compat_48 getdirentries */
@


1.127
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.115 2011/07/09 00:18:06 deraadt Exp 
d19 6
d149 2
a150 2
	{ 2, s(struct sys_osigaltstack_args), 0,
	    sys_osigaltstack },			/* 53 = osigaltstack */
d181 4
a184 4
	{ 1, s(struct sys_sbrk_args), 0,
	    sys_sbrk },				/* 69 = sbrk */
	{ 1, s(struct sys_sstk_args), 0,
	    sys_sstk },				/* 70 = sstk */
d451 2
a452 2
	{ 4, s(struct sys_ogetdirentries_args), 0,
	    sys_ogetdirentries },		/* 196 = ogetdirentries */
@


1.126
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.114 2011/07/09 00:10:51 deraadt Exp 
d359 1
a359 1
	    sys_nosys },			/* 158 = obsolete fstatfs */
@


1.125
log
@regen syscalls
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.113 2011/07/08 19:19:20 tedu Exp 
a18 30
#ifdef COMPAT_43
#define compat_43(func) __CONCAT(compat_43_,func)
#else
#define compat_43(func) sys_nosys
#endif

#ifdef COMPAT_09
#define compat_09(func) __CONCAT(compat_09_,func)
#else
#define compat_09(func) sys_nosys
#endif

#ifdef COMPAT_10
#define compat_10(func) __CONCAT(compat_10_,func)
#else
#define compat_10(func) sys_nosys
#endif

#ifdef COMPAT_25
#define compat_25(func) __CONCAT(compat_25_,func)
#else
#define compat_25(func) sys_nosys
#endif

#ifdef COMPAT_35
#define compat_35(func) __CONCAT(compat_35_,func)
#else
#define compat_35(func) sys_nosys
#endif

d58 2
a59 2
	{ 3, s(struct compat_25_sys_getfsstat_args), 0,
	    compat_25(sys_getfsstat) },		/* 18 = compat_25 ogetfsstat */
d167 2
a168 2
	{ 2, s(struct compat_25_sys_omsync_args), 0,
	    compat_25(sys_omsync) },		/* 65 = compat_25 omsync */
d207 2
a208 2
	{ 1, s(struct compat_25_sys_swapon_args), 0,
	    compat_25(sys_swapon) },		/* 85 = compat_25 swapon */
d356 4
a359 4
	{ 2, s(struct compat_25_sys_statfs_args), 0,
	    compat_25(sys_statfs) },		/* 157 = compat_25 ostatfs */
	{ 2, s(struct compat_25_sys_fstatfs_args), 0,
	    compat_25(sys_fstatfs) },		/* 158 = compat_25 ostatfs */
@


1.124
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.112 2011/07/08 05:01:27 matthew Exp 
d396 4
a399 4
	{ 2, s(struct compat_09_sys_getdomainname_args), 0,
	    compat_09(sys_getdomainname) },	/* 162 = compat_09 ogetdomainname */
	{ 2, s(struct compat_09_sys_setdomainname_args), 0,
	    compat_09(sys_setdomainname) },	/* 163 = compat_09 osetdomainname */
a409 4
#if defined(SYSVSEM) && !defined(__LP64__)
	{ 5, s(struct compat_10_sys_semsys_args), 0,
	    compat_10(sys_semsys) },		/* 169 = compat_10 osemsys */
#else
d411 1
a411 6
	    sys_nosys },			/* 169 = unimplemented 1.0 semsys */
#endif
#if defined(SYSVMSG) && !defined(__LP64__)
	{ 6, s(struct compat_10_sys_msgsys_args), 0,
	    compat_10(sys_msgsys) },		/* 170 = compat_10 omsgsys */
#else
d413 1
a413 6
	    sys_nosys },			/* 170 = unimplemented 1.0 msgsys */
#endif
#if defined(SYSVSHM) && !defined(__LP64__)
	{ 4, s(struct compat_10_sys_shmsys_args), 0,
	    compat_10(sys_shmsys) },		/* 171 = compat_10 oshmsys */
#else
d415 1
a415 2
	    sys_nosys },			/* 171 = unimplemented 1.0 shmsys */
#endif
@


1.123
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.111 2011/07/07 23:45:00 matthew Exp 
d142 1
a142 1
	    sys_opipe },			/* 42 = opipe */
@


1.122
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.110 2011/07/07 18:30:50 tedu Exp 
d799 28
@


1.121
log
@regen syscalls
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.109 2011/07/07 01:19:40 tedu Exp 
d92 1
a92 1
	{ 0, 0, 0,
@


1.120
log
@move the specfs code to a place people can see it; ok guenther thib krw
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.108 2011/06/30 13:43:14 tedu Exp 
d68 2
a69 2
	{ 2, s(struct compat_43_sys_creat_args), 0,
	    compat_43(sys_creat) },		/* 8 = compat_43 ocreat */
d90 2
a91 2
	{ 3, s(struct compat_43_sys_lseek_args), 0,
	    compat_43(sys_lseek) },		/* 19 = compat_43 olseek */
d133 2
a134 2
	{ 2, s(struct compat_43_sys_stat_args), 0,
	    compat_43(sys_stat) },		/* 38 = compat_43 stat43 */
d137 2
a138 2
	{ 2, s(struct compat_43_sys_lstat_args), 0,
	    compat_43(sys_lstat) },		/* 40 = compat_43 lstat43 */
a190 4
	{ 2, s(struct compat_43_sys_fstat_args), 0,
	    compat_43(sys_fstat) },		/* 62 = compat_43 fstat43 */
	{ 4, s(struct compat_43_sys_getkerninfo_args), 0,
	    compat_43(sys_getkerninfo) },	/* 63 = compat_43 ogetkerninfo */
d192 5
a196 1
	    compat_43(sys_getpagesize) },	/* 64 = compat_43 ogetpagesize */
d209 2
a210 2
	{ 6, s(struct compat_43_sys_mmap_args), 0,
	    compat_43(sys_mmap) },		/* 71 = compat_43 ommap */
d236 1
a236 1
	    compat_43(sys_wait) },		/* 84 = compat_43 owait */
a240 4
	{ 2, s(struct compat_43_sys_gethostname_args), 0,
	    compat_43(sys_gethostname) },	/* 87 = compat_43 ogethostname */
	{ 2, s(struct compat_43_sys_sethostname_args), 0,
	    compat_43(sys_sethostname) },	/* 88 = compat_43 osethostname */
d242 5
a246 1
	    compat_43(sys_getdtablesize) },	/* 89 = compat_43 ogetdtablesize */
d265 2
a266 2
	{ 3, s(struct compat_43_sys_accept_args), 0,
	    compat_43(sys_accept) },		/* 99 = compat_43 oaccept */
d269 4
a272 4
	{ 4, s(struct compat_43_sys_send_args), 0,
	    compat_43(sys_send) },		/* 101 = compat_43 osend */
	{ 4, s(struct compat_43_sys_recv_args), 0,
	    compat_43(sys_recv) },		/* 102 = compat_43 orecv */
d283 6
a288 6
	{ 3, s(struct compat_43_sys_sigvec_args), 0,
	    compat_43(sys_sigvec) },		/* 108 = compat_43 osigvec */
	{ 1, s(struct compat_43_sys_sigblock_args), 0,
	    compat_43(sys_sigblock) },		/* 109 = compat_43 osigblock */
	{ 1, s(struct compat_43_sys_sigsetmask_args), 0,
	    compat_43(sys_sigsetmask) },	/* 110 = compat_43 osigsetmask */
d291 6
a296 6
	{ 2, s(struct compat_43_sys_sigstack_args), 0,
	    compat_43(sys_sigstack) },		/* 112 = compat_43 osigstack */
	{ 3, s(struct compat_43_sys_recvmsg_args), 0,
	    compat_43(sys_recvmsg) },		/* 113 = compat_43 orecvmsg */
	{ 3, s(struct compat_43_sys_sendmsg_args), 0,
	    compat_43(sys_sendmsg) },		/* 114 = compat_43 osendmsg */
d317 2
a318 2
	{ 6, s(struct compat_43_sys_recvfrom_args), 0,
	    compat_43(sys_recvfrom) },		/* 125 = compat_43 orecvfrom */
d325 4
a328 4
	{ 2, s(struct compat_43_sys_truncate_args), 0,
	    compat_43(sys_truncate) },		/* 129 = compat_43 otruncate */
	{ 2, s(struct compat_43_sys_ftruncate_args), 0,
	    compat_43(sys_ftruncate) },		/* 130 = compat_43 oftruncate */
a348 2
	{ 3, s(struct compat_43_sys_getpeername_args), 0,
	    compat_43(sys_getpeername) },	/* 141 = compat_43 ogetpeername */
d350 11
a360 9
	    compat_43(sys_gethostid) },		/* 142 = compat_43 ogethostid */
	{ 1, s(struct compat_43_sys_sethostid_args), 0,
	    compat_43(sys_sethostid) },		/* 143 = compat_43 osethostid */
	{ 2, s(struct compat_43_sys_getrlimit_args), 0,
	    compat_43(sys_getrlimit) },		/* 144 = compat_43 ogetrlimit */
	{ 2, s(struct compat_43_sys_setrlimit_args), 0,
	    compat_43(sys_setrlimit) },		/* 145 = compat_43 osetrlimit */
	{ 2, s(struct compat_43_sys_killpg_args), 0,
	    compat_43(sys_killpg) },		/* 146 = compat_43 okillpg */
d366 3
a368 3
	    compat_43(sys_quota) },		/* 149 = compat_43 oquota */
	{ 3, s(struct compat_43_sys_getsockname_args), 0,
	    compat_43(sys_getsockname) },	/* 150 = compat_43 ogetsockname */
d384 2
a385 2
	{ 4, s(struct compat_43_sys_getdirentries_args), 0,
	    compat_43(sys_getdirentries) },	/* 156 = compat_43 ogetdirentries */
@


1.119
log
@sync
@
text
@@


1.118
log
@regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.107 2011/06/01 06:20:41 guenther Exp 
d474 6
a479 6
	{ 2, s(struct compat_35_sys_stat_args), 0,
	    compat_35(sys_stat) },		/* 188 = compat_35 stat35 */
	{ 2, s(struct compat_35_sys_fstat_args), 0,
	    compat_35(sys_fstat) },		/* 189 = compat_35 fstat35 */
	{ 2, s(struct compat_35_sys_lstat_args), 0,
	    compat_35(sys_lstat) },		/* 190 = compat_35 lstat35 */
a565 4
	{ 3, s(struct compat_35_sys_semop_args), 0,
	    compat_35(sys_semop) },		/* 222 = compat_35 semop */
	{ 0, 0, 0,
	    sys_nosys },			/* 223 = obsolete sys_semconfig */
d571 1
d573 1
a573 1
	    sys_nosys },			/* 222 = unimplemented semop */
d575 1
a575 2
	    sys_nosys },			/* 223 = unimplemented semconfig */
#endif
a601 2
	{ 3, s(struct compat_35_sys_shmget_args), 0,
	    compat_35(sys_shmget) },		/* 231 = compat_35 shmget */
d609 1
d611 1
a611 2
	    sys_nosys },			/* 231 = unimplemented shmget */
#endif
a661 4
#ifdef SYSVSEM
	{ 4, s(struct compat_35_sys___semctl_args), 0,
	    compat_35(sys___semctl) },		/* 257 = compat_35 semctl35 */
#else
d663 1
a663 6
	    sys_nosys },			/* 257 = unimplemented */
#endif
#ifdef SYSVSHM
	{ 3, s(struct compat_35_sys_shmctl_args), 0,
	    compat_35(sys_shmctl) },		/* 258 = compat_35 shmctl35 */
#else
d665 1
a665 6
	    sys_nosys },			/* 258 = unimplemented */
#endif
#ifdef SYSVMSG
	{ 3, s(struct compat_35_sys_msgctl_args), 0,
	    compat_35(sys_msgctl) },		/* 259 = compat_35 msgctl35 */
#else
d667 1
a667 2
	    sys_nosys },			/* 259 = unimplemented */
#endif
@


1.117
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.105 2011/04/04 12:44:10 deraadt Exp 
d92 1
a92 1
	{ 0, 0, SY_NOLOCK | 0,
d299 1
a299 1
	{ 2, s(struct sys_gettimeofday_args), 0,
d618 1
a618 1
	{ 2, s(struct sys_clock_gettime_args), 0,
d622 1
a622 1
	{ 2, s(struct sys_clock_getres_args), 0,
d634 1
a634 1
	{ 2, s(struct sys_nanosleep_args), 0,
d660 1
a660 1
	{ 0, 0, 0,
d790 1
a790 1
	{ 0, 0, 0,
d792 1
a792 1
	{ 0, 0, 0,
@


1.116
log
@Regen for new getdirentries.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.104 2010/10/28 15:02:41 millert Exp 
a48 6
#ifdef COMPAT_O47
#define compat_o47(func) __CONCAT(compat_o47_,func)
#else
#define compat_o47(func) sys_nosys
#endif

d715 2
a716 2
	{ 3, s(struct compat_o47_sys_getpeereid_args), 0,
	    compat_o47(sys_getpeereid) },	/* 273 = compat_o47 getpeereid */
@


1.115
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.103 2010/09/20 07:18:03 deraadt Exp 
d496 2
a497 2
	{ 4, s(struct sys_getdirentries_args), 0,
	    sys_getdirentries },		/* 196 = getdirentries */
d824 2
@


1.114
log
@Fix the naming of interfaces and variables for rdomains and rtables
and make it possible to bind sockets (including listening sockets!)
to rtables and not just rdomains.  This changes the name of the
system calls, socket option, and ioctl.  After building with this
you should remove the files /usr/share/man/cat2/[gs]etrdomain.0.

Since this removes the existing [gs]etrdomain() system calls, the
libc major is bumped.

Written by claudio@@, criticized^Wcritiqued by me
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.101 2010/07/01 23:10:40 tedu Exp 
d49 6
d721 2
a722 2
	{ 3, s(struct sys_getpeereid_args), 0,
	    sys_getpeereid },			/* 273 = getpeereid */
@


1.113
log
@regen
@
text
@d814 2
a815 2
	{ 1, s(struct sys_setrdomain_args), 0,
	    sys_setrdomain },			/* 310 = setrdomain */
d817 1
a817 1
	    sys_getrdomain },			/* 311 = getrdomain */
@


1.112
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.100 2010/07/01 01:54:38 deraadt Exp 
d699 2
a700 2
	{ 2, s(struct compat_35_sys_fhstat_args), 0,
	    compat_35(sys_fhstat) },		/* 265 = compat_35 fhstat */
@


1.111
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.99 2010/06/29 00:28:14 tedu Exp 
a36 6
#ifdef COMPAT_23
#define compat_23(func) __CONCAT(compat_23_,func)
#else
#define compat_23(func) sys_nosys
#endif

a48 6
#ifdef COMPAT_O43
#define compat_o43(func) __CONCAT(compat_o43_,func)
#else
#define compat_o43(func) sys_nosys
#endif

d562 2
a563 2
	{ 4, s(struct compat_23_sys___semctl_args), 0,
	    compat_23(sys___semctl) },		/* 220 = compat_23 semctl23 */
d581 2
a582 2
	{ 3, s(struct compat_23_sys_msgctl_args), 0,
	    compat_23(sys_msgctl) },		/* 224 = compat_23 msgctl23 */
d602 2
a603 2
	{ 3, s(struct compat_23_sys_shmctl_args), 0,
	    compat_23(sys_shmctl) },		/* 229 = compat_23 shmctl23 */
d689 6
a694 6
	{ 3, s(struct compat_o43_sys_getfsstat_args), 0,
	    compat_o43(sys_getfsstat) },	/* 260 = compat_o43 getfsstat */
	{ 2, s(struct compat_o43_sys_statfs_args), 0,
	    compat_o43(sys_statfs) },		/* 261 = compat_o43 statfs */
	{ 2, s(struct compat_o43_sys_fstatfs_args), 0,
	    compat_o43(sys_fstatfs) },		/* 262 = compat_o43 fstatfs */
d701 2
a702 2
	{ 2, s(struct compat_o43_sys_fhstatfs_args), 0,
	    compat_o43(sys_fhstatfs) },		/* 266 = compat_o43 fhstatfs */
@


1.110
log
@regen, even though there is no code change, such that the RCS IDs match,
as suggested by art@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.98 2010/01/18 19:09:39 schwarze Exp 
a803 1
#ifdef RTHREADS
a813 12
#else
	{ 0, 0, 0,
	    sys_nosys },			/* 299 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 300 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 301 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 302 = unimplemented */
	{ 0, 0, 0,
	    sys_nosys },			/* 303 = unimplemented */
#endif
@


1.109
log
@Regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.97 2009/11/27 20:05:50 guenther Exp 
@


1.108
log
@Change threxit() to take a pointer to a pid_t to zero out from the
kernel so that librthread can detect when a thread is completely
done with its stack without need a kqueue.  The dying thread moves
itself to a GC list, other threads scan the GC list on pthread_create()
and pthread_join() and free the stack and handle once the thread's
thread id is zeroed.

"get it in" deraadt@@, tedu@@, cheers by others
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.93 2009/06/03 15:42:03 jj Exp 
d807 1
a807 1
	{ 3, s(struct sys_thrsleep_args), 0,
d813 1
a813 1
	{ 1, s(struct sys_thrsigdivert_args), 0,
d839 4
@


1.107
log
@sync
@
text
@@


1.106
log
@sync
@
text
@@


1.105
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.91 2009/03/12 06:56:13 guenther Exp 
@


1.104
log
@regen
@
text
@d17 1
a17 1
#include <xfs/xfs_pioctl.h>
d526 2
a527 2
	{ 5, s(struct sys_xfspioctl_args), 0,
	    sys_xfspioctl },			/* 208 = xfspioctl */
@


1.103
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.90 2008/03/16 19:42:57 otto Exp 
@


1.102
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.89 2008/01/05 00:36:13 miod Exp 
d55 6
d701 6
a706 6
	{ 3, s(struct sys_getfsstat_args), 0,
	    sys_getfsstat },			/* 260 = getfsstat */
	{ 2, s(struct sys_statfs_args), 0,
	    sys_statfs },			/* 261 = statfs */
	{ 2, s(struct sys_fstatfs_args), 0,
	    sys_fstatfs },			/* 262 = fstatfs */
d713 2
a714 2
	{ 2, s(struct sys_fhstatfs_args), 0,
	    sys_fhstatfs },			/* 266 = fhstatfs */
d831 8
@


1.101
log
@Mark vadvise(2) as obsolete and remove its implementation, so instead of
returning EINVAL, you'll get ENOSYS. No serious code has used this system
call in at least fifteen years.

The libc stub will be removed at the next major crank time.

ok henning@@ deraadt@@ krw@@ toby@@
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.100 2007/11/28 13:48:31 deraadt Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.88 2007/11/28 13:47:02 deraadt Exp 
@


1.100
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d217 2
a218 2
	{ 1, s(struct sys_ovadvise_args), 0,
	    sys_ovadvise },			/* 72 = vadvise */
@


1.99
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.87 2007/11/27 18:04:47 art Exp 
d406 2
a407 2
	{ 1, s(struct compat_09_sys_uname_args), 0,
	    compat_09(sys_uname) },		/* 164 = compat_09 ouname */
@


1.98
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.86 2006/09/22 17:35:41 pedro Exp 
d58 1
a58 1
	{ 0, 0,
d60 1
a60 1
	{ 1, s(struct sys_exit_args),
d62 1
a62 1
	{ 0, 0,
d64 1
a64 1
	{ 3, s(struct sys_read_args),
d66 1
a66 1
	{ 3, s(struct sys_write_args),
d68 1
a68 1
	{ 3, s(struct sys_open_args),
d70 1
a70 1
	{ 1, s(struct sys_close_args),
d72 1
a72 1
	{ 4, s(struct sys_wait4_args),
d74 1
a74 1
	{ 2, s(struct compat_43_sys_creat_args),
d76 1
a76 1
	{ 2, s(struct sys_link_args),
d78 1
a78 1
	{ 1, s(struct sys_unlink_args),
d80 1
a80 1
	{ 0, 0,
d82 1
a82 1
	{ 1, s(struct sys_chdir_args),
d84 1
a84 1
	{ 1, s(struct sys_fchdir_args),
d86 1
a86 1
	{ 3, s(struct sys_mknod_args),
d88 1
a88 1
	{ 2, s(struct sys_chmod_args),
d90 1
a90 1
	{ 3, s(struct sys_chown_args),
d92 1
a92 1
	{ 1, s(struct sys_obreak_args),
d94 1
a94 1
	{ 3, s(struct compat_25_sys_getfsstat_args),
d96 1
a96 1
	{ 3, s(struct compat_43_sys_lseek_args),
d98 1
a98 1
	{ 0, 0,
d100 1
a100 1
	{ 4, s(struct sys_mount_args),
d102 1
a102 1
	{ 2, s(struct sys_unmount_args),
d104 1
a104 1
	{ 1, s(struct sys_setuid_args),
d106 1
a106 1
	{ 0, 0,
d108 1
a108 1
	{ 0, 0,
d111 1
a111 1
	{ 4, s(struct sys_ptrace_args),
d114 1
a114 1
	{ 0, 0,
d117 1
a117 1
	{ 3, s(struct sys_recvmsg_args),
d119 1
a119 1
	{ 3, s(struct sys_sendmsg_args),
d121 1
a121 1
	{ 6, s(struct sys_recvfrom_args),
d123 1
a123 1
	{ 3, s(struct sys_accept_args),
d125 1
a125 1
	{ 3, s(struct sys_getpeername_args),
d127 1
a127 1
	{ 3, s(struct sys_getsockname_args),
d129 1
a129 1
	{ 2, s(struct sys_access_args),
d131 1
a131 1
	{ 2, s(struct sys_chflags_args),
d133 1
a133 1
	{ 2, s(struct sys_fchflags_args),
d135 1
a135 1
	{ 0, 0,
d137 1
a137 1
	{ 2, s(struct sys_kill_args),
d139 1
a139 1
	{ 2, s(struct compat_43_sys_stat_args),
d141 1
a141 1
	{ 0, 0,
d143 1
a143 1
	{ 2, s(struct compat_43_sys_lstat_args),
d145 1
a145 1
	{ 1, s(struct sys_dup_args),
d147 1
a147 1
	{ 0, 0,
d149 1
a149 1
	{ 0, 0,
d151 1
a151 1
	{ 4, s(struct sys_profil_args),
d154 1
a154 1
	{ 4, s(struct sys_ktrace_args),
d157 1
a157 1
	{ 0, 0,
d160 1
a160 1
	{ 3, s(struct sys_sigaction_args),
d162 1
a162 1
	{ 0, 0,
d164 1
a164 1
	{ 2, s(struct sys_sigprocmask_args),
d166 1
a166 1
	{ 2, s(struct sys_getlogin_args),
d168 1
a168 1
	{ 1, s(struct sys_setlogin_args),
d171 1
a171 1
	{ 1, s(struct sys_acct_args),
d174 1
a174 1
	{ 0, 0,
d177 1
a177 1
	{ 0, 0,
d179 1
a179 1
	{ 2, s(struct sys_osigaltstack_args),
d181 1
a181 1
	{ 3, s(struct sys_ioctl_args),
d183 1
a183 1
	{ 1, s(struct sys_reboot_args),
d185 1
a185 1
	{ 1, s(struct sys_revoke_args),
d187 1
a187 1
	{ 2, s(struct sys_symlink_args),
d189 1
a189 1
	{ 3, s(struct sys_readlink_args),
d191 1
a191 1
	{ 3, s(struct sys_execve_args),
d193 1
a193 1
	{ 1, s(struct sys_umask_args),
d195 1
a195 1
	{ 1, s(struct sys_chroot_args),
d197 1
a197 1
	{ 2, s(struct compat_43_sys_fstat_args),
d199 1
a199 1
	{ 4, s(struct compat_43_sys_getkerninfo_args),
d201 1
a201 1
	{ 0, 0,
d203 1
a203 1
	{ 2, s(struct compat_25_sys_omsync_args),
d205 1
a205 1
	{ 0, 0,
d207 1
a207 1
	{ 0, 0,
d209 1
a209 1
	{ 0, 0,
d211 1
a211 1
	{ 1, s(struct sys_sbrk_args),
d213 1
a213 1
	{ 1, s(struct sys_sstk_args),
d215 1
a215 1
	{ 6, s(struct compat_43_sys_mmap_args),
d217 1
a217 1
	{ 1, s(struct sys_ovadvise_args),
d219 1
a219 1
	{ 2, s(struct sys_munmap_args),
d221 1
a221 1
	{ 3, s(struct sys_mprotect_args),
d223 1
a223 1
	{ 3, s(struct sys_madvise_args),
d225 1
a225 1
	{ 0, 0,
d227 1
a227 1
	{ 0, 0,
d229 1
a229 1
	{ 3, s(struct sys_mincore_args),
d231 1
a231 1
	{ 2, s(struct sys_getgroups_args),
d233 1
a233 1
	{ 2, s(struct sys_setgroups_args),
d235 1
a235 1
	{ 0, 0,
d237 1
a237 1
	{ 2, s(struct sys_setpgid_args),
d239 1
a239 1
	{ 3, s(struct sys_setitimer_args),
d241 1
a241 1
	{ 0, 0,
d243 1
a243 1
	{ 1, s(struct compat_25_sys_swapon_args),
d245 1
a245 1
	{ 2, s(struct sys_getitimer_args),
d247 1
a247 1
	{ 2, s(struct compat_43_sys_gethostname_args),
d249 1
a249 1
	{ 2, s(struct compat_43_sys_sethostname_args),
d251 1
a251 1
	{ 0, 0,
d253 1
a253 1
	{ 2, s(struct sys_dup2_args),
d255 1
a255 1
	{ 0, 0,
d257 1
a257 1
	{ 3, s(struct sys_fcntl_args),
d259 1
a259 1
	{ 5, s(struct sys_select_args),
d261 1
a261 1
	{ 0, 0,
d263 1
a263 1
	{ 1, s(struct sys_fsync_args),
d265 1
a265 1
	{ 3, s(struct sys_setpriority_args),
d267 1
a267 1
	{ 3, s(struct sys_socket_args),
d269 1
a269 1
	{ 3, s(struct sys_connect_args),
d271 1
a271 1
	{ 3, s(struct compat_43_sys_accept_args),
d273 1
a273 1
	{ 2, s(struct sys_getpriority_args),
d275 1
a275 1
	{ 4, s(struct compat_43_sys_send_args),
d277 1
a277 1
	{ 4, s(struct compat_43_sys_recv_args),
d279 1
a279 1
	{ 1, s(struct sys_sigreturn_args),
d281 1
a281 1
	{ 3, s(struct sys_bind_args),
d283 1
a283 1
	{ 5, s(struct sys_setsockopt_args),
d285 1
a285 1
	{ 2, s(struct sys_listen_args),
d287 1
a287 1
	{ 0, 0,
d289 1
a289 1
	{ 3, s(struct compat_43_sys_sigvec_args),
d291 1
a291 1
	{ 1, s(struct compat_43_sys_sigblock_args),
d293 1
a293 1
	{ 1, s(struct compat_43_sys_sigsetmask_args),
d295 1
a295 1
	{ 1, s(struct sys_sigsuspend_args),
d297 1
a297 1
	{ 2, s(struct compat_43_sys_sigstack_args),
d299 1
a299 1
	{ 3, s(struct compat_43_sys_recvmsg_args),
d301 1
a301 1
	{ 3, s(struct compat_43_sys_sendmsg_args),
d303 1
a303 1
	{ 0, 0,
d305 1
a305 1
	{ 2, s(struct sys_gettimeofday_args),
d307 1
a307 1
	{ 2, s(struct sys_getrusage_args),
d309 1
a309 1
	{ 5, s(struct sys_getsockopt_args),
d311 1
a311 1
	{ 0, 0,
d313 1
a313 1
	{ 3, s(struct sys_readv_args),
d315 1
a315 1
	{ 3, s(struct sys_writev_args),
d317 1
a317 1
	{ 2, s(struct sys_settimeofday_args),
d319 1
a319 1
	{ 3, s(struct sys_fchown_args),
d321 1
a321 1
	{ 2, s(struct sys_fchmod_args),
d323 1
a323 1
	{ 6, s(struct compat_43_sys_recvfrom_args),
d325 1
a325 1
	{ 2, s(struct sys_setreuid_args),
d327 1
a327 1
	{ 2, s(struct sys_setregid_args),
d329 1
a329 1
	{ 2, s(struct sys_rename_args),
d331 1
a331 1
	{ 2, s(struct compat_43_sys_truncate_args),
d333 1
a333 1
	{ 2, s(struct compat_43_sys_ftruncate_args),
d335 1
a335 1
	{ 2, s(struct sys_flock_args),
d337 1
a337 1
	{ 2, s(struct sys_mkfifo_args),
d339 1
a339 1
	{ 6, s(struct sys_sendto_args),
d341 1
a341 1
	{ 2, s(struct sys_shutdown_args),
d343 1
a343 1
	{ 4, s(struct sys_socketpair_args),
d345 1
a345 1
	{ 2, s(struct sys_mkdir_args),
d347 1
a347 1
	{ 1, s(struct sys_rmdir_args),
d349 1
a349 1
	{ 2, s(struct sys_utimes_args),
d351 1
a351 1
	{ 0, 0,
d353 1
a353 1
	{ 2, s(struct sys_adjtime_args),
d355 1
a355 1
	{ 3, s(struct compat_43_sys_getpeername_args),
d357 1
a357 1
	{ 0, 0,
d359 1
a359 1
	{ 1, s(struct compat_43_sys_sethostid_args),
d361 1
a361 1
	{ 2, s(struct compat_43_sys_getrlimit_args),
d363 1
a363 1
	{ 2, s(struct compat_43_sys_setrlimit_args),
d365 1
a365 1
	{ 2, s(struct compat_43_sys_killpg_args),
d367 1
a367 1
	{ 0, 0,
d369 1
a369 1
	{ 4, s(struct sys_quotactl_args),
d371 1
a371 1
	{ 0, 0,
d373 1
a373 1
	{ 3, s(struct compat_43_sys_getsockname_args),
d375 1
a375 1
	{ 0, 0,
d377 1
a377 1
	{ 0, 0,
d379 1
a379 1
	{ 0, 0,
d381 1
a381 1
	{ 0, 0,
d384 1
a384 1
	{ 2, s(struct sys_nfssvc_args),
d387 1
a387 1
	{ 0, 0,
d390 1
a390 1
	{ 4, s(struct compat_43_sys_getdirentries_args),
d392 1
a392 1
	{ 2, s(struct compat_25_sys_statfs_args),
d394 1
a394 1
	{ 2, s(struct compat_25_sys_fstatfs_args),
d396 1
a396 1
	{ 0, 0,
d398 1
a398 1
	{ 0, 0,
d400 1
a400 1
	{ 2, s(struct sys_getfh_args),
d402 1
a402 1
	{ 2, s(struct compat_09_sys_getdomainname_args),
d404 1
a404 1
	{ 2, s(struct compat_09_sys_setdomainname_args),
d406 1
a406 1
	{ 1, s(struct compat_09_sys_uname_args),
d408 1
a408 1
	{ 2, s(struct sys_sysarch_args),
d410 1
a410 1
	{ 0, 0,
d412 1
a412 1
	{ 0, 0,
d414 1
a414 1
	{ 0, 0,
d417 1
a417 1
	{ 5, s(struct compat_10_sys_semsys_args),
d420 1
a420 1
	{ 0, 0,
d424 1
a424 1
	{ 6, s(struct compat_10_sys_msgsys_args),
d427 1
a427 1
	{ 0, 0,
d431 1
a431 1
	{ 4, s(struct compat_10_sys_shmsys_args),
d434 1
a434 1
	{ 0, 0,
d437 1
a437 1
	{ 0, 0,
d439 1
a439 1
	{ 5, s(struct sys_pread_args),
d441 1
a441 1
	{ 5, s(struct sys_pwrite_args),
d443 1
a443 1
	{ 0, 0,
d445 1
a445 1
	{ 0, 0,
d447 1
a447 1
	{ 0, 0,
d449 1
a449 1
	{ 0, 0,
d451 1
a451 1
	{ 0, 0,
d453 1
a453 1
	{ 0, 0,
d455 1
a455 1
	{ 1, s(struct sys_setgid_args),
d457 1
a457 1
	{ 1, s(struct sys_setegid_args),
d459 1
a459 1
	{ 1, s(struct sys_seteuid_args),
d462 1
a462 1
	{ 3, s(struct lfs_bmapv_args),
d464 1
a464 1
	{ 3, s(struct lfs_markv_args),
d466 1
a466 1
	{ 2, s(struct lfs_segclean_args),
d468 1
a468 1
	{ 2, s(struct lfs_segwait_args),
d471 1
a471 1
	{ 0, 0,
d473 1
a473 1
	{ 0, 0,
d475 1
a475 1
	{ 0, 0,
d477 1
a477 1
	{ 0, 0,
d480 1
a480 1
	{ 2, s(struct compat_35_sys_stat_args),
d482 1
a482 1
	{ 2, s(struct compat_35_sys_fstat_args),
d484 1
a484 1
	{ 2, s(struct compat_35_sys_lstat_args),
d486 1
a486 1
	{ 2, s(struct sys_pathconf_args),
d488 1
a488 1
	{ 2, s(struct sys_fpathconf_args),
d490 1
a490 1
	{ 3, s(struct sys_swapctl_args),
d492 1
a492 1
	{ 2, s(struct sys_getrlimit_args),
d494 1
a494 1
	{ 2, s(struct sys_setrlimit_args),
d496 1
a496 1
	{ 4, s(struct sys_getdirentries_args),
d498 1
a498 1
	{ 7, s(struct sys_mmap_args),
d500 1
a500 1
	{ 0, 0,
d502 1
a502 1
	{ 4, s(struct sys_lseek_args),
d504 1
a504 1
	{ 3, s(struct sys_truncate_args),
d506 1
a506 1
	{ 3, s(struct sys_ftruncate_args),
d508 1
a508 1
	{ 6, s(struct sys___sysctl_args),
d510 1
a510 1
	{ 2, s(struct sys_mlock_args),
d512 1
a512 1
	{ 2, s(struct sys_munlock_args),
d514 1
a514 1
	{ 0, 0,
d516 1
a516 1
	{ 2, s(struct sys_futimes_args),
d518 1
a518 1
	{ 1, s(struct sys_getpgid_args),
d520 1
a520 1
	{ 5, s(struct sys_xfspioctl_args),
d522 1
a522 1
	{ 0, 0,
d525 1
a525 1
	{ 0, 0,
d527 1
a527 1
	{ 0, 0,
d529 1
a529 1
	{ 0, 0,
d531 1
a531 1
	{ 0, 0,
d533 1
a533 1
	{ 0, 0,
d535 1
a535 1
	{ 0, 0,
d537 1
a537 1
	{ 0, 0,
d539 1
a539 1
	{ 0, 0,
d541 1
a541 1
	{ 0, 0,
d543 1
a543 1
	{ 0, 0,
d546 1
a546 1
	{ 0, 0,
d548 1
a548 1
	{ 0, 0,
d550 1
a550 1
	{ 0, 0,
d552 1
a552 1
	{ 0, 0,
d554 1
a554 1
	{ 0, 0,
d556 1
a556 1
	{ 0, 0,
d558 1
a558 1
	{ 0, 0,
d560 1
a560 1
	{ 0, 0,
d562 1
a562 1
	{ 0, 0,
d564 1
a564 1
	{ 0, 0,
d568 1
a568 1
	{ 4, s(struct compat_23_sys___semctl_args),
d570 1
a570 1
	{ 3, s(struct sys_semget_args),
d572 1
a572 1
	{ 3, s(struct compat_35_sys_semop_args),
d574 1
a574 1
	{ 0, 0,
d577 1
a577 1
	{ 0, 0,
d579 1
a579 1
	{ 0, 0,
d581 1
a581 1
	{ 0, 0,
d583 1
a583 1
	{ 0, 0,
d587 1
a587 1
	{ 3, s(struct compat_23_sys_msgctl_args),
d589 1
a589 1
	{ 2, s(struct sys_msgget_args),
d591 1
a591 1
	{ 4, s(struct sys_msgsnd_args),
d593 1
a593 1
	{ 5, s(struct sys_msgrcv_args),
d596 1
a596 1
	{ 0, 0,
d598 1
a598 1
	{ 0, 0,
d600 1
a600 1
	{ 0, 0,
d602 1
a602 1
	{ 0, 0,
d606 1
a606 1
	{ 3, s(struct sys_shmat_args),
d608 1
a608 1
	{ 3, s(struct compat_23_sys_shmctl_args),
d610 1
a610 1
	{ 1, s(struct sys_shmdt_args),
d612 1
a612 1
	{ 3, s(struct compat_35_sys_shmget_args),
d615 1
a615 1
	{ 0, 0,
d617 1
a617 1
	{ 0, 0,
d619 1
a619 1
	{ 0, 0,
d621 1
a621 1
	{ 0, 0,
d624 1
a624 1
	{ 2, s(struct sys_clock_gettime_args),
d626 1
a626 1
	{ 2, s(struct sys_clock_settime_args),
d628 1
a628 1
	{ 2, s(struct sys_clock_getres_args),
d630 1
a630 1
	{ 0, 0,
d632 1
a632 1
	{ 0, 0,
d634 1
a634 1
	{ 0, 0,
d636 1
a636 1
	{ 0, 0,
d638 1
a638 1
	{ 0, 0,
d640 1
a640 1
	{ 2, s(struct sys_nanosleep_args),
d642 1
a642 1
	{ 0, 0,
d644 1
a644 1
	{ 0, 0,
d646 1
a646 1
	{ 0, 0,
d648 1
a648 1
	{ 0, 0,
d650 1
a650 1
	{ 0, 0,
d652 1
a652 1
	{ 0, 0,
d654 1
a654 1
	{ 0, 0,
d656 1
a656 1
	{ 0, 0,
d658 1
a658 1
	{ 0, 0,
d660 1
a660 1
	{ 3, s(struct sys_minherit_args),
d662 1
a662 1
	{ 1, s(struct sys_rfork_args),
d664 1
a664 1
	{ 3, s(struct sys_poll_args),
d666 1
a666 1
	{ 0, 0,
d668 1
a668 1
	{ 3, s(struct sys_lchown_args),
d670 1
a670 1
	{ 1, s(struct sys_getsid_args),
d672 1
a672 1
	{ 3, s(struct sys_msync_args),
d675 1
a675 1
	{ 4, s(struct compat_35_sys___semctl_args),
d678 1
a678 1
	{ 0, 0,
d682 1
a682 1
	{ 3, s(struct compat_35_sys_shmctl_args),
d685 1
a685 1
	{ 0, 0,
d689 1
a689 1
	{ 3, s(struct compat_35_sys_msgctl_args),
d692 1
a692 1
	{ 0, 0,
d695 1
a695 1
	{ 3, s(struct sys_getfsstat_args),
d697 1
a697 1
	{ 2, s(struct sys_statfs_args),
d699 1
a699 1
	{ 2, s(struct sys_fstatfs_args),
d701 1
a701 1
	{ 1, s(struct sys_pipe_args),
d703 1
a703 1
	{ 2, s(struct sys_fhopen_args),
d705 1
a705 1
	{ 2, s(struct compat_35_sys_fhstat_args),
d707 1
a707 1
	{ 2, s(struct sys_fhstatfs_args),
d709 1
a709 1
	{ 5, s(struct sys_preadv_args),
d711 1
a711 1
	{ 5, s(struct sys_pwritev_args),
d713 1
a713 1
	{ 0, 0,
d715 1
a715 1
	{ 6, s(struct sys_kevent_args),
d717 1
a717 1
	{ 1, s(struct sys_mlockall_args),
d719 1
a719 1
	{ 0, 0,
d721 1
a721 1
	{ 3, s(struct sys_getpeereid_args),
d723 1
a723 1
	{ 0, 0,
d725 1
a725 1
	{ 0, 0,
d727 1
a727 1
	{ 0, 0,
d729 1
a729 1
	{ 0, 0,
d731 1
a731 1
	{ 0, 0,
d733 1
a733 1
	{ 0, 0,
d735 1
a735 1
	{ 0, 0,
d737 1
a737 1
	{ 3, s(struct sys_getresuid_args),
d739 1
a739 1
	{ 3, s(struct sys_setresuid_args),
d741 1
a741 1
	{ 3, s(struct sys_getresgid_args),
d743 1
a743 1
	{ 3, s(struct sys_setresgid_args),
d745 1
a745 1
	{ 0, 0,
d747 1
a747 1
	{ 7, s(struct sys_mquery_args),
d749 1
a749 1
	{ 1, s(struct sys_closefrom_args),
d751 1
a751 1
	{ 2, s(struct sys_sigaltstack_args),
d754 1
a754 1
	{ 3, s(struct sys_shmget_args),
d757 1
a757 1
	{ 0, 0,
d761 1
a761 1
	{ 3, s(struct sys_semop_args),
d764 1
a764 1
	{ 0, 0,
d767 1
a767 1
	{ 2, s(struct sys_stat_args),
d769 1
a769 1
	{ 2, s(struct sys_fstat_args),
d771 1
a771 1
	{ 2, s(struct sys_lstat_args),
d773 1
a773 1
	{ 2, s(struct sys_fhstat_args),
d776 1
a776 1
	{ 4, s(struct sys___semctl_args),
d779 1
a779 1
	{ 0, 0,
d783 1
a783 1
	{ 3, s(struct sys_shmctl_args),
d786 1
a786 1
	{ 0, 0,
d790 1
a790 1
	{ 3, s(struct sys_msgctl_args),
d793 1
a793 1
	{ 0, 0,
d796 1
a796 1
	{ 0, 0,
d799 1
a799 1
	{ 0, 0,
d801 1
a801 1
	{ 3, s(struct sys_thrsleep_args),
d803 1
a803 1
	{ 2, s(struct sys_thrwakeup_args),
d805 1
a805 1
	{ 1, s(struct sys_threxit_args),
d807 1
a807 1
	{ 1, s(struct sys_thrsigdivert_args),
d810 1
a810 1
	{ 0, 0,
d812 1
a812 1
	{ 0, 0,
d814 1
a814 1
	{ 0, 0,
d816 1
a816 1
	{ 0, 0,
d818 1
a818 1
	{ 0, 0,
d821 1
a821 1
	{ 2, s(struct sys___getcwd_args),
d823 1
a823 1
	{ 2, s(struct sys_adjfreq_args),
@


1.97
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.85 2006/09/22 14:36:24 pedro Exp 
d461 10
d479 1
@


1.96
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.84 2006/06/14 19:52:07 otto Exp 
a460 10
#ifdef LFS
	{ 3, s(struct lfs_bmapv_args),
	    lfs_bmapv },			/* 184 = lfs_bmapv */
	{ 3, s(struct lfs_markv_args),
	    lfs_markv },			/* 185 = lfs_markv */
	{ 2, s(struct lfs_segclean_args),
	    lfs_segclean },			/* 186 = lfs_segclean */
	{ 2, s(struct lfs_segwait_args),
	    lfs_segwait },			/* 187 = lfs_segwait */
#else
a468 1
#endif
@


1.95
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.83 2006/06/09 00:05:54 deraadt Exp 
d823 2
@


1.94
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.82 2006/04/28 08:34:31 pedro Exp 
@


1.93
log
@rebuild
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.81 2005/12/30 04:02:17 tedu Exp 
d821 2
@


1.92
log
@change thrwakeup to take an argument which specifies how many threads
to wakeup.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.80 2005/12/13 06:02:03 tedu Exp 
@


1.91
log
@rebuild
@
text
@d803 1
a803 1
	{ 1, s(struct sys_thrwakeup_args),
@


1.90
log
@change the first arg to thrsleep and thrwakeup to a void *.
i had initially selected long since the kernel doesn't attempt
to interpret this value in any way, but since it is always a
pointer value in practice, this makes a little more sense.
binary compat in any case.  suggestion from deraadt@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.79 2005/12/03 18:09:08 tedu Exp 
@


1.89
log
@rebuild
@
text
@@


1.88
log
@kernel support for threaded processes (rthreads).
uses rfork(RFTHREAD) to create threads, which are presently processes
that are a little more tightly bound together.  several new syscalls
added to facilitate a userland thread library.
all conditional on RTHREADS, currently disabled.
ok deraadt
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.78 2005/07/03 20:13:59 drahn Exp 
@


1.87
log
@sync
@
text
@d796 25
@


1.86
log
@Missed in previous regen commit
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.77 2005/06/17 20:39:14 millert Exp 
a722 16
#ifdef UFS_EXTATTR
	{ 5, s(struct sys_extattrctl_args),
	    sys_extattrctl },			/* 274 = extattrctl */
	{ 5, s(struct sys_extattr_set_file_args),
	    sys_extattr_set_file },		/* 275 = extattr_set_file */
	{ 5, s(struct sys_extattr_get_file_args),
	    sys_extattr_get_file },		/* 276 = extattr_get_file */
	{ 3, s(struct sys_extattr_delete_file_args),
	    sys_extattr_delete_file },		/* 277 = extattr_delete_file */
	{ 5, s(struct sys_extattr_set_fd_args),
	    sys_extattr_set_fd },		/* 278 = extattr_set_fd */
	{ 5, s(struct sys_extattr_get_fd_args),
	    sys_extattr_get_fd },		/* 279 = extattr_get_fd */
	{ 3, s(struct sys_extattr_delete_fd_args),
	    sys_extattr_delete_fd },		/* 280 = extattr_delete_fd */
#else
a736 1
#endif
@


1.85
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.76 2004/07/15 14:35:34 deraadt Exp 
d514 2
a515 2
	{ 1, s(struct sys_undelete_args),
	    sys_undelete },			/* 205 = undelete */
@


1.84
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.75 2004/07/15 11:24:46 millert Exp 
@


1.83
log
@regen for new {msg,sem,shm}ctl syscalls.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.74 2004/07/14 23:45:11 millert Exp 
d569 1
a569 1
	    compat_23(sys___semctl) },		/* 220 = compat_23 __osemctl */
d588 1
a588 1
	    compat_23(sys_msgctl) },		/* 224 = compat_23 omsgctl */
d609 1
a609 1
	    compat_23(sys_shmctl) },		/* 229 = compat_23 oshmctl */
@


1.82
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.73 2004/07/14 18:00:48 millert Exp 
d675 2
a676 2
	{ 4, s(struct sys___semctl_args),
	    sys___semctl },			/* 257 = __semctl */
d682 2
a683 2
	{ 3, s(struct sys_shmctl_args),
	    sys_shmctl },			/* 258 = shmctl */
d689 2
a690 2
	{ 3, s(struct sys_msgctl_args),
	    sys_msgctl },			/* 259 = msgctl */
d792 21
@


1.81
log
@regen after stat/mode_t/nlink_t changes
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.72 2004/07/13 21:04:29 millert Exp 
d705 2
a706 2
	{ 2, s(struct sys_fhstat_args),
	    sys_fhstat },			/* 265 = fhstat */
d790 2
@


1.80
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.71 2004/07/09 23:52:02 millert Exp 
d480 6
a485 6
	{ 2, s(struct sys_stat_args),
	    sys_stat },				/* 188 = stat */
	{ 2, s(struct sys_fstat_args),
	    sys_fstat },			/* 189 = fstat */
	{ 2, s(struct sys_lstat_args),
	    sys_lstat },			/* 190 = lstat */
d784 6
@


1.79
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD
d140 1
a140 1
	    compat_43(sys_stat) },		/* 38 = compat_43 ostat */
d144 1
a144 1
	    compat_43(sys_lstat) },		/* 40 = compat_43 olstat */
d198 1
a198 1
	    compat_43(sys_fstat) },		/* 62 = compat_43 ofstat */
@


1.78
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.70 2004/05/27 20:48:46 tedu Exp 
@


1.77
log
@Regen, spotted by form@@pdp-11.org.ru.

ok miod@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.69 2004/05/03 17:38:48 millert Exp 
d170 1
d173 4
@


1.76
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.68 2004/02/28 19:44:16 miod Exp 
d49 6
d567 2
a568 2
	{ 3, s(struct sys_semop_args),
	    sys_semop },			/* 222 = semop */
d607 2
a608 2
	{ 3, s(struct sys_shmget_args),
	    sys_shmget },			/* 231 = shmget */
d765 14
@


1.75
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.67 2004/01/14 05:23:25 tedu Exp 
d405 1
a405 1
#if defined(SYSVSEM) && !defined(alpha) && !defined(__sparc64__)
d412 1
a412 1
#if defined(SYSVMSG) && !defined(alpha) && !defined(__sparc64__)
d419 1
a419 1
#if defined(SYSVSHM) && !defined(alpha) && !defined(__sparc64__)
@


1.74
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.66 2004/01/12 18:06:51 tedu Exp 
d168 2
a169 2
	{ 2, s(struct sys_sigaltstack_args),
	    sys_sigaltstack },			/* 53 = sigaltstack */
d757 2
@


1.73
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.65 2003/12/31 00:13:24 millert Exp 
d755 2
@


1.72
log
@regen now that [gs]etpriority(2) take id_t, not int.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.64 2003/12/11 23:02:30 millert Exp 
@


1.71
log
@missed in previous commit
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.63 2003/12/10 23:10:08 millert Exp 
@


1.70
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.62 2003/09/07 21:00:27 miod Exp 
@


1.69
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.61 2003/07/01 22:18:09 tedu Exp 
d405 1
a405 1
#if defined(SYSVSEM) && !defined(alpha)
d412 1
a412 1
#if defined(SYSVMSG) && !defined(alpha)
d419 1
a419 1
#if defined(SYSVSHM) && !defined(alpha)
@


1.68
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.60 2003/06/23 04:26:53 deraadt Exp 
d751 2
a752 2
	{ 5, s(struct sys_omquery_args),
	    sys_omquery },			/* 285 = omquery */
@


1.67
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.58 2003/05/10 17:53:58 miod Exp 
@


1.66
log
@Regen
@
text
@d16 2
@


1.65
log
@Regen (omsync deprecation)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.57 2003/04/29 19:52:32 miod Exp 
d230 2
a231 2
	{ 1, s(struct sys_swapon_args),
	    sys_swapon },			/* 85 = swapon */
@


1.64
log
@sync mquery.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.56 2003/04/28 21:32:08 drahn Exp 
d190 2
a191 2
	{ 2, s(struct sys_omsync_args),
	    sys_omsync },			/* 65 = omsync */
@


1.63
log
@mquery backout sync.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.55 2003/04/25 20:32:07 drahn Exp 
d749 4
a752 2
	{ 5, s(struct sys_mquery_args),
	    sys_mquery },			/* 285 = mquery */
@


1.62
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.54 2003/04/25 18:30:18 drahn Exp 
d749 2
a750 4
	{ 5, s(struct sys_omquery_args),
	    sys_omquery },			/* 285 = omquery */
	{ 7, s(struct sys_mquery_args),
	    sys_mquery },			/* 286 = mquery */
@


1.61
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.53 2003/04/14 04:53:50 art Exp 
d749 4
a752 2
	{ 5, s(struct sys_mquery_args),
	    sys_mquery },			/* 285 = mquery */
@


1.60
log
@There are two related changes.

The first one is an mquery(2) syscall. It's for asking the VM system
about where to map things. It will be used by ld.so, read the man page
for details.

The second change is related and is a centralization of uvm_map hint
that all callers of uvm_map calculated. This will allow us to adjust
this hint on architectures that have segments for non-exec mappings.

deraadt@@ drahn@@ ok.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.52 2003/01/30 03:29:49 millert Exp 
@


1.59
log
@somehow this got missed in the regen commit
@
text
@d749 2
@


1.58
log
@regen due to addition of [gs]etres[ug]id(2)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.51 2002/10/30 20:02:58 millert Exp 
d312 4
a315 4
	{ 2, s(struct compat_43_sys_setreuid_args),
	    compat_43(sys_setreuid) },		/* 126 = compat_43 osetreuid */
	{ 2, s(struct compat_43_sys_setregid_args),
	    compat_43(sys_setregid) },		/* 127 = compat_43 osetregid */
@


1.57
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.50 2002/07/06 19:14:20 nordin Exp 
d741 8
@


1.56
log
@Regen after syscall changes (option PTRACE)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.49 2002/03/14 00:42:25 miod Exp 
a429 6
#ifdef NTP
	{ 1, s(struct sys_ntp_gettime_args),
	    sys_ntp_gettime },			/* 175 = ntp_gettime */
	{ 1, s(struct sys_ntp_adjtime_args),
	    sys_ntp_adjtime },			/* 176 = ntp_adjtime */
#else
a433 1
#endif
@


1.55
log
@EA sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.48 2002/02/22 20:37:45 drahn Exp 
d102 1
d105 4
@


1.54
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.47 2001/06/26 19:56:52 dugsong Exp 
d712 31
@


1.54.4.1
log
@Sync UBC branch to -current
@
text
@a101 1
#ifdef PTRACE
a103 4
#else
	{ 0, 0,
	    sys_nosys },			/* 26 = unimplemented ptrace */
#endif
a711 31
#ifdef UFS_EXTATTR
	{ 5, s(struct sys_extattrctl_args),
	    sys_extattrctl },			/* 274 = extattrctl */
	{ 5, s(struct sys_extattr_set_file_args),
	    sys_extattr_set_file },		/* 275 = extattr_set_file */
	{ 5, s(struct sys_extattr_get_file_args),
	    sys_extattr_get_file },		/* 276 = extattr_get_file */
	{ 3, s(struct sys_extattr_delete_file_args),
	    sys_extattr_delete_file },		/* 277 = extattr_delete_file */
	{ 5, s(struct sys_extattr_set_fd_args),
	    sys_extattr_set_fd },		/* 278 = extattr_set_fd */
	{ 5, s(struct sys_extattr_get_fd_args),
	    sys_extattr_get_fd },		/* 279 = extattr_get_fd */
	{ 3, s(struct sys_extattr_delete_fd_args),
	    sys_extattr_delete_fd },		/* 280 = extattr_delete_fd */
#else
	{ 0, 0,
	    sys_nosys },			/* 274 = unimplemented sys_extattrctl */
	{ 0, 0,
	    sys_nosys },			/* 275 = unimplemented sys_extattr_set_file */
	{ 0, 0,
	    sys_nosys },			/* 276 = unimplemented sys_extattr_get_file */
	{ 0, 0,
	    sys_nosys },			/* 277 = unimplemented sys_extattr_delete_file */
	{ 0, 0,
	    sys_nosys },			/* 278 = unimplemented sys_extattr_set_fd */
	{ 0, 0,
	    sys_nosys },			/* 279 = unimplemented sys_extattr_get_fd */
	{ 0, 0,
	    sys_nosys },			/* 280 = unimplemented sys_extattr_delete_fd */
#endif
@


1.54.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.54.4.1 2002/06/11 03:29:40 art Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.50 2002/07/06 19:14:20 nordin Exp 
d430 6
d440 1
@


1.54.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.58 2003/05/10 17:53:58 miod Exp 
d190 2
a191 2
	{ 2, s(struct compat_25_sys_omsync_args),
	    compat_25(sys_omsync) },		/* 65 = compat_25 omsync */
d230 2
a231 2
	{ 1, s(struct compat_25_sys_swapon_args),
	    compat_25(sys_swapon) },		/* 85 = compat_25 swapon */
d312 4
a315 4
	{ 2, s(struct sys_setreuid_args),
	    sys_setreuid },			/* 126 = setreuid */
	{ 2, s(struct sys_setregid_args),
	    sys_setregid },			/* 127 = setregid */
a740 12
	{ 3, s(struct sys_getresuid_args),
	    sys_getresuid },			/* 281 = getresuid */
	{ 3, s(struct sys_setresuid_args),
	    sys_setresuid },			/* 282 = setresuid */
	{ 3, s(struct sys_getresgid_args),
	    sys_getresgid },			/* 283 = getresgid */
	{ 3, s(struct sys_setresgid_args),
	    sys_setresgid },			/* 284 = setresgid */
	{ 5, s(struct sys_omquery_args),
	    sys_omquery },			/* 285 = omquery */
	{ 7, s(struct sys_mquery_args),
	    sys_mquery },			/* 286 = mquery */
@


1.53
log
@regen
@
text
@@


1.52
log
@implement djb's getpeereid(2), to allow local-domain servers to determine client credentials. mostly from superscript.com. deraadt@@ ok
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.46 2001/06/16 22:16:23 deraadt Exp 
@


1.51
log
@sync
@
text
@d710 2
@


1.50
log
@regen for COMPAT_2{3,5}
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.45 2001/05/16 17:14:35 millert Exp 
@


1.49
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.44 2001/03/09 15:11:47 art Exp 
d35 12
d86 2
a87 2
	{ 3, s(struct sys_ogetfsstat_args),
	    sys_ogetfsstat },			/* 18 = ogetfsstat */
d374 4
a377 4
	{ 2, s(struct sys_ostatfs_args),
	    sys_ostatfs },			/* 157 = ostatfs */
	{ 2, s(struct sys_ofstatfs_args),
	    sys_ofstatfs },			/* 158 = ofstatfs */
d557 2
a558 2
	{ 4, s(struct sys___osemctl_args),
	    sys___osemctl },			/* 220 = __osemctl */
d576 2
a577 2
	{ 3, s(struct sys_omsgctl_args),
	    sys_omsgctl },			/* 224 = omsgctl */
d597 2
a598 2
	{ 3, s(struct sys_oshmctl_args),
	    sys_oshmctl },			/* 229 = oshmctl */
@


1.48
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.43 2000/11/16 20:02:17 provos Exp 
d694 4
@


1.47
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.42 2000/09/12 17:25:56 millert Exp 
d690 4
@


1.46
log
@regen-vtrace
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.41 2000/06/22 22:41:19 mickey Exp 
@


1.45
log
@sys_semconfig goes foom
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.40 2000/05/01 23:10:58 deraadt Exp 
a272 4
#ifdef TRACE
	{ 2, s(struct sys_vtrace_args),
	    sys_vtrace },			/* 115 = vtrace */
#else
a274 1
#endif
@


1.44
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.39 2000/04/20 06:32:23 deraadt Exp 
d556 2
a557 2
	{ 1, s(struct sys_semconfig_args),
	    sys_semconfig },			/* 223 = semconfig */
@


1.43
log
@regen (with correct reference from syscalls.master)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.38 2000/02/07 04:49:27 assar Exp 
d414 4
a417 4
	{ 0, 0,
	    sys_nosys },			/* 173 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 174 = unimplemented */
d691 4
@


1.43.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.49 2001/03/09 15:12:52 art Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.44 2001/03/09 15:11:47 art Exp 
d273 4
d279 1
d414 4
a417 4
	{ 5, s(struct sys_pread_args),
	    sys_pread },			/* 173 = pread */
	{ 5, s(struct sys_pwrite_args),
	    sys_pwrite },			/* 174 = pwrite */
d556 2
a557 2
	{ 0, 0,
	    sys_nosys },			/* 223 = obsolete sys_semconfig */
a690 12
	{ 5, s(struct sys_preadv_args),
	    sys_preadv },			/* 267 = preadv */
	{ 5, s(struct sys_pwritev_args),
	    sys_pwritev },			/* 268 = pwritev */
	{ 0, 0,
	    sys_kqueue },			/* 269 = kqueue */
	{ 6, s(struct sys_kevent_args),
	    sys_kevent },			/* 270 = kevent */
	{ 1, s(struct sys_mlockall_args),
	    sys_mlockall },			/* 271 = mlockall */
	{ 0, 0,
	    sys_munlockall },			/* 272 = munlockall */
@


1.43.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.43.2.1 2001/05/14 22:32:39 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.47 2001/06/26 19:56:52 dugsong Exp 
a34 12
#ifdef COMPAT_23
#define compat_23(func) __CONCAT(compat_23_,func)
#else
#define compat_23(func) sys_nosys
#endif

#ifdef COMPAT_25
#define compat_25(func) __CONCAT(compat_25_,func)
#else
#define compat_25(func) sys_nosys
#endif

d74 2
a75 2
	{ 3, s(struct compat_25_sys_getfsstat_args),
	    compat_25(sys_getfsstat) },		/* 18 = compat_25 ogetfsstat */
d362 4
a365 4
	{ 2, s(struct compat_25_sys_statfs_args),
	    compat_25(sys_statfs) },		/* 157 = compat_25 ostatfs */
	{ 2, s(struct compat_25_sys_fstatfs_args),
	    compat_25(sys_fstatfs) },		/* 158 = compat_25 ostatfs */
d545 2
a546 2
	{ 4, s(struct compat_23_sys___semctl_args),
	    compat_23(sys___semctl) },		/* 220 = compat_23 __osemctl */
d564 2
a565 2
	{ 3, s(struct compat_23_sys_msgctl_args),
	    compat_23(sys_msgctl) },		/* 224 = compat_23 omsgctl */
d585 2
a586 2
	{ 3, s(struct compat_23_sys_shmctl_args),
	    compat_23(sys_shmctl) },		/* 229 = compat_23 oshmctl */
a697 2
	{ 3, s(struct sys_getpeereid_args),
	    sys_getpeereid },			/* 273 = getpeereid */
@


1.43.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.43.2.2 2001/07/04 10:48:15 niklas Exp $	*/
@


1.43.2.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.48 2002/02/22 20:37:45 drahn Exp 
a711 31
#ifdef UFS_EXTATTR
	{ 5, s(struct sys_extattrctl_args),
	    sys_extattrctl },			/* 274 = extattrctl */
	{ 5, s(struct sys_extattr_set_file_args),
	    sys_extattr_set_file },		/* 275 = extattr_set_file */
	{ 5, s(struct sys_extattr_get_file_args),
	    sys_extattr_get_file },		/* 276 = extattr_get_file */
	{ 3, s(struct sys_extattr_delete_file_args),
	    sys_extattr_delete_file },		/* 277 = extattr_delete_file */
	{ 5, s(struct sys_extattr_set_fd_args),
	    sys_extattr_set_fd },		/* 278 = extattr_set_fd */
	{ 5, s(struct sys_extattr_get_fd_args),
	    sys_extattr_get_fd },		/* 279 = extattr_get_fd */
	{ 3, s(struct sys_extattr_delete_fd_args),
	    sys_extattr_delete_fd },		/* 280 = extattr_delete_fd */
#else
	{ 0, 0,
	    sys_nosys },			/* 274 = unimplemented sys_extattrctl */
	{ 0, 0,
	    sys_nosys },			/* 275 = unimplemented sys_extattr_set_file */
	{ 0, 0,
	    sys_nosys },			/* 276 = unimplemented sys_extattr_get_file */
	{ 0, 0,
	    sys_nosys },			/* 277 = unimplemented sys_extattr_delete_file */
	{ 0, 0,
	    sys_nosys },			/* 278 = unimplemented sys_extattr_set_fd */
	{ 0, 0,
	    sys_nosys },			/* 279 = unimplemented sys_extattr_get_fd */
	{ 0, 0,
	    sys_nosys },			/* 280 = unimplemented sys_extattr_delete_fd */
#endif
@


1.43.2.5
log
@Merge in -current from about a week ago
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.49 2002/03/14 00:42:25 miod Exp 
a101 1
#ifdef PTRACE
a103 4
#else
	{ 0, 0,
	    sys_nosys },			/* 26 = unimplemented ptrace */
#endif
@


1.43.2.6
log
@Sync the SMP branch with 3.3
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.52 2003/01/30 03:29:49 millert Exp 
d312 4
a315 4
	{ 2, s(struct sys_setreuid_args),
	    sys_setreuid },			/* 126 = setreuid */
	{ 2, s(struct sys_setregid_args),
	    sys_setregid },			/* 127 = setregid */
d430 6
d440 1
a747 8
	{ 3, s(struct sys_getresuid_args),
	    sys_getresuid },			/* 281 = getresuid */
	{ 3, s(struct sys_setresuid_args),
	    sys_setresuid },			/* 282 = setresuid */
	{ 3, s(struct sys_getresgid_args),
	    sys_getresgid },			/* 283 = getresgid */
	{ 3, s(struct sys_setresgid_args),
	    sys_setresgid },			/* 284 = setresgid */
@


1.43.2.7
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: init_sysent.c,v 1.43.2.6 2003/03/28 00:41:26 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.58 2003/05/10 17:53:58 miod Exp 
d190 2
a191 2
	{ 2, s(struct compat_25_sys_omsync_args),
	    compat_25(sys_omsync) },		/* 65 = compat_25 omsync */
d230 2
a231 2
	{ 1, s(struct compat_25_sys_swapon_args),
	    compat_25(sys_swapon) },		/* 85 = compat_25 swapon */
a748 4
	{ 5, s(struct sys_omquery_args),
	    sys_omquery },			/* 285 = omquery */
	{ 7, s(struct sys_mquery_args),
	    sys_mquery },			/* 286 = mquery */
@


1.43.2.8
log
@Biglock!  Most of the logic
comes from NetBSD.
Also a lot of fixes, enough to get a dual cpu machine actually run MP for a
very short while (we are just talking about seconds) before starving out one
of the cpus.  More coming very soon.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.38.2.6 2003/05/13 19:21:28 ho Exp 
@


1.43.2.9
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d7 1
a7 1
 * created from;	OpenBSD
a15 2
#include <sys/event.h>
#include <xfs/xfs_pioctl.h>
d166 2
a167 2
	{ 2, s(struct sys_osigaltstack_args),
	    sys_osigaltstack },			/* 53 = osigaltstack */
d403 1
a403 1
#if defined(SYSVSEM) && !defined(alpha) && !defined(__sparc64__)
d410 1
a410 1
#if defined(SYSVMSG) && !defined(alpha) && !defined(__sparc64__)
d417 1
a417 1
#if defined(SYSVSHM) && !defined(alpha) && !defined(__sparc64__)
d749 2
a750 2
	{ 0, 0,
	    sys_nosys },			/* 285 = obsolete sys_omquery */
a752 4
	{ 1, s(struct sys_closefrom_args),
	    sys_closefrom },			/* 287 = closefrom */
	{ 2, s(struct sys_sigaltstack_args),
	    sys_sigaltstack },			/* 288 = sigaltstack */
@


1.43.2.10
log
@Merge with the trunk
@
text
@a48 6
#ifdef COMPAT_35
#define compat_35(func) __CONCAT(compat_35_,func)
#else
#define compat_35(func) sys_nosys
#endif

a163 1
#ifdef ACCOUNTING
a165 4
#else
	{ 0, 0,
	    sys_nosys },			/* 51 = unimplemented acct */
#endif
d405 1
a405 1
#if defined(SYSVSEM) && !defined(__LP64__)
d412 1
a412 1
#if defined(SYSVMSG) && !defined(__LP64__)
d419 1
a419 1
#if defined(SYSVSHM) && !defined(__LP64__)
d561 2
a562 2
	{ 3, s(struct compat_35_sys_semop_args),
	    compat_35(sys_semop) },		/* 222 = compat_35 semop */
d601 2
a602 2
	{ 3, s(struct compat_35_sys_shmget_args),
	    compat_35(sys_shmget) },		/* 231 = compat_35 shmget */
a758 14
#ifdef SYSVSHM
	{ 3, s(struct sys_shmget_args),
	    sys_shmget },			/* 289 = shmget */
#else
	{ 0, 0,
	    sys_nosys },			/* 289 = unimplemented shmget */
#endif
#ifdef SYSVSEM
	{ 3, s(struct sys_semop_args),
	    sys_semop },			/* 290 = semop */
#else
	{ 0, 0,
	    sys_nosys },			/* 290 = unimplemented semop */
#endif
@


1.42
log
@regenerated
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.37 1999/06/07 07:17:42 deraadt Exp 
@


1.41
log
@regen
@
text
@a374 1
#if defined(NFSCLIENT) || defined(NFSSERVER)
a376 4
#else
	{ 0, 0,
	    sys_nosys },			/* 161 = unimplemented getfh */
#endif
d685 6
@


1.40
log
@sync
@
text
@a34 6
#ifdef COMPAT_22
#define compat_22(func) __CONCAT(compat_22_,func)
#else
#define compat_22(func) sys_nosys
#endif

@


1.39
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.36 1999/05/31 17:34:47 millert Exp 
d129 1
a129 1
	    sys_pipe },				/* 42 = pipe */
d694 2
@


1.38
log
@New struct statfs with mount options.  NOTE: this replaces statfs(2),
fstatfs(2), and getfsstat(2) so you will need to build a new kernel
before doing a "make build" or you will get "unimplemented syscall" errors.

The new struct statfs has the following featuires:
o Has a u_int32_t flags field--now softdep can have a real flag.

o Uses u_int32_t instead of longs (nicer on the alpha).  Note: the man
page used to lie about setting invalid/unused fields to -1.  SunOS does
that but our code never has.

o Gets rid of f_type completely.  It hasn't been used since NetBSD 0.9
and having it there but always 0 is confusing.  It is conceivable
that this may cause some old code to not compile but that is better
than silently breaking.

o Adds a mount_info union that contains the FSTYPE_args struct.  This
means that "mount" can now tell you all the options a filesystem was
mounted with.  This is especially nice for NFS.

Other changes:
o The linux statfs emulation didn't convert between BSD fs names
  and linux f_type numbers.  Now it does, since the BSD f_type
  number is useless to linux apps (and has been removed anyway)

o FreeBSD's struct statfs is different from our (both old and new)
and thus needs conversion.  Previously, the OpenBSD syscalls
were used without any real translation.

o mount(8) will now show extra info when invoked with no arguments.
However, to see *everything* you need to use the -v (verbose) flag.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.35 1999/05/22 21:23:40 weingart Exp 
@


1.37
log
@Sync syscalls.master
@
text
@d80 2
a81 2
	{ 3, s(struct sys_getfsstat_args),
	    sys_getfsstat },			/* 18 = getfsstat */
d373 4
a376 4
	{ 2, s(struct sys_statfs_args),
	    sys_statfs },			/* 157 = statfs */
	{ 2, s(struct sys_fstatfs_args),
	    sys_fstatfs },			/* 158 = fstatfs */
d688 6
@


1.36
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.34 1999/02/15 21:28:23 millert Exp 
d483 2
a484 2
	{ 0, 0,
	    sys_nosys },			/* 193 = unimplemented */
@


1.35
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.33 1999/02/15 20:00:49 millert Exp 
@


1.34
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.32 1998/11/18 01:14:25 art Exp 
@


1.33
log
@Sync with previous commit of syscall.master that did not make it into the changelogs. (enable xfspioctl even when XFS is not defined)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.31 1998/09/17 20:54:04 art Exp 
d670 3
d677 3
d684 3
@


1.32
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.30 1998/08/30 18:18:00 deraadt Exp 
a512 1
#ifdef XFS
a514 4
#else
	{ 0, 0,
	    sys_nosys },			/* 208 = unimplemented xfspioctl */
#endif
@


1.31
log
@regen with xfspioctl
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.29 1998/08/30 18:04:21 art Exp 
d518 1
a518 1
	    sys_nosys },			/* 208 = unimplemented pioctl */
@


1.30
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.28 1998/06/12 08:31:11 deraadt Exp 
d513 4
d518 2
a519 1
	    sys_nosys },			/* 208 = unimplemented */
@


1.29
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.27 1998/06/11 18:29:53 deraadt Exp 
d667 1
d670 2
d674 2
d678 1
@


1.28
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.26 1998/06/02 05:22:29 deraadt Exp 
d561 2
a562 2
	{ 4, s(struct sys___semctl_args),
	    sys___semctl },			/* 220 = __semctl */
d580 2
a581 2
	{ 3, s(struct sys_msgctl_args),
	    sys_msgctl },			/* 224 = msgctl */
d601 2
a602 2
	{ 3, s(struct sys_shmctl_args),
	    sys_shmctl },			/* 229 = shmctl */
d667 6
@


1.27
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.25 1998/05/11 06:13:45 deraadt Exp 
@


1.26
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.24 1998/04/25 07:14:45 deraadt Exp 
@


1.25
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.23 1998/02/16 21:56:28 millert Exp 
@


1.24
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.22 1998/02/10 08:44:07 deraadt Exp 
@


1.23
log
@Sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.21 1998/02/08 22:37:01 tholo Exp 
@


1.22
log
@sync
@
text
@d1 2
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.20 1998/01/02 05:32:51 deraadt Exp 
d45 1
a45 1
	    sys_nosys },			/* 0 = syscall */
d494 1
a494 1
	    sys_nosys },			/* 198 = __syscall */
@


1.21
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.19 1997/11/14 20:56:03 deraadt Exp 
@


1.20
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.18 1997/11/13 18:35:31 deraadt Exp 
@


1.19
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.17 1997/11/13 07:11:12 deraadt Exp 
d33 6
d177 2
a178 2
	{ 2, s(struct sys_msync_args),
	    sys_msync },			/* 65 = msync */
d663 2
@


1.18
log
@repair all that gunk
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.16 1997/08/29 20:44:24 kstailey Exp 
d655 2
@


1.17
log
@empty files suck
@
text
@d5 9
d36 619
@


1.16
log
@regen for prefix ntp system calls with sys_ like other system calls
@
text
@a4 9
 * created from	OpenBSD: syscalls.master,v 1.16 1997/08/29 20:44:24 kstailey Exp 
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/signal.h>
#include <sys/mount.h>
#include <sys/syscallargs.h>
#include <sys/poll.h>
a26 619
	{ 0, 0,
	    sys_nosys },			/* 0 = syscall */
	{ 1, s(struct sys_exit_args),
	    sys_exit },				/* 1 = exit */
	{ 0, 0,
	    sys_fork },				/* 2 = fork */
	{ 3, s(struct sys_read_args),
	    sys_read },				/* 3 = read */
	{ 3, s(struct sys_write_args),
	    sys_write },			/* 4 = write */
	{ 3, s(struct sys_open_args),
	    sys_open },				/* 5 = open */
	{ 1, s(struct sys_close_args),
	    sys_close },			/* 6 = close */
	{ 4, s(struct sys_wait4_args),
	    sys_wait4 },			/* 7 = wait4 */
	{ 2, s(struct compat_43_sys_creat_args),
	    compat_43(sys_creat) },		/* 8 = compat_43 ocreat */
	{ 2, s(struct sys_link_args),
	    sys_link },				/* 9 = link */
	{ 1, s(struct sys_unlink_args),
	    sys_unlink },			/* 10 = unlink */
	{ 0, 0,
	    sys_nosys },			/* 11 = obsolete execv */
	{ 1, s(struct sys_chdir_args),
	    sys_chdir },			/* 12 = chdir */
	{ 1, s(struct sys_fchdir_args),
	    sys_fchdir },			/* 13 = fchdir */
	{ 3, s(struct sys_mknod_args),
	    sys_mknod },			/* 14 = mknod */
	{ 2, s(struct sys_chmod_args),
	    sys_chmod },			/* 15 = chmod */
	{ 3, s(struct sys_chown_args),
	    sys_chown },			/* 16 = chown */
	{ 1, s(struct sys_obreak_args),
	    sys_obreak },			/* 17 = break */
	{ 3, s(struct sys_getfsstat_args),
	    sys_getfsstat },			/* 18 = getfsstat */
	{ 3, s(struct compat_43_sys_lseek_args),
	    compat_43(sys_lseek) },		/* 19 = compat_43 olseek */
	{ 0, 0,
	    sys_getpid },			/* 20 = getpid */
	{ 4, s(struct sys_mount_args),
	    sys_mount },			/* 21 = mount */
	{ 2, s(struct sys_unmount_args),
	    sys_unmount },			/* 22 = unmount */
	{ 1, s(struct sys_setuid_args),
	    sys_setuid },			/* 23 = setuid */
	{ 0, 0,
	    sys_getuid },			/* 24 = getuid */
	{ 0, 0,
	    sys_geteuid },			/* 25 = geteuid */
	{ 4, s(struct sys_ptrace_args),
	    sys_ptrace },			/* 26 = ptrace */
	{ 3, s(struct sys_recvmsg_args),
	    sys_recvmsg },			/* 27 = recvmsg */
	{ 3, s(struct sys_sendmsg_args),
	    sys_sendmsg },			/* 28 = sendmsg */
	{ 6, s(struct sys_recvfrom_args),
	    sys_recvfrom },			/* 29 = recvfrom */
	{ 3, s(struct sys_accept_args),
	    sys_accept },			/* 30 = accept */
	{ 3, s(struct sys_getpeername_args),
	    sys_getpeername },			/* 31 = getpeername */
	{ 3, s(struct sys_getsockname_args),
	    sys_getsockname },			/* 32 = getsockname */
	{ 2, s(struct sys_access_args),
	    sys_access },			/* 33 = access */
	{ 2, s(struct sys_chflags_args),
	    sys_chflags },			/* 34 = chflags */
	{ 2, s(struct sys_fchflags_args),
	    sys_fchflags },			/* 35 = fchflags */
	{ 0, 0,
	    sys_sync },				/* 36 = sync */
	{ 2, s(struct sys_kill_args),
	    sys_kill },				/* 37 = kill */
	{ 2, s(struct compat_43_sys_stat_args),
	    compat_43(sys_stat) },		/* 38 = compat_43 ostat */
	{ 0, 0,
	    sys_getppid },			/* 39 = getppid */
	{ 2, s(struct compat_43_sys_lstat_args),
	    compat_43(sys_lstat) },		/* 40 = compat_43 olstat */
	{ 1, s(struct sys_dup_args),
	    sys_dup },				/* 41 = dup */
	{ 0, 0,
	    sys_pipe },				/* 42 = pipe */
	{ 0, 0,
	    sys_getegid },			/* 43 = getegid */
	{ 4, s(struct sys_profil_args),
	    sys_profil },			/* 44 = profil */
#ifdef KTRACE
	{ 4, s(struct sys_ktrace_args),
	    sys_ktrace },			/* 45 = ktrace */
#else
	{ 0, 0,
	    sys_nosys },			/* 45 = unimplemented ktrace */
#endif
	{ 3, s(struct sys_sigaction_args),
	    sys_sigaction },			/* 46 = sigaction */
	{ 0, 0,
	    sys_getgid },			/* 47 = getgid */
	{ 2, s(struct sys_sigprocmask_args),
	    sys_sigprocmask },			/* 48 = sigprocmask */
	{ 2, s(struct sys_getlogin_args),
	    sys_getlogin },			/* 49 = getlogin */
	{ 1, s(struct sys_setlogin_args),
	    sys_setlogin },			/* 50 = setlogin */
	{ 1, s(struct sys_acct_args),
	    sys_acct },				/* 51 = acct */
	{ 0, 0,
	    sys_sigpending },			/* 52 = sigpending */
	{ 2, s(struct sys_sigaltstack_args),
	    sys_sigaltstack },			/* 53 = sigaltstack */
	{ 3, s(struct sys_ioctl_args),
	    sys_ioctl },			/* 54 = ioctl */
	{ 1, s(struct sys_reboot_args),
	    sys_reboot },			/* 55 = reboot */
	{ 1, s(struct sys_revoke_args),
	    sys_revoke },			/* 56 = revoke */
	{ 2, s(struct sys_symlink_args),
	    sys_symlink },			/* 57 = symlink */
	{ 3, s(struct sys_readlink_args),
	    sys_readlink },			/* 58 = readlink */
	{ 3, s(struct sys_execve_args),
	    sys_execve },			/* 59 = execve */
	{ 1, s(struct sys_umask_args),
	    sys_umask },			/* 60 = umask */
	{ 1, s(struct sys_chroot_args),
	    sys_chroot },			/* 61 = chroot */
	{ 2, s(struct compat_43_sys_fstat_args),
	    compat_43(sys_fstat) },		/* 62 = compat_43 ofstat */
	{ 4, s(struct compat_43_sys_getkerninfo_args),
	    compat_43(sys_getkerninfo) },	/* 63 = compat_43 ogetkerninfo */
	{ 0, 0,
	    compat_43(sys_getpagesize) },	/* 64 = compat_43 ogetpagesize */
	{ 2, s(struct sys_msync_args),
	    sys_msync },			/* 65 = msync */
	{ 0, 0,
	    sys_vfork },			/* 66 = vfork */
	{ 0, 0,
	    sys_nosys },			/* 67 = obsolete vread */
	{ 0, 0,
	    sys_nosys },			/* 68 = obsolete vwrite */
	{ 1, s(struct sys_sbrk_args),
	    sys_sbrk },				/* 69 = sbrk */
	{ 1, s(struct sys_sstk_args),
	    sys_sstk },				/* 70 = sstk */
	{ 6, s(struct compat_43_sys_mmap_args),
	    compat_43(sys_mmap) },		/* 71 = compat_43 ommap */
	{ 1, s(struct sys_ovadvise_args),
	    sys_ovadvise },			/* 72 = vadvise */
	{ 2, s(struct sys_munmap_args),
	    sys_munmap },			/* 73 = munmap */
	{ 3, s(struct sys_mprotect_args),
	    sys_mprotect },			/* 74 = mprotect */
	{ 3, s(struct sys_madvise_args),
	    sys_madvise },			/* 75 = madvise */
	{ 0, 0,
	    sys_nosys },			/* 76 = obsolete vhangup */
	{ 0, 0,
	    sys_nosys },			/* 77 = obsolete vlimit */
	{ 3, s(struct sys_mincore_args),
	    sys_mincore },			/* 78 = mincore */
	{ 2, s(struct sys_getgroups_args),
	    sys_getgroups },			/* 79 = getgroups */
	{ 2, s(struct sys_setgroups_args),
	    sys_setgroups },			/* 80 = setgroups */
	{ 0, 0,
	    sys_getpgrp },			/* 81 = getpgrp */
	{ 2, s(struct sys_setpgid_args),
	    sys_setpgid },			/* 82 = setpgid */
	{ 3, s(struct sys_setitimer_args),
	    sys_setitimer },			/* 83 = setitimer */
	{ 0, 0,
	    compat_43(sys_wait) },		/* 84 = compat_43 owait */
	{ 1, s(struct sys_swapon_args),
	    sys_swapon },			/* 85 = swapon */
	{ 2, s(struct sys_getitimer_args),
	    sys_getitimer },			/* 86 = getitimer */
	{ 2, s(struct compat_43_sys_gethostname_args),
	    compat_43(sys_gethostname) },	/* 87 = compat_43 ogethostname */
	{ 2, s(struct compat_43_sys_sethostname_args),
	    compat_43(sys_sethostname) },	/* 88 = compat_43 osethostname */
	{ 0, 0,
	    compat_43(sys_getdtablesize) },	/* 89 = compat_43 ogetdtablesize */
	{ 2, s(struct sys_dup2_args),
	    sys_dup2 },				/* 90 = dup2 */
	{ 0, 0,
	    sys_nosys },			/* 91 = unimplemented getdopt */
	{ 3, s(struct sys_fcntl_args),
	    sys_fcntl },			/* 92 = fcntl */
	{ 5, s(struct sys_select_args),
	    sys_select },			/* 93 = select */
	{ 0, 0,
	    sys_nosys },			/* 94 = unimplemented setdopt */
	{ 1, s(struct sys_fsync_args),
	    sys_fsync },			/* 95 = fsync */
	{ 3, s(struct sys_setpriority_args),
	    sys_setpriority },			/* 96 = setpriority */
	{ 3, s(struct sys_socket_args),
	    sys_socket },			/* 97 = socket */
	{ 3, s(struct sys_connect_args),
	    sys_connect },			/* 98 = connect */
	{ 3, s(struct compat_43_sys_accept_args),
	    compat_43(sys_accept) },		/* 99 = compat_43 oaccept */
	{ 2, s(struct sys_getpriority_args),
	    sys_getpriority },			/* 100 = getpriority */
	{ 4, s(struct compat_43_sys_send_args),
	    compat_43(sys_send) },		/* 101 = compat_43 osend */
	{ 4, s(struct compat_43_sys_recv_args),
	    compat_43(sys_recv) },		/* 102 = compat_43 orecv */
	{ 1, s(struct sys_sigreturn_args),
	    sys_sigreturn },			/* 103 = sigreturn */
	{ 3, s(struct sys_bind_args),
	    sys_bind },				/* 104 = bind */
	{ 5, s(struct sys_setsockopt_args),
	    sys_setsockopt },			/* 105 = setsockopt */
	{ 2, s(struct sys_listen_args),
	    sys_listen },			/* 106 = listen */
	{ 0, 0,
	    sys_nosys },			/* 107 = obsolete vtimes */
	{ 3, s(struct compat_43_sys_sigvec_args),
	    compat_43(sys_sigvec) },		/* 108 = compat_43 osigvec */
	{ 1, s(struct compat_43_sys_sigblock_args),
	    compat_43(sys_sigblock) },		/* 109 = compat_43 osigblock */
	{ 1, s(struct compat_43_sys_sigsetmask_args),
	    compat_43(sys_sigsetmask) },	/* 110 = compat_43 osigsetmask */
	{ 1, s(struct sys_sigsuspend_args),
	    sys_sigsuspend },			/* 111 = sigsuspend */
	{ 2, s(struct compat_43_sys_sigstack_args),
	    compat_43(sys_sigstack) },		/* 112 = compat_43 osigstack */
	{ 3, s(struct compat_43_sys_recvmsg_args),
	    compat_43(sys_recvmsg) },		/* 113 = compat_43 orecvmsg */
	{ 3, s(struct compat_43_sys_sendmsg_args),
	    compat_43(sys_sendmsg) },		/* 114 = compat_43 osendmsg */
#ifdef TRACE
	{ 2, s(struct sys_vtrace_args),
	    sys_vtrace },			/* 115 = vtrace */
#else
	{ 0, 0,
	    sys_nosys },			/* 115 = obsolete vtrace */
#endif
	{ 2, s(struct sys_gettimeofday_args),
	    sys_gettimeofday },			/* 116 = gettimeofday */
	{ 2, s(struct sys_getrusage_args),
	    sys_getrusage },			/* 117 = getrusage */
	{ 5, s(struct sys_getsockopt_args),
	    sys_getsockopt },			/* 118 = getsockopt */
	{ 0, 0,
	    sys_nosys },			/* 119 = obsolete resuba */
	{ 3, s(struct sys_readv_args),
	    sys_readv },			/* 120 = readv */
	{ 3, s(struct sys_writev_args),
	    sys_writev },			/* 121 = writev */
	{ 2, s(struct sys_settimeofday_args),
	    sys_settimeofday },			/* 122 = settimeofday */
	{ 3, s(struct sys_fchown_args),
	    sys_fchown },			/* 123 = fchown */
	{ 2, s(struct sys_fchmod_args),
	    sys_fchmod },			/* 124 = fchmod */
	{ 6, s(struct compat_43_sys_recvfrom_args),
	    compat_43(sys_recvfrom) },		/* 125 = compat_43 orecvfrom */
	{ 2, s(struct compat_43_sys_setreuid_args),
	    compat_43(sys_setreuid) },		/* 126 = compat_43 osetreuid */
	{ 2, s(struct compat_43_sys_setregid_args),
	    compat_43(sys_setregid) },		/* 127 = compat_43 osetregid */
	{ 2, s(struct sys_rename_args),
	    sys_rename },			/* 128 = rename */
	{ 2, s(struct compat_43_sys_truncate_args),
	    compat_43(sys_truncate) },		/* 129 = compat_43 otruncate */
	{ 2, s(struct compat_43_sys_ftruncate_args),
	    compat_43(sys_ftruncate) },		/* 130 = compat_43 oftruncate */
	{ 2, s(struct sys_flock_args),
	    sys_flock },			/* 131 = flock */
	{ 2, s(struct sys_mkfifo_args),
	    sys_mkfifo },			/* 132 = mkfifo */
	{ 6, s(struct sys_sendto_args),
	    sys_sendto },			/* 133 = sendto */
	{ 2, s(struct sys_shutdown_args),
	    sys_shutdown },			/* 134 = shutdown */
	{ 4, s(struct sys_socketpair_args),
	    sys_socketpair },			/* 135 = socketpair */
	{ 2, s(struct sys_mkdir_args),
	    sys_mkdir },			/* 136 = mkdir */
	{ 1, s(struct sys_rmdir_args),
	    sys_rmdir },			/* 137 = rmdir */
	{ 2, s(struct sys_utimes_args),
	    sys_utimes },			/* 138 = utimes */
	{ 0, 0,
	    sys_nosys },			/* 139 = obsolete 4.2 sigreturn */
	{ 2, s(struct sys_adjtime_args),
	    sys_adjtime },			/* 140 = adjtime */
	{ 3, s(struct compat_43_sys_getpeername_args),
	    compat_43(sys_getpeername) },	/* 141 = compat_43 ogetpeername */
	{ 0, 0,
	    compat_43(sys_gethostid) },		/* 142 = compat_43 ogethostid */
	{ 1, s(struct compat_43_sys_sethostid_args),
	    compat_43(sys_sethostid) },		/* 143 = compat_43 osethostid */
	{ 2, s(struct compat_43_sys_getrlimit_args),
	    compat_43(sys_getrlimit) },		/* 144 = compat_43 ogetrlimit */
	{ 2, s(struct compat_43_sys_setrlimit_args),
	    compat_43(sys_setrlimit) },		/* 145 = compat_43 osetrlimit */
	{ 2, s(struct compat_43_sys_killpg_args),
	    compat_43(sys_killpg) },		/* 146 = compat_43 okillpg */
	{ 0, 0,
	    sys_setsid },			/* 147 = setsid */
	{ 4, s(struct sys_quotactl_args),
	    sys_quotactl },			/* 148 = quotactl */
	{ 0, 0,
	    compat_43(sys_quota) },		/* 149 = compat_43 oquota */
	{ 3, s(struct compat_43_sys_getsockname_args),
	    compat_43(sys_getsockname) },	/* 150 = compat_43 ogetsockname */
	{ 0, 0,
	    sys_nosys },			/* 151 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 152 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 153 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 154 = unimplemented */
#if defined(NFSCLIENT) || defined(NFSSERVER)
	{ 2, s(struct sys_nfssvc_args),
	    sys_nfssvc },			/* 155 = nfssvc */
#else
	{ 0, 0,
	    sys_nosys },			/* 155 = unimplemented */
#endif
	{ 4, s(struct compat_43_sys_getdirentries_args),
	    compat_43(sys_getdirentries) },	/* 156 = compat_43 ogetdirentries */
	{ 2, s(struct sys_statfs_args),
	    sys_statfs },			/* 157 = statfs */
	{ 2, s(struct sys_fstatfs_args),
	    sys_fstatfs },			/* 158 = fstatfs */
	{ 0, 0,
	    sys_nosys },			/* 159 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 160 = unimplemented */
#if defined(NFSCLIENT) || defined(NFSSERVER)
	{ 2, s(struct sys_getfh_args),
	    sys_getfh },			/* 161 = getfh */
#else
	{ 0, 0,
	    sys_nosys },			/* 161 = unimplemented getfh */
#endif
	{ 2, s(struct compat_09_sys_getdomainname_args),
	    compat_09(sys_getdomainname) },	/* 162 = compat_09 ogetdomainname */
	{ 2, s(struct compat_09_sys_setdomainname_args),
	    compat_09(sys_setdomainname) },	/* 163 = compat_09 osetdomainname */
	{ 1, s(struct compat_09_sys_uname_args),
	    compat_09(sys_uname) },		/* 164 = compat_09 ouname */
	{ 2, s(struct sys_sysarch_args),
	    sys_sysarch },			/* 165 = sysarch */
	{ 0, 0,
	    sys_nosys },			/* 166 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 167 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 168 = unimplemented */
#if defined(SYSVSEM) && !defined(alpha)
	{ 5, s(struct compat_10_sys_semsys_args),
	    compat_10(sys_semsys) },		/* 169 = compat_10 osemsys */
#else
	{ 0, 0,
	    sys_nosys },			/* 169 = unimplemented 1.0 semsys */
#endif
#if defined(SYSVMSG) && !defined(alpha)
	{ 6, s(struct compat_10_sys_msgsys_args),
	    compat_10(sys_msgsys) },		/* 170 = compat_10 omsgsys */
#else
	{ 0, 0,
	    sys_nosys },			/* 170 = unimplemented 1.0 msgsys */
#endif
#if defined(SYSVSHM) && !defined(alpha)
	{ 4, s(struct compat_10_sys_shmsys_args),
	    compat_10(sys_shmsys) },		/* 171 = compat_10 oshmsys */
#else
	{ 0, 0,
	    sys_nosys },			/* 171 = unimplemented 1.0 shmsys */
#endif
	{ 0, 0,
	    sys_nosys },			/* 172 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 173 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 174 = unimplemented */
#ifdef NTP
	{ 1, s(struct sys_ntp_gettime_args),
	    sys_ntp_gettime },			/* 175 = ntp_gettime */
	{ 1, s(struct sys_ntp_adjtime_args),
	    sys_ntp_adjtime },			/* 176 = ntp_adjtime */
#else
	{ 0, 0,
	    sys_nosys },			/* 175 = unimplemented ntp_gettime */
	{ 0, 0,
	    sys_nosys },			/* 176 = unimplemented ntp_adjtime */
#endif
	{ 0, 0,
	    sys_nosys },			/* 177 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 178 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 179 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 180 = unimplemented */
	{ 1, s(struct sys_setgid_args),
	    sys_setgid },			/* 181 = setgid */
	{ 1, s(struct sys_setegid_args),
	    sys_setegid },			/* 182 = setegid */
	{ 1, s(struct sys_seteuid_args),
	    sys_seteuid },			/* 183 = seteuid */
#ifdef LFS
	{ 3, s(struct lfs_bmapv_args),
	    lfs_bmapv },			/* 184 = lfs_bmapv */
	{ 3, s(struct lfs_markv_args),
	    lfs_markv },			/* 185 = lfs_markv */
	{ 2, s(struct lfs_segclean_args),
	    lfs_segclean },			/* 186 = lfs_segclean */
	{ 2, s(struct lfs_segwait_args),
	    lfs_segwait },			/* 187 = lfs_segwait */
#else
	{ 0, 0,
	    sys_nosys },			/* 184 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 185 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 186 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 187 = unimplemented */
#endif
	{ 2, s(struct sys_stat_args),
	    sys_stat },				/* 188 = stat */
	{ 2, s(struct sys_fstat_args),
	    sys_fstat },			/* 189 = fstat */
	{ 2, s(struct sys_lstat_args),
	    sys_lstat },			/* 190 = lstat */
	{ 2, s(struct sys_pathconf_args),
	    sys_pathconf },			/* 191 = pathconf */
	{ 2, s(struct sys_fpathconf_args),
	    sys_fpathconf },			/* 192 = fpathconf */
	{ 0, 0,
	    sys_nosys },			/* 193 = unimplemented */
	{ 2, s(struct sys_getrlimit_args),
	    sys_getrlimit },			/* 194 = getrlimit */
	{ 2, s(struct sys_setrlimit_args),
	    sys_setrlimit },			/* 195 = setrlimit */
	{ 4, s(struct sys_getdirentries_args),
	    sys_getdirentries },		/* 196 = getdirentries */
	{ 7, s(struct sys_mmap_args),
	    sys_mmap },				/* 197 = mmap */
	{ 0, 0,
	    sys_nosys },			/* 198 = __syscall */
	{ 4, s(struct sys_lseek_args),
	    sys_lseek },			/* 199 = lseek */
	{ 3, s(struct sys_truncate_args),
	    sys_truncate },			/* 200 = truncate */
	{ 3, s(struct sys_ftruncate_args),
	    sys_ftruncate },			/* 201 = ftruncate */
	{ 6, s(struct sys___sysctl_args),
	    sys___sysctl },			/* 202 = __sysctl */
	{ 2, s(struct sys_mlock_args),
	    sys_mlock },			/* 203 = mlock */
	{ 2, s(struct sys_munlock_args),
	    sys_munlock },			/* 204 = munlock */
	{ 1, s(struct sys_undelete_args),
	    sys_undelete },			/* 205 = undelete */
	{ 2, s(struct sys_futimes_args),
	    sys_futimes },			/* 206 = futimes */
	{ 1, s(struct sys_getpgid_args),
	    sys_getpgid },			/* 207 = getpgid */
	{ 0, 0,
	    sys_nosys },			/* 208 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 209 = unimplemented */
#ifdef LKM
	{ 0, 0,
	    sys_lkmnosys },			/* 210 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 211 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 212 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 213 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 214 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 215 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 216 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 217 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 218 = lkmnosys */
	{ 0, 0,
	    sys_lkmnosys },			/* 219 = lkmnosys */
#else	/* !LKM */
	{ 0, 0,
	    sys_nosys },			/* 210 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 211 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 212 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 213 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 214 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 215 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 216 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 217 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 218 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 219 = unimplemented */
#endif	/* !LKM */
#ifdef SYSVSEM
	{ 4, s(struct sys___semctl_args),
	    sys___semctl },			/* 220 = __semctl */
	{ 3, s(struct sys_semget_args),
	    sys_semget },			/* 221 = semget */
	{ 3, s(struct sys_semop_args),
	    sys_semop },			/* 222 = semop */
	{ 1, s(struct sys_semconfig_args),
	    sys_semconfig },			/* 223 = semconfig */
#else
	{ 0, 0,
	    sys_nosys },			/* 220 = unimplemented semctl */
	{ 0, 0,
	    sys_nosys },			/* 221 = unimplemented semget */
	{ 0, 0,
	    sys_nosys },			/* 222 = unimplemented semop */
	{ 0, 0,
	    sys_nosys },			/* 223 = unimplemented semconfig */
#endif
#ifdef SYSVMSG
	{ 3, s(struct sys_msgctl_args),
	    sys_msgctl },			/* 224 = msgctl */
	{ 2, s(struct sys_msgget_args),
	    sys_msgget },			/* 225 = msgget */
	{ 4, s(struct sys_msgsnd_args),
	    sys_msgsnd },			/* 226 = msgsnd */
	{ 5, s(struct sys_msgrcv_args),
	    sys_msgrcv },			/* 227 = msgrcv */
#else
	{ 0, 0,
	    sys_nosys },			/* 224 = unimplemented msgctl */
	{ 0, 0,
	    sys_nosys },			/* 225 = unimplemented msgget */
	{ 0, 0,
	    sys_nosys },			/* 226 = unimplemented msgsnd */
	{ 0, 0,
	    sys_nosys },			/* 227 = unimplemented msgrcv */
#endif
#ifdef SYSVSHM
	{ 3, s(struct sys_shmat_args),
	    sys_shmat },			/* 228 = shmat */
	{ 3, s(struct sys_shmctl_args),
	    sys_shmctl },			/* 229 = shmctl */
	{ 1, s(struct sys_shmdt_args),
	    sys_shmdt },			/* 230 = shmdt */
	{ 3, s(struct sys_shmget_args),
	    sys_shmget },			/* 231 = shmget */
#else
	{ 0, 0,
	    sys_nosys },			/* 228 = unimplemented shmat */
	{ 0, 0,
	    sys_nosys },			/* 229 = unimplemented shmctl */
	{ 0, 0,
	    sys_nosys },			/* 230 = unimplemented shmdt */
	{ 0, 0,
	    sys_nosys },			/* 231 = unimplemented shmget */
#endif
	{ 2, s(struct sys_clock_gettime_args),
	    sys_clock_gettime },		/* 232 = clock_gettime */
	{ 2, s(struct sys_clock_settime_args),
	    sys_clock_settime },		/* 233 = clock_settime */
	{ 2, s(struct sys_clock_getres_args),
	    sys_clock_getres },			/* 234 = clock_getres */
	{ 0, 0,
	    sys_nosys },			/* 235 = unimplemented timer_create */
	{ 0, 0,
	    sys_nosys },			/* 236 = unimplemented timer_delete */
	{ 0, 0,
	    sys_nosys },			/* 237 = unimplemented timer_settime */
	{ 0, 0,
	    sys_nosys },			/* 238 = unimplemented timer_gettime */
	{ 0, 0,
	    sys_nosys },			/* 239 = unimplemented timer_getoverrun */
	{ 2, s(struct sys_nanosleep_args),
	    sys_nanosleep },			/* 240 = nanosleep */
	{ 0, 0,
	    sys_nosys },			/* 241 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 242 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 243 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 244 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 245 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 246 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 247 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 248 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 249 = unimplemented */
	{ 3, s(struct sys_minherit_args),
	    sys_minherit },			/* 250 = minherit */
	{ 1, s(struct sys_rfork_args),
	    sys_rfork },			/* 251 = rfork */
	{ 3, s(struct sys_poll_args),
	    sys_poll },				/* 252 = poll */
	{ 0, 0,
	    sys_issetugid },			/* 253 = issetugid */
	{ 3, s(struct sys_lchown_args),
	    sys_lchown },			/* 254 = lchown */
@


1.15
log
@sync to syscalls.master
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.15 1997/05/30 21:43:33 kstailey Exp 
d422 4
a425 4
	{ 1, s(struct ntp_gettime_args),
	    ntp_gettime },			/* 175 = ntp_gettime */
	{ 1, s(struct ntp_adjtime_args),
	    ntp_adjtime },			/* 176 = ntp_adjtime */
@


1.14
log
@add getpgid(2) from NetBSD
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.14 1997/04/20 20:48:27 tholo Exp 
@


1.13
log
@Add new POSIX 1003.1b related syscalls; from pk@@NetBSD
@
text
@d503 2
a504 2
	{ 0, 0,
	    sys_nosys },			/* 207 = unimplemented */
@


1.12
log
@Regen.
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.13 1997/01/26 05:18:27 downsj Exp 
d609 6
d616 1
a616 1
	    sys_nosys },			/* 232 = unimplemented */
d618 1
a618 1
	    sys_nosys },			/* 233 = unimplemented */
d620 1
a620 1
	    sys_nosys },			/* 234 = unimplemented */
d622 1
a622 1
	    sys_nosys },			/* 235 = unimplemented */
d624 3
a626 9
	    sys_nosys },			/* 236 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 237 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 238 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 239 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 240 = unimplemented */
@


1.11
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.12 1996/10/29 03:46:28 deraadt Exp 
d653 2
@


1.10
log
@update
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.11 1996/10/04 00:59:19 deraadt Exp 
@


1.9
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.10 1996/08/25 09:51:34 deraadt Exp 
d373 1
a373 1
#ifdef NFSCLIENT
@


1.8
log
@sync to syscalls.master
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.9 1996/05/18 08:53:10 deraadt Exp 
d651 2
@


1.7
log
@sync syscalls, no sys/cpu.h
@
text
@d5 1
a5 1
 * created from	OpenBSD
d13 1
d649 2
@


1.6
log
@NetBSD 960317 merge
@
text
@d500 2
a501 2
	{ 0, 0,
	    sys_nosys },			/* 206 = unimplemented */
@


1.5
log
@Add kernel PLL for system clock
Add ntp_adjtime() and ntp_gettime() system calls
Mostly stolen from FreeBSD
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.30 1995/11/22 23:07:29 cgd Exp 
d420 11
d432 1
a432 5
	    sys_nosys },			/* 175 = unimplemented */
	{ 1, s(struct sys_ntp_adjtime_args),
	    sys_ntp_adjtime },			/* 176 = ntp_adjtime */
	{ 1, s(struct sys_ntp_gettime_args),
	    sys_ntp_gettime },			/* 177 = ntp_gettime */
@


1.4
log
@plan9-like rfork() implimentation by me based on some earlier incomplete
work by rminnich@@Sarnoff.COM. still needs RFNOWAIT support.
@
text
@d422 4
a425 4
	{ 0, 0,
	    sys_nosys },			/* 176 = unimplemented */
	{ 0, 0,
	    sys_nosys },			/* 177 = unimplemented */
@


1.3
log
@add minherit() system call
@
text
@d639 2
@


1.2
log
@update for new syscalls.master
@
text
@d601 38
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.29 1995/10/10 01:32:53 mycroft Exp 
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
