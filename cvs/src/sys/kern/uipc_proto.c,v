head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.2
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.6.0.12
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.16
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.24
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.22
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.20
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.18
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.8
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.03.13.20.18.21;	author claudio;	state Exp;
branches;
next	1.13;
commitid	ZsxSSZJSFxZH81LL;

1.13
date	2017.03.02.08.58.24;	author mpi;	state Exp;
branches;
next	1.12;
commitid	tz6lHk1OQ6UxADoY;

1.12
date	2017.02.22.19.34.42;	author dhill;	state Exp;
branches;
next	1.11;
commitid	8MQyAJVsE6ZNz4mh;

1.11
date	2017.02.05.07.57.08;	author guenther;	state Exp;
branches;
next	1.10;
commitid	oXqYO0MyjdoGGcvZ;

1.10
date	2017.01.23.16.31.24;	author bluhm;	state Exp;
branches;
next	1.9;
commitid	9EAe7cRTLFNc3XTC;

1.9
date	2016.09.05.15.12.29;	author claudio;	state Exp;
branches;
next	1.8;
commitid	9stAtK16gR2yeKoN;

1.8
date	2015.07.18.15.00.01;	author guenther;	state Exp;
branches;
next	1.7;
commitid	roluigiGALHjIxXb;

1.7
date	2015.03.14.03.38.51;	author jsg;	state Exp;
branches;
next	1.6;
commitid	p4LJxGKbi0BU2cG6;

1.6
date	2011.07.06.06.31.38;	author matthew;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.05.19.54.36;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.28.07;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.04.26.22.40.42;	author millert;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	96.03.03.17.20.18;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.47;	author deraadt;	state Exp;
branches;
next	;

1.3.8.1
date	2003.06.07.11.03.40;	author ho;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Move PRU_ATTACH out of the pr_usrreq functions into pr_attach.
Attach is quite a different thing to the other PRU functions and
this should make locking a bit simpler. This also removes the ugly
hack on how proto was passed to the attach function.
OK bluhm@@ and mpi@@ on a previous version
@
text
@/*	$OpenBSD: uipc_proto.c,v 1.13 2017/03/02 08:58:24 mpi Exp $	*/
/*	$NetBSD: uipc_proto.c,v 1.8 1996/02/13 21:10:47 christos Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)uipc_proto.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/socket.h>
#include <sys/protosw.h>
#include <sys/domain.h>
#include <sys/mbuf.h>
#include <sys/unpcb.h>
#include <sys/socketvar.h>

#include <net/raw_cb.h>

/*
 * Definitions of protocols supported in the UNIX domain.
 */

extern	struct domain unixdomain;		/* or at least forward */

struct protosw unixsw[] = {
{
  .pr_type	= SOCK_STREAM,
  .pr_domain	= &unixdomain,
  .pr_protocol	= PF_LOCAL,
  .pr_flags	= PR_CONNREQUIRED|PR_WANTRCVD|PR_RIGHTS,
  .pr_usrreq	= uipc_usrreq,
  .pr_attach	= uipc_attach,
},
{
  .pr_type	= SOCK_SEQPACKET,
  .pr_domain	= &unixdomain,
  .pr_protocol	= PF_LOCAL,
  .pr_flags	= PR_ATOMIC|PR_CONNREQUIRED|PR_WANTRCVD|PR_RIGHTS,
  .pr_usrreq	= uipc_usrreq,
  .pr_attach	= uipc_attach,
},
{
  .pr_type	= SOCK_DGRAM,
  .pr_domain	= &unixdomain,
  .pr_protocol	= PF_LOCAL,
  .pr_flags	= PR_ATOMIC|PR_ADDR|PR_RIGHTS,
  .pr_usrreq	= uipc_usrreq,
  .pr_attach	= uipc_attach,
}
};

struct domain unixdomain = {
  .dom_family = AF_LOCAL,
  .dom_name = "unix",
  .dom_externalize = unp_externalize,
  .dom_dispose = unp_dispose,
  .dom_protosw = unixsw,
  .dom_protoswNPROTOSW = &unixsw[nitems(unixsw)]
};
@


1.13
log
@Convert domain declarations to C99 initializers.

ok dhill@@, florian@@, bluhm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.12 2017/02/22 19:34:42 dhill Exp $	*/
d58 1
d66 1
d74 1
@


1.12
log
@Use c99 struct initialization with protosw.

This makes it easier to grep for a member, such as .pr_usrreq, and know
which functions to review.

ok mpi@@ bluhm@@ jca@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.11 2017/02/05 07:57:08 guenther Exp $	*/
d40 1
a40 1
#include <sys/unpcb.h> 
d42 1
a42 1
                        
d75 8
a82 3
struct domain unixdomain =
    { AF_LOCAL, "unix", 0, unp_externalize, unp_dispose,
      unixsw, &unixsw[nitems(unixsw)] };
@


1.11
log
@AF_UNIX SOCK_RAW support (whatever that meant) was broken years ago.
FreeBSD and NetBSD deleted it years ago and nothing uses it, so delete it.

ok jca@@ visa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.10 2017/01/23 16:31:24 bluhm Exp $	*/
d52 6
a57 4
{ SOCK_STREAM,	&unixdomain,	PF_LOCAL,	PR_CONNREQUIRED|PR_WANTRCVD|PR_RIGHTS,
  0,		0,		0,		0,
  uipc_usrreq,
  0,		0,		0,		0,
d59 6
a64 4
{ SOCK_SEQPACKET,&unixdomain,	PF_LOCAL,	PR_ATOMIC|PR_CONNREQUIRED|PR_WANTRCVD|PR_RIGHTS,
  0,		0,		0,		0,
  uipc_usrreq,
  0,		0,		0,		0,
d66 6
a71 4
{ SOCK_DGRAM,	&unixdomain,	PF_LOCAL,	PR_ATOMIC|PR_ADDR|PR_RIGHTS,
  0,		0,		0,		0,
  uipc_usrreq,
  0,		0,		0,		0,
@


1.10
log
@The function raw_input() has not been called since netiso has been
removed in 2004.  The comment about raw_input() above rip_input()
was added in 1981, but it is wrong since 1992.  After that it has
been copied to rip6_input().  (*pr_input)() is never called with
the parameters (mbuf, sockproto, sockaddr, sockaddr).
So retire raw_input().
OK guenther@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.9 2016/09/05 15:12:29 claudio Exp $	*/
a65 5
},
{ 0,		0,		0,		0,
  0,		0,		0,		0,
  raw_usrreq,
  raw_init,	0,		0,		0,
@


1.9
log
@Kill raw_ctlinput() this function is INCOMPLETE since rev 1.1 and is not
needed. All callers using the protosw pr_ctlinput pointer do a NULL check
before so there is no need to provide the function.
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.8 2015/07/18 15:00:01 guenther Exp $	*/
d68 1
a68 1
  raw_input,	0,		0,		0,
@


1.8
log
@Change unp_scan() and its callbacks to pass the array of struct file **
and a count instead of calling the callback on each one, while also renders
the 'dispose' argument superfluous.
Move unp_*() prototypes from <sys/un.h> to <sys/unpcb.h>

ok claudio@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.7 2015/03/14 03:38:51 jsg Exp $	*/
d68 1
a68 1
  raw_input,	0,		raw_ctlinput,	0,
@


1.7
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.6 2011/07/06 06:31:38 matthew Exp $	*/
d40 1
a40 1
#include <sys/un.h> 
@


1.6
log
@Implement SOCK_SEQPACKET for UNIX sockets.

ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.5 2011/04/05 19:54:36 jasper Exp $	*/
a42 1
#include <net/if.h>
@


1.5
log
@- use nitems() no binary change on amd64

"reads OK" claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.4 2003/06/02 23:28:07 millert Exp $	*/
d54 5
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.3 1998/04/26 22:40:42 millert Exp $	*/
d72 1
a72 1
      unixsw, &unixsw[sizeof(unixsw)/sizeof(unixsw[0])] };
@


1.3
log
@Allow PF_LOCAL as the proto arg in socketpair(2).  Previously, only
PF_UNSPEC would work.  Needed for general sanity as well as XPG4.2.
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.2 1996/03/03 17:20:18 niklas Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3.8.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: uipc_proto.c,v 1.3 1998/04/26 22:40:42 millert Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 1
a57 1
{ SOCK_STREAM,	&unixdomain,	0,	PR_CONNREQUIRED|PR_WANTRCVD|PR_RIGHTS,
d62 1
a62 1
{ SOCK_DGRAM,	&unixdomain,	0,		PR_ATOMIC|PR_ADDR|PR_RIGHTS,
d75 1
a75 1
    { AF_UNIX, "unix", 0, unp_externalize, unp_dispose,
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: uipc_proto.c,v 1.5 1994/06/29 06:33:36 cgd Exp $	*/
d44 5
a53 2
int	uipc_usrreq(), raw_usrreq();
void	raw_init(), raw_input(), raw_ctlinput();
a72 2

int	unp_externalize(), unp_dispose();
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
