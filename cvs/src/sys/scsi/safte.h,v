head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.46
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.44
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.40
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.42
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.34
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.38
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.36
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.32
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.30
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.28
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.26
	OPENBSD_5_0:1.6.0.24
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.22
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.20
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.16
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.18
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.14
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.12
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.10
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.8
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5;
locks; strict;
comment	@ * @;


1.6
date	2006.01.08.06.28.42;	author dlg;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.22.04.23.58;	author david;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.18.09.51.05;	author dlg;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.11.12.57.13;	author dlg;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.05.00.31.04;	author dlg;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.05.00.08.58;	author dlg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@i cant spell my own name.

noticed by miod@@
@
text
@/*	$OpenBSD: safte.h,v 1.5 2005/08/22 04:23:58 david Exp $ */

/*
 * Copyright (c) 2005 David Gwynne <dlg@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _SCSI_SAFTE_H_
#define _SCSI_SAFTE_H_

#define SAFTE_EXTRA_OFFSET	0x05
/* scsi_inquiry_data.extra */
struct safte_inq {
	u_int8_t	uniqueid[7];
	u_int8_t	chanid;
	u_int8_t	ident[6];
#define SAFTE_IDENT		"SAF-TE"
	u_int8_t	revision[4];
#ifdef notyet
	u_int8_t	reserved[2];
#endif
} __packed;
#define SAFTE_INQ_LEN		54

struct safte_readbuf_cmd {
	u_int8_t	opcode;		/* READ_BUFFER */
	u_int8_t	flags;
#define SAFTE_RD_LUNMASK	0xe0	/* the lun should always be 0 */
#define SAFTE_RD_MODEMASK	0x07
#define SAFTE_RD_MODE		0x01	/* 0x01 is the SAF-TE command mode */
	u_int8_t	bufferid;
#define SAFTE_RD_CONFIG		0x00	/* enclosure configuration */
#define SAFTE_RD_ENCSTAT	0x01	/* enclosure status */
#define SAFTE_RD_USAGE		0x02	/* usage statistics */
#define SAFTE_RD_INSERTS	0x03	/* device insertions */
#define SAFTE_RD_SLOTSTAT	0x04	/* slot status */
#define SAFTE_RD_GLOBALS	0x05	/* global flags */
	u_int32_t	reserved1;
	u_int16_t	length;		/* transfer length (big endian) */
	u_int8_t	reserved2;
} __packed;

struct safte_writebuf_cmd {
	u_int8_t	opcode;		/* WRITE_BUFFER */
	u_int8_t	flags;
#define SAFTE_WR_LUNMASK	0xe0	/* the lun should always be 0 */
#define SAFTE_WR_MODEMASK	0x07
#define SAFTE_WR_MODE		0x01	/* 0x01 is the SAF-TE command mode */
	u_int8_t	reserved1[5];
	u_int16_t	length;		/* transfer length (big endian) */
	u_int8_t	reserved2;
} __packed;

#define	SAFTE_WRITE_SLOTSTAT	0x10	/* write device slot status */
#define SAFTE_WRITE_SETID	0x11	/* set scsi id */
#define	SAFTE_WRITE_SLOTOP	0x12	/* perform slot operation */
#define	SAFTE_WRITE_FANSPEED	0x13	/* set fan speed */
#define	SAFTE_WRITE_PWRSUP	0x14	/* activate power supply */
#define	SAFTE_WRITE_GLOBALS	0x15	/* global flags */


/* enclosure configuration */
struct safte_config {
	u_int8_t	nfans;		/* number of fans */
	u_int8_t	npwrsup;	/* number of power supplies */
	u_int8_t	nslots;		/* number of device slots */
	u_int8_t	doorlock;	/* door lock installed */
	u_int8_t	ntemps;		/* number of temp sensors */
	u_int8_t	alarm;		/* audible alarm installed */
	u_int8_t	therm;		/* temps in C and num of thermostats */
#define SAFTE_CFG_CELSIUSMASK	0x80
#define SAFTE_CFG_CELSIUS(a)	((a) & SAFTE_CFG_CELSIUSMASK ? 1 : 0)
#define SAFTE_CFG_NTHERMMASK	0x0f
#define SAFTE_CFG_NTHERM(a)	((a) & SAFTE_CFG_NTHERMMASK)
	u_int8_t	reserved[56]; /* 7 to 62 */
	u_int8_t	vendor_bytes;	/* number of vendor specific bytes */
} __packed;
#define SAFTE_CONFIG_LEN	sizeof(struct safte_config)

/* enclosure status fields */
/* fan status field */
#define SAFTE_FAN_OP		0x00	/* operational */
#define SAFTE_FAN_MF		0x01	/* malfunctioning */
#define SAFTE_FAN_NOTINST	0x02	/* not installed */
#define SAFTE_FAN_UNKNOWN	0x80	/* unknown status or unreportable */

/* power supply status field */
#define SAFTE_PWR_OP_ON		0x00	/* operational and on */
#define SAFTE_PWR_OP_OFF	0x01	/* operational and off */
#define SAFTE_PWR_MF_ON		0x10	/* malfunctioning and on */
#define SAFTE_PWR_MF_OFF	0x11	/* malfunctioning and off */
#define SAFTE_PWR_NOTINST	0x20	/* not present */
#define SAFTE_PWR_PRESENT	0x21	/* present */
#define SAFTE_PWR_UNKNOWN	0x80	/* unknown status or unreportable */

/* scsi id fields */
/* are integers, not bitfields */

/* door lock status */
#define SAFTE_DOOR_LOCKED	0x00	/* locked */
#define SAFTE_DOOR_UNLOCKED	0x01	/* unlocked or uncontrollable */
#define SAFTE_DOOR_UNKNOWN	0x80	/* unknown status or unreportable */

/* speaker status */
#define SAFTE_SPKR_OFF		0x00	/* off or not installed */
#define SAFTE_SPKR_ON		0x01	/* speaker is currently on */

/* temperature */
#define SAFTE_TEMP_OFFSET	-10	/* -10 to 245 degrees */

/* temp out of range */
#define SAFTE_TEMP_ETA		0x8000	/* any temp alert */


/* usage statistics */
struct safte_usage {
	u_int32_t	minutes;	/* total number of minutes on */
	u_int32_t	cycles;		/* total number of power cycles */
	u_int8_t	reserved[7];
	u_int8_t	vendor_bytes;	/* number of vendor specific bytes */
};


/* device insertions */
/* u_int16_t * nslots */


/* device slot status */
#define SAFTE_SLOTSTAT_INSERT	(1<<0)	/* inserted */
#define SAFTE_SLOTSTAT_SWAP	(1<<1)	/* ready to be inserted/removed */
#define SAFTE_SLOTSTAT_OPER	(1<<2)	/* ready for operation */


/* global flags */
struct safte_globals {
	u_int8_t	flags1;
#define SAFTE_GLOBAL_ALARM	(1<<0)	/* audible alarm */
#define SAFTE_GLOBAL_FAILURE	(1<<1)	/* global failure indication */
#define SAFTE_GLOBAL_WARNING	(1<<2)	/* global warning indication */
#define SAFTE_GLOBAL_POWER	(1<<3)	/* enclosure power */
#define	SAFTE_GLOBAL_COOLING	(1<<4)	/* cooling failure */
#define SAFTE_GLOBAL_PWRFAIL	(1<<5)	/* power failure */
#define SAFTE_GLOBAL_DRVFAIL	(1<<6)	/* drive failure */
#define SAFTE_GLOBAL_DRVWARN	(1<<6)	/* drive warning */
	u_int8_t	flags2;
#define SAFTE_GLOBAL_ARRAYFAIL	(1<<0)	/* array failure */
#define SAFTE_GLOBAL_ARRAYWARN	(1<<1)	/* array warning */
#define SAFTE_GLOBAL_LOCK	(1<<2)	/* enclosure lock */
#define SAFTE_GLOBAL_IDENTIFY	(1<<3)	/* identify enclosure */
	u_int8_t	flags3;
	u_int8_t	reserved[13];
};


/*  perform slot operation */
struct safte_slotop {
	u_int8_t	opcode;		/* SAFTE_WRITE_SLOTOP */
	u_int8_t	slot;
	u_int8_t	flags;
#define SAFTE_SLOTOP_OPERATE	(1<<0)	/* prepare for operation */
#define SAFTE_SLOTOP_INSREM	(1<<1)	/* prepare for insert/removal */
#define SAFTE_SLOTOP_IDENTIFY	(1<<2)	/* identify */
	u_int8_t	reserved[61];	/* zero these */
} __packed;

#endif /* _SCSI_SAFTE_H_ */
@


1.5
log
@spell: failture->failure
@
text
@d1 1
a1 1
/*	$OpenBSD: safte.h,v 1.4 2005/08/18 09:51:05 dlg Exp $ */
d4 1
a4 1
 * Copyright (c) 2005 Daivd Gwynne <dlg@@openbsd.org>
@


1.4
log
@das blinkenlighten! uses /dev/bio to allow an ioctl to turn identify on
for a particular target
@
text
@d1 1
a1 1
/*	$OpenBSD: safte.h,v 1.3 2005/08/11 12:57:13 dlg Exp $ */
d153 1
a153 1
#define SAFTE_GLOBAL_PWRFAIL	(1<<5)	/* power failture */
@


1.3
log
@typos
@
text
@d1 1
a1 1
/*	$OpenBSD: safte.h,v 1.2 2005/08/05 00:31:04 dlg Exp $ */
d54 11
d164 12
@


1.2
log
@READ BUFFER is a generic opcode, so dont define our own
@
text
@d1 1
a1 1
/*	$OpenBSD: safte.h,v 1.1 2005/08/05 00:08:58 dlg Exp $ */
d94 1
a94 1
#define SAFTE_PWR_UNKOWN	0x80	/* unknown status or unreportable */
d102 1
a102 1
#define SAFTE_DOOR_UNKOWN	0x80	/* unknown status or unreportable */
@


1.1
log
@make the naming of the safte files consisten with the rest of the scsi
drivers

ok krw@@ deraadt@@ marco@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_safte.h,v 1.2 2005/07/26 22:40:04 dlg Exp $ */
d37 1
a37 2
	u_int8_t	opcode;
#define SAFTE_RD_OPCODE		0x3c	/* READ BUFFER */
@

