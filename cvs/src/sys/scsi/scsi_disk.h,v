head	1.35;
access;
symbols
	OPENBSD_6_1:1.35.0.10
	OPENBSD_6_1_BASE:1.35
	OPENBSD_6_0:1.35.0.6
	OPENBSD_6_0_BASE:1.35
	OPENBSD_5_9:1.35.0.2
	OPENBSD_5_9_BASE:1.35
	OPENBSD_5_8:1.35.0.4
	OPENBSD_5_8_BASE:1.35
	OPENBSD_5_7:1.34.0.2
	OPENBSD_5_7_BASE:1.34
	OPENBSD_5_6:1.34.0.6
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.34.0.4
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.32.0.8
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.32.0.6
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.4
	OPENBSD_5_0:1.32.0.2
	OPENBSD_5_0_BASE:1.32
	OPENBSD_4_9:1.29.0.2
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.26.0.2
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.23.0.4
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.22.0.8
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.20.0.6
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.4
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.2
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.19.0.2
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.6
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.12
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.8.0.8
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.6
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.4
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.35
date	2015.06.07.19.13.27;	author krw;	state Exp;
branches;
next	1.34;
commitid	MxUWuiPFtM1nRYxm;

1.34
date	2013.11.26.20.33.20;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2013.05.30.18.31.34;	author tedu;	state Exp;
branches;
next	1.32;

1.32
date	2011.07.08.07.28.45;	author dlg;	state Exp;
branches;
next	1.31;

1.31
date	2011.07.08.07.20.39;	author dlg;	state Exp;
branches;
next	1.30;

1.30
date	2011.07.08.06.48.15;	author dlg;	state Exp;
branches;
next	1.29;

1.29
date	2010.09.23.11.23.58;	author dlg;	state Exp;
branches;
next	1.28;

1.28
date	2010.09.21.09.00.23;	author dlg;	state Exp;
branches;
next	1.27;

1.27
date	2010.09.13.00.56.55;	author dlg;	state Exp;
branches;
next	1.26;

1.26
date	2010.05.05.11.33.26;	author dlg;	state Exp;
branches;
next	1.25;

1.25
date	2010.04.03.07.09.29;	author dlg;	state Exp;
branches;
next	1.24;

1.24
date	2010.01.03.11.09.41;	author dlg;	state Exp;
branches;
next	1.23;

1.23
date	2009.06.06.05.35.48;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2007.06.23.19.19.49;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2007.04.12.16.33.27;	author weingart;	state Exp;
branches;
next	1.20;

1.20
date	2005.09.15.05.33.39;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2005.08.21.16.25.52;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.17.02.17.51;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2005.08.12.01.49.08;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2005.07.03.04.03.25;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.25.20.52.41;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.24.22.42.07;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2002.12.15.20.53.33;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.09.04.23.07.28;	author tdeval;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.22.14.35.43;	author deraadt;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2001.01.29.02.33.17;	author csapuntz;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.25.03.50.53;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	99.08.24.01.20.22;	author csapuntz;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	99.07.25.07.09.19;	author csapuntz;	state Exp;
branches;
next	1.6;

1.6
date	97.04.14.04.09.09;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	96.10.31.01.09.23;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.06.16.03.07.20;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.30.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.50.53;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.24;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.24;	author deraadt;	state Exp;
branches;
next	;

1.8.4.1
date	2001.05.14.22.44.59;	author niklas;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2001.07.04.11.00.04;	author niklas;	state Exp;
branches;
next	1.8.4.3;

1.8.4.3
date	2003.03.28.00.08.47;	author niklas;	state Exp;
branches;
next	1.8.4.4;

1.8.4.4
date	2004.02.19.11.01.30;	author niklas;	state Exp;
branches;
next	;

1.11.4.1
date	2002.10.29.00.36.49;	author art;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2003.05.19.22.28.21;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.35
log
@More damned eye searing whitespace.
@
text
@/*	$OpenBSD: scsi_disk.h,v 1.34 2013/11/26 20:33:20 deraadt Exp $	*/
/*	$NetBSD: scsi_disk.h,v 1.10 1996/07/05 16:19:05 christos Exp $	*/

/*
 * SCSI interface description
 */

/*
 * Some lines of this file come from a file of the name "scsi.h"
 * distributed by OSF as part of mach2.5,
 *  so the following disclaimer has been kept.
 *
 * Copyright 1990 by Open Software Foundation,
 * Grenoble, FRANCE
 *
 *		All Rights Reserved
 *
 *   Permission to use, copy, modify, and distribute this software and
 * its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appears in all copies and
 * that both the copyright notice and this permission notice appear in
 * supporting documentation, and that the name of OSF or Open Software
 * Foundation not be used in advertising or publicity pertaining to
 * distribution of the software without specific, written prior
 * permission.
 *
 *   OSF DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,
 * IN NO EVENT SHALL OSF BE LIABLE FOR ANY SPECIAL, INDIRECT, OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT,
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Largely written by Julian Elischer (julian@@tfs.com)
 * for TRW Financial Systems.
 *
 * TRW Financial Systems, in accordance with their agreement with Carnegie
 * Mellon University, makes this software available to CMU to distribute
 * or use in any manner that they see fit as long as this message is kept with
 * the software. For this reason TFS also grants any other persons or
 * organisations permission to use or modify this software.
 *
 * TFS supplies this software to be publicly redistributed
 * on the understanding that TFS is not responsible for the correct
 * functioning of this software in any circumstances.
 *
 * Ported to run under 386BSD by Julian Elischer (julian@@tfs.com) Sept 1992
 */

/*
 * SCSI command format
 */

#ifndef	_SCSI_SCSI_DISK_H
#define _SCSI_SCSI_DISK_H 1

/*
 * XXX Is this also used by ATAPI?
 */
#define	FORMAT_UNIT		0x04
struct scsi_format_unit {
	u_int8_t opcode;
	u_int8_t flags;
#define	SFU_DLF_MASK	0x07
#define	SFU_CMPLST	0x08
#define	SFU_FMTDATA	0x10
	u_int8_t vendor_specific;
	u_int8_t interleave[2];
	u_int8_t control;
};

/*
 * If the FmtData bit is set, a FORMAT UNIT parameter list is transferred
 * to the target during the DATA OUT phase.  The parameter list includes
 *
 *	Defect list header
 *	Initialization pattern descriptor (if any)
 *	Defect descriptor(s) (if any)
 */

struct scsi_format_unit_defect_list_header {
	u_int8_t reserved;
	u_int8_t flags;
#define	DLH_VS		0x01		/* vendor specific */
#define	DLH_IMMED	0x02		/* immediate return */
#define	DLH_DSP		0x04		/* disable saving parameters */
#define	DLH_IP		0x08		/* initialization pattern */
#define	DLH_STPF	0x10		/* stop format */
#define	DLH_DCRT	0x20		/* disable certification */
#define	DLH_DPRY	0x40		/* disable primary */
#define	DLH_FOV		0x80		/* format options valid */
	u_int8_t defect_lst_len[2];
};

/*
 * See Table 117 of the SCSI-2 specification for a description of
 * the IP modifier.
 */
struct scsi_initialization_pattern_descriptor {
	u_int8_t ip_modifier;
	u_int8_t pattern_type;
#define	IP_TYPE_DEFAULT		0x01
#define	IP_TYPE_REPEAT		0x01
				/* 0x02 -> 0x7f: reserved */
				/* 0x80 -> 0xff: vendor-specific */
	u_int8_t pattern_length[2];
#if 0
	u_int8_t pattern[...];
#endif
};

/*
 * Defect desciptors.  These are used as the defect lists in the FORMAT UNIT
 * and READ DEFECT DATA commands, and as the translate page of the
 * SEND DIAGNOSTIC and RECEIVE DIAGNOSTIC RESULTS commands.
 */

/* Block format */
struct scsi_defect_descriptor_bf {
	u_int8_t block_address[4];
};

/* Bytes from index format */
struct scsi_defect_descriptor_bfif {
	u_int8_t cylinder[2];
	u_int8_t head;
	u_int8_t bytes_from_index[2];
};

/* Physical sector format */
struct scsi_defect_descriptor_psf {
	u_int8_t cylinder[2];
	u_int8_t head;
	u_int8_t sector[2];
};


struct scsi_reassign_blocks {
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t unused[3];
	u_int8_t control;
};

/*
 * XXX Is this also used by ATAPI?
 */
#define	REZERO_UNIT		0x01
struct scsi_rezero_unit {
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t reserved[3];
	u_int8_t control;
};

struct scsi_rw {
	u_int8_t opcode;
	u_int8_t addr[3];
#define	SRW_TOPADDR	0x1F	/* only 5 bits here */
	u_int8_t length;
	u_int8_t control;
};

struct scsi_rw_big {
	u_int8_t opcode;
	u_int8_t byte2;
#define	SRWB_RELADDR	0x01
	u_int8_t addr[4];
	u_int8_t reserved;
	u_int8_t length[2];
	u_int8_t control;
};

struct scsi_rw_12 {
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t addr[4];
	u_int8_t length[4];
	u_int8_t reserved;
	u_int8_t control;
};

struct scsi_rw_16 {
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t addr[8];
	u_int8_t length[4];
	u_int8_t reserved;
	u_int8_t control;
};

struct scsi_write_same_10 {
	u_int8_t opcode;
	u_int8_t flags;
#define WRITE_SAME_F_LBDATA	(1 << 1)
#define WRITE_SAME_F_PBDATA	(1 << 2)
	u_int8_t lba[4];
	u_int8_t group_number;
	u_int8_t length[2];
	u_int8_t control;
};

struct scsi_write_same_16 {
	u_int8_t opcode;
	u_int8_t flags;
/* includes WRITE SAME 10 flags */
#define WRITE_SAME_F_UNMAP	(1 << 3)
#define WRITE_SAME_F_ANCHOR	(1 << 4)
	u_int8_t lba[8];
	u_int8_t length[4];
	u_int8_t group_number;
	u_int8_t control;
};

struct scsi_unmap {
	u_int8_t opcode;
	u_int8_t anchor;
	u_int8_t _reserved[4];
	u_int8_t group_number;
	u_int8_t list_len[2];
	u_int8_t control;
};

struct scsi_unmap_data {
	u_int8_t data_length[2];
	u_int8_t desc_length[2];
	u_int8_t _reserved[4];

	/* followed by struct scsi_unmap_desc */
};

struct scsi_unmap_desc {
	u_int8_t logical_addr[8];
	u_int8_t logical_blocks[4];
	u_int8_t _reserved[4];
};

struct scsi_read_capacity {
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t addr[4];
	u_int8_t unused[3];
	u_int8_t control;
};

struct scsi_read_capacity_16 {
	u_int8_t opcode;
	u_int8_t byte2;
#define	SRC16_SERVICE_ACTION	0x10
	u_int8_t addr[8];
	u_int8_t length[4];
	u_int8_t reserved;
	u_int8_t control;
};

struct scsi_start_stop {
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t unused[2];
	u_int8_t how;
#define	SSS_STOP		0x00
#define	SSS_START		0x01
#define	SSS_LOEJ		0x02
	u_int8_t control;
};


/*
 * XXX Does ATAPI have an equivalent?
 */
struct scsi_synchronize_cache {
	u_int8_t opcode;
	u_int8_t flags;
#define	SSC_RELADR	0x01
#define	SSC_IMMED	0x02
	u_int8_t addr[4];
	u_int8_t reserved;
	u_int8_t length[2];
	u_int8_t control;
};



/*
 * Disk specific opcodes
 */
#define REASSIGN_BLOCKS		0x07
#define READ_COMMAND		0x08
#define WRITE_COMMAND		0x0a
#define READ_CAPACITY		0x25
#define READ_CAPACITY_16	0x9e
#define READ_BIG		0x28
#define WRITE_BIG		0x2a
#define READ_12			0xa8
#define WRITE_12		0xaa
#define READ_16			0x88
#define WRITE_16		0x8a
#define SYNCHRONIZE_CACHE	0x35
#define WRITE_SAME_10		0x41
#define WRITE_SAME_16		0x93
#define UNMAP			0x42


struct scsi_read_cap_data {
	u_int8_t addr[4];
	u_int8_t length[4];
};

struct scsi_read_cap_data_16 {
	u_int8_t addr[8];
	u_int8_t length[4];
	u_int8_t p_type_prot;
	u_int8_t logical_per_phys;
	u_int8_t lowest_aligned[2];
#define READ_CAP_16_TPE		0x8000
#define READ_CAP_16_TPRZ	0x4000
	u_int8_t reserved[16];
};

struct scsi_reassign_blocks_data {
	u_int8_t reserved[2];
	u_int8_t length[2];
	struct {
		u_int8_t dlbaddr[4];
	} defect_descriptor[1];
};

/* Only the lower 6 bits of the pg_code field are used for page #. */
#define	DISK_PGCODE(pg, n)	((pg) != NULL) && (((pg)->pg_code & 0x3f) == n)
#define PAGE_DISK_FORMAT	3
#define PAGE_RIGID_GEOMETRY	4
#define PAGE_FLEX_GEOMETRY	5
#define PAGE_REDUCED_GEOMETRY	6
#define PAGE_CACHING_MODE	8

struct page_disk_format {
	u_int8_t pg_code;	/* page code (should be 3) */
	u_int8_t pg_length;	/* page length (should be 0x16) */
	u_int8_t trk_z[2];	/* tracks per zone */
	u_int8_t alt_sec[2];	/* alternate sectors per zone */
	u_int8_t alt_trk_z[2];	/* alternate tracks per zone */
	u_int8_t alt_trk_v[2];	/* alternate tracks per volume */
	u_int8_t ph_sec_t[2];	/* physical sectors per track */
	u_int8_t bytes_s[2];	/* bytes per sector */
	u_int8_t interleave[2];	/* interleave */
	u_int8_t trk_skew[2];	/* track skew factor */
	u_int8_t cyl_skew[2];	/* cylinder skew */
	u_int8_t flags;		/* various */
#define	DISK_FMT_SURF	0x10
#define	DISK_FMT_RMB	0x20
#define	DISK_FMT_HSEC	0x40
#define	DISK_FMT_SSEC	0x80
	u_int8_t reserved1;
	u_int8_t reserved2;
	u_int8_t reserved3;
};

struct page_rigid_geometry {
	u_int8_t pg_code;	/* page code (should be 4) */
	u_int8_t pg_length;	/* page length (should be 0x12 or 0x16)	*/
	u_int8_t ncyl[3];	/* number of cylinders */
	u_int8_t nheads;	/* number of heads */
	u_int8_t st_cyl_wp[3];	/* starting cyl., write precomp */
	u_int8_t st_cyl_rwc[3];	/* starting cyl., red. write cur */
	u_int8_t driv_step[2];	/* drive step rate */
	u_int8_t land_zone[3];	/* landing zone cylinder */
	u_int8_t sp_sync_ctl;	/* spindle synch control */
#define SPINDLE_SYNCH_MASK	0x03	/* mask of valid bits */
#define SPINDLE_SYNCH_NONE	0x00	/* synch disabled or not supported */
#define SPINDLE_SYNCH_SLAVE	0x01	/* disk is a slave */
#define SPINDLE_SYNCH_MASTER	0x02	/* disk is a master */
#define SPINDLE_SYNCH_MCONTROL	0x03	/* disk is a master control */
	u_int8_t rot_offset;	/* rotational offset (for spindle synch) */
	u_int8_t reserved1;
	u_int8_t rpm[2];	/* media rotation speed */
	u_int8_t reserved2;
	u_int8_t reserved3;
};

struct page_flex_geometry {
	u_int8_t pg_code;	/* page code (should be 5) */
	u_int8_t pg_length;	/* page length (should be 0x1a or 0x1e) */
	u_int8_t xfr_rate[2];
	u_int8_t nheads;	/* number of heads */
	u_int8_t ph_sec_tr;	/* physical sectors per track */
	u_int8_t bytes_s[2];	/* bytes per sector */
	u_int8_t ncyl[2];	/* number of cylinders */
	u_int8_t st_cyl_wp[2];	/* start cyl., write precomp */
	u_int8_t st_cyl_rwc[2];	/* start cyl., red. write cur */
	u_int8_t driv_step[2];	/* drive step rate */
	u_int8_t driv_step_w;	/* drive step pulse width */
	u_int8_t head_settle[2];/* head settle delay */
	u_int8_t motor_on;	/* motor on delay */
	u_int8_t motor_off;	/* motor off delay */
	u_int8_t flags;		/* various flags */
#define MOTOR_ON		0x20	/* motor on (pin 16)? */
#define START_AT_SECTOR_1	0x40	/* start at sector 1  */
#define READY_VALID		0x20	/* RDY (pin 34) valid */
	u_int8_t step_p_cyl;	/* step pulses per cylinder */
	u_int8_t write_pre;	/* write precompensation */
	u_int8_t head_load;	/* head load delay */
	u_int8_t head_unload;	/* head unload delay */
	u_int8_t pin_34_2;	/* pin 34 (6) pin 2 (7/11) definition */
	u_int8_t pin_4_1;	/* pin 4 (8/9) pin 1 (13) definition */
	u_int8_t rpm[2];	/* media rotation speed */
	u_int8_t reserved1;
	u_int8_t reserved2;
};

struct page_reduced_geometry {
	u_int8_t pg_code;	/* page code (should be 6) */
	u_int8_t pg_length;	/* page length (should be 0x0B) */
	u_int8_t wcd;		/* bit 0 = write cache disable */
	u_int8_t bytes_s[2];	/* bytes per sector */
	u_int8_t sectors[5];	/* total number of sectors */
	u_int8_t pow_perf;	/* power/performance level */
	u_int8_t flags;		/* various */
#define	LOCK_DISABLED	0x1
#define	FORMAT_DISABLED	0x2
#define	WRITE_DISABLED	0x4
#define	READ_DISABLED	0x8
	u_int8_t reserved;
};

struct page_caching_mode {
	u_int8_t pg_code;	/* page code (should be 8) */
	u_int8_t pg_length;	/* page length (should be 0x12) */
	u_int8_t flags;
#define PG_CACHE_FL_RCD		(1<<0)
#define PG_CACHE_FL_MF		(1<<1)
#define PG_CACHE_FL_WCE		(1<<2)
#define PG_CACHE_FL_SIZE	(1<<3)
#define PG_CACHE_FL_DISC	(1<<4)
#define PG_CACHE_FL_CAP		(1<<5)
#define PG_CACHE_FL_ABPF	(1<<6)
#define PG_CACHE_FL_IC		(1<<7)
	u_int8_t priority;
#define PG_CACHE_PRI_DEMAND(_f)		((_f) & 0x0f)
#define PG_CACHE_PRI_WRITE(_f)		(((_f) >> 4) & 0x0f)
	u_int8_t dis_prefetch_tl[2];
	u_int8_t min_prefetch[2];
	u_int8_t max_prefetch[2];
	u_int8_t max_prefetch_ceil[2];
};

#define SI_PG_DISK_LIMITS	0xb0 /* block limits */
#define SI_PG_DISK_INFO		0xb1 /* device charateristics */
#define SI_PG_DISK_THIN		0xb2 /* thin provisioning */

struct scsi_vpd_disk_limits {
	struct scsi_vpd_hdr hdr;
#define SI_PG_DISK_LIMITS_LEN		0x10
#define SI_PG_DISK_LIMITS_LEN_THIN	0x3c

	u_int8_t		_reserved1[1];
	u_int8_t		max_comp_wr_len;
	u_int8_t		optimal_xfer_granularity[2];

	u_int8_t		max_xfer_len[4];

	u_int8_t		optimal_xfer[4];

	u_int8_t		max_xd_prefetch_len[4];

	u_int8_t		max_unmap_lba_count[4];

	u_int8_t		max_unmap_desc_count[4];

	u_int8_t		optimal_unmap_granularity[4];

	u_int8_t		unmap_granularity_align[4];
#define SI_PG_DISK_LIMITS_UGAVALID	(1U << 31)

	u_int8_t		_reserved2[28];
};

struct scsi_vpd_disk_info {
	struct scsi_vpd_hdr	hdr;
	u_int8_t		rpm[2];
#define VPD_DISK_INFO_RPM_UNDEF		0x0000
#define VPD_DISK_INFO_RPM_NONE		0x0001
	u_int8_t		_reserved1[1];
	u_int8_t		form_factor;
#define VPD_DISK_INFO_FORM_MASK		0xf
#define VPD_DISK_INFO_FORM_UNDEF	0x0
#define VPD_DISK_INFO_FORM_5_25		0x1
#define VPD_DISK_INFO_FORM_3_5		0x2
#define VPD_DISK_INFO_FORM_2_5		0x3
#define VPD_DISK_INFO_FORM_1_8		0x4
#define VPD_DISK_INFO_FORM_LT_1_8	0x5
	u_int8_t		_reserved2[56];
};

struct scsi_vpd_disk_thin {
	struct scsi_vpd_hdr	hdr;

	u_int8_t		threshold_exponent;
	u_int8_t		flags;
#define VPD_DISK_THIN_DP		(1 << 0) /* descriptor present */
#define VPD_DISK_THIN_ANC_SUP		(0x7 << 1)
#define VPD_DISK_THIN_ANC_SUP_NO	(0x0 << 1)
#define VPD_DISK_THIN_ANC_SUP_YES	(0x1 << 1)
#define VPD_DISK_THIN_TPWS		(1 << 6) /* WRITE SAME 16 */
#define VPD_DISK_THIN_TPU		(1 << 7) /* UNMAP */
	u_int8_t		_reserved1[2];

	/* followed by a designation descriptor if DP is set */
};

#endif /* _SCSI_SCSI_DISK_H */
@


1.34
log
@1 << 31 cleanup.  Eitan Adler pointed out that there has been a
resurrection of the bad idiom in the tree.
sufficient review by miod, kettenis, tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.33 2013/05/30 18:31:34 tedu Exp $	*/
d16 1
a16 1
 * 		All Rights Reserved
@


1.33
log
@typo: thing -> thin provisioning
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.32 2011/07/08 07:28:45 dlg Exp $	*/
d475 1
a475 1
#define SI_PG_DISK_LIMITS_UGAVALID	(1 << 31)
@


1.32
log
@sbc3 defines a thin provisioning vpd page
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.30 2011/07/08 06:48:15 dlg Exp $	*/
d451 1
a451 1
#define SI_PG_DISK_THIN		0xb2 /* thing provisioning */
@


1.31
log
@white space fixes
@
text
@d497 16
@


1.30
log
@add the UGAVALID flag to the block limits vpd page
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.29 2010/09/23 11:23:58 dlg Exp $	*/
d17 1
a17 1
 * 
d26 1
a26 1
 * 
d42 1
a42 1
 * or use in any manner that they see fit as long as this message is kept with 
d451 1
d454 1
a454 1
        struct scsi_vpd_hdr hdr;
d478 1
a478 1
}; 
d481 1
a481 1
        struct scsi_vpd_hdr	hdr;
d495 1
a495 1
}; 
@


1.29
log
@descripe a few bits of the write same commands.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.28 2010/09/21 09:00:23 dlg Exp $	*/
d474 1
@


1.28
log
@opcodes, cdbs, and payloads for WRITE SAME 10/16 and UNMAP commands.

ok deraadt@@ krw@@ matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.27 2010/09/13 00:56:55 dlg Exp $	*/
d198 2
d209 3
@


1.27
log
@i got the order of the bits in the cache page back to front. how
embarrsssment.

discovered by okan@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.26 2010/05/05 11:33:26 dlg Exp $	*/
d195 41
d297 3
@


1.26
log
@map the ATA data set management stuff (ie, trim) to the SCSI thin
provisioning bits in read cap 16
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.25 2010/04/03 07:09:29 dlg Exp $	*/
d383 8
a390 8
#define PG_CACHE_FL_IC		(1<<0)
#define PG_CACHE_FL_ABPF	(1<<1)
#define PG_CACHE_FL_CAP		(1<<2)
#define PG_CACHE_FL_DISC	(1<<3)
#define PG_CACHE_FL_SIZE	(1<<4)
#define PG_CACHE_FL_WCE		(1<<5)
#define PG_CACHE_FL_MF		(1<<6)
#define PG_CACHE_FL_RCD		(1<<7)
@


1.25
log
@add support for emulating the disk characteristics and disk limits vpd
pages. this if the first step in figuring out if disks use a different
physical block size compared to the logical block size they present to the
operating system.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.24 2010/01/03 11:09:41 dlg Exp $	*/
d269 2
@


1.24
log
@disk cache mode page
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.23 2009/06/06 05:35:48 krw Exp $	*/
d397 46
@


1.23
log
@We only really need to #define SYNCHRONIZE_CACHE 0x35 once.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.22 2007/06/23 19:19:49 krw Exp $	*/
d286 1
d376 22
@


1.22
log
@Implement disk sizes > 2^32-1. Code modelled on NetBSD.

Tested, tweaked and ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.21 2007/04/12 16:33:27 weingart Exp $	*/
a227 1
#define	SYNCHRONIZE_CACHE		0x35
@


1.21
log
@The beginnings of support for 16-byte cdb's in the scsi code.  This is
so we will be able to address devices larger than the 10-byte cdb's allow
us to do.

ok krw@@, dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.20 2005/09/15 05:33:39 krw Exp $	*/
d206 1
@


1.20
log
@Don't fake MODE SENSE page 4 info inside raid drivers, just let sd
fake a geometry. Page 4 info does not get used for size information.
Eliminate now unused union scsi_disk_pages.

ok marco@@ mickey@@ pre-lock.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.19 2005/08/21 16:25:52 krw Exp $	*/
d177 18
d203 9
d244 2
a245 2
#define	REASSIGN_BLOCKS		0x07
#define	READ_COMMAND		0x08
d247 3
a249 2
#define	READ_CAPACITY		0x25
#define	READ_BIG		0x28
d251 5
a255 1
#define	SYNCHRONIZE_CACHE	0x35
d261 9
@


1.19
log
@Some devices go berserk when asked for mode sense pages they don't
have. Some devices return four bytes less information than requested
for the PAGE_RIGID_GEOMETRY page. Put the two together and older
Conner drives don't work because we rejected the short page and asked
for the PAGE_FLEX_GEOMETY page. Noted by hshoexer@@ and kettenis@@.

Also should fix the problems with a device miod@@ reported that did a
similar short PAGE_FLEX_GEOMETRY.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.18 2005/08/17 02:17:51 krw Exp $	*/
a333 8

union scsi_disk_pages {
	struct page_disk_format		disk_format;
	struct page_rigid_geometry	rigid_geometry;
	struct page_flex_geometry	flex_geometry;
	struct page_reduced_geometry	reduced_geometry;
};

@


1.18
log
@Use defines for disk mode page codes. Check returned mode pages to
ensure they are the ones requested. No functional change unless
garbage was being returned.

ok marco@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.17 2005/08/12 01:49:08 krw Exp $	*/
d270 1
a270 1
	u_int8_t pg_length;	/* page length (should be 0x16)	*/
d292 1
a292 1
	u_int8_t pg_length;	/* page length (should be 0x1e) */
@


1.17
log
@Move disk mode page structure declarations out of scsi_disk_pages
union declaration to allow pointers to individual page types. Simplify
sd.c code by using individual page type pointers. No functional
change.

ok tdeval@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.16 2005/07/03 04:03:25 krw Exp $	*/
d239 6
a244 1
#define	DISK_PGCODE	0x3F	/* Only 6 bits of pg_code are valid. */
@


1.16
log
@Add missing reserved byte to page_disk_format struct in
scsi_disk_pages union. From FreeBSD and SCSI spec.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.15 2005/05/25 20:52:41 krw Exp $	*/
d239 15
a253 15
union scsi_disk_pages {
#define	DISK_PGCODE	0x3F	/* only 6 bits valid */
	struct page_disk_format {
		u_int8_t pg_code;	/* page code (should be 3) */
		u_int8_t pg_length;	/* page length (should be 0x16) */
		u_int8_t trk_z[2];	/* tracks per zone */
		u_int8_t alt_sec[2];	/* alternate sectors per zone */
		u_int8_t alt_trk_z[2];	/* alternate tracks per zone */
		u_int8_t alt_trk_v[2];	/* alternate tracks per volume */
		u_int8_t ph_sec_t[2];	/* physical sectors per track */
		u_int8_t bytes_s[2];	/* bytes per sector */
		u_int8_t interleave[2];	/* interleave */
		u_int8_t trk_skew[2];	/* track skew factor */
		u_int8_t cyl_skew[2];	/* cylinder skew */
		u_int8_t flags;		/* various */
d258 15
a272 14
		u_int8_t reserved1;
		u_int8_t reserved2;
		u_int8_t reserved3;
	} disk_format;
	struct page_rigid_geometry {
		u_int8_t pg_code;	/* page code (should be 4) */
		u_int8_t pg_length;	/* page length (should be 0x16)	*/
		u_int8_t ncyl[3];	/* number of cylinders */
		u_int8_t nheads;	/* number of heads */
		u_int8_t st_cyl_wp[3];	/* starting cyl., write precomp */
		u_int8_t st_cyl_rwc[3];	/* starting cyl., red. write cur */
		u_int8_t driv_step[2];	/* drive step rate */
		u_int8_t land_zone[3];	/* landing zone cylinder */
		u_int8_t sp_sync_ctl;	/* spindle synch control */
d278 23
a300 22
		u_int8_t rot_offset;	/* rotational offset (for spindle synch) */
		u_int8_t reserved1;
		u_int8_t rpm[2];	/* media rotation speed */
		u_int8_t reserved2;
		u_int8_t reserved3;
    	} rigid_geometry;
	struct page_flex_geometry {
		u_int8_t pg_code;	/* page code (should be 5) */
		u_int8_t pg_length;	/* page length (should be 0x1e) */
		u_int8_t xfr_rate[2];
		u_int8_t nheads;	/* number of heads */
		u_int8_t ph_sec_tr;	/* physical sectors per track */
		u_int8_t bytes_s[2];	/* bytes per sector */
		u_int8_t ncyl[2];	/* number of cylinders */
		u_int8_t st_cyl_wp[2];	/* start cyl., write precomp */
		u_int8_t st_cyl_rwc[2];	/* start cyl., red. write cur */
		u_int8_t driv_step[2];	/* drive step rate */
		u_int8_t driv_step_w;	/* drive step pulse width */
		u_int8_t head_settle[2];/* head settle delay */
		u_int8_t motor_on;	/* motor on delay */
		u_int8_t motor_off;	/* motor off delay */
		u_int8_t flags;		/* various flags */
d304 19
a322 18
		u_int8_t step_p_cyl;	/* step pulses per cylinder */
		u_int8_t write_pre;	/* write precompensation */
		u_int8_t head_load;	/* head load delay */
		u_int8_t head_unload;	/* head unload delay */
		u_int8_t pin_34_2;	/* pin 34 (6) pin 2 (7/11) definition */
		u_int8_t pin_4_1;	/* pin 4 (8/9) pin 1 (13) definition */
		u_int8_t rpm[2];	/* media rotation speed */
		u_int8_t reserved1;
		u_int8_t reserved2;
	} flex_geometry;
	struct page_reduced_geometry {
		u_int8_t pg_code;	/* page code (should be 6) */
		u_int8_t pg_length;	/* page length (should be 0x0B) */
		u_int8_t wcd;		/* bit 0 = write cache disable */
		u_int8_t bytes_s[2];	/* bytes per sector */
		u_int8_t sectors[5];	/* total number of sectors */
		u_int8_t pow_perf;	/* power/performance level */
		u_int8_t flags;		/* various */
d327 8
a334 2
		u_int8_t reserved;
	} reduced_geometry;
@


1.15
log
@Introduce safer, more general mode sense capability. Transparently use
both 10 byte and 6 byte MODE SENSE commands and just return error
checked values.

Convert sd_scsi.c to use new mechanism for non-optical drives. USB
umass devices will now display actual mode sense info if it is
available via a 10 byte MODE SENSE. Which may mean 0 heads, etc. is
shown until cosmetics are finalized.

ok marco@@ 'that is pretty cool' deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.14 2003/06/24 22:42:07 mickey Exp $	*/
d258 1
@


1.14
log
@try to devise drive's rpm and default to 3600 should we fail miserably.
derived from pr2815 from Marco Peereboom
krw@@ deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.13 2002/12/15 20:53:33 krw Exp $	*/
a236 6
};

struct scsi_disk_blk_desc {
	u_int8_t nblocks[4];
	u_int8_t density;
	u_int8_t blklen[3];
@


1.13
log
@Fix/Cleanup some SCSI #defines.

1) Correctly define MODE_SENSE_BIG as 0x5a, not 0x54.
2) Delete duplicate #define's of some opcodes in scsi_disk.h.
3) Delete multiple #define's for same opcode in scsi_disk.h.
4) Replace uses of deleted opcodes in umass.c with remaining ones.

ok millert@@ tdeval@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.12 2002/09/04 23:07:28 tdeval Exp $	*/
d313 1
a315 2
		u_int8_t reserved3;
		u_int8_t reserved4;
@


1.12
log
@Add support for RBC (simplified direct) devices.
ok costa@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.11 2001/06/22 14:35:43 deraadt Exp $	*/
a151 1
#define SCSI_REZERO_UNIT	0x01
d215 1
a215 1
 * Opcodes
a218 1
#define SCSI_READ_COMMAND	0x08
a219 6
#define SCSI_WRITE_COMMAND	0x0a
#define MODE_SELECT		0x15
#define SCSI_MODE_SELECT	0x15
#define MODE_SENSE		0x1a
#define START_STOP		0x1b
#define PREVENT_ALLOW		0x1e
a223 2
#define SCSI_MODE_SELECT_BIG	0x55
#define SCSI_MODE_SENSE_BIG	0x5a
@


1.11
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.10 2001/01/29 02:33:17 csapuntz Exp $	*/
d328 14
@


1.11.4.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.11 2001/06/22 14:35:43 deraadt Exp $	*/
a327 14
	struct page_reduced_geometry {
		u_int8_t pg_code;	/* page code (should be 6) */
		u_int8_t pg_length;	/* page length (should be 0x0B) */
		u_int8_t wcd;		/* bit 0 = write cache disable */
		u_int8_t bytes_s[2];	/* bytes per sector */
		u_int8_t sectors[5];	/* total number of sectors */
		u_int8_t pow_perf;	/* power/performance level */
		u_int8_t flags;		/* various */
#define	LOCK_DISABLED	0x1
#define	FORMAT_DISABLED	0x2
#define	WRITE_DISABLED	0x4
#define	READ_DISABLED	0x8
		u_int8_t reserved;
	} reduced_geometry;
@


1.11.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d152 1
d216 1
a216 1
 * Disk specific opcodes
d220 1
d222 6
d232 2
@


1.10
log
@

Prepend SCSI_ to some of the SCSI opcodes to aid in sharing code w/NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.9 2001/01/25 03:50:53 todd Exp $	*/
d152 1
a152 1
#define SCSI_REZERO_UNIT        0x01
d220 5
a224 5
#define SCSI_READ_COMMAND       0x08
#define WRITE_COMMAND	        0x0a
#define SCSI_WRITE_COMMAND      0x0a
#define MODE_SELECT	        0x15
#define SCSI_MODE_SELECT        0x15
d227 2
a228 2
#define PREVENT_ALLOW	        0x1e
#define	READ_CAPACITY	        0x25
d232 2
a233 2
#define SCSI_MODE_SELECT_BIG    0x55
#define SCSI_MODE_SENSE_BIG     0x5a
@


1.9
log
@spelling
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.8 1999/08/24 01:20:22 csapuntz Exp $	*/
d152 1
d220 1
d222 1
d224 1
d232 2
@


1.8
log
@

Added type field to scsi_addr to reflect bus/device type (ATAPI or SCSI).
Updated ioctls to match

Minor patches in anticipation of wd->sd translation layer
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.7 1999/07/25 07:09:19 csapuntz Exp $	*/
d76 1
a76 1
 * If the FmtData bit is set, a FORMAT UNIT parameter list is transfered
@


1.8.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.10 2001/01/29 02:33:17 csapuntz Exp $	*/
d76 1
a76 1
 * If the FmtData bit is set, a FORMAT UNIT parameter list is transferred
a151 1
#define SCSI_REZERO_UNIT        0x01
a218 1
#define SCSI_READ_COMMAND       0x08
a219 1
#define SCSI_WRITE_COMMAND      0x0a
a220 1
#define SCSI_MODE_SELECT        0x15
a227 2
#define SCSI_MODE_SELECT_BIG    0x55
#define SCSI_MODE_SENSE_BIG     0x5a
@


1.8.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.8.4.1 2001/05/14 22:44:59 niklas Exp $	*/
d152 1
a152 1
#define SCSI_REZERO_UNIT	0x01
d220 5
a224 5
#define SCSI_READ_COMMAND	0x08
#define WRITE_COMMAND		0x0a
#define SCSI_WRITE_COMMAND	0x0a
#define MODE_SELECT		0x15
#define SCSI_MODE_SELECT	0x15
d227 2
a228 2
#define PREVENT_ALLOW		0x1e
#define	READ_CAPACITY		0x25
d232 2
a233 2
#define SCSI_MODE_SELECT_BIG	0x55
#define SCSI_MODE_SENSE_BIG	0x5a
@


1.8.4.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d152 1
d216 1
a216 1
 * Disk specific opcodes
d220 1
d222 6
d232 2
a327 14
	struct page_reduced_geometry {
		u_int8_t pg_code;	/* page code (should be 6) */
		u_int8_t pg_length;	/* page length (should be 0x0B) */
		u_int8_t wcd;		/* bit 0 = write cache disable */
		u_int8_t bytes_s[2];	/* bytes per sector */
		u_int8_t sectors[5];	/* total number of sectors */
		u_int8_t pow_perf;	/* power/performance level */
		u_int8_t flags;		/* various */
#define	LOCK_DISABLED	0x1
#define	FORMAT_DISABLED	0x2
#define	WRITE_DISABLED	0x4
#define	READ_DISABLED	0x8
		u_int8_t reserved;
	} reduced_geometry;
@


1.8.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a312 1
		u_int8_t rpm[2];	/* media rotation speed */
d315 2
@


1.7
log
@

Merge sd stuff from NetBSD-current. Helps with LS-120, ZIP

More SCSI logic from NetBSD-current

Some tape fixes. ATAPI tapes do not work yet for most operations.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.6 1997/04/14 04:09:09 downsj Exp $	*/
d241 6
@


1.6
log
@Merge in various pieces of current NetBSD scsi code, including but not limited
to:

* New changer driver.
* Better optical support.
* Different `done' semantics.
* New quirks for SCSI QIC tape driver, SCSI floppy drives.
* Better support for SCSI-I devices.

Everybody needs to test this.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_disk.h,v 1.5 1996/10/31 01:09:23 niklas Exp $	*/
d60 81
d148 11
d197 16
a216 1

d219 2
a220 2
#define WRITE_COMMAND		0x0a
#define MODE_SELECT		0x15
d223 2
a224 2
#define PREVENT_ALLOW		0x1e
#define	READ_CAPACITY		0x25
d227 1
d243 1
a243 1
union disk_pages {
@


1.5
log
@$OpenBSD RCSIDs + comment fix in sd.c
@
text
@d1 2
a2 2
/*	$OpenBSD: scsi_disk.h,v 1.9 1996/03/19 03:07:02 mycroft Exp $	*/
/*	$NetBSD: scsi_disk.h,v 1.9 1996/03/19 03:07:02 mycroft Exp $	*/
d179 28
a206 35
	   u_char pg_code;		/* page code (should be 5) */
	   u_char pg_length;		/* page length (should be 0x1e) */
	   u_char xfr_rate1;
	   u_char xfr_rate0;
	   u_char nheads;		/* number of heads */
	   u_char ph_sec_t;		/* physical sectors per track */
	   u_char bytes_s_1;		/* bytes per sector (MSB) */
	   u_char bytes_s_0;		/* bytes per sector (LSB) */
	   u_char ncyl_1;		/* number of cylinders (MSB) */
	   u_char ncyl_0;		/* number of cylinders (LSB) */
	   u_char st_cyl_wp_1;		/* starting cyl., write precomp (MSB) */
	   u_char st_cyl_wp_0;		/* starting cyl., write precomp (LSB) */
	   u_char st_cyl_rwc_1; 	/* starting cyl., red. write cur (MSB) */
	   u_char st_cyl_rwc_0; 	/* starting cyl., red. write cur (LSB) */
	   u_char driv_step_1;		/* drive step rate (MSB) */
	   u_char driv_step_0;		/* drive step rate (LSB) */
	   u_char driv_step_w;		/* drive step pulse width */
	   u_char head_settle_1;	/* head settle delay (MSB) */
	   u_char head_settle_0;	/* head settle delay (LSB) */
	   u_char motor_on;		/* motor on delay */
	   u_char motor_off;		/* motor off delay */
	   u_char flags;		/* various flags */
#define MO	0x20			/* motor on (pin 16)? */
#define SSN	0x40			/* start at sector 1  */
#define TRDY	0x20			/* RDY (pin 34) valid */
	   u_char step_p_cyl;		/* step pulses per cylinder */
	   u_char write_pre;		/* write precompensation */
	   u_char head_load;		/* head load delay */
	   u_char head_unload;		/* head unload delay */
	   u_char pin_34_2;		/* pin 34 (6) and pin 2 (7/11) definition */
	   u_char pin_4_1;		/* pin 4 (8/9) and pin 1 (13) definition */
	   u_char reserved1;
	   u_char reserved2;
	   u_char reserved3;
	   u_char reserved4;
@


1.4
log
@NetBSD PR#2535: add mode sense 5 and floppy support in our framework.
@
text
@d1 1
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d177 37
@


1.2
log
@from netbsd; flesh out the mode pages
@
text
@d1 1
a1 1
/*	$NetBSD: scsi_disk.h,v 1.8 1995/10/15 23:32:02 thorpej Exp $	*/
d60 4
a63 4
	u_char	opcode;
	u_char	byte2;
	u_char	unused[3];
	u_char	control;
d67 2
a68 2
	u_char	opcode;
	u_char	addr_2;		/* Most significant */
d70 2
a71 4
	u_char	addr_1;
	u_char	addr_0;		/* least significant */
	u_char	length;
	u_char	control;
d75 2
a76 2
	u_char	opcode;
	u_char	byte2;
d78 4
a81 8
	u_char	addr_3;		/* Most significant */
	u_char	addr_2;
	u_char	addr_1;
	u_char	addr_0;		/* least significant */
	u_char	reserved;
	u_char	length2;
	u_char	length1;
	u_char	control;
d85 5
a89 8
	u_char	opcode;
	u_char	byte2;
	u_char	addr_3;	/* Most Significant */
	u_char	addr_2;
	u_char	addr_1;
	u_char	addr_0;	/* Least Significant */
	u_char	unused[3];
	u_char	control;
d93 4
a96 4
	u_char	opcode;
	u_char	byte2;
	u_char	unused[2];
	u_char	how;
d100 1
a100 1
	u_char	control;
d122 2
a123 8
	u_char	addr_3;	/* Most significant */
	u_char	addr_2;
	u_char	addr_1;
	u_char	addr_0;	/* Least significant */
	u_char	length_3;	/* Most significant */
	u_char	length_2;
	u_char	length_1;
	u_char	length_0;	/* Least significant */
d127 2
a128 3
	u_char	reserved[2];
	u_char	length_msb;
	u_char	length_lsb;
d130 1
a130 4
		u_char	dlbaddr_3;	/* defect logical block address (MSB) */
		u_char	dlbaddr_2;
		u_char	dlbaddr_1;
		u_char	dlbaddr_0;	/* defect logical block address (LSB) */
d134 2
a135 1
union disk_pages { /* this is the structure copied from osf */
d137 18
a154 28
	   u_char pg_code;	/* page code (should be 3)	      */
#define	DISK_PGCODE	0x3F	/* only 6 bits valid */
	   u_char pg_length;	/* page length (should be 0x16)	      */
	   u_char trk_z_1;	/* tracks per zone (MSB)	      */
	   u_char trk_z_0;	/* tracks per zone (LSB)	      */
	   u_char alt_sec_1;	/* alternate sectors per zone (MSB)   */
	   u_char alt_sec_0;	/* alternate sectors per zone (LSB)   */
	   u_char alt_trk_z_1;	/* alternate tracks per zone (MSB)    */
	   u_char alt_trk_z_0;	/* alternate tracks per zone (LSB)    */
	   u_char alt_trk_v_1;	/* alternate tracks per volume (MSB)  */
	   u_char alt_trk_v_0;	/* alternate tracks per volume (LSB)  */
	   u_char ph_sec_t_1;	/* physical sectors per track (MSB)   */
	   u_char ph_sec_t_0;	/* physical sectors per track (LSB)   */
	   u_char bytes_s_1;	/* bytes per sector (MSB)	      */
	   u_char bytes_s_0;	/* bytes per sector (LSB)	      */
	   u_char interleave_1;/* interleave (MSB)		      */
	   u_char interleave_0;/* interleave (LSB)		      */
	   u_char trk_skew_1;	/* track skew factor (MSB)	      */
	   u_char trk_skew_0;	/* track skew factor (LSB)	      */
	   u_char cyl_skew_1;	/* cylinder skew (MSB)		      */
	   u_char cyl_skew_0;	/* cylinder skew (LSB)		      */
	   u_char flags;	/* various */
#define		DISK_FMT_SURF	0x10
#define		DISK_FMT_RMB	0x20
#define		DISK_FMT_HSEC	0x40
#define		DISK_FMT_SSEC	0x80
	   u_char reserved2;
	   u_char reserved3;
d157 9
a165 18
	   u_char pg_code;	/* page code (should be 4)	      */
	   u_char pg_length;	/* page length (should be 0x16)	      */
	   u_char ncyl_2;	/* number of cylinders (MSB)	      */
	   u_char ncyl_1;	/* number of cylinders 		      */
	   u_char ncyl_0;	/* number of cylinders (LSB)	      */
	   u_char nheads;	/* number of heads 		      */
	   u_char st_cyl_wp_2;	/* starting cyl., write precomp (MSB) */
	   u_char st_cyl_wp_1;	/* starting cyl., write precomp	      */
	   u_char st_cyl_wp_0;	/* starting cyl., write precomp (LSB) */
	   u_char st_cyl_rwc_2;/* starting cyl., red. write cur (MSB)*/
	   u_char st_cyl_rwc_1;/* starting cyl., red. write cur      */
	   u_char st_cyl_rwc_0;/* starting cyl., red. write cur (LSB)*/
	   u_char driv_step_1;	/* drive step rate (MSB)	      */
	   u_char driv_step_0;	/* drive step rate (LSB)	      */
	   u_char land_zone_2;	/* landing zone cylinder (MSB)	      */
	   u_char land_zone_1;	/* landing zone cylinder 	      */
	   u_char land_zone_0;	/* landing zone cylinder (LSB)	      */
	   u_char sp_sync_ctl;	/* spindle synch control              */
d171 5
a175 6
	   u_char rot_offset;	/* rotational offset (for spindle synch) */
	   u_char reserved1;
	   u_char rpm_1;	/* media rotation speed (MSB)         */
	   u_char rpm_0;	/* media rotation speed (LSB)         */
	   u_char reserved2;
	   u_char reserved3;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: scsi_disk.h,v 1.7 1994/12/28 19:43:02 mycroft Exp $	*/
d202 7
d210 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
