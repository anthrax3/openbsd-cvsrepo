head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.44
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.40
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.42
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.34
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.38
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.36
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.32
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.30
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.28
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.26
	OPENBSD_5_0:1.10.0.24
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.22
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.20
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.20
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.18
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.16
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.14
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.12
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.10
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.8
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.6
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.10
	OPENBSD_2_8:1.8.0.8
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.6
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.4
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.10
date	2005.12.10.01.30.13;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.22.14.35.43;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	99.05.11.23.25.43;	author kstailey;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	97.03.10.02.29.39;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.03.10.01.06.11;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.03.08.05.39.00;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.12.11.16.32.04;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.31.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.19.16.10.13;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.02.20.02.28.51;	author briggs;	state Exp;
branches;
next	;

1.8.4.1
date	2001.07.04.11.00.05;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@in ansi c, bitfields must be done against int, unsigned int, or _Bool.
so we must start to use u_int; ok cloder
@
text
@/*	$OpenBSD: scsi_scanner.h,v 1.9 2001/06/22 14:35:43 deraadt Exp $	*/

/*
 * Copyright (c) 1995 Kenneth Stailey.  All rights reserved.
 *   modified for configurable scanner support by Joachim Koenig
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Kenneth Stailey.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * SCSI scanner interface description
 */

#ifndef	_SCSI_SCANNER_H_
#define _SCSI_SCANNER_H_

/* SCSI scanner commands */
#define GET_IMAGE_STATUS	0x0f
#define WRITE_BIG		0x2a
#define OBJECT_POSITION		0x31

/* generic scanner command formats */

struct scsi_r_scanner {
#define	READ_BIG		0x28
	u_int8_t opcode;
	u_int    lun:3;
	u_int    res1:5;
	u_int8_t code;
	u_int8_t res2;
	u_int8_t qualifier;
	u_int8_t len[3];
	u_int8_t control;
};

struct scsi_get_buffer_status {
#define GET_BUFFER_STATUS	0x34
	u_int8_t opcode;
	u_int	 lun:3;
	u_int    res1:4;
	u_int    wait:1;
	u_int8_t res2[5];
	u_int8_t len[2];
	u_int8_t control;
};

struct scsi_rw_scanner {
#define	READ			0x08
#define WRITE			0x0a
	u_int8_t opcode;
	u_int8_t byte2;
#define	SRW_FIXED		0x01
	u_int8_t len[3];
	u_int8_t control;
};

struct scsi_start_stop {
#define START_STOP	0x1b
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t unused[2];
	u_int8_t how;
#define	SSS_STOP		0x00
#define	SSS_START		0x01
#define	SSS_LOEJ		0x02
	u_int8_t control;
};

struct scsi_set_window {
#define SET_WINDOW		0x24 /* set params of image area and windows */
#define GET_WINDOW		0x25
	u_int8_t opcode;
	u_int8_t byte2;
	u_int8_t reserved[4];
	u_int8_t len[3];
	u_int8_t control;
};

struct scsi_window_data {
	u_int8_t reserved[6];		/* window header */
	u_int8_t window_desc_len[2];	/* ditto */
	u_int8_t window_id;		/* must be zero */
	u_int    res1:7;
	u_int    auto_bit:1;
	u_int8_t x_res[2];
	u_int8_t y_res[2];
	u_int8_t x_org[4];
	u_int8_t y_org[4];
	u_int8_t width[4];
	u_int8_t length[4];
	u_int8_t brightness;
	u_int8_t threshold;
	u_int8_t contrast;
	u_int8_t image_comp;		/* image composition (data type) */
	u_int8_t bits_per_pixel;
	u_int8_t halftone_pattern[2];
	u_int    rif:1;			/* reverse image format (mono negative) */
	u_int    res2:4;
	u_int    pad_type:3;
	u_int8_t bit_ordering[2];
	u_int8_t compression_type;
	u_int8_t compression_arg;
	u_int8_t res3[6];
};

/* mustek scsi commands */

#define MUSTEK_SET_WINDOW	0x04	/* set image area and windows */
#define MUSTEK_ADF		0x10	/* ADF and backtracking selection */
#define MUSTEK_LUT		0x55	/* look up table download */

#endif /* _SCSI_SCANNER_H_ */
@


1.9
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.8 1999/05/11 23:25:43 kstailey Exp $	*/
d50 2
a51 2
	u_int8_t lun:3;
	u_int8_t res1:5;
d62 3
a64 3
	u_int8_t lun:3;
	u_int8_t res1:4;
	u_int8_t wait:1;
d106 2
a107 2
	u_int8_t res1:7;
	u_int8_t auto_bit:1;
d120 3
a122 3
	u_int8_t rif:1;			/* reverse image format (mono negative) */
	u_int8_t res2:4;
	u_int8_t pad_type:3;
@


1.8
log
@generic trigger
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.7 1997/03/10 02:29:39 kstailey Exp $	*/
d103 3
a105 3
	u_int8_t reserved[6];	     /* window header */
	u_int8_t window_desc_len[2]; /* ditto */
	u_int8_t window_id;	     /* must be zero */
d117 1
a117 1
	u_int8_t image_comp;	    /* image composition (data type) */
d120 1
a120 1
	u_int8_t rif:1;		    /* reverse image format (mono negative) */
@


1.8.4.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.8 1999/05/11 23:25:43 kstailey Exp $	*/
d103 3
a105 3
	u_int8_t reserved[6];		/* window header */
	u_int8_t window_desc_len[2];	/* ditto */
	u_int8_t window_id;		/* must be zero */
d117 1
a117 1
	u_int8_t image_comp;		/* image composition (data type) */
d120 1
a120 1
	u_int8_t rif:1;			/* reverse image format (mono negative) */
@


1.7
log
@do GET_BUFFER_STATUS in special minphys
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.6 1997/03/10 01:06:11 kstailey Exp $	*/
d81 1
@


1.6
log
@SCSI-2 scanner use READ_BIG, not READ.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.5 1997/03/08 05:39:00 kstailey Exp $	*/
a43 1
#define GET_BUFFER_STATUS	0x34
d51 1
a51 1
	u_int8_t res1;
d59 10
@


1.5
log
@generic set_window via quirk table
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.4 1996/12/11 16:32:04 kstailey Exp $	*/
a41 1
#define READ_BIG		0x28
d47 13
@


1.4
log
@removed redundant copy of whole file
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi_scanner.h,v 1.2 1996/04/19 16:10:13 niklas Exp $	*/
a79 5
struct scsi_window_header {
	u_int8_t reserved[6];
	u_int8_t len[2];
};

d81 3
a83 1
	u_int8_t window_id;	    /* must be zero */
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@a116 114
/*
 * Copyright (c) 1995 Kenneth Stailey.  All rights reserved.
 *   modified for configurable scanner support by Joachim Koenig
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Kenneth Stailey.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * SCSI scanner interface description
 */

#ifndef	_SCSI_SCANNER_H_
#define _SCSI_SCANNER_H_

/* SCSI scanner commands */
#define GET_IMAGE_STATUS	0x0f
#define READ_BIG		0x28
#define WRITE_BIG		0x2a
#define OBJECT_POSITION		0x31
#define GET_BUFFER_STATUS	0x34

/* generic scanner command formats */

struct scsi_rw_scanner {
#define	READ			0x08
#define WRITE			0x0a
	u_char	opcode;
	u_char	byte2;
#define	SRW_FIXED		0x01
	u_char	len[3];
	u_char	control;
};

struct scsi_start_stop {
	u_char	opcode;
	u_char	byte2;
	u_char	unused[2];
	u_char  how;
#define	SSS_STOP		0x00
#define	SSS_START		0x01
#define	SSS_LOEJ		0x02
	u_char	control;
};

struct scsi_set_window {
#define SET_WINDOW		0x24 /* set params of image area and windows */
#define GET_WINDOW		0x25
	u_char	opcode;
	u_char	byte2;
	u_char	reserved[4];
	u_char  len[3];
	u_char	control;
};

struct scsi_window_header {
	u_char	reserved[6];
	u_char  len[2];		    /* MSB-LSB */
};

struct scsi_window_data {
	u_char	window_id;	    /* must be zero */
	u_char	res1:7;
	u_char	auto_bit:1;
	u_char	x_res[2];
	u_char	y_res[2];
	u_char	x_org[4];
	u_char	y_org[4];
	u_char	width[4];
	u_char	length[4];
	u_char	brightness;
	u_char	threshold;
	u_char	contrast;
	u_char	image_comp;	    /* image composition (data type) */
	u_char	bits_per_pixel;
	u_char	halftone_pattern[2];
	u_char	rif:1;		    /* reverse image format (mono negative) */
	u_char  res2:4;
	u_char	pad_type:3;
	u_char	bit_ordering[2];
	u_char	compression_type;
	u_char	compression_arg;
	u_char	res3[6];
};

/* mustek scsi commands */

#define MUSTEK_SET_WINDOW	0x04	/* set image area and windows */
#define MUSTEK_ADF		0x10	/* ADF and backtracking selection */
#define MUSTEK_LUT		0x55	/* look up table download */

#endif /* _SCSI_SCANNER_H_ */
@


1.2
log
@NetBSD 960317 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d52 2
a53 2
	u_char	opcode;
	u_char	byte2;
d55 2
a56 2
	u_char	len[3];
	u_char	control;
d60 4
a63 4
	u_char	opcode;
	u_char	byte2;
	u_char	unused[2];
	u_char  how;
d67 1
a67 1
	u_char	control;
d73 5
a77 5
	u_char	opcode;
	u_char	byte2;
	u_char	reserved[4];
	u_char  len[3];
	u_char	control;
d81 2
a82 2
	u_char	reserved[6];
	u_char  len[2];		    /* MSB-LSB */
d86 22
a107 22
	u_char	window_id;	    /* must be zero */
	u_char	res1:7;
	u_char	auto_bit:1;
	u_char	x_res[2];
	u_char	y_res[2];
	u_char	x_org[4];
	u_char	y_org[4];
	u_char	width[4];
	u_char	length[4];
	u_char	brightness;
	u_char	threshold;
	u_char	contrast;
	u_char	image_comp;	    /* image composition (data type) */
	u_char	bits_per_pixel;
	u_char	halftone_pattern[2];
	u_char	rif:1;		    /* reverse image format (mono negative) */
	u_char  res2:4;
	u_char	pad_type:3;
	u_char	bit_ordering[2];
	u_char	compression_type;
	u_char	compression_arg;
	u_char	res3[6];
@


1.1
log
@Sync. with NetBSD:
- scsi prototypes.
- Add SCSI scanner support by Kenneth Stailey and Joachim Koenig-Baltes,
  hacked a but.  Needs more work.
ss.c:
- Truncate to the window size in ssminphys(), not ssread().
- Missed some prototyping foo.
- Minor tweak; make sure window size is 0 on close.
- Change variable name to avoid GCC warning.
- Handle EOF a little differently.
@
text
@d1 116
@
