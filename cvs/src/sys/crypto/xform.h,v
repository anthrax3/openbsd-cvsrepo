head	1.29;
access;
symbols
	OPENBSD_6_2:1.29.0.2
	OPENBSD_6_2_BASE:1.29
	OPENBSD_6_1:1.28.0.8
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.24.0.6
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.23.0.6
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.4
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.22.0.12
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.10
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.8
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.6
	OPENBSD_5_0:1.22.0.4
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.2
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.6
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.18.0.2
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.16.0.10
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.8
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.6
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.4
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.2
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.29
date	2017.05.02.11.44.32;	author mikeb;	state Exp;
branches;
next	1.28;
commitid	wirszMgsR4O7G8R6;

1.28
date	2015.12.10.21.00.51;	author naddy;	state Exp;
branches;
next	1.27;
commitid	T0HbsCFlrwPATHlH;

1.27
date	2015.11.13.15.29.55;	author naddy;	state Exp;
branches;
next	1.26;
commitid	kI77GdyYKaka3fwk;

1.26
date	2015.11.13.12.21.16;	author mikeb;	state Exp;
branches;
next	1.25;
commitid	YLaQcqVfNSwoLvqJ;

1.25
date	2015.11.03.01.31.36;	author mikeb;	state Exp;
branches;
next	1.24;
commitid	jsYuUjxp9lhd0Ksp;

1.24
date	2014.12.28.10.02.37;	author tedu;	state Exp;
branches;
next	1.23;
commitid	cPvnXrnDy9of9D0l;

1.23
date	2013.08.25.14.26.56;	author jsing;	state Exp;
branches;
next	1.22;

1.22
date	2010.10.06.22.19.20;	author mikeb;	state Exp;
branches;
next	1.21;

1.21
date	2010.09.22.11.54.23;	author mikeb;	state Exp;
branches;
next	1.20;

1.20
date	2010.01.10.12.43.07;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	2008.09.06.22.23.21;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2008.06.09.16.07.00;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2007.09.10.22.19.42;	author henric;	state Exp;
branches;
next	1.16;

1.16
date	2005.05.25.05.47.53;	author markus;	state Exp;
branches;
next	1.15;

1.15
date	2004.12.20.20.31.18;	author hshoexer;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.07.14.42.26;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.24.08.03.19;	author itojun;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.15.22.57.58;	author jason;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.12.18.23.13;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.22.23.10.09;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.24.00.30.00;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.28.12.20.43;	author ben;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.08.17.17.37.12;	author ben;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.05.08.26.04;	author jjbg;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.16.22.17.50;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.13.13.43.35;	author angelos;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.13.16.52.33;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.18.08.37.11;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.17.10.25.21;	author angelos;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.03.24.09.09.05;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.05.14.22.06.55;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.07.04.10.40.05;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2002.03.06.02.07.09;	author niklas;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2003.03.27.23.53.48;	author niklas;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2004.02.19.10.51.30;	author niklas;	state Exp;
branches;
next	1.1.2.8;

1.1.2.8
date	2004.06.05.23.12.36;	author niklas;	state Exp;
branches;
next	;

1.8.4.1
date	2002.06.11.03.28.34;	author art;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2003.05.19.21.53.13;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Switch OCF and IPsec over to the new AES

ok djm
@
text
@/*	$OpenBSD: xform.h,v 1.28 2015/12/10 21:00:51 naddy Exp $	*/

/*
 * The author of this code is Angelos D. Keromytis (angelos@@cis.upenn.edu)
 *
 * This code was written by Angelos D. Keromytis in Athens, Greece, in
 * February 2000. Network Security Technologies Inc. (NSTI) kindly
 * supported the development of this code.
 *
 * Copyright (c) 2000 Angelos D. Keromytis
 *
 * Permission to use, copy, and modify this software with or without fee
 * is hereby granted, provided that this entire notice is included in
 * all source code copies of any software which is or includes a copy or
 * modification of this software.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#ifndef _CRYPTO_XFORM_H_
#define _CRYPTO_XFORM_H_

#include <crypto/md5.h>
#include <crypto/sha1.h>
#include <crypto/rmd160.h>
#include <crypto/sha2.h>
#include <crypto/gmac.h>

/* Declarations */
struct auth_hash {
	int type;
	char *name;
	u_int16_t keysize;
	u_int16_t hashsize;
	u_int16_t authsize;
	u_int16_t ctxsize;
	u_int16_t blocksize;
	void (*Init) (void *);
	void (*Setkey) (void *, const u_int8_t *, u_int16_t);
	void (*Reinit) (void *, const u_int8_t *, u_int16_t);
	int  (*Update) (void *, const u_int8_t *, u_int16_t);
	void (*Final) (u_int8_t *, void *);
};

struct enc_xform {
	int type;
	char *name;
	u_int16_t blocksize;
	u_int16_t ivsize;
	u_int16_t minkey;
	u_int16_t maxkey;
	u_int16_t ctxsize;
	void (*encrypt) (caddr_t, u_int8_t *);
	void (*decrypt) (caddr_t, u_int8_t *);
	int  (*setkey) (void *, u_int8_t *, int len);
	void (*reinit) (caddr_t, u_int8_t *);
};

struct comp_algo {
	int type;
	char *name;
	size_t minlen;
	u_int32_t (*compress) (u_int8_t *, u_int32_t, u_int8_t **);
	u_int32_t (*decompress) (u_int8_t *, u_int32_t, u_int8_t **);
};

union authctx {
	MD5_CTX md5ctx;
	SHA1_CTX sha1ctx;
	RMD160_CTX rmd160ctx;
	SHA2_CTX sha2_ctx;
	AES_GMAC_CTX aes_gmac_ctx;
};

extern struct enc_xform enc_xform_3des;
extern struct enc_xform enc_xform_blf;
extern struct enc_xform enc_xform_cast5;
extern struct enc_xform enc_xform_aes;
extern struct enc_xform enc_xform_aes_ctr;
extern struct enc_xform enc_xform_aes_gcm;
extern struct enc_xform enc_xform_aes_gmac;
extern struct enc_xform enc_xform_aes_xts;
extern struct enc_xform enc_xform_chacha20_poly1305;
extern struct enc_xform enc_xform_null;

extern struct auth_hash auth_hash_hmac_md5_96;
extern struct auth_hash auth_hash_hmac_sha1_96;
extern struct auth_hash auth_hash_hmac_ripemd_160_96;
extern struct auth_hash auth_hash_hmac_sha2_256_128;
extern struct auth_hash auth_hash_hmac_sha2_384_192;
extern struct auth_hash auth_hash_hmac_sha2_512_256;
extern struct auth_hash auth_hash_gmac_aes_128;
extern struct auth_hash auth_hash_gmac_aes_192;
extern struct auth_hash auth_hash_gmac_aes_256;
extern struct auth_hash auth_hash_chacha20_poly1305;

extern struct comp_algo comp_algo_deflate;
extern struct comp_algo comp_algo_lzs;

#endif /* _CRYPTO_XFORM_H_ */
@


1.28
log
@Remove plain DES from the kernel crypto framework, including the crypto
accelerator drivers.  No longer used by anything.  ok sthen@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.27 2015/11/13 15:29:55 naddy Exp $	*/
d82 1
a82 1
extern struct enc_xform enc_xform_rijndael128;
@


1.27
log
@remove unused ARC4 support; ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.26 2015/11/13 12:21:16 mikeb Exp $	*/
a78 1
extern struct enc_xform enc_xform_des;
@


1.26
log
@Remove unused non HMAC versions of MD5 and SHA1;  ok mpi, deraadt, naddy
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.25 2015/11/03 01:31:36 mikeb Exp $	*/
a88 1
extern struct enc_xform enc_xform_arc4;
@


1.25
log
@Hook up Chacha20-Poly1305 to the OpenBSD Cryptographic Framework

ok naddy, jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.24 2014/12/28 10:02:37 tedu Exp $	*/
a91 2
extern struct auth_hash auth_hash_md5;
extern struct auth_hash auth_hash_sha1;
@


1.24
log
@remove KPDK. not really used, and a bad choice anyway. ok naddy
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.23 2013/08/25 14:26:56 jsing Exp $	*/
d88 1
d103 1
@


1.23
log
@Allocate and deallocate memory for encryption contexts within cryptosoft,
rather than requiring each algorithm to provide their own memory handling.
This matches the interface already provided by cryptosoft for
authentication algorithms and removes the need for zerokey functions.

ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.21 2010/09/22 11:54:23 mikeb Exp $	*/
a92 2
extern struct auth_hash auth_hash_key_md5;
extern struct auth_hash auth_hash_key_sha1;
@


1.22
log
@Retire Skipjack

There's not much use for the declassified cipher from the 80's
with a questionable license these days.  According to the FIPS
drafts, Skipjack reaches its EOL in December 2010.

The libc portion will be removed after the ports hackathon.

djm and thib agree, no objections from deraadt
Thanks to jsg for digging up FIPS drafts.
@
text
@d52 5
a56 2
	u_int16_t blocksize, ivsize;
	u_int16_t minkey, maxkey;
d59 1
a59 2
	int  (*setkey) (u_int8_t **, u_int8_t *, int len);
	void (*zerokey) (u_int8_t **);
@


1.21
log
@OCF support for the Galois/Counter Mode (GCM) for AES as
described in FIPS SP 800-38D.

This implementation supports 16 byte authentication tag only,
splitting transformation into two parts: encryption and
authentication.  Encryption is handled by the existing
AES-CTR implementation, while authentication requires new
AES_GMAC hash function.

Additional routine is added to the software crypto driver
to deal with peculiarities of a combined authentication-
encryption transformation.

With suggestions from reyk, naddy and toby.
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.20 2010/01/10 12:43:07 markus Exp $	*/
a80 1
extern struct enc_xform enc_xform_skipjack;
@


1.20
log
@Fix two bugs in IPsec/HMAC-SHA2:
(1) use correct (message) block size of 128 byte (instead of 64
    bytes) for HMAC-SHA512/384 (RFC4634).
(2) RFC4868 specifies that HMAC-SHA-{256,384,512} is truncated to
    nnn/2 bits, while we still use 96 bits. 96 bits have been
    specified in draft-ietf-ipsec-ciph-sha-256-00 while
    draft-ietf-ipsec-ciph-sha-256-01 changed it to 128 bits.

WARNING: this change makes IPsec with SHA-256 (the default)
incompatible with older OpenBSD versions and other IPsec-implementations
that share this bug.

ok+tests naddy, fries; requested by reyk/deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.19 2008/09/06 22:23:21 djm Exp $	*/
d31 1
d43 2
d74 1
d84 2
d100 3
@


1.19
log
@match libc sha2(3) API changes for kernel; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.18 2008/06/09 16:07:00 djm Exp $	*/
d40 1
d91 3
a93 3
extern struct auth_hash auth_hash_hmac_sha2_256_96;
extern struct auth_hash auth_hash_hmac_sha2_384_96;
extern struct auth_hash auth_hash_hmac_sha2_512_96;
@


1.18
log
@Implement the AES XTS mode of operation for the crypto(9) framework.
XTS is a "tweaked" AES mode that has properties that are desirable
for block device encryption and it is specified in the IEEE
P1619-2007 standard for this purpose.

prodded by & ok hshoexer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.17 2007/09/10 22:19:42 henric Exp $	*/
d69 1
a69 3
	SHA256_CTX sha2_256ctx;
	SHA384_CTX sha2_384ctx;
	SHA512_CTX sha2_512ctx;
@


1.17
log
@Make the hmac ipad/opad globals "const" and fixup the crypto functions
to match.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.16 2005/05/25 05:47:53 markus Exp $	*/
d81 1
@


1.16
log
@AESCTR support for ESP (RFC 3686); ok hshoexer
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.15 2004/12/20 20:31:18 hshoexer Exp $	*/
d41 1
a41 1
	int  (*Update) (void *, u_int8_t *, u_int16_t);
@


1.15
log
@Allow the setkey function of a transform to fail, eg. when an insufficient
number of key bits is supplied.

Only AES and DES/3DES might fail.

ok and help markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.14 2004/05/07 14:42:26 millert Exp $	*/
d48 1
a48 1
	u_int16_t blocksize;
d54 1
d80 1
@


1.14
log
@Replace RSA-derived md5 code with code derived from Colin Plumb's PD version.
This moves md5.c out of libkern and into sys/crypto where it belongs (as
requested by markus@@).  Note that md5.c is still mandatory (dev/rnd.c uses it).
Verified with IPsec + hmac-md5 and tcp md5sig. OK henning@@ and hshoexer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.13 2003/07/24 08:03:19 itojun Exp $	*/
d52 1
a52 1
	void (*setkey) (u_int8_t **, u_int8_t *, int len);
@


1.13
log
@hmac-sha2-{256,384,512} support in AH/ESP auth.  markus ok
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.12 2003/02/15 22:57:58 jason Exp $	*/
d27 1
a27 1
#include <sys/md5k.h>
@


1.12
log
@skeleton support for LZS compression
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.11 2002/11/12 18:23:13 jason Exp $	*/
d30 1
d68 3
d89 3
@


1.11
log
@Add a CRYPTO_NULL xform (it's a do nothing, but nice for measuring the
bandwidth of the kernel API).  It's only available from userland and
then only if kern.cryptodevallowsoft=1.
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.10 2002/04/22 23:10:09 deraadt Exp $	*/
d87 2
@


1.10
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.9 2002/02/24 00:30:00 deraadt Exp $	*/
d76 1
@


1.9
log
@license repair, angelos ok
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.8 2001/08/28 12:20:43 ben Exp $	*/
d15 1
a15 1
 * modification of this software. 
d36 1
a36 1
	u_int16_t hashsize; 
@


1.8
log
@Getting closer to working userland MAC.
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.7 2001/08/17 17:37:12 ben Exp $	*/
d12 1
a12 1
 * Permission to use, copy, and modify this software without fee
@


1.8.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.8 2001/08/28 12:20:43 ben Exp $	*/
d12 1
a12 1
 * Permission to use, copy, and modify this software with or without fee
d15 1
a15 1
 * modification of this software.
d36 1
a36 1
	u_int16_t hashsize;
@


1.8.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a75 1
extern struct enc_xform enc_xform_null;
a85 2
extern struct comp_algo comp_algo_lzs;

@


1.7
log
@Add RC4 support.
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.6 2001/07/05 08:26:04 jjbg Exp $	*/
d77 2
@


1.6
log
@Compression support for IPComp. Include files only. angelos@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.5 2001/06/16 22:17:50 deraadt Exp $	*/
d75 1
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.4 2001/06/13 13:43:35 angelos Exp $	*/
d55 8
d82 1
@


1.4
log
@ivmask has been deprecated.
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.3 2001/05/13 16:52:33 jason Exp $	*/
d32 10
a41 11
struct auth_hash
{
    int type;
    char *name;
    u_int16_t keysize;
    u_int16_t hashsize; 
    u_int16_t authsize;
    u_int16_t ctxsize;
    void (*Init) (void *);
    int  (*Update) (void *, u_int8_t *, u_int16_t);
    void (*Final) (u_int8_t *, void *);
d44 9
a52 10
struct enc_xform
{
    int type;
    char *name;
    u_int16_t blocksize;
    u_int16_t minkey, maxkey;
    void (*encrypt) (caddr_t, u_int8_t *);
    void (*decrypt) (caddr_t, u_int8_t *);
    void (*setkey) (u_int8_t **, u_int8_t *, int len);
    void (*zerokey) (u_int8_t **);
d56 3
a58 3
    MD5_CTX md5ctx;
    SHA1_CTX sha1ctx;
    RMD160_CTX rmd160ctx;
d73 1
@


1.3
log
@copyrights and $OpenBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a50 1
    u_int32_t ivmask;           /* Or all possible modes, zero iv = 1 */ 
@


1.2
log
@Add Rijndael (128-bit blocksize) in the software crypto driver.

Hacking at OpenBSD Crypto 2000 :-)
@
text
@d1 2
@


1.1
log
@Cryptographic services framework, and software "device driver". The
idea is to support various cryptographic hardware accelerators (which
may be (detachable) cards, secondary/tertiary/etc processors,
software crypto, etc). Supports session migration between crypto
devices. What it doesn't (yet) support:
 - multiple instances of the same algorithm used in the same session
 - use of multiple crypto drivers in the same session
 - asymmetric crypto

No support for a userland device yet.

IPsec code path modified to allow for asynchronous cryptography
(callbacks used in both input and output processing). Some unrelated
code simplification done in the process (especially for AH).

Development of this code kindly supported by Network Security
Technologies (NSTI). The code was writen mostly in Greece, and is
being committed from Montreal.
@
text
@d67 1
@


1.1.2.1
log
@Sync with -current
@
text
@@


1.1.2.2
log
@merge in approximately 2.9 into SMP branch
@
text
@a66 1
extern struct enc_xform enc_xform_rijndael128;
@


1.1.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@a0 2
/*	$OpenBSD$	*/

d30 11
a40 10
struct auth_hash {
	int type;
	char *name;
	u_int16_t keysize;
	u_int16_t hashsize; 
	u_int16_t authsize;
	u_int16_t ctxsize;
	void (*Init) (void *);
	int  (*Update) (void *, u_int8_t *, u_int16_t);
	void (*Final) (u_int8_t *, void *);
d43 11
a53 9
struct enc_xform {
	int type;
	char *name;
	u_int16_t blocksize;
	u_int16_t minkey, maxkey;
	void (*encrypt) (caddr_t, u_int8_t *);
	void (*decrypt) (caddr_t, u_int8_t *);
	void (*setkey) (u_int8_t **, u_int8_t *, int len);
	void (*zerokey) (u_int8_t **);
d57 3
a59 3
	MD5_CTX md5ctx;
	SHA1_CTX sha1ctx;
	RMD160_CTX rmd160ctx;
a73 1

@


1.1.2.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: xform.h,v 1.1.2.3 2001/07/04 10:40:05 niklas Exp $	*/
a54 8
struct comp_algo {
	int type;
	char *name;
	size_t minlen;
	u_int32_t (*compress) (u_int8_t *, u_int32_t, u_int8_t **);
	u_int32_t (*decompress) (u_int8_t *, u_int32_t, u_int8_t **);
};

a66 1
extern struct enc_xform enc_xform_arc4;
a67 2
extern struct auth_hash auth_hash_md5;
extern struct auth_hash auth_hash_sha1;
a73 1
extern struct comp_algo comp_algo_deflate;
@


1.1.2.5
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d12 1
a12 1
 * Permission to use, copy, and modify this software with or without fee
@


1.1.2.6
log
@Sync the SMP branch with 3.3
@
text
@d15 1
a15 1
 * modification of this software.
d36 1
a36 1
	u_int16_t hashsize;
a75 1
extern struct enc_xform enc_xform_null;
a85 2
extern struct comp_algo comp_algo_lzs;

@


1.1.2.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a29 1
#include <crypto/sha2.h>
a66 3
	SHA256_CTX sha2_256ctx;
	SHA384_CTX sha2_384ctx;
	SHA512_CTX sha2_512ctx;
a84 3
extern struct auth_hash auth_hash_hmac_sha2_256_96;
extern struct auth_hash auth_hash_hmac_sha2_384_96;
extern struct auth_hash auth_hash_hmac_sha2_512_96;
@


1.1.2.8
log
@Merge with the trunk
@
text
@d27 1
a27 1
#include <crypto/md5.h>
@


