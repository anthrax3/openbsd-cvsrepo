head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.18
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.20
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.16
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.12
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.14
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.6
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.10
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.8
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.10
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.6
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.22
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.20
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.18
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.16
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.14
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.12
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.10
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.8
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.6.0.4
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.14
date	2012.12.07.17.03.22;	author mikeb;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.22.11.54.23;	author mikeb;	state Exp;
branches;
next	1.12;

1.12
date	2010.01.10.12.43.07;	author markus;	state Exp;
branches;
next	1.11;

1.11
date	2007.09.10.22.19.42;	author henric;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.22.23.10.09;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.19.23.24.53;	author angelos;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.05.15.59.41;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.24.00.30.00;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.05.08.26.05;	author jjbg;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2001.06.16.22.17.50;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.13.16.52.33;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.21.00.02.20;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.23.05.01.53;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.20.21.31.45;	author deraadt;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.03.24.09.09.05;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.05.14.22.06.52;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.07.04.10.40.00;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2002.03.06.02.07.09;	author niklas;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2003.03.27.23.53.48;	author niklas;	state Exp;
branches;
next	;

1.6.4.1
date	2002.06.11.03.28.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Fix one of the two issues with ESN support in the GCM case:
supply correct AAD length to the final round of hashing.
While here rename swcr_combined to swcr_authenc.
@
text
@/*	$OpenBSD: cryptosoft.h,v 1.13 2010/09/22 11:54:23 mikeb Exp $	*/

/*
 * The author of this code is Angelos D. Keromytis (angelos@@cis.upenn.edu)
 *
 * This code was written by Angelos D. Keromytis in Athens, Greece, in
 * February 2000. Network Security Technologies Inc. (NSTI) kindly
 * supported the development of this code.
 *
 * Copyright (c) 2000 Angelos D. Keromytis
 *
 * Permission to use, copy, and modify this software with or without fee
 * is hereby granted, provided that this entire notice is included in
 * all source code copies of any software which is or includes a copy or
 * modification of this software.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#ifndef _CRYPTO_CRYPTOSOFT_H_
#define _CRYPTO_CRYPTOSOFT_H_

/* Software session entry */
struct swcr_data {
	int		sw_alg;		/* Algorithm */
	union {
		struct {
			u_int8_t	 *SW_ictx;
			u_int8_t	 *SW_octx;
			u_int32_t	 SW_klen;
			struct auth_hash *SW_axf;
		} SWCR_AUTH;
		struct {
			u_int8_t	 *SW_kschedule;
			struct enc_xform *SW_exf;
		} SWCR_ENC;
		struct {
			u_int32_t	 SW_size;
			struct comp_algo *SW_cxf;
		} SWCR_COMP;
	} SWCR_UN;

#define sw_ictx		SWCR_UN.SWCR_AUTH.SW_ictx
#define sw_octx		SWCR_UN.SWCR_AUTH.SW_octx
#define sw_klen		SWCR_UN.SWCR_AUTH.SW_klen
#define sw_axf		SWCR_UN.SWCR_AUTH.SW_axf
#define sw_kschedule	SWCR_UN.SWCR_ENC.SW_kschedule
#define sw_exf		SWCR_UN.SWCR_ENC.SW_exf
#define sw_size		SWCR_UN.SWCR_COMP.SW_size
#define sw_cxf		SWCR_UN.SWCR_COMP.SW_cxf

	struct swcr_data *sw_next;
};

#ifdef _KERNEL
extern const u_int8_t hmac_ipad_buffer[HMAC_MAX_BLOCK_LEN];
extern const u_int8_t hmac_opad_buffer[HMAC_MAX_BLOCK_LEN];

int	swcr_encdec(struct cryptodesc *, struct swcr_data *, caddr_t, int);
int	swcr_authcompute(struct cryptop *, struct cryptodesc *, struct swcr_data *,
	caddr_t, int);
int	swcr_authenc(struct cryptop *);
int	swcr_compdec(struct cryptodesc *, struct swcr_data *, caddr_t, int);
int	swcr_process(struct cryptop *);
int	swcr_newsession(u_int32_t *, struct cryptoini *);
int	swcr_freesession(u_int64_t);
void	swcr_init(void);
#endif /* _KERNEL */

#endif /* _CRYPTO_CRYPTO_H_ */
@


1.13
log
@OCF support for the Galois/Counter Mode (GCM) for AES as
described in FIPS SP 800-38D.

This implementation supports 16 byte authentication tag only,
splitting transformation into two parts: encryption and
authentication.  Encryption is handled by the existing
AES-CTR implementation, while authentication requires new
AES_GMAC hash function.

Additional routine is added to the software crypto driver
to deal with peculiarities of a combined authentication-
encryption transformation.

With suggestions from reyk, naddy and toby.
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.12 2010/01/10 12:43:07 markus Exp $	*/
d66 1
a66 1
int	swcr_combined(struct cryptop *);
@


1.12
log
@Fix two bugs in IPsec/HMAC-SHA2:
(1) use correct (message) block size of 128 byte (instead of 64
    bytes) for HMAC-SHA512/384 (RFC4634).
(2) RFC4868 specifies that HMAC-SHA-{256,384,512} is truncated to
    nnn/2 bits, while we still use 96 bits. 96 bits have been
    specified in draft-ietf-ipsec-ciph-sha-256-00 while
    draft-ietf-ipsec-ciph-sha-256-01 changed it to 128 bits.

WARNING: this change makes IPsec with SHA-256 (the default)
incompatible with older OpenBSD versions and other IPsec-implementations
that share this bug.

ok+tests naddy, fries; requested by reyk/deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.11 2007/09/10 22:19:42 henric Exp $	*/
d66 1
@


1.11
log
@Make the hmac ipad/opad globals "const" and fixup the crypto functions
to match.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.10 2002/04/22 23:10:09 deraadt Exp $	*/
d60 2
a61 2
extern const u_int8_t hmac_ipad_buffer[64];
extern const u_int8_t hmac_opad_buffer[64];
@


1.10
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.9 2002/03/19 23:24:53 angelos Exp $	*/
d60 2
a61 2
extern u_int8_t hmac_ipad_buffer[64];
extern u_int8_t hmac_opad_buffer[64];
@


1.9
log
@Don't keep the last blocksize-bytes of ciphertext for use as the next
plaintext's IV, in CBC mode. Use arc4random() to acquire fresh IVs per
message instead (particularly useful for IPsec).

This avoids the CBC oracle attack. provos@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.8 2002/03/05 15:59:41 markus Exp $	*/
d15 1
a15 1
 * modification of this software. 
@


1.8
log
@export MD5/SHA1 via /dev/crypto; ok provos@@, beck@@
tested with cryptosoft and kern.cryptodevallowsoft=1
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.7 2002/02/24 00:30:00 deraadt Exp $	*/
a38 1
			u_int8_t	 *SW_iv;
a51 1
#define sw_iv		SWCR_UN.SWCR_ENC.SW_iv
@


1.7
log
@license repair, angelos ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.6 2001/07/05 08:26:05 jjbg Exp $	*/
d66 1
a66 1
int	swcr_authcompute(struct cryptodesc *, struct swcr_data *,
@


1.6
log
@Compression support for IPComp. Include files only. angelos@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.5 2001/06/16 22:17:50 deraadt Exp $	*/
d12 1
a12 1
 * Permission to use, copy, and modify this software without fee
@


1.6.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.6 2001/07/05 08:26:05 jjbg Exp $	*/
d12 1
a12 1
 * Permission to use, copy, and modify this software with or without fee
d15 1
a15 1
 * modification of this software.
d39 1
d53 1
d66 1
a66 1
int	swcr_authcompute(struct cryptop *, struct cryptodesc *, struct swcr_data *,
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.4 2001/05/13 16:52:33 jason Exp $	*/
d42 4
d55 2
d68 1
@


1.4
log
@copyrights and $OpenBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d28 23
a50 28
struct swcr_data
{
    int               sw_alg;		/* Algorithm */
    union
    {
	struct
	{
            u_int8_t         *SW_ictx;
            u_int8_t         *SW_octx;
	    u_int32_t         SW_klen;
	    struct auth_hash *SW_axf;
	} SWCR_AUTH;

	struct
	{
            u_int8_t         *SW_kschedule;
            u_int8_t         *SW_iv;
	    struct enc_xform *SW_exf;
	} SWCR_ENC;
    } SWCR_UN;

#define sw_ictx      SWCR_UN.SWCR_AUTH.SW_ictx
#define sw_octx      SWCR_UN.SWCR_AUTH.SW_octx
#define sw_klen      SWCR_UN.SWCR_AUTH.SW_klen
#define sw_axf       SWCR_UN.SWCR_AUTH.SW_axf
#define sw_kschedule SWCR_UN.SWCR_ENC.SW_kschedule
#define sw_iv        SWCR_UN.SWCR_ENC.SW_iv
#define sw_exf       SWCR_UN.SWCR_ENC.SW_exf
d52 1
a52 1
    struct swcr_data *sw_next;
d59 7
a65 7
extern int swcr_encdec(struct cryptodesc *, struct swcr_data *, caddr_t, int);
extern int swcr_authcompute(struct cryptodesc *, struct swcr_data *,
			    caddr_t, int);
extern int swcr_process(struct cryptop *);
extern int swcr_newsession(u_int32_t *, struct cryptoini *);
extern int swcr_freesession(u_int64_t);
extern void swcr_init(void);
@


1.3
log
@Fix KPDK mode (based on patch provided by lob@@netstream.se)
@
text
@d1 2
@


1.2
log
@Change the type of freesession to take u_int64_t as argument.
@
text
@d35 1
d49 1
@


1.1
log
@oh, and we need this
@
text
@d65 1
a65 1
extern int swcr_freesession(u_int32_t);
@


1.1.2.1
log
@Sync with -current
@
text
@@


1.1.2.2
log
@merge in approximately 2.9 into SMP branch
@
text
@a34 1
	    u_int32_t         SW_klen;
a47 1
#define sw_klen      SWCR_UN.SWCR_AUTH.SW_klen
d65 1
a65 1
extern int swcr_freesession(u_int64_t);
@


1.1.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@a0 2
/*	$OpenBSD$	*/

d26 28
a53 23
struct swcr_data {
	int		sw_alg;		/* Algorithm */
	union {
		struct {
			u_int8_t	 *SW_ictx;
			u_int8_t	 *SW_octx;
			u_int32_t	 SW_klen;
			struct auth_hash *SW_axf;
		} SWCR_AUTH;
		struct {
			u_int8_t	 *SW_kschedule;
			u_int8_t	 *SW_iv;
			struct enc_xform *SW_exf;
		} SWCR_ENC;
	} SWCR_UN;

#define sw_ictx		SWCR_UN.SWCR_AUTH.SW_ictx
#define sw_octx		SWCR_UN.SWCR_AUTH.SW_octx
#define sw_klen		SWCR_UN.SWCR_AUTH.SW_klen
#define sw_axf		SWCR_UN.SWCR_AUTH.SW_axf
#define sw_kschedule	SWCR_UN.SWCR_ENC.SW_kschedule
#define sw_iv		SWCR_UN.SWCR_ENC.SW_iv
#define sw_exf		SWCR_UN.SWCR_ENC.SW_exf
d55 1
a55 1
	struct swcr_data *sw_next;
d62 7
a68 7
int	swcr_encdec(struct cryptodesc *, struct swcr_data *, caddr_t, int);
int	swcr_authcompute(struct cryptodesc *, struct swcr_data *,
	caddr_t, int);
int	swcr_process(struct cryptop *);
int	swcr_newsession(u_int32_t *, struct cryptoini *);
int	swcr_freesession(u_int64_t);
void	swcr_init(void);
@


1.1.2.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cryptosoft.h,v 1.1.2.3 2001/07/04 10:40:00 niklas Exp $	*/
a41 4
		struct {
			u_int32_t	 SW_size;
			struct comp_algo *SW_cxf;
		} SWCR_COMP;
a50 2
#define sw_size		SWCR_UN.SWCR_COMP.SW_size
#define sw_cxf		SWCR_UN.SWCR_COMP.SW_cxf
a61 1
int	swcr_compdec(struct cryptodesc *, struct swcr_data *, caddr_t, int);
@


1.1.2.5
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d12 1
a12 1
 * Permission to use, copy, and modify this software with or without fee
d66 1
a66 1
int	swcr_authcompute(struct cryptop *, struct cryptodesc *, struct swcr_data *,
@


1.1.2.6
log
@Merge in -current from about a week ago
@
text
@d39 1
d53 1
@


1.1.2.7
log
@Sync the SMP branch with 3.3
@
text
@d15 1
a15 1
 * modification of this software.
@


