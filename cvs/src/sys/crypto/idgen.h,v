head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.20
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2013.06.05.05.45.54;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.25.00.55.53;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.09.22.47.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix a bug that caused time-based rekeys to happen too frequently.

rename the structure internals to id32_* in anticipation of an
idgen16() that might come in the future.
@
text
@/*	$OpenBSD: idgen.h,v 1.2 2008/06/25 00:55:53 djm Exp $	*/
/*
 * Copyright (c) 2008 Damien Miller <djm@@mindrot.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define IDGEN32_ROUNDS		31
#define IDGEN32_KEYLEN		32
#define IDGEN32_REKEY_LIMIT	0x60000000
#define IDGEN32_REKEY_TIME	600

struct idgen32_ctx {
	u_int32_t id32_counter;
	u_int32_t id32_offset;
	u_int32_t id32_hibit;
	u_int8_t id32_key[IDGEN32_KEYLEN];
	time_t id32_rekey_time;
};

void idgen32_init(struct idgen32_ctx *);
u_int32_t idgen32(struct idgen32_ctx *);

@


1.2
log
@implement automatic time-based rekeying (every 10 minutes); ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: idgen.h,v 1.1 2008/06/09 22:47:41 djm Exp $	*/
d24 5
a28 5
	u_int32_t id_counter;
	u_int32_t id_offset;
	u_int32_t id_hibit;
	u_int8_t id_key[IDGEN32_KEYLEN];
	time_t id_rekey_time;
@


1.1
log
@Introduce a facility to generate unpredictable 32 bit numbers with
near maximal (2^32) cycle times. These are useful for network
IDs in cases where there are negative consequences to ID prediction
and/or reuse.

Use the idgen32() functions to generate IPv6 IDs and NFS client/server
XIDs.

Pseudorandom permutation code in crypto/idgen.c based on public
domain skip32.c from Greg Rose.

feedback & ok thib@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d20 2
a21 1
#define IDGEN32_REKEY_LIMIT	0x7ff00000
d24 5
a28 3
	u_int32_t counter;
	u_int32_t hibit;
	u_int8_t key[IDGEN32_KEYLEN];
@

