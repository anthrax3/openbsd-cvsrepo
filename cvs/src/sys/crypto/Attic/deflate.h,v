head	1.5;
access;
symbols
	OPENBSD_4_9:1.3.0.38
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.36
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.32
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.34
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.30
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.28
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2011.07.07.03.14.02;	author tedu;	state dead;
branches;
next	1.4;

1.4
date	2011.07.07.02.57.24;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.16.15.25.40;	author jjbg;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.07.05.08.26.04;	author jjbg;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.06.11.03.28.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@empty files should be deleted
@
text
@@


1.4
log
@Replace the cruddy old sys/net/zlib.[ch].  We now use the sys/lib/libz
code.  Missing chunks of the API are imported from the libc version,
with a few #ifdef's to port it into the kernel environment.

The bootblocks already used the newer code, and should encounter no
surprises since there are so few changes to the existing files. In
the kernel, ipcomp and kernel ppp are changed to the new API.
ipcomp has been tested.

ok tedu the brave
@
text
@@


1.3
log
@First round of __P removal in sys
@
text
@a0 55
/* $OpenBSD: deflate.h,v 1.2 2001/07/16 15:25:40 jjbg Exp $ */

/*
 * Copyright (c) 2001 Jean-Jacques Bernard-Gundol (jj@@wabbitt.org)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *   derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Definition for the wrapper around the deflate compression 
 * algorithm used in /sys/crypto
 */

#ifndef _CRYPTO_DEFLATE_H_
#define _CRYPTO_DEFLATE_H_

#include <net/zlib.h>

#define Z_METHOD	8
#define Z_MEMLEVEL	8
#define MINCOMP		2	/* won't be used, but must be defined */
#define ZBUF		10

u_int32_t deflate_global(u_int8_t *, u_int32_t, int, u_int8_t **);
void *z_alloc(void *, u_int, u_int);
void z_free(void *, void *, u_int);

struct deflate_buf {
	u_int8_t *out;
	u_int32_t size;
	int flag;
};

#endif /* _CRYPTO_DEFLATE_H_ */
@


1.2
log
@Make gcc 3.0 happy. From Heikki Korpela <heko@@iki.fi>
@
text
@d1 1
a1 1
/* $OpenBSD: deflate.h,v 1.1 2001/07/05 08:26:04 jjbg Exp $ */
d45 3
a47 3
u_int32_t deflate_global __P((u_int8_t *, u_int32_t, int, u_int8_t **));
void *z_alloc __P((void *, u_int, u_int));
void z_free     __P((void *, void *, u_int));
@


1.2.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: deflate.h,v 1.2 2001/07/16 15:25:40 jjbg Exp $ */
d45 3
a47 3
u_int32_t deflate_global(u_int8_t *, u_int32_t, int, u_int8_t **);
void *z_alloc(void *, u_int, u_int);
void z_free(void *, void *, u_int);
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.2.4.2
log
@Merge in -current from about a week ago
@
text
@d45 3
a47 3
u_int32_t deflate_global(u_int8_t *, u_int32_t, int, u_int8_t **);
void *z_alloc(void *, u_int, u_int);
void z_free(void *, void *, u_int);
@


1.1
log
@Compression support for IPComp. Include files only. angelos@@ ok.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d55 1
a55 1
#endif _CRYPTO_DEFLATE_H_
@

