head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	SMP:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2001.06.08.08.15.50;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2001.06.08.08.09.35;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.24.04.54.19;	author deraadt;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	2000.04.20.13.05.30;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.19.00.10.35;	author deraadt;	state Exp;
branches;
next	;

1.3.8.1
date	2001.05.14.22.06.52;	author niklas;	state Exp;
branches;
next	1.3.8.2;

1.3.8.2
date	2001.07.04.10.40.01;	author niklas;	state dead;
branches;
next	;


desc
@@


1.5
log
@rename a file for The Anal One
@
text
@/*      $OpenBSD: mbuf.c,v 1.4 2001/06/08 08:09:35 art Exp $	*/

/*
 * Copyright (c) 1999 Theo de Raadt
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *   derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/errno.h>
#include <sys/malloc.h>
#include <sys/kernel.h>
#include <sys/mbuf.h>
#include <vm/vm.h>
#include <vm/vm_extern.h>
#include <vm/pmap.h>

#include <crypto/crypto.h>

int
mbuf2pages(m, np, pp, lp, maxp, nicep)
	struct mbuf *m;
	int *np;
	long *pp;
	int *lp;
	int maxp;
	int *nicep;
{
	int npa = 0, tlen = 0;

	for (; m != NULL; m = m->m_next) {
		vaddr_t va, off;
		paddr_t pa;
		int len;

		if ((len = m->m_len) == 0)
			continue;
		tlen += len;
		va = (vaddr_t)m->m_data;
		off = va & PAGE_MASK;
		va -= off;

next_page:
		if (pmap_extract(pmap_kernel(), va, &pa) == FALSE)
			panic("mbuf2pages: unmapped page");

		pa += off;

		lp[npa] = len;
		pp[npa] = pa;

		if (++npa > maxp)
			return (0);

		if (len + off > PAGE_SIZE) {
			lp[npa - 1] = PAGE_SIZE - off;
			va += PAGE_SIZE;
			len -= PAGE_SIZE;
			goto next_page;
		}
	}
			
	if (nicep) {
		int nice = 1;
		int i;

		/* see if each [pa,len] entry is long-word aligned */
		for (i = 0; i < npa; i++)
			if ((lp[i] & 3) || (pp[i] & 3))
				nice = 0;
		*nicep = nice;
	}

	*np = npa;
	return (tlen);
}
@


1.4
log
@Change the paddr_t pmap_extract(struct pmap *, vaddr_t) interface to
boolean_t pmap_extract(struct pmap *, vaddr_t, paddr_t *).
Matches NetBSD. Tested by various people on various platforms.
@
text
@d1 1
a1 1
/*      $OpenBSD: mbuf.c,v 1.3 2000/04/24 04:54:19 deraadt Exp $	*/
@


1.3
log
@use pmap_extract() instead of vtophys(); art
@
text
@d1 1
a1 1
/*      $OpenBSD: mbuf.c,v 1.2 2000/04/20 13:05:30 art Exp $	*/
d67 2
a68 3
		pa = pmap_extract(pmap_kernel(), va);
		if (pa == 0)
			panic("mbuf2pages: pa == 0");
@


1.3.8.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*      $OpenBSD: mbuf.c,v 1.3 2000/04/24 04:54:19 deraadt Exp $	*/
@


1.3.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*      $OpenBSD: mbuf.c,v 1.3.8.1 2001/05/14 22:06:52 niklas Exp $	*/
@


1.2
log
@Don't include machine/pmap.h, vm/pmap.h does that for us.
@
text
@d1 1
a1 1
/*      $OpenBSD: mbuf.c,v 1.1 2000/04/19 00:10:35 deraadt Exp $	*/
a51 1
	struct  mbuf *m0;
d54 4
a57 5
	/* generate a [pa,len] array from an mbuf */
	for (m0 = m; m; m = m->m_next) {
		void *va;
		long pg, npg;
		int len, off;
d59 1
a59 1
		if (m->m_len == 0)
a60 1
		len = m->m_len;
d62 10
a71 1
		va = m->m_data;
d74 1
a74 23
		pp[npa] = vtophys(va);
		pg = pp[npa] & ~PAGE_MASK;
		off = (long)va & PAGE_MASK;

		while (len + off > PAGE_SIZE) {
			va = va + PAGE_SIZE - off;
			npg = vtophys(va);
			if (npg != pg) {
				/* FUCKED UP condition */
				if (++npa > maxp)
					return (0);
				continue;
			}
			lp[npa] = PAGE_SIZE - off;
			off = 0;

			if (++npa > maxp)
				return (0);

			lp[npa] = len - (PAGE_SIZE - off);
			len -= lp[npa];
			pp[npa] = vtophys(va);
		}
d76 1
a76 1
		if (++npa == maxp)
d78 7
d86 1
a86 1

@


1.1
log
@split out mbuf scatter gather function
@
text
@d1 1
a1 1
/*      $OpenBSD$	*/
a39 1
#include <machine/pmap.h>
@

