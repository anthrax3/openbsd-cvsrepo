head	1.8;
access;
symbols
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.24
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.22
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.20
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.18
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.16
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.14
	OPENBSD_2_8:1.4.0.12
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.10
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.8
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2005.06.16.17.37.55;	author henning;	state dead;
branches;
next	1.7;

1.7
date	2004.06.21.23.50.37;	author tholo;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.10.07.22.42;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.28.13;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.28.23.57.26;	author millert;	state Exp;
branches
	1.4.8.1;
next	1.3;

1.3
date	97.11.08.19.56.26;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.07.36.38;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.09;	author deraadt;	state Exp;
branches;
next	;

1.4.8.1
date	2003.06.07.11.06.07;	author ho;	state Exp;
branches;
next	1.4.8.2;

1.4.8.2
date	2004.02.19.10.57.23;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove remaining netccitt parts, full ports build test by pval, thanks!
@
text
@/*	$OpenBSD: pk_acct.c,v 1.7 2004/06/21 23:50:37 tholo Exp $	*/
/*	$NetBSD: pk_acct.c,v 1.9 1996/02/13 22:05:11 christos Exp $	*/

/*
 * Copyright (c) University of British Columbia, 1984
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Laboratory for Computation Vision and the Computer Science Department
 * of the University of British Columbia.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)pk_acct.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/namei.h>
#include <sys/proc.h>
#include <sys/vnode.h>
#include <sys/kernel.h>
#include <sys/file.h>
#include <sys/socket.h>
#include <sys/socketvar.h>

#include <net/if.h>

#include <netccitt/x25.h>
#include <netccitt/pk.h>
#include <netccitt/pk_var.h>
#include <netccitt/pk_extern.h>
#include <netccitt/x25acct.h>


struct	vnode *pkacctp;
/* 
 *  Turn on packet accounting
 */
int
pk_accton (path)
	char *path;
{
	struct vnode *vp = NULL;
	struct nameidata nd;
	struct vnode *oacctp = pkacctp;
	struct proc *p = curproc;
	int error;

	if (path == 0)
		goto close;
	NDINIT(&nd, LOOKUP, FOLLOW, UIO_USERSPACE, path, p);
	if ((error = vn_open (&nd, FWRITE, 0644)) != 0)
		return (error);
	vp = nd.ni_vp;
	VOP_UNLOCK(vp, 0, p);
	if (vp -> v_type != VREG) {
		vrele (vp);
		return (EACCES);
	}
	pkacctp = vp;
	if (oacctp) {
	close:
		error = vn_close (oacctp, FWRITE, p -> p_ucred, p);
	}
	return (error);
}

/* 
 *  Write a record on the accounting file.
 */

void
pk_acct (lcp)
	struct pklcd *lcp;
{
	struct vnode *vp;
	struct sockaddr_x25 *sa;
	char *src, *dst;
	int len;
	static struct x25acct acbuf;

	if ((vp = pkacctp) == 0)
		return;
	bzero ((caddr_t)&acbuf, sizeof (acbuf));
	if (lcp -> lcd_ceaddr != 0)
		sa = lcp -> lcd_ceaddr;
	else if (lcp -> lcd_craddr != 0) {
		sa = lcp -> lcd_craddr;
		acbuf.x25acct_callin = 1;
	} else
		return;

	if (sa -> x25_opts.op_flags & X25_REVERSE_CHARGE)
		acbuf.x25acct_revcharge = 1;
	acbuf.x25acct_stime = lcp -> lcd_stime;
	acbuf.x25acct_etime = time_second - acbuf.x25acct_stime;
	acbuf.x25acct_uid = curproc -> p_cred -> p_ruid;
	acbuf.x25acct_psize = sa -> x25_opts.op_psize;
	acbuf.x25acct_net = sa -> x25_net;
	/*
	 * Convert address to bcd
	 */
	src = sa -> x25_addr;
	dst = acbuf.x25acct_addr;
	for (len = 0; *src; len++)
		if (len & 01)
			*dst++ |= *src++ & 0xf;
		else
			*dst = *src++ << 4;
	acbuf.x25acct_addrlen = len;

	bcopy (sa -> x25_udata, acbuf.x25acct_udata,
		sizeof (acbuf.x25acct_udata));
	acbuf.x25acct_txcnt = lcp -> lcd_txcnt;
	acbuf.x25acct_rxcnt = lcp -> lcd_rxcnt;

	(void) vn_rdwr(UIO_WRITE, vp, (caddr_t)&acbuf, sizeof (acbuf),
		(off_t)0, UIO_SYSSPACE, IO_UNIT|IO_APPEND,
		curproc -> p_ucred, NULL, NULL);
}
@


1.7
log
@First step towards more sane time handling in the kernel -- this changes
things such that code that only need a second-resolution uptime or wall
time, and used to get that from time.tv_secs or mono_time.tv_secs now get
this from separate time_t globals time_second and time_uptime.

ok art@@ niklas@@ nordin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pk_acct.c,v 1.6 2003/12/10 07:22:42 itojun Exp $	*/
@


1.6
log
@de-register.  deraadt ok
@
text
@d1 1
a1 1
/*	$OpenBSD: pk_acct.c,v 1.5 2003/06/02 23:28:13 millert Exp $	*/
d120 1
a120 1
	acbuf.x25acct_etime = time.tv_sec - acbuf.x25acct_stime;
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pk_acct.c,v 1.4 1998/07/28 23:57:26 millert Exp $	*/
d67 1
a67 1
	register struct vnode *vp = NULL;
d98 1
a98 1
	register struct pklcd *lcp;
d100 4
a103 4
	register struct vnode *vp;
	register struct sockaddr_x25 *sa;
	register char *src, *dst;
	register int len;
@


1.4
log
@vn_rdwr proto fallout I missed earlier
@
text
@d1 1
a1 1
/*	$OpenBSD: pk_acct.c,v 1.3 1997/11/08 19:56:26 millert Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4.8.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pk_acct.c,v 1.4 1998/07/28 23:57:26 millert Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.4.8.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d67 1
a67 1
	struct vnode *vp = NULL;
d98 1
a98 1
	struct pklcd *lcp;
d100 4
a103 4
	struct vnode *vp;
	struct sockaddr_x25 *sa;
	char *src, *dst;
	int len;
@


1.3
log
@VOP_UNLOCK now takes 3 args.
@
text
@d1 1
a1 1
/*	$OpenBSD: pk_acct.c,v 1.2 1996/03/04 07:36:38 niklas Exp $	*/
d147 1
a147 2
		curproc -> p_ucred, (int *)0,
		(struct proc *)0);
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d83 1
a83 1
	VOP_UNLOCK(vp);
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: pk_acct.c,v 1.8 1994/12/14 19:03:39 mycroft Exp $	*/
d59 1
d67 1
a67 1

d80 1
a80 1
	if (error = vn_open (&nd, FWRITE, 0644))
d100 1
d102 1
a102 1
register struct pklcd *lcp;
a107 1
	register long etime;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
