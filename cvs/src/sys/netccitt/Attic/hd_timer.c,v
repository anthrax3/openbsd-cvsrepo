head	1.5;
access;
symbols
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.32
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.30
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.28
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2005.06.16.17.37.54;	author henning;	state dead;
branches;
next	1.4;

1.4
date	2003.12.10.07.22.42;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.02.23.28.13;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.07.36.26;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.08;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.08;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2003.06.07.11.06.07;	author ho;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2004.02.19.10.57.23;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove remaining netccitt parts, full ports build test by pval, thanks!
@
text
@/*	$OpenBSD: hd_timer.c,v 1.4 2003/12/10 07:22:42 itojun Exp $	*/
/*	$NetBSD: hd_timer.c,v 1.6 1996/02/13 22:04:33 christos Exp $	*/

/*
 * Copyright (c) University of British Columbia, 1984
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Laboratory for Computation Vision and the Computer Science Department
 * of the University of British Columbia.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)hd_timer.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/domain.h>
#include <sys/socket.h>
#include <sys/protosw.h>
#include <sys/errno.h>
#include <sys/time.h>
#include <sys/kernel.h>

#include <net/if.h>

#include <netccitt/hdlc.h>
#include <netccitt/hd_var.h>
#include <netccitt/x25.h>
#include <netccitt/pk_extern.h>

/*
 * these can be patched with adb if the
 * default values are inappropriate
 */

int             hd_t1 = T1;
int             hd_t3 = T3;
int             hd_n2 = N2;

/*
 *  HDLC TIMER
 *
 *  This routine is called every 500ms by the kernel. Decrement timer by this
 *  amount - if expired then process the event.
 */

void
hd_timer()
{
	struct hdcb *hdp;
	int    s = splimp();

	for (hdp = hdcbhead; hdp; hdp = hdp->hd_next) {
		if (hdp->hd_rrtimer && (--hdp->hd_rrtimer == 0)) {
			if (hdp->hd_lasttxnr != hdp->hd_vr)
				hd_writeinternal(hdp, RR, POLLOFF);
		}
		if (!(hdp->hd_timer && --hdp->hd_timer == 0))
			continue;

		switch (hdp->hd_state) {
		case INIT:
		case DISC_SENT:
			hd_writeinternal(hdp, DISC, POLLON);
			break;

		case ABM:
			if (hdp->hd_lastrxnr != hdp->hd_vs) {	/* XXX */
				hdp->hd_timeouts++;
				hd_resend_iframe(hdp);
			}
			break;

		case WAIT_SABM:
			hd_writeinternal(hdp, FRMR, POLLOFF);
			if (++hdp->hd_retxcnt == hd_n2) {
				hdp->hd_retxcnt = 0;
				hd_writeinternal(hdp, SABM, POLLOFF);
				hdp->hd_state = WAIT_UA;
			}
			break;

		case DM_SENT:
			if (++hdp->hd_retxcnt == hd_n2) {
				/* Notify the packet level. */
				(void) pk_ctlinput(PRC_LINKDOWN, 
				       (struct sockaddr *) hdp->hd_pkp, NULL);
				hdp->hd_retxcnt = 0;
				hdp->hd_state = SABM_SENT;
				hd_writeinternal(hdp, SABM, POLLOFF);
			} else
				hd_writeinternal(hdp, DM, POLLOFF);
			break;

		case WAIT_UA:
			if (++hdp->hd_retxcnt == hd_n2) {
				hdp->hd_retxcnt = 0;
				hd_writeinternal(hdp, DM, POLLOFF);
				hdp->hd_state = DM_SENT;
			} else
				hd_writeinternal(hdp, SABM, POLLOFF);
			break;

		case SABM_SENT:
			/* Do this indefinitely. */
			hd_writeinternal(hdp, SABM, POLLON);
			break;

		case DISCONNECTED:
			/*
			 * Poll the interface driver flags waiting
			 * for the IFF_UP bit to come on.
			 */
			if (hdp->hd_ifp->if_flags & IFF_UP)
				hdp->hd_state = INIT;

		}
		SET_TIMER(hdp);
	}

	splx(s);
}
@


1.4
log
@de-register.  deraadt ok
@
text
@d1 1
a1 1
/*	$OpenBSD: hd_timer.c,v 1.3 2003/06/02 23:28:13 millert Exp $	*/
@


1.3
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: hd_timer.c,v 1.2 1996/03/04 07:36:26 niklas Exp $	*/
d76 2
a77 2
	register struct hdcb *hdp;
	register int    s = splimp();
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.2.16.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: hd_timer.c,v 1.2 1996/03/04 07:36:26 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2.16.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d76 2
a77 2
	struct hdcb *hdp;
	int    s = splimp();
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: hd_timer.c,v 1.5 1994/06/29 06:37:15 cgd Exp $	*/
d59 1
d66 3
a68 3
int	hd_t1 = T1;
int	hd_t3 = T3;
int	hd_n2 = N2;
d71 1
a71 1
 *  HDLC TIMER 
d77 2
a78 1
hd_timer ()
d81 1
a81 1
	register int s = splimp ();
d86 1
a86 1
				hd_writeinternal (hdp, RR, POLLOFF);
a87 1

d92 1
a92 1
		case INIT: 
d94 1
a94 1
			hd_writeinternal (hdp, DISC, POLLON);
d97 1
a97 1
		case ABM: 
d100 1
a100 1
				hd_resend_iframe (hdp);
d104 2
a105 2
		case WAIT_SABM: 
			hd_writeinternal (hdp, FRMR, POLLOFF);
d108 1
a108 1
				hd_writeinternal (hdp, SABM, POLLOFF);
d113 1
a113 1
		case DM_SENT: 
d116 2
a117 1
				(void) pk_ctlinput (PRC_LINKDOWN, hdp->hd_pkp);
d120 1
a120 1
				hd_writeinternal (hdp, SABM, POLLOFF);
d122 1
a122 1
				hd_writeinternal (hdp, DM, POLLOFF);
d125 1
a125 1
		case WAIT_UA: 
d128 1
a128 1
				hd_writeinternal (hdp, DM, POLLOFF);
d131 1
a131 1
				hd_writeinternal (hdp, SABM, POLLOFF);
d134 1
a134 1
		case SABM_SENT: 
d136 1
a136 1
			hd_writeinternal (hdp, SABM, POLLON);
d148 1
a148 1
		SET_TIMER (hdp);
d151 1
a151 1
	splx (s);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
