head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.16
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.14
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.10
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.12
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.4
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.8
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.6
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.16.0.22
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.20
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.18
	OPENBSD_5_0:1.16.0.16
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.14
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.12
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.8
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.10
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.6
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.4
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.2
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.2
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.1.0.8
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.18
date	2013.06.11.16.42.18;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2013.05.30.19.19.09;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2008.01.05.19.49.26;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2007.06.01.20.23.26;	author pedro;	state Exp;
branches;
next	1.14;

1.14
date	2006.06.21.10.01.10;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2006.06.19.22.52.23;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.02.18.02.47;	author pedro;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.20.16.30.35;	author pedro;	state Exp;
branches;
next	1.10;

1.10
date	2005.07.03.20.14.02;	author drahn;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.10.17.37.40;	author pedro;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.07.06.06.51;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.13.21.04.29;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.07.01.40.16;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.26.18.33.17;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.22.20.37.46;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.21.23.24.31;	author csapuntz;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	99.12.05.08.30.38;	author art;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	98.03.15.03.53.51;	author millert;	state Exp;
branches;
next	;

1.2.2.1
date	2001.05.14.22.47.41;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2003.06.07.11.09.09;	author ho;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2004.06.05.23.13.11;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.32.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@final removal of daddr64_t.  daddr_t has been 64 bit for a long enough
test period; i think 3 years ago the last bugs fell out.
ok otto beck others
@
text
@/*	$OpenBSD: ffs_softdep_stub.c,v 1.17 2013/05/30 19:19:09 guenther Exp $	*/

/*
 * Copyright 1998 Marshall Kirk McKusick. All Rights Reserved.
 *
 * The soft updates code is derived from the appendix of a University
 * of Michigan technical report (Gregory R. Ganger and Yale N. Patt,
 * "Soft Updates: A Solution to the Metadata Update Problem in File
 * Systems", CSE-TR-254-95, August 1995).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. None of the names of McKusick, Ganger, or the University of Michigan
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY MARSHALL KIRK MCKUSICK ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL MARSHALL KIRK MCKUSICK BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)ffs_softdep_stub.c	9.1 (McKusick) 7/10/97
 * $FreeBSD: src/sys/ufs/ffs/ffs_softdep_stub.c,v 1.14 2000/08/09 00:41:54 tegge Exp $
 */

#ifndef FFS_SOFTUPDATES

#include <sys/param.h>
#include <sys/vnode.h>
#include <sys/systm.h>
#include <ufs/ufs/quota.h>
#include <ufs/ufs/inode.h>
#include <ufs/ffs/ffs_extern.h>
#include <ufs/ufs/ufs_extern.h>

int
softdep_flushfiles(struct mount *oldmnt, int flags, struct proc *p)
{
	panic("softdep_flushfiles called");
}

int
softdep_mount(struct vnode *devvp, struct mount *mp, struct fs *fs,
    struct ucred *cred)
{
	return (0);
}

void 
softdep_initialize(void)
{
	return;
}

#ifndef __OPTIMIZE__

void
softdep_setup_inomapdep(struct buf *bp, struct inode *ip, ufsino_t newinum)
{
	panic("softdep_setup_inomapdep called");
}

void
softdep_setup_blkmapdep(struct buf *bp, struct fs *fs, daddr_t newblkno)
{
	panic("softdep_setup_blkmapdep called");
}

void 
softdep_setup_allocdirect(struct inode *ip, daddr_t lbn, daddr_t newblkno,
    daddr_t oldblkno, long newsize, long oldsize, struct buf *bp)
{
	panic("softdep_setup_allocdirect called");
}

void
softdep_setup_allocindir_page(struct inode *ip, daddr_t lbn, struct buf *bp,
    int ptrno, daddr_t newblkno, daddr_t oldblkno, struct buf *nbp)
{
	panic("softdep_setup_allocindir_page called");
}

void
softdep_setup_allocindir_meta(struct buf *nbp, struct inode *ip,
    struct buf *bp, int ptrno, daddr_t newblkno)
{
	panic("softdep_setup_allocindir_meta called");
}

void
softdep_setup_freeblocks(struct inode *ip, off_t length)
{
	panic("softdep_setup_freeblocks called");
}

void
softdep_freefile(struct vnode *pvp, ufsino_t ino, mode_t mode)
{
	panic("softdep_freefile called");
}

int
softdep_setup_directory_add(struct buf *bp, struct inode *dp, off_t diroffset,
    long newinum, struct buf *newdirbp, int isnewblk)
{
	panic("softdep_setup_directory_add called");
	return (0);
}

void 
softdep_change_directoryentry_offset(struct inode *dp, caddr_t base,
    caddr_t oldloc, caddr_t newloc, int entrysize)
{
	panic("softdep_change_directoryentry_offset called");
}

void 
softdep_setup_remove(struct buf *bp, struct inode *dp, struct inode *ip,
    int isrmdir)
{
	panic("softdep_setup_remove called");
}

void 
softdep_setup_directory_change(struct buf *bp, struct inode *dp,
    struct inode *ip, long newinum, int isrmdir)
{
	panic("softdep_setup_directory_change called");
}

void
softdep_change_linkcnt(struct inode *ip, int nodelay)
{
	panic("softdep_change_linkcnt called");
}

void 
softdep_load_inodeblock(struct inode *ip)
{
	panic("softdep_load_inodeblock called");
}

void 
softdep_update_inodeblock(struct inode *ip, struct buf *bp, int waitfor)
{
	panic("softdep_update_inodeblock called");
}

#endif

void
softdep_fsync_mountdev(struct vnode *vp, int waitfor)
{
	return;
}

int
softdep_flushworklist(struct mount *oldmnt, int *countp, struct proc *p)
{
	*countp = 0;
	return (0);
}

int
softdep_sync_metadata(struct vop_fsync_args *ap)
{
	return (0);
}

#ifndef __OPTIMIZE__

int
softdep_slowdown(struct vnode *vp)
{
	panic("softdep_slowdown called");
}

#endif

#endif /* !FFS_SOFTUPDATES */
@


1.17
log
@UFS does't do inode numbers >2^32, so use a smaller type internally,
only using ino_t in the VFS layer APIs: vget, readdir, getattr.

otto wrote the original diff for libsa to keep bootblock from overflowing
ok deraadt@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.16 2008/01/05 19:49:26 otto Exp $	*/
d77 1
a77 1
softdep_setup_blkmapdep(struct buf *bp, struct fs *fs, daddr64_t newblkno)
d83 2
a84 2
softdep_setup_allocdirect(struct inode *ip, daddr64_t lbn, daddr64_t newblkno,
    daddr64_t oldblkno, long newsize, long oldsize, struct buf *bp)
d90 2
a91 2
softdep_setup_allocindir_page(struct inode *ip, daddr64_t lbn, struct buf *bp,
    int ptrno, daddr64_t newblkno, daddr64_t oldblkno, struct buf *nbp)
d98 1
a98 1
    struct buf *bp, int ptrno, daddr64_t newblkno)
@


1.16
log
@Make the ffs code 64-bit disk block number clean.  Based on a diff
from Pedro Martelleto.  Two things remain: the on-disk quota
structures are still 32-bit and statfs does not do 64-bit numbers
yet. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.15 2007/06/01 20:23:26 pedro Exp $	*/
d71 1
a71 1
softdep_setup_inomapdep(struct buf *bp, struct inode *ip, ino_t newinum)
d110 1
a110 1
softdep_freefile(struct vnode *pvp, ino_t ino, mode_t mode)
@


1.15
log
@Nuke 'ufs_lbn_t', okay otto@@ deraadt@@ krw@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.14 2006/06/21 10:01:10 mickey Exp $	*/
d77 1
a77 1
softdep_setup_blkmapdep(struct buf *bp, struct fs *fs, daddr_t newblkno)
d83 2
a84 2
softdep_setup_allocdirect(struct inode *ip, daddr64_t lbn, daddr_t newblkno,
    daddr_t oldblkno, long newsize, long oldsize, struct buf *bp)
d91 1
a91 1
    int ptrno, daddr_t newblkno, daddr_t oldblkno, struct buf *nbp)
d98 1
a98 1
    struct buf *bp, int ptrno, daddr_t newblkno)
@


1.14
log
@propagate the wait flag from fsync down to softdep_fsync_mountdev()
and do not perform synchronous sync there is no wait requested by
skipping the drain_output() call. this fixes a problem where
update kthread would sleep forever on some vnode since work is created
faster than it can be flushed. pedro@@ ok; tested by many
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.13 2006/06/19 22:52:23 miod Exp $	*/
d83 1
a83 1
softdep_setup_allocdirect(struct inode *ip, ufs_lbn_t lbn, daddr_t newblkno,
d90 1
a90 1
softdep_setup_allocindir_page(struct inode *ip, ufs_lbn_t lbn, struct buf *bp,
@


1.13
log
@Shave 900 bytes off ramdisk kernels (before compression) by not including
the softdep stubs which get optimized out when DOINGSOFTDEP evaluates to zero
at compile time and thus are never ever invoked; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.12 2005/12/02 18:02:47 pedro Exp $	*/
d165 1
a165 1
softdep_fsync_mountdev(struct vnode *vp)
@


1.12
log
@Use ANSI function declarations, no binary change.
Diff from Iruata Souza, thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.11 2005/07/20 16:30:35 pedro Exp $	*/
d68 2
d162 2
d183 2
d190 2
@


1.11
log
@Reintroduce the changes made by tedu in revision 1.50 of ffs_softdep.c,
this time with a small tweak: when flushing the dependencies, don't
update the inode twice, but update once, and then, if needed, fsync it.
Doing so fixes the inode hangs some people were seeing.

Various testing for a while, especially krw@@ and millert@@, okay deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.10 2005/07/03 20:14:02 drahn Exp $	*/
d50 1
a50 4
softdep_flushfiles(oldmnt, flags, p)
	struct mount *oldmnt;
	int flags;
	struct proc *p;
a51 1

d56 2
a57 5
softdep_mount(devvp, mp, fs, cred)
	struct vnode *devvp;
	struct mount *mp;
	struct fs *fs;
	struct ucred *cred;
a58 1

d63 1
a63 1
softdep_initialize()
a64 1

d69 1
a69 4
softdep_setup_inomapdep(bp, ip, newinum)
	struct buf *bp;
	struct inode *ip;
	ino_t newinum;
a70 1

d75 1
a75 4
softdep_setup_blkmapdep(bp, fs, newblkno)
	struct buf *bp;
	struct fs *fs;
	daddr_t newblkno;
a76 1

d81 2
a82 8
softdep_setup_allocdirect(ip, lbn, newblkno, oldblkno, newsize, oldsize, bp)
	struct inode *ip;
	ufs_lbn_t lbn;
	daddr_t newblkno;
	daddr_t oldblkno;
	long newsize;
	long oldsize;
	struct buf *bp;
a83 1
	
d88 2
a89 8
softdep_setup_allocindir_page(ip, lbn, bp, ptrno, newblkno, oldblkno, nbp)
	struct inode *ip;
	ufs_lbn_t lbn;
	struct buf *bp;
	int ptrno;
	daddr_t newblkno;
	daddr_t oldblkno;
	struct buf *nbp;
a90 1

d95 2
a96 6
softdep_setup_allocindir_meta(nbp, ip, bp, ptrno, newblkno)
	struct buf *nbp;
	struct inode *ip;
	struct buf *bp;
	int ptrno;
	daddr_t newblkno;
a97 1

d102 1
a102 3
softdep_setup_freeblocks(ip, length)
	struct inode *ip;
	off_t length;
a103 1
	
d108 1
a108 4
softdep_freefile(pvp, ino, mode)
		struct vnode *pvp;
		ino_t ino;
		mode_t mode;
a109 1

d114 2
a115 7
softdep_setup_directory_add(bp, dp, diroffset, newinum, newdirbp, isnewblk)
	struct buf *bp;
	struct inode *dp;
	off_t diroffset;
	long newinum;
	struct buf *newdirbp;
	int isnewblk;
a116 1

d122 2
a123 6
softdep_change_directoryentry_offset(dp, base, oldloc, newloc, entrysize)
	struct inode *dp;
	caddr_t base;
	caddr_t oldloc;
	caddr_t newloc;
	int entrysize;
a124 1

d129 2
a130 5
softdep_setup_remove(bp, dp, ip, isrmdir)
	struct buf *bp;
	struct inode *dp;
	struct inode *ip;
	int isrmdir;
a131 1
	
d136 2
a137 6
softdep_setup_directory_change(bp, dp, ip, newinum, isrmdir)
	struct buf *bp;
	struct inode *dp;
	struct inode *ip;
	long newinum;
	int isrmdir;
a138 1

d143 1
a143 3
softdep_change_linkcnt(ip, nodelay)
	struct inode *ip;
	int nodelay;
a144 1

d149 1
a149 2
softdep_load_inodeblock(ip)
	struct inode *ip;
a150 1

d155 1
a155 4
softdep_update_inodeblock(ip, bp, waitfor)
	struct inode *ip;
	struct buf *bp;
	int waitfor;
a156 1

d161 1
a161 2
softdep_fsync_mountdev(vp)
	struct vnode *vp;
a162 1

d167 1
a167 4
softdep_flushworklist(oldmnt, countp, p)
	struct mount *oldmnt;
	int *countp;
	struct proc *p;
a168 1

d174 1
a174 7
softdep_sync_metadata(ap)
	struct vop_fsync_args /* {
		struct vnode *a_vp;
		struct ucred *a_cred;
		int a_waitfor;
		struct proc *a_p;
	} */ *ap;
a175 1

d180 1
a180 2
softdep_slowdown(vp)
	struct vnode *vp;
a183 1

@


1.10
log
@Extended Attributes was a piece to get to ACLs, however ACLs have not
been worked on, so EA is pointless. Also the code is not enabled
in GENERIC so it is not being tested or maintained.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.9 2005/06/10 17:37:40 pedro Exp $	*/
d156 2
a157 2
void
softdep_setup_directory_add(bp, dp, diroffset, newinum, newdirbp)
d163 1
d167 1
@


1.9
log
@Tweak softdep_change_linkcnt() so we can specify whether we're willing
to be co-opted by softdep or not, and use this new interface to inform
softdep in ufs_inactive() that the inode mode has changed.

We don't want to be co-opted there as that might lead to undesired
circular dependencies such as a vput() depending on another vput() to
complete, or a process that is trying to free up a vnode being blocked
trying to acquire a new vnode.

Okay tedu@@ deraadt@@, thanks to all those who tested.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.8 2004/12/07 06:06:51 deraadt Exp $	*/
a43 1
#include <ufs/ufs/extattr.h>
@


1.8
log
@backout missed by tedu:
prev softdep merge could lead to inode wait deadlock for unknown reasons.
revert.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.7 2004/07/13 21:04:29 millert Exp $	*/
d205 1
a205 1
softdep_change_linkcnt(ip)
d207 1
@


1.7
log
@Change mode_t and nlink_t from 16bit to 32bit.  This allows us to
use mode_t in syscalls.master and to use mode_t in more places in
the kernel.  It also makes lint much more useful on kernel code.

I've also added a placeholder for st_birthtime to make a UFS2 import
easier at some future date.

Requested by and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.6 2004/05/07 01:40:16 tedu Exp $	*/
d157 2
a158 2
int 
softdep_setup_directory_add(bp, dp, diroffset, newinum, newdirbp, isnewblk)
a163 1
	int isnewblk;
a166 1
	return (0);
@


1.6
log
@fatty softdep merge with freebsd.  fixes a variety of possible issues.
relevant changes to ffs_softdep.c were 1.95, 1.96, 1.97, 1.98, 1.103, and
1.107 in freebsd.  testing marc and otto.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.5 2003/05/26 18:33:17 tedu Exp $	*/
d151 1
a151 1
		int mode;
@


1.5
log
@fiddle with some type names.  change most instances of ufs_daddr_t to
ufs1_daddr_t, a few to daddr_t.  ufs_daddr_t typedef is retained, but consider
it deprecated.  no functional changes.  inspired by freebsd.  ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.4 2002/02/22 20:37:46 drahn Exp $	*/
d157 2
a158 2
void 
softdep_setup_directory_add(bp, dp, diroffset, newinum, newdirbp)
d164 1
d168 1
@


1.4
log
@Extended Attribute support from FreeBSD/TrustedBSD ok art@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.3 2001/02/21 23:24:31 csapuntz Exp $	*/
d92 1
a92 1
	ufs_daddr_t newblkno;
d102 2
a103 2
	ufs_daddr_t newblkno;
	ufs_daddr_t oldblkno;
d118 2
a119 2
	ufs_daddr_t newblkno;
	ufs_daddr_t oldblkno;
d132 1
a132 1
	ufs_daddr_t newblkno;
@


1.3
log
@

Latest soft updates from FreeBSD/Kirk McKusick

Snapshot-related code has been commented out.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.2 1999/12/05 08:30:38 art Exp $	*/
d44 1
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.3 2001/02/21 23:24:31 csapuntz Exp $	*/
a43 1
#include <ufs/ufs/extattr.h>
@


1.2
log
@Integrate the latest soft updates code.
From mckusick@@mckusick.com.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.1 1998/03/15 03:53:51 millert Exp $	*/
d4 1
a4 1
 * Copyright 1997 Marshall Kirk McKusick. All Rights Reserved.
d6 4
a9 2
 * This code is derived from work done by Greg Ganger and Yale Patt at the
 * University of Michigan.
d19 3
a21 3
 * 3. None of the names of McKusick, Ganger, Patt, or the University of 
 *    Michigan may be used to endorse or promote products derived from 
 *    this software without specific prior written permission.
d35 2
a36 1
 *	@@(#)ffs_softdep.stub.c	9.1 (McKusick) 7/9/97
d147 4
a150 6
softdep_freefile(ap)
	struct vop_vfree_args /* {
		struct vnode *a_pvp;
		ino_t a_ino;
		int a_mode;
	} */ *ap;
d204 1
a204 1
softdep_increase_linkcnt(ip)
d208 1
a208 1
	panic("softdep_increase_linkcnt called");
d229 8
d238 4
a241 2
softdep_fsync(vp)
	struct vnode *vp;
d244 2
a245 2
	panic("softdep_fsync called");
	return (EIO);
d261 2
a262 2
void
softdep_fsync_mountdev(vp)
d265 1
a265 1
	panic("softdep_fsync_mountdev called");
@


1.2.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.3 2001/02/21 23:24:31 csapuntz Exp $	*/
d4 1
a4 1
 * Copyright 1998 Marshall Kirk McKusick. All Rights Reserved.
d6 2
a7 4
 * The soft updates code is derived from the appendix of a University
 * of Michigan technical report (Gregory R. Ganger and Yale N. Patt,
 * "Soft Updates: A Solution to the Metadata Update Problem in File
 * Systems", CSE-TR-254-95, August 1995).
d17 3
a19 3
 * 3. None of the names of McKusick, Ganger, or the University of Michigan
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d33 1
a33 2
 *	from: @@(#)ffs_softdep_stub.c	9.1 (McKusick) 7/10/97
 * $FreeBSD: src/sys/ufs/ffs/ffs_softdep_stub.c,v 1.14 2000/08/09 00:41:54 tegge Exp $
d144 6
a149 4
softdep_freefile(pvp, ino, mode)
		struct vnode *pvp;
		ino_t ino;
		int mode;
d203 1
a203 1
softdep_change_linkcnt(ip)
d207 1
a207 1
	panic("softdep_change_linkcnt called");
d228 2
a229 2
void
softdep_fsync_mountdev(vp)
d233 2
a234 12
	return;
}

int
softdep_flushworklist(oldmnt, countp, p)
	struct mount *oldmnt;
	int *countp;
	struct proc *p;
{

	*countp = 0;
	return (0);
d250 2
a251 2
int
softdep_slowdown(vp)
d254 1
a254 1
	panic("softdep_slowdown called");
@


1.2.2.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a43 1
#include <ufs/ufs/extattr.h>
@


1.2.2.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep_stub.c,v 1.2.2.2 2002/03/06 02:17:13 niklas Exp $	*/
d92 1
a92 1
	daddr_t newblkno;
d102 2
a103 2
	daddr_t newblkno;
	daddr_t oldblkno;
d118 2
a119 2
	daddr_t newblkno;
	daddr_t oldblkno;
d132 1
a132 1
	daddr_t newblkno;
@


1.2.2.4
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d157 2
a158 2
int 
softdep_setup_directory_add(bp, dp, diroffset, newinum, newdirbp, isnewblk)
a163 1
	int isnewblk;
a166 1
	return (0);
@


1.1
log
@Add Kirk McKusick's soft update code.  This is an implementation of:
    http://www.ece.cmu.edu/~ganger/papers/CSE-TR-254-95/
This code currently has a restrictive copyright (for the time being)
and so is not enabled by default; "option FFS_SOFTUPDATES" will enable it.
Note that you will need to re-run config(8) as the old softdep stubs
have moved to ffs_softdep_stub.c.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_softdep.c,v 1.2 1997/11/07 10:28:37 niklas Exp $	*/
d249 8
@


