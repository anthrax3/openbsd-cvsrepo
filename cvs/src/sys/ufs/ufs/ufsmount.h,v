head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.8
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.6
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.12.0.36
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.38
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.30
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.34
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.32
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.28
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.26
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.24
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.22
	OPENBSD_5_0:1.12.0.20
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.18
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.16
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.12
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.14
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.10
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.8
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.6
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.11.0.6
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.6.0.2
	UBC_BASE:1.6
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2016.02.27.18.50.38;	author natano;	state Exp;
branches;
next	1.12;
commitid	gFybgYMymUyTbVeS;

1.12
date	2006.10.29.00.53.37;	author thib;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.03.20.14.03;	author drahn;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.20.03.44.06;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.28.24;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.22.20.51.24;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.19.08.58.07;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.27.05.27.12;	author art;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.06.01.01.48.52;	author millert;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	97.05.30.08.35.22;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.06.27.06.42.09;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.06.24.03.35.05;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.36;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2001.12.05.01.19.55;	author niklas;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2002.03.06.02.17.14;	author niklas;	state Exp;
branches;
next	1.5.4.3;

1.5.4.3
date	2003.06.07.11.09.09;	author ho;	state Exp;
branches;
next	1.5.4.4;

1.5.4.4
date	2004.02.19.11.01.43;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2002.06.11.03.32.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Move mnt_maxsymlink from struct mount to struct ufsmount.

The concept of differentiating between "short" and "long" symlinks is
specific to ufs/, so it shouldn't creep into the generic fs layer.
Inspired by a similar commit to NetBSD.

While there replace all references to mnt_maxsymlinklen in ufs/ext2fs
with EXT2_MAXSYMLINKLEN, which is the constant max short symlink len for
ext2fs. This allows to get rid of some (mnt_maxsymlinklen == 0) checks
there, which is always false for ext2fs.

input and ok stefan@@
ok millert@@
@
text
@/*	$OpenBSD: ufsmount.h,v 1.12 2006/10/29 00:53:37 thib Exp $	*/
/*	$NetBSD: ufsmount.h,v 1.4 1994/12/21 20:00:23 mycroft Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ufsmount.h	8.4 (Berkeley) 10/27/94
 */

struct buf;
struct inode;
struct nameidata;
struct timeval;
struct ucred;
struct uio;
struct vnode;
struct netexport;

/* This structure describes the UFS specific mount structure data. */
struct ufsmount {
	struct	mount *um_mountp;		/* filesystem vfs structure */
	dev_t	um_dev;				/* device mounted */
	struct	vnode *um_devvp;		/* block device mounted vnode */
	u_long	um_fstype;			/* type of file system */

	union {					/* pointer to superblock */
		struct	fs *fs;			/* FFS */
		struct  m_ext2fs *e2fs;		/* EXT2FS */
	} ufsmount_u;
#define	um_fs		ufsmount_u.fs
#define	um_e2fs		ufsmount_u.e2fs
#define	um_e2fsb	ufsmount_u.e2fs->s_es

	struct	vnode *um_quotas[MAXQUOTAS];	/* pointer to quota files */
	struct	ucred *um_cred[MAXQUOTAS];	/* quota file access cred */
	u_long	um_nindir;			/* indirect ptrs per block */
	u_long	um_bptrtodb;			/* indir ptr to disk block */
	u_long	um_seqinc;			/* inc between seq blocks */
	time_t	um_btime[MAXQUOTAS];		/* block quota time limit */
	time_t	um_itime[MAXQUOTAS];		/* inode quota time limit */
	char	um_qflags[MAXQUOTAS];		/* quota specific flags */
	struct	netexport um_export;		/* export information */
	u_int64_t um_savedmaxfilesize;		/* XXX - limit maxfilesize */
	u_int	um_maxsymlinklen;		/* max size of short symlink */
};

/*
 * Filesystem types
 */
#define	UM_UFS1	1
#define	UM_UFS2	2
#define	UM_EXT2FS	3

/*
 * Flags describing the state of quotas.
 */
#define	QTF_OPENING	0x01			/* Q_QUOTAON in progress */
#define	QTF_CLOSING	0x02			/* Q_QUOTAOFF in progress */

/* Convert mount ptr to ufsmount ptr. */
#define VFSTOUFS(mp)	((struct ufsmount *)((mp)->mnt_data))

/*
 * Macros to access file system parameters in the ufsmount structure.
 * Used by ufs_bmap.
 */
#define MNINDIR(ump)			((ump)->um_nindir)
#define	blkptrtodb(ump, b)		((b) << (ump)->um_bptrtodb)
#define	is_sequential(ump, a, b)	((b) == (a) + ump->um_seqinc)
@


1.12
log
@LFS and FFS shared the same read and write vnops, through
the macro games in ufs_readwrite.c (LFS_READWRITE) now that
LFS has gone, make these functions ffs specific and move them
into ffs/ffs_vnops.c zapping ufs_readwrite.c in the process.
Also, remove lfs fields from the inode and ufsmount structs.

ok toby@@,deraadt@@,pedro@@
testing and ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.11 2005/07/03 20:14:03 drahn Exp $	*/
d69 1
@


1.11
log
@Extended Attributes was a piece to get to ACLs, however ACLs have not
been worked on, so EA is pointless. Also the code is not enabled
in GENERIC so it is not being tested or maintained.
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.10 2004/01/20 03:44:06 tedu Exp $	*/
a52 1
		struct	lfs *lfs;		/* LFS */
d55 3
a57 4
#define	um_fs	ufsmount_u.fs
#define	um_lfs	ufsmount_u.lfs
#define um_e2fs    ufsmount_u.e2fs
#define um_e2fsb ufsmount_u.e2fs->s_es
a76 1
#define	UM_LFS	4
@


1.10
log
@some pieces of ufs2.  help testing otto sturm
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.9 2003/06/02 23:28:24 millert Exp $	*/
a70 1
	struct  ufs_extattr_per_mount um_extattr;       /* extended attrs */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.8 2002/02/22 20:51:24 drahn Exp $	*/
d49 1
d73 8
@


1.8
log
@Extended Attribute support from FreeBSD/TrustedBSD ok art@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.7 2001/12/19 08:58:07 art Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@UBC was a disaster. It worked very good when it worked, but on some
machines or some configurations or in some phase of the moon (we actually
don't know when or why) files disappeared. Since we've not been able to
track down the problem in two weeks intense debugging and we need -current
to be stable, back out everything to a state it had before UBC.

We apologise for the inconvenience.
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.5 1999/06/01 01:48:52 millert Exp $	*/
d74 1
@


1.6
log
@Merge in the unified buffer cache code as found in NetBSD 2001/03/10. The
code is written mostly by Chuck Silvers <chuq@@chuq.com>/<chs@@netbsd.org>.

Tested for the past few weeks by many developers, should be in a pretty stable
state, but will require optimizations and additional cleanups.
@
text
@a66 1
	u_long	um_lognindir;			/* log2 of um_nindir */
@


1.6.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.6 2001/11/27 05:27:12 art Exp $	*/
a74 1
	struct  ufs_extattr_per_mount um_extattr;       /* extended attrs */
@


1.5
log
@minor comment beautification
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.4 1997/05/30 08:35:22 downsj Exp $	*/
d67 1
@


1.5.4.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a66 1
	u_long	um_lognindir;			/* log2 of um_nindir */
@


1.5.4.2
log
@Merge in trunk
@
text
@d67 1
a74 1
	struct  ufs_extattr_per_mount um_extattr;       /* extended attrs */
@


1.5.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.5.4.2 2002/03/06 02:17:14 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a48 1
	u_long	um_fstype;			/* type of file system */
a71 8

/*
 * Filesystem types
 */
#define	UM_UFS1	1
#define	UM_UFS2	2
#define	UM_EXT2FS	3
#define	UM_LFS	4
@


1.4
log
@Integrate new ext2fs, reverting ufs support for the old one.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 1
a57 1
		struct  m_ext2fs *e2fs; /* EXT2FS */
@


1.3
log
@Moving some things around; struct inode still ends up bigger, though.
This should, hopefully, be the last UFS changes required.
@
text
@d1 1
a1 1
/*	$OpenBSD: ufsmount.h,v 1.2 1996/06/24 03:35:05 downsj Exp $	*/
d57 1
a57 1
		struct	ext2_sb_info *e2fs;	/* EXT2FS */
d61 1
a61 1
#define um_e2fs	ufsmount_u.e2fs
a73 1
	struct	ufs_dirops *um_dirops;		/* per-fs directory ops. */
@


1.2
log
@ufs changes: add the notion of directory operators.

gnu/ext2fs: add the second extended filesystem.

Note that I'm commiting this now for the sake of the ufs changes; ext2fs
is not yet fully integrated into the system.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d74 1
@


1.1
log
@Initial revision
@
text
@d1 1
d55 1
d57 1
a57 1
		struct	fs *fs;			/* FFS */
d61 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
