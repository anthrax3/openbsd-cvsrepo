head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.12
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.14
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.2
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.13.0.6
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	R19970424:1.1.1.1
	BOUYER:1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2014.07.31.17.37.52;	author pelikan;	state Exp;
branches;
next	1.16;
commitid	0juiBhtI3vf1GIxq;

1.16
date	2014.07.11.12.53.19;	author pelikan;	state Exp;
branches;
next	1.15;
commitid	YAPxJaiLwzIQbXU5;

1.15
date	2014.07.11.12.08.21;	author pelikan;	state Exp;
branches;
next	1.14;
commitid	xTkX7KC9qvI2SOnE;

1.14
date	2014.07.10.09.24.18;	author pelikan;	state Exp;
branches;
next	1.13;
commitid	qkMPClqJrQ3Iamib;

1.13
date	2013.05.30.19.19.09;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2010.02.16.08.24.13;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2008.11.23.23.52.35;	author tedu;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.06.17.51.27;	author pedro;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.06.17.43.14;	author pedro;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.30.10.37.40;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.18.00.06.21;	author art;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2000.04.26.23.24.40;	author jasoni;	state Exp;
branches;
next	1.3;

1.3
date	97.06.12.21.09.32;	author downsj;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.05.30.08.33.46;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.05.30.05.18.51;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.30.05.18.51;	author downsj;	state Exp;
branches;
next	;

1.3.12.1
date	2001.05.14.22.47.39;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2001.10.31.03.32.13;	author nate;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2002.03.28.14.54.25;	author niklas;	state Exp;
branches;
next	1.3.12.4;

1.3.12.4
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.11.03.32.49;	author art;	state Exp;
branches;
next	;


desc
@@


1.17
log
@use proper on-disk inode size: no more, no less.

Reported by Roman Yakovlev, thanks!

"do it now" deraadt
@
text
@/*	$OpenBSD: ext2fs_dinode.h,v 1.16 2014/07/11 12:53:19 pelikan Exp $	*/
/*	$NetBSD: ext2fs_dinode.h,v 1.6 2000/01/26 16:21:33 bouyer Exp $	*/

/*
 * Copyright (c) 1997 Manuel Bouyer.
 * Copyright (c) 1982, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dinode.h	8.6 (Berkeley) 9/13/94
 *  Modified for ext2fs by Manuel Bouyer.
 */

#include <sys/stat.h>
#include <ufs/ufs/dinode.h>	/* for ufsino_t */

/*
 * The root inode is the root of the file system.  Inode 0 can't be used for
 * normal purposes and bad blocks are normally linked to inode 1, thus
 * the root inode is 2.
 * Inode 3 to 10 are reserved in ext2fs.
 */
#define	EXT2_ROOTINO ((ufsino_t)2)
#define EXT2_RESIZEINO ((ufsino_t)7)
#define EXT2_FIRSTINO ((ufsino_t)11)

/*
 * A dinode contains all the meta-data associated with a UFS file.
 * This structure defines the on-disk format of a dinode. Since
 * this structure describes an on-disk structure, all its fields
 * are defined by types with precise widths.
 */

#define	NDADDR	12			/* Direct addresses in inode. */
#define	NIADDR	3			/* Indirect addresses in inode. */

#define EXT2_MAXSYMLINKLEN ((NDADDR+NIADDR) * sizeof (u_int32_t))

struct ext2fs_dinode {
	u_int16_t	e2di_mode;	/*   0: IFMT, permissions; see below. */
	u_int16_t	e2di_uid_low;	/*   2: owner UID, bits 15:0 */
	u_int32_t	e2di_size;	/*   4: file size (bytes) bits 31:0 */
	u_int32_t	e2di_atime;	/*   8: Access time */
	u_int32_t	e2di_ctime;	/*  12: Change time */
	u_int32_t	e2di_mtime;	/*  16: Modification time */
	u_int32_t	e2di_dtime;	/*  20: Deletion time */
	u_int16_t	e2di_gid_low;	/*  24: Owner GID, lowest bits */
	u_int16_t	e2di_nlink;	/*  26: File link count */
	u_int32_t	e2di_nblock;	/*  28: blocks count */
	u_int32_t	e2di_flags;	/*  32: status flags (chflags) */
	u_int32_t	e2di_version_lo; /* 36: inode version, bits 31:0 */
	u_int32_t	e2di_blocks[NDADDR+NIADDR]; /* 40: disk blocks */
	u_int32_t	e2di_gen;	/* 100: generation number */
	u_int32_t	e2di_facl;	/* 104: file ACL, bits 31:0 */
	u_int32_t	e2di_size_hi;	/* 108: file size (bytes), bits 63:32 */
	u_int32_t	e2di_faddr;	/* 112: fragment address (obsolete) */
	u_int16_t	e2di_nblock_hi;	/* 116: blocks count, bits 47:32 */
	u_int16_t	e2di_facl_hi;	/* 118: file ACL, bits 47:32 */
	u_int16_t	e2di_uid_high;	/* 120: owner UID, bits 31:16 */
	u_int16_t	e2di_gid_high;	/* 122: owner GID, bits 31:16 */
	u_int16_t	e2di_chksum_lo;	/* 124: inode checksum, bits 15:0 */
	u_int16_t	e2di__reserved;	/* 126: 	unused */
	u_int16_t	e2di_isize;	/* 128: size of this inode */
	u_int16_t	e2di_chksum_hi;	/* 130: inode checksum, bits 31:16 */
	u_int32_t	e2di_x_ctime;	/* 132: extra Change time */
	u_int32_t	e2di_x_mtime;	/* 136: extra Modification time */
	u_int32_t	e2di_x_atime;	/* 140: extra Access time */
	u_int32_t	e2di_crtime;	/* 144: Creation (birth) time */
	u_int32_t	e2di_x_crtime;	/* 148: extra Creation (birth) time */
	u_int32_t	e2di_version_hi; /* 152: inode version, bits 63:31 */
};

#define	E2MAXSYMLINKLEN	((NDADDR + NIADDR) * sizeof(u_int32_t))

/* File permissions. */
#define	EXT2_IEXEC		0000100		/* Executable. */
#define	EXT2_IWRITE		0000200		/* Writeable. */
#define	EXT2_IREAD		0000400		/* Readable. */
#define	EXT2_ISVTX		0001000		/* Sticky bit. */
#define	EXT2_ISGID		0002000		/* Set-gid. */
#define	EXT2_ISUID		0004000		/* Set-uid. */

/* File types. */
#define	EXT2_IFMT		0170000		/* Mask of file type. */
#define	EXT2_IFIFO		0010000		/* Named pipe (fifo). */
#define	EXT2_IFCHR		0020000		/* Character device. */
#define	EXT2_IFDIR		0040000		/* Directory file. */
#define	EXT2_IFBLK		0060000		/* Block device. */
#define	EXT2_IFREG		0100000		/* Regular file. */
#define	EXT2_IFLNK		0120000		/* Symbolic link. */
#define	EXT2_IFSOCK		0140000		/* UNIX domain socket. */

/* file flags */
#define EXT2_SECRM		0x00000001	/* Secure deletion */
#define EXT2_UNRM		0x00000002	/* Undelete */
#define EXT2_COMPR		0x00000004	/* Compress file */
#define EXT2_SYNC		0x00000008	/* Synchronous updates */
#define EXT2_IMMUTABLE		0x00000010	/* Immutable file */
#define EXT2_APPEND		0x00000020	/* writes to file may only append */
#define EXT2_NODUMP		0x00000040	/* do not dump file */
#define EXT2_NOATIME		0x00000080	/* do not update access time */
#define EXT4_INDEX		0x00001000	/* hash-indexed directory */
#define EXT4_JOURNAL_DATA	0x00004000	/* file data should be journaled */
#define EXT4_DIRSYNC		0x00010000	/* all dirent updates done synchronously */
#define EXT4_TOPDIR		0x00020000	/* top of directory hierarchies */
#define EXT4_HUGE_FILE		0x00040000	/* nblocks unit is fsb, not db */
#define EXT4_EXTENTS		0x00080000	/* inode uses extents */
#define EXT4_EOFBLOCKS		0x00400000	/* blocks allocated beyond EOF */

/* Size of on-disk inode. */
#define EXT2_REV0_DINODE_SIZE	128
#define EXT2_DINODE_SIZE(fs)	((fs)->e2fs.e2fs_rev > E2FS_REV0 ?  \
				    (fs)->e2fs.e2fs_inode_size : \
				    EXT2_REV0_DINODE_SIZE)

/*
 * The e2di_blocks fields may be overlaid with other information for
 * file types that do not have associated disk storage. Block
 * and character devices overlay the first data block with their
 * dev_t value. Short symbolic links place their path in the
 * di_db area.
 */

#define e2di_rdev		e2di_blocks[0]
#define e2di_shortlink	e2di_blocks

/* e2fs needs byte swapping on big-endian systems */
#if BYTE_ORDER == LITTLE_ENDIAN
#	define e2fs_iload(fs, old, new)	\
		memcpy((new),(old), MIN(EXT2_DINODE_SIZE(fs), sizeof(*new)))
#	define e2fs_isave(fs, old, new) \
		memcpy((new),(old), MIN(EXT2_DINODE_SIZE(fs), sizeof(*new)))
#else
struct m_ext2fs;
void e2fs_i_bswap(struct m_ext2fs *, struct ext2fs_dinode *, struct ext2fs_dinode *);
#	define e2fs_iload(fs, old, new) e2fs_i_bswap((fs), (old), (new))
#	define e2fs_isave(fs, old, new) e2fs_i_bswap((fs), (old), (new))
#endif
@


1.16
log
@sizeof good old inode is 128, the structure has expanded
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.15 2014/07/11 12:08:21 pelikan Exp $	*/
d157 4
a160 2
#	define e2fs_iload(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
#	define e2fs_isave(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
d162 4
a165 3
void e2fs_i_bswap(struct ext2fs_dinode *, struct ext2fs_dinode *);
#	define e2fs_iload(old, new) e2fs_i_bswap((old), (new))
#	define e2fs_isave(old, new) e2fs_i_bswap((old), (new))
@


1.15
log
@updated inode format, whitespace, re-formatting
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.14 2014/07/10 09:24:18 pelikan Exp $	*/
d139 1
a139 1
#define EXT2_REV0_DINODE_SIZE	sizeof(struct ext2fs_dinode)
@


1.14
log
@prepare for upcoming ext4 read support

Parts of the on-disk inode changed their meaning in order to support bigger
sizes.  More flags & prettification.  No functional change.

ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.13 2013/05/30 19:19:09 guenther Exp $	*/
d69 6
a74 6
	u_int16_t	e2di_uid_low;	/*   2: Owner UID, lowest bits */
	u_int32_t	e2di_size;	/*	 4: Size (in bytes) */
	u_int32_t	e2di_atime;	/*	 8: Access time */
	u_int32_t	e2di_ctime;	/*	12: Create time */
	u_int32_t	e2di_mtime;	/*	16: Modification time */
	u_int32_t	e2di_dtime;	/*	20: Deletion time */
d77 3
a79 3
	u_int32_t	e2di_nblock;	/*  28: Blocks count */
	u_int32_t	e2di_flags;	/*  32: Status flags (chflags) */
	u_int32_t	e2di_linux_reserved1; /* 36 */
d82 2
a83 2
	u_int32_t	e2di_facl;	/* 104: file ACL (not implemented) */
	u_int32_t	e2di_dacl;	/* 108: dir ACL (not implemented) */
d85 14
a98 5
	u_int16_t	e2di_nblock_hi;	/* 116: Blocks count bits 47:32 */
	u_int16_t	e2di_facl_hi;	/* 118: file ACL bits 47:32 */
	u_int16_t	e2di_uid_high;	/* 120: 16 highest bits of uid */
	u_int16_t	e2di_gid_high;	/* 122: 16 highest bits of gid */
	u_int32_t	e2di_linux_reserved3; /* 124 */
@


1.13
log
@UFS does't do inode numbers >2^32, so use a smaller type internally,
only using ino_t in the VFS layer APIs: vget, readdir, getattr.

otto wrote the original diff for libsa to keep bootblock from overflowing
ok deraadt@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.12 2010/02/16 08:24:13 otto Exp $	*/
d84 3
a86 4
	u_int32_t	e2di_faddr;	/* 112: fragment address */
	u_int8_t	e2di_nfrag;	/* 116: fragment number */
	u_int8_t	e2di_fsize;	/* 117: fragment size */
	u_int16_t	e2di_linux_reserved2; /* 118 */
d117 1
a117 1
#define EXT2_IMMUTABLE	0x00000010	/* Immutable file */
d120 8
@


1.12
log
@add some defines needed for the upcoming newfs_ext2fs; ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.11 2008/11/23 23:52:35 tedu Exp $	*/
d43 1
d51 3
a53 3
#define	EXT2_ROOTINO ((ino_t)2)
#define EXT2_RESIZEINO ((ino_t)7)
#define EXT2_FIRSTINO ((ino_t)11)
@


1.11
log
@fancy new ext2fs can have big inodes.  we can possibly still read them
though if no new features are in play.  diff from Wouter Godefroy
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.10 2005/10/06 17:51:27 pedro Exp $	*/
d51 1
d122 4
a125 1
#define EXT2_DINODE_SIZE(s)	(s)->e2fs.e2fs_inode_size
@


1.10
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.9 2005/10/06 17:43:14 pedro Exp $	*/
d121 1
a121 1
#define	EXT2_DINODE_SIZE	(sizeof(struct ext2fs_dinode))	/* 128 */
@


1.9
log
@Use part of the reserved space on the disk inode to scatter 16 more bits
for the UID and GID, making them 32-bit. Based on what Linux does, with
a slightly different implementation. Endianess issue in fsck noted by
miod@@, okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.8 2003/06/02 23:28:22 millert Exp $	*/
d69 1
a69 1
	u_int32_t	e2di_atime;	/*	 8: Acces time */
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.7 2002/03/30 10:37:40 niklas Exp $	*/
d67 1
a67 1
	u_int16_t	e2di_uid;	/*   2: Owner UID */
d73 1
a73 1
	u_int16_t	e2di_gid;	/*  24: Owner GID */
d86 3
a88 1
	u_int32_t	e2di_linux_reserved3[2]; /* 120 */
a89 1
	
a90 1
	
@


1.7
log
@RCSId
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.6 2000/01/26 16:21:33 bouyer Exp $	*/
d22 1
a22 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
@


1.5
log
@More cleanups from NetBSD and a bunch of endianness fixes.
The file ext2fs_bswap.c contains some functions to aid bigendian machines.
@
text
@d142 1
a142 1
void e2fs_i_bswap __P((struct ext2fs_dinode *, struct ext2fs_dinode *));
@


1.5.4.1
log
@Sync UBC branch to -current
@
text
@a0 1
/*	$OpenBSD$	*/
d142 1
a142 1
void e2fs_i_bswap(struct ext2fs_dinode *, struct ext2fs_dinode *);
@


1.4
log
@Support for ext2fs rev. 1 (from NetBSD)
@
text
@d1 1
a1 2
/*	$OpenBSD: ext2fs_dinode.h,v 1.3 1997/06/12 21:09:32 downsj Exp $	*/
/*	$NetBSD: ext2fs_dinode.h,v 1.1 1997/06/11 09:33:48 bouyer Exp $	*/
d17 1
a17 1
 *	notice, this list of conditions and the following disclaimer.
d19 2
a20 2
 *	notice, this list of conditions and the following disclaimer in the
 *	documentation and/or other materials provided with the distribution.
d22 1
a22 1
 *	must display the following acknowledgement:
d26 2
a27 2
 *	may be used to endorse or promote products derived from this software
 *	without specific prior written permission.
d78 1
a78 1
	u_int32_t	e2di_nblock;/*  28: Blocks count */
d82 6
a87 6
	u_int32_t	e2di_gen;		/* 100: generation number (file version) */
	u_int32_t	e2di_facl;		/* 104: file ACL (not implemented) */
	u_int32_t	e2di_dacl;		/* 108: dir ACL (not implemented) */
	u_int32_t	e2di_faddr;		/* 112: fragment address */
	u_int8_t	e2di_nfrag;		/* 116: fragment number */
	u_int8_t	e2di_fsize;		/* 117: fragment size */
d119 1
a119 1
#define EXT2_IMMUTABLE		0x00000010	/* Immutable file */
d135 1
a135 1
#define e2di_shortlink		e2di_blocks
d137 9
a145 6
/*
 * e2fs needs byte swapping on big-endian systems.  Use macros here to 
 * aide in big-endian support.
 */
#define e2fs_iload(old, new) bcopy((old),(new),sizeof(struct ext2fs_dinode))
#define e2fs_isave(old, new) bcopy((old),(new),sizeof(struct ext2fs_dinode))
@


1.3
log
@Sync with NetBSD, mostly cosmetic.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.2 1997/05/30 08:33:46 downsj Exp $	*/
d120 1
a120 1
#define EXT2_IMMUTABLE	0x00000010	/* Immutable file */
d124 3
d136 8
a143 1
#define e2di_shortlink	e2di_blocks
@


1.3.12.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.4 2000/04/26 23:24:40 jasoni Exp $	*/
d120 1
a120 1
#define EXT2_IMMUTABLE		0x00000010	/* Immutable file */
a123 3
/* Size of on-disk inode. */
#define	EXT2_DINODE_SIZE	(sizeof(struct ext2fs_dinode))	/* 128 */

d133 1
a133 8
#define e2di_shortlink		e2di_blocks

/*
 * e2fs needs byte swapping on big-endian systems.  Use macros here to 
 * aide in big-endian support.
 */
#define e2fs_iload(old, new) bcopy((old),(new),sizeof(struct ext2fs_dinode))
#define e2fs_isave(old, new) bcopy((old),(new),sizeof(struct ext2fs_dinode))
@


1.3.12.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD: ext2fs_dinode.h,v 1.3.12.1 2001/05/14 22:47:39 niklas Exp $	*/
/*	$NetBSD: ext2fs_dinode.h,v 1.6 2000/01/26 16:21:33 bouyer Exp $	*/
d18 1
a18 1
 *    notice, this list of conditions and the following disclaimer.
d20 2
a21 2
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d23 1
a23 1
 *    must display the following acknowledgement:
d27 2
a28 2
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d79 1
a79 1
	u_int32_t	e2di_nblock;	/*  28: Blocks count */
d83 6
a88 6
	u_int32_t	e2di_gen;	/* 100: generation number */
	u_int32_t	e2di_facl;	/* 104: file ACL (not implemented) */
	u_int32_t	e2di_dacl;	/* 108: dir ACL (not implemented) */
	u_int32_t	e2di_faddr;	/* 112: fragment address */
	u_int8_t	e2di_nfrag;	/* 116: fragment number */
	u_int8_t	e2di_fsize;	/* 117: fragment size */
d120 1
a120 1
#define EXT2_IMMUTABLE	0x00000010	/* Immutable file */
d136 1
a136 1
#define e2di_shortlink	e2di_blocks
d138 6
a143 9
/* e2fs needs byte swapping on big-endian systems */
#if BYTE_ORDER == LITTLE_ENDIAN
#	define e2fs_iload(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
#	define e2fs_isave(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
#else
void e2fs_i_bswap __P((struct ext2fs_dinode *, struct ext2fs_dinode *));
#	define e2fs_iload(old, new) e2fs_i_bswap((old), (new))
#	define e2fs_isave(old, new) e2fs_i_bswap((old), (new))
#endif
@


1.3.12.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d143 1
a143 1
void e2fs_i_bswap(struct ext2fs_dinode *, struct ext2fs_dinode *);
@


1.3.12.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.3.12.3 2002/03/28 14:54:25 niklas Exp $	*/
d22 5
a26 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@Integrate new ext2fs, reverting ufs support for the old one.
@
text
@d1 2
a2 4
/*	$OpenBSD$	*/
/*	$NetBSD: dinode.h,v 1.7 1995/06/15 23:22:48 cgd Exp $	*/

/* Modified for EXT2FS on NetBSD by Manuel Bouyer, April 1997 */
d5 1
d43 1
d132 2
a133 2
#define e2di_rdev         e2di_blocks[0]
#define e2di_shortlink    e2di_blocks
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Non-GPLd ext2fs code from Manuel, unmodified.
@
text
@@
