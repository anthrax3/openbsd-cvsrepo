head	1.11;
access;
symbols
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.14
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.10
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.6
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.2
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.8
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.32
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.30
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.26
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.28
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	R19970424:1.1.1.1
	BOUYER:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2014.07.11.07.59.04;	author pelikan;	state Exp;
branches;
next	1.10;
commitid	yEmnkjDnfpCG9P4r;

1.10
date	2014.05.27.14.31.24;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.02.06.41.12;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.08.08.26.41;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.18.00.25.59;	author art;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2000.04.26.23.24.40;	author jasoni;	state Exp;
branches;
next	1.3;

1.3
date	97.06.12.21.09.32;	author downsj;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.05.30.08.33.49;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.05.30.05.18.51;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.30.05.18.51;	author downsj;	state Exp;
branches;
next	;

1.3.12.1
date	2001.05.14.22.47.39;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2001.10.31.03.32.13;	author nate;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2002.03.28.14.54.25;	author niklas;	state Exp;
branches;
next	1.3.12.4;

1.3.12.4
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.11.03.32.49;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@separate searchslot variables into a structure like FreeBSD

ok guenther
@
text
@/*	$OpenBSD: ext2fs_dir.h,v 1.10 2014/05/27 14:31:24 krw Exp $	*/
/*	$NetBSD: ext2fs_dir.h,v 1.4 2000/01/28 16:00:23 bouyer Exp $	*/

/*
 * Copyright (c) 1997 Manuel Bouyer.
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dir.h	8.4 (Berkeley) 8/10/94
 * Modified for ext2fs by Manuel Bouyer.
 */

#ifndef _EXT2FS_DIR_H_
#define	_EXT2FS_DIR_H_

/*
 * Theoretically, directories can be more than 2Gb in length, however, in
 * practice this seems unlikely. So, we define the type doff_t as a 32-bit
 * quantity to keep down the cost of doing lookup on a 32-bit machine.
 */
#define	doff_t		int32_t
#define	EXT2FS_MAXDIRSIZE	(0x7fffffff)

/*
 * A directory consists of some number of blocks of e2fs_bsize bytes.
 *
 * Each block contains some number of directory entry
 * structures, which are of variable length.  Each directory entry has
 * a struct direct at the front of it, containing its inode number,
 * the length of the entry, and the length of the name contained in
 * the entry.  These are followed by the name padded to a 4 byte boundary
 * with null bytes.  All names are guaranteed null terminated.
 * The maximum length of a name in a directory is EXT2FS_MAXNAMLEN.
 *
 * The macro EXT2FS_DIRSIZ(fmt, dp) gives the amount of space required to
 * represent a directory entry.  Free space in a directory is represented by
 * entries which have dp->e2d_reclen > DIRSIZ(fmt, dp).  All d2fs_bsize bytes
 * in a directory block are claimed by the directory entries.  This
 * usually results in the last entry in a directory having a large
 * dp->e2d_reclen.  When entries are deleted from a directory, the
 * space is returned to the previous entry in the same directory
 * block by increasing its dp->e2d_reclen.  If the first entry of
 * a directory block is free, then its dp->e2d_ino is set to 0.
 * Entries other than the first in a directory do not normally have
 * dp->e2d_ino set to 0.
 * Ext2 rev 0 has a 16 bits e2d_namlen. For Ext2 rev 1 this has been split
 * into a 8 bits e2d_namlen and 8 bits e2d_type (looks like ffs, isnt't it ? :)
 * It's safe to use this for rev 0 as well because all ext2 are little-endian.
 */

#define	EXT2FS_MAXNAMLEN	255

struct	ext2fs_direct {
	u_int32_t e2d_ino;		/* inode number of entry */
	u_int16_t e2d_reclen;		/* length of this record */
	u_int8_t e2d_namlen;		/* length of string in d_name */
	u_int8_t e2d_type;		/* file type */
	char	  e2d_name[EXT2FS_MAXNAMLEN];/* name with length <= EXT2FS_MAXNAMLEN */
};

enum slotstatus {
	NONE,
	COMPACT,
	FOUND
};

struct ext2fs_searchslot {
	enum slotstatus	slotstatus;
	doff_t		slotoffset;	/* offset of area with free space */
	int		slotsize;	/* size of area at slotoffset */
	int		slotfreespace;	/* amount of space free in slot */
	int		slotneeded;	/* sizeof the entry we are seeking */
};

/* Ext2 directory file types (not the same as FFS. Sigh. */
#define EXT2_FT_UNKNOWN         0
#define EXT2_FT_REG_FILE        1
#define EXT2_FT_DIR             2
#define EXT2_FT_CHRDEV          3
#define EXT2_FT_BLKDEV          4
#define EXT2_FT_FIFO            5
#define EXT2_FT_SOCK            6
#define EXT2_FT_SYMLINK         7

#define EXT2_FT_MAX             8

#define E2IFTODT(mode)    (((mode) & 0170000) >> 12)

static __inline__ u_int8_t inot2ext2dt(u_int16_t)
    __attribute__((__unused__));
static __inline__ u_int8_t
inot2ext2dt(u_int16_t type)
{
	switch(type) {
	case E2IFTODT(EXT2_IFIFO):
		return EXT2_FT_FIFO;
	case E2IFTODT(EXT2_IFCHR):
		return EXT2_FT_CHRDEV;
	case E2IFTODT(EXT2_IFDIR):
		return EXT2_FT_DIR;
	case E2IFTODT(EXT2_IFBLK):
		return EXT2_FT_BLKDEV;
	case E2IFTODT(EXT2_IFREG):
		return EXT2_FT_REG_FILE;
	case E2IFTODT(EXT2_IFLNK):
		return EXT2_FT_SYMLINK;
	case E2IFTODT(EXT2_IFSOCK):
		return EXT2_FT_SOCK;
	default:
		return 0;
	}
}

/*
 * The EXT2FS_DIRSIZ macro gives the minimum record length which will hold
 * the directory entryfor a name len "len" (without the terminating null byte).
 * This requires the amount of space in struct direct
 * without the d_name field, plus enough space for the name without a
 * terminating null byte, rounded up to a 4 byte boundary.
 */
#define EXT2FS_DIRSIZ(len) \
   (( 8 + len + 3) &~ 3)

/*
 * Template for manipulating directories.  Should use struct direct's,
 * but the name field is EXT2FS_MAXNAMLEN - 1, and this just won't do.
 */
struct ext2fs_dirtemplate {
	u_int32_t	dot_ino;
	int16_t		dot_reclen;
	u_int8_t	dot_namlen;
	u_int8_t	dot_type;
	char		dot_name[4];	/* must be multiple of 4 */
	u_int32_t	dotdot_ino;
	int16_t		dotdot_reclen;
	u_int8_t	dotdot_namlen;
	u_int8_t	dotdot_type;
	char		dotdot_name[4];	/* ditto */
};

#endif /* !_EXT2FS_DIR_H_ */
@


1.10
log
@Zap a bunch of trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.9 2013/06/02 06:41:12 guenther Exp $	*/
d88 14
@


1.9
log
@Typo
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.8 2011/07/08 08:26:41 jsg Exp $	*/
d92 1
a92 1
#define EXT2_FT_REG_FILE        1 
@


1.8
log
@ansi, no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.7 2003/06/02 23:28:22 millert Exp $	*/
d75 1
a75 1
 * Ext2 rev 0 has a 16 bits e2d_namlen. For Ext2 vev 1 this has been split
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.6 2002/03/14 01:27:14 millert Exp $	*/
d107 1
a107 2
inot2ext2dt(type)
	u_int16_t type;
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.5 2001/09/18 00:25:59 art Exp $	*/
d22 1
a22 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@cosmetic fixes from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 1
a108 1
static __inline__ u_int8_t inot2ext2dt __P((u_int16_t))
@


1.5.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.5 2001/09/18 00:25:59 art Exp $	*/
d108 1
a108 1
static __inline__ u_int8_t inot2ext2dt(u_int16_t)
@


1.4
log
@Support for ext2fs rev. 1 (from NetBSD)
@
text
@d1 2
a2 2
/*	$OpenBSD: ext2fs_dir.h,v 1.3 1997/06/12 21:09:32 downsj Exp $	*/
/*	$NetBSD: ext2fs_dir.h,v 1.1 1997/06/11 09:33:50 bouyer Exp $	*/
d53 1
a53 1
*/
d79 3
d103 1
@


1.3
log
@Sync with NetBSD, mostly cosmetic.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.2 1997/05/30 08:33:49 downsj Exp $	*/
d86 2
a87 1
	u_int16_t e2d_namlen;		/* length of string in d_name */
d91 39
d147 2
a148 1
	u_int16_t	dot_namlen;
d152 2
a153 1
	u_int16_t	dotdot_namlen;
@


1.3.12.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.4 2000/04/26 23:24:40 jasoni Exp $	*/
d86 1
a86 2
	u_int8_t e2d_namlen;		/* length of string in d_name */
	u_int8_t e2d_type;		/* file type */
a89 39
/* Ext2 directory file types (not the same as FFS. Sigh. */
#define EXT2_FT_UNKNOWN         0
#define EXT2_FT_REG_FILE        1 
#define EXT2_FT_DIR             2
#define EXT2_FT_CHRDEV          3
#define EXT2_FT_BLKDEV          4
#define EXT2_FT_FIFO            5
#define EXT2_FT_SOCK            6
#define EXT2_FT_SYMLINK         7
#define EXT2_FT_MAX             8

#define E2IFTODT(mode)    (((mode) & 0170000) >> 12)

static __inline__ u_int8_t inot2ext2dt __P((u_int16_t))
    __attribute__((__unused__));
static __inline__ u_int8_t
inot2ext2dt(type)
	u_int16_t type;
{
	switch(type) {
	case E2IFTODT(EXT2_IFIFO):
		return EXT2_FT_FIFO;
	case E2IFTODT(EXT2_IFCHR):
		return EXT2_FT_CHRDEV;
	case E2IFTODT(EXT2_IFDIR):
		return EXT2_FT_DIR;
	case E2IFTODT(EXT2_IFBLK):
		return EXT2_FT_BLKDEV;
	case E2IFTODT(EXT2_IFREG):
		return EXT2_FT_REG_FILE;
	case E2IFTODT(EXT2_IFLNK):
		return EXT2_FT_SYMLINK;
	case E2IFTODT(EXT2_IFSOCK):
		return EXT2_FT_SOCK;
	default:
		return 0;
	}
}

d107 1
a107 2
	u_int8_t	dot_namlen;
	u_int8_t	dot_type;
d111 1
a111 2
	u_int8_t	dotdot_namlen;
	u_int8_t	dotdot_type;
@


1.3.12.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD: ext2fs_dir.h,v 1.3.12.1 2001/05/14 22:47:39 niklas Exp $	*/
/*	$NetBSD: ext2fs_dir.h,v 1.4 2000/01/28 16:00:23 bouyer Exp $	*/
d53 1
a53 1
 */
a78 3
 * Ext2 rev 0 has a 16 bits e2d_namlen. For Ext2 vev 1 this has been split
 * into a 8 bits e2d_namlen and 8 bits e2d_type (looks like ffs, isnt't it ? :)
 * It's safe to use this for rev 0 as well because all ext2 are little-endian.
a99 1

@


1.3.12.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 1
a108 1
static __inline__ u_int8_t inot2ext2dt(u_int16_t)
@


1.3.12.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dir.h,v 1.3.12.3 2002/03/28 14:54:25 niklas Exp $	*/
d22 5
a26 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@Integrate new ext2fs, reverting ufs support for the old one.
@
text
@d1 2
a2 4
/*	$OpenBSD$	*/
/*	$NetBSD: dir.h,v 1.8 1996/03/09 19:42:41 scottr Exp $	*/

/* Modified for EXT2FS on NetBSD by Manuel Bouyer, April 1997 */
d5 1
d43 1
d98 1
a98 1
    (( 8 + len + 3) &~ 3)
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Non-GPLd ext2fs code from Manuel, unmodified.
@
text
@@
