head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.4
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.20
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.22
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.14
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.18
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.16
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.12
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.10
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.8
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.6
	OPENBSD_5_0:1.18.0.4
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.15.0.10
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.6
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.8
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.4
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.2
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.4
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.6
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.4
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.6
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.4
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.2
	SMP_BASE:1.8
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2016.04.26.18.37.03;	author natano;	state Exp;
branches;
next	1.18;
commitid	WbumX8gCUOD8jZ5X;

1.18
date	2010.12.21.20.14.44;	author thib;	state Exp;
branches;
next	1.17;

1.17
date	2010.09.10.16.34.09;	author thib;	state Exp;
branches;
next	1.16;

1.16
date	2010.09.06.23.44.10;	author thib;	state Exp;
branches;
next	1.15;

1.15
date	2008.05.03.14.41.29;	author thib;	state Exp;
branches;
next	1.14;

1.14
date	2007.12.04.19.32.13;	author otto;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.28.19.31.31;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.28.13.18.17;	author pedro;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.28.23;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.27.15;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.20.01.50.12;	author assar;	state Exp;
branches
	1.9.6.1;
next	1.8;

1.8
date	2000.02.07.04.57.18;	author assar;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	98.08.06.19.35.09;	author csapuntz;	state Exp;
branches;
next	1.6;

1.6
date	98.02.08.22.41.52;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	97.11.06.05.59.23;	author csapuntz;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.20.21.40;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.10.06.15.27.12;	author csapuntz;	state Exp;
branches;
next	1.2;

1.2
date	96.02.27.07.15.46;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.34;	author deraadt;	state Exp;
branches;
next	;

1.8.2.1
date	2001.05.14.22.47.42;	author niklas;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2002.03.28.14.54.26;	author niklas;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2003.06.07.11.09.09;	author ho;	state Exp;
branches;
next	;

1.9.6.1
date	2002.06.11.03.32.50;	author art;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Populate all necessary statfs members in .vfs_statfs. cd9660, udf,
msdosfs and nfsv2 don't set f_namemax. ntfs and ext2fs don't set
f_namemeax and f_favail. fusefs doesn't set f_mntfromspec, f_favail and
f_iosize. Also, make all filesystems use copy_statfs_info(), so that all
statfs information is filled in correctly for the (sb != &mp->mnt-stat)
case.

ok stefan
@
text
@/*	$OpenBSD: mfs_extern.h,v 1.18 2010/12/21 20:14:44 thib Exp $	*/
/*	$NetBSD: mfs_extern.h,v 1.4 1996/02/09 22:31:27 christos Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)mfs_extern.h	8.2 (Berkeley) 6/16/94
 */

struct buf;
struct mount;
struct nameidata;
struct proc;
struct statfs;
struct ucred;
struct vnode;
struct vfsconf;
struct mbuf;
struct mfsnode;

extern struct vops mfs_vops;

/* mfs_vfsops.c */
int mfs_mount(struct mount *, const char *, void *, struct nameidata *,
    struct proc *);
int mfs_start(struct mount *, int, struct proc *);
int mfs_init(struct vfsconf *);
int mfs_checkexp(struct mount *, struct mbuf *, int *, struct ucred **);

/* mfs_vnops.c */
int mfs_open(void *);
int mfs_ioctl(void *);
int mfs_strategy(void *);
void mfs_doio(struct mfsnode *, struct buf *);
int mfs_close(void *);
int mfs_inactive(void *);
int mfs_reclaim(void *);
int mfs_print(void *);
#define	mfs_revoke vop_generic_revoke
int mfs_badop(void *);

@


1.18
log
@Bring back the "End the VOP experiment." diff, naddy's issues where
unrelated, and his alpha is much happier now.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.17 2010/09/10 16:34:09 thib Exp $	*/
a51 1
int mfs_statfs(struct mount *, struct statfs *, struct proc *);
@


1.17
log
@Backout the VOP diff until the issues naddy was seeing on alpha (gcc3)
have been resolved.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.16 2010/09/06 23:44:10 thib Exp $	*/
d46 2
a47 1
__BEGIN_DECLS
a67 1
__END_DECLS
@


1.16
log
@End the VOP experiment. Instead of the ridicolusly complicated operation
vector setup that has questionable features (that have, as far as I can
tell never been used in practice, atleast not in OpenBSD), remove all
the gunk and favor a simple struct full of function pointers that get
set directly by each of the filesystems.

Removes gobs of ugly code and makes things simpler by a magnitude.

The only downside of this is that we loose the vnoperate feature so
the spec/fifo operations of the filesystems need to be kept in sync
with specfs and fifofs, this is no big deal as the API it self is pretty
static.

Many thanks to armani@@ who pulled an earlier version of this diff to
current after c2k10 and Gabriel Kihlman on tech@@ for testing.

Liked by many. "come on, find your balls" deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.15 2008/05/03 14:41:29 thib Exp $	*/
d46 1
a46 2
extern struct vops mfs_vops;

d67 1
@


1.15
log
@Introduce vop_generic_bmap(); use it where applicable.
one thing of note, fifofs changes in that its bmap now
sets the runp too 0, but that was an oversight in the
old code.

ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.14 2007/12/04 19:32:13 otto Exp $	*/
d46 2
a47 1
__BEGIN_DECLS
a67 1
__END_DECLS
@


1.14
log
@fix out of partition/memory bounds access when accessing blocks at the tail
end; avoids bad address errors; original diff by me with cleanup by
millert@@; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.13 2007/11/28 19:31:31 millert Exp $	*/
a59 1
int mfs_bmap(void *);
@


1.13
log
@g/c mfs_mountroot() and mfs_initminiroot().  We don't support root on
mfs.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.12 2006/03/28 13:18:17 pedro Exp $	*/
d44 1
d59 1
a59 1
void mfs_doio(struct buf *, caddr_t);
@


1.12
log
@ANSIfy and deregister, no binary change.
From: Thordur I. Bjornsson <thib@@mi.is>
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.11 2003/06/02 23:28:23 millert Exp $	*/
a46 2
int mfs_mountroot(void);
int mfs_initminiroot(caddr_t);
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.10 2002/03/14 01:27:15 millert Exp $	*/
d47 8
a54 10
int	mfs_mountroot(void);
int	mfs_initminiroot(caddr_t);
int	mfs_mount(struct mount *, const char *, void *,
			     struct nameidata *, struct proc *);
int	mfs_start(struct mount *, int, struct proc *);
int	mfs_statfs(struct mount *, struct statfs *, struct proc *);

int	mfs_init(struct vfsconf *);
int	mfs_checkexp(struct mount *mp, struct mbuf *nam,
			     int *extflagsp, struct ucred **credanonp);
d57 9
a65 9
int	mfs_open(void *);
int	mfs_ioctl(void *);
int	mfs_strategy(void *);
void	mfs_doio(struct buf *, caddr_t);
int	mfs_bmap(void *);
int	mfs_close(void *);
int	mfs_inactive(void *);
int	mfs_reclaim(void *);
int	mfs_print(void *);
d67 1
a67 1
int	mfs_badop(void *);
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.9 2001/02/20 01:50:12 assar Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@use void * consistently in vfs_mount and sys_mount.  ok @@art
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.8 2000/02/07 04:57:18 assar Exp $	*/
d51 6
a56 6
int	mfs_mountroot	__P((void));
int	mfs_initminiroot	__P((caddr_t));
int	mfs_mount	__P((struct mount *, const char *, void *,
			     struct nameidata *, struct proc *));
int	mfs_start	__P((struct mount *, int, struct proc *));
int	mfs_statfs	__P((struct mount *, struct statfs *, struct proc *));
d58 3
a60 3
int	mfs_init	__P((struct vfsconf *));
int	mfs_checkexp	__P((struct mount *mp, struct mbuf *nam,
			     int *extflagsp, struct ucred **credanonp));
d63 9
a71 9
int	mfs_open	__P((void *));
int	mfs_ioctl	__P((void *));
int	mfs_strategy	__P((void *));
void	mfs_doio	__P((struct buf *, caddr_t));
int	mfs_bmap	__P((void *));
int	mfs_close	__P((void *));
int	mfs_inactive	__P((void *));
int	mfs_reclaim	__P((void *));
int	mfs_print	__P((void *));
d73 1
a73 1
int	mfs_badop	__P((void *));
@


1.9.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.9 2001/02/20 01:50:12 assar Exp $	*/
d51 6
a56 6
int	mfs_mountroot(void);
int	mfs_initminiroot(caddr_t);
int	mfs_mount(struct mount *, const char *, void *,
			     struct nameidata *, struct proc *);
int	mfs_start(struct mount *, int, struct proc *);
int	mfs_statfs(struct mount *, struct statfs *, struct proc *);
d58 3
a60 3
int	mfs_init(struct vfsconf *);
int	mfs_checkexp(struct mount *mp, struct mbuf *nam,
			     int *extflagsp, struct ucred **credanonp);
d63 9
a71 9
int	mfs_open(void *);
int	mfs_ioctl(void *);
int	mfs_strategy(void *);
void	mfs_doio(struct buf *, caddr_t);
int	mfs_bmap(void *);
int	mfs_close(void *);
int	mfs_inactive(void *);
int	mfs_reclaim(void *);
int	mfs_print(void *);
d73 1
a73 1
int	mfs_badop(void *);
@


1.8
log
@update to use new checkexp vfs operation
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.7 1998/08/06 19:35:09 csapuntz Exp $	*/
d53 1
a53 1
int	mfs_mount	__P((struct mount *, const char *, caddr_t,
@


1.8.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.9 2001/02/20 01:50:12 assar Exp $	*/
d53 1
a53 1
int	mfs_mount	__P((struct mount *, const char *, void *,
@


1.8.2.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d51 6
a56 6
int	mfs_mountroot(void);
int	mfs_initminiroot(caddr_t);
int	mfs_mount(struct mount *, const char *, void *,
			     struct nameidata *, struct proc *);
int	mfs_start(struct mount *, int, struct proc *);
int	mfs_statfs(struct mount *, struct statfs *, struct proc *);
d58 3
a60 3
int	mfs_init(struct vfsconf *);
int	mfs_checkexp(struct mount *mp, struct mbuf *nam,
			     int *extflagsp, struct ucred **credanonp);
d63 9
a71 9
int	mfs_open(void *);
int	mfs_ioctl(void *);
int	mfs_strategy(void *);
void	mfs_doio(struct buf *, caddr_t);
int	mfs_bmap(void *);
int	mfs_close(void *);
int	mfs_inactive(void *);
int	mfs_reclaim(void *);
int	mfs_print(void *);
d73 1
a73 1
int	mfs_badop(void *);
@


1.8.2.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.8.2.2 2002/03/28 14:54:26 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.7
log
@

Rename vop_revoke, vn_bwrite, vop_noislocked, vop_nolock, vop_nounlock
to be vop_generic_revoke, vop_generic_bwrite, vop_generic_islocked,
vop_generic_lock and vop_generic_unlock.

Create vop_generic_abortop and propogate change to all file systems.

Fix PR/371.

Get rid of locking in NULLFS (should be mostly unnecessary now except for
forced unmounts).
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.6 1998/02/08 22:41:52 tholo Exp $	*/
d47 1
d59 2
@


1.6
log
@Updates to match type changes in syscall tables
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.5 1997/11/06 05:59:23 csapuntz Exp $	*/
d69 1
a69 1
#define	mfs_revoke vop_revoke
@


1.5
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.4 1997/10/06 20:21:40 deraadt Exp $	*/
d52 1
a52 1
int	mfs_mount	__P((struct mount *, char *, caddr_t,
@


1.4
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: mfs_extern.h,v 1.2 1996/02/27 07:15:46 niklas Exp $	*/
d46 1
d57 1
a57 1
void	mfs_init	__P((void));
d69 1
@


1.3
log
@VFS Lite2 Changes
@
text
@a45 1
struct vfsconf;
d56 1
a56 1
int	mfs_init	__P((struct vfsconf *));
a67 1
#define	mfs_revoke vop_revoke
@


1.2
log
@From NetBSD: update to 960217 sources
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
d57 1
a57 1
void	mfs_init	__P((void));
d69 1
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: mfs_extern.h,v 1.3 1994/12/14 13:03:51 mycroft Exp $	*/
d48 22
a69 15
int	mfs_badop __P((void));
int	mfs_bmap __P((struct vop_bmap_args *));
int	mfs_close __P((struct vop_close_args *));
void	mfs_doio __P((struct buf *bp, caddr_t base));
int	mfs_inactive __P((struct vop_inactive_args *)); /* XXX */
int	mfs_reclaim __P((struct vop_reclaim_args *));
int	mfs_init __P((void));
int	mfs_ioctl __P((struct vop_ioctl_args *));
int	mfs_mount __P((struct mount *mp,
	    char *path, caddr_t data, struct nameidata *ndp, struct proc *p));
int	mfs_open __P((struct vop_open_args *));
int	mfs_print __P((struct vop_print_args *)); /* XXX */
int	mfs_start __P((struct mount *mp, int flags, struct proc *p));
int	mfs_statfs __P((struct mount *mp, struct statfs *sbp, struct proc *p));
int	mfs_strategy __P((struct vop_strategy_args *)); /* XXX */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
