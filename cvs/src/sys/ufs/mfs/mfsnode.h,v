head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.2
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.4
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.14.0.16
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.12
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.14
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.6
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.10
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.8
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.12.0.18
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.16
	OPENBSD_5_0:1.12.0.14
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.12
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.10
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.6
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.18
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.16
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.14
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.12
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.10
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.2
	UBC_BASE:1.8
	OPENBSD_3_0:1.7.0.16
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.14
	OPENBSD_2_8:1.7.0.12
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.10
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.8
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.11.07.00.26.33;	author guenther;	state Exp;
branches;
next	1.14;
commitid	W7ztnDZwvjCaeQTS;

1.14
date	2013.01.15.11.20.55;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2012.12.29.14.54.11;	author beck;	state Exp;
branches;
next	1.12;

1.12
date	2008.04.24.17.39.45;	author thib;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.23.16.51.13;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.28.23;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.19.08.58.07;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.04.22.44.32;	author art;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	98.08.06.19.35.11;	author csapuntz;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	97.11.06.05.59.24;	author csapuntz;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.20.21.43;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.15.27.13;	author csapuntz;	state Exp;
branches;
next	1.3;

1.3
date	96.06.11.03.25.15;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.02.27.07.15.49;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.34;	author deraadt;	state Exp;
branches;
next	;

1.7.8.1
date	2003.06.07.11.09.09;	author ho;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2004.02.19.11.01.42;	author niklas;	state Exp;
branches;
next	;

1.8.2.1
date	2002.10.29.01.11.09;	author art;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2002.11.04.18.02.32;	author art;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2003.05.20.04.18.42;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Split PID from TID, giving processes a PID unrelated to the TID of their
initial thread

ok jsing@@ kettenis@@
@
text
@/*	$OpenBSD: mfsnode.h,v 1.14 2013/01/15 11:20:55 jsing Exp $	*/
/*	$NetBSD: mfsnode.h,v 1.3 1996/02/09 22:31:31 christos Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)mfsnode.h	8.2 (Berkeley) 8/11/93
 */

/*
 * This structure defines the control data for the memory based file system.
 */

struct mfsnode {
	struct vnode *mfs_vnode;	/* vnode associated with this mfsnode */
	struct bufq mfs_bufq;		/* bufq for MFS I/O */
	caddr_t	mfs_baseoff;		/* base of file system in memory */
	long	mfs_size;		/* size of memory file system */
	pid_t	mfs_tid;		/* supporting thread's tid */
	struct	buf *mfs_buflist;	/* list of I/O requests */
	int	mfs_shutdown;		/* shutdown request */
};

/*
 * Convert between mfsnode pointers and vnode pointers
 */
#define VTOMFS(vp)	((struct mfsnode *)(vp)->v_data)
#define MFSTOV(mfsp)	((mfsp)->mfs_vnode)
@


1.14
log
@Switch mfs to bufq. This simplifies the code, gives us queue limits for
free and uses FIFO queueing (rather than the current LIFO queueing).

Tested by sthen@@

ok beck@@ krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.13 2012/12/29 14:54:11 beck Exp $	*/
d44 1
a44 1
	pid_t	mfs_pid;		/* supporting process pid */
@


1.13
log
@Keep mfs from potentially consuming the entire buffer cache if it gets
behind.
ok jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.12 2008/04/24 17:39:45 thib Exp $	*/
d40 2
a41 1
	struct	vnode *mfs_vnode;	/* vnode associated with this mfsnode */
d46 1
a46 2
	long	mfs_numbufs;		/* # of bufs on I/O request list */
	long	mfs_spare[3];
@


1.12
log
@remove useless defines for the vnode operations, and instead
init the op array functions with whatever the define was set
too.

ok dlg@@,blambert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.11 2003/09/23 16:51:13 millert Exp $	*/
d45 2
a46 1
	long	mfs_spare[4];
@


1.11
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.10 2003/06/02 23:28:23 millert Exp $	*/
a52 33

/* Prototypes for MFS operations on vnodes. */
#define	mfs_lookup	mfs_badop
#define	mfs_create	mfs_badop
#define	mfs_mknod	mfs_badop
#define	mfs_access	mfs_badop
#define	mfs_getattr	mfs_badop
#define	mfs_setattr	mfs_badop
#define	mfs_read	mfs_badop
#define	mfs_write	mfs_badop
#define	mfs_poll	mfs_badop
#define	mfs_mmap	mfs_badop
#define	mfs_seek	mfs_badop
#define	mfs_remove	mfs_badop
#define	mfs_link	mfs_badop
#define	mfs_rename	mfs_badop
#define	mfs_mkdir	mfs_badop
#define	mfs_rmdir	mfs_badop
#define	mfs_symlink	mfs_badop
#define	mfs_readdir	mfs_badop
#define	mfs_readlink	mfs_badop
#define	mfs_abortop	mfs_badop
#define	mfs_lock	vop_generic_lock
#define	mfs_unlock	vop_generic_unlock
#define	mfs_islocked	vop_generic_islocked
#define	mfs_pathconf	mfs_badop
#define	mfs_advlock	mfs_badop
#define	mfs_blkatoff	mfs_badop
#define	mfs_valloc	mfs_badop
#define	mfs_vfree	mfs_badop
#define	mfs_truncate	mfs_badop
#define	mfs_update	nullop
#define	mfs_bwrite	vop_generic_bwrite
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.9 2001/12/19 08:58:07 art Exp $	*/
d63 1
a63 1
#define	mfs_select	mfs_badop
@


1.9
log
@UBC was a disaster. It worked very good when it worked, but on some
machines or some configurations or in some phase of the moon (we actually
don't know when or why) files disappeared. Since we've not been able to
track down the problem in two weeks intense debugging and we need -current
to be stable, back out everything to a state it had before UBC.

We apologise for the inconvenience.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.7 1998/08/06 19:35:11 csapuntz Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@Readd VOP_MMAP, will be used soon. Right now it's just a question to
the filesystem if we're allowed to mmap the file.
@
text
@a89 1
#define mfs_mmap	mfs_badop@


1.8.2.1
log
@misc minor cleanups.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.8 2001/12/04 22:44:32 art Exp $	*/
d90 1
a90 1
#define mfs_mmap	mfs_badop
@


1.8.2.2
log
@Huge sync to NetBSD plus lots of bugfixes.
 - uvm is as in netbsd-current minus uvm_map forward merge.
 - various locking bugfixes in nfs.
 - make sure that all specops and fifoops are correct in all vnodeop vectors.
 - make the filesystem code more like filsystem code and less like vm code.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.8.2.1 2002/10/29 01:11:09 art Exp $	*/
a38 2
#include <miscfs/genfs/genfs.h>

a90 1
#define mfs_putpages	genfs_null_putpages
@


1.8.2.3
log
@use vnode lock in place of inode lock, switch to genfs_lock
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d81 3
a83 3
#define	mfs_lock	genfs_nolock
#define	mfs_unlock	genfs_nounlock
#define	mfs_islocked	genfs_noislocked
@


1.7
log
@

Rename vop_revoke, vn_bwrite, vop_noislocked, vop_nolock, vop_nounlock
to be vop_generic_revoke, vop_generic_bwrite, vop_generic_islocked,
vop_generic_lock and vop_generic_unlock.

Create vop_generic_abortop and propogate change to all file systems.

Fix PR/371.

Get rid of locking in NULLFS (should be mostly unnecessary now except for
forced unmounts).
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.6 1997/11/06 05:59:24 csapuntz Exp $	*/
d90 1
@


1.7.8.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.7 1998/08/06 19:35:11 csapuntz Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.7.8.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
#define	mfs_poll	mfs_badop
@


1.6
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.5 1997/10/06 20:21:43 deraadt Exp $	*/
d79 3
a81 3
#define	mfs_lock	vop_nolock
#define	mfs_unlock	vop_nounlock
#define	mfs_islocked	vop_noislocked
d89 1
a89 1
#define	mfs_bwrite	vn_bwrite
@


1.5
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.3 1996/06/11 03:25:15 tholo Exp $	*/
d79 3
a81 3
#define	mfs_lock	nullop
#define	mfs_unlock	nullop
#define	mfs_islocked	nullop
@


1.4
log
@VFS Lite2 Changes
@
text
@d79 3
a81 3
#define	mfs_lock	vop_nolock
#define	mfs_unlock	vop_nounlock
#define	mfs_islocked	vop_noislocked
@


1.3
log
@Kernel-implementation of update(8) my me
@
text
@d1 1
a1 1
/*	$OpenBSD: mfsnode.h,v 1.2 1996/02/27 07:15:49 niklas Exp $	*/
d79 3
a81 3
#define	mfs_lock	nullop
#define	mfs_unlock	nullop
#define	mfs_islocked	nullop
@


1.2
log
@From NetBSD: update to 960217 sources
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d88 1
a88 1
#define	mfs_update	mfs_badop
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: mfsnode.h,v 1.2 1994/06/29 06:47:16 cgd Exp $	*/
d59 31
a89 31
#define mfs_lookup ((int (*) __P((struct  vop_lookup_args *)))mfs_badop)
#define mfs_create ((int (*) __P((struct  vop_create_args *)))mfs_badop)
#define mfs_mknod ((int (*) __P((struct  vop_mknod_args *)))mfs_badop)
#define mfs_access ((int (*) __P((struct  vop_access_args *)))mfs_badop)
#define mfs_getattr ((int (*) __P((struct  vop_getattr_args *)))mfs_badop)
#define mfs_setattr ((int (*) __P((struct  vop_setattr_args *)))mfs_badop)
#define mfs_read ((int (*) __P((struct  vop_read_args *)))mfs_badop)
#define mfs_write ((int (*) __P((struct  vop_write_args *)))mfs_badop)
#define mfs_select ((int (*) __P((struct  vop_select_args *)))mfs_badop)
#define mfs_mmap ((int (*) __P((struct  vop_mmap_args *)))mfs_badop)
#define mfs_seek ((int (*) __P((struct  vop_seek_args *)))mfs_badop)
#define mfs_remove ((int (*) __P((struct  vop_remove_args *)))mfs_badop)
#define mfs_link ((int (*) __P((struct  vop_link_args *)))mfs_badop)
#define mfs_rename ((int (*) __P((struct  vop_rename_args *)))mfs_badop)
#define mfs_mkdir ((int (*) __P((struct  vop_mkdir_args *)))mfs_badop)
#define mfs_rmdir ((int (*) __P((struct  vop_rmdir_args *)))mfs_badop)
#define mfs_symlink ((int (*) __P((struct  vop_symlink_args *)))mfs_badop)
#define mfs_readdir ((int (*) __P((struct  vop_readdir_args *)))mfs_badop)
#define mfs_readlink ((int (*) __P((struct  vop_readlink_args *)))mfs_badop)
#define mfs_abortop ((int (*) __P((struct  vop_abortop_args *)))mfs_badop)
#define mfs_lock ((int (*) __P((struct  vop_lock_args *)))nullop)
#define mfs_unlock ((int (*) __P((struct  vop_unlock_args *)))nullop)
#define mfs_islocked ((int (*) __P((struct  vop_islocked_args *)))nullop)
#define mfs_pathconf ((int (*) __P((struct  vop_pathconf_args *)))mfs_badop)
#define mfs_advlock ((int (*) __P((struct  vop_advlock_args *)))mfs_badop)
#define mfs_blkatoff ((int (*) __P((struct  vop_blkatoff_args *)))mfs_badop)
#define mfs_valloc ((int (*) __P((struct  vop_valloc_args *)))mfs_badop)
#define mfs_vfree ((int (*) __P((struct  vop_vfree_args *)))mfs_badop)
#define mfs_truncate ((int (*) __P((struct  vop_truncate_args *)))mfs_badop)
#define mfs_update ((int (*) __P((struct  vop_update_args *)))mfs_badop)
#define mfs_bwrite ((int (*) __P((struct  vop_bwrite_args *)))vn_bwrite)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
