head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.70
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.72
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.68
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.64
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.66
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.58
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.62
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.60
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.56
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.54
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.52
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.50
	OPENBSD_5_0:1.3.0.48
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.46
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.44
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.40
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.42
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.38
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.36
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.34
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.32
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.30
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.28
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.26
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.24
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.22
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.20
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.18
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.16
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.14
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2000.02.06.22.52.13;	author imp;	state Exp;
branches;
next	1.2;

1.2
date	97.01.10.19.04.08;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	96.06.10.06.37.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Upgrade newfs_msdos to latest freebsd version.  This one knows how to handle
msdos on hard disk as well as floppies.  ok millert@@
@
text
@#	$OpenBSD: Makefile,v 1.2 1997/01/10 19:04:08 kstailey Exp $
# $FreeBSD: src/sbin/newfs_msdos/Makefile,v 1.2 1999/08/28 00:13:52 peter Exp $

PROG=	newfs_msdos
MAN=	newfs_msdos.8
DPADD=	${LIBUTIL}
LDADD=	-lutil

.include <bsd.prog.mk>
@


1.2
log
@use opendev(3) + man page correction
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile,v 1.1 1996/06/10 06:37:11 deraadt Exp $
a8 51
###################################################################
#
# Everything below is solely intented for maintenance.
# As you can see, it requires as86/ld86 from the ``bcc'' package.
#
# For this reason, the bootcode.h target puts the result into
# ${.CURDIR}

AS86=		as86
LD86=		ld86
AS86FLAGS=	-0
LD86FLAGS=	-0 -s

CLEANFILES+=	*.obj *.bin *.com
.SUFFIXES: .asm .obj .bin .com

.asm.obj:
	${AS86} ${AS86FLAGS} -o ${.TARGET} ${.IMPSRC}

.obj.bin:
	${LD86} ${LD86FLAGS} -T 0x7c00 -o ${.PREFIX}.tmp ${.IMPSRC}
	dd bs=32 skip=1 of=${.TARGET} if=${.PREFIX}.tmp
	rm -f ${.PREFIX}.tmp

# .com file is just for testing
.obj.com:
	${LD86} ${LD86FLAGS} -T 0x100 -o ${.PREFIX}.tmp ${.IMPSRC}
	dd bs=32 skip=1 of=${.TARGET} if=${.PREFIX}.tmp
	rm -f ${.PREFIX}.tmp

## Do NOT depend this on bootcode.bin unless you've installed the
## bcc package!
bootcode.h: ## bootcode.bin
	@@echo converting bootcode.bin into bootcode.h...
	@@perl -e 'if(read(STDIN,$$buf,512)<512) {		\
			die "Read error on .bin file\n";	\
		}						\
		@@arr = unpack("C*",$$buf);			\
		print "#ifndef BOOTCODE_H\n";			\
		print "#define BOOTCODE_H 1\n\n";		\
		print "/*\n * This file has been generated\n";	\
		print " * automatically.  Do not edit.\n */\n\n"; \
		print "static unsigned char bootcode[512] = {\n"; \
		for($$i=0; $$i<512; $$i++) {			\
			printf "0x%02x, ",$$arr[$$i];		\
			if($$i % 12 == 11) {print "\n";}	\
		}						\
		print "};\n\n";					\
		print "#endif /* BOOTCODE_H */\n";' 		\
	< bootcode.bin > ${.CURDIR}/bootcode.h

a9 1

@


1.1
log
@add newfs_msdos (from freebsd); does not know how to make non-floppy filesystems yet
@
text
@d1 1
a1 1
#	$OpenBSD$
d5 2
@
