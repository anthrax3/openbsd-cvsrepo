head	1.21;
access;
symbols
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.14
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.10
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.6
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.8
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.4
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.20.0.14
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.10
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.8
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.6
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.4
	OPENBSD_5_0:1.20.0.2
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.17.0.2
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.16.0.4
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.6
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8;
locks; strict;
comment	@.\" @;


1.21
date	2014.05.30.16.53.02;	author tedu;	state Exp;
branches;
next	1.20;

1.20
date	2011.07.04.21.41.18;	author matthew;	state Exp;
branches;
next	1.19;

1.19
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.18;

1.18
date	2010.12.18.21.01.30;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2010.04.15.23.19.14;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2009.02.15.22.17.36;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2008.09.03.23.24.25;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.14.17.10.29;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2008.05.26.21.14.46;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2008.05.26.21.01.49;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2008.05.26.16.48.27;	author grunk;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.29.07.10.09;	author fkr;	state Exp;
branches;
next	1.9;

1.9
date	2007.09.11.07.36.37;	author aanriot;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.01.01.22.26;	author grunk;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.19.46;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.27.03.47.09;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.26.23.04.20;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.26.20.46.40;	author grunk;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.26.03.37.45;	author grunk;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.14.13.17.24;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.14.11.54.00;	author grunk;	state Exp;
branches;
next	;


desc
@@


1.21
log
@warnings warnings everywhere
@
text
@.\"	$OpenBSD: mount_vnd.8,v 1.20 2011/07/04 21:41:18 matthew Exp $
.\"
.\" Copyright (c) 1993 University of Utah.
.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Systems Programming Group of the University of Utah Computer
.\" Science Department.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)vnconfig.8	8.1 (Berkeley) 6/5/93
.\"
.\"
.\" Copyright (c) 2007 Alexander von Gernler <grunk@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: July 4 2011 $
.Dt MOUNT_VND 8
.Os
.Sh NAME
.Nm mount_vnd ,
.Nm vnconfig
.Nd configure vnode disks
.Sh SYNOPSIS
.Nm mount_vnd
.Bk -words
.Op Fl k
.Op Fl K Ar rounds
.Op Fl o Ar options
.Op Fl S Ar saltfile
.Op Fl t Ar disktype
.Ar image
.Ar vnd_dev
.Ek
.Nm vnconfig
.Bk -words
.Op Fl ckluv
.Op Fl K Ar rounds
.Op Fl S Ar saltfile
.Op Fl t Ar disktype
.Ar vnd_dev
.Ar image
.Ek
.Sh DESCRIPTION
The
.Nm vnconfig
command configures vnode pseudo disk devices.
It will associate (or disassociate) the special file
.Ar vnd_dev
with the regular file
.Ar image ,
allowing the latter to be accessed as though it were a disk.
.Pp
.Nm mount_vnd
works similarly to
.Nm vnconfig ,
but it provides an interface that can be used by the
.Xr fstab 5
infrastructure, so that an
.Ar image
file can be configured to a device
.Ar node
while booting.
.Nm mount_vnd
defaults to the
.Pa vnd0
device.
.Pp
For
.Xr fstab 5
lines with type
.Dq ffs ,
the
.Dq noauto
option must be set to prevent a
.Xr mount 8
of the FFS partitions
before the necessary vnd devices are configured.
Also, the
.Dq fs_passno
field has to be set to 0 to prevent
.Xr fsck 8
from checking the file system for the same reasons.
.Pp
.Nm mount_vnd
is invoked by
.Xr mount 8
when using the following syntax:
.Bd -ragged -offset 4n
.Nm mount Op options
-t vnd
.Ar image Ar node
.Ed
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl c
.Nm vnconfig
only.
Configures the device.
If successful, references to
.Ar vnd_dev
will access the contents of
.Ar image .
This is the default operation.
.It Fl K Ar rounds
Associate an encryption key with the device.
All data will be encrypted using the Blowfish cipher before it is
written to the disk.
The user is asked for both a passphrase and the name of a salt file.
The salt file can also be specified on the command line using the
.Fl S
option.
The passphrase and salt are combined according to PKCS #5 PBKDF2 for the
specified number of
rounds to generate the actual key used.
.Ar rounds
is a number between 1000 and
.Dv INT_MAX .
DO NOT LOSE THE SALT FILE.
.It Fl k
Associate an encryption key with the device.
All data will be encrypted using the Blowfish cipher before it is
written to the disk.
.It Fl l
.Nm vnconfig
only.
List the vnd devices and indicate which ones are in use.
If a specific
.Ar vnd_dev
is given, then only that one will be described.
.It Fl o Ar options
.Nm mount_vnd
only.
Options are specified with a
.Fl o
flag followed by a comma separated string of options.
See the
.Xr mount 8
man page for possible options and their meanings.
.Pp
At the moment,
.Fl o
is only here for compatibility reasons, but no use is made of supplied
options.
.It Fl S Ar saltfile
When
.Fl K
is used, specify the
.Pa saltfile .
.It Fl t Ar disktype
Specify a
.Ar disktype
entry from the
.Xr disktab 5
database.
The
.Ar vnd_dev
will have the sector size, sectors per track, and tracks per cylinder values
of the specified
.Ar disktype .
The defaults are 512-byte sectors, 100 sectors per track and 1 track per
cylinder.
.It Fl u
.Nm vnconfig
only.
Unconfigures a
.Ar vnd_dev .
.It Fl v
.Nm vnconfig
only.
Print messages to stdout describing actions taken.
.El
.Sh FILES
.Bl -tag -width /etc/rvnd?? -compact
.It Pa /dev/{,r}vnd*
.El
.Sh EXAMPLES
Configure a CD-ROM or DVD image file as vnode disk vnd0
and mount the ISO 9660 file system contained in it:
.Bd -literal -offset indent
# vnconfig vnd0 /tmp/diskimage
# mount -t cd9660 /dev/vnd0c /mnt
.Ed
.Pp
Configure an encrypted image file as vnode disk vnd0 and mount the FFS
file system contained in the
.Sq a
partition of the disklabel.
The encryption key does not echo and must be entered every time
the vnode disk is configured.
.Bd -literal -offset indent
# vnconfig -k vnd0 /tmp/cryptimg
Encryption key:
# mount /dev/vnd0a /mnt
.Ed
.Pp
An equivalent
.Xr fstab 5
entry is:
.Bd -literal -offset indent
/tmp/cryptimg /dev/vnd0c vnd rw,noauto,-k       0 0
/dev/vnd0a   /mnt        ffs rw,noauto          0 0
.Ed
.Pp
Same as above, but now configure the vnode using PKCS #5 PBKDF2 and
a salt file with 20000 rounds:
.Bd -literal -offset indent
# vnconfig -K 20000 vnd0 /tmp/cryptimg
Encryption key:
Salt file: /tmp/cryptsalt
# mount /dev/vnd0a /mnt
.Ed
.Pp
An equivalent
.Xr fstab 5
entry is:
.Bd -literal -offset indent
/tmp/cryptimg /dev/vnd0c vnd rw,noauto,-K=20000 0 0
/dev/vnd0a   /mnt        ffs rw,noauto          0 0
.Ed
.Pp
Unmount the file system and unconfigure the vnode device:
.Bd -literal -offset indent
# umount /mnt
# vnconfig -u vnd0
.Ed
.Pp
A sample of commands to put in
.Xr rc.local 8
in order to have vnd images configured at boot time is listed here:
.Bd -literal -offset indent
# Example for automatically configuring a vnd device on startup
echo "configuring vnd devices:"
mount /dev/vnd0c
fsck -p /dev/rvnd0a
mount /mnt
.Ed
.Pp
Mounting images during the first pass of
.Xr fsck 8
and
.Xr mount 8
is not possible, because the image to be configured to a vnd itself
resides on a file system that first has to be checked and mounted.
.Sh SEE ALSO
.Xr vnd 4 ,
.Xr disktab 5 ,
.Xr fstab 5 ,
.Xr mount 8 ,
.Xr swapon 8 ,
.Xr umount 8
.Sh HISTORY
The
.Nm
command first appeared in
.Ox 4.2 .
.Sh CAVEATS
The
.Sq c
partition of a vnd image should not be used.
When a superblock becomes damaged,
.Xr fsck_ffs 8
needs information contained in the disklabel
to determine the location of alternate superblocks.
This information is not available when directly using the
.Sq c
partition,
so checking the file system image will fail.
.Pp
Swapping to vnd devices is no longer supported.
.Pp
The encryption used is obsolete.
Consider using
.Xr softraid 4
instead.
@


1.20
log
@No point in documenting "Encryption only works with vnd".
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.19 2011/04/18 16:52:11 thib Exp $
d52 1
a52 1
.Dd $Mdocdate: April 18 2011 $
d307 5
@


1.19
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.18 2010/12/18 21:01:30 tedu Exp $
d52 1
a52 1
.Dd $Mdocdate: December 18 2010 $
a155 2
Encryption only works with
.Pa vnd .
a159 2
Encryption only works with
.Pa vnd .
@


1.18
log
@remove david as author.  he is not to blame for the current C implementation.
ok david
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.17 2010/04/15 23:19:14 tedu Exp $
d52 1
a52 1
.Dd $Mdocdate: April 15 2010 $
a87 19
Hence a regular file within the file system can be used for swapping
or can contain a file system that is mounted in the name space.
.Pp
Both traditional devices,
.Xr vnd 4 ,
and the cache-coherent devices,
.Pa svnd ,
are configured through
.Nm vnconfig .
.Pa svnd
should be mounted with the
.Xr mount 8
option
.Dq sync
if
.Ar image
is being read from,
to ensure consistency in the buffer cache.
For normal operation this is not necessary.
d101 1
a101 1
.Pa svnd0
d157 1
a157 1
.Pa svnd .
d163 1
a163 1
.Pa svnd .
d167 1
a167 1
List the (s)vnd devices and indicate which ones are in use.
d215 1
a215 1
.It Pa /dev/{,r}{,s}vnd*
d218 1
a218 1
Configure a CD-ROM or DVD image file as vnode disk svnd0
d221 2
a222 2
# vnconfig svnd0 /tmp/diskimage
# mount -t cd9660 /dev/svnd0c /mnt
d225 1
a225 1
Configure an encrypted image file as vnode disk svnd0 and mount the FFS
d232 1
a232 1
# vnconfig -k svnd0 /tmp/cryptimg
d234 1
a234 1
# mount /dev/svnd0a /mnt
d241 2
a242 2
/tmp/cryptimg /dev/svnd0c vnd rw,noauto,-k       0 0
/dev/svnd0a   /mnt        ffs rw,noauto          0 0
d248 1
a248 1
# vnconfig -K 20000 svnd0 /tmp/cryptimg
d251 1
a251 1
# mount /dev/svnd0a /mnt
d258 2
a259 2
/tmp/cryptimg /dev/svnd0c vnd rw,noauto,-K=20000 0 0
/dev/svnd0a   /mnt        ffs rw,noauto          0 0
d265 1
a265 1
# vnconfig -u svnd0
d274 2
a275 2
mount /dev/svnd0c
fsck -p /dev/rsvnd0a
d309 2
@


1.17
log
@there is in fact no default salt file name
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.16 2009/02/15 22:17:36 deraadt Exp $
d52 1
a52 1
.Dd $Mdocdate: February 15 2009 $
a315 2
.Sh AUTHORS
.An David Krause .
@


1.16
log
@should fsck the raw device; spotted by frantisek holop and mentioned on
the mailing lists two weeks ago, and completely ignored I guess.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.15 2008/09/03 23:24:25 krw Exp $
d52 1
a52 1
.Dd $Mdocdate: September 3 2008 $
a208 4
If the salt filename is not specified using
.Fl S ,
it defaults to
.Ar image Ns .slt .
@


1.15
log
@Replace -s (sector size) option with more general -t (disktype)
option which makes the vnd device emulate the geometry of the
specified disktab(5) entry. No change in behaviour or geometry
unless -t is used.

API for vnd configuration ioctl (VNDIOCSET) changes, so mount_vnd
must be in sync with kernel.

Tested & ok jsing@@ 'Lovely' deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.14 2008/08/14 17:10:29 jsing Exp $
d52 1
a52 1
.Dd $Mdocdate: August 14 2008 $
d298 1
a298 1
fsck -p /dev/svnd0a
@


1.14
log
@Allow the sector size to be specified by the user when configuring a
vnd(4) device, via a new -s option to vnconfig/mount_vnd. This allows us
to create disklabels and file systems that are suitable for use on
devices that have a non-512 byte sector size (eg. CDROMs).

With help from krw@@ and feedback from pedro@@.

ok krw@@, pedro@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.12 2008/05/26 21:01:49 jmc Exp $
d52 1
a52 1
.Dd $Mdocdate: May 26 2008 $
d66 1
a66 1
.Op Fl s Ar secsize
d75 1
a75 1
.Op Fl s Ar secsize
d213 13
a225 6
.It Fl s Ar secsize
Specify the sector size, in bytes, to be used by the device.
The default sector size is 512 bytes.
If specified
.Ar secsize
must be a multiple of 512 bytes and cannot exceed 65536 bytes.
d310 1
@


1.13
log
@no need for such a wordy .Nd; ok grunk
@
text
@d66 1
d75 1
d213 6
@


1.12
log
@- put CAVEATS in the right place
- filesystem -> file system, for consistency; from Pierre Riteau
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.11 2008/05/26 16:48:27 grunk Exp $
d58 1
a58 1
.Nd "configure vnode disks for file swapping or pseudo file systems"
@


1.11
log
@fix example in manpage, spotted by Jacek Masiulaniec

While there, stress the idea that users should always have a disklabel
inside their vnd images, so they can fsck their filesystems properly

input from otto@@, corrections by jmc@@, "looks better" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.10 2007/09/29 07:10:09 fkr Exp $
d52 1
a52 1
.Dd $Mdocdate: September 29 2007 $
a292 12
.Sh CAVEATS
The
.Sq c
partition of a vnd image should not be used.
When a superblock becomes damaged,
.Xr fsck_ffs 8
needs information contained in the disklabel
to determine the location of alternate superblocks.
This information is not available when directly using the
.Sq c
partition,
so checking the filesystem image will fail.
d306 12
@


1.10
log
@default to svnds now to accomodate change in the vnd driver.
from Piotr Durlej with man-page nits from me
tested henning@@, krw@@, thib@@ and myself.
ok thib@@, grunk@@, krw@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.9 2007/09/11 07:36:37 aanriot Exp $
d52 1
a52 1
.Dd $Mdocdate: September 11 2007 $
d234 3
a236 1
file system contained in it.
d242 1
a242 1
# mount /dev/svnd0c /mnt
d250 1
a250 1
/dev/svnd0c   /mnt        ffs rw,noauto          0 0
d259 1
a259 1
# mount /dev/svnd0c /mnt
d267 1
a267 1
/dev/svnd0c   /mnt        ffs rw,noauto          0 0
d284 1
a284 1
mount /mnt/svnd0a
d293 12
@


1.9
log
@rearrange the mount_vnd examples to show the equivalent entry for each
vnconfig example, instead of having a bunch of different examples.

discussed with and ok jmc@@ grunk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.8 2007/06/01 01:22:26 grunk Exp $
d52 1
a52 1
.Dd $Mdocdate: June 1 2007 $
d116 4
@


1.8
log
@since real boottime vnd support would have caused many problems,
do a poor man's (but yet working) solution and provide the user with
instructions to enhance fstab(5) and rc.local(8) with own boot time support.

tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.7 2007/05/31 19:19:46 jmc Exp $
d52 1
a52 1
.Dd $Mdocdate: May 31 2007 $
d117 16
d239 8
d256 8
a267 33
.Ed
.Pp
Some possible vnd configurations for
.Pa /etc/fstab
are listed below.
.Pp
For lines with type
.Dq ffs ,
the
.Dq noauto
option must be set to prevent a
.Xr mount 8
of the FFS partitions
before the necessary vnd devices are configured.
Also, the
.Dq fs_passno
field has to be set to 0 to prevent
.Xr fsck 8
from checking the file system for the same reasons.
.Bd -literal -offset indent
/home/img0 /dev/svnd0c vnd rw,noauto      0 0
/dev/svnd0a /home/mnt0 ffs rw,noauto,sync 0 0

/home/img1 /dev/svnd1c vnd rw,noauto,-k                0 0
/dev/svnd1a /home/mnt1 ffs rw,sync,noauto,nodev,nosuid 0 0

/home/img2 /dev/svnd2c vnd rw,noauto,-K=20000          0 0
/dev/svnd2a /home/mnt2 ffs rw,sync,noauto,nodev,nosuid 0 0

/home/img3 /dev/svnd3c vnd rw,noauto,-K=20000,-S=/home/img3.salt 0 0
/dev/svnd3a /home/mnt3 ffs rw,noauto                             0 0
/dev/svnd3d /home/mnt4 ffs rw,noauto                             0 0
/dev/svnd3e /home/mnt5 ffs rw,noauto                             0 0
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.6 2007/05/27 03:47:09 jmc Exp $
d52 1
a52 1
.Dd $Mdocdate$
d256 1
a256 1
/home/img0 /dev/svnd0c vnd rw             0 0
d259 1
a259 1
/home/img1 /dev/svnd1c vnd rw,-k                       0 0
d262 1
a262 1
/home/img2 /dev/svnd2c vnd rw,-K=20000                 0 0
d265 4
a268 4
/home/img3 /dev/svnd3c vnd rw,-K=20000,-S=/home/img3.salt 0 0
/dev/svnd3a /home/mnt3 ffs rw,noauto                      0 0
/dev/svnd3d /home/mnt4 ffs rw,noauto                      0 0
/dev/svnd3e /home/mnt5 ffs rw,noauto                      0 0
d270 18
a300 7
.Sh BUGS
Checking filesystems within svnd images using
.Xr fsck 8
at boot time, as well as mounting them at that point of time is not yet
possible, because the mount option
.Dq noauto
is still necessary at the moment.
@


1.6
log
@sync argument names; ok grunk
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.5 2007/05/26 23:04:20 jmc Exp $
d52 1
a52 1
.Dd May 18, 2007
@


1.5
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.4 2007/05/26 20:46:40 grunk Exp $
d82 1
a82 1
.Ar rawdev
d84 1
a84 1
.Ar regular_file ,
d101 1
a101 1
.Ar regular_file
d134 1
a134 1
.Ar rawdev
d136 1
a136 1
.Ar regular_file .
d166 1
a166 1
.Ar rawdev
d195 1
a195 1
.Ar rawdev .
@


1.4
log
@improve the EXAMPLES for fstab entries of mount_vnd(8):
- reduce the number of used svnd devs to the default number of an OpenBSD System
- make it more obvious that vnd's w/ different levels or no encryption can be
  specified.

diff from Okan Demirmen, thanks
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.3 2007/05/26 03:37:45 grunk Exp $
a105 1
The
a137 6
.It Fl k
Associate an encryption key with the device.
All data will be encrypted using the Blowfish cipher before it is
written to the disk.
Encryption only works with
.Pa svnd .
d155 6
d289 1
a289 1
still is necessary at the moment.
@


1.3
log
@make mount_vnd a C program by pulling in the vnconfig(8) source and adding
a mount_vnd(8) interface to it.  merge manpages as well.
next goal is to have this here completely replace the usr.sbin/vnconfig
directory.

prodded by many, manpage discussion and help jmc@@, "go ahead" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mount_vnd.8,v 1.2 2007/04/14 13:17:24 jmc Exp $
d257 2
a258 2
/home/img1 /dev/svnd1c vnd rw             0 0
/dev/svnd1a /home/mnt1 ffs rw,noauto,sync 0 0
d260 4
a263 1
/home/img2 /dev/svnd2c vnd rw                          0 0
d266 4
a269 10
/home/img3 /dev/svnd3c vnd rw,-k                       0 0
/dev/svnd3a /home/mnt3 ffs rw,sync,noauto,nodev,nosuid 0 0

/home/img4 /dev/svnd4c vnd rw,-K=20000                 0 0
/dev/svnd4a /home/mnt4 ffs rw,sync,noauto,nodev,nosuid 0 0

/home/img5 /dev/svnd5c vnd rw,-K=20000,-S=/home/img5.salt 0 0
/dev/svnd5a /home/mnt5 ffs rw,noauto                      0 0
/dev/svnd5d /home/mnt6 ffs rw,noauto                      0 0
/dev/svnd5e /home/mnt7 ffs rw,noauto                      0 0
@


1.2
log
@oops, sort options;
@
text
@d1 36
a36 1
.\"	$OpenBSD: mount_vnd.8,v 1.1 2007/04/14 11:54:00 grunk Exp $
d52 1
a52 1
.Dd April 11, 2007
d56 3
a58 2
.Nm mount_vnd
.Nd configure a vnd image
d61 1
d67 10
a76 1
.Ar node
d79 34
a112 2
.Nm
command configures an image file named
d114 3
a116 2
using
.Xr vnconfig 8 .
d118 2
a119 1
This command is invoked by
d130 15
d146 10
a155 4
Flag is passed on to
.Xr vnconfig 8 .
It is used to associate an encryption key using a salt file
and a specified number of
d157 12
a168 5
for PKCS #5 PBKDF2 with the vnd device.
.It Fl k
Flag is passed on to
.Xr vnconfig 8 .
It is used to associate an encryption key with the vnd device.
d170 2
d184 4
a187 4
Flag is passed on to
.Xr vnconfig 8 .
It is used to specify the name of the saltfile used with
.Fl K .
d192 13
d207 32
d278 1
@


1.1
log
@introduce {fsck,mount}_vnd tools to be able to describe vnd images
in /etc/fstab instead of using some weird homegrown scripts.
No support for boot time mounting yet, so "noauto" is still needed.

original idea from david@@
help and discussion todd@@ bluhm@@ beck@@, manpage help jmc@@
ok simon@@ tedu@@ bluhm@@ todd@@, "looks good" thib@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a49 4
.It Fl k
Flag is passed on to
.Xr vnconfig 8 .
It is used to associate an encryption key with the vnd device.
d57 4
@

