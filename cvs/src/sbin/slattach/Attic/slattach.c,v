head	1.17;
access;
symbols
	OPENBSD_5_6:1.16.0.22
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.20
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.16
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.28
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.24
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.22
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.20
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.18
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.16
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2014.10.01.10.01.36;	author mpi;	state dead;
branches;
next	1.16;
commitid	qrlkL3oNnVW9GQHf;

1.16
date	2009.10.27.23.59.34;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.20.06.17;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.03.22.32.33;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.26.09.24.35;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.16.21.27.38;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.17.19.56.36;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.05.07.39.17;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.01.21.35.20;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.17.19.28.05;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.15.20.03.32;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	99.06.02.18.45.39;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.11.13.07.17.20;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.08.13.07.12.12;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.32.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.12.11.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@tedu slattach, part of the slip show.
@
text
@/*	$OpenBSD: slattach.c,v 1.16 2009/10/27 23:59:34 deraadt Exp $	*/
/*	$NetBSD: slattach.c,v 1.17 1996/05/19 21:57:39 jonathan Exp $	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Rick Adams.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <sys/ioctl.h>

#include <net/if.h>
#include <netinet/in.h>

#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <netdb.h>
#include <paths.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <syslog.h>
#include <termios.h>
#include <unistd.h>

int	speed = 9600;
int	slipdisc = SLIPDISC;

char	devicename[32];

static char pidfilename[MAXPATHLEN];	/* name of pid file */
static pid_t pid;			/* Our pid */
static FILE *pidfile;

void	usage(void);
int ttydisc(char *);
void handler(int);

volatile sig_atomic_t dying;

int
main(int argc, char *argv[])
{
	int fd;
	char *dev;
	struct termios tty;
	tcflag_t cflag = HUPCL;
	int ch;
	sigset_t sigset;
	int i;

	while ((ch = getopt(argc, argv, "hms:r:t:")) != -1) {
		switch (ch) {
		case 'h':
			cflag |= CRTSCTS;
			break;
		case 'm':
			cflag &= ~HUPCL;
			break;
		case 's':
			speed = atoi(optarg);
			break;
		case 'r': case 't':
			slipdisc = ttydisc(optarg);
			break;
		case '?':
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 1)
		usage();

	dev = *argv;
	if (strncmp(_PATH_DEV, dev, sizeof(_PATH_DEV) - 1)) {
		(void)snprintf(devicename, sizeof(devicename),
		    "%s%s", _PATH_DEV, dev);
		dev = devicename;
	}
	if ((fd = open(dev, O_RDWR | O_NDELAY)) < 0)
		err(1, "open: %s", dev);

	tty.c_cflag = CREAD | CS8 | cflag;
	tty.c_iflag = 0;
	tty.c_lflag = 0;
	tty.c_oflag = 0;
	tty.c_cc[VMIN] = 1;
	tty.c_cc[VTIME] = 0;
	cfsetspeed(&tty, speed);
	if (tcsetattr(fd, TCSADRAIN, &tty) < 0)
		err(1, "tcsetattr");
	if (ioctl(fd, TIOCSDTR, 0) < 0)
		err(1, "TIOCSDTR");
	if (ioctl(fd, TIOCSETD, &slipdisc) < 0)
		err(1, "TIOCSETD");

	if (fork() > 0)
		return (0);

	/* set up a signal handler to delete the PID file. */
	signal(SIGHUP, handler);
	signal(SIGTERM, handler);

	/* write PID to a file */
	pid = getpid();

	for(i = strlen(dev); (dev[i] != '/') && i > 0; i--)
		;
	if(dev[i] == '/')
		i++;
	(void) snprintf(pidfilename, sizeof pidfilename,
	    "%sslip.%s.pid", _PATH_VARRUN, dev + i);
	truncate(pidfilename, 0); /* If this fails, so will the next one... */
	if ((pidfile = fopen(pidfilename, "w")) != NULL) {
		fprintf(pidfile, "%ld\n", (long)pid);
		(void) fclose(pidfile);
	} else {
		syslog(LOG_ERR, "Failed to create pid file %s: %m", pidfilename);
		pidfilename[0] = 0;
	}

	sigemptyset(&sigset);
	for (;;) {
		sigsuspend(&sigset);
		if (dying) {
			/*  delete the pid file.  */
			if (pidfilename[0] != 0) {
				if (unlink(pidfilename) < 0 && errno != ENOENT)
					syslog(LOG_WARNING,
					    "unable to delete pid file: %m");
			}

			/* terminate gracefully */
			return (0);
		}
	}
}

void
handler(int useless)
{
	dying = 1;
}

int
ttydisc(char *name)
{
	if (strcmp(name, "slip") == 0)
		return(SLIPDISC);
#ifdef STRIPDISC
	else if (strcmp(name, "strip") == 0)
		return(STRIPDISC);
#endif
	else
		usage();
}

void
usage(void)
{

	fprintf(stderr,
	    "usage: slattach [-t ldisc] [-hm] [-s baudrate] ttyname\n");
	exit(1);
}
@


1.16
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.15 2003/06/02 20:06:17 millert Exp $	*/
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.14 2002/07/03 22:32:33 deraadt Exp $	*/
a34 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)slattach.c	8.2 (Berkeley) 1/7/94";
#else
static char rcsid[] = "$OpenBSD: slattach.c,v 1.14 2002/07/03 22:32:33 deraadt Exp $";
#endif
#endif /* not lint */
@


1.14
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.13 2002/05/26 09:24:35 deraadt Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d46 1
a46 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.13 2002/05/26 09:24:35 deraadt Exp $";
@


1.13
log
@pid_t cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.12 2002/02/16 21:27:38 millert Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.12 2002/02/16 21:27:38 millert Exp $";
a84 1

a85 1

d91 1
a91 3
main(argc, argv)
	int argc;
	char *argv[];
d192 1
a192 2
handler(useless)
int useless;
a196 1

d198 1
a198 2
ttydisc(name)
	char *name;
d211 1
a211 1
usage()
@


1.12
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.11 2001/11/17 19:56:36 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.11 2001/11/17 19:56:36 deraadt Exp $";
d171 1
a171 1
		fprintf(pidfile, "%d\n", pid);
@


1.11
log
@volatile sig_atomic_t
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.10 2001/11/05 07:39:17 mpech Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.10 2001/11/05 07:39:17 mpech Exp $";
d84 1
a84 1
void	usage __P((void));
d86 1
a86 1
int ttydisc __P((char *));
d88 1
a88 1
void handler __P((int));
@


1.10
log
@kill more registers;

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.9 2001/06/01 21:35:20 mickey Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.9 2001/06/01 21:35:20 mickey Exp $";
d90 1
a90 1
sig_atomic_t dying;
@


1.9
log
@missing option in getopt vs cases
return vs exit
err vs perror+exit a few times
spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.8 2001/01/17 19:28:05 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.8 2001/01/17 19:28:05 deraadt Exp $";
d97 2
a98 2
	register int fd;
	register char *dev;
@


1.8
log
@move handler into main loop
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.7 2001/01/15 20:03:32 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.7 2001/01/15 20:03:32 deraadt Exp $";
d80 2
a81 2
static char pidfilename[MAXPATHLEN];    /* name of pid file */
static pid_t pid;               /* Our pid */
d105 1
a105 1
	while ((ch = getopt(argc, argv, "hms:t:")) != -1) {
d136 3
a138 4
	if ((fd = open(dev, O_RDWR | O_NDELAY)) < 0) {
		perror(dev);
		exit(1);
	}
d154 1
a154 1
		exit(0);
d162 1
a162 1
	
d169 1
a169 1
	truncate(pidfilename, 0);    /* If this fails, so will the next one... */
d188 1
a188 1
		
d190 1
a190 1
			exit(0);
d205 1
a205 1
     char *name;
d211 1
a211 1
  		return(STRIPDISC);
d221 2
a222 2
	(void)fprintf(stderr,
		      "usage: slattach [-t ldisc] [-hm] [-s baudrate] ttyname\n");
@


1.7
log
@_exit() in signal handler
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.6 1999/06/02 18:45:39 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.6 1999/06/02 18:45:39 deraadt Exp $";
d90 2
d180 1
a180 1
	for (;;)
d182 12
d200 1
a200 10

	/*  delete the pid file.  */
	if (pidfilename[0] != 0) {
		if (unlink(pidfilename) < 0 && errno != ENOENT) 
			syslog(LOG_WARNING, "unable to delete pid file: %m");
		pidfilename[0] = 0;
	}

	/* terminate gracefully */
	_exit(0);
@


1.6
log
@snprintf
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.5 1996/11/13 07:17:20 downsj Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.5 1996/11/13 07:17:20 downsj Exp $";
d195 1
a195 1
	exit(0);
@


1.5
log
@Write out pid file, from Monroe Williams <monroe@@teleport.com>.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD$";
d166 2
a167 1
	(void) sprintf(pidfilename, "%sslip.%s.pid", _PATH_VARRUN, dev + i);
@


1.4
log
@arg is set later
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.3 1996/06/23 14:32:44 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.3 1996/06/23 14:32:44 deraadt Exp $";
d63 1
d71 1
d80 4
d88 1
d101 1
d154 22
d180 17
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: slattach.c,v 1.17 1996/05/19 21:57:39 jonathan Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: slattach.c,v 1.17 1996/05/19 21:57:39 jonathan Exp $";
d89 1
a89 1
	register char *dev = argv[1];
@


1.2
log
@slip or strip
@
text
@d1 1
d50 1
a50 1
static char rcsid[] = "$NetBSD: slattach.c,v 1.17 1996/05/19 21:57:39 jonathan Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: slattach.c,v 1.16 1995/03/21 18:48:59 mycroft Exp $	*/
d49 1
a49 1
static char rcsid[] = "$NetBSD: slattach.c,v 1.16 1995/03/21 18:48:59 mycroft Exp $";
d79 3
d94 1
a94 1
	while ((ch = getopt(argc, argv, "hms:")) != -1) {
d105 3
d150 14
d168 2
a169 1
	(void)fprintf(stderr, "usage: slattach [-hm] [-s baudrate] ttyname\n");
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
