head	1.10;
access;
symbols
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2008.06.09.22.23.18;	author mbalmer;	state dead;
branches;
next	1.9;

1.9
date	2007.10.13.16.28.24;	author mbalmer;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.18.13.50.38;	author mbalmer;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.02.22.49.08;	author mbalmer;	state Exp;
branches;
next	1.6;

1.6
date	2006.11.29.12.09.02;	author mbalmer;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.29.12.05.32;	author mbalmer;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.27.16.05.27;	author mbalmer;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.17.16.57.22;	author mbalmer;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.09.09.03.19;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.04.05.31.54;	author mbalmer;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove nmeaattch(8), which is superseeded by ldattach(8).

ok deraadt
@
text
@/*	$OpenBSD: nmeaattach.c,v 1.9 2007/10/13 16:28:24 mbalmer Exp $	*/
/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 * Copyright (c) 2006 Marc Balmer <mbalmer@@openbsd.org>
 *
 * This code is derived from software contributed to Berkeley by
 * Rick Adams.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/ioctl.h>
#include <sys/ttycom.h>

#include <err.h>
#include <fcntl.h>
#include <paths.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <termios.h>
#include <unistd.h>

int	speed = B4800;

char	devicename[32];

__dead void	usage(void);
void 		coroner(int);

volatile sig_atomic_t dying = 0;

__dead void
usage(void)
{
	extern char *__progname;

	fprintf(stderr, "usage: %s [-dhm] [-s baudrate] [-t cond] device\n",
	    __progname);
	exit(1);
}

int
main(int argc, char *argv[])
{
	int fd;
	char *dev;
	struct termios tty;
	struct tstamps tstamps;
	const char *errstr;
	tcflag_t cflag = HUPCL;
	int ch;
	sigset_t sigset;
	int nmeadisc = NMEADISC;
	int nodaemon = 0;

	tstamps.ts_set = tstamps.ts_clr = 0;

	while ((ch = getopt(argc, argv, "dhms:t:")) != -1) {
		switch (ch) {
		case 'd':
			nodaemon = 1;
			break;
		case 'h':
			cflag |= CRTSCTS;
			break;
		case 'm':
			cflag &= ~HUPCL;
			break;
		case 's':
			speed = (int)strtonum(optarg, 50, 115200, &errstr);
			if (errstr)
				errx(1, "speed is %s: %s", errstr, optarg);
			break;
		case 't':
			if (!strcasecmp(optarg, "dcd"))
				tstamps.ts_set |= TIOCM_CAR;
			else if (!strcasecmp(optarg, "!dcd"))
				tstamps.ts_clr |= TIOCM_CAR;
			else if (!strcasecmp(optarg, "cts"))
				tstamps.ts_set |= TIOCM_CTS;
			else if (!strcasecmp(optarg, "!cts"))
				tstamps.ts_clr |= TIOCM_CTS;
			else
				errx(1, "'%s' not supported for timestamping",
				    optarg);
			break;
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 1)
		usage();

	dev = *argv;
	if (strncmp(_PATH_DEV, dev, sizeof(_PATH_DEV) - 1)) {
		(void)snprintf(devicename, sizeof(devicename),
		    "%s%s", _PATH_DEV, dev);
		dev = devicename;
	}
	if ((fd = open(dev, O_RDWR)) < 0)
		err(1, "open: %s", dev);

	tty.c_cflag = CREAD | CS8 | cflag;
	tty.c_iflag = 0;
	tty.c_lflag = 0;
	tty.c_oflag = 0;
	tty.c_cc[VMIN] = 1;
	tty.c_cc[VTIME] = 0;
	cfsetspeed(&tty, speed);
	if (tcsetattr(fd, TCSADRAIN, &tty) < 0)
		err(1, "tcsetattr");
	if (ioctl(fd, TIOCSDTR, 0) < 0)
		warn("TIOCSDTR");
	if (ioctl(fd, TIOCSETD, &nmeadisc) < 0)
		err(1, "TIOCSETD");
	if (ioctl(fd, TIOCSTSTAMP, &tstamps) < 0)
		err(1, "TIOCSTSTAMP");

	if (!nodaemon && daemon(0, 0))
		errx(1, "can't daemonize");

	signal(SIGHUP, coroner);
	signal(SIGTERM, coroner);

	sigemptyset(&sigset);
	for (;;) {
		sigsuspend(&sigset);
		if (dying)
			return 0;
	}
}

/* ARGSUSED */
void
coroner(int useless)
{
	dying = 1;
}
@


1.9
log
@Unconditionally call the TIOCSTSTAMP ioctl, this way calling nmeaattach(8)
without the '-t' option can be used to turn of tty timestamping.

problem noticed by sthen@@, ok sthen, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.8 2007/04/18 13:50:38 mbalmer Exp $	*/
@


1.8
log
@Do not exit when the TIOCSDTR ioctl() fails, but output a warning.
This makes claudio's ublox aek-4t happy.
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.7 2007/01/02 22:49:08 mbalmer Exp $	*/
d144 1
a144 2
	if ((tstamps.ts_set || tstamps.ts_clr) &&
	    ioctl(fd, TIOCSTSTAMP, &tstamps) < 0)
@


1.7
log
@return is no function.
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.6 2006/11/29 12:09:02 mbalmer Exp $	*/
d141 1
a141 1
		err(1, "TIOCSDTR");
@


1.6
log
@Forgot this in my last committ:  Remove not-needed header files.
Also from Kevin Steves.
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.5 2006/11/29 12:05:32 mbalmer Exp $	*/
d158 1
a158 1
			return (0);
@


1.5
log
@Remove an unused variable.
From Kevin Steves.
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.4 2006/10/27 16:05:27 mbalmer Exp $	*/
a34 3
#include <sys/param.h>
#include <sys/socket.h>
#include <sys/types.h>
a37 3
#include <net/if.h>
#include <netinet/in.h>

a38 1
#include <errno.h>
a39 1
#include <netdb.h>
a44 1
#include <syslog.h>
@


1.4
log
@Fix a small typo in the manpage and while here add some space between
functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.3 2006/09/17 16:57:22 mbalmer Exp $	*/
a86 1
	int i;
d171 1
@


1.3
log
@correct mode for open().
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.2 2006/07/09 09:03:19 jmc Exp $	*/
d75 1
@


1.2
log
@various fixes up;
@
text
@d1 1
a1 1
/*	$OpenBSD: nmeaattach.c,v 1.1 2006/07/04 05:31:54 mbalmer Exp $	*/
d137 1
a137 1
	if ((fd = open(dev, O_RDWR | O_NDELAY)) < 0)
@


1.1
log
@nmeaattach - attach serial lines as timedelta sensors.  nmeaattach is used
to designate a serial line with a NMEA 0183 device (i.e. a GPS receiver) as a
source of a timedelta sensor.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d71 1
a71 1
	fprintf(stderr, "usage: %s [-dhm] [-s speed] [-t cond] device\n",
@

