head	1.8;
access;
symbols
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	98.11.14.23.37.02;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	98.05.24.13.29.07;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	98.04.04.22.48.30;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	97.11.18.00.13.44;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	97.11.04.09.13.42;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	97.09.24.18.39.44;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	97.09.23.21.41.01;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	97.08.26.12.04.43;	author provos;	state Exp;
branches;
next	;


desc
@@


1.8
log
@move ipsec tools into .
@
text
@/* $OpenBSD: xf_esp_new.c,v 1.7 1998/05/24 13:29:07 provos Exp $ */
/*
 * The authors of this code are John Ioannidis (ji@@tla.org),
 * Angelos D. Keromytis (kermit@@csd.uch.gr) and 
 * Niels Provos (provos@@physnet.uni-hamburg.de).
 *
 * This code was written by John Ioannidis for BSD/OS in Athens, Greece, 
 * in November 1995.
 *
 * Ported to OpenBSD and NetBSD, with additional transforms, in December 1996,
 * by Angelos D. Keromytis.
 *
 * Additional transforms and features in 1997 and 1998 by Angelos D. Keromytis
 * and Niels Provos.
 *
 * Copyright (C) 1995, 1996, 1997, 1998 by John Ioannidis, Angelos D. Keromytis
 * and Niels Provos.
 *	
 * Permission to use, copy, and modify this software without fee
 * is hereby granted, provided that this entire notice is included in
 * all copies of any software which is or includes a copy or
 * modification of this software. 
 * You may use this code under the GNU public license if you so wish. Please
 * contribute changes back to the authors under this freer than GPL license
 * so that we may further the use of strong encryption without limitations to
 * all.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#include <sys/param.h>
#include <sys/file.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/mbuf.h>
#include <sys/sysctl.h>

#include <net/if.h>
#include <net/route.h>
#include <net/if_dl.h>
#include <netinet/in.h>
#include <netns/ns.h>
#include <netiso/iso.h>
#include <netccitt/x25.h>
#include <arpa/inet.h>
#include <netdb.h>

#include <errno.h>
#include <unistd.h>
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>
#include <paths.h>
#include "net/encap.h"
#include "netinet/ip_ipsp.h"
#include "netinet/ip_esp.h"
 
extern char buf[];

int xf_set __P(( struct encap_msghdr *));
int x2i __P((char *));

int
xf_esp_new(src, dst, spi, enc, auth, ivp, keyp, authp, 
	   osrc, odst, newpadding)
struct in_addr src, dst;
u_int32_t spi;
int enc, auth;
u_char *ivp, *keyp, *authp;
struct in_addr osrc, odst;
int newpadding;
{
	int i, klen, alen, ivlen;

	struct encap_msghdr *em;
	struct esp_new_xencap *xd;

	klen = strlen(keyp)/2;
	alen = authp == NULL ? 0 : strlen(authp)/2;
	ivlen = ivp == NULL ? 0 : strlen(ivp)/2;

	em = (struct encap_msghdr *)&buf[0];
	
	em->em_msglen = EMT_SETSPI_FLEN + ESP_NEW_XENCAP_LEN + 
	     ivlen + klen + alen;

	em->em_version = PFENCAP_VERSION_1;
	em->em_type = EMT_SETSPI;
	em->em_spi = spi;
	em->em_src = src;
	em->em_dst = dst;
	em->em_osrc = osrc;
	em->em_odst = odst;
	em->em_alg = XF_NEW_ESP;
	em->em_sproto = IPPROTO_ESP;

	xd = (struct esp_new_xencap *)(em->em_dat);

	xd->edx_enc_algorithm = enc;
	xd->edx_hash_algorithm = auth;
	xd->edx_ivlen = ivlen;
	xd->edx_confkeylen = klen;
	xd->edx_authkeylen = alen;
	xd->edx_wnd = -1;	/* Manual keying -- no seq */
	xd->edx_flags = auth ? ESP_NEW_FLAG_AUTH : 0;
	
	if (newpadding)
	  xd->edx_flags |= ESP_NEW_FLAG_NPADDING;

	for (i = 0; i < ivlen; i++)
	     xd->edx_data[i] = x2i(ivp+2*i);

	for (i = 0; i < klen; i++)
	     xd->edx_data[i+ivlen] = x2i(keyp+2*i);

	for (i = 0; i < alen; i++)
	     xd->edx_data[i+ivlen+klen] = x2i(authp+2*i);

	return xf_set(em);
}


@


1.7
log
@incorporate functionality of rt and rtdelete commands into ipsecadm,
some improvements to manpage, stricter option checking, -Wall.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp_new.c,v 1.6 1998/04/04 22:48:30 provos Exp $ */
@


1.6
log
@use the right key material for authentication, bug report by
Richard Guy Briggs <rgb@@conscoop.ottawa.on.ca>
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp_new.c,v 1.5 1997/11/18 00:13:44 provos Exp $ */
d3 3
a5 2
 * The author of this code is John Ioannidis, ji@@tla.org,
 * 	(except when noted otherwise).
d7 2
a8 1
 * This code was written for BSD/OS in Athens, Greece, in November 1995.
d11 7
a17 5
 * by Angelos D. Keromytis, kermit@@forthnet.gr. Additional code written by
 * Niels Provos in Germany.
 * 
 * Copyright (C) 1995, 1996, 1997 by John Ioannidis, Angelos D. Keromytis and
 * Niels Provos.
d22 5
a26 1
 * modification of this software.
d29 1
a29 1
 * IMPLIED WARRANTY. IN PARTICULAR, NEITHER AUTHOR MAKES ANY
@


1.5
log
@make old style padding default again, use -netpadding for new style
padding. allow ip4 encapsulation/tunnels with no encryption/authentication.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp_new.c,v 1.4 1997/11/04 09:13:42 provos Exp $ */
d114 1
a114 1
	     xd->edx_data[i+ivlen+klen] = x2i(keyp+2*i);
@


1.4
log
@support for blowfish and cast. add -authkey to seperate key material
for encryption and authentication which is needed for variable key length
ciphers.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp_new.c,v 1.3 1997/09/24 18:39:44 angelos Exp $ */
d62 1
a62 1
	   osrc, odst, oldpadding)
d68 1
a68 1
int oldpadding;
d104 2
a105 2
	if (oldpadding)
	  xd->edx_flags |= ESP_NEW_FLAG_OPADDING;
@


1.3
log
@Support for new style padding.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp_new.c,v 1.2 1997/09/23 21:41:01 angelos Exp $ */
d61 2
a62 1
xf_esp_new(src, dst, spi, enc, auth, ivp, keyp, osrc, odst, oldpadding)
d66 1
a66 1
u_char *ivp, *keyp;
d70 1
a70 1
	int i, klen, ivlen;
d76 1
d81 3
a83 1
	em->em_msglen = EMT_SETSPI_FLEN + ESP_NEW_XENCAP_LEN + ivlen + klen;
d99 2
a100 1
	xd->edx_keylen = klen;
d110 1
a110 1
	for (i = 0; i < xd->edx_keylen; i++)
d112 3
@


1.2
log
@Addition for tunnel mode. I'm in Canada, i can write crypto code!
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp_new.c,v 1.1 1997/08/26 12:04:43 provos Exp $ */
d61 1
a61 1
xf_esp_new(src, dst, spi, enc, auth, ivp, keyp, osrc, odst)
d67 1
d98 3
@


1.1
log
@made hopefully more user friendly + support for new esp.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_esp3desmd5.c,v 1.4 1997/07/11 23:50:24 provos Exp $ */
d61 1
a61 1
xf_esp_new(src, dst, spi, enc, auth, ivp, keyp)
d66 1
d84 2
d95 1
a95 1
	xd->edx_wnd = 32;
@
