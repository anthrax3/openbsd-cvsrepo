head	1.10;
access;
symbols
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	98.11.14.23.37.03;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	98.05.24.13.29.10;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	97.09.14.10.37.47;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.08.26.12.04.46;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	97.07.14.09.04.23;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	97.07.11.23.50.25;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	97.07.02.06.59.38;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	97.07.01.22.18.08;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	97.04.14.10.04.33;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	97.03.01.15.08.28;	author provos;	state Exp;
branches;
next	;


desc
@@


1.10
log
@move ipsec tools into .
@
text
@/* $OpenBSD: xf_grp.c,v 1.9 1998/05/24 13:29:10 provos Exp $ */
/*
 * The authors of this code are John Ioannidis (ji@@tla.org),
 * Angelos D. Keromytis (kermit@@csd.uch.gr) and 
 * Niels Provos (provos@@physnet.uni-hamburg.de).
 *
 * This code was written by John Ioannidis for BSD/OS in Athens, Greece, 
 * in November 1995.
 *
 * Ported to OpenBSD and NetBSD, with additional transforms, in December 1996,
 * by Angelos D. Keromytis.
 *
 * Additional transforms and features in 1997 and 1998 by Angelos D. Keromytis
 * and Niels Provos.
 *
 * Copyright (C) 1995, 1996, 1997, 1998 by John Ioannidis, Angelos D. Keromytis
 * and Niels Provos.
 *	
 * Permission to use, copy, and modify this software without fee
 * is hereby granted, provided that this entire notice is included in
 * all copies of any software which is or includes a copy or
 * modification of this software. 
 * You may use this code under the GNU public license if you so wish. Please
 * contribute changes back to the authors under this freer than GPL license
 * so that we may further the use of strong encryption without limitations to
 * all.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#include <sys/param.h>
#include <sys/file.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/mbuf.h>
#include <sys/sysctl.h>

#include <net/if.h>
#include <net/route.h>
#include <net/if_dl.h>
#include <netinet/in.h>
#include <netns/ns.h>
#include <netiso/iso.h>
#include <netccitt/x25.h>
#include <arpa/inet.h>
#include <netdb.h>

#include <errno.h>
#include <unistd.h>
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>
#include <paths.h>
#include "net/encap.h"
#include "netinet/ip_ipsp.h"
 
extern char buf[];

int xf_set __P(( struct encap_msghdr *));
int x2i __P((char *));

int
xf_grp(dst, spi, proto, dst2, spi2, proto2)
struct in_addr dst, dst2;
u_int32_t spi, spi2;
int proto, proto2;
{
     struct encap_msghdr *em;

     bzero(buf, EMT_GRPSPIS_FLEN);

     em = (struct encap_msghdr *)&buf[0];

     em->em_msglen = EMT_GRPSPIS_FLEN;
     em->em_version = PFENCAP_VERSION_1;
     em->em_type = EMT_GRPSPIS;

     em->em_rel_spi = spi;
     em->em_rel_dst = dst;
     em->em_rel_sproto = proto;

     em->em_rel_spi2 = spi2;
     em->em_rel_dst2 = dst2;
     em->em_rel_sproto2 = proto2;
	
     return xf_set(em);
}


@


1.9
log
@incorporate functionality of rt and rtdelete commands into ipsecadm,
some improvements to manpage, stricter option checking, -Wall.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.8 1997/09/14 10:37:47 deraadt Exp $ */
@


1.8
log
@some -Wall
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.7 1997/08/26 12:04:46 provos Exp $ */
d3 3
a5 2
 * The author of this code is John Ioannidis, ji@@tla.org,
 * 	(except when noted otherwise).
d7 2
a8 1
 * This code was written for BSD/OS in Athens, Greece, in November 1995.
d11 7
a17 5
 * by Angelos D. Keromytis, kermit@@forthnet.gr. Additional code written by
 * Niels Provos in Germany.
 * 
 * Copyright (C) 1995, 1996, 1997 by John Ioannidis, Angelos D. Keromytis and
 * Niels Provos.
d22 5
a26 1
 * modification of this software.
d29 1
a29 1
 * IMPLIED WARRANTY. IN PARTICULAR, NEITHER AUTHOR MAKES ANY
d62 1
a62 1
extern buf[];
@


1.7
log
@made hopefully more user friendly + support for new esp.
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.6 1997/07/14 09:04:23 provos Exp $ */
a64 2
     int i;

@


1.6
log
@typo
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.5 1997/07/11 23:50:25 provos Exp $ */
d9 5
a13 3
 * by Angelos D. Keromytis, kermit@@forthnet.gr.
 *
 * Copyright (C) 1995, 1996, 1997 by John Ioannidis and Angelos D. Keromytis.
d60 4
a63 3
xf_grp(argc, argv)
int argc;
char **argv;
d65 1
a65 3
	int i;

	struct encap_msghdr *em;
d67 1
a67 4
	if ((argc < 4) || (argc > 13) || ((argc % 3) != 1)) {
	     fprintf(stderr, "usage: %s dst1 spi1 proto1 [ dst2 spi2 proto2 [ dst3 spi3 proto3 [ dst4 spi4 proto4] ] ] \n", argv[0]);
	     return 0;
	}
d69 1
a69 2
	for (i=0; i<argc/3-1; i++) {
	     bzero(buf, EMT_GRPSPIS_FLEN);
d71 1
a71 1
	     em = (struct encap_msghdr *)&buf[0];
d73 3
a75 3
	     em->em_msglen = EMT_GRPSPIS_FLEN;
	     em->em_version = PFENCAP_VERSION_1;
	     em->em_type = EMT_GRPSPIS;
d77 3
a79 3
	     em->em_rel_spi = htonl(strtoul(argv[3*i+2], NULL, 16));
	     em->em_rel_dst.s_addr = inet_addr(argv[3*i+1]);
	     em->em_rel_sproto = atoi(argv[3*i+3]) ? IPPROTO_ESP : IPPROTO_AH;
d81 3
a83 3
	     em->em_rel_spi2 = htonl(strtoul(argv[3*i+5], NULL, 16));
	     em->em_rel_dst2.s_addr = inet_addr(argv[3*i+4]);
	     em->em_rel_sproto2 = atoi(argv[3*i+6]) ? IPPROTO_ESP : IPPROTO_AH;
d85 1
a85 3
	     if (!xf_set(em))
		  break;
	}
@


1.5
log
@reflect changes in kernel ipsec
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.4 1997/07/02 06:59:38 provos Exp $ */
d86 1
a86 1
	     em->em_rel_sproto = atoi(argv[3*i+6]) ? IPPROTO_ESP : IPPROTO_AH;
@


1.4
log
@typo
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.3 1997/07/01 22:18:08 provos Exp $ */
d66 2
a67 2
	if ((argc < 3) || (argc > 9) || ((argc % 2) != 1)) {
	     fprintf(stderr, "usage: %s dst1 spi1 [ dst2 spi2 [ dst3 spi3 [ dst4 spi4 ] ] ] \n", argv[0]);
d71 1
a71 1
	for (i=0; i<argc/2-1; i++) {
d80 7
a86 4
	     em->em_rel_spi = htonl(strtoul(argv[2*i+2], NULL, 16));
	     em->em_rel_dst.s_addr = inet_addr(argv[2*i+1]);
	     em->em_rel_spi2 = htonl(strtoul(argv[2*i+4], NULL, 16));
	     em->em_rel_dst2.s_addr = inet_addr(argv[2*i+3]);
@


1.3
log
@reflect changes in ipsec
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.2 1997/04/14 10:04:33 provos Exp $ */
d82 2
a83 2
	     em->em_rel_spi = htonl(strtoul(argv[2*i+4], NULL, 16));
	     em->em_rel_dst.s_addr = inet_addr(argv[2*i+3]);
@


1.2
log
@strtol to strtoul
@
text
@d1 1
a1 1
/* $OpenBSD: xf_grp.c,v 1.1 1997/03/01 15:08:28 provos Exp $ */
d62 1
a62 1
	int nspis;
d67 2
a68 2
	  fprintf(stderr, "usage: %s dst1 spi1 [ dst2 spi2 [ dst3 spi3 [ dst4 spi4 ] ] ] \n", argv[0]);
	  return 0;
d71 13
a83 3
	nspis = argc / 2;
	
	em = (struct encap_msghdr *)&buf[0];
d85 2
a86 19
	em->em_msglen = 4 + nspis * 12;
	em->em_version = 0;
	em->em_type = EMT_GRPSPIS;

	switch (nspis)
	{
	      case 4:
		em->em_rel[3].emr_spi = htonl(strtoul(argv[8], NULL, 16));
		em->em_rel[3].emr_dst.s_addr = inet_addr(argv[7]);
	      case 3:
		em->em_rel[2].emr_spi = htonl(strtoul(argv[6], NULL, 16));
		em->em_rel[2].emr_dst.s_addr = inet_addr(argv[5]);
	      case 2:
		em->em_rel[1].emr_spi = htonl(strtoul(argv[4], NULL, 16));
		em->em_rel[1].emr_dst.s_addr = inet_addr(argv[3]);
	      case 1:
		em->em_rel[0].emr_spi = htonl(strtoul(argv[2], NULL, 16));
		em->em_rel[0].emr_dst.s_addr = inet_addr(argv[1]);
		break;
a87 3
	
	
	return xf_set(em);
@


1.1
log
@Unified ipsec prgs in ipsecadm
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d82 1
a82 1
		em->em_rel[3].emr_spi = htonl(strtol(argv[8], NULL, 16));
d85 1
a85 1
		em->em_rel[2].emr_spi = htonl(strtol(argv[6], NULL, 16));
d88 1
a88 1
		em->em_rel[1].emr_spi = htonl(strtol(argv[4], NULL, 16));
d91 1
a91 1
		em->em_rel[0].emr_spi = htonl(strtol(argv[2], NULL, 16));
@
