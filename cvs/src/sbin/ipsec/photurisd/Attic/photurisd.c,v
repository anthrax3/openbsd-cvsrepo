head	1.10;
access;
symbols
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	photurisd100:1.1.1.1
	photuris:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	98.11.14.23.37.16;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	98.06.30.16.58.38;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	98.06.24.01.13.08;	author provos;	state Exp;
branches;
next	1.7;

1.7
date	98.05.24.14.17.10;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	98.03.04.11.43.47;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	97.09.14.10.37.52;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.08.26.13.39.36;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.07.24.23.47.18;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	97.07.23.12.28.53;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	97.07.18.22.48.50;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.07.18.22.48.50;	author provos;	state Exp;
branches;
next	;


desc
@@


1.10
log
@move ipsec tools into .
@
text
@/*
 * Copyright 1997,1998 Niels Provos <provos@@physnet.uni-hamburg.de>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Niels Provos.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/* 
 * photurisd.c: photuris daemon and stuff.
 */

#ifndef lint 
static char rcsid[] = "$Id: photurisd.c,v 1.9 1998/06/30 16:58:38 provos Exp $";
#endif 

#define _PHOTURIS_C_

#include <stdio.h> 
#include <stdlib.h>
#include <sys/types.h> 
#include <netinet/in.h>
#include <signal.h> 
#include <errno.h> 
#include <string.h>
#include <unistd.h>
#include "config.h"
#include "photuris.h"
#include "server.h"
#include "buffer.h"
#include "cookie.h"
#include "identity.h"
#include "spi.h"
#include "packet.h"
#include "schedule.h"
#include "errlog.h"
#ifdef IPSEC
#include "attributes.h"
#include "kernel.h"
#endif

static int init_vars(void);
static void usage(void);

static void
usage(void)
{
     FILE *f = stderr;

     fprintf(f, "usage: photurisd [-cvi] [-d directory] [-p port]\n");
     fprintf(f, "\t-c  check primes on startup\n");
     fprintf(f, "\t-v  start in VPN mode\n");
     fprintf(f, "\t-i  ignore startup file %s\n", PHOTURIS_STARTUP);
     fprintf(f, "\t-d  specifies the startup dir\n");
     fprintf(f, "\t-p  specifies the local port to bind to\n");
     exit(1);
}
     

static int 
init_vars(void)
{
     global_schemes = NULL;
     global_schemesize = 0;

     config_file = NULL;
     attrib_file = NULL;

     if ((config_file = calloc(1, sizeof(PHOTURIS_CONFIG))) == NULL)
	  crit_error(1, "no memory in init_vars()" );
     strcpy(config_file, PHOTURIS_CONFIG);

     if ((secret_file = calloc(1, sizeof(PHOTURIS_SECRET))) == NULL)
	  crit_error(1, "no memory in init_vars()" );
     strcpy(secret_file, PHOTURIS_SECRET);

     if ((attrib_file = calloc(1, sizeof(PHOTURIS_ATTRIB))) == NULL)
	  crit_error(1, "no memory in init_vars()");
     strcpy(attrib_file, PHOTURIS_ATTRIB);

     reset_secret();

     max_retries = MAX_RETRIES;
     retrans_timeout = RETRANS_TIMEOUT;
     exchange_timeout = EXCHANGE_TIMEOUT;
     exchange_lifetime = EXCHANGE_LIFETIME;
     spi_lifetime = SPI_LIFETIME;

     return 1;
}

int
main(int argc, char **argv)
{
     int ch;
     int primes = 0, ignore = 0;
     char *dir = PHOTURIS_DIR;

     daemon_mode = 0;
     global_port = 0;
     vpn_mode = 0;

     while ((ch = getopt(argc, argv, "vcid:p:")) != -1)
	  switch((char)ch) {
	  case 'c':
	       primes = 1;
	       break;
	  case 'v':
	       vpn_mode = 1;
	       break;
	  case 'i':
	       ignore = 1;
	       break;
	  case 'd':
	       dir = optarg;
	       break;
	  case 'p':
	       global_port = atoi(optarg);
	       break;
	  case '?':
	  default:
	       usage();
	  }

     if (chdir(dir) == -1)
	  crit_error(1, "chdir(\"%s\") in main()", dir);
	  

     argc -= optind;
     argv += optind;
     
     init_vars();

     init_times();

     init_moduli(primes);

     init_schemes();

     init_attributes(); 

     if (init_identities(NULL,NULL) == -1)
	  exit(-1);
     
     init_schedule();

#ifdef IPSEC
     init_kernel();
#endif

     init_server();

     /* Startup preconfigured exchanges */
     if( !ignore && !vpn_mode)
	  init_startup();

#ifndef DEBUG
     init_signals();
     if (fork())
	  exit(0);
     daemon_mode = 1;
#endif

     server();
     exit(0);
}
@


1.9
log
@- support HMAC flag which if present in the attribute list toggles to
HMAC authentication transforms and otherwise to simple keyed authentication.
Note, HMAC is necessary if new esp is to use integrity checking, i.e.
authentication of the payload.
- Also fix bug, where SPIs were reserved for more than one protocol when
only one protocol, e.g. ESP or AH, could be agreed upon.
- Also make kernel.c a bit less complex, I hope.
- return notifies to kernel on failure only when kernel started the keying.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.8 1998/06/24 01:13:08 provos Exp $";
@


1.8
log
@disable startup file in vpn mode
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.7 1998/05/24 14:17:10 provos Exp $";
d59 1
@


1.7
log
@add VPN mode.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.6 1998/03/04 11:43:47 provos Exp $";
d174 1
a174 1
     if( !ignore)
@


1.6
log
@compliance with draft-simpson-photuris-18.txt, better packet structure
checking, better support for new esp and ah, documentation ...
@
text
@d2 1
a2 1
 * Copyright 1997 Niels Provos <provos@@physnet.uni-hamburg.de>
d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.5 1997/09/14 10:37:52 deraadt Exp $";
d70 1
a70 1
     fprintf(f, "usage: photurisd [-ci] [-d directory] [-p port]\n");
d72 1
d121 1
d123 1
a123 1
     while ((ch = getopt(argc, argv, "cid:p:")) != -1)
d127 3
@


1.5
log
@some -Wall
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.4 1997/08/26 13:39:36 niklas Exp $";
d70 1
a70 1
     fprintf(f, "usage: photurisd [-ci] [-d directory]\n");
d72 1
a72 1
     fprintf(f, "\t-t  ignore startup file %s\n", PHOTURIS_STARTUP);
d74 1
d119 1
d121 1
a121 1
     while ((ch = getopt(argc, argv, "cid:")) != -1)
d131 3
@


1.4
log
@main should return int
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.3 1997/07/24 23:47:18 provos Exp $";
d175 1
a175 1

@


1.3
log
@new symmetric identity choice. fix bug with expired exchange values on
multiple exchanges. a bit more documentation. drop -f flag and have -c
with opposite meaning instead. include responder offered schemes into
responder cookie calculation.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.2 1997/07/23 12:28:53 provos Exp $";
d110 2
a111 1
void main(int argc, char **argv)
@


1.2
log
@tunnel,lifetimes,hostname via startkey/startup
errors to stderr before daemon, to syslog afterwards
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.1.1.1 1997/07/18 22:48:50 provos Exp $";
d70 2
a71 2
     fprintf(f, "usage: photurisd [-fi] [-d directory]\n");
     fprintf(f, "\t-f  don't check primes on startup\n");
d113 1
a113 1
     int primes = 1, ignore = 0;
d118 1
a118 1
     while ((ch = getopt(argc, argv, "fid:")) != -1)
d120 2
a121 2
	  case 'f':
	       primes = 0;
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.3 1997/06/12 17:09:20 provos Exp provos $";
d116 2
d170 1
@


1.1.1.1
log
@initial import of the photuris keymanagement daemon
@
text
@@

