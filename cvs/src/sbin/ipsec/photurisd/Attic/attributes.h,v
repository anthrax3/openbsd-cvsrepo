head	1.6;
access;
symbols
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	photurisd100:1.1.1.1
	photuris:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	98.11.14.23.37.05;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	98.06.30.16.58.37;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	98.03.04.11.43.10;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	97.07.24.23.47.07;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	97.07.19.12.07.42;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	97.07.18.22.48.50;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.07.18.22.48.50;	author provos;	state Exp;
branches;
next	;


desc
@@


1.6
log
@move ipsec tools into .
@
text
@/*
 * Copyright 1997,1998 Niels Provos <provos@@physnet.uni-hamburg.de>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Niels Provos.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * attributes.h:
 * attributes for a security association
 */

#ifndef _ATTRIBUTES_H_
#define _ATTRIBUTES_H_

#undef EXTERN
#ifdef _ATTRIBUTES_C_
#define EXTERN
#else
#define EXTERN extern
#endif

#define AT_ID		1
#define AT_ENC		2
#define AT_AUTH		4

#define AT_PAD		0
#define AT_AH_ATTRIB	1
#define AT_ESP_ATTRIB	2
#define AT_HMAC		254

/* XXX - Only for the moment */
#define DH_G_2_MD5          2
#define DH_G_3_MD5          3
#define DH_G_2_DES_MD5      4    
#define DH_G_5_MD5          5
#define DH_G_3_DES_MD5      6
#define DH_G_VAR_MD5        7
#define DH_G_2_3DES_SHA1    8
#define DH_G_5_DES_MD5      10
#define DH_G_3_3DES_SHA1    12
#define DH_G_VAR_DES_MD5    14
#define DH_G_5_3DES_SHA1    20
#define DH_G_VAR_3DES_SHA1  28

typedef struct _attribute_list {
     struct _attribute_list *next;
     char *address;
     in_addr_t netmask;
     u_int8_t *attributes;
     u_int16_t attribsize;
} attribute_list;

typedef struct _attrib_t {
     struct _attrib_t *next;
     u_int16_t id;		/* Photuris Attribute ID */
     int type;			/* Type of attribute: ident, enc, auth */
     int klen;			/* required key length */
} attrib_t;

#define ATTRIBHASHMOD		17

EXTERN void putattrib(attrib_t *attrib);
EXTERN attrib_t *getattrib(u_int8_t id);
EXTERN void clearattrib(void);

EXTERN void get_attrib_section(u_int8_t *, u_int16_t, u_int8_t **, u_int16_t *,
			       u_int8_t);

EXTERN int isinattrib(u_int8_t *attributes, u_int16_t attribsize, 
		      u_int8_t attribute);
EXTERN int isattribsubset(u_int8_t *set, u_int16_t setsize, 
			  u_int8_t *subset, u_int16_t subsetsize);
EXTERN attribute_list *attrib_new(void);
EXTERN int attrib_insert(attribute_list *);
EXTERN int attrib_unlink(attribute_list *);
EXTERN int attrib_value_reset(attribute_list *);
EXTERN attribute_list *attrib_find(char *);
EXTERN void attrib_cleanup(void);

#endif /* ATTRIBUTES_H */
@


1.5
log
@- support HMAC flag which if present in the attribute list toggles to
HMAC authentication transforms and otherwise to simple keyed authentication.
Note, HMAC is necessary if new esp is to use integrity checking, i.e.
authentication of the payload.
- Also fix bug, where SPIs were reserved for more than one protocol when
only one protocol, e.g. ESP or AH, could be agreed upon.
- Also make kernel.c a bit less complex, I hope.
- return notifies to kernel on failure only when kernel started the keying.
@
text
@@


1.4
log
@compliance with draft-simpson-photuris-18.txt, better packet structure
checking, better support for new esp and ah, documentation ...
@
text
@d2 1
a2 1
 * Copyright 1997 Niels Provos <provos@@physnet.uni-hamburg.de>
d52 1
d78 1
a78 2
     int id;			/* Photuris Attribute ID */
     int koff;			/* Offset into kernel data structure */
d86 1
a86 1
EXTERN attrib_t *getattrib(int id);
@


1.3
log
@new symmetric identity choice. fix bug with expired exchange values on
multiple exchanges. a bit more documentation. drop -f flag and have -c
with opposite meaning instead. include responder offered schemes into
responder cookie calculation.
@
text
@d45 3
a47 9
#define AT_PAD        0
#define AT_AH_ATTRIB  1
#define AT_ESP_ATTRIB 2
#define AT_MD5_DP     3
#define AT_SHA1_DP    4
#define AT_MD5_KDP    5
#define AT_SHA1_KDP   6
#define AT_DES_CBC    8
#define AT_ORG        255
d49 3
a51 2
#define MD5_KEYLEN    384
#define DES_KEYLEN    64
d67 2
a68 2
struct attribute_list {
     struct attribute_list *next;
d73 18
a90 1
};
d96 5
a100 5
EXTERN struct attribute_list *attrib_new(void);
EXTERN int attrib_insert(struct attribute_list *);
EXTERN int attrib_unlink(struct attribute_list *);
EXTERN int attrib_value_reset(struct attribute_list *);
EXTERN struct attribute_list *attrib_find(char *);
@


1.2
log
@minor cleanup.
@
text
@d49 1
d51 1
@


1.1
log
@Initial revision
@
text
@d78 4
@


1.1.1.1
log
@initial import of the photuris keymanagement daemon
@
text
@@

