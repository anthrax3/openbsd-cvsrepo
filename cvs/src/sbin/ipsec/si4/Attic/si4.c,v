head	1.4;
access;
symbols
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	97.07.01.22.29.11;	author provos;	state dead;
branches;
next	1.3;

1.3
date	97.04.14.10.05.11;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	97.02.22.03.45.24;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	97.02.21.23.17.56;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove obsolete sources
@
text
@/*
 * The author of this code is John Ioannidis, ji@@tla.org,
 * 	(except when noted otherwise).
 *
 * This code was written for BSD/OS in Athens, Greece, in November 1995.
 *
 * Ported to OpenBSD and NetBSD, with additional transforms, in December 1996,
 * by Angelos D. Keromytis, kermit@@forthnet.gr.
 *
 * Copyright (C) 1995, 1996, 1997 by John Ioannidis and Angelos D. Keromytis.
 *	
 * Permission to use, copy, and modify this software without fee
 * is hereby granted, provided that this entire notice is included in
 * all copies of any software which is or includes a copy or
 * modification of this software.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NEITHER AUTHOR MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#include <sys/param.h>
#include <sys/file.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/mbuf.h>
#include <sys/sysctl.h>

#include <net/if.h>
#include <net/route.h>
#include <net/if_dl.h>
#include <netinet/in.h>
#include <netns/ns.h>
#include <netiso/iso.h>
#include <netccitt/x25.h>
#include <arpa/inet.h>
#include <netdb.h>

#include <errno.h>
#include <unistd.h>
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>
#include <paths.h>
#include "net/encap.h"
#include "netinet/ip_ipsp.h"
#include "netinet/ip_ip4.h" 

#define IFT_ENC 0x37


char buf[1024];

main(argc, argv)
int argc;
char **argv;
{
	int sd, len;

	struct encap_msghdr *em;
	struct ip4_xencap *xd;
	
	struct sockaddr_encap *dst, *msk, *gw;
	struct sockaddr_dl *dl;
	u_char *opts;

	if (argc != 4)
	  fprintf(stderr, "usage: %s dst spi ttl\n", argv[0]), exit(1);
	sd = socket(AF_ENCAP, SOCK_RAW, AF_UNSPEC);
	if (sd < 0)
	  perror("socket"), exit(1);
	
	em = (struct encap_msghdr *)&buf[0];
	
	em->em_msglen = EMT_SETSPI_FLEN + sizeof(struct ip4_xencap);
	em->em_version = 0;
	em->em_type = EMT_SETSPI;
	em->em_spi = htonl(strtoul(argv[2], NULL, 16));
	em->em_if = 1;
	em->em_dst.s_addr = inet_addr(argv[1]);
	em->em_alg = XF_IP4;
	xd = (struct ip4_xencap *)em->em_dat;
	xd->ip4_ttl = atoi(argv[3]);

	if (write(sd, buf, EMT_SETSPI_FLEN + sizeof(struct ip4_xencap)) != EMT_SETSPI_FLEN + sizeof(struct ip4_xencap))
	  perror("write");
}


@


1.3
log
@strtol to strtoul
@
text
@@


1.2
log
@Changed to reflect new TTL-option in kernel.
@
text
@d81 1
a81 1
	em->em_spi = htonl(strtol(argv[2], NULL, 16));
@


1.1
log
@Integration of IPSEC userland tools, no manpages yet, sorry.
@
text
@d7 1
a7 1
 * Ported to NetBSD, with additional transforms, in December 1996,
d50 1
a50 1
 
d64 1
d70 2
a71 2
	if (argc != 3)
	  fprintf(stderr, "usage: %s dst spi\n", argv[0]), exit(1);
d78 1
a78 1
	em->em_msglen = EMT_SETSPI_FLEN;
d85 2
a86 1
	
d88 1
a88 1
	if (write(sd, buf, EMT_SETSPI_FLEN) != EMT_SETSPI_FLEN)
@
