head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2005.08.08.04.04.13;	author deraadt;	state dead;
branches;
next	1.10;

1.10
date	2005.08.01.16.39.22;	author marco;	state Exp;
branches;
next	1.9;

1.9
date	2005.07.29.16.01.18;	author marco;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.18.15.10.56;	author dlg;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.18.01.29.19;	author marco;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.12.20.49.19;	author marco;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.06.02.36.34;	author marco;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.05.20.25.50;	author marco;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.05.19.45.06;	author marco;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.04.22.43.07;	author marco;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.04.17.36.46;	author marco;	state Exp;
branches;
next	;


desc
@@


1.11
log
@lots of cleanup, print lots of information based on new linkages between
devices provided by marco; ok marco
@
text
@/* $OpenBSD: bioctl.h,v 1.10 2005/08/01 16:39:22 marco Exp $       */
/*
 * Copyright (c) 2004, 2005 Marco Peereboom
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */
#ifndef _BIOCTL_H_
#define _BIOCTL_H_

/* misc defines */
#define INQSIZE (36)
#define SESSIZE (255)

#define S_TERA (1099511627776llu)
#define S_GIGA (1073741824llu)
#define S_MEGA (1048576llu)
#define S_KILO (1024llu)

void usage(void);
void cleanup(void);

void bio_inq(void);
void bio_alarm(char *);

#endif /* _BIOCTL_H_ */
@


1.10
log
@Add alarm support.
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.9 2005/07/29 16:01:18 marco Exp $       */
@


1.9
log
@Redo bioctl because initial implementation was too complex.

tested and ok dlg@@ beck@@
get it in @@deraadt
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.7 2005/07/18 01:29:19 marco Exp $       */
d44 1
@


1.8
log
@revert marcos bio changes, mickey not ok
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.6 2005/04/12 20:49:19 marco Exp $       */
d40 2
a41 5
/* functions */
#define F_READCAP (0x01)
#define F_ENUM    (0x02)
#define F_TUR     (0x04)
#define F_INQUIRY (0x08)
d43 1
a43 42
/* flags */
#define F_SILENCE (0x00)
#define F_NOISY   (0x01)

#define PARSELIST (0x8000000000000000llu)

struct read_cap {
	u_int32_t		maxlba;
	u_int32_t		bsize;
};

struct dev {
	SLIST_ENTRY(dev)	next;
	u_int16_t		id;
	u_int8_t		channel;
	u_int8_t		target;
	u_int8_t		type;
	u_int64_t		capacity;
};

void		usage(void);
void		cleanup(void);
u_int64_t	parse_passthru(char *);
void		parse_devlist(char *);
void		print_sense(u_int8_t *, u_int8_t);
void		print_inquiry(u_int8_t, u_int8_t*, u_int8_t);
void		print_cap(u_int64_t);
int		get_ses_page(u_int8_t, u_int8_t, u_int8_t, u_int8_t*, u_int8_t);
int		set_ses_page(u_int8_t, u_int8_t, u_int8_t*, u_int8_t);
void		ses_verbose(u_int8_t *, u_int8_t);

int		bio_get_capabilities(bioc_capabilities *);
void		bio_alarm(char *);
void		bio_blink_userland(u_int8_t, u_int8_t, u_int8_t);
void		bio_blink(char *, u_int8_t, u_int8_t);
void		bio_ping(void);
void		bio_startstop(char *, u_int8_t, u_int8_t);
void		bio_status(void);
u_int64_t	bio_pt_readcap(u_int8_t, u_int8_t, u_int8_t);
u_int32_t	bio_pt_inquire(u_int8_t, u_int8_t, u_int8_t, u_int8_t *);
u_int32_t	bio_pt_tur(u_int8_t, u_int8_t);
void		bio_pt_enum(void);
@


1.7
log
@Kill initial implementation because it sucked.  It was far too complex the new
paradigm is to virtualize the operations.  Using physical data is really only
necessary on low end hardware or by advanced users.
For now only support the inquiry operation.

ok dlg@@
@
text
@d40 5
a44 2
void usage(void);
void cleanup(void);
d46 42
a87 1
void bio_inq(void);
@


1.6
log
@Blink support is now fully functional.

Most enclosures timeout the normal blink in about 2 minutes; if not the user
can cancel the blink with -b unblink.  On the other hand the alarm blink never
times out.

example usage: bioctl -d ami0 -l 1:8 -b blink
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.5 2005/04/06 02:36:34 marco Exp $       */
d40 2
a41 5
/* functions */
#define F_READCAP (0x01)
#define F_ENUM    (0x02)
#define F_TUR     (0x04)
#define F_INQUIRY (0x08)
d43 1
a43 42
/* flags */
#define F_SILENCE (0x00)
#define F_NOISY   (0x01)

#define PARSELIST (0x8000000000000000llu)

struct read_cap {
	u_int32_t		maxlba;
	u_int32_t		bsize;
};

struct dev {
	SLIST_ENTRY(dev)	next;
	u_int16_t		id;
	u_int8_t		channel;
	u_int8_t		target;
	u_int8_t		type;
	u_int64_t		capacity;
};

void		usage(void);
void		cleanup(void);
u_int64_t	parse_passthru(char *);
void		parse_devlist(char *);
void		print_sense(u_int8_t *, u_int8_t);
void		print_inquiry(u_int8_t, u_int8_t*, u_int8_t);
void		print_cap(u_int64_t);
int		get_ses_page(u_int8_t, u_int8_t, u_int8_t, u_int8_t*, u_int8_t);
int		set_ses_page(u_int8_t, u_int8_t, u_int8_t*, u_int8_t);
void		ses_verbose(u_int8_t *, u_int8_t);

int		bio_get_capabilities(bioc_capabilities *);
void		bio_alarm(char *);
void		bio_blink_userland(u_int8_t, u_int8_t, u_int8_t);
void		bio_blink(char *, u_int8_t, u_int8_t);
void		bio_ping(void);
void		bio_startstop(char *, u_int8_t, u_int8_t);
void		bio_status(void);
u_int64_t	bio_pt_readcap(u_int8_t, u_int8_t, u_int8_t);
u_int32_t	bio_pt_inquire(u_int8_t, u_int8_t, u_int8_t, u_int8_t *);
u_int32_t	bio_pt_tur(u_int8_t, u_int8_t);
void		bio_pt_enum(void);
@


1.5
log
@Add ses blink crud.  Not fully functional yet.
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.4 2005/04/05 20:25:50 marco Exp $       */
d73 1
a73 1
int		get_ses_page(u_int8_t, u_int8_t, u_int8_t*, u_int8_t);
d75 1
@


1.4
log
@fix output from remaining passthrough functions
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.3 2005/04/05 19:45:06 marco Exp $       */
d33 1
d73 2
d78 1
@


1.3
log
@clean up enumeration.
properly print inquiry data.
identify devices bioctl cares about.
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.2 2005/04/04 22:43:07 marco Exp $       */
d79 1
a79 1
u_int64_t	bio_pt_readcap(u_int8_t, u_int8_t);
@


1.2
log
@Add initial blink/unblink harness.
Fix INQUIRY namespace polution.
Little clean up and new debug messages.
@
text
@d1 1
a1 1
/* $OpenBSD: bioctl.h,v 1.1 2005/04/04 17:36:46 marco Exp $       */
d31 17
a47 4
#define F_READCAP 0x01
#define F_ENUM    0x02
#define F_TUR     0x04
#define F_INQUIRY 0x08
d61 1
d70 2
d80 1
a80 1
u_int32_t	bio_pt_inquire(u_int8_t, u_int8_t, u_int8_t *);
@


1.1
log
@Add .h for some cleanup
@
text
@d1 1
a1 1
/* $OpenBSD$       */
d31 4
a34 4
#define READCAP 0x01
#define ENUM    0x02
#define TUR     0x04
#define INQUIRY 0x08
d59 1
@

