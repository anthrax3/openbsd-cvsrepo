head	1.40;
access;
symbols
	OPENBSD_6_1_BASE:1.40
	OPENBSD_6_0:1.40.0.4
	OPENBSD_6_0_BASE:1.40
	OPENBSD_5_9:1.40.0.2
	OPENBSD_5_9_BASE:1.40
	OPENBSD_5_8:1.39.0.10
	OPENBSD_5_8_BASE:1.39
	OPENBSD_5_7:1.39.0.2
	OPENBSD_5_7_BASE:1.39
	OPENBSD_5_6:1.39.0.6
	OPENBSD_5_6_BASE:1.39
	OPENBSD_5_5:1.39.0.4
	OPENBSD_5_5_BASE:1.39
	OPENBSD_5_4:1.37.0.2
	OPENBSD_5_4_BASE:1.37
	OPENBSD_5_3:1.35.0.2
	OPENBSD_5_3_BASE:1.35
	OPENBSD_5_2:1.34.0.4
	OPENBSD_5_2_BASE:1.34
	OPENBSD_5_1_BASE:1.34
	OPENBSD_5_1:1.34.0.2
	OPENBSD_5_0:1.33.0.18
	OPENBSD_5_0_BASE:1.33
	OPENBSD_4_9:1.33.0.16
	OPENBSD_4_9_BASE:1.33
	OPENBSD_4_8:1.33.0.14
	OPENBSD_4_8_BASE:1.33
	OPENBSD_4_7:1.33.0.10
	OPENBSD_4_7_BASE:1.33
	OPENBSD_4_6:1.33.0.12
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.8
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.6
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.33.0.4
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.31.0.2
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.26.0.4
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.26.0.2
	OPENBSD_3_9_BASE:1.26
	OPENBSD_3_8:1.25.0.10
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.25.0.8
	OPENBSD_3_7_BASE:1.25
	OPENBSD_3_6:1.25.0.6
	OPENBSD_3_6_BASE:1.25
	OPENBSD_3_5:1.25.0.4
	OPENBSD_3_5_BASE:1.25
	OPENBSD_3_4:1.25.0.2
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.23.0.2
	OPENBSD_3_3_BASE:1.23
	OPENBSD_3_2:1.21.0.4
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.21.0.2
	OPENBSD_3_1_BASE:1.21
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9:1.19.0.6
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_8:1.19.0.4
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.19.0.2
	OPENBSD_2_7_BASE:1.19
	OPENBSD_2_6:1.16.0.2
	OPENBSD_2_6_BASE:1.16
	OPENBSD_2_5:1.13.0.2
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.10.0.2
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.40
date	2015.11.21.19.43.50;	author jmc;	state Exp;
branches;
next	1.39;
commitid	BLIpVU02Vbh7iC7F;

1.39
date	2014.01.20.05.07.49;	author schwarze;	state Exp;
branches;
next	1.38;

1.38
date	2013.08.14.06.32.35;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2013.03.31.09.51.04;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2013.03.05.07.38.56;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2013.01.17.21.22.43;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2011.12.23.17.00.47;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2007.05.31.19.19.47;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.01.17.09.53;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2007.02.25.17.00.32;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2007.02.25.16.41.42;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2007.02.25.16.29.49;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2007.02.22.09.40.11;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2006.11.03.12.59.52;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2005.09.06.22.58.35;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.03.13.16.09;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.06.02.20.06.16;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2003.03.11.08.11.08;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2003.03.06.20.29.24;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.11.18.43.51;	author mpech;	state Exp;
branches;
next	1.20;

1.20
date	2001.10.04.22.33.49;	author ho;	state Exp;
branches;
next	1.19;

1.19
date	2000.04.18.21.45.14;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	2000.04.15.02.15.17;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.18.22.56.04;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	99.07.04.18.59.41;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	99.06.04.02.45.23;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.05.23.14.11.20;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	98.12.15.01.20.43;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	98.11.28.19.56.33;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	98.11.11.22.20.00;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	98.09.23.01.20.25;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	98.09.17.04.15.01;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.01.10.13.48.58;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.07.05.20.51.23;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.04.16.04.07.39;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.12.24.02.40.53;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.06.23.14.32.17;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.17.09.06.29;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.02.22.11.36.39;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.47;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.40
log
@add missing NAME entries; ok schwarze
@
text
@.\"	$OpenBSD: restore.8,v 1.39 2014/01/20 05:07:49 schwarze Exp $
.\"	$NetBSD: restore.8,v 1.15 1997/07/01 05:37:53 lukem Exp $
.\"
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)restore.8	8.3 (Berkeley) 6/1/94
.\"
.Dd $Mdocdate: January 20 2014 $
.Dt RESTORE 8
.Os
.Sh NAME
.Nm restore ,
.Nm rrestore
.Nd restore files or file systems from backups made with dump
.Sh SYNOPSIS
.Nm restore
.Op Fl chimRrtvxy
.Op Fl b Ar blocksize
.Op Fl f Ar file
.Op Fl s Ar fileno
.Op Ar
.Sh DESCRIPTION
The
.Nm
command performs the inverse function of
.Xr dump 8 .
A full backup of a file system may be restored and
subsequent incremental backups layered on top of it.
Single files and
directory subtrees may be restored from full or partial
backups.
Other arguments to the command are file or directory
names specifying the files that are to be restored.
Unless the
.Fl h
flag is specified (see below),
the appearance of a directory name refers to
the files and (recursively) subdirectories of that directory.
.Pp
.Nm
works across networks,
replacing the functionality of the old
.Nm rrestore
program
(though
.Nm
may still be invoked as
.Nm rrestore ) .
See the
.Fl f
option for more on reading backups from remote hosts.
.Pp
Exactly one of the following flags is required:
.Bl -tag -width Ds
.It Fl i
This mode allows interactive restoration of files from a dump.
After reading in the directory information from the dump,
.Nm
provides a shell like interface that allows the user to move
around the directory tree selecting files to be extracted.
The available commands are given below;
for those commands that require an argument,
the default is the current directory.
.Bl -tag -width Fl
.It Ic add Op Ar arg
The current directory or specified argument is added to the list of
files to be extracted.
If a directory is specified, then it and all its descendants are
added to the extraction list
(unless the
.Fl h
flag is specified on the command line).
Files that are on the extraction list are prepended with a
.Dq \&*
when they are listed by
.Ic ls .
.It Ic \&cd Ar arg
Change the current working directory to the specified argument.
.It Ic delete Op Ar arg
The current directory or specified argument is deleted from the list of
files to be extracted.
If a directory is specified, then it and all its descendants are
deleted from the extraction list
(unless the
.Fl h
flag is specified on the command line).
The most expedient way to extract most of the files from a directory
is to add the directory to the extraction list and then delete
those files that are not needed.
.It Ic extract
All files on the extraction list are extracted
from the dump.
.Nm
will ask which volume the user wishes to mount.
The fastest way to extract a few files is to
start with the last volume and work towards the first volume.
.It Ic help
List a summary of the available commands.
.It Ic \&ls Op Ar arg
List the current or specified directory.
Entries that are directories are appended with a
.Dq / .
Entries that have been marked for extraction are prepended with a
.Dq \&* .
If the verbose
flag is set, the inode number of each entry is also listed.
.It Ic pwd
Print the full pathname of the current working directory.
.It Ic quit
Restore immediately exits,
even if the extraction list is not empty.
.It Ic setmodes
All directories that have been added to the extraction list
have their owner, modes, and times set;
nothing is extracted from the dump.
This is useful for cleaning up after a restore has been prematurely aborted.
.It Ic verbose
The sense of the
.Fl v
flag is toggled.
When set, the verbose flag causes the
.Ic ls
command to list the inode numbers of all entries.
It also causes
.Nm
to print out information about each file as it is extracted.
.It Ic what
List dump header information.
.El
.It Fl R
.Nm
requests a particular tape of a multi-volume set on which to restart
a full restore
(see the
.Fl r
flag below).
This is useful if the restore has been interrupted.
.It Fl r
Restore (rebuild) a file system.
The target file system should be made pristine with
.Xr newfs 8 ,
mounted, and the user
changed working directory
into the pristine file system
before starting the restoration of the initial level 0 backup.
If the level 0 restores successfully, the
.Fl r
flag may be used to restore
any necessary incremental backups on top of the level 0.
The
.Fl r
flag precludes an interactive file extraction and can be
detrimental to one's health (not to mention the disk) if not used carefully.
An example of correct usage:
.Bd -literal -offset indent
# newfs /dev/rsd0g
# mount /dev/sd0g /mnt
# cd /mnt
# restore rf /dev/rst0
.Ed
.Pp
Note that
.Nm
leaves a file
.Pa restoresymtable
in the root directory to pass information between incremental
restore passes.
This file should be removed when the last incremental has been
restored.
.Pp
.Nm restore ,
in conjunction with
.Xr newfs 8
and
.Xr dump 8 ,
may be used to modify file system parameters
such as size or block size.
.It Fl t
The names of the specified files are listed if they occur
on the backup.
If no file argument is given,
the root directory is listed,
which results in the entire content of the
backup being listed,
unless the
.Fl h
flag has been specified.
Note that the
.Fl t
flag replaces the function of the old
.Sy dumpdir
program.
.It Fl x
The named files are read from the given media.
If a named file matches a directory whose contents
are on the backup
and the
.Fl h
flag is not specified,
the directory is recursively extracted.
The owner, modification time,
and mode are restored (if possible).
If no file argument is given,
the root directory is extracted,
which results in the entire content of the
backup being extracted,
unless the
.Fl h
flag has been specified.
.El
.Pp
The following additional options may be specified:
.Bl -tag -width Ds
.It Fl b Ar blocksize
The number of kilobytes per dump record.
If the
.Fl b
option is not specified,
.Nm
tries to determine the block size dynamically.
.It Fl c
Normally,
.Nm
will try to determine dynamically whether the dump was made from an
old (pre-4.4) or new format file system.
The
.Fl c
flag disables this check, and only allows reading a dump in the old
format.
.It Fl f Ar file
Read the backup from
.Ar file ;
.Ar file
may be a special device file
like
.Pa /dev/rst0
(a tape drive),
.Pa /dev/rsd1c
(a disk drive),
an ordinary file,
or
.Dq Fl
(the standard input).
If the name of the file is of the form
.Dq host:file
or
.Dq user@@host:file ,
.Nm
reads from the named file on the remote host using
.Xr rmt 8 .
.It Fl h
Extract the actual directory,
rather than the files that it references.
This prevents hierarchical restoration of complete subtrees
from the dump.
.It Fl m
Extract by inode numbers rather than by file name.
This is useful if only a few files are being extracted,
and one wants to avoid regenerating the complete pathname
to the file.
.It Fl s Ar fileno
Read from the specified
.Ar fileno
on a multi-file tape.
File numbering starts at 1.
.It Fl v
Normally
.Nm
does its work silently.
The
.Fl v
(verbose)
flag causes it to type the name of each file it treats
preceded by its file type.
.It Fl y
Do not ask the user whether to abort the restore in the event of an error.
Always try to skip over the bad block(s) and continue.
.El
.Sh ENVIRONMENT
If the following environment variable exists it will be utilized by
.Nm restore :
.Bl -tag -width "TMPDIR"
.It Ev TMPDIR
The directory given in
.Ev TMPDIR
will be used
instead of
.Pa /tmp
to store temporary files.
Refer to
.Xr environ 7
for more information.
.It Ev TAPE
Default tape device to use instead of
.Pa /dev/rst0 .
.El
.Sh FILES
.Bl -tag -width "./restoresymtable" -compact
.It Pa /dev/rst0
the default tape drive
.It Pa /dev/rst*
raw SCSI tape interface
.It Pa /tmp/rstdir*
file containing directories on the tape
.It Pa /tmp/rstmode*
owner, mode, and time stamps for directories
.It Pa \&./restoresymtable
information passed between incremental restores
.El
.Sh DIAGNOSTICS
Complains if it gets a read error.
If
.Fl y
has been specified, or the user responds
.Dq y ,
.Nm
will attempt to continue the restore.
.Pp
If a backup was made using more than one tape volume,
.Nm
will notify the user when it is time to mount the next volume.
If the
.Fl x
or
.Fl i
flag has been specified,
.Nm
will also ask which volume the user wishes to mount.
The fastest way to extract a few files is to
start with the last volume, and work towards the first volume.
.Pp
There are numerous consistency checks that can be listed by
.Nm restore .
Most checks are self-explanatory or can
.Dq never happen .
Common errors are given below.
.Pp
.Bl -tag -width Ds -compact
.It Converting to new file system format
A dump tape created from the old file system has been loaded.
It is automatically converted to the new file system format.
.Pp
.It <filename>: not found on tape
The specified file name was listed in the tape directory,
but was not found on the tape.
This is caused by tape read errors while looking for the file,
and from using a dump tape created on an active file system.
.Pp
.It expected next file <inumber>, got <inumber>
A file that was not listed in the directory showed up.
This can occur when using a dump created on an active file system.
.Pp
.It Incremental dump too low
When doing an incremental restore,
a dump that was written before the previous incremental dump,
or that has too low an incremental level has been loaded.
.Pp
.It Incremental dump too high
When doing an incremental restore,
a dump that does not begin its coverage where the previous incremental
dump left off,
or that has too high an incremental level has been loaded.
.Pp
.It Tape read error while restoring <filename>
.It Tape read error while skipping over inode <inumber>
.It Tape read error while trying to resynchronize
A tape (or other media) read error has occurred.
If a file name is specified,
its contents are probably partially wrong.
If an inode is being skipped or the tape is trying to resynchronize,
no extracted files have been corrupted,
though files may not be found on the tape.
.Pp
.It resync restore, skipped <num> blocks
After a dump read error,
.Nm
may have to resynchronize itself.
This message lists the number of blocks that were skipped over.
.El
.Sh SEE ALSO
.Xr environ 7 ,
.Xr dump 8 ,
.Xr mount 8 ,
.Xr newfs 8 ,
.Xr rmt 8
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
.Pp
The
.Bx 4.3
option syntax is implemented for backward compatibility but
is not documented here.
.Sh BUGS
.Nm
can get confused when doing incremental restores from
dumps that were made on active file systems.
.Pp
A level 0 dump must be done after a full restore.
Because
.Nm
runs in user mode,
it has no control over inode allocation;
thus a full dump must be done to get a new set of directories
reflecting the new inode numbering,
even though the content of the files is unchanged.
.Pp
The temporary files
.Pa /tmp/rstdir*
and
.Pa /tmp/rstmode*
are generated with a unique name based on the date of the dump
and the process ID (see
.Xr mktemp 3 ) ,
except when
.Fl r
or
.Fl R
is used.
Because
.Fl R
allows you to restart a
.Fl r
operation that may have been interrupted, the temporary files should
be the same across different processes.
In all other cases, the files are unique because it is possible to
have two different dumps started at the same time, and separate
operations shouldn't conflict with each other.
@


1.39
log
@Obvious .Xr fixes, found while testing mandocdb(8).
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.38 2013/08/14 06:32:35 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: August 14 2013 $
d37 2
a38 1
.Nm restore
@


1.38
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.37 2013/03/31 09:51:04 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: March 31 2013 $
d215 1
a215 1
.Xr dumpdir
@


1.37
log
@typo fix from rodent@@netbsd;
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.36 2013/03/05 07:38:56 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: March 5 2013 $
d38 1
a38 1
.Nd "restore files or file systems from backups made with dump"
@


1.36
log
@add a few words to the -r description to avoid ambiguity;
issue noted by Ronald F. Guilmette, freebsd docs/176648
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.35 2013/01/17 21:22:43 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: January 17 2013 $
d428 1
a428 1
runs in user code,
@


1.35
log
@remove a uesless Pp;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.34 2011/12/23 17:00:47 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: December 23 2011 $
d178 1
a178 1
An example:
@


1.34
log
@some spelling fixes, found using freebsd's "igor" document verifier;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.33 2007/05/31 19:19:47 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
a274 1
.Pp
@


1.33
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.32 2007/05/01 17:09:53 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d92 1
a92 1
If a directory is specified, then it and all its descendents are
d106 1
a106 1
If a directory is specified, then it and all its descendents are
@


1.32
log
@for the restore -r example:
- use /dev/sd rather than /dev/rp, since rp no longer exists
- use rst0 instead of rst8, since rst8 does not exist (by default)

from Matthias Scheler
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.31 2007/02/25 17:00:32 jmc Exp $
d33 1
a33 1
.Dd July 1, 1997
@


1.31
log
@reword some text to avoid a hideous Xr;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.30 2007/02/25 16:41:42 jmc Exp $
d180 2
a181 2
# newfs /dev/rrp0g
# mount /dev/rp0g /mnt
d183 1
a183 1
# restore rf /dev/rst8
@


1.30
log
@one application does not need five synopses;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.29 2007/02/25 16:29:49 jmc Exp $
d167 1
a167 1
.Xr cd Ns 'd
@


1.29
log
@move the text describing 4.3 syntax compatibility to HISTORY, rather
than slap bang in SYNOPSIS;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.28 2007/02/22 09:40:11 jmc Exp $
d41 1
a41 2
.Fl i
.Op Fl chmvy
d45 1
a45 26
.Nm restore
.Fl R
.Op Fl cvy
.Op Fl b Ar blocksize
.Op Fl f Ar file
.Op Fl s Ar fileno
.Nm restore
.Fl r
.Op Fl cvy
.Op Fl b Ar blocksize
.Op Fl f Ar file
.Op Fl s Ar fileno
.Nm restore
.Fl t
.Op Fl chvy
.Op Fl b Ar blocksize
.Op Fl f Ar file
.Op Fl s Ar fileno
.Op Ar file Ar ...
.Nm restore
.Fl x
.Op Fl chmvy
.Op Fl b Ar blocksize
.Op Fl f Ar file
.Op Fl s Ar fileno
.Op Ar file Ar ...
@


1.28
log
@igor sobrado spotted that although we have mlinks for rdump and
rrestore, the pages they point to don;t actually mention them.
so make it clear that their functionality is now integral in dump and
restore, and sync the text a little between the two pages;

help/ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.27 2006/11/03 12:59:52 jmc Exp $
a71 5
.Pp
(The
.Bx 4.3
option syntax is implemented for backward compatibility but
is not documented here.)
d442 5
@


1.27
log
@correctify example;

from a mail posted to misc@@ from uwe dippel;
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.26 2005/09/06 22:58:35 jmc Exp $
a86 5
.Nm
works across a network;
to do this see the
.Fl f
flag described below.
d94 13
@


1.26
log
@document `what' from interactive mode: from ely petty;
kill an unneeded .Pp whilst here;
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.25 2003/06/03 13:16:09 jmc Exp $
d203 1
a203 1
# newfs /dev/rrp0g eagle
@


1.25
log
@- section reorder
- some mdoc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.24 2003/06/02 20:06:16 millert Exp $
d174 2
a329 1
.Pp
@


1.24
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.23 2003/03/11 08:11:08 jmc Exp $
d325 32
a426 32
.Sh ENVIRONMENT
If the following environment variable exists it will be utilized by
.Nm restore :
.Pp
.Bl -tag -width "TMPDIR"
.It Ev TMPDIR
The directory given in
.Ev TMPDIR
will be used
instead of
.Pa /tmp
to store temporary files.
Refer to
.Xr environ 7
for more information.
.It Ev TAPE
Default tape device to use instead of
.Pa /dev/rst0 .
.El
.Sh FILES
.Bl -tag -width "./restoresymtable" -compact
.It Pa /dev/rst0
the default tape drive
.It Pa /dev/rst*
raw SCSI tape interface
.It Pa /tmp/rstdir*
file containing directories on the tape
.It Pa /tmp/rstmode*
owner, mode, and time stamps for directories
.It Pa \&./restoresymtable
information passed between incremental restores
.El
d433 5
a472 5
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
@


1.23
log
@files with dead .Xr's;

left .Xr, but removed man page number
as suggested by mpech@@

more help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.22 2003/03/06 20:29:24 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.22
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.21 2002/02/11 18:43:51 mpech Exp $
d240 1
a240 1
.Nm dumpdir
@


1.21
log
@Initial patch.
When you give command examples in a manual page prefix them with
	$ command
or
	# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.20 2001/10/04 22:33:49 ho Exp $
d240 1
a240 1
.Xr dumpdir 8
@


1.20
log
@restore also uses TAPE.
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.19 2000/04/18 21:45:14 aaron Exp $
d205 4
a208 5
newfs /dev/rrp0g eagle
mount /dev/rp0g /mnt
cd /mnt

restore rf /dev/rst8
@


1.19
log
@Typo: sytem -> system
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.18 2000/04/15 02:15:17 aaron Exp $
d404 1
a404 1
.Bl -tag -width "TMPDIR" -compact
d415 3
@


1.18
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.17 2000/03/18 22:56:04 aaron Exp $
d275 1
a275 1
old (pre-4.4) or new format file sytem.
@


1.17
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.16 1999/07/04 18:59:41 aaron Exp $
d455 1
a455 1
.Xr mktemp 3 ),
@


1.16
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.15 1999/06/04 02:45:23 aaron Exp $
d194 2
a195 2
before starting the restoration of the initial level 0 backup. If the
level 0 restores successfully, the
d275 2
a276 1
old (pre-4.4) or new format file sytem.  The
@


1.15
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.14 1999/05/23 14:11:20 aaron Exp $
a76 1
.in -\\n(iSu
a242 1
.ne 1i
@


1.14
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.13 1998/12/15 01:20:43 aaron Exp $
d127 1
a127 1
when they are listed by 
d139 1
a139 1
The most expedient way to extract most of the files from a directory 
d170 1
a170 1
The sense of the 
d173 1
a173 1
When set, the verbose flag causes the 
d213 1
a213 1
Note that 
d215 1
a215 1
leaves a file 
d247 1
a247 1
If a named file matches a directory whose contents 
d304 1
a304 1
Extract the actual directory, 
d333 1
a333 1
If 
d381 1
a381 1
a dump that does not begin its coverage where the previous incremental 
d396 1
a396 1
After a dump read error, 
d457 1
a457 1
except when 
@


1.13
log
@always give .Nm macros an argument in SYNOPSIS sections; krw@@tcn.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.12 1998/11/28 19:56:33 aaron Exp $
d39 1
a39 1
.Os BSD 4
@


1.12
log
@kill redundant .Nm macro arguments; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.11 1998/11/11 22:20:00 aaron Exp $
d44 1
a44 1
.Nm
d50 1
a50 1
.Nm
d56 1
a56 1
.Nm
d62 1
a62 1
.Nm
d69 1
a69 1
.Nm
@


1.11
log
@more `` '' -> .Dq sillyness; remove redundant .Pp macros; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.10 1998/09/23 01:20:25 aaron Exp $
d44 1
a44 1
.Nm restore
d50 1
a50 1
.Nm restore
d56 1
a56 1
.Nm restore
d62 1
a62 1
.Nm restore
d69 1
a69 1
.Nm restore
@


1.10
log
@alphabetize SEE ALSO entries and order them numerically according to section
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.9 1998/09/17 04:15:01 aaron Exp $
d125 2
a126 1
Files that are on the extraction list are prepended with a ``*''
d153 4
a156 2
Entries that are directories are appended with a ``/''.
Entries that have been marked for extraction are prepended with a ``*''.
d293 1
a293 1
.Ql Fl
d336 1
a336 1
.Ql y ,
d355 2
a356 1
Most checks are self-explanatory or can ``never happen''.
@


1.9
log
@sbin/ man page fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.8 1998/01/10 13:48:58 deraadt Exp $
d429 1
a430 1
.Xr mount 8 ,
@


1.8
log
@grammar
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.7 1997/07/05 20:51:23 millert Exp $
d68 1
a68 1
.Op file ...
d75 1
a75 1
.Op file ...
d80 1
a80 1
option syntax is implemented for backward compatibility, but
d142 1
a142 1
All the files that are on the extraction list are extracted
d147 1
a147 1
start with the last volume, and work towards the first volume.
d155 1
a155 1
flag is set the inode number of each entry is also listed.
d162 1
a162 1
All the directories that have been added to the extraction list
d179 1
a179 1
requests a particular tape of a multi volume set on which to restart
d186 1
a186 1
Restore (rebuild a file system).
d189 1
a189 1
mounted and the user
d200 2
a201 2
detrimental to one's health if not used carefully (not to mention
the disk). An example:
d230 1
a230 1
then the root directory is listed,
d253 1
a253 1
then the root directory is extracted,
d293 1
a293 1
.Dq host:file ,
d356 1
a356 1
.It Converting to new file system format.
d371 1
a371 1
When doing incremental restore,
d376 1
a376 1
When doing incremental restore,
d386 1
a386 1
then its contents are probably partially wrong.
d388 1
a388 1
then no extracted files have been corrupted,
d400 1
d402 4
a405 2
.It TMPDIR
The directory given in TMPDIR will be used
d418 1
a418 1
Raw SCSI tape interface
d420 1
a420 1
file containing directories on the tape.
d422 1
a422 1
owner, mode, and time stamps for directories.
d424 1
a424 1
information passed between incremental restores.
d437 1
a437 1
A level zero dump must be done after a full restore.
d453 1
a453 1
except for when 
@


1.7
log
@vprintf -> Vprintf and dprintf -> Dprintf to avoid confusion
Use err/errx and warn/warnx where it makes sense.
Some sprintf -> snprintf, strcpy -> strncpy, and strcat -> strncat.
Honor $TMPDIR (based on changes from NetBSD)
Use __progname not "restore" (we could be called as rrestore).
Some -Wall happiness.
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.6 1997/04/16 04:07:39 millert Exp $
d329 1
a329 1
Complaints if it gets a read error.
@


1.6
log
@No need for "pathnames.h" now that _PATH_DEFTAPE is in <paths.h>
Fix rmt -> rst in man page and change ".Nm restore" -> ".Nm"
@
text
@d1 2
a2 2
.\"	$OpenBSD: restore.8,v 1.5 1996/12/24 02:40:53 deraadt Exp $
.\"	$NetBSD: restore.8,v 1.11 1996/02/02 22:29:33 phil Exp $
d37 1
a37 1
.Dd June 1, 1994
d44 1
a44 1
.Nm
d50 1
a50 1
.Nm
d56 1
a56 1
.Nm
d62 1
a62 1
.Nm
d69 1
a69 1
.Nm
d92 1
a92 1
.Nm Restore
d144 1
a144 1
.Nm Restore
d178 1
a178 1
.Nm Restore
d219 1
a219 1
.Nm Restore ,
d397 13
d424 1
d430 1
a430 1
.Nm Restore
@


1.5
log
@no mkfs
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.4 1996/06/23 14:32:17 deraadt Exp $
d44 1
a44 1
.Nm restore
d50 1
a50 1
.Nm restore
d56 1
a56 1
.Nm restore
d62 1
a62 1
.Nm restore
d69 1
a69 1
.Nm restore
d84 1
a84 1
.Nm restore
d110 1
a110 1
.Nm restore
d174 1
a174 1
.Nm restore
d211 1
a211 1
.Nm restore
d268 1
a268 1
.Nm restore
d272 1
a272 1
.Nm restore
d284 1
a284 1
.Pa /dev/rmt12
d296 1
a296 1
.Nm restore
d317 1
a317 1
.Nm restore
d334 1
a334 1
.Nm restore
d338 1
a338 1
.Nm restore
d345 1
a345 1
.Nm restore
d393 1
a393 1
.Nm restore
d399 1
a399 1
.It Pa /dev/rmt8
d421 3
a423 1
Because restore runs in user code,
d427 1
a427 1
even though the contents of the files is unchanged.
d452 1
a452 1
.Nm restore
@


1.4
log
@update rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: restore.8,v 1.11 1996/02/02 22:29:33 phil Exp $
a413 1
.Xr mkfs 8 ,
@


1.3
log
@updated patch from lukem@@supp.cpr.itg.telecom.com.au to also make -r and -R work again
@
text
@d1 1
@


1.2
log
@From NetBSD:
Add /dev/rst* to FILES section. (Matches mt man page.)
Change default tape name in documentation from /dev/rmt? to /dev/rmt8 to
match pathnames.h.  (pr #601 from James Jegers)
@
text
@d426 22
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: restore.8,v 1.9 1995/03/18 14:59:49 cgd Exp $
d398 1
a398 1
.It Pa /dev/rmt?
d400 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
