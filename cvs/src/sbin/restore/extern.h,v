head	1.13;
access;
symbols
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.8
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.4
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.10.0.40
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.38
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.34
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.32
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.30
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.28
	OPENBSD_5_0:1.10.0.26
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.24
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.22
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.18
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2017.01.21.08.31.44;	author krw;	state Exp;
branches;
next	1.12;
commitid	6pABae7LLaEPI7Ds;

1.12
date	2014.09.07.19.43.35;	author guenther;	state Exp;
branches;
next	1.11;
commitid	GSOkQ3sPLnOep58t;

1.11
date	2014.09.03.02.37.24;	author guenther;	state Exp;
branches;
next	1.10;
commitid	v6FMrndDh24XIoWk;

1.10
date	2005.06.14.19.46.05;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.30.01.51.32;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.13.21.51.18;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.20.06.16;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.04.22.12.35;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.17.19.42.29;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.37;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.05.20.51.21;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.32.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Nuke whitespace foolish enough to expose itself during the great
"warning:" rectification.
@
text
@/*	$OpenBSD: extern.h,v 1.12 2014/09/07 19:43:35 guenther Exp $	*/
/*	$NetBSD: extern.h,v 1.4 1995/03/18 14:59:43 cgd Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)extern.h	8.2 (Berkeley) 1/7/94
 */

struct entry	*addentry(char *, ino_t, int);
long		 addfile(char *, ino_t, int);
void		 badentry(struct entry *, char *);
void		 canon(char *, char *, size_t);
void		 checkrestore(void);
void		 cleanup(void);
void		 closemt(void);
void		 createfiles(void);
void		 createleaves(char *);
void		 createlinks(void);
long		 deletefile(char *, ino_t, int);
void		 deleteino(ino_t);
ino_t		 dirlookup(const char *);
void		 dumpsymtable(char *, long);
void		 extractdirs(int);
int		 extractfile(char *);
void		 findunreflinks(void);
char		*flagvalues(struct entry *);
void		 freeentry(struct entry *);
void		 freename(char *);
int		 genliteraldir(char *, ino_t);
char		*gentempname(struct entry *);
void		 getfile(void (*)(char *, size_t), void (*)(char *, size_t));
void		 getvol(long);
void		 initsymtable(char *);
int		 inodetype(ino_t);
int		 linkit(char *, char *, int);
struct entry	*lookupino(ino_t);
struct entry	*lookupname(char *);
long		 listfile(char *, ino_t, int);
ino_t		 lowerbnd(ino_t);
void		 mktempname(struct entry *);
void		 moveentry(struct entry *, char *);
void		 msg(const char *, ...)
		    __attribute__((__format__ (printf, 1, 2)));
char		*myname(struct entry *);
void		 newnode(struct entry *);
void		 newtapebuf(long);
long		 nodeupdates(char *, ino_t, int);
void		 onintr(int);
void		 panic(const char *, ...)
		    __attribute__((__format__ (printf, 1, 2)));
void		 pathcheck(char *);
struct direct	*pathsearch(const char *);
void		 printdumpinfo(void);
void		 removeleaf(struct entry *);
void		 removenode(struct entry *);
void		 removeoldleaves(void);
void		 removeoldnodes(void);
void		 renameit(char *, char *);
int		 reply(char *);
RST_DIR		*rst_opendir(const char *);
struct direct	*rst_readdir(RST_DIR *);
void		 rst_closedir(RST_DIR *dirp);
void		 runcmdshell(void);
char		*savename(char *);
void		 setdirmodes(int);
void		 setinput(char *);
void		 setup(void);
void		 skipdirs(void);
void		 skipfile(void);
void		 skipmaps(void);
void		 treescan(char *, ino_t, long (*)(char *, ino_t, int));
ino_t		 upperbnd(ino_t);
long		 verifyfile(char *, ino_t, int);
void		 xtrnull(char *, size_t);
void		 xtrfile(char *, size_t);

/* From ../dump/dumprmt.c */
void		rmtclose(void);
int		rmthost(char *);
int		rmtioctl(int, int);
int		rmtopen(char *, int);
int		rmtread(char *, int);
int		rmtseek(int, int);
@


1.12
log
@Reuse xtrfile() to avoid duplication.
Casting from long to int for a size_t argument is dumb.
Calling warnx() right before err() is silly.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.11 2014/09/03 02:37:24 guenther Exp $	*/
d38 1
a38 1
void	 	 canon(char *, char *, size_t);
d40 1
a40 1
void 		 cleanup(void);
d49 1
a49 1
void	 	 extractdirs(int);
d55 1
a55 1
int	 	 genliteraldir(char *, ino_t);
d60 1
a60 1
int	 	 inodetype(ino_t);
d74 1
a74 1
void	 	 onintr(int);
d89 1
a89 1
void	 	 runcmdshell(void);
d91 1
a91 1
void	 	 setdirmodes(int);
d94 1
a94 1
void	 	 skipdirs(void);
d97 1
a97 1
void	 	 treescan(char *, ino_t, long (*)(char *, ino_t, int));
@


1.11
log
@Mark msg() and panic() as printf-like and fix the format error it turns up

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.10 2005/06/14 19:46:05 millert Exp $	*/
d101 1
@


1.10
log
@Kill whiteout support.  OK deraadt@@ and beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.9 2004/12/30 01:51:32 millert Exp $	*/
d68 2
a69 1
void		 msg(const char *, ...);
d75 2
a76 1
void		 panic(const char *, ...);
@


1.9
log
@Replace home-grown byte swapping routine with calls to swap* macros
from endian.h.  Header swapping is moved into its own function.
Fixes problems reading non-native endian dump images on sparc64.
Adapted from changes in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.8 2004/04/13 21:51:18 henning Exp $	*/
a36 1
int		 addwhiteout(char *);
a46 1
void		 delwhiteout(struct entry *);
@


1.8
log
@fix restore so that it can actually restore files larger than 4GB by
changing the type of "size" to off_t in getfiles() plus little dependent
type cleanup, from Daniel Lucq <daniel@@lucq.org>
ok tdeval@@ millert@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.7 2003/06/02 20:06:16 millert Exp $	*/
a96 1
void		 swabst(u_char *, u_char *);
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.6 2003/04/04 22:12:35 deraadt Exp $	*/
d59 1
a59 1
void		 getfile(void (*)(char *, long), void (*)(char *, long));
d101 1
a101 1
void		 xtrnull(char *, long);
@


1.6
log
@simple string fixes; ok matthieu tedu tdeval
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.5 2002/02/17 19:42:29 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.4 2002/02/16 21:27:37 millert Exp $	*/
d43 1
a43 1
void	 	 canon(char *, char *);
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.3 1997/07/05 20:51:21 millert Exp $	*/
d63 1
a63 1
void		 getfile __P((void (*)(char *, long), void (*)(char *, long)));
d102 1
a102 1
void	 	 treescan __P((char *, ino_t, long (*)(char *, ino_t, int)));
@


1.3
log
@vprintf -> Vprintf and dprintf -> Dprintf to avoid confusion
Use err/errx and warn/warnx where it makes sense.
Some sprintf -> snprintf, strcpy -> strncpy, and strcat -> strncat.
Honor $TMPDIR (based on changes from NetBSD)
Use __progname not "restore" (we could be called as rrestore).
Some -Wall happiness.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.2 1996/06/23 14:32:15 deraadt Exp $	*/
d39 24
a62 24
struct entry	*addentry __P((char *, ino_t, int));
long		 addfile __P((char *, ino_t, int));
int		 addwhiteout __P((char *));
void		 badentry __P((struct entry *, char *));
void	 	 canon __P((char *, char *));
void		 checkrestore __P((void));
void 		 cleanup __P((void));
void		 closemt __P((void));
void		 createfiles __P((void));
void		 createleaves __P((char *));
void		 createlinks __P((void));
long		 deletefile __P((char *, ino_t, int));
void		 deleteino __P((ino_t));
void		 delwhiteout __P((struct entry *));
ino_t		 dirlookup __P((const char *));
void		 dumpsymtable __P((char *, long));
void	 	 extractdirs __P((int));
int		 extractfile __P((char *));
void		 findunreflinks __P((void));
char		*flagvalues __P((struct entry *));
void		 freeentry __P((struct entry *));
void		 freename __P((char *));
int	 	 genliteraldir __P((char *, ino_t));
char		*gentempname __P((struct entry *));
d64 38
a101 38
void		 getvol __P((long));
void		 initsymtable __P((char *));
int	 	 inodetype __P((ino_t));
int		 linkit __P((char *, char *, int));
struct entry	*lookupino __P((ino_t));
struct entry	*lookupname __P((char *));
long		 listfile __P((char *, ino_t, int));
ino_t		 lowerbnd __P((ino_t));
void		 mktempname __P((struct entry *));
void		 moveentry __P((struct entry *, char *));
void		 msg __P((const char *, ...));
char		*myname __P((struct entry *));
void		 newnode __P((struct entry *));
void		 newtapebuf __P((long));
long		 nodeupdates __P((char *, ino_t, int));
void	 	 onintr __P((int));
void		 panic __P((const char *, ...));
void		 pathcheck __P((char *));
struct direct	*pathsearch __P((const char *));
void		 printdumpinfo __P((void));
void		 removeleaf __P((struct entry *));
void		 removenode __P((struct entry *));
void		 removeoldleaves __P((void));
void		 removeoldnodes __P((void));
void		 renameit __P((char *, char *));
int		 reply __P((char *));
RST_DIR		*rst_opendir __P((const char *));
struct direct	*rst_readdir __P((RST_DIR *));
void		 rst_closedir __P((RST_DIR *dirp));
void	 	 runcmdshell __P((void));
char		*savename __P((char *));
void	 	 setdirmodes __P((int));
void		 setinput __P((char *));
void		 setup __P((void));
void	 	 skipdirs __P((void));
void		 skipfile __P((void));
void		 skipmaps __P((void));
void		 swabst __P((u_char *, u_char *));
d103 3
a105 3
ino_t		 upperbnd __P((ino_t));
long		 verifyfile __P((char *, ino_t, int));
void		 xtrnull __P((char *, long));
d108 6
a113 6
void		rmtclose __P((void));
int		rmthost __P((char *));
int		rmtioctl __P((int, int));
int		rmtopen __P((char *, int));
int		rmtread __P((char *, int));
int		rmtseek __P((int, int));
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.4 1995/03/18 14:59:43 cgd Exp $	*/
d41 1
d52 1
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
