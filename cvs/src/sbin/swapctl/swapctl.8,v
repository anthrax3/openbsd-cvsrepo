head	1.34;
access;
symbols
	OPENBSD_6_1:1.34.0.8
	OPENBSD_6_1_BASE:1.34
	OPENBSD_6_0:1.34.0.4
	OPENBSD_6_0_BASE:1.34
	OPENBSD_5_9:1.34.0.2
	OPENBSD_5_9_BASE:1.34
	OPENBSD_5_8:1.33.0.12
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.33.0.4
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.33.0.8
	OPENBSD_5_6_BASE:1.33
	OPENBSD_5_5:1.33.0.6
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.32.0.8
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.32.0.6
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.4
	OPENBSD_5_0:1.32.0.2
	OPENBSD_5_0_BASE:1.32
	OPENBSD_4_9:1.30.0.2
	OPENBSD_4_9_BASE:1.30
	OPENBSD_4_8:1.29.0.14
	OPENBSD_4_8_BASE:1.29
	OPENBSD_4_7:1.29.0.10
	OPENBSD_4_7_BASE:1.29
	OPENBSD_4_6:1.29.0.12
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.29.0.8
	OPENBSD_4_5_BASE:1.29
	OPENBSD_4_4:1.29.0.6
	OPENBSD_4_4_BASE:1.29
	OPENBSD_4_3:1.29.0.4
	OPENBSD_4_3_BASE:1.29
	OPENBSD_4_2:1.29.0.2
	OPENBSD_4_2_BASE:1.29
	OPENBSD_4_1:1.26.0.4
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.26.0.2
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.22.0.12
	OPENBSD_3_9_BASE:1.22
	OPENBSD_3_8:1.22.0.10
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.22.0.8
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.22.0.6
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.22.0.4
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.22.0.2
	OPENBSD_3_4_BASE:1.22
	OPENBSD_3_3:1.20.0.2
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	VMSWAP2_TAG:1.1.1.1
	VMSWAP1_TAG:1.1.1;
locks; strict;
comment	@.\" @;


1.34
date	2015.09.15.16.23.25;	author schwarze;	state Exp;
branches;
next	1.33;
commitid	9Is0DP7vcI2nkwOI;

1.33
date	2013.07.16.09.45.28;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2011.04.17.21.20.25;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2011.04.17.20.17.12;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2010.09.03.10.08.22;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2007.07.17.18.18.36;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2007.05.31.19.19.48;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.27.04.17.17;	author grunk;	state Exp;
branches;
next	1.26;

1.26
date	2006.08.24.08.51.55;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2006.08.24.08.47.58;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.24.08.30.26;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2006.08.24.07.47.16;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2003.06.03.13.16.09;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.05.10.06.33.39;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2003.02.13.08.23.39;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.19.00.39.57;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.05.15.23.22.50;	author art;	state Exp;
branches;
next	1.17;

1.17
date	2001.12.21.11.41.50;	author mpech;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.02.18.37.34;	author mpech;	state Exp;
branches;
next	1.15;

1.15
date	2001.07.26.20.00.04;	author pvalchev;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.23.15.30.26;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.11.09.17.53.08;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.06.28.23.33.25;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.13.13.26.00;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.18.22.56.05;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.05.00.28.51;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.26.04.18.55;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.26.04.06.23;	author hugh;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.13.01.05.42;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.07.21.01.07.57;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.07.05.03.23.24;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.06.05.01.29.38;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.06.04.02.45.25;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.05.22.21.33.14;	author weingart;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.22.21.33.14;	author weingart;	state Exp;
branches;
next	;


desc
@@


1.34
log
@fix markup of the -t argument
@
text
@.\"	$OpenBSD: swapctl.8,v 1.33 2013/07/16 09:45:28 schwarze Exp $
.\"	$NetBSD: swapctl.8,v 1.14 1998/05/22 18:27:52 msaitoh Exp $
.\"
.\" Copyright (c) 1997 Matthew R. Green
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 16 2013 $
.Dt SWAPCTL 8
.Os
.Sh NAME
.Nm swapctl ,
.Nm swapon
.Nd system swap management tool
.Sh SYNOPSIS
.Nm swapctl
.Fl A
.Op Fl p Ar priority
.Op Fl t Cm blk | noblk
.Nm swapctl
.Fl a
.Op Fl p Ar priority
.Ar path
.Nm swapctl
.Fl c
.Fl p Ar priority
.Ar path
.Nm swapctl
.Fl d
.Ar path
.Nm swapctl
.Fl l | Fl s
.Op Fl k
.Nm swapon
.Fl a | Ar path
.Sh DESCRIPTION
The
.Nm
program adds, removes,
lists and prioritizes swap devices and files for the system.
The
.Nm swapon
program acts the same as
.Ic swapctl -a ,
except if
.Nm swapon
itself is called with
.Fl a ,
in which case
it acts as
.Ic swapctl -A .
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A
This option causes
.Nm
to read the
.Pa /etc/fstab
file for devices and files with an
.Dq sw
type, and adds all these entries
as swap devices.
If no swap devices are configured,
.Nm
will exit with an error code.
.It Fl a
The
.Fl a
option requires that a
.Ar path
also be in the argument list.
The
.Ar path
is added to the kernel's list of swap devices using the
.Xr swapctl 2
system call.
When using the
.Nm swapon
form of this command, the
.Fl a
option is treated the same as the
.Fl A
option, for backwards compatibility.
.It Fl c
The
.Fl c
option changes the priority of the listed swap device or file.
.It Fl d Ar path
The
.Fl d
option removes the listed
.Ar path
from the kernel's list of swap devices or files.
.It Fl k
The
.Fl k
option uses 1024 byte blocks instead of the default 512 byte.
.It Fl l
The
.Fl l
option lists the current swap devices and files, and their usage statistics.
.It Fl p Ar priority
The
.Fl p
option sets the priority of swap devices or files to the
.Ar priority
argument.
.It Fl s
The
.Fl s
option displays a single line summary of current swap statistics.
.It Fl t Cm blk | noblk
This flag modifies the function of the
.Fl A
option.
The
.Fl t
option allows the type of device to add to be specified.
An argument of
.Cm blk
causes all block devices in
.Pa /etc/fstab
to be added.
An argument of
.Cm noblk
causes all non-block devices in
.Pa /etc/fstab
to be added.
This option is useful in early system startup, where swapping
may be needed before all file systems are available, such as during
disk checks of large file systems.
.El
.Sh SWAP OPTIONS
Lines such as the following
specify swap devices in
.Pa /etc/fstab :
.Bd -literal -offset indent
/dev/sd1b none swap sw
d48d0e3fc1c39531.k none swap sw
.Ed
.Pp
The initial swap device (root disk, partition b) need not appear in
.Pa /etc/fstab ,
though it is not an error for it to do so.
.Pp
Additional flags include:
.Pp
.Bl -tag -width nfsmntpt=/path -compact
.It priority=N
Swap devices and files may be assigned different priorities,
to allow faster resources to be used first.
Swap devices at the same priority are used in a round-robin fashion until
there is no more space available at this priority, when the next priority
level will be used.
The default priority is 0, the highest.
This value can be any valid integer,
with higher values receiving less priority.
.It nfsmntpt=/path
This option is useful for swapping to NFS files.
It specifies the local mount point to mount an NFS filesystem.
Typically, once
this mount has succeeded, the file to be used for swapping on will
be available under this point mount.
For example:
.Bd -literal
server:/export/swap/client none swap sw,nfsmntpt=/swap
.Ed
.El
.Sh EXIT STATUS
.Ex -std swapctl
.Sh SEE ALSO
.Xr swapctl 2 ,
.Xr vnd 4 ,
.Xr fstab 5 ,
.Xr mount_nfs 8 ,
.Xr mount_vnd 8
.Sh HISTORY
The
.Nm
program was originally developed in
.Nx 1.3 .
It was ported to
.Ox 2.6
by Tobias Weingartner.
The original
.Nm swapon
program, provided for backwards compatibility, appeared in
.Bx 4.0 .
.Sh AUTHORS
The
.Nm
program was written by
.An Matthew R. Green Aq Mt mrg@@eterna.com.au .
.Sh BUGS
Local and remote swap files cannot be configured until the file
systems they reside on are mounted read/write.
The system startup scripts need to
.Xr fsck 8
all local file systems before this can happen.
This process requires substantial amounts of memory on some systems.
If one configures no
local block swap devices on a machine that has local file systems to
check and rely only on swap files, the machine will have no swap space
at all during system
.Xr fsck 8
and may run out of real memory, causing fsck to abnormally exit and
startup scripts to fail.
@


1.33
log
@Add missing .Mt macros for AUTHORS email addresses.
From Jan Stary <hans at stare dot cz>.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.32 2011/04/17 21:20:25 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: April 17 2011 $
d41 1
a41 1
.Op Fl t Ar blk|noblk
d135 1
a135 1
.It Fl t Ar blk|noblk
d143 1
a143 1
.Ar blk
d148 1
a148 1
.Ar noblk
@


1.32
log
@a little more tweaking; ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.31 2011/04/17 20:17:12 krw Exp $
d216 1
a216 1
.An Matthew R. Green Aq mrg@@eterna.com.au .
@


1.31
log
@Tweak verbiage, bring examples up to date.

Suggestions from deraadt@@ and jmc@@.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.30 2010/09/03 10:08:22 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: September 3 2010 $
d157 3
a159 1
Lines such as
d165 1
a165 3
specify swap devices in
.Pa /etc/fstab .
The initial swap device (root disk, partition b) does not need to appear in
d167 1
a167 1
although it may.
@


1.30
log
@add an EXIT STATUS section for /sbin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.29 2007/07/17 18:18:36 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: July 17 2007 $
a74 14
.Sy Note :
The initial swap device (root disk, partition b) is handled automatically
by the kernel and does
.Em not
need to be added to
.Pa /etc/fstab
or added via
.Nm swapctl .
It will show up as
.Qq swap_device
in the output displayed with the
.Fl l
flag.
.Pp
d157 1
a157 4
When parsing the
.Pa /etc/fstab
file for swap devices, lines such as the following specify additional swap
devices:
d159 2
a160 1
/dev/sd1b none swap sw 0 0
d162 6
@


1.29
log
@do not try to list which options go with -p: the list is currently out of
date, and even if i update it, it will obsolete itself if we add or remove
options. it works when it makes sense, like it should.

after a request from Igor Zinovik
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.28 2007/05/31 19:19:48 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate$
a169 2
.Pp
.Ex -std swapctl
d202 2
@


1.28
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.27 2007/05/27 04:17:17 grunk Exp $
a144 7
This works with the
.\" .Fl d ,
.Fl a ,
.Fl c
and
.Fl l
options.
@


1.27
log
@fix .Xr's to mount_vnd(8)

suggested and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.26 2006/08/24 08:51:55 jmc Exp $
d30 1
a30 1
.Dd June 12, 1997
@


1.26
log
@add .Ex;
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.25 2006/08/24 08:47:58 jmc Exp $
d213 1
d216 1
a216 1
.Xr vnconfig 8
@


1.25
log
@- expand the text on priorities: from netbsd
- move WARNINGS to BUGS: from netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.24 2006/08/24 08:30:26 jmc Exp $
d177 2
@


1.24
log
@reword a scary sentence;
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.23 2006/08/24 07:47:16 jmc Exp $
d190 8
a197 2
This option sets the priority of the specified swap device to N.
The highest priority is 0, second priority is 1, etc.
a208 14
.Sh WARNINGS
Local and remote swap files cannot be configured until the file
systems they reside on are mounted read/write.
The system startup scripts need to
.Xr fsck 8
all local file systems before this can happen.
This process requires substantial amounts of memory on some systems.
If one configures no
local block swap devices on a machine that has local file systems to
check and rely only on swap files, the machine will have no swap space
at all during system
.Xr fsck 8
and may run out of real memory, causing fsck to abnormally exit and
startup scripts to fail.
d231 14
@


1.23
log
@sort options;
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.22 2003/06/03 13:16:09 jmc Exp $
d65 3
a67 5
program acts the same as the
.Nm
program, as if called with the
.Fl a
option, except if
d72 2
a73 6
.Nm swapon
acts as
.Nm
with the
.Fl A
option.
@


1.22
log
@- section reorder
- some mdoc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.21 2003/05/10 06:33:39 jmc Exp $
d137 4
a144 4
.It Fl s
The
.Fl s
option displays a single line summary of current swap statistics.
d158 1
a158 1
.It Fl k
d160 2
a161 2
.Fl k
option uses 1024 byte blocks instead of the default 512 byte.
@


1.21
log
@document that kernel automatically handles first swap partition
("swap_device" in swapctl -l) and does not need to be added to /etc/fstab.

krw@@, fries@@, rohee@@, millert@@, henning@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.20 2003/02/13 08:23:39 jmc Exp $
d243 2
a244 1
program was written by Matthew R. Green <mrg@@eterna.com.au>.
@


1.20
log
@typos;

setextattr(8): example markus@@
spamd(8): someone else found some of these on bugs/misc, but for the life
	  of me i can't find out who
pf.conf(5): from openbsd@@davidkrause.com
raidctl(8): from ian@@darwinsys.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.19 2002/12/19 00:39:57 deraadt Exp $
d80 14
@


1.19
log
@no you
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.18 2002/05/15 23:22:50 art Exp $
d72 2
a73 2
.Fl a
in which case,
@


1.18
log
@kill the reference to swapoff.
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.17 2001/12/21 11:41:50 mpech Exp $
d202 1
a202 1
If you configure no
@


1.17
log
@Initial patch for a new mdoc issue.
Powered by @@mantoya:
o) kill extra line in the end of file;
o) kill extra space in the end of line;
o) replace blank lines with .Pp;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.16 2001/08/02 18:37:34 mpech Exp $
a57 2
.Nm swapoff
.Ar path
@


1.16
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.15 2001/07/26 20:00:04 pvalchev Exp $
d176 1
a176 4

.Pp
.Bd -literal -offset indent -compact
 
@


1.15
log
@Remove BUGS section, swapoff now works. ok art@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.14 2001/04/23 15:30:26 aaron Exp $
d231 1
a231 1
.Sh AUTHOR
@


1.14
log
@Various man page fixes and improvements from gluk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.13 2000/11/09 17:53:08 aaron Exp $
a234 9
.Sh BUGS
The
.Nm swapoff
command and the
.Fl d
option of
.Nm
are not currently supported by
.Ox .
@


1.13
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.12 2000/06/28 23:33:25 art Exp $
d201 1
a201 1
Local and remote swap files cannot be configured until after the file
@


1.12
log
@Remove information that's NetBSD-specific.
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.11 2000/04/13 13:26:00 deraadt Exp $
d84 1
a84 1
.Bl -tag -width 123456
@


1.11
log
@example fstab entry
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.10 2000/03/18 22:56:05 aaron Exp $
a200 7
If no swap information is specified in
.Pa /etc/fstab ,
the system startup scripts (see
.Xr rc 8 )
will configure no swap space and your machine will behave very badly
if (more likely when) it runs out of real memory.
.Pp
@


1.10
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.9 2000/03/05 00:28:51 aaron Exp $
d174 10
a183 1
file for swap devices, the following options are recognized:
@


1.9
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.8 2000/02/26 04:18:55 hugh Exp $
d93 2
a94 1
as swap devices.  If no swap devices are configured,
d102 2
a103 1
also be in the argument list.  The
d107 2
a108 1
system call.  When using the
d138 2
a139 1
argument.  This works with the
d156 2
a157 1
option allows the type of device to add to be specified.  An argument of
d161 2
a162 1
to be added.  An argument of
d166 2
a167 1
to be added.  This option is useful in early system startup, where swapping
d178 2
a179 2
This option sets the priority of the specified swap device to N.  The
highest priority is 0, second priority is 1, etc.
d181 3
a183 2
This option is useful for swapping to NFS files.  It specifies
the local mount point to mount an NFS filesystem.  Typically, once
d185 2
a186 1
be available under this point mount.  For example:
d200 2
a201 2
systems they reside on are mounted read/write.  The system startup
scripts need to
d203 3
a205 2
all local file systems before this can happen. This process requires
substantial amounts of memory on some systems.  If you configure no
@


1.8
log
@we are openbsd; mention toby
@
text
@d1 1
a1 1
.\"	$OpenBSD: swapctl.8,v 1.7 2000/02/26 04:06:23 hugh Exp $
d82 2
a83 2
.Sh OPTIONS
The following options are available:
d202 5
a231 5
.Sh SEE ALSO
.Xr swapctl 2 ,
.Xr fstab 5 ,
.Xr mount_nfs 8 ,
.Xr vnconfig 8
@


1.7
log
@add rcs idents
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d205 1
a205 1
program was first made available in
d207 3
d226 1
a226 1
.Nx .
@


1.6
log
@Xr vnconfig(8); sdb@@ssr.com
@
text
@d1 1
@


1.5
log
@use .Ar on later .It Fl lines
@
text
@d226 2
a227 1
.Xr mount_nfs 8
@


1.4
log
@fix Nm usage in SYNOPSIS section; d@@
@
text
@d115 1
a115 1
.It Fl d
d129 1
a129 1
.It Fl p
d145 1
a145 1
.It Fl t
@


1.3
log
@more .Os cleansing
@
text
@d37 1
a37 1
.Nm
d41 1
a41 1
.Nm ""
d45 1
a45 1
.Nm ""
d49 1
a49 1
.Nm ""
d52 1
a52 1
.Nm ""
d89 3
a91 1
file for devices and files with a ``sw'' type, and adds all these entries
@


1.2
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d31 1
a31 1
.Os NetBSD
@


1.1
log
@Initial revision
@
text
@d76 1
a76 1
acts as 
d175 1
a175 1
.Bd -literal 
@


1.1.1.1
log
@Initial import of swapctl(8).
@
text
@@
