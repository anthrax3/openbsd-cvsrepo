head	1.6;
access;
symbols
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2003.03.13.00.33.47;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2002.06.10.19.58.20;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.07.29.45;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.14.23.28.58;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.11.21.21.18;	author provos;	state Exp;
branches;
next	;


desc
@@


1.6
log
@thought we had already deleted this
@
text
@/*	$OpenBSD: log.h,v 1.5 2002/06/10 19:58:20 espie Exp $	*/
/*	$EOM: log.h,v 1.19 2000/03/30 14:27:23 ho Exp $	*/

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _LOG_H_
#define _LOG_H_

#include <sys/types.h>
#include <stdio.h>

/*
 * We cannot do the log strings dynamically sizeable as out of memory is one
 * of the situations we need to report about.
 */
#define LOG_SIZE	200

enum log_classes {
  LOG_MISC, LOG_PROTOCOL, LOG_CRYPTO, LOG_TIMER, LOG_SPI, LOG_KERNEL,
  LOG_ENDCLASS
};
#define LOG_CLASSES_TEXT \
  { "Misc", "Prot", "Cryp", "Timr", "SPI ", "Kern" }

/*
 * "Class" LOG_REPORT will always be logged to the current log channel,
 * regardless of level.
 */
#define LOG_PRINT  -1
#define LOG_REPORT -2

#ifdef USE_DEBUG

#define LOG_DBG(x)	log_debug x
#define LOG_DBG_BUF(x)	log_debug_buf x

extern void log_debug (int, int, const char *, ...);
extern void log_debug_buf (int, int, const char *, const u_int8_t *, size_t);
extern void log_debug_cmd (int, int);

#else /* USE_DEBUG */

#define LOG_DBG(x)
#define LOG_DBG_BUF(x)

#endif /* USE_DEBUG */

extern FILE *log_current (void);
#if defined(__GNUC__)
extern void log_error (const char *, ...)
	__attribute__((__format__ (printf, 1, 2))) __attribute__((__nonnull__(1)));
extern void log_fatal (const char *, ...)
	__attribute__((__format__ (printf, 1, 2))) __attribute__((__nonnull__(1)));
extern void log_print (const char *, ...)
	__attribute__((__format__ (printf, 1, 2))) __attribute__((__nonnull__(1)));
#else
extern void log_error (const char *, ...);
extern void log_fatal (const char *, ...);
extern void log_print (const char *, ...);
#endif
extern void log_to (FILE *);
extern void log_init (void);

#endif /* _LOG_H_ */
@


1.5
log
@kill __FUNCTION__
add __attribute__((format...)
Fix one bad call.

okay provos@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.4 2002/06/09 08:13:08 todd Exp $	*/
@


1.4
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.3 2000/12/15 07:29:45 provos Exp $	*/
d80 8
d91 1
@


1.3
log
@return resource exhaustion message on memory allocation error. poll on
the pfkey fd so that we dont block when a message gets lossed.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.2 2000/12/14 23:28:58 provos Exp $	*/
d50 1
a50 1
  LOG_MISC, LOG_PROTOCOL, LOG_CRYPTO, LOG_TIMER, LOG_SPI, LOG_KERNEL, 
@


1.2
log
@queue pfkey acquire and expire messages if we are currently waiting for
another pfkey transaction to return. some cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.1 2000/12/11 21:21:18 provos Exp $	*/
d50 1
a50 1
  LOG_MISC, LOG_TRANSPORT, LOG_CRYPTO, LOG_TIMER, LOG_SPI, LOG_KERNEL, 
d54 1
a54 1
  { "Misc", "Trpt", "Cryp", "Timr", "SPI ", "Kern" }
@


1.1
log
@proper logging.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.8 2000/04/07 22:05:08 niklas Exp $	*/
d50 1
a50 1
  LOG_MISC, LOG_TRANSPORT, LOG_CRYPTO, LOG_TIMER, LOG_SA, LOG_KERNEL, 
d54 1
a54 1
  { "Misc", "Trpt", "Cryp", "Timr", "SA  ", "Kern" }
@

