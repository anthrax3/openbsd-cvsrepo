head	1.14;
access;
symbols
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.14
date	2003.03.13.00.33.47;	author deraadt;	state dead;
branches;
next	1.13;

1.13
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.07.18.26.18;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.08.21.41.47;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.28.22.45.15;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.15.02.50.39;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	2000.12.15.02.42.09;	author provos;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.14.23.28.58;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.11.21.21.18;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.11.20.32.15;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	99.12.17.18.57.03;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.04.10.00.10.17;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	99.03.27.21.18.02;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	98.11.14.23.37.28;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@thought we had already deleted this
@
text
@/*	$OpenBSD: photurisd.c,v 1.13 2002/06/09 08:13:08 todd Exp $	*/

/*
 * Copyright 1997-2000 Niels Provos <provos@@citi.umich.edu>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Niels Provos.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * photurisd.c: photuris daemon and stuff.
 */

#ifndef lint
static char rcsid[] = "$OpenBSD: photurisd.c,v 1.13 2002/06/09 08:13:08 todd Exp $";
#endif

#define _PHOTURIS_C_

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <signal.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>
#include "config.h"
#include "photuris.h"
#include "server.h"
#include "buffer.h"
#include "cookie.h"
#include "identity.h"
#include "spi.h"
#include "packet.h"
#include "schedule.h"
#include "log.h"
#ifdef IPSEC
#include "attributes.h"
#include "kernel.h"
#endif

static int init_vars(void);
static void usage(void);

static void
usage(void)
{
     FILE *f = stderr;

     fprintf(f, "usage: photurisd [-cvi] [-d directory] [-p port]\n");
     fprintf(f, "\t-c  check primes on startup\n");
     fprintf(f, "\t-i  ignore startup file %s\n", PHOTURIS_STARTUP);
     fprintf(f, "\t-d  specifies the startup dir\n");
     fprintf(f, "\t-p  specifies the local port to bind to\n");
     exit(1);
}


static int
init_vars(void)
{
     global_schemes = NULL;
     global_schemesize = 0;

     config_file = NULL;
     attrib_file = NULL;

     if ((config_file = calloc(1, sizeof(PHOTURIS_CONFIG))) == NULL)
	  log_fatal("no memory in init_vars()" );
     strcpy(config_file, PHOTURIS_CONFIG);

     if ((secret_file = calloc(1, sizeof(PHOTURIS_SECRET))) == NULL)
	  log_fatal("no memory in init_vars()" );
     strcpy(secret_file, PHOTURIS_SECRET);

     if ((attrib_file = calloc(1, sizeof(PHOTURIS_ATTRIB))) == NULL)
	  log_fatal("no memory in init_vars()");
     strcpy(attrib_file, PHOTURIS_ATTRIB);

     reset_secret();

     max_retries = MAX_RETRIES;
     retrans_timeout = RETRANS_TIMEOUT;
     exchange_timeout = EXCHANGE_TIMEOUT;
     exchange_lifetime = EXCHANGE_LIFETIME;
     spi_lifetime = SPI_LIFETIME;

     return 1;
}

int
main(int argc, char **argv)
{
     int ch;
     int primes = 0, ignore = 0;
     char *dir = PHOTURIS_DIR;
#ifdef USE_DEBUG
     int cls, level = 0;
#endif

     daemon_mode = 0;
     global_port = 0;

     log_init();

     while ((ch = getopt(argc, argv, "D:cid:p:")) != -1)
	  switch((char)ch) {
	  case 'c':
	       primes = 1;
	       break;
#ifdef USE_DEBUG
	  case 'D':
		  if (sscanf(optarg, "%d=%d", &cls, &level) != 2) {
			  if (sscanf(optarg, "A=%d", &level) == 1) {
				  for (cls = 0; cls < LOG_ENDCLASS; cls++)
					  log_debug_cmd(cls, level);
			  } else
				  log_print("parse_args: -D argument unparseable: %s", optarg);
		  }
		  else
			  log_debug_cmd(cls, level);
      break;
#endif /* USE_DEBUG */
	  case 'i':
	       ignore = 1;
	       break;
	  case 'd':
	       dir = optarg;
	       break;
	  case 'p':
	       global_port = atoi(optarg);
	       break;
	  case '?':
	  default:
	       usage();
	  }

     if (chdir(dir) == -1)
	  log_fatal("chdir(\"%s\") in main()", dir);
	

     argc -= optind;
     argv += optind;

     spi_init();
     state_init();

     init_vars();

     init_times();

     init_moduli(primes);

     init_schemes();

#ifndef USE_DEBUG
     init_signals();
     if (fork())
          exit(0);
     daemon_mode = 1;
#endif /* USE_DEBUG */

#ifdef IPSEC
     init_kernel();
#endif

     /* Depends on the available attributes in the kernel, init_kernel() */
     init_attributes();

     if (init_identities(NULL,NULL) == -1)
	  exit(1);

     init_schedule();

     init_server();

     /* Startup preconfigured exchanges */
     if(!ignore)
	  init_startup();

     server();
     exit(0);
}
@


1.13
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: photurisd.c,v 1.12 2001/07/07 18:26:18 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: photurisd.c,v 1.12 2001/07/07 18:26:18 deraadt Exp $";
@


1.12
log
@major -Wall cleanup, almost complete
@
text
@d1 1
a1 1
/*	$OpenBSD: photurisd.c,v 1.11 2001/03/08 21:41:47 deraadt Exp $	*/
d32 1
a32 1
/* 
d36 3
a38 3
#ifndef lint 
static char rcsid[] = "$OpenBSD: photurisd.c,v 1.11 2001/03/08 21:41:47 deraadt Exp $";
#endif 
d42 1
a42 1
#include <stdio.h> 
d44 1
a44 1
#include <sys/types.h> 
d47 2
a48 2
#include <signal.h> 
#include <errno.h> 
a80 1
     
d82 2
a83 1
static int 
d164 1
a164 1
	  
d168 1
a168 1
     
d192 1
a192 1
     init_attributes(); 
d196 1
a196 1
     
@


1.11
log
@whack exit(-#)
@
text
@d1 1
a1 1
/*	$OpenBSD: photurisd.c,v 1.10 2001/01/28 22:45:15 niklas Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: photurisd.c,v 1.10 2001/01/28 22:45:15 niklas Exp $";
a119 1
     int cls, level;
d121 3
@


1.10
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: photurisd.c,v 1.9 2000/12/15 02:50:39 provos Exp $";
d193 1
a193 1
	  exit(-1);
@


1.9
log
@update email address in copyright.
@
text
@d1 2
d37 1
a37 1
static char rcsid[] = "$Id: photurisd.c,v 1.8 2000/12/15 02:42:09 provos Exp $";
@


1.8
log
@more cleanup; send SPI needed message if we have state but no SPI on
acquire.
@
text
@d2 1
a2 1
 * Copyright 1997,1998 Niels Provos <provos@@physnet.uni-hamburg.de>
d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.7 2000/12/14 23:28:58 provos Exp $";
@


1.7
log
@queue pfkey acquire and expire messages if we are currently waiting for
another pfkey transaction to return. some cleanup.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.6 2000/12/11 21:21:18 provos Exp $";
d166 1
@


1.6
log
@proper logging.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.5 2000/12/11 20:32:15 provos Exp $";
d165 2
d175 1
a175 1
#ifndef DEBUG
d180 1
a180 1
#endif
@


1.5
log
@remove lots of unnecssary code, on the way to new spd framework.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.4 1999/12/17 18:57:03 deraadt Exp $";
d58 1
a58 1
#include "errlog.h"
d91 1
a91 1
	  crit_error(1, "no memory in init_vars()" );
d95 1
a95 1
	  crit_error(1, "no memory in init_vars()" );
d99 1
a99 1
	  crit_error(1, "no memory in init_vars()");
d118 1
d124 3
a126 1
     while ((ch = getopt(argc, argv, "cid:p:")) != -1)
d131 13
d159 1
a159 1
	  crit_error(1, "chdir(\"%s\") in main()", dir);
@


1.4
log
@fix inclusion problems
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.3 1999/04/10 00:10:17 provos Exp $";
a73 1
     fprintf(f, "\t-v  start in VPN mode\n");
a121 1
     vpn_mode = 0;
d123 1
a123 1
     while ((ch = getopt(argc, argv, "vcid:p:")) != -1)
a127 3
	  case 'v':
	       vpn_mode = 1;
	       break;
d179 1
a179 1
     if( !ignore && !vpn_mode)
@


1.3
log
@fork before recording pfkey pid.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.2 1999/03/27 21:18:02 provos Exp $";
d43 1
@


1.2
log
@convert the kernel module to PFKEYv2, support for binding incoming and
outgoing SA-pairs, fix a bug in SPI generation. the daemon registers
with pfkey but does not yet handle expiration or acquire messages. well,
there are NO acquire messages at the moment, so dynamic keyed vpn or
stuff does not work :-\ - all this done in canada. thanks again to
dugsong and linh for the ride. linh is sleeping now.
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.1 1998/11/14 23:37:28 deraadt Exp $";
d161 7
a184 7

#ifndef DEBUG
     init_signals();
     if (fork())
	  exit(0);
     daemon_mode = 1;
#endif
@


1.1
log
@move ipsec tools into .
@
text
@d35 1
a35 1
static char rcsid[] = "$Id: photurisd.c,v 1.9 1998/06/30 16:58:38 provos Exp $";
d161 5
a171 4

#ifdef IPSEC
     init_kernel();
#endif
@

