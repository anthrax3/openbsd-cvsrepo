head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.03.13.00.33.46;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.28.22.45.07;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.02.50.37;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	98.11.14.23.37.22;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@thought we had already deleted this
@
text
@/*	$OpenBSD: cookie.c,v 1.4 2002/06/09 08:13:08 todd Exp $	*/

/*
 * Copyright 1997-2000 Niels Provos <provos@@citi.umich.edu>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Niels Provos.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * cookie.c:
 * cookie generation
 */

#ifndef lint
static char rcsid[] = "$OpenBSD: cookie.c,v 1.4 2002/06/09 08:13:08 todd Exp $";
#endif

#define _COOKIE_C_

#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <md5.h>
#include "state.h"
#include "cookie.h"

void
reset_secret(void)
{
     secret_generate(rsecret, SECRET_SIZE);
}

int
secret_generate(u_int8_t *secret, u_int16_t size)
{
  int i = 0;
  long tmp = 0;

  while(size > 0) {
    size--;
    if (i++ % 4 == 0)
      tmp = arc4random();

    secret[size] = tmp & 0xFF;
    tmp = tmp >> 8;
  }
  return 1;
}

int
cookie_generate(struct stateob *st, u_int8_t *cookie, u_int16_t size,
		u_int8_t *data, u_int16_t dsize)
{
  MD5_CTX ctx;
  u_int8_t digest[16];
  u_int8_t tmpsecret[SECRET_SIZE], *secret;

  if (st->initiator) {
    secret = tmpsecret;
    secret_generate(tmpsecret, SECRET_SIZE); /* New secret each CookieReq */
  } else
    secret = rsecret;

  /* Generate a cookie which depends on both parties and on local
   * information, which is fast computed.
   */
  MD5Init(&ctx);
  MD5Update(&ctx, st->address, strlen(st->address));
  MD5Update(&ctx, (u_int8_t *)&st->port, sizeof(st->port));
  MD5Update(&ctx, (u_int8_t *)&st->counter, sizeof(st->counter));
  MD5Update(&ctx, secret, SECRET_SIZE);
  MD5Update(&ctx, st->icookie, COOKIE_SIZE);

  /* For the responder cookie we also hash the schemes */
  if (data != NULL && dsize)
       MD5Update(&ctx, data, dsize);

  MD5Final(digest, &ctx);

  bcopy(digest, cookie, size);
  return 1;
}

@


1.4
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: cookie.c,v 1.3 2001/01/28 22:45:07 niklas Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: cookie.c,v 1.3 2001/01/28 22:45:07 niklas Exp $";
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: cookie.c,v 1.2 2000/12/15 02:50:37 provos Exp $";
d66 1
a66 1
    
d72 1
a72 1
      
d87 1
a87 1
  /* Generate a cookie which depends on both parties and on local 
@


1.2
log
@update email address in copyright.
@
text
@d1 2
d38 1
a38 1
static char rcsid[] = "$Id: cookie.c,v 1.1 1998/11/14 23:37:22 deraadt Exp $";
@


1.1
log
@move ipsec tools into .
@
text
@d2 1
a2 1
 * Copyright 1997 Niels Provos <provos@@physnet.uni-hamburg.de>
d36 1
a36 1
static char rcsid[] = "$Id: cookie.c,v 1.2 1997/07/24 23:47:10 provos Exp $";
@

