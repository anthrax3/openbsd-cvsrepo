head	1.14;
access;
symbols
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.6
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.14
date	2003.03.13.00.33.47;	author deraadt;	state dead;
branches;
next	1.13;

1.13
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.28.22.45.11;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.16.08.31.56;	author provos;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.15.02.50.38;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.14.23.28.58;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	2000.12.14.18.32.25;	author provos;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.12.01.53.42;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.11.20.32.15;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.17.19.32.56;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.07.02.23.37.33;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.03.27.21.18.01;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	99.02.20.21.22.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.11.14.23.37.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@thought we had already deleted this
@
text
@/* $OpenBSD: kernel.h,v 1.13 2002/06/09 08:13:08 todd Exp $ */
/*
 * Copyright 1997-2000 Niels Provos <provos@@citi.umich.edu>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Niels Provos.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * kernel.h:
 * security paramter index creation.
 */

#ifndef _KERNEL_H_
#define _KERNEL_H_

#undef EXTERN
#ifdef _KERNEL_C_
#define EXTERN

#define ESP_OLD		0x01
#define ESP_NEW		0x02
#define AH_OLD		0x04
#define AH_NEW		0x08

#define XF_ENC		0x10
#define XF_AUTH		0x20

#define XF_SUP		0x80		/* Mark the transforms as supported */

typedef struct {
     int photuris_id;
     int kernel_id, flags;
} transform;

/*
 * Translation from Photuris Attributes to Kernel Transforms.
 * For the actual ids see: draft-simpson-photuris-*.txt and
 * draft-simpson-photuris-schemes-*.txt
 */

transform xf[] = {
     {  5, SADB_X_AALG_MD5, XF_AUTH|AH_OLD},
     {  6, SADB_X_AALG_SHA1, XF_AUTH|AH_OLD},
     {  5, SADB_AALG_MD5HMAC, XF_AUTH|AH_NEW|ESP_NEW},
     {  6, SADB_AALG_SHA1HMAC, XF_AUTH|AH_NEW|ESP_NEW},
     {  7, SADB_AALG_RIPEMD160HMAC, XF_AUTH|AH_NEW|ESP_NEW},
     {  8, SADB_EALG_DESCBC, XF_ENC|ESP_OLD},
     { 18, SADB_EALG_3DESCBC, XF_ENC|ESP_NEW},
     { 16, SADB_X_EALG_BLF, XF_ENC|ESP_NEW},
     { 17, SADB_X_EALG_CAST, XF_ENC|ESP_NEW},
     { 19, SADB_X_EALG_SKIPJACK, XF_ENC|ESP_NEW},
};

transform *kernel_get_transform(int id);
void kernel_transform_seen(int id, int type);

int kernel_register(int sd);

int kernel_xf_set(int sd, char *buf, int blen, struct iovec *io, int cnt,
		  int len);
int kernel_xf_read(int sd, char *buf, int blen, int seq);

int kernel_ah(attrib_t *ob, struct spiob *SPI, u_int8_t *secrets, int hmac);
int kernel_esp(attrib_t *ob, attrib_t *ob2, struct spiob *SPI,
	       u_int8_t *secrets);

int kernel_group_spi(char *address, u_int8_t *spi);
int kernel_bind_spis(struct spiob *spi1, struct spiob *spi2);

int kernel_delete_spi(char *address, u_int32_t spi, int proto);

struct sadb_msg;
int kernel_request_sa(struct sadb_msg *);
int kernel_handle_expire(struct sadb_msg *);
int kernel_new_exchange(char *, int);
#else
#define EXTERN extern
#endif

EXTERN int kernel_known_transform(int id);
EXTERN int kernel_valid(attrib_t *enc, attrib_t *auth);
EXTERN int kernel_valid_auth(attrib_t *auth, u_int8_t *flag, u_int16_t size);

EXTERN u_int32_t kernel_reserve_spi(char *srcaddress, char *dstaddress,
				    int options);
EXTERN u_int32_t kernel_reserve_single_spi(char *srcaddress, char *dstaddress,
					   u_int32_t spi, int proto);

EXTERN int kernel_insert_spi(struct stateob *st, struct spiob *SPI);
EXTERN int kernel_unlink_spi(struct spiob *ospi);
EXTERN int init_kernel(void);
EXTERN int kernel_get_socket(void);
EXTERN void kernel_set_socket_policy(int sd);
EXTERN void kernel_handle_notify(int sd);
EXTERN void kernel_notify_result(struct stateob *, struct spiob *, int);
EXTERN void kernel_handle_queue(void);

#endif /* _KERNEL_H */
@


1.13
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/* $OpenBSD: kernel.h,v 1.12 2001/01/28 22:45:11 niklas Exp $ */
@


1.12
log
@$OpenBSD$
@
text
@d1 1
a1 1
/* $OpenBSD: kernel.h,v 1.11 2000/12/16 08:31:56 provos Exp $ */
d32 1
a32 1
 * kernel.h: 
d35 1
a35 1
 
d58 1
a58 1
/* 
d87 1
a87 1
int kernel_esp(attrib_t *ob, attrib_t *ob2, struct spiob *SPI, 
d107 1
a107 1
EXTERN u_int32_t kernel_reserve_spi(char *srcaddress, char *dstaddress, 
@


1.11
log
@when a used SA expires and the exchange is gone, start a new one.
@
text
@d1 1
a30 1
/* $Id: kernel.h,v 1.10 2000/12/15 02:50:38 provos Exp $ */
@


1.10
log
@update email address in copyright.
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.9 2000/12/14 23:28:58 provos Exp $ */
d98 1
@


1.9
log
@queue pfkey acquire and expire messages if we are currently waiting for
another pfkey transaction to return. some cleanup.
@
text
@d2 1
a2 1
 * Copyright 1997,1998 Niels Provos <provos@@physnet.uni-hamburg.de>
d30 1
a30 1
/* $Id: kernel.h,v 1.8 2000/12/14 18:32:25 provos Exp $ */
@


1.8
log
@setup soft lifetimes, handle hard expirations, deal with changed pfkey
supported extensions. some problems pointed out by
Hans-Joerg.Hoexer@@rommelwood.de
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.7 2000/12/12 01:53:42 provos Exp $ */
d118 1
@


1.7
log
@listen to pfkeyv2 acquire messages and set up SAs accordingly.
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.6 2000/12/11 20:32:15 provos Exp $ */
d97 1
@


1.6
log
@remove lots of unnecssary code, on the way to new spd framework.
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.5 2000/11/17 19:32:56 millert Exp $ */
d95 2
a96 1
int kernel_request_sa(void *em /* struct encap_msghdr *em */);
@


1.5
log
@HMAC96->HMAC as needed (Angelos missed one ;-)
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.4 1999/07/02 23:37:33 deraadt Exp $ */
a92 6
int kernel_enable_spi(in_addr_t isrc, in_addr_t ismask, 
		      in_addr_t idst, in_addr_t idmask, 
		      char *address, u_int8_t *spi, int proto, int flags);
int kernel_disable_spi(in_addr_t isrc, in_addr_t ismask, 
		       in_addr_t idst, in_addr_t idmask, 
		       char *address, u_int8_t *spi, int proto, int flags);
@


1.4
log
@rename SADB_foo_X_bar to SADB_X_foo_bar
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.3 1999/03/27 21:18:01 provos Exp $ */
d67 3
a69 3
     {  5, SADB_AALG_MD5HMAC96, XF_AUTH|AH_NEW|ESP_NEW},
     {  6, SADB_AALG_SHA1HMAC96, XF_AUTH|AH_NEW|ESP_NEW},
     {  7, SADB_X_AALG_RIPEMD160HMAC96, XF_AUTH|AH_NEW|ESP_NEW},
@


1.3
log
@convert the kernel module to PFKEYv2, support for binding incoming and
outgoing SA-pairs, fix a bug in SPI generation. the daemon registers
with pfkey but does not yet handle expiration or acquire messages. well,
there are NO acquire messages at the moment, so dynamic keyed vpn or
stuff does not work :-\ - all this done in canada. thanks again to
dugsong and linh for the ride. linh is sleeping now.
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.2 1999/02/20 21:22:32 deraadt Exp $ */
d65 2
a66 2
     {  5, SADB_AALG_X_MD5, XF_AUTH|AH_OLD},
     {  6, SADB_AALG_X_SHA1, XF_AUTH|AH_OLD},
d69 1
a69 1
     {  7, SADB_AALG_X_RIPEMD160HMAC96, XF_AUTH|AH_NEW|ESP_NEW},
d72 3
a74 3
     { 16, SADB_EALG_X_BLF, XF_ENC|ESP_NEW},
     { 17, SADB_EALG_X_CAST, XF_ENC|ESP_NEW},
     { 19, SADB_EALG_X_SKIPJACK, XF_ENC|ESP_NEW},
@


1.2
log
@skipjack at id 19
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.1 1998/11/14 23:37:25 deraadt Exp $ */
d43 4
a46 4
#define ESP_OLD   0x01
#define ESP_NEW   0x02
#define AH_OLD    0x04
#define AH_NEW    0x08
d48 4
a51 2
#define XF_ENC    0x10
#define XF_AUTH   0x20
d65 10
a74 8
     {  5, ALG_AUTH_MD5, XF_AUTH|AH_OLD|AH_NEW|ESP_NEW},
     {  6, ALG_AUTH_SHA1, XF_AUTH|AH_OLD|AH_NEW|ESP_NEW},
     {  7, ALG_AUTH_RMD160, XF_AUTH|AH_NEW|ESP_NEW},
     {  8, ALG_ENC_DES, XF_ENC|ESP_OLD},
     { 18, ALG_ENC_3DES, XF_ENC|ESP_NEW},
     { 16, ALG_ENC_BLF, XF_ENC|ESP_NEW},
     { 17, ALG_ENC_CAST, XF_ENC|ESP_NEW},
     { 19, ALG_ENC_SKIPJACK, XF_ENC|ESP_NEW},
d78 3
d82 3
a84 2
int kernel_xf_set(struct encap_msghdr *em);
int kernel_xf_read(struct encap_msghdr *em, int msglen);
d91 1
d99 1
a99 1
int kernel_delete_spi(char *address, u_int8_t *spi, int proto);
d101 1
a101 1
int kernel_request_sa(struct encap_msghdr *em);
d110 4
a113 3
EXTERN u_int32_t kernel_reserve_spi( char *srcaddress, int options);
EXTERN u_int32_t kernel_reserve_single_spi(char *srcaddress, u_int32_t spi, 
					   int proto);
@


1.1
log
@move ipsec tools into .
@
text
@d30 1
a30 1
/* $Id: kernel.h,v 1.7 1998/06/30 16:58:33 provos Exp $ */
d70 1
@

