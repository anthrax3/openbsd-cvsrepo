head	1.9;
access;
symbols
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2003.03.13.00.33.47;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2002.06.09.08.13.09;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.28.22.45.17;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.15.02.50.40;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.15.01.06.51;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.14.23.28.59;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.11.20.32.15;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	99.03.27.21.18.02;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	98.11.14.23.37.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@thought we had already deleted this
@
text
@/* $OpenBSD: spi.h,v 1.8 2002/06/09 08:13:09 todd Exp $ */
/*
 * Copyright 1997-2000 Niels Provos <provos@@citi.umich.edu>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Niels Provos.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * spi.h:
 * security paramter index creation.
 */

#ifndef _SPI_H_
#define _SPI_H_
#include <sys/queue.h>
#include "state.h"

#undef EXTERN

#ifdef _SPI_C_
#define EXTERN
#else
#define EXTERN extern
#endif

#define SPI_LIFETIME   1800            /* 30 minutes default lifetime */

#define SPI_OWNER	0x0001
#define SPI_NOTIFY	0x0002
#define SPI_UPDATED	0x0004
#define SPI_ESP		0x0008	       /* Is used for ESP */

struct spiob {
     TAILQ_ENTRY(spiob) next;          /* Linked list */

     char *address;
     char *local_address;
     int flags;
     u_int8_t SPI[SPI_SIZE];           /* SPI */
     u_int8_t icookie[COOKIE_SIZE];    /* Initator cookie */
     u_int8_t *attributes;             /* SPI attributes */
     u_int16_t attribsize;
     u_int8_t *sessionkey;             /* to be delete after use */
     u_int16_t sessionkeysize;
     time_t lifetime;                  /* Lifetime for the SPI */
};

EXTERN void spi_init(void);
EXTERN time_t getspilifetime(struct stateob *st);
EXTERN int make_spi(struct stateob *st, char *local_address,
		    u_int8_t *SPI, time_t *lifetime,
		    u_int8_t **attributes, u_int16_t *attribsize);

EXTERN int spi_insert(struct spiob *);
EXTERN int spi_unlink(struct spiob *);
EXTERN struct spiob *spi_new(char *, u_int8_t *);
EXTERN int spi_value_reset(struct spiob *);
EXTERN struct spiob *spi_find_attrib(char *address,
				     u_int8_t *attrib, u_int16_t attribsize);
EXTERN struct spiob *spi_find(char *, u_int8_t *);
EXTERN void spi_expire(void);
EXTERN void spi_update(int, u_int8_t *);
EXTERN void spi_update_insert(struct spiob *);

#endif /* _SPI_H */
@


1.8
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/* $OpenBSD: spi.h,v 1.7 2001/01/28 22:45:17 niklas Exp $ */
@


1.7
log
@$OpenBSD$
@
text
@d1 1
a1 1
/* $OpenBSD: spi.h,v 1.6 2000/12/15 02:50:40 provos Exp $ */
d32 1
a32 1
 * spi.h: 
d35 1
a35 1
 
d42 1
a42 1
 
d62 1
a62 1
     u_int8_t SPI[SPI_SIZE];           /* SPI */ 
d67 1
a67 1
     u_int16_t sessionkeysize; 
d74 1
a74 1
		    u_int8_t *SPI, time_t *lifetime, 
@


1.6
log
@update email address in copyright.
@
text
@d1 1
a30 1
/* $Id: spi.h,v 1.5 2000/12/15 01:06:51 provos Exp $ */
@


1.5
log
@handle pfkey soft updates. only update when SA has been used.
@
text
@d2 1
a2 1
 * Copyright 1997 Niels Provos <provos@@physnet.uni-hamburg.de>
d30 1
a30 1
/* $Id: spi.h,v 1.4 2000/12/14 23:28:59 provos Exp $ */
@


1.4
log
@queue pfkey acquire and expire messages if we are currently waiting for
another pfkey transaction to return. some cleanup.
@
text
@d30 1
a30 1
/* $Id: spi.h,v 1.3 2000/12/11 20:32:15 provos Exp $ */
d51 4
a54 3
#define SPI_OWNER      1
#define SPI_NOTIFY     2
#define SPI_ESP	       8	       /* Is used for ESP */
d85 2
@


1.3
log
@remove lots of unnecssary code, on the way to new spd framework.
@
text
@d30 1
a30 1
/* $Id: spi.h,v 1.2 1999/03/27 21:18:02 provos Exp $ */
d38 1
a38 1

d56 2
a57 1
     struct spiob *next;            /* Linked list */
d70 1
a82 2
EXTERN struct spiob *spi_root(void);
EXTERN void spi_cleanup(void);
@


1.2
log
@convert the kernel module to PFKEYv2, support for binding incoming and
outgoing SA-pairs, fix a bug in SPI generation. the daemon registers
with pfkey but does not yet handle expiration or acquire messages. well,
there are NO acquire messages at the moment, so dynamic keyed vpn or
stuff does not work :-\ - all this done in canada. thanks again to
dugsong and linh for the ride. linh is sleeping now.
@
text
@d30 1
a30 1
/* $Id: spi.h,v 1.1 1998/11/14 23:37:29 deraadt Exp $ */
a52 1
#define SPI_TUNNEL     4
a58 2
     in_addr_t isrc, ismask;
     in_addr_t idst, idmask;
a73 1
EXTERN int spi_set_tunnel(struct stateob *st, struct spiob *spi);
@


1.1
log
@move ipsec tools into .
@
text
@d30 1
a30 1
/* $Id: spi.h,v 1.3 1997/07/23 12:28:55 provos Exp $ */
d54 1
@

