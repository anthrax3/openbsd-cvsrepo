head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2003.03.13.00.33.46;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.27.03.31.46;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	98.11.14.23.37.21;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@thought we had already deleted this
@
text
@
                       How to use Photuris with IPsec ?

What is IPsec ?

   IP Security is a framework providing authentication/integrity and
   privacy to network traffic. Authenticated data can not be modified by
   third parties and encryption conceals the content of packets.

What has Photuris to do with IPsec ?

   In order to transmit encrypted or authenticated data between two
   hosts, those two hosts have to agree on session keys which are used
   as input for the encryption and authentication functions.

   The Photuris protocol exchanges keys in such a way that no
   eavesdropper will have knowledge of the session keys. It also allows
   for frequent changes of the session keys, forward secrecy and party
   privacy protection.

How to get it working ?

  Compiling the daemon

   Get the Photuris sources and also the following libraries:
   gmp-2.0.2 and libdes-4.01. Put those libraries in one dir and if
   you like you can do the following steps afterwards:

1. tar -xvzf Photuris-src.tar.gz
2. tar -xvzf gmp-2.0.2.tar.gz; cd gmp-2.0.2; ./configure; make
3. mkdir des; cd des; tar -xvzf ../libdes-4.01.tar.gz; make
4. cd Photuris
5. make (edit the Makefile and remove -DDEBUG, if you dont want to see what
   happens, or remove -DIPSEC if you dont want to actually setup encrypted
   and authenticated connections within the kernel)
6. start ./photurid on two hosts.
7. ./startkey dst=host1 (for example ./startkey dst=134.100.33.22)

   If you compiled the photuris daemon with -DDEBUG you should see an
   exchange of values now and finally the shared secret from which the
   session keys are derived.

   If you compiled the photuris daemon with -DIPSEC and also have a kernel
   with IPsec compiled into it, you could start for example

8. tcpdump proto 51 &
9. telnet host1

   and see the authenticated packets flowing between the two hosts. Look
   at the output of

10. cat /kern/ipsec
11. netstat -rn

   will show you some information also.

  Enabling IPsec in the OpenBSD kernel

   Add the following two lines into your kernel config file:
config IPSEC
pseudo-device enc 1

  Possible configuration

   There are three files which can be configured locally.
     * photuris.conf - contains the moduli for the Diffie-Hellmann
       Keyexchange, the offered schemes and various timeouts.
     * attributes.conf - the attributes which are offered to different
       parties
     * secrets.conf - the preconfigured symmetric secrets which should
       hopefully soon be replaced by public keys.

     _________________________________________________________________

   If you have any questions write mail to
   provos@@physnet.uni-hamburg.de
@


1.3
log
@rm trailing whitespace
@
text
@@


1.2
log
@Consistently use "IPsec" capitalization (jsyn@@nthought.com)
@
text
@d3 1
a3 1
                                       
d9 1
a9 1
   
d15 1
a15 1
   
d20 1
a20 1
   
d24 1
a24 1
  
d42 1
a42 1
   
d56 1
a56 1
   
d58 1
a58 1
  
d64 1
a64 1
  
d72 1
a72 1
       
d74 1
a74 1
                                      
@


1.1
log
@move ipsec tools into .
@
text
@d2 1
a2 1
                       How to use Photuris with IPSec ?
d4 1
a4 1
What is IPSec ?
d10 1
a10 1
What has Photuris to do with IPSec ?
d43 2
a44 2
   If you compiled the photuris daemon with -IPSEC and also have a kernel
   with IPSEC compiled into it, you could start for example
d57 1
a57 1
  Enabling IPSEC in the OpenBSD kernel
@

