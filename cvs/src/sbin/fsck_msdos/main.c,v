head	1.23;
access;
symbols
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.23.0.6
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.19.0.8
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.18.0.10
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.6
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.4
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.2
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.6
	OPENBSD_5_0:1.17.0.4
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.6
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.4
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.10
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.6
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.23
date	2016.05.28.18.00.42;	author tb;	state Exp;
branches;
next	1.22;
commitid	RULH4th471AQIQV9;

1.22
date	2015.11.23.19.19.30;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	Cz19p5I1S6mVZIjV;

1.21
date	2015.10.14.14.33.45;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	BweGlCJbPgfbxjH9;

1.20
date	2015.09.27.16.56.06;	author guenther;	state Exp;
branches;
next	1.19;
commitid	kZKltxcWbyZaEgB3;

1.19
date	2014.06.16.18.33.33;	author tobias;	state Exp;
branches;
next	1.18;
commitid	PhPZAfTlrgjKIup9;

1.18
date	2012.03.31.17.53.34;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2010.08.12.15.26.34;	author jsing;	state Exp;
branches;
next	1.16;

1.16
date	2009.10.27.23.59.33;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.30.01.16.31;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.03.05.03.50;	author jaredy;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.17.02.14.33;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.19.19.39.38;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.16.21.27.34;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.05.22.32.37;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.22.20.24.57;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.07.25.19.13.15;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.03.02.05.25.56;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.02.28.08.38.26;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.02.28.07.47.52;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.15.23.41.47;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.30.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.04.38.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.22.11.23.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Another misplaced pledge disklabel that needs to be removed because of
a DIOCGPDINFO that could be applied to a non-disk and thus cause a
crash.  After that ioctl, the program continues with pledge "stdio".

ok beck semarie
@
text
@/*	$OpenBSD: main.c,v 1.22 2015/11/23 19:19:30 deraadt Exp $	*/
/*	$NetBSD: main.c,v 1.8 1996/10/17 20:29:53 cgd Exp $	*/

/*
 * Copyright (C) 1995 Wolfgang Solfrank
 * Copyright (c) 1995 Martin Husemann
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <stdarg.h>
#include <err.h>

#include "ext.h"

int alwaysno;		/* assume "no" for all questions */
int alwaysyes;		/* assume "yes" for all questions */
int preen;		/* set when preening */
int rdonly;		/* device is opened read only (supersedes above) */

static void usage(void);
int main(int, char **);

static void
usage(void)
{
	errexit("usage: fsck_msdos [-fnpy] filesystem\n");
}

int
main(int argc, char *argv[])
{
	int ch;

	while ((ch = getopt(argc, argv, "pynf")) != -1) {
		switch (ch) {
		case 'f':
			/* Ignore for consistency with fsck_ffs */
			break;

		case 'n':
			alwaysno = 1;
			alwaysyes = preen = 0;
			break;

		case 'y':
			alwaysyes = 1;
			alwaysno = preen = 0;
			break;

		case 'p':
			preen = 1;
			alwaysyes = alwaysno = 0;
			break;

		default:
			usage();
			break;
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 1)
		usage();

	setcdevname(*argv, NULL, preen);
	exit (checkfilesys(blockcheck(*argv)));
}

int
ask(int def, const char *fmt, ...)
{
	va_list ap;

	char prompt[256];
	int c;

	if (preen) {
		if (rdonly)
			def = 0;
		if (def)
			printf("FIXED\n");
		return (def);
	}

	va_start(ap, fmt);
	vsnprintf(prompt, sizeof(prompt), fmt, ap);
	va_end(ap);
	if (alwaysyes || rdonly) {
		printf("%s? %s\n", prompt, rdonly ? "no" : "yes");
		return (!rdonly);
	}
	do {
		printf("%s? [Fyn] ", prompt);
		fflush(stdout);
		c = getchar();
		if (c == 'F') {
			alwaysyes = 1;
			return (1);
		}
		while (c != '\n' && getchar() != '\n')
			if (feof(stdin))
				return (0);
	} while (c != 'y' && c != 'Y' && c != 'n' && c != 'N');
	return (c == 'y' || c == 'Y');
}
@


1.22
log
@Use pledge "disklabel" as needed.  The theory here is these tools become more
resistant against memory correctup, if a corrupt filesystem is given to them.
ok krw
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.21 2015/10/14 14:33:45 deraadt Exp $	*/
a58 3

	if (pledge("stdio rpath wpath disklabel", NULL) == -1)
		err(1, "pledge");
@


1.21
log
@Only accept one filesystem/device as argument for checking.  Few people
will be calling these directly, and not for the multiple filesystem case.
fsck(8) is generally the parent and will handle things.
ok semarie; this change will also help a goal jsing has
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.20 2015/09/27 16:56:06 guenther Exp $	*/
d37 1
d59 3
@


1.20
log
@Mark ask() as printf-like; split up a pwarn() with variable number of specifiers

ok beck@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.19 2014/06/16 18:33:33 tobias Exp $	*/
d51 1
a51 1
	errexit("usage: fsck_msdos [-fnpy] filesystem ...\n");
a56 1
	int ret = 0, erg;
d88 1
a88 1
	if (!argc)
d91 2
a92 7
	while (argc-- > 0) {
		setcdevname(*argv, NULL, preen);
		erg = checkfilesys(blockcheck(*argv++));
		if (erg > ret)
			ret = erg;
	}
	exit(ret);
@


1.19
log
@Merge NetBSD commit:
Move to 2 clause license, approved by Wolfgang Solfrank.

ok deraadt@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.18 2012/03/31 17:53:34 krw Exp $	*/
a100 1
/*VARARGS*/
@


1.18
log
@Make fsck_msdos work with non-512-byte sector devices. Problem noted
by and fixes tested by Alexey Vatchenko.

Add a bunch of tests and error messages so whatever media/devices
this breaks will be more easily fixed.

Ignore invalid signatures since we have other checks and many media
have missing signatures.

Use character device to read disk even when called directly.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.17 2010/08/12 15:26:34 jsing Exp $	*/
a15 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Martin Husemann
 *	and Wolfgang Solfrank.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
@


1.17
log
@Print the real device name followed by the disklabel UID in parenthesis
when fsck is run against a disklabel UID. This allows a user to determine
which device is really being scanned.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.15 2006/03/30 01:16:31 deraadt Exp $	*/
d101 1
a101 1
		erg = checkfilesys(*argv++);
@


1.16
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d100 1
a100 1
		setcdevname(*argv, preen);
@


1.15
log
@when asking y or n, accept "F" which forces yes from the on.  i have
wished for this for 10+ year, but always forgotten to make the change
after cleaning up a nasty file system; ok pedro millert
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.14 2005/02/03 05:03:50 jaredy Exp $	*/
a35 4

#ifndef lint
static char rcsid[] = "$OpenBSD: main.c,v 1.14 2005/02/03 05:03:50 jaredy Exp $";
#endif /* not lint */
@


1.14
log
@sync usage output
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.13 2004/07/17 02:14:33 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.13 2004/07/17 02:14:33 deraadt Exp $";
d137 1
a137 1
		printf("%s? [yn] ", prompt);
d140 4
@


1.13
log
@some ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.12 2002/02/19 19:39:38 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.12 2002/02/19 19:39:38 millert Exp $";
d62 1
a62 1
	errexit("Usage: fsck_msdos [-fnpy] filesystem ... \n");
@


1.12
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.11 2002/02/16 21:27:34 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.11 2002/02/16 21:27:34 millert Exp $";
d60 1
a60 1
usage()
d66 1
a66 3
main(argc, argv)
	int argc;
	char **argv;
@


1.11
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.10 2001/09/05 22:32:37 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.10 2001/09/05 22:32:37 deraadt Exp $";
a46 1
#ifdef __STDC__
a47 3
#else
#include <varargs.h>
#endif
a115 1
#ifdef __STDC__
a116 6
#else
ask(def, fmt, va_alist)
	int def;
	char *fmt;
	va_dcl
#endif
a130 1
#ifdef __STDC__
a131 3
#else
	va_start(ap);
#endif
@


1.10
log
@make sure that va_start() has matching va_end()
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.9 2000/01/22 20:24:57 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.9 2000/01/22 20:24:57 deraadt Exp $";
d60 2
a61 2
static void usage __P((void));
int main __P((int, char **));
@


1.9
log
@remove extra externs not needed because of unistd.h (rest of tree will be done later.. contact me if you want to help)
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.8 1997/07/25 19:13:15 mickey Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.8 1997/07/25 19:13:15 mickey Exp $";
d148 1
@


1.8
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.7 1997/03/02 05:25:56 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.7 1997/03/02 05:25:56 millert Exp $";
a73 1
	extern int optind;
@


1.7
log
@Update based on latest NetBSD version.
Now uses functions from util.[ch] instead of local ones.
Also some anal KNF from me...
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.6 1997/02/28 08:38:26 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.6 1997/02/28 08:38:26 millert Exp $";
d47 1
a47 1
#if __STDC__
d121 1
a121 1
#if __STDC__
d143 1
a143 1
#if __STDC__
@


1.6
log
@Add -f to getopt() -- that'll teach me to test first.
@
text
@d1 2
a2 2
/*	$OpenBSD: main.c,v 1.5 1997/02/28 07:47:52 millert Exp $	*/
/*	$NetBSD: main.c,v 1.1.4.1 1996/05/31 18:41:54 jtc Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.5 1997/02/28 07:47:52 millert Exp $";
d60 3
a62 2
char *fname;		/* filesystem currently checked */
	
d66 1
a66 1
	errexit("Usage: fsck_msdos [-pny] filesystem ... \n");
d78 1
a78 1
	while ((ch = getopt(argc, argv, "vpynf")) != -1) {
d80 4
d88 1
a98 3
		case 'f':
			break;
			
d109 1
a109 1
	
d111 2
a112 1
		erg = checkfilesys(fname = *argv++);
a119 78
void
#if __STDC__
errexit(const char *fmt, ...)
#else
errexit(fmt, va_alist)
	char *fmt;
	va_dcl
#endif
{
	va_list ap;
	
#if __STDC__
	va_start(ap, fmt);
#else
	va_start(ap);
#endif
	vprintf(fmt, ap);
	va_end(ap);
	exit(8);
}

/*VARARGS*/
void
#if __STDC__
pfatal(const char *fmt, ...)
#else
pfatal(fmt, va_alist)
	char *fmt;
	va_dcl
#endif
{
	va_list ap;
	
	if (preen)
		printf("%s: ", fname);
#if __STDC__
	va_start(ap, fmt);
#else
	va_start(ap);
#endif
	vprintf(fmt, ap);
	va_end(ap);
	printf("\n");
	if (preen)
		exit(8);
}

/*VARARGS*/
void
#if __STDC__
pwarn(const char *fmt, ...)
#else
pwarn(fmt, va_alist)
	char *fmt;
	va_dcl
#endif
{
	va_list ap;
	
	if (preen)
		printf("%s: ", fname);
#if __STDC__
	va_start(ap, fmt);
#else
	va_start(ap);
#endif
	vprintf(fmt, ap);
	va_end(ap);
}

void
perror(s)
	const char *s;
{
	pfatal("%s (%s)", s, strerror(errno));
}

/*VARARGS*/
d131 1
a131 1
	
d140 1
a140 1
		return def;
d151 1
a151 1
		return !rdonly;
d159 1
a159 1
				return 0;
d161 1
a161 1
	return c == 'y' || c == 'Y';
@


1.5
log
@Silently ignore -f so that "fsck -f" works if you have an msdos
partition listed in fstab.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.4 1997/01/15 23:41:47 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.4 1997/01/15 23:41:47 millert Exp $";
d77 1
a77 1
	while ((ch = getopt(argc, argv, "vpyn")) != -1) {
@


1.4
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.3 1996/06/23 14:30:45 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.3 1996/06/23 14:30:45 deraadt Exp $";
d91 3
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.1.4.1 1996/05/31 18:41:54 jtc Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: main.c,v 1.1.4.1 1996/05/31 18:41:54 jtc Exp $";
d77 1
a77 1
	while ((ch = getopt(argc, argv, "vpyn")) != EOF) {
@


1.2
log
@from ws;
Check return values of malloc
Generate full pathnames only on request
Minor cleanup, RCS Ids in .h files
Don't allocate data structures for non-directories
Free any data structures when finishing a check (at the latest)
@
text
@d1 1
d38 1
a38 1
static char rcsid[] = "$NetBSD: main.c,v 1.1.4.1 1996/05/31 18:41:54 jtc Exp $";
@


1.1
log
@add fsck_msdos
@
text
@d1 1
a1 1
/*	$NetBSD: main.c,v 1.1 1996/05/14 17:39:36 ws Exp $	*/
d37 1
a37 1
static char rcsid[] = "$NetBSD: main.c,v 1.1 1996/05/14 17:39:36 ws Exp $";
a181 16
#if sun
char *
strerror(n)
	int n;
{
	extern int sys_nerr;
	extern char *sys_errlist[];
	static char alt[80];
	
	if (n < sys_nerr)
		return sys_errlist[n];
	sprintf(alt, "Unknown error %d", n);
	return alt;
}
#endif

a217 3
#if sun
	vsprintf(prompt, fmt, ap);
#else
a218 1
#endif
@
