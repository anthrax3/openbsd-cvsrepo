head	1.33;
access;
symbols
	OPENBSD_6_0:1.31.0.4
	OPENBSD_6_0_BASE:1.31
	OPENBSD_5_9:1.31.0.2
	OPENBSD_5_9_BASE:1.31
	OPENBSD_5_8:1.30.0.4
	OPENBSD_5_8_BASE:1.30
	OPENBSD_5_7:1.29.0.2
	OPENBSD_5_7_BASE:1.29
	OPENBSD_5_6:1.28.0.6
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.4
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.27.0.12
	OPENBSD_5_4_BASE:1.27
	OPENBSD_5_3:1.27.0.10
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.27.0.8
	OPENBSD_5_2_BASE:1.27
	OPENBSD_5_1_BASE:1.27
	OPENBSD_5_1:1.27.0.6
	OPENBSD_5_0:1.27.0.4
	OPENBSD_5_0_BASE:1.27
	OPENBSD_4_9:1.27.0.2
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.26.0.4
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.26.0.2
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.24.0.6
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.24.0.2
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.23.0.2
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.4
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.2
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.18.0.4
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.2
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.6.0.16
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.14
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.12
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.10
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.8
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.33
date	2016.09.04.09.41.03;	author claudio;	state Exp;
branches;
next	1.32;
commitid	YKJFJUlkAumMxHj6;

1.32
date	2016.09.03.14.23.14;	author phessler;	state Exp;
branches;
next	1.31;
commitid	rJW7JJ1v8NrTSfc8;

1.31
date	2015.09.11.20.08.40;	author mpi;	state Exp;
branches;
next	1.30;
commitid	5Sr0XPH2svtKebAw;

1.30
date	2015.07.18.00.05.02;	author phessler;	state Exp;
branches;
next	1.29;
commitid	w4H9LC8cbuDZ9nOJ;

1.29
date	2015.02.06.03.22.00;	author reyk;	state Exp;
branches;
next	1.28;
commitid	2ShTul7wSa8iiu5L;

1.28
date	2014.01.22.06.23.37;	author claudio;	state Exp;
branches;
next	1.27;

1.27
date	2010.09.04.08.06.09;	author blambert;	state Exp;
branches;
next	1.26;

1.26
date	2009.12.01.16.21.46;	author reyk;	state Exp;
branches;
next	1.25;

1.25
date	2009.10.30.17.32.34;	author jsg;	state Exp;
branches;
next	1.24;

1.24
date	2009.01.29.11.21.34;	author michele;	state Exp;
branches;
next	1.23;

1.23
date	2008.05.07.06.06.25;	author claudio;	state Exp;
branches;
next	1.22;

1.22
date	2008.05.06.03.40.51;	author claudio;	state Exp;
branches;
next	1.21;

1.21
date	2008.04.28.11.36.14;	author norby;	state Exp;
branches;
next	1.20;

1.20
date	2007.06.04.12.23.43;	author henning;	state Exp;
branches;
next	1.19;

1.19
date	2006.03.30.12.11.37;	author claudio;	state Exp;
branches;
next	1.18;

1.18
date	2005.05.27.04.55.27;	author mcbride;	state Exp;
branches;
next	1.17;

1.17
date	2005.03.30.08.04.16;	author henning;	state Exp;
branches;
next	1.16;

1.16
date	2005.03.30.07.59.52;	author henning;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.30.06.12.38;	author henning;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.30.06.02.52;	author henning;	state Exp;
branches;
next	1.13;

1.13
date	2005.03.30.05.20.18;	author henning;	state Exp;
branches;
next	1.12;

1.12
date	2004.09.24.01.13.04;	author jaredy;	state Exp;
branches;
next	1.11;

1.11
date	2004.09.22.01.07.10;	author jaredy;	state Exp;
branches;
next	1.10;

1.10
date	2004.08.03.11.23.11;	author henning;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.25.01.26.01;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2004.06.19.19.55.53;	author cedric;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.06.17.08.23;	author cedric;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.27.20.12.25;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	99.12.08.07.55.54;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	97.08.26.13.49.36;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.08.26.13.47.47;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	97.07.13.23.12.08;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	96.12.14.17.23.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.33
log
@Make it possible to set the RTF_BFD flag in a change request. Also add a
nobfd option to turn it off again. While here also print the fmask in the
rtmsg dump so it is possible to figure out why something happens (or not).
OK phessler@@
@
text
@/* $OpenBSD$ */

/* WARNING!  This file was generated by keywords.sh  */

struct keytab {
	char	*kt_cp;
	int	kt_i;
};

enum {
	K_NULL,
	K_ADD,
	K_BFD,
	K_BGP,
	K_BLACKHOLE,
	K_CHANGE,
	K_CLONING,
	K_CONNECTED,
	K_DELETE,
	K_DST,
	K_EXEC,
	K_EXPIRE,
	K_FLUSH,
	K_GATEWAY,
	K_GET,
	K_HOPCOUNT,
	K_HOST,
	K_IFA,
	K_IFACE,
	K_IFP,
	K_IN,
	K_INET,
	K_INET6,
	K_INTERFACE,
	K_JUMBO,
	K_LABEL,
	K_LINK,
	K_LLINFO,
	K_LOCAL,
	K_LOCK,
	K_LOCKREST,
	K_MONITOR,
	K_MPATH,
	K_MPLS,
	K_MPLSLABEL,
	K_MTU,
	K_NET,
	K_NETMASK,
	K_NOBFD,
	K_NOJUMBO,
	K_NOSTATIC,
	K_OSPF,
	K_OUT,
	K_POP,
	K_PREFIXLEN,
	K_PRIORITY,
	K_PROTO1,
	K_PROTO2,
	K_PUSH,
	K_RECVPIPE,
	K_REJECT,
	K_RIP,
	K_RTT,
	K_RTTVAR,
	K_SA,
	K_SENDPIPE,
	K_SHOW,
	K_SSTHRESH,
	K_STATIC,
	K_SWAP,
};

struct keytab keywords[] = {
	{ "add",	K_ADD },
	{ "bfd",	K_BFD },
	{ "bgp",	K_BGP },
	{ "blackhole",	K_BLACKHOLE },
	{ "change",	K_CHANGE },
	{ "cloning",	K_CLONING },
	{ "connected",	K_CONNECTED },
	{ "delete",	K_DELETE },
	{ "dst",	K_DST },
	{ "exec",	K_EXEC },
	{ "expire",	K_EXPIRE },
	{ "flush",	K_FLUSH },
	{ "gateway",	K_GATEWAY },
	{ "get",	K_GET },
	{ "hopcount",	K_HOPCOUNT },
	{ "host",	K_HOST },
	{ "ifa",	K_IFA },
	{ "iface",	K_IFACE },
	{ "ifp",	K_IFP },
	{ "in",	K_IN },
	{ "inet",	K_INET },
	{ "inet6",	K_INET6 },
	{ "interface",	K_INTERFACE },
	{ "jumbo",	K_JUMBO },
	{ "label",	K_LABEL },
	{ "link",	K_LINK },
	{ "llinfo",	K_LLINFO },
	{ "local",	K_LOCAL },
	{ "lock",	K_LOCK },
	{ "lockrest",	K_LOCKREST },
	{ "monitor",	K_MONITOR },
	{ "mpath",	K_MPATH },
	{ "mpls",	K_MPLS },
	{ "mplslabel",	K_MPLSLABEL },
	{ "mtu",	K_MTU },
	{ "net",	K_NET },
	{ "netmask",	K_NETMASK },
	{ "nobfd",	K_NOBFD },
	{ "nojumbo",	K_NOJUMBO },
	{ "nostatic",	K_NOSTATIC },
	{ "ospf",	K_OSPF },
	{ "out",	K_OUT },
	{ "pop",	K_POP },
	{ "prefixlen",	K_PREFIXLEN },
	{ "priority",	K_PRIORITY },
	{ "proto1",	K_PROTO1 },
	{ "proto2",	K_PROTO2 },
	{ "push",	K_PUSH },
	{ "recvpipe",	K_RECVPIPE },
	{ "reject",	K_REJECT },
	{ "rip",	K_RIP },
	{ "rtt",	K_RTT },
	{ "rttvar",	K_RTTVAR },
	{ "sa",	K_SA },
	{ "sendpipe",	K_SENDPIPE },
	{ "show",	K_SHOW },
	{ "ssthresh",	K_SSTHRESH },
	{ "static",	K_STATIC },
	{ "swap",	K_SWAP },
};

@


1.32
log
@Add userland parts for BFD.  Can't work if you don't have it enabled in
the kernel.

OK claudio@@, henning@@
@
text
@d49 1
d111 1
@


1.31
log
@Remove RTF_XRESOLVE support.
@
text
@d1 1
a1 1
/* $OpenBSD: keywords.h,v 1.30 2015/07/18 00:05:02 phessler Exp $ */
d13 1
d74 1
@


1.30
log
@On systems with a full routing table (550k+), we often want to be able to
look at the routes with a priority, or to display all routes that do not
have a specific priority (normally, don't show bgp).

We are intentionally not updating netstat -r yet, as we do not have a
good flag to use.

first version from, and OK benno@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a68 1
	K_XRESOLVE,
a128 1
	{ "xresolve",	K_XRESOLVE },
@


1.29
log
@Remove route/netstat -f encap in favor of ipsecctl -s flow.

OK deraadt@@
@
text
@d13 1
d17 1
d38 1
d50 1
d60 1
d74 1
d78 1
d99 1
d111 1
d121 1
@


1.28
log
@Remove genmask support from route(8). It still will show them in monitor
or get but you can no longer set it. genmask will die soon since nobody
needs it. OK benno@@ and agreed by dlg@@
@
text
@a17 1
	K_ENCAP,
a73 1
	{ "encap",	K_ENCAP },
@


1.27
log
@sort generated keywords in order to replace linear probe with bsearch(3)
(more people should know about how to properly use libc-provided tools)

make keywords.h depend upon keywords.sh, so that it gets automatically
rebuilt when keywords.sh is edited

ok claudio@@
@
text
@a22 1
	K_GENMASK,
a79 1
	{ "genmask",	K_GENMASK },
@


1.26
log
@Add the new exec command to run a process and its children in a
non-default rdomain/rtable.  route will change the default rdomain
using the new setrdomain() syscall and execute the supplied command,
eg. "route -T1 exec /usr/sbin/named".

Tested by many including michele@@, phessler@@
ok claudio@@, deraadt@@
@
text
@d25 1
d27 1
a27 1
	K_HOPCOUNT,
a28 2
	K_INTERFACE,
	K_IFA,
d33 1
d83 1
d85 1
a85 1
	{ "hopcount",	K_HOPCOUNT },
a86 2
	{ "interface",	K_INTERFACE },
	{ "ifa",	K_IFA },
d91 1
a124 1
	{ 0, 0 }
@


1.25
log
@The script that generates keywords.h wasn't updated when
mplslabel label was added, fix.
@
text
@d19 1
d77 1
@


1.24
log
@Introduce -mplslabel to allow ipv4/ipv6 packets enter MPLS clouds.
This is also consistent with mplslabel in ifconfig(8).

OK claudio@@ laurent@@
@
text
@d1 1
a1 1
/* $OpenBSD: keywords.h,v 1.23 2008/05/07 06:06:25 claudio Exp $ */
@


1.23
log
@Add support to show and modify rtm_priority.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 1
d99 1
@


1.22
log
@regen
@
text
@d50 1
d106 1
@


1.21
log
@It is now possible to enter static MPLS routes into the kernel.

It is still not possible to set the desired opration for an entry.

ok claudio@@ laurent@@ dlg@@
@
text
@d48 1
d52 1
d62 1
d103 1
d107 1
d117 1
@


1.20
log
@remove IPX, agreed by many
libc and kernel side awaiting a libc major bump to piggyback to
@
text
@d30 1
d41 1
d47 1
d82 1
d93 1
d99 1
@


1.19
log
@If an address family is specified do not print IPSec "routes". Additionally
add a -encap option to show only the IPSec part. OK hshoexer@@, henning@@
@
text
@a31 1
	K_IPX,
a80 1
	{ "ipx",	K_IPX },
@


1.18
log
@Experimental support for opportunitic use of jumbograms where only some hosts
on the local network support them.

This adds a new socket option, SO_JUMBO, and a new route flag,
RTF_JUMBO. If _both_ the socket option is set and the route for the host
has RTF_JUMBO set, ip_output will fragment the packet to the largest
possible size for the link, ignoring the card's MTU.

The semantics of this feature will be evolving rapidly; talk to us
if you intend to use it.

ok deraadt@@ marius@@
@
text
@d18 1
d68 1
@


1.17
log
@sync
@
text
@d6 2
a7 2
        char    *kt_cp;
        int      kt_i;
d32 1
d43 1
d81 1
d92 1
@


1.16
log
@make keywords.sh generate an enum for the keys
@
text
@@


1.15
log
@nicer output
@
text
@d10 47
a56 44
#define	K_ADD	1
#define	K_BLACKHOLE	2
#define	K_CHANGE	3
#define	K_CLONING	4
#define	K_DELETE	5
#define	K_DST	6
#define	K_EXPIRE	7
#define	K_FLUSH	8
#define	K_GATEWAY	9
#define	K_GENMASK	10
#define	K_GET	11
#define	K_HOST	12
#define	K_HOPCOUNT	13
#define	K_IFACE	14
#define	K_INTERFACE	15
#define	K_IFA	16
#define	K_IFP	17
#define	K_INET	18
#define	K_INET6	19
#define	K_IPX	20
#define	K_LABEL	21
#define	K_LINK	22
#define	K_LLINFO	23
#define	K_LOCK	24
#define	K_LOCKREST	25
#define	K_MONITOR	26
#define	K_MPATH	27
#define	K_MTU	28
#define	K_NET	29
#define	K_NETMASK	30
#define	K_NOSTATIC	31
#define	K_PREFIXLEN	32
#define	K_PROTO1	33
#define	K_PROTO2	34
#define	K_RECVPIPE	35
#define	K_REJECT	36
#define	K_RTT	37
#define	K_RTTVAR	38
#define	K_SA	39
#define	K_SENDPIPE	40
#define	K_SHOW	41
#define	K_SSTHRESH	42
#define	K_STATIC	43
#define	K_XRESOLVE	44
@


1.14
log
@get rid of the twisted keywords.[c|h] interaction and just let keywords.sh
put the defines and the table into the .h
@
text
@d7 1
a7 1
        int     kt_i;
d56 44
a99 44
	{ "add", K_ADD },
	{ "blackhole", K_BLACKHOLE },
	{ "change", K_CHANGE },
	{ "cloning", K_CLONING },
	{ "delete", K_DELETE },
	{ "dst", K_DST },
	{ "expire", K_EXPIRE },
	{ "flush", K_FLUSH },
	{ "gateway", K_GATEWAY },
	{ "genmask", K_GENMASK },
	{ "get", K_GET },
	{ "host", K_HOST },
	{ "hopcount", K_HOPCOUNT },
	{ "iface", K_IFACE },
	{ "interface", K_INTERFACE },
	{ "ifa", K_IFA },
	{ "ifp", K_IFP },
	{ "inet", K_INET },
	{ "inet6", K_INET6 },
	{ "ipx", K_IPX },
	{ "label", K_LABEL },
	{ "link", K_LINK },
	{ "llinfo", K_LLINFO },
	{ "lock", K_LOCK },
	{ "lockrest", K_LOCKREST },
	{ "monitor", K_MONITOR },
	{ "mpath", K_MPATH },
	{ "mtu", K_MTU },
	{ "net", K_NET },
	{ "netmask", K_NETMASK },
	{ "nostatic", K_NOSTATIC },
	{ "prefixlen", K_PREFIXLEN },
	{ "proto1", K_PROTO1 },
	{ "proto2", K_PROTO2 },
	{ "recvpipe", K_RECVPIPE },
	{ "reject", K_REJECT },
	{ "rtt", K_RTT },
	{ "rttvar", K_RTTVAR },
	{ "sa", K_SA },
	{ "sendpipe", K_SENDPIPE },
	{ "show", K_SHOW },
	{ "ssthresh", K_SSTHRESH },
	{ "static", K_STATIC },
	{ "xresolve", K_XRESOLVE },
@


1.13
log
@remove ccitt x.25 traces, ok theo
@
text
@d5 4
a8 5
extern struct keytab {
	char	*kt_cp;
	int	kt_i;
} keywords[];

d54 49
@


1.12
log
@kill osi and mask, ok henning
@
text
@d54 1
a54 2
#define	K_X25	44
#define	K_XRESOLVE	45
@


1.11
log
@remove -S, -src, -srcmask, and other source routing stuff.  ok henning
@
text
@d36 20
a55 22
#define	K_MASK	26
#define	K_MONITOR	27
#define	K_MPATH	28
#define	K_MTU	29
#define	K_NET	30
#define	K_NETMASK	31
#define	K_NOSTATIC	32
#define	K_OSI	33
#define	K_PREFIXLEN	34
#define	K_PROTO1	35
#define	K_PROTO2	36
#define	K_RECVPIPE	37
#define	K_REJECT	38
#define	K_RTT	39
#define	K_RTTVAR	40
#define	K_SA	41
#define	K_SENDPIPE	42
#define	K_SHOW	43
#define	K_SSTHRESH	44
#define	K_STATIC	45
#define	K_X25	46
#define	K_XRESOLVE	47
@


1.10
log
@display route labels with "route get", and allow them to be set
@
text
@d54 4
a57 6
#define	K_SRC	44
#define	K_SRCMASK	45
#define	K_SSTHRESH	46
#define	K_STATIC	47
#define	K_X25	48
#define	K_XRESOLVE	49
@


1.9
log
@remove netiso and netns code
@
text
@d31 29
a59 28
#define	K_LINK	21
#define	K_LLINFO	22
#define	K_LOCK	23
#define	K_LOCKREST	24
#define	K_MASK	25
#define	K_MONITOR	26
#define	K_MPATH	27
#define	K_MTU	28
#define	K_NET	29
#define	K_NETMASK	30
#define	K_NOSTATIC	31
#define	K_OSI	32
#define	K_PREFIXLEN	33
#define	K_PROTO1	34
#define	K_PROTO2	35
#define	K_RECVPIPE	36
#define	K_REJECT	37
#define	K_RTT	38
#define	K_RTTVAR	39
#define	K_SA	40
#define	K_SENDPIPE	41
#define	K_SHOW	42
#define	K_SRC	43
#define	K_SRCMASK	44
#define	K_SSTHRESH	45
#define	K_STATIC	46
#define	K_X25	47
#define	K_XRESOLVE	48
@


1.8
log
@require RTF_MPATH to enter a multipath route with RTM_ADD.
route(8) takes a new -mpath modifier to enter a multipath route.
requested deraadt@@, ok itojun@@ mcbride@@ millert@@
@
text
@d31 28
a58 30
#define	K_ISO	21
#define	K_LINK	22
#define	K_LLINFO	23
#define	K_LOCK	24
#define	K_LOCKREST	25
#define	K_MASK	26
#define	K_MONITOR	27
#define	K_MPATH	28
#define	K_MTU	29
#define	K_NET	30
#define	K_NETMASK	31
#define	K_NOSTATIC	32
#define	K_OSI	33
#define	K_PREFIXLEN	34
#define	K_PROTO1	35
#define	K_PROTO2	36
#define	K_RECVPIPE	37
#define	K_REJECT	38
#define	K_RTT	39
#define	K_RTTVAR	40
#define	K_SA	41
#define	K_SENDPIPE	42
#define	K_SHOW	43
#define	K_SRC	44
#define	K_SRCMASK	45
#define	K_SSTHRESH	46
#define	K_STATIC	47
#define	K_X25	48
#define	K_XNS	49
#define	K_XRESOLVE	50
@


1.7
log
@add new "-src" and "-srcmask" modifiers to make it possible to add a source
selector part to the routing table entry. complements existing "-dst" and
"-dstmask". typical use:

   route add -src 20.20.20.22 20.20.20.21
   route add -src 192.168.1.0/24 -dst 192.168.2.0/24 20.20.20.21

useful for example to implement symetrical routing on multihomed boxes,
or to better select which packets to send to gif/tun/... tunnels.
new '-S' flag similar to netstat one. ok deraadt@@ mcbride@@
@
text
@d38 23
a60 22
#define	K_MTU	28
#define	K_NET	29
#define	K_NETMASK	30
#define	K_NOSTATIC	31
#define	K_OSI	32
#define	K_PREFIXLEN	33
#define	K_PROTO1	34
#define	K_PROTO2	35
#define	K_RECVPIPE	36
#define	K_REJECT	37
#define	K_RTT	38
#define	K_RTTVAR	39
#define	K_SA	40
#define	K_SENDPIPE	41
#define	K_SHOW	42
#define	K_SRC	43
#define	K_SRCMASK	44
#define	K_SSTHRESH	45
#define	K_STATIC	46
#define	K_X25	47
#define	K_XNS	48
#define	K_XRESOLVE	49
@


1.6
log
@Don't show or delete IPsec flows with the route command -- this was a
kludge to begin with, and it's about time we get rid of it.
@
text
@d53 7
a59 5
#define	K_SSTHRESH	43
#define	K_STATIC	44
#define	K_X25	45
#define	K_XNS	46
#define	K_XRESOLVE	47
@


1.5
log
@ipv6 support from KAME (needs no libc upgrade).  regen keywords.[ch].
@
text
@d17 41
a57 42
#define	K_ENCAP	7
#define	K_EXPIRE	8
#define	K_FLUSH	9
#define	K_GATEWAY	10
#define	K_GENMASK	11
#define	K_GET	12
#define	K_HOST	13
#define	K_HOPCOUNT	14
#define	K_IFACE	15
#define	K_INTERFACE	16
#define	K_IFA	17
#define	K_IFP	18
#define	K_INET	19
#define	K_INET6	20
#define	K_IPX	21
#define	K_ISO	22
#define	K_LINK	23
#define	K_LLINFO	24
#define	K_LOCK	25
#define	K_LOCKREST	26
#define	K_MASK	27
#define	K_MONITOR	28
#define	K_MTU	29
#define	K_NET	30
#define	K_NETMASK	31
#define	K_NOSTATIC	32
#define	K_OSI	33
#define	K_PREFIXLEN	34
#define	K_PROTO1	35
#define	K_PROTO2	36
#define	K_RECVPIPE	37
#define	K_REJECT	38
#define	K_RTT	39
#define	K_RTTVAR	40
#define	K_SA	41
#define	K_SENDPIPE	42
#define	K_SHOW	43
#define	K_SSTHRESH	44
#define	K_STATIC	45
#define	K_X25	46
#define	K_XNS	47
#define	K_XRESOLVE	48
@


1.4
log
@Forgot about keyword.c's tag, regenned again
@
text
@d30 29
a58 27
#define	K_IPX	20
#define	K_ISO	21
#define	K_LINK	22
#define	K_LLINFO	23
#define	K_LOCK	24
#define	K_LOCKREST	25
#define	K_MASK	26
#define	K_MONITOR	27
#define	K_MTU	28
#define	K_NET	29
#define	K_NETMASK	30
#define	K_NOSTATIC	31
#define	K_OSI	32
#define	K_PROTO1	33
#define	K_PROTO2	34
#define	K_RECVPIPE	35
#define	K_REJECT	36
#define	K_RTT	37
#define	K_RTTVAR	38
#define	K_SA	39
#define	K_SENDPIPE	40
#define	K_SHOW	41
#define	K_SSTHRESH	42
#define	K_STATIC	43
#define	K_X25	44
#define	K_XNS	45
#define	K_XRESOLVE	46
@


1.3
log
@Move over -encap change to keywords.sh only made to keywords.h,
$OpenBSD$ tagging.  Added a missing extern specifier. Regenerated keywords.h
@
text
@@


1.2
log
@Added -encap flag for flushing, added a missing break; in flushing X25
entries.
@
text
@d1 1
a1 1
/* $NetBSD$ */
d5 1
a5 1
struct keytab {
d17 40
a56 40
#define	K_EXPIRE	7
#define	K_FLUSH	8
#define	K_GATEWAY	9
#define	K_GENMASK	10
#define	K_GET	11
#define	K_HOST	12
#define	K_HOPCOUNT	13
#define	K_IFACE	14
#define	K_INTERFACE	15
#define	K_IFA	16
#define	K_IFP	17
#define	K_INET	18
#define	K_IPX	19
#define	K_ISO	20
#define	K_LINK	21
#define	K_LLINFO	22
#define	K_LOCK	23
#define	K_LOCKREST	24
#define	K_MASK	25
#define	K_MONITOR	26
#define	K_MTU	27
#define	K_NET	28
#define	K_NETMASK	29
#define	K_NOSTATIC	30
#define	K_OSI	31
#define	K_PROTO1	32
#define	K_PROTO2	33
#define	K_RECVPIPE	34
#define	K_REJECT	35
#define	K_RTT	36
#define	K_RTTVAR	37
#define	K_SA	38
#define	K_SENDPIPE	39
#define	K_SHOW	40
#define	K_SSTHRESH	41
#define	K_STATIC	42
#define	K_X25	43
#define	K_XNS	44
#define	K_XRESOLVE	45
#define K_ENCAP	46
@


1.1
log
@merge netbsd changes for show command
yet more buf oflows (provided by netbsd!)
an attempt at 64 bit cleanliness
-Wall
@
text
@d56 1
@
