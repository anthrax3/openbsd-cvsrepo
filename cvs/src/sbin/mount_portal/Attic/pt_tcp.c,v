head	1.14;
access;
symbols
	OPENBSD_4_9:1.13.0.14
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.12
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.8
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.12.0.14
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.12
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.10
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.8
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.6
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.22
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.20
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.18
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.16
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.14
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.12
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2011.04.05.18.51.25;	author thib;	state dead;
branches;
next	1.13;

1.13
date	2007.12.09.20.54.01;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2004.08.08.19.04.25;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.08.15.23.02;	author pedro;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.02.00.43.24;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.01.22.36.32;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.11.06.22.14;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.20.06.16;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.11.02.32.29;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.08.18.03.11.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.25.18.25.50;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	97.03.23.03.52.17;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.31.36;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Remove portalfs.

While it is a terribly cool idea, it's just awful and since noone has stepped
up to the plate to keep it up with the current vop state, retire it to the
attic.

ok krw@@, deraadt@@, guenther@@, miod@@.
comments from jmc@@
@
text
@/*	$OpenBSD: pt_tcp.c,v 1.13 2007/12/09 20:54:01 jmc Exp $	*/

/*
 * Copyright (c) 2004 Pedro Martelletto <pedro@@ambientworks.net>
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/socket.h>

#include <unistd.h>
#include <syslog.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <netdb.h>
#include <errno.h>

#include "portald.h"

/*
 * Keys should follow the format: tcp/[4||6]/host/port/["priv"]
 */
int
portal_tcp(struct portal_cred *pcr, char *key, char **v, int ks, int *fdp)
{
	char **tp, *tokens[5];
	int priv, s, tc, n;
	struct addrinfo aih, *ai, *ail;

	if (!strlen(key) || key[strlen(key) - 1] == '/')
		return (EINVAL);

	tc = 0;
	for (tp = tokens; tp < &tokens[5] &&
	    (*tp = strsep(&key, "/")) != NULL;)
		if (**tp != '\0') {
			tp++;
			tc++;
		}

	if (tc < 3)
		return (EINVAL);

	memset(&aih, 0x0, sizeof(aih));
	aih.ai_socktype = SOCK_STREAM;
	aih.ai_family = PF_UNSPEC;

	priv = 0;
	tp = tokens;
	if (tc > 3) {
		if (!strcmp(tokens[1], "4"))
			aih.ai_family = PF_INET;
		else if (!strcmp(tokens[1], "6"))
			aih.ai_family = PF_INET6;

		if (aih.ai_family != PF_UNSPEC) {
			tp++;
			tc--;
		}

		if (tc > 4)
			return (EINVAL);

		if (tc > 3) {
			if (!strcmp(tp[tc - 1], "priv")) {
				if (pcr->pcr_uid == 0)
					priv = 1;
				else
					return (EPERM);
			} else
				return (EINVAL);
		}
	}

	n = getaddrinfo(tp[1], tp[2], &aih, &ail);
	if (n) {
		syslog(LOG_ERR, "getaddrinfo: %s", gai_strerror(n));
		return (EINVAL);
	}

	s = -1;

	for (ai = ail; ai != NULL; ai = ai->ai_next) {
		if (priv)
			s = rresvport(NULL);
		else
			s = socket(ai->ai_family, ai->ai_socktype,
			        ai->ai_protocol);
		if (s < 0) {
			syslog(LOG_ERR, "socket: %m");
			continue;
		}

		n = connect(s, ai->ai_addr, ai->ai_addrlen);
		if (!n)
			break;

		syslog(LOG_ERR, "connect: %m");
		close(s);
		s = -1;
	}

	freeaddrinfo(ail);

	if (s == -1)
		return (errno);

	*fdp = s;
	return (0);
}
@


1.13
log
@update pedro's email address, at his request;
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.12 2004/08/08 19:04:25 deraadt Exp $	*/
@


1.12
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.11 2004/05/08 15:23:02 pedro Exp $	*/
d4 1
a4 1
 * Copyright (c) 2004 Pedro Martelletto <pedro@@openbsd.org>
@


1.11
log
@change my e-mail address to @@openbsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.10 2004/03/02 00:43:24 tedu Exp $	*/
d76 1
a76 1
	
@


1.10
log
@oops, committed wrong version.  thanks pedro.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2004 Pedro Martelletto <pbastos@@rdc.puc-rio.br>
@


1.9
log
@rewrite featuring IP6 support from Pedro Martelletto <pbastos@@rdc.puc-rio.br>
ok deraadt@@
@
text
@d43 3
d61 1
a67 2
		else
			return (EINVAL);
d69 4
a72 3
		tp++;
		tc--;
	}
d74 12
a85 6
	priv = 0;
	if (!strcmp(tp[tc - 1], "priv")) {
		if (pcr->pcr_uid == 0)
			priv = 1;
		else
			return (EPERM);
d108 1
a108 6
		if (n) {
			syslog(LOG_ERR, "connect: %m");
			close(s);
			s = -1;
			continue;
		} else
d110 4
@


1.8
log
@ansification
@
text
@d1 1
a1 2
/*	$OpenBSD: pt_tcp.c,v 1.7 2003/06/02 20:06:16 millert Exp $	*/
/*	$NetBSD: pt_tcp.c,v 1.9 1995/05/21 15:33:22 mycroft Exp $	*/
d4 1
a4 2
 * Copyright (c) 1992, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
d7 3
a9 2
 * This code is derived from software donated to Berkeley by
 * Jan-Simon Pendry.
d11 7
a17 26
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: Id: pt_tcp.c,v 1.1 1992/05/25 21:43:09 jsp Exp
 *	@@(#)pt_tcp.c	8.5 (Berkeley) 4/28/95
d20 3
a22 1
#include <stdio.h>
d24 2
d27 2
a29 8
#include <string.h>
#include <sys/types.h>
#include <sys/param.h>
#include <sys/syslog.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
d34 1
a34 5
 * Key will be tcp/host/port[/"priv"]
 * Create a TCP socket connected to the
 * requested host and port.
 * Some trailing suffix values have special meanings.
 * An unrecognised suffix is an error.
d37 1
a37 1
portal_tcp(struct portal_cred *pcr, char *key, char **v, int kso, int *fdp)
d39 11
a49 12
	char host[MAXHOSTNAMELEN];
	char port[MAXHOSTNAMELEN];
	char *p = key + (v[1] ? strlen(v[1]) : 0);
	char *q;
	struct hostent *hp;
	struct servent *sp;
	struct in_addr **ipp;
	struct in_addr *ip[2];
	struct in_addr ina;
	int s_port;
	int priv = 0;
	struct sockaddr_in sain;
d51 1
a51 2
	q = strchr(p, '/');
	if (q == 0 || q - p >= sizeof(host))
d53 12
a64 18
	*q = '\0';
	(void)strlcpy(host, p, sizeof(host));
	p = q + 1;

	q = strchr(p, '/');
	if (q)
		*q = '\0';
	if (strlen(p) >= sizeof(port))
		return (EINVAL);
	(void)strlcpy(port, p, sizeof(port));
	if (q) {
		p = q + 1;
		if (strcmp(p, "priv") == 0) {
			if (pcr->pcr_uid == 0)
				priv = 1;
			else
				return (EPERM);
		} else {
d66 3
a68 1
		}
d71 6
a76 9
	if (inet_aton(host, &ina) == 0) {
		hp = gethostbyname(host);
		if (hp == 0)
			return (EINVAL);
		ipp = (struct in_addr **)hp->h_addr_list;
	} else {
		ip[0] = &ina;
		ip[1] = 0;
		ipp = ip;
d79 4
a82 8
	sp = getservbyname(port, "tcp");
	if (sp != 0)
		s_port = sp->s_port;
	else {
		s_port = strtoul(port, &p, 0);
		if (s_port == 0 || *p != '\0')
			return (EINVAL);
		s_port = htons(s_port);
d85 1
a85 7
	(void)memset(&sain, 0, sizeof(sain));
	sain.sin_len = sizeof(sain);
	sain.sin_family = AF_INET;
	sain.sin_port = s_port;

	while (ipp[0]) {
		int so;
d87 1
d89 1
a89 1
			so = rresvport(NULL);
d91 3
a93 2
			so = socket(AF_INET, SOCK_STREAM, 0);
		if (so < 0) {
d95 1
a95 1
			return (errno);
d98 11
a108 6
		sain.sin_addr = *ipp[0];
		if (connect(so, (struct sockaddr *) &sain, sizeof(sain)) == 0) {
			*fdp = so;
			return (0);
		}
		(void)close(so);
d110 2
a111 2
		ipp++;
	}
d113 2
a114 1
	return (errno);
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.6 2003/03/11 02:32:29 deraadt Exp $	*/
d63 1
a63 6
portal_tcp(pcr, key, v, kso, fdp)
	struct portal_cred *pcr;
	char *key;
	char **v;
	int kso;
	int *fdp;
@


1.6
log
@strcpy -> strlcpy; Hans-Joerg.Hoexer@@yerbouti.franken.de
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.5 1997/08/18 03:11:25 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@#include <string.h> not <strings.h> -- Yes, I'm a weanie...
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.4 1997/06/25 18:25:50 kstailey Exp $	*/
d91 1
a91 1
	(void)strcpy(host, p);
d99 1
a99 1
	(void)strcpy(port, p);
@


1.4
log
@(foo *)0 -> NULL
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.3 1997/03/23 03:52:17 millert Exp $	*/
d48 1
a48 1
#include <strings.h>
@


1.3
log
@Minor updates from lite2 + some KNF and strdup(3) checking.
Also, no need to change umask now that we use mkstemp(3).
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.2 1996/06/23 14:31:36 deraadt Exp $	*/
d142 1
a142 1
			so = rresvport((int *) 0);
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: pt_tcp.c,v 1.9 1995/05/21 15:33:22 mycroft Exp $	*/
d5 1
a5 1
 * Copyright (c) 1992, 1993
d7 1
d41 1
a41 1
 *	@@(#)pt_tcp.c	8.3 (Berkeley) 3/27/94
d66 7
a72 6
int portal_tcp(pcr, key, v, kso, fdp)
struct portal_cred *pcr;
char *key;
char **v;
int kso;
int *fdp;
d91 1
a91 1
	strcpy(host, p);
d99 1
a99 1
	strcpy(port, p);
d116 1
a116 1
		ipp = (struct in_addr **) hp->h_addr_list;
d127 2
a128 2
		s_port = htons(atoi(port));
		if (s_port == 0)
d130 1
d133 1
a133 1
	memset(&sain, 0, sizeof(sain));
d155 1
a155 1
		(void) close(so);
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
