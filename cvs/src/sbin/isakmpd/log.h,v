head	1.25;
access;
symbols
	OPENBSD_6_1:1.25.0.34
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.32
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.28
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.30
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.22
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.25.0.26
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.24
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.25.0.20
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.18
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.16
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.14
	OPENBSD_5_0:1.25.0.12
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.25.0.10
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.8
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.4
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.25.0.6
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.25.0.2
	OPENBSD_4_5_BASE:1.25
	OPENBSD_4_4:1.24.0.14
	OPENBSD_4_4_BASE:1.24
	OPENBSD_4_3:1.24.0.12
	OPENBSD_4_3_BASE:1.24
	OPENBSD_4_2:1.24.0.10
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.24.0.8
	OPENBSD_4_1_BASE:1.24
	OPENBSD_4_0:1.24.0.6
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.24.0.4
	OPENBSD_3_9_BASE:1.24
	OPENBSD_3_8:1.24.0.2
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.21.0.4
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.2
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.25
date	2008.12.22.14.30.04;	author hshoexer;	state Exp;
branches;
next	1.24;

1.24
date	2005.05.26.05.35.55;	author moritz;	state Exp;
branches;
next	1.23;

1.23
date	2005.05.03.13.42.54;	author hshoexer;	state Exp;
branches;
next	1.22;

1.22
date	2005.04.08.19.40.03;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2004.05.23.18.17.56;	author hshoexer;	state Exp;
branches;
next	1.20;

1.20
date	2004.04.15.18.39.26;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2004.02.25.16.01.28;	author hshoexer;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.19.09.54.52;	author ho;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.16.10.51.57;	author hshoexer;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.13.13.57.51;	author ho;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.03.14.28.16;	author ho;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.15.00.24.50;	author ho;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.09.08.13.06;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.28.11.17.57;	author ho;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.05.08.18.37;	author ho;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.09.21.21.57;	author ho;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.13.14.05.18;	author ho;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.07.22.05.08;	author niklas;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2000.02.25.17.23.41;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	99.04.19.21.06.51;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.03.24.14.59.41;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	98.12.21.01.02.26;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.16;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.43.59;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches;
next	;

1.8.4.1
date	2001.05.08.12.45.24;	author ho;	state Exp;
branches;
next	;


desc
@@


1.25
log
@mark log_fatal() and monitor_exit() as __dead, as they do not return.
@
text
@/* $OpenBSD: log.h,v 1.24 2005/05/26 05:35:55 moritz Exp $	 */
/* $EOM: log.h,v 1.19 2000/03/30 14:27:23 ho Exp $	 */

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 * Copyright (c) 2001, 2002, 2003 Håkan Olsson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _LOG_H_
#define _LOG_H_

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/uio.h>
#include <stdio.h>

extern int      verbose_logging;

/*
 * We cannot do the log strings dynamically sizeable as out of memory is one
 * of the situations we need to report about.
 */
#define LOG_SIZE	200

enum log_classes {
	LOG_MISC, LOG_TRANSPORT, LOG_MESSAGE, LOG_CRYPTO, LOG_TIMER, LOG_SYSDEP,
	LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_UI, LOG_ENDCLASS
};
#define LOG_CLASSES_TEXT \
  { "Misc", "Trpt", "Mesg", "Cryp", "Timr", "Sdep", "SA  ", "Exch", "Negt", \
    "Plcy", "UI  " }

/*
 * "Class" LOG_REPORT will always be logged to the current log channel,
 * regardless of level.
 */
#define LOG_PRINT  -1
#define LOG_REPORT -2

#define LOG_DBG(x)	log_debug x
#define LOG_DBG_BUF(x)	log_debug_buf x

extern void	log_debug(int, int, const char *,...)
		    __attribute__((__format__(__printf__, 3, 4)));
extern void     log_debug_buf(int, int, const char *, const u_int8_t *, size_t);
extern void     log_debug_cmd(int, int);
extern void     log_debug_toggle(void);

#define PCAP_FILE_DEFAULT "/var/run/isakmpd.pcap"
extern void     log_packet_init(char *);
extern void     log_packet_iov(struct sockaddr *, struct sockaddr *,
				                       struct iovec *, int);
extern void     log_packet_restart(char *);
extern void     log_packet_stop(void);

extern FILE    *log_current(void);
extern void	log_error(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void	log_errorx(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_fatal(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2))) __dead;
extern void     log_fatalx(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_print(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_verbose(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_to(FILE *);
extern void     log_init(int);
extern void     log_reinit(void);

#endif				/* _LOG_H_ */
@


1.24
log
@add log_errorx() which doesn't print the errno value. ok hshoexer@@
@
text
@d1 1
a1 1
/* $OpenBSD: log.h,v 1.23 2005/05/03 13:42:54 hshoexer Exp $	 */
d86 1
a86 1
		    __attribute__((__format__(__printf__, 1, 2)));
@


1.23
log
@provide log_fatalx() function, that does not print an error string (like err
vs. errx).  Not used yet.

ok moritz@@
@
text
@d1 1
a1 1
/* $OpenBSD: log.h,v 1.22 2005/04/08 19:40:03 deraadt Exp $	 */
d82 2
@


1.22
log
@USE_DEBUG is bye bye
@
text
@d1 1
a1 1
/* $OpenBSD: log.h,v 1.21 2004/05/23 18:17:56 hshoexer Exp $	 */
d84 2
@


1.21
log
@More KNF.  Mainly spaces and line-wraps, no binary change.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: log.h,v 1.20 2004/04/15 18:39:26 deraadt Exp $	 */
a63 2
#ifdef USE_DEBUG

a78 7

#else				/* !USE_DEBUG */

#define LOG_DBG(x)
#define LOG_DBG_BUF(x)

#endif				/* USE_DEBUG */
@


1.20
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: log.h,v 1.19 2004/02/25 16:01:28 hshoexer Exp $	 */
d69 5
a73 6
extern void
log_debug(int, int, const char *,...)
__attribute__((__format__(__printf__, 3, 4)));
	extern void     log_debug_buf(int, int, const char *, const u_int8_t *, size_t);
	extern void     log_debug_cmd(int, int);
	extern void     log_debug_toggle(void);
d76 2
a77 2
	extern void     log_packet_init(char *);
	extern void     log_packet_iov(struct sockaddr *, struct sockaddr *,
d79 2
a80 2
	extern void     log_packet_restart(char *);
	extern void     log_packet_stop(void);
d90 11
a100 12
extern void
log_error(const char *,...)
__attribute__((__format__(__printf__, 1, 2)));
	extern void     log_fatal(const char *,...)
                __attribute__((__format__(__printf__, 1, 2)));
	extern void     log_print(const char *,...)
                __attribute__((__format__(__printf__, 1, 2)));
	extern void     log_verbose(const char *,...)
                __attribute__((__format__(__printf__, 1, 2)));
	extern void     log_to(FILE *);
	extern void     log_init(int);
	extern void     log_reinit(void);
@


1.19
log
@Add and document configuration options Logverbose and Loglevel.  As log.c now
depends on conf.c and some regression tests use log.c, add conf.c to
Makefiles where necessary.

ok ho@@
@
text
@d1 2
a2 2
/*	$OpenBSD: log.h,v 1.18 2004/02/19 09:54:52 ho Exp $	*/
/*	$EOM: log.h,v 1.19 2000/03/30 14:27:23 ho Exp $	*/
d41 1
a41 1
extern int verbose_logging;
d50 2
a51 2
  LOG_MISC, LOG_TRANSPORT, LOG_MESSAGE, LOG_CRYPTO, LOG_TIMER, LOG_SYSDEP,
  LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_UI, LOG_ENDCLASS
d69 6
a74 5
extern void log_debug (int, int, const char *, ...)
     __attribute__ ((__format__ (__printf__, 3, 4)));
extern void log_debug_buf (int, int, const char *, const u_int8_t *, size_t);
extern void log_debug_cmd (int, int);
extern void log_debug_toggle (void);
d77 5
a81 5
extern void log_packet_init (char *);
extern void log_packet_iov (struct sockaddr *, struct sockaddr *,
			    struct iovec *, int);
extern void log_packet_restart (char *);
extern void log_packet_stop (void);
d83 1
a83 1
#else /* !USE_DEBUG */
d88 1
a88 1
#endif /* USE_DEBUG */
d90 13
a102 12
extern FILE *log_current (void);
extern void log_error (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_fatal (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_print (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_verbose (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_to (FILE *);
extern void log_init (int);
extern void log_reinit (void);
d104 1
a104 1
#endif /* _LOG_H_ */
@


1.18
log
@With -d, SIGINT should do a clean shutdown.
Without -d, logs should be sent to syslog, level LOG_INFO.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.17 2004/01/16 10:51:57 hshoexer Exp $	*/
d100 1
@


1.17
log
@Added -v option.  Enables logging of successful exchange completion.
ok ho@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.16 2003/10/13 13:57:51 ho Exp $	*/
d99 1
a99 1
extern void log_init (void);
@


1.16
log
@Add a UI FIFO debug class. ok markus@@ plus I think henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.15 2003/06/03 14:28:16 ho Exp $	*/
d41 2
d95 2
@


1.15
log
@Remove clauses 3 and 4. With approval from Niklas Hallqvist and
Niels Provos.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.14 2003/05/15 00:24:50 ho Exp $	*/
d49 1
a49 1
  LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_ENDCLASS
d53 1
a53 1
    "Plcy" }
@


1.14
log
@(c)
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.13 2002/06/09 08:13:06 todd Exp $	*/
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.13
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.12 2002/05/28 11:17:57 ho Exp $	*/
d6 1
@


1.12
log
@printf format __attribute__. From <greg@@nest.cx>, slightly modified.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.11 2001/10/05 08:18:37 ho Exp $	*/
d79 1
a79 1
extern void log_packet_iov (struct sockaddr *, struct sockaddr *, 
@


1.11
log
@Extend the FIFO ui with the 'D A <level>' (to set all debug levels) and
'D T' (to toggle all logging on and off) commands. niklas@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.10 2001/04/09 21:21:57 ho Exp $	*/
d71 2
a72 1
extern void log_debug (int, int, const char *, ...);
d92 6
a97 3
extern void log_error (const char *, ...);
extern void log_fatal (const char *, ...);
extern void log_print (const char *, ...);
@


1.10
log
@isakmpd can now capture un-encrypted IKE negotiation packets to a
file. In pcap(3) format, so tcpdump(8) can read it.
Idea by Tim Newsham <newsham@@lava.net>, work by him and me.
Ok angelos@@, niklas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.9 2001/03/13 14:05:18 ho Exp $	*/
d74 1
@


1.9
log
@Add logging classes for Negotiation and Policy, and change a number of
debug messages to use these instead. Change a number of 'log_print'
to debug messages to keep the noise down. Use 'log_error' instead of
'log_print' in some cases when we have errno. Some indentation fixes.
(niklas@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.8 2000/04/07 22:05:08 niklas Exp $	*/
d41 2
d75 8
a82 1
#else /* USE_DEBUG */
@


1.8
log
@init.c: Merge with EOM 1.25
log.h: Merge with EOM 1.19

author: ho
Add log_init().
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.7 2000/02/25 17:23:41 niklas Exp $	*/
d51 1
a51 1
  LOG_SA, LOG_EXCHANGE, LOG_ENDCLASS
d54 2
a55 1
  { "Misc", "Trpt", "Mesg", "Cryp", "Timr", "Sdep", "SA  ", "Exch" }
@


1.8.4.1
log
@Pull in isakmpd from 2.9 to 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.10 2001/04/09 21:21:57 ho Exp $	*/
a40 2
#include <sys/socket.h>
#include <sys/uio.h>
d51 1
a51 1
  LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_ENDCLASS
d54 1
a54 2
  { "Misc", "Trpt", "Mesg", "Cryp", "Timr", "Sdep", "SA  ", "Exch", "Negt", \
    "Plcy" }
d72 1
a72 8
#define PCAP_FILE_DEFAULT "/var/run/isakmpd.pcap"
extern void log_packet_init (char *);
extern void log_packet_iov (struct sockaddr *, struct sockaddr *, 
			    struct iovec *, int);
extern void log_packet_restart (char *);
extern void log_packet_stop (void);

#else /* !USE_DEBUG */
@


1.7
log
@regress/crypto/Makefile: Merge with EOM 1.5
regress/dh/Makefile: Merge with EOM 1.7
regress/group/Makefile: Merge with EOM 1.9
regress/prf/Makefile: Merge with EOM 1.4
regress/rsakeygen/Makefile: Merge with EOM 1.8
regress/x509/Makefile: Merge with EOM 1.10
Makefile: Merge with EOM 1.62
attribute.c: Merge with EOM 1.10
sa.c: Merge with EOM 1.99
conf.c: Merge with EOM 1.20
crypto.c: Merge with EOM 1.28
isakmpd.c: Merge with EOM 1.45
connection.c: Merge with EOM 1.19
doi.h: Merge with EOM 1.28
field.c: Merge with EOM 1.11
exchange.c: Merge with EOM 1.116
ike_auth.c: Merge with EOM 1.44
pf_key_v2.c: Merge with EOM 1.37
ike_phase_1.c: Merge with EOM 1.22
ipsec.c: Merge with EOM 1.118
isakmp_doi.c: Merge with EOM 1.40
log.c: Merge with EOM 1.26
log.h: Merge with EOM 1.18
math_group.c: Merge with EOM 1.23
message.c: Merge with EOM 1.144
pf_encap.c: Merge with EOM 1.70
policy.c: Merge with EOM 1.18
timer.c: Merge with EOM 1.13
transport.c: Merge with EOM 1.41
udp.c: Merge with EOM 1.47
ui.c: Merge with EOM 1.37
x509.c: Merge with EOM 1.36

author: niklas
Made debug logging a compile time selectable feature
@
text
@d1 2
a2 2
/*	$OpenBSD: log.h,v 1.6 1999/04/19 21:06:51 niklas Exp $	*/
/*	$EOM: log.h,v 1.18 2000/02/20 19:58:40 niklas Exp $	*/
d84 1
@


1.6
log
@./log.h: Merge with EOM 1.17

Added classes LOG_SA and LOG_EXCHANGE, converted
many LOG_MISC to new classes, adjusted levels slightly.
More SA logging.

Move LOG_SIZE to log.h

Add LOG_REPORT to always go to logchannel regardless of level; misc small fixes

I did not need to do this but... style nits

Add class and level to debug messages

1999 copyrights
@
text
@d1 2
a2 2
/*	$OpenBSD: log.h,v 1.5 1999/03/24 14:59:41 niklas Exp $	*/
/*	$EOM: log.h,v 1.17 1999/04/16 17:33:08 ho Exp $	*/
d63 5
a67 1
extern FILE *log_current (void);
d71 9
@


1.5
log
@Merge with EOM 1.11
s/LOG_PF_ENCAP/LOG_SYSDEP/
@
text
@d1 2
a2 2
/*	$OpenBSD: log.h,v 1.4 1998/12/21 01:02:26 niklas Exp $	*/
/*	$EOM: log.h,v 1.11 1999/03/04 18:53:28 niklas Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 Niklas Hallqvist.  All rights reserved.
d43 6
d51 1
a51 1
  LOG_ENDCLASS
d53 9
@


1.4
log
@Last months worth of work on isakmpd, lots done
@
text
@d1 2
a2 2
/*	$OpenBSD: log.h,v 1.3 1998/11/17 11:10:16 niklas Exp $	*/
/*	$EOM: log.h,v 1.10 1998/12/01 10:19:45 niklas Exp $	*/
d44 1
a44 1
  LOG_MISC, LOG_TRANSPORT, LOG_MESSAGE, LOG_CRYPTO, LOG_TIMER, LOG_PF_ENCAP,
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 2
a2 2
/*	$OpenBSD: log.h,v 1.2 1998/11/15 00:43:59 niklas Exp $	*/
/*	$EOM: log.h,v 1.9 1998/10/19 16:13:34 niklas Exp $	*/
d48 1
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: log.h,v 1.1.1.1 1998/11/15 00:03:49 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: log.h,v 1.9 1998/10/19 16:13:34 niklas Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
