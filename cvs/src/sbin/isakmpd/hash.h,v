head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.44
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.46
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.42
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.38
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.40
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.32
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.36
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.34
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.30
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.28
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.26
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.24
	OPENBSD_5_0:1.8.0.22
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.20
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.18
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.14
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.16
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.14
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2006.06.10.20.10.02;	author hshoexer;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.15.18.39.25;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.14.28.16;	author ho;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.21.09.40.34;	author ho;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.11.09.50.43;	author ho;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.11;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.43.54;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.48;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@support sha2 for main mode hmacs and aesctr for quick mode encryption.
ok markus@@ ho@@
@
text
@/* $OpenBSD: hash.h,v 1.7 2004/04/15 18:39:25 deraadt Exp $	 */
/* $EOM: hash.h,v 1.6 1998/07/25 22:04:36 niklas Exp $	 */

/*
 * Copyright (c) 1998 Niels Provos.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _HASH_H_
#define _HASH_H_

/* Normal mode hash encapsulation */

#define MD5_SIZE	16
#define SHA1_SIZE	20
#define SHA2_256_SIZE	32
#define SHA2_384_SIZE	48
#define SHA2_512_SIZE	64
#define HASH_MAX	SHA2_512_SIZE

enum hashes {
	HASH_MD5 = 0,
	HASH_SHA1,
	HASH_SHA2_256,
	HASH_SHA2_384,
	HASH_SHA2_512
};

struct hash {
	enum hashes     type;
	int             id;	/* ISAKMP/Oakley ID */
	u_int8_t        hashsize;	/* Size of the hash */
	void           *ctx;	/* Pointer to a context, for HMAC ictx */
	unsigned char  *digest;	/* Pointer to a digest */
	int             ctxsize;
	void           *ctx2;	/* Pointer to a 2nd context, for HMAC octx */
	void            (*Init) (void *);
	void            (*Update) (void *, unsigned char *, unsigned int);
	void            (*Final) (unsigned char *, void *);
	void            (*HMACInit) (struct hash *, unsigned char *, unsigned int);
	void            (*HMACFinal) (unsigned char *, struct hash *);
};

/* HMAC Hash Encapsulation */

#define HMAC_IPAD_VAL	0x36
#define HMAC_OPAD_VAL	0x5C
#define HMAC_BLOCKLEN	64

extern struct hash *hash_get(enum hashes);
extern void     hmac_init(struct hash *, unsigned char *, unsigned int);

#endif				/* _HASH_H_ */
@


1.7
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: hash.h,v 1.6 2003/06/03 14:28:16 ho Exp $	 */
d39 4
a42 1
#define HASH_MAX	SHA1_SIZE
d46 4
a49 1
	HASH_SHA1
@


1.6
log
@Remove clauses 3 and 4. With approval from Niklas Hallqvist and
Niels Provos.
@
text
@d1 2
a2 2
/*	$OpenBSD: hash.h,v 1.5 2002/11/21 09:40:34 ho Exp $	*/
/*	$EOM: hash.h,v 1.6 1998/07/25 22:04:36 niklas Exp $	*/
d42 2
a43 2
  HASH_MD5 = 0,
  HASH_SHA1
d47 12
a58 12
  enum hashes type;
  int id;			/* ISAKMP/Oakley ID */
  u_int8_t hashsize;		/* Size of the hash */
  void *ctx;			/* Pointer to a context, for HMAC ictx */
  unsigned char *digest;	/* Pointer to a digest */
  int ctxsize;
  void *ctx2;			/* Pointer to a 2nd context, for HMAC octx */
  void (*Init) (void *);
  void (*Update) (void *, unsigned char *, unsigned int);
  void (*Final) (unsigned char *, void *);
  void (*HMACInit) (struct hash *, unsigned char *, unsigned int);
  void (*HMACFinal) (unsigned char *, struct hash *);
d67 2
a68 2
extern struct hash *hash_get (enum hashes);
extern void hmac_init (struct hash *, unsigned char *, unsigned int);
d70 1
a70 1
#endif /* _HASH_H_ */
@


1.5
log
@hmac_init and prf_alloc should use unsigned lengths. Problem pointed out by Patrick Latifi.
@
text
@d1 1
a1 1
/*	$OpenBSD: hash.h,v 1.4 2002/09/11 09:50:43 ho Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.4
log
@signed vs unsigned, some void * arithmetic, from -pedantic. niklas@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: hash.h,v 1.3 1998/11/17 11:10:11 niklas Exp $	*/
d62 1
a62 1
  void (*HMACInit) (struct hash *, unsigned char *, int);
d73 1
a73 1
extern void hmac_init (struct hash *, unsigned char *, int);
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 1
a1 1
/*	$OpenBSD: hash.h,v 1.2 1998/11/15 00:43:54 niklas Exp $	*/
d56 1
a56 1
  char *digest;			/* Pointer to a digest */
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: hash.h,v 1.1.1.1 1998/11/15 00:03:48 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: hash.h,v 1.6 1998/07/25 22:04:36 niklas Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
