head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.34
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.32
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.28
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.30
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.22
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.26
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.24
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.20
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.18
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.16
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.14
	OPENBSD_5_0:1.19.0.12
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.10
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.8
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.4
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.6
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.18.0.10
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.8
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.6
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.4
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.17.0.4
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.2
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5;
locks; strict;
comment	@ * @;


1.19
date	2008.12.22.14.30.04;	author hshoexer;	state Exp;
branches;
next	1.18;

1.18
date	2006.03.20.16.43.22;	author hshoexer;	state Exp;
branches;
next	1.17;

1.17
date	2005.05.28.18.52.12;	author hshoexer;	state Exp;
branches;
next	1.16;

1.16
date	2005.05.28.18.48.12;	author hshoexer;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.28.17.42.50;	author moritz;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.27.07.08.21;	author moritz;	state Exp;
branches;
next	1.13;

1.13
date	2005.04.08.16.24.12;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.08.12.34.00;	author hshoexer;	state Exp;
branches;
next	1.11;

1.11
date	2004.06.26.06.07.03;	author hshoexer;	state Exp;
branches;
next	1.10;

1.10
date	2004.06.25.00.58.39;	author hshoexer;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.20.15.03.35;	author ho;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.15.18.39.26;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2004.03.19.14.04.43;	author hshoexer;	state Exp;
branches;
next	1.6;

1.6
date	2004.03.15.16.29.00;	author hshoexer;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.10.16.41.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.14.28.16;	author ho;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.18.19.37.46;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.17.17.39.26;	author ho;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.15.00.28.53;	author ho;	state Exp;
branches;
next	;


desc
@@


1.19
log
@mark log_fatal() and monitor_exit() as __dead, as they do not return.
@
text
@/* $OpenBSD: monitor.h,v 1.18 2006/03/20 16:43:22 hshoexer Exp $	 */

/*
 * Copyright (c) 2003 Håkan Olsson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MONITOR_H_
#define _MONITOR_H_

#include <sys/types.h>
#include <sys/stat.h>

#define ISAKMPD_PRIVSEP_USER "_isakmpd"

#define ISAKMP_PORT_DEFAULT	500

enum monitor_reqtypes {
	MONITOR_PFKEY_OPEN,
	MONITOR_GET_FD,
	MONITOR_SETSOCKOPT,
	MONITOR_BIND,
	MONITOR_REQ_READDIR,
	MONITOR_MKFIFO,
	MONITOR_INIT_DONE,
	MONITOR_SHUTDOWN
};

pid_t           monitor_init(int);
void            monitor_loop(int);

int             mm_send_fd(int, int);
int             mm_receive_fd(int);

FILE           *monitor_fopen(const char *, const char *);
int             monitor_open(const char *, int, mode_t);
int             monitor_stat(const char *, struct stat *);
int             monitor_setsockopt(int, int, int, const void *, socklen_t);
int             monitor_bind(int, const struct sockaddr *, socklen_t);
int		monitor_req_readdir(const char *);
int		monitor_readdir(char *, size_t);
void            monitor_init_done(void);

int		monitor_pf_key_v2_open(void);
void		monitor_exit(int) __dead;

#endif				/* _MONITOR_H_ */
@


1.18
log
@make sure the command fifo is ready before isakmpd returns.  This
resolves a startup race when interacting with ipsecctl.  Suggested
by and discussed with moritz@@

ok moritz@@
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.17 2005/05/28 18:52:12 hshoexer Exp $	 */
d64 1
a64 1
void		monitor_exit(int);
@


1.17
log
@ooops
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.16 2005/05/28 18:48:12 hshoexer Exp $	 */
a37 1
	MONITOR_UI_INIT,
a62 1
void		monitor_ui_init(void);
@


1.16
log
@Remove current state code, it's bogus.  We'll redo this.

suggested by and ok moritz
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.15 2005/05/28 17:42:50 moritz Exp $	 */
a31 3

//#include <dirent.h>
//#include <stdio.h>
@


1.15
log
@introduce new readdir implementation for the monitor.
testing and ok hshoexer@@
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.14 2005/05/27 07:08:21 moritz Exp $	 */
d33 2
a34 2
#include <dirent.h>
#include <stdio.h>
a49 6
};

enum priv_state {
	STATE_INIT,		/* just started */
	STATE_RUNNING,		/* running */
	STATE_QUIT		/* shutting down */
@


1.14
log
@o only pass signals from monitor to slave when pid is valid
o remove some unused monitor command
with and ok hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.13 2005/04/08 16:24:12 deraadt Exp $	 */
d46 1
a57 5
struct monitor_dirents {
	int             current;
	struct dirent **dirents;
};

d69 2
a70 3
struct monitor_dirents *monitor_opendir(const char *);
struct dirent  *monitor_readdir(struct monitor_dirents *);
void            monitor_closedir(struct monitor_dirents *);
@


1.13
log
@privsep always
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.12 2004/11/08 12:34:00 hshoexer Exp $	 */
a43 1
	MONITOR_GET_SOCKET,
@


1.12
log
@more monitor cleanup:
remove dead code, some debug messages, prototype monitor_close() to void.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.11 2004/06/26 06:07:03 hshoexer Exp $	 */
a29 1
#if defined (USE_PRIVSEP)
a82 16
#else				/* !USE_PRIVSEP */

#define monitor_fopen	fopen
#define monitor_open	open
#define monitor_stat	stat
#define monitor_setsockopt setsockopt
#define monitor_bind	bind
#define monitor_opendir	opendir
#define monitor_readdir	readdir
#define monitor_closedir closedir

#define monitor_ui_init	ui_init
#define monitor_pf_key_v2_open pf_key_v2_open
#define monitor_exit	exit

#endif				/* USE_PRIVSEP */
@


1.11
log
@Narrow down privsep interface.  Move pf_key_v2_open() to monitor.

Work in progress.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.10 2004/06/25 00:58:39 hshoexer Exp $	 */
a72 1
int             monitor_socket(int, int, int);
a74 1
int             monitor_mkfifo(const char *, mode_t);
d77 1
a77 1
int             monitor_closedir(struct monitor_dirents *);
a88 1
#define monitor_socket	socket
a90 1
#define monitor_mkfifo	mkfifo
d96 1
a97 1
#define monitor_pf_key_v2_open pf_key_v2_open
@


1.10
log
@Narrow down privsep interface.  Remove ui_init to monitor. So we can get rid of
monitor_mkfifo.

Work in progress.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.9 2004/06/20 15:03:35 ho Exp $	 */
d43 1
d83 1
d101 1
@


1.9
log
@To make debugging the unprivileged child process easier, make 'isakmpd -dd'
pause just after privsep; print the PIDs and wait for SIGCONT.
hshoexer@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.8 2004/04/15 18:39:26 deraadt Exp $	 */
d42 1
d81 3
d86 4
a89 4
#define monitor_fopen fopen
#define monitor_open open
#define monitor_stat stat
#define monitor_socket socket
d91 4
a94 4
#define monitor_bind bind
#define monitor_mkfifo mkfifo
#define monitor_opendir opendir
#define monitor_readdir readdir
d96 3
@


1.8
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.7 2004/03/19 14:04:43 hshoexer Exp $	 */
d62 1
a62 1
pid_t           monitor_init(void);
@


1.7
log
@Add missing bits to make already present privsep code work.  Enable privsep.

ok ho@@ deraadt@@ markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.6 2004/03/15 16:29:00 hshoexer Exp $	*/
d41 8
a48 9
enum monitor_reqtypes
{
  MONITOR_GET_FD,
  MONITOR_GET_SOCKET,
  MONITOR_SETSOCKOPT,
  MONITOR_BIND,
  MONITOR_MKFIFO,
  MONITOR_INIT_DONE,
  MONITOR_SHUTDOWN
d57 3
a59 4
struct monitor_dirents
{
  int	 current;
  struct dirent **dirents;
d62 2
a63 2
pid_t	monitor_init (void);
void	monitor_loop (int);
d65 2
a66 2
int	mm_send_fd (int, int);
int	mm_receive_fd (int);
d68 11
a78 11
FILE	*monitor_fopen (const char *, const char *);
int	monitor_open (const char *, int, mode_t);
int	monitor_stat (const char *, struct stat *);
int	monitor_socket (int, int, int);
int	monitor_setsockopt (int, int, int, const void *, socklen_t);
int	monitor_bind (int, const struct sockaddr *, socklen_t);
int	monitor_mkfifo (const char *, mode_t);
struct monitor_dirents	*monitor_opendir (const char *);
struct dirent	*monitor_readdir (struct monitor_dirents *);
int	monitor_closedir (struct monitor_dirents *);
void	monitor_init_done (void);
d80 1
a80 1
#else /* !USE_PRIVSEP */
d93 2
a94 2
#endif /* USE_PRIVSEP */
#endif /* _MONITOR_H_ */
@


1.6
log
@Remove unused code.

ok ho@@
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.5 2003/06/10 16:41:29 deraadt Exp $	*/
d27 3
d31 4
d39 2
d48 14
a61 1
  MONITOR_SHUTDOWN,
a69 1
struct stat;
d77 4
d91 3
a93 4

#if defined (USE_X509)
#define monitor_RSA_free RSA_free
#endif
d96 1
@


1.5
log
@boring cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.4 2003/06/03 14:28:16 ho Exp $	*/
a39 6
#if defined (USE_X509)
  MONITOR_RSA_UPLOADKEY,
  MONITOR_RSA_GETKEY,
  MONITOR_RSA_ENCRYPT,
  MONITOR_RSA_FREEKEY,
#endif
a55 8

#if defined (USE_X509)
char	*monitor_RSA_upload_key (char *);
char	*monitor_RSA_get_private_key (char *, char *);
int	monitor_RSA_private_encrypt (int, unsigned char *, unsigned char **,
				     void *, int);
void	monitor_RSA_free (void *);
#endif
@


1.4
log
@Remove clauses 3 and 4. With approval from Niklas Hallqvist and
Niels Provos.
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.3 2003/05/18 19:37:46 ho Exp $	*/
d55 1
a55 1
FILE 	*monitor_fopen (const char *, const char *);
@


1.3
log
@More isakmpd privsep work. X509 private keys are now kept in the privileged
process only. Various cleanup and bugfixes.
markus@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.2 2003/05/17 17:39:26 ho Exp $	*/
a13 2
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.2
log
@Better return codes from mm_send_fd and mm_receive_fd
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.1 2003/05/15 00:28:53 ho Exp $	*/
a40 1
  MONITOR_CLOSE,
d42 6
d64 11
a74 3
int	monitor_close (int);
int	monitor_fclose (FILE *);
#else
d82 3
a84 2
#define monitor_close close
#define monitor_fclose fclose
d86 2
@


1.1
log
@Start of privilege separation for isakmpd.
There are some kinks left, so keep it default disabled for now.
markus@@ says ok to commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: ui.h,v 1.4 1998/12/21 01:02:28 niklas Exp $	*/
d48 1
a48 1
void	mm_send_fd (int, int);
@

