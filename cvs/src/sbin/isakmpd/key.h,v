head	1.8;
access;
symbols
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.48
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.44
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.40
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.42
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.34
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.38
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.36
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.32
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.30
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.28
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.26
	OPENBSD_5_0:1.8.0.24
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2005.11.15.22.10.49;	author cloder;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.15.18.39.26;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.11.09.50.44;	author ho;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.06.13.55.12;	author ho;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.05.00.10.43;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.02.02.28.35;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.25.05.15.11;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.31.20.19.49;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Be cleaner about signed vs. unsigned when it's easy to do so.  OK hshoexer
@
text
@/* $OpenBSD: key.h,v 1.7 2004/04/15 18:39:26 deraadt Exp $	 */
/*
 * The author of this code is Angelos D. Keromytis (angelos@@cis.upenn.edu)
 *
 * Copyright (c) 2000-2001 Angelos D. Keromytis.
 *
 * Permission to use, copy, and modify this software with or without fee
 * is hereby granted, provided that this entire notice is included in
 * all copies of any software which is or includes a copy or
 * modification of this software.
 * You may use this code under the GNU public license if you so wish. Please
 * contribute changes back to the authors under this freer than GPL license
 * so that we may further the use of strong encryption without limitations to
 * all.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#ifndef _KEY_H_
#define _KEY_H_

#define ISAKMP_KEY_NONE         0
#define ISAKMP_KEY_PASSPHRASE   1
#define ISAKMP_KEY_RSA          2
#define ISAKMP_KEY_DSA          3

#define ISAKMP_KEYTYPE_PUBLIC   0
#define ISAKMP_KEYTYPE_PRIVATE  1

void            key_free(int, int, void *);
void            key_serialize(int, int, void *, u_int8_t **, size_t *);
char           *key_printable(int, int, u_int8_t *, size_t);
void            key_from_printable(int, int, char *, u_int8_t **, u_int32_t *);
void           *key_internalize(int, int, u_int8_t *, size_t);
#endif				/* _KEY_H_ */
@


1.7
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: key.h,v 1.6 2002/09/11 09:50:44 ho Exp $	 */
d36 1
a36 1
char           *key_printable(int, int, u_int8_t *, int);
d38 1
a38 1
void           *key_internalize(int, int, u_int8_t *, int);
@


1.6
log
@signed vs unsigned, some void * arithmetic, from -pedantic. niklas@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.5 2002/03/06 13:55:12 ho Exp $	*/
d34 6
a39 6
void key_free (int, int, void *);
void key_serialize (int, int, void *, u_int8_t **, size_t *);
char *key_printable (int, int, u_int8_t *, int);
void key_from_printable (int, int, char *, u_int8_t **, u_int32_t *);
void *key_internalize (int, int, u_int8_t *, int);
#endif /* _KEY_H_ */
@


1.5
log
@Compile without warnings for older/newer OpenSSL.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.4 2002/03/05 00:10:43 deraadt Exp $	*/
d37 1
a37 1
void key_from_printable (int, int, char *, u_int8_t **, int *);
@


1.4
log
@handle constification from new openssl
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.3 2001/07/02 02:28:35 deraadt Exp $	*/
d38 1
a38 1
void *key_internalize (int, int, const u_int8_t *, int);
@


1.3
log
@make the alpha happy
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.2 2001/06/25 05:15:11 angelos Exp $	*/
d38 1
a38 1
void *key_internalize (int, int, u_int8_t *, int);
@


1.2
log
@Copyright update.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.1 2001/05/31 20:19:49 angelos Exp $	*/
d35 1
a35 1
void key_serialize (int, int, void *, u_int8_t **, int *);
@


1.1
log
@Prototypes for routines handling key representations.
@
text
@d1 1
a1 2
/*	$OpenBSD$	*/

d5 1
a5 1
 * Copyright (c) 2000 Angelos D. Keromytis.
d7 1
a7 1
 * Permission to use, copy, and modify this software without fee
@

