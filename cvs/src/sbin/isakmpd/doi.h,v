head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.46
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.42
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.44
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.36
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.40
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.38
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.34
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.32
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.30
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.28
	OPENBSD_5_0:1.15.0.26
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.24
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.22
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.18
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.20
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.16
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.14
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.12
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.10
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2005.04.08.19.40.02;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.14.08.42.56;	author hshoexer;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.15.18.39.25;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2004.03.10.23.08.48;	author hshoexer;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.03.14.28.16;	author ho;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2002.09.11.09.50.43;	author ho;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	2000.08.03.07.23.00;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.25.17.23.39;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	99.05.02.19.20.31;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	99.04.27.20.57.20;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.04.19.19.54.53;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	99.02.26.03.36.34;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.10;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.43.52;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.48;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.48;	author niklas;	state Exp;
branches;
next	;

1.10.4.1
date	2004.03.17.15.05.03;	author brad;	state Exp;
branches;
next	;

1.11.2.1
date	2004.03.17.14.59.17;	author brad;	state Exp;
branches;
next	;


desc
@@


1.15
log
@USE_DEBUG is bye bye
@
text
@/* $OpenBSD: doi.h,v 1.14 2004/05/14 08:42:56 hshoexer Exp $	 */
/* $EOM: doi.h,v 1.29 2000/07/02 18:47:15 provos Exp $	 */

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _DOI_H_
#define _DOI_H_

#include <sys/types.h>
#include <sys/queue.h>

struct exchange;
struct keystate;
struct message;
struct payload;
struct proto;
struct sa;

/* XXX This structure needs per-field commenting.  */
struct doi {
	LIST_ENTRY(doi) link;
	u_int8_t        id;

	/* Size of DOI-specific exchange data.  */
	size_t          exchange_size;

	/* Size of DOI-specific security association data.  */
	size_t          sa_size;

	/* Size of DOI-specific protocol data.  */
	size_t          proto_size;

	int             (*debug_attribute)(u_int16_t, u_int8_t *, u_int16_t,
			    void *);
	void            (*delete_spi)(struct sa *, struct proto *, int);
	int16_t        *(*exchange_script)(u_int8_t);
	void            (*finalize_exchange)(struct message *);
	void            (*free_exchange_data)(void *);
	void            (*free_proto_data)(void *);
	void            (*free_sa_data)(void *);
	struct keystate *(*get_keystate)(struct message *);
	u_int8_t       *(*get_spi)(size_t *, u_int8_t, struct message *);
	int             (*handle_leftover_payload)(struct message *, u_int8_t,
			    struct payload *);
	int             (*informational_post_hook)(struct message *);
	int             (*informational_pre_hook)(struct message *);
	int             (*is_attribute_incompatible)(u_int16_t, u_int8_t *,
			    u_int16_t, void *);
	void            (*proto_init)(struct proto *, char *);
	void            (*setup_situation)(u_int8_t *);
	size_t		(*situation_size)(void);
	u_int8_t	(*spi_size)(u_int8_t);
	int             (*validate_attribute)(u_int16_t, u_int8_t *,
			    u_int16_t, void *);
	int             (*validate_exchange)(u_int8_t);
	int             (*validate_id_information)(u_int8_t, u_int8_t *,
			    u_int8_t *, size_t, struct exchange *);
	int             (*validate_key_information)(u_int8_t *, size_t);
	int             (*validate_notification)(u_int16_t);
	int             (*validate_proto)(u_int8_t);
	int             (*validate_situation)(u_int8_t *, size_t *, size_t);
	int             (*validate_transform_id)(u_int8_t, u_int8_t);
	int             (*initiator)(struct message * msg);
	int             (*responder)(struct message * msg);
	char           *(*decode_ids)(char *, u_int8_t *, size_t, u_int8_t *,
			    size_t, int);
};

extern void	doi_init(void);
extern struct doi *doi_lookup(u_int8_t);
extern void     doi_register(struct doi *);

#endif				/* _DOI_H_ */
@


1.14
log
@Some more KNF, no binary change.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: doi.h,v 1.13 2004/04/15 18:39:25 deraadt Exp $	 */
a58 1
#ifdef USE_DEBUG
a60 1
#endif
@


1.13
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: doi.h,v 1.12 2004/03/10 23:08:48 hshoexer Exp $	 */
d60 2
a61 1
	int             (*debug_attribute) (u_int16_t, u_int8_t *, u_int16_t, void *);
d63 32
a94 29
	void            (*delete_spi) (struct sa *, struct proto *, int);
	int16_t        *(*exchange_script) (u_int8_t);
	void            (*finalize_exchange) (struct message *);
	void            (*free_exchange_data) (void *);
	void            (*free_proto_data) (void *);
	void            (*free_sa_data) (void *);
	struct keystate *(*get_keystate) (struct message *);
	u_int8_t       *(*get_spi) (size_t *, u_int8_t, struct message *);
	int             (*handle_leftover_payload) (struct message *, u_int8_t,
					                  struct payload *);
	int             (*informational_post_hook) (struct message *);
	int             (*informational_pre_hook) (struct message *);
	int             (*is_attribute_incompatible) (u_int16_t, u_int8_t *, u_int16_t, void *);
	void            (*proto_init) (struct proto *, char *);
	void            (*setup_situation) (u_int8_t *);
	                size_t(*situation_size) (void);
	                u_int8_t(*spi_size) (u_int8_t);
	int             (*validate_attribute) (u_int16_t, u_int8_t *, u_int16_t, void *);
	int             (*validate_exchange) (u_int8_t);
	int             (*validate_id_information) (u_int8_t, u_int8_t *, u_int8_t *, size_t,
					                 struct exchange *);
	int             (*validate_key_information) (u_int8_t *, size_t);
	int             (*validate_notification) (u_int16_t);
	int             (*validate_proto) (u_int8_t);
	int             (*validate_situation) (u_int8_t *, size_t *, size_t);
	int             (*validate_transform_id) (u_int8_t, u_int8_t);
	int             (*initiator) (struct message * msg);
	int             (*responder) (struct message * msg);
	char           *(*decode_ids) (char *, u_int8_t *, size_t, u_int8_t *, size_t, int);
d97 1
a97 1
extern void     doi_init(void);
@


1.12
log
@Fix payload handling flaws found by cloder@@.  Based on initial patch by
cloder@@.  Testing by markus@@ cloder@@ hshoexer@@.

ok ho@@
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.11 2003/06/03 14:28:16 ho Exp $	*/
/*	$EOM: doi.h,v 1.29 2000/07/02 18:47:15 provos Exp $	*/
d47 2
a48 2
  LIST_ENTRY (doi) link;
  u_int8_t id;
d50 2
a51 2
  /* Size of DOI-specific exchange data.  */
  size_t exchange_size;
d53 2
a54 2
  /* Size of DOI-specific security association data.  */
  size_t sa_size;
d56 2
a57 2
  /* Size of DOI-specific protocol data.  */
  size_t proto_size;
d60 1
a60 1
  int (*debug_attribute) (u_int16_t, u_int8_t *, u_int16_t, void *);
d62 29
a90 29
  void (*delete_spi) (struct sa *, struct proto *, int);
  int16_t *(*exchange_script) (u_int8_t);
  void (*finalize_exchange) (struct message *);
  void (*free_exchange_data) (void *);
  void (*free_proto_data) (void *);
  void (*free_sa_data) (void *);
  struct keystate *(*get_keystate) (struct message *);
  u_int8_t *(*get_spi) (size_t *, u_int8_t, struct message *);
  int (*handle_leftover_payload) (struct message *, u_int8_t,
				  struct payload *);
  int (*informational_post_hook) (struct message *);
  int (*informational_pre_hook) (struct message *);
  int (*is_attribute_incompatible) (u_int16_t, u_int8_t *, u_int16_t, void *);
  void (*proto_init) (struct proto *, char *);
  void (*setup_situation) (u_int8_t *);
  size_t (*situation_size) (void);
  u_int8_t (*spi_size) (u_int8_t);
  int (*validate_attribute) (u_int16_t, u_int8_t *, u_int16_t, void *);
  int (*validate_exchange) (u_int8_t);
  int (*validate_id_information) (u_int8_t, u_int8_t *, u_int8_t *, size_t,
				  struct exchange *);
  int (*validate_key_information) (u_int8_t *, size_t);
  int (*validate_notification) (u_int16_t);
  int (*validate_proto) (u_int8_t);
  int (*validate_situation) (u_int8_t *, size_t *, size_t);
  int (*validate_transform_id) (u_int8_t, u_int8_t);
  int (*initiator) (struct message *msg);
  int (*responder) (struct message *msg);
  char *(*decode_ids) (char *, u_int8_t *, size_t, u_int8_t *, size_t, int);
d93 3
a95 3
extern void doi_init (void);
extern struct doi *doi_lookup (u_int8_t);
extern void doi_register (struct doi *);
d97 1
a97 1
#endif /* _DOI_H_ */
@


1.11
log
@Remove clauses 3 and 4. With approval from Niklas Hallqvist and
Niels Provos.
@
text
@d1 1
a1 1
/*	$OpenBSD: doi.h,v 1.10 2002/09/11 09:50:43 ho Exp $	*/
d86 1
a86 1
  int (*validate_situation) (u_int8_t *, size_t *);
@


1.11.2.1
log
@MFC:
Fix by hshoexer@@

Fix payload handling flaws found by cloder@@.  Based on initial patch by
cloder@@.

ok deraadt@@ hshoexer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: doi.h,v 1.11 2003/06/03 14:28:16 ho Exp $	*/
d86 1
a86 1
  int (*validate_situation) (u_int8_t *, size_t *, size_t);
@


1.10
log
@signed vs unsigned, some void * arithmetic, from -pedantic. niklas@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: doi.h,v 1.9 2000/08/03 07:23:00 niklas Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.10.4.1
log
@MFC:
Fix by hshoexer@@

Fix payload handling flaws found by cloder@@.  Based on initial patch by
cloder@@.

ok deraadt@@ hshoexer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: doi.h,v 1.10 2002/09/11 09:50:43 ho Exp $	*/
d91 1
a91 1
  int (*validate_situation) (u_int8_t *, size_t *, size_t);
@


1.9
log
@isakmp_doi.c: Merge with EOM 1.41
doi.h: Merge with EOM 1.29

author: provos
make a DOI specific decode_ids, but have isakmp doi decode point to
ipsec.
@
text
@d1 1
a1 1
/*	$OpenBSD: doi.h,v 1.8 2000/02/25 17:23:39 niklas Exp $	*/
d68 1
a68 1
  u_int16_t *(*exchange_script) (u_int8_t);
@


1.8
log
@regress/crypto/Makefile: Merge with EOM 1.5
regress/dh/Makefile: Merge with EOM 1.7
regress/group/Makefile: Merge with EOM 1.9
regress/prf/Makefile: Merge with EOM 1.4
regress/rsakeygen/Makefile: Merge with EOM 1.8
regress/x509/Makefile: Merge with EOM 1.10
Makefile: Merge with EOM 1.62
attribute.c: Merge with EOM 1.10
sa.c: Merge with EOM 1.99
conf.c: Merge with EOM 1.20
crypto.c: Merge with EOM 1.28
isakmpd.c: Merge with EOM 1.45
connection.c: Merge with EOM 1.19
doi.h: Merge with EOM 1.28
field.c: Merge with EOM 1.11
exchange.c: Merge with EOM 1.116
ike_auth.c: Merge with EOM 1.44
pf_key_v2.c: Merge with EOM 1.37
ike_phase_1.c: Merge with EOM 1.22
ipsec.c: Merge with EOM 1.118
isakmp_doi.c: Merge with EOM 1.40
log.c: Merge with EOM 1.26
log.h: Merge with EOM 1.18
math_group.c: Merge with EOM 1.23
message.c: Merge with EOM 1.144
pf_encap.c: Merge with EOM 1.70
policy.c: Merge with EOM 1.18
timer.c: Merge with EOM 1.13
transport.c: Merge with EOM 1.41
udp.c: Merge with EOM 1.47
ui.c: Merge with EOM 1.37
x509.c: Merge with EOM 1.36

author: niklas
Made debug logging a compile time selectable feature
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.7 1999/05/02 19:20:31 niklas Exp $	*/
/*	$EOM: doi.h,v 1.28 2000/02/20 19:58:37 niklas Exp $	*/
d95 1
@


1.7
log
@BUGS: Merge with EOM 1.31
doi.h: Merge with EOM 1.27
ike_auth.c: Merge with EOM 1.30
ike_quick_mode.c: Merge with EOM 1.85
ipsec.c: Merge with EOM 1.107
ipsec.h: Merge with EOM 1.36
isakmp_doi.c: Merge with EOM 1.39

author: niklas
Factor out keyed hashing of all payloads with SKEYID_a, and make DOI hooks
for informational exchanges to add such hashing.  Use it from QM and the IKE
authentication module too.  Remove some bogus XXX comments.  Add error
reporting
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.6 1999/04/27 20:57:20 niklas Exp $	*/
/*	$EOM: doi.h,v 1.27 1999/05/02 12:48:54 niklas Exp $	*/
d64 1
d66 1
@


1.6
log
@doi.h: Merge with EOM 1.26
isakmp_doi.c: Merge with EOM 1.36

author: niklas
Handle leftover payloads.
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.5 1999/04/19 19:54:53 niklas Exp $	*/
/*	$EOM: doi.h,v 1.26 1999/04/27 09:40:31 niklas Exp $	*/
d75 2
@


1.5
log
@./app.c: Merge with EOM 1.5
./gmp_util.c: Merge with EOM 1.3
./asn_useful.c: Merge with EOM 1.11
./attribute.c: Merge with EOM 1.9
./constants.c: Merge with EOM 1.7
./doi.h: Merge with EOM 1.25
./doi.c: Merge with EOM 1.4
./field.c: Merge with EOM 1.9
./init.c: Merge with EOM 1.13
./isakmp_doi.c: Merge with EOM 1.35
./prf.c: Merge with EOM 1.6
./util.c: Merge with EOM 1.14
./app.h: Merge with EOM 1.4
./conf.h: Merge with EOM 1.8
./ipsec.h: Merge with EOM 1.34
./ipsec_doi.h: Merge with EOM 1.10
./pkcs.h: Merge with EOM 1.8
./sysdep.h: Merge with EOM 1.15

1999 copyrights
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.4 1999/02/26 03:36:34 niklas Exp $	*/
/*	$EOM: doi.h,v 1.25 1999/04/02 00:57:24 niklas Exp $	*/
d46 1
d73 2
@


1.4
log
@Merge from the Ericsson repository
| revision 1.24
| date: 1999/02/25 10:21:29;  author: niklas;  state: Exp;  lines: +2 -2
| Replay window changes was done at the wrong level
| ----------------------------
| revision 1.23
| date: 1999/02/25 09:30:22;  author: niklas;  state: Exp;  lines: +2 -1
| Replay protection window configurable
| ----------------------------
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.3 1998/11/17 11:10:10 niklas Exp $	*/
/*	$EOM: doi.h,v 1.24 1999/02/25 10:21:29 niklas Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 Niklas Hallqvist.  All rights reserved.
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 2
a2 2
/*	$OpenBSD: doi.h,v 1.2 1998/11/15 00:43:52 niklas Exp $	*/
/*	$EOM: doi.h,v 1.22 1998/10/11 12:01:03 niklas Exp $	*/
d73 1
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: doi.h,v 1.1.1.1 1998/11/15 00:03:48 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: doi.h,v 1.22 1998/10/11 12:01:03 niklas Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
