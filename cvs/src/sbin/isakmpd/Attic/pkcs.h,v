head	1.6;
access;
symbols
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	99.07.17.21.48.45;	author niklas;	state dead;
branches;
next	1.5;

1.5
date	99.04.19.19.54.54;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	99.03.24.15.00.05;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.19;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.44.02;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.6
log
@regress/x509/certificate.txt: Merge with EOM 1.4
asn_useful.h: Merge with EOM 1.7
asn.c: Merge with EOM 1.28
asn.h: Merge with EOM 1.19
asn_useful.c: Merge with EOM 1.12
pkcs.c: Merge with EOM 1.21
pkcs.h: Merge with EOM 1.9

author: niklas
From Niels Provos, edited by me: certificate support using SSLeay
@
text
@/*	$OpenBSD: pkcs.h,v 1.5 1999/04/19 19:54:54 niklas Exp $	*/
/*	$EOM: pkcs.h,v 1.8 1999/04/02 00:58:05 niklas Exp $	*/

/*
 * Copyright (c) 1998 Niels Provos.  All rights reserved.
 * Copyright (c) 1999 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _PKCS_H_
#define _PKCS_H_

#include <gmp.h>

#define PKCS_PRIVATE	1	/* Private Key Encryption */
#define PKCS_PUBLIC	2	/* Public Key Encryption */

struct rsa_public_key {
  mpz_t n;		/* Group Modulus */
  mpz_t e;		/* Public Exponent */
};

struct rsa_private_key {
  mpz_t n;		/* Group Modulus */
  mpz_t p;		/* Prime p */
  mpz_t q;		/* Prime q */
  mpz_t d1;		/* d mod (p - 1) */
  mpz_t d2;		/* d mod (q - 1) */
  mpz_t e;		/* Public Exponent */
  mpz_t d;		/* Private Exponent */
  mpz_t qinv;		/* inversion of q modulo p */
  mpz_t qinv_mul_q;     /* qinv mul q */
};

struct norm_type;

int pkcs_mpz_to_norm_type (struct norm_type *obj, mpz_ptr n);

u_int8_t *pkcs_public_key_to_asn (struct rsa_public_key *);
int pkcs_public_key_from_asn (struct rsa_public_key *, u_int8_t *, u_int32_t);
void pkcs_free_public_key (struct rsa_public_key *);

u_int8_t *pkcs_private_key_to_asn (struct rsa_private_key *);
int pkcs_private_key_from_asn (struct rsa_private_key *, u_int8_t *,
			       u_int32_t);
void pkcs_free_private_key (struct rsa_private_key *);

int pkcs_rsa_encrypt (int, struct rsa_public_key *, struct rsa_private_key *,
		u_int8_t *, u_int32_t, u_int8_t **, u_int32_t *);
int pkcs_rsa_decrypt (int, struct rsa_public_key *, struct rsa_private_key *,
		u_int8_t *, u_int8_t **, u_int16_t *);

int pkcs_generate_rsa_keypair (struct rsa_public_key *, 
			       struct rsa_private_key *, u_int32_t);
int pkcs_generate_prime (mpz_ptr, u_int32_t);

#endif /* _PKCS_H_ */
@


1.5
log
@./app.c: Merge with EOM 1.5
./gmp_util.c: Merge with EOM 1.3
./asn_useful.c: Merge with EOM 1.11
./attribute.c: Merge with EOM 1.9
./constants.c: Merge with EOM 1.7
./doi.h: Merge with EOM 1.25
./doi.c: Merge with EOM 1.4
./field.c: Merge with EOM 1.9
./init.c: Merge with EOM 1.13
./isakmp_doi.c: Merge with EOM 1.35
./prf.c: Merge with EOM 1.6
./util.c: Merge with EOM 1.14
./app.h: Merge with EOM 1.4
./conf.h: Merge with EOM 1.8
./ipsec.h: Merge with EOM 1.34
./ipsec_doi.h: Merge with EOM 1.10
./pkcs.h: Merge with EOM 1.8
./sysdep.h: Merge with EOM 1.15

1999 copyrights
@
text
@d1 1
a1 1
/*	$OpenBSD: pkcs.h,v 1.4 1999/03/24 15:00:05 niklas Exp $	*/
@


1.4
log
@Merge with EOM 1.7
RSA fixes and optimiations from Ilya Tsindlekht, via Niels Provos
@
text
@d1 2
a2 2
/*	$OpenBSD: pkcs.h,v 1.3 1998/11/17 11:10:19 niklas Exp $	*/
/*	$EOM: pkcs.h,v 1.7 1999/03/13 17:43:19 niklas Exp $	*/
d6 1
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 2
a2 2
/*	$OpenBSD: pkcs.h,v 1.2 1998/11/15 00:44:02 niklas Exp $	*/
/*	$EOM: pkcs.h,v 1.6 1998/08/20 14:09:03 provos Exp $	*/
d54 2
d58 2
d75 4
a78 4
int pkcs_rsa_encrypt (int, mpz_ptr, mpz_ptr, u_int8_t *, u_int32_t,
		      u_int8_t **, u_int32_t *);
int pkcs_rsa_decrypt (int, mpz_ptr, mpz_ptr, u_int8_t *, u_int8_t **,
		      u_int16_t *);
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: pkcs.h,v 1.1.1.1 1998/11/15 00:03:49 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: pkcs.h,v 1.6 1998/08/20 14:09:03 provos Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
