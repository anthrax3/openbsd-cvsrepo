head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.2
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.46
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.42
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.44
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.36
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.40
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.38
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.34
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.32
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.30
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.28
	OPENBSD_5_0:1.12.0.26
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.24
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.22
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.18
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.20
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.16
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.14
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.12
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.10
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.14
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.12
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.10
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.8
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2017.02.03.08.23.46;	author guenther;	state Exp;
branches;
next	1.12;
commitid	RkgZAc0srXet0WqL;

1.12
date	2005.04.08.22.32.09;	author cloder;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.14.08.42.56;	author hshoexer;	state Exp;
branches;
next	1.10;

1.10
date	2004.04.15.18.39.25;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.14.28.16;	author ho;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.25.17.23.38;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	99.04.19.19.54.53;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	99.03.31.23.46.11;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.02.26.03.33.02;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	98.12.21.01.02.23;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.07;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.43.49;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.48;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Stop assuming that in_{addr,port}_t are typedefed in <sys/types.h> and
instead pull in <netinet/in.h> or <arpa/inet.h> when those are needed.

ok florian@@ beck@@ millert@@
@
text
@/* $OpenBSD: attribute.c,v 1.12 2005/04/08 22:32:09 cloder Exp $	 */
/* $EOM: attribute.c,v 1.10 2000/02/20 19:58:36 niklas Exp $	 */

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#include <sys/types.h>
#include <netinet/in.h>
#include <string.h>

#include "attribute.h"
#include "conf.h"
#include "log.h"
#include "isakmp.h"
#include "util.h"

u_int8_t *
attribute_set_basic(u_int8_t *buf, u_int16_t type, u_int16_t value)
{
	SET_ISAKMP_ATTR_TYPE(buf, ISAKMP_ATTR_MAKE(1, type));
	SET_ISAKMP_ATTR_LENGTH_VALUE(buf, value);
	return buf + ISAKMP_ATTR_VALUE_OFF;
}

u_int8_t *
attribute_set_var(u_int8_t *buf, u_int16_t type, u_int8_t *value,
    u_int16_t len)
{
	SET_ISAKMP_ATTR_TYPE(buf, ISAKMP_ATTR_MAKE(0, type));
	SET_ISAKMP_ATTR_LENGTH_VALUE(buf, len);
	memcpy(buf + ISAKMP_ATTR_VALUE_OFF, value, len);
	return buf + ISAKMP_ATTR_VALUE_OFF + len;
}

/*
 * Execute a function FUNC taking an attribute type, value, length and ARG
 * as arguments for each attribute in the area of ISAKMP attributes located
 * at BUF, sized SZ.  If any invocation fails, the processing aborts with a
 * -1 return value.  If all goes well return zero.
 */
int
attribute_map(u_int8_t *buf, size_t sz, int (*func)(u_int16_t, u_int8_t *,
    u_int16_t, void *), void *arg)
{
	u_int8_t       *attr;
	int             fmt;
	u_int16_t       type;
	u_int8_t       *value;
	u_int16_t       len;

	for (attr = buf; attr < buf + sz; attr = value + len) {
		if (attr + ISAKMP_ATTR_VALUE_OFF > buf + sz)
			return -1;
		type = GET_ISAKMP_ATTR_TYPE(attr);
		fmt = ISAKMP_ATTR_FORMAT(type);
		type = ISAKMP_ATTR_TYPE(type);
		value = attr + (fmt ? ISAKMP_ATTR_LENGTH_VALUE_OFF
		    : ISAKMP_ATTR_VALUE_OFF);
		len = (fmt ? ISAKMP_ATTR_LENGTH_VALUE_LEN
		    : GET_ISAKMP_ATTR_LENGTH_VALUE(attr));
		if (value + len > buf + sz)
			return -1;
		if (func(type, value, len, arg))
			return -1;
	}
	return 0;
}

int
attribute_set_constant(char *section, char *tag, struct constant_map *map,
    int attr_class, u_int8_t **attr)
{
	char	*name;
	int	 value;

	name = conf_get_str(section, tag);
	if (!name) {
		LOG_DBG((LOG_MISC, 70,
		    "attribute_set_constant: no %s in the %s section", tag,
		    section));
		return -1;
	}
	value = constant_value(map, name);
	*attr = attribute_set_basic(*attr, attr_class, value);
	return 0;
}
@


1.12
log
@Make deterministic randomness (only ever used for testing) a compile-time
option.  Reduces chances of somehow setting regrand when it's not supposed
to be set.  Remove "-r" option from man page.  Also xref certpatch(8) while
we are in there.  And remove some include sysdep.h where it is no longer
needed.
OK hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: attribute.c,v 1.11 2004/05/14 08:42:56 hshoexer Exp $	 */
d33 1
@


1.11
log
@Some more KNF, no binary change.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: attribute.c,v 1.10 2004/04/15 18:39:25 deraadt Exp $	 */
a33 2

#include "sysdep.h"
@


1.10
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: attribute.c,v 1.9 2003/06/03 14:28:16 ho Exp $	 */
d43 2
a44 2
u_int8_t       *
attribute_set_basic(u_int8_t * buf, u_int16_t type, u_int16_t value)
d51 3
a53 3
u_int8_t       *
attribute_set_var(u_int8_t * buf, u_int16_t type, u_int8_t * value,
		  u_int16_t len)
d68 2
a69 3
attribute_map(u_int8_t * buf, size_t sz,
	      int (*func) (u_int16_t, u_int8_t *, u_int16_t, void *),
	      void *arg)
d83 2
a84 2
		value
			= attr + (fmt ? ISAKMP_ATTR_LENGTH_VALUE_OFF : ISAKMP_ATTR_VALUE_OFF);
d86 1
a86 1
		       : GET_ISAKMP_ATTR_LENGTH_VALUE(attr));
d96 2
a97 2
attribute_set_constant(char *section, char *tag, struct constant_map * map,
		       int attr_class, u_int8_t ** attr)
d99 2
a100 2
	char           *name;
	int             value;
d105 2
a106 2
		     "attribute_set_constant: no %s in the %s section", tag,
			 section));
@


1.9
log
@Remove clauses 3 and 4. With approval from Niklas Hallqvist and
Niels Provos.
@
text
@d1 2
a2 2
/*	$OpenBSD: attribute.c,v 1.8 2000/02/25 17:23:38 niklas Exp $	*/
/*	$EOM: attribute.c,v 1.10 2000/02/20 19:58:36 niklas Exp $	*/
d43 2
a44 2
u_int8_t *
attribute_set_basic (u_int8_t *buf, u_int16_t type, u_int16_t value)
d46 3
a48 3
  SET_ISAKMP_ATTR_TYPE (buf, ISAKMP_ATTR_MAKE (1, type));
  SET_ISAKMP_ATTR_LENGTH_VALUE (buf, value);
  return buf + ISAKMP_ATTR_VALUE_OFF;
d51 3
a53 3
u_int8_t *
attribute_set_var (u_int8_t *buf, u_int16_t type, u_int8_t *value,
		   u_int16_t len)
d55 4
a58 4
  SET_ISAKMP_ATTR_TYPE (buf, ISAKMP_ATTR_MAKE (0, type));
  SET_ISAKMP_ATTR_LENGTH_VALUE (buf, len);
  memcpy (buf + ISAKMP_ATTR_VALUE_OFF, value, len);
  return buf + ISAKMP_ATTR_VALUE_OFF + len;
d68 3
a70 3
attribute_map (u_int8_t *buf, size_t sz,
	       int (*func) (u_int16_t, u_int8_t *, u_int16_t, void *),
	       void *arg)
d72 22
a93 23
  u_int8_t *attr;
  int fmt;
  u_int16_t type;
  u_int8_t *value;
  u_int16_t len;

  for (attr = buf; attr < buf + sz; attr = value + len)
    {
      if (attr + ISAKMP_ATTR_VALUE_OFF > buf + sz)
	return -1;
      type = GET_ISAKMP_ATTR_TYPE (attr);
      fmt = ISAKMP_ATTR_FORMAT (type);
      type = ISAKMP_ATTR_TYPE (type);
      value
	= attr + (fmt ? ISAKMP_ATTR_LENGTH_VALUE_OFF : ISAKMP_ATTR_VALUE_OFF);
      len = (fmt ? ISAKMP_ATTR_LENGTH_VALUE_LEN
	     : GET_ISAKMP_ATTR_LENGTH_VALUE (attr));
      if (value + len > buf + sz)
	return -1;
      if (func (type, value, len, arg))
	return -1;
    }
  return 0;
d97 2
a98 2
attribute_set_constant (char *section, char *tag, struct constant_map *map,
			int attr_class, u_int8_t **attr)
d100 2
a101 2
  char *name;
  int value;
d103 10
a112 11
  name = conf_get_str (section, tag);
  if (!name)
    {
      LOG_DBG ((LOG_MISC, 70,
		"attribute_set_constant: no %s in the %s section", tag,
		section));
      return -1;
    }
  value = constant_value (map, name);
  *attr = attribute_set_basic (*attr, attr_class, value);
  return 0;
@


1.8
log
@regress/crypto/Makefile: Merge with EOM 1.5
regress/dh/Makefile: Merge with EOM 1.7
regress/group/Makefile: Merge with EOM 1.9
regress/prf/Makefile: Merge with EOM 1.4
regress/rsakeygen/Makefile: Merge with EOM 1.8
regress/x509/Makefile: Merge with EOM 1.10
Makefile: Merge with EOM 1.62
attribute.c: Merge with EOM 1.10
sa.c: Merge with EOM 1.99
conf.c: Merge with EOM 1.20
crypto.c: Merge with EOM 1.28
isakmpd.c: Merge with EOM 1.45
connection.c: Merge with EOM 1.19
doi.h: Merge with EOM 1.28
field.c: Merge with EOM 1.11
exchange.c: Merge with EOM 1.116
ike_auth.c: Merge with EOM 1.44
pf_key_v2.c: Merge with EOM 1.37
ike_phase_1.c: Merge with EOM 1.22
ipsec.c: Merge with EOM 1.118
isakmp_doi.c: Merge with EOM 1.40
log.c: Merge with EOM 1.26
log.h: Merge with EOM 1.18
math_group.c: Merge with EOM 1.23
message.c: Merge with EOM 1.144
pf_encap.c: Merge with EOM 1.70
policy.c: Merge with EOM 1.18
timer.c: Merge with EOM 1.13
transport.c: Merge with EOM 1.41
udp.c: Merge with EOM 1.47
ui.c: Merge with EOM 1.37
x509.c: Merge with EOM 1.36

author: niklas
Made debug logging a compile time selectable feature
@
text
@d1 1
a1 1
/*	$OpenBSD: attribute.c,v 1.7 1999/04/19 19:54:53 niklas Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.7
log
@./app.c: Merge with EOM 1.5
./gmp_util.c: Merge with EOM 1.3
./asn_useful.c: Merge with EOM 1.11
./attribute.c: Merge with EOM 1.9
./constants.c: Merge with EOM 1.7
./doi.h: Merge with EOM 1.25
./doi.c: Merge with EOM 1.4
./field.c: Merge with EOM 1.9
./init.c: Merge with EOM 1.13
./isakmp_doi.c: Merge with EOM 1.35
./prf.c: Merge with EOM 1.6
./util.c: Merge with EOM 1.14
./app.h: Merge with EOM 1.4
./conf.h: Merge with EOM 1.8
./ipsec.h: Merge with EOM 1.34
./ipsec_doi.h: Merge with EOM 1.10
./pkcs.h: Merge with EOM 1.8
./sysdep.h: Merge with EOM 1.15

1999 copyrights
@
text
@d1 2
a2 2
/*	$OpenBSD: attribute.c,v 1.6 1999/03/31 23:46:11 niklas Exp $	*/
/*	$EOM: attribute.c,v 1.9 1999/04/02 00:57:28 niklas Exp $	*/
d112 3
a114 3
      log_debug (LOG_MISC, 70,
		 "attribute_set_constant: no %s in the %s section", tag,
		 section);
@


1.6
log
@Merge with EOM 1.8
Document a function
@
text
@d1 2
a2 2
/*	$OpenBSD: attribute.c,v 1.5 1999/02/26 03:33:02 niklas Exp $	*/
/*	$EOM: attribute.c,v 1.8 1999/03/31 23:31:27 niklas Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 Niklas Hallqvist.  All rights reserved.
@


1.5
log
@Merge from the Ericsson repository
| revision 1.7
| date: 1999/02/25 11:38:44;  author: niklas;  state: Exp;  lines: +3 -1
| include sysdep.h everywhere
| ----------------------------
@
text
@d1 2
a2 2
/*	$OpenBSD: attribute.c,v 1.4 1998/12/21 01:02:23 niklas Exp $	*/
/*	$EOM: attribute.c,v 1.7 1999/02/25 11:38:44 niklas Exp $	*/
d66 6
a71 1
/* Validate an area of ISAKMP attributes.  */
@


1.4
log
@Last months worth of work on isakmpd, lots done
@
text
@d1 2
a2 2
/*	$OpenBSD: attribute.c,v 1.3 1998/11/17 11:10:07 niklas Exp $	*/
/*	$EOM: attribute.c,v 1.6 1998/12/01 10:17:04 niklas Exp $	*/
d39 2
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 2
a2 2
/*	$OpenBSD: attribute.c,v 1.2 1998/11/15 00:43:49 niklas Exp $	*/
/*	$EOM: attribute.c,v 1.5 1998/10/07 16:40:42 niklas Exp $	*/
d105 2
a106 2
      /* XXX Should we really log hard like this?  */
      log_print ("attribute_set_constant: no %s in the %s section", tag,
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: attribute.c,v 1.1.1.1 1998/11/15 00:03:48 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: attribute.c,v 1.5 1998/10/07 16:40:42 niklas Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
