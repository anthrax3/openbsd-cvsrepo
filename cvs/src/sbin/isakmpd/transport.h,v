head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.2
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.19.0.8
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.4
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.6
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.18.0.36
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.34
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.30
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.28
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.26
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.24
	OPENBSD_5_0:1.18.0.22
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.20
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.18
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.14
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.16
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.12
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.10
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.8
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.6
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.4
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.15.0.6
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.4
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.08.26.06.18.01;	author guenther;	state Exp;
branches;
next	1.19;
commitid	vKuVo0xdQnObEMcS;

1.19
date	2015.01.16.06.39.59;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	Uu5nFG3wCl0LACBb;

1.18
date	2006.06.02.19.35.55;	author hshoexer;	state Exp;
branches;
next	1.17;

1.17
date	2005.12.28.10.57.35;	author hshoexer;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.27.08.19.59;	author hshoexer;	state Exp;
branches;
next	1.15;

1.15
date	2004.06.20.15.24.05;	author ho;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.15.18.39.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.03.14.28.16;	author ho;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.09.08.13.07;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.26.11.37.16;	author ho;	state Exp;
branches;
next	1.10;

1.10
date	2001.08.23.23.11.02;	author angelos;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.11.05.29.23;	author angelos;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.29.18.52.17;	author ho;	state Exp;
branches;
next	1.7;

1.7
date	2000.08.03.07.23.55;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	99.04.19.19.52.59;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.03.24.14.45.36;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	99.02.26.03.52.00;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.21;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.44.04;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Pull in <sys/select.h> for fd_set

ok deraadt@@
@
text
@/* $OpenBSD: transport.h,v 1.19 2015/01/16 06:39:59 deraadt Exp $	 */
/* $EOM: transport.h,v 1.16 2000/07/17 18:57:59 provos Exp $	 */

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 * Copyright (c) 2001, 2004 Håkan Olsson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

/*
 * The transport module tries to separate out details concerning the
 * actual transferral of ISAKMP messages to other parties.
 */

#ifndef _TRANSPORT_H_
#define _TRANSPORT_H_

#include <sys/queue.h>
#include <sys/types.h>
#include <sys/select.h>
#include <sys/socket.h>

#include "message.h"

struct transport;

LIST_HEAD(transport_list, transport) transport_list;

/* This describes a transport "method" like UDP or similar.  */
struct transport_vtbl {
	/* All transport methods are linked together.  */
	LIST_ENTRY(transport_vtbl) link;

	/* A textual name of the transport method.  */
	char           *name;

	/* Create a transport instance of this method.  */
	struct transport *(*create) (char *);

	/* Reinitialize specific transport.  */
	void            (*reinit) (void);

	/* Remove a transport instance of this method.  */
	void            (*remove) (struct transport *);

	/* Report status of given transport */
	void            (*report) (struct transport *);

	/* Let the given transport set it's bit in the fd_set passed in.  */
	int             (*fd_set) (struct transport *, fd_set *, int);

	/* Is the given transport ready for I/O?  */
	int             (*fd_isset) (struct transport *, fd_set *);

	/*
	 * Read a message from the transport's incoming pipe and start
	 * handling it.
         */
	void            (*handle_message) (struct transport *);

	/* Send a message through the outgoing pipe.  */
	int             (*send_message) (struct message *, struct transport *);

	/*
	 * Fill out a sockaddr structure with the transport's destination end's
	 * address info.
         */
	void            (*get_dst) (struct transport *, struct sockaddr **);

	/*
	 * Fill out a sockaddr structure with the transport's source end's
	 * address info.
         */
	void            (*get_src) (struct transport *, struct sockaddr **);

	/*
	 * Return a string with decoded src and dst information
         */
	char           *(*decode_ids) (struct transport *);

	/*
	 * Clone a transport for outbound use.
	 */
	struct transport *(*clone) (struct transport *, struct sockaddr *);

	/*
	 * Locate the correct sendq to use for outbound messages.
	 */
	struct msg_head *(*get_queue) (struct message *);
};

struct transport {
	/* All transports used are linked together.  */
	LIST_ENTRY(transport) link;

	/* What transport method is this an instance of?  */
	struct transport_vtbl *vtbl;

	/* The queue holding messages to send on this transport.  */
	struct msg_head sendq;

	/*
	 * Prioritized send queue.  Messages in this queue will be transmitted
	 * before the normal sendq, they will also all be transmitted prior
	 * to a daemon shutdown.  Currently only used for DELETE notifications.
         */
	struct msg_head prio_sendq;

	/* Flags describing the transport.  */
	int             flags;

	/* Reference counter.  */
	int             refcnt;

	/* Pointer to parent virtual transport, if any.  */
	struct transport *virtual;
};

/* Set if this is a transport we want to listen on.  */
#define TRANSPORT_LISTEN	1
/* Used for mark-and-sweep-type garbage collection of transports */
#define TRANSPORT_MARK		2

extern struct transport *transport_create(char *, char *);
extern int      transport_fd_set(fd_set *);
extern void     transport_handle_messages(fd_set *);
extern void     transport_init(void);
extern void     transport_method_add(struct transport_vtbl *);
extern int      transport_pending_wfd_set(fd_set *);
extern int      transport_prio_sendqs_empty(void);
extern void     transport_reference(struct transport *);
extern void     transport_reinit(void);
extern void     transport_release(struct transport *);
extern void     transport_report(void);
extern void     transport_send_messages(fd_set *);
extern void     transport_setup(struct transport *, int);
#endif				/* _TRANSPORT_H_ */
@


1.19
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/* $OpenBSD: transport.h,v 1.18 2006/06/02 19:35:55 hshoexer Exp $	 */
d43 1
@


1.18
log
@Big spelling cleanup, no binary change.  From david@@
@
text
@d1 1
a1 1
/* $OpenBSD: transport.h,v 1.17 2005/12/28 10:57:35 hshoexer Exp $	 */
a40 1
#include <sys/param.h>
@


1.17
log
@remove some unused functions and an unused variable found by lint.

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: transport.h,v 1.16 2005/10/27 08:19:59 hshoexer Exp $	 */
d52 1
a52 1
/* This describes a tranport "method" like UDP or similar.  */
@


1.16
log
@Do not touch LIST_* macro internals.

with otto@@, ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: transport.h,v 1.15 2004/06/20 15:24:05 ho Exp $	 */
a150 1
extern void     transport_map(void (*) (struct transport *));
@


1.15
log
@NAT-Traversal for isakmpd. Work in progress...
hshoexer@@ ok.
@
text
@d1 1
a1 1
/* $OpenBSD: transport.h,v 1.14 2004/04/15 18:39:26 deraadt Exp $	 */
d49 2
@


1.14
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: transport.h,v 1.13 2003/06/03 14:28:16 ho Exp $	 */
d6 1
a6 1
 * Copyright (c) 2001 Håkan Olsson.  All rights reserved.
d83 1
a83 1
	int             (*send_message) (struct message *);
d101 10
d133 1
a133 1
	/* References counter.  */
d135 3
a144 1
extern void     transport_add(struct transport *);
d152 1
d154 1
d158 1
a158 2
extern void     transport_reinit(void);
extern int      transport_prio_sendqs_empty(void);
@


1.13
log
@Remove clauses 3 and 4. With approval from Niklas Hallqvist and
Niels Provos.
@
text
@d1 2
a2 2
/*	$OpenBSD: transport.h,v 1.12 2002/06/09 08:13:07 todd Exp $	*/
/*	$EOM: transport.h,v 1.16 2000/07/17 18:57:59 provos Exp $	*/
d52 2
a53 2
  /* All transport methods are linked together.  */
  LIST_ENTRY (transport_vtbl) link;
d55 2
a56 2
  /* A textual name of the transport method.  */
  char *name;
d58 2
a59 2
  /* Create a transport instance of this method.  */
  struct transport *(*create) (char *);
d61 40
a100 40
  /* Reinitialize specific transport.  */
  void (*reinit) (void);

  /* Remove a transport instance of this method.  */
  void (*remove) (struct transport *);

  /* Report status of given transport */
  void (*report) (struct transport *);

  /* Let the given transport set it's bit in the fd_set passed in.  */
  int (*fd_set) (struct transport *, fd_set *, int);

  /* Is the given transport ready for I/O?  */
  int (*fd_isset) (struct transport *, fd_set *);

  /*
   * Read a message from the transport's incoming pipe and start
   * handling it.
   */
  void (*handle_message) (struct transport *);

  /* Send a message through the outgoing pipe.  */
  int (*send_message) (struct message *);

  /*
   * Fill out a sockaddr structure with the transport's destination end's
   * address info.
   */
  void (*get_dst) (struct transport *, struct sockaddr **);

  /*
   * Fill out a sockaddr structure with the transport's source end's
   * address info.
   */
  void (*get_src) (struct transport *, struct sockaddr **);

  /*
   * Return a string with decoded src and dst information
   */
  char *(*decode_ids) (struct transport *);
d104 2
a105 2
  /* All transports used are linked together.  */
  LIST_ENTRY (transport) link;
d107 2
a108 2
  /* What transport method is this an instance of?  */
  struct transport_vtbl *vtbl;
d110 2
a111 2
  /* The queue holding messages to send on this transport.  */
  struct msg_head sendq;
d113 6
a118 6
  /*
   * Prioritized send queue.  Messages in this queue will be transmitted
   * before the normal sendq, they will also all be transmitted prior
   * to a daemon shutdown.  Currently only used for DELETE notifications.
   */
  struct msg_head prio_sendq;
d120 2
a121 2
  /* Flags describing the transport.  */
  int flags;
d123 2
a124 2
  /* References counter.  */
  int refcnt;
d132 15
a146 15
extern void transport_add (struct transport *);
extern struct transport *transport_create (char *, char *);
extern int transport_fd_set (fd_set *);
extern void transport_handle_messages (fd_set *);
extern void transport_init (void);
extern void transport_map (void (*) (struct transport *));
extern void transport_method_add (struct transport_vtbl *);
extern int transport_pending_wfd_set (fd_set *);
extern void transport_reference (struct transport *);
extern void transport_release (struct transport *);
extern void transport_report (void);
extern void transport_send_messages (fd_set *);
extern void transport_reinit (void);
extern int transport_prio_sendqs_empty (void);
#endif /* _TRANSPORT_H_ */
@


1.12
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: transport.h,v 1.11 2001/10/26 11:37:16 ho Exp $	*/
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.11
log
@Sometimes the daemon will not die promptly on SIGTERM, even though
all DELETE notifications is sent out.  Create a prioritized send-queue
for the DELETE messages to solve this. Some (C)-2001.
niklas@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: transport.h,v 1.10 2001/08/23 23:11:02 angelos Exp $	*/
d119 1
a119 1
   * Prioritized send queue.  Messages in this queue will be transmitted 
@


1.10
log
@Reinitialize transports on SIGUP.
@
text
@d1 1
a1 1
/*	$OpenBSD: transport.h,v 1.9 2001/08/11 05:29:23 angelos Exp $	*/
d6 1
d51 2
a52 1
struct message;
d116 8
a123 1
  TAILQ_HEAD (msg_head, message) sendq;
d150 1
@


1.9
log
@Add TRANSPORT_MARK, for mark-and-sweep garbage collection of transport
instances.
@
text
@d1 1
a1 1
/*	$OpenBSD: transport.h,v 1.8 2001/06/29 18:52:17 ho Exp $	*/
d64 3
d140 1
a140 1

@


1.8
log
@Change get_src/get_dst API as we get the length with sa_len.
@
text
@d1 1
a1 1
/*	$OpenBSD: transport.h,v 1.7 2000/08/03 07:23:55 niklas Exp $	*/
d122 2
@


1.7
log
@udp.c: Merge with EOM 1.50
transport.h: Merge with EOM 1.16

author: provos
provide transport dependent ID decoding; hope indentation is right now ;)
@
text
@d1 1
a1 1
/*	$OpenBSD: transport.h,v 1.6 1999/04/19 19:52:59 niklas Exp $	*/
d87 1
a87 1
   * address info.  XXX Why not size_t * instead of int *?
d89 1
a89 1
  void (*get_dst) (struct transport *, struct sockaddr **, int *);
d93 1
a93 1
   * address info.  XXX Why not size_t * instead of int *?
d95 1
a95 1
  void (*get_src) (struct transport *, struct sockaddr **, int *);
@


1.6
log
@./transport.h: Merge with EOM 1.15

Add transport_report

Garbage collect transports via refcounting.  Fix commentary.

1999 copyrights
@
text
@d1 2
a2 2
/*	$OpenBSD: transport.h,v 1.5 1999/03/24 14:45:36 niklas Exp $	*/
/*	$EOM: transport.h,v 1.15 1999/04/11 15:07:36 ho Exp $	*/
d96 5
@


1.5
log
@Merge with EOM 1.12
Fix comments
@
text
@d1 2
a2 2
/*	$OpenBSD: transport.h,v 1.4 1999/02/26 03:52:00 niklas Exp $	*/
/*	$EOM: transport.h,v 1.12 1999/03/24 11:05:29 niklas Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 Niklas Hallqvist.  All rights reserved.
d64 6
d110 3
d126 3
@


1.4
log
@Merge from the Ericsson repository
| revision 1.11
| date: 1999/02/14 00:15:16;  author: niklas;  state: Exp;  lines: +2 -2
| New fd_set API which may clear a bit.  Use it for doing proper message
| send queue runs, as reported by Ilya Tsindlekht.  Better style.
| ----------------------------
@
text
@d1 2
a2 2
/*	$OpenBSD: transport.h,v 1.3 1998/11/17 11:10:21 niklas Exp $	*/
/*	$EOM: transport.h,v 1.11 1999/02/14 00:15:16 niklas Exp $	*/
d81 1
a81 1
   * address info.  XXX Why not size_t * as last arg?
d87 1
a87 1
   * address info.  XXX Why not size_t * as last arg?
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 2
a2 2
/*	$OpenBSD: transport.h,v 1.2 1998/11/15 00:44:04 niklas Exp $	*/
/*	$EOM: transport.h,v 1.10 1998/10/11 20:25:10 niklas Exp $	*/
d65 1
a65 1
  int (*fd_set) (struct transport *, fd_set *);
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: transport.h,v 1.1.1.1 1998/11/15 00:03:49 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: transport.h,v 1.10 1998/10/11 20:25:10 niklas Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
