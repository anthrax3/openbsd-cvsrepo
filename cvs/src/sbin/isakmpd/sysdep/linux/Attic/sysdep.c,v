head	1.17;
access;
symbols
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5;
locks; strict;
comment	@ * @;


1.17
date	2005.04.08.15.49.59;	author deraadt;	state dead;
branches;
next	1.16;

1.16
date	2004.08.10.15.59.10;	author ho;	state Exp;
branches;
next	1.15;

1.15
date	2003.12.14.14.34.58;	author ho;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.03.15.20.41;	author ho;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.18.18.16.34;	author ho;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.14.20.49.37;	author ho;	state dead;
branches;
next	1.11;

1.11
date	2002.06.09.08.13.07;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.26.12.23.45;	author ho;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.12.12.03.02;	author heko;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.29.22.12.56;	author ho;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.29.19.08.12;	author ho;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.05.00.51.48;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.24.03.59.57;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.28.22.38.49;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.26.11.34.04;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	99.03.02.15.01.12;	author niklas;	state dead;
branches;
next	1.1;

1.1
date	99.02.26.03.59.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.17
log
@if someone wants a portable, create a -p project.  clutter stops quality
@
text
@/*	$OpenBSD: sysdep.c,v 1.16 2004/08/10 15:59:10 ho Exp $	*/

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 * Copyright (c) 2003 Thomas Walpuski.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdlib.h>
#include <string.h>

#include "sysdep.h"

#include "util.h"

#ifdef NEED_SYSDEP_APP
#include "app.h"
#include "conf.h"
#include "ipsec.h"
#include <linux/pfkeyv2.h>
#include <linux/ipsec.h>

#ifdef USE_PF_KEY_V2
#include "pf_key_v2.h"
#define KEY_API(x) pf_key_v2_##x
#endif

#endif /* NEED_SYSDEP_APP */
#include "log.h"

extern char *__progname;

/*
 * An as strong as possible random number generator, reverting to a
 * deterministic pseudo-random one if regrand is set.
 */
u_int32_t
sysdep_random ()
{
  return arc4random();
}

/* Return the basename of the command used to invoke us.  */
char *
sysdep_progname ()
{
  return __progname;
}

/* Return the length of the sockaddr struct.  */
u_int8_t
sysdep_sa_len (struct sockaddr *sa)
{
  switch (sa->sa_family)
    {
    case AF_INET:
      return sizeof (struct sockaddr_in);
    case AF_INET6:
      return sizeof (struct sockaddr_in6);
    default:
      log_print ("sysdep_sa_len: unknown sa family %d", sa->sa_family);
    }
  return sizeof (struct sockaddr_in);
}

/* As regress/ use this file I protect the sysdep_app_* stuff like this.  */
#ifdef NEED_SYSDEP_APP
/*
 * Prepare the application we negotiate SAs for (i.e. the IPsec stack)
 * for communication.  We return a file descriptor useable to select(2) on.
 */
int
sysdep_app_open ()
{
  return KEY_API(open) ();
}

/*
 * When select(2) has noticed our application needs attendance, this is what
 * gets called.  FD is the file descriptor causing the alarm.
 */
void
sysdep_app_handler (int fd)
{
  KEY_API (handler) (fd);
}

/* Check that the connection named NAME is active, or else make it active.  */
void
sysdep_connection_check (char *name)
{
  KEY_API (connection_check) (name);
}

/*
 * Generate a SPI for protocol PROTO and the source/destination pair given by
 * SRC, SRCLEN, DST & DSTLEN.  Stash the SPI size in SZ.
 */
u_int8_t *
sysdep_ipsec_get_spi (size_t *sz, u_int8_t proto, struct sockaddr *src,
		      struct sockaddr *dst, u_int32_t seq)
{
  if (app_none)
    {
      *sz = IPSEC_SPI_SIZE;
      /* XXX should be random instead I think.  */
      return strdup ("\x12\x34\x56\x78");
    }
  return KEY_API (get_spi) (sz, proto, src, dst, seq);
}

struct sa_kinfo *
sysdep_ipsec_get_kernel_sa(u_int8_t *spi, size_t spi_sz, u_int8_t proto,
    struct sockaddr *dst)
{
	if (app_none)
		return 0;
	/* XXX return KEY_API(get_kernel_sa)(spi, spi_sz, proto, dst); */
	return 0;
}

/* Force communication on socket FD to go in the clear.  */
int
sysdep_cleartext (int fd, int af)
{
  struct sadb_x_policy pol_in = {
    SADB_UPDATE,
    SADB_EXT_SENSITIVITY,
    IPSEC_POLICY_BYPASS,
    IPSEC_DIR_INBOUND,
    0,
    0,
    0
  };
  struct sadb_x_policy pol_out = {
    SADB_UPDATE,
    SADB_EXT_SENSITIVITY,
    IPSEC_POLICY_BYPASS,
    IPSEC_DIR_OUTBOUND,
    0,
    0,
    0
  };

  if (app_none)
    return 0;

  if (!(af == AF_INET || af == AF_INET6))
    {
      log_print ("sysdep_cleartext: unsupported protocol family %d", af);
      return -1;
    }

  if (setsockopt (fd, af == AF_INET ? IPPROTO_IP : IPPROTO_IPV6,
		  af == AF_INET ? IP_IPSEC_POLICY : IPV6_IPSEC_POLICY,
		  &pol_in, sizeof pol_in) < 0 ||
      setsockopt (fd, af == AF_INET ? IPPROTO_IP : IPPROTO_IPV6,
		  af == AF_INET ? IP_IPSEC_POLICY : IPV6_IPSEC_POLICY,
		  &pol_out, sizeof pol_out) < 0)
    {
      log_error ("sysdep_cleartext: "
		 "setsockopt (%d, IPPROTO_IP%s, IP%s_IPSEC_POLICY, ...) "
		 "failed", fd, af == AF_INET ? "" : "V6",
		 af == AF_INET ? "" : "V6");
      return -1;
    }
  return 0;
}

int
sysdep_ipsec_delete_spi (struct sa *sa, struct proto *proto, int incoming)
{
  if (app_none)
    return 0;
  return KEY_API (delete_spi) (sa, proto, incoming);
}

int
sysdep_ipsec_enable_sa (struct sa *sa, struct sa *isakmp_sa)
{
  if (app_none)
    return 0;
  return KEY_API (enable_sa) (sa, isakmp_sa);
}

int
sysdep_ipsec_group_spis (struct sa *sa, struct proto *proto1,
			 struct proto *proto2, int incoming)
{
  if (app_none)
    return 0;
  return KEY_API (group_spis) (sa, proto1, proto2, incoming);
}

int
sysdep_ipsec_set_spi (struct sa *sa, struct proto *proto, int incoming,
		      struct sa *isakmp_sa)
{
  if (app_none)
    return 0;
  return KEY_API (set_spi) (sa, proto, incoming, isakmp_sa);
}
#endif
@


1.16
log
@Better implementation of the Dead Peer Detection protocol, RFC 3706.
hshoexer@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.15 2003/12/14 14:34:58 ho Exp $	*/
@


1.15
log
@Make isakmpd work on big endian linux machines. From Sebastian Klemke.
Also, a few style nits and a better error message text.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.14 2003/06/03 15:20:41 ho Exp $	*/
d133 10
@


1.14
log
@Remove clause 3. Approved by niklas@@ and Thomas Walpuski.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.13 2003/05/18 18:16:34 ho Exp $	*/
d43 2
d85 1
a85 1
    } 
d139 19
d161 1
a161 1
  if (!(af == AF_INET || af == AF_INET6)) 
d167 6
a172 8
  if (setsockopt(fd, af == AF_INET ? IPPROTO_IP : IPPROTO_IPV6,
		 af == AF_INET ? IP_IPSEC_POLICY : IPV6_IPSEC_POLICY,
		 "\x2\x0\x12\x0\x4\x0\x1\x0"
		 "\x0\x0\x0\x0\x0\x0\x0\x0", 16) < 0 ||
      setsockopt(fd, af == AF_INET ? IPPROTO_IP : IPPROTO_IPV6,
      		 af == AF_INET ? IP_IPSEC_POLICY : IPV6_IPSEC_POLICY,
		 "\x2\x0\x12\x0\x4\x0\x2\x0"
		 "\x0\x0\x0\x0\00\x0\x0\x0", 16) < 0)
d175 5
a179 4
		 "setsockopt (%d, IPPROTO_IP, IP_IPSEC_POLICY, ...) "
		 "failed", fd);
       return -1;
    } 
@


1.13
log
@Sysdep for native Linux IPSec, 2.5 and later. From Thomas Walpuski, with
various tweaks by me. niklas@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a14 2
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.12
log
@Call the FreeS/WAN sysdep 'freeswan'. The 'linux' sysdep will be native Linux IPSec.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.11 2002/06/09 08:13:07 todd Exp $	*/
d5 1
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
a29 4
/*
 * This code was written under funding by Ericsson Radio Systems.
 */

a31 1
#include <sys/time.h>
d33 1
a35 3
#include <fcntl.h>
#include <md5.h>
#include <unistd.h>
d39 2
d45 6
a50 1
#include "klips.h"
a52 1
#include "sysdep.h"
d56 4
d63 1
a63 27
  u_int32_t rndval;
  u_char sig[16];
  MD5_CTX ctx;
  int fd, i;
  struct {
    struct timeval tv;
    u_int rnd[(128 - sizeof (struct timeval)) / sizeof (u_int)];
  } rdat;

  fd = open ("/dev/urandom", O_RDONLY);
  if (fd != -1)
    {
      read (fd, rdat.rnd, sizeof(rdat.rnd));
      close (fd);
    }
  MD5Init (&ctx);
  MD5Update (&ctx, (char *)&rdat, sizeof(rdat));
  MD5Final (sig, &ctx);

  rndval = 0;	
  for (i = 0; i < 4; i++)
    {
      u_int32_t *tmp = (u_int32_t *)&sig[i * 4];
      rndval ^= *tmp;
    }
		
  return rndval;
d66 1
d83 3
a85 2
    }
  log_print ("sysdep_sa_len: unknown sa family %d", sa->sa_family);
d91 4
d98 1
a98 1
  return klips_open ();
d101 4
d108 1
d115 1
a115 1
  klips_connection_check (name);
d132 1
a132 2

  return klips_get_spi (sz, proto, src, dst, seq);
d135 1
d139 23
d168 3
a170 1
  return klips_delete_spi (sa, proto, incoming);
d176 3
a178 1
  return klips_enable_sa (sa, isakmp_sa);
d185 3
a187 1
  return klips_group_spis (sa, proto1, proto2, incoming);
d194 3
a196 1
  return klips_set_spi (sa, proto, incoming, isakmp_sa);
@


1.11
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.10 2001/10/26 12:23:45 ho Exp $	*/
@


1.10
log
@Add sysdep_sa_len function.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.9 2001/08/12 12:03:02 heko Exp $	*/
d87 2
a88 2
		 
  return rndval; 
@


1.9
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.8 2001/06/29 22:12:56 ho Exp $	*/
d95 15
@


1.8
log
@Reflect setsockopt changes. May need further mods for KAME IPsecs.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.7 2001/06/29 19:08:12 ho Exp $	*/
d53 1
a53 1
#endif NEED_SYSDEP_APP
@


1.7
log
@Get rid of redundant lengths in get_spi API.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.6 2001/05/05 00:51:48 angelos Exp $	*/
d136 1
a136 1
sysdep_cleartext (int fd)
@


1.6
log
@Adhere to the new set_spi prototype.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.5 2001/02/24 03:59:57 angelos Exp $	*/
d123 1
a123 2
		      int srclen, struct sockaddr *dst, int dstlen,
                      u_int32_t seq)
d132 1
a132 1
  return klips_get_spi (sz, proto, src, srclen, dst, dstlen, seq);
@


1.5
log
@For the GETSPI PFKEY message, use the sequence number from the ACQUIRE
message.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.4 2001/01/28 22:38:49 niklas Exp $	*/
d162 2
a163 1
sysdep_ipsec_set_spi (struct sa *sa, struct proto *proto, int incoming)
d165 1
a165 1
  return klips_set_spi (sa, proto, incoming);
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdep.c,v 1.3 2001/01/26 11:34:04 niklas Exp $	*/
d123 2
a124 1
		      int srclen, struct sockaddr *dst, int dstlen)
d133 1
a133 1
  return klips_get_spi (sz, proto, src, srclen, dst, dstlen);
@


1.3
log
@Move in foreign OS support.  The OpenBSD repository is now the official
isakmpd home.
@
text
@d1 1
a1 1
/*	$Id: sysdep.c,v 1.13 2000/12/12 00:29:17 niklas Exp $	*/
@


1.2
log
@README: Merge with EOM 1.17
I changed my mind: other OS support files ships separately

Mention the OS define in Makefile

sysdep/README: Merge with EOM 1.1
I changed my mind: other OS support files ships separately

sysdep/linux/*: Removed
@
text
@d1 1
a1 1
/*	$Id: sysdep.c,v 1.1 1999/02/26 03:59:48 niklas Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Niklas Hallqvist.  All rights reserved.
d38 1
d42 5
d50 1
d52 1
a57 1
int regrand = 0;
d62 27
a88 1
  return (random () << 16) | random();
d102 1
a102 1
  return -1;
d110 11
d122 2
a123 1
sysdep_ipsec_get_spi (size_t *sz, u_int8_t proto, void *id, size_t id_sz)
a124 1
#ifdef notyet
a125 1
#endif
d131 2
d142 1
a142 1
sysdep_ipsec_delete_spi (struct sa *sa, struct proto *proto, int initiator)
d144 1
a144 1
  return 0;
d148 1
a148 1
sysdep_ipsec_enable_spi (struct sa *sa, int initiator)
d150 1
a150 1
  return 0;
d155 1
a155 1
		      struct proto *proto2, int role)
d157 1
a157 1
  return 0;
d161 1
a161 2
sysdep_ipsec_set_spi (struct sa *sa, struct proto *proto, int role,
		      int initiator)
d163 1
a163 1
  return 0;
@


1.1
log
@Merge from the Ericsson repository
| revision 1.3
| date: 1999/02/25 16:26:49;  author: niklas;  state: Exp;  lines: +9 -53
| Remove more OpenBSDisms
| ----------------------------
| revision 1.2
| date: 1999/02/25 16:23:32;  author: niklas;  state: Exp;  lines: +1 -3
| Remove OpenBSDisms
| ----------------------------
| revision 1.1
| date: 1999/02/25 14:18:40;  author: niklas;  state: Exp;
| Better OS-dependency layout
| =============================================================================
@
text
@d1 1
a1 1
/*	$Id: sysdep.c,v 1.3 1999/02/25 16:26:49 niklas Exp $	*/
@

