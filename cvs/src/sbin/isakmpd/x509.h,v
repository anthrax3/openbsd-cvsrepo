head	1.22;
access;
symbols
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.22.0.42
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.22.0.38
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.34
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.22.0.36
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.28
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.22.0.32
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.30
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.26
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.24
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.22
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.20
	OPENBSD_5_0:1.22.0.18
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.16
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.14
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.10
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.12
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.8
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.12
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.10
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.8
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.6
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.21.0.4
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.2
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.17.0.4
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	NIKLAS_981114:1.1.1.1
	NIKLAS:1.1.1;
locks; strict;
comment	@ * @;


1.22
date	2007.08.05.09.43.09;	author tom;	state Exp;
branches;
next	1.21;

1.21
date	2004.05.23.18.17.56;	author hshoexer;	state Exp;
branches;
next	1.20;

1.20
date	2004.04.15.18.39.27;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2003.11.06.16.12.08;	author ho;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.04.07.31.17;	author ho;	state Exp;
branches;
next	1.17;

1.17
date	2002.08.07.13.19.20;	author ho;	state Exp;
branches;
next	1.16;

1.16
date	2002.08.02.13.10.41;	author ho;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.09.08.13.07;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.03.13.15.35;	author ho;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.25.22.17.13;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.07.04.23.35;	author angelos;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.31.20.20.59;	author angelos;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.27.12.03.36;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.26.16.40.52;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.07.06.57.08;	author niklas;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.06.08.20.49.44;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.01.02.46.19;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.08.26.22.29.49;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	99.07.17.21.54.39;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.11.10.22;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.11.15.00.44.05;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.15.00.03.49;	author niklas;	state Exp;
branches;
next	;

1.8.2.1
date	2001.05.08.12.45.26;	author ho;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Allow key exchange with RSA signature authentication to work with
Cisco IOS and other initiators that only send their certs in response
to CERT_REQUEST.

With input and help from cloder@@, Stuart Henderson, mpf@@, and several
others who did lots of testing - thanks to all.

ok hshoexer@@
@
text
@/* $OpenBSD: x509.h,v 1.21 2004/05/23 18:17:56 hshoexer Exp $	 */
/* $EOM: x509.h,v 1.11 2000/09/28 12:53:27 niklas Exp $	 */

/*
 * Copyright (c) 1998, 1999 Niels Provos.  All rights reserved.
 * Copyright (c) 1999 Angelos D. Keromytis.  All rights reserved.
 * Copyright (c) 2000, 2001 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _X509_H_
#define _X509_H_

#include "libcrypto.h"

#define X509v3_RFC_NAME		1
#define X509v3_DNS_NAME		2
#define X509v3_IP_ADDR		7

struct x509_attribval {
	char           *type;
	char           *val;
};

/*
 * The acceptable certification authority.
 * XXX We only support two names at the moment, as of ASN this can
 * be dynamic but we don't care for now.
 */
struct x509_aca {
	struct x509_attribval name1;
	struct x509_attribval name2;
};

struct X509;
struct X509_STORE;

/* Functions provided by cert handler.  */

int             x509_certreq_validate(u_int8_t *, u_int32_t);
int             x509_certreq_decode(void **, u_int8_t *, u_int32_t);
void            x509_cert_free(void *);
void           *x509_cert_get(u_int8_t *, u_int32_t);
int             x509_cert_get_key(void *, void *);
int             x509_cert_get_subjects(void *, int *, u_int8_t ***, u_int32_t **);
int             x509_cert_init(void);
int             x509_crl_init(void);
int             x509_cert_obtain(u_int8_t *, size_t, void *, u_int8_t **,
		    u_int32_t *);
int             x509_cert_validate(void *);
void            x509_free_aca(void *);
void           *x509_cert_dup(void *);
void            x509_serialize(void *, u_int8_t **, u_int32_t *);
char           *x509_printable(void *);
void           *x509_from_printable(char *);
int		x509_ca_count(void);

/* Misc. X509 certificate functions.  */

char           *x509_DN_string(u_int8_t *, size_t);
int             x509_cert_insert(int, void *);
int             x509_cert_subjectaltname(X509 * cert, u_char **, u_int *);
X509           *x509_from_asn(u_char *, u_int);
int             x509_generate_kn(int, X509 *);
int             x509_read_from_dir(X509_STORE *, char *, int, int *);
int             x509_read_crls_from_dir(X509_STORE *, char *);

#endif				/* _X509_H_ */
@


1.21
log
@More KNF.  Mainly spaces and line-wraps, no binary change.

ok ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: x509.h,v 1.20 2004/04/15 18:39:27 deraadt Exp $	 */
d64 1
a64 1
void           *x509_certreq_decode(u_int8_t *, u_int32_t);
d79 1
d88 1
a88 1
int             x509_read_from_dir(X509_STORE *, char *, int);
@


1.20
log
@partial move to KNF.  More to come.  This has happened because there
are a raft of source code auditors who are willing to help improve this
code only if this is done, and hey, isakmpd does need our standard
auditing process.  ok ho hshoexer
@
text
@d1 1
a1 1
/* $OpenBSD: x509.h,v 1.19 2003/11/06 16:12:08 ho Exp $	 */
d71 2
a72 1
int             x509_cert_obtain(u_int8_t *, size_t, void *, u_int8_t **, u_int32_t *);
@


1.19
log
@Style nits.
@
text
@d1 2
a2 2
/*	$OpenBSD: x509.h,v 1.18 2003/06/04 07:31:17 ho Exp $	*/
/*	$EOM: x509.h,v 1.11 2000/09/28 12:53:27 niklas Exp $	*/
d44 2
a45 2
  char *type;
  char *val;
d54 2
a55 2
  struct x509_attribval name1;
  struct x509_attribval name2;
d63 15
a77 15
int x509_certreq_validate (u_int8_t *, u_int32_t);
void *x509_certreq_decode (u_int8_t *, u_int32_t);
void x509_cert_free (void *);
void *x509_cert_get (u_int8_t *, u_int32_t);
int x509_cert_get_key (void *, void *);
int x509_cert_get_subjects (void *, int *, u_int8_t ***, u_int32_t **);
int x509_cert_init (void);
int x509_crl_init (void);
int x509_cert_obtain (u_int8_t *, size_t, void *, u_int8_t **, u_int32_t *);
int x509_cert_validate (void *);
void x509_free_aca (void *);
void *x509_cert_dup (void *);
void x509_serialize (void *, u_int8_t **, u_int32_t *);
char *x509_printable (void *);
void *x509_from_printable (char *);
d81 7
a87 7
char *x509_DN_string (u_int8_t *, size_t);
int x509_cert_insert (int, void *);
int x509_cert_subjectaltname (X509 *cert, u_char **, u_int *);
X509 *x509_from_asn (u_char *, u_int);
int x509_generate_kn (int, X509 *);
int x509_read_from_dir (X509_STORE *, char *, int);
int x509_read_crls_from_dir (X509_STORE *, char *);
d89 1
a89 1
#endif /* _X509_H_ */
@


1.18
log
@Remove the rest of clauses 3 and 4. Approved by Niklas Hallqvist, Angelos
D. Keromytis and Niels Provos.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.17 2002/08/07 13:19:20 ho Exp $	*/
d85 1
a85 1
int x509_generate_kn(int, X509 *);
@


1.17
log
@A rewrite of the CRL support code, also from <Thomas.Walpuski@@gmx.net>.
Some style mods, and checks added for OpenSSL version 0.9.7 or later.
Currently CRLs are not supported for earlier versions.
Manual pages updated.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.16 2002/08/02 13:10:41 ho Exp $	*/
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.16
log
@CRL support for isakmpd. From <Thomas.Walpuski@@gmx.net> with some minor
modifications by me. ok niklas@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.15 2002/06/09 08:13:07 todd Exp $	*/
d75 1
a77 1
int x509_crl_get (X509_STORE_CTX *, X509_CRL **, X509 *);
d92 1
@


1.15
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.14 2001/11/03 13:15:35 ho Exp $	*/
d77 1
@


1.14
log
@Add stub for struct X509_STORE
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.13 2001/08/25 22:17:13 niklas Exp $	*/
d54 1
a54 1
 * The acceptable certification authority. 
@


1.13
log
@Add x509_DN_string API to get a printable DN component given one
rpresented in ASN.1
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.12 2001/06/07 04:23:35 angelos Exp $	*/
d64 1
@


1.12
log
@Get rid of the main policy session (unnecessary).
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.11 2001/05/31 20:20:59 angelos Exp $	*/
d84 1
@


1.11
log
@New routines for handling X509 cert representation.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.10 2001/01/27 12:03:36 niklas Exp $	*/
d87 1
a87 1
int x509_generate_kn(X509 *);
@


1.10
log
@(c) 2001
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.9 2001/01/26 16:40:52 niklas Exp $	*/
d77 4
@


1.9
log
@There is no need to check the subjectAltName anymore, since we are in fact
looking up the certificate via the name.  The lookup method already
guarantees a match.  It is also a problem to look at the subjectAltName
should we have got the certificate with no such name in it.  Prodded by
mickey@@ although I solved the problem in a different way.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.8 2000/10/07 06:57:08 niklas Exp $	*/
d7 1
a7 1
 * Copyright (c) 2000 Niklas Hallqvist.  All rights reserved.
@


1.8
log
@cert.c: Merge with EOM 1.18
cert.h: Merge with EOM 1.8
libcrypto.c: Merge with EOM 1.14
policy.h: Merge with EOM 1.12
x509.h: Merge with EOM 1.11

author: niklas
Multiple subject name matching, makes certificate interop with PGPnet at least
partly working.  Added some error checking.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.7 2000/06/08 20:49:44 niklas Exp $	*/
a81 1
int x509_check_subjectaltname (u_char *, u_int, X509 *);
@


1.8.2.1
log
@Pull in isakmpd from 2.9 to 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: x509.h,v 1.10 2001/01/27 12:03:36 niklas Exp $	*/
d7 1
a7 1
 * Copyright (c) 2000, 2001 Niklas Hallqvist.  All rights reserved.
d82 1
@


1.7
log
@cert.h: Merge with EOM 1.7
exchange.h: Merge with EOM 1.27
x509.h: Merge with EOM 1.10

author: angelos
Allow exchange of KeyNote credentials over IKE. Multiple credentials
may be passed in a single CERT payload. KeyNote is used if a
directory named as the local ID we use in an exchange exists in the
KeyNote directory (default: /etc/isakmpd/keynote/). Note that
asymmetric credentials are possible (use KeyNote in one direction and
X509 in the other); such authentication is envisioned to be the most
common: the clients will use KeyNote credentials to authenticate and
authorize with a server, whilst the server will just provide an X509
certificate proving its binding to the IP address or ID.

Totally asymmetric authentication (e.g., shared key in one direction,
RSA in the other) is not supported by the IKE protocol.
@
text
@d1 2
a2 2
/*	$OpenBSD: x509.h,v 1.6 2000/02/01 02:46:19 niklas Exp $	*/
/*	$EOM: x509.h,v 1.10 2000/05/19 05:47:53 angelos Exp $	*/
d7 1
d46 1
a46 2
#define X509v3_IPV4_ADDR	7

a57 1

d67 6
d74 1
a74 1
void *x509_cert_get (u_int8_t *, u_int32_t);
a75 3
void x509_cert_free (void *);
int x509_certreq_validate (u_int8_t *, u_int32_t);
void *x509_certreq_decode (u_int8_t *, u_int32_t);
a76 3
int x509_cert_obtain (u_int8_t *, size_t, void *, u_int8_t **, u_int32_t *);
int x509_cert_get_key (void *, void *);
int x509_cert_get_subject (void *, u_int8_t **, u_int32_t *);
a80 2
int x509_read_from_dir (X509_STORE *, char *, int);

d84 2
a86 1
int x509_generate_kn(X509 *);
@


1.6
log
@apps/certpatch/certpatch.8: Merge with EOM 1.4
apps/certpatch/certpatch.c: Merge with EOM 1.6
exchange.c: Merge with EOM 1.114
ike_quick_mode.c: Merge with EOM 1.110
ike_phase_1.c: Merge with EOM 1.16
ike_auth.c: Merge with EOM 1.41
ike_aggressive.c: Merge with EOM 1.4
libcrypto.c: Merge with EOM 1.10
libcrypto.h: Merge with EOM 1.10
isakmpd.8: Merge with EOM 1.19
isakmpd.c: Merge with EOM 1.42
ipsec.h: Merge with EOM 1.40
init.c: Merge with EOM 1.22
message.c: Merge with EOM 1.143
message.h: Merge with EOM 1.49
sa.c: Merge with EOM 1.98
sa.h: Merge with EOM 1.54
policy.c: Merge with EOM 1.14
pf_key_v2.c: Merge with EOM 1.36
x509.c: Merge with EOM 1.32
x509.h: Merge with EOM 1.9
udp.c: Merge with EOM 1.46

author: niklas
Angelos copyrights
@
text
@d1 2
a2 2
/*	$OpenBSD: x509.h,v 1.5 1999/08/26 22:29:49 niklas Exp $	*/
/*	$EOM: x509.h,v 1.9 2000/01/31 22:33:49 niklas Exp $	*/
d81 1
a81 1
int x509_cert_insert (void *);
@


1.5
log
@Merge with EOM 1.8

author: angelos
Complete policy work; tested for the shared-key case. Documentation needed.

author: niklas
Add support for dynamic loading of optional facilities, libcrypto first.
@
text
@d1 2
a2 2
/*	$OpenBSD: x509.h,v 1.4 1999/07/17 21:54:39 niklas Exp $	*/
/*	$EOM: x509.h,v 1.8 1999/08/18 00:44:58 angelos Exp $	*/
d6 1
@


1.4
log
@regress/rsakeygen/Makefile: Merge with EOM 1.4
regress/rsakeygen/rsakeygen.c: Merge with EOM 1.8
regress/x509/Makefile: Merge with EOM 1.6
regress/x509/x509test.c: Merge with EOM 1.6
regress/Makefile: Merge with EOM 1.8
samples/VPN-east.conf: Merge with EOM 1.6
samples/VPN-west.conf: Merge with EOM 1.6
samples/singlehost-east.conf: Merge with EOM 1.3
samples/singlehost-west.conf: Merge with EOM 1.3
sysdep/openbsd/Makefile.sysdep: Merge with EOM 1.5
x509.h: Merge with EOM 1.6
x509.c: Merge with EOM 1.17
DESIGN-NOTES: Merge with EOM 1.46
Makefile: Merge with EOM 1.55
cert.c: Merge with EOM 1.11
cert.h: Merge with EOM 1.6
exchange.c: Merge with EOM 1.109
exchange.h: Merge with EOM 1.26
ike_auth.c: Merge with EOM 1.32
ike_phase_1.c: Merge with EOM 1.7
init.c: Merge with EOM 1.16
isakmpd.conf.5: Merge with EOM 1.27
README.PKI: Merge with EOM 1.1

author: niklas
From Niels Provos, edited by me: certificate support using SSLeay
@
text
@d1 2
a2 2
/*	$OpenBSD: x509.h,v 1.3 1998/11/17 11:10:22 niklas Exp $	*/
/*	$EOM: x509.h,v 1.6 1999/07/17 20:44:12 niklas Exp $	*/
d40 2
d87 1
@


1.3
log
@Add RCS Ids from the EOM repository
@
text
@d1 2
a2 2
/*	$OpenBSD: x509.h,v 1.2 1998/11/15 00:44:05 niklas Exp $	*/
/*	$EOM: x509.h,v 1.5 1998/08/21 13:47:54 provos Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 Niels Provos.  All rights reserved.
d40 4
a43 1
#include "pkcs.h"		/* for struct rsa_public_key */
d51 3
a53 3
 * The acceptable certification authority 
 * XXX we only support two names at the moment, as of ASN this can
 * be dynamic but we dont care for now.
d61 1
a61 1
struct exchange;
d63 1
a63 13
struct x509_certificate {
  u_int32_t version;
  u_int32_t serialnumber;
  char *signaturetype;
  struct x509_attribval issuer1;	/* At the moment Country */
  struct x509_attribval issuer2;	/* At the moment Organization  */
  struct x509_attribval subject1;	/* At the moment Country */
  struct x509_attribval subject2;	/* At the moment Organization  */
  struct x509_attribval extension;	/* Raw Extension */
  char *start;       		/* Certificate Validity Start and End */
  char *end;
  struct rsa_public_key key;
};
d65 4
d72 12
a83 21
int x509_cert_obtain (struct exchange *, void *, u_int8_t **, u_int32_t *);
int x509_cert_get_key (u_int8_t *, u_int32_t, void *);
int x509_cert_get_subject (u_int8_t *, u_int32_t, u_int8_t **, u_int32_t *);

void x509_get_attribval (struct norm_type *, struct x509_attribval *);
void x509_set_attribval (struct norm_type *, struct x509_attribval *);
void x509_free_attrbival (struct x509_attribval *);

int x509_validate_signed (u_int8_t *, u_int32_t, struct rsa_public_key *,
			  u_int8_t **, u_int32_t *);
int x509_create_signed (u_int8_t *, u_int32_t, struct rsa_private_key *,
			u_int8_t **, u_int32_t *);
int x509_decode_certificate (u_int8_t *, u_int32_t, struct x509_certificate *);
int x509_encode_certificate (struct x509_certificate *, u_int8_t **,
			     u_int32_t *);
void x509_free_certificate (struct x509_certificate *);

int x509_decode_cert_extension (u_int8_t *, u_int32_t, 
				struct x509_certificate *);
int x509_encode_cert_extension (struct x509_certificate *, u_int8_t **,
				u_int32_t *);
@


1.2
log
@openBSD RCS IDs
@
text
@d1 2
a2 1
/*	$OpenBSD: x509.h,v 1.1.1.1 1998/11/15 00:03:49 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: x509.h,v 1.5 1998/08/21 13:47:54 provos Exp $	*/
@


1.1.1.1
log
@Initial import of isakmpd, an IKE (ISAKMP/Oakley) implementation for the
OpenBSD IPSEC stack by me, Niklas Hallqvist and Niels Provos, funded by
Ericsson Radio Systems.  It is not yet complete or usable in a real scenario
but the missing pieces will soon be there.  The early commit is for people
who wants early access and who are not afraid of looking at source.
isakmpd interops with Cisco, Timestep, SSH & Pluto (Linux FreeS/WAN) so
far, so it is not that incomplete.  It is really mostly configuration that
is lacking.
@
text
@@
