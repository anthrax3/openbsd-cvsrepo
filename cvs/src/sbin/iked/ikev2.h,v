head	1.25;
access;
symbols
	OPENBSD_6_0:1.23.0.4
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.2
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6;
locks; strict;
comment	@ * @;


1.25
date	2017.01.20.13.46.10;	author mikeb;	state Exp;
branches;
next	1.24;
commitid	t6kwEBs4N7vzsbAV;

1.24
date	2017.01.04.12.31.01;	author mikeb;	state Exp;
branches;
next	1.23;
commitid	TO4j3BY30CCpOBrn;

1.23
date	2015.10.31.19.28.19;	author naddy;	state Exp;
branches;
next	1.22;
commitid	XYBkvC3PYNaA61fw;

1.22
date	2015.10.02.22.14.39;	author reyk;	state Exp;
branches;
next	1.21;
commitid	4fyof0enOzrD1Z8n;

1.21
date	2015.10.02.17.50.54;	author reyk;	state Exp;
branches;
next	1.20;
commitid	AunNtrA8yUaeFiTx;

1.20
date	2015.08.21.11.59.27;	author reyk;	state Exp;
branches;
next	1.19;
commitid	CNs9dXqQUQ09vB19;

1.19
date	2015.06.11.18.49.09;	author reyk;	state Exp;
branches;
next	1.18;
commitid	r36j1ZCD0yPK3S9O;

1.18
date	2015.03.26.19.52.35;	author markus;	state Exp;
branches;
next	1.17;
commitid	OLM4J0heQ8InGopV;

1.17
date	2014.11.07.14.02.32;	author mikeb;	state Exp;
branches;
next	1.16;
commitid	auhursM13zeUc6fY;

1.16
date	2014.08.27.10.28.57;	author reyk;	state Exp;
branches;
next	1.15;
commitid	kDDmioKYpauZKbXI;

1.15
date	2014.05.06.10.24.22;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2014.04.29.11.51.13;	author markus;	state Exp;
branches;
next	1.13;

1.13
date	2014.02.14.09.00.03;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2013.03.30.16.31.37;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.08.10.38.19;	author reyk;	state Exp;
branches;
next	1.10;

1.10
date	2012.10.25.15.01.56;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.18.12.07.59;	author reyk;	state Exp;
branches;
next	1.8;

1.8
date	2012.06.29.15.05.49;	author mikeb;	state Exp;
branches;
next	1.7;

1.7
date	2012.05.07.10.58.38;	author mikeb;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.03.16.59.35;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.26.18.32.34;	author reyk;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.23.11.26.13;	author reyk;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.14.08.32.45;	author reyk;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.10.08.29.47;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.03.16.41.12;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.25
log
@New RFC7383 define

From and OK markus@@, OK reyk
@
text
@/*	$OpenBSD: ikev2.h,v 1.24 2017/01/04 12:31:01 mikeb Exp $	*/

/*
 * Copyright (c) 2010-2013 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef IKED_IKEV2_H
#define IKED_IKEV2_H

#define IKEV2_VERSION		0x20	/* IKE version 2.0 */
#define IKEV1_VERSION		0x10	/* IKE version 1.0 */

#define IKEV2_KEYPAD		"Key Pad for IKEv2"	/* don't change! */

/*
 * IKEv2 pseudo states
 */

#define IKEV2_STATE_INIT		0	/* new IKE SA */
#define IKEV2_STATE_COOKIE		1	/* cookie requested */
#define IKEV2_STATE_SA_INIT		2	/* init IKE SA */
#define IKEV2_STATE_EAP			3	/* EAP requested */
#define IKEV2_STATE_EAP_SUCCESS		4	/* EAP succeeded */
#define IKEV2_STATE_AUTH_REQUEST	5	/* auth received */
#define IKEV2_STATE_AUTH_SUCCESS	6	/* authenticated */
#define IKEV2_STATE_VALID		7	/* authenticated AND validated certs */
#define IKEV2_STATE_EAP_VALID		8	/* EAP validated */
#define IKEV2_STATE_ESTABLISHED		9	/* active IKE SA */
#define IKEV2_STATE_CLOSING		10	/* expect delete for this SA */
#define IKEV2_STATE_CLOSED		11	/* delete this SA */

extern struct iked_constmap ikev2_state_map[];

/*
 * "IKEv2 Parameters" based on the official RFC-based assignments by IANA
 * (http://www.iana.org/assignments/ikev2-parameters/ikev2-parameters.txt)
 */

/*
 * IKEv2 definitions of the IKE header
 */

/* IKEv2 exchange types */
#define IKEV2_EXCHANGE_IKE_SA_INIT		34	/* Initial Exchange */
#define IKEV2_EXCHANGE_IKE_AUTH			35	/* Authentication */
#define IKEV2_EXCHANGE_CREATE_CHILD_SA		36	/* Create Child SA */
#define IKEV2_EXCHANGE_INFORMATIONAL		37	/* Informational */
#define IKEV2_EXCHANGE_IKE_SESSION_RESUME	38	/* RFC5723 */

extern struct iked_constmap ikev2_exchange_map[];

/* IKEv2 message flags */
#define IKEV2_FLAG_INITIATOR		0x08	/* Sent by the initiator */
#define IKEV2_FLAG_OLDVERSION		0x10	/* Supports a higher IKE version */
#define IKEV2_FLAG_RESPONSE		0x20	/* Message is a response */

extern struct iked_constmap ikev2_flag_map[];

/*
 * IKEv2 payloads
 */

struct ikev2_payload {
	uint8_t		 pld_nextpayload;	/* Next payload type */
	uint8_t		 pld_reserved;		/* Contains the critical bit */
	uint16_t	 pld_length;		/* Payload length with header */
} __packed;

#define IKEV2_CRITICAL_PAYLOAD	0x01	/* First bit in the reserved field */

/* IKEv2 payload types */
#define IKEV2_PAYLOAD_NONE	0	/* No payload */
#define IKEV2_PAYLOAD_SA	33	/* Security Association */
#define IKEV2_PAYLOAD_KE	34	/* Key Exchange */
#define IKEV2_PAYLOAD_IDi	35	/* Identification - Initiator */
#define IKEV2_PAYLOAD_IDr	36	/* Identification - Responder */
#define IKEV2_PAYLOAD_CERT	37	/* Certificate */
#define IKEV2_PAYLOAD_CERTREQ	38	/* Certificate Request */
#define IKEV2_PAYLOAD_AUTH	39	/* Authentication */
#define IKEV2_PAYLOAD_NONCE	40	/* Nonce */
#define IKEV2_PAYLOAD_NOTIFY	41	/* Notify */
#define IKEV2_PAYLOAD_DELETE	42	/* Delete */
#define IKEV2_PAYLOAD_VENDOR	43	/* Vendor ID */
#define IKEV2_PAYLOAD_TSi	44	/* Traffic Selector - Initiator */
#define IKEV2_PAYLOAD_TSr	45	/* Traffic Selector - Responder */
#define IKEV2_PAYLOAD_SK	46	/* Encrypted */
#define IKEV2_PAYLOAD_CP	47	/* Configuration Payload */
#define IKEV2_PAYLOAD_EAP	48	/* Extensible Authentication */
#define IKEV2_PAYLOAD_GSPM	49	/* RFC6467 Generic Secure Password */

extern struct iked_constmap ikev2_payload_map[];

/*
 * SA payload
 */

struct ikev2_sa_proposal {
	uint8_t		 sap_more;		/* Last proposal or more */
	uint8_t		 sap_reserved;		/* Must be set to zero */
	uint16_t	 sap_length;		/* Proposal length */
	uint8_t		 sap_proposalnr;	/* Proposal number */
	uint8_t		 sap_protoid;		/* Protocol Id */
	uint8_t		 sap_spisize;		/* SPI size */
	uint8_t		 sap_transforms;	/* Number of transforms */
	/* Followed by variable-length SPI */
	/* Followed by variable-length transforms */
} __packed;

#define IKEV2_SAP_LAST	0
#define IKEV2_SAP_MORE	2

#define IKEV2_SAPROTO_NONE		0	/* None */
#define IKEV2_SAPROTO_IKE		1	/* IKEv2 */
#define IKEV2_SAPROTO_AH		2	/* AH */
#define IKEV2_SAPROTO_ESP		3	/* ESP */
#define IKEV2_SAPROTO_FC_ESP_HEADER	4	/* RFC4595 */
#define IKEV2_SAPROTO_FC_CT_AUTH	5	/* RFC4595 */
#define IKEV2_SAPROTO_IPCOMP		204	/* private, should be 4 */

extern struct iked_constmap ikev2_saproto_map[];

struct ikev2_transform {
	uint8_t		xfrm_more;		/* Last transform or more */
	uint8_t		xfrm_reserved;		/* Must be set to zero */
	uint16_t	xfrm_length;		/* Transform length */
	uint8_t		xfrm_type;		/* Transform type */
	uint8_t		xfrm_reserved1;		/* Must be set to zero */
	uint16_t	xfrm_id;		/* Transform Id */
	/* Followed by variable-length transform attributes */
} __packed;

#define IKEV2_XFORM_LAST		0
#define IKEV2_XFORM_MORE		3

#define IKEV2_XFORMTYPE_ENCR		1	/* Encryption */
#define IKEV2_XFORMTYPE_PRF		2	/* Pseudo-Random Function */
#define IKEV2_XFORMTYPE_INTEGR		3	/* Integrity Algorithm */
#define IKEV2_XFORMTYPE_DH		4	/* Diffie-Hellman Group */
#define IKEV2_XFORMTYPE_ESN		5	/* Extended Sequence Numbers */
#define IKEV2_XFORMTYPE_MAX		6

extern struct iked_constmap ikev2_xformtype_map[];

#define IKEV2_XFORMENCR_NONE		0	/* None */
#define IKEV2_XFORMENCR_DES_IV64	1	/* RFC1827 */
#define IKEV2_XFORMENCR_DES		2	/* RFC2405 */
#define IKEV2_XFORMENCR_3DES		3	/* RFC2451 */
#define IKEV2_XFORMENCR_RC5		4	/* RFC2451 */
#define IKEV2_XFORMENCR_IDEA		5	/* RFC2451 */
#define IKEV2_XFORMENCR_CAST		6	/* RFC2451 */
#define IKEV2_XFORMENCR_BLOWFISH	7	/* RFC2451 */
#define IKEV2_XFORMENCR_3IDEA		8	/* RFC2451 */
#define IKEV2_XFORMENCR_DES_IV32	9	/* DESIV32 */
#define IKEV2_XFORMENCR_RC4		10	/* RFC2451 */
#define IKEV2_XFORMENCR_NULL		11	/* RFC2410 */
#define IKEV2_XFORMENCR_AES_CBC		12	/* RFC3602 */
#define IKEV2_XFORMENCR_AES_CTR		13	/* RFC3664 */
#define IKEV2_XFORMENCR_AES_CCM_8	14	/* RFC5282 */
#define IKEV2_XFORMENCR_AES_CCM_12	15	/* RFC5282 */
#define IKEV2_XFORMENCR_AES_CCM_16	16	/* RFC5282 */
#define IKEV2_XFORMENCR_AES_GCM_8	18	/* RFC5282 */
#define IKEV2_XFORMENCR_AES_GCM_12	19	/* RFC5282 */
#define IKEV2_XFORMENCR_AES_GCM_16	20	/* RFC5282 */
#define IKEV2_XFORMENCR_NULL_AES_GMAC	21	/* RFC4543 */
#define IKEV2_XFORMENCR_XTS_AES		22	/* IEEE P1619 */
#define IKEV2_XFORMENCR_CAMELLIA_CBC	23	/* RFC5529 */
#define IKEV2_XFORMENCR_CAMELLIA_CTR	24	/* RFC5529 */
#define IKEV2_XFORMENCR_CAMELLIA_CCM_8	25	/* RFC5529 */
#define IKEV2_XFORMENCR_CAMELLIA_CCM_12	26	/* RFC5529 */
#define IKEV2_XFORMENCR_CAMELLIA_CCM_16	27	/* RFC5529 */
#define IKEV2_XFORMENCR_CHACHA20_POLY1305 28	/* RFC7634 */

extern struct iked_constmap ikev2_xformencr_map[];

#define IKEV2_IPCOMP_OUI		1	/* RFC5996 */
#define IKEV2_IPCOMP_DEFLATE		2	/* RFC2394 */
#define IKEV2_IPCOMP_LZS		3	/* RFC2395 */
#define IKEV2_IPCOMP_LZJH		4	/* RFC3051 */

extern struct iked_constmap ikev2_ipcomp_map[];

#define IKEV2_XFORMPRF_HMAC_MD5		1	/* RFC2104 */
#define IKEV2_XFORMPRF_HMAC_SHA1	2	/* RFC2104 */
#define IKEV2_XFORMPRF_HMAC_TIGER	3	/* RFC2104 */
#define IKEV2_XFORMPRF_AES128_XCBC	4	/* RFC3664 */
#define IKEV2_XFORMPRF_HMAC_SHA2_256	5	/* RFC4868 */
#define IKEV2_XFORMPRF_HMAC_SHA2_384	6	/* RFC4868 */
#define IKEV2_XFORMPRF_HMAC_SHA2_512	7	/* RFC4868 */
#define IKEV2_XFORMPRF_AES128_CMAC	8	/* RFC4615 */

extern struct iked_constmap ikev2_xformprf_map[];

#define IKEV2_XFORMAUTH_NONE		0	/* No Authentication */
#define IKEV2_XFORMAUTH_HMAC_MD5_96	1	/* RFC2403 */
#define IKEV2_XFORMAUTH_HMAC_SHA1_96	2	/* RFC2404 */
#define IKEV2_XFORMAUTH_DES_MAC		3	/* DES-MAC */
#define IKEV2_XFORMAUTH_KPDK_MD5	4	/* RFC1826 */
#define IKEV2_XFORMAUTH_AES_XCBC_96	5	/* RFC3566 */
#define IKEV2_XFORMAUTH_HMAC_MD5_128	6	/* RFC4595 */
#define IKEV2_XFORMAUTH_HMAC_SHA1_160	7	/* RFC4595 */
#define IKEV2_XFORMAUTH_AES_CMAC_96	8	/* RFC4494 */
#define IKEV2_XFORMAUTH_AES_128_GMAC	9	/* RFC4543 */
#define IKEV2_XFORMAUTH_AES_192_GMAC	10	/* RFC4543 */
#define IKEV2_XFORMAUTH_AES_256_GMAC	11	/* RFC4543 */
#define IKEV2_XFORMAUTH_HMAC_SHA2_256_128 12	/* RFC4868 */
#define IKEV2_XFORMAUTH_HMAC_SHA2_384_192 13	/* RFC4868 */
#define IKEV2_XFORMAUTH_HMAC_SHA2_512_256 14	/* RFC4868 */

extern struct iked_constmap ikev2_xformauth_map[];

#define IKEV2_XFORMDH_NONE		0	/* No DH */
#define IKEV2_XFORMDH_MODP_768		1	/* DH Group 1 */
#define IKEV2_XFORMDH_MODP_1024		2	/* DH Group 2 */
#define IKEV2_XFORMDH_EC2N_155		3	/* DH Group 3 */
#define IKEV2_XFORMDH_EC2N_185		4	/* DH Group 3 */
#define IKEV2_XFORMDH_MODP_1536		5	/* DH Group 5 */
#define IKEV2_XFORMDH_MODP_2048		14	/* DH Group 14 */
#define IKEV2_XFORMDH_MODP_3072		15	/* DH Group 15 */
#define IKEV2_XFORMDH_MODP_4096		16	/* DH Group 16 */
#define IKEV2_XFORMDH_MODP_6144		17	/* DH Group 17 */
#define IKEV2_XFORMDH_MODP_8192		18	/* DH Group 18 */
#define IKEV2_XFORMDH_ECP_256		19	/* DH Group 19 */
#define IKEV2_XFORMDH_ECP_384		20	/* DH Group 20 */
#define IKEV2_XFORMDH_ECP_521		21	/* DH Group 21 */
#define IKEV2_XFORMDH_ECP_192		25	/* DH Group 25 */
#define IKEV2_XFORMDH_ECP_224		26	/* DH Group 26 */
#define IKEV2_XFORMDH_BRAINPOOL_P224R1	27	/* DH Group 27 */
#define IKEV2_XFORMDH_BRAINPOOL_P256R1	28	/* DH Group 28 */
#define IKEV2_XFORMDH_BRAINPOOL_P384R1	29	/* DH Group 29 */
#define IKEV2_XFORMDH_BRAINPOOL_P512R1	30	/* DH Group 30 */
#define IKEV2_XFORMDH_X_CURVE25519	1034	/* draft-ietf-ipsecme-safecurves-00 */

extern struct iked_constmap ikev2_xformdh_map[];

#define IKEV2_XFORMESN_NONE		0	/* No ESN */
#define IKEV2_XFORMESN_ESN		1	/* ESN */

extern struct iked_constmap ikev2_xformesn_map[];

struct ikev2_attribute {
	uint16_t	attr_type;	/* Attribute type */
	uint16_t	attr_length;	/* Attribute length or value */
	/* Followed by variable length (TLV) */
} __packed;

#define IKEV2_ATTRAF_TLV		0x0000	/* Type-Length-Value format */
#define IKEV2_ATTRAF_TV			0x8000	/* Type-Value format */

#define IKEV2_ATTRTYPE_KEY_LENGTH	14	/* Key length */

extern struct iked_constmap ikev2_attrtype_map[];

/*
 * KE Payload
 */

struct ikev2_keyexchange {
	uint16_t	 kex_dhgroup;		/* DH Group # */
	uint16_t	 kex_reserved;		/* Reserved */
} __packed;

/*
 * N payload
 */

struct ikev2_notify {
	uint8_t		 n_protoid;		/* Protocol Id */
	uint8_t		 n_spisize;		/* SPI size */
	uint16_t	 n_type;		/* Notify message type */
	/* Followed by variable length SPI */
	/* Followed by variable length notification data */
} __packed;

#define IKEV2_N_UNSUPPORTED_CRITICAL_PAYLOAD	1	/* RFC4306 */
#define IKEV2_N_INVALID_IKE_SPI			4	/* RFC4306 */
#define IKEV2_N_INVALID_MAJOR_VERSION		5	/* RFC4306 */
#define IKEV2_N_INVALID_SYNTAX			7	/* RFC4306 */
#define IKEV2_N_INVALID_MESSAGE_ID		9	/* RFC4306 */
#define IKEV2_N_INVALID_SPI			11	/* RFC4306 */
#define IKEV2_N_NO_PROPOSAL_CHOSEN		14	/* RFC4306 */
#define IKEV2_N_INVALID_KE_PAYLOAD		17	/* RFC4306 */
#define IKEV2_N_AUTHENTICATION_FAILED		24	/* RFC4306 */
#define IKEV2_N_SINGLE_PAIR_REQUIRED		34	/* RFC4306 */
#define IKEV2_N_NO_ADDITIONAL_SAS		35	/* RFC4306 */
#define IKEV2_N_INTERNAL_ADDRESS_FAILURE	36	/* RFC4306 */
#define IKEV2_N_FAILED_CP_REQUIRED		37	/* RFC4306 */
#define IKEV2_N_TS_UNACCEPTABLE			38	/* RFC4306 */
#define IKEV2_N_INVALID_SELECTORS		39	/* RFC4306 */
#define IKEV2_N_UNACCEPTABLE_ADDRESSES		40	/* RFC4555 */
#define IKEV2_N_UNEXPECTED_NAT_DETECTED		41	/* RFC4555 */
#define IKEV2_N_USE_ASSIGNED_HoA		42	/* RFC5026 */
#define IKEV2_N_TEMPORARY_FAILURE		43	/* RFC5996 */
#define IKEV2_N_CHILD_SA_NOT_FOUND		44	/* RFC5996 */
#define IKEV2_N_INITIAL_CONTACT			16384	/* RFC4306 */
#define IKEV2_N_SET_WINDOW_SIZE			16385	/* RFC4306 */
#define IKEV2_N_ADDITIONAL_TS_POSSIBLE		16386	/* RFC4306 */
#define IKEV2_N_IPCOMP_SUPPORTED		16387	/* RFC4306 */
#define IKEV2_N_NAT_DETECTION_SOURCE_IP		16388	/* RFC4306 */
#define IKEV2_N_NAT_DETECTION_DESTINATION_IP	16389	/* RFC4306 */
#define IKEV2_N_COOKIE				16390	/* RFC4306 */
#define IKEV2_N_USE_TRANSPORT_MODE		16391	/* RFC4306 */
#define IKEV2_N_HTTP_CERT_LOOKUP_SUPPORTED	16392	/* RFC4306 */
#define IKEV2_N_REKEY_SA			16393	/* RFC4306 */
#define IKEV2_N_ESP_TFC_PADDING_NOT_SUPPORTED	16394	/* RFC4306 */
#define IKEV2_N_NON_FIRST_FRAGMENTS_ALSO	16395	/* RFC4306 */
#define IKEV2_N_MOBIKE_SUPPORTED		16396	/* RFC4555 */
#define IKEV2_N_ADDITIONAL_IP4_ADDRESS		16397	/* RFC4555 */
#define IKEV2_N_ADDITIONAL_IP6_ADDRESS		16398	/* RFC4555 */
#define IKEV2_N_NO_ADDITIONAL_ADDRESSES		16399	/* RFC4555 */
#define IKEV2_N_UPDATE_SA_ADDRESSES		16400	/* RFC4555 */
#define IKEV2_N_COOKIE2				16401	/* RFC4555 */
#define IKEV2_N_NO_NATS_ALLOWED			16402	/* RFC4555 */
#define IKEV2_N_AUTH_LIFETIME			16403	/* RFC4478 */
#define IKEV2_N_MULTIPLE_AUTH_SUPPORTED		16404	/* RFC4739 */
#define IKEV2_N_ANOTHER_AUTH_FOLLOWS		16405	/* RFC4739 */
#define IKEV2_N_REDIRECT_SUPPORTED		16406	/* RFC5685 */
#define IKEV2_N_REDIRECT			16407	/* RFC5685 */
#define IKEV2_N_REDIRECTED_FROM			16408	/* RFC5685 */
#define IKEV2_N_TICKET_LT_OPAQUE		16409	/* RFC5723 */
#define IKEV2_N_TICKET_REQUEST			16410	/* RFC5723 */
#define IKEV2_N_TICKET_ACK			16411	/* RFC5723 */
#define IKEV2_N_TICKET_NACK			16412	/* RFC5723 */
#define IKEV2_N_TICKET_OPAQUE			16413	/* RFC5723 */
#define IKEV2_N_LINK_ID				16414	/* RFC5739 */
#define IKEV2_N_USE_WESP_MODE			16415	/* RFC-ietf-ipsecme-traffic-visibility-12.txt */
#define IKEV2_N_ROHC_SUPPORTED			16416	/* RFC-ietf-rohc-ikev2-extensions-hcoipsec-12.txt */
#define IKEV2_N_EAP_ONLY_AUTHENTICATION		16417	/* RFC5998 */
#define IKEV2_N_CHILDLESS_IKEV2_SUPPORTED	16418	/* RFC6023 */
#define IKEV2_N_QUICK_CRASH_DETECTION		16419	/* RFC6290 */
#define IKEV2_N_IKEV2_MESSAGE_ID_SYNC_SUPPORTED	16420	/* RFC6311 */
#define IKEV2_N_IPSEC_REPLAY_CTR_SYNC_SUPPORTED	16421	/* RFC6311 */
#define IKEV2_N_IKEV2_MESSAGE_ID_SYNC		16422	/* RFC6311 */
#define IKEV2_N_IPSEC_REPLAY_CTR_SYNC		16423	/* RFC6311 */
#define IKEV2_N_SECURE_PASSWORD_METHODS		16424	/* RFC6467 */
#define IKEV2_N_PSK_PERSIST			16425	/* RFC6631 */
#define IKEV2_N_PSK_CONFIRM			16426	/* RFC6631 */
#define IKEV2_N_ERX_SUPPORTED			16427	/* RFC6867 */
#define IKEV2_N_IFOM_CAPABILITY			16428	/* OA3GPP */
#define IKEV2_N_FRAGMENTATION_SUPPORTED		16430	/* RFC7383 */
#define IKEV2_N_SIGNATURE_HASH_ALGORITHMS	16431	/* RFC7427 */

extern struct iked_constmap ikev2_n_map[];

/*
 * DELETE payload
 */

struct ikev2_delete {
	uint8_t		 del_protoid;		/* Protocol Id */
	uint8_t		 del_spisize;		/* SPI size */
	uint16_t	 del_nspi;		/* Number of SPIs */
	/* Followed by variable length SPIs */
} __packed;

/*
 * ID payload
 */

struct ikev2_id {
	uint8_t		 id_type;		/* Id type */
	uint8_t		 id_reserved[3];	/* Reserved */
	/* Followed by the identification data */
} __packed;

#define IKEV2_ID_NONE		0	/* No ID */
#define IKEV2_ID_IPV4		1	/* RFC4306 (ID_IPV4_ADDR) */
#define IKEV2_ID_FQDN		2	/* RFC4306 */
#define IKEV2_ID_UFQDN		3	/* RFC4306 (ID_RFC822_ADDR) */
#define IKEV2_ID_IPV6		5	/* RFC4306 (ID_IPV6_ADDR) */
#define IKEV2_ID_ASN1_DN	9	/* RFC4306 */
#define IKEV2_ID_ASN1_GN	10	/* RFC4306 */
#define IKEV2_ID_KEY_ID		11	/* RFC4306 */
#define IKEV2_ID_FC_NAME	12	/* RFC4595 */

extern struct iked_constmap ikev2_id_map[];

/*
 * CERT/CERTREQ payloads
 */

struct ikev2_cert {
	uint8_t		cert_type;	/* Encoding */
	/* Followed by the certificate data */
} __packed;

#define IKEV2_CERT_NONE			0	/* None */
#define IKEV2_CERT_X509_PKCS7		1	/* RFC4306 */
#define IKEV2_CERT_PGP			2	/* RFC4306 */
#define IKEV2_CERT_DNS_SIGNED_KEY	3	/* RFC4306 */
#define IKEV2_CERT_X509_CERT		4	/* RFC4306 */
#define IKEV2_CERT_KERBEROS_TOKEN	6	/* RFC4306 */
#define IKEV2_CERT_CRL			7	/* RFC4306 */
#define IKEV2_CERT_ARL			8	/* RFC4306 */
#define IKEV2_CERT_SPKI			9	/* RFC4306 */
#define IKEV2_CERT_X509_ATTR		10	/* RFC4306 */
#define IKEV2_CERT_RSA_KEY		11	/* RFC4306 */
#define IKEV2_CERT_HASHURL_X509		12	/* RFC4306 */
#define IKEV2_CERT_HASHURL_X509_BUNDLE	13	/* RFC4306 */
#define IKEV2_CERT_OCSP			14	/* RFC4806 */

extern struct iked_constmap ikev2_cert_map[];

/*
 * TSi/TSr payloads
 */

struct ikev2_tsp {
	uint8_t		tsp_count;		/* Number of TSs */
	uint8_t		tsp_reserved[3];	/* Reserved */
	/* Followed by the traffic selectors */
} __packed;

struct ikev2_ts {
	uint8_t		ts_type;		/* TS type */
	uint8_t		ts_protoid;		/* Protocol Id */
	uint16_t	ts_length;		/* Length */
	uint16_t	ts_startport;		/* Start port */
	uint16_t	ts_endport;		/* End port */
} __packed;

#define IKEV2_TS_IPV4_ADDR_RANGE	7	/* RFC4306 */
#define IKEV2_TS_IPV6_ADDR_RANGE	8	/* RFC4306 */
#define IKEV2_TS_FC_ADDR_RANGE		9	/* RFC4595 */

extern struct iked_constmap ikev2_ts_map[];

/*
 * AUTH payload
 */

struct ikev2_auth {
	uint8_t		auth_method;		/* Signature type */
	uint8_t		auth_reserved[3];	/* Reserved */
	/* Followed by the signature */
} __packed;

#define IKEV2_AUTH_NONE			0	/* None */
#define IKEV2_AUTH_RSA_SIG		1	/* RFC4306 */
#define IKEV2_AUTH_SHARED_KEY_MIC	2	/* RFC4306 */
#define IKEV2_AUTH_DSS_SIG		3	/* RFC4306 */
#define IKEV2_AUTH_ECDSA_256		9	/* RFC4754 */
#define IKEV2_AUTH_ECDSA_384		10	/* RFC4754 */
#define IKEV2_AUTH_ECDSA_521		11	/* RFC4754 */
#define IKEV2_AUTH_GSPM			12	/* RFC6467 */
#define IKEV2_AUTH_NULL			13	/* RFC7619 */
#define IKEV2_AUTH_SIG			14	/* RFC7427 */

extern struct iked_constmap ikev2_auth_map[];

/* Notifications used together with IKEV2_AUTH_SIG */

#define IKEV2_SIGHASH_RESERVED		0	/* RFC7427 */
#define IKEV2_SIGHASH_SHA1		1	/* RFC7427 */
#define IKEV2_SIGHASH_SHA2_256		2	/* RFC7427 */
#define IKEV2_SIGHASH_SHA2_384		3	/* RFC7427 */
#define IKEV2_SIGHASH_SHA2_512		4	/* RFC7427 */

extern struct iked_constmap ikev2_sighash_map[];

/*
 * CP payload
 */

struct ikev2_cp {
	uint8_t		cp_type;
	uint8_t		cp_reserved[3];
	/* Followed by the attributes */
} __packed;

#define IKEV2_CP_REQUEST	1	/* CFG-Request */
#define IKEV2_CP_REPLY		2	/* CFG-Reply */
#define IKEV2_CP_SET		3	/* CFG-SET */
#define IKEV2_CP_ACK		4	/* CFG-ACK */

extern struct iked_constmap ikev2_cp_map[];

struct ikev2_cfg {
	uint16_t	cfg_type;	/* first bit must be set to zero */
	uint16_t	cfg_length;
	/* Followed by variable-length data */
} __packed;

#define IKEV2_CFG_INTERNAL_IP4_ADDRESS		1	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP4_NETMASK		2	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP4_DNS		3	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP4_NBNS		4	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_ADDRESS_EXPIRY	5	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP4_DHCP		6	/* RFC5996 */
#define IKEV2_CFG_APPLICATION_VERSION		7	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP6_ADDRESS		8	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP6_DNS		10	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP6_NBNS		11	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP6_DHCP		12	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP4_SUBNET		13	/* RFC5996 */
#define IKEV2_CFG_SUPPORTED_ATTRIBUTES		14	/* RFC5996 */
#define IKEV2_CFG_INTERNAL_IP6_SUBNET		15	/* RFC5996 */
#define IKEV2_CFG_MIP6_HOME_PREFIX		16	/* RFC5026 */
#define IKEV2_CFG_INTERNAL_IP6_LINK		17	/* RFC5739 */
#define IKEV2_CFG_INTERNAL_IP6_PREFIX		18	/* RFC5739 */
#define IKEV2_CFG_HOME_AGENT_ADDRESS		19	/* http://www.3gpp.org/ftp/Specs/html-info/24302.htm */
#define IKEV2_CFG_INTERNAL_IP4_SERVER		23456	/* MS-IKEE */
#define IKEV2_CFG_INTERNAL_IP6_SERVER		23457	/* MS-IKEE */

extern struct iked_constmap ikev2_cfg_map[];

#endif /* IKED_IKEV2_H */
@


1.24
log
@Remove modular exponential groups specified in RFC5114

Brought up by doug@@, ok reyk, djm, doug
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.23 2015/10/31 19:28:19 naddy Exp $	*/
d351 1
@


1.23
log
@RFC4754 specifies ECDSA-521 (sic), not -512.  ok reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.22 2015/10/02 22:14:39 reyk Exp $	*/
a236 3
#define IKEV2_XFORMDH_MODP_1024_160	22	/* DH Group 22 */
#define IKEV2_XFORMDH_MODP_2048_224	23	/* DH Group 23 */
#define IKEV2_XFORMDH_MODP_2048_256	24	/* DH Group 24 */
@


1.22
log
@Curve25519 is now specified in draft-ietf-ipsecme-safecurves-00 (along
with Curve448).  And we already support it.  Mention it here to update
the Id when it was assigned by IANA.
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.21 2015/10/02 17:50:54 reyk Exp $	*/
d457 1
a457 1
#define IKEV2_AUTH_ECDSA_512		11	/* RFC4754 */
@


1.21
log
@RFC7634 specifies ChaCha20-Poly1305 for IKEv2 and IPsec and IANA
assigned an official ID 28 for it.  This is good news, and we should
really support it as well.  Just add the ID for now.

Discussed with mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.20 2015/08/21 11:59:27 reyk Exp $	*/
d246 1
a246 1
#define IKEV2_XFORMDH_X_CURVE25519	1034	/* curve25519 */
@


1.20
log
@Switch iked to C99-style fixed-width integer types.

OK mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.19 2015/06/11 18:49:09 reyk Exp $	*/
d183 1
d459 1
@


1.19
log
@Use "compliant" header guards by avoiding the reserved '_' namespace.

Pointed out by Markus Elfring

OK mikeb@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.18 2015/03/26 19:52:35 markus Exp $	*/
d76 3
a78 3
	u_int8_t	 pld_nextpayload;	/* Next payload type */
	u_int8_t	 pld_reserved;		/* Contains the critical bit */
	u_int16_t	 pld_length;		/* Payload length with header */
d110 7
a116 7
	u_int8_t	 sap_more;		/* Last proposal or more */
	u_int8_t	 sap_reserved;		/* Must be set to zero */
	u_int16_t	 sap_length;		/* Proposal length */
	u_int8_t	 sap_proposalnr;	/* Proposal number */
	u_int8_t	 sap_protoid;		/* Protocol Id */
	u_int8_t	 sap_spisize;		/* SPI size */
	u_int8_t	 sap_transforms;	/* Number of transforms */
d135 6
a140 6
	u_int8_t	xfrm_more;		/* Last transform or more */
	u_int8_t	xfrm_reserved;		/* Must be set to zero */
	u_int16_t	xfrm_length;		/* Transform length */
	u_int8_t	xfrm_type;		/* Transform type */
	u_int8_t	xfrm_reserved1;		/* Must be set to zero */
	u_int16_t	xfrm_id;		/* Transform Id */
d255 2
a256 2
	u_int16_t	attr_type;	/* Attribute type */
	u_int16_t	attr_length;	/* Attribute length or value */
d272 2
a273 2
	u_int16_t	 kex_dhgroup;		/* DH Group # */
	u_int16_t	 kex_reserved;		/* Reserved */
d281 3
a283 3
	u_int8_t	 n_protoid;		/* Protocol Id */
	u_int8_t	 n_spisize;		/* SPI size */
	u_int16_t	 n_type;		/* Notify message type */
d362 3
a364 3
	u_int8_t	 del_protoid;		/* Protocol Id */
	u_int8_t	 del_spisize;		/* SPI size */
	u_int16_t	 del_nspi;		/* Number of SPIs */
d373 2
a374 2
	u_int8_t	 id_type;		/* Id type */
	u_int8_t	 id_reserved[3];	/* Reserved */
d395 1
a395 1
	u_int8_t	cert_type;	/* Encoding */
d421 2
a422 2
	u_int8_t	tsp_count;		/* Number of TSs */
	u_int8_t	tsp_reserved[3];	/* Reserved */
d427 5
a431 5
	u_int8_t	ts_type;		/* TS type */
	u_int8_t	ts_protoid;		/* Protocol Id */
	u_int16_t	ts_length;		/* Length */
	u_int16_t	ts_startport;		/* Start port */
	u_int16_t	ts_endport;		/* End port */
d445 2
a446 2
	u_int8_t	auth_method;		/* Signature type */
	u_int8_t	auth_reserved[3];	/* Reserved */
d477 2
a478 2
	u_int8_t	cp_type;
	u_int8_t	cp_reserved[3];
d490 2
a491 2
	u_int16_t	cfg_type;	/* first bit must be set to zero */
	u_int16_t	cfg_length;
@


1.18
log
@initial support for RFC 7427 signatures, so we are no longer
restricted to SHA1 for RSA signatures. ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.17 2014/11/07 14:02:32 mikeb Exp $	*/
d19 2
a20 2
#ifndef _IKEV2_H
#define _IKEV2_H
d518 1
a518 1
#endif /* _IKEV2_H */
@


1.17
log
@Repair initiator with PSK auth

Attempt state transition to VALID (or EAP_VALID) in the
ikev2_ike_auth after we have completed authentication
synchronously (PSK) or asynchronously (X.509 and RSA)
eliminating the need to do so in multiple places and
restoring the correct order for PSK.

ok markus
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.16 2014/08/27 10:28:57 reyk Exp $	*/
d353 1
d458 1
d461 10
@


1.16
log
@Add support for Curve25519 using the public domain code that is found
in OpenSSH.  The "private use" DH group 1034 is based on the value
that was picked by strongswan recently.

OK mikeb@@ markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.15 2014/05/06 10:24:22 markus Exp $	*/
d35 8
a42 7
#define IKEV2_STATE_AUTH_REQUEST	4	/* auth received */
#define IKEV2_STATE_AUTH_SUCCESS	5	/* authenticated */
#define IKEV2_STATE_VALID		6	/* authenticated AND validated certs */
#define IKEV2_STATE_EAP_VALID		7	/* EAP validated */
#define IKEV2_STATE_ESTABLISHED		8	/* active IKE SA */
#define IKEV2_STATE_CLOSING		9	/* expect delete for this SA */
#define IKEV2_STATE_CLOSED		10	/* delete this SA */
@


1.15
log
@initiate ike sa rekeying (ikesalifetime keyword), re-queue pfkey
events while we are busy initiating child-SAs; ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.14 2014/04/29 11:51:13 markus Exp $	*/
d244 1
a244 1
#define IKEV2_XFORMDH_MAX		31
@


1.14
log
@make sure the state machine only advances if the AUTH payload has
been verified; with & ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.13 2014/02/14 09:00:03 markus Exp $	*/
d40 2
a41 1
#define IKEV2_STATE_CLOSED		9	/* delete this SA */
@


1.13
log
@initial support for IPComp
still experimental and rekeying needs some work; ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.12 2013/03/30 16:31:37 reyk Exp $	*/
d37 1
a37 1
#define IKEV2_STATE_VALID		6	/* validated peer certs */
@


1.12
log
@Sync with latest IKEv2 Parameters from IANA.  No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.11 2013/01/08 10:38:19 reyk Exp $	*/
d128 1
@


1.11
log
@Remove private CVS tag from an obsolete repository and bump copyright
to 2013 while I'm here... this is my way of saying "happy new year!".
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.10 2012/10/25 15:01:56 reyk Exp $	*/
d45 5
d58 1
d99 1
d126 2
d183 7
d238 5
a242 1
#define IKEV2_XFORMDH_MAX		27
d338 12
d453 1
d480 4
a483 4
#define IKEV2_CFG_INTERNAL_IP4_ADDRESS		1	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP4_NETMASK		2	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP4_DNS		3	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP4_NBNS		4	/* RFC4306 */
d485 4
a488 4
#define IKEV2_CFG_INTERNAL_IP4_DHCP		6	/* RFC4306 */
#define IKEV2_CFG_APPLICATION_VERSION		7	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP6_ADDRESS		8	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP6_DNS		10	/* RFC4306 */
d490 8
a497 4
#define IKEV2_CFG_INTERNAL_IP6_DHCP		12	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP4_SUBNET		13	/* RFC4306 */
#define IKEV2_CFG_SUPPORTED_ATTRIBUTES		14	/* RFC4306 */
#define IKEV2_CFG_INTERNAL_IP6_SUBNET		15	/* RFC4306 */
@


1.10
log
@Move the arrays of default IKE and ESP transforms into parse.y instead
of generating them with genmap from ikev2.h.  They're only really
needed in parse.y and this diff also allows to simplify genmap.sh.
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.9 2012/09/18 12:07:59 reyk Exp $	*/
d4 1
a4 1
 * Copyright (c) 2010-2012 Reyk Floeter <reyk@@openbsd.org>
@


1.9
log
@update email addresses to match reality.
sure jsg@@ mikeb@@
@
text
@d1 1
a1 2
/*	$OpenBSD: ikev2.h,v 1.8 2012/06/29 15:05:49 mikeb Exp $	*/
/*	$vantronix: ikev2.h,v 1.27 2010/05/19 12:20:30 reyk Exp $	*/
d4 1
a4 1
 * Copyright (c) 2010 Reyk Floeter <reyk@@openbsd.org>
a25 33

#define IKEV2_DEFAULT_IKE_TRANSFORM	{			\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_AES_CBC, 256 },	\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_AES_CBC, 192 },	\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_AES_CBC, 128 },	\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_3DES },		\
	{ IKEV2_XFORMTYPE_PRF,	IKEV2_XFORMPRF_HMAC_SHA2_256 },	\
	{ IKEV2_XFORMTYPE_PRF,	IKEV2_XFORMPRF_HMAC_SHA1 },	\
	{ IKEV2_XFORMTYPE_PRF,	IKEV2_XFORMPRF_HMAC_MD5 },	\
	{ IKEV2_XFORMTYPE_INTEGR, IKEV2_XFORMAUTH_HMAC_SHA2_256_128 },\
	{ IKEV2_XFORMTYPE_INTEGR, IKEV2_XFORMAUTH_HMAC_SHA1_96 },\
	{ IKEV2_XFORMTYPE_INTEGR, IKEV2_XFORMAUTH_HMAC_MD5_96 },\
	{ IKEV2_XFORMTYPE_DH,	IKEV2_XFORMDH_MODP_2048_256 },	\
	{ IKEV2_XFORMTYPE_DH,	IKEV2_XFORMDH_MODP_2048 },	\
	{ IKEV2_XFORMTYPE_DH,	IKEV2_XFORMDH_MODP_1536 },	\
	{ IKEV2_XFORMTYPE_DH,	IKEV2_XFORMDH_MODP_1024 },	\
}

extern struct iked_transform ikev2_default_ike_transforms[];
extern size_t ikev2_default_nike_transforms;

#define IKEV2_DEFAULT_ESP_TRANSFORM	{			\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_AES_CBC, 256 },	\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_AES_CBC, 192 },	\
	{ IKEV2_XFORMTYPE_ENCR, IKEV2_XFORMENCR_AES_CBC, 128 },	\
	{ IKEV2_XFORMTYPE_INTEGR, IKEV2_XFORMAUTH_HMAC_SHA2_256_128 },\
	{ IKEV2_XFORMTYPE_INTEGR, IKEV2_XFORMAUTH_HMAC_SHA1_96 },\
	{ IKEV2_XFORMTYPE_ESN,	IKEV2_XFORMESN_ESN },		\
	{ IKEV2_XFORMTYPE_ESN,	IKEV2_XFORMESN_NONE },		\
}

extern struct iked_transform ikev2_default_esp_transforms[];
extern size_t ikev2_default_nesp_transforms;
@


1.8
log
@Add missing ESN bits
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.7 2012/05/07 10:58:38 mikeb Exp $	*/
d5 1
a5 1
 * Copyright (c) 2010 Reyk Floeter <reyk@@vantronix.net>
@


1.7
log
@Sync up several defines with RFC 5996.  IANA has changed the existing
IKEv2 Payload Type "Encrypted" (E) to "Encrypted and Authenticated" (SK).
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.6 2010/07/03 16:59:35 reyk Exp $	*/
d54 1
@


1.6
log
@Better non-debug logging messages when a session is established/closed.
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.5 2010/06/26 18:32:34 reyk Exp $	*/
d123 1
a123 1
#define IKEV2_PAYLOAD_E		46	/* Encrypted */
d316 2
@


1.5
log
@Include the Id type in the generated SA tag that is passed to the
kernel, just like isakmpd does it.  In difference to isakmpd, the Id
type is printed in capital letters, eg. FQDN/foo.example.com, because
it is using the existing print_map() API.  For consistency, rename a
few Id types in grammar and code from the RFC-names to the
OpenBSD-style names; including RFC822_ADDR to UFQDN, IPV4_ADDR to just
IPV4, DER_ASN1_DN to ASN1_DN etc.
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.3 2010/06/14 08:32:45 reyk Exp $	*/
d72 2
a73 2
#define IKEV2_STATE_RUNNING		8	/* active IKE SA */
#define IKEV2_STATE_DELETE		9	/* delete this SA */
@


1.4
log
@rename the ec groups to either ec2n or ecp (eg. ec155 -> ec2n155 or
ec521 -> ecp521).  this matches the common naming for ec groups better.
@
text
@d374 1
a374 1
#define IKEV2_ID_IPV4_ADDR	1	/* RFC4306 */
d376 4
a379 4
#define IKEV2_ID_RFC822_ADDR	3	/* RFC4306 */
#define IKEV2_ID_IPV6_ADDR	5	/* RFC4306 */
#define IKEV2_ID_DER_ASN1_DN	9	/* RFC4306 */
#define IKEV2_ID_DER_ASN1_GN	10	/* RFC4306 */
@


1.3
log
@add define for saproto 0
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.2 2010/06/10 08:29:47 reyk Exp $	*/
d239 2
a240 2
#define IKEV2_XFORMDH_EC_155		3	/* DH Group 3 */
#define IKEV2_XFORMDH_EC_185		4	/* DH Group 3 */
d247 3
a249 3
#define IKEV2_XFORMDH_EC_256		19	/* DH Group 19 */
#define IKEV2_XFORMDH_EC_384		20	/* DH Group 20 */
#define IKEV2_XFORMDH_EC_521		21	/* DH Group 21 */
d253 2
a254 2
#define IKEV2_XFORMDH_EC_192		25	/* DH Group 25 */
#define IKEV2_XFORMDH_EC_224		26	/* DH Group 26 */
@


1.2
log
@i don't like splitting source code in too many source files but ikev2.c
has grown too large, so split it in 3 files and rename a few functions
to organize the code a bit better.
@
text
@d1 1
a1 1
/*	$OpenBSD: ikev2.h,v 1.1 2010/06/03 16:41:12 reyk Exp $	*/
d148 1
@


1.1
log
@Import iked, a new implementation of the IKEv2 protocol.

iked(8) is an automatic keying daemon for IPsec, like isakmpd(8), that
IPsec creates flows and SAs automatically.  Unlike isakmpd, iked(8)
implements the newer IKEv2 protocol instead of IKEv1/ISAKMP.  The
daemon is still work-in-progress and not enabled in the builds, but is
already able to establish IKEv2 sessions with some other IKEv2
implementations as a responder.

with lots of help and debugging by jsg@@
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d78 1
a78 1
 * IKE header (partially compatible with IKEv1)
a80 11
struct ike_header {
	u_int64_t	 ike_ispi;		/* IKE_SA Initiator SPI */
	u_int64_t	 ike_rspi;		/* IKE_SA Responder SPI */
	u_int8_t	 ike_nextpayload;	/* Next payload type */
	u_int8_t	 ike_version;		/* Major/Minor version number */
	u_int8_t	 ike_exchange;		/* Exchange type */
	u_int8_t	 ike_flags;		/* Message options */
	u_int32_t	 ike_msgid;		/* Message identifier */
	u_int32_t	 ike_length;		/* Total message length */
} __packed;

a494 8

/*
 * Internal structures
 */

struct ikev2_message {
	struct ike_header	 im_header;
};
@

