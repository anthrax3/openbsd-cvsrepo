head	1.33;
access;
symbols
	OPENBSD_6_2_BASE:1.33
	OPENBSD_6_1:1.33.0.8
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.33.0.4
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.2
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.30.0.4
	OPENBSD_5_8_BASE:1.30
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.22.0.4
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.26
	OPENBSD_5_0:1.12.0.24
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.22
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.20
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.16
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.18
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.14
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.12
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.10
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.8
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.4
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.33
date	2015.11.21.16.45.41;	author krw;	state Exp;
branches;
next	1.32;
commitid	V1q2C6UMPN69xwYN;

1.32
date	2015.11.12.15.07.41;	author krw;	state Exp;
branches;
next	1.31;
commitid	YcdqZF1BH4pZnMI8;

1.31
date	2015.10.26.15.08.26;	author krw;	state Exp;
branches;
next	1.30;
commitid	fOI5D0M32zdW7eoe;

1.30
date	2015.03.30.17.11.49;	author krw;	state Exp;
branches;
next	1.29;
commitid	PQWtQHYSt0QI2mGM;

1.29
date	2015.03.29.21.16.39;	author krw;	state Exp;
branches;
next	1.28;
commitid	wVztKOyPskKRobDK;

1.28
date	2015.03.28.13.29.16;	author krw;	state Exp;
branches;
next	1.27;
commitid	Gw6r0POX7KLBjKik;

1.27
date	2015.03.26.20.32.10;	author krw;	state Exp;
branches;
next	1.26;
commitid	CHIrWMlaDm6Ai6yT;

1.26
date	2015.03.26.16.32.16;	author krw;	state Exp;
branches;
next	1.25;
commitid	fy8RrvF4AQjcuhPZ;

1.25
date	2015.03.26.14.08.12;	author krw;	state Exp;
branches;
next	1.24;
commitid	2pp42lVbpnraZMs8;

1.24
date	2015.03.16.23.51.50;	author krw;	state Exp;
branches;
next	1.23;
commitid	JG85Pc2Xt4lLAJpr;

1.23
date	2015.03.14.15.21.53;	author krw;	state Exp;
branches;
next	1.22;
commitid	aPXwn1AfAIMw4FVu;

1.22
date	2014.03.31.19.50.52;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2014.03.17.16.40.00;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2014.03.10.21.40.58;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2014.03.07.21.56.13;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.21.18.45.58;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2012.07.11.10.27.34;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2012.07.09.17.19.55;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2012.07.09.17.07.35;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2012.07.08.18.29.28;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2012.07.08.17.46.44;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.21.01.59.24;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2004.09.30.08.27.50;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2004.09.18.23.22.05;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.01.13.19;	author weingart;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.17.19.42.27;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.18.08.38.26;	author kjell;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.18.08.33.10;	author kjell;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.12.12.03.01;	author heko;	state Exp;
branches;
next	1.3;

1.3
date	97.10.16.01.47.11;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.09.29.23.33.38;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.09.29.22.58.18;	author weingart;	state Exp;
branches;
next	;


desc
@@


1.33
log
@Bring GPT partition editing into line with MBR partition editing
by presenting the existing offset and size as the defaults. Enhance
getuint64() to take a minimum value as ask_num() does. Use this to
ensure that GPT partitions are constrained to the valid area of the
disk. Leave MBR partition constraints alone for the moment.

Original problem(s) noted by tim@@
@
text
@/*	$OpenBSD: misc.h,v 1.32 2015/11/12 15:07:41 krw Exp $	*/

/*
 * Copyright (c) 1997 Tobias Weingartner
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MISC_H
#define _MISC_H

struct unit_type {
	char	*abbr;
	int64_t	 conversion;
	char	*lname;
};
extern struct unit_type unit_types[];
#define SECTORS	1	/* units are bytes/sectors/kbytes/mbytes/gbytes */

/* Prototypes */
int unit_lookup(char *);
int string_from_line(char *, size_t);
void ask_cmd(char **, char **);
int ask_num(const char *, int, int, int);
int ask_pid(int, struct uuid *);
char *ask_string(const char *, const char *);
int ask_yn(const char *);
u_int64_t getuint64(char *, u_int64_t, u_int64_t, u_int64_t);
u_int32_t crc32(const u_char *, const u_int32_t);
char *utf16le_to_string(u_int16_t *);
u_int16_t *string_to_utf16le(char *);

#endif /* _MISC_H */
@


1.32
log
@Avoid problems with pathological input during edit operations. i.e. never
attempt to use data past the end of the input.

Since the return value of ask_cmd() is never checked, make it void instead
of int.

Problems found, original diff from and ok tim@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.31 2015/10/26 15:08:26 krw Exp $	*/
d38 1
a38 1
u_int64_t getuint64(char *, u_int64_t, u_int64_t);
@


1.31
log
@Add GPT editing. Based on GSOC 2014 work by Markus Muller.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.30 2015/03/30 17:11:49 krw Exp $	*/
d33 1
a33 1
int ask_cmd(char **, char **);
@


1.30
log
@Even better -- readsector() and writesector() become DISK_readsector() and
DISK_writesector() and live in disk.[ch].
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.29 2015/03/29 21:16:39 krw Exp $	*/
d32 1
d35 1
a35 1
int ask_pid(int, int, int);
d40 2
@


1.29
log
@Rename MBR_readsector() and MBR_writesector() to just readsector()
and writesector(). Move them to misc.[ch]. Soon to be used for more
than MBR reading/writing.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.28 2015/03/28 13:29:16 krw Exp $	*/
a38 2
char *readsector(int, off_t);
int writesector(int, char *, off_t);
@


1.28
log
@Add a simple crc32() implmentation to avoid pulling in libz, which
would complicate install media. Will be used by GPT support.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.27 2015/03/26 20:32:10 krw Exp $	*/
d39 2
@


1.27
log
@Adapt ask_string() from disklabel's getstring(). It will be used
to obtain GPT partition names. Tweak ask_pid() to take low/high
bounds so it can handle 1-ff (MBR) or 1000-ffff (GPT) partition
pids as required. A pid of '0' is still special and disables the
partition.

No visible or intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.26 2015/03/26 16:32:16 krw Exp $	*/
d38 1
@


1.26
log
@Allow input/printing/conversion of terabyte sizes. Which GPT partitons
will eventually be able to use.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.25 2015/03/26 14:08:12 krw Exp $	*/
d34 2
a35 1
int ask_pid(int);
@


1.25
log
@Expand internal representation of partition starting LBA and size
to 64 bits, adjusting printf()'s, etc. as required. Preparing for
GPT partitions. Add 't' size unit. No other intentional functional
change.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.24 2015/03/16 23:51:50 krw Exp $	*/
d24 1
a24 1
	int	conversion;
@


1.24
log
@Stop passing around a pointer to the stack variable 'disk' in main().
There is only one disk being worked on, so just make it a global.

Fewer parameters, less confusion, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.23 2015/03/14 15:21:53 krw Exp $	*/
d36 1
a36 1
u_int32_t getuint(char *, u_int32_t, u_int32_t);
@


1.23
log
@Switch all the license blocks to the standard OpenBSD/ISC license.

With the permission of Toby.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.22 2014/03/31 19:50:52 krw Exp $	*/
d36 1
a36 1
u_int32_t getuint(struct disk *, char *, u_int32_t, u_int32_t);
@


1.22
log
@Nuke [get|put][short|long] and just use letoh[16|32] and
htole[16|32]. This is made possible by a) copying unaligned data
(struct dos_partition's) into properly aligned structs and accessing
the fields of the same; and b) realizing that gcc is smart enough to
access fields in packed struct's *if* it knows it is accessing a
packed struct. Even sparc64 finally gave a thumbs up.

After several attempts and feedback from deraadt@@ and dlg@@, it looks
good to deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.21 2014/03/17 16:40:00 krw Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.21
log
@Nuke pointless blank lines, defines, comments and casts. Eliminate
#include in *.h files in favour of listing them as required in the *.c
files. Fix error message to correctly state that 64 is the minimum
value for -l. Use errx() where errno is not relevant. Use 'continue'
rather than a label to go back to start of a loop.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.20 2014/03/10 21:40:58 krw Exp $	*/
a44 4
u_int16_t getshort(void *);
u_int32_t getlong(void *);
void putshort(void *, u_int16_t);
void putlong(void *, u_int32_t);
@


1.20
log
@No need to pass the name of the command to the function that is
implementing that command, a pointer to the command arguments is the
only thing needed. No need to have a pointer to the command table in
every command, since there is only one table. No need for shiney new
stack space for every command name and arguments parsed, since we
don't recurse we can just use static memory.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.19 2014/03/07 21:56:13 krw Exp $	*/
a30 4
#include "cmd.h"

/* typedefs */

a38 5
/* Constants */
#define ASK_HEX 0x01
#define ASK_DEC 0x02
#define UNIT_TYPE_DEFAULT 1

a51 1

@


1.19
log
@Relieve the code of an overburden of unnecessary typedef
abstraction. Call a 'struct' a 'struct' and not a pony.

No functional change.

idea ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.18 2013/03/21 18:45:58 deraadt Exp $	*/
d50 1
a50 1
int ask_cmd(struct cmd *);
@


1.18
log
@more substantial include cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.17 2012/07/11 10:27:34 krw Exp $	*/
d50 1
a50 1
int ask_cmd(cmd_t *);
d58 1
a58 1
u_int32_t getuint(disk_t *, char *, u_int32_t, u_int32_t);
@


1.17
log
@Simplify guts and calling of getuint(). Eliminate a useless 'help'
capablity by using help text as regular prompt for 'size' and
'offset'. Try to detect and handle more overflow/underflow conditions
in getuint() and ensure returned value is always within requested
bounds. Handle zero-length partitions by treating them as UNUSED.

tested & ok halex@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.16 2012/07/09 17:19:55 krw Exp $	*/
a30 2
#include <sys/types.h>
#include <machine/param.h>
@


1.16
log
@We always want to do unit conversions. So flags parameter of getuint()
is now superflous. With rounding gone the offset parameter is
similarly superfluous. Simply getuint() accordingly.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.15 2012/07/09 17:07:35 krw Exp $	*/
d60 1
a60 1
u_int32_t getuint(disk_t *, char *, char *, u_int32_t, u_int32_t);
@


1.15
log
@I want some of what kjell was smoking 10 years ago when he added
units handling by copying getuint() from disklabel. MBR partition id
and disklabel partition type are different beasts. So deciding to
round off a MBR partition with id FS_BSDFFS meant rounding off
NTFS partitions. And FS_SWAP partitions meant DOS FAT 12. So just
nuke rounding off for now to simplify getuint().

ok beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.14 2012/07/08 18:29:28 krw Exp $	*/
a48 1
#define	DO_CONVERSIONS	0x00000001
d60 1
a60 1
u_int32_t getuint(disk_t *, char *, char *, u_int32_t, u_int32_t, u_int32_t, int);
@


1.14
log
@set_pid() does not need prompt string, low or high parameters. These
are all constants. Independantly suggested by guenther@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.13 2012/07/08 17:46:44 krw Exp $	*/
a49 1
#define	DO_ROUNDING	0x00000002
@


1.13
log
@Split out an ask_pid() function rather than over-parameterizing the
ask_num() function. Remove now unneeded 'flags' and 'help' parameters
from both. Display out of range values in hex in ask_pid(), since
we are seeking hex input.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.12 2005/11/21 01:59:24 krw Exp $	*/
d56 1
a56 1
int ask_pid(const char *, int, int, int);
@


1.12
log
@Replace default DEV_BSIZE sector conversion factor with disklabel's
sector size when possible. Fixes the "[ XX Sectors ]" size display.
Pointed out by Robert Szasz while playing with his Sony Hi-MD device.

Apply input conversion fixes similar to those recently applied to
disklabel(8). Use correct sector size in the conversions.

It is still *not* possible to use unusual sector sizes for non-ISO9660
filesystems!

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.11 2004/09/30 08:27:50 otto Exp $	*/
d55 2
a56 1
int ask_num(const char *, int, int, int, int, void (*help)(void));
@


1.11
log
@remove stray const, noted by david@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.10 2004/09/18 23:22:05 deraadt Exp $	*/
d42 2
a43 1
extern const struct unit_type unit_types[];
@


1.10
log
@some delinting; ok otto
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.9 2003/06/03 01:13:19 weingart Exp $	*/
d37 1
a37 1
const struct unit_type {
@


1.9
log
@Nuke terms 3 & 4.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.8 2002/02/17 19:42:27 millert Exp $	*/
d37 1
a37 1
static const struct unit_type {
a40 7
} unit_types[] = {
	{"b", 1			, "Bytes"},
	{" ", DEV_BSIZE		, "Sectors"},
	{"K", 1024		, "Kilobytes"},
	{"M", 1024 * 1024	, "Megabytes"},
	{"G", 1024 * 1024 *1024	, "Gigabytes"},
	{NULL, 0		, NULL },
d42 1
@


1.8
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.7 2002/02/16 21:27:34 millert Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    This product includes software developed by Tobias Weingartner.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.6 2002/01/18 08:38:26 kjell Exp $	*/
d65 1
a65 1
int ask_num __P((const char *, int, int, int, int, void (*help)(void)));
@


1.6
log
@Allow size values to be displayed in the user's choice of units.
Idea borrowed from disklabel. i.e. Users can now type "print M"
and be rewarded with partition sizes in Megs
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.5 2002/01/18 08:33:10 kjell Exp $	*/
d63 9
a71 9
int unit_lookup __P((char *));
int ask_cmd __P((cmd_t *));
int ask_num __P((const char *, int, int, int, int, void (*help) __P((void))));
int ask_yn __P((const char *));
u_int16_t getshort __P((void *));
u_int32_t getlong __P((void *));
void putshort __P((void *, u_int16_t));
void putlong __P((void *, u_int32_t));
u_int32_t getuint __P((disk_t *, char *, char *, u_int32_t, u_int32_t, u_int32_t, int));
@


1.5
log
@Add disklabel-style editing for size/offset values in
the partition tables. These values may now contain units,
such as "300k" "500M" or "2G".
(sectors, bytes, and cylinders are also supported.)
This should largely eliminate the need for a calculator
when using fdisk on large disks.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.4 2001/08/12 12:03:01 heko Exp $	*/
d37 1
d40 15
d58 1
d63 1
@


1.4
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.3 1997/10/16 01:47:11 deraadt Exp $	*/
d42 2
d53 1
@


1.3
log
@a bunch of improvements by weingart & I
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.2 1997/09/29 23:33:38 mickey Exp $	*/
d52 1
a52 1
#endif _MISC_H
@


1.2
log
@ID in the first line w/ tabs
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.1 1997/09/29 22:58:18 weingart Exp $	*/
d45 1
a45 1
int ask_num __P((const char *, int, int, int, int));
@


1.1
log
@New fdisk code with interactive (command line type)
editing code.  Rewrite from the ground up, save about
20 lines of code.  Seems to create valid partition
tables on i386 and alphas.
@
text
@d1 1
a1 2

/* $OpenBSD$ */
@
