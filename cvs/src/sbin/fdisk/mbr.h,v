head	1.28;
access;
symbols
	OPENBSD_6_2:1.28.0.10
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.28.0.8
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.23.0.4
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.38
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.40
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.36
	OPENBSD_5_0:1.11.0.34
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.32
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.30
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.26
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.28
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.24
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.22
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.20
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.18
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.28
date	2015.11.18.15.31.15;	author krw;	state Exp;
branches;
next	1.27;
commitid	BGaJX0YBjBKscKAZ;

1.27
date	2015.11.13.02.27.17;	author krw;	state Exp;
branches;
next	1.26;
commitid	4K9a6NDKqAi1JXz9;

1.26
date	2015.10.26.15.08.26;	author krw;	state Exp;
branches;
next	1.25;
commitid	fOI5D0M32zdW7eoe;

1.25
date	2015.10.05.01.39.08;	author krw;	state Exp;
branches;
next	1.24;
commitid	2xnXUR8eGYteWRoe;

1.24
date	2015.08.19.17.52.10;	author krw;	state Exp;
branches;
next	1.23;
commitid	8Se7zB6BBBqOYS0w;

1.23
date	2015.03.30.00.39.42;	author krw;	state Exp;
branches;
next	1.22;
commitid	CPVGJQjh0kzNvBPC;

1.22
date	2015.03.29.21.16.39;	author krw;	state Exp;
branches;
next	1.21;
commitid	wVztKOyPskKRobDK;

1.21
date	2015.03.18.14.46.59;	author krw;	state Exp;
branches;
next	1.20;
commitid	9oRFFmwrkHklH7n4;

1.20
date	2015.03.16.23.51.50;	author krw;	state Exp;
branches;
next	1.19;
commitid	JG85Pc2Xt4lLAJpr;

1.19
date	2015.03.14.15.21.53;	author krw;	state Exp;
branches;
next	1.18;
commitid	aPXwn1AfAIMw4FVu;

1.18
date	2015.02.10.01.20.10;	author krw;	state Exp;
branches;
next	1.17;
commitid	ULzYHs9wSJgbDBeo;

1.17
date	2014.03.23.13.56.24;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2014.03.17.16.40.00;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2014.03.09.22.25.06;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2014.03.08.01.54.14;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2014.03.07.21.56.13;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2013.03.21.18.37.07;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.03.01.13.19;	author weingart;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.16.21.27.34;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.18.08.38.26;	author kjell;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.04.08.35.06;	author kjell;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.15.02.12.26;	author kjell;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.12.12.03.01;	author heko;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.28.00.51.47;	author weingart;	state Exp;
branches;
next	1.4;

1.4
date	98.09.14.03.54.35;	author rahnds;	state Exp;
branches;
next	1.3;

1.3
date	97.10.21.22.49.34;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	97.09.29.23.33.36;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.09.29.22.58.17;	author weingart;	state Exp;
branches;
next	;


desc
@@


1.28
log
@Parse the original on-disk MBR into a local variable. Use the
partition table in this variable when doing an 'u'pdate of the MBR.
Remove now superfluous MBR_pcopy() and its re-read of the on-disk MBR.
@
text
@/*	$OpenBSD: mbr.h,v 1.27 2015/11/13 02:27:17 krw Exp $	*/

/*
 * Copyright (c) 1997 Tobias Weingartner
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MBR_H
#define _MBR_H

struct mbr {
	off_t reloffset;
	off_t offset;
	unsigned char code[DOSPARTOFF];
	struct prt part[NDOSPART];
	u_int16_t signature;
};

extern struct mbr initial_mbr;

void MBR_print(struct mbr *, char *);
void MBR_parse(struct dos_mbr *, off_t, off_t, struct mbr *);
void MBR_make(struct mbr *, struct dos_mbr *);
void MBR_init(struct mbr *);
void MBR_init_GPT(struct mbr *);
int MBR_read(off_t, struct dos_mbr *);
int MBR_write(off_t, struct dos_mbr *);
void MBR_zapgpt(struct dos_mbr *, uint64_t);
void MBR_init_GPT(struct mbr *);
int MBR_protective_mbr(struct mbr *);

#endif /* _MBR_H */
@


1.27
log
@Move from opening/closing disk for every i/o to opening the disk once
and saving the fd in the global 'disk' structure. Stop passing around
fd's and just use the global.

Makes pledge() feasible.

Prompted by and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.26 2015/10/26 15:08:26 krw Exp $	*/
a38 1
void MBR_pcopy(struct mbr *);
@


1.26
log
@Add GPT editing. Based on GSOC 2014 work by Markus Muller.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.25 2015/10/05 01:39:08 krw Exp $	*/
d37 2
a38 2
int MBR_read(int, off_t, struct dos_mbr *);
int MBR_write(int, off_t, struct dos_mbr *);
d40 1
a40 1
void MBR_zapgpt(int, struct dos_mbr *, uint64_t);
@


1.25
log
@Enhance '-g' to create a default GPT label in addition to the protective
MBR. If '-b' is specified an EFI System partition of the requested size is
created. All remaining space is put into an OpenBSD partition.

Minimal enhancement necessary for upcoming UEFI install support.
Committed first to flush out any unexpected impacts on 'normal' MBR
operation and install media.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.24 2015/08/19 17:52:10 krw Exp $	*/
d42 1
@


1.24
log
@Missing prototypes. Noted by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.23 2015/03/30 00:39:42 krw Exp $	*/
d41 1
@


1.23
log
@Nuke declaration of unused and non-existant function MBR_print_disk().
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.22 2015/03/29 21:16:39 krw Exp $	*/
d36 1
@


1.22
log
@Rename MBR_readsector() and MBR_writesector() to just readsector()
and writesector(). Move them to misc.[ch]. Soon to be used for more
than MBR reading/writing.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.21 2015/03/18 14:46:59 krw Exp $	*/
a31 1
void MBR_print_disk(char *);
@


1.21
log
@Stop passing around little used 'struct mbr tt' parameter.  Just
make the initial mbr that tt pointed at a global that can be directly
accessed in the couple of places it is needed.

Fewer parameters, less confusion, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.20 2015/03/16 23:51:50 krw Exp $	*/
a39 2
char *MBR_readsector(int, off_t);
int MBR_writesector(int, char *, off_t);
@


1.20
log
@Stop passing around a pointer to the stack variable 'disk' in main().
There is only one disk being worked on, so just make it a global.

Fewer parameters, less confusion, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.19 2015/03/14 15:21:53 krw Exp $	*/
d29 2
@


1.19
log
@Switch all the license blocks to the standard OpenBSD/ISC license.

With the permission of Toby.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.18 2015/02/10 01:20:10 krw Exp $	*/
d32 1
a32 1
void MBR_parse(struct disk *, struct dos_mbr *, off_t, off_t, struct mbr *);
d34 1
a34 1
void MBR_init(struct disk *, struct mbr *);
d37 1
a37 1
void MBR_pcopy(struct disk *, struct mbr *);
@


1.18
log
@If 'write' is issued after a 'reinit' command, and the MBR to be
written does not contain an EFI partition, zap any GPT signature
found on the 2nd (LBA 1) and last sectors on the disk. The install
script uses this sequence.

This is a temporary workaround until more GPT support is imported
post-5.7.

Should fix at least some machines who insist on using the GPT even
after we have overritten the 'protective' MBR.

ok deraadt@@ tedu@@ beck@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.17 2014/03/23 13:56:24 krw Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.17
log
@Change struct mbr signature field type from 'unsigned short' to
'u_int16_t' to be consistant with disklabel.h's struct dos_mbr.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.16 2014/03/17 16:40:00 krw Exp $	*/
d47 3
@


1.16
log
@Nuke pointless blank lines, defines, comments and casts. Eliminate
#include in *.h files in favour of listing them as required in the *.c
files. Fix error message to correctly state that 64 is the minimum
value for -l. Use errx() where errno is not relevant. Use 'continue'
rather than a label to go back to start of a loop.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.15 2014/03/09 22:25:06 krw Exp $	*/
d36 1
a36 1
	unsigned short signature;
@


1.15
log
@Instead of passing around 'char buf[DEV_BSIZE]' buffers, pass around
'struct dos_mbr' variables, since that is what the buffers were used
for. Removes need to know about DEV_BSIZE and thus include param.h
from all files but one so move the param.h #include to that file
(mbr.c).

Nuke a bunch of local MBR #defines in favour of the disklabel.h ones.

Remove a bunch of unneeded #includes, replace the odd malloc/bzero
with calloc, replace equally odd bcopy's with memcpy, remove a stray
duplicate MBR parsing in MBR_pcopy().

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.14 2014/03/08 01:54:14 krw Exp $	*/
a30 3
#include "part.h"

/* MBR type */
a38 1
/* Prototypes */
a48 1

@


1.14
log
@It's silly to check at compile time for DEV_BSIZE == 512.

ok deraadt@@ with gritted teeth on keeping <sys/param.h> for now.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.13 2014/03/07 21:56:13 krw Exp $	*/
a30 2
#include <sys/param.h>

a32 7
/* Various constants */
#define MBR_CODE_SIZE 0x1BE
#define MBR_PART_SIZE	0x10
#define MBR_PART_OFF 0x1BE
#define MBR_SIG_OFF 0x1FE


d37 1
a37 1
	unsigned char code[MBR_CODE_SIZE];
d45 2
a46 2
void MBR_parse(struct disk *, char *, off_t, off_t, struct mbr *);
void MBR_make(struct mbr *, char *);
d48 2
a49 2
int MBR_read(int, off_t, char *);
int MBR_write(int, off_t, char *);
@


1.13
log
@Relieve the code of an overburden of unnecessary typedef
abstraction. Call a 'struct' a 'struct' and not a pony.

No functional change.

idea ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.12 2013/03/21 18:37:07 deraadt Exp $	*/
d31 2
a59 6

/* Sanity check */
#include <sys/param.h>
#if (DEV_BSIZE != 512)
#error "DEV_BSIZE != 512, somebody better fix me!"
#endif
@


1.12
log
@I don't feel great about adding an include for <sys/param.h>, but I feel
great for removing an include of <machine/param.h>
This needs further cleanup if someone has time.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.11 2003/06/03 01:13:19 weingart Exp $	*/
d41 1
a41 1
typedef struct _mbr_t {
d45 1
a45 1
	prt_t part[NDOSPART];
d47 1
a47 1
} mbr_t;
d51 4
a54 4
void MBR_print(mbr_t *, char *);
void MBR_parse(disk_t *, char *, off_t, off_t, mbr_t *);
void MBR_make(mbr_t *, char *);
void MBR_init(disk_t *, mbr_t *);
d57 1
a57 1
void MBR_pcopy(disk_t *, mbr_t *);
@


1.11
log
@Nuke terms 3 & 4.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.10 2002/02/16 21:27:34 millert Exp $	*/
d60 1
a60 1
#include <machine/param.h>
@


1.10
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.9 2002/01/18 08:38:26 kjell Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    This product includes software developed by Tobias Weingartner.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.9
log
@Allow size values to be displayed in the user's choice of units.
Idea borrowed from disklabel. i.e. Users can now type "print M"
and be rewarded with partition sizes in Megs
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.8 2002/01/04 08:35:06 kjell Exp $	*/
d55 8
a62 8
void MBR_print_disk __P((char *));
void MBR_print __P((mbr_t *, char *));
void MBR_parse __P((disk_t *, char *, off_t, off_t, mbr_t *));
void MBR_make __P((mbr_t *, char *));
void MBR_init __P((disk_t *, mbr_t *));
int MBR_read __P((int, off_t, char *));
int MBR_write __P((int, off_t, char *));
void MBR_pcopy __P((disk_t *, mbr_t *));
@


1.8
log
@Remove references to the NT serial number. Now the first 0x1be
bytes of the MBR are treated as code for the purposes of the
(u)pdate command. This is consistent with the new -u flag.
This means boot managers like BootEasy can now be written
out correctly. Note that rewriting the MBR now whacks the
NT serial number - a behavior that is consistent with
the DOS FDISK /MBR.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.7 2001/12/15 02:12:26 kjell Exp $	*/
d56 1
a56 1
void MBR_print __P((mbr_t *));
@


1.7
log
@Get this damn diff out of my tree. ok from weingart@@, deraadt@@ and others.
Add a -u flag to fdisk which updates MBR code, but leaves the partition
table intact. There are still issues with 'update' having different behavior,
but I'll resolve those shortly
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.6 2001/08/12 12:03:01 heko Exp $	*/
d39 1
a39 1
#define MBR_CODE_SIZE 0x1B8
a41 2
#define MBR_NTSER_OFF 0x1B8
#define MBR_SPARE_OFF 0x1BC		/* Spare short, not used */
a49 2
	unsigned long nt_serial;
	unsigned short spare;
@


1.6
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.5 2001/01/28 00:51:47 weingart Exp $	*/
d66 1
@


1.5
log
@Quick -Wall fixes, ok niklas@@, aaron@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.4 1998/09/14 03:54:35 rahnds Exp $	*/
d73 1
a73 1
#endif _MBR_H
@


1.4
log
@Since on the powerpc, the system does not supply the user with
bios valid cyl,head,sector information (the information comes from the
sd driver) I have made some changes to fdisk to do the following.

Allow the powerpc to specify values larger than the bios limits.

All platforms now have code that will translate the LBA values
in the mbr into CHS values according to the disk geometry.
This occurs if the start and ending CHS values have been stored as
0xffffff.

If writing to the disk and one of the values of a partition violates
the bios limits, it writes the requested values in the LBA fields ,
and stores 0xffffff for the starting and ending CHS values.

This should not change the default formatting of any existing system
other than the CHS and LBA values should always match given the detected
geometry of the disk.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.3 1997/10/21 22:49:34 provos Exp $	*/
d63 1
d70 1
a70 1
#error "DEV_BSIZE != 512, somebody better fix!"
@


1.3
log
@make fdisk grok extended partitions again. we have to keep track of the
absolute offset of the current mbr and its relative position. because:
the starting sector of the first mbr entry in an extended partition is relative
to the starting offset of the whole mbr itself. the starting offset of a new
extended partition is relative to the offset of the very first extended
partition.
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.2 1997/09/29 23:33:36 mickey Exp $	*/
d61 1
a61 1
void MBR_parse __P((char *, off_t, off_t, mbr_t *));
@


1.2
log
@ID in the first line w/ tabs
@
text
@d1 1
a1 1
/*	$OpenBSD: mbr.h,v 1.1 1997/09/29 22:58:17 weingart Exp $	*/
d49 2
d61 1
a61 1
void MBR_parse __P((char *, mbr_t *));
@


1.1
log
@New fdisk code with interactive (command line type)
editing code.  Rewrite from the ground up, save about
20 lines of code.  Seems to create valid partition
tables on i386 and alphas.
@
text
@d1 1
a1 2

/* $OpenBSD$ */
@
