head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.9.0.38
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.36
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.32
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.34
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.30
	OPENBSD_5_0:1.9.0.28
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.26
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.24
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.20
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.22
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.18
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.16
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.14
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.12
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.10
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.8
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.6
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4;
locks; strict;
comment	@ * @;


1.19
date	2015.12.01.06.25.43;	author krw;	state Exp;
branches;
next	1.18;
commitid	3yqmv4fQXNy47uT4;

1.18
date	2015.10.26.15.08.26;	author krw;	state Exp;
branches;
next	1.17;
commitid	fOI5D0M32zdW7eoe;

1.17
date	2015.03.18.14.46.59;	author krw;	state Exp;
branches;
next	1.16;
commitid	9oRFFmwrkHklH7n4;

1.16
date	2015.03.17.21.42.15;	author krw;	state Exp;
branches;
next	1.15;
commitid	XLe2uvrVSjySe36w;

1.15
date	2015.03.16.23.51.50;	author krw;	state Exp;
branches;
next	1.14;
commitid	JG85Pc2Xt4lLAJpr;

1.14
date	2015.03.14.15.21.53;	author krw;	state Exp;
branches;
next	1.13;
commitid	aPXwn1AfAIMw4FVu;

1.13
date	2014.03.31.22.03.29;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2014.03.17.16.40.00;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2014.03.10.21.40.58;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2014.03.07.21.56.13;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.19.15.48.20;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.01.13.19;	author weingart;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.12.12.03.01;	author heko;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.01.21.05.33;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	97.10.16.10.35.06;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.10.16.01.47.09;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.09.29.23.33.33;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.09.29.22.58.14;	author weingart;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Make '-i' set 'reinited' flag so that the initial Xwrite() will zap
any undesirable GPT hanging around. i.e. same as 'reinit' from the
fdisk(8) command line. Noticed now that install media relies on
'-i' rather than issuing 'reinit' in a script.
@
text
@/*	$OpenBSD: cmd.h,v 1.18 2015/10/26 15:08:26 krw Exp $	*/

/*
 * Copyright (c) 1997 Tobias Weingartner
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _CMD_H
#define _CMD_H

#define CMD_EXIT	0x0000
#define CMD_SAVE	0x0001
#define CMD_CONT	0x0002
#define CMD_CLEAN	0x0003
#define CMD_DIRTY	0x0004

struct cmd {
	char *cmd;
	int  gpt;
	int (*fcn)(char *, struct mbr *);
	char *help;
};
extern struct cmd cmd_table[];

extern int reinited;

int Xreinit(char *, struct mbr *);
int Xdisk(char *, struct mbr *);
int Xmanual(char *, struct mbr *);
int Xedit(char *, struct mbr *);
int Xsetpid(char *, struct mbr *);
int Xselect(char *, struct mbr *);
int Xswap(char *, struct mbr *);
int Xprint(char *, struct mbr *);
int Xwrite(char *, struct mbr *);
int Xexit(char *, struct mbr *);
int Xquit(char *, struct mbr *);
int Xabort(char *, struct mbr *);
int Xhelp(char *, struct mbr *);
int Xflag(char *, struct mbr *);
int Xupdate(char *, struct mbr *);

#endif /* _CMD_H */
@


1.18
log
@Add GPT editing. Based on GSOC 2014 work by Markus Muller.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.17 2015/03/18 14:46:59 krw Exp $	*/
d35 2
@


1.17
log
@Stop passing around little used 'struct mbr tt' parameter.  Just
make the initial mbr that tt pointed at a global that can be directly
accessed in the couple of places it is needed.

Fewer parameters, less confusion, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.16 2015/03/17 21:42:15 krw Exp $	*/
d30 1
@


1.16
log
@Stop passing around little used and superfluous 'offset' parameter.
Just use the offset recorded/parsed in the struct mbr being used.

Can still traverse/edit extended MBRs so offset really wasn't needed.

Fewer parameters, less confusion, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.15 2015/03/16 23:51:50 krw Exp $	*/
d30 1
a30 1
	int (*fcn)(char *, struct mbr *, struct mbr *);
d35 15
a49 15
int Xreinit(char *, struct mbr *, struct mbr *);
int Xdisk(char *, struct mbr *, struct mbr *);
int Xmanual(char *, struct mbr *, struct mbr *);
int Xedit(char *, struct mbr *, struct mbr *);
int Xsetpid(char *, struct mbr *, struct mbr *);
int Xselect(char *, struct mbr *, struct mbr *);
int Xswap(char *, struct mbr *, struct mbr *);
int Xprint(char *, struct mbr *, struct mbr *);
int Xwrite(char *, struct mbr *, struct mbr *);
int Xexit(char *, struct mbr *, struct mbr *);
int Xquit(char *, struct mbr *, struct mbr *);
int Xabort(char *, struct mbr *, struct mbr *);
int Xhelp(char *, struct mbr *, struct mbr *);
int Xflag(char *, struct mbr *, struct mbr *);
int Xupdate(char *, struct mbr *, struct mbr *);
@


1.15
log
@Stop passing around a pointer to the stack variable 'disk' in main().
There is only one disk being worked on, so just make it a global.

Fewer parameters, less confusion, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.14 2015/03/14 15:21:53 krw Exp $	*/
d30 1
a30 1
	int (*fcn)(char *, struct mbr *, struct mbr *, int);
d35 15
a49 15
int Xreinit(char *, struct mbr *, struct mbr *, int);
int Xdisk(char *, struct mbr *, struct mbr *, int);
int Xmanual(char *, struct mbr *, struct mbr *, int);
int Xedit(char *, struct mbr *, struct mbr *, int);
int Xsetpid(char *, struct mbr *, struct mbr *, int);
int Xselect(char *, struct mbr *, struct mbr *, int);
int Xswap(char *, struct mbr *, struct mbr *, int);
int Xprint(char *, struct mbr *, struct mbr *, int);
int Xwrite(char *, struct mbr *, struct mbr *, int);
int Xexit(char *, struct mbr *, struct mbr *, int);
int Xquit(char *, struct mbr *, struct mbr *, int);
int Xabort(char *, struct mbr *, struct mbr *, int);
int Xhelp(char *, struct mbr *, struct mbr *, int);
int Xflag(char *, struct mbr *, struct mbr *, int);
int Xupdate(char *, struct mbr *, struct mbr *, int);
@


1.14
log
@Switch all the license blocks to the standard OpenBSD/ISC license.

With the permission of Toby.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.13 2014/03/31 22:03:29 krw Exp $	*/
d30 1
a30 2
	int (*fcn)(char *, struct disk *, struct mbr *, struct mbr *,
	    int);
d35 15
a49 15
int Xreinit(char *, struct  disk *, struct mbr *, struct mbr *, int);
int Xdisk(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xmanual(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xedit(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xsetpid(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xselect(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xswap(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xprint(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xwrite(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xexit(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xquit(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xabort(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xhelp(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xflag(char *, struct disk *, struct mbr *, struct mbr *, int);
int Xupdate(char *, struct disk *, struct mbr *, struct mbr *, int);
@


1.13
log
@Whitespace rectification.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.12 2014/03/17 16:40:00 krw Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.12
log
@Nuke pointless blank lines, defines, comments and casts. Eliminate
#include in *.h files in favour of listing them as required in the *.c
files. Fix error message to correctly state that 64 is the minimum
value for -l. Use errx() where errno is not relevant. Use 'continue'
rather than a label to go back to start of a loop.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.11 2014/03/10 21:40:58 krw Exp $	*/
a61 2


@


1.11
log
@No need to pass the name of the command to the function that is
implementing that command, a pointer to the command arguments is the
only thing needed. No need to have a pointer to the command table in
every command, since there is only one table. No need for shiney new
stack space for every command name and arguments parsed, since we
don't recurse we can just use static memory.

No intentional functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.10 2014/03/07 21:56:13 krw Exp $	*/
a30 6
/* Includes */
#include "disk.h"
#include "mbr.h"


/* Constants (returned by cmd funs) */
a36 2

/* Data types */
a42 1

a44 1
/* Prototypes */
@


1.10
log
@Relieve the code of an overburden of unnecessary typedef
abstraction. Call a 'struct' a 'struct' and not a pony.

No functional change.

idea ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.9 2005/01/19 15:48:20 deraadt Exp $	*/
a44 1
struct cmd_table;
a45 6
	struct cmd_table *table;
	char cmd[10];
	char args[100];
};

struct cmd_table {
d47 1
a47 1
	int (*fcn)(struct cmd *, struct disk *, struct mbr *, struct mbr *,
d52 2
d55 15
a69 15
int Xreinit(struct cmd *, struct  disk *, struct mbr *, struct mbr *, int);
int Xdisk(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xmanual(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xedit(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xsetpid(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xselect(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xswap(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xprint(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xwrite(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xexit(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xquit(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xabort(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xhelp(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xflag(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
int Xupdate(struct cmd *, struct disk *, struct mbr *, struct mbr *, int);
@


1.9
log
@add a swap primitive; ok various, will be polished after by tom
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.8 2003/06/03 01:13:19 weingart Exp $	*/
d45 3
a47 3
struct _cmd_table_t;
typedef struct _cmd_t {
	struct _cmd_table_t *table;
d50 1
a50 1
} cmd_t;
d52 1
a52 1
typedef struct _cmd_table_t {
d54 2
a55 1
	int (*fcn)(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
d57 1
a57 2
} cmd_table_t;

d60 15
a74 15
int Xreinit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xdisk(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xmanual(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xedit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xsetpid(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xselect(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xswap(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xprint(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xwrite(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xexit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xquit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xabort(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xhelp(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xflag(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xupdate(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
@


1.8
log
@Nuke terms 3 & 4.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.7 2002/02/16 21:27:34 millert Exp $	*/
d66 1
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.6 2001/08/12 12:03:01 heko Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    This product includes software developed by Tobias Weingartner.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.6
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.5 2001/01/01 21:05:33 angelos Exp $	*/
d65 14
a78 14
int Xreinit __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xdisk __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xmanual __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xedit __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xsetpid __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xselect __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xprint __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xwrite __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xexit __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xquit __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xabort __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xhelp __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xflag __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
int Xupdate __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
@


1.5
log
@New command "setpid", just changes the ID of a partition (no other
parameters editing) -- vassilip@@dsl.cis.upenn.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.4 1997/10/16 10:35:06 deraadt Exp $	*/
d80 1
a80 1
#endif _CMD_H
@


1.4
log
@new command: manual
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.3 1997/10/16 01:47:09 deraadt Exp $	*/
d69 1
@


1.3
log
@a bunch of improvements by weingart & I
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.2 1997/09/29 23:33:33 mickey Exp $	*/
d67 1
@


1.2
log
@ID in the first line w/ tabs
@
text
@d1 1
a1 1
/*	$OpenBSD: cmd.h,v 1.1 1997/09/29 22:58:14 weingart Exp $	*/
d41 1
a41 1
/* Constants (returned by cmd funs */
d43 4
a46 3
#define CMD_CONT	0x0001
#define CMD_CLEAN	0x0002
#define CMD_DIRTY	0x0003
d65 1
a65 1
int Xinit __P((cmd_t *, disk_t *, mbr_t *, mbr_t *, int));
d73 1
@


1.1
log
@New fdisk code with interactive (command line type)
editing code.  Rewrite from the ground up, save about
20 lines of code.  Seems to create valid partition
tables on i386 and alphas.
@
text
@d1 1
a1 2

/* $OpenBSD$ */
@
