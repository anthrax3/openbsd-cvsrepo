head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.12
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.18
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.16
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.12
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.10
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.16
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.12
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.10.08.16.27.53;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	0zFRxN2apca4J66f;

1.6
date	2010.08.12.15.26.34;	author jsing;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.27.22.30.09;	author thib;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.09.08.13.05;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.17.19.42.27;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.16.21.27.34;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.10.20.08.36.25;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@replace internal erealloc() with ereallocarray(), and then use it to
spot mult int overflow
@
text
@/*	$OpenBSD: fsutil.h,v 1.6 2010/08/12 15:26:34 jsing Exp $	*/
/*	$NetBSD: fsutil.h,v 1.3 1996/10/03 20:06:31 christos Exp $	*/

/*
 * Copyright (c) 1996 Christos Zoulas.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

void xperror(const char *);
void errexit(const char *, ...)
    __attribute__((__noreturn__,__format__(__printf__,1,2)));
void pfatal(const char *, ...)
    __attribute__((__format__(__printf__,1,2)));
void pwarn(const char *, ...)
    __attribute__((__format__(__printf__,1,2)));
void panic(const char *, ...)
    __attribute__((__noreturn__,__format__(__printf__,1,2)));
char *rawname(char *);
char *unrawname(char *);
char *blockcheck(char *);
const char *cdevname(void);
void setcdevname(const char *, const char *, int);
int  hotroot(void);
void *emalloc(size_t);
void *ereallocarray(void *, size_t, size_t);
char *estrdup(const char *);

#define CHECK_PREEN	1
#define	CHECK_VERBOSE	2
#define	CHECK_DEBUG	4

struct fstab;
int checkfstab(int, int, void *(*)(struct fstab *),
    int (*) (const char *, const char *, const char *, void *, pid_t *));
@


1.6
log
@Print the real device name followed by the disklabel UID in parenthesis
when fsck is run against a disklabel UID. This allows a user to determine
which device is really being scanned.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: fsutil.h,v 1.4 2002/06/09 08:13:05 todd Exp $	*/
d49 1
a49 1
void *erealloc(void *, size_t);
@


1.5
log
@newline fix + s/perror/xperror since we are
using a home rolled version.

ok pedro@@
@
text
@d46 1
a46 1
void setcdevname(const char *, int);
@


1.4
log
@rm trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: fsutil.h,v 1.3 2002/02/17 19:42:27 millert Exp $	*/
d33 1
a33 1
void perror(const char *);
@


1.3
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: fsutil.h,v 1.2 2002/02/16 21:27:34 millert Exp $	*/
d35 1
a35 1
    __attribute__((__noreturn__,__format__(__printf__,1,2)));  
d37 1
a37 1
    __attribute__((__format__(__printf__,1,2)));  
d39 1
a39 1
    __attribute__((__format__(__printf__,1,2)));  
d41 1
a41 1
    __attribute__((__noreturn__,__format__(__printf__,1,2)));  
d57 1
a57 1
int checkfstab(int, int, void *(*)(struct fstab *), 
@


1.2
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: fsutil.h,v 1.1 1996/10/20 08:36:25 tholo Exp $	*/
d57 2
a58 2
int checkfstab __P((int, int, void *(*)(struct fstab *), 
    int (*) (const char *, const char *, const char *, void *, pid_t *)));
@


1.1
log
@Sync with NetBSD 961019
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 2
a34 2
void perror __P((const char *));
void errexit __P((const char *, ...))
d36 1
a36 1
void pfatal __P((const char *, ...))
d38 1
a38 1
void pwarn __P((const char *, ...))
d40 1
a40 1
void panic __P((const char *, ...))
d42 9
a50 9
char *rawname __P((char *));
char *unrawname __P((char *));
char *blockcheck __P((char *));
const char *cdevname __P((void));
void setcdevname __P((const char *, int));
int  hotroot __P((void));
void *emalloc __P((size_t));
void *erealloc __P((void *, size_t));
char *estrdup __P((const char *));
@

