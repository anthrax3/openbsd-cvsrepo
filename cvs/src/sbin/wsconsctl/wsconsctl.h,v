head	1.16;
access;
symbols
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.15.0.10
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.6
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.13.0.12
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.10
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.2
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.8
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.18
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.16
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.14
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.12
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.10
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.8
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.6
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2017.07.21.20.38.20;	author bru;	state Exp;
branches;
next	1.15;
commitid	ob8Bi51A764QwCzw;

1.15
date	2015.05.08.19.12.51;	author miod;	state Exp;
branches;
next	1.14;
commitid	f9koLQKgnj7EYOLZ;

1.14
date	2013.10.20.22.07.57;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2010.08.20.00.20.55;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2010.07.01.16.47.58;	author maja;	state Exp;
branches;
next	1.11;

1.11
date	2010.07.01.02.37.22;	author maja;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.28.20.40.39;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.15.20.32.28;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.26.05.42.06;	author ray;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.08.20.51.58;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.17.07.10.25;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.22.20.36.06;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.38;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.30.02.12.57;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.08.22.31.09;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.01.23.52.45;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Add fields for wsmouse/touchpad configuration.
@
text
@/*	$OpenBSD: wsconsctl.h,v 1.15 2015/05/08 19:12:51 miod Exp $	*/
/*	$NetBSD: wsconsctl.h 1.1 1998/12/28 14:01:17 hannken Exp $ */

/*-
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Juergen Hannken-Illjes.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <dev/wscons/wsksymvar.h>

struct field {
	char *name;
	void *valp;
#define FMT_UINT	1		/* unsigned integer */
#define FMT_INT		2		/* signed integer */
#define FMT_BOOL	3		/* boolean on/off */
#define FMT_PC		4		/* percentage fixed point 000.00 */
#define FMT_KBDTYPE	101		/* keyboard type */
#define FMT_MSTYPE	102		/* mouse type */
#define FMT_DPYTYPE	103		/* display type */
#define FMT_KBDENC	104		/* keyboard encoding */
#define FMT_KBMAP	105		/* keyboard map */
#define FMT_SCALE	106		/* wsmouse scale */
#define FMT_EMUL	107		/* wsdisplay emulations */
#define FMT_SCREEN	108		/* wsdisplay screen types */
#define FMT_STRING	109		/* free string */
#define FMT_CFG		201		/* wsmouse parameters */
	int format;
#define FLG_RDONLY	0x0001		/* variable cannot be modified */
#define FLG_WRONLY	0x0002		/* variable cannot be displayed */
#define FLG_NOAUTO	0x0004		/* skip variable on -a flag */
#define FLG_MODIFY	0x0008		/* variable may be modified with += */
#define	FLG_NORDBACK	0x0010		/* do not read back variable after write */
#define FLG_GET		0x0100		/* read this variable from driver */
#define FLG_SET		0x0200		/* write this variable to driver */
#define FLG_INIT	0x0400		/* init (read) before write */
#define FLG_DEAD	0x0800		/* the var isn't there, let it rest */
	int flags;
};

struct field_pc {
	int max, min, cur;
};

struct field *
	field_by_name(struct field *, char *);
struct field *
	field_by_value(struct field *, void *);
void	pr_field(const char *, struct field *, const char *);
void	rd_field(struct field *, char *, int);
int	name2ksym(char *);
char *	ksym2name(int);
void	ksymenc(int);
keysym_t ksym_upcase(keysym_t);
void	keyboard_get_values(int);
int	keyboard_put_values(int);
char *	keyboard_next_device(int);
void	mouse_init(int,int);
void	mouse_get_values(int);
int	mouse_put_values(int);
char *	mouse_next_device(int);
void	display_get_values(int);
int	display_put_values(int);
char *	display_next_device(int);
int	yyparse(void);
void	yyerror(char *);
int	yylex(void);
void	map_scan_setinput(char *);
@


1.15
log
@Add a new `don't read back' flag for variables, to prevent reading their value
after modifying them. Give this flag to `display.focus', since screen
switching is asynchronous, and reading back will return the screen we are
switching from if the switch has not completed yet.

Also, disallow -= and += syntax for display.focus, as it doesn't make any sense.
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.14 2013/10/20 22:07:57 miod Exp $	*/
d51 1
d82 1
@


1.14
log
@Introduce write-only (for now) display.font parameter, which issues a
WSDISPLAYIO_USEFONT ioctl, asking the wsdisplay driver to change its
current display font to the one requested (by name).
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.13 2010/08/20 00:20:55 fgsch Exp $	*/
d56 1
@


1.13
log
@Don't silently ignore errors if we cannot open the device. While I'm here
simplify the code and apply some style(9).
Discussed with and ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.12 2010/07/01 16:47:58 maja Exp $	*/
d49 2
a50 1
#define FMT_SCREEN	108		/* wddisplay screen types */
@


1.12
log
@Learn wsconsctl to handle more than the first keyboard, mouse and display.
E.g. if we have a /dev/wskbd1 keyboard1 will show up when doing a -a.

wsconsctl keyboard1 will now show you all variables for keyboard1.

feedback and ok miod@@. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.11 2010/07/01 02:37:22 maja Exp $	*/
d66 9
a74 7
struct field *field_by_name(struct field *, char *);
struct field *field_by_value(struct field *, void *);
void pr_field(const char *, struct field *, const char *);
void rd_field(struct field *, char *, int);
int name2ksym(char *);
char *ksym2name(int);
void ksymenc(int);
d76 13
a88 13
void keyboard_get_values(const char *,int);
int keyboard_put_values(const char *,int);
int keyboard_next_device(int *);
void mouse_get_values(const char *,int);
int mouse_put_values(const char *,int);
int mouse_next_device(int *);
void display_get_values(const char *,int);
int display_put_values(const char *,int);
int display_next_device(int *);
int yyparse(void);
void yyerror(char *);
int yylex(void);
void map_scan_setinput(char *);
@


1.11
log
@add screen types and emulations to things to be shown for displays.
ok miod@@. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.10 2010/06/28 20:40:39 maja Exp $	*/
d76 1
d79 1
d82 1
@


1.10
log
@A long time ago when wsconsctl was written it expected that ksym was uniq.
That isn't the case. eg thorn, Cyrillic_CHE, L2_tcedilla, L5_scedilla and
L7_zcaron has the same (0xfe). So you have a 20% chance to get the right
output from wsconsctl.

Use the ksym name to decide which ksyms isn't Latin-1. Store that information
in the ksym tables. The use the keyboard encoding to make an educated guess
of which character to return.

Let say your encoding is pl. You have Latin-2 characters in the map.
Then check first for Latin-2 characters if none found try Latin-1.

ok miod@@

-moj
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.9 2009/07/15 20:32:28 martynas Exp $	*/
d48 2
@


1.9
log
@for rw query and print value that has actually been set in the
similar way that mixerctl does.  so that info for setting things
like brightness makes sense (since we scale, like, 8 values to
per-cent).  also, it consistifies get/put, shrinks code since we
don't need to do that in every single 'driver'.  ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.8 2008/06/26 05:42:06 ray Exp $	*/
d70 1
@


1.8
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.7 2007/05/08 20:51:58 robert Exp $	*/
d72 1
a72 1
void keyboard_put_values(const char *,int);
d74 1
a74 1
void mouse_put_values(const char *,int);
d76 1
a76 1
void display_put_values(const char *,int);
@


1.7
log
@Introduce the mouse.rawmode and mouse.scale fields for
touchscreen calibration via ioctls.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.6 2002/12/17 07:10:25 mickey Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.6
log
@display.focus is a signed int, make it so; this fixes a problem under x11, which is now a correct -1
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.5 2002/05/22 20:36:06 mickey Exp $	*/
d54 1
@


1.5
log
@implement new type: %%, given min,cur,max print the value in %%.
also accepts -= and += to adjust the value.
implement new flags: INIT, DEAD.
init means to prefetch the variable before setting, where
dead means to assume the variable is not implemented
(enottty was observed, most likely), set by the low-level
routines (upon observing the ioctl results).
add the variables for screen brightness,contrast,backlight --
all are precent-type, also rework the display.c to be easier
on the eyes. requested, commented and helped upon by miod@@ and drahn@@.
there was a discussion on wheather truncate or round
(the thin and think ends of the same egg) where
decided to allow it to truncate until demanded
otherwise by the eager masses.
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.4 2002/02/16 21:27:38 millert Exp $	*/
d46 3
a48 2
#define FMT_BOOL	2		/* boolean on/off */
#define FMT_PC		3		/* percentage fixed point 000.00 */
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.3 2001/06/30 02:12:57 mickey Exp $	*/
d47 1
d60 2
d63 4
@


1.3
log
@make it more sysctl-like, ommit -kmd switches.
no backwards compatibility keeped.
add ability to change screens from cmd line.
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.2 2001/05/08 22:31:09 mickey Exp $	*/
d62 17
a78 17
struct field *field_by_name __P((struct field *, char *));
struct field *field_by_value __P((struct field *, void *));
void pr_field __P((const char *, struct field *, const char *));
void rd_field __P((struct field *, char *, int));
int name2ksym __P((char *));
char *ksym2name __P((int));
keysym_t ksym_upcase __P((keysym_t));
void keyboard_get_values __P((const char *,int));
void keyboard_put_values __P((const char *,int));
void mouse_get_values __P((const char *,int));
void mouse_put_values __P((const char *,int));
void display_get_values __P((const char *,int));
void display_put_values __P((const char *,int));
int yyparse __P((void));
void yyerror __P((char *));
int yylex __P((void));
void map_scan_setinput __P((char *));
@


1.2
log
@add more display variables (for screen burner).
implement boolean type for variables.
@
text
@d1 1
a1 1
/*	$OpenBSD: wsconsctl.h,v 1.1 2000/07/01 23:52:45 mickey Exp $	*/
d62 3
a64 4
void field_setup __P((struct field *, int));
struct field *field_by_name __P((char *));
struct field *field_by_value __P((void *));
void pr_field __P((struct field *, char *));
d69 6
a74 6
void keyboard_get_values __P((int));
void keyboard_put_values __P((int));
void mouse_get_values __P((int));
void mouse_put_values __P((int));
void display_get_values __P((int));
void display_put_values __P((int));
@


1.1
log
@wscons control tool; initial import from newtbsd tree
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
@

