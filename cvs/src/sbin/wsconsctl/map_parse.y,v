head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.22
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.18
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.14
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.16
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.8
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.12
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.10
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.6
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.14
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2012.07.14.08.27.05;	author shadchin;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.14.06.19.51;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2012.01.31.18.32.52;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.26.05.42.06;	author ray;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.38;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.26.17.35.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.01.23.52.45;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fix typo in comment

ok deraadt@@
@
text
@/*	$OpenBSD: map_parse.y,v 1.6 2012/05/14 06:19:51 jsg Exp $	*/
/*	$NetBSD: map_parse.y,v 1.2 1999/02/08 11:08:23 hannken Exp $ */

/*-
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Juergen Hannken-Illjes.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/* Parse a keyboard map. Statements are one of
 *
 * keysym sym1 = sym2		Assign the key containing `sym2' to
 *				the key containing `sym1'. This is a copy
 *				from the old to the new map. Therefore it
 *				is possible to exchange keys.
 *
 * keycode pos = sym ...	assign the symbols to key `pos'.
 *				The first symbol may be a command.
 *				The following symbols are assigned
 *				to the normal and altgr groups.
 *				Missing symbols are generated automatically
 *				as either the upper case variant or the
 *				normal group.
 */

%{

#include <sys/time.h>
#include <dev/wscons/wsksymdef.h>
#include <dev/wscons/wsconsio.h>
#include <err.h>
#include "wsconsctl.h"

extern struct wskbd_map_data kbmap;	/* from keyboard.c */

static struct wscons_keymap mapdata[KS_NUMKEYCODES];
struct wskbd_map_data newkbmap;		/* used in util.c */
static struct wscons_keymap *cur_mp;

static int ksym_lookup(keysym_t);

static int
ksym_lookup(keysym_t ksym)
{
	int i;
	struct wscons_keymap *mp;

	for (i = 0; i < kbmap.maplen; i++) {
		mp = kbmap.map + i;
		if (mp->command == ksym ||
		    mp->group1[0] == ksym || mp->group1[1] == ksym ||
		    mp->group2[0] == ksym || mp->group2[1] == ksym)
			return(i);
	}

	errx(1, "keysym %s not found", ksym2name(ksym));
}

%}

%union {
		keysym_t kval;
		int ival;
	}

%token T_KEYSYM T_KEYCODE
%token <kval> T_KEYSYM_VAR T_KEYSYM_CMD_VAR
%token <ival> T_NUMBER

%type <kval> keysym_var

%%

program		: = {
			int i;
			struct wscons_keymap *mp;

			for (i = 0; i < KS_NUMKEYCODES; i++) {
				mp = mapdata + i;
				mp->command = KS_voidSymbol;
				mp->group1[0] = KS_voidSymbol;
				mp->group1[1] = KS_voidSymbol;
				mp->group2[0] = KS_voidSymbol;
				mp->group2[1] = KS_voidSymbol;
			}

			newkbmap.maplen = 0;
			newkbmap.map = mapdata;
		} expr_list
		;

expr_list	: expr
		| expr_list expr
		;

expr		: keysym_expr
		| keycode_expr
		;

keysym_expr	: T_KEYSYM keysym_var "=" keysym_var = {
			int src, dst;

			dst = ksym_lookup($2);
			src = ksym_lookup($4);
			newkbmap.map[dst] = kbmap.map[src];
			if (dst >= newkbmap.maplen)
				newkbmap.maplen = dst + 1;
		}
		;

keycode_expr	: T_KEYCODE T_NUMBER "=" = {
			if ($2 >= KS_NUMKEYCODES)
				errx(1, "%d: keycode too large", $2);
			if ($2 >= newkbmap.maplen)
				newkbmap.maplen = $2 + 1;
			cur_mp = mapdata + $2;
		} keysym_cmd keysym_list
		;

keysym_cmd	: /* empty */
		| T_KEYSYM_CMD_VAR = {
			cur_mp->command = $1;
		}
		;

keysym_list	: keysym_var = {
			cur_mp->group1[0] = $1;
			cur_mp->group1[1] = ksym_upcase(cur_mp->group1[0]);
			cur_mp->group2[0] = cur_mp->group1[0];
			cur_mp->group2[1] = cur_mp->group1[1];
		}
		| keysym_var keysym_var = {
			cur_mp->group1[0] = $1;
			cur_mp->group1[1] = $2;
			cur_mp->group2[0] = cur_mp->group1[0];
			cur_mp->group2[1] = cur_mp->group1[1];
		}
		| keysym_var keysym_var keysym_var = {
			cur_mp->group1[0] = $1;
			cur_mp->group1[1] = $2;
			cur_mp->group2[0] = $3;
			cur_mp->group2[1] = ksym_upcase(cur_mp->group2[0]);
		}
		| keysym_var keysym_var keysym_var keysym_var = {
			cur_mp->group1[0] = $1;
			cur_mp->group1[1] = $2;
			cur_mp->group2[0] = $3;
			cur_mp->group2[1] = $4;
		}
		;

keysym_var	: T_KEYSYM_VAR = {
			$$ = $1;
		}
		| T_NUMBER = {
			char name[2];
			int res;

			if ($1 < 0 || $1 > 9)
				yyerror("keysym expected");
			name[0] = $1 + '0';
			name[1] = '\0';
			res = name2ksym(name);
			if (res < 0)
				yyerror("keysym expected");
			$$ = res;
		}
		;
%%

void
yyerror(char *msg)
{
	errx(1, "parse: %s", msg);
}
@


1.6
log
@ansi. no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD: map_parse.y,v 1.5 2012/01/31 18:32:52 deraadt Exp $	*/
d44 1
a44 1
 *				Missing symbols are generated automacically
@


1.5
log
@fix a typo; Steffen Daode Nurpmeso
@
text
@d1 1
a1 1
/*	$OpenBSD: map_parse.y,v 1.4 2008/06/26 05:42:06 ray Exp $	*/
d66 1
a66 2
ksym_lookup(ksym)
	keysym_t ksym;
d195 1
a195 2
yyerror(msg)
	char *msg;
@


1.4
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: map_parse.y,v 1.3 2002/02/16 21:27:38 millert Exp $	*/
d40 1
a40 1
 * kecode pos = sym ...		assign the symbols to key `pos'.
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: map_parse.y,v 1.2 2001/08/26 17:35:13 deraadt Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.2
log
@minor cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: map_parse.y,v 1.1 2000/07/01 23:52:45 mickey Exp $	*/
d70 1
a70 1
static int ksym_lookup __P((keysym_t));
@


1.1
log
@wscons control tool; initial import from newtbsd tree
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d198 2
a199 1
		};
@

