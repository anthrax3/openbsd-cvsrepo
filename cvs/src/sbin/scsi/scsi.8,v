head	1.35;
access;
symbols
	OPENBSD_6_2:1.35.0.10
	OPENBSD_6_2_BASE:1.35
	OPENBSD_6_1:1.35.0.12
	OPENBSD_6_1_BASE:1.35
	OPENBSD_6_0:1.35.0.8
	OPENBSD_6_0_BASE:1.35
	OPENBSD_5_9:1.35.0.4
	OPENBSD_5_9_BASE:1.35
	OPENBSD_5_8:1.35.0.6
	OPENBSD_5_8_BASE:1.35
	OPENBSD_5_7:1.35.0.2
	OPENBSD_5_7_BASE:1.35
	OPENBSD_5_6:1.34.0.10
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.34.0.8
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.34.0.4
	OPENBSD_5_4_BASE:1.34
	OPENBSD_5_3:1.34.0.2
	OPENBSD_5_3_BASE:1.34
	OPENBSD_5_2:1.32.0.22
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.20
	OPENBSD_5_0:1.32.0.18
	OPENBSD_5_0_BASE:1.32
	OPENBSD_4_9:1.32.0.16
	OPENBSD_4_9_BASE:1.32
	OPENBSD_4_8:1.32.0.14
	OPENBSD_4_8_BASE:1.32
	OPENBSD_4_7:1.32.0.10
	OPENBSD_4_7_BASE:1.32
	OPENBSD_4_6:1.32.0.12
	OPENBSD_4_6_BASE:1.32
	OPENBSD_4_5:1.32.0.8
	OPENBSD_4_5_BASE:1.32
	OPENBSD_4_4:1.32.0.6
	OPENBSD_4_4_BASE:1.32
	OPENBSD_4_3:1.32.0.4
	OPENBSD_4_3_BASE:1.32
	OPENBSD_4_2:1.32.0.2
	OPENBSD_4_2_BASE:1.32
	OPENBSD_4_1:1.30.0.4
	OPENBSD_4_1_BASE:1.30
	OPENBSD_4_0:1.30.0.2
	OPENBSD_4_0_BASE:1.30
	OPENBSD_3_9:1.28.0.4
	OPENBSD_3_9_BASE:1.28
	OPENBSD_3_8:1.28.0.2
	OPENBSD_3_8_BASE:1.28
	OPENBSD_3_7:1.24.0.4
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.24.0.2
	OPENBSD_3_6_BASE:1.24
	OPENBSD_3_5:1.23.0.4
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.23.0.2
	OPENBSD_3_4_BASE:1.23
	OPENBSD_3_3:1.21.0.2
	OPENBSD_3_3_BASE:1.21
	OPENBSD_3_2:1.20.0.4
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.20.0.2
	OPENBSD_3_1_BASE:1.20
	OPENBSD_3_0:1.19.0.2
	OPENBSD_3_0_BASE:1.19
	OPENBSD_2_9:1.16.0.6
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_8:1.16.0.4
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.16.0.2
	OPENBSD_2_7_BASE:1.16
	OPENBSD_2_6:1.13.0.2
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.35
date	2015.02.28.21.51.57;	author bentley;	state Exp;
branches;
next	1.34;
commitid	NNu2UZnsd5zmNVYD;

1.34
date	2012.09.04.05.36.26;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2012.09.03.20.46.44;	author okan;	state Exp;
branches;
next	1.32;

1.32
date	2007.07.03.18.26.32;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2007.05.31.19.19.47;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2006.07.23.07.16.24;	author dlg;	state Exp;
branches;
next	1.29;

1.29
date	2006.07.23.07.14.45;	author dlg;	state Exp;
branches;
next	1.28;

1.28
date	2005.05.14.04.20.11;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2005.04.03.08.40.50;	author jaredy;	state Exp;
branches;
next	1.26;

1.26
date	2005.04.01.16.16.15;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2005.04.01.05.40.22;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2004.06.26.03.27.36;	author robert;	state Exp;
branches;
next	1.23;

1.23
date	2003.06.03.13.16.09;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2003.04.30.11.58.49;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.02.13.08.23.39;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.11.18.43.51;	author mpech;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.20.05.57.55;	author mpech;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.17.11.13.58;	author mpech;	state Exp;
branches;
next	1.17;

1.17
date	2001.08.03.16.03.02;	author mpech;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.18.22.56.04;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.03.05.00.28.50;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.01.22.02.17.53;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	99.07.23.06.00.05;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	99.07.04.18.59.42;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.07.03.02.11.08;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.06.04.02.45.24;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.28.23.00.03;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.12.15.01.20.44;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.11.28.19.56.34;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.09.23.01.20.25;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.09.17.04.15.02;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	97.07.05.05.22.06;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.04.02.06.22.17;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.05.13.32.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.06.12.11.21.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Reduce usage of predefined strings in manpages.

Predefined strings are not very portable across troff implementations,
and they make the source much harder to read. Usually the intended
character can be written directly.

No output changes, except for two instances where the incorrect escape
was used in the first place.

tweaks + ok schwarze@@
@
text
@.\"	$OpenBSD: scsi.8,v 1.34 2012/09/04 05:36:26 jmc Exp $
.\"	$FreeBSD: scsi.8,v 1.5 1995/05/05 20:41:58 dufault Exp $
.\"
.\" Written By Julian ELischer
.\" Copyright julian Elischer 1993.
.\" Permission is granted to use or redistribute this file in any way as long
.\" as this notice remains. Julian Elischer does not guarantee that this file
.\" is totally correct for any given task and users of this file must
.\" accept responsibility for any damage that occurs from the application of
.\" this file.
.\"
.\" (julian@@tfs.com julian@@dialix.oz.au)
.\" User SCSI hooks added by Peter Dufault:
.\"
.\" Copyright (c) 1994 HD Associates
.\" (contact: dufault@@hda.com)
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of HD Associates
.\"    may not be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY HD ASSOCIATES ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL HD ASSOCIATES BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 4 2012 $
.Dt SCSI 8
.Os
.Sh NAME
.Nm scsi
.Nd program to assist with SCSI devices
.Sh SYNOPSIS
.Nm scsi
.Fl f Ar device
.Fl d Ar debug_level
.Nm scsi
.Fl f Ar device
.Fl m Ar page
.Op Fl e
.Op Fl P Ar pc
.Nm scsi
.Fl f Ar device
.Op Fl v
.Op Fl s Ar seconds
.Fl c Ar cmd_fmt
.Op Ar arg ...
.Fl o Ar count out_fmt
.Op Ar arg ...
.Fl i Ar count in_fmt
.Op Ar arg ...
.Sh DESCRIPTION
The
.Nm
program is used to send commands to a SCSI device.
It is also a sample usage of the user-level SCSI commands.
.Ar out_fmt
can be
.Ql -
to read output data from stdin;
.Ar in_fmt
can be
.Ql -
to write input data to stdout.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Xo
.Fl c Ar cmd_fmt Op Ar arg ...
.Xc
Send a user-level SCSI command to a device.
The command format is described below and the command is sent using the
.Dv SCIOCCOMMAND
.Xr ioctl 2 ,
so the device being accessed must permit this ioctl.
See
.Xr scsi 4
for full details of which minor devices permit the ioctl.
.It Fl d Ar debug_level
Sets the SCSI kernel debug level.
The kernel must have been compiled with the
.Ic SCSIDEBUG
option.
See
.Pa /sys/scsi/scsi_debug.h
to figure out what to set the kernel debug level to.
.It Fl e
Permits edit of the fields.
It will use the editor specified by the
.Ev EDITOR
environment variable.
To store changes permanently, edit page control 3 using the
.Fl P
flag.
.It Fl f Ar device
Specifies the
.Ar device
that should be opened, e.g.,
.Pa /dev/rsd0c .
.It Xo
.Fl i Ar count in_fmt Op Ar arg ...
.Xc
Indicates that this is an input command (i.e., data will be read from
the device into the system) with
.Ar count
bytes of data read in.
The information is extracted according to
.Ar in_fmt
and is displayed on standard output.
.Ar in_fmt
can be specified as a hyphen
.Pq Ql -
to indicate that
.Ar count
bytes of data input should be written to standard output.
.It Fl m Ar page
Read a device mode page.
The file
.Pa /usr/share/misc/scsi_modes
is read to discover how to interpret the mode data.
The environment variable
.Ev SCSI_MODES
can specify a different file to use.
.It Xo
.Fl o Ar count out_fmt Op Ar arg ...
.Xc
Indicates that this is an output command (i.e., data will be sent from
the system to the device) with
.Ar count
bytes of data.
The data is built up
using the provided arguments to fill in any integer variables.
.Ar out_fmt
can be specified as a hyphen
.Pq Ql -
to indicate that
.Ar count
bytes of data should be read from standard input.
.It Fl P Ar pc
Specify a page control field.
The page control fields are
.Bd -literal -offset indent
0 Current Values
1 Changeable Values
2 Default Values
3 Saved Values
.Ed
.It Fl s Ar seconds
Sets the command timeout to
.Ar seconds .
The default is two seconds.
.It Fl v
Turns on more verbose information.
.El
.Ss SCSI commands
The command arguments to the
.Fl cio
options specify the command data buffer used to both send and receive
information to and from the
.Xr scsi 4
subsystem.
Their format is:
.Pp
.Dl Fl c Ar command Op Ar argument ...
.Pp
The commands are composed of a list of field specifiers.
The specifiers denote the field name, the field value, and the length of
the field.
Examples are given below.
.Pp
Whitespace and text following a
.Sq #
character in the command string are ignored.
.Pp
The first part of a field specifier is the field name and is surrounded
by curly braces
.Pq Sq {} .
This part is optional and may be left out.
.Pp
The second part is the value of the field.
The value may be given directly or may arrange that the next argument to
the
.Nm
command be used as the value of the field.
Direct hexadecimal
.Pq Li 0\-FF
or decimal
.Pq 0\-255
values may be specified.
The special value
.Ic v
can be used to arrange that the next integer argument be taken from the
.Ar argument
list.
For retrieving output (with
.Fl i ) ,
this part of the field cannot be used.
.Pp
The third part specifies the length of the field.
This is optional and defaults to one byte if not specified.
The length may be specified in bits by prefixing it with
.Ic b
or
.Ic t ,
or in bytes by prefixing it with
.Ic i .
Additionally, character arrays can be specified by prefixing with
.Ic c
or, with zeroed trailing spaces, with
.Ic z .
Bits are packed together tightly and begin with the high bit.
New bytes are started when a byte fills or an
.Ic i
field is next.
.Ic i
fields indicate a 1\-4 byte integral value that must already be given in
SCSI byte order (most significant byte first).
Otherwise, the field value specified will be swapped into SCSI byte order.
.Pp
Retrieving data (with
.Fl i )
follows similarly but without field values.
Besides field specifiers, the command can also include control operations,
which currently includes seeking operations used to ignore returned data.
Seek operations are composed of the
.Ic s
character followed by the absolute position to skip to.
If the position is prefixed with a
.Ic + ,
the position is interpreted relative to the current position.
.\" The position can also be read from the
.\" .Ar arg
.\" list if
.\" .Ic v
.\" is specified as the seek value.
.Pp
Entire fields can be suppressed from being returned with the
.Ic *
modifier prepended to the field width.
.Pp
Here are some examples:
.Bl -tag -width 17n
.It Ic s8 z8 z16 z4
Seek to position 8 and specify three fields of lengths 8 bytes, 16
bytes, and 4 bytes.
.It Ic 1A 2
Specify a one-byte field with the hexadecimal value
.Li 0x1A
followed by another one-byte field with the decimal value 2.
.It Ic v:i1
Specify a one-byte field whose value will be determined from the
next argument in the
.Ar argument
list.
.It Ic 0:7
Specify a 7-bit field with a value of zero.
.It Ic *b3 b5
Specify a three-bit field that will be suppressed from being returned
and a five-bit field that will be returned.
.El
.Sh ENVIRONMENT
.Bl -tag -width SU_DEBUG_TRUNCATE
.It Ev SU_DEBUG_OUTPUT
This
variable can be set to a file to send debugging
output to that file.
.It Dv SU_DEBUG_LEVEL
This
variable can be set to a non-zero integer to increase
the level of debugging.
Currently this is an on or off thing; it should
perhaps use the ioctl to set the debug level in the kernel and then set
it back to zero at program exit.
.It Ev SU_DEBUG_TRUNCATE
This
variable can be set to an integer to limit the
amount of data phase output sent to the debugging file.
.It Ev EDITOR
This
variable determines the editor to use for the mode editor.
.El
.Sh FILES
.Bl -tag -width /usr/share/misc/scsi_modes
.It Pa /usr/share/misc/scsi_modes
.El
.Sh EXIT STATUS
.Ex -std scsi
.Sh EXAMPLES
To verify that the device type for the disk
.Pa /dev/rsd0c
is 0
(direct access device):
.Bd -literal -offset indent
# scsi -f /dev/rsd0c -c "12 0 0 0 64 0" -i 0x64 "*b3 b5"
0
.Ed
.Pp
To do an inquiry to
.Pa /dev/rsd2c :
.Bd -literal -offset indent
# scsi -f /dev/rsd2c -c "12 0 0 0 64 0" -i 0x64 "s8 z8 z16 z4"
FUJITSU M2654S-512 010P
.Ed
.Pp
To spin down
.Pa /dev/rsd2c :
.Bd -literal -offset indent
# scsi -f /dev/rsd2c -c "1b 0 0 0 0 0"
.Ed
.Pp
To edit mode page 1 on
.Pa /dev/rsd2c
and store it permanently on the
drive (set AWRE and ARRE to 1 to enable bad block remapping):
.Pp
.Dl # scsi -f /dev/rsd2c -m 1 -e -P 3
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr scsi 4
.Sh HISTORY
The
.Nm
command appeared in 386BSD 0.1.2.4/FreeBSD to support the new reprobe
and user SCSI commands.
.Sh BUGS
.Ic scsi\ -f /dev/rsd0c -c \(dq4 0 0 0 0 0\(dq
permits anyone who can write to
.Pa /dev/rsd0c
to format the disk drive.
@


1.34
log
@sort sections;
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.33 2012/09/03 20:46:44 okan Exp $
d43 1
a43 1
.Dd $Mdocdate: September 3 2012 $
d342 1
a342 1
.Ic scsi\ -f /dev/rsd0c -c \*q4 0 0 0 0 0\*q
@


1.33
log
@- resolve unchecked malloc()'s; prompted by rustyBSD.
- first pass at fixing err() and exit() usage.
- document that scsi(8) returns 0 or >0.

ok krw@@ otto@@ (noting this code is barely worth the effort...)
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.32 2007/07/03 18:26:32 krw Exp $
d43 1
a43 1
.Dd $Mdocdate: May 31 2007 $
a297 2
.Sh EXIT STATUS
.Ex -std scsi
d302 2
@


1.32
log
@Correct the '-i' parameters in the examples. The '64' in the -c strings
is a hex value, so '-i 64' does not allocate enough space. Use '-i 0x64'
instead. Found by henning on boxes using ahd/ahc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.31 2007/05/31 19:19:47 jmc Exp $
d298 2
@


1.31
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.30 2006/07/23 07:16:24 dlg Exp $
d43 1
a43 1
.Dd $Mdocdate$
d308 1
a308 1
# scsi -f /dev/rsd0c -c "12 0 0 0 64 0" -i 64 "*b3 b5"
d315 1
a315 1
# scsi -f /dev/rsd2c -c "12 0 0 0 64 0" -i 64 "s8 z8 z16 z4"
@


1.30
log
@userland shouldnt care about kernel issues
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.29 2006/07/23 07:14:45 dlg Exp $
d43 1
a43 1
.Dd October 11, 1993
@


1.29
log
@update to reflect reality
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.28 2005/05/14 04:20:11 millert Exp $
a339 4
Some devices respond to an inquiry for all LUNs.
This will cause them
to come online up to 8 times during reprobe to different logical units.
.Pp
@


1.28
log
@Give example of how to spin down a device since this is a question
that comes up periodically.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.27 2005/04/03 08:40:50 jaredy Exp $
a59 6
.Fl r
.Op Fl b Ar bus
.Op Fl l Ar lun
.Op Fl t Ar targ
.Nm scsi
.Fl f Ar device
a163 9
.It Fl r
Reprobe a specific SCSI device at a given
bus, target, and lun.
This is not needed
since opening a fixed SCSI device
has the side effect of reprobing it.
See
.Xr scsi 4
for a description of fixed SCSI devices.
@


1.27
log
@- sync to reality (remove dead options)
- sort options
- mdoc nits (indentation, macro fixes, cleanup)
- remove notes about usage on FreeBSD
- add a section "SCSI commands" describing that which would
  be described in a scsi(3) page, written from scratch

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.26 2005/04/01 16:16:15 jmc Exp $
d332 6
@


1.26
log
@no need for Ns here;
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.25 2005/04/01 05:40:22 deraadt Exp $
a54 4
.Op Fl v
.Fl z Ar seconds
.Nm scsi
.Fl f Ar device
d56 1
a57 1
.Op Fl e
d60 1
a60 1
.Fl p
a62 4
.Nm scsi
.Fl f Ar device
.Fl r
.Op Fl b Ar bus
a63 1
.Op Fl l Ar lun
d73 1
d90 11
a100 5
.It Fl f Ar device
Specifies the
.Ar device
that should be opened, i.e.,
.Pa /dev/rsd0c .
d104 1
a104 1
.Cm SCSIDEBUG
d109 29
a137 11
.Pp
.It Fl z Ar seconds
Freezes all activity on all SCSI busses for a given number of
seconds.
If
.Fl v
is also specified, a BEL character is sent to the standard
output at the start and finish of the bus freeze.
This requires that the kernel be built with the SCSI_FREEZE kernel option.
This kernel code is not committed yet.
.Pp
d146 15
a160 1
.Pp
d164 1
a164 1
.Bd -literal -offset
a169 30
.Pp
.It Fl e
Permits you to edit the fields.
It will use the editor specified by your
.Ev EDITOR
environment variable.
To store changes permanently, edit page control 3 using the
.Fl P
flag.
.Pp
.It Fl p
Can be used against the "super scsi" device
.Pa /dev/scsi/super
to probe all devices with a given SCSI
.Ar lun
on a given SCSI bus.
The
.Ar bus
can be selected with the
.Fl b
option and the default is 0.
The
.Ar lun
can be selected with the
.Fl l
option and the default is 0.
See
.Xr scsi 4
for a description of the "super scsi" device.
.Pp
d171 3
a173 6
Can be used in
.Fx 1.1
to reprobe a specific SCSI device at a given
Bus, Target and Lun.
This is not needed in
.Fx 2.1 ,
d175 1
a175 3
has the side effect of reprobing it, and probing with the bus with the
.Fl p
option should bring on line any newly found devices.
a178 16
.Pp
.It Fl c
Permits you to send user-level SCSI commands specified on
the command line to a
device.
The command is sent using the
.Dv SCIOCCOMMAND
ioctl, so the device you are accessing must permit this ioctl.
See
.Xr scsi 4
for full details of which minor devices permit the
.Xr ioctl 2 .
.Pp
.It Fl v
Turns on more verbose information.
.Pp
d183 11
d195 1
a195 5
.It Fl c Ar cmd_fmt
Specifies the command as described in the source.
Sorry.
The additional arguments provide values for any variables
specified in the command format.
d197 94
a290 23
.It Fl o Ar count out_fmt arg ...
Indicates that this is a data out command (i.e., data will be sent from
the system to the device) with
.Ar count
bytes of data.
.Ar out_fmt
can be specified as a hyphen
.Pq Ql -
to indicate that
.Ar count
bytes of data should be read from the standard input.
.Pp
.It Fl i Ar count in_fmt arg ...
Indicates that this is a data in command (i.e., data will be read from
the device into the system) with
.Ar count
bytes of data read in.
.Ar in_fmt
can be specified as a hyphen
.Pq Ql -
to indicate that
.Ar count
bytes of data input should be written to the standard output.
d293 3
a295 2
The
.Ev SU_DEBUG_OUTPUT
d298 2
a299 3
.Pp
The
.Ev SU_DEBUG_LEVEL
d305 2
a306 3
.Pp
The
.Ev SU_DEBUG_TRUNCATE
d309 2
a310 3
.Pp
The
.Ev EDITOR
d312 5
d322 1
a322 1
.Bd -literal -offset
d329 1
a329 1
.Bd -literal -offset
d338 2
a339 3
.Bd -literal -offset
# scsi -f /dev/rsd2c -m 1 -e -P 3
.Ed
d341 1
d349 1
a349 1
Some devices respond to an inquiry for all LUNS.
d351 4
a354 2
to come on line to 8 times during reprobe to different logical units.
"scsi -f /dev/rsd0c -c "4 0 0 0 0 0" permits anyone who can write to
@


1.25
log
@delete junk documentation.  pr 3918.  jmc -- when something is this bad, we sometimes have to be fast.  scsi(3) or anything like it is dead forever
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.24 2004/06/26 03:27:36 robert Exp $
d195 1
a195 1
.Xr ioctl 2 Ns .
@


1.24
log
@Remove scsi(3) from SEE ALSO. ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.23 2003/06/03 13:16:09 jmc Exp $
d194 2
a195 4
for full details of which minor devices permit the ioctl, and
.Xr scsi 3
for the full details on how to build up the commands and data phases
using the format arguments.
d206 2
a207 2
Specifies the command as described in
.Xr scsi 3 .
a215 3
The data out is built up using the facilities described in
.Xr scsi 3
using the provided arguments to fill in any integer variables.
a227 5
The information is extracted according to
.Ar in_fmt
using the facilities described in
.Xr scsi 3
and displayed on the standard output.
@


1.23
log
@- section reorder
- some mdoc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.22 2003/04/30 11:58:49 jmc Exp $
a291 1
.Xr scsi 3 ,
@


1.22
log
@a on or off thing -> an on or off thing;
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.21 2003/02/13 08:23:39 jmc Exp $
d245 22
a290 22
.Sh ENVIRONMENT
The
.Ev SU_DEBUG_OUTPUT
variable can be set to a file to send debugging
output to that file.
.Pp
The
.Ev SU_DEBUG_LEVEL
variable can be set to a non-zero integer to increase
the level of debugging.
Currently this is an on or off thing; it should
perhaps use the ioctl to set the debug level in the kernel and then set
it back to zero at program exit.
.Pp
The
.Ev SU_DEBUG_TRUNCATE
variable can be set to an integer to limit the
amount of data phase output sent to the debugging file.
.Pp
The
.Ev EDITOR
variable determines the editor to use for the mode editor.
d294 5
a305 5
.Sh HISTORY
The
.Nm
command appeared in 386BSD 0.1.2.4/FreeBSD to support the new reprobe
and user SCSI commands.
@


1.21
log
@typos;

setextattr(8): example markus@@
spamd(8): someone else found some of these on bugs/misc, but for the life
	  of me i can't find out who
pf.conf(5): from openbsd@@davidkrause.com
raidctl(8): from ian@@darwinsys.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.20 2002/02/11 18:43:51 mpech Exp $
d279 1
a279 1
Currently this is a on or off thing; it should
@


1.20
log
@Initial patch.
When you give command examples in a manual page prefix them with
	$ command
or
	# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.19 2001/08/20 05:57:55 mpech Exp $
d158 3
a160 1
can be selected with the -b option and the default is 0.
d163 3
a165 1
can be selected with the -l option and the default is 0.
d224 1
a224 1
to indicate that the
d241 1
a241 1
to indicate that the
d246 3
a248 1
To verify that the device type for the disk /dev/rsd0c is 0
d255 2
a256 1
To do an inquiry to /dev/rsd2c:
d262 3
a264 1
To edit mode page 1 on /dev/rsd2c and store it permanently on the
@


1.19
log
@Powered by @@mantoya.
o) fix bogus .Xr usage;

millert@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.18 2001/08/17 11:13:58 mpech Exp $
d245 1
a245 1
root# scsi -f /dev/rsd0c -c "12 0 0 0 64 0" -i 64 "*b3 b5"
d251 1
a251 1
root# scsi -f /dev/rsd2c -c "12 0 0 0 64 0" -i 64 "s8 z8 z16 z4"
d258 1
a258 1
root# scsi -f /dev/rsd2c -m 1 -e -P 3
@


1.18
log
@o) {Open,Net,Free}BSD -> .{O,N,F}x;
o) "start sentence on new line" issues;
o) minimal -mdoc improvements;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.17 2001/08/03 16:03:02 mpech Exp $
d205 1
a205 1
.Xr scsi 3 "."
@


1.17
log
@o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.16 2000/03/18 22:56:04 aaron Exp $
d167 3
a169 1
Can be used in FreeBSD 1.1 to reprobe a specific SCSI device at a given
d171 3
a173 1
This is not needed in FreeBSD 2.1, since opening a fixed SCSI device
@


1.16
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.15 2000/03/05 00:28:50 aaron Exp $
d249 1
@


1.15
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.14 2000/01/22 02:17:53 aaron Exp $
d85 2
a86 2
program is used to send commands to a SCSI device. It is also
a sample usage of the user-level SCSI commands.
d104 5
a108 3
Sets the SCSI kernel debug level.  The kernel must have been compiled
with the SCSIDEBUG
option.  See
d114 2
a115 1
seconds.  If
d123 2
a124 1
Read a device mode page.  The file
d126 2
a127 2
is read to discover how to interpret the mode data.  The environment
variable
d132 2
a133 2
Specify a page control field.  The page control
fields are
d142 2
a143 2
Permits you to edit the fields.  It will use the editor specified
by your
d145 2
a146 2
environment variable.  To store changes permanently,
edit page control 3 using the
d180 5
a184 2
device.  The command is sent using the SCIOCCOMMAND ioctl, so the
device you are accessing must permit this ioctl. See
d209 2
a210 1
bytes of data. The data out is built up using the facilities described in
d224 2
a225 1
bytes of data read in.  The information is extracted according to
d264 2
a265 1
the level of debugging.  Currently this is a on or off thing; it should
d281 2
a282 1
Some devices respond to an inquiry for all LUNS.  This will cause them
@


1.14
log
@ie. -> i.e.,
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.13 1999/07/23 06:00:05 deraadt Exp $
d96 1
a96 1
The following options are available:
@


1.13
log
@doc -f
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.12 1999/07/04 18:59:42 aaron Exp $
d101 1
a101 1
that should be opened, ie.
@


1.12
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.11 1999/07/03 02:11:08 aaron Exp $
d98 5
@


1.11
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.10 1999/06/04 02:45:24 aaron Exp $
d82 5
a86 2
.Pp
.in -\\n(iSu
d89 1
a89 1
.Sq -
d93 1
a93 1
.Sq -
a95 9
If debugging is not compiled in the kernel,
.Fl d
will have no effect.
.Sh DESCRIPTION
The
.Nm
program is used to send commands to a SCSI device. It is also
a sample usage of the user-level SCSI commands.
.Pp
d202 1
a202 1
.Pq Sq -
d218 1
a218 1
.Pq Sq -
@


1.10
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.9 1999/05/28 23:00:03 aaron Exp $
a246 1
.Pp
@


1.9
log
@more .El madness
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.8 1998/12/15 01:20:44 aaron Exp $
d7 2
a8 2
.\" as this notice remains. Julian Elischer does not guarantee that this file 
.\" is totally correct for any given task and users of this file must 
d11 1
a11 1
.\" 
d14 1
a14 1
.\" 
d18 1
a18 1
.\" 
d30 1
a30 1
.\" 
d142 1
a142 1
environment variable.  To store changes permanently, 
@


1.8
log
@always give .Nm macros an argument in SYNOPSIS sections; krw@@tcn.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.7 1998/11/28 19:56:34 aaron Exp $
d228 1
@


1.7
log
@kill redundant .Nm macro arguments; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.6 1998/09/23 01:20:25 aaron Exp $
d50 1
a50 1
.Nm
d53 1
a53 1
.Nm
d57 1
a57 1
.Nm
d62 1
a62 1
.Nm
d67 1
a67 1
.Nm
d73 1
a73 1
.Nm
@


1.6
log
@alphabetize SEE ALSO entries and order them numerically according to section
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.5 1998/09/17 04:15:02 aaron Exp $
d50 1
a50 1
.Nm scsi
d53 1
a53 1
.Nm scsi
d57 1
a57 1
.Nm scsi
d62 1
a62 1
.Nm scsi
d67 1
a67 1
.Nm scsi
d73 1
a73 1
.Nm scsi
d98 1
a98 1
.Nm scsi
d279 1
a279 1
.Nm scsi
@


1.5
log
@sbin/ man page fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.4 1997/07/05 05:22:06 millert Exp $
d269 2
a270 2
.Xr scsi 4 ,
.Xr scsi 3
@


1.4
log
@Mention how to enable bad block remapping on a scsi drive.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.3 1997/04/02 06:22:17 millert Exp $
d48 1
a48 1
.Nd program to assist with scsi devices.
d50 46
a95 16
.Bd -literal -offset
Usage:
scsi -f device -d debug_level                    # To set debug level
scsi -f device [-v] -z seconds                   # To freeze bus
scsi -f device -m page [-P pc] [-e]              # To read mode pages
scsi -f device -p [-b bus] [-l lun]              # To probe all devices
scsi -f device -r [-b bus] [-t targ] [-l lun]    # To reprobe a device
scsi -f device [-v] [-s seconds] -c cmd_fmt [arg0 ... argn] # A command...
               -o count out_fmt [arg0 ... argn]  #   EITHER (for data out)
               -i count in_fmt                   #   OR     (for data in)
.Pp
"out_fmt" can be "-" to read output data from stdin;
"in_fmt" can be "-" to write input data to stdout;
.Pp
If debugging is not compiled in the kernel, "-d" will have no effect
.Ed
d99 2
a100 2
program is used to send commands to a scsi device. It is also
a sample usage of the user level SCSI commands.
d102 5
a106 5
The
.Fr -d
option sets the SCSI kernel debug level.  The kernel must have been compiled
with the
.Em SCSIDEBUG
d108 1
a108 1
.Fr /sys/scsi/scsi_debug.h
d111 2
a112 3
The
.Fr -z
option freezes all activity on all SCSI busses for a given number of
d114 2
a115 2
.Fr -v
is also specified then a BEL character is sent to the standard
d120 7
a126 6
The
.Fr -m
option is used to read a device mode page.  The file
.Fr /usr/share/misc/scsi_modes
is read to look at for how to interpret the mode data.  The environment
variable SCSI_MODES can specify a different file to use.
d128 2
a129 4
.in +.25i
The
.Fr -P
option can be used to specify a page control field.  The page control
d138 5
a142 4
The
.Fr -e
option permits you to edit the fields.  It will use the editor specified
by your EDITOR environment variable.  To store changes permanently, 
d144 1
a144 1
.Fr -P
a145 1
.in -.25i
d147 6
d154 5
a158 6
.Fr -p
option can be used against the "super scsi" device
.Fr /dev/scsi/super
to probe all devices with a given SCSI lun on a given SCSI bus.
The bus can be selected with the -b option and the default is 0.
The lun can be selected with the -l option and the default is 0.
d163 2
a164 3
The
.Fr -r
option can be used in FreeBSD 1.1 to reprobe a specific SCSI device at a given
d168 2
a169 1
-p option should bring on line any newly found devices.
d172 1
a172 1
for a description of fixed scsi devices.
d174 2
a175 3
The
.Fr -c
option permits you to send user level SCSI commands specified on
a183 1
.in +.25i
d185 2
a186 2
.Fr -v
turns on more verbose information.
d188 4
a191 2
.Fr -s
sets the command timeout in seconds.  The default is two seconds.
d193 2
a194 2
.Fr "-c cmd_fmt"
specifies the command as described in
d199 2
a200 2
.Fr "-o count out_fmt arg0 ... argn"
indicates that this is a data out command (i.e., data will be sent from
d202 1
a202 1
.Fr count
d206 5
a210 3
.Fr out_fmt
can be specified as a hyphen ("-") to indicate that the
.Fr count
d213 2
a214 2
.Fr "-i count in_fmt"
indicates that this is a data in command (i.e., data will be read from
d216 1
a216 1
.Fr count
d218 1
a218 1
.Fr in_fmt
d222 5
a226 3
.Fr in_fmt
can be specified as a hyphen ("-") to indicate that the
.Fr count
a227 1
.in -.25i
d241 1
a241 1
To edit mode page 1 on /dev/rsd2c, and store it permanently on the
d248 3
a250 1
The SU_DEBUG_OUTPUT variable can be set to a file to send debugging
d253 3
a255 1
The SU_DEBUG_LEVEL variable can be set to a non-zero integer to increase
d260 3
a262 1
The SU_DEBUG_TRUNCATE variable can be set to an integer to limit the
d265 3
a267 1
The EDITOR variable determines the editor to use for the mode editor.
a271 1
.Pp
d275 2
a276 1
/dev/rsd0c to format the disk drive.
@


1.3
log
@Remove FreeBSD-specific stuff from BUGS section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.2 1996/08/05 13:32:45 deraadt Exp $
d206 1
a206 1
drive:
@


1.2
log
@scsi subsystem requires write access for SCIOSCMD
@
text
@d1 1
a1 1
.\"	$OpenBSD: scsi.8,v 1.1 1996/06/12 11:21:42 deraadt Exp $
d9 2
a10 2
.\" accept responsibility for any damage that occurs from the application of this
.\" file.
d45 1
a45 1
.Os BSD 4
a228 3
This command wasn't ready for inclusion in 2.0R and so is missing in
that release.
.Pp
a230 4
.Pp
The "-i" option to do an inquiry went away in 2.1.  The new facilities
provided by "-c" supercede that.
.Pp
@


1.1
log
@add /sbin/scsi from FreeBSD -- a good start!
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d238 2
a239 4
Check your permissions carefully.
"scsi -f /dev/rsd0c -c "4 0 0 0 0 0" permits anyone who can open
/dev/rsd0c to format the disk drive.  This must be changed to
at least require write access to the drive.
@
