head	1.16;
access;
symbols
	OPENBSD_2_8:1.15.0.4
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.15.0.2
	OPENBSD_2_7_BASE:1.15
	OPENBSD_2_6:1.14.0.2
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.16
date	2000.11.09.15.39.07;	author mickey;	state dead;
branches;
next	1.15;

1.15
date	2000.03.18.22.56.03;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.07.08.19.58.30;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	99.07.04.18.59.41;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.06.04.02.45.23;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.05.16.19.56.17;	author alex;	state Exp;
branches;
next	1.10;

1.10
date	98.11.28.19.56.32;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	98.11.11.22.19.59;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.09.24.07.08.38;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	98.09.17.04.15.00;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.07.24.20.49.08;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.07.11.22.46.11;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	96.07.10.03.52.56;	author ccappuc;	state Exp;
branches;
next	1.3;

1.3
date	96.06.29.18.24.18;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.32.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@it's been moved
@
text
@.\"	$OpenBSD: boot_pmax.8,v 1.15 2000/03/18 22:56:03 aaron Exp $
.\"	$NetBSD: boot_pmax.8,v 1.1 1995/04/25 23:55:11 mellon Exp $
.\"
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Systems Programming Group of the University of Utah Computer
.\" Science Department.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd July 23, 1991
.Dt BOOT_PMAX 8 pmax
.Os
.Sh NAME
.Nm boot
.Nd
.Tn sparc-specific
system bootstrapping procedures
.Sh DESCRIPTION
The
.Ox
kernel is started by placing it at the beginning of physical memory
and transferring to the entry point.
Since the system is not reenterable,
it is necessary to read it in from disk or tape
each time it is to be bootstrapped.
.Pp
.Ss Power fail and crash recovery
Normally, the system will boot itself at power-up or after crashes.
An automatic consistency check of the file systems will be performed,
and unless this fails, the system will resume multi-user operations.
.Pp
.Ss Cold starts
At power up, all DECstation ROMs consult the
.Nm haltaction
environment
variable in EEPROM to determine whether or not to attempt an automatic
boot.
If this variable is set to
.Dq h ,
the ROM prints a prompt on the console and
waits for user commands.
If set to
.Dq b ,
the ROM attempts to autoboot.
.Pp
On the DECstation 2100 and 3100, the path used for automatic booting is
stored in the
.Nm bootpath
environment variable.
The path is made up of a
device type specifier (e.g., rz, tz, mop or tftp), followed by
a triplet in the form (x,y,z), followed by a filename to load.
.Pp
Within the triplet,
.Dq x
is the controller (always 0),
.Dq y
is the SCSI ID of
the drive to
boot from or 0 for net boots, and
.Dq z
is the partition to boot from
(usually 0 for SCSI devices, always zero for network booting).
For network boots, () may be specified instead of (0,0,0).
.Pp
The filename is optional for bootp/tftp and mop booting, since in
these cases the network protocol can be used to determine which
file to boot.
When booting off the tape, no filename should be
specified, and when booting off disk, the filename of a kernel
must be specified.
Generally, the kernel is named
.Pa bsd .
.Pp
An example
.Nm bootpath
setting would be:
.Pp
.Dl setenv bootpath rz(0,1,0)bsd
.Pp
For automatic boots, the ROM automatically passes a
.Fl a
argument to the bootloader,
requesting that
.Ox
attempt to come up to multi-user mode.
At the boot ROM prompt, the user may boot
.Ox
with either the
.Nm auto
or the
.Nm boot
command.
If the
.Nm auto
command is used, the
.Fl a
argument is passed to the kernel, requesting a multi-user boot; otherwise
the
.Fl s
argument is passed, requesting that
.Ox
boot to single user mode.
.Pp
When either the
.Nm boot
or the
.Nm auto
command is issued with no arguments, the kernel specified in the
.Nm bootpath
environment variable is booted.
An alternate kernel may be specified with the
.Fl f
flag, followed by the path of the kernel to boot, as described above.
For example:
.Pp
.Dl boot -f rz(0,4,0)bsd.new
.Pp
On TurboChannel machines (all DECstation 5000 models), the bootpath
is specified in the
.Nm boot
environment variable, along with any arguments
to be passed to the kernel.
Note that to specify boot arguments (e.g.,
.Fl a )
when setting the
.Nm boot
environment variable, the filename and arguments
must be enclosed in quotes.
For example:
.Pp
.Dl setenv boot "3/rz4/bsd -a"
.Pp
The device from which to boot is specified as the TurboChannel slot
number, a TurboChannel-option-specific device name, and a path to the
file to load, all separated by slashes.
You can get a list of the
devices installed in your TurboChannel slots (as well as any built-in
devices which appear as TurboChannel slots) by typing the
.Nm cnfg
command
at the boot prompt.
You can get more detailed information about a specific
TurboChannel option by typing
.Nm cnfg
followed by the slot number of that
option.
.Pp
For SCSI devices, the option-specific device identifier is either
.Dq rz#
for disks or
.Dq tz#
for tapes, where # is the SCSI ID of the device.
For network
devices, the option-specific protocol identifier is either mop or tftp.
Filename requirements are as for the DECstation 2100 and 3100.
.Pp
To start
.Ox
from the boot prompt, the
.Nm boot
command must be used.
With no arguments, this simply boots the default
kernel with the default arguments as set with
.Nm setenv
.Nm boot .
If no
.Nm boot
environment variable is set, or if an alternate kernel is to be
booted, the path of that kernel may be specified after the boot command as
described above, and any arguments may be passed similarly.
For example:
.Pp
.Dl boot 3/rz4/bsd.new -a
.Sh SEE ALSO
.Xr crash 8 ,
.Xr fsck 8 ,
.Xr halt 8 ,
.Xr init 8 ,
.Xr newfs 8 ,
.Xr rc 8 ,
.Xr reboot 8 ,
.Xr shutdown 8 ,
.Xr syslogd 8
@


1.15
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.14 1999/07/08 19:58:30 deraadt Exp $
@


1.14
log
@cleaner
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.13 1999/07/04 18:59:41 aaron Exp $
d66 2
a67 2
boot.  If this
variable is set to
d70 2
a71 1
waits for user commands.  If set to
d78 2
a79 1
environment variable.  The path is made up of a
d97 2
a98 1
file to boot.  When booting off the tape, no filename should be
d100 2
a101 1
must be specified.  Generally, the kernel is named
d115 2
a116 2
attempt to come up to multi-user mode.  At the boot ROM prompt,
the user may boot
d122 2
a123 1
command.  If the
d140 2
a141 2
environment variable is booted.  An alternate kernel may be specified
with the
d152 2
a153 1
to be passed to the kernel.  Note that to specify boot arguments (e.g.,
d158 2
a159 1
must be enclosed in quotes.  For example:
d165 2
a166 1
file to load, all separated by slashes.  You can get a list of the
d171 2
a172 1
at the boot prompt.  You can get more detailed information about a specific
d182 2
a183 1
for tapes, where # is the SCSI ID of the device.  For network
d191 2
a192 1
command must be used.  With no arguments, this simply boots the default
d200 2
a201 1
described above, and any arguments may be passed similarly.  For example:
@


1.13
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.12 1999/06/04 02:45:23 aaron Exp $
d40 1
a40 1
.Dt BOOT_PMAX 8
d45 1
d63 1
a63 1
.Ev haltaction
a201 5
.Sh HISTORY
The
.Nm
command is
.Ud .
@


1.12
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.11 1999/05/16 19:56:17 alex Exp $
d102 2
a103 5
.nf
.sp 1
.ce 1
setenv bootpath rz(0,1,0)bsd
.fi
d139 2
a140 3
.sp 1
.ce 1
boot -f rz(0,4,0)bsd.new
d152 2
a153 5
.nf
.sp 1
.ce 1
setenv boot "3/rz4/bsd -a"
.fi
d189 2
a190 3
.sp 1
.ce 1
boot 3/rz4/bsd.new -a
@


1.11
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.10 1998/11/28 19:56:32 aaron Exp $
d48 1
a48 1
.Tn OpenBSD
d76 1
a76 1
environment variable.  The path is made up of a 
d112 1
a112 1
.Tn OpenBSD
d115 1
a115 1
.Tn OpenBSD
d128 1
a128 1
.Tn OpenBSD
d184 1
a184 1
.Tn OpenBSD
@


1.10
log
@kill redundant .Nm macro arguments; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.9 1998/11/11 22:19:59 aaron Exp $
d206 1
d208 1
a208 2
.Xr syslogd 8 ,
.Xr reboot 8
@


1.9
log
@more `` '' -> .Dq sillyness; remove redundant .Pp macros; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.8 1998/09/24 07:08:38 pjanzen Exp $
d62 1
a62 1
.Nm haltaction
@


1.8
log
@'off of' -> 'off'
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.7 1998/09/17 04:15:00 aaron Exp $
a55 1
.Pp
a60 1
.Pp
d66 6
a71 2
variable is set to ``h'', the ROM prints a prompt on the console and
waits for user commands.  If set to ``b'', the ROM attempts to autoboot.
d80 5
a84 1
Within the triplet, ``x'' is the controller (always 0), ``y'' is the SCSI ID of
d86 3
a88 1
boot from or 0 for net boots, and ``z'' is the partition to boot from
d175 5
a179 2
For SCSI devices, the option-specific device identifier is either ``rz#'' for
disks or ``tz#'' for tapes, where # is the SCSI ID of the device.  For network
@


1.7
log
@sbin/ man page fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.6 1998/07/24 20:49:08 deraadt Exp $
d87 1
a87 1
specified, and when booting off of disk, the filename of a kernel
@


1.6
log
@fix spelling of separate
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.5 1998/07/11 22:46:11 angelos Exp $
d55 2
a56 1
.Sy Power fail and crash recovery.
d61 2
a62 1
.Sy Cold starts.
d66 4
a69 4
variable in EEPROM to determine whether or not to attempt to boot
automatically.   If this
variable is set to \fBh\fR, the ROM prints a prompt on the console and
waits for user commands.   If set to \fBb\fR, the ROM attempts to autoboot.
d74 2
a75 2
environment variable.   The path is made up of a 
device type specifier (e.g., rz, tz, mop or tftp) followed by
d78 1
a78 1
Within the triplet, x is the controller (always 0), y is the SCSI id of
d80 2
a81 2
boot from or 0 for net boots, and z is the partition to boot from
(usually 0 for SCSI devices, always zero for network booting.
d89 1
a89 1
.Nm bsd.
d91 3
a93 1
An example bootpath setting would be:
d102 2
a103 2
argument to the boot
loader, requesting that
d105 1
a105 1
attempt to come up to multi-user mode.   At the boot ROM prompt,
d112 1
a112 1
command.   If the
d127 3
a129 2
command is issued with no arguments, the kernel specified in the bootpath
environment variable is booted.   An alternate kernel may be specified
d138 6
a143 4
On TurboChannel machines (all DECstation 5000 models), the boot path
is specified in the boot environment variable, along with any arguments
to be passed to the kernel.   Note that to specify boot arguments (e.g.,
.Fl a)
d147 1
a147 1
must be enclosed in quotes.   For example:
d156 1
a156 1
file to load, all separated by slashes.   You can get a list of the
d161 1
a161 1
at the boot prompt.   You can get more detailed information about a specific
d167 2
a168 2
For SCSI devices, the option-specific device identifier is either rz# for
disks or tz# for tapes, where # is the SCSI id of the device.   For network
d176 1
a176 1
command must be used.   With no arguments, this simply boots the default
d179 4
a182 2
.Nm boot.
If no boot environment variable is set or if an alternate kernel is to be
d184 1
a184 1
described above, and any arguments may be passed similarly.   For example:
d189 1
a189 1
.Xr crash 8m ,
@


1.5
log
@Change the headers so those show up as boot_$ARCH
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.4 1996/07/10 03:52:56 ccappuc Exp $
d149 1
a149 1
file to load, all seperated by slashes.   You can get a list of the
@


1.4
log
@no vmunix here, kernel is /bsd, os is OpenBSD!
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.3 1996/06/29 18:24:18 mickey Exp $
d40 1
a40 1
.Dt BOOT 8
@


1.3
log
@kernel image is bsd, not netbsd.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.2 1996/06/23 14:32:08 deraadt Exp $
d48 1
a48 1
.Tn NetBSD
d100 1
a100 1
.Tn NetBSD
d103 1
a103 1
.Tn NetBSD
d116 1
a116 1
.Tn NetBSD
d166 1
a166 1
.Tn NetBSD
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_pmax.8,v 1.1 1995/04/25 23:55:11 mellon Exp $
d87 1
a87 1
.Nm netbsd.
d93 1
a93 1
setenv bootpath rz(0,1,0)netbsd
d131 1
a131 1
boot -f rz(0,4,0)netbsd.new
d144 1
a144 1
setenv boot "3/rz4/netbsd -a"
d178 1
a178 1
boot 3/rz4/netbsd.new -a
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
