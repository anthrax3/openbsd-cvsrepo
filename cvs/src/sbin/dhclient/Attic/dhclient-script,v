head	1.24;
access;
symbols
	OPENBSD_5_2:1.22.0.8
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.4
	OPENBSD_5_0:1.22.0.2
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.17.0.4
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.2
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.4
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.14.0.2
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.24
date	2012.11.09.23.50.39;	author krw;	state dead;
branches;
next	1.23;

1.23
date	2012.09.18.18.27.55;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2011.04.09.19.53.00;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2011.04.04.12.22.41;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2011.04.04.11.29.51;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2011.04.04.11.14.52;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2011.03.27.12.15.46;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.02.09.57.16;	author phessler;	state Exp;
branches;
next	1.16;

1.16
date	2010.04.04.22.53.50;	author jsg;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.03.05.12.51;	author claudio;	state Exp;
branches;
next	1.14;

1.14
date	2009.01.24.15.48.47;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2009.01.24.13.59.43;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2007.08.11.17.58.55;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2007.02.25.16.02.51;	author stevesk;	state Exp;
branches;
next	1.10;

1.10
date	2006.06.03.19.30.06;	author mpf;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.01.19.00.39;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.24.03.11.12;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.09.09.14.58;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.06.18.22.41;	author claudio;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.05.23.08.54;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2004.04.18.18.22.20;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.12.20.39.21;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.12.20.29.16;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.18.01.26.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Remove now unused files.
@
text
@#!/bin/sh
#
# $OpenBSD: dhclient-script,v 1.23 2012/09/18 18:27:55 krw Exp $
#
# Copyright (c) 2003 Kenneth R Westerback <krw@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

#
# Helper functions that implement common actions.
#

delete_old_address() {
	if [ -n "$old_ip_address" ]; then
		ifconfig $interface inet $old_ip_address delete
		route -q $rdomain delete "$old_ip_address" 127.0.0.1
	fi
}

ip6_delete_old_address() {
	if [ -n "$old_ip6_address" ]; then
		ifconfig $interface inet6 $old_ip6_address delete
	fi
}

add_new_address() {
	ifconfig $interface \
		inet $new_ip_address \
		netmask $new_subnet_mask \
		broadcast $new_broadcast_address

	# XXX Original TIMEOUT code did not do this unless $new_routers was set?
	route -q $rdomain add $new_ip_address 127.0.0.1
}

ip6_add_new_address() {
	ifconfig $interface \
		inet6 $new_ip6_address \
		prefixlen $new_ip6_prefixlen
}

delete_old_routes() {
	# Delete existing default route. We only allow one, so no need to
	# process $old_routers list.
	route -q $rdomain -n flush -inet -iface $interface
	arp -dan
}

add_new_routes() {
	route -q $rdomain -n flush -inet -iface $interface
	for router in $new_routers; do
		if [ "$new_ip_address" = "$router" ]; then
			route -q $rdomain add default -iface $router
		else
			route -q $rdomain add default $router
		fi
		# 2nd and subsequent default routers error out, so explicitly
		# stop processing the list after the first one.
		break
	done
}

add_new_resolv_conf() {
	# Create resolv.conf when either $new_domain_name_servers or
	# $new_domain_name are provided. As reported in PR#3135, some ISPs
	# provide only $new_domain_name_servers.

	rm -f /etc/resolv.conf.std

	if [ -n "$new_domain_name" ]; then
		echo "search $new_domain_name" >>/etc/resolv.conf.std
	fi

	if [ -n "$new_domain_name_servers" ]; then
		for nameserver in $new_domain_name_servers; do
			echo "nameserver $nameserver" >>/etc/resolv.conf.std
		done
	fi

	if [ -f /etc/resolv.conf.std ]; then
		if [ -f /etc/resolv.conf.tail ]; then
			cat /etc/resolv.conf.tail >>/etc/resolv.conf.std
		fi

		# In case (e.g. during OpenBSD installs) /etc/resolv.conf
		# is a symbolic link, take care to preserve the link and write
		# the new data in the correct location.

		if [ -f /etc/resolv.conf ]; then
			cat /etc/resolv.conf > /etc/resolv.conf.save
		fi
		cat /etc/resolv.conf.std > /etc/resolv.conf
		rm -f /etc/resolv.conf.std

		# Try to ensure correct ownership and permissions.
		chown -RL root:wheel /etc/resolv.conf
		chmod -RL 644 /etc/resolv.conf

		return 0
	fi

	return 1
}

ip6_add_new_resolv_conf() {
	# Create resolv.conf when either $new_dhcp6_name_servers or
	# $new_dhcp6_domain_search are provided.

	rm -f /etc/resolv.conf.std6

	if [ -n "$new_dhcp6_domain_search" ]; then
		echo "search $new_dhcp6_domain_search" >>/etc/resolv.conf.std6
	fi

	if [ -n "$new_dhcp6_name_servers" ]; then
		for nameserver in $new_dhcp6_name_servers; do
			echo "nameserver $nameserver" >>/etc/resolv.conf.std6
		done
	fi

	if [ -f /etc/resolv.conf.std6 ]; then
		if [ -f /etc/resolv.conf.tail ]; then
			cat /etc/resolv.conf.tail >>/etc/resolv.conf.std6
		fi

		# In case (e.g. during OpenBSD installs) /etc/resolv.conf
		# is a symbolic link, take care to preserve the link and write
		# the new data in the correct location.

		if [ -f /etc/resolv.conf ]; then
			cat /etc/resolv.conf > /etc/resolv.conf.save
		fi
		cat /etc/resolv.conf.std6 > /etc/resolv.conf
		rm -f /etc/resolv.conf.std6

		# Try to ensure correct ownership and permissions.
		chown -RL root:wheel /etc/resolv.conf
		chmod -RL 644 /etc/resolv.conf

		return 0
	fi

	return 1
}

#
# Start of active code.
#

case $reason in
MEDIUM)
	# Not called by OpenBSD dhclient(8).
	;;

PREINIT)
	# Not called by OpenBSD dhclient(8).
	;;

PREINIT6)
	# Not called by OpenBSD dhclient(8).
	;;

ARPSEND)
	# Not called by OpenBSD dhclient(8).
	# Always fail. i.e. don't wait for ARP packet here.
	exit 1
	;;

ARPCHECK)
	# Not called by OpenBSD dhclient(8).
	# Always succeed. i.e. accept lease.
	;;

BOUND|RENEW|REBIND|REBOOT)
	if [ -n "$old_ip_address" ]; then
		if [ "$old_ip_address" != "$new_ip_address" ]; then
			delete_old_address
			delete_old_routes
		fi
	fi
	if [ "$reason" = BOUND ] ||
	   [ "$reason" = REBOOT ] ||
	   [ -z "$old_ip_address" ] ||
	   [ "$old_ip_address" != "$new_ip_address" ]; then
		add_new_address
		add_new_routes
	fi
	add_new_resolv_conf
	;;

BOUND6|RENEW6|REBIND6)
	if [ -n "$old_ip6_address" ]; then
		if [ "$old_ip6_address" != "$new_ip6_address" ]; then
			ip6_delete_old_address
		fi
	fi
	if [ "$reason" = BOUND6 ] ||
	   [ -z "$old_ip6_address" ] ||
	   [ "$old_ip6_address" != "$new_ip6_address" ]; then
		ip6_add_new_address
	fi
	ip6_add_new_resolv_conf
	;;

EXPIRE|FAIL)
	if [ -n "$old_ip_address" ]; then
		delete_old_address
		delete_old_routes
	fi
	if [ -f /etc/resolv.conf.save ]; then
		cat /etc/resolv.conf.save > /etc/resolv.conf
		rm -f /etc/resolv.conf.save
	fi
	;;

EXPIRE6|RELEASE6|STOP6)
	if [ -n "$old_ip6_address" ]; then
		ip6_delete_old_address
	fi
	if [ -f /etc/resolv.conf.save ]; then
		cat /etc/resolv.conf.save > /etc/resolv.conf
		rm -f /etc/resolv.conf.save
	fi
	;;

TIMEOUT)
	add_new_address
	sleep 1
	if [ -n "$new_routers" ]; then
		set "$new_routers"
		if ping -q -c 1 -w 1 "$1"; then
			add_new_routes
			if add_new_resolv_conf; then
				exit 0
			fi
		fi
	fi
	ifconfig $interface inet $new_ip_address delete
	# XXX Why not a delete_old_address as before all other invocations of
	#     delete_old_routes?
	delete_old_routes
	exit 1
	;;
esac

exit 0
@


1.23
log
@Once resolv.conf.saved has been copied back as resolv.conf, delete it so
it isn't copied again the next time a dhclient goes away.

Do the resolv.conf.saved restore for v6 as well since v6 goes through
the trouble to create resolv.conf.saved.

ok beck@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.22 2011/04/09 19:53:00 krw Exp $
@


1.22
log
@We are incorrectly processing option 33 (static route), treating
is as a host route rather than a classful network route. Too
much trouble to fix such an obsolete feature, so ignore option
33 info.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.21 2011/04/04 12:22:41 krw Exp $
d223 1
d230 4
@


1.21
log
@route(8) has a -q option. No need for all this >/dev/null 2>&1
stuff.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.20 2011/04/04 11:29:51 krw Exp $
a56 9

	if [ -n "$old_static_routes" ]; then
		set $old_static_routes
		while [ $# -gt 1 ]; do
			route -q $rdomain delete "$1" "$2"
			shift; shift
		done
	fi

a71 8

	if [ -n "$new_static_routes" ]; then
		set $new_static_routes
		while [ $# -gt 1 ]; do
			route -q $rdomain add $1 $2
			shift; shift
		done
	fi
@


1.20
log
@Stray '$medium' missed in last commit.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.19 2011/04/04 11:14:52 krw Exp $
d27 1
a27 1
		route $rdomain delete "$old_ip_address" 127.0.0.1 >/dev/null 2>&1
d44 1
a44 1
	route $rdomain add $new_ip_address 127.0.0.1 >/dev/null 2>&1
d56 1
a56 1
	route $rdomain -n flush -inet -iface $interface >/dev/null 2>&1
d61 1
a61 1
			route $rdomain delete "$1" "$2"
d70 1
a70 1
	route $rdomain -n flush -inet -iface $interface >/dev/null 2>&1
d73 1
a73 1
			route $rdomain add default -iface $router >/dev/null 2>&1
d75 1
a75 1
			route $rdomain add default $router >/dev/null 2>&1
d85 1
a85 1
			route $rdomain add $1 $2
@


1.19
log
@Dump some useless calls to dhclient-script. i.e. MEDIUM, PREINIT,
ARPSEND, ARPCHECK. Drop support for 'media', 'medium' and 'alias'
specifications in dhclient.conf. Old leases still parse but these
options now have no effect.

Be more polite and decline all offers we don't accept. Fix a IMSG
length check.

Many expressions of support at various bars.

ok henning@@ deraadt@@ beck@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.18 2011/03/27 12:15:46 krw Exp $
d261 1
a261 1
	ifconfig $interface inet $new_ip_address delete $medium
@


1.18
log
@Fix interval handling. Start at initial_interval instead of
exponentially backed off initial_interval. Don't hallucinate that
we can send ARP packets without waiting. Don't claim to be waiting
for ARP packets when not doing so. Correctly detect expiry of
selecting period. Speeds up negotiations.

Tested on various dhcp servers by Martin Pelika, ian@@, and David
Coppa. And works at Starbucks and a mall for me.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.17 2010/06/02 09:57:16 phessler Exp $
d26 1
a26 1
		ifconfig $interface inet $old_ip_address delete $medium
d33 1
a33 1
		ifconfig $interface inet6 $old_ip6_address delete $medium
d41 1
a41 2
		broadcast $new_broadcast_address \
		$medium
d50 1
a50 18
		prefixlen $new_ip6_prefixlen \
		$medium
}

delete_old_alias() {
	if [ -n "$alias_ip_address" ]; then
		ifconfig $interface \
			inet $alias_ip_address delete > /dev/null 2>&1
		route $rdomain delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
	fi
}

add_new_alias() {
	if [ -n "$alias_ip_address" ]; then
		ifconfig $interface inet $alias_ip_address alias netmask \
			$alias_subnet_mask
		route $rdomain add $alias_ip_address 127.0.0.1
	fi
d180 1
a180 2
	ifconfig $interface $medium
	sleep 1
d184 1
a184 2
	delete_old_alias
	ifconfig $interface up
d188 1
a188 5
	ifconfig $interface up
	;;

ARPCHECK)
	# Always succeed. i.e. accept lease.
d192 1
d197 5
a203 3
		if [ "$old_ip_address" != "$alias_ip_address" ]; then
			delete_old_alias
		fi
a215 3
	if [ "$new_ip_address" != "$alias_ip_address" ]; then
		add_new_alias
	fi
a233 1
	delete_old_alias
a237 2
	# XXX Why add alias we just deleted above?
	add_new_alias
a249 1
	delete_old_alias
a254 3
			if [ "$new_ip_address" != "$alias_ip_address" ]; then
				add_new_alias
			fi
@


1.17
log
@Have dhclient obey the interface's rdomain, instead of doing routes on
rdomain 0.

OK krw@@, claudio@@
sharp stick prodding from claudio@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.16 2010/04/04 22:53:50 jsg Exp $
d211 7
a217 1
ARPCHECK|ARPSEND)
@


1.16
log
@Add some ipv6 hooks the isc code expects for dhcpv6.
ok krw@@ ramdisks checked by deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.15 2009/06/03 05:12:51 claudio Exp $
d27 1
a27 1
		route delete "$old_ip_address" 127.0.0.1 >/dev/null 2>&1
d45 1
a45 1
	route add $new_ip_address 127.0.0.1 >/dev/null 2>&1
d59 1
a59 1
		route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
d67 1
a67 1
		route add $alias_ip_address 127.0.0.1
d74 1
a74 1
	route -n flush -inet -iface $interface >/dev/null 2>&1
d79 1
a79 1
			route delete "$1" "$2"
d88 1
a88 1
	route -n flush -inet -iface $interface >/dev/null 2>&1
d91 1
a91 1
			route add default -iface $router >/dev/null 2>&1
d93 1
a93 1
			route add default $router >/dev/null 2>&1
d103 1
a103 1
			route add $1 $2
@


1.15
log
@Use the new powerful route flush to clean up the mess. With this multiple
dhclient can more or less peacefully coexist. OK beck@@ krw@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.14 2009/01/24 15:48:47 sobrado Exp $
d31 6
d48 7
d151 41
d207 4
d237 14
d261 6
@


1.14
log
@improve indentation without wasting space on the install media;
make source code fit on 80-column displays; while here, remove superfluous
comment sign.

ok krw@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.13 2009/01/24 13:59:43 krw Exp $
d61 1
a61 1
	route delete default >/dev/null 2>&1
d75 1
a75 1
	route delete default >/dev/null 2>&1
@


1.13
log
@Improve comment about resolv.conf creation. Prodded by sobrado@@.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.12 2007/08/11 17:58:55 krw Exp $
a18 1
#
d44 2
a45 1
		ifconfig $interface inet $alias_ip_address delete > /dev/null 2>&1
d53 1
a53 1
		    $alias_subnet_mask
@


1.12
log
@Kill a couple of 'echo' statements that can never produce visible
output. i.e. not visible on the screen, nor in any log.

If nothing else, makes dhclient-script smaller for install media.

'yesh kill' (sic) henning@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.11 2007/02/25 16:02:51 stevesk Exp $
d97 3
a99 5
	# XXX Old code did not create/update resolv.conf unless both
	# $new_domain_name and $new_domain_name_servers were provided.  PR
	# #3135 reported some ISPs only provide $new_domain_name_servers and
	# thus broke the script. This code creates the resolv.conf if either
	# are provided.
@


1.11
log
@no need to quote/escape here; ok krw@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.10 2006/06/03 19:30:06 mpf Exp $
a142 8

if [ -n "$new_network_number" ]; then
	echo "New Network Number: $new_network_number"
fi

if [ -n "$new_broadcast_address" ]; then
	echo "New Broadcast Address: $new_broadcast_address"
fi
@


1.10
log
@Use ifconfig delete/alias conforming with the man page.
OK krw@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.9 2006/06/01 19:00:39 krw Exp $
d176 3
a178 3
	if [ "$reason" = BOUND ] || \
	   [ "$reason" = REBOOT ] || \
	   [ -z "$old_ip_address" ] || \
@


1.9
log
@'-alias' is deprecated. Use 'delete' in ifconfig statements.

ok beck@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.8 2005/05/24 03:11:12 todd Exp $
d27 1
a27 1
		ifconfig $interface inet delete $old_ip_address $medium
d45 1
a45 1
		ifconfig $interface inet delete $alias_ip_address > /dev/null 2>&1
d52 1
a52 1
		ifconfig $interface inet alias $alias_ip_address netmask \
d218 1
a218 1
	ifconfig $interface inet delete $new_ip_address $medium
@


1.8
log
@no more 'ifconfig $if 0.0.0.0 up' only 'ifconfig $if up' since dhclient
uses bpf exclusively

ok deraadt@@, henning@@, claudio@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.7 2005/04/09 09:14:58 jmc Exp $
d27 1
a27 1
		ifconfig $interface inet -alias $old_ip_address $medium
d45 1
a45 1
		ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
d218 1
a218 1
	ifconfig $interface inet -alias $new_ip_address $medium
@


1.7
log
@incorrect apostrophe (in comment);
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.6 2004/05/06 18:22:41 claudio Exp $
a154 1
	ifconfig $interface inet -alias 0.0.0.0 $medium >/dev/null 2>&1
d160 1
a160 1
	ifconfig $interface inet 0.0.0.0 netmask 0.0.0.0 broadcast 255.255.255.255 up
@


1.6
log
@Support ADSL routers running in half-bridge mode or acctually
almost-broken mode. It seems these devices do proxyarp for the whole
internet and do not provide a real default gateway.
Fix for and from PR3747 by Andrew Basterfield.
OK deraadt@@ makes sense krw@@
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.5 2004/05/05 23:08:54 deraadt Exp $
d99 1
a99 1
	# #3135 reported some ISP's only provide $new_domain_name_servers and
@


1.5
log
@line wrap
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.4 2004/04/18 18:22:20 deraadt Exp $
d77 5
a81 1
		route add default $router >/dev/null 2>&1
@


1.4
log
@zap comment; han@@mijncomputer.nl
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.3 2004/04/12 20:39:21 deraadt Exp $
d52 2
a53 1
		ifconfig $interface inet alias $alias_ip_address netmask $alias_subnet_mask
@


1.3
log
@spacing
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.2 2004/04/12 20:29:16 henning Exp $
a69 1
	# XXX BOUND RENEW REBIND REBOOT did not /dev/null output before.
@


1.2
log
@simplify, from Han Boetes & pb@@, theo ok
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.1 2004/01/18 01:26:20 deraadt Exp $
d162 1
a162 1
  
@


1.1
log
@this is where dhclient will start surgery
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.17 2004/01/11 03:16:57 deraadt Exp $
d71 1
a71 1
	arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -d \1/p' | sh >/dev/null 2>&1
@

