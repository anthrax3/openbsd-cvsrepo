head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.4
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.9.0.14
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.28
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.24
	OPENBSD_5_0:1.5.0.22
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2016.08.16.21.57.51;	author krw;	state Exp;
branches;
next	1.9;
commitid	fX275BVALtbId2xm;

1.9
date	2013.12.05.22.31.35;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2013.10.22.18.15.59;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.30.18.39.44;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.22.00.14.42;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.15.08.10.57;	author fkr;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.08.17.25.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.18.19.17.54;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.04.12.16.56;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.18.01.26.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Track SSID in leases file and only consider leases from the current SSID when
starting up dhclient on wifi interfaces. In theory will preserve leases from
other SSID's and speed up obtaining a lease by not wasting time attempting
to re-acquire a lease from a different SSID.

Experimental feature from n2k16 needing some real world testing before g2k16.
@
text
@/*	$OpenBSD: dhctoken.h,v 1.9 2013/12/05 22:31:35 krw Exp $	*/

/* Tokens for config file lexer and parser. */

/*
 * Copyright (c) 1995, 1996, 1997, 1998, 1999
 * The Internet Software Consortium.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of The Internet Software Consortium nor the names
 *    of its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INTERNET SOFTWARE CONSORTIUM AND
 * CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE INTERNET SOFTWARE CONSORTIUM OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * This software has been written for the Internet Software Consortium
 * by Ted Lemon <mellon@@fugue.com> in cooperation with Vixie
 * Enterprises.  To learn more about the Internet Software Consortium,
 * see ``http://www.vix.com/isc''.  To learn more about Vixie
 * Enterprises, see ``http://www.vix.com''.
 */

#define TOK_FIRST_TOKEN	TOK_HARDWARE
#define TOK_HARDWARE		257
#define TOK_FILENAME		258
#define TOK_FIXED_ADDR		259
#define TOK_OPTION		260
#define TOK_ETHERNET		261
#define TOK_STRING		262
#define TOK_NUMBER		263
#define TOK_NUMBER_OR_NAME	264
#define TOK_NAME		265
#define TOK_LEASE		266
#define TOK_SERVER_NAME		267
#define TOK_SEND		269
#define TOK_REQUEST		270
#define TOK_REQUIRE		271
#define TOK_TIMEOUT		272
#define TOK_RETRY		273
#define TOK_SELECT_TIMEOUT	274
#define TOK_NEXT_SERVER		275
#define TOK_INTERFACE		276
#define TOK_RENEW		277
#define TOK_REBIND		278
#define TOK_EXPIRE		279
#define TOK_BOOTP		280
#define TOK_DENY		281
#define TOK_DEFAULT		282
#define TOK_MEDIA		283
#define TOK_MEDIUM		284
#define TOK_ALIAS		285
#define TOK_REBOOT		286
#define TOK_BACKOFF_CUTOFF	287
#define TOK_INITIAL_INTERVAL	288
#define TOK_SUPERSEDE		289
#define TOK_APPEND		290
#define TOK_PREPEND		291
#define TOK_REJECT		292
#define TOK_LINK_TIMEOUT	294
#define TOK_IGNORE		295
#define TOK_SSID		296

#define is_identifier(x)	((x) >= TOK_FIRST_TOKEN &&	\
				 (x) != TOK_STRING &&	\
				 (x) != TOK_NUMBER &&	\
				 (x) != EOF)
@


1.9
log
@Stop pretending we still support FDDI or token ring hardware types.

idea ok deraadt@@ matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.8 2013/10/22 18:15:59 krw Exp $	*/
d81 1
@


1.8
log
@Save 'next-server' (a.k.a. siaddr) info in leases file. Saving the
file name without the server address seems silly.

Tested & ok uwe@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.7 2012/10/30 18:39:44 krw Exp $	*/
a54 1
#define TOK_TOKEN_RING		268
a78 1
#define TOK_FDDI		293
@


1.7
log
@Nuke dhclient-script and dhclient.conf 'script' directive. Do all
interface and route configuration via ioctl's and routing sockets.

This will break configurations using local enhancements of
dhclient-script, which will now require alternate arrangements.

Committing early to allow time to identify and develop required
alternatives.

Several proddings by deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.6 2012/08/22 00:14:42 tedu Exp $	*/
d62 1
@


1.6
log
@add ignore keyword to conf file, allowing one to ignore unwanted info
from the server without necessarily speciyfing a supersede value
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.5 2006/05/15 08:10:57 fkr Exp $	*/
a61 1
#define TOK_SCRIPT		275
@


1.5
log
@whitespace cleanup
ok claudio@@, mbalmer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.4 2006/05/08 17:25:59 deraadt Exp $	*/
d82 1
@


1.4
log
@add 'link-timeout n' seconds option to grammer, from fkr@@hazardous.org
default remains 10 seconds.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.3 2006/04/18 19:17:54 deraadt Exp $	*/
d65 1
a65 1
#define	TOK_REBIND		278
d74 2
a75 2
#define	TOK_BACKOFF_CUTOFF	287
#define	TOK_INITIAL_INTERVAL	288
@


1.3
log
@cleanup keyword lookup for the lexer, and remove keywords not valid in
either dhclient or dhcpd context; tested by many
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.2 2004/02/04 12:16:56 henning Exp $	*/
d81 1
@


1.2
log
@$OpenBSD$, tedu
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 38
a80 7
#define SEMI ';'
#define DOT '.'
#define COLON ':'
#define COMMA ','
#define SLASH '/'
#define LBRACE '{'
#define RBRACE '}'
d82 3
a84 85
#define FIRST_TOKEN	HOST
#define HOST		256
#define HARDWARE	257
#define FILENAME	258
#define FIXED_ADDR	259
#define OPTION		260
#define ETHERNET	261
#define STRING		262
#define NUMBER		263
#define NUMBER_OR_NAME	264
#define NAME		265
#define TIMESTAMP	266
#define STARTS		267
#define ENDS		268
#define UID		269
#define CLASS		270
#define LEASE		271
#define RANGE		272
#define PACKET		273
#define CIADDR		274
#define YIADDR		275
#define SIADDR		276
#define GIADDR		277
#define SUBNET		278
#define NETMASK		279
#define DEFAULT_LEASE_TIME 280
#define MAX_LEASE_TIME	281
#define VENDOR_CLASS	282
#define USER_CLASS	283
#define SHARED_NETWORK	284
#define SERVER_NAME	285
#define DYNAMIC_BOOTP	286
#define SERVER_IDENTIFIER 287
#define DYNAMIC_BOOTP_LEASE_CUTOFF 288
#define DYNAMIC_BOOTP_LEASE_LENGTH 289
#define BOOT_UNKNOWN_CLIENTS 290
#define NEXT_SERVER	291
#define TOKEN_RING	292
#define GROUP		293
#define ONE_LEASE_PER_CLIENT 294
#define GET_LEASE_HOSTNAMES 295
#define USE_HOST_DECL_NAMES 296
#define SEND		297
#define CLIENT_IDENTIFIER 298
#define REQUEST		299
#define REQUIRE		300
#define TIMEOUT		301
#define RETRY		302
#define SELECT_TIMEOUT	303
#define SCRIPT		304
#define INTERFACE	305
#define RENEW		306
#define	REBIND		307
#define EXPIRE		308
#define UNKNOWN_CLIENTS	309
#define	ALLOW		310
#define BOOTP		311
#define DENY		312
#define BOOTING		313
#define DEFAULT		314
#define MEDIA		315
#define MEDIUM		316
#define ALIAS		317
#define REBOOT		318
#define ABANDONED	319
#define	BACKOFF_CUTOFF	320
#define	INITIAL_INTERVAL 321
#define NAMESERVER	322
#define	DOMAIN		323
#define SEARCH		324
#define SUPERSEDE	325
#define APPEND		326
#define PREPEND		327
#define HOSTNAME	328
#define CLIENT_HOSTNAME	329
#define REJECT		330
#define FDDI		331
#define USE_LEASE_ADDR_FOR_DEFAULT_ROUTE 332
#define AUTHORITATIVE	333
#define TOKEN_NOT	334
#define ALWAYS_REPLY_RFC1048 335

#define is_identifier(x)	((x) >= FIRST_TOKEN &&	\
				 (x) != STRING &&	\
				 (x) != NUMBER &&	\
@


1.1
log
@this is where dhclient will start surgery
@
text
@d1 1
a1 1
/* dhctoken.h
d3 1
a3 1
   Tokens for config file lexer and parser. */
@

