head	1.21;
access;
symbols
	OPENBSD_6_2:1.21.0.2
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.18.0.8
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.6
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.10
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.6
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.4
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.7.0.16
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.12
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.14
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.10
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.8
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.6
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.5.0.10
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4;
locks; strict;
comment	@ * @;


1.21
date	2017.07.24.16.17.35;	author krw;	state Exp;
branches;
next	1.20;
commitid	nGCLYHNGfubVs4Qc;

1.20
date	2017.07.08.00.36.10;	author krw;	state Exp;
branches;
next	1.19;
commitid	fG77ONbQ8YTfWdI4;

1.19
date	2017.07.07.16.58.45;	author krw;	state Exp;
branches;
next	1.18;
commitid	SZpYrtXCWLHh9BMf;

1.18
date	2015.10.26.16.32.33;	author krw;	state Exp;
branches;
next	1.17;
commitid	Y03Zu0zFPhi0Triz;

1.17
date	2014.01.21.03.07.50;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2013.12.05.22.31.35;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2013.06.09.16.21.50;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.09.00.30.06;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2013.06.04.21.04.52;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.02.16.35.27;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.13.18.38.02;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2013.01.13.18.11.34;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2011.05.11.14.38.36;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2010.10.15.09.51.15;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.01.22.39.43;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.11.01.51.59;	author stevesk;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.04.15.49.49;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.07.13.59.45;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.07.13.26.35;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.04.12.16.56;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.18.01.26.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Tweak some comments
@
text
@/*	$OpenBSD: dhcp.h,v 1.20 2017/07/08 00:36:10 krw Exp $	*/

/* Protocol structures. */

/*
 * Copyright (c) 1995, 1996 The Internet Software Consortium.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of The Internet Software Consortium nor the names
 *    of its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INTERNET SOFTWARE CONSORTIUM AND
 * CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE INTERNET SOFTWARE CONSORTIUM OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * This software has been written for the Internet Software Consortium
 * by Ted Lemon <mellon@@fugue.com> in cooperation with Vixie
 * Enterprises.  To learn more about the Internet Software Consortium,
 * see ``http://www.vix.com/isc''.  To learn more about Vixie
 * Enterprises, see ``http://www.vix.com''.
 */

#define DHCP_UDP_OVERHEAD	(20 + /* IP header */		\
				 8)   /* UDP header */
#define DHCP_SNAME_LEN		64
#define DHCP_FILE_LEN		128
#define DHCP_FIXED_NON_UDP	236
#define DHCP_FIXED_LEN		(DHCP_FIXED_NON_UDP + DHCP_UDP_OVERHEAD)
						/* Everything but options. */
#define DHCP_MTU_MAX		1500
#define DHCP_OPTION_LEN		(DHCP_MTU_MAX - DHCP_FIXED_LEN)

/* Respect historical limits on 'search' line in resolv.conf(5) */
#define DHCP_DOMAIN_SEARCH_LEN	1024
#define DHCP_DOMAIN_SEARCH_CNT	6

#define BOOTP_MIN_LEN		300

struct dhcp_packet {
	uint8_t		op;	/* Message opcode/type */
	uint8_t		htype;	/* Hardware addr type (see net/if_types.h) */
	uint8_t		hlen;	/* Hardware addr length */
	uint8_t		hops;	/* Number of relay agent hops from client */
	uint32_t	xid;	/* Transaction ID */
	uint16_t	secs;	/* Seconds since client started looking */
	uint16_t	flags;	/* Flag bits */
	struct in_addr	ciaddr;	/* Client IP address (if already in use) */
	struct in_addr	yiaddr;	/* Client IP address */
	struct in_addr	siaddr;	/* IP address of next server to talk to */
	struct in_addr	giaddr;	/* DHCP relay agent IP address */
	unsigned char	chaddr[16];		/* Client hardware address */
	char		sname[DHCP_SNAME_LEN];	/* Server name */
	char		file[DHCP_FILE_LEN];	/* Boot filename */
	unsigned char	options[DHCP_OPTION_LEN];
				/* Optional parameters
				   (actual length dependent on MTU). */
};

/* BOOTP (rfc951) message types */
#define BOOTREQUEST	1
#define BOOTREPLY	2

/* Possible values for flags field. */
#define BOOTP_BROADCAST 32768L

/* Possible values for hardware type (htype) field. */
#define HTYPE_ETHER		1	/* Ethernet			*/
#define HTYPE_IPSEC_TUNNEL	31	/* IPsec Tunnel (RFC3456)	*/

/*
 * Magic cookie validating dhcp options field (and bootp vendor
 * extensions field).
 */
#define DHCP_OPTIONS_COOKIE		"\143\202\123\143"
#define DHCP_OPTIONS_COOKIE_LEN		4
#define DHCP_OPTIONS_MESSAGE_TYPE	"\065\001\000"

/* DHCP Option codes: */
#define DHO_PAD				0
#define DHO_SUBNET_MASK			1
#define DHO_TIME_OFFSET			2
#define DHO_ROUTERS			3
#define DHO_TIME_SERVERS		4
#define DHO_NAME_SERVERS		5
#define DHO_DOMAIN_NAME_SERVERS		6
#define DHO_LOG_SERVERS			7
#define DHO_COOKIE_SERVERS		8
#define DHO_LPR_SERVERS			9
#define DHO_IMPRESS_SERVERS		10
#define DHO_RESOURCE_LOCATION_SERVERS	11
#define DHO_HOST_NAME			12
#define DHO_BOOT_SIZE			13
#define DHO_MERIT_DUMP			14
#define DHO_DOMAIN_NAME			15
#define DHO_SWAP_SERVER			16
#define DHO_ROOT_PATH			17
#define DHO_EXTENSIONS_PATH		18
#define DHO_IP_FORWARDING		19
#define DHO_NON_LOCAL_SOURCE_ROUTING	20
#define DHO_POLICY_FILTER		21
#define DHO_MAX_DGRAM_REASSEMBLY	22
#define DHO_DEFAULT_IP_TTL		23
#define DHO_PATH_MTU_AGING_TIMEOUT	24
#define DHO_PATH_MTU_PLATEAU_TABLE	25
#define DHO_INTERFACE_MTU		26
#define DHO_ALL_SUBNETS_LOCAL		27
#define DHO_BROADCAST_ADDRESS		28
#define DHO_PERFORM_MASK_DISCOVERY	29
#define DHO_MASK_SUPPLIER		30
#define DHO_ROUTER_DISCOVERY		31
#define DHO_ROUTER_SOLICITATION_ADDRESS	32
#define DHO_STATIC_ROUTES		33
#define DHO_TRAILER_ENCAPSULATION	34
#define DHO_ARP_CACHE_TIMEOUT		35
#define DHO_IEEE802_3_ENCAPSULATION	36
#define DHO_DEFAULT_TCP_TTL		37
#define DHO_TCP_KEEPALIVE_INTERVAL	38
#define DHO_TCP_KEEPALIVE_GARBAGE	39
#define DHO_NIS_DOMAIN			40
#define DHO_NIS_SERVERS			41
#define DHO_NTP_SERVERS			42
#define DHO_VENDOR_ENCAPSULATED_OPTIONS	43
#define DHO_NETBIOS_NAME_SERVERS	44
#define DHO_NETBIOS_DD_SERVER		45
#define DHO_NETBIOS_NODE_TYPE		46
#define DHO_NETBIOS_SCOPE		47
#define DHO_FONT_SERVERS		48
#define DHO_X_DISPLAY_MANAGER		49
#define DHO_DHCP_REQUESTED_ADDRESS	50
#define DHO_DHCP_LEASE_TIME		51
#define DHO_DHCP_OPTION_OVERLOAD	52
#define DHO_DHCP_MESSAGE_TYPE		53
#define DHO_DHCP_SERVER_IDENTIFIER	54
#define DHO_DHCP_PARAMETER_REQUEST_LIST	55
#define DHO_DHCP_MESSAGE		56
#define DHO_DHCP_MAX_MESSAGE_SIZE	57
#define DHO_DHCP_RENEWAL_TIME		58
#define DHO_DHCP_REBINDING_TIME		59
#define DHO_DHCP_CLASS_IDENTIFIER	60
#define DHO_DHCP_CLIENT_IDENTIFIER	61
#define DHO_NISPLUS_DOMAIN		64
#define DHO_NISPLUS_SERVERS		65
#define DHO_TFTP_SERVER			66
#define DHO_BOOTFILE_NAME		67
#define DHO_MOBILE_IP_HOME_AGENT	68
#define DHO_SMTP_SERVER			69
#define DHO_POP_SERVER			70
#define DHO_NNTP_SERVER			71
#define DHO_WWW_SERVER			72
#define DHO_FINGER_SERVER		73
#define DHO_IRC_SERVER			74
#define DHO_STREETTALK_SERVER		75
#define DHO_STREETTALK_DIRECTORY_ASSISTANCE_SERVER	76
#define DHO_DHCP_USER_CLASS_ID		77
#define DHO_RELAY_AGENT_INFORMATION	82
#define DHO_NDS_SERVERS			85
#define DHO_NDS_TREE_NAME		86
#define DHO_NDS_CONTEXT			87
#define	DHO_DOMAIN_SEARCH		119
#define DHO_CLASSLESS_STATIC_ROUTES	121
#define DHO_TFTP_CONFIG_FILE		144
#define DHO_VOIP_CONFIGURATION_SERVER	150
#define DHO_CLASSLESS_MS_STATIC_ROUTES	249
#define DHO_AUTOPROXY_SCRIPT		252
#define DHO_END				255
#define DHO_COUNT			256	/* # of DHCP options */

/* DHCP message types. */
#define DHCPDISCOVER	1
#define DHCPOFFER	2
#define DHCPREQUEST	3
#define DHCPDECLINE	4
#define DHCPACK		5
#define DHCPNAK		6
#define DHCPRELEASE	7
#define DHCPINFORM	8

/* Relay Agent Information sub-options */
#define RAI_CIRCUIT_ID	1
#define RAI_REMOTE_ID	2
#define RAI_AGENT_ID	3
@


1.20
log
@Always use uintNN_t instead of sometimes u_intNN_t
and sometimes uintNN_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.19 2017/07/07 16:58:45 krw Exp $	*/
d90 4
a93 2
/* Magic cookie validating dhcp options field (and bootp vendor
   extensions field). */
a98 1

@


1.19
log
@Replace the many occurances of '256' with a new #define
DHO_COUNT.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.18 2015/10/26 16:32:33 krw Exp $	*/
d60 15
a74 15
	u_int8_t  op;		/* Message opcode/type */
	u_int8_t  htype;	/* Hardware addr type (see net/if_types.h) */
	u_int8_t  hlen;		/* Hardware addr length */
	u_int8_t  hops;		/* Number of relay agent hops from client */
	u_int32_t xid;		/* Transaction ID */
	u_int16_t secs;		/* Seconds since client started looking */
	u_int16_t flags;	/* Flag bits */
	struct in_addr ciaddr;	/* Client IP address (if already in use) */
	struct in_addr yiaddr;	/* Client IP address */
	struct in_addr siaddr;	/* IP address of next server to talk to */
	struct in_addr giaddr;	/* DHCP relay agent IP address */
	unsigned char chaddr[16];	/* Client hardware address */
	char sname[DHCP_SNAME_LEN];	/* Server name */
	char file[DHCP_FILE_LEN];	/* Boot filename */
	unsigned char options[DHCP_OPTION_LEN];
@


1.18
log
@Give dhclient(8) the ability to use option 119, a.k.a. "Domain
Search" if supplied by the server.

Requested by a few. Original diff from Ray Lai via tech@@.

Tested & ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.17 2014/01/21 03:07:50 krw Exp $	*/
d185 1
@


1.17
log
@Add parsing for options 121 (classless-static-routes) and 249
(classless-ms-static-routes). dhcpd can now specify and serve
these options and dhclient can recognize and use supersede, etc.
statements on them.

Based on a diff from Stefan Rinke. Thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.16 2013/12/05 22:31:35 krw Exp $	*/
d53 4
d178 1
@


1.16
log
@Stop pretending we still support FDDI or token ring hardware types.

idea ok deraadt@@ matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.15 2013/06/09 16:21:50 krw Exp $	*/
d177 1
@


1.15
log
@Re-apply static route and classless static route support -- this time
passing the correct destination for the default route, '0.0.0.0', rather
than the new lease address.

Populating egress group works this time.

Problem found the hard way by Chris Smith.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.14 2013/06/09 00:30:06 krw Exp $	*/
a83 2
#define HTYPE_IEEE802		6	/* IEEE 802.2 Token Ring	*/
#define HTYPE_FDDI		8	/* FDDI				*/
@


1.14
log
@Backout static/classless route handling and default route refactoring
since the former relies on the latter and the latter breaks 'egress'
group populating.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.13 2013/06/04 21:04:52 krw Exp $	*/
d176 1
@


1.13
log
@Add support for static routes option (33) and classless static
routes option (121).

ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.12 2013/05/02 16:35:27 krw Exp $	*/
a175 1
#define DHO_CLASSLESS_STATIC_ROUTES	121
@


1.12
log
@Bunch of comment/whitespace cleanup. Eliminate some misleading or
pointless ones, make multiline comments readable, nuke '...' in
favour of '.', etc.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.11 2013/01/13 18:38:02 krw Exp $	*/
d176 1
@


1.11
log
@Tweak whitespace, add missing #defines, use DHO_RELAY_AGENT_INFORMATION
rather than DHO_DHCP_AGENT_OPTIONS. Makes these files identical again.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.10 2013/01/13 18:11:34 krw Exp $	*/
d3 1
a3 1
/* Protocol structures... */
d79 1
a79 1
/* Possible values for flags field... */
d82 1
a82 1
/* Possible values for hardware type (htype) field... */
d84 2
a85 2
#define HTYPE_IEEE802		6	/* IEEE 802.2 Token Ring...	*/
#define HTYPE_FDDI		8	/* FDDI...			*/
@


1.10
log
@Add DHO_ defines for all known options. Use same names as ISC where
available. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.9 2011/05/11 14:38:36 krw Exp $	*/
d83 4
a86 3
#define HTYPE_ETHER	1		/* Ethernet			*/
#define HTYPE_IEEE802	6		/* IEEE 802.2 Token Ring...	*/
#define HTYPE_FDDI	8		/* FDDI...			*/
d91 1
d172 1
a172 1
#define DHO_DHCP_AGENT_OPTIONS		82
d190 5
@


1.9
log
@Make dhclient more friendly to sequential option processing by
always starting DHCP packet options with DHO_DHCP_MESSAGE_TYPE. Now
DHCP-specific options always come after the option identifying the
packet as DHCP rather than BOOTP. Makes at least Nortel NetIP DHCP
server happier. Clean up some code and parameter passing.

Closes PR#6543, as confirmed by original submitter and patch
tester Len Zaifman. Thanks!

ok matthew@@ (who hates the ISC-like code)
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.8 2010/10/15 09:51:15 jsg Exp $	*/
d156 2
d159 10
d170 7
@


1.8
log
@Add and ignore DHCP option 66/0x42 TFTP server name.
ok krw@@ phessler@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.7 2007/02/01 22:39:43 krw Exp $	*/
d89 2
a90 1
#define DHCP_OPTIONS_COOKIE	"\143\202\123\143"
@


1.7
log
@Don't count ethernet as overhead for UDP packet constuction. Gives
14 more bytes of option space! A change ISC made a long time ago.

ok stevesk@@ (DHCP) canacar@@ (bpf)
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.6 2007/01/11 01:51:59 stevesk Exp $	*/
d155 1
@


1.6
log
@remove unused #define DHCP_MIN_LEN
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.5 2004/05/04 15:49:49 deraadt Exp $	*/
d43 1
a43 2
#define DHCP_UDP_OVERHEAD	(14 + /* Ethernet header */	\
				 20 + /* IP header */		\
@


1.5
log
@zap some spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.4 2004/02/07 13:59:45 henning Exp $	*/
a54 1
#define DHCP_MIN_LEN		548
@


1.4
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.3 2004/02/07 13:26:35 henning Exp $	*/
d55 1
a55 1
#define DHCP_MIN_LEN            548
d85 2
a86 2
#define HTYPE_ETHER	1               /* Ethernet 10Mbps              */
#define HTYPE_IEEE802	6               /* IEEE 802.2 Token Ring...	*/
@


1.3
log
@more KNF From: Emil Mikulic <emikulic@@dmr.ath.cx>
great job.
no binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhcp.h,v 1.2 2004/02/04 12:16:56 henning Exp $	*/
d58 1
a58 1
  	u_int8_t  op;		/* Message opcode/type */
@


1.2
log
@$OpenBSD$, tedu
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 2
a44 2
#define DHCP_UDP_OVERHEAD	(14 + /* Ethernet header */		\
				 20 + /* IP header */			\
d69 4
a72 4
	unsigned char chaddr [16];	/* Client hardware address */
	char sname [DHCP_SNAME_LEN];	/* Server name */
	char file [DHCP_FILE_LEN];	/* Boot filename */
	unsigned char options [DHCP_OPTION_LEN];
d78 1
a78 1
#define	BOOTREQUEST	1
@


1.1
log
@this is where dhclient will start surgery
@
text
@d1 1
a1 1
/* dhcp.h
d3 1
a3 1
   Protocol structures... */
@

