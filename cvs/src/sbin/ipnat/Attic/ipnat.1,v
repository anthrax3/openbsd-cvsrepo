head	1.15;
access;
symbols
	OPENBSD_2_4:1.14.0.2
	OPENBSD_2_4_BASE:1.14
	OPENBSD_2_3:1.12.0.2
	OPENBSD_2_3_BASE:1.12
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@# @;


1.15
date	99.02.07.00.48.29;	author deraadt;	state dead;
branches;
next	1.14;

1.14
date	98.10.11.05.35.48;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	98.09.15.09.57.29;	author pattonme;	state Exp;
branches;
next	1.12;

1.12
date	98.03.22.05.31.08;	author johns;	state Exp;
branches;
next	1.11;

1.11
date	98.02.19.01.58.46;	author gene;	state Exp;
branches;
next	1.10;

1.10
date	98.01.26.04.13.46;	author dgregor;	state Exp;
branches;
next	1.9;

1.9
date	97.12.02.11.02.10;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	97.02.26.05.00.36;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	97.02.26.05.00.10;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.02.26.04.54.54;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.02.11.22.24.14;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.02.07.02.01.29;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.07.18.05.08.38;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.31.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.10.21.39.55;	author dm;	state Exp;
branches;
next	;


desc
@@


1.15
log
@man pages belong in section 8
@
text
@.Dd October 10, 1998
.Dt IPNAT 1
.Os
.Sh NAME
.Nm ipnat
.Nd User interface to the NAT
.Sh SYNOPSIS
.Nm ipnat
.Op Fl CFlnrsv
.Op Fl f Ar filename
.Sh DESCRIPTION
.Nm ipnat
provides control over the kernel's network address translation (NAT). The NAT remaps IP addresses from one range to another. In other words, when properly configured on a gateway, the NAT provides internet access to connected computers lacking officially assigned IP addresses. It is discussed in RFC 1631.
.Pp
Options are as follows:
.Bl -tag -width Ds
.It Fl C
Delete all entries in the NAT list.
.It Fl F
Flush all active mappings from the NAT table. 
.It Fl l
Display the current entries and mappings.
.It Fl n
Do not alter the NAT table.
.It Fl r
Remove, rather than add, entries specified in the rule list. 
.It Fl s
Display statistics.
.It Fl v
Verbosity, displays detailed information pertaining to rule processing. 
.El
.Pp
Certain configuration requirements must be met before
.Nm ipnat
will work. These are listed in
.Pa /usr/share/ipf/nat.2 .
.Pp
.Nm ipnat
operates on a list of rules, specified by 
.Ar filename .
This file is typically 
.Pa /etc/ipnat.rules ;
stdin is represented by "\-". Each rule is parsed, then sequentially added to
the kernel's internal NAT list. Like 
.Xr ipf 1 ,
if an entry contradicts another previously added, the newer will take precedence. 
.Pp
Comments (beginning with a ``#'') and blank lines are ignored as
.Nm ipnat
parses the file. Entries may be separated by spaces or tabs. Each rule must begin with either
.Em map
or
.Em rdr .  
.Pp
.Em map 
tells the NAT how a range of addresses should be translated. The entries use the following format:
.Pp
.Bd -unfilled -offset indent -compact
map ifname internal/mask -> external/mask options
.Ed
.Pp
The
.Em ifname 
field is the interface to which packets are sent. A gateway with a PPP link would probably use ``ppp0'' or ``tun0'', while an ethernet connection would instead have the name of its device. 
.Pp
The address range of the LAN goes in the
.Em internal
field. This is usually one of the three blocks of address space the Internet Assigned Numbers Authority has allocated for private networks (RFC 1597):
.Pp
.Bd -unfilled -offset indent -compact
10.0.0.0    - 10.255.255.255
172.16.0.0  - 172.16.255.255
192.168.0.0 - 192.168.255.255
.Ed
.Pp
The
.Em external
address is the offically assigned IP number of the gateway or network.
.Pp
.Em mask
is the netmask of the address. This mask is 32 bits long, and is divided into four 8 bit numbers.
.Pp
.Bd -unfilled -offset indent -compact
11111111.0.0.0				Class A - 8 bits set.
11111111.11111111.0.0 		Class B - 16 bits set.
11111111.11111111.11111111.0	Class C - 24 bits set.
.Ed
.Pp
The number of bits set in the mask is placed following the IP address.
.Pp
Both
.Em internal 
and 
.Em external
may be an actual IP address, a hostname, or the name of an interface. If it is a network number, however, a problem may arise. For example:
.Pp
.Bd -unfilled -offset indent -compact
map ppp0 10.0.0.0/8 -> 209.1.2.0/24
.Ed
.Pp
16,000,000 IP addresses are being squeezed into an address space of only 254. This is solved by the
.Em portmap 
option, which remaps ports instead of IP addresses. The protocol is specified by following the option with either
.Em tcp , 
.Em udp ,
.Em tcp/udp ,
or 
.Em tcpudp
(the last two have the same effect). The syntax to assign a range of ports is ``portnumber:portnumber''. This looks like:
.Pp
.Bd -unfilled -offset indent -compact 
map ppp0 10.0.0.0/8 -> 209.1.2.0/24 portmap tcp/udp 1025:65000
map ppp0 10.0.0.0/8 -> 209.1.2.0/24
.Ed 
.Pp
That will cut the number down from ~16,000,000 addresses short to only 527,566.
.Pp
.Em rdr
tells the NAT how to redirect incoming packets. It is useful if one wishes to redirect a connection through a proxy, or to another box on the private network. The format of this directive is:
.Pp
rdr ifname external/mask port service -> internal port service protocol
.Pp
This setup is best described by an example of an actual entry:
.Pp
.Bd -unfilled -offset indent -compact
rdr xl0 0.0.0.0/0 port 25 -> 204.213.176.10 port smtp 
.Ed
.Pp
This redirects all smtp packets received on xl0 to 204.213.176.10, port 25. A netmask is not needed on the
.Em internal
address; it is always 32. The 
.Em external
and 
.Em internal
fields, similar to the
.Em map
directive, may be actual addresses, hostnames, or interfaces. Likewise, the 
.Em service
field may be the name of a service, or a port number. The 
.Em protocol
of the service may be selected by appending 
.Em tcp , 
.Em udp ,
.Em tcp/udp ,
or
.Em tcpudp
(the last two have the same effect) to the end of the line. TCP is the default.
.Sh FILES
.Bl -tag -width /usr/share/ipf/nat.1 -compact
.It Pa /dev/ipnat
.It Pa /usr/share/ipf/nat.1
Example rules.
.It Pa /usr/share/ipf/nat.2
System requirements for use of the NAT.
.It Pa /etc/ipnat.rules
Actual rule list.
.Sh SEE ALSO
.Xr ipnat 4 .
.br
http://coombs.anu.edu.au/ipfilter/
@


1.14
log
@flesh out and -mandoc, much nicer; garath@@code.ridgefield.org
@
text
@@


1.13
log
@Updated to v3.2.9 of Darren's codebase. His code reimplements variable
locking, replaces u_long's with u_32_t to properly handle 64bit archs.
Wrapped OpenBSD specific preprocessor logic.
@
text
@d1 158
a158 51
.TH IPNAT 1
.SH NAME
ipnat \- user interface to the NAT
.SH SYNOPSIS
.B ipnat
[
.B \-lnrsvCF
]
.B \-f
<filename>
.SH DESCRIPTION
.PP
\fBipnat\fP opens the filename given (treating "\-" as stdin) and parses the
file for a set of rules which are to be added or removed from the IP NAT.
.PP
Each rule processed by \fBipnat\fP
is added to the kernels internal lists if there are no parsing problems.
Rules are added to the end of the internal lists, matching the order in
which they appear when given to \fBipnat\fP.
.SH OPTIONS
.TP
.B \-C
delete all entries in the current NAT listing (NAT rules)
.TP
.B \-F
delete all active entries in the current NAT table (currently active
NAT mappings)
.TP
.B \-l
Show the list of current NAT table entry mappings.
.TP
.B \-n
This flag (no-change) prevents \fBipf\fP from actually making any ioctl
calls or doing anything which would alter the currently running kernel.
.TP
.B \-s
Retrieve and display NAT statistics
.TP
.B \-r
Remove matching NAT rules rather than add them to the internal lists
.TP
.B \-v
Turn verbose mode on.  Displays information relating to rule processing.
.DT
.SH FILES
\fI/usr/share/ipf\fP -- sample configuration files.
.br
/dev/ipnat
.SH SEE ALSO
ipf(1), ipftest(1), ipf(4), ipl(4), ipnat(4), ipf(5), ipnat(5), ipfstat(8), ip
mon(8)
a160 8
.SH DIAGNOSTICS
.PP
Needs to be run as root for the address translation list to actually
be affected inside the kernel.
.SH BUGS
.PP
If you find any, please send email to me at darrenr@@pobox.com

@


1.12
log
@updated example for current nat syntax, i.e. was ppp0/32 now says 0/32 ...
@
text
@d1 16
a16 21
.\"      $OpenBSD: ipnat.1,v 1.11 1998/02/19 01:58:46 gene Exp $
.\"
.\" Manual page, using -mandoc macros
.\"
.Dd
.Dt IPNAT 1
.Os
.Sh NAME
.Nm ipnat
.Nd user interface to the NAT
.Sh SYNOPSIS
.Nm ipnat
.Op Fl lnrsvCF
.Fl f Ar filename
.Sh DESCRIPTION
.Nm ipnat
opens the filename given (treating "-" as stdin) and parses the
file for a  set of rules which are to be added or remove from the IP NAT.
.Pp
Each rule processed by 
.Nm ipnat
d19 4
a22 5
which they appear when given to 
.Nm ipnat .
.Sh OPTIONS
.Bl -tag -width -Cs
.It Fl C
d24 2
a25 1
.It Fl F
d28 2
a29 1
.It Fl l
d31 3
a33 4
.It Fl n
This flag (no-change) prevents 
.Nm ipf
from actually making any ioctl
d35 2
a36 1
.It Fl s
d38 2
a39 1
.It Fl r
d41 2
a42 1
.It Fl v
d44 18
a61 29
.El
.Sh EXAMPLES
To use 
.Nm ipnat
with a dynamic ppp connection one can enable the address translation
in the 
.Pa /etc/ppp/ip-up 
script:
.Bd -literal
/sbin/ipnat -CF -f /etc/ipnat.rules
/sbin/ipf -E
.Ed
.Pp
To translate addresses from the internal 192.168.1.0/8 network
.Pa /etc/ipnat.rules 
should look like this:
.Bd -literal
map ppp0 192.168.1.0/8 -> 0/32 portmap tcp/udp 10000:20000
map ppp0 192.168.1.0/8 -> 0/32
.Ed
.Sh FILES
.Pa /usr/share/ipf
-- sample configuration files.
.Sh SEE ALSO
.Xr ipfstat 1 , 
.Xr ipftest 1 , 
.Xr ipf 1 , 
.Xr ipnat 4 , 
.Xr ipnat 5 .
@


1.11
log
@Refer to /etc/ipnat.rules not nat.rules in examples.
@
text
@d1 1
a1 1
.\"      $OpenBSD: ipnat.1,v 1.10 1998/01/26 04:13:46 dgregor Exp $
d59 1
a59 1
To translate addresses from the interal 192.168.1.0/8 network
d63 2
a64 2
map ppp0 192.168.1.0/8 -> ppp0/32 portmap tcp/udp 10000:20000
map ppp0 192.168.1.0/8 -> ppp0/32
@


1.10
log
@IPF 3.2.3
@
text
@d1 1
a1 1
.\"      $OpenBSD$
d55 1
a55 1
/sbin/ipnat -CF -f /etc/nat.rules
d60 1
a60 1
.Pa /etc/nat.rules 
@


1.9
log
@rewrite using mandoc macros; add an examples section.
@
text
@d1 1
@


1.8
log
@fix italics
@
text
@d1 20
a20 15
.TH IPNAT 1
.SH NAME
ipnat \- user interface to the NAT
.SH SYNOPSIS
.B ipnat
[
.B \-lnrsvCF
]
.B \-f <\fIfilename\fP>
.SH DESCRIPTION
.PP
\fBipnat\fP opens the filename given (treating "\-" as stdin) and parses the
file for a set of rules which are to be added or removed from the IP NAT.
.PP
Each rule processed by \fBipnat\fP
d23 5
a27 4
which they appear when given to \fBipnat\fP.
.SH OPTIONS
.TP
.B \-C
d29 1
a29 2
.TP
.B \-F
d32 1
a32 2
.TP
.B \-l
d34 4
a37 3
.TP
.B \-n
This flag (no-change) prevents \fBipf\fP from actually making any ioctl
d39 1
a39 2
.TP
.B \-s
d41 1
a41 2
.TP
.B \-r
d43 1
a43 2
.TP
.B \-v
d45 29
a73 5
.DT
.SH FILES
\fI/usr/share/ipf\fP	--	sample configuration files.
.SH SEE ALSO
ipfstat(1), ipftest(1), ipf(1), ipnat(4), ipnat(5)
@


1.7
log
@add italics
@
text
@d45 1
a45 1
\fI/usr/share/ipf\fB	--	sample configuration files.
@


1.6
log
@mention /usr/share/ipf in FILES section
@
text
@d45 1
a45 1
/usr/share/ipf	--	sample configuration files.
@


1.5
log
@IPF 1.3.7
@
text
@d44 2
@


1.4
log
@more SEE ALSO cross-refs
@
text
@d1 1
a1 1
.TH IPFNAT 1
d3 1
a3 1
ipnat - user interface to the NAT
d5 5
a9 1
ipnat [-lnrsv] -f <\fIfilename\fP>
d12 1
a12 1
\fBipnat\fP opens the filename given (treating "-" as stdin) and parses the
d20 9
a28 1
.IP -l
d30 2
a31 1
.IP -n
d34 9
a42 6
.IP -s
retrieve and display NAT statistics
.IP -r
remove matching NAT rules rather than add them to the internal lists
.IP -v
turn verbose mode on.  Displays information relating to rule processing.
@


1.3
log
@ipfilter 3.1.0
@
text
@d29 1
a29 1
ipfstat(1), ipftest(1), ipf(1), ipnat(5)
@


1.2
log
@update rcsid
@
text
@a0 2
.\"	$OpenBSD$
.\"
@


1.1
log
@ipfilter 3.0.4
@
text
@d1 2
@
