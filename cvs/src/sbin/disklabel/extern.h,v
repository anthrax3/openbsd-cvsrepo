head	1.29;
access;
symbols
	OPENBSD_6_1:1.29.0.2
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.28.0.2
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.26.0.4
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.24.0.10
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.6
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.4
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.2
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.2
	OPENBSD_5_0:1.22.0.2
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.21.0.2
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.18.0.4
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.17.0.4
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.29
date	2017.03.04.07.26.42;	author otto;	state Exp;
branches;
next	1.28;
commitid	JwCAC267qNydLo8J;

1.28
date	2016.06.19.13.42.56;	author tb;	state Exp;
branches;
next	1.27;
commitid	dHsaVhRe1CKEcdzo;

1.27
date	2015.10.17.13.27.08;	author krw;	state Exp;
branches;
next	1.26;
commitid	V77mDKjRGnu2BBag;

1.26
date	2015.04.29.09.58.16;	author henning;	state Exp;
branches;
next	1.25;
commitid	4ecfLcgizo5sIt85;

1.25
date	2014.07.10.13.31.23;	author florian;	state Exp;
branches;
next	1.24;
commitid	R66OgMHvjjOX2vbZ;

1.24
date	2012.07.13.16.06.42;	author krw;	state Exp;
branches;
next	1.23;

1.23
date	2012.01.16.17.32.07;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2011.04.16.11.44.41;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2010.11.24.14.15.31;	author jsing;	state Exp;
branches;
next	1.20;

1.20
date	2010.09.23.13.54.21;	author jsing;	state Exp;
branches;
next	1.19;

1.19
date	2010.08.12.23.32.07;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2009.08.07.00.26.34;	author martynas;	state Exp;
branches;
next	1.17;

1.17
date	2009.06.04.21.13.03;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2009.04.18.00.15.46;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.12.01.01.24;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.11.16.54.28;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.10.20.54.08;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.29.05.37.13;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2009.03.28.16.27.24;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.22.19.01.32;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.11.19.44.57;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.25.18.31.07;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2007.06.08.18.42.17;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2007.03.02.02.29.13;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.07.21.58.14;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.01.04.08.45;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.28.17.57.46;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.02.21.22.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Allow R (resize auto-partition) after A as well as when started with -A.
This ability was lost in editor.c 1.264; noted by ajacoutot@@; ok krw@@
@
text
@/*	$OpenBSD: extern.h,v 1.28 2016/06/19 13:42:56 tb Exp $	*/

/*
 * Copyright (c) 2003 Theo de Raadt <deraadt@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define MEG(x)	((x) * 1024LL * (1024 / DEV_BSIZE))
#define GIG(x)  (MEG(x) * 1024LL)

u_short	dkcksum(struct disklabel *);
int	checklabel(struct disklabel *);
char	canonical_unit(struct disklabel *, char);
double	scale(u_int64_t, char, struct disklabel *);
void	display(FILE *, struct disklabel *, char, int);
void	display_partition(FILE *, struct disklabel *, int, char);
int	duid_parse(struct disklabel *, char *);

void	readlabel(int);
void	parselabel(void);
struct disklabel *makebootarea(char *, struct disklabel *);
int	editor(int);
void	editor_allocspace(struct disklabel *);
void	mpsave(struct disklabel *);
void	mpcopy(char **, char **);
void	mpfree(char **);
void	parse_autotable(char *);

int	writelabel(int, struct disklabel *);
extern  char *specname, *fstabfile;
extern	char *mountpoints[MAXPARTITIONS];
extern  int aflag, dflag, uidflag;
extern  int donothing;
extern	int verbose;
extern	int quiet;
extern	char print_unit;
extern	struct disklabel lab;
@


1.28
log
@Split readlabel() into two functions, readlabel() and parselabel(), and
pledge in-between the two funtion calls.  The new readlabel() only does
a DIOC*DINFO ioctl, making sure the fd points to a disk, while
parselabel() does the scary string manipulations.  In the makelabel()
code path do an early DIOCGDINFO before pledge.  This fixes yet another
pledge problem (disklabel -w /dev/tty floppy576).

Some of this was discussed with beck.

ok semarie, earlier version ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.27 2015/10/17 13:27:08 krw Exp $	*/
d46 1
@


1.27
log
@NUMBOOT is dead! Nuke the variables and abstractions that were used
to build boot blocks.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.26 2015/04/29 09:58:16 henning Exp $	*/
d31 1
@


1.26
log
@support passing a template file for the auto-allocation to disklabel.
template gives mountpoints, min-max size ranges and percentage of disk
foremost intended for autoinstalls, installer bits to follow soon.
with input from many, ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.25 2014/07/10 13:31:23 florian Exp $	*/
d39 2
a40 2
int	writelabel(int, char *, struct disklabel *);
extern  char bootarea[], *specname, *fstabfile;
@


1.25
log
@Forward declarations for mpcopy & mpfree.
OK miod@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.24 2012/07/13 16:06:42 krw Exp $	*/
d37 1
@


1.24
log
@Replace a '512' with DEV_BSIZE. Calculate physmem size in blocks and
not sectors, since the values being tested/manipulated in the auto_alloc
tables are blocks at that point. Use MEG(256) instead of hand
expanding it when testing physmem.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.23 2012/01/16 17:32:07 krw Exp $	*/
d35 2
@


1.23
log
@Nuke unused parameter (f) to makebootarea(). Unused since r1.123
(2008), when '-r' support was removed. Spotted by jsg@@ with the
assistance of clang.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.22 2011/04/16 11:44:41 krw Exp $	*/
d19 1
a19 1
#define MEG(x)	((x) * 1024LL * (1024 / 512))
@


1.22
log
@Add '-F'. Same as '-f' but uses DUIDs when writing the mount point
information to the specified file. After every label write, read the
label to get current UID info.

Some internal code cleanup with no intended functional change.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.21 2010/11/24 14:15:31 jsing Exp $	*/
d31 1
a31 1
struct disklabel *makebootarea(char *, struct disklabel *, int);
@


1.21
log
@When dealing with disklabel UIDs (DUIDs) be specific and consistent with
naming.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.18 2009/08/07 00:26:34 martynas Exp $	*/
d32 1
a32 1
int	editor(struct disklabel *, int);
d39 1
a39 1
extern  int aflag, dflag;
d43 1
@


1.20
log
@Print disklabel UIDs using printf/fprintf instead of using the hand rolled
uid_print() function.

ok krw@@
@
text
@d28 1
a28 1
int	uid_parse(struct disklabel *, char *);
@


1.19
log
@fix a few warnings.  ok jsing
@
text
@a27 1
void	uid_print(FILE *, struct disklabel *);
@


1.18
log
@move editor_allocspace & mpsave out to extern.h so that disklabel.c
gets the declarations it uses.  ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.17 2009/06/04 21:13:03 deraadt Exp $	*/
d28 2
@


1.17
log
@Recycle four ancient fields in the disklabel structure, replacing them with
bounds information, ie. the zone of the disk that OpenBSD can use.  Have each
pre-disklabel parser (MBR, DPME, or per-arch MD disklabel parsers) figure out
this area and pass it up to userland.  Then, delete all the same disk parsing
code from disklabel(8) since the kernel passes it up.  Lots and lots of - signs
in the disklabel(8) code.
Tested on as many platforms as possible, the fallout will be repaired as time
goes on.  To test, use disklabel -d <drive> and validate that the bounds do not
overlap any boot blocks.  This same information is used by disklabel -A...
OK for the concept from krw, miod, and drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.16 2009/06/02 16:23:45 krw Exp $	*/
d32 2
@


1.16
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.15 2009/04/18 00:15:46 sthen Exp $	*/
a39 8

#ifdef DOSLABEL
extern  struct dos_partition *dosdp;    /* DOS partition, if found */
#endif
#ifdef DPMELABEL
extern	int dpme_label;			/* nonzero if DPME table */
extern	uint32_t dpme_obsd_start, dpme_obsd_size; /* OpenBSD DPME boundaries */
#endif
@


1.15
log
@Alexander Hall points out that disklabel -AE <disk> followed by quitting
without making manual changes does not ask whether you'd like to save the
new automatic disklabel. Change to follow the behaviour of -d and ask
every time.  ok krw@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.14 2009/04/12 01:01:24 krw Exp $	*/
d19 3
d24 1
@


1.14
log
@When auto-allocating, check the size of the disk and display
offset/size information in MB if the disk is <10G, and in GB
otherwise. '-p' will override this default.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.13 2009/04/11 16:54:28 krw Exp $	*/
d32 1
a33 1
extern  int dflag;
@


1.13
log
@readlabel() either errored out or returned a pointer to the global
'lab'. So there is no need for the return value. Just use &lab
wherever it was used. No functional change.

Slightly different version read ok to blambert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.12 2009/04/10 20:54:08 krw Exp $	*/
d35 1
@


1.12
log
@Re-work '-A' so that it sets a flag that -E and -w use, and which will
just display the auto-allocation plan otherwise. Don't overwrite any
spoofed partitions, insert auto allocated partitions where we can.

This is much more install script and weird architecture friendly. I'm
talking about you, macppc.

Many suggestions and code from otto@@, feedback from many, cattle
prod applied by deraadt@@.

ok deraadt@@
"if it works for >8GB ... put it in" miod@@
"to be clear, ok" todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.11 2009/03/29 05:37:13 deraadt Exp $	*/
d25 1
a25 1
struct disklabel *readlabel(int);
@


1.11
log
@otto points out that the -v printing changes are incompatible with the
expectation that -R will read the output of disklabel.  I suspect we
will find another way to do this; ok otto
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.9 2009/03/22 19:01:32 krw Exp $	*/
d22 2
a23 2
void	display(FILE *, struct disklabel *, char **, char, int);
void	display_partition(FILE *, struct disklabel *, char **, int, char);
d27 1
a27 1
int	editor(struct disklabel *, int, char *, char *, int);
d30 2
a31 1
extern  char bootarea[], *specname;
d34 1
@


1.10
log
@Move some output under the control of the '-v' flag. In particular only
display the partition info by default as is done in the E(ditor). The
physical info is now only displayed if '-v' is specified.

ok deraadt@@
@
text
@a18 4
/* Display options. */
#define	SHOW_PHYSINFO	0x1
#define	SHOW_PARTINFO	0x2

@


1.9
log
@Add 'A' command to Editor mode, and -A flag to automatically execute it
on disks without an existing label. The 'A' command allocates all space
on the disk into a reasonable partition scheme for a root disk.

Feedback from several, time to work on it in-tree.

Prodded (repeatedly) by and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.8 2009/01/11 19:44:57 miod Exp $	*/
d18 4
@


1.8
log
@On *ppc disks shared with MacOS, walk the Apple partition map to find out
the bounds of the OpenBSD area. Should prevent users from shooting themselves
in the feet.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.7 2008/06/25 18:31:07 otto Exp $	*/
d27 1
a27 1
int	editor(struct disklabel *, int, char *, char *);
@


1.7
log
@In interactive mode, always suggest offsets and sizes inside the
OpenBSD area and change the 'p' command to only print the boundaries
and size of the OpenBSD area and the free space within that area.
Introduce a 'l' command to print the header only. With krw@@; ok krw@@
deraadt@@; jmc@@ for the man page bits
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.6 2007/06/08 18:42:17 otto Exp $	*/
d36 4
@


1.6
log
@Make disklabel(8) aware of the new fields, allowing for larger than
2T disks, partitions and offsets. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.5 2007/03/02 02:29:13 krw Exp $	*/
d22 1
a22 1
void	display(FILE *, struct disklabel *, char **, char, int, u_int64_t);
@


1.5
log
@If a default label has been created with the -d command line option or
the  'D' editor command and has not been written to disk when the user
issues the 'q' editor command, ask if the label should be written to
disk before exiting.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.4 2005/01/07 21:58:14 otto Exp $	*/
d21 2
a22 2
double	scale(u_int32_t, char, struct disklabel *);
void	display(FILE *, struct disklabel *, char **, char, int, u_int32_t);
@


1.4
log
@Print disk size and free space in requested unit. Some refactoring to
avoid code duplication as well. ok marco@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.3 2004/10/01 04:08:45 jsg Exp $	*/
d32 1
@


1.3
log
@add some missing $, ok djm@@ 'That looks fine to me' millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d21 2
a22 1
void	display(FILE *, struct disklabel *, char);
@


1.2
log
@Tidy disklabel output for todays big disks. Based on a diff from f
at obiit dot org in PR 3847. ok tedu@@ deraadt@@ millert@@
@
text
@d1 2
@


1.1
log
@missing protos
@
text
@d18 3
d22 11
@

