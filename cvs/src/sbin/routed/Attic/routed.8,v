head	1.42;
access;
symbols
	OPENBSD_4_3:1.41.0.4
	OPENBSD_4_3_BASE:1.41
	OPENBSD_4_2:1.41.0.2
	OPENBSD_4_2_BASE:1.41
	OPENBSD_4_1:1.40.0.8
	OPENBSD_4_1_BASE:1.40
	OPENBSD_4_0:1.40.0.6
	OPENBSD_4_0_BASE:1.40
	OPENBSD_3_9:1.40.0.4
	OPENBSD_3_9_BASE:1.40
	OPENBSD_3_8:1.40.0.2
	OPENBSD_3_8_BASE:1.40
	OPENBSD_3_7:1.38.0.4
	OPENBSD_3_7_BASE:1.38
	OPENBSD_3_6:1.38.0.2
	OPENBSD_3_6_BASE:1.38
	OPENBSD_3_5:1.37.0.4
	OPENBSD_3_5_BASE:1.37
	OPENBSD_3_4:1.37.0.2
	OPENBSD_3_4_BASE:1.37
	OPENBSD_3_3:1.34.0.2
	OPENBSD_3_3_BASE:1.34
	OPENBSD_3_2:1.33.0.6
	OPENBSD_3_2_BASE:1.33
	OPENBSD_3_1:1.33.0.4
	OPENBSD_3_1_BASE:1.33
	OPENBSD_3_0:1.33.0.2
	OPENBSD_3_0_BASE:1.33
	OPENBSD_2_9:1.32.0.2
	OPENBSD_2_9_BASE:1.32
	OPENBSD_2_8:1.30.0.4
	OPENBSD_2_8_BASE:1.30
	OPENBSD_2_7:1.30.0.2
	OPENBSD_2_7_BASE:1.30
	OPENBSD_2_6:1.27.0.2
	OPENBSD_2_6_BASE:1.27
	OPENBSD_2_5:1.21.0.2
	OPENBSD_2_5_BASE:1.21
	OPENBSD_2_4:1.16.0.2
	OPENBSD_2_4_BASE:1.16
	OPENBSD_2_3:1.11.0.4
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	mickey:1.1.1.2
	SGI082896:1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.42
date	2008.05.07.11.55.21;	author claudio;	state dead;
branches;
next	1.41;

1.41
date	2007.05.31.19.19.47;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2005.03.23.18.06.07;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2005.03.22.12.34.13;	author henning;	state Exp;
branches;
next	1.38;

1.38
date	2004.09.08.16.18.12;	author henning;	state Exp;
branches;
next	1.37;

1.37
date	2003.08.08.09.34.10;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2003.06.03.13.16.09;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2003.06.02.20.06.17;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	2003.02.11.07.26.20;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2001.08.02.20.37.35;	author hugh;	state Exp;
branches;
next	1.32;

1.32
date	2001.01.05.05.17.45;	author angelos;	state Exp;
branches;
next	1.31;

1.31
date	2001.01.05.05.12.41;	author angelos;	state Exp;
branches;
next	1.30;

1.30
date	2000.04.15.02.15.17;	author aaron;	state Exp;
branches;
next	1.29;

1.29
date	2000.03.18.22.56.04;	author aaron;	state Exp;
branches;
next	1.28;

1.28
date	2000.03.04.20.02.24;	author aaron;	state Exp;
branches;
next	1.27;

1.27
date	99.10.07.18.58.37;	author wvdputte;	state Exp;
branches;
next	1.26;

1.26
date	99.09.23.04.12.03;	author alex;	state Exp;
branches;
next	1.25;

1.25
date	99.07.03.02.11.07;	author aaron;	state Exp;
branches;
next	1.24;

1.24
date	99.06.04.02.45.24;	author aaron;	state Exp;
branches;
next	1.23;

1.23
date	99.05.23.14.11.20;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	99.05.15.02.17.52;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	99.03.16.02.46.51;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	98.12.15.01.20.43;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	98.11.28.19.56.33;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	98.11.24.01.03.43;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	98.11.11.22.20.00;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	98.09.23.01.20.25;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	98.09.17.04.15.01;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	98.08.29.21.11.09;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	98.06.23.11.42.32;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.06.15.17.55.58;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	97.07.30.23.28.45;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.07.30.22.24.45;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	97.06.26.21.53.05;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.01.28.07.16.41;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.01.21.19.33.15;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.10.02.06.51.46;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.09.05.14.31.41;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.06.23.14.32.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.02.22.11.33.01;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.11.13.04.35.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.49;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.49;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.09.05.13.58.57;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.42
log
@RIP routed.

You were a nice thing in the 4.2BSD times but now it is time for you to go.
Superseded by the shiny privseped ripd that does not have the evil habit to
use kernel internals in userland.

OK everybody in the onsen 'cause it unbreaks the tree
@
text
@.\"	$OpenBSD: routed.8,v 1.41 2007/05/31 19:19:47 jmc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)routed.8	8.2 (Berkeley) 12/11/93
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt ROUTED 8
.Os
.Sh NAME
.Nm routed
.Nd network RIP and router discovery routing daemon
.Sh SYNOPSIS
.Nm routed
.Op Fl Adghmqst
.Xo
.Oo Fl F
.Sm off
.Ar net Op / Ar mask
.Op , Ar metric
.Sm on
.Oc Xc
.Op Fl P Ar parms
.Op Fl T Ar tracefile
.Sh DESCRIPTION
.Nm
is a daemon invoked at boot time to manage the network
routing tables.
It uses Routing Information Protocol Version 1 (RFC 1058),
RIPv2 (RFC 1723),
and Internet Router Discovery Protocol (RFC 1256)
to maintain the kernel routing table.
.Pp
It listens on a
.Xr udp 4
socket for the
.Xr route 8
service (see
.Xr services 5 )
for Routing Information Protocol packets.
It also sends and receives multicast Router Discovery ICMP messages.
If the host is a router,
.Nm
periodically supplies copies
of its routing tables to any directly connected hosts and networks.
It also advertises or solicits default routes using Router Discovery
ICMP messages.
.Pp
When started (or when a network interface is later turned on),
.Nm
uses an
.Dv AF_ROUTE
address family facility to find those
directly connected interfaces configured into the
system and marked
.Sq up .
It adds necessary routes for the interfaces
to the kernel routing table.
Soon after being first started, and provided there is at least one
interface on which RIP has not been disabled,
.Nm
deletes all pre-existing
non-static routes in the kernel table,
except those marked with either the
.Dv RTF_PROTO1
or
.Dv RTF_PROTO2
flag (see
.Xr route 4 ) ,
i.e. routes that have been inserted by
.Xr bgpd 8
or
.Xr ospfd 8 .
Static routes in the kernel table are preserved and
included in RIP responses if they have a valid RIP metric
(see
.Xr route 8 ) .
.Pp
If more than one interface is present (not counting the loopback interface),
it is assumed that the host should forward packets among the
connected networks.
After transmitting a RIP
.Em request
and
Router Discovery Advertisements or Solicitations on a new interface,
the daemon enters a loop, listening for
RIP request and response and Router Discover packets from other hosts.
.Pp
When a request packet is received,
.Nm
formulates a reply based on the information maintained in its
internal tables.
The
.Em response
packet generated contains a list of known routes, each marked
with a "hop count" metric (a count of 16 or greater is
considered "infinite").
Advertised metrics reflect the metric associated with an interface
(see
.Xr ifconfig 8 ) ,
so setting the metric on an interface
is an effective way to steer traffic.
.Pp
Responses do not contain routes with a first hop on the requesting
network to implement in part
.Em split-horizon .
Requests from query programs
such as
.Xr rtquery 8
are answered with the complete table.
.Pp
The routing table maintained by the daemon
includes space for several gateways for each destination
to speed recovery from a failing router.
RIP response
packets received are used to update the routing tables provided they are
from one of the several currently recognized gateways or
advertise a better metric than at least one of the existing
gateways.
.Pp
When an update is applied,
.Nm
records the change in its own tables and updates the kernel routing table
if the best route to the destination changes.
The change in the kernel routing table is reflected in the next batch of
response packets sent.
If the next response is not scheduled for a while, a
.Em flash update
response containing only recently changed routes is sent.
.Pp
In addition to processing incoming packets,
.Nm
also periodically checks the routing table entries.
If an entry has not been updated for 3 minutes, the entry's metric
is set to infinity and marked for deletion.
Deletions are delayed until the route has been advertised with
an infinite metric to ensure the invalidation
is propagated throughout the local internet.
This is a form of
.Em poison reverse .
.Pp
Routes in the kernel table that are added or changed as a result
of ICMP Redirect messages are deleted after a while to minimize
.Em black-holes .
When a TCP connection suffers a timeout,
the kernel tells
.Nm routed ,
which deletes all redirected routes
through the gateway involved, advances the age of all RIP routes through
the gateway to allow an alternate to be chosen, and advances the
age of any relevant Router Discovery Protocol default routes.
.Pp
Hosts acting as internetwork routers gratuitously supply their
routing tables every 30 seconds to all directly connected hosts
and networks.
These RIP responses are sent to the broadcast address on nets that support
broadcasting,
to the destination address on point-to-point links, and to the router's
own address on other networks.
If RIPv2 is enabled, multicast packets are sent on interfaces that
support multicasting.
.Pp
If no response is received on a remote interface, if there are errors
while sending responses,
or if there are more errors than input or output (see
.Xr netstat 1 ) ,
then the cable or some other part of the interface is assumed to be
disconnected or broken, and routes are adjusted appropriately.
.Pp
The
.Em Internet Router Discovery Protocol
is handled similarly.
When the daemon is supplying RIP routes, it also listens for
Router Discovery Solicitations and sends Advertisements.
When it is quiet and only listening to other RIP routers, it
sends Solicitations and listens for Advertisements.
If it receives
a good Advertisement, it stops listening for broadcast or multicast
RIP responses.
It tracks several advertising routers to speed recovery when the
currently chosen router dies.
If all discovered routers disappear,
the daemon resumes listening to RIP responses.
.Pp
While using Router Discovery (which happens by default when
the system has a single network interface and a Router Discover Advertisement
is received), there is a single default route and a variable number of
redirected host routes in the kernel table.
.Pp
The Router Discover standard requires that advertisements
have a default "lifetime" of 30 minutes.
That means should something happen, a client can be without a good route for
30 minutes.
It is a good idea to reduce the default to 45 seconds using
.Fl P Cm rdisc_interval=45
on the command line or
.Cm rdisc_interval=45
in the
.Pa /etc/gateways
file.
.Pp
See the
.Cm pm_rdisc
facility described below to support "legacy" systems
that can handle neither RIPv2 nor Router Discovery.
.Pp
By default, neither Router Discovery advertisements nor solicitations
are sent over point to point links (e.g. PPP).
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A
Drop all RIPv2 packets carrying authentication information.
This option is required for conformance with RFC 1723,
even though it breaks RIP as a discovery protocol.
.It Fl d
Do not run in the background.
This option is meant for interactive use.
.It Xo Fl F
.Sm off
.Ar net Op / Ar mask
.Op , Ar metric
.Sm on
.Xc
Minimize routes in transmissions via interfaces with addresses that match
.Ar net Ns / Ns Ar mask ,
and synthesizes a default route to this machine with the
.Ar metric .
The intent is to reduce RIP traffic on slow, point-to-point links
such as PPP links by replacing many large UDP packets of RIP information
with a single, small packet containing a "fake" default route.
If
.Em metric
is absent, a value of 14 is assumed to limit
the spread of the "fake" default route.
This is a dangerous feature that when used carelessly can cause routing
loops.
Notice also that more than one interface can match the specified network
number and mask.
See also
.Fl g .
.It Fl g
Used on internetwork routers to offer a route
to the "default" destination.
It is equivalent to
.Fl F
.Cm 0/0,1
and is present mostly for historical reasons.
A better choice is
.Fl P Cm pm_rdisc
on the command line or
.Cm pm_rdisc in the
.Pa /etc/gateways
file,
since a larger metric
will be used, reducing the spread of the potentially dangerous
default route.
This is typically used on a gateway to the Internet,
or on a gateway that uses another routing protocol whose routes
are not reported to other local routers.
Notice that because a metric of 1 is used, this feature is
dangerous.
It is more commonly accidentally used to create chaos with a routing
loop than to solve problems.
.It Fl h
Causes host or point-to-point routes to not be advertised,
provided there is a network route going the same direction.
That is a limited kind of aggregation.
This option is useful on gateways to Ethernets that have other gateway
machines connected with point-to-point links such as SLIP.
.It Fl m
Causes the machine to advertise a host or point-to-point route to
its primary interface.
It is useful on multi-homed machines such as NFS servers.
This option should not be used except when the cost of
the host routes it generates is justified by the popularity of
the server.
It is effective only when the machine is supplying
routing information, because there is more than one interface.
The
.Fl m
option overrides the
.Fl q
option to the limited extent of advertising the host route.
.It Fl P Ar parms
Equivalent to adding the parameter
line
.Em parms
to the
.Pa /etc/gateways
file.
.It Fl q
Opposite of the
.Fl s
option.
.It Fl s
Forces
.Nm
to supply routing information.
This is the default if multiple network interfaces are present on which
RIP or Router Discovery have not been disabled, and if the kernel
.Xr sysctl 8
net.inet.ip.forwarding=1.
.It Fl T Ar tracefile
Increases the debugging level to at least 1 and
causes debugging information to be appended to the trace file.
Note that because of security concerns, it is wisest to not run
.Nm
routinely with tracing directed to a file.
.It Fl t
Increases the debugging level, which causes more information to be logged
on the tracefile specified with
.Fl T
or standard out.
The debugging level can be increased or decreased
with the
.Dv SIGUSR1
or
.Dv SIGUSR2
signals or with the
.Xr rtquery 8
command.
.El
.Pp
Any other argument supplied is interpreted as the name
of a file in which the actions of
.Nm
should be logged.
It is better to use
.Fl T
instead of
appending the name of the trace file to the command.
.Pp
.Nm
also supports the notion of
"distant"
.Em passive
or
.Em active
gateways.
When
.Nm
is started, it reads the file
.Pa /etc/gateways
to find such distant gateways which may not be located using
only information from a routing socket, to discover if some
of the local gateways are passive,
and to obtain other parameters.
Gateways specified in this manner should be marked passive
if they are not expected to exchange routing information,
while gateways marked active should be willing to exchange RIP packets.
Routes through passive gateways are installed in the
kernel's routing tables once upon startup and are not included in
transmitted RIP responses.
.Pp
Distant active gateways are treated like network interfaces.
RIP responses are sent to the distant active gateway.
If no responses are received, the associated route is deleted from
the kernel table and RIP responses advertised via other interfaces.
If the distant gateway resumes sending RIP responses, the associated
route is restored.
.Pp
Such gateways can be useful on media that do not support broadcasts
or multicasts but otherwise act like classic shared media like
Ethernets, such as some ATM networks.
One can list all RIP routers reachable on the ATM network in
.Pa /etc/gateways
with a series of
"host" lines.
.Pp
Gateways marked
.Em external
are also passive, but are not placed in the kernel
routing table nor are they included in routing updates.
The function of external entries is to indicate
that another routing process
will install such a route if necessary,
and that alternate routes to that destination should not be installed
by
.Nm routed .
Such entries are only required when both routers may learn of routes
to the same destination.
.Pp
The
.Pa /etc/gateways
file is comprised of a series of lines, each in
one of the following formats or consist of parameters described below:
.Bd -ragged -offset 2n
.Li net
.Ar Nname Ns Op / Ns Ar mask
.Li gateway
.Ar Gname
.Li metric
.Ar value
.Ao
.Li passive \*(Ba
.Li active \*(Ba
.Li extern
.Ac
.Ed
.Bd -ragged -offset 2n -compact
.Li host
.Ar Hname
.Li gateway
.Ar Gname
.Li metric
.Ar value
.Ao
.Li passive \*(Ba
.Li active \*(Ba
.Li extern
.Ac
.Ed
.Pp
.Ar Nname
or
.Ar Hname
is the name of the destination network or host.
It may be a symbolic network name or an Internet address
specified in "dot" notation (see
.Xr inet 3 ) .
If it is a name, then it must either be defined in
.Pa /etc/networks
or
.Pa /etc/hosts ,
or
.Xr named 8
must have been started before
.Nm .
.Pp
.Ar mask
is an optional number between 1 and 32 indicating the netmask associated
with
.Ar Nname .
.Pp
.Ar Gname
is the name or address of the gateway to which RIP responses should
be forwarded.
.Pp
.Ar value
is the hop count to the destination host or network.
.Ar host Hname
is equivalent to
.Ar net nname Ns / Ns Ar 32 .
.Pp
One of the keywords
.Cm passive ,
.Cm active ,
or
.Cm external
must be present to indicate whether the gateway should be treated as
.Cm passive
or
.Cm active
(as described above),
or whether the gateway is
.Cm external
to the scope of the RIP protocol.
.Pp
Lines that start with neither "net" nor "host" must consist of one
or more of the following parameter settings, separated by commas or
blanks:
.Bl -tag -width Ds
.It Cm if Ns = Ns Ar ifname
Indicates that the other parameters on the line apply to the interface
name
.Ar ifname .
This typically is the first entry in all lines in
.Pa /etc/gateways .
.It Xo
.Sm off
.Cm subnet No = Ar nname
.Op / Ar mask
.Op , Ar metric
.Sm on
.Xc
Advertises a route to network
.Ar nname
with mask
.Ar mask
and the supplied metric (default 1).
This is useful for filling "holes" in CIDR allocations.
This parameter must appear by itself on a line.
.Pp
Do not use this feature unless necessary.
It is dangerous.
.It Cm passwd Ns = Ns Ar XXX
Specifies a RIPv2 password that will be included on all RIPv2
responses sent and checked on all RIPv2 responses received.
The password must not contain any blanks, tab characters, commas
or
.Sq #
characters.
.It Cm no_ag
Turns off aggregation of subnets in RIPv1 and RIPv2 responses.
.It Cm no_super_ag
Turns off aggregation of networks into supernets in RIPv2 responses.
.It Cm passive
Equivalent to
.Cm no_rip Cm no_rdisc .
.It Cm no_rip
Disables all RIP processing on the specified interface (no RIP will be
transmitted, and any received RIP packets will be ignored).
If no interfaces are allowed to process RIP packets,
.Nm
acts purely as a router discovery daemon.
Note that turning off RIP without explicitly turning on router
discovery advertisements with
.Cm rdisc_adv
or
.Fl s
causes
.Nm
to act as a client router discovery daemon, not advertising.
.It Cm no_ripv1_in
Causes RIPv1 received responses to be ignored.
.It Cm no_ripv2_in
Causes RIPv2 received responses to be ignored.
.It Cm ripv2_out
Turns off RIPv1 output and causes RIPv2 advertisements to be
multicast when possible.
.It Cm no_rdisc
Disables the Internet Router Discovery Protocol.
.It Cm no_solicit
Disables the transmission of Router Discovery Solicitations.
.It Cm send_solicit
Specifies that Router Discovery solicitations should be sent,
even on point-to-point links,
which by default only listen to Router Discovery messages.
.It Cm no_rdisc_adv
Disables the transmission of Router Discovery Advertisements.
.It Cm rdisc_adv
Specifies that Router Discovery advertisements should be sent,
even on point-to-point links,
which by default only listen to Router Discovery messages.
.It Cm bcast_rdisc
Specifies that Router Discovery packets should be broadcast instead of
multicast.
.It Cm rdisc_pref Ns = Ns Ar N
Sets the preference in Router Discovery Advertisements to the integer
.Ar N .
.It Cm rdisc_interval Ns = Ns Ar N
Sets the nominal interval with which Router Discovery Advertisements
are transmitted to
.Ar N
seconds and their lifetime to
.Pf 3* Ns Ar N .
.It Cm fake_default Ns = Ns Ar metric
Has an identical effect to
.Fl F
.Sm off
.Xo
.Ar net
.Op / Ar mask
.Op , Ar metric
.Xc
.Sm on
with the network and mask coming from the specified interface.
.It Cm pm_rdisc
Similar to
.Cm fake_default .
When RIPv2 routes are multicast, so that RIPv1 listeners cannot
receive them, this feature causes a RIPv1 default route to be
broadcast to RIPv1 listeners.
Unless modified with
.Cm fake_default ,
the default route is broadcast with a metric of 14.
That serves as a "poor man's router discovery" protocol.
.El
.Pp
Note that the netmask associated with point-to-point links (such as SLIP
or PPP, with the
.Dv IFF_POINTOPOINT
flag) is used by
.Nm
to infer the netmask used by the remote system when RIPv1 is used.
.Sh FILES
.Bl -tag -width /etc/gateways -compact
.It Pa /etc/gateways
for distant gateways
.El
.Sh SEE ALSO
.Xr netstat 1 ,
.Xr icmp 4 ,
.Xr route 4 ,
.Xr udp 4 ,
.Xr bgpd 8 ,
.Xr ifconfig 8 ,
.Xr ospfd 8 ,
.Xr route 8 ,
.Xr rtquery 8
.Rs
.%T Internet Transport Protocols
.%R XSIS 028112
.%Q Xerox System Integration Standard
.Re
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
.Sh BUGS
It does not always detect unidirectional failures in network interfaces
(e.g. when the output side fails).
@


1.41
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.40 2005/03/23 18:06:07 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate$
@


1.40
log
@ - remove non-existent -p option
 - sort options
 - sync usage()
 - various formatting tweaks
 - -A reworded for clarity
 - update SEE ALSO

much help + ok henning@@ claudio@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.39 2005/03/22 12:34:13 henning Exp $
d32 1
a32 1
.Dd June 1, 1996
@


1.39
log
@don't step on ospfd routes, claudio yayayaya
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.38 2004/09/08 16:18:12 henning Exp $
d40 9
a48 1
.Op Fl sqdghmpAt
a49 5
.Oo
.Fl F
.Ar net Ns Op /mask Ns Op ,metric
.Oc
.Op Fl P Ar parms
d54 1
a54 1
It uses Routing Information Protocol, RIPv1 (RFC 1058),
a57 3
The RIPv1 protocol is based on the reference
.Bx 4.3
daemon.
d59 1
a59 1
It listens on the
d76 3
a78 1
uses an AF_ROUTE address family facility to find those
d81 1
a81 1
.Dq up .
d89 5
a93 1
except those marked with either the RTF_PROTO1 or RTF_PROTO2 flag (see
d114 1
a114 3
When a
.Em request
packet is received,
d123 1
a123 1
Advertised metrics reflect the metric associated with interface
d140 1
a140 2
RIP
.Em response
d151 1
a151 2
.Em response
packets sent.
d233 1
a233 1
are sent over point to point links (e.g., PPP).
d237 4
a240 11
.It Fl s
Forces
.Nm
to supply routing information.
This is the default if multiple network interfaces are present on which
RIP or Router Discovery have not been disabled, and if the kernel switch
ipforwarding=1.
.It Fl q
Opposite of the
.Fl s
option.
d244 23
d310 19
a328 7
.It Fl A
Do not ignore RIPv2 authentication if we do not care about RIPv2
authentication.
This option is required for conformance with RFC 1723.
However, it makes no sense and breaks using RIP as a discovery protocol
to ignore all RIPv2 packets that carry authentication when this machine
does not care about authentication.
a347 25
.It Fl F Ar net[/mask][,metric]
Minimize routes in transmissions via interfaces with addresses that match
.Em net/mask ,
and synthesizes a default route to this machine with the
.Em metric .
The intent is to reduce RIP traffic on slow, point-to-point links
such as PPP links by replacing many large UDP packets of RIP information
with a single, small packet containing a "fake" default route.
If
.Em metric
is absent, a value of 14 is assumed to limit
the spread of the "fake" default route.
This is a dangerous feature that when used carelessly can cause routing
loops.
Notice also that more than one interface can match the specified network
number and mask.
See also
.Fl g .
.It Fl P Ar parms
Equivalent to adding the parameter
line
.Em parms
to the
.Pa /etc/gateways
file.
d372 1
a372 2
of the local gateways are
.Em passive ,
d374 1
a374 2
Gateways specified in this manner should be marked
.Em passive
d376 2
a377 6
while gateways marked
.Em active
should be willing to exchange RIP packets.
Routes through
.Em passive
gateways are installed in the
d381 2
a382 7
Distant
.Em active
gateways are treated like network interfaces.
RIP responses are sent
to the distant
.Em active
gateway.
d390 1
a390 1
Ethernets such as some ATM networks.
d413 4
a416 5
.Pp
.Bd -ragged
.Cm net
.Ar Nname[/mask]
.Cm gateway
d418 1
a418 1
.Cm metric
d420 5
a424 3
.Pf < Cm passive No \&|
.Cm active No \&|
.Cm extern Ns >
d426 2
a427 2
.Bd -ragged
.Cm host
d429 1
a429 1
.Cm gateway
d431 1
a431 1
.Cm metric
d433 5
a437 3
.Pf < Cm passive No \&|
.Cm active No \&|
.Cm extern Ns >
d447 1
a447 1
(If it is a name, then it must either be defined in
d454 1
a454 1
.Nm routed . )
d467 1
a467 1
.Ar " host hname "
d469 1
a469 1
.Ar " net  nname/32 " .
d473 1
a473 1
.Cm active
d489 1
a489 1
.It Cm if Ns \&= Ns Ar ifname
d495 7
a501 1
.It Cm subnet Ns \&= Ns Ar nname[/mask][,metric]
d512 1
a512 1
.It Cm passwd Ns \&= Ns Ar XXX
d537 1
a537 1
Causes
d564 1
a564 1
.It Cm rdisc_pref Ns \&= Ns Ar N
d567 1
a567 1
.It Cm rdisc_interval Ns \&= Ns Ar N
d569 5
a573 2
are transmitted to N seconds and their lifetime to 3*N.
.It Cm fake_default Ns \&= Ns Ar metric
d575 8
a582 1
.Fl F Ar net[/mask][,metric]
d597 3
a599 1
or PPP, with the IFF_POINTOPOINT flag) is used by
d608 1
d610 1
d612 4
d629 1
a629 1
(e.g., when the output side fails).
@


1.38
log
@routed assumes it alone controls the routing table and tinkers with
routes it is not supposed to touch trying to aggregate them, which
has unwanted effects when other routing daemons (bgpd) are running.
note that bgpd behaves and only touches its own routes.
workaround by ignoring routes with RTF_PROTO1 set, which bgpd sets for its
routes.
from a discussion with Arvid Grotting <arvidg@@netfonds.no>, who tested
a diff of same functionality (basically only formatting and comment
different).
ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.37 2003/08/08 09:34:10 jmc Exp $
d87 1
a87 1
except those marked with the RTF_PROTO1 flag (see
d90 3
a92 1
.Xr bgpd 8 .
@


1.37
log
@refer to RFCs consistently (RFC XXXX);
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.36 2003/06/03 13:16:09 jmc Exp $
d86 5
a90 1
non-static routes in the kernel table.
@


1.36
log
@- section reorder
- some mdoc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.35 2003/06/02 20:06:17 millert Exp $
d51 2
a52 2
It uses Routing Information Protocol, RIPv1 (RFC\ 1058),
RIPv2 (RFC\ 1723),
@


1.35
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.34 2003/02/11 07:26:20 jmc Exp $
d310 1
a310 1
.Xr rtquery
a323 1

d451 1
a451 1
.Nm routed Ns .)
a522 1

a594 3
.Sh BUGS
It does not always detect unidirectional failures in network interfaces
(e.g., when the output side fails).
d600 3
@


1.34
log
@typos;

raidctl(8) ok millert@@
mknetid(8) help maja@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.33 2001/08/02 20:37:35 hugh Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.33
log
@pet peeve, insure vs ensure
insure is to indemnify against some contingency
ensure is to make sure
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.32 2001/01/05 05:17:45 angelos Exp $
d171 1
a171 1
the gateway to allow an alternate to be chosen, and advances of the
d496 1
a496 1
.It Pa /etc/gateways .
@


1.32
log
@Mention that if=xxx should be used for most lines in /etc/gateways
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.31 2001/01/05 05:12:41 angelos Exp $
d158 1
a158 1
an infinite metric to insure the invalidation
@


1.31
log
@There's no "no_ripv1_out" and "no_ripv2_out", so paraphrase.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.30 2000/04/15 02:15:17 aaron Exp $
d495 2
@


1.30
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.29 2000/03/18 22:56:04 aaron Exp $
d521 2
a522 1
Disables all RIP processing on the specified interface.
a525 3
.Cm No_rip
is equivalent to
.Cm no_ripv1_in no_ripv2_in no_ripv1_out no_ripv2_out .
@


1.29
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.28 2000/03/04 20:02:24 aaron Exp $
d94 1
a94 1
.Xr route 8 ).
d119 1
a119 1
.Xr ifconfig 8 ),
d187 1
a187 1
.Xr netstat 1 ),
d448 1
a448 1
.Xr inet 3 ).
d471 1
a471 1
.Ar " net  nname/32 ".
@


1.28
log
@Try to standardize the options list introduction; it should read "The options
are as follows:", except in special cases.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.27 1999/10/07 18:58:37 wvdputte Exp $
d212 4
a215 4
have a default "lifetime" of 30 minutes.  That means should
something happen, a client can be without a good route for
30 minutes.  It is a good idea to reduce the default to 45
seconds using
d267 2
a268 1
dangerous.  It is more commonly accidentally used to create chaos with a routing
d504 2
a505 1
Do not use this feature unless necessary.  It is dangerous.
@


1.27
log
@Removed dead link to gated(8) -- OK aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.26 1999/09/23 04:12:03 alex Exp $
d229 1
a229 2
are sent over point to point links (e.g. PPP).

d231 1
a231 2
Options supported by
.Nm routed :
@


1.26
log
@Typo fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.25 1999/07/03 02:11:07 aaron Exp $
a594 1
.Xr gated 8 ,
@


1.25
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.24 1999/06/04 02:45:24 aaron Exp $
d53 1
a53 1
is a dameon invoked at boot time to manage the network
d547 1
a547 1
Disables the tranmission of Router Discovery Solicitations.
@


1.24
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.23 1999/05/23 14:11:20 aaron Exp $
a586 1
.Pp
@


1.23
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.22 1999/05/15 02:17:52 aaron Exp $
d455 1
a455 1
.Xr named 8 
@


1.22
log
@ethernet -> Ethernet, other repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.21 1999/03/16 02:46:51 deraadt Exp $
d38 1
a38 1
.Os BSD 4.4
@


1.21
log
@fix Xr; msfriedl@@fau.de
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.20 1998/12/15 01:20:43 aaron Exp $
d275 1
a275 1
This option is useful on gateways to ethernets that have other gateway
@


1.20
log
@always give .Nm macros an argument in SYNOPSIS sections; krw@@tcn.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.19 1998/11/28 19:56:33 aaron Exp $
d187 1
a187 1
.Xr netstat 8 ),
@


1.19
log
@kill redundant .Nm macro arguments; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.18 1998/11/24 01:03:43 deraadt Exp $
d43 1
a43 1
.Nm
@


1.18
log
@typo; abs
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.17 1998/11/11 22:20:00 aaron Exp $
d52 1
a52 1
.Nm routed
d302 1
a302 1
.Nm routed
d535 1
a535 1
.Nm routed
d585 1
a585 1
.Nm routed
@


1.17
log
@more `` '' -> .Dq sillyness; remove redundant .Pp macros; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.16 1998/09/23 01:20:25 aaron Exp $
d269 1
a269 1
dangerous.  It is more commonly accidentally used to create chaos with routing
@


1.16
log
@alphabetize SEE ALSO entries and order them numerically according to section
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.15 1998/09/17 04:15:01 aaron Exp $
d82 2
a83 1
system and marked ``up''.
@


1.15
log
@sbin/ man page fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.14 1998/08/29 21:11:09 deraadt Exp $
d593 2
a595 2
.Xr udp 4 ,
.Xr icmp 4 ,
@


1.14
log
@man page repairs; aaron@@ug.cs.dal.ca
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.13 1998/06/23 11:42:32 deraadt Exp $
d52 1
a52 1
.Nm Routed
d82 1
a82 1
system and marked "up".
d235 1
a235 1
this option forces
d242 1
a242 1
is the opposite of the
d249 1
a249 1
This flag is used on internetwork routers to offer a route
d271 1
a271 1
This causes host or point-to-point routes to not be advertised,
d277 1
a277 1
This causes the machine to advertise a host or point-to-point route to
d291 1
a291 1
do not ignore RIPv2 authentication if we do not care about RIPv2
d298 1
a298 1
increases the debugging level to at least 1 and
d304 1
a304 1
increases the debugging level, which causes more information to be logged
d310 1
a310 1
.Em SIGUSR1
d312 1
a312 1
.Em SIGUSR2
d317 1
a317 1
minimize routes in transmissions via interfaces with addresses that match
d336 1
a336 1
is equivalent to adding the parameter
d369 2
a370 1
Gateways specified in this manner should be marked passive
d372 2
a373 1
while gateways marked active
d381 3
a383 1
Distant active gateways are treated like network interfaces.
d467 1
a467 1
.Ar Value
d492 1
a492 1
indicates that the other parameters on the line apply to the interface
d496 1
a496 1
advertises a route to network
d506 1
a506 1
specifies a RIPv2 password that will be included on all RIPv2
d509 3
a511 1
or '#' characters.
d513 1
a513 1
turns off aggregation of subnets in RIPv1 and RIPv2 responses.
d515 1
a515 1
turns off aggregation of networks into supernets in RIPv2 responses.
d517 1
a517 1
is equivalent
d520 1
a520 1
disables all RIP processing on the specified interface.
d533 1
a533 1
causes
d537 1
a537 1
causes RIPv1 received responses to be ignored.
d539 1
a539 1
causes RIPv2 received responses to be ignored.
d541 1
a541 1
turns off RIPv1 output and causes RIPv2 advertisements to be
d544 1
a544 1
disables the Internet Router Discovery Protocol.
d546 1
a546 1
disables the tranmission of Router Discovery Solicitations.
d548 1
a548 1
specifies that Router Discovery solicitations should be sent,
d552 1
a552 1
disables the transmission of Router Discovery Advertisements.
d554 1
a554 1
specifies that Router Discovery advertisements should be sent,
d558 1
a558 1
specifies that Router Discovery packets should be broadcast instead of
d561 1
a561 1
sets the preference in Router Discovery Advertisements to the integer
d564 1
a564 1
sets the nominal interval with which Router Discovery Advertisements
d567 1
a567 1
has an identical effect to
d571 1
a571 1
is similar to
d596 1
a596 1
.Xr rtquery 8 .
@


1.13
log
@no htable manpage
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.12 1998/06/15 17:55:58 mickey Exp $
d75 1
a75 1
It also advertise or solicits default routes using Router Discovery
d89 1
a89 1
non-static routes in kernel table.
d227 1
a227 1
By default, neither Router Discovery advertisements nor solicications
d260 1
a260 1
file.
d268 1
a268 1
dangerous.  It is more commonly accidently used to create chaos with routing
d403 1
a403 1
will install such a route if ncessary,
d450 1
a450 1
.Xr named 8 ,
d529 1
a529 1
to act as a client router discovery daemon, not adveritising.
d546 1
a546 1
disables the transmission of Router Discovery Advertisements
d550 1
a550 1
which by default only listen to Router Discovery messages
d563 1
a563 1
with the network and mask coming from the sepcified interface.
@


1.12
log
@use Bx macro for BSD versions
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.11 1997/07/30 23:28:45 deraadt Exp $
a589 1
.Xr htable 8 ,
@


1.11
log
@new routed DOES NOT EVEN COMPILE LET ALONE WORK.  TEST YOUR WORK!
Also, put back the damn security check in input.c that has been deleted
TWO SEPERATE TIMES NOW!  I CURSE anyone who deletes that check again.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.9 1997/06/26 21:53:05 deraadt Exp $
d59 3
a61 1
The RIPv1 protocol is based on the reference 4.3BSD daemon.
@


1.10
log
@update to sgi-02apr97
still have problems w/ defaults from pppd
@
text
@d101 1
a101 1
RIP request and response and Router Discovery packets from other hosts.
d203 6
a208 1
The Router Discovery standard requires that advertisements
a218 5
On a host with more than one network interface,
this default route will be via only one of the interfaces.
Thus, multi-homed hosts running with \f3\-q\f1 might need
.Cm no_rdisc
described below.
d225 1
a225 1
By default, neither Router Discovery advertisements nor solicitations
a226 4
The netmask associated with point-to-point links (such as SLIP
or PPP, with the IFF_POINTOPOINT flag) is used by
.Nm routed
to infer the netmask used by the remote system when RIPv1 is used.
a242 1
This is the default when only one interface is present.
d266 1
a266 1
dangerous.  It is more commonly accidentally used to create chaos with routing
d401 1
a401 1
will install such a route if necessary,
a503 31
.It Cm passwd Ns \&= Ns Ar XXX1[|KeyID[start|stop]]
specifies a RIPv2 cleartext password that will be included on
all RIPv2 responses sent, and checked on all RIPv2 responses received.
Any blanks, tab characters, commas, or '#', '|', or NULL characters in the
password must be escaped with a backslash (\\).
The common escape sequences \\n, \\r, \\t, \\b, and \\xxx have their
usual meanings.
The
.Cm KeyID
must be unique but is ignored for cleartext passwords.
If present,
.Cm start
and
.Cm stop
are timestamps in the form year/month/day@@hour:minute.
They specify when the password is valid.
The valid password with the most future is used on output packets, unless
all passwords have expired, in which case the password that expired most
recently is used, or unless no passwords are valid yet, in which case
no password is output.
Incoming packets can carry any password that is valid, will
be valid within 24 hours, or that was valid within 24 hours.
To protect the secrets, the passwd settings are valid only in the
.Em /etc/gateways
file and only when that file is readable only by UID 0.
.It Cm md5_passwd Ns \&= Ns Ar XXX1|KeyID[start|stop]
specifes a RIPv2 MD5 password.
Except that a
.Cm KeyID
is required, this keyword is similar to
.Cm passwd .
d509 2
a510 2
marks the interface to not be advertised in updates sent via other
interfaces, and turns off all RIP and router discovery through the interface.
d516 3
d527 1
a527 1
to act as a client router discovery daemon, not advertising.
a534 5
.It Cm ripv2
is equivalent to
.Cm no_ripv1_in
and
.Cm no_ripv1_out .
d538 1
a538 1
disables the transmission of Router Discovery Solicitations.
d546 1
a546 1
specifies that Router Discovery Advertisements should be sent,
d560 1
a560 1
.Fl F Ar net[/mask][=metric]
a571 9
.It Cm trust_gateway Ns \&= Ns Ar rname
causes RIP packets from that router and other routers named in
other
.Cm trust_gateway
keywords to be accept, and packets from other routers to be ignored.
.It Cm redirect_ok
causes RIP to allow ICMP Redirect messages when the system is acting
as a router and forwarding packets.
Otherwise, ICMP Redirect messages are overridden.
d573 5
@


1.9
log
@typos; msaitoh@@spa.is.uec.ac.jp
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.8 1997/01/28 07:16:41 deraadt Exp $
d101 1
a101 1
RIP request and response and Router Discover packets from other hosts.
d203 1
a203 6
While using Router Discovery (which happens by default when
the system has a single network interface and a Router Discover Advertisement
is received), there is a single default route and a variable number of
redirected host routes in the kernel table.
.Pp
The Router Discover standard requires that advertisements
d214 5
d225 1
a225 1
By default, neither Router Discovery advertisements nor solicications
d227 4
d247 1
d271 1
a271 1
dangerous.  It is more commonly accidently used to create chaos with routing
d406 1
a406 1
will install such a route if ncessary,
d509 31
d545 2
a546 2
is equivalent
.Cm no_rip Cm no_rdisc .
a551 3
.Cm No_rip
is equivalent to
.Cm no_ripv1_in no_ripv2_in no_ripv1_out no_ripv2_out .
d560 1
a560 1
to act as a client router discovery daemon, not adveritising.
d568 5
d576 1
a576 1
disables the tranmission of Router Discovery Solicitations.
d584 1
a584 1
specifies that Router Discovery advertisements should be sent,
d598 1
a598 1
.Fl F Ar net[/mask][,metric]
d610 9
a619 5
.Pp
Note that the netmask associated with point-to-point links (such as SLIP
or PPP, with the IFF_POINTOPOINT flag) is used by
.Nm routed
to infer the netmask used by the remote system when RIPv1 is used.
@


1.8
log
@repairs by msaitoh@@spa.is.uec.ac.jp
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.7 1997/01/21 19:33:15 deraadt Exp $
d50 1
a50 1
.OP Fl P Ar parms
@


1.7
log
@fixes from msaitoh@@spa.is.uec.ac.jp
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.6 1996/10/02 06:51:46 mickey Exp $
d256 1
a256 1
.CM pm_rdisc in the
d312 1
a312 1
.Cm rtquery
d409 1
a409 1
.Em /etc/gateways
d450 1
a450 1
.Xr routed Ns .)
d491 1
a491 1
.AR nname
d493 1
a493 1
.AR mask
@


1.6
log
@update to the latest version from Sep 12.
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.5 1996/09/05 14:31:41 mickey Exp $
d142 1
a142 1
The change in the kernel routing tableis reflected in the next batch of
a218 5
.Pp
While using Router Discovery (which happens by default when
the system has a single network interface and a Router Discover Advertisement
is received), there is a single default route and a variable number of
redirected host routes in the kernel table.
@


1.5
log
@fix import.
mention that routed is from vjs@@sgi.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: routed.8,v 1.4 1996/06/23 14:32:31 deraadt Exp $
d303 3
@


1.4
log
@update rcsid
@
text
@d1 1
a1 2
.\"	$OpenBSD: routed.8,v 1.7 1996/02/06 20:34:28 scottr Exp $
.\"	$NetBSD: routed.8,v 1.7 1996/02/06 20:34:28 scottr Exp $
d34 1
a34 1
.\"	@@(#)routed.8	8.2 (Berkeley) 12/11/93
d36 1
a36 1
.Dd December 11, 1993
d38 1
a38 1
.Os BSD 4.2
d41 1
a41 1
.Nd network routing daemon
d43 8
a50 7
.Nm routed
.Op Fl d
.Op Fl g
.Op Fl q
.Op Fl s
.Op Fl t
.Op Ar logfile
d53 7
a59 7
is invoked at boot time to manage the network routing tables.
The routing daemon uses a variant of the Xerox NS Routing
Information Protocol in maintaining up to date kernel routing
table entries.
It used a generalized protocol capable of use with multiple
address types, but is currently used only for Internet routing
within a cluster of networks.
d61 1
a61 3
In normal operation
.Nm routed
listens on the
d67 12
a78 11
for routing information packets.  If the host is an
internetwork router, it periodically supplies copies
of its routing tables to any directly connected hosts
and networks.
.Pp
When
.Nm routed
is started, it uses the
.Dv SIOCGIFCONF
.Xr ioctl 2
to find those
d80 17
a96 10
system and marked ``up'' (the software loopback interface
is ignored).  If multiple interfaces
are present, it is assumed that the host will forward packets
between networks.
.Nm Routed
then transmits a 
.Em request
packet on each interface (using a broadcast packet if
the interface supports it) and enters a loop, listening
for
d99 3
a101 2
.Em response
packets from other hosts.
d105 2
a106 2
packet is received, 
.Nm routed
d108 2
a109 1
internal tables.  The
d112 25
a136 30
with a ``hop count'' metric (a count of 16, or greater, is
considered ``infinite'').  The metric associated with each
route returned provides a metric
.Em relative to the sender .
.Pp
.Em Response
packets received by
.Nm routed
are used to update the routing tables if one of the following
conditions is satisfied:
.Bl -enum
.It
No routing table entry exists for the destination network
or host, and the metric indicates the destination is ``reachable''
(i.e. the hop count is not infinite).
.It
The source host of the packet is the same as the router in the
existing routing table entry.  That is, updated information is
being received from the very internetwork router through which
packets for the destination are being routed.
.It
The existing entry in the routing table has not been updated for
some time (defined to be 90 seconds) and the route is at least
as cost effective as the current route.
.It
The new route describes a shorter route to the destination than
the one currently stored in the routing tables; the metric of
the new route is compared against the one stored in the table
to decide this.
.El
d139 4
a142 4
.Nm routed
records the change in its internal tables and updates the kernel
routing table.
The change is reflected in the next
d144 4
a147 1
packet sent.
d150 1
a150 1
.Nm routed
d153 17
a169 3
is set to infinity and marked for deletion.  Deletions are delayed
an additional 60 seconds to insure the invalidation is propagated
throughout the local internet.
d174 2
a175 1
The response is sent to the broadcast address on nets capable of that function,
d178 55
a232 6
The normal routing tables are bypassed when sending gratuitous responses.
The reception of responses on each network is used to determine that the
network and interface are functioning correctly.
If no response is received on an interface, another route may be chosen
to route around the interface, or the route may be dropped if no alternative
is available.
d237 11
d249 2
a250 2
Enable additional debugging information to be logged,
such as bad packets received.
d253 14
a266 1
to the ``default'' destination.
d270 33
a302 13
.It Fl s
Supplying this
option forces 
.Nm routed
to supply routing information whether it is acting as an internetwork
router or not.
This is the default if multiple network interfaces are present,
or if a point-to-point link is in use.
.It Fl q
This
is the opposite of the
.Fl s
option.
d304 38
a341 7
If the
.Fl t
option is specified, all packets sent or received are
printed on the standard output.  In addition,
.Nm routed
will not divorce itself from the controlling terminal
so that interrupts from the keyboard will kill the process.
d345 11
a355 10
of file in which 
.Nm routed Ns \'s
actions should be logged.  This log contains information
about any changes to the routing tables and, if not tracing all packets,
a history of recent messages sent and received which are related to
the changed route.
.Pp
In addition to the facilities described above, 
.Nm routed
supports the notion of ``distant''
d357 1
a357 1
and 
d359 4
a362 3
gateways.  When 
.Nm routed
is started up, it reads the file
d364 5
a368 4
to find gateways which may not be located using
only information from the
.Dv SIOGIFCONF
.Xr ioctl 2 .
d372 25
a396 13
should be willing to exchange routing information (i.e.
they should have a
.Nm routed
process running on the machine).
Routes through passive gateways are installed in the
kernel's routing tables once upon startup.
Such routes are not included in
any routing information transmitted.
Active gateways are treated equally to network
interfaces.  Routing information is distributed
to the gateway and if no routing information is
received for a period of time, the associated
route is deleted.
d401 1
a401 2
The function of external entries is to inform
.Nm routed
d403 4
a406 2
will install such a route, and that alternate routes to that destination
should not be installed.
d410 16
a425 4
The 
.Pa /etc/gateways
file is composed of a series of lines, each in
the following format:
d427 2
a428 3
.Pf < Cm net No \&|
.Cm host Ns >
.Ar name1
d430 1
a430 1
.Ar name2
d435 1
a435 1
.Cm external Ns >
d438 1
a438 2
The 
.Cm net
d440 6
a445 6
.Cm host
keyword indicates if the route is to a network or specific host.
.Pp
.Ar Name1
is the name of the destination network or host.  This may be a
symbolic name located in
d448 2
a449 2
.Pa /etc/hosts
(or, if started after
d451 2
a452 3
known to the name server), 
or an Internet address specified in ``dot'' notation; see
.Xr inet 3 .
d454 7
a460 2
.Ar Name2
is the name or address of the gateway to which messages should
d464 4
a467 2
is a metric indicating the hop count to the destination host
or network.
d474 2
a475 2
indicates if the gateway should be treated as 
.Em passive
d477 1
a477 1
.Em active
d480 98
a577 2
.Em external
to the scope of the
d579 1
a579 1
protocol.
a580 8
Internetwork routers that are directly attached to the Arpanet or Milnet
should use the Exterior Gateway Protocol
.Pq Tn EGP
to gather routing information
rather then using a static routing table of passive gateways.
.Tn EGP
is required in order to provide routes for local networks to the rest
of the Internet system.
d587 1
d590 2
a591 2
.Xr XNSrouted 8 ,
.Xr htable 8
a597 23
The kernel's routing tables may not correspond to those of
.Nm routed
when redirects change or add routes.
.Nm Routed
should note any redirects received by reading
the
.Tn ICMP
packets received via a raw socket.
.Pp
.Nm Routed
should incorporate other routing protocols,
such as Xerox
.Tn \&NS
.Pq Xr XNSrouted 8
and
.Tn EGP .
Using separate processes for each requires configuration options
to avoid redundant or competing routes.
.Pp
.Nm Routed
should listen to intelligent interfaces, such as an
.Tn IMP ,
to gather more information.
@


1.3
log
@From NetBSD:
Grammar police, noted by Peter Seebach <seebs@@solon.com>; closes PR #1704.
@
text
@d1 1
@


1.2
log
@grammar fix; from seebs@@taniemarie.solon.com; netbsd pr#1704
@
text
@d1 1
a1 1
.\"	$NetBSD: routed.8,v 1.6 1995/03/18 15:00:38 cgd Exp $
d250 1
a250 1
is composed of a series of lines, each in
@


1.1
log
@Initial revision
@
text
@d250 1
a250 1
is comprised of a series of lines, each in
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@new routed from SGI.
rip1, rip2, icmp, rdisc.
@
text
@d1 2
a2 1
.\" $OpenBSD$
d34 1
a34 1
.\"     @@(#)routed.8	8.2 (Berkeley) 12/11/93
d36 1
a36 1
.Dd June 1, 1996
d38 1
a38 1
.Os BSD 4.4
d41 1
a41 1
.Nd network RIP and router discovery routing daemon
d43 7
a49 8
.Nm
.Op Fl sqdghmpAt
.Op Fl T Ar tracefile
.Oo
.Fl F
.Ar net Ns Op /mask Ns Op ,metric
.Oc
.OP Fl P Ar parms
d52 7
a58 7
is a dameon invoked at boot time to manage the network
routing tables.
It uses Routing Information Protocol, RIPv1 (RFC\ 1058),
RIPv2 (RFC\ 1723),
and Internet Router Discovery Protocol (RFC 1256)
to maintain the kernel routing table.
The RIPv1 protocol is based on the reference 4.3BSD daemon.
d60 3
a62 1
It listens on the
d68 11
a78 12
for Routing Information Protocol packets.
It also sends and receives multicast Router Discovery ICMP messages.
If the host is a router,
.Nm
periodically supplies copies
of its routing tables to any directly connected hosts and networks.
It also advertise or solicits default routes using Router Discovery
ICMP messages.
.Pp
When started (or when a network interface is later turned on),
.Nm
uses an AF_ROUTE address family facility to find those
d80 10
a89 17
system and marked "up".
It adds necessary routes for the interfaces
to the kernel routing table.
Soon after being first started, and provided there is at least one
interface on which RIP has not been disabled,
.Nm
deletes all pre-existing
non-static routes in kernel table.
Static routes in the kernel table are preserved and
included in RIP responses if they have a valid RIP metric
(see
.Xr route 8 ).
.Pp
If more than one interface is present (not counting the loopback interface),
it is assumed that the host should forward packets among the
connected networks.
After transmitting a RIP
d92 2
a93 3
Router Discovery Advertisements or Solicitations on a new interface,
the daemon enters a loop, listening for
RIP request and response and Router Discover packets from other hosts.
d97 2
a98 2
packet is received,
.Nm
d100 1
a100 2
internal tables.
The
d103 30
a132 25
with a "hop count" metric (a count of 16 or greater is
considered "infinite").
Advertised metrics reflect the metric associated with interface
(see
.Xr ifconfig 8 ),
so setting the metric on an interface
is an effective way to steer traffic.
.Pp
Responses do not contain routes with a first hop on the requesting
network to implement in part
.Em split-horizon .
Requests from query programs
such as
.Xr rtquery 8
are answered with the complete table.
.Pp
The routing table maintained by the daemon
includes space for several gateways for each destination
to speed recovery from a failing router.
RIP
.Em response
packets received are used to update the routing tables provided they are
from one of the several currently recognized gateways or
advertise a better metric than at least one of the existing
gateways.
d135 4
a138 4
.Nm
records the change in its own tables and updates the kernel routing table
if the best route to the destination changes.
The change in the kernel routing tableis reflected in the next batch of
d140 1
a140 4
packets sent.
If the next response is not scheduled for a while, a
.Em flash update
response containing only recently changed routes is sent.
d143 1
a143 1
.Nm
d146 3
a148 17
is set to infinity and marked for deletion.
Deletions are delayed until the route has been advertised with
an infinite metric to insure the invalidation
is propagated throughout the local internet.
This is a form of
.Em poison reverse .
.Pp
Routes in the kernel table that are added or changed as a result
of ICMP Redirect messages are deleted after a while to minimize
.Em black-holes .
When a TCP connection suffers a timeout,
the kernel tells
.Nm routed ,
which deletes all redirected routes
through the gateway involved, advances the age of all RIP routes through
the gateway to allow an alternate to be chosen, and advances of the
age of any relevant Router Discovery Protocol default routes.
d153 1
a153 2
These RIP responses are sent to the broadcast address on nets that support
broadcasting,
d156 6
a161 55
If RIPv2 is enabled, multicast packets are sent on interfaces that
support multicasting.
.Pp
If no response is received on a remote interface, if there are errors
while sending responses,
or if there are more errors than input or output (see
.Xr netstat 8 ),
then the cable or some other part of the interface is assumed to be
disconnected or broken, and routes are adjusted appropriately.
.Pp
The
.Em Internet Router Discovery Protocol
is handled similarly.
When the daemon is supplying RIP routes, it also listens for
Router Discovery Solicitations and sends Advertisements.
When it is quiet and only listening to other RIP routers, it
sends Solicitations and listens for Advertisements.
If it receives
a good Advertisement, it stops listening for broadcast or multicast
RIP responses.
It tracks several advertising routers to speed recovery when the
currently chosen router dies.
If all discovered routers disappear,
the daemon resumes listening to RIP responses.
.Pp
While using Router Discovery (which happens by default when
the system has a single network interface and a Router Discover Advertisement
is received), there is a single default route and a variable number of
redirected host routes in the kernel table.
.Pp
The Router Discover standard requires that advertisements
have a default "lifetime" of 30 minutes.  That means should
something happen, a client can be without a good route for
30 minutes.  It is a good idea to reduce the default to 45
seconds using
.Fl P Cm rdisc_interval=45
on the command line or
.Cm rdisc_interval=45
in the
.Pa /etc/gateways
file.
.Pp
While using Router Discovery (which happens by default when
the system has a single network interface and a Router Discover Advertisement
is received), there is a single default route and a variable number of
redirected host routes in the kernel table.
.Pp
See the
.Cm pm_rdisc
facility described below to support "legacy" systems
that can handle neither RIPv2 nor Router Discovery.
.Pp
By default, neither Router Discovery advertisements nor solicications
are sent over point to point links (e.g. PPP).

a165 11
.It Fl s
this option forces
.Nm
to supply routing information.
This is the default if multiple network interfaces are present on which
RIP or Router Discovery have not been disabled, and if the kernel switch
ipforwarding=1.
.It Fl q
is the opposite of the
.Fl s
option.
d167 2
a168 2
Do not run in the background.
This option is meant for interactive use.
d171 1
a171 14
to the "default" destination.
It is equivalent to
.Fl F
.Cm 0/0,1
and is present mostly for historical reasons.
A better choice is
.Fl P Cm pm_rdisc
on the command line or
.CM pm_rdisc in the
.Pa /etc/gateways
file.
since a larger metric
will be used, reducing the spread of the potentially dangerous
default route.
d175 13
a187 33
Notice that because a metric of 1 is used, this feature is
dangerous.  It is more commonly accidently used to create chaos with routing
loop than to solve problems.
.It Fl h
This causes host or point-to-point routes to not be advertised,
provided there is a network route going the same direction.
That is a limited kind of aggregation.
This option is useful on gateways to ethernets that have other gateway
machines connected with point-to-point links such as SLIP.
.It Fl m
This causes the machine to advertise a host or point-to-point route to
its primary interface.
It is useful on multi-homed machines such as NFS servers.
This option should not be used except when the cost of
the host routes it generates is justified by the popularity of
the server.
It is effective only when the machine is supplying
routing information, because there is more than one interface.
The
.Fl m
option overrides the
.Fl q
option to the limited extent of advertising the host route.
.It Fl A
do not ignore RIPv2 authentication if we do not care about RIPv2
authentication.
This option is required for conformance with RFC 1723.
However, it makes no sense and breaks using RIP as a discovery protocol
to ignore all RIPv2 packets that carry authentication when this machine
does not care about authentication.
.It Fl T Ar tracefile
increases the debugging level to at least 1 and
causes debugging information to be appended to the trace file.
d189 7
a195 38
increases the debugging level, which causes more information to be logged
on the tracefile specified with
.Fl T
or standard out.
The debugging level can be increased or decreased
with the
.Em SIGUSR1
or
.Em SIGUSR2
signals or with the
.Cm rtquery
command.
.It Fl F Ar net[/mask][,metric]
minimize routes in transmissions via interfaces with addresses that match
.Em net/mask ,
and synthesizes a default route to this machine with the
.Em metric .
The intent is to reduce RIP traffic on slow, point-to-point links
such as PPP links by replacing many large UDP packets of RIP information
with a single, small packet containing a "fake" default route.
If
.Em metric
is absent, a value of 14 is assumed to limit
the spread of the "fake" default route.

This is a dangerous feature that when used carelessly can cause routing
loops.
Notice also that more than one interface can match the specified network
number and mask.
See also
.Fl g .
.It Fl P Ar parms
is equivalent to adding the parameter
line
.Em parms
to the
.Pa /etc/gateways
file.
d199 10
a208 11
of a file in which the actions of
.Nm
should be logged.
It is better to use
.Fl T
instead of
appending the name of the trace file to the command.
.Pp
.Nm
also supports the notion of
"distant"
d210 1
a210 1
or
d212 3
a214 4
gateways.
When
.Nm
is started, it reads the file
d216 4
a219 5
to find such distant gateways which may not be located using
only information from a routing socket, to discover if some
of the local gateways are
.Em passive ,
and to obtain other parameters.
d223 13
a235 25
should be willing to exchange RIP packets.
Routes through
.Em passive
gateways are installed in the
kernel's routing tables once upon startup and are not included in
transmitted RIP responses.
.Pp
Distant active gateways are treated like network interfaces.
RIP responses are sent
to the distant
.Em active
gateway.
If no responses are received, the associated route is deleted from
the kernel table and RIP responses advertised via other interfaces.
If the distant gateway resumes sending RIP responses, the associated
route is restored.
.Pp
Such gateways can be useful on media that do not support broadcasts
or multicasts but otherwise act like classic shared media like
Ethernets such as some ATM networks.
One can list all RIP routers reachable on the ATM network in
.Pa /etc/gateways
with a series of
"host" lines.
.Pp
d240 2
a241 1
The function of external entries is to indicate
d243 2
a244 4
will install such a route if ncessary,
and that alternate routes to that destination should not be installed
by
.Nm routed .
d248 4
a251 5
The
.Em /etc/gateways
file is comprised of a series of lines, each in
one of the following formats or consist of parameters described below:
.Pp
d253 3
a255 2
.Cm net
.Ar Nname[/mask]
d257 1
a257 1
.Ar Gname
d262 1
a262 1
.Cm extern Ns >
d264 4
a267 1
.Bd -ragged
d269 1
a269 9
.Ar Hname
.Cm gateway
.Ar Gname
.Cm metric
.Ar value
.Pf < Cm passive No \&|
.Cm active No \&|
.Cm extern Ns >
.Ed
d271 3
a273 8
.Ar Nname
or
.Ar Hname
is the name of the destination network or host.
It may be a symbolic network name or an Internet address
specified in "dot" notation (see
.Xr inet 3 ).
(If it is a name, then it must either be defined in
d276 2
a277 2
.Pa /etc/hosts ,
or
d279 3
a281 2
must have been started before
.Xr routed Ns .)
d283 2
a284 7
.Ar mask
is an optional number between 1 and 32 indicating the netmask associated
with
.Ar Nname .
.Pp
.Ar Gname
is the name or address of the gateway to which RIP responses should
d288 2
a289 4
is the hop count to the destination host or network.
.Ar " host hname "
is equivalent to
.Ar " net  nname/32 ".
d296 2
a297 2
must be present to indicate whether the gateway should be treated as
.Cm passive
d299 1
a299 1
.Cm active
d302 2
a303 48
.Cm external
to the scope of the RIP protocol.
.Pp
Lines that start with neither "net" nor "host" must consist of one
or more of the following parameter settings, separated by commas or
blanks:
.Bl -tag -width Ds
.It Cm if Ns \&= Ns Ar ifname
indicates that the other parameters on the line apply to the interface
name
.Ar ifname .
.It Cm subnet Ns \&= Ns Ar nname[/mask][,metric]
advertises a route to network
.AR nname
with mask
.AR mask
and the supplied metric (default 1).
This is useful for filling "holes" in CIDR allocations.
This parameter must appear by itself on a line.
.Pp
Do not use this feature unless necessary.  It is dangerous.
.It Cm passwd Ns \&= Ns Ar XXX
specifies a RIPv2 password that will be included on all RIPv2
responses sent and checked on all RIPv2 responses received.
The password must not contain any blanks, tab characters, commas
or '#' characters.
.It Cm no_ag
turns off aggregation of subnets in RIPv1 and RIPv2 responses.
.It Cm no_super_ag
turns off aggregation of networks into supernets in RIPv2 responses.
.It Cm passive
is equivalent
.Cm no_rip Cm no_rdisc .
.It Cm no_rip
disables all RIP processing on the specified interface.
If no interfaces are allowed to process RIP packets,
.Nm
acts purely as a router discovery daemon.
.Cm No_rip
is equivalent to
.Cm no_ripv1_in no_ripv2_in no_ripv1_out no_ripv2_out .

Note that turning off RIP without explicitly turning on router
discovery advertisements with
.Cm rdisc_adv
or
.Fl s
causes
d305 1
a305 51
to act as a client router discovery daemon, not adveritising.
.It Cm no_ripv1_in
causes RIPv1 received responses to be ignored.
.It Cm no_ripv2_in
causes RIPv2 received responses to be ignored.
.It Cm ripv2_out
turns off RIPv1 output and causes RIPv2 advertisements to be
multicast when possible.
.It Cm no_rdisc
disables the Internet Router Discovery Protocol.
.It Cm no_solicit
disables the tranmission of Router Discovery Solicitations.
.It Cm send_solicit
specifies that Router Discovery solicitations should be sent,
even on point-to-point links,
which by default only listen to Router Discovery messages.
.It Cm no_rdisc_adv
disables the transmission of Router Discovery Advertisements
.It Cm rdisc_adv
specifies that Router Discovery advertisements should be sent,
even on point-to-point links,
which by default only listen to Router Discovery messages
.It Cm bcast_rdisc
specifies that Router Discovery packets should be broadcast instead of
multicast.
.It Cm rdisc_pref Ns \&= Ns Ar N
sets the preference in Router Discovery Advertisements to the integer
.Ar N .
.It Cm rdisc_interval Ns \&= Ns Ar N
sets the nominal interval with which Router Discovery Advertisements
are transmitted to N seconds and their lifetime to 3*N.
.It Cm fake_default Ns \&= Ns Ar metric
has an identical effect to
.Fl F Ar net[/mask][,metric]
with the network and mask coming from the sepcified interface.
.It Cm pm_rdisc
is similar to
.Cm fake_default .
When RIPv2 routes are multicast, so that RIPv1 listeners cannot
receive them, this feature causes a RIPv1 default route to be
broadcast to RIPv1 listeners.
Unless modified with
.Cm fake_default ,
the default route is broadcast with a metric of 14.
That serves as a "poor man's router discovery" protocol.
.El
.Pp
Note that the netmask associated with point-to-point links (such as SLIP
or PPP, with the IFF_POINTOPOINT flag) is used by
.Nm routed
to infer the netmask used by the remote system when RIPv1 is used.
d307 8
a320 1
.Xr gated 8 ,
d323 2
a324 2
.Xr htable 8 ,
.Xr rtquery 8 .
d331 23
@
