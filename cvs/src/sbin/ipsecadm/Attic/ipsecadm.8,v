head	1.71;
access;
symbols
	OPENBSD_3_9:1.70.0.2
	OPENBSD_3_9_BASE:1.70
	OPENBSD_3_8:1.69.0.2
	OPENBSD_3_8_BASE:1.69
	OPENBSD_3_7:1.67.0.2
	OPENBSD_3_7_BASE:1.67
	OPENBSD_3_6:1.65.0.4
	OPENBSD_3_6_BASE:1.65
	OPENBSD_3_5:1.65.0.2
	OPENBSD_3_5_BASE:1.65
	OPENBSD_3_4:1.62.0.2
	OPENBSD_3_4_BASE:1.62
	OPENBSD_3_3:1.59.0.2
	OPENBSD_3_3_BASE:1.59
	OPENBSD_3_2:1.52.0.2
	OPENBSD_3_2_BASE:1.52
	OPENBSD_3_1:1.49.0.2
	OPENBSD_3_1_BASE:1.49
	OPENBSD_3_0:1.44.0.2
	OPENBSD_3_0_BASE:1.44
	OPENBSD_2_9:1.37.0.2
	OPENBSD_2_9_BASE:1.37
	OPENBSD_2_8:1.33.0.2
	OPENBSD_2_8_BASE:1.33
	OPENBSD_2_7:1.26.0.2
	OPENBSD_2_7_BASE:1.26
	OPENBSD_2_6:1.14.0.2
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5;
locks; strict;
comment	@.\" @;


1.71
date	2006.05.26.04.02.59;	author deraadt;	state dead;
branches;
next	1.70;

1.70
date	2005.09.27.12.22.03;	author markus;	state Exp;
branches;
next	1.69;

1.69
date	2005.06.14.15.35.02;	author hshoexer;	state Exp;
branches;
next	1.68;

1.68
date	2005.04.08.18.46.16;	author jmc;	state Exp;
branches;
next	1.67;

1.67
date	2004.09.26.07.16.54;	author jaredy;	state Exp;
branches;
next	1.66;

1.66
date	2004.09.23.21.47.33;	author jaredy;	state Exp;
branches;
next	1.65;

1.65
date	2004.01.27.09.26.22;	author markus;	state Exp;
branches;
next	1.64;

1.64
date	2004.01.15.12.20.08;	author markus;	state Exp;
branches;
next	1.63;

1.63
date	2003.12.02.23.16.29;	author markus;	state Exp;
branches;
next	1.62;

1.62
date	2003.07.24.08.03.19;	author itojun;	state Exp;
branches;
next	1.61;

1.61
date	2003.06.10.16.41.28;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2003.05.10.21.03.21;	author jmc;	state Exp;
branches;
next	1.59;

1.59
date	2003.03.06.20.29.24;	author jmc;	state Exp;
branches;
next	1.58;

1.58
date	2003.02.26.12.22.34;	author markus;	state Exp;
branches;
next	1.57;

1.57
date	2003.02.25.22.29.33;	author markus;	state Exp;
branches;
next	1.56;

1.56
date	2003.02.24.21.54.33;	author jason;	state Exp;
branches;
next	1.55;

1.55
date	2003.02.03.17.46.57;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2003.01.15.16.02.09;	author markus;	state Exp;
branches;
next	1.53;

1.53
date	2002.12.06.16.28.48;	author markus;	state Exp;
branches;
next	1.52;

1.52
date	2002.09.06.21.36.52;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2002.06.10.15.42.24;	author kjell;	state Exp;
branches;
next	1.50;

1.50
date	2002.06.09.08.13.06;	author todd;	state Exp;
branches;
next	1.49;

1.49
date	2001.12.21.11.41.50;	author mpech;	state Exp;
branches;
next	1.48;

1.48
date	2001.12.13.20.16.48;	author mpech;	state Exp;
branches;
next	1.47;

1.47
date	2001.12.10.03.26.51;	author ho;	state Exp;
branches;
next	1.46;

1.46
date	2001.12.01.19.05.01;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2001.11.13.18.04.39;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2001.09.06.06.34.13;	author jufi;	state Exp;
branches;
next	1.43;

1.43
date	2001.08.18.09.45.36;	author itojun;	state Exp;
branches;
next	1.42;

1.42
date	2001.07.20.18.07.11;	author mpech;	state Exp;
branches;
next	1.41;

1.41
date	2001.07.06.06.13.16;	author jasoni;	state Exp;
branches;
next	1.40;

1.40
date	2001.07.05.08.38.36;	author jjbg;	state Exp;
branches;
next	1.39;

1.39
date	2001.06.27.03.31.38;	author angelos;	state Exp;
branches;
next	1.38;

1.38
date	2001.06.26.20.44.22;	author itojun;	state Exp;
branches;
next	1.37;

1.37
date	2001.03.22.03.35.19;	author angelos;	state Exp;
branches;
next	1.36;

1.36
date	2000.11.11.04.54.38;	author angelos;	state Exp;
branches;
next	1.35;

1.35
date	2000.11.11.04.52.57;	author angelos;	state Exp;
branches;
next	1.34;

1.34
date	2000.11.06.18.20.00;	author angelos;	state Exp;
branches;
next	1.33;

1.33
date	2000.10.28.08.52.48;	author angelos;	state Exp;
branches
	1.33.2.1;
next	1.32;

1.32
date	2000.10.09.22.21.41;	author angelos;	state Exp;
branches;
next	1.31;

1.31
date	2000.09.29.19.10.08;	author angelos;	state Exp;
branches;
next	1.30;

1.30
date	2000.09.20.21.28.23;	author angelos;	state Exp;
branches;
next	1.29;

1.29
date	2000.09.19.08.50.56;	author angelos;	state Exp;
branches;
next	1.28;

1.28
date	2000.09.19.08.38.40;	author angelos;	state Exp;
branches;
next	1.27;

1.27
date	2000.09.19.03.18.11;	author angelos;	state Exp;
branches;
next	1.26;

1.26
date	2000.04.22.01.50.15;	author angelos;	state Exp;
branches;
next	1.25;

1.25
date	2000.04.21.17.33.41;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2000.04.16.17.26.16;	author aaron;	state Exp;
branches;
next	1.23;

1.23
date	2000.04.15.02.15.14;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	2000.04.12.21.47.59;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	2000.03.18.22.55.59;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.01.13.04.48.55;	author angelos;	state Exp;
branches;
next	1.19;

1.19
date	2000.01.13.04.46.18;	author angelos;	state Exp;
branches;
next	1.18;

1.18
date	99.12.20.05.42.03;	author angelos;	state Exp;
branches;
next	1.17;

1.17
date	99.12.09.20.20.56;	author angelos;	state Exp;
branches;
next	1.16;

1.16
date	99.12.04.23.26.27;	author angelos;	state Exp;
branches;
next	1.15;

1.15
date	99.11.04.11.29.35;	author ho;	state Exp;
branches;
next	1.14;

1.14
date	99.10.07.20.54.42;	author angelos;	state Exp;
branches;
next	1.13;

1.13
date	99.08.20.06.17.35;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	99.08.05.22.02.05;	author ho;	state Exp;
branches;
next	1.11;

1.11
date	99.07.09.13.35.49;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.07.08.01.09.24;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.07.07.16.18.51;	author kjell;	state Exp;
branches;
next	1.8;

1.8
date	99.07.04.18.59.41;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.04.02.45.24;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.16.19.56.14;	author alex;	state Exp;
branches;
next	1.5;

1.5
date	99.03.30.03.29.03;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	99.03.02.18.29.34;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.02.27.07.29.17;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.02.25.17.43.19;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.02.24.23.32.52;	author angelos;	state Exp;
branches;
next	;

1.33.2.1
date	2000.11.10.22.12.55;	author jason;	state Exp;
branches;
next	;


desc
@@


1.71
log
@let us not talk about ipsecadm and vpn anymore; ok reyk
@
text
@.\" $OpenBSD: ipsecadm.8,v 1.70 2005/09/27 12:22:03 markus Exp $
.\"
.\" Copyright 1997 Niels Provos <provos@@physnet.uni-hamburg.de>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Niels Provos.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Manual page, using -mandoc macros
.\"
.Dd August 26, 1997
.Dt IPSECADM 8
.Os
.Sh NAME
.Nm ipsecadm
.Nd interface to set up IPsec
.Sh SYNOPSIS
.Nm ipsecadm
.Ar command Op Ar modifier ...
.Sh NOTE
To use
.Nm ,
.Xr ipsec 4
must be enabled by having one or more of the following
.Xr sysctl 3
variables set:
.Pp
.Bl -tag -offset 4n -width net.inet.ipcomp.enable -compact
.It Va net.inet.esp.enable
Enable the ESP IPsec protocol
.It Va net.inet.ah.enable
Enable the AH IPsec protocol
.It Va net.inet.ipcomp.enable
Enable the IPComp protocol
.El
.Pp
Both the ESP and AH protocols are enabled by default.
To keep local modifications of these variables across reboots, see
.Xr sysctl.conf 5 .
.Sh DESCRIPTION
The
.Nm
utility sets up security associations in the kernel
to be used with
.Xr ipsec 4 .
It can be used to specify the encryption and authentication
algorithms and key material for the network layer security
provided by IPsec.
The possible commands are:
.Bl -tag -width new_esp
.It Cm new esp
Set up a Security Association (SA) which uses the new ESP transforms
(RFC 2406).
An SA consists of the destination address,
a Security Parameter Index (SPI) and a security protocol.
Encryption and authentication algorithms can be applied.
This is the default mode.
Allowed
modifiers are:
.Fl dst ,
.Fl src ,
.Fl proxy ,
.Fl spi ,
.Fl enc ,
.Fl srcid_type ,
.Fl srcid ,
.Fl dstid_type ,
.Fl dstid ,
.Fl auth ,
.Fl authkey ,
.Fl authkeyfile ,
.Fl forcetunnel ,
.Fl udpencap ,
.Fl key ,
and
.Fl keyfile .
.It Cm old esp
Set up an SA which uses the old ESP transforms (RFC 1827).
Only encryption algorithms can be applied.
Allowed modifiers are:
.Fl dst ,
.Fl src ,
.Fl proxy ,
.Fl spi ,
.Fl enc ,
.Fl srcid_type ,
.Fl srcid ,
.Fl dstid_type ,
.Fl dstid ,
.Fl halfiv ,
.Fl forcetunnel ,
.Fl key ,
and
.Fl keyfile .
.It Cm new ah
Set up an SA which uses the new AH transforms (RFC 2402).
Authentication will be done with Hashed Message Authentication Code
(HMAC) using the specified hash algorithm.
Allowed modifiers are:
.Fl dst ,
.Fl src ,
.Fl proxy ,
.Fl spi ,
.Fl srcid_type ,
.Fl srcid ,
.Fl dstid_type ,
.Fl dstid ,
.Fl forcetunnel ,
.Fl auth ,
.Fl key ,
and
.Fl keyfile .
.It Cm old ah
Set up an SA which uses the old AH transforms (RFC 1826).
Simple keyed hashes will be used for authentication.
Allowed modifiers are:
.Fl dst ,
.Fl src ,
.Fl proxy ,
.Fl spi ,
.Fl srcid_type ,
.Fl srcid ,
.Fl dstid_type ,
.Fl dstid ,
.Fl forcetunnel ,
.Fl auth ,
.Fl key ,
and
.Fl keyfile .
.It Cm group
Group two SAs together, such that whenever the first one is applied, the
second one will be applied as well (SA bundle).
Arbitrarily long SA bundles can thus be created.
Note that the last SA in the bundle is the one that is applied last.
Thus, if an ESP and an AH SA are bundled together (in that order), then
the resulting packet will have an AH header, followed by an ESP header,
followed by the encrypted payload.
Allowed modifiers are:
.Fl dst ,
.Fl spi ,
.Fl proto ,
.Fl dst2 ,
.Fl spi2 ,
and
.Fl proto2 .
.It Cm ip4
Set up an SA which uses the IP-in-IP encapsulation protocol.
This mode
offers no security services by itself but can be used to route other
(experimental or otherwise) protocols over an IP network.
The SPI value
is not used for anything other than referencing the information and
does not appear on the wire.
Unlike other setups, like new ESP, there
is no necessary setup in the receiving side.
Allowed modifiers are:
.Fl dst ,
.Fl src ,
and
.Fl spi .
.It Cm delspi
Delete the specified SA.
Allowed modifiers are:
.Fl dst ,
.Fl spi ,
and
.Fl proto .
.It Cm flow
Create a flow determining what security parameters a packet should
have (input or output).
Allowed modifiers are:
.Fl src ,
.Fl dst ,
.Fl proto ,
.Fl addr ,
.Fl transport ,
.Fl sport ,
.Fl dport ,
.Fl delete ,
.Fl in ,
.Fl out ,
.Fl srcid ,
.Fl dstid ,
.Fl srcid_type ,
.Fl dstid_type ,
.Fl acquire ,
.Fl require ,
.Fl dontacq ,
.Fl use ,
.Fl bypass ,
.Fl permit
and
.Fl deny .
.Pp
The
.Xr netstat 1
command shows all specified flows.
.Pp
Flows are directional, and the
.Fl in
and
.Fl out
modifiers are used to specify the direction.
By default, flows are assumed to apply to outgoing packets.
The kernel will attempt to find an appropriate
Security Association from those already present (an SA that matches
the destination address, if set, and the security protocol).
If the destination address is set to all zeroes (0.0.0.0) or left
unspecified, the destination address from the packet will be used
to locate an SA (the source address is used for incoming flows).
For incoming flows, the destination address (if specified) should
point to the expected source of the SA (the remote SA peer).
.Pp
If no such SA exists, key management daemons will be used to generate
them if
.Fl acquire
or
.Fl require
were used.
If
.Fl acquire
was used, traffic will be allowed out (or in) and IPsec will be used
when the relevant SAs have been established.
If
.Fl require
was used, traffic will not be allowed in or out until it is protected
by IPsec.
If
.Fl dontacq
was used, traffic will not be allowed in or out until it is protected
by IPsec, but key management will not be asked to provide such an SA.
The
.Fl proto
argument (by default set to
.Cm esp )
can be used to determine what type of SA should be established.
.Pp
A
.Em bypass
or
.Em permit
flow (created with
.Fl bypass
or
.Fl permit )
is used to specify a flow for which IPsec processing will be
bypassed, i.e., packets will/need not be processed by any SAs.
For bypass or permit
flows, additional modifiers are restricted to:
.Fl addr ,
.Fl transport ,
.Fl sport ,
.Fl dport ,
.Fl in ,
.Fl out ,
and
.Fl delete .
A
.Em deny
flow is used to specify classes of packets that must be dropped
(either on output or input) without further processing.
.Fl deny
takes the same additional modifiers as
.Fl bypass .
.It Cm flush
Flush SAs from kernel.
This includes flushing any flows and
routing entries associated with the SAs.
Allowed modifiers are:
.Fl ah ,
.Fl esp ,
.Fl oldah ,
.Fl oldesp ,
.Fl ip4 ,
.Fl ipcomp ,
and
.Fl tcpmd5 .
Default action is to flush all types of security associations
from the kernel.
.It Cm show
Show SAs from kernel.
Allowed modifiers are:
.Fl ah ,
.Fl esp ,
.Fl oldah ,
.Fl oldesp ,
.Fl ip4 ,
.Fl ipcomp ,
and
.Fl tcpmd5 .
Default action is to show all types of security associations
from the kernel.
.It Cm monitor
Continuously display all
.Dv PF_KEY
messages exchanged with
the kernel.
.It Cm ipcomp
Set up an IP Compression Association (IPCA) which will use the IPComp
transforms.
Just like an SA, an IPCA consists of the destination
address, a Compression Parameter Index (CPI) and a protocol (which is
fixed to IPComp).
Compression algorithms are applied.
Allowed modifiers are:
.Fl dst ,
.Fl src ,
.Fl cpi ,
.Fl comp ,
and
.Fl forcetunnel .
To create an IPsec SA using compression, an IPCA and an SA must first
be created.
After this, an IPCA/SA bundle must be created using the
.Cm group
command.
The IPCA must be applied first.
See
.Xr ipcomp 4
for further information on the IPComp protocol.
.It Cm tcpmd5
Set up a key for use by the RFC 2385 TCP MD5 option.
Allowed modifiers are:
.Fl dst ,
.Fl src ,
.Fl spi ,
.Fl key ,
and
.Fl keyfile .
.El
.Pp
If no command is given,
.Nm
defaults to new ESP mode.
.Pp
The modifiers have the following meanings:
.Bl -tag -width 7n
.It Fl src Ar address
The source IP address for the SA.
This is necessary for incoming
SAs to avoid source address spoofing between mutually
suspicious hosts that have established SAs with us.
For outgoing SAs,
this field is used to fill in the source address when doing tunneling.
.It Fl dst Ar address
The destination IP address for the SA.
.It Fl dst2 Ar address
The second IP address used by
.Cm group .
.It Fl proxy Ar address
This IP address, if provided, is checked against the inner IP address when
doing tunneling to a firewall, to prevent source spoofing attacks.
It is
strongly recommended that this option is provided when applicable.
It is
applicable in a scenario when host A is using IPsec to communicate with
firewall B, and through that to host C.
In that case, the proxy address for
the incoming SA should be C.
This option is not necessary for outgoing SAs.
.It Fl spi Ar index
The Security Parameter Index (SPI), given as a hexadecimal number.
.It Fl spi2 Ar index
The second SPI used by
.Cm group .
.It Fl cpi Ar index
The Compression Parameter Index (CPI), given as a 16-bit hexadecimal number.
.It Fl tunnel
.Sy This modifier has been deprecated.
The arguments are ignored, and it otherwise has the same effect as the
.Fl forcetunnel
option.
.It Fl newpadding
.Sy This modifier has been deprecated.
.It Fl forcetunnel
Force IP-inside-IP encapsulation before ESP or AH processing is performed for
outgoing packets.
The source/destination addresses of the outgoing IP packet
will be those provided in the
.Fl src
and
.Fl dst
options.
Notice that the IPsec stack will perform IP-inside-IP encapsulation
when deemed necessary, even if this flag has not been set.
.It Fl udpencap Ar port
Enable ESP-inside-UDP encapsulation.
The UDP destination port must be specified on the command line.
This port will be used for sending encapsulated UDP packets.
.It Fl enc Ar algorithm
The encryption algorithm to be used with the SA.
Possible values are:
.Bl -tag -width skipjack
.It Cm des
This is available for both old and new ESP.
Notice that hardware crackers for DES can be (and have been) built for
US$250,000 (in 1998).
Use DES for encryption of critical information at your own risk.
Use of 3DES or AES is recommended instead.
DES support is kept for interoperability
(with old implementations) purposes only.
See
.Xr des_cipher 3 .
.It Cm 3des
This is available for both old and new ESP.
It is considered more secure than straight DES, since it uses larger
keys.
.It Cm aes
AES/Rijndael CBC encryption is available only in new ESP.
.It Cm aesctr
AES/Rijndael CTR (RFC 3686) encryption is available only in new ESP.
.It Cm blf
Blowfish encryption is available only in new ESP.
See
.Xr blf_key 3 .
.It Cm cast
CAST encryption is available only in new ESP.
.It Cm skipjack
SKIPJACK encryption is available only in new ESP.
This algorithm was designed by the NSA and is faster than 3DES.
However, since it was designed by the NSA,
it is a poor choice.
.It Cm null
The NULL encryption algorithm is available for new ESP.
It should be used in combination with an authentication algorithm
to provide authentication and integrity without confidentiality.
.El
.Pp
.It Fl auth Ar algorithm
The authentication algorithm to be used with the SA.
Possible values are:
.Cm md5
and
.Cm sha1
for both old and new AH and also new ESP.
.Cm rmd160 ,
.Cm sha2-256 ,
.Cm sha2-384 ,
and
.Cm sha2-512
are also available
for both new AH and ESP.
.It Fl comp Ar algorithm
The compression algorithm to be used with the IPCA.
Possible values are:
.Cm deflate
and
.Cm lzs .
Note that
.Cm lzs
is only available with
.Xr hifn 4
because of the patent held by Hifn, Inc.
.It Fl key Ar key
The secret symmetric key used for encryption and authentication.
The sizes for
.Cm des
and
.Cm 3des
are fixed to 8 and 24 bytes, respectively.
For other ciphers like
.Cm cast ,
.Cm aes ,
or
.Cm blf ,
the key length can vary, depending on the algorithm.
The
.Ar key
should be given in hexadecimal digits.
The
.Ar key
should be chosen at random (ideally, using some true-random source like
coin flipping).
It is very important that the key is not guessable.
One practical way of generating 160-bit (20-byte) keys is as follows:
.Bd -literal -offset indent
$ openssl rand 20 | hexdump -e '20/1 "%02x"'
.Ed
.It Fl keyfile Ar file
Read the key from a file.
May be used instead of the
.Fl key
flag, and has the same syntax considerations.
.It Fl authkey Ar key
The secret key material used for authentication
if additional authentication in new ESP mode is required.
For old or new AH, the key material for authentication is passed with the
.Fl key
option.
The
.Ar key
should be given in hexadecimal digits.
The
.Ar key
should be chosen at random (ideally, using some true-random source like
coin flipping).
It is very important that the key is not guessable.
One practical way of generating 160-bit (20-byte) keys is as follows:
.Bd -literal -offset indent
$ openssl rand 20 | hexdump -e '20/1 "%02x"'
.Ed
.It Fl authkeyfile Ar file
Read the additional authentication key from a file.
May be used instead of the
.Fl authkey
flag, and has the same syntax considerations.
.It Fl iv
.Sy This modifier has been deprecated.
The argument is ignored.
When applicable, it has the same behaviour as the
.Fl halfiv
option.
.It Fl halfiv
This option causes use of a 4-byte initialization vector (IV) in old ESP
(as opposed to 8 bytes).
It may only be used with old ESP.
.It Fl proto Ar protocol
The security protocol needed by
.Cm delspi
or
.Cm flow ,
to uniquely specify the SA.
The default value is 50 which means
.Dv IPPROTO_ESP .
Other accepted values are 51
.Dv ( IPPROTO_AH )
and 4
.Dv ( IPPROTO_IP ) .
One can also specify the symbolic names
.Dq esp ,
.Dq ah ,
and
.Dq ip4 ,
case insensitive.
.It Fl proto2 Ar protocol
The second security protocol used by
.Cm group .
It defaults to
.Dv IPPROTO_AH ,
otherwise takes the same values as
.Fl proto .
.It Fl addr Ar srcnet mask dstnet mask
.It Xo
.Fl addr
.Ar srcnet Ns / Ns Ar prefixlen
.Ar dstnet Ns / Ns Ar prefixlen
.Xc
The first form is the source address, source network mask, destination
address, and destination network mask.
The second form is the source and destination addresses and netmasks
in CIDR notation.
Either form can be specified against which packets need to match
in order to use the specified Security Association.
All addresses must be of the same address family
(IPv4 or IPv6).
.It Fl transport Ar protocol
The protocol number which packets need to match to use the specified
Security Association.
By default, the protocol number is not used for matching.
Instead of a number, a valid protocol name that appears in
.Xr protocols 5
can be used.
.It Fl sport Ar port
The source port which packets have to match for the flow.
By default, the source port is not used for matching.
Instead of a number, a valid service name that appears in
.Xr services 5
can be used.
.It Fl dport Ar port
The destination port which packets have to match for the flow.
By default, the destination port is not used for matching.
Instead of a number, a valid service name that appears in
.Xr services 5
can be used.
.It Fl srcid Ar id
For
.Cm flow ,
used to specify what local identity key management
should use when negotiating the SAs.
If left unspecified, the source address of the flow is used
(see the discussion on
.Cm flow
above, with regard to source address).
.It Fl dstid Ar id
For
.Cm flow ,
used to specify what the remote identity key management
should expect.
If left unspecified, the destination address of the flow is used
(see the discussion on
.Cm flow
above, with regard to destination address).
.It Fl srcid_type Ar type
For
.Cm flow ,
used to specify the type of identity given by
.Fl srcid .
Valid values are
.Cm prefix ,
.Cm fqdn ,
and
.Cm ufqdn .
.Pp
The
.Cm prefix
type implies an IPv4 or IPv6 address followed by a forward slash
character and a decimal number indicating the number of important bits
in the address (equivalent to a netmask, in IPv4 terms).
Key management then has to pick a local identity that falls within the
address space indicated.
.Pp
The
.Cm fqdn
and
.Cm ufqdn
types are DNS-style host names and mailbox-format user
addresses, respectively, and are especially useful for mobile user
scenarios.
Note that no validity checking on the identities is done.
.It Fl dstid_type Ar type
See
.Fl srcid_type .
.It Fl delete
Instead of creating a flow, an existing flow is deleted.
.It Fl bypass
For
.Cm flow ,
create or delete a
.Em bypass
flow.
Packets matching this flow will not be processed by IPsec.
.It Fl permit
Same as
.Fl bypass .
.It Fl deny
For
.Cm flow ,
create or delete a
.Em deny
flow.
Packets matching this flow will be dropped.
.It Fl use
For
.Cm flow ,
specify that packets matching this flow should try to use IPsec if
possible.
.It Fl acquire
For
.Cm flow ,
specify that packets matching this flow should try to use IPsec and
establish SAs dynamically if possible, but permit unencrypted
traffic.
.It Fl require
For
.Cm flow ,
specify that packets matching this flow must use IPsec, and establish
SAs dynamically as needed.
If no SAs are established, traffic is not allowed through.
.It Fl dontacq
For
.Cm flow ,
specify that packets matching this flow must use IPsec.
If such SAs are not present, simply drop the packets.
Such a policy may be used to demand peers establish SAs before they
can communicate, without going through the burden of
initiating the SA ourselves (thus allowing for some denial of service
attacks).
This flow type is particularly suitable for security gateways.
.It Fl in
For
.Cm flow ,
specify that it should be used to match incoming packets only.
.It Fl out
For
.Cm flow ,
specify that it should be used to match outgoing packets only.
.It Fl ah
For
.Cm flush ,
only flush SAs of type AH.
.It Fl esp
For
.Cm flush ,
only flush SAs of type ESP.
.It Fl oldah
For
.Cm flush ,
only flush SAs of type old AH.
.It Fl oldesp
For
.Cm flush ,
only flush SAs of type old ESP.
.It Fl ip4
For
.Cm flush ,
only flush SAs of type IPv4.
.It Fl ipcomp
For
.Cm flush ,
only flush SAs of type IPComp.
.It Fl tcpmd5
For
.Cm flush ,
only flush SAs using the TCP MD5 option.
.El
.Sh EXAMPLES
Set up an SA which uses new ESP with 3DES encryption and HMAC-SHA1
authentication:
.Bd -literal -offset 3n
# ipsecadm new esp -enc 3des -auth sha1 -spi 100a \e
	-dst 169.20.12.2 -src 169.20.12.3 \e
	-key 638063806380638063806380638063806380638063806380 \e
	-authkey 1234123412341234123412341234123412341234
.Ed
.Pp
Set up an SA for authentication with old AH only:
.Bd -literal -offset 3n
# ipsecadm old ah -auth md5 -spi 10f2 \e
	-dst 169.20.12.2 -src 169.20.12.3 \e
	-key 12341234deadbeef
.Ed
.Pp
Set up a flow requiring use of AH:
.Bd -literal -offset 3n
# ipsecadm flow -dst 169.20.12.2 -proto ah \e
	-addr 10.1.1.0/24 10.0.0.0/24 -out -require
.Ed
.Pp
Set up an inbound SA:
.Bd -literal -offset 3n
# ipsecadm new esp -enc blf -auth md5 -spi 1002 \e
	-dst 169.20.12.3 -src 169.20.12.2 \e
	-key abadbeef15deadbeefabadbeef15deadbeefabadbeef15deadbeef \e
	-authkey 12349876432167890192837465098273
.Ed
.Pp
Set up an ingress flow for the inbound SA:
.Bd -literal -offset 3n
# ipsecadm flow -addr 10.0.0.0/8 10.1.1.0/24 \e
	-dst 169.20.12.2 -proto esp -in -require
.Ed
.Pp
Set up a bypass flow:
.Bd -literal -offset 3n
# ipsecadm flow -bypass -out -addr 10.1.1.0/24 10.1.1.0/24
.Ed
.Pp
Set up a key for the TCP MD5 option:
.Bd -literal -offset 3n
# ipsecadm tcpmd5 -src ::1 -dst ::1 -spi 0100 -key deadbeef
.Ed
.Pp
Delete all ESP SAs and their flows and routing information:
.Bd -literal -offset 3n
# ipsecadm flush -esp
.Ed
.Sh SEE ALSO
.Xr netstat 1 ,
.Xr enc 4 ,
.Xr ipcomp 4 ,
.Xr ipsec 4 ,
.Xr protocols 5 ,
.Xr services 5 ,
.Xr sysctl.conf 5 ,
.Xr isakmpd 8 ,
.Xr vpn 8
@


1.70
log
@document aesctr and null encryption; ok jmc, hshoexer
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.69 2005/06/14 15:35:02 hshoexer Exp $
@


1.69
log
@do not confuse bytes with bits, noted by marcus.popp at paranoidbsd.org
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.68 2005/04/08 18:46:16 jmc Exp $
d74 2
a75 1
Set up a Security Association (SA) which uses the new ESP transforms.
d100 1
a100 1
Set up an SA which uses the old ESP transforms.
d118 1
a118 1
Set up an SA which uses the new AH transforms.
d136 1
a136 1
Set up an SA which uses the old AH transforms.
d431 3
a433 1
Rijndael encryption is available only in new ESP.
d445 4
@


1.68
log
@document ipcomp(4);
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.67 2004/09/26 07:16:54 jaredy Exp $
d475 1
a475 1
are fixed to 8 and 24 bits, respectively.
@


1.67
log
@capitalize ESP and AH
use macros (or more correct macros) for commands/modifiers
show full syntax of modifiers

ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.66 2004/09/23 21:47:33 jaredy Exp $
d339 3
d775 1
@


1.66
log
@grammar/punctuation fixes
expand some acronyms
shorten sysctl list display
other minor consistency fixes
add a few .Pp's for readability
a few macro fixes
indent examples

ok and help jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.65 2004/01/27 09:26:22 markus Exp $
d44 1
a44 1
.Nm ipsecadm ,
d64 1
a64 1
.Nm ipsecadm
d73 2
a74 2
.It new esp
Set up a Security Association (SA) which uses the new esp transforms.
d98 2
a99 2
.It old esp
Set up an SA which uses the old esp transforms.
d116 2
a117 2
.It new ah
Set up an SA which uses the new ah transforms.
d134 2
a135 2
.It old ah
Set up an SA which uses the old ah transforms.
d151 1
a151 1
.It group
d167 1
a167 1
.It ip4
d175 1
a175 1
Unlike other setups, like new esp, there
d182 1
a182 1
.It delspi
d189 1
a189 1
.It flow
d256 1
a256 1
.Nm esp )
d260 1
a260 1
.Nm bypass
d262 1
a262 1
.Nm permit
d280 1
a280 1
.Nm deny
d283 1
a283 1
.Nm deny
d285 2
a286 2
.Nm bypass .
.It flush
d301 1
a301 1
.It show
d314 1
a314 1
.It monitor
d319 2
a320 2
.It ipcomp
Set up an IP Compression Association (IPCA) which will use the IPcomp
d324 1
a324 1
fixed to IPcomp).
d336 1
a336 1
.Nm group
d339 1
a339 1
.It tcpmd5
d351 2
a352 2
.Nm ipsecadm
defaults to new esp mode.
d356 1
a356 1
.It Fl src
d363 1
a363 1
.It Fl dst
d365 1
a365 1
.It Fl dst2
d367 2
a368 2
.Nm group .
.It Fl proxy
d379 1
a379 1
.It Fl spi
d381 1
a381 1
.It Fl spi2
d383 2
a384 2
.Nm group .
.It Fl cpi
d389 1
a389 1
.Nm forcetunnel
d398 1
a398 1
.Nm src
d400 1
a400 1
.Nm dst
d404 1
a404 1
.It Fl udpencap
d408 1
a408 1
.It Fl enc
d412 2
a413 2
.It Nm des
This is available for both old and new esp.
d422 2
a423 2
.It Nm 3des
This is available for both old and new esp.
d426 4
a429 4
.It Nm aes
Rijndael encryption is available only in new esp.
.It Nm blf
Blowfish encryption is available only in new esp.
d432 4
a435 4
.It Nm cast
CAST encryption is available only in new esp.
.It Nm skipjack
SKIPJACK encryption is available only in new esp.
d441 1
a441 1
.It Fl auth
d444 1
a444 1
.Nm md5
d446 5
a450 5
.Nm sha1
for both old and new ah and also new esp.
.Nm rmd160 ,
.Nm sha2-256 ,
.Nm sha2-384 ,
d452 1
a452 1
.Nm sha2-512
d454 2
a455 2
for both new ah and esp.
.It Fl comp
d458 1
a458 1
.Nm deflate
d460 1
a460 1
.Nm lzs .
d462 1
a462 1
.Nm lzs
d466 1
a466 1
.It Fl key
d469 1
a469 1
.Nm des
d471 1
a471 1
.Nm 3des
d474 2
a475 2
.Nm cast ,
.Nm aes ,
d477 1
a477 1
.Nm blf
d480 1
a480 1
.Nm key
d483 1
a483 1
.Nm key
d491 1
a491 1
.It Fl keyfile
d496 1
a496 1
.It Fl authkey
d498 3
a500 3
if additional authentication in new esp mode is required.
For old or new ah, the key material for authentication is passed with the
.Nm key
d503 1
a503 1
.Nm key
d506 1
a506 1
.Nm key
d514 1
a514 1
.It Fl authkeyfile
d523 1
a523 1
.Nm halfiv
d529 1
a529 1
.It Fl proto
d531 1
a531 1
.Nm delspi
d533 1
a533 1
.Nm flow ,
d547 1
a547 1
.It Fl proto2
d549 1
a549 1
.Nm group .
d554 12
a565 6
.It Fl addr
The source address, source network mask, destination address and destination
network mask against which packets need to match to use the specified
Security Association.
Alternatively, addresses and masks can be specified as
.Dq Li source/prefixlen destination/prefixlen .
d568 1
a568 1
.It Fl transport
d575 1
a575 1
.It Fl sport
d581 1
a581 1
.It Fl dport
d587 4
a590 2
.It Fl srcid
For flow, used to specify what local identity key management
d594 1
a594 1
.Nm flow
d596 4
a599 2
.It Fl dstid
For flow, used to specify what the remote identity key management
d603 1
a603 1
.Nm flow
d605 4
a608 2
.It Fl srcid_type
For flow, used to specify the type of identity given by
d611 2
a612 2
.Nm prefix ,
.Nm fqdn ,
d614 1
a614 1
.Nm ufqdn .
d617 1
a617 1
.Nm prefix
d625 1
a625 1
.Nm fqdn
d627 1
a627 1
.Nm ufqdn
d632 1
a632 1
.It Fl dstid_type
d639 1
a639 1
.Nm flow ,
d641 1
a641 1
.Nm bypass
d649 1
a649 1
.Nm flow ,
d651 1
a651 1
.Nm deny
d656 1
a656 1
.Nm flow ,
d661 1
a661 1
.Nm flow ,
d667 1
a667 1
.Nm flow ,
d673 1
a673 1
.Nm flow ,
d683 1
a683 1
.Nm flow ,
d687 1
a687 1
.Nm flow ,
d691 2
a692 2
.Nm flush ,
only flush SAs of type ah.
d695 2
a696 2
.Nm flush ,
only flush SAs of type esp.
d699 2
a700 2
.Nm flush ,
only flush SAs of type old ah.
d703 2
a704 2
.Nm flush ,
only flush SAs of type old esp.
d707 2
a708 2
.Nm flush ,
only flush SAs of type ip4.
@


1.65
log
@pass -spi for tcpmd5, too; ok hshoexer@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.64 2004/01/15 12:20:08 markus Exp $
d41 1
a41 2
.Op command
.Ar modifiers ...
d45 2
a46 1
IPsec must be enabled by having one or more of the following
d49 3
a51 2
.Bl -tag -offset 4n -width xxxxxxxxxxxxxxxxxxxxxx
.It net.inet.esp.enable
d53 1
a53 1
.It net.inet.ah.enable
d55 1
a55 1
.It net.inet.ipcomp.enable
d75 1
a75 1
A SA consists of the destination address,
d118 2
a119 1
Authentication will be done with HMAC using the specified hash algorithm.
d170 1
a170 1
offers no security services by itself, but can be used to route other
d173 1
a173 1
is not used for anything other than referencing the information, and
d183 1
a183 1
The specified SA will be deleted.
d215 1
d219 1
d234 1
d257 2
a258 1
will be used to determine what type of SA should be established.
d263 2
a264 4
flow is used to specify a flow for which IPsec processing will be
bypassed, i.e packets will/need not be processed by any SAs.
For
.Nm bypass
d266 4
a269 1
.Nm permit
d335 1
a335 1
After this an IPCA/SA bundle must be created using the
d337 1
a337 1
keyword.
d350 1
a350 1
If no command is given
d355 1
a355 1
.Bl -tag -width xxxx -offset indent
d385 1
a385 1
The Compression Parameter Index (CPI), given as a 16 bit hexadecimal number.
d387 1
a387 1
This option has been deprecated.
d392 1
a392 1
This option has been deprecated.
d417 1
a417 1
We suggest using 3DES or AES instead.
d437 1
a437 1
However, since it was designed by the NSA
a447 1
Also
d451 1
d453 1
d468 1
a468 1
The size for
d472 1
a472 1
is fixed to 8 and 24 respectively.
d478 1
a478 1
the key length can vary (depending on the algorithm).
d488 2
a489 2
.Bd -literal
	$ openssl rand 20 | hexdump -e '20/1 "%02x"'
d499 1
a499 1
For old or new ah the key material for authentication is passed with the
d511 2
a512 2
.Bd -literal
	$ openssl rand 20 | hexdump -e '20/1 "%02x"'
d515 1
a515 1
Read the authkey from a file.
d520 1
a520 1
This option has been deprecated.
d526 2
a527 1
This option causes use of a 4 byte IV in old ESP (as opposed to 8 bytes).
d536 1
a536 1
.Nm IPPROTO_ESP .
d538 1
a538 1
.Nm ( IPPROTO_AH ) ,
d540 6
a545 2
.Nm ( IPPROTO_IP ) .
One can also specify the symbolic names "esp", "ah", and "ip4",
d551 1
a551 1
.Nm IPPROTO_AH ,
d565 1
a565 1
By default the protocol number is not used for matching.
d571 1
a571 1
By default the source port is not used for matching.
d577 1
a577 1
By default the source port is not used for matching.
d590 1
a590 1
should expect is.
d603 1
d611 1
d665 1
a665 1
can communicate with us, without going through the burden of
d697 8
d707 1
a707 1
Set up an SA which uses new esp with 3des encryption and HMAC-SHA1
d709 4
a712 4
.Bd -literal
# ipsecadm new esp -enc 3des -auth sha1 -spi 100a -dst 169.20.12.2 \\
	-src 169.20.12.3 \\
	-key 638063806380638063806380638063806380638063806380 \\
d716 4
a719 3
Set up an SA for authentication with old ah only:
.Bd -literal
# ipsecadm old ah -auth md5 -spi 10f2 -dst 169.20.12.2 -src 169.20.12.3 \\
d724 2
a725 2
.Bd -literal
# ipsecadm flow -dst 169.20.12.2 -proto ah \\
d730 4
a733 4
.Bd -literal
# ipsecadm new esp -enc blf -auth md5 -spi 1002 -dst 169.20.12.3 \\
	-src 169.20.12.2 \\
	-key abadbeef15deadbeefabadbeef15deadbeefabadbeef15deadbeef \\
d738 2
a739 2
.Bd -literal
# ipsecadm flow -addr 10.0.0.0/8 10.1.1.0/24 \\
d744 2
a745 3
.Bd -literal
# ipsecadm flow -bypass -out \\
	-addr 10.1.1.0/24 10.1.1.0/24
d749 1
a749 1
.Bd -literal
d753 2
a754 2
Delete all esp SAs and their flows and routing information:
.Bd -literal
@


1.64
log
@document tcpmd5; with jmc, hshoexer
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.63 2003/12/02 23:16:29 markus Exp $
d337 1
d727 1
a727 1
# ipsecadm tcpmd5 -src ::1 -dst ::1 -key deadbeef
@


1.63
log
@UDP encapsulation for ESP in transport mode (draft-ietf-ipsec-udp-encaps-XX.txt)
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.62 2003/07/24 08:03:19 itojun Exp $
d289 1
d291 1
a291 1
.Fl ipcomp .
d302 1
d304 1
a304 1
.Fl ipcomp .
d332 8
d722 5
@


1.62
log
@hmac-sha2-{256,384,512} support in AH/ESP auth.  markus ok
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.61 2003/06/10 16:41:28 deraadt Exp $
d93 1
d386 4
@


1.61
log
@boring cleanups
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.60 2003/05/10 21:03:21 jmc Exp $
d426 4
a429 1
.Nm rmd160
@


1.60
log
@typo;
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.59 2003/03/06 20:29:24 jmc Exp $
d670 1
a670 1
	-key 638063806380638063806380638063806380638063806380 \\ 
d676 1
a676 1
# ipsecadm old ah -auth md5 -spi 10f2 -dst 169.20.12.2 -src 169.20.12.3 \\ 
@


1.59
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.58 2003/02/26 12:22:34 markus Exp $
d38 1
a38 1
.Nd interface to setup IPsec
@


1.58
log
@.Dv PF_KEY
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.57 2003/02/25 22:29:33 markus Exp $
d45 1
a45 1
.Xr ipsecadm 8 ,
d332 1
a332 1
.Xr ipsecadm 1
@


1.57
log
@implement 'show' and 'monitor' commands; ok djm@@, deraadt@@, cedric@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.56 2003/02/24 21:54:33 jason Exp $
d305 3
a307 1
Continuously display all PFKEY messages exchanged with
@


1.56
log
@lzs with hifn.4 is available too
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.55 2003/02/03 17:46:57 jmc Exp $
d292 15
@


1.55
log
@typos;
ipsecadm(8): examples ho@@
	     help and ok markus@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.54 2003/01/15 16:02:09 markus Exp $
d413 9
a421 2
The only possible value currently is:
.Nm deflate .
@


1.54
log
@missing ","
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.53 2002/12/06 16:28:48 markus Exp $
d73 1
a73 1
Setup a Security Association (SA) which uses the new esp transforms.
d97 1
a97 1
Setup a SA which uses the old esp transforms.
d115 1
a115 1
Setup a SA which uses the new ah transforms.
d132 1
a132 1
Setup a SA which uses the old ah transforms.
d165 1
a165 1
Setup an SA which uses the IP-in-IP encapsulation protocol.
d293 1
a293 1
Setup an IP Compression Association (IPCA) which will use the IPcomp
d308 1
a308 1
After this a IPCA/SA bundle must be created using the
d396 1
a396 1
This algorithm designed by the NSA and is faster than 3DES.
d433 1
a433 1
should be chosen in random (ideally, using some true-random source like
d456 1
a456 1
should be chosen in random (ideally, using some true-random source like
d606 1
a606 1
Such a policy may be used to demand peers to establish SAs before they
d641 1
a641 1
Setup a SA which uses new esp with 3des encryption and HMAC-SHA1
d650 1
a650 1
Setup a SA for authentication with old ah only:
d656 1
a656 1
Setup a flow requiring use of AH:
d659 1
a659 1
	-addr 10.1.1.0 255.255.255.0 10.0.0.0 255.0.0.0 -out -require
d662 1
a662 1
Setup an inbound SA:
d670 1
a670 1
Setup an ingress flow on for the inbound SA:
d672 1
a672 1
# ipsecadm flow -addr 10.0.0.0 255.0.0.0 10.1.1.0 255.255.255.0 \\
d676 1
a676 1
Setup a bypass flow:
d679 1
a679 1
	-addr 10.1.1.0 255.255.255.0 10.1.1.0 255.255.255.0
@


1.53
log
@fix linebreak in example; ok ho@@, jason@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.52 2002/09/06 21:36:52 deraadt Exp $
d693 1
a693 1
.Xr isakmpd 8
@


1.52
log
@remove Xr to photuris
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.51 2002/06/10 15:42:24 kjell Exp $
d644 3
a646 3
# ipsecadm new esp -enc 3des -auth sha1 -spi 100a -dst 169.20.12.2 \e\
	-src 169.20.12.3 \e\
	-key 638063806380638063806380638063806380638063806380 \e\ 
d652 1
a652 1
# ipsecadm old ah -auth md5 -spi 10f2 -dst 169.20.12.2 -src 169.20.12.3 \e\ 
d658 1
a658 1
# ipsecadm flow -dst 169.20.12.2 -proto ah \e\
d664 3
a666 3
# ipsecadm new esp -enc blf -auth md5 -spi 1002 -dst 169.20.12.3 \e\
	-src 169.20.12.2 \e\
	-key abadbeef15deadbeefabadbeef15deadbeefabadbeef15deadbeef \e\
d672 1
a672 1
# ipsecadm flow -addr 10.0.0.0 255.0.0.0 10.1.1.0 255.255.255.0 \e\
d678 1
a678 1
# ipsecadm flow -bypass -out \e\
@


1.51
log
@save some entropy in random key generation. oked by angelos many moons ago
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.50 2002/06/09 08:13:06 todd Exp $
d693 1
a693 2
.Xr isakmpd 8 ,
.Xr photurisd 8 ,
@


1.50
log
@rm trailing whitespace
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.49 2001/12/21 11:41:50 mpech Exp $
d436 4
a439 3
One practical way of generating keys is by using the
.Xr random 4
device (e.g., dd if=/dev/urandom bs=1024 count=1 | sha1)
d459 4
a462 3
One practical way of generating keys is by using the
.Xr random 4
device (e.g., dd if=/dev/urandom bs=1024 count=1 | sha1)
@


1.49
log
@Initial patch for a new mdoc issue.
Powered by @@mantoya:
o) kill extra line in the end of file;
o) kill extra space in the end of line;
o) replace blank lines with .Pp;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.48 2001/12/13 20:16:48 mpech Exp $
d644 1
a644 1
	-key 638063806380638063806380638063806380638063806380 \e\
d650 1
a650 1
# ipsecadm old ah -auth md5 -spi 10f2 -dst 169.20.12.2 -src 169.20.12.3 \e\
@


1.48
log
@o) start new sentence on a new line;
o) wrap long lines;
o) fix bogus .Xr usage;
o) we don't like blank lines;
o) always close .Bl tags;
o) OpenBSD -> .Ox;
o) don't like .Pp before .Ss;

millert@@ ok;
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.47 2001/12/10 03:26:51 ho Exp $
d228 1
a228 1
point to the expected source of the SA (the remote SA peer). 
d299 1
a299 1
Allowed modifiers are: 
d308 1
a308 1
After this a IPCA/SA bundle must be created using the 
d311 1
a311 1
The IPCA must be applied first. 
d642 3
a644 3
# ipsecadm new esp -enc 3des -auth sha1 -spi 100a -dst 169.20.12.2 \e\ 
	-src 169.20.12.3 \e\ 
	-key 638063806380638063806380638063806380638063806380 \e\ 
d650 1
a650 1
# ipsecadm old ah -auth md5 -spi 10f2 -dst 169.20.12.2 -src 169.20.12.3 \e\ 
d656 1
a656 1
# ipsecadm flow -dst 169.20.12.2 -proto ah \e\ 
d662 3
a664 3
# ipsecadm new esp -enc blf -auth md5 -spi 1002 -dst 169.20.12.3 \e\ 
	-src 169.20.12.2 \e\ 
	-key abadbeef15deadbeefabadbeef15deadbeefabadbeef15deadbeef \e\ 
d670 1
a670 1
# ipsecadm flow -addr 10.0.0.0 255.0.0.0 10.1.1.0 255.255.255.0 \e\ 
d676 1
a676 1
# ipsecadm flow -bypass -out \e\ 
@


1.47
log
@ESP and AH are now enabled. -permit == -bypass. Regroup 'flow' modifiers a bit.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.46 2001/12/01 19:05:01 deraadt Exp $
d294 2
a295 1
transforms. Just like an SA, an IPCA consists of the destination
d297 3
a299 2
fixed to IPcomp). Compression algorithms are applied. Allowed
modifiers are: 
d307 2
a308 1
be created. After this a IPCA/SA bundle must be created using the 
d310 2
a311 1
keyword. The IPCA must be applied first. 
d412 2
a413 2
The compression algorithm to be used with the IPCA. The only possible value
currently is:
d440 2
a441 1
Read the key from a file.  May be used instead of the
d462 2
a463 1
Read the authkey from a file.  May be used instead of the
d597 2
a598 2
SAs dynamically as needed. If no SAs are established, traffic is not
allowed through.
@


1.46
log
@KNF
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.45 2001/11/13 18:04:39 deraadt Exp $
d44 3
a46 3
Before
.Xr ipsecadm 8
can be used, IPsec must be enabled by setting one or more of the following
d48 2
a49 2
variables:
.Bl -tag -width xxxxxxxxxxxxxxxxxxxxxx
d58 3
a60 2
To enable these operations across reboots, see
.Pa /etc/sysctl.conf .
a199 1
.Fl deny ,
a203 1
.Fl use ,
d207 3
a209 1
.Fl permit ,
d211 1
a211 1
.Fl bypass .
d259 2
d566 3
d684 1
@


1.45
log
@show they are commands
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.44 2001/09/06 06:34:13 jufi Exp $
d342 1
a342 1
The Compression Parameter Index (CPI), given as a hexadecimal number.
@


1.44
log
@
double word.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.43 2001/08/18 09:45:36 itojun Exp $
d630 1
a630 1
ipsecadm new esp -enc 3des -auth sha1 -spi 100a -dst 169.20.12.2 \e\ 
d638 1
a638 1
ipsecadm old ah -auth md5 -spi 10f2 -dst 169.20.12.2 -src 169.20.12.3 \e\ 
d644 1
a644 1
ipsecadm flow -dst 169.20.12.2 -proto ah \e\ 
d650 1
a650 1
ipsecadm new esp -enc blf -auth md5 -spi 1002 -dst 169.20.12.3 \e\ 
d658 1
a658 1
ipsecadm flow -addr 10.0.0.0 255.0.0.0 10.1.1.0 255.255.255.0 \e\ 
d664 1
a664 1
ipsecadm flow -bypass -out \e\ 
d670 1
a670 1
ipsecadm flush -esp
@


1.43
log
@typo.  From: "Brian J. Kifiak" <bk@@rt.fm>
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.42 2001/07/20 18:07:11 mpech Exp $
d276 1
a276 1
Flush SAs from from kernel.
@


1.42
log
@we don't like:
o) .Pp before/after .Sh;
o) .Pp before/after .Rs/.Re;
o) .Nm without argument in SYNOPSIS;
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.41 2001/07/06 06:13:16 jasoni Exp $
d492 1
a492 1
.Dq Li source/prefixlen dstination/prefixlen .
@


1.41
log
@typo; ok angelos
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.40 2001/07/05 08:38:36 jjbg Exp $
a59 1
.Pp
@


1.40
log
@IPComp support. angelos@@ ok.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.39 2001/06/27 03:31:38 angelos Exp $
d291 1
a291 1
Setup an IP Compression Association (IPCA) which will uses the IPcomp
@


1.39
log
@Consistently use "IPsec" capitalization (jsyn@@nthought.com)
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.38 2001/06/26 20:44:22 itojun Exp $
d49 1
a49 1
.Bl -tag -width xxxxxxxxxxxxxxxxxxxxx
d54 2
d285 1
d287 1
a287 1
.Fl ip4 .
d290 16
d342 2
d405 4
@


1.38
log
@allow -addr src/prefixlen dst/prefixlen.  discussed with angelos.
XXX usage() needs to be made more cute
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.37 2001/03/22 03:35:19 angelos Exp $
d38 1
a38 1
.Nd interface to setup IPSec
d46 1
a46 1
can be used, IPSec must be enabled by setting one or more of the following
d51 1
a51 1
Enable the ESP IPSec protocol
d53 1
a53 1
Enable the AH IPSec protocol
d67 1
a67 1
provided by IPSec.
d254 1
a254 1
flow is used to specify a flow for which IPSec processing will be
d538 1
a538 1
Packets matching this flow will not be processed by IPSec.
@


1.37
log
@Update.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.36 2000/11/11 04:54:38 angelos Exp $
d467 2
@


1.36
log
@The -spi value is hex (andrew@@etunnels.com)
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.35 2000/11/11 04:52:57 angelos Exp $
d83 4
d103 4
d120 4
d137 4
@


1.35
log
@Remove -spi from flow commands.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.34 2000/11/06 18:20:00 angelos Exp $
d303 1
a303 1
The Security Parameter Index (SPI).
d588 1
a588 1
ipsecadm new esp -enc 3des -auth sha1 -spi 1001 -dst 169.20.12.2 \e\ 
d596 1
a596 1
ipsecadm old ah -auth md5 -spi 1001 -dst 169.20.12.2 -src 169.20.12.3 \e\ 
d600 1
a600 1
Setup a flow using the above SA:
@


1.34
log
@Fix manpage examples.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.33 2000/10/28 08:52:48 angelos Exp $
d617 1
a617 1
	-dst 169.20.12.2 -spi 1002 -proto esp -in -require
@


1.33
log
@donacq, not acquire (noted by peter.galbavy@@knowledge.com)
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.32 2000/10/09 22:21:41 angelos Exp $
d603 1
a603 1
	-addr 10.1.1.0 255.255.255.0 10.0.0.0 255.0.0.0 -out
d617 1
a617 1
	-dst 169.20.12.2 -spi 1002 -proto esp -in
@


1.33.2.1
log
@Pull in patch from current:
Fix (angelos):
Fix manpage examples.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.33 2000/10/28 08:52:48 angelos Exp $
d603 1
a603 1
	-addr 10.1.1.0 255.255.255.0 10.0.0.0 255.0.0.0 -out -require
d617 1
a617 1
	-dst 169.20.12.2 -spi 1002 -proto esp -in -require
@


1.32
log
@AES.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.31 2000/09/29 19:10:08 angelos Exp $
d545 1
a545 1
.It Fl acquire
@


1.31
log
@Update.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.30 2000/09/20 21:28:23 angelos Exp $
d334 1
a334 1
We suggest using 3DES instead.
d341 4
a344 1
It is considered more secure than straight DES, since it uses larger keys.
d376 2
a377 1
.Nm cast
d380 1
a380 1
the key length can be variable.
@


1.30
log
@srcid/dstid/srcid_type/dstid_type flags for flows.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.29 2000/09/19 08:50:56 angelos Exp $
a173 1
.Fl spi , 
d203 1
a203 3
If the
.Fl spi
is not specified, the kernel will attempt to find an appropriate
d598 1
a598 1
ipsecadm flow -dst 169.20.12.2 -spi 1001 -proto ah \e\ 
d613 1
a613 1
	-dst 10.10.32.1 -spi 1002 -proto esp -in
@


1.29
log
@Add some explanatory text about the group operation.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.28 2000/09/19 08:38:40 angelos Exp $
d184 4
d471 40
@


1.28
log
@Re-add support for SA bundles.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.27 2000/09/19 03:18:11 angelos Exp $
d131 7
a137 1
Group two SAs together.
@


1.27
log
@Update to use the new framework.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.26 2000/04/22 01:50:15 angelos Exp $
d130 10
d281 3
d297 3
d429 7
@


1.26
log
@Document -authkeyfile/-keyfile
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.25 2000/04/21 17:33:41 deraadt Exp $
a149 11
.Fl proto ,
and
.Fl chain .
.It group
Group two SAs together.
Allowed modifiers are:
.Fl dst ,
.Fl spi ,
.Fl proto ,
.Fl dst2 ,
.Fl spi2 ,
d151 1
a151 1
.Fl proto2 .
d153 2
a154 3
Create a flow determining which packets are routed via which Security
Association, or (for ingress flows) which packets may be received over
an incoming SA.
d156 1
d158 1
a158 1
.Fl spi ,
d165 8
a172 1
.Fl ingress ,
d177 40
a216 1
command shows the existing egress (outbound) flows.
d219 2
d222 1
a222 1
bypassed, i.e packets will not be processed by any SAs.
d224 1
a224 1
.Nm bypass
d230 2
d234 7
a240 20
These flows always have SPI 0, destination 0.0.0.0 and protocol 0.
.It bind
Associate an incoming Security Association with an outgoing Security
Association.
When a socket receives packets secured by the incoming SA all
responses will be processed by the outgoing SA.
Allowed modifiers are:
.Fl dst ,
.Fl spi ,
.Fl proto ,
.Fl dst2 ,
.Fl spi2 ,
and
.Fl proto2 .
The IP address 0.0.0.0 can be used as wildcard for
.Fl src
and
.Fl dst .
This can be useful while travelling where the IP address of potential
clients is not known.
d401 2
a402 1
.Nm delspi ,
a403 3
.Nm group
or
.Nm bind
a412 19
.It Fl chain
Delete the whole SPI chain, otherwise delete only the SPI given.
.It Fl dst2
The second IP destination address used by
.Nm group .
.It Fl spi2
The second SPI used by
.Nm group .
.It Fl proto2
The second security protocol used by
.Nm group .
It defaults to
.Nm IPPROTO_AH .
Other accepted values are 50
.Nm ( IPPROTO_ESP ) ,
and 4
.Nm ( IPPROTO_IP ) .
One can also specify the symbolic names "esp", "ah", and "ip4",
case insensitive.
d440 1
a440 1
.It Fl ingress
d443 2
a444 2
create or delete an
.Nm ingress
d446 2
a447 10
An SA's
.Nm ingress
flows specify the types of packets that may be accepted over that SA,
if the sysctl variable
.Bl -tag -width xxxxxxxxxxxxxxxxxxxxx
.It net.inet.ip.ipsec-acl
.El
.Pp
is set to any non-zero value.
.It Fl bypass
d451 1
a451 1
.Nm bypass
d453 33
a485 1
Packets matching this flow will not be processed by IPSec.
d487 2
a488 2
.Nm flush ,
only flush SAs of type bypass.
d529 1
a529 1
	-addr 10.1.1.0 255.255.255.0 10.0.0.0 255.0.0.0
d543 1
a543 1
	-dst 10.10.32.1 -spi 1002 -proto esp -ingress
d548 1
a548 1
ipsecadm flow -bypass \e\ 
@


1.25
log
@more readable
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.24 2000/04/16 17:26:16 aaron Exp $
d85 1
d87 1
d89 1
a89 1
.Fl key .
d101 1
d103 1
a103 1
.Fl key .
d114 1
d116 1
a116 1
.Fl key .
d127 1
d129 1
a129 1
.Fl key .
d339 4
d360 4
@


1.24
log
@Restore some required trailing whitespace that alex's script bonked.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.23 2000/04/15 02:15:14 aaron Exp $
d230 2
a231 2
.Bl -tag -width forcetunnel -offset indent
.It src
d238 1
a238 1
.It dst
d240 1
a240 1
.It proxy
d251 1
a251 1
.It spi
d253 1
a253 1
.It tunnel
d258 1
a258 1
.It newpadding
d260 1
a260 1
.It forcetunnel
d271 1
a271 1
.It enc
d301 1
a301 1
.It auth
d311 1
a311 1
.It key
d334 1
a334 1
.It authkey
d351 1
a351 1
.It iv
d357 1
a357 1
.It halfiv
d360 1
a360 1
.It proto
d376 1
a376 1
.It chain
d378 1
a378 1
.It dst2
d381 1
a381 1
.It spi2
d384 1
a384 1
.It proto2
d395 1
a395 1
.It addr
d401 1
a401 1
.It transport
d408 1
a408 1
.It sport
d414 1
a414 1
.It dport
d420 1
a420 1
.It delete
d422 1
a422 1
.It ingress
d437 1
a437 1
.It bypass
d447 1
a447 1
.It ah
d451 1
a451 1
.It esp
d455 1
a455 1
.It oldah
d459 1
a459 1
.It oldesp
d463 1
a463 1
.It ip4
@


1.23
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.22 2000/04/12 21:47:59 aaron Exp $
d492 3
a494 3
ipsecadm new esp -enc blf -auth md5 -spi 1002 -dst 169.20.12.3 \e\
	-src 169.20.12.2 \e\
	-key abadbeef15deadbeefabadbeef15deadbeefabadbeef15deadbeef \e\
d500 1
a500 1
ipsecadm flow -addr 10.0.0.0 255.0.0.0 10.1.1.0 255.255.255.0 \e\
@


1.22
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.21 2000/03/18 22:55:59 aaron Exp $
d139 1
a139 1
.Fl spi.
d371 1
a371 1
.Nm ( IPPROTO_AH ),
d390 1
a390 1
.Nm ( IPPROTO_ESP ),
@


1.21
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.20 2000/01/13 04:48:55 angelos Exp $
d177 1
a177 1
A 
d212 1
a212 1
This includes flushing any flows and 
d221 1
a221 1
Default action is to flush all types of security associations 
@


1.20
log
@Minor beautification.
@
text
@d1 2
a2 1
.\" $OpenBSD: ipsecadm.8,v 1.19 2000/01/13 04:46:18 angelos Exp $
d89 3
a91 2
Setup a SA which uses the old esp transforms. Only
encryption algorithms can be applied. Allowed modifiers are:
d102 3
a104 3
Setup a SA which uses the new ah transforms. Authentication
will be done with HMAC using the specified hash algorithm. Allowed modifiers
are:
d114 3
a116 2
Setup a SA which uses the old ah transforms. Simple keyed
hashes will be used for authentication. Allowed modifiers are:
d126 2
a127 1
Setup an SA which uses the IP-in-IP encapsulation protocol. This mode
d129 2
a130 1
(experimental or otherwise) protocols over an IP network.  The SPI value
d132 4
a135 2
does not appear on the wire. Unlike other setups, like new esp, there
is no necessary setup in the receiving side. Allowed modifiers are:
d145 1
a145 1
.Fl proto .
d149 2
a150 1
Group two SAs together. Allowed modifiers are:
d176 2
a177 1
command shows the existing egress (outbound) flows.  A 
d211 4
a214 2
Flush SAs from from kernel. This includes flushing any flows and 
routing entries associated with the SAs. Allowed modifiers are:
d232 2
a233 1
The source IP address for the SA. This is necessary for incoming
d235 3
a237 3
suspicious hosts that have established SAs with us. For outgoing SAs,
this field is used to fill in the source address when doing
tunneling.
d242 4
a245 2
doing tunneling to a firewall, to prevent source spoofing attacks. It is
strongly recommended that this option is provided when applicable. It is
d247 4
a250 2
firewall B, and through that to host C. In that case, the proxy address for
the incoming SA should be C. This option is not necessary for outgoing SAs.
d254 2
a255 2
This option has been deprecated. The arguments are ignored, and it
otherwise has the same effect as the
d262 2
a263 1
outgoing packets. The source/destination addresses of the outgoing IP packet
d268 2
a269 1
options. Notice that the IPsec stack will perform IP-inside-IP encapsulation
d272 2
a273 2
The encryption algorithm to be used with the SA. Possible values
are:
d278 6
a283 4
US$250,000 (in 1998). Use DES for encryption of critical information
at your own risk.
We suggest using 3DES instead. DES support is kept for interoperability
(with old implementations) purposes only.  See
d286 2
a287 2
This is available for both old and new esp.  It is considered
more secure than straight DES, since it uses larger keys.
d289 2
a290 1
Blowfish encryption is available only in new esp. See
d295 3
a297 2
SKIPJACK encryption is available only in new esp.  This algorithm designed
by the NSA is faster than 3DES.  However, since it was designed by the NSA
d302 2
a303 2
The authentication algorithm to be used with the SA. Possible values
are:
d307 2
a308 1
for both old and new ah and also new esp. Also
d312 2
a313 2
The secret symmetric key used for encryption and authentication. The size
for
d317 2
a318 1
is fixed to 8 and 24 respectively. For other ciphers like
d322 2
a323 1
the key length can be variable. The
d325 2
a326 1
should be given in hexadecimal digits. The
d329 3
a331 2
coin flipping). It is very important that the key is not guessable. One
practical way of generating keys is by using the
d336 2
a337 2
if additional authentication in new esp mode is required. For
old or new ah the key material for authentication is passed with the
d339 2
a340 1
option. The
d342 2
a343 1
should be given in hexadecimal digits. The
d346 3
a348 2
coin flipping). It is very important that the key is not guessable. One
practical way of generating keys is by using the
d352 3
a354 2
This option has been deprecated. The argument is ignored. When applicable,
it has the same behaviour as the
d358 2
a359 2
This option causes use of a 4 byte IV in old ESP (as opposed to 8 bytes). It
may only be used with old ESP.
d398 2
a399 1
Security Association. All addresses must be of the same address family
d403 3
a405 2
Security Association. By default the protocol number is not used for
matching. Instead of a number, a valid protocol name that appears in
d468 1
a468 1
.Sh EXAMPLE
@


1.19
log
@Add -ingress flag
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.18 1999/12/20 05:42:03 angelos Exp $
d402 1
@


1.18
log
@-addr warning.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.17 1999/12/09 20:20:56 angelos Exp $
d152 3
a154 1
Association. Allowed modifiers are:
d163 1
d168 1
a168 1
command shows the existing flows.  A 
d171 2
a172 1
bypassed, i.e packets will not be processed by any SAs.  For
d184 4
a187 3
Association. When a socket receives packets secured by the incoming
SA all responses will be processed by the outgoing SA. Allowed modifiers
are:
d389 14
d408 3
a410 1
flow.  Packets matching this flow will not be processed by IPSec.  For
d439 1
a439 1
	-src 169.20.12.3.342 \e\ 
d453 15
a467 1
	-addr 10.1.1.0 255.255.255.0 10.0.0.0 255.0.0.0.0
@


1.17
log
@-src use
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.16 1999/12/04 23:26:27 angelos Exp $
d362 2
a363 1
Security Association.
@


1.16
log
@Deprecate -local flag.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.15 1999/11/04 11:29:35 ho Exp $
d219 2
a220 1
this field is not currently used, however it must still be specified.
@


1.15
log
@Support IPsec bypass flows. (ok angelos@@, niklas@@)
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.14 1999/10/07 20:54:42 angelos Exp $
a159 1
.Fl local ,
a174 1
.Fl local ,
d218 2
a219 9
suspicious hosts that have established SAs with us. For outgoing SAs, this
field is used to slightly speedup packet processing. If this field is
zero (0.0.0.0), no spoofing check will be done for incoming SAs, and an
extra routing lookup may be necessary for certain classes of packets that
originate from the local machine and make use of the SA. If present, the
value of this field is used when doing IP-in-IP encapsulation (e.g., when
the
.Nm forcetunnel
option has been specified.
a379 6
.It local
The
.Nm flow
command also creates a flow which matches local packets. This is equivalent
to using a source address of 0.0.0.0 and a source network mask of
255.255.255.255.
d429 1
a429 1
ipsecadm flow -dst 169.20.12.2 -spi 1001 -proto ah -local \e\ 
d435 1
a435 1
ipsecadm flow -bypass -local \e\ 
@


1.14
log
@enc.4 reference
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.13 1999/08/20 06:17:35 deraadt Exp $
d161 3
a163 1
.Fl delete .
d166 14
a179 1
command shows the existing flows.
d397 8
d440 12
@


1.13
log
@spelling
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.12 1999/08/05 22:02:05 ho Exp $
d425 1
@


1.12
log
@Add 'ipsecadm flush' to do what 'route flush -encap' doesn't manage.
Sync manpage and fix a couple of typos.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.11 1999/07/09 13:35:49 aaron Exp $
d377 1
a377 1
command also creates a flow which matches local packets. This is aquivalent
@


1.11
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.10 1999/07/08 01:09:24 deraadt Exp $
d142 1
a142 1
Group two SA's together. Allowed modifiers are:
d166 1
a166 1
Associate an incoming Security Assoication with and outgoing Security
d183 11
d379 1
a379 1
255.255.255.0.
d382 20
d417 5
@


1.10
log
@terrible
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.9 1999/07/07 16:18:51 kjell Exp $
d43 1
a43 1
Before 
d47 1
a47 1
variables: 
d55 1
a55 1
To enable these operations across reboots, see 
@


1.9
log
@Add IPSec Sysctl info. ok angelos@@.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.8 1999/07/04 18:59:41 aaron Exp $
d61 1
a61 1
utility allows sets up security associations in the kernel
@


1.8
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.7 1999/06/04 02:45:24 aaron Exp $
d42 16
@


1.7
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.6 1999/05/16 19:56:14 alex Exp $
d144 1
a144 1
.FL local ,
d267 1
a267 1
device (e.g. dd if=/dev/urandom bs=1024 count=1 | sha1)
d281 1
a281 1
device (e.g. dd if=/dev/urandom bs=1024 count=1 | sha1)
@


1.6
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.5 1999/03/30 03:29:03 provos Exp $
d80 1
a80 1
.Fl forcetunnel , 
d226 1
a226 1
.It Nm 3des 
d293 1
a293 1
.Nm flow , 
@


1.5
log
@first shot at documenting bind
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.4 1999/03/02 18:29:34 deraadt Exp $
d372 3
a375 2
.Xr protocols 5 ,
.Xr netstat 1 ,
d377 2
a378 3
.Xr ipsec 4 ,
.Xr vpn 8 ,
.Xr photurisd 8
@


1.4
log
@some SPI references should talk about SAs; markus.friedl@@informatik.uni-erlangen.de
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.3 1999/02/27 07:29:17 deraadt Exp $
d149 18
d293 2
a294 1
.Nm flow
d296 1
a296 1
.Nm group
@


1.3
log
@authkey not authp; Markus.Friedl@@informatik.uni-erlangen.de
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.2 1999/02/25 17:43:19 deraadt Exp $
d54 3
a56 1
Setup a Security Parameters Index (SPI) which uses the new esp transforms.
d72 1
a72 1
Setup a SPI which uses the old esp transforms. Only
d84 1
a84 1
Setup a SPI which uses the new ah transforms. Authentication
d96 1
a96 1
Setup a SPI which uses the old ah transforms. Simple keyed
d107 1
a107 1
Setup an SPI which uses the IP-in-IP encapsulation protocol. This mode
d109 1
a109 1
(experimental or otherwise) protocols over an IP network. The SPI value
d118 2
a119 2
The specified Security Association (SA) will be deleted. An SA consists of
the destination address, SPI and security protocol. Allowed modifiers are:
d158 1
a158 1
The source IP address for the SPI. This is necessary for incoming
d170 1
a170 1
The destination IP address for the SPI.
d179 1
a179 1
The unique Security Parameter Index (SPI).
d197 1
a197 1
The encryption algorithm to be used with the SPI. Possible values
d223 1
a223 1
The authentication algorithm to be used with the SPI. Possible values
d338 1
a338 1
Setup a SPI which uses new esp with 3des encryption and HMAC-SHA1
d341 4
a344 2
ipsecadm -enc 3des -auth sha1 -spi 1001 -dst 169.20.12.2 -src 169.20.12.3
-key 638063806380638063806380638063806380638063806380 -authkey 1234123412341234
d347 1
a347 1
Setup a SPI for authentication with old ah only:
d349 2
a350 2
ipsecadm old ah -auth md5 -spi 1001 -dst 169.20.12.2 -src 169.20.12.3
-key 12341234deadbeef
@


1.2
log
@flesh out crypto section with Xr
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.8,v 1.1 1999/02/24 23:32:52 angelos Exp $
d340 1
a340 1
-key 638063806380638063806380638063806380638063806380 -authp 1234123412341234
@


1.1
log
@Remove unnecessary file, move man page to section 8.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipsecadm.1,v 1.8 1999/02/24 22:53:36 angelos Exp $
d201 2
a202 1
US$250,000. Use DES for encryption of critical information at your risk.
d204 2
a205 1
(with old implementations) purposes only.
d207 1
a207 1
This is available for both old and new esp.  It is more considered to be
d210 2
a211 1
Blowfish encryption is available only in new esp.
@

