head	1.23;
access;
symbols
	OPENBSD_6_2:1.23.0.10
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.23.0.8
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.4
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.2
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.10
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.6
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.4
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.8
	OPENBSD_5_0:1.9.0.6
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.4
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.8.0.14
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.16
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3;
locks; strict;
comment	@# @;


1.23
date	2016.01.27.14.19.59;	author krw;	state Exp;
branches;
next	1.22;
commitid	EqZjPBGHnNBMYpZq;

1.22
date	2016.01.25.23.43.20;	author krw;	state Exp;
branches;
next	1.21;
commitid	Qe66eD6zrMyPrXqP;

1.21
date	2016.01.17.14.13.57;	author jasper;	state Exp;
branches;
next	1.20;
commitid	o2UBFLYONUnjWgLb;

1.20
date	2016.01.17.14.13.42;	author jasper;	state Exp;
branches;
next	1.19;
commitid	KoDSAptRoTS0S3qZ;

1.19
date	2016.01.16.21.59.30;	author krw;	state Exp;
branches;
next	1.18;
commitid	z6io6NihZRamkhqi;

1.18
date	2016.01.16.14.49.28;	author krw;	state Exp;
branches;
next	1.17;
commitid	tickLY4AeBovASt0;

1.17
date	2016.01.15.16.39.20;	author krw;	state Exp;
branches;
next	1.16;
commitid	jCu7JX5yifR514Uo;

1.16
date	2016.01.14.04.17.40;	author krw;	state Exp;
branches;
next	1.15;
commitid	FFi8VPodP6ImE2jX;

1.15
date	2016.01.12.20.09.39;	author krw;	state Exp;
branches;
next	1.14;
commitid	WFEddFcNLm6A2VYQ;

1.14
date	2016.01.11.23.31.27;	author krw;	state Exp;
branches;
next	1.13;
commitid	1Gl5xh4AgZJGXuPl;

1.13
date	2016.01.11.18.43.06;	author krw;	state Exp;
branches;
next	1.12;
commitid	qS6fX5yqWMkDVbPr;

1.12
date	2014.07.16.20.05.03;	author okan;	state Exp;
branches;
next	1.11;
commitid	upQ2Fpz9Tx8i9YdL;

1.11
date	2012.06.20.18.45.44;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	2012.06.20.18.33.59;	author matthew;	state Exp;
branches;
next	1.9;

1.9
date	2010.05.25.19.01.32;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.11.17.20.40;	author martin;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.27.19.52.21;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.26.02.46.14;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.20.22.51.32;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.01.16.21.16;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.17.05.11.10;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.17.05.09.22;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.24.00.20.59;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Check block 0 signature, physical block size and physical block count when
reading partition map.

Check for unmapped physical blocks and overlapping partitions when reading
partition map.

No need for duplicate checks in validate_map(), so remove validate.c from
build and 'v' command from code and docs.
@
text
@#	$Id: Makefile,v 1.22 2016/01/25 23:43:20 krw Exp $

.if ${MACHINE} == "macppc"
PROG=	pdisk
LDADD=  -lutil
DPADD=  ${LIBUTIL}
CFLAGS+=-Wall

SRCS=	dump.c file_media.c io.c partition_map.c pdisk.c

.else
NOPROG=yes
.endif

MAN=	pdisk.8
MANSUBDIR=macppc

.include <bsd.prog.mk>
@


1.22
log
@Use new read/write_block0 and read/write_dpme which handle any
endian or alignment issues forcefully. Removes need for convert_*
functions so unhook convert.c from build. read/write_block become
static functions inside file_media.c.

Tweak struct block0 to stop trying to handle alignment issues by clever
declaration. Rely on the new functions to accurately translate between
on-disk and in-memory layouts.

Enables pdisk to work on amd64 and likely other architectures if
it's ever desirable. Does bring back DEV_BSIZE to pdisk.c since the
in-memory structure will *not* be 512 bytes on other archs.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.21 2016/01/17 14:13:57 jasper Exp $
d9 1
a9 3
SRCS=	dump.c \
	file_media.c io.c partition_map.c \
	pdisk.c validate.c
@


1.21
log
@oops
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.20 2016/01/17 14:13:42 jasper Exp $
d9 1
a9 1
SRCS=	convert.c dump.c \
@


1.20
log
@- tidy up a bunch of #if's for code that has been either enabled or disabled since forever,
  or not relevant at all (e.g. some bits for A/UX support)
- remove commented code that has never been compiled, etc

ok krw@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.19 2016/01/16 21:59:30 krw Exp $
d3 1
a3 1
.if ${MACHINE} == "amd64"
@


1.19
log
@No need to abstract malloc(), so replace new_file_media() with
malloc().

Removes last use of last used function in media.c, so unhook that
from the Makefile and remove forward declarations from media.h.

No functional change.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.18 2016/01/16 14:49:28 krw Exp $
d3 1
a3 1
.if ${MACHINE} == "macppc"
@


1.18
log
@Nuke support for 1024- and 2048-byte sector devices. Error out if
anything other than 512-byte sectors are encountered. Unlink
deblock_media.c from the build.

ok jasper@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.17 2016/01/15 16:39:20 krw Exp $
d10 1
a10 1
	file_media.c io.c media.c partition_map.c \
@


1.17
log
@Replace bitfield_get() and bitfield_set() abstraction with simple masking
operations since all the uses but 1 are for 1 bit fields. No functional
change intended.

Unhook bitfield.c from build.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.16 2016/01/14 04:17:40 krw Exp $
d9 1
a9 1
SRCS=	convert.c deblock_media.c dump.c \
@


1.16
log
@Nuke 'HFS_name' field which was not referenced now other than setting
it and freeing it. Unhook hfs_misc.c from build since it now longer
contains anything being used.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.15 2016/01/12 20:09:39 krw Exp $
d9 1
a9 1
SRCS=	bitfield.c convert.c deblock_media.c dump.c \
@


1.15
log
@Use normal err/errx/warn/warnx rather than handrolling new ones. Move
usage() to pdisk.c and nuke do_help() and '-h'.

ok jasper@@ deraadt@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.14 2016/01/11 23:31:27 krw Exp $
d10 1
a10 1
	file_media.c hfs_misc.c io.c media.c partition_map.c \
@


1.14
log
@open_pathname_as_media() simply called open_file_as_media() which
takes the same parameters and returns the same value. Nuke
open_pathname_as_media() and call open_file_as_media() directly.

Nothing else from pathname.[ch] is used so remove them from build
in preparation for moving them to the attic.

ok deraadt@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.13 2016/01/11 18:43:06 krw Exp $
d9 1
a9 1
SRCS=	bitfield.c convert.c deblock_media.c dump.c errors.c \
@


1.13
log
@Remove '-v' and related version handling. Use strncasecmp() instead
of handrolled local istrncmp(). No need to compile util.c anymore.

ok deraadt@@ jasper@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.12 2014/07/16 20:05:03 okan Exp $
d10 1
a10 1
	file_media.c hfs_misc.c io.c media.c partition_map.c pathname.c \
@


1.12
log
@zap trailing newlines; "go for it" deraadt
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.11 2012/06/20 18:45:44 matthew Exp $
d11 1
a11 1
	pdisk.c util.c validate.c
@


1.11
log
@more mac68k bits for the attic
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.10 2012/06/20 18:33:59 matthew Exp $
a20 1

@


1.10
log
@Delete some more SUBDIR += mac68k.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.9 2010/05/25 19:01:32 deraadt Exp $
d3 1
a3 1
.if ${MACHINE} == "macppc" || ${MACHINE} == "mac68k"
@


1.9
log
@use opendev(), as requested in 6373.  document this using text borrowed from
disklabel(8), and while at it, fix the usage code to not be utterly distasteful
ok drahn
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.8 2006/05/11 17:20:40 martin Exp $
d18 1
a18 1
MANSUBDIR=macppc mac68k
@


1.8
log
@remove a bunch of linux and NeXT defines and, in turn, -D__unix__
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.7 2006/04/27 19:52:21 martin Exp $
d5 2
a6 1

@


1.7
log
@update for pdisk 0.8a2, from NetBSD, retaining our local changes;
summing it up:

- Clean up sources - fix naming, delete old email addresses
- Added support for display of Mac volume names
- Fix block 0 display to show logical offset of drivers
- Require confirmation of quit without write
- Fix iteration to not complain about missing devices
- Warn when creating/writing a map with more than 15 entries

and, most important, add do_update_dpme() which allows us to partition
OpenBSD slices without previous MacOS setup.

Tested with shared MacOS install on macppc, procedure there remains the
same.

grammer and spelling help and ok jmc@@

ok miod@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.6 2003/04/26 02:46:14 deraadt Exp $
d6 1
a6 1
CFLAGS+=-Wall -D__unix__
@


1.6
log
@remove stuff not needed
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.5 2002/04/20 22:51:32 miod Exp $
d6 2
d9 1
a9 1
	file_media.c io.c media.c partition_map.c pathname.c \
@


1.5
log
@Build pdisk for mac68k as well.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.4 2001/09/01 16:21:16 drahn Exp $
d6 4
a9 2
SRCS=	pdisk.c dump.c partition_map.c convert.c io.c errors.c bitfield.c \
	deblock_media.c file_media.c media.c pathname.c util.c validate.c
d18 1
@


1.4
log
@Changes to build platform specific files properly with the powerpc -> macppc
port rename. This adds support for some of these to mvmeppc when it
becomes MACHINE_ARCH=powerpc, as MACHINE_ARCH is tested in some instances.
ancontrol and wicontrol are MACHINE_ARCH changes.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.3 2001/04/17 05:11:10 drahn Exp $
d3 1
a3 1
.if ${MACHINE} == "macppc"
d13 1
a13 1
MANSUBDIR=macppc
@


1.3
log
@Match quoting on this...
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.2 2001/04/17 05:09:22 drahn Exp $
d3 1
a3 1
.if ${MACHINE} == "powerpc"
d13 1
a13 1
MANSUBDIR=powerpc
@


1.2
log
@Add pdisk to list of programs to build for powerpc, all other archs
will build the manpage, with the proper destination.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.1 2001/03/24 00:20:59 drahn Exp $
d3 1
a3 1
.if ${MACHINE} == "powerpc
@


1.1
log
@Make the apple code compile for OpenBSD. These changes are mostly from maja.
@
text
@d1 1
a1 1
#	$Id$
d3 1
d8 3
d13 1
@

