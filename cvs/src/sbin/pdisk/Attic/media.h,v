head	1.12;
access;
symbols
	OPENBSD_5_8:1.4.0.34
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.26
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.30
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.28
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.24
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.22
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.20
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.18
	OPENBSD_5_0:1.4.0.16
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.14
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.12
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.8
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.6
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	ver1:1.1.1.1
	apple19980218:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.01.16.22.30.28;	author krw;	state dead;
branches;
next	1.11;
commitid	qrkQV6LGmtpSwTP1;

1.11
date	2016.01.16.21.59.30;	author krw;	state Exp;
branches;
next	1.10;
commitid	z6io6NihZRamkhqi;

1.10
date	2016.01.16.21.41.41;	author krw;	state Exp;
branches;
next	1.9;
commitid	N0CsQGsGtplNR8ev;

1.9
date	2016.01.16.21.29.07;	author krw;	state Exp;
branches;
next	1.8;
commitid	Ps7EsBgpdFrGcD1r;

1.8
date	2016.01.16.20.04.12;	author krw;	state Exp;
branches;
next	1.7;
commitid	MYy4EiAMDmGiPANa;

1.7
date	2016.01.16.20.00.50;	author krw;	state Exp;
branches;
next	1.6;
commitid	2koPB3ak72axl95m;

1.6
date	2016.01.12.16.08.37;	author krw;	state Exp;
branches;
next	1.5;
commitid	SiCi2OiU3VeQsi4m;

1.5
date	2016.01.11.07.54.07;	author jasper;	state Exp;
branches;
next	1.4;
commitid	DI30r1mqHPQNkhTm;

1.4
date	2007.12.09.23.35.22;	author chl;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.27.19.52.21;	author martin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.24.00.14.07;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.24.00.14.07;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Another one to the attic.
@
text
@/*	$OpenBSD: media.h,v 1.11 2016/01/16 21:59:30 krw Exp $	*/

/*
 * media.h -
 *
 * Written by Eryk Vershen
 */

/*
 * Copyright 1997,1998 by Apple Computer, Inc.
 *              All Rights Reserved
 *
 * Permission to use, copy, modify, and distribute this software and
 * its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appears in all copies and
 * that both the copyright notice and this permission notice appear in
 * supporting documentation.
 *
 * APPLE COMPUTER DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE.
 *
 * IN NO EVENT SHALL APPLE COMPUTER BE LIABLE FOR ANY SPECIAL, INDIRECT, OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT,
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef __media__
#define __media__


/*
 * Media is an abstraction of a disk device.
 *
 * A media object has the following visible attributes:
 *
 *      a granularity       (e.g. 512, 1024, 1, etc.)
 *      a total size in bytes
 *
 *  And the following operations are available:
 *
 *      open
 *      read @@ byte offset for size in bytes
 *      write @@ byte offset for size in bytes
 *      close
 *
 * XXX Should really split public media interface from "protected" interface.
 */


/*
 * Defines
 */


/*
 * Types
 */
/* those whose use media objects need just the pointer type */
typedef struct media *MEDIA;

struct media {
    long long       size_in_bytes;  /* offset granularity */
};

/*
 * Global Constants
 */


/*
 * Global Variables
 */


/*
 * Forward declarations
 */

#endif /* __media__ */
@


1.11
log
@No need to abstract malloc(), so replace new_file_media() with
malloc().

Removes last use of last used function in media.c, so unhook that
from the Makefile and remove forward declarations from media.h.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: media.h,v 1.10 2016/01/16 21:41:41 krw Exp $	*/
@


1.10
log
@There can be only one. 'grain' that is. i.e. DEV_BSIZE. No need to track
or store. Just use.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: media.h,v 1.9 2016/01/16 21:29:07 krw Exp $	*/
a80 6
/* those whose use media objects need these routines */
long long media_total_size(MEDIA m);

/* those who define media objects need these routines also */
MEDIA new_media(long size);
void delete_media(MEDIA m);
@


1.9
log
@There can be only one. 'kind' that is. No need to allocate or track the
media kind since it will always be the same -- a file.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: media.h,v 1.8 2016/01/16 20:04:12 krw Exp $	*/
a64 1
    unsigned long   grain;          /* granularity (offset & size) */
a81 1
unsigned long media_granularity(MEDIA m);
@


1.8
log
@Remove some forward declarations missed in last commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: media.h,v 1.7 2016/01/16 20:00:50 krw Exp $	*/
a64 1
    long            kind;           /* kind of media - SCSI, IDE, etc. */
a86 1
long allocate_media_kind(void);
@


1.7
log
@Start peeling away excess layers of abstraction.

Since 'file' is the only kind of media, no need to call the appropriate
functions via pointers. Just call the _file_ variants directly.
Nuke the fields do_read(), do_write(), do_close(), do_os_reload()
and the functions read_media(), write_media(), close_media() and
os_reload_media().

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: media.h,v 1.6 2016/01/12 16:08:37 krw Exp $	*/
a62 6

/* those who define media objects need the struct and internal routine types */
typedef long (*media_read)(MEDIA m, long long offset, unsigned long count, void *address);
typedef long (*media_write)(MEDIA m, long long offset, unsigned long count, void *address);
typedef long (*media_close)(MEDIA m);
typedef long (*media_os_reload)(MEDIA m);
@


1.6
log
@Remove media interation types, structures and functions. They are not used
anywhere, as evidenced by everything still compiling after they are gone.
@
text
@d1 1
a1 1
/*	$OpenBSD: media.h,v 1.5 2016/01/11 07:54:07 jasper Exp $	*/
a73 5
    media_read      do_read;        /* device specific routines */
    media_write     do_write;
    media_close     do_close;
    media_os_reload do_os_reload;
				    /* specific media kinds will add extra info */
a91 4
long read_media(MEDIA m, long long offset, unsigned long count, void *address);
long write_media(MEDIA m, long long offset, unsigned long count, void *address);
void close_media(MEDIA m);
void os_reload_media(MEDIA m);
@


1.5
log
@add rcs ids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a80 25
/* those whose use media object iterators need just the pointer type */
typedef struct media_iterator *MEDIA_ITERATOR;

/* those who define media object iterators need the struct and internal routine types */
typedef void (*media_iterator_reset)(MEDIA_ITERATOR m);
typedef char* (*media_iterator_step)(MEDIA_ITERATOR m);
typedef void (*media_iterator_delete)(MEDIA_ITERATOR m);

typedef enum {
    kInit,
    kReset,
    kIterating,
    kEnd
} media_iterator_state;

struct media_iterator {
    long                    kind;           /* kind of media - SCSI, IDE, etc. */
    media_iterator_state    state;          /* init, reset, iterating, at_end */
    media_iterator_reset    do_reset;       /* device specific routines */
    media_iterator_step     do_step;
    media_iterator_delete   do_delete;
					    /* specific media kinds will add extra info */
};


a105 3

/* those who define media object iterators need these routines also */
MEDIA_ITERATOR new_media_iterator(long size);
@


1.4
log
@remove unused functions

initially from tobias@@, but I removed some other unused one

ok martin@@ tobias@@
@
text
@d1 2
@


1.3
log
@update for pdisk 0.8a2, from NetBSD, retaining our local changes;
summing it up:

- Clean up sources - fix naming, delete old email addresses
- Added support for display of Mac volume names
- Fix block 0 display to show logical offset of drivers
- Require confirmation of quit without write
- Fix iteration to not complain about missing devices
- Warn when creating/writing a map with more than 15 entries

and, most important, add do_update_dpme() which allows us to partition
OpenBSD slices without previous MacOS setup.

Tested with shared MacOS install on macppc, procedure there remains the
same.

grammer and spelling help and ok jmc@@

ok miod@@
@
text
@a129 5
/* those whose use media object iterators need these routines */
void reset_media_iterator(MEDIA_ITERATOR m);
char *step_media_iterator(MEDIA_ITERATOR m);
void delete_media_iterator(MEDIA_ITERATOR m);

a131 1
void private_delete_media_iterator(MEDIA_ITERATOR m);
@


1.2
log
@rm trailing whitespace
@
text
@d4 1
a4 1
 * Written by Eryk Vershen (eryk@@apple.com)
@


1.1
log
@Initial revision
@
text
@d9 17
a25 17
 *              All Rights Reserved 
 *  
 * Permission to use, copy, modify, and distribute this software and 
 * its documentation for any purpose and without fee is hereby granted, 
 * provided that the above copyright notice appears in all copies and 
 * that both the copyright notice and this permission notice appear in 
 * supporting documentation. 
 *  
 * APPLE COMPUTER DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE 
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE. 
 *  
 * IN NO EVENT SHALL APPLE COMPUTER BE LIABLE FOR ANY SPECIAL, INDIRECT, OR 
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT, 
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 
d38 1
a38 1
 *      a total size in bytes 
@


1.1.1.1
log
@Import of pdisk from apple, BSD licensed code. Archive dated Feb 18 1998 
This is a HFS partition editing tool.
@
text
@@
