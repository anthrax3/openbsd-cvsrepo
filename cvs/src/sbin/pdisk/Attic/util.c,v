head	1.9;
access;
symbols
	OPENBSD_5_8:1.7.0.34
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.26
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.30
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.28
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.24
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.22
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.20
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.18
	OPENBSD_5_0:1.7.0.16
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.14
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.12
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.8
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.10
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.6
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.4
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	ver1:1.1.1.1
	apple19980218:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.01.11.18.49.37;	author krw;	state dead;
branches;
next	1.8;
commitid	4j3rZr2FgGSvInps;

1.8
date	2016.01.11.07.54.07;	author jasper;	state Exp;
branches;
next	1.7;
commitid	DI30r1mqHPQNkhTm;

1.7
date	2007.12.09.23.35.22;	author chl;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.29.00.43.41;	author martin;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.27.19.52.21;	author martin;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.24.17.48.30;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.02.00.13.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.09.08.13.08;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.24.00.14.18;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.24.00.14.18;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Nuke now unused files.

ok deraadt@@ jasper@@
@
text
@/*	$OpenBSD: util.c,v 1.8 2016/01/11 07:54:07 jasper Exp $	*/

/*
 * util.c -
 *
 * Written by Eryk Vershen
 */

/*
 * Copyright 1997,1998 by Apple Computer, Inc.
 *              All Rights Reserved
 *
 * Permission to use, copy, modify, and distribute this software and
 * its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appears in all copies and
 * that both the copyright notice and this permission notice appear in
 * supporting documentation.
 *
 * APPLE COMPUTER DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE.
 *
 * IN NO EVENT SHALL APPLE COMPUTER BE LIABLE FOR ANY SPECIAL, INDIRECT, OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT,
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */


#include <stdio.h>
#include <ctype.h>
#include <err.h>

#include "version.h"
#include "util.h"


/*
 * Defines
 */
#define NumToolboxTraps() (                             \
	(NGetTrapAddress(_InitGraf, ToolTrap)           \
		== NGetTrapAddress(0xAA6E, ToolTrap))   \
	    ? 0x200 : 0x400                             \
    )
#define GetTrapType(theTrap) (                          \
	(((theTrap) & 0x800) != 0) ? ToolTrap : OSTrap  \
    )


/*
 * Types
 */


/*
 * Global Constants
 */


/*
 * Forward declarations
 */


/*
 * Routines
 */
/* Ascii case-insensitive string comparison */
int
istrncmp(const char *x, const char *y, long len)
{
    const unsigned char *p = (const unsigned char *)x;
    const unsigned char *q = (const unsigned char *)y;

    while (len > 0) {
	if (tolower(*p) != tolower(*q)) {
	    return (*p - *q);
	} else if (*p == 0) {
	    break;
	}
	p++;
	q++;
	len--;
    }
    return (0);
}


const char *
get_version_string(void)
{
    int stage;
    char *dynamic_version;
    /* "copy" of stuff from SysTypes.r, since we can't include that*/
    enum {development = 0x20, alpha = 0x40, beta = 0x60, final = 0x80, /* or */ release = 0x80};

    switch (kVersionStage) {
    case development:	stage = 'd'; break;
    case alpha:		stage = 'a'; break;
    case beta:		stage = 'b'; break;
    case final:		stage = 'f'; break;
    default:		stage = '?'; break;
    }

    if (kVersionBugFix != 0) {
	if (kVersionStage == final) {
	    if (asprintf(&dynamic_version, "%d.%d.%d", kVersionMajor,
		kVersionMinor, kVersionBugFix) == -1)
		    err(1, "asprintf");
	} else {
	    if (asprintf(&dynamic_version, "%d.%d.%d%c%d", kVersionMajor,
		kVersionMinor, kVersionBugFix, stage, kVersionDelta) == -1)
		   err(1, "asprintf");
	}
    } else {
	if (kVersionStage == final) {
	    if (asprintf(&dynamic_version, "%d.%d", kVersionMajor,
		kVersionMinor) == -1)
		    err(1, "asprintf");
	} else {
	    if (asprintf(&dynamic_version, "%d.%d%c%d", kVersionMajor,
		kVersionMinor, stage, kVersionDelta) == -1)
		    err(1, "asprintf");
	}
    }
    return dynamic_version;
}
@


1.8
log
@add rcs ids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.7
log
@remove unused functions

initially from tobias@@, but I removed some other unused one

ok martin@@ tobias@@
@
text
@d1 2
@


1.6
log
@With last pdisk and full functionality for mac68k now in place, start
cleaning the maze of ifdef's not relevant for us.

This round wipes most linux and/or MacOS-only bits, more to come.
@
text
@a67 13
void
clear_memory(void *dataPtr, unsigned long size)
{
    char           *ptr;

    ptr = (char *) dataPtr;
    while (size > 0) {
	*ptr++ = 0;
	--size;
    }
}


@


1.5
log
@update for pdisk 0.8a2, from NetBSD, retaining our local changes;
summing it up:

- Clean up sources - fix naming, delete old email addresses
- Added support for display of Mac volume names
- Fix block 0 display to show logical offset of drivers
- Require confirmation of quit without write
- Fix iteration to not complain about missing devices
- Warn when creating/writing a map with more than 15 entries

and, most important, add do_update_dpme() which allows us to partition
OpenBSD slices without previous MacOS setup.

Tested with shared MacOS install on macppc, procedure there remains the
same.

grammer and spelling help and ok jmc@@

ok miod@@
@
text
@a80 23
#if !defined(__linux__) && !defined(__unix__)
/* (see Inside Mac VI 3-8) */
int
TrapAvailable(short theTrap)
{
	TrapType                trapType;
	
	trapType = GetTrapType(theTrap);
	
	if (trapType == ToolTrap) {
	    theTrap &= 0x07FF;
	    if (theTrap >= NumToolboxTraps())
		theTrap = _Unimplemented;
	}
	
	return (
	    NGetTrapAddress(theTrap, trapType)
	    != NGetTrapAddress(_Unimplemented, ToolTrap)
	);
}
#endif


@


1.4
log
@get rid of incorrectly sized buffer by using asprintf; ok millert
@
text
@d4 1
a4 1
 * Written by Eryk Vershen (eryk@@apple.com)
d108 2
a109 2
    unsigned char *p = (unsigned char *)x;
    unsigned char *q = (unsigned char *)y;
d144 1
a144 1
	        kVersionMinor, kVersionBugFix) == -1)
d148 2
a149 2
	        kVersionMinor, kVersionBugFix, stage, kVersionDelta) == -1)
		    err(1, "asprintf");
d154 1
a154 1
	        kVersionMinor) == -1)
d158 1
a158 1
	        kVersionMinor, stage, kVersionDelta) == -1)
@


1.3
log
@snprintf; drahn ok
@
text
@d31 1
a60 5
 * Global Variables
 */
static char dynamic_version[10];

/*
d129 1
d143 3
a145 2
	    snprintf(dynamic_version, sizeof dynamic_version, "%d.%d.%d",
		    kVersionMajor, kVersionMinor, kVersionBugFix);
d147 3
a149 2
	    snprintf(dynamic_version, sizeof dynamic_version, "%d.%d.%d%c%d",
		    kVersionMajor, kVersionMinor, kVersionBugFix, stage, kVersionDelta);
d153 3
a155 2
	    snprintf(dynamic_version, sizeof dynamic_version, "%d.%d",
		    kVersionMajor, kVersionMinor);
d157 3
a159 2
	    snprintf(dynamic_version, sizeof dynamic_version, "%d.%d%c%d",
		    kVersionMajor, kVersionMinor, stage, kVersionDelta);
@


1.2
log
@rm trailing whitespace
@
text
@a28 1
// for sprintf()
a29 1
// for tolower()
d146 1
a146 1
	    sprintf(dynamic_version, "%d.%d.%d",
d149 1
a149 1
	    sprintf(dynamic_version, "%d.%d.%d%c%d",
d154 1
a154 1
	    sprintf(dynamic_version, "%d.%d",
d157 1
a157 1
	    sprintf(dynamic_version, "%d.%d%c%d",
@


1.1
log
@Initial revision
@
text
@d9 17
a25 17
 *              All Rights Reserved 
 *  
 * Permission to use, copy, modify, and distribute this software and 
 * its documentation for any purpose and without fee is hereby granted, 
 * provided that the above copyright notice appears in all copies and 
 * that both the copyright notice and this permission notice appear in 
 * supporting documentation. 
 *  
 * APPLE COMPUTER DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE 
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE. 
 *  
 * IN NO EVENT SHALL APPLE COMPUTER BE LIABLE FOR ANY SPECIAL, INDIRECT, OR 
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT, 
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 
d137 1
a137 1
    
d145 1
a145 1
    
@


1.1.1.1
log
@Import of pdisk from apple, BSD licensed code. Archive dated Feb 18 1998 
This is a HFS partition editing tool.
@
text
@@
