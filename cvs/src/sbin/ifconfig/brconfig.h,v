head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.09.02.10.01.36;	author goda;	state Exp;
branches;
next	1.10;
commitid	CnmnHsRybZkqp1q2;

1.10
date	2016.05.08.08.56.59;	author mpi;	state Exp;
branches;
next	1.9;
commitid	hQkLHRUIZAX6DXOE;

1.9
date	2016.01.07.15.33.56;	author mikeb;	state Exp;
branches;
next	1.8;
commitid	3PnQuMbngs7LKGwK;

1.8
date	2014.07.11.16.41.51;	author henning;	state Exp;
branches;
next	1.7;
commitid	nXkyPJ4jX9VvnbZu;

1.7
date	2013.11.21.17.24.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.21.19.50.39;	author bluhm;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.02.02.03.47;	author haesbaert;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.13.15.31.41;	author stsp;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.07.15.05.42;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.04.08.53.24;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.22.22.00.24;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Add switch(4) support to ifconfig

ok deraadt@@ yasuoka@@ reyk@@ henning@@
@
text
@/*	$OpenBSD: brconfig.h,v 1.10 2016/05/08 08:56:59 mpi Exp $	*/

/*
 * Copyright (c) 2009 Claudio Jeker <claudio@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

extern int aflag;
extern int ifaliases;
extern int s;
extern char name[IFNAMSIZ];

void setdiscover(const char *, int);
void unsetdiscover(const char *, int);
void setblocknonip(const char *, int);
void unsetblocknonip(const char *, int);
void setlearn(const char *, int);
void unsetlearn(const char *, int);
void setstp(const char *, int);
void unsetstp(const char *, int);
void setedge(const char *, int);
void unsetedge(const char *, int);
void setautoedge(const char *, int);
void unsetautoedge(const char *, int);
void setptp(const char *, int);
void unsetptp(const char *, int);
void setautoptp(const char *, int);
void unsetautoptp(const char *, int);
void addlocal(const char *, int);

void bridge_add(const char *, int);
void bridge_delete(const char *, int);
void bridge_addspan(const char *, int);
void bridge_delspan(const char *, int);
void bridge_flush(const char *, int);
void bridge_flushall(const char *, int);
void bridge_addaddr(const char *, const char *);
void bridge_deladdr(const char *, int);
void bridge_maxaddr(const char *, int);
void bridge_addrs(const char *, int);
void bridge_hellotime(const char *, int);
void bridge_fwddelay(const char *, int);
void bridge_maxage(const char *, int);
void bridge_proto(const char *, int);
void bridge_ifprio(const char *, const char *);
void bridge_ifcost(const char *, const char *);
void bridge_noifcost(const char *, int);
void bridge_timeout(const char *, int);
void bridge_holdcnt(const char *, int);
void bridge_priority(const char *, int);
void bridge_rules(const char *, int);
void bridge_rulefile(const char *, int);
void bridge_flushrule(const char *, int);
int is_bridge(char *);
void bridge_status(void);
int bridge_rule(int, char **, int);
void switch_status(void);
void switch_datapathid(const char *, int);
void switch_portno(const char *, const char *);

#define	IFFBITS								\
	"\024\1UP\2BROADCAST\3DEBUG\4LOOPBACK\5POINTOPOINT\6NOTRAILERS" \
	"\7RUNNING\10NOARP\11PROMISC\12ALLMULTI\13OACTIVE\14SIMPLEX"	\
	"\15LINK0\16LINK1\17LINK2\20MULTICAST"	\
	"\23INET6_NOPRIVACY\24MPLS\25WOL\26AUTOCONF6"

void printb(char *, unsigned int, unsigned char *);

@


1.10
log
@Do not print MPSAFE when the corresponding bit is set on the interface
flags.

This read-only flag is a hint for the network stack and does not matter
for end user, in fact exposing it just creates confusion.

ok kettenis@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brconfig.h,v 1.9 2016/01/07 15:33:56 mikeb Exp $	*/
d40 1
d68 3
@


1.9
log
@sync displayed interface flags to reality
@
text
@d1 1
a1 1
/*	$OpenBSD: brconfig.h,v 1.8 2014/07/11 16:41:51 henning Exp $	*/
d71 1
a71 1
	"\15LINK0\16LINK1\17LINK2\20MULTICAST\21MPSAFE"	\
@


1.8
log
@allow IFXF_AUTOCONF6 to be set and cleared.
"ifconfig <if> inet6 autoconf" to turn it on, -autoconf to turn it off.
show AUTOCONF6 in the flags line.
-inet6 turns IFXF_AUTOCONF6 off as well.
ok stsp benno florian bluhm
@
text
@d1 1
a1 1
/*	$OpenBSD: brconfig.h,v 1.6 2012/08/21 19:50:39 bluhm Exp $	*/
d71 1
a71 1
	"\15LINK0\16LINK1\17LINK2\20MULTICAST\21TXREADY\22NOINET6"	\
@


1.7
log
@Make the bit string unsigned char * in printb() and printb_status().
In practice we shouldn't have chars > 127 in these but it is better
not to assume this.  OK deraadt@@
@
text
@d72 1
a72 1
	"\23INET6_NOPRIVACY\24MPLS\25WOL"
@


1.6
log
@Reverse the name and meaning of the IFXF_INET6_PRIVACY interface
flag.  It is now called IFXF_INET6_NOPRIVACY.  So IPv6 privacy
addresses are on by default without resetting the flag during
ifconfig down/up.
OK stsp@@, sperreault@@ (who wrote the same diff)
@
text
@d1 1
a1 1
/*	$OpenBSD: brconfig.h,v 1.5 2011/11/02 02:03:47 haesbaert Exp $	*/
d74 1
a74 1
void printb(char *, unsigned int, char *);
@


1.5
log
@Expose if_capabilities to userland so that ifconfig can display the
device hardware features.
Tune ifconfig to show them with 'hwfeatures' argument.
While here, kill some old unused capabilities and respect 80 columns
in brconfig.h.

ok mcbride@@, henning@@, mpf@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: brconfig.h,v 1.4 2011/03/13 15:31:41 stsp Exp $	*/
d72 1
a72 1
	"\23INET6_PRIVACY\24MPLS\25WOL"
@


1.4
log
@Add a way to enable/disable Wake On LAN with ifconfig.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: brconfig.h,v 1.3 2010/06/07 15:05:42 jsg Exp $	*/
d68 5
a72 4

#define	IFFBITS \
"\024\1UP\2BROADCAST\3DEBUG\4LOOPBACK\5POINTOPOINT\6NOTRAILERS\7RUNNING\10NOARP\
\11PROMISC\12ALLMULTI\13OACTIVE\14SIMPLEX\15LINK0\16LINK1\17LINK2\20MULTICAST\21TXREADY\22NOINET6\23INET6_PRIVACY\24MPLS\25WOL"
@


1.3
log
@$OpenBSD$
ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d71 1
a71 1
\11PROMISC\12ALLMULTI\13OACTIVE\14SIMPLEX\15LINK0\16LINK1\17LINK2\20MULTICAST\21TXREADY\22NOINET6\23INET6_PRIVACY\24MPLS"
@


1.2
log
@Merge interface flags and xflags before printing them. So it is possible to
see if a interface is using the INET6_PRIVACY or is MPLS enabled.
If xflags uses more then 16 flags something else must be figured out.
OK stsp@@ deraadt@@
@
text
@d1 2
@


1.1
log
@Merge brconfig into ifconfig. It is annoying that it is impossible to do
ifconfig bridge0 add em0 add gif0 add vether0 up
instead you need to
ifconfig bridge0 create
brconfig bridge0 add em0 add gif0 add vether0 up
This is working for everything now but we may do some changes when needed.
Manpages and startup scripts are following soon.
OK deraadt@@, henning@@
@
text
@d68 2
a69 2
"\020\1UP\2BROADCAST\3DEBUG\4LOOPBACK\5POINTOPOINT\6NOTRAILERS\7RUNNING\10NOARP\
\11PROMISC\12ALLMULTI\13OACTIVE\14SIMPLEX\15LINK0\16LINK1\17LINK2\20MULTICAST"
d71 1
a71 1
void printb(char *, unsigned short, char *);
@

