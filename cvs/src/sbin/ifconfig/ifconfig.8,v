head	1.281;
access;
symbols
	OPENBSD_6_1:1.280.0.4
	OPENBSD_6_1_BASE:1.280
	OPENBSD_6_0:1.270.0.2
	OPENBSD_6_0_BASE:1.270
	OPENBSD_5_9:1.265.0.2
	OPENBSD_5_9_BASE:1.265
	OPENBSD_5_8:1.255.0.4
	OPENBSD_5_8_BASE:1.255
	OPENBSD_5_7:1.252.0.2
	OPENBSD_5_7_BASE:1.252
	OPENBSD_5_6:1.245.0.4
	OPENBSD_5_6_BASE:1.245
	OPENBSD_5_5:1.240.0.4
	OPENBSD_5_5_BASE:1.240
	OPENBSD_5_4:1.234.0.2
	OPENBSD_5_4_BASE:1.234
	OPENBSD_5_3:1.231.0.2
	OPENBSD_5_3_BASE:1.231
	OPENBSD_5_2:1.228.0.2
	OPENBSD_5_2_BASE:1.228
	OPENBSD_5_1_BASE:1.226
	OPENBSD_5_1:1.226.0.2
	OPENBSD_5_0:1.219.0.2
	OPENBSD_5_0_BASE:1.219
	OPENBSD_4_9:1.213.0.2
	OPENBSD_4_9_BASE:1.213
	OPENBSD_4_8:1.209.0.2
	OPENBSD_4_8_BASE:1.209
	OPENBSD_4_7:1.192.0.2
	OPENBSD_4_7_BASE:1.192
	OPENBSD_4_6:1.183.0.4
	OPENBSD_4_6_BASE:1.183
	OPENBSD_4_5:1.177.0.2
	OPENBSD_4_5_BASE:1.177
	OPENBSD_4_4:1.164.0.2
	OPENBSD_4_4_BASE:1.164
	OPENBSD_4_3:1.153.0.2
	OPENBSD_4_3_BASE:1.153
	OPENBSD_4_2:1.148.0.2
	OPENBSD_4_2_BASE:1.148
	OPENBSD_4_1:1.139.0.2
	OPENBSD_4_1_BASE:1.139
	OPENBSD_4_0:1.134.0.2
	OPENBSD_4_0_BASE:1.134
	OPENBSD_3_9:1.118.0.2
	OPENBSD_3_9_BASE:1.118
	OPENBSD_3_8:1.110.0.2
	OPENBSD_3_8_BASE:1.110
	OPENBSD_3_7:1.100.0.2
	OPENBSD_3_7_BASE:1.100
	OPENBSD_3_6:1.89.0.2
	OPENBSD_3_6_BASE:1.89
	OPENBSD_3_5:1.79.0.2
	OPENBSD_3_5_BASE:1.79
	OPENBSD_3_4:1.67.0.2
	OPENBSD_3_4_BASE:1.67
	OPENBSD_3_3:1.64.0.2
	OPENBSD_3_3_BASE:1.64
	OPENBSD_3_2:1.58.0.2
	OPENBSD_3_2_BASE:1.58
	OPENBSD_3_1:1.55.0.2
	OPENBSD_3_1_BASE:1.55
	OPENBSD_3_0:1.52.0.2
	OPENBSD_3_0_BASE:1.52
	OPENBSD_2_9:1.50.0.2
	OPENBSD_2_9_BASE:1.50
	OPENBSD_2_8:1.48.0.2
	OPENBSD_2_8_BASE:1.48
	OPENBSD_2_7:1.43.0.2
	OPENBSD_2_7_BASE:1.43
	OPENBSD_2_6:1.28.0.2
	OPENBSD_2_6_BASE:1.28
	OPENBSD_2_5:1.21.0.2
	OPENBSD_2_5_BASE:1.21
	OPENBSD_2_4:1.15.0.2
	OPENBSD_2_4_BASE:1.15
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.281
date	2017.04.05.08.45.33;	author jmc;	state Exp;
branches;
next	1.280;
commitid	JCe2YK4vZWQQL2Zj;

1.280
date	2017.03.20.14.06.26;	author jmc;	state Exp;
branches;
next	1.279;
commitid	Cc2ou8SAZtkmUWDe;

1.279
date	2017.03.20.13.47.40;	author jmc;	state Exp;
branches;
next	1.278;
commitid	SoOjdST7O8bi3h7r;

1.278
date	2017.03.19.22.23.33;	author jmc;	state Exp;
branches;
next	1.277;
commitid	Jr2fZ2Ij9KcSLRPC;

1.277
date	2016.12.20.13.28.51;	author stsp;	state Exp;
branches;
next	1.276;
commitid	6NzQELxueCRZBzOO;

1.276
date	2016.11.28.10.12.50;	author reyk;	state Exp;
branches;
next	1.275;
commitid	4A7fD4EjN6CCnZxc;

1.275
date	2016.10.06.14.47.00;	author naddy;	state Exp;
branches;
next	1.274;
commitid	cHY8YV3fJ2DVk7sE;

1.274
date	2016.09.09.06.59.41;	author jasper;	state Exp;
branches;
next	1.273;
commitid	DOlzduG62thzPuGZ;

1.273
date	2016.09.04.19.14.19;	author jmc;	state Exp;
branches;
next	1.272;
commitid	UFmugxFyYHMbmuVu;

1.272
date	2016.09.04.17.36.11;	author yasuoka;	state Exp;
branches;
next	1.271;
commitid	KZ1NgJU3fNnK5iIX;

1.271
date	2016.09.03.13.46.57;	author reyk;	state Exp;
branches;
next	1.270;
commitid	3QjHFZLzmkdTcUlc;

1.270
date	2016.06.15.19.39.33;	author gerhard;	state Exp;
branches;
next	1.269;
commitid	qJ1QnDnimibODQ30;

1.269
date	2016.06.14.20.46.26;	author sthen;	state Exp;
branches;
next	1.268;
commitid	m1NMjvF1kSyTvife;

1.268
date	2016.06.10.20.33.29;	author vgross;	state Exp;
branches;
next	1.267;
commitid	qJaxh4rw41tBg4CK;

1.267
date	2016.04.06.10.07.14;	author jsg;	state Exp;
branches;
next	1.266;
commitid	s5diJdxPGjGfQqhx;

1.266
date	2016.02.28.21.55.36;	author tim;	state Exp;
branches;
next	1.265;
commitid	jefaqwolz7ROfCEq;

1.265
date	2016.01.13.09.35.45;	author stsp;	state Exp;
branches;
next	1.264;
commitid	H0dumgG8uq0U5zIf;

1.264
date	2015.12.06.12.50.05;	author tedu;	state Exp;
branches;
next	1.263;
commitid	elXp5QtailrWrL5N;

1.263
date	2015.12.03.13.15.53;	author sthen;	state Exp;
branches;
next	1.262;
commitid	oGPvLwMzQFOR3r4F;

1.262
date	2015.10.26.09.34.50;	author jsg;	state Exp;
branches;
next	1.261;
commitid	BgbfvnOZuGWkhGQH;

1.261
date	2015.10.24.13.32.45;	author jmc;	state Exp;
branches;
next	1.260;
commitid	qqGsDQaXaBtRJHVp;

1.260
date	2015.10.24.10.52.05;	author reyk;	state Exp;
branches;
next	1.259;
commitid	PvSfHvj4AhI0uuuE;

1.259
date	2015.10.24.08.42.57;	author jmc;	state Exp;
branches;
next	1.258;
commitid	IX0J4oFDWleuY15I;

1.258
date	2015.10.23.01.19.04;	author dlg;	state Exp;
branches;
next	1.257;
commitid	amrA8l73DaZf9wmS;

1.257
date	2015.10.06.17.23.21;	author benno;	state Exp;
branches;
next	1.256;
commitid	psQqD4nwnYo30ix7;

1.256
date	2015.10.03.10.44.23;	author florian;	state Exp;
branches;
next	1.255;
commitid	ZIIAgj3OLK4duGNy;

1.255
date	2015.07.31.15.36.15;	author mpi;	state Exp;
branches;
next	1.254;
commitid	XnzXs5axWmrbSZc3;

1.254
date	2015.07.25.18.07.18;	author rzalamena;	state Exp;
branches;
next	1.253;
commitid	nsDRGiOw84GfDkUm;

1.253
date	2015.03.12.18.28.34;	author benno;	state Exp;
branches;
next	1.252;
commitid	AXm5ws0wj0YkPsmr;

1.252
date	2015.02.28.21.51.57;	author bentley;	state Exp;
branches;
next	1.251;
commitid	NNu2UZnsd5zmNVYD;

1.251
date	2015.02.05.10.30.25;	author henning;	state Exp;
branches;
next	1.250;
commitid	nTKZrvRbilvDJOOP;

1.250
date	2015.02.02.08.25.05;	author jmc;	state Exp;
branches;
next	1.249;
commitid	2FDTQliWmMLFNQo6;

1.249
date	2014.12.03.21.30.30;	author florian;	state Exp;
branches;
next	1.248;
commitid	Ihbs2MJyX7ZtZoyS;

1.248
date	2014.12.03.20.15.37;	author florian;	state Exp;
branches;
next	1.247;
commitid	lAskMXa1Bme8BEem;

1.247
date	2014.10.01.10.02.16;	author mpi;	state Exp;
branches;
next	1.246;
commitid	edzZ1vk1hTCTDLTB;

1.246
date	2014.09.20.20.30.18;	author jmc;	state Exp;
branches;
next	1.245;
commitid	QNnzrBE1yc9kV3WA;

1.245
date	2014.07.12.12.46.28;	author jmc;	state Exp;
branches;
next	1.244;
commitid	mN1RpXbXcTPVhZid;

1.244
date	2014.07.11.16.41.51;	author henning;	state Exp;
branches;
next	1.243;
commitid	nXkyPJ4jX9VvnbZu;

1.243
date	2014.07.02.05.54.32;	author jmc;	state Exp;
branches;
next	1.242;
commitid	1rbSIzk9KaAqL72M;

1.242
date	2014.06.23.18.55.29;	author henning;	state Exp;
branches;
next	1.241;
commitid	NZ3dfOROhWV4gojL;

1.241
date	2014.04.22.10.11.32;	author henning;	state Exp;
branches;
next	1.240;

1.240
date	2014.02.26.21.19.44;	author claudio;	state Exp;
branches;
next	1.239;

1.239
date	2014.01.21.21.27.14;	author benno;	state Exp;
branches;
next	1.238;

1.238
date	2014.01.19.08.39.20;	author schwarze;	state Exp;
branches;
next	1.237;

1.237
date	2013.10.13.10.45.34;	author jmc;	state Exp;
branches;
next	1.236;

1.236
date	2013.10.13.10.10.00;	author reyk;	state Exp;
branches;
next	1.235;

1.235
date	2013.09.13.14.32.52;	author florian;	state Exp;
branches;
next	1.234;

1.234
date	2013.05.31.19.56.06;	author yasuoka;	state Exp;
branches;
next	1.233;

1.233
date	2013.03.14.11.18.37;	author mpi;	state Exp;
branches;
next	1.232;

1.232
date	2013.03.05.23.09.23;	author sthen;	state Exp;
branches;
next	1.231;

1.231
date	2013.02.06.22.58.18;	author sthen;	state Exp;
branches;
next	1.230;

1.230
date	2012.11.23.21.59.28;	author sthen;	state Exp;
branches;
next	1.229;

1.229
date	2012.08.27.19.41.19;	author jmc;	state Exp;
branches;
next	1.228;

1.228
date	2012.05.31.17.50.59;	author deraadt;	state Exp;
branches;
next	1.227;

1.227
date	2012.03.18.23.37.08;	author jmc;	state Exp;
branches;
next	1.226;

1.226
date	2012.02.02.12.34.37;	author benno;	state Exp;
branches;
next	1.225;

1.225
date	2011.12.04.06.26.10;	author haesbaert;	state Exp;
branches;
next	1.224;

1.224
date	2011.11.27.19.55.18;	author haesbaert;	state Exp;
branches;
next	1.223;

1.223
date	2011.11.02.20.01.59;	author haesbaert;	state Exp;
branches;
next	1.222;

1.222
date	2011.11.02.08.13.39;	author jmc;	state Exp;
branches;
next	1.221;

1.221
date	2011.11.02.02.03.47;	author haesbaert;	state Exp;
branches;
next	1.220;

1.220
date	2011.10.25.11.39.07;	author jmc;	state Exp;
branches;
next	1.219;

1.219
date	2011.07.09.08.44.54;	author jmc;	state Exp;
branches;
next	1.218;

1.218
date	2011.07.09.00.45.40;	author henning;	state Exp;
branches;
next	1.217;

1.217
date	2011.06.27.12.55.21;	author camield;	state Exp;
branches;
next	1.216;

1.216
date	2011.03.13.21.24.20;	author jmc;	state Exp;
branches;
next	1.215;

1.215
date	2011.03.13.16.11.06;	author stsp;	state Exp;
branches;
next	1.214;

1.214
date	2011.03.13.15.31.41;	author stsp;	state Exp;
branches;
next	1.213;

1.213
date	2011.02.17.08.32.29;	author camield;	state Exp;
branches;
next	1.212;

1.212
date	2010.12.23.08.54.59;	author jmc;	state Exp;
branches;
next	1.211;

1.211
date	2010.11.01.05.24.58;	author deraadt;	state Exp;
branches;
next	1.210;

1.210
date	2010.10.18.22.30.29;	author halex;	state Exp;
branches;
next	1.209;

1.209
date	2010.08.08.20.36.58;	author jmc;	state Exp;
branches;
next	1.208;

1.208
date	2010.07.18.15.37.37;	author jmc;	state Exp;
branches;
next	1.207;

1.207
date	2010.07.16.16.10.20;	author jmc;	state Exp;
branches;
next	1.206;

1.206
date	2010.07.08.06.54.51;	author jmc;	state Exp;
branches;
next	1.205;

1.205
date	2010.06.29.21.28.38;	author reyk;	state Exp;
branches;
next	1.204;

1.204
date	2010.06.27.21.03.59;	author jmc;	state Exp;
branches;
next	1.203;

1.203
date	2010.06.26.19.51.12;	author claudio;	state Exp;
branches;
next	1.202;

1.202
date	2010.05.28.13.23.43;	author jmc;	state Exp;
branches;
next	1.201;

1.201
date	2010.05.28.12.20.06;	author claudio;	state Exp;
branches;
next	1.200;

1.200
date	2010.05.07.06.17.34;	author claudio;	state Exp;
branches;
next	1.199;

1.199
date	2010.04.12.01.26.29;	author tedu;	state Exp;
branches;
next	1.198;

1.198
date	2010.04.11.18.03.06;	author jmc;	state Exp;
branches;
next	1.197;

1.197
date	2010.04.11.17.56.44;	author jmc;	state Exp;
branches;
next	1.196;

1.196
date	2010.04.11.17.51.30;	author jmc;	state Exp;
branches;
next	1.195;

1.195
date	2010.04.11.17.14.37;	author tedu;	state Exp;
branches;
next	1.194;

1.194
date	2010.04.06.14.12.10;	author stsp;	state Exp;
branches;
next	1.193;

1.193
date	2010.04.02.21.16.24;	author deraadt;	state Exp;
branches;
next	1.192;

1.192
date	2009.11.23.19.58.10;	author jmc;	state Exp;
branches;
next	1.191;

1.191
date	2009.11.23.10.32.00;	author deraadt;	state Exp;
branches;
next	1.190;

1.190
date	2009.11.22.22.29.43;	author claudio;	state Exp;
branches;
next	1.189;

1.189
date	2009.11.22.22.01.55;	author deraadt;	state Exp;
branches;
next	1.188;

1.188
date	2009.11.21.15.36.49;	author jmc;	state Exp;
branches;
next	1.187;

1.187
date	2009.11.21.14.09.40;	author claudio;	state Exp;
branches;
next	1.186;

1.186
date	2009.11.15.21.35.45;	author jmc;	state Exp;
branches;
next	1.185;

1.185
date	2009.11.09.21.45.54;	author jmc;	state Exp;
branches;
next	1.184;

1.184
date	2009.08.13.19.33.13;	author sthen;	state Exp;
branches;
next	1.183;

1.183
date	2009.06.23.18.48.07;	author jmc;	state Exp;
branches;
next	1.182;

1.182
date	2009.06.19.14.05.32;	author henning;	state Exp;
branches;
next	1.181;

1.181
date	2009.06.19.09.43.49;	author sthen;	state Exp;
branches;
next	1.180;

1.180
date	2009.06.05.06.54.25;	author jmc;	state Exp;
branches;
next	1.179;

1.179
date	2009.06.05.04.09.15;	author claudio;	state Exp;
branches;
next	1.178;

1.178
date	2009.06.04.19.15.26;	author henning;	state Exp;
branches;
next	1.177;

1.177
date	2009.02.16.08.14.24;	author jmc;	state Exp;
branches;
next	1.176;

1.176
date	2009.02.15.17.33.13;	author blambert;	state Exp;
branches;
next	1.175;

1.175
date	2009.02.15.08.34.36;	author damien;	state Exp;
branches;
next	1.174;

1.174
date	2009.02.13.17.24.54;	author damien;	state Exp;
branches;
next	1.173;

1.173
date	2008.12.12.22.09.26;	author claudio;	state Exp;
branches;
next	1.172;

1.172
date	2008.10.20.09.58.17;	author jmc;	state Exp;
branches;
next	1.171;

1.171
date	2008.09.30.13.11.48;	author deraadt;	state Exp;
branches;
next	1.170;

1.170
date	2008.09.10.14.54.47;	author jmc;	state Exp;
branches;
next	1.169;

1.169
date	2008.09.09.14.00.51;	author henning;	state Exp;
branches;
next	1.168;

1.168
date	2008.09.07.18.58.35;	author jmc;	state Exp;
branches;
next	1.167;

1.167
date	2008.09.07.18.52.15;	author jmc;	state Exp;
branches;
next	1.166;

1.166
date	2008.09.07.06.45.51;	author jmc;	state Exp;
branches;
next	1.165;

1.165
date	2008.09.07.02.22.34;	author deraadt;	state Exp;
branches;
next	1.164;

1.164
date	2008.07.29.18.20.02;	author damien;	state Exp;
branches;
next	1.163;

1.163
date	2008.07.19.15.55.07;	author brad;	state Exp;
branches;
next	1.162;

1.162
date	2008.06.15.20.30.54;	author jmc;	state Exp;
branches;
next	1.161;

1.161
date	2008.06.14.21.46.22;	author reyk;	state Exp;
branches;
next	1.160;

1.160
date	2008.05.07.11.57.19;	author claudio;	state Exp;
branches;
next	1.159;

1.159
date	2008.05.07.07.11.52;	author jmc;	state Exp;
branches;
next	1.158;

1.158
date	2008.05.07.02.43.45;	author pyr;	state Exp;
branches;
next	1.157;

1.157
date	2008.04.18.17.01.50;	author damien;	state Exp;
branches;
next	1.156;

1.156
date	2008.04.16.19.28.42;	author jmc;	state Exp;
branches;
next	1.155;

1.155
date	2008.04.16.18.32.15;	author damien;	state Exp;
branches;
next	1.154;

1.154
date	2008.03.19.08.44.54;	author jmc;	state Exp;
branches;
next	1.153;

1.153
date	2008.02.11.07.58.28;	author jmc;	state Exp;
branches;
next	1.152;

1.152
date	2008.02.05.22.57.30;	author mpf;	state Exp;
branches;
next	1.151;

1.151
date	2007.11.09.15.07.08;	author jmc;	state Exp;
branches;
next	1.150;

1.150
date	2007.10.20.15.12.51;	author jmc;	state Exp;
branches;
next	1.149;

1.149
date	2007.09.03.01.24.22;	author krw;	state Exp;
branches;
next	1.148;

1.148
date	2007.07.31.06.41.04;	author pyr;	state Exp;
branches;
next	1.147;

1.147
date	2007.07.31.06.37.48;	author pyr;	state Exp;
branches;
next	1.146;

1.146
date	2007.06.19.06.24.28;	author pyr;	state Exp;
branches;
next	1.145;

1.145
date	2007.06.14.18.31.50;	author reyk;	state Exp;
branches;
next	1.144;

1.144
date	2007.06.13.06.46.26;	author henning;	state Exp;
branches;
next	1.143;

1.143
date	2007.06.12.16.36.43;	author jmc;	state Exp;
branches;
next	1.142;

1.142
date	2007.06.12.16.25.44;	author jmc;	state Exp;
branches;
next	1.141;

1.141
date	2007.06.04.20.05.14;	author henning;	state Exp;
branches;
next	1.140;

1.140
date	2007.05.31.19.19.44;	author jmc;	state Exp;
branches;
next	1.139;

1.139
date	2006.12.20.09.49.05;	author jmc;	state Exp;
branches;
next	1.138;

1.138
date	2006.11.11.08.08.10;	author jmc;	state Exp;
branches;
next	1.137;

1.137
date	2006.11.10.20.04.24;	author mk;	state Exp;
branches;
next	1.136;

1.136
date	2006.11.09.16.08.20;	author jmc;	state Exp;
branches;
next	1.135;

1.135
date	2006.10.25.11.52.57;	author jmc;	state Exp;
branches;
next	1.134;

1.134
date	2006.08.29.17.22.00;	author henning;	state Exp;
branches;
next	1.133;

1.133
date	2006.06.27.22.31.40;	author jmc;	state Exp;
branches;
next	1.132;

1.132
date	2006.06.27.20.55.51;	author reyk;	state Exp;
branches;
next	1.131;

1.131
date	2006.06.23.18.06.36;	author todd;	state Exp;
branches;
next	1.130;

1.130
date	2006.06.22.21.02.12;	author jmc;	state Exp;
branches;
next	1.129;

1.129
date	2006.06.12.10.44.54;	author jmc;	state Exp;
branches;
next	1.128;

1.128
date	2006.06.12.09.48.24;	author jmc;	state Exp;
branches;
next	1.127;

1.127
date	2006.06.11.12.48.21;	author jmc;	state Exp;
branches;
next	1.126;

1.126
date	2006.06.11.12.40.30;	author jmc;	state Exp;
branches;
next	1.125;

1.125
date	2006.06.03.19.28.09;	author jmc;	state Exp;
branches;
next	1.124;

1.124
date	2006.06.03.18.56.43;	author jmc;	state Exp;
branches;
next	1.123;

1.123
date	2006.06.03.14.55.47;	author jmc;	state Exp;
branches;
next	1.122;

1.122
date	2006.06.02.19.53.12;	author mpf;	state Exp;
branches;
next	1.121;

1.121
date	2006.05.17.12.10.16;	author jmc;	state Exp;
branches;
next	1.120;

1.120
date	2006.05.17.03.29.55;	author reyk;	state Exp;
branches;
next	1.119;

1.119
date	2006.04.12.14.15.03;	author aanriot;	state Exp;
branches;
next	1.118;

1.118
date	2006.02.21.17.07.14;	author jmc;	state Exp;
branches;
next	1.117;

1.117
date	2006.02.20.08.50.44;	author jmc;	state Exp;
branches;
next	1.116;

1.116
date	2006.02.20.08.46.02;	author jmc;	state Exp;
branches;
next	1.115;

1.115
date	2006.01.06.08.41.30;	author jmc;	state Exp;
branches;
next	1.114;

1.114
date	2006.01.05.15.00.10;	author norby;	state Exp;
branches;
next	1.113;

1.113
date	2005.12.29.19.35.12;	author reyk;	state Exp;
branches;
next	1.112;

1.112
date	2005.11.14.15.06.09;	author henning;	state Exp;
branches;
next	1.111;

1.111
date	2005.09.21.21.35.17;	author jmc;	state Exp;
branches;
next	1.110;

1.110
date	2005.06.14.03.54.31;	author henning;	state Exp;
branches;
next	1.109;

1.109
date	2005.06.09.09.05.14;	author jmc;	state Exp;
branches;
next	1.108;

1.108
date	2005.06.08.19.03.55;	author henning;	state Exp;
branches;
next	1.107;

1.107
date	2005.06.07.23.12.17;	author henning;	state Exp;
branches;
next	1.106;

1.106
date	2005.05.31.20.54.38;	author jmc;	state Exp;
branches;
next	1.105;

1.105
date	2005.05.25.07.40.49;	author reyk;	state Exp;
branches;
next	1.104;

1.104
date	2005.05.24.02.45.18;	author reyk;	state Exp;
branches;
next	1.103;

1.103
date	2005.04.15.03.31.49;	author pascoe;	state Exp;
branches;
next	1.102;

1.102
date	2005.03.30.07.44.56;	author jmc;	state Exp;
branches;
next	1.101;

1.101
date	2005.03.30.02.55.37;	author tedu;	state Exp;
branches;
next	1.100;

1.100
date	2005.02.15.20.57.21;	author jmc;	state Exp;
branches;
next	1.99;

1.99
date	2005.02.15.19.45.22;	author reyk;	state Exp;
branches;
next	1.98;

1.98
date	2005.01.20.17.52.53;	author mcbride;	state Exp;
branches;
next	1.97;

1.97
date	2004.12.07.23.39.48;	author jmc;	state Exp;
branches;
next	1.96;

1.96
date	2004.12.07.21.03.52;	author mcbride;	state Exp;
branches;
next	1.95;

1.95
date	2004.12.07.10.26.49;	author jmc;	state Exp;
branches;
next	1.94;

1.94
date	2004.12.07.00.10.05;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2004.12.01.22.30.53;	author jmc;	state Exp;
branches;
next	1.92;

1.92
date	2004.12.01.09.59.35;	author jmc;	state Exp;
branches;
next	1.91;

1.91
date	2004.11.28.23.39.45;	author canacar;	state Exp;
branches;
next	1.90;

1.90
date	2004.11.06.00.54.19;	author reyk;	state Exp;
branches;
next	1.89;

1.89
date	2004.08.22.23.39.00;	author jaredy;	state Exp;
branches;
next	1.88;

1.88
date	2004.08.03.05.36.32;	author mcbride;	state Exp;
branches;
next	1.87;

1.87
date	2004.07.21.14.20.57;	author jaredy;	state Exp;
branches;
next	1.86;

1.86
date	2004.07.15.23.40.39;	author jmc;	state Exp;
branches;
next	1.85;

1.85
date	2004.06.25.18.58.38;	author pb;	state Exp;
branches;
next	1.84;

1.84
date	2004.06.24.20.47.50;	author henning;	state Exp;
branches;
next	1.83;

1.83
date	2004.05.30.22.13.27;	author jmc;	state Exp;
branches;
next	1.82;

1.82
date	2004.05.29.17.54.46;	author jcs;	state Exp;
branches;
next	1.81;

1.81
date	2004.05.18.10.54.07;	author otto;	state Exp;
branches;
next	1.80;

1.80
date	2004.04.27.21.13.09;	author jmc;	state Exp;
branches;
next	1.79;

1.79
date	2004.03.18.20.52.13;	author mcbride;	state Exp;
branches;
next	1.78;

1.78
date	2004.01.13.07.45.10;	author jmc;	state Exp;
branches;
next	1.77;

1.77
date	2004.01.13.02.01.39;	author mcbride;	state Exp;
branches;
next	1.76;

1.76
date	2003.12.16.11.14.25;	author jmc;	state Exp;
branches;
next	1.75;

1.75
date	2003.12.16.03.29.06;	author mcbride;	state Exp;
branches;
next	1.74;

1.74
date	2003.12.08.09.09.03;	author markus;	state Exp;
branches;
next	1.73;

1.73
date	2003.12.06.23.10.19;	author deraadt;	state Exp;
branches;
next	1.72;

1.72
date	2003.12.03.13.28.36;	author markus;	state Exp;
branches;
next	1.71;

1.71
date	2003.10.26.07.10.54;	author mcbride;	state Exp;
branches;
next	1.70;

1.70
date	2003.10.18.12.26.37;	author jmc;	state Exp;
branches;
next	1.69;

1.69
date	2003.10.18.00.47.02;	author mcbride;	state Exp;
branches;
next	1.68;

1.68
date	2003.10.17.21.04.57;	author mcbride;	state Exp;
branches;
next	1.67;

1.67
date	2003.07.10.19.56.49;	author avsm;	state Exp;
branches;
next	1.66;

1.66
date	2003.06.03.13.16.08;	author jmc;	state Exp;
branches;
next	1.65;

1.65
date	2003.06.02.20.06.15;	author millert;	state Exp;
branches;
next	1.64;

1.64
date	2003.03.12.20.12.36;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2003.03.12.09.02.01;	author mickey;	state Exp;
branches;
next	1.62;

1.62
date	2003.02.03.17.46.56;	author jmc;	state Exp;
branches;
next	1.61;

1.61
date	2002.12.12.13.41.25;	author mpech;	state Exp;
branches;
next	1.60;

1.60
date	2002.11.22.10.25.32;	author fgsch;	state Exp;
branches;
next	1.59;

1.59
date	2002.11.14.02.57.27;	author deraadt;	state Exp;
branches;
next	1.58;

1.58
date	2002.06.14.09.14.24;	author itojun;	state Exp;
branches;
next	1.57;

1.57
date	2002.06.09.08.13.06;	author todd;	state Exp;
branches;
next	1.56;

1.56
date	2002.06.05.06.33.30;	author jsyn;	state Exp;
branches;
next	1.55;

1.55
date	2002.04.08.09.12.36;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2002.02.23.22.07.20;	author millert;	state Exp;
branches;
next	1.53;

1.53
date	2001.12.13.20.16.48;	author mpech;	state Exp;
branches;
next	1.52;

1.52
date	2001.09.15.18.06.56;	author mickey;	state Exp;
branches;
next	1.51;

1.51
date	2001.05.02.06.44.23;	author itojun;	state Exp;
branches;
next	1.50;

1.50
date	2001.01.18.04.46.03;	author itojun;	state Exp;
branches;
next	1.49;

1.49
date	2000.12.30.21.56.43;	author angelos;	state Exp;
branches;
next	1.48;

1.48
date	2000.10.17.21.56.06;	author naddy;	state Exp;
branches;
next	1.47;

1.47
date	2000.08.01.16.13.23;	author jakob;	state Exp;
branches;
next	1.46;

1.46
date	2000.06.18.19.16.47;	author provos;	state Exp;
branches;
next	1.45;

1.45
date	2000.06.18.18.06.47;	author niklas;	state Exp;
branches;
next	1.44;

1.44
date	2000.05.23.05.02.43;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2000.04.26.19.03.46;	author chris;	state Exp;
branches;
next	1.42;

1.42
date	2000.04.12.21.47.58;	author aaron;	state Exp;
branches;
next	1.41;

1.41
date	2000.03.29.06.56.24;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2000.03.23.21.39.56;	author aaron;	state Exp;
branches;
next	1.39;

1.39
date	2000.03.18.22.55.57;	author aaron;	state Exp;
branches;
next	1.38;

1.38
date	2000.01.17.03.02.14;	author mickey;	state Exp;
branches;
next	1.37;

1.37
date	2000.01.15.23.56.24;	author angelos;	state Exp;
branches;
next	1.36;

1.36
date	2000.01.15.20.11.14;	author angelos;	state Exp;
branches;
next	1.35;

1.35
date	2000.01.15.19.47.01;	author angelos;	state Exp;
branches;
next	1.34;

1.34
date	2000.01.10.01.52.37;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	99.12.27.04.30.50;	author angelos;	state Exp;
branches;
next	1.32;

1.32
date	99.12.27.04.19.42;	author angelos;	state Exp;
branches;
next	1.31;

1.31
date	99.12.27.03.25.19;	author angelos;	state Exp;
branches;
next	1.30;

1.30
date	99.12.08.23.53.13;	author aaron;	state Exp;
branches;
next	1.29;

1.29
date	99.12.08.07.45.30;	author itojun;	state Exp;
branches;
next	1.28;

1.28
date	99.09.23.22.42.11;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	99.07.04.18.59.39;	author aaron;	state Exp;
branches;
next	1.26;

1.26
date	99.07.03.02.11.07;	author aaron;	state Exp;
branches;
next	1.25;

1.25
date	99.07.02.20.11.46;	author aaron;	state Exp;
branches;
next	1.24;

1.24
date	99.06.04.02.45.17;	author aaron;	state Exp;
branches;
next	1.23;

1.23
date	99.05.23.14.11.15;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	99.05.15.02.17.52;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	99.03.10.21.25.28;	author pjanzen;	state Exp;
branches;
next	1.20;

1.20
date	99.02.26.19.31.50;	author jason;	state Exp;
branches;
next	1.19;

1.19
date	98.12.15.01.20.32;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	98.11.28.19.56.20;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	98.11.11.22.19.57;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	98.11.04.22.36.42;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	98.09.23.01.20.23;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	98.09.17.04.14.53;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	98.09.03.23.08.09;	author jason;	state Exp;
branches;
next	1.12;

1.12
date	98.08.29.21.11.06;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	98.07.13.07.58.48;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	98.06.08.06.39.59;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.03.17.08.10.19;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.12.31.11.16.21;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.11.12.22.03.01;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.07.01.18.54.49;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.05.28.22.01.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.16.09.22.40;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.30.47;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.06.17.46.35;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.281
log
@various improvements, from klemens nanni;
i've omitted hunk 3 of his diff, as what's there now is correct;

ok mikeb
@
text
@.\"	$OpenBSD: ifconfig.8,v 1.280 2017/03/20 14:06:26 jmc Exp $
.\"	$NetBSD: ifconfig.8,v 1.11 1996/01/04 21:27:29 pk Exp $
.\"     $FreeBSD: ifconfig.8,v 1.16 1998/02/01 07:03:29 steve Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)ifconfig.8	8.4 (Berkeley) 6/1/94
.\"
.Dd $Mdocdate: March 20 2017 $
.Dt IFCONFIG 8
.Os
.Sh NAME
.Nm ifconfig
.Nd configure network interface parameters
.Sh SYNOPSIS
.Nm ifconfig
.Op Fl AaC
.Op Ar interface
.Op Ar address_family
.Oo
.Ar address
.Op Ar dest_address
.Oc
.Op Ar parameters
.Sh DESCRIPTION
The
.Nm
utility is used to assign an address
to a network interface and/or configure
network interface parameters.
Generally speaking,
.Xr hostname.if 5
files are used at boot-time to define the network address
of each interface present on a machine;
.Nm
is used at
a later time to redefine an interface's address
or other operating parameters.
.Pp
.Nm
displays the current configuration for a network interface
when no optional parameters are supplied.
If a protocol family is specified,
.Nm
will report only the details specific to that protocol family.
If no parameters are provided, a summary of all interfaces is provided.
.Pp
Only the superuser may modify the configuration of a network interface.
.Pp
The following options are available:
.Bl -tag -width Ds
.It Fl A
Causes full interface alias information for each interface to
be displayed.
.It Fl a
Causes
.Nm
to print information on all interfaces.
The protocol family may be specified as well.
This is the default, if no parameters are given to
.Nm .
.It Fl C
Print the names of all network pseudo-devices that
can be created dynamically at runtime using
.Nm Cm create .
.It Ar interface
The
.Ar interface
parameter is a string of the form
.Dq name unit ,
for example,
.Dq en0 .
If no optional parameters are supplied, this string can instead be just
.Dq name .
If an interface group of that name exists, all interfaces in the group
will be shown.
Otherwise all interfaces of the same type will be displayed
(for example,
.Dq fxp
will display all
.Xr fxp 4
interfaces).
.It Ar address_family
Specifies the address family
which affects interpretation of the remaining parameters.
Since an interface can receive transmissions in differing protocols
with different naming schemes, specifying the address family is recommended.
The address or protocol families currently
supported are
.Dq inet
and
.Dq inet6 .
.It Ar address
Internet version 4 and 6 addresses
take the form of
a host name present in the host name database,
.Xr hosts 5 ;
.Dq dot
notation (IPv4);
colon separated (IPv6);
or CIDR notation.
.It Ar dest_address
Specify the address of the correspondent on the other end
of a point-to-point link.
.El
.Pp
The following
.Ar parameters
may be set with
.Nm :
.Bl -tag -width dest_addressxx
.It Cm alias
Establish an additional network address for this interface.
This is sometimes useful when changing network numbers, and
one wishes to accept packets addressed to the old interface.
.It Fl alias
A synonym for
.Cm delete .
Use of this option is discouraged in favour of
.Cm delete .
.It Cm arp
Enable the use of the Address Resolution Protocol (ARP)
in mapping
between network level addresses and link level addresses (default).
This is currently implemented for mapping between
DARPA Internet addresses and Ethernet addresses.
.It Fl arp
Disable the use of ARP.
.It Cm broadcast Ar addr
(inet only)
Specify the address to use to represent broadcasts to the
network.
The default broadcast address is the address with a host part of all 1's.
.It Cm create
Create the specified network pseudo-device.
At least the following devices can be created on demand:
.Pp
.Xr bridge 4 ,
.Xr carp 4 ,
.Xr enc 4 ,
.Xr etherip 4 ,
.Xr gif 4 ,
.Xr gre 4 ,
.Xr lo 4 ,
.Xr mpe 4 ,
.Xr mpw 4 ,
.Xr pair 4 ,
.Xr pflog 4 ,
.Xr pflow 4 ,
.Xr pfsync 4 ,
.Xr ppp 4 ,
.Xr pppoe 4 ,
.Xr svlan 4 ,
.Xr switch 4 ,
.Xr tap 4 ,
.Xr trunk 4 ,
.Xr tun 4 ,
.Xr vether 4 ,
.Xr vlan 4 ,
.Xr vxlan 4
.It Cm debug
Enable driver-dependent debugging code; usually, this turns on
extra console error logging.
.It Fl debug
Disable driver-dependent debugging code.
.It Cm delete
Remove the default inet address associated with the interface,
including any netmask or destination address configured with it.
An address and address family can be given to make the deletion more specific.
.It Cm description Ar value
Specify a description of the interface.
This can be used to label interfaces in situations where they may
otherwise be difficult to distinguish.
.It Cm -description
Clear the interface description.
.It Cm destroy
Destroy the specified network pseudo-device.
.It Cm down
Mark an interface
.Dq down .
When an interface is marked
.Dq down ,
the system will not attempt to
transmit messages through that interface.
If possible, the interface will be reset to disable reception as well.
This action automatically disables routes using the interface.
.It Cm group Ar group-name
Assign the interface to a
.Dq group .
.Ar group-name
may not be longer than 15 characters and must not end with a digit.
Any interface can be in multiple groups.
.Pp
For instance, a group could be used to create a hardware independent
.Xr pf 4
ruleset (i.e. not one based on the names of NICs) using
existing (egress, carp, etc.) or user-defined groups.
.Pp
Some interfaces belong to specific groups by default:
.Pp
.Bl -dash -width Ds -compact
.It
All interfaces are members of the
.Em all
interface group.
.It
Cloned interfaces are members of their interface family group.
For example, a PPP interface such as
.Em ppp0
is a member of the
.Em ppp
interface family group.
.It
.Xr pppx 4
interfaces are members of the
.Em pppx
interface group.
.It
The interface(s) the default route(s) point to are members of the
.Em egress
interface group.
.It
IEEE 802.11 wireless interfaces are members of the
.Em wlan
interface group.
.It
Any interfaces used for network booting are members of the
.Em netboot
interface group.
.El
.It Cm -group Ar group-name
Remove the interface from the given
.Dq group .
.It Cm hwfeatures
Display the interface hardware features:
.Pp
.Bl -tag -width 14n -offset indent -compact
.It Sy CSUM_IPv4
The device supports IPv4 checksum offload.
.It Sy CSUM_TCPv4
As above, for TCP in IPv4 datagrams.
.It Sy CSUM_UDPv4
As above, for UDP.
.It Sy VLAN_MTU
The device can handle full sized frames, plus the size
of the
.Xr vlan 4
tag.
.It Sy VLAN_HWTAGGING
On transmit, the device can add the
.Xr vlan 4
tag.
.It Sy CSUM_TCPv6
As CSUM_TCPv4, but supports IPv6 datagrams.
.It Sy CSUM_UDPv6
As above, for UDP.
.It Sy WOL
The device supports Wake on LAN (WoL).
.It Sy hardmtu
The maximum MTU supported.
.El
.It Fl inet
Remove all configured
.Xr inet 4
addresses on the given interface.
.It Fl inet6
Disable
.Xr inet6 4
on the given interface and remove all configured
.Xr inet6 4
addresses, including the link-local ones.
This is the default.
To turn inet6 on, use eui64, use autoconf or assign any inet6 address.
.It Cm instance Ar minst
Set the media instance to
.Ar minst .
This is useful for devices which have multiple physical layer interfaces
(PHYs).
Setting the instance on such devices may not be strictly required
by the network interface driver as the driver may take care of this
automatically; see the driver's manual page for more information.
.It Cm link[0-2]
Enable special processing of the link level of the interface.
These three options are interface specific in actual effect; however,
they are in general used to select special modes of operation.
An example
of this is to select the connector type for some Ethernet cards.
Refer to the man page for the specific driver for more information.
.It Fl link[0-2]
Disable special processing at the link level with the specified interface.
.It Cm lladdr Ar etheraddr Ns | Ns Cm random
Change the link layer address (MAC address) of the interface.
This should be specified as six colon-separated hex values, or can
be chosen randomly.
.It Cm llprio Ar prio
Set the priority for link layer communications
.Pf ( Xr arp 4 ,
.Xr bpf 4 ,
.Xr pppoe 4 ) .
.It Cm media Op Ar type
Set the media type of the interface to
.Ar type .
If no argument is given,
display a list of all available media.
.Pp
Some interfaces support the mutually exclusive use of one of several
different physical media connectors.
For example, a 10Mb/s Ethernet interface might support the use of either
AUI or twisted pair connectors.
Setting the media type to
.Dq 10base5
or
.Dq AUI
would change the currently active connector to the AUI port.
Setting it to
.Dq 10baseT
or
.Dq UTP
would activate twisted pair.
Refer to the interface's driver-specific man page for a complete
list of the available types,
or use the following command
for a listing of choices:
.Pp
.Dl $ ifconfig interface media
.It Cm mediaopt Ar opts
Set the specified media options on the interface.
.Ar opts
is a comma delimited list of options to apply to the interface.
Refer to the interface's driver-specific man page for a complete
list of available options,
or use the following command
for a listing of choices:
.Pp
.Dl $ ifconfig interface media
.It Fl mediaopt Ar opts
Disable the specified media options on the interface.
.It Cm metric Ar nhops
Set the routing metric of the interface to
.Ar nhops ,
default 0.
The routing metric can be used by routing protocols.
Higher metrics have the effect of making a route less favorable.
.It Cm mode Ar mode
If the driver for the interface supports the media selection system,
force the mode of the interface to the given
.Ar mode .
For IEEE 802.11 wireless interfaces that support multiple modes,
this directive is used to select between 802.11a
.Pq Dq 11a ,
802.11b
.Pq Dq 11b ,
802.11g
.Pq Dq 11g ,
and 802.11n
.Pq Dq 11n
modes.
.It Fl mode
Select the mode automatically.
This is the default for IEEE 802.11 wireless interfaces.
.It Cm mpls
Enable Multiprotocol Label Switching (MPLS) on the interface,
allowing it to send and receive MPLS traffic.
.It Fl mpls
Disable MPLS on the interface.
.It Cm mtu Ar value
Set the MTU for this device to the given
.Ar value .
Cloned routes inherit this value as a default.
For Ethernet devices which support setting the MTU,
a value greater than 1500 enables jumbo frames.
The
.Sy hardmtu
output from
.Cm hwfeatures
shows the maximum supported MTU.
.It Cm netmask Ar mask
(inet and inet6 only)
Specify how much of the address to reserve for subdividing
networks into subnetworks.
The mask includes the network part of the local address
and the subnet part, which is taken from the host field of the address.
The mask can be specified as a single hexadecimal number
with a leading 0x, with a dot-notation Internet address,
or with a pseudo-network name listed in the network table
.Xr networks 5 .
The mask contains 1's for the bit positions in the 32-bit address
which are to be used for the network and subnet parts,
and 0's for the host part.
The mask should contain at least the standard network portion,
and the subnet field should be contiguous with the network
portion.
.It Cm prefixlen Ar n
(inet and inet6 only)
Effect is similar to
.Cm netmask ,
but you can specify prefix length by digits.
.It Cm priority Ar n
Set the interface routing priority to
.Ar n .
This will influence the default routing priority of new static routes added to
the kernel.
.Ar n
is in the range of 0 to 15 with smaller numbers being better.
.It Cm rdomain Ar rdomainid
Attach the interface to the routing domain with the specified
.Ar rdomainid .
Interfaces in different routing domains are separated and cannot directly
pass traffic between each other.
It is therefore possible to reuse the same addresses in different routing
domains.
If the specified rdomain does not yet exist it will be created, including
a routing table with the same id.
By default all interfaces belong to routing domain 0.
.It Cm rtlabel Ar route-label
(inet)
Attach
.Ar route-label
to new network routes of the specified interface.
Route labels can be used to implement policy routing;
see
.Xr route 4 ,
.Xr route 8 ,
and
.Xr pf.conf 5 .
.It Cm -rtlabel
Clear the route label.
.It Cm timeslot Ar timeslot_range
Set the timeslot range map, which is used to control which channels
an interface device uses.
.It Cm up
Mark an interface
.Dq up .
This may be used to enable an interface after an
.Cm ifconfig down .
It happens automatically when setting the first address on an interface.
If the interface was reset when previously marked down,
the hardware will be re-initialized.
.It Cm wol
Enable Wake on LAN (WoL).
When enabled, reception of a WoL frame will cause the network card to
power up the system from standby or suspend mode.
WoL frames are sent using
.Xr arp 8 .
.It Fl wol
Disable WoL.
WoL is disabled at boot by the driver, if possible.
.El
.Sh BRIDGE
The following options are available for a
.Xr bridge 4
interface:
.Bl -tag -width Ds
.It Cm add Ar interface
Add
.Ar interface
as a member of the bridge.
The interface is put into promiscuous mode so
that it can receive every packet sent on the
network.
An interface can be a member of at most one bridge.
.It Cm addr
Display the addresses that have been learned by the bridge.
.It Cm addspan Ar interface
Add
.Ar interface
as a span port on the bridge.
.It Cm autoedge Ar interface
Automatically detect the spanning tree edge port status on
.Ar interface .
This is the default for interfaces added to the bridge.
.It Cm -autoedge Ar interface
Disable automatic spanning tree edge port detection on
.Ar interface .
.It Cm autoptp Ar interface
Automatically detect the point-to-point status on
.Ar interface
by checking the full duplex link status.
This is the default for interfaces added to the bridge.
.It Cm -autoptp Ar interface
Disable automatic point-to-point link detection on
.Ar interface .
.It Cm blocknonip Ar interface
Mark
.Ar interface
so that only IPv4, IPv6, ARP, and Reverse
ARP packets are accepted from it or forwarded to it from other
bridge member interfaces.
.It Cm -blocknonip Ar interface
Allow non-IPv4, IPv6, ARP, or Reverse ARP packets through
.Ar interface .
.It Cm del Ar interface
Remove
.Ar interface
from the bridge.
Promiscuous mode is turned off for the interface when it is
removed from the bridge.
.It Cm deladdr Ar address
Delete
.Ar address
from the cache.
.It Cm delspan Ar interface
Delete
.Ar interface
from the list of span ports of the bridge.
.It Cm discover Ar interface
Mark
.Ar interface
so that packets are sent out of the interface
if the destination port of the packet is unknown.
If the bridge has no address cache entry for the destination of
a packet, meaning that there is no static entry and no dynamically learned
entry for the destination, the bridge will forward the packet to all member
interfaces that have this flag set.
This is the default for interfaces added to the bridge.
.It Cm -discover Ar interface
Mark
.Ar interface
so that packets are not sent out of the interface
if the destination port of the packet is unknown.
Turning this flag
off means that the bridge will not send packets out of this interface
unless the packet is a broadcast packet, multicast packet, or a
packet with a destination address found on the interface's segment.
This, in combination with static address cache entries,
prevents potentially sensitive packets from being sent on
segments that have no need to see the packet.
.It Cm down
Stop the bridge from forwarding packets.
.It Cm edge Ar interface
Set
.Ar interface
as a spanning tree edge port.
An edge port is a single connection to the network and cannot create
bridge loops.
This allows a straight transition to forwarding.
.It Cm -edge Ar interface
Disable edge port status on
.Ar interface .
.It Cm flush
Remove all dynamically learned addresses from the cache.
.It Cm flushall
Remove all addresses from the cache including static addresses.
.It Cm flushrule Ar interface
Remove all Ethernet MAC filtering rules from
.Ar interface .
.It Cm fwddelay Ar time
Set the time (in seconds) before an interface begins forwarding packets.
Defaults to 15 seconds, minimum of 4, maximum of 30.
.It Cm hellotime Ar time
Set the time (in seconds) between broadcasting spanning tree protocol
configuration packets.
Defaults to 2 seconds, minimum of 1, maximum of 2.
This option is only supported in STP mode with rapid transitions disabled;
see the
.Cm proto
command for setting the protocol version.
.It Cm holdcnt Ar time
Set the transmit hold count, which is the number of spanning tree protocol
packets transmitted before being rate limited.
Defaults to 6, minimum of 1, maximum of 10.
.It Cm ifcost Ar interface Ar num
Set the spanning tree path cost of
.Ar interface
to
.Ar num .
Defaults to 55, minimum of 1, maximum of 200000000 in RSTP mode,
and maximum of 65535 in STP mode.
.It Cm -ifcost Ar interface
Automatically calculate the spanning tree priority of
.Ar interface
based on the current link speed, interface status, and spanning tree mode.
This is the default for interfaces added to the bridge.
.It Cm ifpriority Ar interface Ar num
Set the spanning tree priority of
.Ar interface
to
.Ar num .
Defaults to 128, minimum of 0, maximum of 240.
.It Cm learn Ar interface
Mark
.Ar interface
so that the source address of packets received from
the interface
are entered into the address cache.
This is the default for interfaces added to the bridge.
.It Cm -learn Ar interface
Mark
.Ar interface
so that the source address of packets received from interface
are not entered into the address cache.
.It Cm link0
Setting this flag stops all IP multicast packets from
being forwarded by the bridge.
.It Cm -link0
Clear the
.Cm link0
flag on the bridge interface.
.It Cm link1
Setting this flag stops all non-IP multicast packets from
being forwarded by the bridge.
.It Cm -link1
Clear the
.Cm link1
flag on the bridge interface.
.It Cm link2
Setting this flag causes all packets to be passed on to
.Xr ipsec 4
for processing, based on the policies established by the administrator
using the
.Xr ipsecctl 8
command and
.Xr ipsec.conf 5 .
If appropriate security associations (SAs) exist, they will be used to
encrypt or decrypt the packets.
Otherwise, any key management daemons such as
.Xr isakmpd 8
that are running on the bridge will be invoked to establish the
necessary SAs.
These daemons have to be configured as if they were running on the
host whose traffic they are protecting (i.e. they need to have the
appropriate authentication and authorization material, such as keys
and certificates, to impersonate the protected host(s)).
.It Cm -link2
Clear the
.Cm link2
flag on the bridge interface.
.It Cm maxaddr Ar size
Set the address cache size to
.Ar size .
The default is 100 entries.
.It Cm maxage Ar time
Set the time (in seconds) that a spanning tree protocol configuration is valid.
Defaults to 20 seconds, minimum of 6, maximum of 40.
.It Cm proto Ar value
Force the spanning tree protocol version.
The available values are
.Ar rstp
to operate in the default Rapid Spanning Tree (RSTP) mode
or
.Ar stp
to force operation in Spanning Tree (STP) mode with rapid transitions disabled.
.It Cm ptp Ar interface
Set
.Ar interface
as a point-to-point link.
This is required for straight transitions to forwarding and
should be enabled for a full duplex link or a
.Xr trunk 4
with at least two physical links to the same network segment.
.It Cm -ptp Ar interface
Disable point-to-point link status on
.Ar interface .
This should be disabled for a half duplex link and for an interface
connected to a shared network segment,
like a hub or a wireless network.
.It Xo
.Cm rule
.Cm block Ns | Ns Cm pass
.Op Cm in | out
.Cm on Ar interface
.Op Cm src Ar address
.Op Cm dst Ar address
.Op Cm tag Ar tagname
.Xc
Add a filtering rule to an interface.
Rules have a similar syntax to those in
.Xr pf.conf 5 .
Rules can be used to selectively block or pass frames based on Ethernet
MAC addresses.
They can also tag packets for
.Xr pf 4
to filter on.
Rules are processed in the order in which they were added
to the interface, and the first rule matched takes the action (block or pass)
and, if given, the tag of the rule.
If no source or destination address is specified, the
rule will match all frames (good for creating a catchall policy).
.It Cm rulefile Ar filename
Load a set of rules from the file
.Ar filename .
.It Cm rules Ar interface
Display the active filtering rules in use on
.Ar interface .
.It Cm spanpriority Ar num
Set the spanning priority of this bridge to
.Ar num .
Defaults to 32768, minimum of 0, maximum of 61440.
.It Cm static Ar interface address
Add a static entry into the address cache pointing to
.Ar interface .
Static entries are never aged out of the cache or replaced, even if the address
is seen on a different interface.
.It Cm stp Ar interface
Enable spanning tree protocol on
.Ar interface .
.It Cm -stp Ar interface
Disable spanning tree protocol on
.Ar interface .
This is the default for interfaces added to the bridge.
.It Cm timeout Ar time
Set the timeout, in seconds, for addresses in the cache to
.Ar time .
The default is 240 seconds.
If
.Ar time
is set to zero, then entries will not be expired.
.It Cm up
Start the bridge forwarding packets.
.El
.Sh CARP
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar carp-interface
.Op Cm advbase Ar n
.Op Cm advskew Ar n
.Op Cm balancing Ar mode
.Op Cm carpnodes Ar vhid:advskew,vhid:advskew,...
.Op Cm carpdev Ar iface
.Op Oo Fl Oc Ns Cm carppeer Ar peer_address
.Op Cm pass Ar passphrase
.Op Cm state Ar state
.Op Cm vhid Ar host-id
.Ek
.nr nS 0
.Pp
The following options are available for a
.Xr carp 4
interface:
.Bl -tag -width Ds
.It Cm advbase Ar n
Set the base advertisement interval to
.Ar n
seconds.
Acceptable values are 0 to 254; the default value is 1 second.
.It Cm advskew Ar n
Skew the advertisement interval by
.Ar n .
Acceptable values are 0 to 254; the default value is 0.
.It Cm balancing Ar mode
Set the load balancing mode to
.Ar mode .
Valid modes are
.Ar arp ,
.Ar ip ,
.Ar ip-stealth ,
and
.Ar ip-unicast .
.It Cm carpnodes Ar vhid:advskew,vhid:advskew,...
Create a load balancing group consisting of up to 32 nodes.
Each node is specified as a
.Ar vhid:advskew
tuple in a comma separated list.
.It Cm carpdev Ar iface
Attach to parent interface
.Ar iface .
.It Cm carppeer Ar peer_address
Send the carp advertisements to a specified
point-to-point peer or multicast group instead of sending the messages
to the default carp multicast group.
The
.Ar peer_address
is the IP address of the other host taking part in the carp cluster.
With this option,
.Xr carp 4
traffic can be protected using
.Xr ipsec 4
and it may be desired in networks that do not allow or have problems
with IPv4 multicast traffic.
.It Fl carppeer
Send the advertisements to the default carp multicast
group.
.It Cm pass Ar passphrase
Set the authentication key to
.Ar passphrase .
There is no passphrase by default.
.It Cm state Ar state
Explicitly force the interface to enter this state.
Valid states are
.Ar init ,
.Ar backup ,
and
.Ar master .
.It Cm vhid Ar n
Set the virtual host ID to
.Ar n .
Acceptable values are 1 to 255.
.El
.Pp
Taken together, the
.Cm advbase
and
.Cm advskew
indicate how frequently, in seconds, the host will advertise the fact that it
considers itself master of the virtual host.
The formula is
.Cm advbase
+
.Pf ( Cm advskew
/ 256).
If the master does not advertise within three times this interval, this host
will begin advertising as master.
.Sh IEEE 802.11 (WIRELESS DEVICES)
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar wireless-interface
.Op Oo Fl Oc Ns Cm bssid Ar bssid
.Op Oo Fl Oc Ns Cm chan Op Ar n
.Op Oo Fl Oc Ns Cm nwflag Ar flag
.Op Oo Fl Oc Ns Cm nwid Ar id
.Op Oo Fl Oc Ns Cm nwkey Ar key
.Op Oo Fl Oc Ns Cm powersave Op Ar duration
.Op Cm scan
.Op Oo Fl Oc Ns Cm wpa
.Op Cm wpaakms Ar akm,akm,...
.Op Cm wpaciphers Ar cipher,cipher,...
.Op Cm wpagroupcipher Ar cipher
.Op Oo Fl Oc Ns Cm wpakey Ar passphrase | hexkey
.Op Cm wpaprotos Ar proto,proto,...
.Ek
.nr nS 0
.Pp
The following options are available for a wireless interface:
.Bl -tag -width Ds
.It Cm bssid Ar bssid
Set the desired BSSID.
.It Fl bssid
Unset the desired BSSID.
The interface will automatically select a BSSID in this mode, which is
the default.
.It Cm chan Op Ar n
Set the channel (radio frequency) to
.Ar n .
.Pp
With no channel specified,
show the list of channels supported by the device.
.It Fl chan
Unset the desired channel.
It doesn't affect the channel to be created for IBSS or Host AP mode.
.It Cm nwflag Ar flag
Set specified flag.
The flag name can be either
.Ql hidenwid
or
.Ql nobridge .
The
.Ql hidenwid
flag will hide the network ID (ESSID) in beacon frames when operating
in Host AP mode.
It will also prevent responses to probe requests with an unspecified
network ID.
The
.Ql nobridge
flag will disable the direct bridging of frames between associated
nodes when operating in Host AP mode.
Setting this flag will block and filter direct inter-station
communications.
.Pp
Note that the
.Ql hidenwid
and
.Ql nobridge
options do not provide any security.
The hidden network ID will be sent in clear text by associating
stations and can be easily discovered with tools like
.Xr tcpdump 8
and
.Xr hostapd 8 .
.It Fl nwflag Ar flag
Remove specified flag.
.It Cm nwid Ar id
Configure network ID.
The
.Ar id
can either be any text string up to 32 characters in length,
or a series of hexadecimal digits up to 64 digits.
The empty string allows the interface to connect to any available
access points.
Note that network ID is synonymous with Extended Service Set ID (ESSID).
.It Fl nwid
Set the network ID to the empty string to allow the interface to connect
to any available access point.
.It Cm nwkey Ar key
Enable WEP encryption using the specified
.Ar key .
The
.Ar key
can either be a string, a series of hexadecimal digits (preceded by
.So 0x Sc ) ,
or a set of keys
of the form
.Dq n:k1,k2,k3,k4
where
.Sq n
specifies which of the keys will be used for transmitted packets,
and the four keys,
.Dq k1
through
.Dq k4 ,
are configured as WEP keys.
If a set of keys is specified, a comma
.Pq Sq \&,
within the key must be escaped with a backslash.
Note that if multiple keys are used, their order must be the same within
the network.
.Pp
The length of each key must be either 40 bits for 64-bit encryption
(5-character ASCII string
or 10 hexadecimal digits)
or 104 bits for 128-bit encryption
(13-character ASCII string
or 26 hexadecimal digits).
.It Fl nwkey
Disable WEP encryption.
.It Cm nwkey Cm persist
Enable WEP encryption using the persistent key stored in the network card.
.It Cm nwkey Cm persist : Ns Ar key
Write
.Ar key
to the persistent memory of the network card, and
enable WEP encryption using that
.Ar key .
.It Cm powersave Op Ar duration
Enable 802.11 power saving mode.
Optionally set the receiver sleep duration (in milliseconds).
.It Fl powersave
Disable 802.11 power saving mode.
.It Cm scan
Show the results of an access point scan.
In Host AP mode, this will dump the list of known nodes without scanning.
.It Cm wpa
Enable Wi-Fi Protected Access.
WPA is a Wi-Fi Alliance protocol based on the IEEE 802.11i standard.
It was designed to enhance the security of wireless networks.
Notice that not all drivers support WPA.
Check the driver's manual page to know if this option is supported.
.It Fl wpa
Disable Wi-Fi Protected Access.
.It Cm wpaakms Ar akm,akm,...
Set the comma-separated list of allowed authentication and key management
protocols.
.Pp
The supported values are
.Dq psk
and
.Dq 802.1x .
.Ar psk
authentication (also known as personal mode) uses a 256-bit pre-shared key.
.Ar 802.1x
authentication (also known as enterprise mode) is used with
an external IEEE 802.1X authentication server,
such as wpa_supplicant.
The default value is
.Dq psk .
.Dq psk
can only be used if a pre-shared key is configured using the
.Cm wpakey
option.
.It Cm wpaciphers Ar cipher,cipher,...
Set the comma-separated list of allowed pairwise ciphers.
.Pp
The supported values are
.Dq tkip ,
.Dq ccmp ,
and
.Dq usegroup .
.Ar usegroup
specifies that no pairwise ciphers are supported and that only group keys
should be used.
The default value is
.Dq ccmp .
If multiple pairwise ciphers are specified, the pairwise cipher will
be negotiated between the station and the access point at association
time.
A station will always try to use
.Ar ccmp
over
.Ar tkip
if both ciphers are allowed and supported by the access point.
If the selected cipher is not supported by the hardware, software
encryption will be used.
Check the driver's manual page to know which ciphers are supported in
hardware.
.It Cm wpagroupcipher Ar cipher
Set the group cipher used to encrypt broadcast and multicast traffic.
.Pp
The supported values are
.Dq wep40 ,
.Dq wep104 ,
.Dq tkip ,
and
.Dq ccmp .
The default value is
.Dq ccmp .
The use of
.Ar tkip
or
.Ar wep40
or
.Ar wep104
as the group cipher is discouraged due to weaknesses in TKIP and WEP.
The
.Cm wpagroupcipher
option is available in Host AP mode only.
A station will always use the group cipher of the BSS.
.It Cm wpakey Ar passphrase | hexkey
Set the WPA key and enable WPA.
The key can be given using either a passphrase or a full length hex key,
starting with 0x.
If a passphrase is used the
.Cm nwid
option must be set prior to specifying the
.Cm wpakey
option, since
.Nm
will hash the nwid along with the passphrase to create the key.
.It Fl wpakey
Delete the pre-shared WPA key and disable WPA.
.It Cm wpaprotos Ar proto,proto,...
Set the comma-separated list of allowed WPA protocol versions.
.Pp
The supported values are
.Dq wpa1
and
.Dq wpa2 .
.Ar wpa1
is based on draft 3 of the IEEE 802.11i standard whereas
.Ar wpa2
is based on the ratified standard.
The default value is
.Dq wpa2 .
If
.Dq wpa1,wpa2
is specified, a station will always use the
.Ar wpa2
protocol when supported by the access point.
.El
.Sh INET6
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar interface
.Cm inet6
.Op Oo Fl Oc Ns Cm anycast
.Op Oo Fl Oc Ns Cm autoconf
.Op Oo Fl Oc Ns Cm autoconfprivacy
.Op Cm eui64
.Op Cm pltime Ar n
.Op Oo Fl Oc Ns Cm tentative
.Op Cm vltime Ar n
.Ek
.nr nS 0
.Pp
The following options are available for an
.Xr ip6 4
interface:
.Bl -tag -width Ds
.It Cm anycast
Set the IPv6 anycast address bit.
.It Fl anycast
Clear the IPv6 anycast address bit.
.It Cm autoconf
Enable stateless autoconfiguration (SLAAC),
automatically configuring IPv6 addresses.
In this mode,
router advertisements are accepted
and periodic router solicitations are sent.
.It Fl autoconf
Disable autoconfiguration.
.It Cm autoconfprivacy
Enable privacy extensions for stateless IPv6 address autoconfiguration
(RFC 4941) on the interface.
These extensions are enabled by default.
The purpose of these extensions is to prevent tracking of individual
devices which connect to the IPv6 internet from different networks
using stateless autoconfiguration.
The interface identifier often remains constant and provides the lower
64 bits of an autoconfigured IPv6 address, facilitating tracking of
individual devices (and hence, potentially, users of these devices)
over long periods of time (weeks to months to years).
When these extensions are active, random interface identifiers are used
for autoconfigured addresses.
.Pp
Autoconfigured addresses are also made temporary, which means that they
will automatically be replaced regularly.
Temporary addresses are deprecated after 24 hours.
Once a temporary address has been deprecated, a new temporary address
will be configured upon reception of a router advertisement indicating
that the prefix is still valid.
Deprecated addresses will not be used for new connections as long as a
non-deprecated address remains available.
Temporary addresses become invalid after one week, at which time they
will be removed from the interface.
Address lifetime extension through router advertisements is ignored
for temporary addresses.
.It Fl autoconfprivacy
Disable IPv6 autoconf privacy extensions on the interface.
Currently configured addresses will not be removed until they become
invalid.
.It Cm eui64
Fill the interface index
.Pq the lowermost 64th bit of an IPv6 address
automatically.
.It Cm pltime Ar n
Set preferred lifetime for the address.
.It Cm tentative
Set the IPv6 tentative address bit.
.It Fl tentative
Clear the IPv6 tentative address bit.
.It Cm vltime Ar n
Set valid lifetime for the address.
.El
.Sh INTERFACE GROUPS
.Nm ifconfig
.Fl g
.Ar group-name
.Oo
.Oo Fl Oc Ns Cm carpdemote
.Op Ar number
.Oc
.Pp
The following options are available for interface groups:
.Bl -tag -width Ds
.It Fl g Ar group-name
Specify the group.
.It Cm carpdemote Op Ar number
Increase
.Xr carp 4
demote count for given interface group by
.Ar number .
Acceptable values are 0 to 128.
If
.Ar number
is omitted, it is increased by 1.
Demote count can be set up to 255.
.It Fl carpdemote Op Ar number
Decrease
.Xr carp 4
demote count for given interface group by
.Ar number .
Acceptable values are 0 to 128.
If
.Ar number
is omitted, it is decreased by 1.
.El
.Sh MPE
.Nm ifconfig
.Ar mpe-interface
.Op Cm mplslabel Ar mpls-label
.Pp
The following options are available for an
.Xr mpe 4
interface:
.Bl -tag -width Ds
.It Cm mplslabel Ar mpls-label
Set the MPLS label to
.Ar mpls-label .
This value is a 20-bit number which will be used as the MPLS header for
packets entering the MPLS domain.
.El
.Sh MPW
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar mpw-interface
.Op Oo Fl Oc Ns Cm controlword
.Op Cm encap Ar encapsulation
.Op Cm mpwlabel Ar local-label remote-label Cm neighbor Ar dest-address
.Ek
.nr Ns 0
.Pp
The following options are available for an
.Xr mpw 4
interface:
.Bl -tag -width Ds
.It Cm controlword
Configure the mpw interface to use control-word.
.It Cm -controlword
Remove control-word configuration from the interface.
.It Cm encap Ar encapsulation
Configures the mpw encapsulation type with value
.Ar encapsulation
which can be
.Cm ethernet
or
.Cm ethernet-tagged .
By default it's assumed to be
.Cm ethernet
mode.
.It Cm mpwlabel Ar local-label remote-label
Set mpw local label to
.Ar local-label
and remote label to
.Ar remote-label .
The
.Ar local-label
is a 20-bit number which will be used to create a local label route to
the mpw interface and the
.Ar remote-label
is another 20-bit number which will be used to create the output label header.
.It Cm neighbor Ar dest-address
Sets the destination address where this mpw should output.
The
.Ar dest-address
is an IPv4 address that will be used to find the nexthop in the MPLS
network.
.El
.Sh PAIR
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar pair-interface
.Op Oo Fl Oc Ns Cm patch Ar interface
.Ek
.nr nS 0
.Pp
The following options are available for a
.Xr pair 4
interface:
.Bl -tag -width Ds
.It Cm patch Ar interface
Connect the interface with a second
.Xr pair 4
interface.
Any outgoing packets from the first
.Ar pair-interface
will be received by the second
.Ar interface ,
and vice versa.
This makes it possible to interconnect two routing domains locally.
.It Fl patch
If configured, disconnect the interface pair.
.El
.Sh PFLOW
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar pflow-interface
.Op Oo Fl Oc Ns Cm flowdst Ar addr : Ns Ar port
.Op Oo Fl Oc Ns Cm flowsrc Ar addr Ns Oo : Ns Ar port Oc
.Op Cm pflowproto Ar n
.Ek
.nr nS 0
.Pp
The following options are available for a
.Xr pflow 4
interface:
.Bl -tag -width Ds
.It Cm flowdst Ar addr : Ns Ar port
Set the receiver address and the port for
.Xr pflow 4
packets.
Both must be defined to export pflow data.
.Ar addr
is the IP address and
.Ar port
is the port number of the flow collector.
Pflow data will be sent to this address/port.
.It Fl flowdst
Unset the receiver address and stop sending pflow data.
.It Cm flowsrc Ar addr Ns Oo : Ns Ar port Oc
Set the source IP address for pflow packets.
.Ar addr
is the IP address used as sender of the UDP packets and may be used to
identify the source of the data on the pflow collector.
.It Fl flowsrc
Unset the source address.
.It Cm pflowproto Ar n
Set the protocol version.
The default is version 5.
.El
.Sh PFSYNC
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar pfsync-interface
.Op Oo Fl Oc Ns Cm defer
.Op Cm maxupd Ar n
.Op Oo Fl Oc Ns Cm syncdev Ar iface
.Op Oo Fl Oc Ns Cm syncpeer Ar peer_address
.Ek
.nr nS 0
.Pp
The following options are available for a
.Xr pfsync 4
interface:
.Bl -tag -width Ds
.It Cm defer
Defer transmission of the first packet in a state until a peer has
acknowledged that the associated state has been inserted.
See
.Xr pfsync 4
for more information.
.It Fl defer
Do not defer the first packet in a state.
This is the default.
.It Cm maxupd Ar n
Indicate the maximum number
of updates for a single state which can be collapsed into one.
This is an 8-bit number; the default value is 128.
.It Cm syncdev Ar iface
Use the specified interface
to send and receive pfsync state synchronisation messages.
.It Fl syncdev
Stop sending pfsync state synchronisation messages over the network.
.It Cm syncpeer Ar peer_address
Make the pfsync link point-to-point rather than using
multicast to broadcast the state synchronisation messages.
The peer_address is the IP address of the other host taking part in
the pfsync cluster.
With this option,
.Xr pfsync 4
traffic can be protected using
.Xr ipsec 4 .
.It Fl syncpeer
Broadcast the packets using multicast.
.El
.Sh PPPOE
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar pppoe-interface
.Op Cm authkey Ar key
.Op Cm authname Ar name
.Op Cm authproto Ar proto
.Op Oo Fl Oc Ns Cm peerflag Ar flag
.Op Cm peerkey Ar key
.Op Cm peername Ar name
.Op Cm peerproto Ar proto
.Op Oo Fl Oc Ns Cm pppoeac Ar access-concentrator
.Op Cm pppoedev Ar parent-interface
.Op Oo Fl Oc Ns Cm pppoesvc Ar service
.Ek
.nr nS 0
.Pp
.Xr pppoe 4
uses the
.Xr sppp 4
"generic" SPPP framework.
Any options not described in the section immediately following
are described in the
.Sx SPPP
section, below.
.Pp
The following options are available for a
.Xr pppoe 4
interface:
.Bl -tag -width Ds
.It Cm pppoeac Ar access-concentrator
Set the name of the access-concentrator.
.It Fl pppoeac
Clear a previously set access-concentrator name.
.It Cm pppoedev Ar parent-interface
Set the name of the interface through which
packets will be transmitted and received.
.It Cm pppoesvc Ar service
Set the service name of the interface.
.It Fl pppoesvc
Clear a previously set service name.
.El
.Sh SPPP (PPP LINK CONTROL PROTOCOL)
.nr nS 1
.Bk -words
.Nm
.Ar sppp-interface
.Op Cm authkey Ar key
.Op Cm authname Ar name
.Op Cm authproto Ar proto
.Op Oo Fl Oc Ns Cm peerflag Ar flag
.Op Cm peerkey Ar key
.Op Cm peername Ar name
.Op Cm peerproto Ar proto
.Ek
.nr nS 0
.Pp
The following options are available for an
.Xr sppp 4
or
.Xr pppoe 4
interface:
.Bl -tag -width Ds
.It Cm authkey Ar key
Set the client key or password for the PPP authentication protocol.
.It Cm authname Ar name
Set the client name for the PPP authentication protocol.
.It Cm authproto Ar proto
Set the PPP authentication protocol on the specified
interface acting as a client.
The protocol name can be either
.Ql chap ,
.Ql pap ,
or
.Ql none .
In the latter case, authentication will be turned off.
.It Cm peerflag Ar flag
Set a specified PPP flag for the remote authenticator.
The flag name can be either
.Ql callin
or
.Ql norechallenge .
The
.Ql callin
flag will require the remote peer to authenticate only when he's
calling in, but not when the peer is called by the local client.
This is required for some peers that do not implement the
authentication protocols symmetrically.
The
.Ql norechallenge
flag is only meaningful with the CHAP protocol to not re-challenge
once the initial CHAP handshake has been successful.
This is used to work around broken peer implementations that can't
grok being re-challenged once the connection is up.
.It Fl peerflag Ar flag
Remove a specified PPP flag for the remote authenticator.
.It Cm peerkey Ar key
Set the authenticator key or password for the PPP authentication protocol.
.It Cm peername Ar name
Set the authenticator name for the PPP authentication protocol.
.It Cm peerproto Ar proto
Set the PPP authentication protocol on the specified
interface acting as an authenticator.
The protocol name can be either
.Ql chap ,
.Ql pap ,
or
.Ql none .
In the latter case, authentication will be turned off.
.El
.Sh SWITCH
The following options are available for a
.Xr switch 4
interface:
.Bl -tag -width Ds
.It Cm add Ar interface
Add
.Ar interface
as a member of the switch.
The interface is put into promiscuous mode so
that it can receive every packet sent on the
network.
An interface can be a member of at most one switch.
.It Cm addlocal Ar interface
Add
.Ar interface
as a local port of the switch.
Local port is a special port connected with the local system's network stack.
Only
.Xr vether 4
can be used for the
.Ar interface .
Only one interface can be added as a local port.
.It Cm datapath Ar id
Configure the datapath ID for the switch.
The default value is generated randomly.
.It Cm del Ar interface
Remove
.Ar interface
from the switch.
Promiscuous mode is turned off for the interface when it is removed
from the switch.
.It Cm maxflow Ar number
Set the maximum number of flows per table.
The default value is 10000.
.It Cm maxgroup Ar number
Set the maximum number of groups.
The default value is 1000.
.It Cm portno Ar interface Ar number
Set the port number for the port named
.Ar interface .
The default value is the interface index of the
.Ar interface .
.It Cm up
Start the switch processing packets.
.El
.Sh TRUNK
.Nm ifconfig
.Ar trunk-interface
.Op Oo Fl Oc Ns Cm trunkport Ar child-iface
.Op Cm trunkproto Ar proto
.Pp
The following options are available for a
.Xr trunk 4
interface:
.Bl -tag -width Ds
.It Cm trunkport Ar child-iface
Add
.Ar child-iface
as a trunk port.
.It Fl trunkport Ar child-iface
Remove the trunk port
.Ar child-iface .
.It Cm trunkproto Ar proto
Set the trunk protocol.
Refer to
.Xr trunk 4
for a complete list of the available protocols.
.El
.Sh TUNNEL
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar tunnel-interface
.Op Cm deletetunnel Ar src_address dest_address
.Op Oo Fl Oc Ns Cm keepalive Ar period count
.Op Cm tunnel Ar src_address dest_address
.Op Cm tunneldomain Ar tableid
.Op Oo Fl Oc Ns Cm vnetid Ar network-id
.Ek
.nr nS 0
.Pp
.Xr etherip 4 ,
.Xr gif 4 ,
.Xr gre 4 ,
and
.Xr vxlan 4
are all tunnel interfaces.
The following options are available:
.Bl -tag -width Ds
.It Cm deletetunnel Ar src_address dest_address
Remove the source and destination tunnel addresses.
.It Cm keepalive Ar period count
Enable
.Xr gre 4
keepalive with a packet sent every
.Ar period
seconds.
A second timer is run with a timeout of
.Ar count
*
.Ar period .
If no keepalive response is received during that time, the link is considered
down.
The minimal usable
.Ar count
is 2 since the round-trip time of keepalive packets needs to be accounted for.
.It Fl keepalive
Disable the
.Xr gre 4
keepalive mechanism.
.It Cm tunnel Ar src_address dest_address Ns Op : Ns Ar dest_port
Set the source and destination tunnel addresses on a tunnel interface.
Packets routed to this interface will be encapsulated in
IPv4 or IPv6, depending on the source and destination address families.
Both addresses must be of the same family.
The optional destination port can be specified for interfaces such as
.Xr vxlan 4 ,
which further encapsulate the packets in UDP datagrams.
.It Cm tunneldomain Ar tableid
Use routing table
.Ar tableid
instead of the default table.
The tunnel does not need to terminate in the same routing domain as the
interface itself.
.Ar tableid
can be set to any valid routing table ID;
the corresponding routing domain is derived from this table.
.It Cm tunnelttl Ar ttl
Set the IP or multicast TTL of the tunnel packets.
.It Cm vnetid Ar network-id
Set the virtual network identifier.
This is a number which is used by tunnel protocols such as
.Xr vxlan 4
to identify packets with a virtual network.
The accepted size of the number depends on the individual tunnel protocol;
it is a 24-bit number for
.Xr vxlan 4 .
If supported by the tunnel protocol,
the value can also be set to
.Ar any
to accept packets with arbitrary network identifiers (for example for
multipoint-to-multipoint modes).
.It Cm -vnetid
Clear the virtual network identifier.
.El
.Sh UMB
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar umb-interface
.Op Oo Fl Oc Ns Cm apn Ar apn
.Op Cm chgpin Ar oldpin Ar newpin
.Op Oo Fl Oc Ns Cm class Ar class,class,...
.Op Cm pin Ar pin
.Op Cm puk Ar puk Ar newpin
.Op Oo Fl Oc Ns Cm roaming
.Ek
.nr nS 0
.Pp
The following options are available for a
.Xr umb 4
interface:
.Bl -tag -width Ds
.It Cm apn Ar apn
Set the Access Point Name (APN) required by the network provider.
.It Fl apn
Clear the current APN.
.It Cm chgpin Ar oldpin Ar newpin
Permanently change the PIN of the SIM card from the current value
.Ar oldpin
to
.Ar newpin .
.It Cm class
List all available cell classes.
.It Cm class Ar class,class,...
Set the preferred cell classes.
Apart from those listed by
.Cm class
the following aliases can be used:
.Ar 4G ,
.Ar 3G ,
and
.Ar 2G .
.It Fl class
Clear any cell class preferences.
.It Cm down
Marking the interface as "down" will terminate any existing data connection
and deregister with the service provider.
.It Cm pin Ar pin
Enter the PIN required to unlock the SIM card.
Most SIM cards will not be able to establish a network association without
providing a PIN.
.It Cm puk Ar puk Ar newpin
Sets the PIN of the SIM card to
.Ar newpin
using the PUK
.Ar puk
to validate the request.
.It Cm roaming
Enable data roaming.
.It Fl roaming
Disable data roaming.
.It Cm up
As soon as the interface is marked as "up", the
.Xr umb 4
device will try to establish a data connection with the service provider.
.El
.Sh VLAN
.nr nS 1
.Bk -words
.Nm ifconfig
.Ar vlan-interface
.Op Cm vlan Ar vlan-tag
.Op Oo Fl Oc Ns Cm vlandev Ar parent-interface
.Ek
.nr nS 0
.Pp
The following options are available for a
.Xr vlan 4
interface:
.Bl -tag -width Ds
.It Cm vlan Ar vlan-tag
Set the vlan tag value
to
.Ar vlan-tag .
This value is a 12-bit number which is used to create an 802.1Q
vlan header for packets sent from the vlan interface.
This value cannot be changed once it is set for an interface.
.It Cm vlandev Ar parent-interface
Associate with interface
.Ar parent-interface .
Packets transmitted through the vlan interface will be
diverted to the specified interface
.Ar parent-interface
with 802.1Q vlan tagging.
Packets with 802.1Q tagging received
by the parent interface with the correct vlan tag will be diverted to
the associated vlan pseudo-device.
The vlan interface is assigned a
copy of the parent interface's flags and the parent's Ethernet address.
If
.Cm vlandev
and
.Cm vlan
are not set at the same time, the vlan tag will be inferred from
the interface name, for instance
.Cm vlan5
will be assigned 802.1Q tag 5.
.It Fl vlandev
Disassociate from the parent interface.
This breaks the link between the vlan interface and its parent,
clears its vlan tag, flags, and link address, and shuts the interface down.
.El
.Sh EXAMPLES
Assign the
address of 192.168.1.10 with a network mask of
255.255.255.0 to interface fxp0:
.Pp
.Dl # ifconfig fxp0 inet 192.168.1.10 netmask 255.255.255.0
.Pp
Configure the xl0 interface to use 100baseTX, full duplex:
.Pp
.Dl # ifconfig xl0 media 100baseTX mediaopt full-duplex
.Pp
Label the em0 interface as an uplink:
.Pp
.Dl # ifconfig em0 description \&"Uplink to Gigabit Switch 2\&"
.Pp
Create the gif1 network interface:
.Pp
.Dl # ifconfig gif1 create
.Pp
Put the athn0 wireless interface into monitor mode:
.Pp
.Dl # ifconfig athn0 mediaopt monitor
.Sh DIAGNOSTICS
Messages indicating the specified interface does not exist, the
requested address is unknown, or the user is not privileged and
tried to alter an interface's configuration.
.Sh SEE ALSO
.Xr netstat 1 ,
.Xr ifmedia 4 ,
.Xr inet 4 ,
.Xr intro 4 ,
.Xr netintro 4 ,
.Xr hostname.if 5 ,
.Xr hosts 5 ,
.Xr networks 5 ,
.Xr rc 8 ,
.Xr tcpdump 8
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
@


1.280
log
@stop signposting; while here, knock out the comments;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.279 2017/03/20 13:47:40 jmc Exp $
d403 1
a403 1
(inet and inet6)
d511 1
a511 1
so that no non-IPv4, IPv6, ARP, or Reverse
d1523 1
a1523 1
for a complete list of the available protocols,
@


1.279
log
@as suggested by mpi, be less particular documenting
where router adverts are coming from when describing autoconf;
rework the description a little;

ok mpi
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.278 2017/03/19 22:23:33 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: March 19 2017 $
a417 2
.\" see
.\" Xr eon 5 .
a473 47
.Pp
.Nm
supports a multitude of sub-types,
described in the following sections:
.Pp
.Bl -dash -offset indent -compact
.It
.Xr bridge 4
.It
.Xr carp 4
.It
IEEE 802.11 (wireless devices)
.It
.Xr inet6 4
.It
interface groups
.It
.Xr mpe 4
.It
.Xr mpw 4
.It
.Xr pair 4
.It
.Xr pflow 4
.It
.Xr pfsync 4
.It
.Xr pppoe 4
.It
.Xr sppp 4
(PPP Link Control Protocol)
.It
.Xr switch 4
.It
.Xr trunk 4
.It
tunnel
.Pf ( Xr etherip 4 ,
.Xr gif 4 ,
.Xr gre 4 ,
.Xr vxlan 4 )
.It
.Xr umb 4
.It
.Xr vlan 4
.El
.\" BRIDGE
a735 1
.\" CARP
a828 1
.\" IEEE 802.11
a1064 1
.\" INET6
a1139 1
.\" INTERFACE GROUPS
a1172 1
.\" MPE
a1187 1
.\" mpw
a1234 1
.\" PAIR
a1260 1
.\" PFLOW
a1298 1
.\" PFSYNC
a1344 1
.\" PPPOE
a1387 1
.\" SPPP
a1455 1
.\" SWITCH
a1501 1
.\" TRUNK
a1524 1
.\" TUNNEL
a1601 1
.\" UMB
a1663 1
.\" VLAN
@


1.278
log
@"autoconf" belongs in the inet6 section, not the global options part;
while here prefer "interface" over "ip6-interface" and show that "inet6" is
mandatory;

ok florian mpi
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.277 2016/12/20 13:28:51 stsp Exp $
d34 1
a34 1
.Dd $Mdocdate: December 20 2016 $
d1142 5
a1146 5
Enable autoconfiguration.
If
.Cm autoconf
is enabled router advertisements are accepted on this interface and
the kernel sends periodic router solicitations from this interface.
@


1.277
log
@Document our new WPA default settings. Discourage use of TKIP.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.276 2016/11/28 10:12:50 reyk Exp $
d34 1
a34 1
.Dd $Mdocdate: November 28 2016 $
a153 11
.It Cm autoconf
Enable autoconfiguration.
Valid for
.Dq inet6
only.
If
.Cm autoconf
is enabled router advertisements are accepted on this interface and
the kernel sends periodic router solicitations from this interface.
.It Fl autoconf
Disable autoconfiguration.
d1121 2
a1122 1
.Ar inet6-interface
d1124 1
d1141 8
@


1.276
log
@Rename "flowmax" to "maxflow" and give each switch(4) ioctl a
dedicated number.  Both changes for consistency.

OK rzalamena@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.275 2016/10/06 14:47:00 naddy Exp $
d34 1
a34 1
.Dd $Mdocdate: October 6 2016 $
d1060 1
a1060 1
.Dq tkip,ccmp .
d1083 1
a1083 1
.Dq tkip .
d1085 2
d1090 1
a1090 1
as the group cipher is discouraged due to weaknesses in WEP.
d1120 1
a1120 1
.Dq wpa1,wpa2 .
@


1.275
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.274 2016/09/09 06:59:41 jasper Exp $
d34 1
a34 1
.Dd $Mdocdate: September 9 2016 $
d1539 1
a1539 1
.It Cm datapath Ar datapath_id
d1548 1
a1548 1
.It Cm flowmax Ar flowmax
d1551 1
a1551 1
.It Cm maxgroup Ar maxgroup
d1554 2
a1555 2
.It Cm portno Ar interface Ar port_no
Set the port_no for the port named
@


1.274
log
@fix pasto

ok yasuoka@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.273 2016/09/04 19:14:19 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 4 2016 $
d1536 1
a1536 1
can be use for the
@


1.273
log
@switch tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.272 2016/09/04 17:36:11 yasuoka Exp $
d1528 1
a1528 1
An interface can be a member of at most one bridge.
@


1.272
log
@Add SWITCH section for switch(4).

ok goda
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.271 2016/09/03 13:46:57 reyk Exp $
d34 1
a34 1
.Dd $Mdocdate: September 3 2016 $
d519 2
d1540 1
a1540 1
Configure the datapath id in OpenFlow protocol of the switch.
d1549 1
a1549 1
Set the maximum number of flows in OpenFlow protocol per table.
d1552 1
a1552 1
Set the maximum number of groups in OpenFlow protocol.
d1555 1
a1555 1
Set the port_no in OpenFlow protocol for the port named
d1659 1
a1659 1
to accept packets with arbitrary network identifiers (eg. for
@


1.271
log
@Add support for a multipoint-to-multipoint mode in vxlan(4).  In this
mode, vxlan(4) must be configured to accept any virtual network
identifier with "vnetid any" and added to a bridge(4) or switch(4).
This way the driver will dynamically learn the tunnel endpoints and
their vnetids for the responses and can be used to dynamically bridge
between VXLANs.  It is also being used in combination with switch(4)
and the OpenFlow tunnel classifiers.

With input from yasuoka@@ goda@@
OK deraadt@@ dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.270 2016/06/15 19:39:33 gerhard Exp $
d34 1
a34 1
.Dd $Mdocdate: June 15 2016 $
d190 1
d1512 47
@


1.270
log
@Add umb(4) - a driver for the Mobile Broadband Interface Model (MBIM)

The umb(4) driver provides support for USB MBIM devices.
Those devices establish connections via celluar networks such as
GPRS, UMTS, and LTE.

ok mpi@@ sthen@@
additional feedback from deraadt@@ jmc@@ stsp@@ kettenis@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.269 2016/06/14 20:46:26 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: June 14 2016 $
d1606 5
@


1.269
log
@llprio now affects pppoe(4) control frames as well as arp(4) and bpf(4) writes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.268 2016/06/10 20:33:29 vgross Exp $
d34 1
a34 1
.Dd $Mdocdate: June 10 2016 $
d526 2
d1608 63
@


1.268
log
@Add the "llprio" field to struct ifnet, and the corresponding keyword
to ifconfig.

"llprio" allows one to set the priority of packets that do not go through
pf(4), as the case is for arp(4) or bpf(4).

ok sthen@@ mikeb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.267 2016/04/06 10:07:14 jsg Exp $
d34 1
a34 1
.Dd $Mdocdate: April 6 2016 $
d333 2
a334 1
.Xr bpf 4 ) .
@


1.267
log
@document autoconfprivacy being the default
ok stsp@@ bluhm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.266 2016/02/28 21:55:36 tim Exp $
d34 1
a34 1
.Dd $Mdocdate: February 28 2016 $
d330 4
@


1.266
log
@Add a missing Ns macro
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.265 2016/01/13 09:35:45 stsp Exp $
d34 1
a34 1
.Dd $Mdocdate: January 13 2016 $
d1141 1
@


1.265
log
@Make 'ifconfig $if mode' a valid subcommand that works independently of
the 'media' subcommand. Allow clearing the mode with 'ifconfig $if -mode'.

This makes commands such as 'ifconfig iwn0 mode 11a' work without having
to type all of 'ifconfig iwn0 media autoselect mode 11a'.

ok sthen@@ deraadt@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.264 2015/12/06 12:50:05 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: December 6 2015 $
d1333 1
a1333 1
.It Cm flowsrc Ar addr Oo : Ns Ar port Oc
@


1.264
log
@remove txpower option. only relevant to the now irrelevant wi driver.
(several other drivers misleadingly claim generic 802.11 txpower, but
do not in fact do anything. the knob is not connected to the radio.)
ok benno jsg krw reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.263 2015/12/03 13:15:53 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: December 3 2015 $
d376 1
a376 1
set the specified operating mode on the interface to the given
d378 1
a378 1
For IEEE 802.11 wireless interfaces that support multiple operating modes,
d383 8
a390 3
and 802.11g
.Pq Dq 11g
operating modes.
@


1.263
log
@Document etherip(4) as another tunnel interface.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.262 2015/10/26 09:34:50 jsg Exp $
d34 1
a34 1
.Dd $Mdocdate: October 26 2015 $
a887 1
.Op Oo Fl Oc Ns Cm txpower Ar dBm
a1004 7
.It Cm txpower Ar dBm
Set the transmit power.
The driver will disable any auto level and transmit power controls in this
mode.
.It Fl txpower
Disable manual transmit power mode and enable any auto level and transmit
power controls.
@


1.262
log
@Sync "ifconfig create" interface list with ifconfig -C output.
Adds pair, svlan, tap and vxlan.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.261 2015/10/24 13:32:45 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: October 24 2015 $
d177 1
d511 4
a514 3
.Pf ( Xr gif 4
and
.Xr gre 4 )
d1545 7
a1551 1
The following options are available for a tunnel interface:
d1575 1
a1575 3
Set the source and destination tunnel addresses on a tunnel interface,
including
.Xr gif 4 .
@


1.261
log
@various clean up;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.260 2015/10/24 10:52:05 reyk Exp $
d182 1
d188 2
d193 2
a194 1
.Xr vlan 4
@


1.260
log
@Add pair(4), a vether-based virtual Ethernet driver to interconnect
rdomains and bridges on the local system.  This can be used to route
through local rdomains, to create L2 devices (like trunks) between
them, and many other things.

Discussed with many, with input from mpi@@
OK sthen@@ phessler@@ yasuoka@@ mikeb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.259 2015/10/24 08:42:57 jmc Exp $
d430 1
a430 1
Interfaces in different routing domains are separated and can not directly
d492 2
d1296 1
a1296 1
.Ar interface
d1298 1
a1298 1
This link allows to interconnect two routing domains locally.
d1562 1
a1562 1
.It Cm tunnel Ar src_address dest_address Ns Op Ns : Ns Ar dest_port
@


1.259
log
@normalise TUNNEL synopsis; ok dlg
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.258 2015/10/23 01:19:04 dlg Exp $
d34 1
a34 1
.Dd $Mdocdate: October 23 2015 $
d1272 27
@


1.258
log
@tweak the vnetid so it can be optional and therefore cleared/deleted.

the abstract vnetid is promoted to a uin32_t, and adds a SIOCDVNETID
ioctl so it can be cleared.

this is all because i set an assignment on implementing a virtual
network interface and the students got confused when vnetid 0 didnt
show up in ifconfig output.

the vnetid in the vxlan(4) protocol is optional, but the current
code confuses 0 with no vnetid being set. this makes it clear.

ok reyk@@ who also simplified my diff
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.257 2015/10/06 17:23:21 benno Exp $
d34 1
a34 1
.Dd $Mdocdate: October 6 2015 $
d1506 1
a1506 2
.Op Cm vnetid Ar network-id
.Op Cm -vnetid
@


1.257
log
@fix flowsrc spec, ok florian, thx ingo!
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.256 2015/10/03 10:44:23 florian Exp $
d34 1
a34 1
.Dd $Mdocdate: October 3 2015 $
d1507 1
d1563 2
@


1.256
log
@IPv6 transport for pflow data.
Input deraadt@@
Bug fix & OK benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.255 2015/07/31 15:36:15 mpi Exp $
d34 1
a34 1
.Dd $Mdocdate: July 31 2015 $
d1280 1
a1280 1
.Op Oo Fl Oc Ns Cm flowsrc Ar addr Oo : Ns Ar port Oc
@


1.255
log
@Document acceptable values for "carpdemote", from Julien Dhaille.

ok jmc@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.254 2015/07/25 18:07:18 rzalamena Exp $
d34 1
a34 1
.Dd $Mdocdate: July 25 2015 $
d1280 1
a1280 1
.Op Oo Fl Oc Ns Cm flowsrc Ar addr
d1301 1
a1301 1
.It Cm flowsrc Ar addr
@


1.254
log
@Teach ifconfig(8) man page about the mpw(4) commands.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.253 2015/03/12 18:28:34 benno Exp $
d34 1
a34 1
.Dd $Mdocdate: March 12 2015 $
d1194 1
d1198 1
d1204 1
@


1.253
log
@automatic parent interface selection does not work anymore (see rev.
1.245 of sys/netinet/ip_carp.c), carpdev is a required argument now.
ok florian
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.252 2015/02/28 21:51:57 bentley Exp $
d34 1
a34 1
.Dd $Mdocdate: February 28 2015 $
d181 1
d490 2
d1221 48
@


1.252
log
@Reduce usage of predefined strings in manpages.

Predefined strings are not very portable across troff implementations,
and they make the source much harder to read. Usually the intended
character can be written directly.

No output changes, except for two instances where the incorrect escape
was used in the first place.

tweaks + ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.251 2015/02/05 10:30:25 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: February 5 2015 $
d816 1
a816 1
Attach to
a817 2
If not specified, the kernel will attempt to select an interface with
a subnet matching that of the carp interface.
@


1.251
log
@implement "ifconfig <if> -inet", removing all inet addresses
for symmetry with -inet6 mostly. ok phessler theo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.249 2014/12/03 21:30:30 florian Exp $
d34 1
a34 1
.Dd $Mdocdate: February 2 2015 $
d320 1
a320 1
.It Cm lladdr Ar etheraddr Ns \*(Ba Ns Cm random
d718 2
a719 2
.Cm block Ns \*(Ba Ns Cm pass
.Op Cm in \*(Ba out
@


1.250
log
@replace the wireless scan example with one showing how to select monitor
mode: the wireless pages already carry the scan example, and this one
seems a fair substitute;

the diff is from bradain foley, tweaked according to some suggestions
from stsp;
@
text
@d34 1
a34 1
.Dd $Mdocdate: December 3 2014 $
d291 4
@


1.249
log
@ifconfig $if inet6 autoconf sends periodic router solicitations.
input jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.248 2014/12/03 20:15:37 florian Exp $
d1573 1
a1573 1
Scan for wireless networks using bwi0:
d1575 1
a1575 1
.Dl # ifconfig bwi0 scan
@


1.248
log
@rtsol is gone
OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.247 2014/10/01 10:02:16 mpi Exp $
d34 1
a34 1
.Dd $Mdocdate: October 1 2014 $
d158 2
a159 1
only,
d161 2
a162 1
controls whether router advertisements will be accepted on this interface.
@


1.247
log
@Remove some sl(4) references.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.246 2014/09/20 20:30:18 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 20 2014 $
d296 1
a296 2
To turn inet6 on, use eui64, assign any inet6 address or run
.Xr rtsol 8 .
@


1.246
log
@provide a hint for enabling jumbo frames, since we removed it from the
driver pages;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.245 2014/07/12 12:46:28 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: July 12 2014 $
a183 1
.Xr sl 4 ,
d311 1
a311 2
of this is to enable SLIP compression, or to select the connector type
for some Ethernet cards.
@


1.245
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.244 2014/07/11 16:41:51 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: July 11 2014 $
d385 8
a392 2
Cloned routes will inherit this value as a default.
Currently, not all devices support setting the MTU.
@


1.244
log
@allow IFXF_AUTOCONF6 to be set and cleared.
"ifconfig <if> inet6 autoconf" to turn it on, -autoconf to turn it off.
show AUTOCONF6 in the flags line.
-inet6 turns IFXF_AUTOCONF6 off as well.
ok stsp benno florian bluhm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.242 2014/06/23 18:55:29 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: July 2 2014 $
d157 4
a160 2
.Xr inet6
only, controls wether router advertisements will be accepted on this interface.
@


1.243
log
@From: Gregor Best
- "delete" works in af inet by default
- priority range is 0 to 15

the "delete" portion tweaked by me
help/ok henning
@
text
@d34 1
a34 1
.Dd $Mdocdate: June 23 2014 $
d154 7
@


1.242
log
@first attempt at documenting NOINET6 by default and eui64 turning it on again
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.239 2014/01/21 21:27:14 benno Exp $
d34 1
a34 1
.Dd $Mdocdate: April 22 2014 $
d186 3
a188 2
Remove the specified network address,
including any netmask or destination address configured with this address.
d407 1
a407 1
is in the range of 0 to 16 with smaller numbers being better.
@


1.241
log
@for consistency's sake, use the terminology from the 802.1Q standard
here too. pt out by alexey suslikov via mpi, ok reyk
@
text
@d34 1
a34 1
.Dd $Mdocdate: February 26 2014 $
d286 2
a287 1
To turn it on again, assign any inet6 address or run
@


1.240
log
@Try to reduce the confusion about rdomain vs rtable. More is needed but
this is a start. With input from many.
@
text
@d34 1
a34 1
.Dd $Mdocdate: January 21 2014 $
d268 1
a268 1
On transmit, the device can prepend the
d1519 2
a1520 2
with 802.1Q vlan encapsulation.
Packets with 802.1Q encapsulation received
@


1.239
log
@allow pflow(4) to determine the src IP address based on the route
table if flowsrc is not set. Now works with new udp checksum code.
From Nathanael Rensen (nathanael.openbsd AT list DOT polymorpheus DOT
com), tweak and ok florian@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.238 2014/01/19 08:39:20 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: January 19 2014 $
d406 3
a408 3
.It Cm rdomain Ar route-id
Attach the interface to the routing table with the specified
.Ar route-id .
d411 5
a415 1
By default all interfaces belong to routing table 0.
d1433 1
a1433 1
.Op Cm tunneldomain Ar route-id
d1471 1
a1471 1
.It Cm tunneldomain Ar route-id
d1473 1
a1473 1
.Ar route-id
d1477 1
a1477 1
.Ar route-id
@


1.238
log
@Fix macro usage: ifconfig is .Nm, not .Cm.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.237 2013/10/13 10:45:34 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: October 13 2013 $
a1226 1
Must be defined to export pflow data.
d1231 1
a1231 1
Unset the source address and stop sending pflow data.
@


1.237
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.236 2013/10/13 10:10:00 reyk Exp $
d90 1
a90 1
.Cm ifconfig create .
@


1.236
log
@Import vxlan(4), the virtual extensible local area network tunnel
interface.  VXLAN is a UDP-based tunnelling protocol for overlaying
virtualized layer 2 networks over layer 3 networks. The implementation
is based on draft-mahalingam-dutt-dcops-vxlan-04 and has been tested
with other implementations in the wild.

put it in deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.235 2013/09/13 14:32:52 florian Exp $
d34 1
a34 1
.Dd $Mdocdate: September 13 2013 $
d1485 1
a1485 1
which is a 24-bit number for
@


1.235
log
@pflow(4) does not work without flowsrc set.
OK benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.234 2013/05/31 19:56:06 yasuoka Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2013 $
d1431 1
d1458 1
a1458 1
.It Cm tunnel Ar src_address dest_address
d1465 3
d1477 10
@


1.234
log
@Correct the range checks in ifconfig properly for vhid, advbase and advskew.
Clarify about the ranges in the man page.

ok mpf mcbride
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.233 2013/03/14 11:18:37 mpi Exp $
d34 1
a34 1
.Dd $Mdocdate: March 14 2013 $
d1227 1
d1232 1
a1232 1
Unset the source address.
@


1.233
log
@tedu faith(4), suggested by todd@@ some weeks ago after a submission by
dhill.

ok krw@@, mikeb@@, tedu@@ (implicit)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.232 2013/03/05 23:09:23 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: March 5 2013 $
d772 1
a772 1
This is an 8-bit number; the default value is 1 second.
d776 1
a776 1
This is an 8-bit number; the default value is 0.
@


1.232
log
@802.1x enterprise is actually supported but requires external software, so
update the manual. Pointed out by mlarkin@@, ok mlarkin@@ brad@@ matthieu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.231 2013/02/06 22:58:18 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: February 6 2013 $
a165 1
.Xr faith 4 ,
@


1.231
log
@add pppx(4) interfaces to the "pppx" interface group, as done for various
other interface types. suggested/tested Mattieu Baptiste, ok dlg@@ yasuoka@@
giovanni@@, ifconfig(8) reminder jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.230 2012/11/23 21:59:28 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: November 23 2012 $
d1000 1
a1000 1
authentication (also known as enterprise mode) is meant to be used with
d1002 1
a1002 1
but is currently unsupported.
@


1.230
log
@Mention hardmtu in the list relating to hwfeatures, suggested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.229 2012/08/27 19:41:19 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: August 27 2012 $
d232 5
@


1.229
log
@correct the description of VLAN_MTU; from brad smith
ok sthen haesbaert

while here, knock out a useless .Pp, and provide a section number for
an Xr;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.228 2012/05/31 17:50:59 deraadt Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2012 $
d273 2
@


1.228
log
@Clarify issues del (bridge command) vs delete (IP address command);
documentation not fixed after ifconfig/brconfig merge
spotted by Pieter Verberne
ok camield
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.227 2012/03/18 23:37:08 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: March 18 2012 $
d259 4
a262 1
MTU can be configured on a per-vlan basis.
d265 1
a265 1
.Xr vlan
a429 1
.Pp
@


1.227
log
@clarify the nwkey text; requested by Doug Fordham
ok jsg
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.226 2012/02/02 12:34:37 benno Exp $
d34 1
a34 1
.Dd $Mdocdate: February 2 2012 $
a519 7
Alias for
.Cm delete .
.It Cm deladdr Ar address
Delete
.Ar address
from the cache.
.It Cm delete Ar interface
d525 4
@


1.226
log
@add netflow v9/ipfix support to pflow(4).
large parts written by Florian Obser (florian -at- narrans -dot- de).
feedback from sperreault@@ gollo@@ sthen@@
ok from gollo@@ dlg@@ henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.225 2011/12/04 06:26:10 haesbaert Exp $
d34 1
a34 1
.Dd $Mdocdate: December 4 2011 $
d943 7
a949 2
The length of each key must be either 40 bits, i.e. a 5-character string or
10 hexadecimal digits or 104 bits (13-character).
@


1.225
log
@Cleanup recently removed flags from ifconfig.c and its manpage.

ok jmc@@ mikeb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.224 2011/11/27 19:55:18 haesbaert Exp $
d34 1
a34 1
.Dd $Mdocdate: November 27 2011 $
d1189 2
d1195 3
d1222 3
@


1.224
log
@Manpage bits for the recent changes in vlan(4) prio handling.

ok jmc henning sthen claudio
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.223 2011/11/02 20:01:59 haesbaert Exp $
d34 1
a34 1
.Dd $Mdocdate: November 2 2011 $
a257 3
.It Sy IPSEC
The device supports
.Xr ipsec 4 .
a263 2
.It Sy IPCOMP
The device supports IP compression.
@


1.223
log
@Properly document hwfeatures.

ok jcm@@ henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.222 2011/11/02 08:13:39 jmc Exp $
a1467 1
.Op Cm vlanprio Ar vlan-priority
a1505 6
.It Cm vlanprio Ar vlan-priority
Set the vlan priority value
to
.Ar vlan-priority .
This value is a 3-bit number which is used to create an 802.1Q
vlan header for packets sent from the vlan interface.
@


1.222
log
@this list is sorted alphabetically;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.221 2011/11/02 02:03:47 haesbaert Exp $
d249 27
a275 1
Display the interface hardware features.
@


1.221
log
@Expose if_capabilities to userland so that ifconfig can display the
device hardware features.
Tune ifconfig to show them with 'hwfeatures' argument.
While here, kill some old unused capabilities and respect 80 columns
in brconfig.h.

ok mcbride@@, henning@@, mpf@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.220 2011/10/25 11:39:07 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: October 25 2011 $
a158 2
.It Cm hwfeatures
Display the interface hardware features.
d248 2
@


1.220
log
@document some limits of "group-name"; from Steffen Daode Nurpmeso
ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.219 2011/07/09 08:44:54 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: July 9 2011 $
d159 2
@


1.219
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.218 2011/07/09 00:45:40 henning Exp $
d209 2
d213 1
a213 2
For instance, such a group could be used to create a hardware
independent
@


1.218
log
@rmove rotten netatalk bits
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.217 2011/06/27 12:55:21 camield Exp $
d34 1
a34 1
.Dd $Mdocdate: June 27 2011 $
d115 1
a115 1
.Dq inet ,
@


1.217
log
@vlan parent devices do not have to be physical, and they can be
changed on the fly now.

ok sthen deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.216 2011/03/13 21:24:20 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: March 13 2011 $
a115 1
.Dq inet6 ,
d117 1
a117 1
.Dq atalk .
a126 10
.Pp
AppleTalk (LLAP) addresses are specified as
.Dq nn.na
.Pq Dq Network Number.Node Address .
Node addresses are divided into two classes: User Node IDs and Server Node IDs.
1\(en127($01\(en$7F) are for User Node IDs while 128\(en254($80\(en$FE)
are used for Server Node IDs.
Node 0($00) is not allowed (unknown)
while Node 255($FF) is reserved for the AppleTalk broadcast hardware
address (broadcast ID).
a262 9
.It Cm ipdst Ar addr
This is used to specify an Internet host which is willing to receive
IP packets encapsulating AppleTalk packets bound for a remote network.
An apparent point-to-point link is constructed, and
the address specified will be taken as the address and network
of the destination.
IP encapsulation of Connectionless Network Protocol
(``CLNP'')
packets is done differently.
a360 6
.It Cm phase Ar n
The argument
.Ar n
specifies the version (phase) of the
AppleTalk network attached to the interface.
Values of 1 or 2 are permitted.
a372 9
.It Cm range Ar netrange
Under AppleTalk, set the interface to respond to a
.Ar netrange
of the form
.Dq startnet-endnet .
AppleTalk uses this scheme instead of
netmasks though
.Ox
implements it internally as a set of netmasks.
@


1.216
log
@consistently use "Wake on LAN (WoL)"; i don;t care if anyone wants to
change that, but let's keep it consistent;

ok stsp
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.215 2011/03/13 16:11:06 stsp Exp $
d1490 2
a1491 2
Associate with physical interface
.Ar iface .
d1493 2
a1494 2
diverted to the specified physical interface
.Ar iface
a1508 4
If the vlan interface already has
a physical interface associated with it, this command will fail.
To change the association to another physical interface, the existing
association must be cleared first.
d1510 1
a1510 1
Disassociate from the physical interface.
@


1.215
log
@s/can be/are/ in previous; from jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.214 2011/03/13 15:31:41 stsp Exp $
d440 2
a441 2
Enable Wake On LAN (WOL).
When enabled, reception of a WOL frame will cause the network card to
d443 1
a443 1
WOL frames are sent using
d446 2
a447 2
Disable WOL.
WOL is disabled at boot by the driver, if possible.
@


1.214
log
@Add a way to enable/disable Wake On LAN with ifconfig.
ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.213 2011/02/17 08:32:29 camield Exp $
d34 1
a34 1
.Dd $Mdocdate: February 17 2011 $
d443 1
a443 1
WOL frames can be sent using
@


1.213
log
@Clarify that ifconfig tries to show interface groups before type "groups".

ok henning jmc miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.212 2010/12/23 08:54:59 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: December 23 2010 $
d438 10
@


1.212
log
@spelling fixes; from Daniel Dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.211 2010/11/01 05:24:58 deraadt Exp $
d34 1
a34 1
.Dd $Mdocdate: November 1 2010 $
d100 8
a107 6
In this case, all interfaces of that type will be displayed.
For example,
.Dq carp
will display the current configuration of all
.Xr carp 4
interfaces.
@


1.211
log
@add support for (full length only) hex keys to the wpakey code.  for the
remainder of the 4.8->4.9 transition, alias wpapsk to wpakey (since
it swings both ways)
ok damien halex tedu
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.210 2010/10/18 22:30:29 halex Exp $
d34 1
a34 1
.Dd $Mdocdate: October 18 2010 $
d1324 1
a1324 1
The following options are availble for an
@


1.210
log
@document the new wpakey option
prodded by deraadt@@
"tweak previous" expected... ;-)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.209 2010/08/08 20:36:58 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: August 8 2010 $
d854 1
a854 1
.Op Oo Fl Oc Ns Cm wpakey Ar key
a855 1
.Op Oo Fl Oc Ns Cm wpapsk Ar psk
a995 2
or
.Cm wpapsk
d1042 5
a1046 3
.It Cm wpakey Ar key
Set the WPA passphrase and enable WPA.
The
d1052 1
a1052 1
will hash the nwid along with the passphrase.
a1072 29
.It Cm wpapsk Ar psk
Set the hashed 256-bit pre-shared WPA key.
The pre-shared key must be specified using a series of 64 hexadecimal digits
(preceded by
.So 0x Sc ) .
The pre-shared key will be used only if
.Dq psk
authentication is allowed using the
.Cm wpaakms
option.
Pre-shared keys can be generated from passphrases using
.Xr wpa-psk 8 ,
as in the following example, which configures wpi0 to join network
.Dq my_net
using WPA-PSK with passphrase
.Dq my_passphrase :
.Bd -literal -offset indent
# ifconfig wpi0 nwid my_net wpa wpapsk \e
        `wpa-psk my_net my_passphrase`
.Ed
.Pp
However, you are likely much better off just using the
.Cm wpakey
option instead.
.It Fl wpapsk
Delete the pre-shared key.
This will prevent
.Dq psk
authentication.
@


1.209
log
@get the mark up for `|' correct;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.208 2010/07/18 15:37:37 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: July 18 2010 $
d854 1
d996 2
d1045 11
d1075 1
a1075 1
Set the 256-bit pre-shared key.
d1094 4
@


1.208
log
@get the markup right for [-]command
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.207 2010/07/16 16:10:20 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: July 16 2010 $
d291 1
a291 1
.It Cm lladdr Ar etheraddr\*(Ba Ns Cm random
@


1.207
log
@fix up the mini synopses in the subsections; fix from ingo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.206 2010/07/08 06:54:51 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: July 8 2010 $
d751 1
a751 1
.Op Oo Fl Oc Cm carppeer Ar peer_address
d842 2
a843 2
.Op Oo Fl Oc Cm bssid Ar bssid
.Op Oo Fl Oc Cm chan Op Ar n
d845 3
a847 3
.Op Oo Fl Oc Cm nwid Ar id
.Op Oo Fl Oc Cm nwkey Ar key
.Op Oo Fl Oc Cm powersave Op Ar duration
d849 2
a850 2
.Op Oo Fl Oc Cm txpower Ar dBm
.Op Oo Fl Oc Cm wpa
d855 1
a855 1
.Op Oo Fl Oc Cm wpapsk Ar psk
d1092 2
a1093 2
.Op Oo Fl Oc Cm anycast
.Op Oo Fl Oc Cm autoconfprivacy
d1096 1
a1096 1
.Op Oo Fl Oc Cm tentative
d1202 2
a1203 2
.Op Oo Fl Oc Cm flowdst Ar addr : Ns Ar port
.Op Oo Fl Oc Cm flowsrc Ar addr
d1235 1
a1235 1
.Op Oo Fl Oc Cm defer
d1237 2
a1238 2
.Op Oo Fl Oc Cm syncdev Ar iface
.Op Oo Fl Oc Cm syncpeer Ar peer_address
d1289 1
a1289 1
.Op Oo Fl Oc Cm pppoeac Ar access-concentrator
d1291 1
a1291 1
.Op Oo Fl Oc Cm pppoesvc Ar service
d1473 1
a1473 1
.Op Oo Fl Oc Cm vlandev Ar parent-interface
@


1.206
log
@802.1X is unsupported; from Christopher Zimmermann (tweaked
version of his diff to tech@@ committed);
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.205 2010/06/29 21:28:38 reyk Exp $
d34 1
a34 1
.Dd $Mdocdate: June 29 2010 $
d742 2
a744 1
.Bk -words
d756 1
d838 2
a840 1
.Bk -words
d857 1
d1088 2
a1090 1
.Bk -words
d1099 1
d1231 2
a1233 1
.Bk -words
d1240 1
d1278 2
a1280 1
.Bk -words
d1293 1
d1322 2
d1333 2
d1415 2
a1417 1
.Bk -words
d1424 1
d1468 2
a1470 1
.Bk -words
d1476 1
@


1.205
log
@Replace enc(4) with a new implementation as a cloner device.  We still
create enc0 by default, but it is possible to add additional enc
interfaces.  This will be used later to allow alternative encs per
policy or to have an enc per rdomain when IPsec becomes rdomain-aware.

manpage bits ok jmc@@
input from henning@@ deraadt@@ toby@@ naddy@@
ok henning@@ claudio@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.204 2010/06/27 21:03:59 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: June 27 2010 $
d985 2
a986 1
an external IEEE 802.1X authentication server.
@


1.204
log
@tweak previous; ok claudio
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.203 2010/06/26 19:51:12 claudio Exp $
d34 1
a34 1
.Dd $Mdocdate: June 26 2010 $
d174 1
@


1.203
log
@Add a way to enable and set the keepalive parameters for gre(4).
OK deraadt, reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.202 2010/05/28 13:23:43 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 28 2010 $
d1403 1
a1403 1
.Op Oo Fl Oc Ns Cm keepalive Ar period Ar count
d1412 1
a1412 1
.It Cm keepalive Ar period Ar count
d1426 1
a1426 1
is 2 since the round-trip time of keepalive packets is not accounted.
@


1.202
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.201 2010/05/28 12:20:06 claudio Exp $
d1403 1
d1412 19
@


1.201
log
@Add mpls/-mpls commands to enable MPLS label switching on an interface.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.200 2010/05/07 06:17:34 claudio Exp $
d34 1
a34 1
.Dd $Mdocdate: May 7 2010 $
d351 2
a352 2
Enable Multiprotocol Label Switching (MPLS) on the interface. It will be
able to send and receive MPLS traffic.
@


1.200
log
@Add faith(4) to the list of clonable devices even though it is not enbaled
by default. Diff by J.C. Roberts
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.199 2010/04/12 01:26:29 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: April 12 2010 $
d350 5
@


1.199
log
@a little more tidying and excess word reduction.  ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.198 2010/04/11 18:03:06 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: April 11 2010 $
d174 1
@


1.198
log
@use .Pp to split up this huge text chunk;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.197 2010/04/11 17:56:44 jmc Exp $
d75 1
a75 1
The options are as follows:
a486 3
See
.Xr bridge 4
for more details.
d848 1
a848 3
The following options are available for a
wireless
interface:
d851 1
a851 1
Set the desired BSSID for IEEE 802.11-based wireless network interfaces.
d853 1
a853 1
Unset the desired BSSID for IEEE 802.11-based wireless network interfaces.
d857 1
a857 2
Set the channel (radio frequency) to be used for IEEE 802.11-based
wireless network interfaces to
d863 1
a863 2
Unset the desired channel to be used for IEEE 802.11-based wireless
network interfaces.
d866 1
a866 1
Set a specified flag for the wireless network interface.
d895 1
a895 1
Remove a specified flag for the wireless network interface.
d897 1
a897 1
Configure network ID for IEEE 802.11-based wireless network interfaces.
d909 1
a909 2
Enable WEP encryption for IEEE 802.11-based wireless network interfaces
using the specified
d934 1
a934 1
Disable WEP encryption for IEEE 802.11-based wireless network interfaces.
d936 1
a936 2
Enable WEP encryption for IEEE 802.11-based wireless network interfaces
with the persistent key stored in the network card.
d941 1
a941 2
enable WEP encryption for IEEE 802.11-based wireless network interfaces
using that
d952 1
a952 1
Set the transmit power for IEEE 802.11-based wireless network interfaces.
d1011 1
a1011 1
Set the group cipher to be used to encrypt broadcast and multicast traffic.
d1147 1
a1147 2
The following options are available for
interface groups:
d1291 1
a1291 3
Set the name of the access-concentrator for the
.Xr pppoe 4
interface.
a1295 1
.Xr pppoe 4
d1298 1
a1298 3
Set the service name of the
.Xr pppoe 4
interface.
d1314 1
a1314 1
The following options are available for an
d1316 2
d1401 1
a1401 3
The following options are available for a
tunnel
interface:
d1452 1
a1452 1
the associated vlan pseudo-interface.
@


1.197
log
@fix a hack that only worked with old groff;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.196 2010/04/11 17:51:30 jmc Exp $
d1117 1
@


1.196
log
@make the options blurb consistent;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.195 2010/04/11 17:14:37 tedu Exp $
d1198 1
a1198 2
.Oo Oo Fl Oc Cm flowdst Ar addr :
.Ar port Oc
@


1.195
log
@reduce redundant text in several sections.  ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.194 2010/04/06 14:12:10 stsp Exp $
d34 1
a34 1
.Dd $Mdocdate: April 6 2010 $
d469 3
a471 3
Bridges have many configuration options as well as a rudimentary
filtering language.
They are as follows:
d754 1
a754 1
pseudo-device:
d851 3
a853 1
The options are as follows:
d1097 3
a1099 1
The options are as follows:
d1156 2
a1157 1
The options are as follows:
d1186 1
a1186 1
pseudo-device:
d1202 3
a1204 1
The options are as follows:
d1239 1
a1239 1
pseudo-device:
d1296 4
a1299 1
The options are as follows:
d1330 3
a1332 1
The options are as follows:
d1390 1
a1390 1
pseudo-device:
d1415 3
a1417 1
The options are as follows:
d1450 1
a1450 1
pseudo-device:
@


1.194
log
@Simple implementation of RFC4941, "Privacy Extensions for Stateless
Address Autoconfiguration in IPv6". For those among us who are paranoid
about broadcasting their MAC address to the IPv6 internet.

Man page help from jmc, testing by weerd, arc4random API hints from djm.

ok deraadt, claudio
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.193 2010/04/02 21:16:24 deraadt Exp $
d34 1
a34 1
.Dd $Mdocdate: April 2 2010 $
d752 3
a754 1
The options are as follows:
d757 1
a757 3
If the driver is a
.Xr carp 4
pseudo-device, set the base advertisement interval to
d762 1
a762 3
If the driver is a
.Xr carp 4
pseudo-device, skew the advertisement interval by
d766 1
a766 3
If the driver is a
.Xr carp 4
pseudo-device, set the load balancing mode to
d775 1
a775 3
If the driver is a
.Xr carp 4
pseudo-device, create a load balancing group consisting of up to 32 nodes.
d780 1
a780 3
If the driver is a
.Xr carp 4
pseudo-device, attach it to
d785 1
a785 3
If the driver is a
.Xr carp 4
pseudo-device, send the carp advertisements to a specified
d798 1
a798 3
If the driver is a
.Xr carp 4
pseudo-device, send the advertisements to the default carp multicast
d801 1
a801 3
If the driver is a
.Xr carp 4
pseudo-device, set the authentication key to
d805 1
a805 3
Explicitly force the
.Xr carp 4
pseudo-device to enter this state.
d812 1
a812 3
If the driver is a
.Xr carp 4
pseudo-device, set the virtual host ID to
d1179 3
a1181 1
The options are as follows:
d1184 1
a1184 3
If the interface is a
.Xr mpe 4
pseudo-interface, set the MPLS label to
d1230 3
a1232 1
The options are as follows:
d1244 1
a1244 3
If the driver is a
.Xr pfsync 4
pseudo-device, indicate the maximum number
d1248 1
a1248 3
If the driver is a
.Xr pfsync 4
pseudo-device, use the specified interface
d1251 1
a1251 4
If the driver is a
.Xr pfsync 4
pseudo-device, stop sending pfsync state
synchronisation messages over the network.
d1253 1
a1253 3
If the driver is a
.Xr pfsync 4
pseudo-device, make the pfsync link point-to-point rather than using
d1262 1
a1262 3
If the driver is a
.Xr pfsync 4
pseudo-device, broadcast the packets using multicast.
d1376 3
a1378 1
The options are as follows:
d1381 1
a1381 3
If the driver is a
.Xr trunk 4
pseudo-device, add the
d1385 1
a1385 3
If the driver is a
.Xr trunk 4
pseudo-device, remove the trunk port
d1388 2
a1389 1
If the driver is a
d1391 1
a1391 6
pseudo-device, set the trunk protocol.
Refer to the interface's driver-specific man page for a complete
list of the available protocols,
or use the following for a listing of choices:
.Pp
.Dl $ ifconfig interface media
d1434 3
a1436 1
The options are as follows:
d1439 1
a1439 3
If the interface is a
.Xr vlan 4
pseudo-interface, set the vlan tag value
d1446 2
a1447 5
If the interface is a
.Xr vlan 4
pseudo-device, associate physical interface
.Ar iface
with it.
d1470 1
a1470 4
If the driver is a
.Xr vlan 4
pseudo-device, disassociate the physical interface
from it.
d1474 1
a1474 3
If the interface is a
.Xr vlan 4
pseudo-interface, set the vlan priority value
@


1.193
log
@randomized mac addresses, avaliable via 'ifconfig $if lladdr random'.
Note that not all device drivers do the work of the SIOCSIFLLADDR ioctl
correctly, but this is just more reason to get them fixed.
ok beck kettenis
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.192 2009/11/23 19:58:10 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: November 23 2009 $
d1106 1
d1119 28
@


1.192
log
@rewrite the bridge "rule" option for clarity; tweaks/ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.191 2009/11/23 10:32:00 deraadt Exp $
d289 1
a289 1
.It Cm lladdr Ar etheraddr
d291 2
a292 1
This should be specified as six colon-separated hex values.
@


1.191
log
@correct bridge rule descriptions
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.190 2009/11/22 22:29:43 claudio Exp $
d34 1
a34 1
.Dd $Mdocdate: November 22 2009 $
d681 9
a689 1
.It Cm rule Ar "{ block|pass } { in|out| } on interface [src address] [dst address] [tag tagname]"
@


1.190
log
@The spanning priority is conflicting with the interface priority so it
got renamed to spanpriority.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.189 2009/11/22 22:01:55 deraadt Exp $
d468 3
a470 12
.Nm ifconfig
.Bk -words
.Ar bridge-interface Cm rule No {
.Cm block | pass No } {
.Cm in | out | in/out No } Cm on
.Ar interface
.Op Cm src Ar address
.Op Cm dst Ar address
.Op Cm tag Ar tagname
.Ek
.Pp
The options are as follows:
d681 1
a681 1
.It Cm rule Op Ar rulespec
@


1.189
log
@Move information describing the bridge and brconfig behaviour into
the relevant manual pages.  Functionality is described in the (4)
pages, controlling the functionality in ifconfig(8), and the hostname.if
gains the old bridgename.if(5) functionality.
ok claudio jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.188 2009/11/21 15:36:49 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: November 21 2009 $
a667 4
.It Cm priority Ar num
Set the spanning priority of this bridge to
.Ar num .
Defaults to 32768, minimum of 0, maximum of 61440.
d710 4
@


1.188
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.187 2009/11/21 14:09:40 claudio Exp $
a63 3
To configure a bridge interface, use the
.Xr brconfig 8
program instead.
d436 2
d465 270
@


1.187
log
@Add new option tunneldomain to ifconfig to specify the routing table
to be used for sending out gre/gif encoded packets. OK deraadt@@, henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.186 2009/11/15 21:35:45 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: November 15 2009 $
d1150 3
a1152 1
Use specified routing table id to use instead of the default table. 
d1156 2
a1157 2
can be set to any valid routing table id, the corresponding routing domain
is derived from this table.
@


1.186
log
@vether(4) interfaces can be created too; ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.185 2009/11/09 21:45:54 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: November 9 2009 $
d1135 1
d1149 7
@


1.185
log
@pfsync devices can be dynamically created too; from vladimir kirillov
ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.184 2009/08/13 19:33:13 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: August 13 2009 $
d189 1
@


1.184
log
@remove description of link0 for vlan interfaces; this part missed when
vlan link0 was replaced with IFCAP_VLAN_HWTAGGING in 2001.

prompted by a mail from Insan Praja.  ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.183 2009/06/23 18:48:07 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: June 23 2009 $
d183 1
@


1.183
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.182 2009/06/19 14:05:32 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: June 19 2009 $
a1194 10
.Pp
Note: if the
.Ar link0
flag is set on the vlan interface, the vlan pseudo-interface's
behavior changes;
.Ar link0
tells the vlan interface that the
parent interface supports insertion and extraction of vlan tags on its
own (usually in firmware) and that it should pass packets to and from
the parent unaltered.
@


1.182
log
@after long discussion with many...
ifconfig <if> inet6 used to print all inet6 addresses, and last not least
the installer relies on that behaviour. so don't. to turn inet6 on again
you have to assign any inet6 address or run rtsol.
nobody happy about this asymmetry, but that is the best we could come up
with for now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.181 2009/06/19 09:43:49 sthen Exp $
d261 1
a261 3
To turn
.Xr inet6 4
on again assign any inet6 address or run
d951 1
a951 1
Defer transmission of the first packet in a state until a peer has 
@


1.181
log
@Document the defer option for pfsync(4) interfaces. ok dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.180 2009/06/05 06:54:25 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: June 5 2009 $
a254 5
.It Cm inet6
Turn
.Xr inet6 4
on and assign a link-local address.
This is the default.
d261 4
@


1.180
log
@seperate -> separate
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.179 2009/06/05 04:09:15 claudio Exp $
d945 1
d953 9
@


1.179
log
@Document rdomain
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.178 2009/06/04 19:15:26 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: June 4 2009 $
d405 1
a405 1
Interfaces in different routing domains are seperated and can not directly
@


1.178
log
@i care about theo's hydration level. make him stop whining by documenting
inet6/-inet6
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.177 2009/02/16 08:14:24 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: February 16 2009 $
d402 6
@


1.177
log
@sync the wpa example with those in the driver pages, as pointed out
by damien;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.176 2009/02/15 17:33:13 blambert Exp $
d34 1
a34 1
.Dd $Mdocdate: Febuary 15 2009 $
d255 11
@


1.176
log
@Give an example of how to use wpa-psk(8) to connect to WPA
networks in the wpapsk section of the page.

ok deraadt@@ henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.175 2009/02/15 08:34:36 damien Exp $
d34 1
a34 1
.Dd $Mdocdate: February 15 2009 $
d801 8
a808 4
as in the following example, which sets interface wpi0 to use WPA with SSID 
\&"wlan\&" and passphrase \&"supersecret\&":
.Pp
.Dl # ifconfig wpi0 wpa wpapsk `wpa-psk wlan supersecret`
@


1.175
log
@make "ifconfig if0 chan" list the channels supported by the device.
add "ifconfig if0 scan" to scan for access points or to list known
stations in Host AP mode.
remove the [-]wmm command while i'm here.  QoS is mandatory with
802.11n so there's not much point into making it an option.
fix parsing of the "powersave" command too.

discussed with deraadt@@
man page hints from jmc@@
display hints from sobrado@@
"i like it" cnst@@, grange@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.174 2009/02/13 17:24:54 damien Exp $
d34 1
a34 1
.Dd $Mdocdate: February 13 2009 $
d800 5
a804 1
.Xr wpa-psk 8 .
@


1.174
log
@Change ifconfig wpaakms default setting to `psk' instead of `psk,802.1x'.
Some supplicants will autoselect 802.1X without giving users the
possibility to choose between PSK or 802.1X.

Similarly, no longer announce `PSK with SHA-256 based KDF' AKMP (defined
in Draft 802.11w) by default in the RSN IE of beacons and probe responses
as it confuses some broken supplicants.  This kind of sacrifies security
for interoperability with shitty (but unfortunately widespread) clients
that do not follow the 802.11 standard properly.
This fixes associations from Intel PROSet on XP and also reportedly fixes
some Mac OS clients.  I will likely make `psk-sha256' configurable through
ifconfig wpaakms after the 4.5 release.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.173 2008/12/12 22:09:26 claudio Exp $
d34 1
a34 1
.Dd $Mdocdate: December 12 2008 $
d574 1
a575 1
.Op Oo Fl Oc Cm wmm
d598 1
a598 2
show the results of an access point scan.
In Host AP mode, this will dump the list of known nodes without scanning.
d689 3
a698 18
.It Cm wmm
Enable Wi-Fi Multimedia (WMM).
WMM is a Wi-Fi Alliance protocol based on the IEEE 802.11e standard and
provides basic Quality of Service (QoS) features to Wi-Fi networks.
For a station, this option enables the use of QoS if the access point
supports it but it does not prevent the association to an access point
not supporting QoS.
In Host AP mode, this option allows QoS stations to negotiate QoS during
association.
Notice that not all drivers support QoS.
Check the driver's manual page to know if this option is supported.
QoS priorities can be defined using VLANs (see the
.Cm vlanprio
option).
Otherwise, the IEEE 802.11 layer will automatically assign priorities to
frames based on the Differentiated Services Codepoint field of IP packets.
.It Fl wmm
Disable Wi-Fi Multimedia.
d1210 1
a1210 1
.Dl # ifconfig bwi0 chan
@


1.173
log
@ifconfig(8) part to make it possible to set an interface priority.
OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.172 2008/10/20 09:58:17 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: October 20 2008 $
d737 1
a737 1
.Dq psk,802.1x .
@


1.172
log
@add an example of how to scan for wireless networks, since it is not
immediately obvious from reading the main text or the wireless pages;

i killed the "ifconfig gif1 destroy" example to do this, since i want to
keep EXAMPLES relatively short, and we already provide an example of
how to create an interface;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.171 2008/09/30 13:11:48 deraadt Exp $
d34 1
a34 1
.Dd $Mdocdate: September 30 2008 $
d375 7
@


1.171
log
@compress powersleep commands into one; ok damien
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.170 2008/09/10 14:54:47 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 10 2008 $
d1217 1
a1217 1
Destroy the gif1 network interface:
d1219 1
a1219 1
.Dl # ifconfig gif1 destroy
@


1.170
log
@some pflow tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.169 2008/09/09 14:00:51 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: September 9 2008 $
d566 1
a566 2
.Op Oo Fl Oc Cm powersave
.Op Cm powersavesleep Ar duration
d678 1
a678 1
.It Cm powersave
d680 1
a682 2
.It Cm powersavesleep Ar duration
Set the receiver sleep duration (in milliseconds) for 802.11 power saving mode.
@


1.169
log
@document pflow stuff, Joerg Goltermann <jg@@osn.de> with some changes by me
(I am sure jmc will make this even betterer)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.168 2008/09/07 18:58:35 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 7 2008 $
d900 2
a901 1
.Op Oo Fl Oc Cm flowdst Ar addr:port
d906 4
a909 2
.It Cm flowdst Ar addr:port
set the receiver address and the port for the pflow packets.
d911 4
a914 1
addr is the IP address and port is the port number of the flow collector.
d917 1
a917 1
unset the receiver address and stop sending pflow data.
d919 4
a922 3
set the source IP adress for the pflow packets.
addr is the IP address used as sender of the UDP packets and may be used to
identify the source on the pflow collector.
d924 1
a924 1
unset the source address.
@


1.168
log
@update wireless synopsis too: nwid requires an argument, chan does not;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.167 2008/09/07 18:52:15 jmc Exp $
d182 1
d426 2
d895 23
@


1.167
log
@nwid requires an arg; ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.166 2008/09/07 06:45:51 jmc Exp $
d559 1
a559 1
.Op Oo Fl Oc Cm chan Ar n
d561 1
a561 1
.Op Oo Fl Oc Cm nwid Op Ar id
@


1.166
log
@- say what "media" w/o args does
- chan argument is n, not id
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.165 2008/09/07 02:22:34 deraadt Exp $
d626 1
a626 1
.It Cm nwid Op Ar id
@


1.165
log
@Allow some set-style commands to have zero arguments.  If there is an
argument after that command, check if it is a keyword, and if it is,
that means the original command really has no argument. Get it?
Now.. replace -m with media (no options), and -M with chan (no options).
Try 'ifconfig -a media chan' on a wireless & ethernet machine after this.
ok henning, reyk, thanks for the comments from others
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.164 2008/07/29 18:20:02 damien Exp $
d34 1
a34 1
.Dd $Mdocdate: July 29 2008 $
d287 3
d588 2
a589 3
With no
.Ar id
specified, show the results of an access point scan.
@


1.164
log
@s/affect/assign/ in wmm option.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.163 2008/07/19 15:55:07 brad Exp $
d34 1
a34 1
.Dd $Mdocdate: July 19 2008 $
d42 1
a42 1
.Op Fl AaCm
a93 6
.It Fl m
Print media information for a given interface.
When combined with the
.Fl Aa
options,
additionally prints media information for all interfaces.
d284 1
a284 1
.It Cm media Ar type
d306 1
a306 1
.Dl $ ifconfig -m interface
d316 1
a316 1
.Dl $ ifconfig -m interface
a553 1
.Op Fl M
d558 1
a558 1
.Op Oo Fl Oc Cm nwid Ar id
a573 3
.It Fl M
Show the results of an access point scan.
In Host AP mode, this will dump the list of known nodes without scanning.
d580 1
a580 1
.It Cm chan Ar n
d582 1
a582 1
wireless network interfaces from the given channel ID
d584 5
d624 1
a624 1
.It Cm nwid Ar id
d1068 1
a1068 1
.Dl $ ifconfig -m interface
@


1.163
log
@Correct missed capitalization of MPLS.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.162 2008/06/15 20:30:54 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: June 15 2008 $
d706 1
a706 1
Otherwise, the IEEE 802.11 layer will automatically affect priorities to
@


1.162
log
@put carppeer in the right place;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.161 2008/06/14 21:46:22 reyk Exp $
d34 1
a34 1
.Dd $Mdocdate: June 14 2008 $
d891 1
a891 1
pseudo-interface, set the mpls label to
@


1.161
log
@add carppeer; an option to specify a different multicast address or
even the unicast address of the remote carp peer. this especially
helps when the multicast carp advertisements are causing problems in
the network (some crappy switches don't do well with multicast), there
are conflicts with VRRP, or the policy of the network does not allow
multicast (most Internet eXchange points didn't allow carped OpenBGP
routers because of the multicast advertisements).

discussed with many
ok mpf@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.160 2008/05/07 11:57:19 claudio Exp $
d34 1
a34 1
.Dd $Mdocdate: May 7 2008 $
d454 1
a457 1
.Op Oo Fl Oc Cm carppeer Ar peer_address
d500 20
a540 20
.It Cm carppeer Ar peer_address
If the driver is a
.Xr carp 4
pseudo-device, send the carp advertisements to a specified
point-to-point peer or multicast group instead of sending the messages
to the default carp multicast group.
The
.Ar peer_address
is the IP address of the other host taking part in the carp cluster. 
With this option,
.Xr carp 4
traffic can be protected using
.Xr ipsec 4
and it may be desired in networks that do not allow or have problems
with IPv4 multicast traffic.
.It Fl carppeer
If the driver is a
.Xr carp 4
pseudo-device, send the advertisements to the default carp multicast
group.
@


1.160
log
@Remove references to routed.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.159 2008/05/07 07:11:52 jmc Exp $
d457 1
d521 20
@


1.159
log
@put the mpe bits in the right place;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.158 2008/05/07 02:43:45 pyr Exp $
d329 2
a330 6
The routing metric is used by the routing protocol
(see
.Xr routed 8 ) .
Higher metrics have the effect of making a route
less favorable; metrics are counted as addition hops
to the destination network or host.
@


1.158
log
@Document the new mpe interface and explain the appropriate commands
in ifconfig(8). The man pages reference mpls(8) which doesn't exist,
but claudio promises it will follow shortly.
a thumb up and ok from claudio@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.157 2008/04/18 17:01:50 damien Exp $
d34 1
a34 1
.Dd $Mdocdate: April 18 2008 $
d186 1
d193 1
a193 2
.Xr vlan 4,
.Xr mpe 4
d430 2
a446 2
.It
.Xr mpe 4
d863 16
a1151 18
.El
.\" MPE
.Sh MPE
.Nm ifconfig
.Bk -words
.Ar mpe-interface
.Op Cm mplslabel Ar mpls-label
.Ek
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Cm mplslabel Ar mpls-label
If the interface is a
.Xr mpe 4
pseudo-interface, set the mpls label to
.Ar mpls-label .
This value is a 20-bit number which will be used as the MPLS header for
packets entering the MPLS domain.
@


1.157
log
@remove wparekey from the list of 802.11 ifconfig options.

pointed out by drahn@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.156 2008/04/16 19:28:42 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: April 16 2008 $
d192 2
a193 1
.Xr vlan 4
d445 2
d1136 18
@


1.156
log
@- wpa-psk is section 8, not 1
- one more passphrase tweak
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.155 2008/04/16 18:32:15 damien Exp $
a556 1
.Op Cm wparekey Ar duration
@


1.155
log
@Kernel implementation of the 4-way handshake and group-key
handshake protocols (both supplicant and authenticator state
machines) as defined in the IEEE 802.11i standard.

Software implementation of the TKIP (Temporal Key Integrity
Protocol) and CCMP (CTR with CBC-MAC Protocol) protocols.

This diff doesn't implement any of the 802.1X authentication
protocols and thus only PSK authentication (using pre-shared
keys) is currently supported.

In concrete terms, this adds support for WPA-PSK and WPA2-PSK
protocols, both in station and hostap modes.

The following drivers are marked as WPA-capable and should
work:  bwi(4), malo(4), ral(4), iwn(4), wpi(4), ural(4),
rum(4), upgt(4), and zyd(4)

The following options have been added to ifconfig(8):
wpa, wpapsk, wpaprotos, wpaakms, wpaciphers, wpagroupcipher

wpa-psk(8) can be used to generate keys from passphrases.

tested by many@@
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.154 2008/03/19 08:44:54 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: March 19 2008 $
d791 2
a792 2
Pre-shared keys can be generated from pass-phrases using
.Xr wpa-psk 1 .
@


1.154
log
@document "netboot" interface group;
based on a diff originally from bsd openbsd rutgers edu
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.153 2008/02/11 07:58:28 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: February 11 2008 $
d550 8
d646 2
a647 4
For IEEE 802.11 wireless networks, the length of each key is restricted to
40 bits, i.e. a 5-character string or 10 hexadecimal digits.
WaveLAN/IEEE Gold and newer Prism cards will also accept a 104-bit
(13-character) key.
d673 125
@


1.153
log
@bump Mdocdate for pages committed in "febuary", necessary because
of a typo in rcs.c;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.152 2008/02/05 22:57:30 mpf Exp $
d34 1
a34 1
.Dd $Mdocdate$
d250 4
@


1.152
log
@Move carp load balancing (ARP/IP) to a simpler configuration scheme.
Instead of using the same IP on multiple interfaces, carp has to be
configured with the new "carpnodes" and "balancing" options.
 # ifconfig carp0 carpnodes 1:0,2:100,3:100 balancing ip carpdev sis0 192.168.5.50

Please note, that this is a flag day for anyone using carp balancing.
You'll need to adjust your configuration accordingly.

Addititionally this diff adds IPv6 NDP balancing support.

Tested and OK mcbride@@, reyk@@.
Manpage help by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.151 2007/11/09 15:07:08 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: November 9 2007 $
@


1.151
log
@talk about "vlan-tag" consistently; from Tero Koskinen
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.150 2007/10/20 15:12:51 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: October 20 2007 $
d448 2
d471 18
@


1.150
log
@document the "all" interface group; after some discussion w/ mpf and henning
diff from Okan Demirmen
ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.149 2007/09/03 01:24:22 krw Exp $
d34 1
a34 1
.Dd $Mdocdate: July 31 2007 $
d918 1
a918 1
.It Cm vlan Ar vlan_tag
d923 1
a923 1
.Ar vlan_tag .
@


1.149
log
@Typos from miod. 'specificed' -> 'specified' in some comments and man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.148 2007/07/31 06:41:04 pyr Exp $
d232 4
@


1.148
log
@oops, forgot to include the man page tweaks from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.147 2007/07/31 06:37:48 pyr Exp $
d280 1
a280 1
This should be specificed as six colon-separated hex values.
@


1.147
log
@When setting the vlandevice without specifying a tag, infer the tag
from the interface name, this allows constructs like:
	ifconfig vlan15 vlandev smth0

ok reyk@@, ``makes sense'' henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.146 2007/06/19 06:24:28 pyr Exp $
d34 1
a34 1
.Dd $Mdocdate: June 13 2007 $
d922 1
a922 1
This value can not be changed once it is set for an interface.
d945 1
a945 1
will be assigned the 802.1Q tag 5.
@


1.146
log
@Allow IPv6 addresses to use the CIDR notation too, no need for separate
prefixlen specification when using this form.
man page bits by jmc.

ok henning@@, ``looks sane'' djm@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.145 2007/06/14 18:31:50 reyk Exp $
d922 1
a922 5
Note that
.Cm vlan
and
.Cm vlandev
must both be set at the same time.
d938 1
d942 4
a945 1
must both be set at the same time.
@


1.145
log
@Add a new "rtlabel" option to ifconfig. It allows to specify a route label
which will be used for new interface routes. For example,
	ifconfig em0 10.1.1.0 255.255.255.0 rtlabel RING_1
will set the new interface address and attach the route label RING_1 to
the corresponding route.

manpage bits from jmc@@
ok claudio@@ henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.144 2007/06/13 06:46:26 henning Exp $
d127 4
a130 5
For the DARPA Internet family,
the address is either a host name present in the host name database,
.Xr hosts 5
or a DARPA
Internet address expressed in the Internet standard
d132 2
a134 8
.Pp
Internet version 6 addresses are either a host name present
in the host name database,
.Xr hosts 5 ,
or an Internet version 6 address in standard colon separated form, as
described in the
.Xr inet 3
manual page.
@


1.144
log
@allow IPv4 addresses to be specified in CIDR notation, no need for seperate
mask in that case. initially from rivo nurges <rix@@estpak.ee>, but changed
quite a bit. this has annoyed me so long that I wonder why I hadn't fixed
that earlier... input & ok markus deraadt, manpage also jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.143 2007/06/12 16:36:43 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d388 13
@


1.143
log
@just because sth is an abbreviation or acronym, does not mean it's
a tradename: zap erroneous .Tn
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.142 2007/06/12 16:25:44 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: June 12 2007 $
d129 5
a133 3
.Xr hosts 5 ,
or a DARPA Internet address expressed in the Internet standard
.Dq dot notation .
@


1.142
log
@zap some dead AF_NS bits; ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.141 2007/06/04 20:05:14 henning Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d127 1
a127 4
For the
.Tn DARPA
Internet
family,
d130 1
a130 3
or a
.Tn DARPA
Internet address expressed in the Internet standard
d141 1
a141 2
.Tn AppleTalk
(LLAP) addresses are specified as
d174 1
a174 3
.Tn DARPA
Internet
addresses and Ethernet addresses.
d292 1
a292 2
.Tn AUI
or twisted pair connectors.
@


1.141
log
@more ipx, spotted by jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.140 2007/05/31 19:19:44 jmc Exp $
a144 15
.Pp
For the Xerox Network Systems(tm) and Internetwork Packet Exchange families,
addresses are of the form
.Dq net:a.b.c.d.e.f ,
where
.Dq net
is the assigned network number (in decimal),
and each of the six bytes of the host number,
.Dq a
through
.Dq f ,
are specified in hexadecimal.
The host number may be omitted on Ethernet interfaces,
which use the hardware physical address,
and on interfaces other than the first.
@


1.140
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.139 2006/12/20 09:49:05 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate$
a123 1
.Dq atalk ,
d125 1
a125 1
.Dq ipx .
a159 4
.Tn IPX
addresses are specified as listed in the
.Xr ipx 3
manual page.
a180 7
.It Xo
.Cm 802.2 \*(Ba 802.2tr \*(Ba 802.3 \*(Ba
.Cm snap \*(Ba EtherII
.Xc
Set the
.Xr ipx 3
frame type to be either 802.2, 802.2tr, 802.3, snap, or Ethernet II.
d289 1
a289 1
IP packets encapsulating IPX or AppleTalk packets bound for a remote network.
@


1.139
log
@make a list of default interface groups;
ok grange deraadt ray(plus tweaks) henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.138 2006/11/11 08:08:10 jmc Exp $
d34 1
a34 1
.Dd September 3, 1998
@


1.138
log
@EXAMPLES was getting too lengthy, so trim some of the ones that were
either obscure, bordering on the duplicate, or referring to pseudo
devices;

if you want examples for pseudo devices, put them in their
specific man page, please.

ok jcs
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.137 2006/11/10 20:04:24 mk Exp $
d269 5
a273 1
Cloned interfaces are members of their interface family group by default.
d276 4
a279 2
is a member of the PPP interface family group,
.Em ppp .
d283 5
@


1.137
log
@Add -nwid command to allow wireless interfaces to not prefer a specific
access point.  Does the same as nwid "" but since we have -nwkey for nwkey
etc. this is nice for consistency.

ok mbalmer reyk
man stuff also ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.136 2006/11/09 16:08:20 jmc Exp $
a994 1
.Xr inet 3
a999 15
Assign the
.Xr ipx 3
address of 12625920 specified in decimal to interface fxp0:
.Pp
.Dl # ifconfig fxp0 ipx 12625920
.Pp
Assign the AppleTalk network 39108 and server node 128 with a network
range of 39107\-39109 to interface fxp0 on a phase 2 AppleTalk network:
.Pp
.Dl # ifconfig fxp0 atalk 39108.128 range 39107-39109 phase 2
.Pp
Configure the xl0 interface to use 10baseT:
.Pp
.Dl # ifconfig xl0 media 10baseT
.Pp
a1007 10
Configure the vlan0 interface for IP address 192.168.254.1, vlan tag 4,
and vlan parent device fxp0:
.Pp
.Dl # ifconfig vlan0 192.168.254.1 vlan 4 vlandev fxp0
.Pp
Configure the carp0 interface for IP address 192.168.10.1, virtual host ID 1,
attached to the vlan0 interface:
.Pp
.Dl # ifconfig carp0 vhid 1 carpdev vlan0 192.168.10.1
.Pp
a1014 5
.Pp
Create and configure the trunk0 interface for IP address 192.168.23.1,
with the em0 and em1 trunk port interfaces:
.Pp
.Dl # ifconfig trunk0 create 192.168.23.1 trunkport em0 trunkport em1
@


1.136
log
@trim SEE ALSO: there is no need to list every pseudo-device
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.135 2006/10/25 11:52:57 jmc Exp $
d534 1
a534 1
.Op Cm nwid Ar id
d600 3
@


1.135
log
@add pflog to list of clonable devices; ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.134 2006/08/29 17:22:00 henning Exp $
a1048 7
.Xr inet 3 ,
.Xr ipx 3 ,
.Xr arp 4 ,
.Xr bridge 4 ,
.Xr carp 4 ,
.Xr gif 4 ,
.Xr gre 4 ,
d1051 1
a1051 1
.Xr lo 4 ,
a1052 8
.Xr pfsync 4 ,
.Xr ppp 4 ,
.Xr pppoe 4 ,
.Xr sl 4 ,
.Xr sppp 4 ,
.Xr trunk 4 ,
.Xr tun 4 ,
.Xr vlan 4 ,
a1055 1
.Xr brconfig 8 ,
d1057 1
a1057 1
.Xr routed 8
@


1.134
log
@allow a numeric argument to "carpdemote" to in-/decrease the demotion
counter by more than one. manpage help by jmc, ok mcbride mpf deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.133 2006/06/27 22:31:40 jmc Exp $
d226 1
@


1.133
log
@consistency fix and clip some trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.132 2006/06/27 20:55:51 reyk Exp $
d689 4
a692 1
.Op Oo Fl Oc Ns Cm carpdemote
d698 1
a698 1
.It Cm carpdemote
d701 6
a706 2
demote count for given interface group.
.It Fl carpdemote
d709 5
a713 1
demote count for given interface group.
@


1.132
log
@add the net80211 hostap options "nwflag hidenwid" for hidden SSID mode
and "nwflag nobridge" to prevent inter-station communications.
"hidenwid" will also work with wi(4) to replace the old -E 3 option of
wicontrol.

ok damien@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.131 2006/06/23 18:06:36 todd Exp $
d558 1
a558 1
It doesn't affect the channel to be created for IBSS or hostap mode.
d580 1
a580 1
and 
@


1.131
log
@-M clarity, ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.130 2006/06/22 21:02:12 jmc Exp $
d527 1
d532 1
d538 1
d559 31
@


1.130
log
@oops! i put -M in the wrong place;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.129 2006/06/12 10:44:54 jmc Exp $
d541 1
a541 1
In Host AP mode, this will dump the list of known nodes.
@


1.129
log
@- make the sub-sections a little more consistent in naming
- clarify what sppp is (from reyk)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.128 2006/06/12 09:48:24 jmc Exp $
d527 1
a528 1
.Op Fl M
@


1.128
log
@- add the sppp options to pppoe's synopsis
- for pppoe, note that it uses the sppp framework, and point to the
sppp section for a description of those options
- for sppp, avoid referring specifically to sppp devices, as other
devices, such as pppoe, may be using these options

this after some discussion with reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.127 2006/06/11 12:48:21 jmc Exp $
d431 1
a431 1
interface groups
d433 1
a433 1
IEEE 802.11 (wireless) devices
d435 1
a435 1
.Xr ip6 4
d442 1
a523 20
.\" GROUPS
.Sh GROUPS
.Nm ifconfig
.Fl g
.Ar group-name
.Op Oo Fl Oc Ns Cm carpdemote
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl g Ar group-name
Specify the group.
.It Cm carpdemote
Increase
.Xr carp 4
demote count for given interface group.
.It Fl carpdemote
Decrease
.Xr carp 4
demote count for given interface group.
.El
d525 1
a525 1
.Sh IEEE 802.11 (wireless devices)
d650 20
d759 1
a759 1
.Sh SPPP
@


1.127
log
@options are optional ;)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.126 2006/06/11 12:40:30 jmc Exp $
d718 7
d730 8
a776 1
.Xr sppp 4
a809 1
.Xr sppp 4
@


1.126
log
@split this page up into sections: it was getting too messy to read;
feedback/ok deraadt beck krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.125 2006/06/03 19:28:09 jmc Exp $
d42 1
a42 1
.Fl AaCm
@


1.125
log
@better synopsis for -g; ok mpf
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.124 2006/06/03 18:56:43 jmc Exp $
d42 1
a49 100
.Nm ifconfig
.Fl AaMm
.Op Ar address_family
.Nm ifconfig
.Fl C
.Nm ifconfig
.Fl g
.Ar group-name
.Op Oo Fl Oc Ns Cm carpdemote
.Nm ifconfig
.Ar interface
.Cm create
.Nm ifconfig
.Ar interface
.Cm destroy
.Nm
.Ar interface
.Cm group
.Ar group-name
.Nm ifconfig
.Ar carp-interface
.Cm vhid
.Ar host-id
.Cm carpdev
.Ar iface
.Nm ifconfig
.Ar pfsync-interface
.Cm syncpeer
.Ar peer_address
.Cm syncdev
.Ar iface
.Nm
.Ar pppoe-interface
.Oo
.Cm pppoedev
.Ar parent-interface
.Oc
.Oo
.Cm pppoesvc
.Ar service
.Oc
.Oo
.Cm pppoeac
.Ar access-concentrator
.Oc
.Nm
.Ar sppp-interface
.Oo
.Cm authproto
.Ar proto
.Oc
.Oo
.Cm authname
.Ar name
.Oc
.Oo
.Cm authkey
.Ar key
.Oc
.Oo
.Cm peerproto
.Ar proto
.Oc
.Oo
.Cm peername
.Ar name
.Oc
.Oo
.Cm peerkey
.Ar key
.Oc
.Oo
.Oo Fl Oc Ns Cm peerflag
.Ar flag
.Oc
.Nm ifconfig
.Ar trunk-interface
.Oo
.Oo Fl Oc Ns Cm trunkport
.Ar child-iface
.Oc
.Oo
.Cm trunkproto
.Ar proto
.Oc
.Nm ifconfig
.Ar tunnel-interface
.Cm tunnel
.Ar src_address dest_address
.Nm ifconfig
.Ar tunnel-interface
.Cm deletetunnel
.Nm ifconfig
.Ar vlan-interface
.Cm vlan
.Ar vlan-tag
.Cm vlanprio
.Ar vlan-priority
.Cm vlandev
.Ar parent-interface
d56 4
d61 1
a61 2
must be used at boot-time to define the network address
of each interface present on a machine; it may also be used at
a82 5
.It Fl Am
The same as the
.Fl A
option,
but additionally prints interface media information for all interfaces.
a89 5
.It Fl am
The same as the
.Fl a
option,
but additionally prints interface media information for all interfaces.
d94 33
a126 10
.It Fl g Ar group-name
Print or configure group attributes for a given
.Ar group-name .
.It Fl M
For the chosen IEEE 802.11-based wireless network interface, show the
results of an access point scan.
In Host AP mode, this will dump the list of known nodes.
.It Fl m Ar interface
Print media information for a given
.Ar interface .
d161 4
d171 1
a171 1
1\-127($01\-$7F) are for User Node IDs while 128\-254($80\-$FE)
a175 17
.Pp
.Tn IPX
addresses are specified as listed in the
.Xr ipx 3
manual page.
.It Ar address_family
Specifies the address family
which affects interpretation of the remaining parameters.
Since an interface can receive transmissions in differing protocols
with different naming schemes, specifying the address family is recommended.
The address or protocol families currently
supported are
.Dq inet ,
.Dq inet6 ,
.Dq atalk ,
and
.Dq ipx .
a178 15
.It Ar interface
The
.Ar interface
parameter is a string of the form
.Dq name unit ,
for example,
.Dq en0 .
If no optional parameters are supplied, this string can instead be just
.Dq name .
In this case, all interfaces of that type will be displayed.
For example,
.Dq carp
will display the current configuration of all
.Xr carp 4
interfaces.
d181 3
a183 1
The following parameters may be set with
d186 4
a189 1
.It Cm 802.2 802.2tr 802.3 snap EtherII
a192 27
.It Cm advbase Ar n
If the driver is a
.Xr carp 4
pseudo-device, set the base advertisement interval to
.Ar n
seconds.
This is an 8-bit number; the default value is 1 second.
.It Cm advskew Ar n
If the driver is a
.Xr carp 4
pseudo-device, skew the advertisement interval by
.Ar n .
This is an 8-bit number; the default value is 0.
.Pp
Taken together the
.Cm advbase
and
.Cm advskew
indicate how frequently, in seconds, the host will advertise the fact that it
considers itself master of the virtual host.
The formula is
.Cm advbase
+
.Pf ( Cm advskew
/ 256).
If the master does not advertise within three times this interval, this host
will begin advertising as master.
a201 6
.It Cm anycast
(inet6 only)
Set the IPv6 anycast address bit.
.It Fl anycast
(inet6 only)
Clear the IPv6 anycast address bit.
d203 1
a203 4
Enable the use of the Address Resolution Protocol
(``ARP'';
see
.Xr arp 4 )
a211 17
.It Cm authkey
(PPP devices only)
Set the client key or password for the PPP authentication protocol.
.It Cm authname
(PPP devices only)
Set the client name for the PPP authentication protocol.
.It Cm authproto Ar proto
(PPP devices only)
Set the PPP authentication protocol on the specified
.Xr sppp 4
interface acting as a client.
The protocol name can be either
.Ql chap ,
.Ql pap ,
or
.Ql none .
In the latter case, authentication will be turned off.
a216 33
.It Cm bssid Ar bssid
(IEEE 802.11 devices only)
Set the desired BSSID for IEEE 802.11-based wireless network interfaces.
.It Fl bssid
(IEEE 802.11 devices only)
Unset the desired BSSID for IEEE 802.11-based wireless network interfaces.
The interface will automatically select a BSSID in this mode, which is
the default.
.It Cm carpdemote
Increase
.Xr carp 4
demote count for given interface group.
.It Fl carpdemote
Decrease
.Xr carp 4
demote count for given interface group.
.It Cm carpdev Ar iface
If the driver is a
.Xr carp 4
pseudo-device, attach it to
.Ar iface .
If not specified, the kernel will attempt to select an interface with
a subnet matching that of the carp interface.
.It Cm chan Ar n
(IEEE 802.11 devices only)
Set the channel (radio frequency) to be used for IEEE 802.11-based
wireless network interfaces from the given channel ID
.Ar n .
.It Fl chan
(IEEE 802.11 devices only)
Unset the desired channel to be used for IEEE 802.11-based wireless
network interfaces.
It doesn't affect the channel to be created for IBSS or hostap mode.
a239 6
.It Cm deletetunnel
.Pf ( Xr gif 4
and
.Xr gre 4
devices only)
Remove the source and destination tunnel addresses.
a278 5
.It Cm eui64
(inet6 only)
Fill the interface index
.Pq the lowermost 64th bit of an IPv6 address
automatically.
a308 6
.It Cm maxupd Ar n
If the driver is a
.Xr pfsync 4
pseudo-device, indicate the maximum number
of updates for a single state which can be collapsed into one.
This is an 8-bit number; the default value is 128.
d329 2
a330 4
or use
.Bd -literal -offset indent
$ ifconfig -m interface
.Ed
d332 1
a332 1
for a listing of choices.
d339 2
a340 4
or use
.Bd -literal -offset indent
$ ifconfig -m interface
.Ed
d342 1
a342 1
for a listing of choices.
d390 203
a592 20
.It Cm nwid Ar id
(IEEE 802.11 devices only)
Configure network ID for IEEE 802.11-based wireless network interfaces.
The
.Ar id
can either be any text string up to 32 characters in length,
or a series of hexadecimal digits up to 64 digits.
The empty string allows the interface to connect to any available
access points.
Note that network ID is synonymous with Extended Service Set ID (ESSID).
.It Cm nwkey Ar key
(IEEE 802.11 devices only)
Enable WEP encryption for IEEE 802.11-based wireless network interfaces
using the specified
.Ar key .
The
.Ar key
can either be a string, a series of hexadecimal digits (preceded by
.So 0x Sc ) ,
or a set of keys
a612 1
(IEEE 802.11 devices only)
a614 1
(IEEE 802.11 devices only)
a617 1
(IEEE 802.11 devices only)
d624 85
a708 1
.It Cm pass Ar passphrase
d710 60
a769 4
.Xr carp 4
pseudo-device, set the authentication key to
.Ar passphrase .
There is no passphrase by default.
a770 1
(PPP devices only)
a788 1
(PPP devices only)
d790 1
a790 2
.It Cm peerkey
(PPP devices only)
d792 1
a792 2
.It Cm peername
(PPP devices only)
a794 1
(PPP devices only)
d804 10
a813 91
.It Cm phase Ar n
The argument
.Ar n
specifies the version (phase) of the
AppleTalk network attached to the interface.
Values of 1 or 2 are permitted.
.It Cm pltime Ar n
(inet6 only)
Set preferred lifetime for the address.
.It Cm powersave
(IEEE 802.11 devices only)
Enable 802.11 power saving mode.
.It Fl powersave
(IEEE 802.11 devices only)
Disable 802.11 power saving mode.
.It Cm powersavesleep Ar duration
(IEEE 802.11 devices only)
Set the receiver sleep duration (in milliseconds) for 802.11 power saving mode.
.It Cm pppoeac Ar access-concentrator
Set the name of the access-concentrator for the
.Xr pppoe 4
interface.
.It Fl pppoeac
Clear a previously set access-concentrator name.
.It Cm pppoedev Ar parent-interface
Set the name of the interface through which
.Xr pppoe 4
packets will be transmitted and received.
.It Cm pppoesvc Ar service
Set the service name of the
.Xr pppoe 4
interface.
.It Fl pppoesvc
Clear a previously set service name.
.It Cm prefixlen Ar n
(inet and inet6 only)
Effect is similar to
.Cm netmask ,
but you can specify prefix length by digits.
.It Cm range Ar netrange
Under AppleTalk, set the interface to respond to a
.Ar netrange
of the form
.Dq startnet-endnet .
AppleTalk uses this scheme instead of
netmasks though
.Ox
implements it internally as a set of netmasks.
.It Cm state Ar state
Explicitly force the
.Xr carp 4
pseudo-device to enter this state.
Valid states are
.Ar init ,
.Ar backup ,
and
.Ar master .
.It Cm syncdev Ar iface
If the driver is a
.Xr pfsync 4
pseudo-device, use the specified interface
to send and receive pfsync state synchronisation messages.
.It Fl syncdev
If the driver is a
.Xr pfsync 4
pseudo-device, stop sending pfsync state
synchronisation messages over the network.
.It Cm syncpeer Ar peer_address
If the driver is a
.Xr pfsync 4
pseudo-device, make the pfsync link point-to-point rather than using
multicast to broadcast the state synchronisation messages.
The peer_address is the IP address of the other host taking part in
the pfsync cluster.
With this option,
.Xr pfsync 4
traffic can be protected using
.Xr ipsec 4 .
.It Fl syncpeer
If the driver is a
.Xr pfsync 4
pseudo-device, broadcast the packets using multicast.
.It Cm tentative
(inet6 only)
Set the IPv6 tentative address bit.
.It Fl tentative
(inet6 only)
Clear the IPv6 tentative address bit.
.It Cm timeslot Ar timeslot_range
Set the timeslot range map, which is used to control which channels
an interface device uses.
d834 14
d855 13
a867 23
.It Cm txpower Ar dBm
(IEEE 802.11 devices only)
Set the transmit power for IEEE 802.11-based wireless network interfaces.
The driver will disable any auto level and transmit power controls in this
mode.
.It Fl txpower
(IEEE 802.11 devices only)
Disable manual transmit power mode and enable any auto level and transmit
power controls.
.It Cm up
Mark an interface
.Dq up .
This may be used to enable an interface after an
.Cm ifconfig down .
It happens automatically when setting the first address on an interface.
If the interface was reset when previously marked down,
the hardware will be re-initialized.
.It Cm vhid Ar n
If the driver is a
.Xr carp 4
pseudo-device, set the virtual host ID to
.Ar n .
Acceptable values are 1 to 255.
d881 1
a881 1
.It Cm vlandev Ar iface
a928 3
.It Cm vltime Ar n
(inet6 only)
Set valid lifetime for the address.
@


1.124
log
@groups are specified using -g, not -m; ok mpf
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.123 2006/06/03 14:55:47 jmc Exp $
d57 1
a57 1
.Op Ar group_parameters
@


1.123
log
@kill trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.122 2006/06/02 19:53:12 mpf Exp $
d200 3
a209 3
.It Fl m Ar group-name
Print or configure group attributes for a given
.Ar group-name .
@


1.122
log
@Introduce attributes to interface groups.
As a first user, move the global carp(4) demotion counter
into the interface group. Thus we have the possibility
to define which carp interfaces are demoted together.

Put the demotion counter into the reserved field of the carp header.
With this, we can have carp act smarter if multiple errors occur.
It now always takes over other carp peers, that are advertising
with a higher demote count.  As a side effect, we can also have
group failovers without the need of running in preempt mode.
The protocol change does not break compability with older
implementations.

Collaborative work with mcbride@@

OK mcbride@@, henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.121 2006/05/17 12:10:16 jmc Exp $
d386 1
a386 1
.Xr carp 4 
d390 1
a390 1
.Xr carp 4 
@


1.121
log
@various fixes;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.120 2006/05/17 03:29:55 reyk Exp $
d55 4
d207 3
d384 8
@


1.120
log
@implement support for sppp(4) in ifconfig. have a look at the updated
manual pages pppoe(4) and sppp(4) for examples.

the spppcontrol(8) utility is not required anymore and will probably
be removed in the near future.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.119 2006/04/12 14:15:03 aanriot Exp $
d347 6
a363 6
.It Cm authname
(PPP devices only)
Set the client name for the PPP authentication protocol.
.It Cm authkey
(PPP devices only)
Set the client key or password for the PPP authentication protocol.
d664 1
a664 1
once the the initial CHAP handshake was successful.
d670 6
a686 6
.It Cm peername
(PPP devices only)
Set the authenticator name for the PPP authentication protocol.
.It Cm peerkey
(PPP devices only)
Set the authenticator key or password for the PPP authentication protocol.
d767 1
a767 1
.Xr pfsync 4;5A
@


1.119
log
@add a few words about how groups of interfaces can be used.

help and ok henning@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.118 2006/02/21 17:07:14 jmc Exp $
d90 30
d347 17
d648 39
d767 1
a767 1
.Xr pfsync 4
d967 1
@


1.118
log
@improvements from claudio:

- note that "-alias" is a synonym for "delete", and encourage the latter
- make the description of "delete" clearer

ok claudio
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.117 2006/02/20 08:50:44 jmc Exp $
d397 6
@


1.117
log
@bit more consistent...
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.116 2006/02/20 08:46:02 jmc Exp $
d294 4
a297 1
Remove the specified network address alias.
d368 2
a369 3
Remove the network address specified.
This would be used if you incorrectly specified an alias, or it
was no longer needed.
@


1.116
log
@- note that "deletetunnel" is for gif(4) and gre(4) devices only
- remove some redundant text from "deletetunnel" description

help/ok claudio
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.115 2006/01/06 08:41:30 jmc Exp $
d373 1
a373 1
Removes the source and destination tunnel addresses.
@


1.115
log
@put the description of vlanprio in the correct place;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.114 2006/01/05 15:00:10 norby Exp $
d369 5
a373 2
Removes the source and destination tunnel addresses,
configured onto a tunnel interface.
@


1.114
log
@Make it possible to set a default vlan priority to a vlan interface.

ok claudio@@ brad@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.113 2005/12/29 19:35:12 reyk Exp $
a743 8
.It Cm vlanprio Ar vlan-priority
If the interface is a
.Xr vlan 4
pseudo-interface, set the vlan priority value
to
.Ar vlan-priority .
This value is a 3-bit number which is used to create an 802.1Q
vlan header for packets sent from the vlan interface.
d784 8
@


1.113
log
@mention the keywords "wireless network interface" for the -M switch;
consistency with other 802.11-specific commands descriptions.

thanks to Andreas Bihlmaier
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.112 2005/11/14 15:06:09 henning Exp $
d111 2
d744 8
@


1.112
log
@add -descr / -description to clear the interface description, noticed todd
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.111 2005/09/21 21:35:17 jmc Exp $
d165 2
a166 2
For the chosen 802.11 interfaces, show the results of an access point
scan.
@


1.111
log
@put description of `dest_address' in the right place;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.110 2005/06/14 03:54:31 henning Exp $
d373 2
@


1.110
log
@use "egress" instead of "external" for the interface group containing the
interfaces the default route(s) point to, proposed deraadt some days ago,
ok djm deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.109 2005/06/09 09:05:14 jmc Exp $
d233 3
a372 3
.It Ar dest_address
Specify the address of the correspondent on the other end
of a point-to-point link.
@


1.109
log
@note that nwid and essid are synonymous;
from walter goulet and clarified by reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.108 2005/06/08 19:03:55 henning Exp $
d395 1
a395 1
.Em external
@


1.108
log
@netns crap i missed earlier... damn unreliable tools
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.107 2005/06/07 23:12:17 henning Exp $
d535 1
@


1.107
log
@move description of the default groups to the ifconfog manpage
netintro should only give an intro, not the glory details :) theo ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.106 2005/05/31 20:54:38 jmc Exp $
a230 1
.Dq ipx ,
d232 1
a232 1
.Dq ns .
a362 3
If you have incorrectly set an NS address having the side effect
of specifying the host portion, removing all NS addresses will
allow you to respecify the host portion.
d415 1
a415 1
IP packets encapsulating NS packets bound for a remote network.
d417 1
a417 1
the address specified will be taken as the NS address and network
@


1.106
log
@tidy up the trunk stuff;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.105 2005/05/25 07:40:49 reyk Exp $
d392 9
a400 2
Interface groups are described in
.Xr netintro 4 .
@


1.105
log
@add ifconfig -M option to replace wicontrol -L and -l for ap scanning
and node listing. wicontrol is not supported by net80211 drivers
anymore. further improvements will be done.

ok dlg@@, jsg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.104 2005/05/24 02:45:18 reyk Exp $
d50 1
a50 1
.Fl aAmM
d93 1
a93 1
.Cm [-]trunkport
d166 2
a167 1
scan. In Host AP mode, this will dump the list of known nodes.
d690 1
a690 4
or use
.Bd -literal -offset indent
$ ifconfig -m interface
.Ed
d692 1
a692 1
for a listing of choices.
a832 1
.Pp
@


1.104
log
@initial import of a trunking (link aggregation and link failover)
implementation. it currently supports round robin mode with link state
checking, additional modes will be added later.

ok brad@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.103 2005/04/15 03:31:49 pascoe Exp $
d50 1
a50 1
.Fl A | Am | a | am
a54 4
.Fl m
.Ar interface
.Op Ar address_family
.Nm ifconfig
d164 3
@


1.103
log
@Inconsistency between man page and code, spotted by joel@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.102 2005/03/30 07:44:56 jmc Exp $
d95 10
d352 1
d673 23
d831 6
d858 1
@


1.102
log
@slightly reword lladdr description for clarity/readability;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.101 2005/03/30 02:55:37 tedu Exp $
d271 2
a272 2
.Cm ( advskew
/ 255 ).
@


1.101
log
@add lladdr command to ifconfig to set MAC address.  diffs from freebsd via
Kyunghwan KIM (prs 2117 and 2118) and Fredrik Widlund.  ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.100 2005/02/15 20:57:21 jmc Exp $
d419 2
a420 2
Change the link layer address of the interface (MAC address).
This should be specificed as six colon separated hex values.
@


1.100
log
@`tunnel' before `txpower' in the command list;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.99 2005/02/15 19:45:22 reyk Exp $
d418 3
@


1.99
log
@add txpower support to ifconfig

ok bob@@ robert@@ danh@@ and others
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.98 2005/01/20 17:52:53 mcbride Exp $
d659 7
a674 7
.It Cm tunnel Ar src_address dest_address
Set the source and destination tunnel addresses on a tunnel interface,
including
.Xr gif 4 .
Packets routed to this interface will be encapsulated in
IPv4 or IPv6, depending on the source and destination address families.
Both addresses must be of the same family.
@


1.98
log
@Document syncif->syncdev change. Also fix order of syncdev option
in ifconfig manpage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.97 2004/12/07 23:39:48 jmc Exp $
d659 9
@


1.97
log
@space between macro arg and punctuation;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.96 2004/12/07 21:03:52 mcbride Exp $
d78 1
a78 1
.Cm syncif
d625 10
a649 10
.It Cm syncif Ar iface
If the driver is a
.Xr pfsync 4
pseudo-device, use the specified interface
to send and receive pfsync state synchronisation messages.
.It Fl syncif
If the driver is a
.Xr pfsync 4
pseudo-device, stop sending pfsync state
synchronisation messages over the network.
@


1.96
log
@Document 'carpdev'
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.95 2004/12/07 10:26:49 jmc Exp $
d317 1
a317 1
.Ar iface.
@


1.95
log
@note that -a is the default if no params given;
`interface' is now optional;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.94 2004/12/07 00:10:05 deraadt Exp $
d72 2
d313 7
d773 2
a774 1
Configure the carp0 interface for IP address 192.168.10.1, virtual host ID 1:
d776 1
a776 1
.Dl # ifconfig carp0 vhid 1 192.168.10.1
@


1.94
log
@default to interface printing, instead of help message.  any illegal -
option goes to usage.  initial work by ian, changed by me, ok mcbride
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.93 2004/12/01 22:30:53 jmc Exp $
d42 1
a42 1
.Ar interface
d145 2
@


1.93
log
@not all interfaces support mtu setting;
ok tdeval@@ miod@@ nick@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.92 2004/12/01 09:59:35 jmc Exp $
d126 1
@


1.92
log
@- sort options
- tweak pppoe stuff
- add pppoe to `create' list

ok canacar@@ jaredy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.91 2004/11/28 23:39:45 canacar Exp $
d478 1
@


1.91
log
@In kernel pppoe client, a simple IPv4 only implementation.
Initial porting from NetBSD by David Berghoff.
Modified/simplified to match our sppp implementation.
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.90 2004/11/06 00:54:19 reyk Exp $
d64 4
a77 17
.Nm ifconfig
.Ar tunnel-interface
.Cm tunnel
.Ar src_address dest_address
.Nm ifconfig
.Ar tunnel-interface
.Cm deletetunnel
.Nm ifconfig
.Ar vlan-interface
.Cm vlan
.Ar vlan-tag
.Cm vlandev
.Ar parent-interface
.Nm
.Ar interface
.Cm group
.Ar group-name
d92 13
d328 1
d573 6
d580 3
a582 2
Set the name of the interface through which the pppoe packets
will be transmitted and received.
d584 3
a586 1
Set the service name of the pppoe interface.
a588 4
.It Cm pppoeac Ar access-concentrator
Set the name of the access-concentrator for pppoe interface.
.It Fl pppoeac
Clear a previously set access-concentrator name.
@


1.90
log
@added the "bssid" command to ifconfig, an extended ieee80211
status output and the missing man page entries for ifconfig.8
(from jared).

ok deraadt@@, henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.89 2004/08/22 23:39:00 jaredy Exp $
d91 14
d572 11
d784 1
@


1.89
log
@mention where more can be learned about ifgroups

prodded by jmc, idea from Michael Knudsen
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.88 2004/08/03 05:36:32 mcbride Exp $
d286 18
d447 12
@


1.88
log
@Allow a unicast ip address to be specified for pfsync with the 'syncpeer'
keyword. This address is used instead of the multicast address to send state
updates; this allows pairs of pfsync firewalls to protect the traffic
with IPSec.

ifconfig must be updated to match the kernel.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.87 2004/07/21 14:20:57 jaredy Exp $
d336 2
@


1.87
log
@use \- for number ranges
document new timeslot command

ok alex jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.86 2004/07/15 23:40:39 jmc Exp $
d70 2
d549 15
@


1.86
log
@remove references to removed pages: clnp(4), esis(4), and iso(4);
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.85 2004/06/25 18:58:38 pb Exp $
d180 1
a180 1
1-127($01-$7F) are for User Node IDs while 128-254($80-$FE)
d563 3
d659 1
a659 1
range of 39107-39109 to interface fxp0 on a phase 2 AppleTalk network:
@


1.85
log
@interface groups

mcbride@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.84 2004/06/24 20:47:50 henning Exp $
d357 1
a357 2
(``CLNP''; see
.Xr clnp 4 )
a698 1
.Xr clnp 4 ,
@


1.84
log
@iso is gone
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.83 2004/05/30 22:13:27 jmc Exp $
d85 4
d330 7
@


1.83
log
@interface description, tweaked by deraadt and jcs;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.82 2004/05/29 17:54:46 jcs Exp $
a170 8
For the
.Tn ISO
family, addresses are specified as a long hexadecimal string,
as in the Xerox family.
However, two consecutive dots imply a zero
byte, and the dots are optional, if the user wishes to (carefully)
count out long strings of digits in network byte order.
.Pp
a195 1
.Dq iso ,
d420 1
a420 1
(inet, inet6 and iso)
a436 27
.It Cm nsellength Ar n
.Pf ( Tn ISO
only)
This specifies a trailing number of bytes for a received
.Tn NSAP
used for local identification, the remaining leading part of which is
taken to be the
.Tn NET
(Network Entity Title).
The default value is 1, which is conformant to US
.Tn GOSIP .
When an ISO address is set in an
.Nm
command,
it is really the
.Tn NSAP
which is being specified.
For example, in
.Tn US GOSIP ,
20 hex digits should be
specified in the
.Tn ISO NSAP
to be assigned to the interface.
There is some evidence that a number different from 1 may be useful
for
.Tn AFI
37 type addresses.
a527 5
.It Cm snpaoffset Ar n
.Pf ( Tn ISO
only)
This is used to specify the subnetwork point of attachment offset for
CLNP packets.
a693 1
.Xr iso 4 ,
@


1.82
log
@introduce SIOCSIFDESCR and SIOCGIFDESCR to maintain interface
descriptions, configurable with ifconfig

help from various, ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.81 2004/05/18 10:54:07 otto Exp $
d320 1
a320 2
otherwise be difficult to identify
.Pq e.g. machines with many active interfaces .
@


1.81
log
@Trailers are really wonders of the past. Remove them from man page and
usage. ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.80 2004/04/27 21:13:09 jmc Exp $
d317 5
d699 4
@


1.80
log
@reworking of man page and sync/update usage();

this stuff is based mostly on diffs from jared yanovich, with some stuff
from myself and otto;

ok naddy@@ otto@@ markus@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.79 2004/03/18 20:52:13 mcbride Exp $
a589 21
.It Cm trailers
Request the use of a
.Dq trailer
link level encapsulation when
sending (default).
If a network interface supports
.Cm trailers ,
the system will, when possible, encapsulate outgoing
messages in a manner which minimizes the number of
memory to memory copy operations performed by the receiver.
On networks that support ARP
(currently, only Ethernet),
this flag indicates that the system should request that other
systems use trailers when sending to this host.
Similarly, trailer encapsulations will be sent to other
hosts that have made such requests.
Currently used by Internet protocols only.
.It Fl trailers
Disable the use of a
.Dq trailer
link level encapsulation.
@


1.79
log
@Allow the state of a carp interface to be changed explicitly.

ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.78 2004/01/13 07:45:10 jmc Exp $
d42 2
a43 1
.Ar interface address_family
d50 2
a51 3
.Ar tunnel-interface
.Cm tunnel
.Ar src_address dest_address
d53 1
a53 19
.Ar tunnel-interface
.Cm deletetunnel
.Nm ifconfig
.Ar vlan-interface
.Cm vlan
.Ar vlan-tag
.Cm vlandev
.Ar parent-interface
.Nm ifconfig
.Ar carp-interface
.Cm vhid
.Ar host-id
.Nm ifconfig
.Ar pfsync-interface
.Cm syncif
.Ar iface
.Nm ifconfig
.Ar interface
.Op Ar address_family
d65 11
a75 1
.Fl C
d77 2
a78 2
.Op Fl a | am
.Op Ar address_family
d80 5
a84 2
.Op Fl A | Am
.Op Ar address_family
d100 10
a109 1
The operands are as follows:
d111 25
d138 2
a139 1
.Tn DARPA-Internet
d141 1
a141 2
the address is either a host name present in the host name data
base,
d147 9
d157 2
a158 2
addresses are
.Ar net:a.b.c.d.e.f ,
d160 1
a160 1
.Ar net
d163 1
a163 1
.Ar a
d165 1
a165 1
.Ar f ,
d170 1
d178 1
d180 4
a183 2
(LLAP) addresses are specified as nn.na (Network Number.Node Address).
Node addresses are divided into 2 classes: User Node IDs and Server Node IDs.
d187 1
a187 1
while Node 255($FF) is reserved for the AppleTalk broadcast Hardware
d189 5
d195 1
a195 2
Specifies the
.Ar address family
d215 1
a215 1
If no optional parameters are supplied, this string may also be of the form
d226 1
a226 1
.Nm ifconfig :
d228 31
d265 6
d272 5
a276 1
Enable the use of the Address Resolution Protocol in mapping
d283 1
a283 7
Disable the use of the Address Resolution Protocol.
.It Cm anycast
(inet6 only)
Set the IPv6 anycast address bit.
.It Fl anycast
(inet6 only)
Clear the IPv6 anycast address bit.
d289 13
d303 1
a303 1
Enable driver dependent debugging code; usually, this turns on
d306 1
a306 1
Disable driver dependent debugging code.
d314 4
a317 1
.It Cm dest_address
d319 3
a321 1
of a point to point link.
d331 17
a347 29
.It Cm tunnel Ar src_address dest_address
Set the source and destination tunnel addresses on a tunnel interface,
including
.Xr gif 4 .
Packets routed to this interface will be encapsulated in
IPv4 or IPv6, depending on the source and destination address families.
Both addresses must be of the same family.
.It Cm deletetunnel
Removes the source and destination tunnel addresses,
configured onto a tunnel interface.
.It Cm create
Create the specified network pseudo-device.
At least the following devices can be created on demand:
.Pp
.Xr bridge 4 ,
.Xr carp 4 ,
.Xr gif 4 ,
.Xr gre 4 ,
.Xr lo 4 ,
.Xr ppp 4 ,
.Xr sl 4 ,
.Xr tun 4 ,
.Xr vlan 4
.It Cm destroy
Destroy the specified network pseudo-device.
.It Cm ipdst
This is used to specify an Internet host who is willing to receive
ip packets encapsulating NS packets bound for a remote network.
An apparent point to point link is constructed, and
d350 3
a352 2
IP encapsulation of
.Tn CLNP
d364 6
d388 2
a389 2
Refer to the interfaces' driver
specific man page for a complete list of the available types,
d391 4
a394 1
.Li # ifconfig -m interface
d400 1
a400 1
Refer to the interfaces' driver specific man page for a complete
d403 4
a406 1
.Cm ifconfig -m interface
d410 1
a410 109
.It Cm mtu Ar value
Set the MTU for this device to the given
.Ar value .
Cloned routes will inherit this value as a default.
.It Cm instance Ar minst
Set the media instance to
.Ar minst .
This is useful for devices which have multiple physical layer interfaces
(PHYs).
Setting the instance on such devices may not be strictly required
by the network interface driver as the driver may take care of this
automatically; see the driver's manual page for more information.
.It Cm vlan Ar vlan_tag
If the interface is a vlan pseudo interface, set the vlan tag value
to
.Ar vlan_tag .
This value is a 12-bit number which is used to create an 802.1Q
vlan header for packets sent from the vlan interface.
Note that
.Cm vlan
and
.Cm vlandev
must both be set at the same time.
.It Cm vlandev Ar iface
If the interface is a vlan pseudo-device, associate physical interface
.Ar iface
with it.
Packets transmitted through the vlan interface will be
diverted to the specified physical interface
.Ar iface
with 802.1Q vlan encapsulation.
Packets with 802.1Q encapsulation received
by the parent interface with the correct vlan tag will be diverted to
the associated vlan pseudo-interface.
The vlan interface is assigned a
copy of the parent interface's flags and the parent's ethernet address.
The
.Cm vlandev
and
.Cm vlan
must both be set at the same time.
If the vlan interface already has
a physical interface associated with it, this command will fail.
To change the association to another physical interface, the existing
association must be cleared first.
.Pp
Note: if the
.Ar link0
flag is set on the vlan interface, the vlan pseudo
interface's behavior changes: the
.Ar link0
tells the vlan interface that the
parent interface supports insertion and extraction of vlan tags on its
own (usually in firmware) and that it should pass packets to and from
the parent unaltered.
.It Fl vlandev
If the driver is a vlan pseudo-device, disassociate the physical interface
from it.
This breaks the link between the vlan interface and its parent,
clears its vlan tag, flags and its link address and shuts the interface down.
.It Cm vhid Ar n
If the driver is a carp pseudo-device, set the virtual host ID to
.Ar n .
Acceptable values are 1 to 255.
.It Cm advbase Ar n
If the driver is a carp pseudo-device, set the base advertisement interval to
.Ar n
seconds.
This is an 8-bit number; the default value is 1 second.
.It Cm advskew Ar n
If the driver is a carp pseudo-device, skew the advertisement interval by
.Ar n .
This is an 8-bit number; the default value is 0.
.Pp
Taken together the
.Cm advbase
and
.Cm advskew
indicate how frequently, in seconds, the host will advertise the fact that it
considers itself master of the virtual host.
The formula is
.Cm advbase
+
.Cm ( advskew
/ 255 ).
If the master does not advertise within three times this interval, this host
will begin advertising as master.
.It Cm pass Ar passphrase
If the driver is a carp pseudo-device, set the authentication key to
.Ar passphrase .
There is no passphrase by default.
.It Cm state Ar state
Explicitly force the carp pseudo-device to enter this state.
Valid states are
.Ar init ,
.Ar backup ,
and
.Ar master .
.It Cm syncif Ar iface
If the driver is a pfsync pseudo-device, use the specified interface
to send and receive pfsync state synchronisation messages.
.It Fl syncif
If the driver is a pfsync pseudo-device, stop sending pfsync state
synchronisation messages over the network.
.It Cm maxupd Ar n
If the driver is a pfsync pseudo-device, indicate the maximum number
of updates for a single state which can be collapsed into one.
This is an 8-bit number; the default value is 128.
.It Cm metric Ar n
d412 1
a412 1
.Ar n ,
d415 2
a416 1
.Pq Xr routed 8 .
d420 4
d427 1
a427 1
networks into sub-networks.
d453 3
a455 1
When an ISO address is set in an ifconfig command,
d489 1
a489 1
.Ar n:k1,k2,k3,k4 ,
d491 1
a491 1
.Ar n
d494 1
a494 1
.Ar k1
d496 1
a496 1
.Ar k4 ,
d499 1
a499 1
.Po So , Sc Pc
d505 5
a509 2
WaveLAN/IEEE Gold and newer Prism cards will also accept a 104 bit
(13 character) key.
d514 1
a514 1
.It Cm nwkey Cm persist: Ns Ar key
d522 10
a531 5
.It Fl nwkey
(IEEE 802.11 devices only)
Disable WEP encryption for IEEE 802.11-based wireless network interfaces.
.It Cm phase
The argument following this specifies the version (phase) of the
d551 1
a551 1
.It Cm range
d553 3
a555 2
.Em netrange
of the form startnet-endnet.
d560 24
a589 5
.It Cm eui64
(inet6 only)
Fill interface index
.Pq lowermost 64bit of an IPv6 address
automatically.
d600 2
a601 3
On networks that support the Address Resolution Protocol (see
.Xr arp 4 ;
currently, only Ethernet),
d611 7
d622 1
a622 1
.Dq ifconfig down .
d626 59
d688 10
a697 2
.It Cm 802.2 802.2tr 802.3 snap EtherII
Set the
d699 3
a701 2
frame type to be either 802.2, 802.2tr, 802.3, snap or Ethernet II.
.El
d703 2
a704 5
.Nm
displays the current configuration for a network interface
when no optional parameters are supplied.
If a protocol family is specified,
ifconfig will report only the details specific to that protocol family.
d706 1
a706 9
Using
.Fl a
causes
.Nm
to print information on all interfaces.
The protocol family may be specified as well.
Additionally, if
.Fl am
is used, interface media information is printed.
d708 1
a708 8
If
.Fl A
is used, it causes full interface alias information for each interface to
be displayed.
If
.Fl Am
is used, interface media information is printed for all interfaces
as well.
d710 1
a710 4
If
.Fl m
followed by an interface name is specified, then the media information
for that interface will be printed.
d712 1
a712 7
The
.Fl C
option causes
.Nm
to print the names of all network pseudo-devices that
can be created dynamically at runtime using
.Cm ifconfig create .
d714 1
a714 6
Only the superuser may modify the configuration of a network interface.
.Sh EXAMPLES
.Bl -tag -width ifconfig
.It Cm # ifconfig fxp0 inet 192.168.1.10 netmask 255.255.255.0
Assign the inet(4) address of 192.168.1.10 with a network mask of
255.255.255.0 to interface fxp0.
d716 2
a717 2
.It Cm # ifconfig fxp0 ipx 12625920
Assign the ipx(3) address of 12625920 specified in decimal to interface fxp0.
d719 1
a719 3
.It Cm "# ifconfig fxp0 atalk 39108.128 range 39107-39109 phase 2"
Assign the AppleTalk network 39108 and server node 128 with a network
range of 39107-39109 to interface fxp0 on a phase 2 AppleTalk network.
d721 1
a721 2
.It Cm # ifconfig xl0 media 10baseT
Configure the xl0 interface to use 10baseT.
d723 1
a723 2
.It Cm # ifconfig xl0 media 100baseTX mediaopt full-duplex
Configure the xl0 interface to use 100baseTX, full duplex.
d725 1
a725 3
.It Cm # ifconfig vlan0 192.168.254.1 vlan 4 vlandev fxp0
Configure the vlan0 interface for IP address 192.168.254.1, vlan tag 4,
and vlan parent device fxp0.
d727 1
a727 2
.It Cm # ifconfig carp0 vhid 1 192.168.10.1
Configure the carp0 interface for IP address 192.168.10.1, virtual host ID 1.
d729 1
a729 2
.It Cm # ifconfig gif1 create
Create the gif1 network interface.
d731 1
a731 3
.It Cm # ifconfig gif1 destroy
Destroy the gif1 network interface.
.El
d738 3
d743 1
d747 2
d757 2
@


1.78
log
@new sentence, new line;
add section number to .Xr;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.77 2004/01/13 02:01:39 mcbride Exp $
d401 7
@


1.77
log
@Document ability to display all interfaces of given type by omitting unit
number.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.76 2003/12/16 11:14:25 jmc Exp $
d171 2
a172 1
In this case, all interfaces of that type will be displayed.  For example,
d175 1
a175 1
.Xr carp
@


1.76
log
@- s/recieve/receive
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.75 2003/12/16 03:29:06 mcbride Exp $
d169 7
@


1.75
log
@Document new pfsync options (syncif, -syncif and maxupd).

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.74 2003/12/08 09:09:03 markus Exp $
d63 1
a63 1
.Cm vhid 
d395 1
a395 1
to send and recieve pfsync state synchronisation messages.
@


1.74
log
@add IOCIFGCLONERS; ifconfig -C; from netbsd; ok henning, deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.73 2003/12/06 23:10:19 deraadt Exp $
d62 8
d393 10
d671 1
@


1.73
log
@bit more flesh to the create and destroy; thanks jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.72 2003/12/03 13:28:36 markus Exp $
d75 2
d598 8
@


1.72
log
@add support for ifconfig clone; from netbsd; ok deraadt, henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.71 2003/10/26 07:10:54 mcbride Exp $
d69 6
d226 11
d636 1
d638 2
d641 1
d643 4
@


1.71
log
@"advbase" is the correct operand.

diff from Daniel Cavanagh <nofsk@@vtown.com.au>
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.70 2003/10/18 12:26:37 jmc Exp $
d218 4
d606 6
@


1.70
log
@quote a macro's args to make it expand correctly;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.69 2003/10/18 00:47:02 mcbride Exp $
d335 1
a335 1
.It Cm advintv Ar n
@


1.69
log
@CARP documentation cleanups, mostly from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.68 2003/10/17 21:04:57 mcbride Exp $
d586 1
a586 1
.It Cm # ifconfig fxp0 atalk 39108.128 range 39107-39109 phase 2
@


1.68
log
@Common Address Redundancy Protocol

Allows multiple hosts to share an IP address, providing high availability
and load balancing.

Based on code by mickey@@, with additional help from markus@@
and Marco_Pfatschbacher@@genua.de

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.67 2003/07/10 19:56:49 avsm Exp $
d125 2
a126 2
Node addresses are divided into 2 classes: User Node IDs and Server
Node IDs. 1-127($01-$7F) are for User Node IDs while 128-254($80-$FE)
d295 1
a295 1
If the interface is a vlan pseudo device, associate physical interface
d297 2
a298 1
with it. Packets transmitted through the vlan interface will be
d327 1
a327 1
If the driver is a vlan pseudo device, disassociate the physical interface
d332 1
a332 1
If the driver is a carp pseudo device, set the virtual host id to
d336 1
a336 1
If the driver is a carp pseudo device, set the base advertisement interval to
d341 1
a341 1
If the driver is a carp pseudo device, skew the advertisement inteval by
d345 1
a345 1
Taken togther the 
d351 3
a353 3
The formula is 
.Cm advbase 
\+
d359 1
a359 1
If the driver is a carp pseudo device, set the athentication key to 
d601 1
a601 1
Configure the carp0 interface for IP address 192.168.10.1, virtual host id 1.
d609 1
@


1.67
log
@vlan tag is 12-bits, not 16-bits
jason@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.66 2003/06/03 13:16:08 jmc Exp $
d330 31
d598 3
@


1.66
log
@- section reorder
- some mdoc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.65 2003/06/02 20:06:15 millert Exp $
d287 1
a287 1
This value is a 16-bit number which is used to create an 802.1Q
@


1.65
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.64 2003/03/12 20:12:36 deraadt Exp $
d399 1
a399 1
.So 0x Sc Ns ),
a512 1
.Pp
@


1.64
log
@more .Li
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.63 2003/03/12 09:02:01 mickey Exp $
d16 1
a16 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.63
log
@document setting ipx frame type; from ianm@@cit.uws.edu.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.62 2003/02/03 17:46:56 jmc Exp $
d262 1
a262 1
.Cm ifconfig -m interface
@


1.62
log
@typos;
ipsecadm(8): examples ho@@
	     help and ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.61 2002/12/12 13:41:25 mpech Exp $
d512 4
@


1.61
log
@Missing 'Cm'. From <andrushock@@korovino.net>
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.60 2002/11/22 10:25:32 fgsch Exp $
d459 1
a459 1
but you can specify by prefix length by digits.
d528 1
a528 1
.Fl am ,
@


1.60
log
@dsetination -> destination; from Yasholomew Yashinski.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.58 2002/06/14 09:14:24 itojun Exp $
d474 1
a474 1
.It eui64
@


1.59
log
@use $ or # before commands in examples
@
text
@d220 1
a220 1
Removes the source and dsetination tunnel addresses,
@


1.58
log
@manpage for eui64
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.57 2002/06/09 08:13:06 todd Exp $
d548 1
a548 1
.It Cm ifconfig fxp0 inet 192.168.1.10 netmask 255.255.255.0
d552 1
a552 1
.It Cm ifconfig fxp0 ipx 12625920
d555 1
a555 1
.It Cm ifconfig fxp0 atalk 39108.128 range 39107-39109 phase 2
d559 1
a559 1
.It Cm ifconfig xl0 media 10baseT
d562 1
a562 1
.It Cm ifconfig xl0 media 100baseTX mediaopt full-duplex
d565 1
a565 1
.It Cm ifconfig vlan0 192.168.254.1 vlan 4 vlandev fxp0
@


1.57
log
@rm trailing whitespace
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.56 2002/06/05 06:33:30 jsyn Exp $
d474 5
@


1.56
log
@clarify nwkey usage; ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.55 2002/04/08 09:12:36 deraadt Exp $
d407 1
a407 1
where 
@


1.55
log
@more details to media and mediaopt; miod ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.54 2002/02/23 22:07:20 millert Exp $
d402 3
a404 1
can either be a string, a series of hexadecimal digits, or a set of keys
@


1.54
log
@Add support for nwkey and powersave; from NetBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.53 2001/12/13 20:16:48 mpech Exp $
d260 4
a263 1
specific man page for a complete list of the available types.
d269 4
a272 1
list of available options.
@


1.53
log
@o) start new sentence on a new line;
o) wrap long lines;
o) fix bogus .Xr usage;
o) we don't like blank lines;
o) always close .Bl tags;
o) OpenBSD -> .Ox;
o) don't like .Pp before .Ss;

millert@@ ok;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.52 2001/09/15 18:06:56 mickey Exp $
d381 1
a381 3
(IEEE 802.11 devices only, specifically
.Xr ray 4 )
.br
d383 48
d438 9
@


1.52
log
@add mtu description, from Phil Pennock <Phil.Pennock@@globnix.org>
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.51 2001/05/02 06:44:23 itojun Exp $
d286 2
a287 1
vlan header for packets sent from the vlan interface. Note that
d298 2
a299 1
with 802.1Q vlan encapsulation. Packets with 802.1Q encapsulation received
d301 2
a302 1
the associated vlan pseudo-interface. The vlan interface is assigned a
d308 4
a311 3
must both be set at the same time. If the vlan interface already has
a physical interface associated with it, this command will fail. To
change the association to another physical interface, the existing
d325 2
a326 1
from it. This breaks the link between the vlan interface and its parent,
@


1.51
log
@implement "deletetunnel" (removes tunnel outer IP address pair)
rename "giftunnel" intto "tunnel", to reduce diffs with netbsd.
(giftunnel is still usable for backward compat)

markus and niels ok'ed.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.50 2001/01/18 04:46:03 itojun Exp $
d269 4
@


1.50
log
@permit prefixlen against inet address, like:
# ifconfig fxp0 10.0.0.1 prefixlen 23
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.49 2000/12/30 21:56:43 angelos Exp $
d53 2
a54 2
.Ar gif-interface
.Cm giftunnel
d57 3
d212 4
a215 4
.It Cm giftunnel
Set the source and destination tunnel addresses on a
.Xr gif 4
interface.
d219 3
@


1.49
log
@Remove the dstsa/srcsa/clearsa directives, the bridge will be using
the gif interface instead.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.48 2000/10/17 21:56:06 naddy Exp $
d378 1
a378 1
(inet6 only)
@


1.48
log
@We use ARP for all Ethernet speeds.
Pointed out by Hans Guenter Weigand <hgw@@d1906.inka.de>.
ok aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.47 2000/08/01 16:13:23 jakob Exp $
a184 9
.It Cm clearsa
Remove the binding between an SA and an
.Xr enc 4
interface, such as established with the
.Cm srcsa
or
.Cm dstsa
flags.
If the all-zeroes SA is specified, the sending SA is cleared by default.
a208 39
.It Cm dstsa
Bind an
.Xr ipsec 4
Security Association (SA) to an
.Xr enc 4
interface.
The interface can then be used in conjunction with the
.Xr bridge 4
to establish virtual Local Area Networks (LANs).
The SA is specified as
.Ar address/SPI/protocol ,
where
.Ar address
is an IPv4 or IPv6 address,
.Ar SPI
is a hexadecimal number, and
.Ar protocol
is a decimal number identifying the security protocol (typically 50
for ESP, 51 for AH, or 4 for IP-in-IP).
The SA must exist for the operation to be successfully completed.
Typically, such SAs would be
established via
.Xr ipsecadm 1 .
This SA will be used to send packets to a remote host via
.Xr ipsec 4 .
If the
.Ar 0.0.0.0/0/0
or
.Ar ::/0/0
SA is specified, any existing binding between the corresponding
.Xr enc 4
interface and the SA is cleared (in fact, just the SPI and the protocol
part of the SA have to be set to zero).
Only one SA may be bound to an
.Xr enc 4
interface at a time.
SAs may not be bound to the
.Dq enc0
interface.
a389 25
.It Cm srcsa
Similar to
.Cm dstsa ,
this operation binds an
.Xr ipsec 4
SA to an
.Xr enc 4
interface.
The SAs bound via this operation are receiving SAs.
Any packets received over one of these SAs, will be made to appear as if
it arrived by the corresponding
.Xr enc 4
interface.
If the interface is part of a bridge, the packets will be
delivered to the bridge.
Contrary to the
.Cm dstsa
flag, multiple SAs may be bound to an
.Xr enc 4
interface via this operation.
Similar to the
.Cm dstsa
flag, no SAs may be bound to the
.Dq enc0
interface.
@


1.47
log
@remove duplicate Xr
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.46 2000/06/18 19:16:47 provos Exp $
d114 1
a114 1
The host number may be omitted on 10Mb/s Ethernet interfaces,
d171 1
a171 1
addresses and 10Mb/s Ethernet addresses.
d481 1
a481 1
currently, only 10 Mb/s Ethernet),
@


1.46
log
@routes on down interfaces are disabled
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.45 2000/06/18 18:06:47 niklas Exp $
a564 1
.Xr ifmedia 4 ,
@


1.45
log
@Xr hostname.if
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.44 2000/05/23 05:02:43 deraadt Exp $
d217 1
a217 1
This action does not automatically disable routes using the interface.
@


1.44
log
@doc nwid; imain@@ymir.netidea.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.43 2000/04/26 19:03:46 chris Exp $
d566 1
d568 1
@


1.43
log
@if_vlan support
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.42 2000/04/12 21:47:58 aaron Exp $
d413 5
@


1.42
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.41 2000/03/29 06:56:24 deraadt Exp $
d57 6
d319 42
d549 4
@


1.41
log
@gifconfig died an early death
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.40 2000/03/23 21:39:56 aaron Exp $
d226 1
a226 1
.Ar SPI 
@


1.40
log
@More pedantic man page formatting insanity, lalala
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.39 2000/03/18 22:55:57 aaron Exp $
a257 3
This flag obsoletes the old
.Nm gifconfig
command.
a510 1
.Xr gifconfig 8 ,
@


1.39
log
@Remove hard sentence breaks, and some other cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.38 2000/01/17 03:02:14 mickey Exp $
d122 2
a123 1
are used for Server Node IDs. Node 0($00) is not allowed (unknown)
@


1.38
log
@insert giftunnel synopsis line, which would provide some clue how it's used for post-gifconfig users; angelos@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.37 2000/01/15 23:56:24 angelos Exp $
d79 2
a80 2
or other operating parameters.  To configure a bridge interface,
use the
d84 1
a84 2
Available operands for
.Nm ifconfig :
d114 2
a115 1
as in the Xerox family.  However, two consecutive dots imply a zero
d185 2
a186 2
flags. If the all-zeroes SA is specified, the sending SA is cleared
by default.
d216 2
a217 1
interface. The interface can then be used in conjunction with the
d219 2
a220 2
to establish virtual Local Area Networks (LANs). The SA is specified
as
d229 3
a231 2
for ESP, 51 for AH, or 4 for IP-in-IP). The SA must exist for the
operation to be successfully completed. Typically, such SAs would be
d243 2
a244 1
part of the SA have to be set to zero). Only one SA may be bound to an
d246 2
a247 1
interface at a time. SAs may not be bound to the
d253 5
a257 4
interface. Packets routed to this interface will be encapsulated in
IPv4 or IPv6, depending on the source and destination address
families. Both addresses must be of the same family. This flag
obsoletes the old
d272 2
a273 1
they are in general used to select special modes of operation. An example
d275 2
a276 2
for some Ethernet cards.  Refer to the man page for the specific driver
for more information.
d283 2
a284 2
different physical media connectors.  For example, a 10Mb/s Ethernet
interface might support the use of either
d286 2
a287 1
or twisted pair connectors.  Setting the media type to
d296 2
a297 1
would activate twisted pair.  Refer to the interfaces' driver
d311 2
a312 1
(PHYs).  Setting the instance on such devices may not be strictly required
d369 2
a370 1
AppleTalk network attached to the interface. Values of 1 or 2 are permitted.
d382 5
a386 2
of the form startnet-endnet. AppleTalk uses this scheme instead of
netmasks though OpenBSD implements it internally as a set of netmasks.
d394 3
a396 2
interface. The SAs bound via this operation are receiving SAs. Any
packets received over one of these SAs, will be made to appear as if
d399 4
a402 2
interface. If the interface is part of a bridge, the packets will be
delivered to the bridge. Contrary to the
d406 2
a407 1
interface via this operation. Similar to the
d465 2
a466 1
The protocol family may be specified as well.  Additionally, if
d473 2
a474 1
be displayed. If
d484 1
a484 1
Only the super-user may modify the configuration of a network interface.
@


1.37
log
@Add "giftunnel" keyword, obsoleting gifconfig(8).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.36 2000/01/15 20:11:14 angelos Exp $
d52 4
@


1.36
log
@Order flags alphabetically.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.35 2000/01/15 19:47:01 angelos Exp $
d242 9
@


1.35
log
@Update.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.34 2000/01/10 01:52:37 deraadt Exp $
a147 65
.It Cm dstsa
Bind an
.Xr ipsec 4
Security Association (SA) to an
.Xr enc 4
interface. The interface can then be used in conjunction with the
.Xr bridge 4
to establish virtual Local Area Networks (LANs). The SA is specified
as
.Ar address/SPI/protocol ,
where
.Ar address
is an IPv4 or IPv6 address,
.Ar SPI 
is a hexadecimal number, and
.Ar protocol
is a decimal number identifying the security protocol (typically 50
for ESP, 51 for AH, or 4 for IP-in-IP). The SA must exist for the
operation to be successfully completed. Typically, such SAs would be
established via
.Xr ipsecadm 1 .
This SA will be used to send packets to a remote host via
.Xr ipsec 4 .
If the
.Ar 0.0.0.0/0/0
or
.Ar ::/0/0
SA is specified, any existing binding between the corresponding
.Xr enc 4
interface and the SA is cleared (in fact, just the SPI and the protocol
part of the SA have to be set to zero). Only one SA may be bound to an
.Xr enc 4
interface at a time. SAs may not be bound to the
.Dq enc0
interface.
.It Cm srcsa
Similar to
.Cm dstsa ,
this operation binds an
.Xr ipsec 4
SA to an
.Xr enc 4
interface. The SAs bound via this operation are receiving SAs. Any
packets received over one of these SAs, will be made to appear as if
it arrived by the corresponding
.Xr enc 4
interface. If the interface is part of a bridge, the packets will be
delivered to the bridge. Contrary to the
.Cm dstsa
flag, multiple SAs may be bound to an
.Xr enc 4
interface via this operation. Similar to the
.Cm dstsa
flag, no SAs may be bound to the
.Dq enc0
interface.
.It Cm clearsa
Remove the binding between an SA and an
.Xr enc 4
interface, such as established with the
.Cm srcsa
or
.Cm dstsa
flags. If the all-zeroes SA is specified, the sending SA is cleared
by default.
d174 9
d207 35
d251 9
a344 5
.It Cm range
Under AppleTalk, set the interface to respond to a
.Em netrange
of the form startnet-endnet. AppleTalk uses this scheme instead of
netmasks though OpenBSD implements it internally as a set of netmasks.
d356 26
a409 9
.It Cm link[0-2]
Enable special processing of the link level of the interface.
These three options are interface specific in actual effect; however,
they are in general used to select special modes of operation. An example
of this is to enable SLIP compression, or to select the connector type
for some Ethernet cards.  Refer to the man page for the specific driver
for more information.
.It Fl link[0-2]
Disable special processing at the link level with the specified interface.
@


1.34
log
@Xr gifconfig
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.33 1999/12/27 04:30:50 angelos Exp $
d180 3
a182 1
interface at a time.
d199 5
a203 1
interface via this operation.
@


1.33
log
@Better document clearsa behaviour.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.32 1999/12/27 04:19:42 angelos Exp $
d475 1
@


1.32
log
@Handle srcsa/clearsa, and rename setsa to dstsa.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.31 1999/12/27 03:25:19 angelos Exp $
d205 2
a206 1
flags.
@


1.31
log
@Document setsa flag.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.30 1999/12/08 23:53:13 aaron Exp $
d148 1
a148 1
.It Cm setsa
d169 2
d177 29
a205 2
interface and an SA is cleared (in fact, just the SPI and the protocol
part of the SA have to be set to zero).
@


1.30
log
@- Document -alias.
- More reference to inet6.
- Misc cleanup, but should revisit this file later.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.29 1999/12/08 07:45:30 itojun Exp $
d148 29
@


1.29
log
@IPv6-enabled ifconfig from KAME.
it now loops through all the aliases on interfaces.
KAME_SCOPEID will be enabled when get{addr,name}info(3) are replaced with
KAME code.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.28 1999/09/23 22:42:11 deraadt Exp $
d66 1
d68 1
a68 1
is used to assign an address
d72 1
a72 1
must be used at boot time to define the network address
d78 1
a78 2
program instead of
.Nm ifconfig .
d83 1
a83 1
.It Ar Address
d130 1
d136 1
a136 1
.It Ar Interface
d152 2
d170 1
a170 1
(Inet only)
d250 1
a250 1
(Inet, inet6 and ISO)
d306 1
a306 1
.Cm netmask .
@


1.28
log
@TX; imain@@netidea.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.27 1999/07/04 18:59:39 aaron Exp $
d160 6
d247 1
a247 1
(Inet and ISO)
d297 14
d350 3
@


1.27
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.26 1999/07/03 02:11:07 aaron Exp $
d378 2
a379 2
.It Cm ifconfig xl0 media 100baseT mediaopt full-duplex
Configure the xl0 interface to use 100baseT, full duplex.
@


1.26
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.25 1999/07/02 20:11:46 aaron Exp $
a169 1
.ne 1i
a319 1
.ne 1i
@


1.25
log
@consistent .Dd usage; proper format is: .Dd Month DD, YYYY
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.24 1999/06/04 02:45:17 aaron Exp $
a363 1
.Pp
@


1.24
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.23 1999/05/23 14:11:15 aaron Exp $
d38 1
a38 1
.Dd Sept 3, 1998
@


1.23
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.22 1999/05/15 02:17:52 aaron Exp $
d88 1
a88 1
base, 
d95 1
a95 1
addresses are 
d114 1
a114 1
.Tn AppleTalk 
d144 1
a144 1
The following parameters may be set with 
d187 1
a187 1
transmit messages through that interface. 
d257 1
a257 1
.\" see 
d326 1
a326 1
.Dq up . 
d375 2
a376 2
Assign the AppleTalk network 39108 and server node 128 with a network 
range of 39107-39109 to interface fxp0 on a phase 2 AppleTalk network. 
@


1.22
log
@ethernet -> Ethernet, other repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.21 1999/03/10 21:25:28 pjanzen Exp $
d40 1
a40 1
.Os BSD 4.2
@


1.21
log
@fix comma splices involving 'however'
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.20 1999/02/26 19:31:50 jason Exp $
d319 1
a319 1
for some ethernet cards.  Refer to the man page for the specific driver
@


1.20
log
@Xr brconfig
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.19 1998/12/15 01:20:32 aaron Exp $
d316 1
a316 1
These three options are interface specific in actual effect, however,
@


1.19
log
@always give .Nm macros an argument in SYNOPSIS sections; krw@@tcn.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.18 1998/11/28 19:56:20 aaron Exp $
d74 5
a78 1
or other operating parameters.
d392 1
@


1.18
log
@kill redundant .Nm macro arguments; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.17 1998/11/11 22:19:57 aaron Exp $
d45 1
a45 1
.Nm
d52 1
a52 1
.Nm
d55 1
a55 1
.Nm
d59 1
a59 1
.Nm
d62 1
a62 1
.Nm
@


1.17
log
@more `` '' -> .Dq sillyness; remove redundant .Pp macros; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.16 1998/11/04 22:36:42 aaron Exp $
d45 1
a45 1
.Nm ifconfig
d52 1
a52 1
.Nm ifconfig
d55 1
a55 1
.Nm ifconfig
d59 1
a59 1
.Nm ifconfig
d62 1
a62 1
.Nm ifconfig
d66 1
a66 1
.Nm ifconfig
d70 1
a70 1
.Nm ifconfig
d77 1
a77 1
.Nm ifconfig:
d331 1
a331 1
.Nm ifconfig
d340 1
a340 1
.Nm ifconfig
@


1.16
log
@be really pedantic about punctuation following -mdoc macro'd text
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.15 1998/09/23 01:20:23 aaron Exp $
d178 5
a182 2
Mark an interface ``down''.  When an interface is
marked ``down'', the system will not attempt to
d289 3
a291 1
Request the use of a ``trailer'' link level encapsulation when
d307 3
a309 1
Disable the use of a ``trailer'' link level encapsulation.
d321 4
a324 2
Mark an interface ``up''. 
This may be used to enable an interface after an ``ifconfig down.''
@


1.15
log
@alphabetize SEE ALSO entries and order them numerically according to section
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.14 1998/09/17 04:14:53 aaron Exp $
d279 1
a279 1
.Em netrange.
@


1.14
log
@sbin/ man page fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.13 1998/09/03 23:08:09 jason Exp $
d376 1
a377 1
.Xr netstat 1 ,
@


1.13
log
@Documentation for ifmedia & updated ifconfig usage
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.12 1998/08/29 21:11:06 deraadt Exp $
d58 1
a58 1
.Op address_family
d66 1
a66 1
.Nm Ifconfig
d70 1
a70 1
.Nm Ifconfig
d322 1
a322 1
.Nm Ifconfig
d329 1
a329 1
.Fl a ,
@


1.12
log
@man page repairs; aaron@@ug.cs.dal.ca
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.11 1998/07/13 07:58:48 deraadt Exp $
d38 1
a38 1
.Dd June 1, 1994
d56 6
a61 1
.Fl a
d63 2
a64 1
.Fl A
d192 33
d328 8
a335 4
The interface name
.Fl a
causes information on all interfaces to be displayed.
The protocol family may be specified as well.
d337 1
a337 1
The interface name
d339 10
a348 2
causes full interface alias information for each interface to be
displayed.
d364 6
d376 1
@


1.11
log
@clean Xr
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.10 1998/06/08 06:39:59 deraadt Exp $
d109 1
a109 1
while Node 255($FF) is reserved for the Appletalk broadcast Hardware
d131 1
a131 1
.Dq en0 
d241 1
a241 1
of the form startnet-endnet. Appletalk uses this scheme instead of
d245 1
a245 1
Appletalk network attached to the interface. Values of 1 or 2 are permitted.
d287 1
a287 1
Ifconfig will report only the details specific to that protocol family.
d308 1
a308 1
Assign the ipx(3) address of 12625920 sepcified in decimal to interface fxp0.
d311 1
a311 1
Assign the Appletalk network 39108 and server node 128 with a network 
@


1.10
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.9 1998/03/17 08:10:19 deraadt Exp $
d322 1
a322 2
.Xr routed 8 ,
.\" .Xr eon 5
@


1.9
log
@finish atalk support; merged by I.McWilliam@@st.nepean.uws.edu.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.8 1997/12/31 11:16:21 deraadt Exp $
d315 1
a315 1
Messages indicating the specified interface does not exit, the
@


1.8
log
@address family; forget about this protocol family stuff for now
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.7 1997/11/12 22:03:01 deraadt Exp $
d3 1
d104 7
d120 1
d122 1
d238 8
d300 14
@


1.7
log
@typos
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.6 1997/07/01 18:54:49 deraadt Exp $
d53 1
a53 1
.Op Ar protocol_family
@


1.6
log
@split -a into -a/-A
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.5 1997/05/28 22:01:29 deraadt Exp $
d272 1
a272 1
.Ar -a
d277 1
a277 1
.Ar A
@


1.5
log
@doc broadcast addr better; frueauf@@ira.uka.de
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.4 1996/08/16 09:22:40 mickey Exp $
d54 4
d273 1
a273 1
is reserved, and causes information on all interfaces to be displayed.
d275 5
@


1.4
log
@ipx.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.3 1996/06/23 14:30:47 deraadt Exp $
d136 1
a136 1
.It Cm broadcast
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: ifconfig.8,v 1.11 1996/01/04 21:27:29 pk Exp $
d79 1
a79 1
For the Xerox Network Systems(tm) family,
@


1.2
log
@from 4.4lite2; additional data from SIOCGIFCONF is at least sockaddr sized
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: ifconfig.8,v 1.10 1995/03/18 14:56:23 cgd Exp $
d34 1
a34 1
.\"     @@(#)ifconfig.8	8.3 (Berkeley) 1/5/94
d36 1
a36 1
.Dd January 5, 1994
d145 1
d248 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

