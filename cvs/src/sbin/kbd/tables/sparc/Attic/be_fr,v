head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2002.11.23.23.50.18;	author miod;	state dead;
branches;
next	1.2;

1.2
date	99.08.21.20.27.43;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	99.07.20.21.02.26;	author maja;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Now that wskbd layouts for sparc are done, I don't need to keep these files
as a reference...
@
text
@/*	$OpenBSD: be_fr,v 1.2 1999/08/21 20:27:43 maja Exp $	*/

/*
 * Copyright (c) 1999 Mats O Jansson
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

    { "be_fr", "belgium", "france", "type_4_layout_02" },
/*	unshift	shift	caps	alt gr	numl	control	*/
	ALL(HOLE,HOLE)						/*   0 */
	ALL(BB(SYSTEMBIT),NONL)					/*   1 */
	ALL(HOLE,HOLE)						/*   2 */
	ALL(LF(2),NONL)						/*   3 */
	ALL(HOLE,HOLE)						/*   4 */
	ALL(TF(1),NONL)						/*   5 */
	ALL(TF(2),NONL)						/*   6 */
	ALL(TF(10),NONL)					/*   7 */
	ALL(TF(3),NONL)						/*   8 */
	ALL(TF(11),NONL)					/*   9 */
	ALL(TF(4),NONL)						/*  10 */
	ALL(TF(12),NONL)					/*  11 */
	ALL(TF(5),NONL)						/*  12 */
	ALL(SK(CAPSLOCK),NONL)					/*  13 */
	ALL(TF(6),NONL)						/*  14 */
	']',	'}',	']',	C8('»'),HOLE,	'\035',		/*  15 */
	ALL(TF(7),NONL)						/*  16 */
	ALL(TF(8),NONL)						/*  17 */
	ALL(TF(9),NONL)						/*  18 */
	ALL(SK(ALT),NONL)					/*  19 */
	ALL(HOLE,HOLE)						/*  20 */
	ALL(RF(1),NONL)						/*  21 */
	ALL(RF(2),NONL)						/*  22 */
	ALL(RF(3),NONL)						/*  23 */
	ALL(HOLE,HOLE)						/*  24 */
	ALL(LF(3),NONL)						/*  25 */
	ALL(LF(4),NONL)						/*  26 */
	ALL(HOLE,HOLE)						/*  27 */
	ALL(HOLE,HOLE)						/*  28 */
	ALL('\033',NONL)					/*  29 */
	'&',	'1',	'&',	NOP,	NONL,	'&',		/*  30 */
	C8('é'),'2',	'E',	C8('²'),NONL,	C8('É'),	/*  31 */
	'"',	'3',	'"',	C8('³'),NONL,	'"',		/*  32 */
	'\'',	'4',	'\'',	NOP,	NONL,	'\'',		/*  33 */
	'(',	'5',	'(',	NOP,	NONL,	'(',		/*  34 */
	C8('§'),'6',	C8('§'),'^',	NONL,	'\036',		/*  35 */
	C8('è'),'7',	'E',	NOP,	'7',	C8('è'),	/*  36 */
	'!',	'8',	'!',	C8('£'),'8',	'!',		/*  37 */
	C8('ç'),'9',	'C',	'\\',	'9',	'\034',		/*  38 */
	C8('à'),'0',	'A',	NOP,	'*',	C8('à'),	/*  39 */
	')',	C8('°'),')',	'~',	NONL,	')',		/*  40 */
	'-',	'_',	'-',	'#',	NONL,	'\037',		/*  41 */
	'*',	'|',	'*',	C8('¤'),NONL,	'\034',		/*  42 */
	ALL('\b',NONL)						/*  43 */
	ALL(HOLE,HOLE)						/*  44 */
	ALL(RF(4),PADEQUAL)					/*  45 */
	ALL(RF(5),PADSLASH)					/*  46 */
	ALL(RF(6),PADSTAR)					/*  47 */
	ALL(BF(13),NONL)					/*  48 */
	ALL(LF(5),NONL)						/*  49 */
	ALL(BF(10),PADDOT)					/*  50 */
	ALL(LF(6),NONL)						/*  51 */
	ALL(HOLE,HOLE)						/*  52 */
	ALL('\t',NONL)						/*  53 */
	'a',	'A',	'A',	NOP,	NONL,	'\001',		/*  54 */
	'z',	'Z',	'Z',	NOP,	NONL,	'\032',		/*  55 */
	'e',	'E',	'E',	NOP,	NONL,	'\005',		/*  56 */
	'r',	'R',	'R',	NOP,	NONL,	'\022',		/*  57 */
	't',	'T',	'T',	NOP,	NONL,	'\024',		/*  58 */
	'y',	'Y',	'Y',	NOP,	NONL,	'\031',		/*  59 */
	'u',	'U',	'U',	NOP,	'4',	'\025',		/*  60 */
	'i',	'I',	'I',	NOP,	'5',	'\t',		/*  61 */
	'o',	'O',	'O',	NOP,	'6',	'\017',		/*  62 */
	'p',	'P',	'P',	NOP,	'-',	'\020',		/*  63 */
	GR(1),	GR(0),	GR(1),	NOP,	NONL,	GR(1),		/*  64 */
	'`',	'$',	'`',	'@@',	NONL,	'\000',		/*  65 */
	ALL('\177',NONL)					/*  66 */
	ALL(COMPOSE,NONL)					/*  67 */
	ALL(RF(7),PAD7)						/*  68 */
	ALL(ST(1),PAD8)						/*  69 */
	ALL(RF(9),PAD9)						/*  70 */
	ALL(BF(15),PADMINUS)					/*  71 */
	ALL(LF(7),NONL)						/*  72 */
	ALL(LF(8),NONL)						/*  73 */
	ALL(HOLE,HOLE)						/*  74 */
	ALL(HOLE,HOLE)						/*  75 */
	ALL(SK(LEFTCTRL),NONL)					/*  76 */
	'q',	'Q',	'Q',	NOP,	NONL,	'\021',		/*  77 */
	's',	'S',	'S',	NOP,	NONL,	'\023',		/*  78 */
	'd',	'D',	'D',	NOP,	NONL,	'\004',		/*  79 */
	'f',	'F',	'F',	NOP,	NONL,	'\006',		/*  80 */
	'g',	'G',	'G',	NOP,	NONL,	'\007',		/*  81 */
	'h',	'H',	'H',	NOP,	NONL,	'\b',		/*  82 */
	'j',	'J',	'J',	NOP,	'1',	'\n',		/*  83 */
	'k',	'K',	'K',	NOP,	'2',	'\013',		/*  84 */
	'l',	'L',	'L',	NOP,	'3',	'\014',		/*  85 */
	'm',	'M',	'M',	C8('µ'),'+',	'\r',		/*  86 */
	C8('ù'),'%',	'U',	NOP,	NONL,	C8('ù'),	/*  87 */
	'[',	'{',	'[',	C8('«'),NONL,	'\033',		/*  88 */
	ALL('\r',NONL)						/*  89 */
	ALL(BF(11),PADENTER)					/*  90 */
	ALL(ST(3),PAD4)						/*  91 */
	ALL(RF(11),PAD5)					/*  92 */
	ALL(ST(4),PAD6)						/*  93 */
	ALL(BF(8),PAD0)						/*  94 */
	ALL(LF(9),NONL)						/*  95 */
	ALL(HOLE,HOLE)						/*  96 */
	ALL(LF(10),NONL)					/*  97 */
	ALL(SK(NUMLOCK),NONL)					/*  98 */
	ALL(SK(LEFTSHIFT),NONL)					/*  99 */
	'w',	'W',	'W',	NOP,	NONL,	'\027',		/* 100 */
	'x',	'X',	'X',	NOP,	NONL,	'\030',		/* 101 */
	'c',	'C',	'C',	NOP,	NONL,	'\003',		/* 102 */
	'v',	'V',	'V',	NOP,	NONL,	'\026',		/* 103 */
	'b',	'B',	'B',	NOP,	NONL,	'\002',		/* 104 */
	'n',	'N',	'N',	NOP,	NONL,	'\016',		/* 105 */
	',',	'?',	',',	NOP,	'0',	',',		/* 106 */
	';',	'.',	';',	NOP,	',',	';',		/* 107 */
	':',	'/',	':',	NOP,	'.',	':',		/* 108 */
	'=',	'+',	'=',	NOP,	'/',	'=',		/* 109 */
	ALL(SK(RIGHTSHIFT),NONL)				/* 110 */
	ALL('\n',NONL)						/* 111 */
	ALL(RF(13),PAD1)					/* 112 */
	ALL(ST(2),PAD2)						/* 113 */
	ALL(RF(15),PAD3)					/* 114 */
	ALL(HOLE,HOLE)						/* 115 */
	ALL(HOLE,HOLE)						/* 116 */
	ALL(HOLE,HOLE)						/* 117 */
	ALL(LF(16),NONL)					/* 118 */
	ALL(SK(ALTGRAPH),NONL)					/* 119 */
	ALL(BB(0),NONL)						/* 120 */
	' ',	' ',	' ',	' ',	NONL,	'\000',		/* 121 */
	ALL(BB(0),NONL)						/* 122 */
	ALL(HOLE,HOLE)						/* 123 */
	'<',	'>',	'<',	NOP,	NONL,	'<',		/* 124 */
	ALL(BF(14),PADPLUS)					/* 125 */
	ALL(ERROR,ERROR)					/* 126 */
	ALL(IDLE,IDLE)						/* 127 */
@


1.2
log
@First step to get support for keypad and function keys on sparc. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: be_fr,v 1.1 1999/07/20 21:02:26 maja Exp $	*/
@


1.1
log
@Add some more keyboards. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 129
a163 129
/*	unshift	shift	alt gr	control	*/
	ALL(HOLE)						/*   0 */
	ALL(BB(SYSTEMBIT))					/*   1 */
	ALL(HOLE)						/*   2 */
	ALL(LF(2))						/*   3 */
	ALL(HOLE)						/*   4 */
	ALL(TF(1))						/*   5 */
	ALL(TF(2))						/*   6 */
	ALL(TF(10))						/*   7 */
	ALL(TF(3))						/*   8 */
	ALL(TF(11))						/*   9 */
	ALL(TF(4))						/*  10 */
	ALL(TF(12))						/*  11 */
	ALL(TF(5))						/*  12 */
	ALL(SK(CAPSLOCK))					/*  13 */
	ALL(TF(6))						/*  14 */
	']',	'}',	C8('»'),'\035',				/*  15 */
	ALL(TF(7))						/*  16 */
	ALL(TF(8))						/*  17 */
	ALL(TF(9))						/*  18 */
	ALL(SK(ALT))						/*  19 */
	ALL(HOLE)						/*  20 */
	ALL(RF(1))						/*  21 */
	ALL(RF(2))						/*  22 */
	ALL(RF(3))						/*  23 */
	ALL(HOLE)						/*  24 */
	ALL(LF(3))						/*  25 */
	ALL(LF(4))						/*  26 */
	ALL(HOLE)						/*  27 */
	ALL(HOLE)						/*  28 */
	ALL('\033')						/*  29 */
	'&',	'1',	NOP,	'&',				/*  30 */
	C8('é'),'2',	C8('²'),C8('É'),			/*  31 */
	'"',	'3',	C8('³'),'"',				/*  32 */
	'\'',	'4',	NOP,	'\'',				/*  33 */
	'(',	'5',	NOP,	'(',				/*  34 */
	C8('§'),'6',	'^',	'\036',				/*  35 */
	C8('è'),'7',	NOP,	C8('è'),			/*  36 */
	'!',	'8',	C8('£'),'!',				/*  37 */
	C8('ç'),'9',	'\\',	'\034',				/*  38 */
	C8('à'),'0',	NOP,	C8('à'),			/*  39 */
	')',	C8('°'),'~',	')',				/*  40 */
	'-',	'_',	'#',	'\037',				/*  41 */
	'*',	'|',	C8('¤'),'\034',				/*  42 */
	ALL('\b')						/*  43 */
	ALL(HOLE)						/*  44 */
	ALL(RF(4))						/*  45 */
	ALL(RF(5))						/*  46 */
	ALL(RF(6))						/*  47 */
	ALL(BF(13))						/*  48 */
	ALL(LF(5))						/*  49 */
	ALL(BF(10))						/*  50 */
	ALL(LF(6))						/*  51 */
	ALL(HOLE)						/*  52 */
	ALL('\t')						/*  53 */
	'a',	'A',	NOP,	'\001',				/*  54 */
	'z',	'Z',	NOP,	'\032',				/*  55 */
	'e',	'E',	NOP,	'\005',				/*  56 */
	'r',	'R',	NOP,	'\022',				/*  57 */
	't',	'T',	NOP,	'\024',				/*  58 */
	'y',	'Y',	NOP,	'\031',				/*  59 */
	'u',	'U',	NOP,	'\025',				/*  60 */
	'i',	'I',	NOP,	'\t',				/*  61 */
	'o',	'O',	NOP,	'\017',				/*  62 */
	'p',	'P',	NOP,	'\020',				/*  63 */
	GR(1),	GR(0),	NOP,	GR(1),				/*  64 */
	'`',	'$',	'@@',	'\000',				/*  65 */
	ALL('\177')						/*  66 */
	ALL(COMPOSE)						/*  67 */
	ALL(RF(7))						/*  68 */
	ALL(ST(1))						/*  69 */
	ALL(RF(9))						/*  70 */
	ALL(BF(15))						/*  71 */
	ALL(LF(7))						/*  72 */
	ALL(LF(8))						/*  73 */
	ALL(HOLE)						/*  74 */
	ALL(HOLE)						/*  75 */
	ALL(SK(LEFTCTRL))					/*  76 */
	'q',	'Q',	NOP,	'\021',				/*  77 */
	's',	'S',	NOP,	'\023',				/*  78 */
	'd',	'D',	NOP,	'\004',				/*  79 */
	'f',	'F',	NOP,	'\006',				/*  80 */
	'g',	'G',	NOP,	'\007',				/*  81 */
	'h',	'H',	NOP,	'\b',				/*  82 */
	'j',	'J',	NOP,	'\n',				/*  83 */
	'k',	'K',	NOP,	'\013',				/*  84 */
	'l',	'L',	NOP,	'\014',				/*  85 */
	'm',	'M',	C8('µ'),'\r',				/*  86 */
	C8('ù'),'%',	NOP,	C8('ù'),			/*  87 */
	'[',	'{',	C8('«'),'\033',				/*  88 */
	ALL('\r')						/*  89 */
	ALL(BF(11))						/*  90 */
	ALL(ST(3))						/*  91 */
	ALL(RF(11))						/*  92 */
	ALL(ST(4))						/*  93 */
	ALL(BF(8))						/*  94 */
	ALL(LF(9))						/*  95 */
	ALL(HOLE)						/*  96 */
	ALL(LF(10))						/*  97 */
	ALL(SK(NUMLOCK))					/*  98 */
	ALL(SK(LEFTSHIFT))					/*  99 */
	'w',	'W',	NOP,	'\027',				/* 100 */
	'x',	'X',	NOP,	'\030',				/* 101 */
	'c',	'C',	NOP,	'\003',				/* 102 */
	'v',	'V',	NOP,	'\026',				/* 103 */
	'b',	'B',	NOP,	'\002',				/* 104 */
	'n',	'N',	NOP,	'\016',				/* 105 */
	',',	'?',	NOP,	',',				/* 106 */
	';',	'.',	NOP,	';',				/* 107 */
	':',	'/',	NOP,	':',				/* 108 */
	'=',	'+',	NOP,	'=',				/* 109 */
	ALL(SK(RIGHTSHIFT))					/* 110 */
	ALL('\n')						/* 111 */
	ALL(RF(13))						/* 112 */
	ALL(ST(2))						/* 113 */
	ALL(RF(15))						/* 114 */
	ALL(HOLE)						/* 115 */
	ALL(HOLE)						/* 116 */
	ALL(HOLE)						/* 117 */
	ALL(LF(16))						/* 118 */
	ALL(SK(ALTGRAPH))					/* 119 */
	ALL(BB(0))						/* 120 */
	' ',	' ',	' ',	'\000',				/* 121 */
	ALL(BB(0))						/* 122 */
	ALL(HOLE)						/* 123 */
	'<',	'>',	NOP,	'<',				/* 124 */
	ALL(BF(14))						/* 125 */
	ALL(ERROR)						/* 126 */
	ALL(IDLE)						/* 127 */
@

