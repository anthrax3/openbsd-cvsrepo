head	1.11;
access;
symbols
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.8
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.6
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.4
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@ * @;


1.11
date	2002.04.19.00.05.20;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2001.05.01.17.20.20;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.30.16.00.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.07.06.13.42.26;	author pefo;	state Exp;
branches
	1.8.8.1;
next	1.7;

1.7
date	98.05.29.00.42.53;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	97.09.14.10.37.57;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.09.01.16.48.07;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.06.30.00.37.09;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.15.30.54;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.29.11.21.09;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.04.22.20.21.55;	author hannken;	state Exp;
branches;
next	;

1.8.8.1
date	2000.10.06.20.40.27;	author jason;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Do not commit kbd for arches where it provides no real support.
While there, remove dead parts.
@
text
@/*	$OpenBSD: kbd_i386.c,v 1.10 2001/05/01 17:20:20 aaron Exp $	*/

/*
 * Copyright (c) 1996 Juergen Hannken-Illjes
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed for the NetBSD Project
 *	by Juergen Hannken-Illjes.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <machine/pccons.h>

#include <paths.h>
#include <unistd.h>
#include <fcntl.h>
#include <err.h>
#include <stdio.h>

#define NUM_NAMES	10

struct {
	char *name[NUM_NAMES];
	pccons_keymap_t map[KB_NUM_KEYS];
} keymaps[] = {

  {
#include "tables/us.english"
  },
  {
#include "tables/german"
  },
  {
#include "tables/koi8"
  },
  {
#include "tables/french"
  },
  {
#include "tables/swedish"
  },
  {
#include "tables/swedish7"
  },
  {
  { NULL }
  }
};

extern char *__progname;

void
kbd_list()
{
	int i, j;

	printf("tables available:\n%-16s %s\n\n", "encoding", "nick names");
	for (i = 0; keymaps[i].name[0]; i++) {
		printf("%-16s",keymaps[i].name[0]);
		for (j = 1; j < NUM_NAMES && keymaps[i].name[j]; j++)
			printf(" %s", keymaps[i].name[j]);
		printf("\n");
	}
}

void
kbd_set(name, verbose)
	char *name;
	int verbose;
{
	int i, j, fd;
	pccons_keymap_t *map = NULL;

	for (i = 0; keymaps[i].name[0]; i++)
		for (j = 0; j < NUM_NAMES && keymaps[i].name[j]; j++)
			if (strcmp(keymaps[i].name[j], name) == 0) {
				name = keymaps[i].name[0];
				map = keymaps[i].map;
				break;
			}

	if (map == NULL) {
		fprintf(stderr, "%s: no such keymap: %s\n", __progname, name);
		exit(1);
	}

	if ((fd = open(_PATH_CONSOLE, O_RDONLY)) < 0)
		err(1, "%s", _PATH_CONSOLE);

	if (ioctl(fd, CONSOLE_SET_KEYMAP, map) < 0)
		err(1, "CONSOLE_SET_KEYMAP");

	close(fd);

	if (verbose)
		fprintf(stderr, "keyboard mapping set to %s\n", name);
}
@


1.10
log
@Remove PCVT cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.9 2000/06/30 16:00:09 millert Exp $	*/
@


1.9
log
@warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.8 1998/07/06 13:42:26 pefo Exp $	*/
d37 1
a37 3
#ifdef HAVEPCVT
#include <machine/pcvt_ioctl.h>
#endif
a75 12
int
ispcvt()
{
#ifdef HAVEPCVT
	struct pcvtid pcvtid;
		
	return ioctl(0, VGAPCVTID, &pcvtid);
#else
	return(-1);
#endif
}

d81 7
a87 11
	if (ispcvt() < 0) {
		printf("tables available:\n%-16s %s\n\n",
		       "encoding", "nick names");
		for (i = 0; keymaps[i].name[0]; i++) {
			printf("%-16s",keymaps[i].name[0]);
			for (j = 1; j < NUM_NAMES && keymaps[i].name[j]; j++)
				printf(" %s", keymaps[i].name[j]);
			printf("\n");
		}
	} else
		printf("consult 'keycap' database for kbd mapping tables\n");
d95 2
d98 15
a112 30
	if (ispcvt() < 0) {
		int i, j, fd;
		pccons_keymap_t *map = NULL;

		for (i = 0; keymaps[i].name[0]; i++)
			for (j = 0; j < NUM_NAMES && keymaps[i].name[j]; j++)
				if (strcmp(keymaps[i].name[j], name) == 0) {
					name = keymaps[i].name[0];
					map = keymaps[i].map;
					break;
				}

		if (map == NULL) {
			fprintf(stderr, "%s: no such keymap: %s\n",
				__progname, name);
			exit(1);
		}

		if ((fd = open(_PATH_CONSOLE, O_RDONLY)) < 0)
			err(1, "%s", _PATH_CONSOLE);

		if (ioctl(fd, CONSOLE_SET_KEYMAP, map) < 0)
			err(1, "CONSOLE_SET_KEYMAP");

		close(fd);

		if (verbose)
			fprintf(stderr, "keyboard mapping set to %s\n", name);
	} else {
		char buf[32];
d114 2
a115 1
		snprintf(buf, sizeof(buf), "kcon -m %s", name);
d117 4
a120 3
		if (system(buf))
			err(1, "%s", name);
	}
@


1.8
log
@Some ports uses kbd since they have pc style keyboard interfaces but
they don't use pcvt which is i386 specific. Fixed with a define:
-DHAVEPCVT.
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.7 1998/05/29 00:42:53 mickey Exp $	*/
d148 1
a148 1
			err(1, name);
@


1.8.8.1
log
@Pull in patch from current (more to come...):
Fix (millert):
warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.8 1998/07/06 13:42:26 pefo Exp $	*/
d148 1
a148 1
			err(1, "%s", name);
@


1.7
log
@add support for pcvt.
ugly call system(kcon) when needed to avoid code copying.
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.6 1997/09/14 10:37:57 deraadt Exp $	*/
d37 1
d39 1
d81 1
d85 3
@


1.6
log
@some -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.5 1996/09/01 16:48:07 deraadt Exp $	*/
d37 1
d76 8
d89 11
a99 7
	printf("tables available:\n%-16s %s\n\n", "encoding", "nick names");
	for (i = 0; keymaps[i].name[0]; i++) {
		printf("%-16s",keymaps[i].name[0]);
		for (j = 1; j < NUM_NAMES && keymaps[i].name[j]; j++)
			printf(" %s", keymaps[i].name[j]);
		printf("\n");
	}
a106 2
	int i, j, fd;
	pccons_keymap_t *map = NULL;
d108 30
a137 12
	for (i = 0; keymaps[i].name[0]; i++)
		for (j = 0; j < NUM_NAMES && keymaps[i].name[j]; j++)
			if (strcmp(keymaps[i].name[j], name) == 0) {
				name = keymaps[i].name[0];
				map = keymaps[i].map;
				break;
			}

	if (map == NULL) {
		fprintf(stderr, "%s: no such keymap: %s\n", __progname, name);
		exit(1);
	}
d139 1
a139 2
	if ((fd = open(_PATH_CONSOLE, O_RDONLY)) < 0)
		err(1, "%s", _PATH_CONSOLE);
d141 3
a143 7
	if (ioctl(fd, CONSOLE_SET_KEYMAP, map) < 0)
		err(1, "CONSOLE_SET_KEYMAP");

	close(fd);

	if (verbose)
		fprintf(stderr, "keyboard mapping set to %s\n", name);
@


1.5
log
@change keymap_t to pccons_keymap_t in pccons
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.4 1996/06/30 00:37:09 maja Exp $	*/
d38 1
@


1.4
log
@Added support for swedish keyboards (both 7 and 8-bit).
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.3 1996/06/23 15:30:54 deraadt Exp $	*/
d46 1
a46 1
	keymap_t map[KB_NUM_KEYS];
d94 1
a94 1
	keymap_t *map = NULL;
@


1.3
log
@french key table; from matthieu@@mipnet.fr
@
text
@d1 1
a1 1
/*	$OpenBSD: kbd_i386.c,v 1.1 1996/04/22 20:21:55 hannken Exp $	*/
d60 6
@


1.2
log
@Split the MD part into different tables.
Add KOI8 russian encoding.
@
text
@d59 3
@


1.1
log
@New prog to change pccons's keymap encoding for national keyboards
@
text
@d1 1
a1 1
/*	$OpenBSD: $	*/
d49 2
a50 130
  { { "US/english", "us", "default" },
/*  type       unshift   shift     control   altgr     shift_altgr scancode */
    KB_NONE,   "",       "",       "",       "",       "",  /* 0 unused */
    KB_ASCII,  "\033",   "\033",   "\033",   "",       "",  /* 1 ESCape */
    KB_ASCII,  "1",      "!",      "!",      "",       "",  /* 2 1 */
    KB_ASCII,  "2",      "@@",      "\000",   "",       "",  /* 3 2 */
    KB_ASCII,  "3",      "#",      "#",      "",       "",  /* 4 3 */
    KB_ASCII,  "4",      "$",      "$",      "",       "",  /* 5 4 */
    KB_ASCII,  "5",      "%",      "%",      "",       "",  /* 6 5 */
    KB_ASCII,  "6",      "^",      "\036",   "",       "",  /* 7 6 */
    KB_ASCII,  "7",      "&",      "&",      "",       "",  /* 8 7 */
    KB_ASCII,  "8",      "*",      "\010",   "",       "",  /* 9 8 */
    KB_ASCII,  "9",      "(",      "(",      "",       "",  /* 10 9 */
    KB_ASCII,  "0",      ")",      ")",      "",       "",  /* 11 0 */
    KB_ASCII,  "-",      "_",      "\037",   "",       "",  /* 12 - */
    KB_ASCII,  "=",      "+",      "+",      "",       "",  /* 13 = */
    KB_ASCII,  "\177",   "\177",   "\010",   "",       "",  /* 14 backspace */
    KB_ASCII,  "\t",     "\177\t", "\t",     "",       "",  /* 15 tab */
    KB_ASCII,  "q",      "Q",      "\021",   "",       "",  /* 16 q */
    KB_ASCII,  "w",      "W",      "\027",   "",       "",  /* 17 w */
    KB_ASCII,  "e",      "E",      "\005",   "",       "",  /* 18 e */
    KB_ASCII,  "r",      "R",      "\022",   "",       "",  /* 19 r */
    KB_ASCII,  "t",      "T",      "\024",   "",       "",  /* 20 t */
    KB_ASCII,  "y",      "Y",      "\031",   "",       "",  /* 21 y */
    KB_ASCII,  "u",      "U",      "\025",   "",       "",  /* 22 u */
    KB_ASCII,  "i",      "I",      "\011",   "",       "",  /* 23 i */
    KB_ASCII,  "o",      "O",      "\017",   "",       "",  /* 24 o */
    KB_ASCII,  "p",      "P",      "\020",   "",       "",  /* 25 p */
    KB_ASCII,  "[",      "{",      "\033",   "",       "",  /* 26 [ */
    KB_ASCII,  "]",      "}",      "\035",   "",       "",  /* 27 ] */
    KB_ASCII,  "\r",     "\r",     "\n",     "",       "",  /* 28 return */
    KB_CTL,    "",       "",       "",       "",       "",  /* 29 control */
    KB_ASCII,  "a",      "A",      "\001",   "",       "",  /* 30 a */
    KB_ASCII,  "s",      "S",      "\023",   "",       "",  /* 31 s */
    KB_ASCII,  "d",      "D",      "\004",   "",       "",  /* 32 d */
    KB_ASCII,  "f",      "F",      "\006",   "",       "",  /* 33 f */
    KB_ASCII,  "g",      "G",      "\007",   "",       "",  /* 34 g */
    KB_ASCII,  "h",      "H",      "\010",   "",       "",  /* 35 h */
    KB_ASCII,  "j",      "J",      "\n",     "",       "",  /* 36 j */
    KB_ASCII,  "k",      "K",      "\013",   "",       "",  /* 37 k */
    KB_ASCII,  "l",      "L",      "\014",   "",       "",  /* 38 l */
    KB_ASCII,  ";",      ":",      ";",      "",       "",  /* 39 ; */
    KB_ASCII,  "'",      "\"",     "'",      "",       "",  /* 40 ' */
    KB_ASCII,  "`",      "~",      "`",      "",       "",  /* 41 ` */
    KB_SHIFT,  "",       "",       "",       "",       "",  /* 42 shift */
    KB_ASCII,  "\\",     "|",      "\034",   "",       "",  /* 43 \ */
    KB_ASCII,  "z",      "Z",      "\032",   "",       "",  /* 44 z */
    KB_ASCII,  "x",      "X",      "\030",   "",       "",  /* 45 x */
    KB_ASCII,  "c",      "C",      "\003",   "",       "",  /* 46 c */
    KB_ASCII,  "v",      "V",      "\026",   "",       "",  /* 47 v */
    KB_ASCII,  "b",      "B",      "\002",   "",       "",  /* 48 b */
    KB_ASCII,  "n",      "N",      "\016",   "",       "",  /* 49 n */
    KB_ASCII,  "m",      "M",      "\r",     "",       "",  /* 50 m */
    KB_ASCII,  ",",      "<",      "<",      "",       "",  /* 51 , */
    KB_ASCII,  ".",      ">",      ">",      "",       "",  /* 52 . */
    KB_ASCII,  "/",      "?",      "\037",   "",       "",  /* 53 / */
    KB_SHIFT,  "",       "",       "",       "",       "",  /* 54 shift */
    KB_KP,     "*",      "*",      "*",      "",       "",  /* 55 kp * */
    KB_ALT,    "",       "",       "",       "",       "",  /* 56 alt */
    KB_ASCII,  " ",      " ",      "\000",   "",       "",  /* 57 space */
    KB_CAPS,   "",       "",       "",       "",       "",  /* 58 caps */
    KB_FUNC,   "\033[M", "\033[Y", "\033[k", "",       "",  /* 59 f1 */
    KB_FUNC,   "\033[N", "\033[Z", "\033[l", "",       "",  /* 60 f2 */
    KB_FUNC,   "\033[O", "\033[a", "\033[m", "",       "",  /* 61 f3 */
    KB_FUNC,   "\033[P", "\033[b", "\033[n", "",       "",  /* 62 f4 */
    KB_FUNC,   "\033[Q", "\033[c", "\033[o", "",       "",  /* 63 f5 */
    KB_FUNC,   "\033[R", "\033[d", "\033[p", "",       "",  /* 64 f6 */
    KB_FUNC,   "\033[S", "\033[e", "\033[q", "",       "",  /* 65 f7 */
    KB_FUNC,   "\033[T", "\033[f", "\033[r", "",       "",  /* 66 f8 */
    KB_FUNC,   "\033[U", "\033[g", "\033[s", "",       "",  /* 67 f9 */
    KB_FUNC,   "\033[V", "\033[h", "\033[t", "",       "",  /* 68 f10 */
    KB_NUM,    "",       "",       "",       "",       "",  /* 69 num lock */
    KB_SCROLL, "",       "",       "",       "",       "",  /* 70 scroll lock */
    KB_KP,     "7",      "\033[H", "7",      "",       "",  /* 71 kp 7 */
    KB_KP,     "8",      "\033[A", "8",      "",       "",  /* 72 kp 8 */
    KB_KP,     "9",      "\033[I", "9",      "",       "",  /* 73 kp 9 */
    KB_KP,     "-",      "-",      "-",      "",       "",  /* 74 kp - */
    KB_KP,     "4",      "\033[D", "4",      "",       "",  /* 75 kp 4 */
    KB_KP,     "5",      "\033[E", "5",      "",       "",  /* 76 kp 5 */
    KB_KP,     "6",      "\033[C", "6",      "",       "",  /* 77 kp 6 */
    KB_KP,     "+",      "+",      "+",      "",       "",  /* 78 kp + */
    KB_KP,     "1",      "\033[F", "1",      "",       "",  /* 79 kp 1 */
    KB_KP,     "2",      "\033[B", "2",      "",       "",  /* 80 kp 2 */
    KB_KP,     "3",      "\033[G", "3",      "",       "",  /* 81 kp 3 */
    KB_KP,     "0",      "\033[L", "0",      "",       "",  /* 82 kp 0 */
    KB_KP,     ",",      "\177",   ",",      "",       "",  /* 83 kp , */
    KB_NONE,   "",       "",       "",       "",       "",  /* 84 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 85 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 86 0 */
    KB_FUNC,   "\033[W", "\033[i", "\033[u", "",       "",  /* 87 f11 */
    KB_FUNC,   "\033[X", "\033[j", "\033[v", "",       "",  /* 88 f12 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 89 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 90 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 91 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 92 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 93 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 94 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 95 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 96 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 97 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 98 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 99 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 100 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 101 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 102 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 103 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 104 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 105 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 106 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 107 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 108 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 109 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 110 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 111 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 112 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 113 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 114 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 115 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 116 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 117 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 118 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 119 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 120 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 121 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 122 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 123 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 124 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 125 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 126 */
    KB_NONE,   "",       "",       "",       "",       ""   /* 127 */
d52 5
a56 131

  { { "German", "german", "deutsch", "ge", "de" },
/*  type       unshift   shift     control   altgr     shift_altgr scancode */
    KB_NONE,   "",       "",       "",       "",       "",  /* 0 unused */
    KB_ASCII,  "\033",   "\033",   "\033",   "",       "",  /* 1 ESCape */
    KB_ASCII,  "1",      "!",      "!",      "",       "",  /* 2 1 */
    KB_ASCII,  "2",      "\"",     "\"",     "\262",   "",  /* 3 2 */
    KB_ASCII,  "3",      "\247",   "\247",   "\263",   "",  /* 4 3 */
    KB_ASCII,  "4",      "$",      "$",      "",       "",  /* 5 4 */
    KB_ASCII,  "5",      "%",      "%",      "",       "",  /* 6 5 */
    KB_ASCII,  "6",      "&",      "&",      "",       "",  /* 7 6 */
    KB_ASCII,  "7",      "/",      "/",      "{",      "",  /* 8 7 */
    KB_ASCII,  "8",      "(",      "\033",   "[",      "",  /* 9 8 */
    KB_ASCII,  "9",      ")",      "\035",   "]",      "",  /* 10 9 */
    KB_ASCII,  "0",      "=",      "=",      "}",      "",  /* 11 0 */
    KB_ASCII,  "\337",   "?",      "\034",   "\\",     "",  /* 12 sz */
    KB_ASCII,  "'",      "`",      "`",      "",       "",  /* 13 = */
    KB_ASCII,  "\177",   "\177",   "\010",   "",       "",  /* 14 backspace */
    KB_ASCII,  "\t",     "\177\t", "\t",     "",       "",  /* 15 tab */
    KB_ASCII,  "q",      "Q",      "\021",   "@@",      "",  /* 16 q */
    KB_ASCII,  "w",      "W",      "\027",   "",       "",  /* 17 w */
    KB_ASCII,  "e",      "E",      "\005",   "",       "",  /* 18 e */
    KB_ASCII,  "r",      "R",      "\022",   "",       "",  /* 19 r */
    KB_ASCII,  "t",      "T",      "\024",   "",       "",  /* 20 t */
    KB_ASCII,  "z",      "Z",      "\032",   "",       "",  /* 21 z */
    KB_ASCII,  "u",      "U",      "\025",   "",       "",  /* 22 u */
    KB_ASCII,  "i",      "I",      "\011",   "",       "",  /* 23 i */
    KB_ASCII,  "o",      "O",      "\017",   "",       "",  /* 24 o */
    KB_ASCII,  "p",      "P",      "\020",   "",       "",  /* 25 p */
    KB_ASCII,  "\374",   "\334",   "\374",   "",       "",  /* 26 ue */
    KB_ASCII,  "+",      "*",      "+",      "~",      "",  /* 27 + */
    KB_ASCII,  "\r",     "\r",     "\n",     "",       "",  /* 28 return */
    KB_CTL,    "",       "",       "",       "",       "",  /* 29 control */
    KB_ASCII,  "a",      "A",      "\001",   "",       "",  /* 30 a */
    KB_ASCII,  "s",      "S",      "\023",   "",       "",  /* 31 s */
    KB_ASCII,  "d",      "D",      "\004",   "",       "",  /* 32 d */
    KB_ASCII,  "f",      "F",      "\006",   "",       "",  /* 33 f */
    KB_ASCII,  "g",      "G",      "\007",   "",       "",  /* 34 g */
    KB_ASCII,  "h",      "H",      "\010",   "",       "",  /* 35 h */
    KB_ASCII,  "j",      "J",      "\n",     "",       "",  /* 36 j */
    KB_ASCII,  "k",      "K",      "\013",   "",       "",  /* 37 k */
    KB_ASCII,  "l",      "L",      "\014",   "",       "",  /* 38 l */
    KB_ASCII,  "\366",   "\326",   "\366",   "",       "",  /* 39 oe */
    KB_ASCII,  "\344",   "\304",   "\344",   "",       "",  /* 40 ae */
    KB_ASCII,  "^",      "\260",   "\036",   "",       "",  /* 41 ^ */
    KB_SHIFT,  "",       "",       "",       "",       "",  /* 42 shift */
    KB_ASCII,  "#",      "'",      "#",      "",       "",  /* 43 # */
    KB_ASCII,  "y",      "Y",      "\031",   "",       "",  /* 44 y */
    KB_ASCII,  "x",      "X",      "\030",   "",       "",  /* 45 x */
    KB_ASCII,  "c",      "C",      "\003",   "",       "",  /* 46 c */
    KB_ASCII,  "v",      "V",      "\026",   "",       "",  /* 47 v */
    KB_ASCII,  "b",      "B",      "\002",   "",       "",  /* 48 b */
    KB_ASCII,  "n",      "N",      "\016",   "",       "",  /* 49 n */
    KB_ASCII,  "m",      "M",      "\r",     "\265",   "",  /* 50 m */
    KB_ASCII,  ",",      ";",      ",",      "",       "",  /* 51 , */
    KB_ASCII,  ".",      ":",      ".",      "",       "",  /* 52 . */
    KB_ASCII,  "-",      "_",      "\037",   "",       "",  /* 53 - */
    KB_SHIFT,  "",       "",       "",       "",       "",  /* 54 shift */
    KB_KP,     "*",      "*",      "*",      "",       "",  /* 55 kp * */
    KB_ALT,    "",       "",       "",       "",       "",  /* 56 alt */
    KB_ASCII,  " ",      " ",      "\000",   "",       "",  /* 57 space */
    KB_CAPS,   "",       "",       "",       "",       "",  /* 58 caps */
    KB_FUNC,   "\033[M", "\033[Y", "\033[k", "",       "",  /* 59 f1 */
    KB_FUNC,   "\033[N", "\033[Z", "\033[l", "",       "",  /* 60 f2 */
    KB_FUNC,   "\033[O", "\033[a", "\033[m", "",       "",  /* 61 f3 */
    KB_FUNC,   "\033[P", "\033[b", "\033[n", "",       "",  /* 62 f4 */
    KB_FUNC,   "\033[Q", "\033[c", "\033[o", "",       "",  /* 63 f5 */
    KB_FUNC,   "\033[R", "\033[d", "\033[p", "",       "",  /* 64 f6 */
    KB_FUNC,   "\033[S", "\033[e", "\033[q", "",       "",  /* 65 f7 */
    KB_FUNC,   "\033[T", "\033[f", "\033[r", "",       "",  /* 66 f8 */
    KB_FUNC,   "\033[U", "\033[g", "\033[s", "",       "",  /* 67 f9 */
    KB_FUNC,   "\033[V", "\033[h", "\033[t", "",       "",  /* 68 f10 */
    KB_NUM,    "",       "",       "",       "",       "",  /* 69 num lock */
    KB_SCROLL, "",       "",       "",       "",       "",  /* 70 scroll lock */
    KB_KP,     "7",      "\033[H", "7",      "",       "",  /* 71 kp 7 */
    KB_KP,     "8",      "\033[A", "8",      "",       "",  /* 72 kp 8 */
    KB_KP,     "9",      "\033[I", "9",      "",       "",  /* 73 kp 9 */
    KB_KP,     "-",      "-",      "-",      "",       "",  /* 74 kp - */
    KB_KP,     "4",      "\033[D", "4",      "",       "",  /* 75 kp 4 */
    KB_KP,     "5",      "\033[E", "5",      "",       "",  /* 76 kp 5 */
    KB_KP,     "6",      "\033[C", "6",      "",       "",  /* 77 kp 6 */
    KB_KP,     "+",      "+",      "+",      "",       "",  /* 78 kp + */
    KB_KP,     "1",      "\033[F", "1",      "",       "",  /* 79 kp 1 */
    KB_KP,     "2",      "\033[B", "2",      "",       "",  /* 80 kp 2 */
    KB_KP,     "3",      "\033[G", "3",      "",       "",  /* 81 kp 3 */
    KB_KP,     "0",      "\033[L", "0",      "",       "",  /* 82 kp 0 */
    KB_KP,     ",",      "\177",   ",",      "",       "",  /* 83 kp , */
    KB_NONE,   "",       "",       "",       "",       "",  /* 84 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 85 0 */
    KB_ASCII,  "<",      ">",      "<",      "|",      "",  /* 86 > */
    KB_FUNC,   "\033[W", "\033[i", "\033[u", "",       "",  /* 87 f11 */
    KB_FUNC,   "\033[X", "\033[j", "\033[v", "",       "",  /* 88 f12 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 89 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 90 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 91 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 92 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 93 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 94 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 95 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 96 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 97 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 98 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 99 0 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 100 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 101 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 102 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 103 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 104 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 105 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 106 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 107 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 108 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 109 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 110 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 111 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 112 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 113 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 114 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 115 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 116 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 117 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 118 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 119 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 120 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 121 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 122 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 123 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 124 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 125 */
    KB_NONE,   "",       "",       "",       "",       "",  /* 126 */
    KB_NONE,   "",       "",       "",       "",       ""   /* 127 */
d58 2
a59 2

  { { NULL }
@
