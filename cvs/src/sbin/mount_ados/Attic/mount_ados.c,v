head	1.17;
access;
symbols
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.18
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.16
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.14
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2007.06.01.08.05.22;	author deraadt;	state dead;
branches;
next	1.16;

1.16
date	2007.06.01.05.37.14;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2007.03.20.03.45.54;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2006.12.15.12.38.15;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2005.04.08.20.09.36;	author jaredy;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.03.22.41.40;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.02.22.38.53;	author avsm;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.11.06.22.13;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.23.18.54.12;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.36;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.08.24.08.07.05;	author downsj;	state Exp;
branches;
next	1.6;

1.6
date	97.08.20.05.10.17;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.41.16;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.12.16.17.11.36;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.31.14;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.21.23.46.29;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@really gone
@
text
@@


1.16
log
@remove crufty adosfs.  everytime we try to change a vfs layer interface,
adosfs has the issue and in an entirely different way.  noone uses this
code so this is hte best way to handle the problem
diff from pedro who went to sleep but we need to move ahead; ok thib
@
text
@@


1.15
log
@remove some bogus *p, from charles longeau
ok deraadt millert
@
text
@a0 194
/*	$OpenBSD: mount_ados.c,v 1.14 2006/12/15 12:38:15 jmc Exp $	*/
/*	$NetBSD: mount_ados.c,v 1.5 1996/04/13 01:30:59 jtc Exp $	*/

/*
 * Copyright (c) 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef lint
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.14 2006/12/15 12:38:15 jmc Exp $";
#endif /* not lint */

#include <sys/cdefs.h>
#include <sys/param.h>
#include <sys/mount.h>
#include <sys/stat.h>
#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <grp.h>
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "mntopts.h"

const struct mntopt mopts[] = {
	MOPT_STDOPTS,
	{ NULL }
};

gid_t	a_gid(char *);
uid_t	a_uid(char *);
mode_t	a_mask(char *);
void	usage(void);

int
main(int argc, char *argv[])
{
	struct adosfs_args args;
	struct stat sb;
	int c, mntflags, set_gid, set_uid, set_mask;
	char *dev, dir[MAXPATHLEN];

	mntflags = set_gid = set_uid = set_mask = 0;
	(void)memset(&args, '\0', sizeof(args));

	while ((c = getopt(argc, argv, "u:g:m:o:")) != -1) {
		switch (c) {
		case 'u':
			args.uid = a_uid(optarg);
			set_uid = 1;
			break;
		case 'g':
			args.gid = a_gid(optarg);
			set_gid = 1;
			break;
		case 'm':
			args.mask = a_mask(optarg);
			set_mask = 1;
			break;
		case 'o':
			getmntopts(optarg, mopts, &mntflags);
			break;
		case '?':
		default:
			usage();
			break;
		}
	}

	if (optind + 2 != argc)
		usage();

	dev = argv[optind];
	if (realpath(argv[optind + 1], dir) == NULL)
		err(1, "realpath %s", argv[optind + 1]);

	args.fspec = dev;
	args.export_info.ex_root = -2;	/* unchecked anyway on DOS fs */
	if (mntflags & MNT_RDONLY)
		args.export_info.ex_flags = MNT_EXRDONLY;
	else
		args.export_info.ex_flags = 0;
	if (!set_gid || !set_uid || !set_mask) {
		if (stat(dir, &sb) == -1)
			err(1, "stat %s", dir);

		if (!set_uid)
			args.uid = sb.st_uid;
		if (!set_gid)
			args.gid = sb.st_gid;
		if (!set_mask)
			args.mask = sb.st_mode & (S_IRWXU | S_IRWXG | S_IRWXO);
	}

	if (mount(MOUNT_ADOSFS, dir, mntflags, &args) < 0) {
		if (errno == EOPNOTSUPP)
			errx(1, "%s: Filesystem not supported by kernel", dir);
		else
			err(1, "%s", dir);
	}
	exit (0);
}

gid_t
a_gid(char *s)
{
	struct group *gr;
	char *gname;
	gid_t gid;

	if ((gr = getgrnam(s)) != NULL)
		gid = gr->gr_gid;
	else {
		for (gname = s; isdigit(*s); ++s);
		if (!*s)
			gid = atoi(gname);
		else
			errx(1, "unknown group id: %s", gname);
	}
	return (gid);
}

uid_t
a_uid(char *s)
{
	struct passwd *pw;
	char *uname;
	uid_t uid;

	if ((pw = getpwnam(s)) != NULL)
		uid = pw->pw_uid;
	else {
		for (uname = s; isdigit(*s); ++s);
		if (!*s)
			uid = atoi(uname);
		else
			errx(1, "unknown user id: %s", uname);
	}
	return (uid);
}

mode_t
a_mask(char *s)
{
	int done, rv;
	char *ep;

	done = 0;
	if (*s >= '0' && *s <= '7') {
		done = 1;
		rv = strtol(optarg, &ep, 8);
	}
	if (!done || rv < 0 || *ep)
		errx(1, "invalid file mode: %s", s);
	return (rv);
}

void
usage(void)
{

	fprintf(stderr,
	    "usage: mount_ados [-g gid] [-m mask] [-o options] [-u uid] special node\n");
	exit(1);
}
@


1.14
log
@sort options; sync usage;
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.13 2005/04/08 20:09:36 jaredy Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.13 2005/04/08 20:09:36 jaredy Exp $";
d143 1
a143 1
		for (gname = s; *s && isdigit(*s); ++s);
d162 1
a162 1
		for (uname = s; *s && isdigit(*s); ++s);
@


1.13
log
@Sync with recent realpath(3) changes:  on failure, don't use the second
argument "resolved", since it is undefined.

ok and help millert, otto
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.12 2003/07/03 22:41:40 tedu Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.12 2003/07/03 22:41:40 tedu Exp $";
d192 1
a192 1
	    "usage: mount_ados [-o options] [-u user] [-g group] [-m mask] bdev dir\n");
@


1.12
log
@use realpath() in helpers instead of doing it ourselves every time.
also fixes pr1662.  from otto moerbeek
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.11 2003/07/02 22:38:53 avsm Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.11 2003/07/02 22:38:53 avsm Exp $";
d104 1
a104 1
		err(1, "realpath %s", dir);
@


1.11
log
@convert strncat -> strlcat
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.10 2003/06/11 06:22:13 deraadt Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.10 2003/06/11 06:22:13 deraadt Exp $";
d70 1
a70 1
	char *dev, *dir, ndir[MAXPATHLEN+1];
d103 2
a104 10
	dir = argv[optind + 1];
	if (dir[0] != '/') {
		warnx("\"%s\" is a relative path.", dir);
		if (getcwd(ndir, sizeof(ndir)) == NULL)
			err(1, "getcwd");
		strlcat(ndir, "/", sizeof(ndir));
		strlcat(ndir, dir, sizeof(ndir));
		dir = ndir;
		warnx("using \"%s\" instead.", dir);
	}
@


1.10
log
@ansification
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.9 2002/04/23 18:54:12 espie Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.9 2002/04/23 18:54:12 espie Exp $";
d108 2
a109 2
		strncat(ndir, "/", sizeof(ndir) - strlen(ndir));
		strncat(ndir, dir, sizeof(ndir) - strlen(ndir));
@


1.9
log
@In mount.h, rename field export -> export_info, to avoid collision with C++.
Synch files that use that field.

(This argument is an internal interface specific to OpenBSD, so it won't
cause compatibility problems.)

(No bump, not an ABI change).

ok art, millert...
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.8 2002/02/16 21:27:36 millert Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.8 2002/02/16 21:27:36 millert Exp $";
d65 1
a65 3
main(argc, argv)
	int argc;
	char **argv;
d142 1
a142 2
a_gid(s)
	char *s;
d161 1
a161 2
a_uid(s)
	char *s;
d180 1
a180 2
a_mask(s)
	char *s;
d196 1
a196 1
usage()
d199 2
a200 1
	fprintf(stderr, "usage: mount_ados [-o options] [-u user] [-g group] [-m mask] bdev dir\n");
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.7 1997/08/24 08:07:05 downsj Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.7 1997/08/24 08:07:05 downsj Exp $";
d117 1
a117 1
	args.export.ex_root = -2;	/* unchecked anyway on DOS fs */
d119 1
a119 1
		args.export.ex_flags = MNT_EXRDONLY;
d121 1
a121 1
		args.export.ex_flags = 0;
@


1.7
log
@More err()/warn()/etc. argument fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.6 1997/08/20 05:10:17 millert Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.6 1997/08/20 05:10:17 millert Exp $";
d59 4
a62 4
gid_t	a_gid __P((char *));
uid_t	a_uid __P((char *));
mode_t	a_mask __P((char *));
void	usage __P((void));
@


1.6
log
@Print "Filesystem not supported by kernel" not "Operation not supported by
device" (EOPNOTSUPP) so the real problem is obvious.  Idea from Peter Seebach
<seebs@@taniemarie.solon.com>.
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.5 1997/01/15 23:41:16 millert Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.5 1997/01/15 23:41:16 millert Exp $";
d138 1
a138 1
			err(1, dir);
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.4 1996/12/16 17:11:36 deraadt Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.4 1996/12/16 17:11:36 deraadt Exp $";
d44 1
d134 6
a139 3
	if (mount(MOUNT_ADOSFS, dir, mntflags, &args) < 0)
		err(1, "mount");

@


1.4
log
@does noone know how to use strncat correctly?
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.3 1996/06/23 14:31:14 deraadt Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.3 1996/06/23 14:31:14 deraadt Exp $";
d76 1
a76 1
	while ((c = getopt(argc, argv, "u:g:m:o:")) != EOF) {
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ados.c,v 1.5 1996/04/13 01:30:59 jtc Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: mount_ados.c,v 1.5 1996/04/13 01:30:59 jtc Exp $";
d109 2
a110 2
		strncat(ndir, "/", sizeof(ndir) - strlen(ndir) - 1);
		strncat(ndir, dir, sizeof(ndir) - strlen(ndir) - 1);
@


1.2
log
@sync to netbsd 960418
@
text
@d1 1
d35 1
a35 1
static char rcsid[] = "$NetBSD: mount_ados.c,v 1.5 1996/04/13 01:30:59 jtc Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: mount_ados.c,v 1.4 1995/03/18 14:57:10 cgd Exp $	*/
d34 1
a34 1
static char rcsid[] = "$NetBSD: mount_ados.c,v 1.4 1995/03/18 14:57:10 cgd Exp $";
d52 1
a52 1
struct mntopt mopts[] = {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
