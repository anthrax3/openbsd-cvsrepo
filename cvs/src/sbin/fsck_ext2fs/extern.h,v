head	1.7;
access;
symbols
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.26
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.22
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.18
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.20
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.12
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.16
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.14
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.24
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.22
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.18
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.20
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.16
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.14
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.12
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.10
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.8
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	R19970424:1.1.1.1
	BOUYER:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2011.03.12.17.50.47;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.30.13.56.16;	author niallo;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.17.06.48.47;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.34;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.06.14.04.16.51;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.06.14.04.06.24;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.05.30.04.33.53;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.30.04.33.53;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.7
log
@These utilities can currently only operate with a 32-bit block number range,
so use daddr32_t
ok jasper
@
text
@/*	$OpenBSD: extern.h,v 1.6 2005/04/30 13:56:16 niallo Exp $	*/
/*	$NetBSD: extern.h,v 1.1 1997/06/11 11:21:46 bouyer Exp $	*/

/*
 * Copyright (c) 1997 Manuel Bouyer.
 * Copyright (c) 1994 James A. Jegers
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

void	adjust(struct inodesc *, short);
int	allocblk(void);
int	allocdir(ino_t, ino_t, int);
void	blkerror(ino_t, char *, daddr32_t);
int	bread(int, char *, daddr32_t, long);
void	bufinit(void);
void	bwrite(int, char *, daddr32_t, long);
void	cacheino(struct ext2fs_dinode *, ino_t);
int	changeino(ino_t, char *, ino_t);
int	chkrange(daddr32_t, int);
void	ckfini(int);
int	ckinode(struct ext2fs_dinode *, struct inodesc *);
void	clri(struct inodesc *, char *, int);
int	dircheck(struct inodesc *, struct ext2fs_direct *);
void	direrror(ino_t, char *);
int	dirscan(struct inodesc *);
int	dofix(struct inodesc *, char *);
void	fileerror(ino_t, ino_t, char *);
int	findino(struct inodesc *);
int	findname(struct inodesc *);
void	flush(int, struct bufarea *);
void	freeblk(daddr32_t);
void	freeino(ino_t);
void	freeinodebuf(void);
int	ftypeok(struct ext2fs_dinode *);
void	getpathname(char *, size_t, ino_t, ino_t);
void	inocleanup(void);
void	inodirty(void);
u_int64_t inosize(struct ext2fs_dinode *);
void    inossize(struct ext2fs_dinode *, u_int64_t);
int	linkup(ino_t, ino_t);
int	makeentry(ino_t, ino_t, char *);
void	pass1(void);
void	pass1b(void);
void	pass2(void);
void	pass3(void);
void	pass4(void);
int	pass1check(struct inodesc *);
int	pass4check(struct inodesc *);
void	pass5(void);
void	pinode(ino_t);
void	propagate(void);
int	reply(char *);
void	resetinodebuf(void);
int	setup(char *);
struct	ext2fs_dinode * getnextinode(ino_t);
void	catch(int);
void	catchquit(int);
void	voidquit(int);
@


1.6
log
@Support checking filesystems which have or once had large files (>4 GB)
on them.

From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.5 2003/04/17 06:48:47 tedu Exp $	*/
d32 2
a33 2
void	blkerror(ino_t, char *, daddr_t);
int	bread(int, char *, daddr_t, long);
d35 1
a35 1
void	bwrite(int, char *, daddr_t, long);
d38 1
a38 1
int	chkrange(daddr_t, int);
d50 1
a50 1
void	freeblk(daddr_t);
@


1.5
log
@strings.  mostly from deraadt@@, some from tdeval@@ and myself
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.4 2002/02/16 21:27:34 millert Exp $	*/
a37 1
struct	fstab;
d57 2
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.3 1997/06/14 04:16:51 downsj Exp $	*/
d55 1
a55 1
void	getpathname(char *, ino_t, ino_t);
@


1.3
log
@Add tags, fix man page.  Purely cosmetic.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d29 9
a37 9
void	adjust __P((struct inodesc *, short));
int	allocblk __P((void));
int	allocdir __P((ino_t, ino_t, int));
void	blkerror __P((ino_t, char *, daddr_t));
int	bread __P((int, char *, daddr_t, long));
void	bufinit __P((void));
void	bwrite __P((int, char *, daddr_t, long));
void	cacheino __P((struct ext2fs_dinode *, ino_t));
int	changeino __P((ino_t, char *, ino_t));
d39 38
a76 38
int	chkrange __P((daddr_t, int));
void	ckfini __P((int));
int	ckinode __P((struct ext2fs_dinode *, struct inodesc *));
void	clri __P((struct inodesc *, char *, int));
int	dircheck __P((struct inodesc *, struct ext2fs_direct *));
void	direrror __P((ino_t, char *));
int	dirscan __P((struct inodesc *));
int	dofix __P((struct inodesc *, char *));
void	fileerror __P((ino_t, ino_t, char *));
int	findino __P((struct inodesc *));
int	findname __P((struct inodesc *));
void	flush __P((int, struct bufarea *));
void	freeblk __P((daddr_t));
void	freeino __P((ino_t));
void	freeinodebuf __P((void));
int	ftypeok __P((struct ext2fs_dinode *));
void	getpathname __P((char *, ino_t, ino_t));
void	inocleanup __P((void));
void	inodirty __P((void));
int	linkup __P((ino_t, ino_t));
int	makeentry __P((ino_t, ino_t, char *));
void	pass1 __P((void));
void	pass1b __P((void));
void	pass2 __P((void));
void	pass3 __P((void));
void	pass4 __P((void));
int	pass1check __P((struct inodesc *));
int	pass4check __P((struct inodesc *));
void	pass5 __P((void));
void	pinode __P((ino_t));
void	propagate __P((void));
int	reply __P((char *));
void	resetinodebuf __P((void));
int	setup __P((char *));
struct	ext2fs_dinode * getnextinode __P((ino_t));
void	catch __P((int));
void	catchquit __P((int));
void	voidquit __P((int));
@


1.2
log
@Sync with NetBSD.  Purely cosmetic.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 3
/*	$NetBSD: extern.h,v 1.6 1996/09/27 22:45:12 christos Exp $	*/

/* Modified for EXT2FS on NetBSD by Manuel Bouyer, April 1997 */
d4 1
@


1.1.1.1
log
@Initial import of Manuel's fsck_ext2fs, unmodified.
@
text
@@
