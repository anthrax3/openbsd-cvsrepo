head	1.88;
access;
symbols
	OPENBSD_6_1:1.88.0.2
	OPENBSD_6_1_BASE:1.88
	OPENBSD_6_0:1.88.0.4
	OPENBSD_6_0_BASE:1.88
	OPENBSD_5_9:1.85.0.2
	OPENBSD_5_9_BASE:1.85
	OPENBSD_5_8:1.83.0.4
	OPENBSD_5_8_BASE:1.83
	OPENBSD_5_7:1.82.0.2
	OPENBSD_5_7_BASE:1.82
	OPENBSD_5_6:1.81.0.4
	OPENBSD_5_6_BASE:1.81
	OPENBSD_5_5:1.78.0.4
	OPENBSD_5_5_BASE:1.78
	OPENBSD_5_4:1.76.0.4
	OPENBSD_5_4_BASE:1.76
	OPENBSD_5_3:1.76.0.2
	OPENBSD_5_3_BASE:1.76
	OPENBSD_5_2:1.74.0.4
	OPENBSD_5_2_BASE:1.74
	OPENBSD_5_1_BASE:1.74
	OPENBSD_5_1:1.74.0.2
	OPENBSD_5_0:1.71.0.2
	OPENBSD_5_0_BASE:1.71
	OPENBSD_4_9:1.68.0.2
	OPENBSD_4_9_BASE:1.68
	OPENBSD_4_8:1.67.0.2
	OPENBSD_4_8_BASE:1.67
	OPENBSD_4_7:1.66.0.2
	OPENBSD_4_7_BASE:1.66
	OPENBSD_4_6:1.66.0.4
	OPENBSD_4_6_BASE:1.66
	OPENBSD_4_5:1.56.0.10
	OPENBSD_4_5_BASE:1.56
	OPENBSD_4_4:1.56.0.8
	OPENBSD_4_4_BASE:1.56
	OPENBSD_4_3:1.56.0.6
	OPENBSD_4_3_BASE:1.56
	OPENBSD_4_2:1.56.0.4
	OPENBSD_4_2_BASE:1.56
	OPENBSD_4_1:1.56.0.2
	OPENBSD_4_1_BASE:1.56
	OPENBSD_4_0:1.53.0.4
	OPENBSD_4_0_BASE:1.53
	OPENBSD_3_9:1.53.0.2
	OPENBSD_3_9_BASE:1.53
	OPENBSD_3_8:1.50.0.4
	OPENBSD_3_8_BASE:1.50
	OPENBSD_3_7:1.50.0.2
	OPENBSD_3_7_BASE:1.50
	OPENBSD_3_6:1.46.0.6
	OPENBSD_3_6_BASE:1.46
	OPENBSD_3_5:1.46.0.4
	OPENBSD_3_5_BASE:1.46
	OPENBSD_3_4:1.46.0.2
	OPENBSD_3_4_BASE:1.46
	OPENBSD_3_3:1.42.0.2
	OPENBSD_3_3_BASE:1.42
	OPENBSD_3_2:1.40.0.2
	OPENBSD_3_2_BASE:1.40
	OPENBSD_3_1:1.39.0.2
	OPENBSD_3_1_BASE:1.39
	OPENBSD_3_0:1.36.0.2
	OPENBSD_3_0_BASE:1.36
	OPENBSD_2_9:1.35.0.2
	OPENBSD_2_9_BASE:1.35
	OPENBSD_2_8:1.33.0.2
	OPENBSD_2_8_BASE:1.33
	OPENBSD_2_7:1.31.0.2
	OPENBSD_2_7_BASE:1.31
	OPENBSD_2_6:1.28.0.4
	OPENBSD_2_6_BASE:1.28
	OPENBSD_2_5:1.28.0.2
	OPENBSD_2_5_BASE:1.28
	OPENBSD_2_4:1.25.0.2
	OPENBSD_2_4_BASE:1.25
	OPENBSD_2_3:1.23.0.2
	OPENBSD_2_3_BASE:1.23
	OPENBSD_2_2:1.22.0.2
	OPENBSD_2_2_BASE:1.22
	OPENBSD_2_1:1.18.0.2
	OPENBSD_2_1_BASE:1.18
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.88
date	2016.04.29.13.05.33;	author schwarze;	state Exp;
branches;
next	1.87;
commitid	Vc0VsXivdTDqs7ED;

1.87
date	2016.04.01.08.20.27;	author ajacoutot;	state Exp;
branches;
next	1.86;
commitid	PaZwRO1uuMIRKzah;

1.86
date	2016.04.01.08.18.56;	author ajacoutot;	state Exp;
branches;
next	1.85;
commitid	u5ex1puxVA4hDZRY;

1.85
date	2016.01.28.15.45.34;	author schwarze;	state Exp;
branches;
next	1.84;
commitid	sxSAOVqMyglOYyia;

1.84
date	2015.12.30.22.59.53;	author rpe;	state Exp;
branches;
next	1.83;
commitid	pYkeMkApkX42eKFX;

1.83
date	2015.04.29.00.10.44;	author halex;	state Exp;
branches;
next	1.82;
commitid	49Dta039GVz3p9QH;

1.82
date	2014.11.17.18.19.08;	author deraadt;	state Exp;
branches;
next	1.81;
commitid	1QNngz3xwKZzl4NA;

1.81
date	2014.07.02.13.39.41;	author sthen;	state Exp;
branches;
next	1.80;
commitid	C7zXJfaezeQ9B46S;

1.80
date	2014.04.24.19.04.54;	author tedu;	state Exp;
branches;
next	1.79;

1.79
date	2014.04.24.15.05.10;	author tedu;	state Exp;
branches;
next	1.78;

1.78
date	2013.12.12.22.02.43;	author brad;	state Exp;
branches;
next	1.77;

1.77
date	2013.11.03.18.28.34;	author deraadt;	state Exp;
branches;
next	1.76;

1.76
date	2013.01.06.14.11.12;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2012.12.11.17.09.50;	author ajacoutot;	state Exp;
branches;
next	1.74;

1.74
date	2012.02.11.00.37.04;	author krw;	state Exp;
branches;
next	1.73;

1.73
date	2012.02.08.18.22.43;	author krw;	state Exp;
branches;
next	1.72;

1.72
date	2011.12.06.21.02.39;	author halex;	state Exp;
branches;
next	1.71;

1.71
date	2011.04.23.19.35.53;	author schwarze;	state Exp;
branches;
next	1.70;

1.70
date	2011.04.17.21.26.38;	author schwarze;	state Exp;
branches;
next	1.69;

1.69
date	2011.04.15.11.23.39;	author halex;	state Exp;
branches;
next	1.68;

1.68
date	2010.09.22.13.01.10;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2010.07.25.08.49.03;	author espie;	state Exp;
branches;
next	1.66;

1.66
date	2009.05.26.22.59.15;	author schwarze;	state Exp;
branches;
next	1.65;

1.65
date	2009.05.25.21.31.24;	author schwarze;	state Exp;
branches;
next	1.64;

1.64
date	2009.05.24.21.58.06;	author schwarze;	state Exp;
branches;
next	1.63;

1.63
date	2009.05.21.01.27.52;	author schwarze;	state Exp;
branches;
next	1.62;

1.62
date	2009.05.18.20.07.35;	author schwarze;	state Exp;
branches;
next	1.61;

1.61
date	2009.05.17.00.25.34;	author schwarze;	state Exp;
branches;
next	1.60;

1.60
date	2009.05.11.22.27.22;	author schwarze;	state Exp;
branches;
next	1.59;

1.59
date	2009.05.10.19.27.25;	author schwarze;	state Exp;
branches;
next	1.58;

1.58
date	2009.05.09.17.15.49;	author schwarze;	state Exp;
branches;
next	1.57;

1.57
date	2009.05.03.17.16.12;	author schwarze;	state Exp;
branches;
next	1.56;

1.56
date	2006.10.26.12.20.55;	author ajacoutot;	state Exp;
branches;
next	1.55;

1.55
date	2006.10.04.17.46.34;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2006.10.04.04.43.20;	author hugh;	state Exp;
branches;
next	1.53;

1.53
date	2005.12.06.20.18.56;	author pedro;	state Exp;
branches;
next	1.52;

1.52
date	2005.11.24.12.08.15;	author pedro;	state Exp;
branches;
next	1.51;

1.51
date	2005.09.29.00.31.08;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2005.03.17.18.16.52;	author millert;	state Exp;
branches;
next	1.49;

1.49
date	2005.03.16.18.29.58;	author millert;	state Exp;
branches;
next	1.48;

1.48
date	2004.12.07.19.08.15;	author millert;	state Exp;
branches;
next	1.47;

1.47
date	2004.11.15.18.10.48;	author nick;	state Exp;
branches;
next	1.46;

1.46
date	2003.07.28.20.58.48;	author jmc;	state Exp;
branches;
next	1.45;

1.45
date	2003.06.30.23.47.14;	author avsm;	state Exp;
branches;
next	1.44;

1.44
date	2003.06.03.22.56.56;	author mickey;	state Exp;
branches;
next	1.43;

1.43
date	2003.03.28.21.32.30;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2003.02.08.10.19.30;	author pvalchev;	state Exp;
branches;
next	1.41;

1.41
date	2002.12.07.20.16.19;	author millert;	state Exp;
branches;
next	1.40;

1.40
date	2002.09.12.02.36.31;	author danh;	state Exp;
branches;
next	1.39;

1.39
date	2001.11.19.03.03.33;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2001.10.29.18.16.23;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	2001.10.24.11.32.13;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2001.09.09.01.07.31;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2001.03.06.20.29.48;	author niklas;	state Exp;
branches
	1.35.2.1;
next	1.34;

1.34
date	2001.01.04.06.27.45;	author angelos;	state Exp;
branches;
next	1.33;

1.33
date	2000.05.26.17.44.33;	author marc;	state Exp;
branches
	1.33.2.1;
next	1.32;

1.32
date	2000.05.26.14.51.31;	author aaron;	state Exp;
branches;
next	1.31;

1.31
date	2000.04.29.18.45.58;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2000.04.28.00.47.55;	author itojun;	state Exp;
branches;
next	1.29;

1.29
date	2000.04.24.04.23.13;	author todd;	state Exp;
branches;
next	1.28;

1.28
date	99.03.16.02.47.53;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	98.11.29.21.35.17;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	98.11.11.11.23.02;	author downsj;	state Exp;
branches;
next	1.25;

1.25
date	98.08.13.21.57.39;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	98.06.30.23.08.52;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	98.03.07.19.33.23;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	97.10.21.03.00.56;	author mickey;	state Exp;
branches;
next	1.21;

1.21
date	97.09.15.09.58.08;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	97.09.15.06.24.24;	author pierre;	state Exp;
branches;
next	1.19;

1.19
date	97.05.30.07.11.52;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	97.02.19.16.49.18;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.01.17.06.18.19;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	97.01.03.22.51.26;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	96.12.15.19.11.54;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	96.12.07.18.46.46;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	96.12.07.07.33.06;	author bitblt;	state Exp;
branches;
next	1.12;

1.12
date	96.12.06.16.49.12;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.12.04.02.02.23;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.11.06.23.03.21;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.07.27.14.12.24;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	96.07.18.09.57.35;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	96.07.12.21.34.47;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.06.17.09.09.39;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.06.16.14.39.24;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.26.10.25.20;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.23.03.18.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.19.13.14.13;	author david;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.56;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.56;	author deraadt;	state Exp;
branches;
next	;

1.33.2.1
date	2001.09.09.21.45.47;	author miod;	state Exp;
branches;
next	;

1.35.2.1
date	2001.09.12.14.37.46;	author jason;	state Exp;
branches;
next	;


desc
@@


1.88
log
@Delete invocation of mailq(1) that was present for historical reasons.
On a real mailserver, it's too noisy and may be a privacy concern.
On a machine that's not a mailserver, it's pointless.

Besides, Theo points out that running subsystems that potentially
parse untrusted user data daily, at a predictable time, as root
is not a very good idea in the first place.

Suggested by millert@@; gilles@@ matthieu@@ deraadt@@ sthen@@ agree
@
text
@#
#	$OpenBSD: daily,v 1.87 2016/04/01 08:20:27 ajacoutot Exp $
#	From: @@(#)daily	8.2 (Berkeley) 1/25/94
#
# For local additions, create the file /etc/daily.local.
# To get section headers, use the function next_part in daily.local.
#
umask 022

PARTOUT=/var/log/daily.part
MAINOUT=/var/log/daily.out
install -o 0 -g 0 -m 600    /dev/null $PARTOUT
install -o 0 -g 0 -m 600 -b /dev/null $MAINOUT

start_part() {
	TITLE=$1
	exec > $PARTOUT 2>&1
}

end_part() {
	exec >> $MAINOUT 2>&1
	test -s $PARTOUT || return
	echo ""
	echo "$TITLE"
	cat $PARTOUT
}

next_part() {
	end_part
	start_part "$1"
}

run_script() {
	f=/etc/$1
	test -e $f || return
	if [ `stat -f '%Sp%u' $f | cut -b1,6,9,11-` != '---0' ]; then
		echo "$f has insecure permissions, skipping:"
		ls -l $f
		return
	fi
	. $f
}

start_part "Running daily.local:"
run_script "daily.local"

next_part "Removing scratch and junk files:"
if [ -d /tmp -a ! -L /tmp ]; then
	cd /tmp && {
	find -x . \
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \
		-o -path './tmux-*' \) \
	    -prune -o -type f -atime +7 -execdir rm -f -- {} \; 2>/dev/null
	find -x . -type d -mtime +1 ! -path ./vi.recover ! -path ./.X11-unix \
	    ! -path ./.ICE-unix ! -name . \
	    -execdir rmdir -- {} \; >/dev/null 2>&1; }
fi

# Additional junk directory cleanup would go like this:
#if [ -d /scratch -a ! -L /scratch ]; then
#	cd /scratch && {
#	find . ! -name . -atime +1 -execdir rm -f -- {} \;
#	find . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
#	    >/dev/null 2>&1; }
#fi

next_part "Purging accounting records:"
if [ -f /var/account/acct ]; then
	mv -f /var/account/acct.2 /var/account/acct.3
	mv -f /var/account/acct.1 /var/account/acct.2
	mv -f /var/account/acct.0 /var/account/acct.1
	cp -f /var/account/acct /var/account/acct.0
	sa -sq
fi

# If ROOTBACKUP is set to 1 in the environment, and
# if filesystem named /altroot is type ffs and mounted "xx",
# use it as a backup root filesystem to be updated daily.
next_part "Backing up root filesystem:"
while [ "X$ROOTBACKUP" = X1 ]; do
	rootbak=`awk '$1 !~ /^#/ && $2 == "/altroot" && $3 == "ffs" && \
		$4 ~ /xx/ { print $1 }' < /etc/fstab`
	if [ -z "$rootbak" ]; then
		echo "No xx ffs /altroot device found in the fstab(5)."
		break
	fi
	rootbak=${rootbak#/dev/}
	bakdisk=${rootbak%%?(.)[a-p]}
	sysctl -n hw.disknames | grep -Fqw $bakdisk || break
	bakpart=${rootbak##$bakdisk?(.)}
	OLDIFS=$IFS
	IFS=,
	for d in `sysctl -n hw.disknames`; do
		# If the provided disk name is a duid, substitute the device.
		if [ X$bakdisk = X${d#*:} ]; then
			bakdisk=${d%:*}
			rootbak=$bakdisk$bakpart
		fi
	done
	IFS=$OLDIFS
	baksize=`disklabel $bakdisk 2>/dev/null | \
		awk -v "part=$bakpart:" '$1 == part { print $2 }'`
	rootdev=`mount | awk '$3 == "/" && $1 ~ /^\/dev\// && $5 == "ffs" \
		{ print substr($1, 6) }'`
	if [ -z "$rootdev" ]; then
		echo "The root filesystem is not local or not ffs."
		break
	fi
	if [ X$rootdev = X$rootbak ]; then
		echo "The device $rootdev holds both root and /altroot."
		break
	fi
	rootdisk=${rootdev%[a-p]}
	rootpart=${rootdev#$rootdisk}
	rootsize=`disklabel $rootdisk 2>/dev/null | \
		awk -v "part=$rootpart:" '$1 == part { print $2 }'`
	if [ $rootsize -gt $baksize ]; then
		echo "Root ($rootsize) is larger than /altroot ($baksize)."
		break
	fi
	next_part "Backing up root=/dev/r$rootdev to /dev/r$rootbak:"
	sync
	dd if=/dev/r$rootdev of=/dev/r$rootbak bs=16b seek=1 skip=1 \
		conv=noerror
	fsck -y /dev/r$rootbak
	break
done

next_part "Services that should be running but aren't:"
rcctl ls failed

next_part "Checking subsystem status:"
if [ "X$VERBOSESTATUS" != X0 ]; then
	echo ""
	echo "disks:"
	df -ikl
	echo ""
	dump W
else
	dump w | grep -vB1 ^Dump
fi

next_part "network:"
if [ "X$VERBOSESTATUS" != X0 ]; then
	netstat -ivn
fi

next_part "Running calendar in the background:"
if [ "X$CALENDAR" != X0 -a \
     \( -d /var/yp/`domainname` -o ! -d /var/yp/binding \) ]; then
	calendar -a &
fi

# If CHECKFILESYSTEMS is set to 1 in the environment, run fsck
# with the no-write flag.
next_part "Checking filesystems:"
[ "X$CHECKFILESYSTEMS" = X1 ] && {
	fsck -n | grep -v '^\*\* Phase'
}

next_part "Running rdist:"
if [ -f /etc/Distfile ]; then
	if [ -d /var/log/rdist ]; then
		rdist -f /etc/Distfile 2>&1 | tee /var/log/rdist/`date +%F`
	else
		rdist -f /etc/Distfile
	fi
fi

end_part
[ -s $MAINOUT ] && {
	sysctl -n kern.version
	uptime
	cat $MAINOUT
} 2>&1 | mail -s "`hostname` daily output" root


MAINOUT=/var/log/security.out
install -o 0 -g 0 -m 600 -b /dev/null $MAINOUT

start_part "Running security(8):"
export SUIDSKIP
/usr/libexec/security
end_part
rm -f $PARTOUT

[ -s $MAINOUT ] && mail -s "`hostname` daily insecurity output" root < $MAINOUT
@


1.87
log
@Tweak rcctl wording.

from ian@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.86 2016/04/01 08:18:56 ajacoutot Exp $
a141 7

# The first two regular expressions handle sendmail, the third postfix.
# When the queue is empty, smtpd(8) and exim -bp keep silent.
next_part "mail:"
mailq | grep -v -e "^/var/spool/mqueue is empty$" \
		-e "^[[:blank:]]*Total requests: 0$" \
		-e "^Mail queue is empty$"
@


1.86
log
@Rename the 'faulty' list action to 'failed'; it clearer.

prodded by matthieu@@
ok millert@@ jung@@ sthen@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.85 2016/01/28 15:45:34 schwarze Exp $
d129 1
a129 1
next_part "Services that should run but don't:"
@


1.85
log
@Run "rcctl ls faulty", which is silent when all services work as expected.
Based on an original idea and a different patch from landry@@.
OK jung@@ zhuk@@ landry@@
krw@@ agreed to the general idea
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.84 2015/12/30 22:59:53 rpe Exp $
d130 1
a130 1
rcctl ls faulty
@


1.84
log
@Remove portslocks from /etc/daily. The ports LOCKDIR was moved from /tmp
to /usr/ports/pobj years ago.

OK millert@@, ajacoutot@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.83 2015/04/29 00:10:44 halex Exp $
d128 3
@


1.83
log
@VERBOSESTATUS or no VERBOSESTATUS, failed or missing dumps are still
worth noting

"go ahead" schwarze@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.82 2014/11/17 18:19:08 deraadt Exp $
d52 1
a52 1
		-o -path ./portslocks -o -path './tmux-*' \) \
d55 1
a55 1
	    ! -path ./.ICE-unix ! -path ./portslocks ! -name . \
@


1.82
log
@Make /var/tmp a symbolic link to /tmp.  The creation of /var/tmp in the
often space-constrained /var filesystem was a historical mistake.  There
are big implications for the daemons which assume they won't run out of
space, and this is a first step towards trying to improve the situation.

Move /tmp to the same 7-day expiration rules that /var/tmp had.
vi.recover works just as well as before, except on memory filesystems;
indicating that vi should be repaired to write files into homedirs or
something.

done with rpe
ok many
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.81 2014/07/02 13:39:41 sthen Exp $
d136 2
@


1.81
log
@don't clear tmux session sockets in daily(8)'s tmp cleanup, from Rafael Zalamena
ok schwarze@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.80 2014/04/24 19:04:54 tedu Exp $
d53 1
a53 12
	    -prune -o -type f -atime +3 -execdir rm -f -- {} \; 2>/dev/null
	find -x . -type d -mtime +1 ! -path ./vi.recover ! -path ./.X11-unix \
	    ! -path ./.ICE-unix ! -path ./portslocks ! -name . \
	    -execdir rmdir -- {} \; >/dev/null 2>&1; }
fi

if [ -d /var/tmp -a ! -L /var/tmp ]; then
	cd /var/tmp && {
	find -x . \
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \
		-o -path ./portslocks -o -path './tmux-*' \) \
	    -prune -o ! -type d -atime +7 -execdir rm -f -- {} \; 2>/dev/null
@


1.80
log
@jmc spotted more ruptime tentacles
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.79 2014/04/24 15:05:10 tedu Exp $
d52 1
a52 1
		-o -path ./portslocks \) \
d63 1
a63 1
		-o -path ./portslocks \) \
@


1.79
log
@rm rwhod tentacles
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.78 2013/12/12 22:02:43 brad Exp $
a158 6

	t=/var/rwho/*
	if [ "$t" != '/var/rwho/*' ]; then
		echo ""
		ruptime
	fi
@


1.78
log
@Have df(1) in the daily output show the inodes used/free.

a few developers thought this was a reasonable/good idea.
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.77 2013/11/03 18:28:34 deraadt Exp $
a76 5

if [ -d /var/rwho -a ! -L /var/rwho ] ; then
	cd /var/rwho && {
	find . ! -name . -mtime +7 -execdir rm -f -- {} \; ; }
fi
@


1.77
log
@ugly spaces
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.76 2013/01/06 14:11:12 deraadt Exp $
d149 1
a149 1
	df -kl
@


1.76
log
@backout atactl check; I had warned that this would try a lot of code
paths which are rarely tried.  Problem reported by a few on the list.
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.74 2012/02/11 00:37:04 krw Exp $
d52 1
a52 1
	    	-o -path ./portslocks \) \
d63 1
a63 1
	    	-o -path ./portslocks \) \
d111 1
a111 1
		if [ X$bakdisk = X${d#*:} ]; then 
@


1.75
log
@Add a SMART check using atactl(8) against disks that support and have
SMART enabled.

Committing now so that it gets broader testing.
Man page bits will be added once we are confident there is no side
effect and this can stay.

inputs from sthen@@ halex@@ weerd@@
ok deraadt@@
@
text
@a145 9
for d in $(sysctl -n hw.disknames | grep -Eo '[sw]d[0-9]+'); do
	if atactl ${d} 2>&1 | sed -n '/Device has enabled/,$p' | grep -q 'SMART feature set'; then
		SMARTSTATUS=$(atactl ${d} smartstatus 2>&1 >/dev/null)
		if [ "X${SMARTSTATUS}" != X"" ]; then
			echo ""
			echo "${d}: ${SMARTSTATUS}"
		fi
	fi
done
@


1.74
log
@Fix previous fix for /altroot processing. Should now work for both
duid and device entries in fstab. As a bonus make commented out
lines in fstab in-eligable for altroot detection.

ok halex@@ deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.73 2012/02/08 18:22:43 krw Exp $
d146 9
@


1.73
log
@Let /altroot work with a duid-based fstab.

Reported by & fix tested by Dave Anderson. Thanks!

ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.72 2011/12/06 21:02:39 halex Exp $
d97 2
a98 2
	rootbak=`awk '$2 == "/altroot" && $3 == "ffs" && $4 ~ /xx/ \
		{ print $1 }' < /etc/fstab`
d107 10
@


1.72
log
@closing fd 0-2 is indeed bad style and potentially dangerous, as pointed
out by Arne Becker, who also supplied the diff, thanks!

ok schwarze@@
agreed by many
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.71 2011/04/23 19:35:53 schwarze Exp $
d93 1
a93 1
# if filesystem named /altroot is type ffs, on /dev/* and mounted "xx",
d97 2
a98 3
	rootbak=`awk '$2 == "/altroot" && $1 ~ /^\/dev\// && $3 == "ffs" && \
	    $4 ~ /xx/ \
		{ print substr($1, 6) }' < /etc/fstab`
d103 2
a104 1
	bakdisk=${rootbak%[a-p]}
d106 1
a106 1
	bakpart=${rootbak#$bakdisk}
@


1.71
log
@Even though SUIDSKIP used to be a mere shell variable, it was propagated
to the old /etc/security script because daily sourced it.
Now we fork and exec, so SUIDSKIP must be promoted to the environment.
Problem reported, fix tested and ok weerd@@.
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.70 2011/04/17 21:26:38 schwarze Exp $
d53 1
a53 1
	    -prune -o -type f -atime +3 -execdir rm -f -- {} \; 2>&-
d64 1
a64 1
	    -prune -o ! -type d -atime +7 -execdir rm -f -- {} \; 2>&-
@


1.70
log
@Switch from the old shell script /etc/security
to the new Perl script /usr/libexec/security.
The new script was tested by sthen@@ and ajacoutot@@.
Committing now due to repeated prodding from deraadt@@.
In case problems show up, they will be fixed in tree.
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.69 2011/04/15 11:23:39 halex Exp $
d196 1
@


1.69
log
@Silence errors in the temp dir cleanup process

ok phessler@@ sthen@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.68 2010/09/22 13:01:10 deraadt Exp $
d195 2
a196 2
start_part "Running /etc/security:"
run_script "security"
@


1.68
log
@Kill msgs.  Noone uses it, and it has a longjmp in it.
Lots of agreement.
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.67 2010/07/25 08:49:03 espie Exp $
d53 1
a53 1
	    -prune -o -type f -atime +3 -execdir rm -f -- {} \;
d64 1
a64 1
	    -prune -o ! -type d -atime +7 -execdir rm -f -- {} \;
@


1.67
log
@handle portslock. reminded by antoine@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.66 2009/05/26 22:59:15 schwarze Exp $
a80 4
fi

if [ -d /var/msgs -a ! -L /var/msgs ]; then
	msgs -c
@


1.66
log
@Three rdist log file name improvements on one single line:
1) replace +%e by +%d, unescaped blanks don't work at all in file names
2) replace +%b by +%m to make log files sort better by month
3) replace the home-grown +%Y.%m.%d by the standard +%F (= +%Y-%m-%d)
from Tim van der Molen <tbvdm at xs4all dot nl>, thanks!
ok okan@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.65 2009/05/25 21:31:24 schwarze Exp $
d51 2
a52 1
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \) \
d55 2
a56 1
	    ! -path ./.ICE-unix ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
d62 2
a63 1
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \) \
d66 2
a67 1
	    ! -path ./.ICE-unix ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
@


1.65
log
@polish comments, no functional change:
1) advertise *.local and next_part near the top of the three scripts
2) daily: mention smtpd(8) mailq behaviour (like for sendmail, postfix, exim)
3) weekly: drop a comment trivially rehashing the next two lines of code
documenting next_part in the scripts was suggested by jmc@@
ok sthen@@ okan@@ halex@@; "i won't object" ajacoutot@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.64 2009/05/24 21:58:06 schwarze Exp $
d178 1
a178 2
		logf=`date +%Y.%b.%e`
		rdist -f /etc/Distfile 2>&1 | tee /var/log/rdist/$logf
@


1.64
log
@Before dd'ing raw partitions around, do stricter sanity checking:
Do not attempt to copy a larger partition onto a smaller one.
Backup of non-ffs root partitions was never supported, so don't even try.
(Both of the above suggested by guenther@@).
Also add error messages in case ROOTBACKUP is switched on but severely
misconfigured - those were silently ignored in the past:
/altroot not defined or wrong type or on the same device as root.
otto@@ agrees that checking the sizes makes sense
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.63 2009/05/21 01:27:52 schwarze Exp $
d5 3
d145 1
a145 1
# When the queue is empty, exim -bp keeps silent.
@


1.63
log
@skip the ROOTBACKUP when the destination disk device is not configured;
suggested, tweaked and ok by guenther@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.62 2009/05/18 20:07:35 schwarze Exp $
d93 1
a93 2
[ "X$ROOTBACKUP" = X1 ] && {
	rootdev=`df -n / | awk '/^\/dev\// { print substr($1, 6) }'`
d97 34
a130 9
	[ X$rootdev != X -a X$rootbak != X -a X$rootdev != X$rootbak ] && \
	    sysctl -n hw.disknames | grep -Fqw ${rootbak%[a-p]} && {
		next_part "Backing up root=/dev/r$rootdev to /dev/r$rootbak:"
		sync
		dd if=/dev/r$rootdev of=/dev/r$rootbak bs=16b seek=1 skip=1 \
			conv=noerror
		fsck -y /dev/r$rootbak
	}
}
@


1.62
log
@handle PATH in the same way as in monthly(8) and weekly(8),
i.e. rely on the PATH set up in the root crontab(5)
in case /usr/local/bin is needed, daily.local is a logical place to append it
suggested by ajacoutot@@; "i like this" okan@@; feedback jmc@@ deraadt@@;
"i don't strongly object" sthen@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.61 2009/05/17 00:25:34 schwarze Exp $
d98 2
a99 1
	[ X$rootdev != X -a X$rootbak != X -a X$rootdev != X$rootbak ] && {
@


1.61
log
@move kern.version and uptime back to the top of the output
by moving it down to the bottom of the code;
"I definitely like this"  ajacoutot@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.60 2009/05/11 22:27:22 schwarze Exp $
a5 2

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
@


1.60
log
@New variable VERBOSESTATUS (=1 by default).
When set to 0, daily(8) won't send mail unless there is something to report.
Using feedback from kettenis@@ henning@@ jmc@@
OK sthen@@ jmc@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.59 2009/05/10 19:27:25 schwarze Exp $
d109 1
a109 1
next_part "Checking system status:"
a110 3
	sysctl -n kern.version
	uptime

d160 5
a164 1
[ -s $MAINOUT ] && mail -s "`hostname` daily output" root < $MAINOUT
@


1.59
log
@avoid unnecessary changes of the output
in order not to annoy parser scripts and their owners (like henning@@)
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.58 2009/05/09 17:15:49 schwarze Exp $
a13 4
exec > $MAINOUT 2>&1
sysctl -n kern.version
uptime

d109 11
a119 6
next_part "Checking subsystem status:"
echo ""
echo "disks:"
df -kl
echo ""
dump W
d129 2
a130 1
netstat -ivn
d132 5
a136 4
t=/var/rwho/*
if [ "$t" != '/var/rwho/*' ]; then
	echo ""
	ruptime
@


1.58
log
@make weekly and monthly silent by default
add the same infrastructure to daily; silencing daily needs another step
discussed with ajacoutot@@ okan@@ todd@@ sthen@@ deraadt@@ jmc@@
"immediately commit" deraadt@@ (without seeing the final diff)
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.57 2009/05/03 17:16:12 schwarze Exp $
d47 1
a47 1
start_part "Running /etc/daily.local:"
d113 3
a115 1
next_part "Disk status:"
d122 1
a122 1
next_part "Mail queue:"
d127 1
a127 1
next_part "Network status:"
@


1.57
log
@remove dead code and the associated documentation
while here, remove the misleading shbang and an unused variable
and add the missing cross reference to ac(8)
ok sthen@@ jmc@@
@
text
@d2 1
a2 1
#	$OpenBSD: daily,v 1.56 2006/10/26 12:20:55 ajacoutot Exp $
d9 6
d18 8
a25 1
if [ -f /etc/daily.local ]; then
d27 8
a34 3
	echo "Running daily.local:"
	. /etc/daily.local
fi
d36 9
a44 4
TMP=`mktemp /tmp/_daily.XXXXXXXXXX` || exit 1
OUT=`mktemp /tmp/_security.XXXXXXXXXX` || {
	rm -f ${TMP}
	exit 1
d47 2
a48 1
trap 'rm -f $TMP $OUT; exit 1' 0 1 15
d50 1
a50 2
echo ""
echo "Removing scratch and junk files:"
d86 1
a87 2
	echo ""
	echo "Purging accounting records:"
d98 1
d105 1
a106 3
		echo ""
		echo "Backing up root filesystem:"
		echo "copying /dev/r$rootdev to /dev/r$rootbak"
d113 1
a113 6
# Rotation of mail log now handled automatically by cron and 'newsyslog'

echo ""
echo "Checking subsystem status:"
echo ""
echo "disks:"
a116 1
echo ""
d118 6
a123 6
mailq > $TMP
if ! grep -q "^/var/spool/mqueue is empty$" $TMP; then
	echo ""
	echo "mail:"
	cat $TMP
fi
d125 1
a125 2
echo ""
echo "network:"
a126 1
echo ""
d134 3
a136 10
echo ""
if [ -d /var/yp/binding -a ! -d /var/yp/`domainname` -o "X$CALENDAR" = X0 ]
then
	if [ "X$CALENDAR" = X0 ]; then
		echo "Not running calendar, (disabled)."
	else
		echo "Not running calendar, (yp client)."
	fi
else
	echo "Running calendar in the background."
d142 1
a143 2
	echo ""
	echo "Checking filesystems:"
d147 1
a148 2
	echo ""
	echo "Running rdist:"
d157 13
a169 4
sh /etc/security 2>&1 > $OUT
if [ -s $OUT ]; then
    mail -s "`hostname` daily insecurity output" root < $OUT
fi
@


1.56
log
@Force umask to 022 so we don't heritate 077 from root's crontab command
(output logs are still umask 077)

"i think this is right" deraadt@@
@
text
@a0 1
#!/bin/sh -
d2 1
a2 1
#	$OpenBSD: daily,v 1.55 2006/10/04 17:46:34 deraadt Exp $
a7 1
bak=/var/backups
a56 20
fi

#find / \( ! -fstype local -o -fstype rdonly \
#		-o -fstype procfs \) -a -prune -o \
#	-name 'lost+found' -a -prune -o \
#	-name '*.core' -a -print -o \
#	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
#	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
#		-a -atime +3 -a -execdir rm -f -- {} \; -a -print > $TMP

if egrep -q '\.core$' $TMP; then
	echo ""
	echo "Possible core dumps:"
	egrep '\.core$' $TMP
fi

if egrep -qv '\.core$' $TMP; then
	echo ""
	echo "Deleted files:"
	egrep -v '\.core$' $TMP
@


1.55
log
@make code look better
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.54 2006/10/04 04:43:20 hugh Exp $
d6 2
@


1.54
log
@Exit when asked to. OK by deraadt, spotted by lumpy.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.53 2005/12/06 20:18:56 pedro Exp $
d24 1
a24 1
trap 'rm -f $TMP $OUT ;exit 1' 0 1 15
@


1.53
log
@Remove fdescfs
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.52 2005/11/24 12:08:15 pedro Exp $
d24 1
a24 1
trap 'rm -f $TMP $OUT' 0 1 15
@


1.52
log
@Remove kernfs, okay deraadt@@.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.51 2005/09/29 00:31:08 deraadt Exp $
d59 1
a59 1
#find / \( ! -fstype local -o -fstype rdonly -o -fstype fdesc \
@


1.51
log
@ok, add uptime after kernel version
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.50 2005/03/17 18:16:52 millert Exp $
d60 1
a60 1
#		-o -fstype kernfs -o -fstype procfs \) -a -prune -o \
@


1.50
log
@Don't rmdir .ICE-unix from /tmp or /var/tmp either.  OK deraadt@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.49 2005/03/16 18:29:58 millert Exp $
d10 1
@


1.49
log
@Don't rmdir vi.recover or .X11-unix from /tmp or /var/tmp.  OK deraadt@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.48 2004/12/07 19:08:15 millert Exp $
d29 3
a31 2
	find -x . \( -path './ssh-*' -o -path './.X11-unix' \) -prune -o \
	    -type f -atime +3 -execdir rm -f -- {} \;
d33 1
a33 1
	    ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
d38 3
a40 2
	find -x . \( -path './ssh-*' -o -path './.X11-unix' \) -prune -o \
	    ! -type d -atime +7 -execdir rm -f -- {} \;
d42 1
a42 1
	    ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
@


1.48
log
@Use df to verify that we are not booted from the altboot before doing
the / -> /altroot copy.  OK deraadt@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.47 2004/11/15 18:10:48 nick Exp $
d31 2
a32 2
	find -x . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
	    >/dev/null 2>&1; }
d39 2
a40 2
	find -x . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
	    >/dev/null 2>&1; }
@


1.47
log
@
add kern.version to daily report.  ok deraadt@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.46 2003/07/28 20:58:48 jmc Exp $
d94 1
a94 3
	rootdev=`awk '$2 == "/" && $1 ~ /^\/dev\// && $3 == "ffs" && \
	    $4 ~ /rw/ \
		 { print substr($1, 6) }' < /etc/fstab`
d98 1
a98 1
	[ X$rootdev != X -a X$rootbak != X ] && {
@


1.46
log
@remove check for /etc/news.expire;
ok millert@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.45 2003/06/30 23:47:14 avsm Exp $
d8 2
@


1.45
log
@some more extra mktemp randomness; millert@@ ok
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.44 2003/06/03 22:56:56 mickey Exp $
a75 4
fi

if [ -s /etc/news.expire ]; then
	/etc/news.expire
@


1.44
log
@by means of utilising -f avoid some warnings when rotating accounting files; millert@@ ok
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.43 2003/03/28 21:32:30 jmc Exp $
d15 2
a16 2
TMP=`mktemp /tmp/_daily.XXXXXX` || exit 1
OUT=`mktemp /tmp/_security.XXXXXX` || {
@


1.43
log
@- no more /var/ssyslog (unused)
- no more /var/spool/lpd (lpd uses /var/spool/output)
- no more /var/preserve (old vi directory)
- update docs to reflect this

help with systrace provos@@
help and ok millert@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.42 2003/02/08 10:19:30 pvalchev Exp $
d85 4
a88 4
	mv /var/account/acct.2 /var/account/acct.3
	mv /var/account/acct.1 /var/account/acct.2
	mv /var/account/acct.0 /var/account/acct.1
	cp /var/account/acct /var/account/acct.0
@


1.42
log
@When creating > 1 files with mktemp(1), make sure that if the creation
of the n'th (n>1) file fails, the previous ones get removed before exit(1)
Idea by jason; ok millert deraadt
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.41 2002/12/07 20:16:19 millert Exp $
a47 5

if [ -d /var/preserve -a ! -L /var/preserve ]; then
	cd /var/preserve && {
	find . ! -name . -mtime +7 -execdir rm -f -- {} \; ; }
fi
@


1.41
log
@Use `hostname` not `hostname -s` in subject for consistency with
daily, weekly, and monthly.  Closes PR 3017.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.40 2002/09/12 02:36:31 danh Exp $
d16 4
a19 1
OUT=`mktemp /tmp/_security.XXXXXX` || exit 1
@


1.40
log
@have df only display statistics about local filesystems (-l flag)

ok millert@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.39 2001/11/19 03:03:33 deraadt Exp $
a6 1
host=`hostname -s`
d178 1
a178 1
    mail -s "$host daily insecurity output" root < $OUT
@


1.39
log
@zap trailing spaces and tabs
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.38 2001/10/29 18:16:23 millert Exp $
d122 1
a122 1
df -k
@


1.38
log
@Change when calendar(1) is such so that it is after mailq runs.
That way we avoid a flurry of transient calendar mail in the mailq.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.37 2001/10/24 11:32:13 espie Exp $
d173 1
a173 1
		rdist -f /etc/Distfile 
@


1.37
log
@Be anal about ssh and X11 hooks.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.36 2001/09/09 01:07:31 deraadt Exp $
a115 13
echo ""
if [ -d /var/yp/binding -a ! -d /var/yp/`domainname` -o "X$CALENDAR" = X0 ]
then
	if [ "X$CALENDAR" = X0 ]; then
		echo "Not running calendar, (disabled)."
	else
		echo "Not running calendar, (yp client)."
	fi
else
	echo "Running calendar in the background."
	calendar -a &
fi

d143 13
@


1.36
log
@the first part of uucp going away.  It will become a package
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.35 2001/03/06 20:29:48 niklas Exp $
d25 1
a25 1
	find -x . \( -name 'ssh-*' -o -name '.X11-unix' \) -prune -o \
d33 1
a33 1
	find -x . \( -name 'ssh-*' -o -name '.X11-unix' \) -prune -o \
@


1.35
log
@Add -n to the netstat invocation.  Faster running, less chance of being spoofed, no unneeded dial-on-demands
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.34 2001/01/04 06:27:45 angelos Exp $
a130 6
if [ -d /var/spool/uucp -a -f /etc/uuclean.daily ]; then
	echo ""
	echo "Cleaning up UUCP:"
	echo /etc/uuclean.daily | su daemon
fi

a144 9
fi

if [ -d /var/spool/uucp ]; then
	uustat -a > $TMP
	if [ -s $TMP ]; then
		echo ""
		echo "uucp:"
		cat $TMP
	fi
@


1.35.2.1
log
@MFC: Errata 15: Fix (millert):
run uucp as 'uucp' user not root in /etc/daily
pay more attention to commandline parsing of long options in uuqxt
(Patch from jbj@@redhat.com)
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.35 2001/03/06 20:29:48 niklas Exp $
d154 1
a154 1
	echo uustat -a | su -m uucp > $TMP
@


1.34
log
@Correctly check empty mailq, closes PR 1602 (cjclark@@alum.mit.edu)
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.33 2000/05/26 17:44:33 marc Exp $
d164 1
a164 1
netstat -iv
@


1.33
log
@
pipe output from /etc/security to a temp file and then check that
output was created before sending off a mail message to root.
This suppresses an empty mail message and a warning appended to the
end of the daily status report.  OK millert@@
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.32 2000/05/26 14:51:31 aaron Exp $
d147 1
a147 1
if ! grep -q "^Mail queue is empty$" $TMP; then
@


1.33.2.1
log
@In the daily cron job, run uucp stuff as user uucp not root, to work
around some uucp issues.
Patch by millert@@, applied on 2.8 on theo's request.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.33 2000/05/26 17:44:33 marc Exp $
d154 1
a154 1
	echo uustat -a | su -m uucp > $TMP
@


1.32
log
@Conform to the test(1) man page: use -L instead of -h when testing for
symbolic links (the -h flag is for compatibility only); millert@@ ok
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.31 2000/04/29 18:45:58 millert Exp $
d17 1
d19 1
a19 1
trap 'rm -f $TMP' 0 1 15
d192 4
a195 1
sh /etc/security 2>&1 | mail -s "$host daily insecurity output" root
@


1.31
log
@Prune /tmp traversal at .X11-unix
Since /tmp might be a link to /var/tmp, prune at ssh-* or .X11-unix
like the find on /tmp does.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.30 2000/04/28 00:47:55 itojun Exp $
d22 1
a22 1
if [ -d /tmp -a ! -h /tmp ]; then
d30 1
a30 1
if [ -d /var/tmp -a ! -h /var/tmp ]; then
d39 1
a39 1
#if [ -d /scratch -a ! -h /scratch ]; then
d46 1
a46 1
if [ -d /var/preserve -a ! -h /var/preserve ]; then
d51 1
a51 1
if [ -d /var/rwho -a ! -h /var/rwho ] ; then
@


1.30
log
@use netstat -iv, not -i, to avoid truncation of ipv6 address. ok by deraadt
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.29 2000/04/24 04:23:13 todd Exp $
d24 2
a25 1
	find -x . -name 'ssh-*' -prune -o -type f -atime +3 -execdir rm -f -- {} \;
d32 2
a33 1
	find -x . ! -name . ! -type d -atime +7 -execdir rm -f -- {} \;
@


1.29
log
@fix per pr1192; also == "xx" -> ~ /xx/, same thought
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.27 1998/11/29 21:35:17 deraadt Exp $
d161 1
a161 1
netstat -i
@


1.28
log
@run pruning find with -x, to avoid /tmp based mountpoint pruning
@
text
@d97 1
a97 1
	    $4 == "rw" \
d100 1
a100 1
	    $4 == "xx" \
@


1.27
log
@no need for Subject: line, crontab does it
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.26 1998/11/11 11:23:02 downsj Exp $
d24 2
a25 2
	find . -name 'ssh-*' -prune -o -type f -atime +3 -execdir rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
d31 2
a32 2
	find . ! -name . ! -type d -atime +7 -execdir rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
@


1.26
log
@Only run msgs -c if /var/msgs exists and is not a symlink.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.25 1998/08/13 21:57:39 millert Exp $
a7 1
echo "Subject: $host daily run output"
@


1.25
log
@Don't prune dirs in /var/tmp on first pass; problem noted by m4@@umn.edu
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.24 1998/06/30 23:08:52 deraadt Exp $
d75 3
a77 1
msgs -c
@


1.24
log
@do not delete files like that, geez
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.23 1998/03/07 19:33:23 millert Exp $
d32 1
a32 1
	find . ! -name . -atime +7 -execdir rm -f -- {} \;
@


1.23
log
@Don't remove files in /tmp/ssh-*
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.22 1997/10/21 03:00:56 mickey Exp $
d55 7
a61 7
find / \( ! -fstype local -o -fstype rdonly -o -fstype fdesc \
		-o -fstype kernfs -o -fstype procfs \) -a -prune -o \
	-name 'lost+found' -a -prune -o \
	-name '*.core' -a -print -o \
	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
		-a -atime +3 -a -execdir rm -f -- {} \; -a -print > $TMP
@


1.22
log
@fix root backup
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.21 1997/09/15 09:58:08 deraadt Exp $
d25 1
a25 1
	find . -type f -atime +3 -execdir rm -f -- {} \;
@


1.21
log
@indent
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.20 1997/09/15 06:24:24 pierre Exp $
d107 1
a107 1
			conv=noerror,sync
@


1.20
log
@run calendar in the background
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.19 1997/05/30 07:11:52 deraadt Exp $
d11 1
a11 1
if [ -f /etc/daily.local ];then
@


1.19
log
@1 fix from enami@@ba2.so-net.or.jp
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.18 1997/02/19 16:49:18 millert Exp $
d121 2
a122 2
	echo "Running calendar."
	calendar -a
@


1.18
log
@Add option to turn off calendar via env variables settable via cron.
Ie: ``CALENDAR=0'' will turn it off which is useful for machines with
no local users that do not run YP.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.17 1997/01/17 06:18:19 millert Exp $
d181 1
a181 1
		logf=`date | awk '{printf "%s.%s.%s", $6, $2, $3}'`
@


1.17
log
@lite2 daily + our changes.  We can remove old tmp files now that fts(3)
is safe and we have -execdir.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.16 1997/01/03 22:51:26 millert Exp $
d113 7
a119 2
if [ -d /var/yp/binding -a ! -d /var/yp/`domainname` ]; then
	echo "Not running calendar, (yp client)."
@


1.16
log
@No point in ls'ing the template, it will never exist.
@
text
@d3 2
a4 1
#	$OpenBSD: daily,v 1.15 1996/12/15 19:11:54 millert Exp $
d6 1
a6 1
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local
d9 1
d22 7
a28 9
echo "NOT Removing scratch and junk files."
#echo "Removing scratch and junk files:"
# XXX NOT REMOVING UNTIL SECURITY BUG IS FIXED" 
#if [ -d /tmp -a ! -h /tmp ]; then
#	cd /tmp && {
#	find . -type f -atime +3 -exec rm -f -- {} \;
#	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
#	    >/dev/null 2>&1; }
#fi
d30 6
a35 7
# XXX NOT REMOVING UNTIL SECURITY BUG IS FIXED 
#if [ -d /var/tmp -a ! -h /var/tmp ]; then
#	cd /var/tmp && {
#	find . ! -name . -atime +7 -exec rm -f -- {} \;
#	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
#	    >/dev/null 2>&1; }
#fi
d40 2
a41 2
#	find . ! -name . -atime +1 -exec rm -f -- {} \;
#	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
d45 9
a53 5
#if [ -d /var/rwho -a ! -h /var/rwho ] ; then
#	cd /var/rwho && {
# XXX NOT REMOVING UNTIL SECURITY BUG IS FIXED 
#	find . ! -name . -mtime +7 -exec rm -f -- {} \; ; }
#fi
d58 4
a61 4
	-name '*.core' -a -print > $TMP
#	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
#	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
#		-a -atime +3 -exec rm -f -- {} \; -a -print > $TMP
d64 9
a72 8
    echo ""
    echo "Possible core dumps:"
    egrep '\.core$' $TMP

    # XXX - we aren't deleting files due to security bug mentioned above
    #echo ""
    #echo "Deleted files:"
    #egrep -v '\.core$' $TMP
d77 1
a77 1
if [ -f /etc/news.expire ]; then
d82 29
a110 8
	echo "" ;
	echo "Purging accounting records:" ;
	mv /var/account/acct.2 /var/account/acct.3 ;
	mv /var/account/acct.1 /var/account/acct.2 ;
	mv /var/account/acct.0 /var/account/acct.1 ;
	cp /var/account/acct /var/account/acct.0 ;
	sa -sq ;
fi
d113 1
a113 1
if [ -d /var/yp/binding -a ! -d /var/yp/`domainname` ]; then 
d160 1
d164 7
a170 4
echo ""
echo "NOT checking filesystems."
#echo "Checking filesystems:"
#fsck -n | grep -v '^\*\* Phase'
a171 1
echo ""
d173 1
d175 6
a180 1
	rdist -f /etc/Distfile
@


1.15
log
@Less output when not needed.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.14 1996/12/07 18:46:46 millert Exp $
d15 2
a16 4
TMP=`mktemp /tmp/_daily.XXXXXX` || {
	ls -ldgT $TMP
	exit 1
}
@


1.14
log
@use mktemp(1) and don't talk about core files unless it finds some.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.13 1996/12/07 07:33:06 bitblt Exp $
a72 2
rm -f $TMP

a105 1
echo ""
d114 6
a119 4

echo ""
echo "mail:"
mailq
d122 6
a127 3
	echo ""
	echo "uucp:"
	uustat -a
d135 2
a136 1
if [ -d /var/rwho ]; then
@


1.13
log
@Improved handling of temporary files.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.12 1996/12/06 16:49:12 deraadt Exp $
d15 6
a52 9
TDIR=/tmp/daily.$$
if ! mkdir $TDIR ; then
	printf "tmp directory %s already exists, looks like:\n" $TDIR
	ls -alf $TDIR
	exit 1
fi
cd $TDIR
trap 'rm -rf $TDIR' 0 1 15

a53 3
TMP=daily.$$
rm -f $TMP
echo -n > $TMP
d62 10
a71 7
echo ""
echo "Possible core dumps:"
egrep '\.core' $TMP

#echo ""
#echo "Deleted files:"
#egrep -v '\.core' $TMP
d93 1
a93 1
	echo "Not running calendar, (yp client)"
d95 1
a95 1
	echo "Running calendar:"
d132 4
a135 1
ruptime
@


1.12
log
@indicate hostname in security report
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.11 1996/12/04 02:02:23 deraadt Exp $
d47 9
a56 1
cd /tmp
@


1.11
log
@indent
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.10 1996/11/06 23:03:21 deraadt Exp $
d140 1
a140 1
sh /etc/security 2>&1 | mail -s "daily insecurity output" root
@


1.10
log
@only run calendar on yp server; from matthieu@@laas.fr
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.9 1996/07/27 14:12:24 downsj Exp $
d88 1
a88 1
  echo "Not running calendar, (yp client)"
d90 2
a91 2
  echo "Running calendar:"
  calendar -a
@


1.9
log
@slight clarification.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.8 1996/07/18 09:57:35 downsj Exp $
d87 6
a92 2
echo "Running calendar:"
calendar -a
@


1.8
log
@daily: disable the fscks by default.
rc: add /usr/local/lib to ldconfig.
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.7 1996/07/12 21:34:47 deraadt Exp $
d16 2
a17 1
echo "Removing scratch and junk files:"
@


1.7
log
@still print about ugly files; from Todd.Miller@@cs.colorado.edu
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.6 1996/06/17 09:09:39 deraadt Exp $
d125 3
a127 2
echo "Checking filesystems:"
fsck -n | grep -v '^\*\* Phase'
@


1.6
log
@whoops
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.5 1996/06/16 14:39:24 deraadt Exp $
d47 8
a54 7
# XXX NOT REMOVING UNTIL SECURITY BUG IS FIXED 
#cd /tmp
#TMP=daily.$$
#find / \( ! -fstype local -o -fstype rdonly -o -fstype fdesc \
#		-o -fstype kernfs -o -fstype procfs \) -a -prune -o \
#	-name 'lost+found' -a -prune -o \
#	-name '*.core' -a -print -o \
d63 3
a65 3
echo ""
echo "Deleted files:"
egrep -v '\.core' $TMP
@


1.5
log
@disable find | rm entities until we have a safe way of doing them
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.4 1996/05/26 10:25:20 deraadt Exp $
d41 2
a42 2
if [ -d /var/rwho -a ! -h /var/rwho ] ; then
	cd /var/rwho && {
d45 1
a45 1
fi
@


1.4
log
@sync & label
@
text
@d3 1
a3 1
#	$OpenBSD$
d17 7
a23 6
if [ -d /tmp -a ! -h /tmp ]; then
	cd /tmp && {
	find . -type f -atime +3 -exec rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
	    >/dev/null 2>&1; }
fi
d25 7
a31 6
if [ -d /var/tmp -a ! -h /var/tmp ]; then
	cd /var/tmp && {
	find . ! -name . -atime +7 -exec rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
	    >/dev/null 2>&1; }
fi
d43 2
a44 1
	find . ! -name . -mtime +7 -exec rm -f -- {} \; ; }
d47 10
a56 9
cd /tmp
TMP=daily.$$
find / \( ! -fstype local -o -fstype rdonly -o -fstype fdesc \
		-o -fstype kernfs -o -fstype procfs \) -a -prune -o \
	-name 'lost+found' -a -prune -o \
	-name '*.core' -a -print -o \
	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
		-a -atime +3 -exec rm -f -- {} \; -a -print > $TMP
@


1.3
log
@sync with netbsd 960418
@
text
@d3 1
a3 1
#	@@(#)daily	5.12 (Berkeley) 5/24/91
@


1.2
log
@check for /etc/{daily,weekly,monthly}.local and run if they exist
@
text
@d31 7
a37 12
if [ -d /scratch -a ! -h /scratch ]; then
	cd /scratch && {
	find . ! -name . -atime +1 -exec rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
	    >/dev/null 2>&1; }
fi

# XXX should go away/be replaced by nvi version
if [ -d /var/preserve -a ! -h /var/preserve ]; then
	cd /var/preserve && {
	find . ! -name . -mtime +7 -exec rm -f -- {} \; ; }
fi
@


1.1
log
@Initial revision
@
text
@d9 6
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

