head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.8
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.12.12.10.05.09;	author reyk;	state Exp;
branches;
next	1.2;
commitid	J8g0vRzthwLCqf68;

1.2
date	2014.10.21.02.29.54;	author lteo;	state Exp;
branches;
next	1.1;
commitid	Euz8DHNYVwlyP7mO;

1.1
date	2014.07.11.21.20.10;	author deraadt;	state Exp;
branches;
next	;
commitid	Vm2B1hCfxkTm4s9s;


desc
@@


1.3
log
@Change the keyword "ssl" to "tls" to reflect reality since we
effectively disabled support for the SSL protocols.  SSL remains a
common term describing SSL/TLS, there is some controvery about this
change, and the name really doesn't matter, but I feel confident about
it now.

(btw., sthen@@ pointed out some historical context:
http://tim.dierks.org/2014/05/security-standards-and-name-changes-in.html)

OK benno@@, with input from tedu@@
@
text
@# $OpenBSD: relayd.conf,v 1.2 2014/10/21 02:29:54 lteo Exp $
#
# Macros
#
ext_addr="192.168.1.1"
webhost1="10.0.0.1"
webhost2="10.0.0.2"
sshhost1="10.0.0.3"

#
# Global Options
#
# interval 10
# timeout 1000
# prefork 5

#
# Each table will be mapped to a pf table.
#
table <webhosts> { $webhost1 $webhost2 }
table <fallback> { 127.0.0.1 }

#
# Services will be mapped to a rdr rule.
#
redirect www {
	listen on $ext_addr port http interface trunk0

	# tag every packet that goes thru the rdr rule with RELAYD
	pftag RELAYD

	forward to <webhosts> check http "/" code 200
	forward to <fallback> check icmp
}

#
# Relay and protocol for HTTP layer 7 loadbalancing and SSL/TLS acceleration
#
http protocol https {
	match request header append "X-Forwarded-For" value "$REMOTE_ADDR"
	match request header append "X-Forwarded-By" \
	    value "$SERVER_ADDR:$SERVER_PORT"
	match request header set "Connection" value "close"

	# Various TCP performance options
	tcp { nodelay, sack, socket buffer 65536, backlog 128 }

#	tls { no tlsv1.0, ciphers HIGH }
#	tls session cache disable
}

relay wwwtls {
	# Run as a SSL/TLS accelerator
	listen on $ext_addr port 443 tls
	protocol https

	# Forward to hosts in the webhosts table using a src/dst hash
	forward to <webhosts> port http mode loadbalance \
		check http "/" code 200
}

#
# Relay and protocol for simple TCP forwarding on layer 7
#
protocol sshtcp {
	# The TCP_NODELAY option is required for "smooth" terminal sessions
	tcp nodelay
}

relay sshgw {
	# Run as a simple TCP relay
	listen on $ext_addr port 2222
	protocol sshtcp

	# Forward to the shared carp(4) address of an internal gateway
	forward to $sshhost1 port 22
}

#
# Relay and protocol for a transparent HTTP proxy
#
http protocol httpfilter {
	# Return HTTP/HTML error pages to the client
	return error

	# Block disallowed sites
	match request label "URL filtered!"
	block request quick url "www.example.com/" value "*"

	# Block disallowed browsers
	match request label "Please try a <em>different Browser</em>"
	block request quick header "User-Agent" \
	    value "Mozilla/4.0 (compatible; MSIE *"

	# Block some well-known Instant Messengers
	match request label "Instant messenger disallowed!"
	block response quick header "Content-Type" \
	    value "application/x-msn-messenger"
	block response quick header "Content-Type" value "app/x-hotbar-xip20"
	block response quick header "Content-Type" value "application/x-icq"
	block response quick header "Content-Type" value "AIM/HTTP"
	block response quick header "Content-Type" \
	    value "application/x-comet-log"
}

relay httpproxy {
	# Listen on localhost, accept diverted connections from pf(4)
	listen on 127.0.0.1 port 8080
	protocol httpfilter

	# Forward to the original target host
	forward to destination
}
@


1.2
log
@Remove SSLv2 and SSLv3 references from the example relayd.conf and the
relevant example snippet in the relayd.conf(5) man page.

Change the default SSL protocols in the example file/man page to
"no tlsv1.0" (suggested by sthen@@), which will enable the TLSv1.1
and TLSv1.2 protocols only.

feedback/ok jsing@@ reyk@@ sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: relayd.conf,v 1.1 2014/07/11 21:20:10 deraadt Exp $
d37 1
a37 1
# Relay and protocol for HTTP layer 7 loadbalancing and SSL acceleration
d39 1
a39 1
http protocol httpssl {
d48 2
a49 2
#	ssl { no tlsv1.0, ciphers HIGH }
#	ssl session cache disable
d52 4
a55 4
relay wwwssl {
	# Run as a SSL accelerator
	listen on $ext_addr port 443 ssl
	protocol httpssl
@


1.1
log
@Move more files into the examples directory...
@
text
@d1 1
a1 1
# $OpenBSD: relayd.conf,v 1.15 2014/07/09 16:43:30 reyk Exp $
d48 1
a48 1
#	ssl { no sslv2, sslv3, tlsv1, ciphers HIGH }
@

