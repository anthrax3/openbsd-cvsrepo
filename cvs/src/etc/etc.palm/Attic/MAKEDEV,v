head	1.23;
access;
symbols
	OPENBSD_5_3:1.21.0.2
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.18.0.2
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@# @;


1.23
date	2013.03.25.17.22.11;	author deraadt;	state dead;
branches;
next	1.22;

1.22
date	2013.03.15.09.16.19;	author ratchov;	state Exp;
branches;
next	1.21;

1.21
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.20;

1.20
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.19;

1.19
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2012.04.06.15.32.57;	author jsing;	state Exp;
branches;
next	1.17;

1.17
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.12;

1.12
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2010.07.23.14.36.49;	author mglocker;	state Exp;
branches;
next	1.9;

1.9
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.08.17.18.44;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.30.19.20.36;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.24.21.46.21;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.05.02.19.09;	author marex;	state Exp;
branches;
next	;


desc
@@


1.23
log
@the unused palm code goes away.
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.13 2013/03/15 09:10:52 ratchov Exp 
#	OpenBSD: MAKEDEV.common,v 1.62 2013/03/15 09:10:52 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	ch*	SCSI media changers
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	st*	SCSI tape drives
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmouse*	wscons mice
#	wsmux	wscons keyboard/mouse mux devices
# USB devices:
#	ttyU*	USB serial ports
#	uall	All USB devices
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	urio*	Diamond Multimedia Rio 500
#	usb*	Bus control devices used by usbd for attach/detach
#	uscanner*	Scanners
# Special purpose devices:
#	apm	Power management device
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bktr*	Video frame grabbers
#	bpf*	Berkeley Packet Filter
#	bthub*	Bluetooth Hubs
#	crypto	Hardware crypto access driver
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	hotplug	devices hot plugging
#	lkm	Loadable kernel modules interface
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	radio*	FM tuner devices
#	*random	In-kernel random data source
#	rmidi*	Raw MIDI devices
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	tuner*	Tuner devices
#	uk*	Unknown SCSI devices
#	video*	Video V4L2 devices
#	vscsi*	Virtual SCSI controller
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std bpf0 wd0 wd1 sd0 tty00 rd0 wsmouse
	R st0 ttyC0 wskbd0 apm bio diskmap
	;;

std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 7 0
	M stdout	c 7 1
	M stderr	c 7 2
	M ksyms		c 8 0 640 kmem
	M klog		c 6 0 600
	;;

vscsi*)
	M vscsi$U c 100 $U 600
	;;

video*)
	M video$U  c 38 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uk*)
	M uk$U c 28 $U 640 operator
	;;

tuner*)
	M tuner$U c 75 $(($(($U*2))+16)) 644
	;;

tun*)
	M tun$U c 33 $U 600
	;;

systrace)
	M systrace c 50 0 644
	;;

rmidi*)
	M rmidi$U c 57 $U 666
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 40 $n 644
		n=$(($n+1))
	done
	;;

radio*)
	M radio$U     c 97 $U
	MKlist[${#MKlist[*]}]=";[ -e radio ] || ln -s radio$U radio"
	;;

pppx*)
	M pppx$U c 103 $U 600
	;;

pf*)
	M pf c 46 0 600
	;;

lkm)
	M lkm c 35 0 640 _lkm
	;;

hotplug)
	M hotplug c 37 $U 400
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 7 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 102 0 640 operator
	;;

crypto)
	M crypto c 47 0
	;;

bthub*)
	M bthub$U c 101 $U
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

bktr*)
	M bktr$U c 75 $U 644
	;;

bio)
	M bio c 52 0 600
	;;

audio*)
	M sound$U	c 36 $U
	M mixer$U	c 36 $(($U+16))
	M audio$U	c 36 $(($U+128))
	M audioctl$U	c 36 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

apm*)
	M apm	c 34 0 644
	M apmctl	c 34 8 644
	;;

uscanner*)
	M uscanner$U c 69 $U 660
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 64 $U 660
	;;

urio*)
	M urio$U c 67 $U 660
	;;

ulpt*)
	M ulpt$U c 66 $U 660
	;;

uhid*)
	M uhid$U c 65 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 70 $(($n+10#$j)) 660
	done
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 68 $o 660 dialer uucp
	M cuaU$U c 68 $(($o+128)) 660 dialer uucp
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 63 0 600
	M wskbd c 63 1 600
	;;

wsmouse[0-9]*)
	M wsmouse$U c 62 $U 600
	;;

wskbd[0-9]*)
	M wskbd$U c 61 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 60 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 60 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 98 0 666
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 12 $o 660 dialer uucp
	M cua$U c 12 $(($o+128)) 660 dialer uucp
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 25 $n 660 operator
		M ${pre}rst$U	c 25 $n 660 operator
		n=$(($n+1))
	done
	;;

vnd*)
	dodisk vnd $U 19 19 $U 0
	;;

rd*)
	dodisk2 rd $U 18 18 $U 0
	;;

ch*)
	M ch$U c 27 $U 660 operator
	;;

cd*)
	dodisk2 cd $U 26 26 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R bthub0 bthub1 bthub2 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 bio vscsi0
	R ch0 audio0 audio1 audio2 pppx hotplug ptm local wscons uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 video0 video1 uk0 random lkm tty00 tty01 tty02
	R tty03 apm crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 16 16 $U 0;;
	sd*) dodisk sd $U 24 24 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
        cat
else
	sh
fi
@


1.22
log
@regen after sequencer removal
@
text
@@


1.21
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.12 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
a73 1
#	music*	MIDI sequencer
a279 7
music*)
	M music$U     c 58 $U
	M sequencer$U c 58 $(($U+128))
	MKlist[${#MKlist[*]}]=";[ -e music ] || ln -s music$U music"
	MKlist[${#MKlist[*]}]=";[ -e sequencer ] || ln -s sequencer$U sequencer"
	;;

d483 2
a484 3
	R tuner0 radio0 music0 video0 video1 uk0 random lkm tty00
	R tty01 tty02 tty03 apm crypto pf systrace wd0 wd1 wd2 wd3 std
	R st0 st1 fd
@


1.20
log
@regen
@
text
@d489 1
a489 1
	R ch0 audio0 audio1 audio2 hotplug ptm local wscons uall
@


1.19
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d185 1
a185 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d189 1
a189 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d193 1
a193 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d197 1
a197 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.18
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.11 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a74 1
#	nnpfs*	NNPFS filesystem node
a280 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d489 2
a490 2
	R nnpfs0 ch0 audio0 audio1 audio2 hotplug ptm local wscons
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.17
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.10 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
a34 1
#	raid*	RAIDframe disk devices
d497 2
a498 2
	R tty01 tty02 tty03 apm crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
d501 1
a501 1
wd*|sd*|raid*)
a504 1
	raid*) dodisk raid $U 71 71 $U 0;;
@


1.16
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.9 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d495 5
a499 5
	R nnpfs0 ch0 hotplug ptm local wscons uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0
	R music0 video0 video1 audio0 audio1 audio2 uk0 random lkm
	R tty00 tty01 tty02 tty03 apm crypto pf systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.15
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.8 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d492 8
a499 9
	R bthub0 bthub1 bthub2 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 bio vscsi0 nnpfs0 ch0 hotplug ptm local
	R wscons uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 music0 video0 video1 audio0 audio1
	R audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
d502 1
a502 1
wd*|sd*|raid*|ccd*)
a506 1
	ccd*) dodisk ccd $U 21 21 $U 0;;
@


1.14
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.13
log
@regen
@
text
@a473 1
	dodisk svnd $U 19 19 $U 2048
@


1.12
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.6 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d79 1
d274 4
@


1.11
log
@regen
@
text
@d50 1
a51 1
#	ttyC-J*	wscons display devices
d56 1
a57 1
#	ttyU*	USB serial ports
a66 1
#	hotplug	devices hot plugging
d70 1
d72 1
d74 1
d77 1
d80 1
d82 1
a82 1
#	*random	In-kernel random data source
d84 1
a85 2
#	systrace*	System call tracing device
#	tuner*	Tuner devices
a86 1
#	nnpfs*	NNPFS filesystem node
a87 2
#	bthub*	Bluetooth Hubs
#	diskmap	Disk mapper
a231 8
diskmap)
	M diskmap c 102 0 640 operator
	;;

bthub*)
	M bthub$U c 101 $U
	;;

a235 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d241 4
d249 4
d257 2
a258 6
uk*)
	M uk$U c 28 $U 640 operator
	;;

tun*)
	M tun$U c 33 $U 600
a269 4
rmidi*)
	M rmidi$U c 57 $U 666
	;;

d279 4
d294 4
d304 4
d312 4
a327 4
hotplug)
	M hotplug c 37 $U 400
	;;

d373 6
a385 6
uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
	;;

d399 6
a421 6
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.10
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d383 1
@


1.9
log
@sync
@
text
@d493 4
a496 3
	R rmidi7 tuner0 radio0 music0 video0 audio0 audio1 audio2 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.8
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.7
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.5 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a80 1
#	ss*	SCSI scanners
a260 8
ss*)
	M ss$U c 29 $(($U*16)) 640 operator
	M nss$U c 29 $(($(($U*16))+1)) 640 operator
	M enss$U c 29 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d491 5
a495 6
	R bpf8 bpf9 pty0 bio vscsi0 nnpfs0 ss0 ss1 ch0 hotplug ptm
	R local wscons uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 video0 audio0 audio1
	R audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.6
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.4 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d216 1
a216 1
	R st0 ttyC0 wskbd0 apm bio
@


1.5
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d234 1
a234 1
	M diskmap b 102 0 640 operator
@


1.4
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.3 2010/06/08 17:17:54 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d88 1
d231 4
@


1.3
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.2 2010/03/30 19:16:09 matthieu Exp 
d86 1
d236 4
d495 6
a500 5
	R bpf8 bpf9 pty0 bio nnpfs0 ss0 ss1 ch0 hotplug ptm local
	R wscons uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 music0 video0 audio0 audio1 audio2 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.2
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.1 2009/09/05 02:19:09 marex Exp 
d86 1
d231 4
d487 8
a494 8
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 bio nnpfs0
	R ss0 ss1 ch0 hotplug ptm local wscons uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0
	R music0 video0 audio0 audio1 audio2 uk0 random lkm tty00
	R tty01 tty02 tty03 apm crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.1
log
@Palm: initial commit of etc/etc.palm

OK deraadt@@
@
text
@d6 4
a9 4
#	OpenBSD: etc.palm/MAKEDEV.md,v 1.20 2009/06/03 14:45:40 jj Exp
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp
d384 1
a384 1
wsmouse*)
d388 1
a388 1
wskbd*)
@

