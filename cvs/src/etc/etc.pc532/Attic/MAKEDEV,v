head	1.22;
access;
symbols
	OPENBSD_2_9:1.19.0.6
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_8:1.19.0.4
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.19.0.2
	OPENBSD_2_7_BASE:1.19
	OPENBSD_2_6:1.17.0.2
	OPENBSD_2_6_BASE:1.17
	OPENBSD_2_5:1.16.0.2
	OPENBSD_2_5_BASE:1.16
	OPENBSD_2_4:1.14.0.2
	OPENBSD_2_4_BASE:1.14
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.12.0.2
	OPENBSD_2_2_BASE:1.12
	OPENBSD_2_1:1.11.0.2
	OPENBSD_2_1_BASE:1.11
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.22
date	2001.06.24.23.47.37;	author deraadt;	state dead;
branches;
next	1.21;

1.21
date	2001.06.24.23.36.07;	author kjell;	state Exp;
branches;
next	1.20;

1.20
date	2001.05.30.02.11.22;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2000.03.22.08.34.16;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.22.07.34.29;	author niklas;	state Exp;
branches;
next	1.17;

1.17
date	99.08.20.17.00.36;	author downsj;	state Exp;
branches;
next	1.16;

1.16
date	98.11.25.04.58.54;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	98.11.19.08.18.57;	author dugsong;	state Exp;
branches;
next	1.14;

1.14
date	98.09.15.10.23.22;	author pattonme;	state Exp;
branches;
next	1.13;

1.13
date	98.01.26.04.19.46;	author dgregor;	state Exp;
branches;
next	1.12;

1.12
date	97.09.16.03.03.01;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	97.05.14.15.41.17;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	97.05.13.05.34.55;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	96.12.14.18.24.00;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	96.11.11.23.10.33;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	96.09.18.22.03.45;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.08.28.08.55.26;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.07.23.06.32.58;	author etheisen;	state Exp;
branches;
next	1.4;

1.4
date	96.07.23.06.15.17;	author etheisen;	state Exp;
branches;
next	1.3;

1.3
date	96.07.15.14.59.16;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.07.41.22;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@bye bye
@
text
@#!/bin/sh -
#
#	$OpenBSD: MAKEDEV,v 1.21 2001/06/24 23:36:07 kjell Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Written and contributed by W. Jolitz 12/90
#
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#	@@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the 'standard' number of each type.
#	floppy	devices to be put on install floppies
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	sd*	SCSI disks
#	cd*	SCSI CD-ROM
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk driver
#
# Terminal ports:
#	tty*	rs232 devices
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Printers:
#	lpt*	Matthias's lp interface
#
# Special purpose devices:
#	ch*	SCSI media changer
#	fd	file descriptors
#	bpf*	packet filter
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	*random	random data source
#	uk*	unknown SCSI
#	ss*	SCSI scanners
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin
umask 77
for i
do
case $i in

all)
	sh MAKEDEV std fd sd0 sd1 sd2 st0 st1 cd0 cd1
	sh MAKEDEV tty0 tty1 tty2 tty3 tty4 tty5 tty6 tty7
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV pf tun0 tun1 tun2 lkm random
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0
	;;

floppy)
	sh MAKEDEV std sd0 sd1 sd2 tty0 tty1 tty2 tty3
	sh MAKEDEV st0 st1 cd0 cd1 rd0
	;;

std)
	rm -f console drum mem kmem null zero io tty klog stdin stdout stderr
	mknod console		c 0 0
	mknod drum		c 4 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem	; chown root.kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 7 0	; chmod 600 klog
	mknod stdin		c 11 0	; chmod 666 stdin
	mknod stdout		c 11 1	; chmod 666 stdout
	mknod stderr		c 11 2	; chmod 666 stderr
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 11 %d;", i, i)}'`)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	mknod rd${unit} b 3 $unit
	mknod rrd${unit} c 9 $unit
	chown root.operator rd${unit} rrd${unit}
	chmod 640 rd${unit} rrd${unit}
	umask 77
	;;
	
sd*|ccd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	case $i in
	sd*) name=sd; blk=0; chr=3;;
	ccd*) name=ccd; blk=6; chr=18;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=5; chr=13;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + $off + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + $off + 7`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	done
	umask 77
	;;

tty*)
	unit=`expr $i : '...\(.*\)'`
	mknod tty0$unit c 8 $unit
	chown uucp.dialer tty0$unit
	chmod 660 tty0$unit
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 5 %d;" \
				    "rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
		;;
	esac
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st;  chr=10; blk=2;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
	mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
	mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
	mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
	mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
	mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
	mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
	chown root.operator ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
	chmod 660 ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
	umask 77
	;;

ch*)
	umask 2
	name=ch; chr=16
	rm -f $name$unit
	mknod ${name}${unit}	c $chr $unit
	chown root.operator ${name}${unit}
	chmod 660 ${name}${unit}
	umask 77
	;;

cd*)
	umask 2 ; unit=`expr $i : '.*cd\(.*\)'`
	case $i in
        cd*) name=cd; blk=4; chr=12;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	umask 77
	;;

lpt*)
	unit=`expr $i : 'lpt\(.*\)'`
	rm -f lpt${unit} lpt${unit}p
	mknod lpt${unit}  c 17 `expr $unit + 64`
	mknod lpt${unit}p c 17 $unit
	chmod 0220 lpt${unit} lpt${unit}p
	chown root.wheel lpt$unit
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 14 $unit
	chown root.wheel bpf$unit
	;;

pf)
	rm -f pf
	mknod pf c 73 0
	chown root.wheel pf
	chmod 600 pf
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 15 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

lkm)
	rm -f lkm
	mknod lkm c 18 0
	chown root.kmem lkm
	chmod 640 lkm
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 20 0
	mknod srandom c 20 1
	mknod urandom c 20 2
	mknod prandom c 20 3
	mknod arandom c 20 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;

uk*)
	unit=`expr $i : 'uk\(.*\)'`
	rm -f uk$unit
	mknod uk$unit c 21 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
	;;

ss*)
	unit=`expr $i : 'ss\(.*\)'`
	rm -f ss$unit
	mknod ss$unit c 22 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
	;;

esac
done
@


1.21
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.20 2001/05/30 02:11:22 deraadt Exp $
@


1.20
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.19 2000/03/22 08:34:16 niklas Exp $
d72 1
a72 1
	sh MAKEDEV tun0 tun1 tun2 lkm random
d283 7
@


1.19
log
@Add ch to some dead ports for consistency, of course not tested.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.18 2000/03/22 07:34:29 niklas Exp $
d72 1
a72 1
	sh MAKEDEV tun0 tun1 tun2 lkm random ipl
a282 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 19 0
	mknod ipnat c 19 1
	mknod ipstate c 19 2
	mknod ipauth c 19 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.18
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 1999/08/20 17:00:36 downsj Exp $
d52 1
d241 10
@


1.17
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1998/11/25 04:58:54 millert Exp $
d236 1
a236 1
	chmod 640 ${name}${unit} n${name}${unit} \
@


1.16
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1998/11/19 08:18:57 dugsong Exp $
d179 2
a180 1
	chown uucp.wheel tty0$unit
@


1.15
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 1998/09/15 10:23:22 pattonme Exp $
a188 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.14
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 1998/01/26 04:19:46 dgregor Exp $
d191 11
d205 1
a205 1
	0|1|2|3|4)
@


1.13
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.12 1997/09/16 03:03:01 deraadt Exp $
d264 1
a264 1
	rm -f ipl ipnat ipstate 
d268 2
a269 1
	chown root.wheel ipl ipnat ipstate 
@


1.12
log
@fix bpf nodes; someone should make sure 0-9 are on all, and rm them nicely
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 1997/05/14 15:41:17 niklas Exp $
d264 1
d266 3
a268 1
	chown root.wheel ipl
@


1.11
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 1997/05/13 05:34:55 millert Exp $
d70 2
a71 2
	sh MAKEDEV pty0 pty1 vnd0 vnd1 bpf0 bpf1 bpf2 bpf3 ipl
	sh MAKEDEV tun0 tun1 tun2 lkm random
@


1.10
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/12/14 18:24:00 millert Exp $
d117 1
a117 1
sd*|vnd*|ccd*)
a120 1
	vnd*) name=vnd; blk=5; chr=13;;
d142 31
@


1.9
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1996/11/11 23:10:33 kstailey Exp $
d285 1
a285 1
	sh MAKEDEV.local
@


1.8
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 1996/09/18 22:03:45 deraadt Exp $
d103 1
a103 1
	chown -R bin.bin fd
@


1.7
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.6 1996/08/28 08:55:26 deraadt Exp $
d57 2
d73 2
d262 19
@


1.6
log
@fix all random device node entry stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.5 1996/07/23 06:32:58 etheisen Exp $
d81 3
a83 3
	mknod drum		c 4 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem	; chgrp kmem mem
d108 1
a108 1
	chgrp operator rd${unit} rrd${unit}
d137 1
a137 1
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
d187 1
a187 1
	chgrp operator ${name}${unit} n${name}${unit} \
d208 1
a208 1
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.5
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d56 1
a56 1
#	*rnd	random data source
d69 1
a69 1
	sh MAKEDEV tun0 tun1 tun2 lkm rnd
d249 9
a257 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 20 0
	mknod srnd c 20 1
	mknod urnd c 20 2
	mknod prnd c 20 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.4
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 2
@


1.3
log
@ad rnd devices.
@
text
@d162 2
a163 2
				printf("rm -f tty%s%x; mknod tty%s%x c 5 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
@


1.2
log
@created devices for the IP filter log on all architectures
@
text
@d54 1
d67 1
a67 1
	sh MAKEDEV tun0 tun1 tun2 lkm
d245 10
@


1.1
log
@Initial revision
@
text
@d65 1
a65 1
	sh MAKEDEV pty0 pty1 vnd0 vnd1 bpf0 bpf1 bpf2 bpf3
d224 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
