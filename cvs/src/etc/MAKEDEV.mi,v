head	1.83;
access;
symbols
	OPENBSD_6_1_BASE:1.83
	OPENBSD_6_0:1.82.0.4
	OPENBSD_6_0_BASE:1.82
	OPENBSD_5_9:1.81.0.12
	OPENBSD_5_9_BASE:1.81
	OPENBSD_5_8:1.81.0.14
	OPENBSD_5_8_BASE:1.81
	OPENBSD_5_7:1.81.0.6
	OPENBSD_5_7_BASE:1.81
	OPENBSD_5_6:1.81.0.10
	OPENBSD_5_6_BASE:1.81
	OPENBSD_5_5:1.81.0.8
	OPENBSD_5_5_BASE:1.81
	OPENBSD_5_4:1.81.0.4
	OPENBSD_5_4_BASE:1.81
	OPENBSD_5_3:1.81.0.2
	OPENBSD_5_3_BASE:1.81
	OPENBSD_5_2:1.80.0.6
	OPENBSD_5_2_BASE:1.80
	OPENBSD_5_1_BASE:1.80
	OPENBSD_5_1:1.80.0.4
	OPENBSD_5_0:1.80.0.2
	OPENBSD_5_0_BASE:1.80
	OPENBSD_4_9:1.79.0.10
	OPENBSD_4_9_BASE:1.79
	OPENBSD_4_8:1.79.0.8
	OPENBSD_4_8_BASE:1.79
	OPENBSD_4_7:1.79.0.4
	OPENBSD_4_7_BASE:1.79
	OPENBSD_4_6:1.79.0.6
	OPENBSD_4_6_BASE:1.79
	OPENBSD_4_5:1.79.0.2
	OPENBSD_4_5_BASE:1.79
	OPENBSD_4_4:1.78.0.2
	OPENBSD_4_4_BASE:1.78
	OPENBSD_4_3:1.77.0.10
	OPENBSD_4_3_BASE:1.77
	OPENBSD_4_2:1.77.0.8
	OPENBSD_4_2_BASE:1.77
	OPENBSD_4_1:1.77.0.6
	OPENBSD_4_1_BASE:1.77
	OPENBSD_4_0:1.77.0.4
	OPENBSD_4_0_BASE:1.77
	OPENBSD_3_9:1.77.0.2
	OPENBSD_3_9_BASE:1.77
	OPENBSD_3_8:1.73.0.4
	OPENBSD_3_8_BASE:1.73
	OPENBSD_3_7:1.73.0.2
	OPENBSD_3_7_BASE:1.73
	OPENBSD_3_6:1.72.0.4
	OPENBSD_3_6_BASE:1.72
	OPENBSD_3_5:1.72.0.2
	OPENBSD_3_5_BASE:1.72
	OPENBSD_3_4:1.60.0.2
	OPENBSD_3_4_BASE:1.60
	OPENBSD_3_3:1.57.0.2
	OPENBSD_3_3_BASE:1.57
	OPENBSD_3_2:1.51.0.2
	OPENBSD_3_2_BASE:1.51
	OPENBSD_3_1:1.43.0.2
	OPENBSD_3_1_BASE:1.43;
locks; strict;
comment	@# @;


1.83
date	2016.09.11.03.06.31;	author deraadt;	state Exp;
branches;
next	1.82;
commitid	z5CDCcIc9a3mbShW;

1.82
date	2016.03.12.17.58.59;	author espie;	state Exp;
branches;
next	1.81;
commitid	IhgrEqrUfozkFDO2;

1.81
date	2012.11.05.08.07.09;	author jasper;	state Exp;
branches;
next	1.80;

1.80
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.79;

1.79
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.78;

1.78
date	2008.06.14.23.09.05;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	2005.10.06.06.43.19;	author otto;	state Exp;
branches;
next	1.76;

1.76
date	2005.10.04.18.33.52;	author otto;	state Exp;
branches;
next	1.75;

1.75
date	2005.10.04.18.11.10;	author otto;	state Exp;
branches;
next	1.74;

1.74
date	2005.10.04.07.39.37;	author otto;	state Exp;
branches;
next	1.73;

1.73
date	2005.02.07.06.14.18;	author david;	state Exp;
branches;
next	1.72;

1.72
date	2004.02.16.18.58.53;	author miod;	state Exp;
branches;
next	1.71;

1.71
date	2004.02.14.17.24.30;	author todd;	state Exp;
branches;
next	1.70;

1.70
date	2004.02.13.23.34.13;	author miod;	state Exp;
branches;
next	1.69;

1.69
date	2004.02.13.16.51.27;	author miod;	state Exp;
branches;
next	1.68;

1.68
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.67;

1.67
date	2004.02.05.22.22.15;	author todd;	state Exp;
branches;
next	1.66;

1.66
date	2004.01.13.15.13.14;	author todd;	state Exp;
branches;
next	1.65;

1.65
date	2004.01.12.22.31.34;	author todd;	state Exp;
branches;
next	1.64;

1.64
date	2004.01.12.22.18.23;	author todd;	state Exp;
branches;
next	1.63;

1.63
date	2003.10.15.02.01.04;	author todd;	state Exp;
branches;
next	1.62;

1.62
date	2003.10.14.17.58.23;	author todd;	state Exp;
branches;
next	1.61;

1.61
date	2003.10.11.03.32.15;	author tedu;	state Exp;
branches;
next	1.60;

1.60
date	2003.06.18.18.08.59;	author todd;	state Exp;
branches;
next	1.59;

1.59
date	2003.05.21.18.48.59;	author jason;	state Exp;
branches;
next	1.58;

1.58
date	2003.04.10.16.11.12;	author millert;	state Exp;
branches;
next	1.57;

1.57
date	2003.03.16.13.15.53;	author miod;	state Exp;
branches;
next	1.56;

1.56
date	2003.01.06.17.19.16;	author todd;	state Exp;
branches;
next	1.55;

1.55
date	2003.01.06.05.57.32;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2002.12.31.16.22.25;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2002.12.05.04.30.21;	author kjc;	state Exp;
branches;
next	1.52;

1.52
date	2002.10.16.15.48.31;	author todd;	state Exp;
branches;
next	1.51;

1.51
date	2002.08.29.23.43.16;	author todd;	state Exp;
branches;
next	1.50;

1.50
date	2002.08.12.10.45.04;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2002.06.18.00.53.45;	author fgsch;	state Exp;
branches;
next	1.48;

1.48
date	2002.06.18.00.32.59;	author fgsch;	state Exp;
branches;
next	1.47;

1.47
date	2002.06.09.04.19.15;	author todd;	state Exp;
branches;
next	1.46;

1.46
date	2002.05.16.16.18.44;	author provos;	state Exp;
branches;
next	1.45;

1.45
date	2002.04.21.23.37.02;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2002.04.17.22.53.04;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2002.04.11.20.28.49;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2002.03.31.21.49.12;	author fgsch;	state Exp;
branches;
next	1.41;

1.41
date	2002.02.25.01.10.26;	author todd;	state Exp;
branches;
next	1.40;

1.40
date	2002.02.21.18.36.54;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2002.02.21.15.06.39;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2002.02.21.13.41.55;	author todd;	state Exp;
branches;
next	1.37;

1.37
date	2002.02.21.13.03.00;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	2002.02.19.21.05.10;	author todd;	state Exp;
branches;
next	1.35;

1.35
date	2002.02.19.21.03.18;	author todd;	state Exp;
branches;
next	1.34;

1.34
date	2002.02.17.05.14.30;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2002.02.16.01.19.52;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2002.02.15.21.13.47;	author todd;	state Exp;
branches;
next	1.31;

1.31
date	2002.02.14.17.44.38;	author todd;	state Exp;
branches;
next	1.30;

1.30
date	2002.02.14.14.32.26;	author todd;	state Exp;
branches;
next	1.29;

1.29
date	2002.02.14.05.38.22;	author todd;	state Exp;
branches;
next	1.28;

1.28
date	2002.02.14.04.41.32;	author todd;	state Exp;
branches;
next	1.27;

1.27
date	2002.02.14.04.37.15;	author todd;	state Exp;
branches;
next	1.26;

1.26
date	2002.02.10.21.52.30;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2002.02.09.19.34.40;	author drahn;	state Exp;
branches;
next	1.24;

1.24
date	2002.02.09.16.59.50;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2002.02.08.20.26.36;	author todd;	state Exp;
branches;
next	1.22;

1.22
date	2002.01.23.08.09.30;	author todd;	state Exp;
branches;
next	1.21;

1.21
date	2002.01.23.07.45.44;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2002.01.23.06.43.53;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2002.01.23.06.31.18;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2002.01.23.06.10.35;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2002.01.12.21.14.57;	author jason;	state Exp;
branches;
next	1.16;

1.16
date	2002.01.08.06.00.15;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.08.05.10.38;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.08.03.26.04;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2002.01.08.03.14.50;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.08.01.33.19;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.08.00.59.59;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.08.00.52.06;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.07.21.58.54;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.07.07.50.48;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.07.07.20.50;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.07.06.54.10;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.07.06.25.32;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.07.06.13.30;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.04.16.58.41;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.04.15.59.16;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.04.09.25.35;	author todd;	state Exp;
branches;
next	;


desc
@@


1.83
log
@extra spaces
@
text
@define(COMM,`#')dnl
include(MAKEDEV.sub)dnl
dnl
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp $-})dnl
dnl
divert(1)dnl
{-#-}
{-#-} Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
{-#-}
{-#-} Permission to use, copy, modify, and distribute this software for any
{-#-} purpose with or without fee is hereby granted, provided that the above
{-#-} copyright notice and this permission notice appear in all copies.
{-#-}
{-#-} THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
{-#-} WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
{-#-} MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
{-#-} ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
{-#-} WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
{-#-} ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
{-#-} OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
{-#-}
define(quote,{-"$1" -})dnl
include(MAKEDEV.common)dnl
dnl
__devtitle(make, {-Device "make" file.  Valid arguments-})dnl
__devitem({-all-}, {-all-}, {-makes all known devices{-,-} including local devices.
{-#-}		Tries to make the ``standard'' number of each type.-})dnl
__devitem(std,{-std-},Standard devices)dnl
__devitem(local,local,Configuration specific devices)dnl
dnl
dnl _std
dnl
dnl $1: tty
dnl $2: memstuff
dnl $3: ksyms
dnl $4: klog
dnl
define({-_std-},{-dnl
std)
	M console	c 0 0 600
	M tty		c $1 0
	M mem		c $2 0 640 kmem
	M kmem		c $2 1 640 kmem
	M null		c $2 2
	M zero		c $2 12
	M stdin		c major_fdesc_c 0
	M stdout	c major_fdesc_c 1
	M stderr	c major_fdesc_c 2
	M ksyms		c $3 0 640 kmem
	M klog		c $4 0 600-})dnl
dnl
divert(1)dnl
define(__mddivert,7)dnl
include(MAKEDEV.md)dnl
dnl
dnl
divert(0)dnl
#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
show_vers()dnl <-- now that all files are included, show versions
#
dnl
divert(2)dnl
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case ${--}1 in
	[0-9]) echo -n {-$-}1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="{-$-}1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}
dnl
dnl dodisk(name, unit, blkmaj, chrmaj, unit, off[, stepping])
dnl   arg: 1    2    3      4      5    6    7
dnl

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=Add(Mult(${5}, ${7:-16}), ${6}) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M {-$-}1{-$-}2$d	b {-$-}3 Add($n, $count) 640 operator
		M r{-$-}1{-$-}2$d	c {-$-}4 Add($n, $count) 640 operator
		let count=count+1
	done
}
dnl
dnl dodisk2(name, unit, blkmaj, chrmaj, unit, off[, stepping])
dnl
dnl 1. name    - prefix name of the device
dnl 2. unit    - beginning unit number for block devices
dnl 3. blkmaj  - block device major number
dnl 4. chrmaj  - character device major number
dnl 5. unit    - beginning unit number for character devices
dnl 6. off     - offset from 0 for all minor numbers
dnl 7. step    - optional, defaults to 16, number of partitions per device
dnl

dodisk2()
{
	n=Add(Mult({-$-}5, ${7:-16}), {-$-}6)
	M {-$-}1{-$-}2a b {-$-}3 $n 640 operator
	M r{-$-}1{-$-}2a c {-$-}4 $n 640 operator
	n=Add($n, 2)
	M {-$-}1{-$-}2c b {-$-}3 $n 640 operator
	M r{-$-}1{-$-}2c c {-$-}4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
dnl
dnl multi mknod
dnl
	: {-$-}{mklist[0]:=";mknod"}
	mklist[{-$-}{#mklist[*]}]=" -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
}

M() {
	RMlist[{-$-}{#RMlist[*]}]={-$-}1
	mkl ${5-666} {-$-}1 {-$-}2 {-$-}3 {-$-}4
	G={-$-}{6:-wheel}
	[ "{-$-}7" ] && {
		MKlist[{-$-}{#MKlist[*]}]="&& chown {-$-}7:{-$-}G {-$-}1"
	} || {
		case $G in
		wheel)
			[ {-$-}{#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[{-$-}{#whlist[*]}]="$1"
		;;
		operator)
			[ {-$-}{#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[{-$-}{#oplist[*]}]="$1"
		;;
		*)
			MKlist[{-$-}{#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}
divert(7)dnl
dnl
dnl there is no blank line at the end of etc.arch/MAKEDEV.md files, so add one
dnl on the following line:

show_devs()dnl
dnl
divert(9)dnl
*)
	echo $i: unknown device
	;;
esac
done
}
_recurse "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
divert(3)dnl
dnl

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
dnl
@


1.82
log
@tweak MAKEDEV.mi to use new makedev(8) capabilities and speed it up.
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp $-})dnl
d224 1
a224 1
        cat
@


1.81
log
@Run chown/chgrp iff the preceding mknod call worked; thus if if there's
actually something to chown/chgrp.

ok todd@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp $-})dnl
d174 1
a174 1
dnl non multi mknod
d176 2
a177 1
	mklist[{-$-}{#mklist[*]}]=";mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
@


1.80
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp $-})dnl
d184 1
a184 1
		MKlist[{-$-}{#MKlist[*]}]=";chown {-$-}7:{-$-}G {-$-}1"
d188 1
a188 1
			[ {-$-}{#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d192 1
a192 1
			[ {-$-}{#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d196 1
a196 1
			MKlist[{-$-}{#MKlist[*]}]=";chgrp $G $1";
@


1.79
log
@Remove /dev/drum and related code.
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp $-})dnl
d155 1
a155 1
dnl 6. off     - offset from 0 for all minor numbers (see svnd for an example)
@


1.78
log
@redo the way MAKEDEV files are generated
get it in, deraadt@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp $-})dnl
d36 1
a36 2
dnl $4: drum
dnl $5: klog
d50 1
a50 2
	M drum		c $4 0 640 kmem
	M klog		c $5 0 600-})dnl
@


1.77
log
@Greatly speedup MAKEDEV by using arrays instead of very long strings
that get copied around a lot. Needs sh(1) max array index bump I
committed earlier. ok todd@@ deraadt@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp $-})dnl
d56 1
a56 1
include(etc.MACHINE/MAKEDEV.md)dnl
@


1.76
log
@oops, typo
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp $-})dnl
d172 1
a172 2
RMlist="rm -f"
MKlist=":"
a175 8
dnl uncomment if multi mknod happens
dnl
ifelse(1, 0,
[ "${mklist[{-$-}1]}" ] && mklist[{-$-}1]="${mklist[{-$-}1]} {-$-}2 {-$-}3 {-$-}4 {-$-}5" || {
	  mklist[{-$-}1]="mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
	  modes="$modes {-$-}1"
     },
dnl
d178 1
a178 6
	[ "${mklist[{-$-}1]}" ] && {
		mklist[{-$-}1]="${mklist[{-$-}1]};mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
	} || {
		mklist[{-$-}1]="mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
		modes="$modes {-$-}1"
	})
d182 1
a182 1
	RMlist="$RMlist {-$-}1"
d186 1
a186 1
		MKlist="$MKlist;chown {-$-}7:{-$-}G {-$-}1"
d189 10
a198 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a199 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} {-$-}1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G {-$-}1"
		}
d218 8
a225 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d227 1
a227 1
	echo "$list" | sh
@


1.75
log
@Removing files is handled by M(), and setting the group to operator as
well, so no need to do that on our own in dodisk().  ok todd@@ deraadt@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp $-})dnl
d144 1
a144 1
		M {-$-}1{-$-}2$d	b {-$-}3 Add($n, $count) 640 operaror
@


1.74
log
@Do not buikd mklist as a string, it is not used anyway.
Nice speedup of MAKEDEV on slower archs. ok fries@@ deraadt@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp $-})dnl
a140 1
	RMlist="$RMlist {-$-}1{-$-}2? r{-$-}1{-$-}2?"
d144 2
a145 2
		M {-$-}1{-$-}2$d	b {-$-}3 Add($n, $count) 640
		M r{-$-}1{-$-}2$d	c {-$-}4 Add($n, $count) 640
a147 1
	MKlist="$MKlist;chown root:operator {-$-}1{-$-}2? r{-$-}1{-$-}2?"
@


1.73
log
@indentation whitespace nits (saves a few bytes even)
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp $-})dnl
a199 1
	mklist="$mklist {-$-}1"
@


1.72
log
@Move the real knowledge of MI devices to a specific file, MAKEDEV.common.
While there, allow the comment char and the divert section for md script
fragments to be overriden.
No functional change (yet).

disabused ok deraadt@@
@
text
@d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp $-})dnl
d90 1
a90 1
	local t="$1"  
@


1.71
log
@copyright 2004 as well, prompted/reminded by miod
@
text
@d1 1
d4 1
a4 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp $-})dnl
d22 2
d25 2
a26 106
dnl Diversions:  (upon termination, concatenated output queues)
dnl
dnl 0 - very top
dnl 1 - descriptions of devices
dnl 2 - init of script, function definitions, etc
dnl 3 - beginning of global recursive R() function
dnl 7 - body of MAKEDEV, device creations, etc
dnl 9 - end
dnl
dnl HOW TO ADD A DEVICE:
dnl
dnl In this file, you must use at least two macros:
dnl
dnl  Use '__devitem(uniqueid, name-pattern, description)' to create an entry
dnl  in the description at the top of the generated MAKEDEV file:
dnl
dnl    __devitem(sca, sca*, Sugar Generic device)dnl
dnl    __devitem(cry, crypto, hardware crypto access driver)dnl
dnl
dnl  This is ultimately shown as:
dnl
dnl    #  sca*   Sugar Generic device
dnl    #  crypto hardware crypto access driver
dnl
dnl  Use '_mkdev(uniqueid, shell-pattern, {-shell-script-})dnl' to create
dnl  a shell script fragment used to 'create' the device (be sure to match
dnl  the uniqueid from above):
dnl
dnl    _mkdev(sca, sca*, {-M sca$U c major_sca_c $U
dnl           M rsca$U b major_sca_b Add($U, 128)-})dnl
dnl    _mkdev(cry, crypto, {-M crypto c major_cry_c 0-})dnl
dnl
dnl  This is ultimately expanded into:
dnl
dnl    sca*)
dnl           M sca$U c 24 $U
dnl           M sca$U b 42 $(($U+128))
dnl           ;;
dnl
dnl    crypto)
dnl           M crypto c 47 0
dnl           ;;
dnl
dnl In the MAKEDEV.md file, add a '_DEV(uniqueid, charmajor, blockmajor)'
dnl entry:
dnl
dnl   _DEV(sca, 24, 42)
dnl   _DEV(cry, 47)
dnl
dnl Final step is to use the 'target/twrget' macros to have the 'all)' target
dnl generate one or more device(s).  Usage of 'target/twrget' is:
dnl      target(target_name, device_name [, append_string ] .. )
dnl      twrget(target_name, uniqueid, device_name, [, append_string ] .. )
dnl
dnl        target_name   a unique name that later is used as an argument to
dnl                      'show_target()' (which expands all devices for a
dnl                      given 'target_name').
dnl        uniqueid      same as 'uniqueid' above
dnl        device_name   string representing the device to be mknod'ed
dnl        append_string for each append_string, `device_name' is prepended
dnl
dnl Note: 'target(a,b,c)' is equivalent to 'twrget(a,b,b,c)'
dnl
dnl
dnl For a short example:
dnl
dnl   target(all, std)dnl
dnl   target(all, sca, 0, 1, 2, 3)dnl
dnl   twrget(all, cry, crypto)dnl
dnl
dnl would expand to:
dnl
dnl   all)
dnl        R std sca0 sca1 sca2 sca3 crypto
dnl        ;;
dnl
dnl presuming '_DEV(sca, ?, ?)' and '_DEV(std)' were in the MAKEDEV.md file.
dnl
dnl
dnl Everything is 'automatically' added to 'MAKEDEV' based on whether or
dnl not the '_DEV()' entry has a corresponding _mkdev() and __devitem()
dnl entry in MAKEDEV.mi (this file).
dnl
dnl Note: be very wary of adding whitespace, carriage returns, or not
dnl finishing a macro with ')dnl' .. otherwise, extra blank lines show up
dnl in the output.
dnl
dnl TODO:
dnl
dnl make a 'disktgt' macro that automatically does:
dnl disktgt(rd, {-rd-})
dnl
dnl	target(all,rd,0)
dnl	target(ramd,rd,0)
dnl	disk_q(rd)
dnl	__devitem(rd, {-rd*-}, {-rd-})dnl
dnl
dnl  Note: not all disks are generated in 'all)'. (e.g. vax has a lot of
dnl        disks that are not generated by 'all)')
dnl
dnl
_mkdev(loc, local, {-test -s $T.local && sh $T.local-})dnl
dnl
__devtitle(make, Device "make" file.  Valid arguments)dnl
__devitem({-all-}, {-all-},
{-makes all known devices{-,-} including local devices.
d28 2
a29 70
dnl
dnl
target(all, mcd, 0)dnl
twrget(all, fdesc, fd)dnl
target(all, st, 0, 1)dnl
target(all, std)dnl
target(all, raid, 0, 1, 2, 3)dnl
target(all, rz, 0, 1, 2, 3, 4)dnl
target(all, hp, 0, 1, 2, 3)dnl
target(all, ra, 0, 1, 2, 3)dnl
target(all, rx, 0, 1)dnl
target(all, wd, 0, 1, 2, 3)dnl
target(all, xd, 0, 1, 2, 3)dnl
twrget(all, aflo, fd, 0, 1, 2, 3)dnl
target(all, systrace)dnl
target(all, pctr)dnl
target(all, pctr0)dnl
target(all, pf)dnl
twrget(all, cry, crypto)dnl
target(all, apm)dnl
twrget(all, tth, ttyh, 0, 1)dnl
target(all, ttyA, 0, 1)dnl
target(all, ttyB, 0, 1, 2, 3, 4, 5)dnl
twrget(all, attyB, ttyB, 0, 1, 2, 3, 4)dnl
target(all, tty0, 0, 1, 2, 3)dnl
twrget(all, mac_tty0, tty0, 0, 1)dnl
twrget(all, tzs, tty, a, b, c, d)dnl
twrget(all, czs, cua, a, b, c, d)dnl
target(all, ttyc, 0, 1, 2, 3, 4, 5, 6, 7)dnl
twrget(all, com, tty0, 0, 1, 2, 3)dnl
target(all, lkm)dnl
twrget(all, mmcl, mmclock)dnl
target(all, lpt, 0, 1, 2)dnl
twrget(all, lpt, lpa, 0, 1, 2)dnl
target(all, joy, 0, 1)dnl
twrget(all, rnd, random)dnl
target(all, uk, 0)dnl
target(all, wt, 0)dnl
target(all, wdt, 0)dnl
twrget(all, au, audio, 0)dnl
twrget(all, speak, speaker)dnl
target(all, asc, 0)dnl
target(all, music, 0)dnl
target(all, radio, 0)dnl
target(all, tuner, 0)dnl
target(all, rmidi, 0, 1, 2, 3, 4, 5, 6, 7)dnl
target(all, usbs)dnl
target(all, adb)dnl
target(all, iop, 0, 1)dnl
target(all, pci)dnl
twrget(all, wsmouse, wscons)dnl
twrget(all, grf_mac, grf, 0, 1, 2, 3)dnl
target(all, par, 0)dnl
twrget(all, amouse, mouse, 0, 1)dnl
twrget(all, akbd, kbd)dnl
target(all, apci, 0)dnl
target(all, ppi, 0)dnl
target(all, view0, 0, 1, 2, 3, 4, 5)dnl
target(all, local)dnl
target(all, gpr, 0)dnl
target(all, ptm)dnl
dnl
_mkdev(all, {-all-}, {-dnl
show_target(all)dnl
-})dnl
dnl
__devitem(ramdisk, ramdisk, devices to be put on ramdisk-based media)dnl
__devitem(std, {-std-}, standard devices)dnl
dnl
dnl
d39 1
a39 1
define({-_std-}, {-dnl
a53 416
target(usb, usb, 0, 1)dnl
target(usb, urio, 0)dnl
twrget(usb, uscan, uscanner, 0)dnl
target(usb, uhid, 0, 1, 2, 3)dnl
target(usb, ulpt, 0, 1)dnl
target(usb, ugen, 0, 1)dnl
target(usb, ttyU, 0, 1)dnl
dnl
__devitem({-usbs-}, usbs, make USB devices)dnl
_mkdev(usbs, usbs, {-dnl
show_target({-usb-})dnl
-})dnl
__devtitle(tap, Tapes)dnl
__devitem(wt, {-wt*	-}, QIC-interface (e.g. not SCSI) 3M cartridge tape)dnl
_mkdev(wt, wt*,
{-name=wt
	n=Mult($U, 8) m=Add($n, 4)
	M $name$U	b major_wt_b $n 640 operator
	M r$name$U	c major_wt_c $n 640 operator
	M n$name$U	b major_wt_b $m 640 operator
	M nr$name$U	c major_wt_c $m 640 operator-})dnl
__devitem(tz, tz*, {-SCSI tapes{-,-} DEC TK50 cartridge tape-})dnl
__devitem(st, {-st*-}, SCSI tapes)dnl
_mkdev(st, st*, {-n=Mult($U, 16)
	for pre in " " n e en
	do
		M ${pre}st$U	b major_st_b $n 660 operator
		M ${pre}rst$U	c major_st_c $n 660 operator
		n=Add($n, 1)
	done-})dnl
__devitem(ct, ct*, HP300 HP-IB cartridge tape)dnl
__devitem(mt, mt*, (Magnetic) 9-track reel tape)dnl
__devitem(ht, ht*, massbus tm03 & tu??)dnl
__devitem(tm, tm*, unibus tm11 & te10 emulations (e.g. Emulex tc-11))dnl
__devitem(ts, ts*, unibus ts11)dnl
__devitem(ut, ut*, unibus tu45 emulations (e.g.si 9700))dnl
__devtitle(dis, Disks)dnl
__devitem(rz, rz*, SCSI disks)dnl
__devitem(sd, {-sd*-}, {-SCSI disks, includes flopticals-})dnl
__devitem(hd, {-hd*-}, HP300 HP-IB disks)dnl
__devitem(cd, {-cd*-}, SCSI cdrom drives)dnl
__devitem(acd, acd*, ATAPI cdrom drives)dnl
_mkdev(cd, cd*, {-dodisk2 cd $U major_cd_b major_cd_c $U 0{--}ifstep(cd)-})dnl
__devitem(mcd, mcd*, Mitsumi cdrom drives)dnl
_mkdev(mcd, mcd*, {-dodisk2 mcd $U major_mcd_b major_mcd_c $U 0{--}ifstep(mcd)dnl
-})dnl
__devitem(ch, {-ch*-}, SCSI media changer)dnl
_mcdev(ch, ch*, ch, {-major_ch_c-}, 660, operator)dnl
__devitem(uk, uk*, SCSI Unknown device)dnl
_mcdev(uk, uk*, uk, {-major_uk_c-}, 640, operator)dnl
__devitem(ss, ss*, SCSI scanners)dnl
_mkdev(ss, ss*, {-M ss$U c major_ss_c Mult($U,16) 640 operator
	M nss$U c major_ss_c Add(Mult($U,16),1) 640 operator
	M enss$U c major_ss_c Add(Mult($U,16),3) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"-})dnl
__devitem(ses, ses*, SES/SAF-TE SCSI devices)dnl
_mkdev(ses, ses*, {-M ses$U c major_ses_c $U 640 operator-})dnl
__devitem(ramd, ramdisk, makes all devices for a ramdisk kernel)dnl arc
_mkdev(ramd, ramdisk, {-dnl
show_target(ramd)dnl
-})dnl
target(ramd, std)dnl
target(ramd, random)dnl
target(ramd, bpf, 0)dnl
__devitem(rd, {-rd*-}, "rd" pseudo-disks)dnl
_mkdev(rd, rd*, {-dodisk2 rd $U major_rd_b major_rd_c $U 0{--}ifstep(rd)-})dnl
__devitem(xd, xd*, Xylogic 753/7053 disks)dnl
__devitem(xy, xy*, {-	Xylogic 450/451 disks-})dnl
__devitem(flo, {-fd*-}, {-Floppy disk drives (3 1/2"{-,-} 5 1/4")-})dnl
_mkdev(flo, fd*,
{-typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=major_flo_b; chr=major_flo_c;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=Add(Mult($U, 128), Mult($typnum, 16))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk Add($n, 1) 640 operator
	M ${nam}c	b $blk Add($n, 2) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr Add($n, 1) 640 operator
	M r${nam}c	c $chr Add($n, 2) 640 operator-}, 664)dnl
__devitem(aflo, ramdisk, devices needed for install floppies)dnl
_mkdev(aflo, fd*, {-case $U in 0|1|2|3)
	M fd${U}a b major_aflo_b Mult($U, 16) 640 operator
	M fd${U}b b major_aflo_b Add(Mult($U, 16), 1) 640 operator
	M rfd${U}a c major_aflo_c Mult($U, 16) 640 operator
	M rfd${U}b c major_aflo_c Add(Mult($U, 16), 1) 640 operator;;
	*) echo bad unit for floppy disk in: $i;;
	esac-})dnl
__devitem(iop, iop*, I2O controller device)dnl
_mcdev(iop, iop*, iop, {-major_iop_c-}, 660)dnl
__devitem(wdt, wdt0, watchdog timer)dnl
_mcdev(wdt, wdt0, wdt, {-major_wdt_c-}, 440, operator)dnl
__devitem(local, local, configuration specific devices)dnl
__devitem(wd, {-wd*-}, {-"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)-})dnl
__devitem(ccd, ccd*, concatenated disk devices)dnl
__devitem(raid, raid*, RAIDframe disk devices)dnl
__devitem(vnd, vnd*, "file" pseudo-disks)dnl
_mkdev(vnd, vnd*, {-dodisk vnd $U major_vnd_b major_vnd_c $U 0{--}ifstep(vnd)
	dodisk svnd $U major_vnd_b major_vnd_c $U 2048{--}ifstep(vnd)-})dnl
__devitem(ra, ra*, {-MSCP disks (ra??, hd??)-})dnl
__devitem(hp, hp*, {-massbuss rm??-})dnl
__devitem(hk, hk*, {-unibus rk06 and rk07-})dnl
__devitem(up, up*, {-other unibus devices (e.g. on Emulex sc-21v controller)-})dnl
__devitem(rb, rb*, {-730 idc w/ rb80 and/or rb02-})dnl
__devitem(rx, rx*, {-MSCP floppy disk (rx33/50/...)-})dnl
__devitem(rl, rl*, {-unibus r102-})dnl
__devitem(hd, hd*, {-HDC9224 hd disks on VS2000-})dnl
dnl
dnl For normal disk devices, add a disk_q entry; anything else define like
dnl the rest (such as vnd above).
dnl
disk_q({-ccd-})dnl
disk_q({-hd-})dnl
disk_q({-hk-})dnl
disk_q({-hp-})dnl
disk_q({-ra-})dnl
disk_q({-raid-})dnl
disk_q({-rb-})dnl
disk_q({-rl-})dnl
disk_q({-rx-})dnl
disk_q({-sd-})dnl
disk_q({-xy-})dnl
disk_q({-xd-})dnl
disk_q({-up-})dnl
disk_q({-wd-})dnl
disk_q({-rz-})dnl
dnl
__devitem(loc, local, configuration specific devices)dnl
_mkdev(loc, local, {-test -s $T.local && sh $T.local-})dnl
_mkdev({-disks-}, {-undefine({-C_ase-})show_disks()undefine({-C_ase-})-},
{-case $i in
show_disks2()dnl
	esac-})dnl
__mkdev({-disks-}){--}dnl
dnl
__devtitle(cons, Console ports)dnl
__devitem(ttyv0, ttyv0, pccons or pcvt screen 0)dnl
__devitem(ttyv, ttyv*, pcvt)dnl
__devitem(wscons, ttyC0, wscons screen 0)dnl
twrget(wscons, wscons, ttyC, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
target(wscons, wsmux)dnl
target(wscons, wskbd, 0, 1, 2, 3)dnl
target(wscons, wsmouse, 0, 1, 2, 3)dnl
_mkdev({-wscons-}, {-wscons-}, {-dnl
show_target(wscons)dnl
-})dnl
__devitem(wsdisp, ttyC-F*, wscons virtual consoles)dnl
_mkdev({-wsdisp-}, tty[C-F]*, {-U=${i##tty[C-F]}
	case $i in
	ttyC*) n=C m=expr(0*256);;
	ttyD*) n=D m=expr(1*256);;
	ttyE*) n=E m=expr(2*256);;
	ttyF*) n=F m=expr(3*256);;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c major_wsdisp_c {-$(( 16#$U + $m ))-} 600;;
	cfg) M tty${n}cfg c major_wsdisp_c Add(255,$m) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac-})dnl
__devitem(wskbd, wskbd*, wscons keyboards)dnl
_mkdev(wskbd, wskbd*, {-M wskbd$U c major_wskbd_c $U 600-})dnl
__devitem(wsmux, wsmux, wscons keyboard/mouse mux devices)dnl
_mkdev(wsmux, wsmux|wsmouse|wskbd, {-M wsmouse c major_wsmux_c 0 600
	M wskbd c major_wsmux_c 1 600-})dnl
__devitem(pcons, console, PROM console)dnl
__devtitle(point, Pointing devices)dnl
__devitem(wsmouse, wsmouse*, wscons mice)dnl
_mkdev(wsmouse, wsmouse*, {-M wsmouse$U c major_wsmouse_c $U 600-})dnl
__devitem(quad, quadmouse, "quadrature mouse")dnl
__devtitle(pty, Pseudo terminals)dnl
__devitem(ptm, ptm, pty master device)dnl
_mkdev(ptm, ptm, {-M ptm c major_ptm_c 0 666-})dnl
__devitem(tty, tty*, set of 16 slave pseudo terminals)dnl
__devitem(pty, pty*, set of 16 master pseudo terminals)dnl
_mkdev(pty, pty*, {-if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
	n=0
	while [ $n -lt 16 ]
	do
		nam=$name$(hex $n)
		off=Mult($U, 16)
		M tty$nam c major_tty_c Add($off, $n)
		M pty$nam c major_pty_c Add($off, $n)
		n=Add($n, 1)
	done-})dnl
__devitem(dc, dc*, {-4 channel serial interface (keyboard{-,-} mouse{-,-}modem{-,-} printer)-})dnl
__devtitle(prn, Printers)dnl
__devitem(par, par*, motherboard parallel port)dnl
__devitem(lpt, lpt*, IEEE 1284 centronics printer)dnl
_mkdev(lpt, lpt*|lpa*,
{-case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c major_lpt_c Add($U, $f) 600-})dnl
__devitem(lpa, lpa*, interruptless lp)dnl
__devitem(ppi, ppi*, HP-IB plotters)dnl
__devtitle({-usb-}, USB devices)dnl
__devitem({-usb-}, usb*, Bus control devices used by usbd for attach/detach)dnl
_mkdev({-usb-}, usb*, {-[ "$i" = "usb" ] && u= || u=$U
	M usb$u c major_usb_c $U 660-})dnl
__devitem(uhid, uhid*, Generic HID devices)dnl
_mcdev({-uhid-}, uhid*, {-uhid-}, {-major_uhid_c-}, 660)dnl
__devitem(ulpt, ulpt*, Printer devices)dnl
_mcdev({-ulpt-}, ulpt*, {-ulpt-}, {-major_ulpt_c-}, 660)dnl
__devitem(ttyU, ttyU*, Serial ports)dnl
_mkdev({-ttyU-}, {-ttyU[0-9a-zA-Z]-}, {-U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c major_ttyU_c $o 660 dialer uucp-})dnl
__devitem(urio, urio*, Diamond Multimedia Rio 500)dnl
_mcdev({-urio-}, urio*, {-urio-}, {-major_urio_c-}, 660)dnl
__devitem(uscan, uscanner*, Scanners)dnl
_mcdev({-uscan-}, uscanner*, {-uscanner-}, {-major_uscan_c-}, 660)dnl
__devitem(ugen, ugen*, Generic device)dnl
_mkdev(ugen, ugen*, {-n=Mult($U, 16)
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
	do
		M ugen$U.$j c major_ugen_c Add($n, $j) 660
	done-})dnl
__devtitle(cpu, Cpus)dnl
__devitem(cpu, cpu*, cpus)dnl
__devtitle(call, Call units)dnl
__devtitle(term, Terminal ports)dnl
__devtitle(termp, Terminal multiplexers)dnl
__devitem(dca, dca*, HP200/300 single port serial interface)dnl
__devitem(dcm, dcm*, HP200/300 4 port serial mux interface)dnl
__devitem(apci, apci*, HP400 4 port serial mux interface)dnl
__devitem({-com-}, {-tty[0-7][0-9a-f]-}, NS16x50 serial ports)dnl
_mkdev(com, {-tty[0-7][0-9a-f]-}, {-U=${i#tty*}
	o=$(h2d $U)
	M tty$U c major_com_c $o 660 dialer uucp
	M cua$U c major_com_c Add($o, 128) 660 dialer uucp-})dnl
__devitem(ttyc, ttyc*, Cyclades serial ports)dnl
__devitem(tzs, tty[a-z]*, Zilog 8530 Serial Port)dnl
_mkdev(tzs, {-tty[a-z]-}, {-u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=4 ;;
	d) n=5 ;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c major_tzs_c $n 660 dialer uucp-})dnl
__devitem(tth, ttyh*, Sab82532 serial devices)dnl
_mkdev(tth, ttyh*, {-M ttyh$U c major_tth_c $U 660 dialer uucp-})dnl
__devitem(czs, cua[a-z]*, Zilog 8530 Serial Port)dnl
_mkdev(czs, cua[a-z], {-u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=4 ;;
	d) n=5 ;;
	*) echo unknown cua device $i ;;
	esac
	M cua$u c major_czs_c Add($n, 128) 660 dialer uucp-})dnl
__devitem(arm_tty, tty*, {-alias for PC COM ports{-,-} this is what the system really wants-})dnl
__devitem(tty0, tty00, standard serial port)dnl
__devitem(mac_tty0, tty00, standard serial port)dnl
__devitem(ttyA, ttyA*, mfc serial ports)dnl
__devitem(ttyz, tty[a-d], onboard zs serial ports)dnl
__devitem(cuaz, cua[a-d], onboard zs serial ports)dnl
__devitem(ttyB, ttyB?, DEC 3000 ZS8530 ("scc") serial ports)dnl
__devitem(scc, scc*, 82530 serial interface)dnl
__devtitle(spec, Special purpose devices)dnl
__devitem(apm, apm	, power management device)dnl
_mkdev(apm, apm*, {-M apm	c major_apm_c 0 644
	M apmctl	c major_apm_c 8 644-})dnl
__devitem(pcmcia, pcmcia*, PCMCIA card drivers)dnl
__devitem(pctr, pctr*, PC Performance Tuning Register access device)dnl
_mkdev(pctr, pctr, {-M pctr c major_pctr_c 0 644-})dnl
__devitem(systrace, systrace*, system call tracing device)dnl
_mkdev(systrace, systrace, {-M systrace c major_systrace_c 0 644-})dnl
__devitem(au, audio*, audio device)dnl
_mkdev(au, audio*, {-M sound$U	c major_au_c $U
	M mixer$U	c major_au_c Add($U, 16)
	M audio$U	c major_au_c Add($U, 128)
	M audioctl$U	c major_au_c Add($U, 192)
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"-})dnl
__devitem(asc, asc*, ASC Audio device)dnl
_mkdev(asc, asc*, {-M asc$U major_asc_c 0-})dnl
__devitem(music, music*, midi devices)dnl
_mkdev(music, music*, {-M music$U     c major_music_c $U
	M sequencer$U c major_music_c Add($U, 128)
	MKlist="$MKlist;[ -e music ] || ln -s music$U music"
	MKlist="$MKlist;[ -e sequencer ] || ln -s sequencer$U sequencer"-})dnl
__devitem(radio, radio*, FM tuner device)dnl
_mkdev(radio, radio*, {-M radio$U     c major_radio_c $U
	MKlist="$MKlist;[ -e radio ] || ln -s radio$U radio"-})dnl
__devitem(fdesc, fd, makes fd/* for the fdescfs)dnl
_mkdev(fdesc, fd, {-RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c major_fdesc_c $n;n=Add($n, 1);done
	MKlist="$MKlist;chmod 555 fd"-})dnl
__devtitle(graph, Graphics devices)dnl
__devitem(grf_mac, grf*, {-custom chip (grf0){-,-} Retina Z2/Z3 (grf1/grf2){-,-}
{-#-}		Cirrus boards (grf3){-,-} A2410 (grf4) video or
{-#-}		CyberVision 64 (grf5)-})dnl
__devitem(ite, ite*, terminal emulator interface to HP300 graphics devices)dnl
__devitem({-hil-}, {-hil-}, HP300 HIL input devices)dnl
__devitem(oppr, openprom)dnl
_cdev(oppr, openprom, 70, 0)dnl
__devitem(cry, crypto, hardware crypto access driver)dnl
_mkdev(cry, crypto, {-M crypto c major_cry_c-} 0)dnl
__devitem(pf, pf*, Packet Filter)dnl
_mkdev(pf, {-pf*-}, {-M pf c major_pf_c 0 600-})dnl
__devitem(bpf, bpf*, Berkeley Packet Filter)dnl
_mkdev(bpf, {-bpf*-}, {-M bpf$U c major_bpf_c $U 600-}, 600)dnl
_mkdev(tun, {-tun*-}, {-M tun$U c major_tun_c $U 600-}, 600)dnl
__devitem(speak, speaker, pc speaker)dnl
_mkdev(speak, speaker, {-M speaker c major_speak_c 0 600-})dnl
__devitem(kbd, kbd, keyboard (provides events, for X11))dnl
_cdev(kbd, kbd, {-major_kbd_c-}, 0, 600)dnl
__devitem(kbd_atari, kbd, Atari keyboard)dnl
__devitem(akbd, kbd, Amiga keyboard)dnl
__devitem(rkbd, kbd, raw keyboard)dnl
__devitem(kbdctl, kbdctl, keyboard control)dnl
__devitem(beep, beep, riscpc speaker)dnl
__devitem(iic, iic*, IIC bus device)dnl
__devitem(rtc, rtc*, RTC device)dnl
__devitem(view, view*, generic interface to graphic displays)dnl
__devitem(aconf, aconf, {-autoconfig information (not yet)-})dnl
__devitem(mouse-, mouse-*, "mouse link")dnl
__devitem(mouse, mouse, mouse (provides events, for X11))dnl
__devitem(amouse, mouse*, Amiga mice)dnl
__devitem(lkm, lkm, loadable kernel modules interface)dnl
_cdev(lkm, lkm, {-major_lkm_c-}, 0, 640, _lkm)dnl
__devitem(mmcl, mmclock, memory mapped clock)dnl
__devitem(tun, tun*, network tunnel driver)dnl
__devitem(rnd, *random, inkernel random data source)dnl
_mkdev(rnd, *random, {-n=0
	for pre in " " s u p a
	do
		M ${pre}random c major_rnd_c $n 644
		n=Add($n, 1)
	done-}, 644)dnl
__devitem(joy, joy*, joystick driver)dnl
_mcdev(joy, joy*, joy, {-major_joy_c-}, 666)dnl
__devitem(mag, magma*, magma card (makes 16 tty and 2 bpp))dnl
__devitem(bppmag, bppmag[mno], magma parallel port device)dnl
__devitem(spif, spif*, spif card (makes 8 tty and 1 bpp))dnl
__devitem(bppsp, bpp[jkl], spif parallel port device)dnl
_mkdev(mag, magma*, {-case $U in
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=Mult($U, 64)
	n=0
	while [ $n -lt 16 ]
	do
		name=${nam}`hex $n`
		M tty$name c major_mag_c Add($offset, $n) 660 dialer uucp
		n=Add($n, 1)
	done
	M bpp${nam}0 c major_bppmag_c Add($offset, 0) 600
	M bpp${nam}1 c major_bppmag_c Add($offset, 1) 600-})dnl
_mkdev(spif, spif*, {-case $U in
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=Mult($U, 64)
	n=0
	while [ $n -lt 8 ]
	do
		name=${nam}`hex $n`
		M tty$name c major_spif_c Add($offset, $n) 660 dialer uucp
		n=Add($n, 1)
	done
	M bpp${nam}0 c major_bppsp_c Add($offset, 0) 600-})dnl
__devitem(bpp, bpp*, parallel port devices)dnl
_mkdev(bpp, {-bpp*-}, {-M bpp$U c major_bpp_c $U 600-}, 600)dnl
__devitem(xfs, xfs*, XFS filesystem devices)dnl
_mcdev(xfs, xfs*, xfs, {-major_xfs_c-}, 600)dnl
__devitem(hil, hil, HIL input devices)dnl
__devitem(rmidi, rmidi*, raw midi devices)dnl
_mcdev(rmidi, rmidi*, rmidi, {-major_rmidi_c-}, 666)dnl
__devtitle(plat, Platform-specific devices)dnl
__devitem(fb, fb*, framebuffer device)dnl
__devitem(bktr, bktr*, video capturing)dnl
_mcdev(bktr, bktr*, bktr, {-major_bktr_c-}, 644)dnl
__devitem(tuner, tuner*, tuner device)dnl
_mkdev(tuner, tuner*, {-M tuner$U c major_bktr_c Add(Mult($U, 2), 16) 644-}, 644)dnl
__devitem(pci, pci, PCI bus device)dnl
_mkdev(pci, pci, {-M pci c major_pci_c 0 600-}, 600)dnl
__devitem(adb, adb, Apple Desktop bus event interface)dnl
_mkdev(adb, adb, {-M adb c major_adb_c 0-})dnl
__devitem(pdc, pdc, PDC device)dnl
_mkdev(local, local, {-test -s $T.local && sh $T.local-}, 666)dnl
__devitem(gpr, gpr*, gpr400 pcmcia device)dnl
_mcdev(gpr, gpr*, gpr, {-major_gpr_c-})dnl
dnl
d55 1
@


1.70
log
@We have no such thing as non-wscons ttyE.
"looks ok" drahn@@ deraadt@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.69 2004/02/13 16:51:27 miod Exp $-})dnl
d7 1
a7 1
{-#-} Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.69
log
@Typo in tty description.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp $-})dnl
a505 6
__devitem(arc_ttyC, ttyC0, pccons)dnl
__devitem(i386_ttyC, ttyC*, pcvt)dnl
__devitem(ttyC, ttyC?, {-AlphaStation NS16550 ("com serial ports")-})dnl
__devitem(ttyE, ttyE?, Workstation console (framebuffer & keyboard) tty emulators)dnl
__devitem(ser02, ser02, {-serial2 port (channel A on 8530)-})dnl
__devitem(mdm02, mdm02, {-modem2 port (channel B on 8530)-})dnl
@


1.68
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp $-})dnl
d411 1
a411 1
__devitem(tty, tty*, set of 16 slave psuedo terminals)dnl
@


1.67
log
@rm SunOS support, ok deraadt@@, docs work in progress
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.66 2004/01/13 15:13:14 todd Exp $-})dnl
d189 1
d409 2
@


1.66
log
@shovel ttye to md; ok miod@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp $-})dnl
a818 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d827 1
a827 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.65
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp $-})dnl
a158 2
twrget(all, mac_ttye, ttye, 0)dnl
target(all, ttye, 0, 1, 2, 3, 4, 5, 6)dnl
a375 2
__devitem(ttye, ttye*, ite bitmapped consoles)dnl
__devitem(mac_ttye, ttye*, ite bitmapped consoles)dnl
@


1.64
log
@utty[0-9a-f] -> /dev/ttyU[0-9a-zA-Z]; prompted by & ok deraadt@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp $-})dnl
d450 3
a452 1
_mcdev({-ttyU-}, ttyU*, {-ttyU-}, {-major_ttyU_c-}, 660, dialer uucp)dnl
d677 8
@


1.63
log
@typo found by marc
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp $-})dnl
d230 1
a230 1
target(usb, utty, 0, 1)dnl
d449 2
a450 2
__devitem(utty, utty*, Serial ports)dnl
_mcdev({-utty-}, utty*, {-utty-}, {-major_utty_c-}, 660)dnl
@


1.62
log
@allow 'MAKEDEV tty08 - tty7f' to function now, prompted by theo
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp $-})dnl
d471 1
a471 1
	o=$(hextod $U)
@


1.61
log
@larger svnd gap
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp $-})dnl
d469 5
a473 3
__devitem({-com-}, {-tty0*-}, NS16x50 serial ports)dnl
_mkdev(com, {-tty0*-}, {-M tty$U c major_com_c $U 660 dialer uucp
	M cua$U c major_com_c Add($U, 128) 660 dialer uucp-})dnl
d677 1
a677 1
trunc()
d679 16
a694 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="{-$-}1"
	arg2="{-$-}2"
	case {-$-}3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
@


1.60
log
@switch to share/misc/license.template
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp $-})dnl
d338 1
a338 1
	dodisk svnd $U major_vnd_b major_vnd_c $U 128{--}ifstep(vnd)-})dnl
@


1.59
log
@add bpp devices; with much help from todd
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.58 2003/04/10 16:11:12 millert Exp $-})dnl
d7 1
a7 2
{-#-} Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
{-#-} All rights reserved.
d9 3
a11 7
{-#-} Redistribution and use in source and binary forms, with or without
{-#-} modification, are permitted provided that the following conditions
{-#-} are met:
{-#-} 1. Redistributions of source code must retain the above copyright
{-#-}    notice, this list of conditions and the following disclaimer.
{-#-} 2. The name of the author may not be used to endorse or promote products
{-#-}    derived from this software without specific prior written permission.
d13 7
a19 10
{-#-} THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
{-#-} INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
{-#-} AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
{-#-} THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
{-#-} EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
{-#-} PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
{-#-} OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
{-#-} WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
{-#-} OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
{-#-} ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.58
log
@POSIX chown; Leandro Costa
todd@@ OK
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.57 2003/03/16 13:15:53 miod Exp $-})dnl
d629 1
@


1.57
log
@Remove leftovers from non-wscons sparc. There might be more left to prune.
This does not affect the output, so no regen is necessary.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp $-})dnl
d726 1
a726 1
	MKlist="$MKlist;chown root.operator {-$-}1{-$-}2? r{-$-}1{-$-}2?"
d780 1
a780 1
		MKlist="$MKlist;chown {-$-}7.{-$-}G {-$-}1"
@


1.56
log
@one more tweak for _lkm; ok deraadt@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp $-})dnl
a189 8
twrget(all, btw, bwtwo, 0)dnl
twrget(all, ctw, cgtwo, 0)dnl
twrget(all, ctr, cgthree, 0)dnl
twrget(all, cfr, cgfour, 0)dnl
twrget(all, csx, cgsix, 0)dnl
twrget(all, ceg, cgeight, 0)dnl
twrget(all, cfo, cgfourteen, 0)dnl
target(all, tcx, 0)dnl
a556 16
__devitem(btw, bwtwo*)dnl
_mcdev(btw, bwtwo*, bwtwo, {-major_btw_c-}, 666)dnl
__devitem(ctw, cgtwo*)dnl
_mcdev(ctw, cgtwo*, cgtwo, {-major_ctw_c-}, 666)dnl
__devitem(ctr, cgthree*)dnl
_mcdev(ctr, cgthree*, cgthree, {-major_ctr_c-}, 666)dnl
__devitem(cfr, cgfour*)dnl
_mcdev(cfr, cgfour*, cgfour, {-major_cfr_c-}, 666)dnl
__devitem(csx, cgsix*)dnl
_mcdev(csx, cgsix*, cgsix, {-major_csx_c-}, 666)dnl
__devitem(ceg, cgeight*)dnl
_mcdev(ceg, cgeight*, cgeight, {-major_ceg_c-}, 666)dnl
__devitem(cfo, cgfourteen*)dnl
_mcdev(cfo, cgfourteen*, cgfourteen, {-major_cfo_c-})dnl
__devitem(tcx, tcx*)dnl
_mcdev(tcx, tcx*, tcx, {-major_tcx_c-})dnl
@


1.55
log
@_lkm group for modstat(8); millert ok
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.54 2002/12/31 16:22:25 miod Exp $-})dnl
d807 1
a807 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.54
log
@Prepare for the removal of amiga and sun3 platforms from the tree.
There has not been enough activity and interest towards these platform
to keep them lying in the tree.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp $-})dnl
d605 1
a605 1
_cdev(lkm, lkm, {-major_lkm_c-}, 0, 640, kmem)dnl
@


1.53
log
@remove altq entries.  I should have done these before MAKEDEV.
pointed out by todd@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp $-})dnl
a198 1
twrget(all, grf_amiga, grf, 0, 1, 2, 3, 4, 5, 6)dnl
a514 1
__devitem(attyB, ttyB*, ISA COM ports)dnl  amiga
a560 1
__devitem(grf_amiga, grf*, {-Motherboard bitmapped video.-})dnl
@


1.52
log
@move md things into md files (pass 1) as discussed a long time ago
ok miod@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.51 2002/08/29 23:43:16 todd Exp $-})dnl
a153 1
target(all, altq)dnl
a590 6
__devitem(altq, altq/, ALTQ control interface)dnl
_mkdev(altq, altq, {-RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c major_altq_c $U 644
		U=Add($U, 1)
	done-})dnl
@


1.51
log
@add tty[DEF]{[0-9a-f],cfg} for sparc and sparc64 for wscons
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.50 2002/08/12 10:45:04 miod Exp $-})dnl
a302 451
-})dnl
ifelse(MACHINE, mvmeppc, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, tty0, 0, 1, 2, 3)dnl
twrget(ramd, wsdisp, ttyC, 0)dnl
target(ramd, rd, 0)dnl
target(ramd, wd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3, 4)dnl
target(ramd, cd, 0, 1)dnl
target(ramd, st, 0, 1)dnl
target(ramd, bpf, 0)dnl
target(ramd, rd, 0)dnl
-})dnl
ifelse(MACHINE, sparc, {-dnl
twrget(wscons, wscons, ttyD, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
twrget(wscons, wscons, ttyE, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
twrget(wscons, wscons, ttyF, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, hk, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, fd, 0)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, rd, 0)dnl
target(ramd, cd, 0)dnl
-})dnl
ifelse(MACHINE, sparc64, {-dnl
twrget(wscons, wscons, ttyD, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
twrget(wscons, wscons, ttyE, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
twrget(wscons, wscons, ttyF, cfg, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(ramd, fd, 0)dnl
target(ramd, rd, 0)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, wd, 0, 1, 2, 3)dnl
target(ramd, cd, 0, 1)dnl
target(ramd, st, 0, 1)dnl
target(ramd, bpf, 0)dnl
twrget(all, s64_tzs, tty, a, b, c, d)dnl
twrget(all, s64_czs, cua, a, b, c, d)dnl
__devitem(s64_tzs, tty[a-z]*, Zilog 8530 Serial Port)dnl
__devitem(s64_czs, cua[a-z]*, Zilog 8530 Serial Port)dnl
_mkdev(s64_tzs, {-tty[a-z]-}, {-u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c major_s64_tzs_c $n 660 dialer uucp-})dnl
_mkdev(s64_czs, cua[a-z], {-u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown cua device $i ;;
	esac
	M cua$u c major_s64_czs_c Add($n, 128) 660 dialer uucp-})dnl
-})dnl
ifelse(MACHINE, i386, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(all, bktr, 0)dnl
target(ramd, tty0, 0, 1, 2, 3)dnl
twrget(ramd, wsdisp, ttyC, 0)dnl
target(ramd, wt, 0)dnl
target(ramd, fd, 0)dnl
target(ramd, rd, 0)dnl
target(ramd, wd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, cd, 0, 1)dnl
target(ramd, st, 0, 1)dnl
target(ramd, mcd, 0)dnl
-})dnl
ifelse(MACHINE, alpha, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2)dnl
target(ramd, wd, 0)dnl
target(ramd, tty0, 0, 1)dnl
target(ramd, st, 0)dnl
target(ramd, cd, 0)dnl
target(ramd, ttyB, 0, 1)dnl
target(ramd, ttyE, 0, 1)dnl
-})dnl
ifelse(MACHINE, amiga, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, kbd)dnl
target(ramd, pty, 0)dnl
target(ramd, tty0, 0)dnl
target(ramd, ttyA, 0, 1)dnl
target(ramd, ttyB, 0, 1)dnl
target(ramd, ttye, 0, 1, 2, 3, 4, 5, 6)dnl
target(ramd, cd, 0, 1)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, st, 0, 1)dnl
target(ramd, fd, 0, 1)dnl
target(ramd, wd, 0, 1)dnl
target(ramd, rd, 0)dnl
-})dnl
ifelse(MACHINE, hp300, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
_mkdev(st_hp300, ct*|mt*|st*,
{-case $i in
	ct*) name=ct blk=major_ct_b chr=major_ct_c;;
	mt*) name=mt blk=major_mt_b chr=major_mt_c;;
	st*) name=st blk=major_st_hp300_b chr=major_st_hp300_c;;
	esac
	case $U in
	[0-7])
		four=Add($U, 4) eight=Add($U, 8)
		twelve=Add($U, 12) twenty=Add($U, 20)
		M r$name$U	c $chr $U 660 operator
		M r$name$four	c $chr $four 660 operator
		M r$name$eight	c $chr $eight 660 operator
		M r$name$twelve	c $chr $twelve 660 operator
		MKlist="$MKlist;ln r$name$four nr$name$U";: sanity w/pdp11 v7
		MKlist="$MKlist;ln r$name$twelve nr$name$eight";: ditto
		RMlist="$RMlist nr$name$U nr$name$eight"
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac-})dnl
__devitem(st_hp300, st*, Exabyte tape)dnl
__devitem(grf, grf*, raw interface to HP300 graphics devices)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target( all, grf, 0)dnl
dnl XXX target( all, hil, 0, 1, 2, 3, 4, 5, 6, 7)dnl
target( all, hil, )dnl
twrget( all, st_hp300, st, 0, 1)dnl
target( all, dca, 0, 1)dnl
target( all, dcm, 0, 1, 2, 3)dnl
target( all, hd, 0, 1, 2)dnl
target( all, ct, 0, 1)dnl
target( all, ite, 0)dnl
target(ramd, ct, 0, 1)dnl
target(ramd, hd, 0, 1, 2)dnl
target(ramd, sd, 0, 1, 2)dnl
target(ramd, rd, 0, 1)dnl
target(ramd, pty, 0)dnl
target(ramd, hil, )dnl
target(ramd, grf, 0)dnl
target(ramd, apci, 0)dnl
target(ramd, ite, 0)dnl
target(ramd, dca, 0)dnl
target(ramd, dcm, 0, 1)dnl
target(ramd, bpf, 0, 1)dnl
target(ramd, tun, 0, 1)dnl
-})dnl
ifelse(MACHINE, hppa, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, st, 0, 1)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, rd, 0, 1)dnl
target(ramd, pty, 0)dnl
target(ramd, hil)dnl
target(ramd, com, 0, 1)dnl
target(ramd, bpf, 0, 1)dnl
target(ramd, tun, 0, 1)dnl
-})dnl
ifelse(MACHINE, mac68k, {-dnl
target(all, ses, 0)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, st, 0, 1)dnl
target(ramd, rd, 0, 1)dnl
target(ramd, adb)dnl
target(ramd, asc, 0)dnl
target(ramd, grf, 0, 1)dnl
target(ramd, ttye, 0)dnl
twrget(ramd, mac_tty0, tty0, 0, 1)dnl
target(ramd, pty, 0)dnl
-})dnl
ifelse(MACHINE, macppc, {-dnl
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3, 4)dnl
target(ramd, wd, 0, 1, 2, 3, 4)dnl
target(ramd, st, 0, 1)dnl
target(ramd, cd, 0, 1)dnl)dnl
target(ramd, rd, 0)dnl
target(ramd, ttyE, 0)dnl
target(ramd, tty0, 0, 1)dnl
target(ramd, pty, 0)dnl
-})dnl
ifelse(MACHINE, sun3, {-
target(all, ses, 0)dnl
target(all, ch, 0)dnl
target(all, ss, 0, 1)dnl
target(all, xfs, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0, 1, 2)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, hk, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
-})dnl
ifelse(MACHINE, vax, {-
dnl target(all, ses, 0)dnl
dnl target(all, ut, 0)dnl
dnl target(all, ch, 0)dnl
target(all, ss, 0)dnl
dnl target(all, xfs, 0)dnl
target(all, pty, 0, 1)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7)dnl
target(all, tun, 0, 1)dnl
dnl target(all, xy, 0, 1, 2, 3)dnl
dnl target(all, hk, 0, 1, 2, 3)dnl
dnl target(all, up, 0, 1, 2, 3)dnl
dnl target(all, rd, 0)dnl
target(all, cd, 0)dnl
target(all, sd, 0, 1, 2, 3)dnl
target(all, vnd, 0)dnl
__devitem(dhu, dhu*, unibus dhu11)dnl
__devitem(dmz, dmz*, unibus dmz32)dnl
__devitem(dmf, dmf*, unibus dmf32)dnl
__devitem(dh, dh*, {-unibus dh11 and emulations (e.g. Able dmax, Emulex cs-11)-})
__devitem(vt, vt*, {-console-})dnl
__devitem(dz, dz*, unibus dz11 and dz32)dnl
__devitem(dl, dl*, unibus dl11)dnl
_mkdev(dz, dz*,
{-case $U in
       [0-7])
	       i=0
	       while [ $i -lt 8 ]; do
		       no=Add(Mult($U, 8), $i)
		       if [ $no -lt 10 ]; then
			       no="0${no}"
		       fi
		       M tty${no} c 1 $no 600
		       let i=i+1
	       done
	       ;;
	*)
	       echo bad unit for dz in: $i
	       ;;
       esac-})dnl
dnl XXX split this up abit?
_mkdev(dhu, dhu*|dmz*|dmf*|dh*|vt*,
{-set -A cnvtbl 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v
	case $i in
	vt*)    name=vt; major=68; count=8;
		case $U in
		0) ch=w ;;
		*) echo bad unit for $name in: $i ;;
		esac;;
	dmz*)   name=dmz; major=37; count=24;
		case $U in
		0) ch=a ;; 1) ch=b ;; 2) ch=c ;; 3) ch=e ;; 4) ch=f ;;
		*) echo bad unit for $name in: $i ;;
		esac;;
	dmf*)   name=dmf; major=22; count=8;
		case $U in
		0) ch=A ;; 1) ch=B ;; 2) ch=C ;; 3) ch=E ;;
		4) ch=F ;; 5) ch=G ;; 6) ch=H ;; 7) ch=I ;;
		*) echo bad unit for $name in: $i ;;
		esac;;
	dhu*)   name=dhu; major=34; count=16;
		case $U in
		0) ch=S ;; 1) ch=T ;; 2) ch=U ;; 3) ch=V ;;
		4) ch=W ;; 5) ch=X ;; 6) ch=Y ;; 7) ch=Z ;;
		*) echo bad unit for $name in: $i ;;
		esac;;
	dh*)    name=dh; major=12; count=16;
		case $U in
		0) ch=h ;; 1) ch=i ;; 2) ch=j ;; 3) ch=k ;;
		4) ch=l ;; 5) ch=m ;; 6) ch=n ;; 7) ch=o ;;
		*) echo bad unit for $name in: $i ;;
		esac;;
	esac
	i=0
	while [ $i -lt $count ]; do
		let=${cnvtbl[$i]}
		if [ -n "$let" ] ;then
			M tty${ch}${let} c $major Add(Mult($U, $count), $i) 600
		else
			echo bad count for ${name}: $U, $count, $i
		fi
		let i=i+1
	done
	;;

dl*)
	major=66
	let=${cnvtbl[$U]}
	if [ -n "$let" ] ;then
		M ttyJ${let} c $major $U 600
	else
		echo bad number for ${name}: $U
	fi-})dnl
dnl
target( all, ccd, 0)dnl
target( all, hd, 0, 1, 2)dnl
target( all, mt, 0, 1)dnl
target( all, ts, 0, 1)dnl
target( all, uu, 0)dnl
target( all, st, 0, 1)dnl
target( all, dhu, 0)dnl
dnl target( all, dmz, 0)dnl
dnl target( all, dmf, 0)dnl
dnl target( all, dh, 0)dnl
target( all, dz, 0)dnl
target( all, dl, 0)dnl
target( all, vt, 0)dnl
target(ramd, fd, 0)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, rd, 0)dnl
target(ramd, cd, 0)dnl
target(ramd, bpf, 0)dnl
@


1.50
log
@MAKEDEV and /etc/* changes for wscons on sparc
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp $-})dnl
d332 2
d357 2
@


1.49
log
@this is better.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.48 2002/06/18 00:32:59 fgsch Exp $-})dnl
d331 1
@


1.48
log
@Add gpr, i386 only; this may change in the near future to something more
generic as /dev/smartcard or similar.
deraadt@@ ok.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp $-})dnl
d208 1
a208 1
target(all, gpr)dnl
d1126 2
a1127 2
__devitem(gpr, gpr, gpr400 pcmcia device)dnl
_mkdev(gpr, gpr, {-M gpr c major_gpr_c 0-})dnl
@


1.47
log
@remove the `real' Id string in generated output, keeps conflicts down
miod@@ ok, requested a long time ago by misc
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp $-})dnl
d208 1
d1126 2
@


1.46
log
@add systrace device okay fries@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.45 2002/04/21 23:37:02 miod Exp $-})dnl
a1137 1
{-#-}	$Open{--}BSD$
@


1.45
log
@Add ramdisk nodes to MAKEDEV.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.44 2002/04/17 22:53:04 miod Exp $-})dnl
d151 1
d980 2
@


1.44
log
@Remove duplicate device list for "MAKEDEV all".
No change in the generated output, so no regen needed.
ok todd@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp $-})dnl
d584 1
@


1.43
log
@pci should be 600; matthieu ok
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp $-})dnl
a141 1
target(all, mcd, 0)dnl
a175 1
target(all, st, 0)dnl
@


1.42
log
@create bktr0 for i386; millert@@ deraadt@@ ok.
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp $-})dnl
d1118 1
a1118 1
_mkdev(pci, pci, {-M pci c major_pci_c 0 664-}, 664)dnl
@


1.41
log
@- fix a 'rndrandom' vs 'random' output problem
- more accurate documentation, more documentation
- remove some EOL whitespace

ok deraadt@@
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp $-})dnl
d415 1
@


1.40
log
@I should back out the base files too
@
text
@d47 1
d52 1
d60 1
d64 8
a71 2
dnl    sca*)  M sca$U c 24 $U
dnl           M sca$U b 42 $(($U+128));;
d77 1
d79 4
a82 2
dnl Final step is to add an entry to the 'all' entry below. For a short
dnl example:
d84 15
a98 2
dnl   _mkdev({-all-}, {-all-}, {-dnl
dnl   _dl({-std-}, {-std-}, {-sca-}, {-sca0 sca1 sca2 sca3-})-})dnl
d103 1
a103 1
dnl        R std sca0 sca1 sca2 sca3
d106 1
a106 1
dnl presuming '_DEV(sca..' and '_DEV(std)' were in the MAKEDEV.md file.
d111 1
a111 1
dnl entry in MAKEDEV.sub (this file).
d127 3
a137 5
dnl 'all' is special.  The 'D'evice 'L'ist (or _dl) macro checks to see if
dnl a particular devices is in the MAKEDEV.md file, and if so, includes the
dnl necessary devices.  Otherwise the devices are not included in the 'all'
dnl target.  Note this keeps line lengths to less than column 70.  For the
dnl gory details see the definition of '_dl' in MAKEDEV.sub
d175 1
a175 1
target(all, rnd, random)dnl
d395 1
a395 1
	*) echo unknown cua device $i ;;  
d954 1
a954 1
	*) echo unknown cua device $i ;;  
d1313 1
a1313 1
divert(3)dnl  
@


1.39
log
@st0 goes on sparc ramdisk
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp $-})dnl
d138 1
d152 1
a152 1
twrget(all, rnd, random)dnl
d177 1
a307 1
target(all, uk, 1)dnl
a327 1
target(ramd, st, 0)dnl
a329 1
target(all, uk, 1)dnl
a376 2
target(all, bktr, 0)dnl
target(all, uk, 1)dnl
a392 3
target(ramd, wd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
target(ramd, mcd, 0)dnl
d397 2
d401 1
a403 1
target(all, uk, 1)dnl
a427 2
target(all, cuaB, 5, 6, 7, 8, 9)dnl
target(all, uk, 1)dnl
a442 3
target(all, tty0, 1, 2, 3)dnl
target(all, view, 00, 01, 02, 03, 04, 05)dnl
twrget(all, attyB, ttyB, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
a544 2
twrget(all, grf_mac, grf, 0, 1, 2, 3)dnl
target(all, uk, 1)dnl
a559 3
twrget(all, grf_mac, grf, 0, 1)dnl
twrget(ramd, mac_ttye, ttye, 0)dnl
target(ramd, cd, 0, 1)dnl
d565 1
a584 1
target(all, wd, 0, 1, 2, 3)dnl
d590 1
a592 1
twrget(ramd, rnd, random)dnl
a594 1
target(all, uk, 1)dnl
a1218 1
dnl		[ "$DEBUG" ] && echo "mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
@


1.38
log
@a couple more all/ramdisk tweaks
a random typo
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp $-})dnl
d327 1
@


1.37
log
@fix a few devices for ramdisks
re-order a few all and ramdisk targets to *try* to get lucky and
 escape ksh's core's
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp $-})dnl
d151 1
a151 1
target(all, rnd, random)dnl
a175 1
twrget(all, grf_mac, grf, 0, 1, 2, 3)dnl
d306 1
d329 1
d553 1
d570 1
d605 1
d608 1
@


1.36
log
@pretty
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.35 2002/02/19 21:03:18 todd Exp $-})dnl
a137 1
twrget(all, attyB, ttyB, 0, 1, 2, 3, 4)dnl
d376 2
d394 3
a400 2
target(ramd, wd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3)dnl
a402 1
target(ramd, mcd, 0)dnl
d405 1
d430 2
d447 3
d552 1
d568 2
a574 1
target(ramd, ttye, 0)dnl
d594 1
a599 1
target(ramd, ttyE, 0)dnl
d1228 1
@


1.35
log
@make wscons devices D-F possible, only used on sparc64 (D) atm.
make sparc64 build ttyD{cfg,0,1,..,b}
move wscons) to 'target()' macros to make the above possible
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp $-})dnl
d827 1
a827 1
__devitem(wsdisp, tty[C-F]*, wscons virtual consoles)dnl
@


1.34
log
@why were there two ramdisks?
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.33 2002/02/16 01:19:52 deraadt Exp $-})dnl
d330 1
d820 4
d825 10
a834 9
_dl(dnl
{-wscons-}, {-ttyCcfg-},
{-wsdisp-}, {-ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9-},
{-wsdisp-}, {-ttyCa ttyCb-},
{-wsmux-}, {-wsmux-},
{-wskbd-}, {-wskbd0 wskbd1 wskbd2 wskbd3-},
{-wsmouse-}, {-wsmouse0 wsmouse1 wsmouse2 wsmouse3-})-})dnl
__devitem(wsdisp, ttyC*, wscons virtual consoles)dnl
_mkdev({-wsdisp-}, ttyC*, {-U=${i##ttyC}
d836 2
a837 2
	[0-9a-f]) M ttyC$U c major_wsdisp_c {-$(( 16#$U ))-} 600;;
	cfg) M ttyCcfg c major_wsdisp_c 255 600;;
@


1.33
log
@copyright repair
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp $-})dnl
d95 1
a95 1
dnl disktgt(rd, {-Ramdisk-})
d100 1
a100 1
dnl	__devitem(rd, {-rd*-}, {-Ramdisk-})dnl
d191 1
a191 1
__devitem(ramdisk, ramdisk, devices to be put on install floppies)dnl
d727 1
a727 1
__devitem(rd, {-rd*-}, "ramdisk" pseudo-disks)dnl
@


1.32
log
@tweaks for vax; I must find a way of over-riding default target's, until then,
this feels alot like distrib/sets .. mi global and md for everybody that's
gotta be different ..
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp $-})dnl
d7 1
a7 1
{-#-} Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
@


1.31
log
@o start a TODO list
o properly generate scsi scanner devices
o shorten pty generation shell fragment
o many tweaks for vax (audio what? how did I ever think vax had audio?)
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.30 2002/02/14 14:32:26 todd Exp $-})dnl
a115 2
twrget(all, attyB, sd, 5, 6, 7, 8, 9)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
a117 1
target(all, pty, 0, 1, 2)dnl
a118 2
target(all, ch, 0)dnl
target(all, cd, 0, 1)dnl
a120 2
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
a121 1
target(all, rd, 0)dnl
a122 1
target(all, hk, 0, 1, 2, 3)dnl
a123 1
target(all, ht, 0)dnl
a124 2
target(all, rb, 0, 1, 2, 3)dnl
target(all, rl, 0, 1, 2, 3)dnl
a125 3
target(all, tm, 0)dnl
target(all, up, 0, 1, 2, 3)dnl
target(all, ut, 0)dnl
a126 1
target(all, xy, 0, 1, 2, 3)dnl
a127 2
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
a128 2
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, tun, 0, 1, 2, 3)dnl
a152 1
target(all, ses, 0)dnl
a153 1
target(all, ss, 0, 1)dnl
a156 1
target(all, xfs, 0)dnl
d282 15
d308 16
d330 15
d376 15
d403 15
d427 15
d456 14
d494 1
d519 15
d544 15
d569 15
d593 18
d612 15
d705 1
d712 3
a714 3
target( all, dmz, 0)dnl
target( all, dmf, 0)dnl
target( all, dh, 0)dnl
@


1.30
log
@fix just a tad
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp $-})dnl
d92 11
a138 1
target(all, ts, 0)dnl
d280 1
a280 1
__devitem(sd, {-sd*-}, SCSI disks{-,-} includes flopticals)dnl
d293 3
a295 1
_mkdev(ss, ss*, {-M ss$U c major_ss_c $U 440 operator
d472 1
d474 1
a474 2
{-unit=${i#dz};
       case $unit in
d478 1
a478 1
		       no=$(($unit * 8 + $i))
d482 2
a483 3
		       rm -f tty${no}
		       mknod tty${no} c 1 $no
		       i=$(($i + 1))
d491 1
a491 1
_mkdev(dhu, dhu*|dmz*|dmf*|dh*,
d495 1
a495 2
		unit=${i#vt}
		case $unit in
d500 1
a500 2
		unit=${i#dmz}
		case $unit in
d505 1
a505 2
		unit=${i#dmf}
		case $unit in
d511 1
a511 2
		unit=${i#dhu}
		case $unit in
d517 1
a517 2
		unit=${i#dh}
		case $unit in
d527 1
a527 2
			rm -f tty${ch}${let}
			mknod tty${ch}${let} c $major $(($unit * $count + $i))
d529 1
a529 1
			echo bad count for ${name}: $unit, $count, $i
d531 1
a531 1
		i=$(($i + 1))
a535 1
	unit=${i#dl}
d537 1
a537 1
	let=${cnvtbl[$unit]}
d539 1
a539 2
		rm -f ttyJ${let}
		mknod ttyJ${let} c $major $unit
d541 1
a541 1
		echo bad number for ${name}: $unit
d545 2
a546 1
target( all, mt, 0)dnl
d548 1
a548 1
target( all, st, 0)dnl
d554 2
d685 6
a690 19
_mkdev(pty, pty*, {-case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d695 1
@


1.29
log
@s/,\([^ ]\)/, \1/g .. mostly.  Function arguments now spaced like style(9)
@
text
@d3 1
a3 1
vers(a, {-$OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp $-})dnl
d454 87
d542 8
d1050 2
a1051 2
          mklist[{-$-}1]="mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
          modes="$modes {-$-}1"
@


1.28
log
@crank pty by one; ok millert@@,deraadt@@,miod@@
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp $-})dnl
d43 1
a43 1
dnl  Use '__devitem(uniqueid,name-pattern,description)' to create an entry
d46 1
a46 1
dnl    __devitem(sca,sca*,Sugar Generic device)dnl
d52 1
a52 1
dnl  Use '_mkdev(uniqueid,shell-pattern,{-shell-script-})dnl' to create
d56 2
a57 2
dnl    _mkdev(sca,sca*,{-M sca$U c major_sca_c $U
dnl           M rsca$U b major_sca_b Add($U,128)-})dnl
d64 1
a64 1
dnl In the MAKEDEV.md file, add a '_DEV(uniqueid,charmajor,blockmajor)'
d67 1
a67 1
dnl   _DEV(sca,24,42)
d72 2
a73 2
dnl   _mkdev({-all-},{-all-},{-dnl
dnl   _dl({-std-},{-std-},{-sca-},{-sca0 sca1 sca2 sca3-})-})dnl
d92 1
a92 1
_mkdev(loc,local,{-test -s $T.local && sh $T.local-})dnl
d94 2
a95 2
__devtitle(make,Device "make" file.  Valid arguments)dnl
__devitem({-all-},{-all-},
d105 94
a198 94
twrget(all,attyB,sd,5,6,7,8,9)dnl
target(all,sd,0,1,2,3,4)dnl
target(all,mcd,0)dnl
twrget(all,fdesc,fd)dnl
target(all,pty,0,1,2)dnl
target(all,st,0,1)dnl
target(all,ch,0)dnl
target(all,cd,0,1)dnl
target(all,mcd,0)dnl
target(all,std)dnl
target(all,vnd,0,1,2,3)dnl
target(all,ccd,0,1,2,3)dnl
target(all,raid,0,1,2,3)dnl
target(all,rd,0)dnl
target(all,rz,0,1,2,3,4)dnl
target(all,hk,0,1,2,3)dnl
target(all,hp,0,1,2,3)dnl
target(all,ht,0)dnl
target(all,ra,0,1,2,3)dnl
target(all,rb,0,1,2,3)dnl
target(all,rl,0,1,2,3)dnl
target(all,rx,0,1)dnl
target(all,tm,0)dnl
target(all,ts,0)dnl
target(all,up,0,1,2,3)dnl
target(all,ut,0)dnl
target(all,wd,0,1,2,3)dnl
target(all,xy,0,1,2,3)dnl
target(all,xd,0,1,2,3)dnl
twrget(all,flo,fd,0,0B,0C,0D,0E,0F,0G,0H)dnl
twrget(all,flo,fd,1,1B,1C,1D,1E,1F,1G,1H)dnl
twrget(all,aflo,fd,0,1,2,3)dnl
target(all,bpf,0,1,2,3,4,5,6,7,8,9)dnl
target(all,tun,0,1,2,3)dnl
target(all,pctr)dnl
target(all,pctr0)dnl
target(all,altq)dnl
target(all,pf)dnl
twrget(all,cry,crypto)dnl
target(all,apm)dnl
twrget(all,tth,ttyh,0,1)dnl
target(all,ttyA,0,1)dnl
target(all,ttyB,0,1,2,3,4,5)dnl
twrget(all,attyB,ttyB,0,1,2,3,4)dnl
target(all,tty0,0,1,2,3)dnl
twrget(all,mac_tty0,tty0,0,1)dnl
twrget(all,tzs,tty,a,b,c,d)dnl
twrget(all,czs,cua,a,b,c,d)dnl
target(all,ttyc,0,1,2,3,4,5,6,7)dnl
twrget(all,com,tty0,0,1,2,3)dnl
twrget(all,mac_ttye,ttye,0)dnl
target(all,ttye,0,1,2,3,4,5,6)dnl
target(all,lkm)dnl
twrget(all,mmcl,mmclock)dnl
target(all,lpt,0,1,2)dnl
twrget(all,lpt,lpa,0,1,2)dnl
target(all,joy,0,1)dnl
target(all,rnd,random)dnl
target(all,ses,0)dnl
target(all,uk,0)dnl
target(all,ss,0,1)dnl
target(all,st,0)dnl
target(all,wt,0)dnl
target(all,wdt,0)dnl
target(all,xfs,0)dnl
twrget(all,au,audio,0)dnl
twrget(all,speak,speaker)dnl
target(all,asc,0)dnl
target(all,music,0)dnl
target(all,radio,0)dnl
target(all,tuner,0)dnl
target(all,rmidi,0,1,2,3,4,5,6,7)dnl
target(all,usbs)dnl
target(all,adb)dnl
target(all,iop,0,1)dnl
target(all,pci)dnl
twrget(all,wsmouse,wscons)dnl
twrget(all,btw,bwtwo,0)dnl
twrget(all,ctw,cgtwo,0)dnl
twrget(all,ctr,cgthree,0)dnl
twrget(all,cfr,cgfour,0)dnl
twrget(all,csx,cgsix,0)dnl
twrget(all,ceg,cgeight,0)dnl
twrget(all,cfo,cgfourteen,0)dnl
target(all,tcx,0)dnl
twrget(all,grf_mac,grf,0,1,2,3)dnl
twrget(all,grf_amiga,grf,0,1,2,3,4,5,6)dnl
target(all,par,0)dnl
twrget(all,amouse,mouse,0,1)dnl
twrget(all,akbd,kbd)dnl
target(all,apci,0)dnl
target(all,ppi,0)dnl
target(all,view0,0,1,2,3,4,5)dnl
target(all,local)dnl
d200 1
a200 1
_mkdev(all,{-all-},{-dnl
d204 2
a205 2
__devitem(ramdisk,ramdisk,devices to be put on install floppies)dnl
__devitem(std,{-std-},standard devices)dnl
d217 1
a217 1
define({-_std-},{-dnl
d232 7
a238 7
target(usb,usb,0,1)dnl
target(usb,urio,0)dnl
twrget(usb,uscan,uscanner,0)dnl
target(usb,uhid,0,1,2,3)dnl
target(usb,ulpt,0,1)dnl
target(usb,ugen,0,1)dnl
target(usb,utty,0,1)dnl
d240 2
a241 2
__devitem({-usbs-},usbs,make USB devices)dnl
_mkdev(usbs,usbs,{-dnl
d244 3
a246 3
__devtitle(tap,Tapes)dnl
__devitem(wt,{-wt*	-},QIC-interface (e.g. not SCSI) 3M cartridge tape)dnl
_mkdev(wt,wt*,
d248 1
a248 1
	n=Mult($U,8) m=Add($n,4)
d253 3
a255 3
__devitem(tz,tz*,{-SCSI tapes{-,-} DEC TK50 cartridge tape-})dnl
__devitem(st,{-st*-},SCSI tapes)dnl
_mkdev(st,st*,{-n=Mult($U,16)
d260 1
a260 1
		n=Add($n,1)
d262 22
a283 22
__devitem(ct,ct*,HP300 HP-IB cartridge tape)dnl
__devitem(mt,mt*,(Magnetic) 9-track reel tape)dnl
__devitem(ht,ht*,massbus tm03 & tu??)dnl
__devitem(tm,tm*,unibus tm11 & te10 emulations (e.g. Emulex tc-11))dnl
__devitem(ts,ts*,unibus ts11)dnl
__devitem(ut,ut*,unibus tu45 emulations (e.g.si 9700))dnl
__devtitle(dis,Disks)dnl
__devitem(rz,rz*,SCSI disks)dnl
__devitem(sd,{-sd*-},SCSI disks{-,-} includes flopticals)dnl
__devitem(hd,{-hd*-},HP300 HP-IB disks)dnl
__devitem(cd,{-cd*-},SCSI cdrom drives)dnl
__devitem(acd,acd*,ATAPI cdrom drives)dnl
_mkdev(cd,cd*,{-dodisk2 cd $U major_cd_b major_cd_c $U 0{--}ifstep(cd)-})dnl
__devitem(mcd,mcd*,Mitsumi cdrom drives)dnl
_mkdev(mcd,mcd*,{-dodisk2 mcd $U major_mcd_b major_mcd_c $U 0{--}ifstep(mcd)dnl
-})dnl
__devitem(ch,{-ch*-},SCSI media changer)dnl
_mcdev(ch,ch*,ch,{-major_ch_c-},660,operator)dnl
__devitem(uk,uk*,SCSI Unknown device)dnl
_mcdev(uk,uk*,uk,{-major_uk_c-},640,operator)dnl
__devitem(ss,ss*,SCSI scanners)dnl
_mkdev(ss,ss*,{-M ss$U c major_ss_c $U 440 operator
d286 4
a289 4
__devitem(ses,ses*,SES/SAF-TE SCSI devices)dnl
_mkdev(ses,ses*,{-M ses$U c major_ses_c $U 640 operator-})dnl
__devitem(ramd,ramdisk,makes all devices for a ramdisk kernel)dnl arc
_mkdev(ramd,ramdisk,{-dnl
d292 30
a321 30
ifelse(MACHINE,mvmeppc,{-dnl
target(ramd,tty0,0,1,2,3)dnl
twrget(ramd,wsdisp,ttyC,0)dnl
target(ramd,rd,0)dnl
target(ramd,wd,0,1,2,3)dnl
target(ramd,sd,0,1,2,3,4)dnl
target(ramd,cd,0,1)dnl
target(ramd,st,0,1)dnl
target(ramd,bpf,0)dnl
target(ramd,rd,0)dnl
-})dnl
ifelse(MACHINE,sparc,{-dnl
target(ramd,fd,0)dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,rd,0)dnl
target(ramd,cd,0)dnl
-})dnl
ifelse(MACHINE,sparc64,{-dnl
target(ramd,fd,0)dnl
target(ramd,rd,0)dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,wd,0,1,2,3)dnl
target(ramd,cd,0,1)dnl
target(ramd,st,0,1)dnl
target(ramd,bpf,0)dnl
twrget(all,s64_tzs,tty,a,b,c,d)dnl
twrget(all,s64_czs,cua,a,b,c,d)dnl
__devitem(s64_tzs,tty[a-z]*,Zilog 8530 Serial Port)dnl
__devitem(s64_czs,cua[a-z]*,Zilog 8530 Serial Port)dnl
_mkdev(s64_tzs,{-tty[a-z]-},{-u=${i#tty*}
d330 1
a330 1
_mkdev(s64_czs,cua[a-z],{-u=${i#cua*}
d338 1
a338 1
	M cua$u c major_s64_czs_c Add($n,128) 660 dialer uucp-})dnl
d340 34
a373 34
ifelse(MACHINE,i386,{-dnl
target(ramd,tty0,0,1,2,3)dnl
twrget(ramd,wsdisp,ttyC,0)dnl
target(ramd,wt,0)dnl
target(ramd,fd,0)dnl
target(ramd,rd,0)dnl
target(ramd,wd,0,1,2,3)dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,cd,0,1)dnl
target(ramd,st,0,1)dnl
target(ramd,mcd,0)dnl
-})dnl
ifelse(MACHINE,alpha,{-dnl
target(ramd,sd,0,1,2)dnl
target(ramd,wd,0)dnl
target(ramd,tty0,0,1)dnl
target(ramd,st,0)dnl
target(ramd,cd,0)dnl
target(ramd,ttyB,0,1)dnl
target(ramd,ttyE,0,1)dnl
-})dnl
ifelse(MACHINE,amiga,{-dnl
target(ramd,kbd)dnl
target(ramd,pty,0)dnl
target(ramd,tty0,0)dnl
target(ramd,ttyA,0,1)dnl
target(ramd,ttyB,0,1)dnl
target(ramd,ttye,0,1,2,3,4,5,6)dnl
target(ramd,cd,0,1)dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,st,0,1)dnl
target(ramd,fd,0,1)dnl
target(ramd,wd,0,1)dnl
target(ramd,rd,0)dnl
d375 2
a376 2
ifelse(MACHINE,hp300,{-dnl
_mkdev(st_hp300,ct*|mt*|st*,
d384 2
a385 2
		four=Add($U,4) eight=Add($U,8)
		twelve=Add($U,12) twenty=Add($U,20)
d398 72
a469 72
__devitem(st_hp300,st*,Exabyte tape)dnl
__devitem(grf,grf*,raw interface to HP300 graphics devices)dnl
target( all,	grf,	0)dnl
dnl XXX target( all,	hil,	0,1,2,3,4,5,6,7)dnl
target( all,	hil,	)dnl
twrget( all,	st_hp300,st,0,1)dnl
target( all,	dca,	0,1)dnl
target( all,	dcm,	0,1,2,3)dnl
target( all,	hd,	0,1,2)dnl
target( all,	ct,	0,1)dnl
target( all,	ite,	0)dnl
target(ramd,	ct,	0,1)dnl
target(ramd,	hd,	0,1,2)dnl
target(ramd,	sd,	0,1,2)dnl
target(ramd,	rd,	0,1)dnl
target(ramd,	pty,	0)dnl
target(ramd,	hil,	)dnl
target(ramd,	grf,	0)dnl
target(ramd,	apci,	0)dnl
target(ramd,	ite,	0)dnl
target(ramd,	dca,	0)dnl
target(ramd,	dcm,	0,1)dnl
target(ramd,	bpf,	0,1)dnl
target(ramd,	tun,	0,1)dnl
-})dnl
ifelse(MACHINE,hppa,{-dnl
target(ramd,st,0,1)dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,rd,0,1)dnl
target(ramd,pty,0)dnl
target(ramd,hil)dnl
target(ramd,com,0,1)dnl
target(ramd,bpf,0,1)dnl
target(ramd,tun,0,1)dnl
-})dnl
ifelse(MACHINE,mac68k,{-dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,st,0,1)dnl
target(ramd,adb)dnl
target(ramd,asc,0)dnl
target(ramd,grf,0,1)dnl
target(ramd,ttye,0)dnl
twrget(ramd,mac_tty0,tty0,0,1)dnl
target(ramd,pty,0)dnl
-})dnl
ifelse(MACHINE,macppc,{-dnl
target(ramd,sd,0,1,2,3,4)dnl
target(ramd,wd,0,1,2,3,4)dnl
target(ramd,st,0,1)dnl
target(ramd,cd,0,1)dnl)dnl
target(ramd,rd,0)dnl
target(ramd,ttyE,0)dnl
target(ramd,tty0,0,1)dnl
target(ramd,pty,0)dnl
-})dnl
ifelse(MACHINE,vax,{-
target( all,	hd,	0,1,2)dnl
target(ramd,fd,0)dnl
target(ramd,sd,0,1,2,3)dnl
target(ramd,rd,0)dnl
target(ramd,cd,0)dnl
target(ramd,bpf,0)dnl
-})dnl
target(ramd,std)dnl
target(ramd,random)dnl
target(ramd,bpf,0)dnl
__devitem(rd,{-rd*-},"ramdisk" pseudo-disks)dnl
_mkdev(rd,rd*,{-dodisk2 rd $U major_rd_b major_rd_c $U 0{--}ifstep(rd)-})dnl
__devitem(xd,xd*,Xylogic 753/7053 disks)dnl
__devitem(xy,xy*,{-	Xylogic 450/451 disks-})dnl
__devitem(flo,{-fd*-},{-Floppy disk drives (3 1/2"{-,-} 5 1/4")-})dnl
_mkdev(flo,fd*,
d488 1
a488 1
	n=Add(Mult($U,128),Mult($typnum,16))
d490 2
a491 2
	M ${nam}b	b $blk Add($n,1) 640 operator
	M ${nam}c	b $blk Add($n,2) 640 operator
d493 8
a500 8
	M r${nam}b	c $chr Add($n,1) 640 operator
	M r${nam}c	c $chr Add($n,2) 640 operator-},664)dnl
__devitem(aflo,ramdisk,devices needed for install floppies)dnl
_mkdev(aflo,fd*,{-case $U in 0|1|2|3)
	M fd${U}a b major_aflo_b Mult($U,16) 640 operator
	M fd${U}b b major_aflo_b Add(Mult($U,16),1) 640 operator
	M rfd${U}a c major_aflo_c Mult($U,16) 640 operator
	M rfd${U}b c major_aflo_c Add(Mult($U,16),1) 640 operator;;
d503 10
a512 10
__devitem(iop,iop*,I2O controller device)dnl
_mcdev(iop,iop*,iop,{-major_iop_c-},660)dnl
__devitem(wdt,wdt0,watchdog timer)dnl
_mcdev(wdt,wdt0,wdt,{-major_wdt_c-},440,operator)dnl
__devitem(local,local,configuration specific devices)dnl
__devitem(wd,{-wd*-},{-"winchester" disk drives (ST506,IDE,ESDI,RLL,...)-})dnl
__devitem(ccd,ccd*,concatenated disk devices)dnl
__devitem(raid,raid*,RAIDframe disk devices)dnl
__devitem(vnd,vnd*,"file" pseudo-disks)dnl
_mkdev(vnd,vnd*,{-dodisk vnd $U major_vnd_b major_vnd_c $U 0{--}ifstep(vnd)
d514 8
a521 8
__devitem(ra,ra*,{-MSCP disks (ra??, hd??)-})dnl
__devitem(hp,hp*,{-massbuss rm??-})dnl
__devitem(hk,hk*,{-unibus rk06 and rk07-})dnl
__devitem(up,up*,{-other unibus devices (e.g. on Emulex sc-21v controller)-})dnl
__devitem(rb,rb*,{-730 idc w/ rb80 and/or rb02-})dnl
__devitem(rx,rx*,{-MSCP floppy disk (rx33/50/...)-})dnl
__devitem(rl,rl*,{-unibus r102-})dnl
__devitem(hd,hd*,{-HDC9224 hd disks on VS2000-})dnl
d542 3
a544 3
__devitem(loc,local,configuration specific devices)dnl
_mkdev(loc,local,{-test -s $T.local && sh $T.local-})dnl
_mkdev({-disks-},{-undefine({-C_ase-})show_disks()undefine({-C_ase-})-},
d550 7
a556 7
__devtitle(cons,Console ports)dnl
__devitem(ttyv0,ttyv0,pccons or pcvt screen 0)dnl
__devitem(ttyv,ttyv*,pcvt)dnl
__devitem(ttye,ttye*,ite bitmapped consoles)dnl
__devitem(mac_ttye,ttye*,ite bitmapped consoles)dnl
__devitem(wscons,ttyC0,wscons screen 0)dnl
_mkdev({-wscons-},{-wscons-},{-dnl
d558 8
a565 8
{-wscons-},{-ttyCcfg-},
{-wsdisp-},{-ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9-},
{-wsdisp-},{-ttyCa ttyCb-},
{-wsmux-},{-wsmux-},
{-wskbd-},{-wskbd0 wskbd1 wskbd2 wskbd3-},
{-wsmouse-},{-wsmouse0 wsmouse1 wsmouse2 wsmouse3-})-})dnl
__devitem(wsdisp,ttyC*,wscons virtual consoles)dnl
_mkdev({-wsdisp-},ttyC*,{-U=${i##ttyC}
d571 4
a574 4
__devitem(wskbd,wskbd*,wscons keyboards)dnl
_mkdev(wskbd,wskbd*,{-M wskbd$U c major_wskbd_c $U 600-})dnl
__devitem(wsmux,wsmux,wscons keyboard/mouse mux devices)dnl
_mkdev(wsmux,wsmux|wsmouse|wskbd,{-M wsmouse c major_wsmux_c 0 600
d576 9
a584 9
__devitem(pcons,console,PROM console)dnl
__devtitle(point,Pointing devices)dnl
__devitem(wsmouse,wsmouse*,wscons mice)dnl
_mkdev(wsmouse,wsmouse*,{-M wsmouse$U c major_wsmouse_c $U 600-})dnl
__devitem(quad,quadmouse,"quadrature mouse")dnl
__devtitle(pty,Pseudo terminals)dnl
__devitem(tty,tty*,set of 16 slave psuedo terminals)dnl
__devitem(pty,pty*,set of 16 master pseudo terminals)dnl
_mkdev(pty,pty*,{-case $U in
d607 3
a609 3
		M tty$nam c major_tty_c Add($off,$n)
		M pty$nam c major_pty_c Add($off,$n)
		n=Add($n,1)
d611 5
a615 5
__devitem(dc,dc*,{-4 channel serial interface (keyboard{-,-} mouse{-,-}modem{-,-} printer)-})dnl
__devtitle(prn,Printers)dnl
__devitem(par,par*,motherboard parallel port)dnl
__devitem(lpt,lpt*,IEEE 1284 centronics printer)dnl
_mkdev(lpt,lpt*|lpa*,
d620 6
a625 6
	M $n$U c major_lpt_c Add($U,$f) 600-})dnl
__devitem(lpa,lpa*,interruptless lp)dnl
__devitem(ppi,ppi*,HP-IB plotters)dnl
__devtitle({-usb-},USB devices)dnl
__devitem({-usb-},usb*,Bus control devices used by usbd for attach/detach)dnl
_mkdev({-usb-},usb*,{-[ "$i" = "usb" ] && u= || u=$U
d627 12
a638 12
__devitem(uhid,uhid*,Generic HID devices)dnl
_mcdev({-uhid-},uhid*,{-uhid-},{-major_uhid_c-},660)dnl
__devitem(ulpt,ulpt*,Printer devices)dnl
_mcdev({-ulpt-},ulpt*,{-ulpt-},{-major_ulpt_c-},660)dnl
__devitem(utty,utty*,Serial ports)dnl
_mcdev({-utty-},utty*,{-utty-},{-major_utty_c-},660)dnl
__devitem(urio,urio*,Diamond Multimedia Rio 500)dnl
_mcdev({-urio-},urio*,{-urio-},{-major_urio_c-},660)dnl
__devitem(uscan,uscanner*,Scanners)dnl
_mcdev({-uscan-},uscanner*,{-uscanner-},{-major_uscan_c-},660)dnl
__devitem(ugen,ugen*,Generic device)dnl
_mkdev(ugen,ugen*,{-n=Mult($U,16)
d641 1
a641 1
		M ugen$U.$j c major_ugen_c Add($n,$j) 660
d643 14
a656 14
__devtitle(cpu,Cpus)dnl
__devitem(cpu,cpu*,cpus)dnl
__devtitle(call,Call units)dnl
__devtitle(term,Terminal ports)dnl
__devtitle(termp,Terminal multiplexers)dnl
__devitem(dca,dca*,HP200/300 single port serial interface)dnl
__devitem(dcm,dcm*,HP200/300 4 port serial mux interface)dnl
__devitem(apci,apci*,HP400 4 port serial mux interface)dnl
__devitem({-com-},{-tty0*-},NS16x50 serial ports)dnl
_mkdev(com,{-tty0*-},{-M tty$U c major_com_c $U 660 dialer uucp
	M cua$U c major_com_c Add($U,128) 660 dialer uucp-})dnl
__devitem(ttyc,ttyc*,Cyclades serial ports)dnl
__devitem(tzs,tty[a-z]*,Zilog 8530 Serial Port)dnl
_mkdev(tzs,{-tty[a-z]-},{-u=${i#tty*}
d665 4
a668 4
__devitem(tth,ttyh*,Sab82532 serial devices)dnl
_mkdev(tth,ttyh*,{-M ttyh$U c major_tth_c $U 660 dialer uucp-})dnl
__devitem(czs,cua[a-z]*,Zilog 8530 Serial Port)dnl
_mkdev(czs,cua[a-z],{-u=${i#cua*}
d676 19
a694 19
	M cua$u c major_czs_c Add($n,128) 660 dialer uucp-})dnl
__devitem(arm_tty,tty*,{-alias for PC COM ports{-,-} this is what the system really wants-})dnl
__devitem(tty0,tty00,standard serial port)dnl
__devitem(mac_tty0,tty00,standard serial port)dnl
__devitem(ttyA,ttyA*,mfc serial ports)dnl
__devitem(attyB,ttyB*,ISA COM ports)dnl  amiga
__devitem(ttyz,tty[a-d],onboard zs serial ports)dnl
__devitem(cuaz,cua[a-d],onboard zs serial ports)dnl
__devitem(ttyB,ttyB?,DEC 3000 ZS8530 ("scc") serial ports)dnl
__devitem(scc,scc*,82530 serial interface)dnl
__devitem(arc_ttyC,ttyC0,pccons)dnl
__devitem(i386_ttyC,ttyC*,pcvt)dnl
__devitem(ttyC,ttyC?,{-AlphaStation NS16550 ("com serial ports")-})dnl
__devitem(ttyE,ttyE?,Workstation console (framebuffer & keyboard) tty emulators)dnl
__devitem(ser02,ser02,{-serial2 port (channel A on 8530)-})dnl
__devitem(mdm02,mdm02,{-modem2 port (channel B on 8530)-})dnl
__devtitle(spec,Special purpose devices)dnl
__devitem(apm,apm	,power management device)dnl
_mkdev(apm,apm*,{-M apm	c major_apm_c 0 644
d696 8
a703 8
__devitem(pcmcia,pcmcia*,PCMCIA card drivers)dnl
__devitem(pctr,pctr*,PC Performance Tuning Register access device)dnl
_mkdev(pctr,pctr,{-M pctr c major_pctr_c 0 644-})dnl
__devitem(au,audio*,audio device)dnl
_mkdev(au,audio*,{-M sound$U	c major_au_c $U
	M mixer$U	c major_au_c Add($U,16)
	M audio$U	c major_au_c Add($U,128)
	M audioctl$U	c major_au_c Add($U,192)
d708 5
a712 5
__devitem(asc,asc*,ASC Audio device)dnl
_mkdev(asc,asc*,{-M asc$U major_asc_c 0-})dnl
__devitem(music,music*,midi devices)dnl
_mkdev(music,music*,{-M music$U     c major_music_c $U
	M sequencer$U c major_music_c Add($U,128)
d715 2
a716 2
__devitem(radio,radio*,FM tuner device)dnl
_mkdev(radio,radio*,{-M radio$U     c major_radio_c $U
d718 3
a720 3
__devitem(fdesc,fd,makes fd/* for the fdescfs)dnl
_mkdev(fdesc,fd,{-RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c major_fdesc_c $n;n=Add($n,1);done
d722 2
a723 2
__devtitle(graph,Graphics devices)dnl
__devitem(grf_mac,grf*,{-custom chip (grf0){-,-} Retina Z2/Z3 (grf1/grf2){-,-}
d726 30
a755 30
__devitem(grf_amiga,grf*,{-Motherboard bitmapped video.-})dnl
__devitem(ite,ite*,terminal emulator interface to HP300 graphics devices)dnl
__devitem({-hil-},{-hil-},HP300 HIL input devices)dnl
__devitem(oppr,openprom)dnl
_cdev(oppr,openprom,70,0)dnl
__devitem(btw,bwtwo*)dnl
_mcdev(btw,bwtwo*,bwtwo,{-major_btw_c-},666)dnl
__devitem(ctw,cgtwo*)dnl
_mcdev(ctw,cgtwo*,cgtwo,{-major_ctw_c-},666)dnl
__devitem(ctr,cgthree*)dnl
_mcdev(ctr,cgthree*,cgthree,{-major_ctr_c-},666)dnl
__devitem(cfr,cgfour*)dnl
_mcdev(cfr,cgfour*,cgfour,{-major_cfr_c-},666)dnl
__devitem(csx,cgsix*)dnl
_mcdev(csx,cgsix*,cgsix,{-major_csx_c-},666)dnl
__devitem(ceg,cgeight*)dnl
_mcdev(ceg,cgeight*,cgeight,{-major_ceg_c-},666)dnl
__devitem(cfo,cgfourteen*)dnl
_mcdev(cfo,cgfourteen*,cgfourteen,{-major_cfo_c-})dnl
__devitem(tcx,tcx*)dnl
_mcdev(tcx,tcx*,tcx,{-major_tcx_c-})dnl
__devitem(cry,crypto,hardware crypto access driver)dnl
_mkdev(cry,crypto,{-M crypto c major_cry_c-} 0)dnl
__devitem(pf,pf*,Packet Filter)dnl
_mkdev(pf,{-pf*-},{-M pf c major_pf_c 0 600-})dnl
__devitem(bpf,bpf*,Berkeley Packet Filter)dnl
_mkdev(bpf,{-bpf*-},{-M bpf$U c major_bpf_c $U 600-},600)dnl
_mkdev(tun,{-tun*-},{-M tun$U c major_tun_c $U 600-},600)dnl
__devitem(altq,altq/,ALTQ control interface)dnl
_mkdev(altq,altq,{-RMlist="mkdir -p altq;$RMlist"
d758 1
a758 1
		U=Add($U,1)
d760 22
a781 22
__devitem(speak,speaker,pc speaker)dnl
_mkdev(speak,speaker,{-M speaker c major_speak_c 0 600-})dnl
__devitem(kbd,kbd,keyboard (provides events, for X11))dnl
_cdev(kbd,kbd,{-major_kbd_c-},0,600)dnl
__devitem(kbd_atari,kbd,Atari keyboard)dnl
__devitem(akbd,kbd,Amiga keyboard)dnl
__devitem(rkbd,kbd,raw keyboard)dnl
__devitem(kbdctl,kbdctl,keyboard control)dnl
__devitem(beep,beep,riscpc speaker)dnl
__devitem(iic,iic*,IIC bus device)dnl
__devitem(rtc,rtc*,RTC device)dnl
__devitem(view,view*,generic interface to graphic displays)dnl
__devitem(aconf,aconf,{-autoconfig information (not yet)-})dnl
__devitem(mouse-,mouse-*,"mouse link")dnl
__devitem(mouse,mouse,mouse (provides events, for X11))dnl
__devitem(amouse,mouse*,Amiga mice)dnl
__devitem(lkm,lkm,loadable kernel modules interface)dnl
_cdev(lkm,lkm,{-major_lkm_c-},0,640,kmem)dnl
__devitem(mmcl,mmclock,memory mapped clock)dnl
__devitem(tun,tun*,network tunnel driver)dnl
__devitem(rnd,*random,inkernel random data source)dnl
_mkdev(rnd,*random,{-n=0
d785 9
a793 9
		n=Add($n,1)
	done-},644)dnl
__devitem(joy,joy*,joystick driver)dnl
_mcdev(joy,joy*,joy,{-major_joy_c-},666)dnl
__devitem(mag,magma*,magma card (makes 16 tty and 2 bpp))dnl
__devitem(bppmag,bppmag[mno],magma parallel port device)dnl
__devitem(spif,spif*,spif card (makes 8 tty and 1 bpp))dnl
__devitem(bppsp,bpp[jkl],spif parallel port device)dnl
_mkdev(mag,magma*,{-case $U in
d799 1
a799 1
	offset=Mult($U,64)
d804 2
a805 2
		M tty$name c major_mag_c Add($offset,$n) 660 dialer uucp
		n=Add($n,1)
d807 3
a809 3
	M bpp${nam}0 c major_bppmag_c Add($offset,0) 600
	M bpp${nam}1 c major_bppmag_c Add($offset,1) 600-})dnl
_mkdev(spif,spif*,{-case $U in
d815 1
a815 1
	offset=Mult($U,64)
d820 2
a821 2
		M tty$name c major_spif_c Add($offset,$n) 660 dialer uucp
		n=Add($n,1)
d823 19
a841 19
	M bpp${nam}0 c major_bppsp_c Add($offset,0) 600-})dnl
__devitem(bpp,bpp*,parallel port devices)dnl
__devitem(xfs,xfs*,XFS filesystem devices)dnl
_mcdev(xfs,xfs*,xfs,{-major_xfs_c-},600)dnl
__devitem(hil,hil,HIL input devices)dnl
__devitem(rmidi,rmidi*,raw midi devices)dnl
_mcdev(rmidi,rmidi*,rmidi,{-major_rmidi_c-},666)dnl
__devtitle(plat,Platform-specific devices)dnl
__devitem(fb,fb*,framebuffer device)dnl
__devitem(bktr,bktr*,video capturing)dnl
_mcdev(bktr,bktr*,bktr,{-major_bktr_c-},644)dnl
__devitem(tuner,tuner*,tuner device)dnl
_mkdev(tuner,tuner*,{-M tuner$U c major_bktr_c Add(Mult($U,2),16) 644-},644)dnl
__devitem(pci,pci,PCI bus device)dnl
_mkdev(pci,pci,{-M pci c major_pci_c 0 664-},664)dnl
__devitem(adb,adb,Apple Desktop bus event interface)dnl
_mkdev(adb,adb,{-M adb c major_adb_c 0-})dnl
__devitem(pdc,pdc,PDC device)dnl
_mkdev(local,local,{-test -s $T.local && sh $T.local-},666)dnl
d905 1
a905 1
dnl dodisk(name,unit,blkmaj,chrmaj,unit,off[,stepping])
d912 1
a912 1
	n=Add(Mult(${5},${7:-16}),${6}) count=0
d917 2
a918 2
		M {-$-}1{-$-}2$d	b {-$-}3 Add($n,$count) 640
		M r{-$-}1{-$-}2$d	c {-$-}4 Add($n,$count) 640
d924 1
a924 1
dnl dodisk2(name,unit,blkmaj,chrmaj,unit,off[,stepping])
d937 1
a937 1
	n=Add(Mult({-$-}5,${7:-16}),{-$-}6)
d940 1
a940 1
	n=Add($n,2)
d953 1
a953 1
ifelse(1,0,
@


1.27
log
@hp300 joins the party; ok millert@@
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp $-})dnl
d109 1
a109 1
target(all,pty,0,1)dnl
@


1.26
log
@some indentation output nits
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.25 2002/02/09 19:34:40 drahn Exp $-})dnl
a117 1
target(all,hd,0,1,2,3,4)dnl
d195 1
a261 23
_mkdev(st_hp300,ct*|mt*|st*,
{-case $i in
	ct*) name=ct blk=major_ct_b chr=major_ct_c;;
	mt*) name=mt blk=major_mt_b chr=major_mt_c;;
	st*) name=st blk=major_st_hp300_b chr=major_st_hp300_c;;
	esac
	case $U in
	[0-7])
		four=Add($U,4) eight=Add($U,8)
		twelve=Add($U,12) twenty=Add($U,20)
		M r$name$U	c $chr $U 660 operator
		M r$name$four	c $chr $four 660 operator
		M r$name$eight	c $chr $eight 660 operator
		M r$name$twelve	c $chr $twelve 660 operator
		MKlist="$MKlist;ln r$name$four nr$name$U";: sanity w/pdp11 v7
		MKlist="$MKlist;ln r$name$twelve nr$name$eight";: ditto
		RMlist="$RMlist nr$name$U nr$name$eight"
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac-})dnl
__devitem(st_hp300,st*,Exabyte tape)dnl
d376 46
a421 13
target(ramd,ct,0,1)dnl
target(ramd,hd,0,1,2,3,4)dnl
target(ramd,sd,0,1,2,3,4)dnl
target(ramd,rd,0,1)dnl
target(ramd,pty,0)dnl
target(ramd,hil)dnl
target(ramd,grf,0)dnl
target(ramd,apci,0)dnl
target(ramd,ite,0)dnl
target(ramd,dca,0)dnl
target(ramd,dcm,0,1)dnl
target(ramd,bpf,0,1)dnl
target(ramd,tun,0,1)dnl
d454 1
a726 1
__devitem(grf_hp300,grf*,raw interface to HP300 graphics devices)dnl
d911 1
@


1.25
log
@add wd* to ramdisk target for macppc, reported my matthieu
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp $-})dnl
d462 9
a470 9
	*A)		typnam=0; typnum=0;;
	*B)		typnum=1;;
	*C)		typnum=2;;
	*D)		typnum=3;;
	*E)		typnum=4;;
	*F)		typnum=5;;
	*G)		typnum=6;;
	*H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
a577 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d857 7
a863 7
		[0-9]) echo -n {-$-}1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d866 1
d878 1
d898 1
d923 1
d937 1
d950 6
a955 6
 [ "${mklist[{-$-}1]}" ] && {
  mklist[{-$-}1]="${mklist[{-$-}1]};mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
 } || {
  mklist[{-$-}1]="mknod -m {-$-}1 {-$-}2 {-$-}3 {-$-}4 {-$-}5"
  modes="$modes {-$-}1"
 })
d957 1
d1005 2
a1006 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
d1024 1
@


1.24
log
@use "ramdisk" for the ramdisk target, always
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp $-})dnl
d433 1
a433 1
ifelse(MACHINE,macppc,{-
d435 1
@


1.23
log
@prepare for invasion, sparc64 gets major number fix wrt tty[a-d]
order a few places
provide '[ "$DEBUG" ] && set -x' inside R() for debugging help ..
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp $-})dnl
d204 1
a204 1
__devitem(floppy,floppy,devices to be put on install floppies)dnl
d483 1
a483 1
__devitem(aflo,floppy,devices needed for install floppies)dnl
@


1.22
log
@tweak all) target numbers
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.21 2002/01/23 07:45:44 todd Exp $-})dnl
a116 1
target(all,wd,0,1,2,3)dnl
d118 2
a119 2
target(all,xy,0,1,2,3)dnl
target(all,xd,0,1,2,3)dnl
d121 1
a121 1
target(all,rd,0)dnl
d123 1
a123 2
target(all,hk,0,1,2,3)dnl
target(all,up,0,1,2,3)dnl
d126 1
d128 7
a134 2
target(all,rl,0,1,2,3)dnl
target(all,hd,0,1,2,3,4)dnl
d191 2
a192 2
twrget(all,mac_grf,grf,0,1,2,3)dnl
target(all,grf,0,1,2,3,4,5,6)dnl
d234 1
a234 1
target(usb,uscanner,0)dnl
d287 4
d340 22
d705 1
a705 1
_mkdev(radio,radio*,{-M radio$U     c major_radio_c $U 644
d712 1
a712 1
__devitem(mac_grf,grf*,{-custom chip (grf0){-,-} Retina Z2/Z3 (grf1/grf2){-,-}
d825 1
a825 1
_mkdev(tuner,tuner*,{-M tuner$U c major_tuner_c Add(Mult($U,2),16) 644-},644)dnl
d1019 1
@


1.21
log
@use target for ramdisk on all archs
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp $-})dnl
d109 2
a110 2
target(all,pty,0)dnl
target(all,st,0)dnl
d112 1
a112 1
target(all,cd,0)dnl
d162 1
a162 1
target(all,ss,0)dnl
@


1.20
log
@shuffle some things, arch independent targets go outside arch specific areas,
build scsi tape devices ;-)
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.19 2002/01/23 06:31:18 todd Exp $-})dnl
a307 1
target(ramd,std)dnl
d313 17
d331 1
a333 1
target(ramd,std)dnl
d341 1
d345 75
a421 1
target(ramd,cd,0,1)dnl
@


1.19
log
@s/tth/ttyh/ for sparc64
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp $-})dnl
d163 1
d304 3
a310 1
target(ramd,random)dnl
a312 1
target(ramd,bpf,0)dnl
a314 4
target(ramd,cd,0,1)dnl
_mkdev(ramd,ramdisk,{-dnl
show_target(ramd)dnl
-})dnl
a319 1
target(ramd,random)dnl
a323 1
target(ramd,bpf,0)dnl
a325 1
target(ramd,cd,0,1)dnl
d328 3
@


1.18
log
@o use target(name,dev,str1,str2,..) and twrget(name,dev,devstr,str1,str2,...)
  introduced in the last commit
o order (alphabetically) the disk_q's
o pull in spif/mag/bpp scripts from sparc
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.17 2002/01/12 21:14:57 jason Exp $-})dnl
d142 1
a142 1
target(all,tth,0,1)dnl
@


1.17
log
@Add _DEV entry for spif and correct spif to only create 1 bpp and 8 tty
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.16 2002/01/08 06:00:15 todd Exp $-})dnl
d105 90
d196 3
a198 80
_dl({-std-},{-std-},
{-fdesc-},{-fd-},
{-sd-},{-sd0 sd1 sd2 sd3 sd4-},
{-attyB-},{-sd5 sd6 sd7 sd8 sd9-},
{-pty-},{-pty0 pty1-},
{-st-},{-st0 st1-},
{-ch-},{-ch0-},
{-cd-},{-cd0 cd1-},
{-mcd-},{-mcd0-},
{-vnd-},{-vnd0 vnd1 vnd2 vnd3-},
{-ccd-},{-ccd0 ccd1 ccd2 ccd3-},
{-wd-},{-wd0 wd1 wd2 wd3-},
{-raid-},{-raid0 raid1 raid2 raid3-},
{-xy-},{-xy0 xy1 xy2 xy3-},
{-xd-},{-xd0 xd1 xd2 xd3-},
{-hd-},{-hd0 hd1 hd2 hd3 hd4-},
{-rz-},{-rz0 rz1 rz2 rz3 rz4-},
{-rd-},{-rd0-},
{-flo-},{-fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H-},
{-flo-},{-fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H-},
{-aflo-},{-fd0 fd1 fd2 fd3-},
{-bpf-},{-bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9-},
{-tun-},{-tun0 tun1 tun2 tun3-},
{-pctr-},{-pctr-},
{-bktr-},{-bktr0-},
{-altq-},{-altq-},
{-pf-},{-pf-},
{-cry-},{-crypto-},
{-apm-},{-apm-},
{-tth-},{-ttyh0 ttyh1-},
{-ttyA-},{-ttyA0 ttyA1-},
{-ttyB-},{-ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5-},
{-attyB-},{-ttyB0 ttyB1 ttyB2 ttyB3 ttyB4-},
{-tty0-},{-tty00 tty01 tty02 tty03-},
{-mac_tty0-},{-tty00 tty01-},
{-tzs-},{-ttya ttyb ttyc ttyd-},
{-czs-},{-cuaa cuab cuac cuad-},
{-ttyc-},{-ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7-},
{-com-},{-tty00 tty01 tty02 tty03-},
{-mac_ttye-},{-ttye0-},
{-ttye-},{-ttye0 ttye1 ttye2 ttye3 ttye4 ttye5 ttye6-},
{-lkm-},{-lkm-},
{-mmcl-},{-mmclock-},dnl
{-lpt-},{-lpa0 lpt0 lpa1 lpt1 lpa2 lpt2-},
{-joy-},{-joy0 joy1-},
{-rnd-},{-random-},
{-ses-},{-ses0-},
{-uk-},{-uk0 uk1-},
{-ss-},{-ss0 ss1-},
{-wt-},{-wt0-},
{-wdt-},{-wdt0-},
{-xfs-},{-xfs0-},
{-au-},{-audio0-},
{-speak-},{-speaker-},
{-asc-},{-asc0-},
{-music-},{-music0-},
{-radio-},{-radio0-},
{-tuner-},{-tuner0-},
{-rmidi-},{-rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7-},
{-usbs-},{-usbs-},
{-adb-},{-adb-},
{-iop-},{-iop0 iop1-},
{-pci-},{-pci-},
{-wsmouse-},{-wscons-},
{-btw-},{-bwtwo0-},
{-ctw-},{-cgtwo0-},
{-ctr-},{-cgthree0-},
{-cfr-},{-cgfour0-},
{-csx-},{-cgsix0-},
{-ceg-},{-cgeight0-},
{-cfo-},{-cgfourteen0-},
{-tcx-},{-tcx0-},
{-mac_grf-},{-grf0 grf1 grf2 grf3-},
{-grf-},{-grf0 grf1 grf2 grf3 grf4 grf5 grf6-},
{-par-},{-par0-},
{-amouse-},{-mouse0 mouse1-},
{-akbd-},{-kbd-},
{-ppi-},{-ppi0-},
{-view-},{-view00 view01 view02 view03 view04 view05-},
{-local-},{-local-})-})dnl
d202 2
d227 8
d237 2
a238 7
_dl({-usb-},{-usb0 usb1-},
{-urio-},{-urio-},
{-uscan-},{-uscanner0-},
{-uhid-},{-uhid0 uhid1 uhid2 uhid3-},
{-ulpt-},{-ulpt0 ulpt1-},
{-ugen-},{-ugen0 ugen1-},
{-utty-},{-utty0 utty1-})-})dnl
d303 30
d383 8
d395 10
d407 2
a408 1
disk_q({-hd-})dnl
a409 4
disk_q({-wd-})dnl
disk_q({-raid-})dnl
disk_q({-ccd-})dnl
disk_q({-sd-})dnl
d661 1
d663 33
@


1.16
log
@add sparc 'source'
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.15 2002/01/08 05:10:38 todd Exp $-})dnl
d598 1
@


1.15
log
@+speaker,+pdc
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.14 2002/01/08 03:26:04 todd Exp $-})dnl
d172 1
d174 4
@


1.14
log
@'delete ofdisk' drahn@@
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.13 2002/01/08 03:14:50 todd Exp $-})dnl
d159 1
d564 1
a564 1
_mcdev(speak,speaker,speaker,{-major_speak_c-},600)dnl
d608 1
@


1.13
log
@add mac68k 'source'
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.12 2002/01/08 01:33:19 todd Exp $-})dnl
a118 1
{-ofdisk-},{-ofdisk0 ofdisk1 ofdisk2 ofdisk3 ofdisk4-},
a260 1
__devitem(ofdisk,ofdisk*,OpenFirmware disks)dnl
a335 1
disk_q({-ofdisk-})dnl
@


1.12
log
@add 'source'
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.11 2002/01/08 00:59:59 todd Exp $-})dnl
d141 1
d144 4
a148 1
{-iop-},{-iop0 iop1-},
a157 3
{-ttyc-},{-ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7-},
{-com-},{-tty00 tty01 tty02 tty03-},
{-ttye-},{-ttye0 ttye1 ttye2 ttye3 ttye4 ttye5 ttye6-},
d160 1
d166 2
d173 1
d357 1
d483 1
d512 2
d527 1
a527 1
__devitem(grf,grf*,{-custom chip (grf0){-,-} Retina Z2/Z3 (grf1/grf2){-,-}
d608 2
d679 2
a680 1
	for d in a b c d e f g h i j k l m n o p
@


1.11
log
@add sun3 'source'
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.10 2002/01/08 00:52:06 todd Exp $-})dnl
d109 1
a109 1
{-aflo-},{-sd5 sd6 sd7 sd8 sd9-},
d137 1
d174 1
a174 1
{-view-},{-view00 view01-},
@


1.10
log
@more
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.9 2002/01/07 21:58:54 todd Exp $-})dnl
d166 1
a166 1
{-cgt-},{-cgtwo0-},
@


1.9
log
@add pci to all) (thanks drahn@@)
add more to all)
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.8 2002/01/07 07:50:48 todd Exp $-})dnl
d120 2
a121 2
{-xy-},{-xy0 xy1 xy2 xy3 xy4-},
{-xd-},{-xd0 xd1 xd2 xd3 xd4-},
d165 3
@


1.8
log
@o more devices for 'all' target
o ttyCcfg is 600 not 666
o add radio
o joy is 666 not 600 (current i386 MAKEDEV does this)
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.7 2002/01/07 07:20:50 todd Exp $-})dnl
d109 1
d127 1
d137 2
a138 1
{-ttyB-},{-ttyB0 ttyB1-},
d155 1
d163 1
d165 6
a566 2
__devitem(mouse_atari,mouse*,Atari mice)dnl
_cdev(mouse,mouse,30,0,666)dnl
@


1.7
log
@add /dev/pci
s/tzs/czs/ typo
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.6 2002/01/07 06:54:10 todd Exp $-})dnl
d128 2
d142 2
a143 1
{-lpt-},{-lpa0 lpt0-},
d148 2
d154 4
d349 2
a350 2
	[0-9a-f]) M ttyC$U c major_wsdisp_c {-$(( 16#$U ))-} 600 ;;
	cfg) M ttyCcfg c major_wsdisp_c 255 ;;
d495 3
d542 1
d571 1
a571 1
_mcdev(joy,joy*,joy,{-major_joy_c-},600)dnl
@


1.6
log
@sprinklings of 'ifstep()'
'the big disk case' no longer sets vars and calls dodisk, would take more space
to additionally do the 'stepping' argument (see cd\* in generated MAKEDEV)
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.5 2002/01/07 06:25:32 todd Exp $-})dnl
d136 1
a136 1
{-tzs-},{-cuaa cuab cuac cuad-},
d571 2
@


1.5
log
@DISK_STEPPING is not used, and in any event, is not global to all disks
prepare dodisk* script functions for a 7th argument, what I call disk stepping,
the number to add from rd0a to rd1a minor numbers, defaulted to 16; some archs
*cough*macppc*cough* still have 8 for cdroms and such
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.4 2002/01/07 06:13:30 todd Exp $-})dnl
d237 3
a239 1
_mkdev(cd,cd*,{-dodisk2 cd $U major_cd_b major_cd_c $U 0{--}dnl
a240 2
__devitem(mcd,mcd*,Mitsumi cdrom drives)dnl
_mkdev(mcd,mcd*,{-dodisk2 mcd $U major_mcd_b major_mcd_c $U 0-})dnl
d253 1
a253 1
_mkdev(rd,rd*,{-dodisk2 rd $U major_rd_b major_rd_c $U 0-})dnl
d300 2
a301 2
_mkdev(vnd,vnd*,{-dodisk vnd $U major_vnd_b major_vnd_c $U 0
	dodisk svnd $U major_vnd_b major_vnd_c $U 128-})dnl
d321 1
a321 2
	esac
	dodisk $n $U $b $c $U 0-})dnl
d343 1
a343 2
	esac
 -})dnl
d585 1
a585 1
#	$Open{--}BSD$
@


1.4
log
@add more disks to the 'all' target, rd shows up on sparc64 now ;-)
s/tty/tth/
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.3 2002/01/04 16:58:41 todd Exp $-})dnl
a577 3
dnl define DISK_STEPPING in the above file if other than 16
dnl
ifdef({-DISK_STEPPING-},,{-define({-DISK_STEPPING-},{-16-})-})dnl
d635 2
a636 1
dnl dodisk(name,unit,blkmaj,chrmaj,unit,off)
d640 1
a640 1
	n=Add(Mult(${5},DISK_STEPPING),${6}) count=0
d651 1
a651 1
dnl dodisk2(name,unit,blkmaj,chrmaj,unit,off)
d659 1
d663 1
a663 1
	n=Add(Mult({-$-}5,DISK_STEPPING),{-$-}6)
@


1.3
log
@add ttyC for wscons as wsdisp
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.2 2002/01/04 15:59:16 todd Exp $-})dnl
d72 1
a72 1
dnl   _mkdev(all,{-all-},{-dnl
d95 2
a96 1
__devitem(all,{-all-},{-makes all known devices{-,-} including local devices.
d118 8
d131 2
a132 3
{-tty-},{-ttyh0 ttyh1-},
{-flo-},{-fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H-},
{-flo-},{-fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H-},
d590 1
a590 1
#	$OpenBSD: MAKEDEV.mi,v 1.2 2002/01/04 15:59:16 todd Exp $
@


1.2
log
@add usb scanners
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.1 2002/01/04 09:25:35 todd Exp $-})dnl
d325 2
d330 8
d582 1
a582 1
#	$OpenBSD: MAKEDEV.mi,v 1.1 2002/01/04 09:25:35 todd Exp $
@


1.1
log
@This is my m4 MAKEDEV generation system.

.mi    -> edit this to add new devices
.sub   -> hardcore m4 here, be careful
*/*.md -> machine dependent information (generally device,block (& char) major)

Thanks for eyes/conversation about this over the years from espie, deraadt,
johns, fgsch, hugh, weingart, mickey, and others ..

SEE ALSO
.     m4(1), MAKEDEV(8)
@
text
@d3 1
a3 1
vers(a,{-$OpenBSD: MAKEDEV.mi,v 1.1.1.1 2001/09/20 12:34:56 todd Exp $-})dnl
d174 1
d393 2
d572 1
a572 1
#	$OpenBSD$
@

