head	1.12;
access;
symbols
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4;
locks; strict;
comment	@# @;


1.12
date	2001.06.24.23.47.44;	author deraadt;	state dead;
branches;
next	1.11;

1.11
date	2001.06.24.23.36.12;	author kjell;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.22.07.34.30;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	99.08.20.17.00.37;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	98.11.25.04.58.55;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.11.19.08.18.58;	author dugsong;	state Exp;
branches;
next	1.6;

1.6
date	97.09.16.06.01.05;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.09.16.03.03.04;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.14.15.41.25;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.05.13.05.35.01;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.04.23.20.39.05;	author gvf;	state Exp;
branches;
next	1.1;

1.1
date	97.04.09.09.04.43;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.12
log
@bye bye
@
text
@#!/bin/sh -
#
#	$OpenBSD: MAKEDEV,v 1.11 2001/06/24 23:36:12 kjell Exp $
#	@@(#)MAKEDEV	8.1 (Berkeley) 6/9/93
#

# Device "make" file.  Valid arguments:
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	fd*	floppy disk drives
#	sd*	SCSI disks
#	cd*	SCSI CD rom
#	vnd*	"file" pseudo-disks
#	rd*	"ramdisk" pseudo-disks
#	ccd*	contatenated disk devices
#
# Terminal multiplexors:
#	tty*	tty ports
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Call units:
#
# Special purpose devices:
#	bpf*	packet filter
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	*random	random data source
#
# Platform-specific devices:
#

PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
for i
do
case $i in

all)        
	sh MAKEDEV std fd sd0 sd1 sd2 st0 cd0 tty00 tty01 pty0 pty1
	sh MAKEEDV pf bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV pms0 random local
	;;

std)
	mknod console		c 0 0
	mknod drum		c 1 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 3 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 3 0	; chmod 640 mem ; chown root.kmem mem
	mknod null		c 3 2	; chmod 666 null
	mknod zero              c 3 12  ; chmod 666 zero
	mknod tty		c 2 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 7 0	; chmod 666 stdin
	mknod stdout		c 7 1	; chmod 666 stdout
	mknod stderr		c 7 2	; chmod 666 stderr
	;;

fd)
	rm -rf fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 7 %d;", i, i)}'`)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st; chr=10;;
	esac
	case $unit in
	0|1|2|3|4|5|6)
		unit0=`expr $unit \* 16`
		unit1=`expr $unit \* 16 + 1`
		unit2=`expr $unit \* 16 + 4`
		unit3=`expr $unit \* 16 + 5`
		mknod r${name}${unit} c $chr $unit0
		mknod nr${name}${unit} c $chr $unit1
		mknod r${name}h${unit} c $chr $unit2
		mknod nr${name}h${unit} c $chr $unit3
		chown root.operator r${name}${unit} nr${name}${unit} \
			r${name}h${unit} nr${name}h${unit}
		chmod 660 r${name}${unit} nr${name}${unit} \
			r${name}h${unit} nr${name}h${unit}
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac
	umask 77
	;;

pf)
	rm -f pf
	mknod pf c 73 0
	chown root.wheel pf
	chmod 600 pf
	;;

bpf*|tun*)
	unit=`expr $i : '...\(.*\)'`
	case $i in
	bpf*) name=bpf; chr=12;;
	tun*) name=tun; chr=40;;
	esac
	rm -f $name$unit
	mknod $name$unit c $chr $unit
	chown root.wheel $name$unit
	;;


cd*|sd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd; blk=3; chr=8;;
	sd*) name=sd; blk=0; chr=9;;
	fd*) name=fd; blk=7; chr=13;;
	esac
	rm -f $name$unit r$name$unit
	case $unit in
	0|1|2|3|4|5|6)
	    mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	    mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
	    chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
	    chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	    ;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=2; chr=11;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
	umask 77
	;;

tty*)
	unit=`expr $i : '...\(.*\)'`
	rm -f tty$unit cua$unit
	mknod tty$unit c 17 $unit
	mknod cua$unit c 17 `expr $unit + 128`
	chown uucp.dialer tty$unit cua$unit
	chmod 660 tty$unit cua$unit
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
	                for (i = 0; i < 16; i++)
	                        printf("rm -f tty%s%x; mknod tty%s%x c 4 %d;" \
	                            "rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
	                            n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
		;;
	esac
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 32 0
	mknod srandom c 32 1
	mknod urandom c 32 2
	mknod prandom c 32 3
	mknod arandom c 32 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
	;;

*)
	echo $i: unknown device
	;;
esac
done
@


1.11
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 2000/03/22 07:34:30 niklas Exp $
@


1.10
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1999/08/20 17:00:37 downsj Exp $
d47 1
a47 1
	sh MAKEEDV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
d101 7
@


1.9
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1998/11/25 04:58:55 millert Exp $
d93 1
a93 1
		chmod 640 r${name}${unit} nr${name}${unit} \
@


1.8
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 1998/11/19 08:18:58 dugsong Exp $
d219 2
a220 1
	chown uucp.wheel tty$unit cua$unit
@


1.7
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.6 1997/09/16 06:01:05 deraadt Exp $
a228 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.6
log
@10 bpf devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.5 1997/09/16 03:03:04 deraadt Exp $
d231 11
d245 1
a245 1
	0|1|2|3|4)
@


1.5
log
@fix bpf nodes; someone should make sure 0-9 are on all, and rm them nicely
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.4 1997/05/14 15:41:25 niklas Exp $
d46 4
a49 4
        sh MAKEDEV std fd sd0 sd1 sd2 st0 cd0 tty00 tty01 pty0 pty1
        sh MAKEDEV pms0 random bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	sh MAKEDEV bpf7 bpf8 bpf9 local
        ;;
d237 4
a240 4
                        for (i = 0; i < 16; i++)
                                printf("rm -f tty%s%x; mknod tty%s%x c 4 %d;" \
                                    "rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
                                    n, i, n, i, b+i, n, i, n, i, b+i); }'`
@


1.4
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.3 1997/05/13 05:35:01 millert Exp $
d47 2
a48 1
        sh MAKEDEV pms0 random bpf0 local
@


1.3
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.2 1997/04/23 20:39:05 gvf Exp $
d114 1
a114 1
cd*|sd*|vnd*)
a118 1
	vnd*) name=vnd; blk=2; chr=11;;
d163 47
@


1.2
log
@Fix vnd nodes.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.1 1997/04/09 09:04:43 pefo Exp $
d212 1
a212 1
	sh MAKEDEV.local
@


1.1
log
@wgrisc etc stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/12/14 18:23:51 millert Exp $
a126 2
	    if [ $name != vnd ]
	    then
a156 1
	    fi
@
