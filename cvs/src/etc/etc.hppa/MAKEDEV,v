head	1.142;
access;
symbols
	OPENBSD_6_0:1.137.0.4
	OPENBSD_6_0_BASE:1.137
	OPENBSD_5_9:1.132.0.2
	OPENBSD_5_9_BASE:1.132
	OPENBSD_5_8:1.129.0.6
	OPENBSD_5_8_BASE:1.129
	OPENBSD_5_7:1.129.0.2
	OPENBSD_5_7_BASE:1.129
	OPENBSD_5_6:1.126.0.4
	OPENBSD_5_6_BASE:1.126
	OPENBSD_5_5:1.125.0.4
	OPENBSD_5_5_BASE:1.125
	OPENBSD_5_4:1.119.0.2
	OPENBSD_5_4_BASE:1.119
	OPENBSD_5_3:1.114.0.2
	OPENBSD_5_3_BASE:1.114
	OPENBSD_5_2:1.111.0.2
	OPENBSD_5_2_BASE:1.111
	OPENBSD_5_1_BASE:1.110
	OPENBSD_5_1:1.110.0.2
	OPENBSD_5_0:1.108.0.2
	OPENBSD_5_0_BASE:1.108
	OPENBSD_4_9:1.106.0.2
	OPENBSD_4_9_BASE:1.106
	OPENBSD_4_8:1.104.0.2
	OPENBSD_4_8_BASE:1.104
	OPENBSD_4_7:1.96.0.2
	OPENBSD_4_7_BASE:1.96
	OPENBSD_4_6:1.94.0.4
	OPENBSD_4_6_BASE:1.94
	OPENBSD_4_5:1.91.0.2
	OPENBSD_4_5_BASE:1.91
	OPENBSD_4_4:1.87.0.2
	OPENBSD_4_4_BASE:1.87
	OPENBSD_4_3:1.83.0.4
	OPENBSD_4_3_BASE:1.83
	OPENBSD_4_2:1.83.0.2
	OPENBSD_4_2_BASE:1.83
	OPENBSD_4_1:1.79.0.2
	OPENBSD_4_1_BASE:1.79
	OPENBSD_4_0:1.75.0.2
	OPENBSD_4_0_BASE:1.75
	OPENBSD_3_9:1.74.0.2
	OPENBSD_3_9_BASE:1.74
	OPENBSD_3_8:1.68.0.2
	OPENBSD_3_8_BASE:1.68
	OPENBSD_3_7:1.64.0.2
	OPENBSD_3_7_BASE:1.64
	OPENBSD_3_6:1.58.0.2
	OPENBSD_3_6_BASE:1.58
	OPENBSD_3_5:1.51.0.2
	OPENBSD_3_5_BASE:1.51
	OPENBSD_3_4:1.37.0.2
	OPENBSD_3_4_BASE:1.37
	OPENBSD_3_3:1.34.0.2
	OPENBSD_3_3_BASE:1.34
	OPENBSD_3_2:1.27.0.2
	OPENBSD_3_2_BASE:1.27
	OPENBSD_3_1:1.23.0.2
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3;
locks; strict;
comment	@# @;


1.142
date	2016.09.11.19.59.57;	author deraadt;	state Exp;
branches;
next	1.141;
commitid	nE2mDEOBdUs9pcWt;

1.141
date	2016.09.11.03.09.31;	author deraadt;	state Exp;
branches;
next	1.140;
commitid	5bdWa87DXO6wfavj;

1.140
date	2016.09.08.20.41.30;	author ratchov;	state Exp;
branches;
next	1.139;
commitid	OYpPi53fdbnV5gsb;

1.139
date	2016.09.04.15.39.52;	author naddy;	state Exp;
branches;
next	1.138;
commitid	zStW2v519TMXvpgu;

1.138
date	2016.09.02.17.29.01;	author goda;	state Exp;
branches;
next	1.137;
commitid	jpWYiBSH0Zb5ggN1;

1.137
date	2016.05.21.21.35.52;	author deraadt;	state Exp;
branches;
next	1.136;
commitid	VqgBnfl5n3M9BSSw;

1.136
date	2016.05.21.15.18.49;	author deraadt;	state Exp;
branches;
next	1.135;
commitid	63AnsVd02uEVSedF;

1.135
date	2016.04.28.18.17.31;	author natano;	state Exp;
branches;
next	1.134;
commitid	yJ7nITWQGOm5qxNW;

1.134
date	2016.04.25.20.38.35;	author tedu;	state Exp;
branches;
next	1.133;
commitid	0kiqbjPHHvQxOXM9;

1.133
date	2016.03.12.18.02.17;	author espie;	state Exp;
branches;
next	1.132;
commitid	OOHlYIifEE4gewlK;

1.132
date	2015.11.10.21.50.01;	author sthen;	state Exp;
branches;
next	1.131;
commitid	cbpQoyIQoLnKxXlo;

1.131
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.130;
commitid	xjeR06qiavDtFv9k;

1.130
date	2015.10.23.15.14.46;	author claudio;	state Exp;
branches;
next	1.129;
commitid	D8oDiiCrSjVktjLG;

1.129
date	2014.12.11.19.48.38;	author tedu;	state Exp;
branches;
next	1.128;
commitid	2Qyj7V6Rmn8q72sA;

1.128
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.127;
commitid	M66ALjcyb37tQVMc;

1.127
date	2014.08.20.11.23.41;	author mikeb;	state Exp;
branches;
next	1.126;
commitid	vzc4wz1s3pDevb7K;

1.126
date	2014.07.11.22.04.51;	author tedu;	state Exp;
branches;
next	1.125;
commitid	xQhhmJP574n3YeP9;

1.125
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.124;

1.124
date	2013.11.21.11.06.08;	author kettenis;	state Exp;
branches;
next	1.123;

1.123
date	2013.11.05.16.06.28;	author deraadt;	state Exp;
branches;
next	1.122;

1.122
date	2013.09.16.08.18.27;	author dcoppa;	state Exp;
branches;
next	1.121;

1.121
date	2013.08.21.15.14.23;	author ajacoutot;	state Exp;
branches;
next	1.120;

1.120
date	2013.08.20.14.30.18;	author ajacoutot;	state Exp;
branches;
next	1.119;

1.119
date	2013.07.06.17.34.48;	author naddy;	state Exp;
branches;
next	1.118;

1.118
date	2013.07.06.16.15.27;	author naddy;	state Exp;
branches;
next	1.117;

1.117
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.116;

1.116
date	2013.06.15.23.20.54;	author halex;	state Exp;
branches;
next	1.115;

1.115
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.114;

1.114
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.113;

1.113
date	2012.11.26.08.07.59;	author jasper;	state Exp;
branches;
next	1.112;

1.112
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.111;

1.111
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.110;

1.110
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.109;

1.109
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.108;

1.108
date	2011.06.26.23.42.27;	author tedu;	state Exp;
branches;
next	1.107;

1.107
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.106;

1.106
date	2010.09.30.15.29.22;	author claudio;	state Exp;
branches;
next	1.105;

1.105
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.104;

1.104
date	2010.08.03.20.16.22;	author miod;	state Exp;
branches;
next	1.103;

1.103
date	2010.07.23.14.36.49;	author mglocker;	state Exp;
branches;
next	1.102;

1.102
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.101;

1.101
date	2010.07.03.04.08.10;	author krw;	state Exp;
branches;
next	1.100;

1.100
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.99;

1.99
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.98;

1.98
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.97;

1.97
date	2010.03.30.19.20.36;	author matthieu;	state Exp;
branches;
next	1.96;

1.96
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.95;

1.95
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.94;

1.94
date	2009.06.03.14.55.47;	author jj;	state Exp;
branches;
next	1.93;

1.93
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.92;

1.92
date	2009.04.05.17.52.21;	author jmc;	state Exp;
branches;
next	1.91;

1.91
date	2009.02.06.21.18.20;	author grange;	state Exp;
branches;
next	1.90;

1.90
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.89;

1.89
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.88;

1.88
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.87;

1.87
date	2008.06.28.21.48.29;	author mglocker;	state Exp;
branches;
next	1.86;

1.86
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.85;

1.85
date	2008.06.12.20.42.00;	author todd;	state Exp;
branches;
next	1.84;

1.84
date	2008.06.12.18.55.04;	author todd;	state Exp;
branches;
next	1.83;

1.83
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.82;

1.82
date	2007.05.28.22.29.56;	author todd;	state Exp;
branches;
next	1.81;

1.81
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.80;

1.80
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.79;

1.79
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.78;

1.78
date	2007.02.16.02.16.33;	author deraadt;	state Exp;
branches;
next	1.77;

1.77
date	2006.12.15.21.03.55;	author kettenis;	state Exp;
branches;
next	1.76;

1.76
date	2006.10.10.12.58.03;	author todd;	state Exp;
branches;
next	1.75;

1.75
date	2006.08.28.21.23.33;	author tsi;	state Exp;
branches;
next	1.74;

1.74
date	2006.01.11.21.59.00;	author martin;	state Exp;
branches;
next	1.73;

1.73
date	2005.12.27.19.03.08;	author miod;	state Exp;
branches;
next	1.72;

1.72
date	2005.10.06.06.43.58;	author otto;	state Exp;
branches;
next	1.71;

1.71
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.70;

1.70
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.69;

1.69
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.68;

1.68
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2005.06.21.18.02.30;	author martin;	state Exp;
branches;
next	1.66;

1.66
date	2005.06.15.06.51.12;	author miod;	state Exp;
branches;
next	1.65;

1.65
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.64;

1.64
date	2005.03.01.13.37.09;	author otto;	state Exp;
branches;
next	1.63;

1.63
date	2005.02.07.08.23.41;	author david;	state Exp;
branches;
next	1.62;

1.62
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.61;

1.61
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.60;

1.60
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.59;

1.59
date	2004.09.15.01.04.10;	author mickey;	state Exp;
branches;
next	1.58;

1.58
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2004.08.06.20.35.34;	author mickey;	state Exp;
branches;
next	1.56;

1.56
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.55;

1.55
date	2004.05.30.08.24.11;	author grange;	state Exp;
branches;
next	1.54;

1.54
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2004.04.11.18.15.22;	author millert;	state Exp;
branches;
next	1.52;

1.52
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.51;

1.51
date	2004.03.12.04.54.32;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2004.02.20.19.13.48;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2004.02.16.19.05.05;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.47;

1.47
date	2004.02.13.23.35.03;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.45;

1.45
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	2004.02.05.22.23.29;	author todd;	state Exp;
branches;
next	1.43;

1.43
date	2004.01.12.22.33.09;	author todd;	state Exp;
branches;
next	1.42;

1.42
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.41;

1.41
date	2003.12.09.04.28.44;	author mickey;	state Exp;
branches;
next	1.40;

1.40
date	2003.10.15.02.01.24;	author todd;	state Exp;
branches;
next	1.39;

1.39
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.37;

1.37
date	2003.08.07.09.20.23;	author mickey;	state Exp;
branches;
next	1.36;

1.36
date	2003.06.18.18.11.07;	author todd;	state Exp;
branches;
next	1.35;

1.35
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.34;

1.34
date	2003.02.05.20.18.36;	author mickey;	state Exp;
branches;
next	1.33;

1.33
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.32;

1.32
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.30;

1.30
date	2002.12.05.04.33.23;	author kjc;	state Exp;
branches;
next	1.29;

1.29
date	2002.12.05.03.00.26;	author kjc;	state Exp;
branches;
next	1.28;

1.28
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.27;

1.27
date	2002.10.01.21.11.37;	author mickey;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.25;

1.25
date	2002.06.09.05.58.38;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	2002.05.16.21.12.21;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.22;

1.22
date	2002.02.25.19.47.54;	author todd;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.14.04.43.08;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.13.20.23.01;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.06.19.40.21;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.06.19.24.46;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.28.02.58.54;	author kjc;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.25.03.19.57;	author kjell;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.24.23.36.01;	author kjell;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.30.02.11.16;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.22.08.08.53;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.22.07.34.28;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	99.11.30.21.25.38;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.142
log
@sync
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.60 2016/09/04 15:38:59 naddy Exp 
#	OpenBSD: MAKEDEV.common,v 1.93 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.83 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	sd*	SCSI disks, including flopticals
#	rd*	"rd" pseudo-disks
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Printers:
#	lpt*	IEEE 1284 centronics printer
# USB devices:
#	uall	All USB devices
#	usb*	Bus control devices used by usbd for attach/detach
#	uhid*	Generic HID devices
#	ugen*	Generic USB devices
#	ulpt*	Printer devices
#	ttyU*	USB serial ports
# Special purpose devices:
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	hotplug	devices hot plugging
#	pci*	PCI bus devices
#	pdc	PDC device
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	uk*	Unknown SCSI devices
#	video*	Video V4L2 devices
#	vscsi*	Virtual SCSI controller
#	switch*	Switch driver
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std fd st0 st1 sd0 sd1 sd2 sd3 rd0 random
	R pty0 bpf bio diskmap
	;;

std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 16 0
	M stdout	c 16 1
	M stderr	c 16 2
	M ksyms		c 25 0 640 kmem
	M klog		c 6 0 600
	M pdc		c 22 0 640 operator
	;;

switch*)
	M switch$U c 60 $U 600
	;;

vscsi*)
	M vscsi$U c 54 $U 600
	;;

video*)
	M video$U  c 33 $U 600
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uk*)
	M uk$U c 15 $U 640 operator
	;;

tap*)
	M tap$U c 59 $U 600
	;;

tun*)
	M tun$U c 18 $U 600
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 20 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 57 $U 600
	;;

pf*)
	M pf c 21 0 600
	;;

pci*)
	M pci$U	c 31 $U 600
	MKlist[${#MKlist[*]}]=";[ -h pci ] || ln -sf pci0 pci"
	;;

hotplug)
	M hotplug c 47 $U 400
	;;

fuse)
	M fuse$U c 58 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 16 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 56 0 640 operator
	;;

bpf)
	M bpf c 17 0 600
	M bpf0 c 17 0 600
	;;

bio)
	M bio c 37 0 600
	;;

audio*)
	M audio$U	c 35 $U
	M mixer$U	c 35 $(($U+16))
	M audioctl$U	c 35 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 45 $o 660 dialer root
	M cuaU$U c 45 $(($o+128)) 660 dialer root
	;;

ulpt*)
	M ulpt$U c 43 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 42 $(($n+10#$j)) 660
	done
	;;

uhid*)
	M uhid$U c 41 $U 660
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 40 $U 660
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ugen2 ugen3 ugen4 ugen5
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 usb0 usb1
	R usb2 usb3 usb4 usb5 usb6 usb7
	;;

lpt*|lpa*)
	case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c 26 $(($U+$f)) 600
	;;

wsmouse[0-9]*)
	M wsmouse$U c 29 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 30 0 600
	M wskbd c 30 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 28 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 27 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 27 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 38 0 666
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 23 $o 660 dialer root
	M cua$U c 23 $(($o+128)) 660 dialer root
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}rst$U	c 11 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 13 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 2 8 $U 0
	;;

rd*)
	dodisk2 rd $U 3 9 $U 0
	;;

fd*)
	typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=7; chr=24;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=$(($(($U*128))+$(($typnum*16))))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk $(($n+1)) 640 operator
	M ${nam}c	b $blk $(($n+2)) 640 operator
	M ${nam}i	b $blk $(($n+8)) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr $(($n+1)) 640 operator
	M r${nam}c	c $chr $(($n+2)) 640 operator
	M r${nam}i	c $chr $(($n+8)) 640 operator
	;;

cd*)
	dodisk2 cd $U 6 12 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R switch0 switch1 switch2 switch3 vnd0 vnd1 vnd2 vnd3 sd0 sd1
	R sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1 tap2
	R tap3 tun0 tun1 tun2 tun3 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 bio ch0 audio0 audio1 audio2 bpf fuse pppx hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b pf wd0 wd1
	R wd2 wd3 std st0 st1 fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 8 39 $U 0;;
	sd*) dodisk sd $U 4 10 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
@


1.141
log
@sync
@
text
@d315 2
a316 2
	M ttyU$U c 45 $o 660 dialer uucp
	M cuaU$U c 45 $(($o+128)) 660 dialer uucp
d421 2
a422 2
	M tty$U c 23 $o 660 dialer uucp
	M cua$U c 23 $(($o+128)) 660 dialer uucp
@


1.140
log
@sync after /dev/sound* removal
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.92 2016/09/08 20:39:28 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
d517 1
a517 1
        cat
@


1.139
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.91 2016/09/04 15:38:59 naddy Exp 
d304 1
a304 1
	M sound$U	c 35 $U
a305 1
	M audio$U	c 35 $(($U+128))
a308 1
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
@


1.138
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.59 2016/09/02 17:06:13 goda Exp 
#	OpenBSD: MAKEDEV.common,v 1.90 2016/09/02 17:06:13 goda Exp 
a430 1
		M ${pre}st$U	b 5 $n 660 operator
@


1.137
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.58 2016/04/28 18:17:31 natano Exp 
#	OpenBSD: MAKEDEV.common,v 1.88 2016/05/21 15:17:49 deraadt Exp 
d82 1
d229 4
d238 1
a238 1
	M video$U  c 33 $U 600 
d488 9
a496 8
	R vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	R cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 pty0 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2
	R bpf fuse pppx hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09
	R tty0a tty0b pf wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.136
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.87 2016/04/28 18:17:30 natano Exp 
d233 1
a233 1
	M video$U  c 33 $U
@


1.135
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.57 2016/04/25 20:38:10 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
@


1.134
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d67 1
a67 1
#	bpf*	Berkeley Packet Filter
d210 1
a210 1
	R pty0 bpf0 bpf1 bio diskmap
d289 3
a291 2
bpf*)
	M bpf$U c 17 $U 600
d484 7
a490 8
	R cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00
	R tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a
	R tty0b pf wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.133
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.56 2015/10/23 15:14:11 claudio Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a76 1
#	systrace*	System call tracing device
a248 4
systrace)
	M systrace c 34 0 644
	;;

d490 1
a490 1
	R tty0b pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.132
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d174 2
a175 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.131
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
@


1.130
log
@Sync (after tap addition)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
@


1.129
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.55 2014/12/11 19:48:03 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d79 1
d210 1
a210 1
	R pty0 bpf0 bpf1 tun0 tun1 bio diskmap
d241 4
d487 8
a494 8
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 bio ch0 audio0 audio1 audio2 fuse pppx hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.128
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.54 2014/10/09 04:37:43 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.77 2014/10/09 04:33:50 tedu Exp 
a62 1
#	urio*	Diamond Multimedia Rio 500
a313 4
urio*)
	M urio$U c 44 $U 660
	;;

d337 2
a338 2
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 urio0 usb0
	R usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.127
log
@Remove userland bits related to the crypto(4) interface;  ok deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.52 2014/07/11 22:04:09 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
a72 1
#	lkm	Loadable kernel modules interface
d210 1
a210 1
	R pty0 bpf0 bpf1 tun0 tun1 lkm bio diskmap
a270 4
lkm)
	M lkm c 19 0 640 _lkm
	;;

d492 3
a494 3
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.126
log
@regen
@
text
@a68 1
#	crypto	Hardware crypto access driver
a293 4
crypto)
	M crypto c 36 0
	;;

d498 1
a498 1
	R tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b crypto
@


1.125
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.51 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
a68 1
#	bthub*	Bluetooth Hubs
a298 4
bthub*)
	M bthub$U c 55 $U
	;;

d496 9
a504 10
	R bthub0 bthub1 bthub2 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09
	R tty0a tty0b crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1
	R fd
@


1.124
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.50 2013/08/21 15:12:47 ajacoutot Exp 
d212 1
a212 1
	R std fd st0 st1 sd0 sd1 sd2 sd3 rd0
@


1.123
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.122
log
@regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.71 2013/09/16 08:17:02 dcoppa Exp 
@


1.121
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.49 2013/06/03 16:06:42 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.69 2013/08/20 14:27:24 ajacoutot Exp 
d356 3
a358 2
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.120
log
@regen
@
text
@a64 1
uscan_dev
@


1.119
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
d65 1
a65 1
#	uscanner*	Scanners
a323 4
uscanner*)
	M uscanner$U c 46 $U 660
	;;

d358 1
a358 2
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.118
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d513 3
a515 2
	R tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 crypto pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.117
log
@regen
@
text
@d513 2
a514 2
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.116
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d74 1
a74 1
#	fuse*	Userland Filesystem
d283 1
a283 1
fuse*)
d510 5
a514 5
	R fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2 fuse0
	R fuse1 fuse2 fuse3 pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf systrace wd0
	R wd1 wd2 wd3 std st0 st1 fd
@


1.115
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d74 1
a74 1
#	fuse	Userland Filesystem
d283 1
a283 1
fuse)
d510 5
a514 5
	R fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.114
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.48 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d74 1
d283 4
d510 5
a514 5
	R fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2 pppx
	R hotplug ptm local wscons pci0 pci1 pci2 pci3 uall video0
	R video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.113
log
@regen
@
text
@d505 1
a505 1
	R fd0G fd0H diskmap vscsi0 bio ch0 audio0 audio1 audio2
@


1.112
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d185 1
a185 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d189 1
a189 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d193 1
a193 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d197 1
a197 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.111
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.47 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a75 1
#	nnpfs*	NNPFS filesystem node
a273 4
nnpfs*)
	M nnpfs$U c 32 $U 600
	;;

d505 1
a505 1
	R fd0G fd0H diskmap vscsi0 nnpfs0 bio ch0 audio0 audio1 audio2
@


1.110
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
@


1.109
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.46 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d510 3
a512 3
	R fd0G fd0H diskmap vscsi0 nnpfs0 bio ch0 hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall video0 video1 audio0 audio1
	R audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
@


1.108
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.45 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d506 9
a514 9
	R bthub0 bthub1 bthub2 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 bio
	R ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall video0
	R video1 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf systrace wd0
	R wd1 wd2 wd3 std st0 st1 fd
d517 1
a517 1
wd*|sd*|ccd*)
a520 1
	ccd*) dodisk ccd $U 1 7 $U 0;;
@


1.107
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.106
log
@regen
@
text
@a461 1
	dodisk svnd $U 2 8 $U 2048
@


1.105
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.43 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d81 1
d261 4
@


1.104
log
@regen
@
text
@d50 1
a51 1
#	ttyC-J*	wscons display devices
d68 1
a69 1
#	audio*	Audio devices
d71 1
d73 1
d77 1
a85 1
#	nnpfs*	NNPFS filesystem node
a86 2
#	bthub*	Bluetooth Hubs
#	diskmap	Disk mapper
a231 8
diskmap)
	M diskmap c 56 0 640 operator
	;;

bthub*)
	M bthub$U c 55 $U
	;;

a235 4
nnpfs*)
	M nnpfs$U c 32 $U 600
	;;

d271 4
d289 4
d297 4
d305 4
a319 4
bio)
	M bio c 37 0 600
	;;

d383 6
a405 6
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.103
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d359 1
@


1.102
log
@sync
@
text
@d508 3
a510 3
	R audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 lkm tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.101
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.100
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.42 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a78 1
#	ss*	SCSI scanners
a264 8
ss*)
	M ss$U c 14 $(($U*16)) 640 operator
	M nss$U c 14 $(($(($U*16))+1)) 640 operator
	M enss$U c 14 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d506 5
a510 5
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ss0
	R ss1 bio ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall video0 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.99
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.41 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d215 1
a215 1
	R pty0 bpf0 bpf1 tun0 tun1 lkm bio
@


1.98
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d234 1
a234 1
	M diskmap b 56 0 640 operator
@


1.97
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.40 2010/03/30 19:16:09 matthieu Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d87 1
d233 4
d515 5
a519 5
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H vscsi0 nnpfs0 ss0 ss1 bio
	R ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall video0
	R audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 lkm tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.96
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.39 2009/08/13 15:12:36 deraadt Exp 
d86 1
d232 4
d506 9
a514 9
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H vscsi0 nnpfs0 ss0 ss1 bio ch0 hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall video0 audio0 audio1 audio2
	R uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01
	R tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1
	R fd
@


1.95
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d368 1
a368 1
wsmouse*)
d377 1
a377 1
wskbd*)
@


1.94
log
@Sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.38 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d85 1
d231 4
d505 5
a509 4
	R fd0G fd0H nnpfs0 ss0 ss1 bio ch0 hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 uall video0 audio0 audio1 audio2 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.93
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.37 2009/02/06 21:17:14 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.42 2009/04/05 17:49:14 jmc Exp 
d500 4
a503 4
	R fd0G fd0H nnpfs0 ss0 ss1 bio ch0 hotplug ptm local wscons pci0
	R pci1 pci2 pci3 uall video0 audio0 audio1 audio2 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.92
log
@regen;
@
text
@d84 1
a84 1
#	xfs*	XFS filesystem node
d230 2
a231 2
xfs*)
	M xfs$U c 32 $U 600
d500 1
a500 1
	R fd0G fd0H xfs0 ss0 ss1 bio ch0 hotplug ptm local wscons pci0
@


1.91
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d83 1
a83 1
#	video*	Video V4L devices
@


1.90
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.36 2009/01/25 17:30:48 miod Exp 
d497 7
a503 7
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0 ss0
	R ss1 bio ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall video0 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.89
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.35 2008/06/28 21:46:05 mglocker Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a225 1
	M drum		c 3 0 640 kmem
@


1.88
log
@sync
@
text
@d502 3
a504 3
	R uall video0 audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R lkm tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2
	R wd3 std st0 st1 fd
@


1.87
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
d262 1
a262 1
	for pre in " " s u p a
@


1.86
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.33 2008/06/13 21:07:28 todd Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
a66 1
#	video*	Video V4L devices
d83 1
d235 5
a312 5
	;;

video*)
	M video$U  c 33 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
@


1.85
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.32 2008/06/12 20:39:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d212 1
a212 1
	R pty0 bpf0 bpf1 tun0 tun1 lkm
@


1.84
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.31 2008/06/12 18:52:46 todd Exp 
d67 1
d310 5
d502 3
a504 3
	R uall audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.83
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.30 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d211 1
a211 1
	R pty0 bpf0 bpf1 tun0 tun1 lkm random
@


1.82
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.81
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.29 2007/05/27 01:50:35 todd Exp 
d69 1
d306 4
d496 4
a499 4
	R ss1 ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.80
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.28 2007/05/26 19:54:23 todd Exp 
a68 1
#	bio	ioctl tunnel pseudo-device
a304 4
bio)
	M bio c 37 0 600
	;;

d491 4
a494 4
	R ss1 bio ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.79
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.27 2006/04/16 02:49:52 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d69 1
d306 4
d496 4
a499 4
	R ss1 ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.78
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
d268 1
a268 1
	MKlist[${#MKlist[*]}]=";[ -e pci ] || ln -s pci0 pci"
@


1.77
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
d470 1
d474 1
@


1.76
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.30 2006/10/10 12:33:41 todd Exp 
d74 1
a74 1
#	pci	PCI bus device
d266 3
a268 2
pci)
	M pci c 31 0 600
d488 4
a491 3
	R ss1 ch0 hotplug ptm local wscons pci uall audio0 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.75
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
d340 2
a341 2
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
@


1.74
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.26 2006/01/11 21:57:53 martin Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d51 1
a51 1
#	ttyC-F*	wscons display devices
d365 2
a366 2
tty[C-F]*)
	U=${i##tty[C-F]}
d372 4
@


1.73
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.25 2005/08/01 22:22:13 deraadt Exp 
d72 1
d274 4
d483 3
a485 3
	R ss1 ch0 ptm local wscons pci uall audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.72
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d50 1
a50 1
#	ttyC0	Minimal wscons devices
d71 1
a71 1
#	fd	fd/* nodes for fdescfs
@


1.71
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d170 1
a170 2
RMlist="rm -f"
MKlist=":"
d173 1
a173 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d177 1
a177 1
	RMlist="$RMlist $1"
d181 1
a181 1
		MKlist="$MKlist;chown $7:$G $1"
d184 10
a193 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a194 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d248 2
a249 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d274 1
a274 1
	RMlist="mkdir -p fd;$RMlist" n=0
d276 1
a276 1
	MKlist="$MKlist;chmod 555 fd"
d292 4
a295 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d498 8
a505 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d507 1
a507 1
	echo "$list" | sh
@


1.70
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d153 1
a153 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.69
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a149 1
	RMlist="$RMlist $1$2? r$1$2?"
d153 2
a154 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a156 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.68
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a186 1
	mklist="$mklist $1"
@


1.67
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.24 2005/06/21 17:43:34 martin Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
a76 1
#	ses*	SES/SAF-TE SCSI devices
a257 4
ses*)
	M ses$U c 37 $U 640 operator
	;;

d484 3
a486 3
	R ss1 ch0 ses0 ptm local wscons pci uall audio0 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.66
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.23 2005/06/15 06:50:47 miod Exp 
d58 9
d309 41
d489 3
a491 3
	R ss1 ch0 ses0 ptm local wscons pci audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.65
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.22 2004/09/15 01:02:31 mickey Exp 
d305 1
a305 1
	M $n$U c 30 $(($U+$f)) 600
@


1.64
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.63
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.62
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.61
log
@sync
@
text
@d95 1
a95 1
	local t="$1"  
@


1.60
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d330 1
a330 1
	[0-9a-f]) M tty$n$U c 27 $(( 16#$U + $m )) 600;;
@


1.59
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.58
log
@Regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.21 2004/08/06 20:34:04 mickey Exp 
d223 1
@


1.57
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d72 1
a72 1
#	uk*	SCSI unknown devices
@


1.56
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.20 2004/04/11 18:05:23 millert Exp 
d39 1
d440 1
a440 1
	R pf systrace std st0 st1 fd
d443 1
a443 1
sd*|ccd*)
d445 1
@


1.55
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.54
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
@


1.53
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
@


1.52
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d46 2
a47 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.51
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.19 2004/02/16 19:01:01 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d46 2
a47 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d345 6
a350 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d352 1
a352 1
	while [ $n -lt 16 ]
d354 2
a355 2
		nam=$name$(hex $n)
		off=$(($U*16))
d435 5
a439 5
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R xfs0 ss0 ss1 ch0 ses0 ptm local wscons pci audio0 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R crypto pf systrace std st0 st1 fd
@


1.50
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
@


1.49
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d36 1
a36 1
#	sd*	SCSI disks
@


1.48
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.18 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 4
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tapes
d33 1
a33 4
#	ccd*	concatenated disk devices
#	vnd*	"file" pseudo-disks
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks
d36 6
a44 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d46 2
a47 2
# Printers:
#	lpt*	IEEE 1284 centronics printer
d49 2
a50 2
#	ttyC0	wscons screen 0
#	ttyC-F*	wscons virtual consoles
d55 2
a56 1
# Call units:
d58 1
a58 4
#	ch*	SCSI media changer
#	ss*	SCSI scanners
#	uk*	SCSI Unknown device
#	fd	makes fd/* for the fdescfs
d60 5
a64 3
#	tun*	network tunnel driver
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
d66 1
a66 6
#	pdc	PDC device
#	pci	PCI bus device
#	xfs*	XFS filesystem devices
#	systrace*	system call tracing device
#	audio*	audio device
#	crypto	hardware crypto access driver
d68 5
a72 1
#
d224 2
a225 2
ses*)
	M ses$U c 37 $U 640 operator
d228 2
a229 2
crypto)
	M crypto c 36 0
d232 2
a233 9
audio*)
	M sound$U	c 35 $U
	M mixer$U	c 35 $(($U+16))
	M audio$U	c 35 $(($U+128))
	M audioctl$U	c 35 $(($U+192))
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d240 6
a245 2
xfs*)
	M xfs$U c 32 $U 600
d248 2
a249 6
pci)
	M pci c 31 0 600
	;;

pf*)
	M pf c 21 0 600
d261 2
a262 2
lkm)
	M lkm c 19 0 640 _lkm
d265 2
a266 2
tun*)
	M tun$U c 18 $U 600
d269 2
a270 2
bpf*)
	M bpf$U c 17 $U 600
d279 6
a284 2
uk*)
	M uk$U c 15 $U 640 operator
d287 9
a295 6
ss*)
	M ss$U c 14 $(($U*16)) 640 operator
	M nss$U c 14 $(($(($U*16))+1)) 640 operator
	M enss$U c 14 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d298 6
a303 2
ch*)
	M ch$U c 13 $U 660 operator
a339 12
lpt*|lpa*)
	case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c 30 $(($U+$f)) 600
	;;

ptm)
	M ptm c 38 0 666
	;;

d358 4
d369 23
a423 19
rd*)
	dodisk2 rd $U 3 9 $U 0
	;;

vnd*)
	dodisk vnd $U 2 8 $U 0
	dodisk svnd $U 2 8 $U 2048
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 11 $n 660 operator
		n=$(($n+1))
	done
	;;

d433 3
a435 3
	R xfs0 ss0 ss1 ch0 ses0 ptm wscons pci audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto
	R pf systrace std st0 st1 fd
@


1.47
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.17 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.46
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d42 1
a42 1
#	tty*	set of 16 slave psuedo terminals
@


1.45
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.16 2003/12/09 04:27:51 mickey Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.44
log
@sync
@
text
@d44 1
d344 4
d433 3
a435 3
	R xfs0 ss0 ss1 ch0 ses0 wscons pci audio0 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf
	R systrace std st0 st1 fd
@


1.43
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a446 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d455 1
a455 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.42
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.41
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d89 8
@


1.40
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.15 2003/08/07 09:19:14 mickey Exp 
a32 3
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	sd*	SCSI disks
#	cd*	SCSI cdrom drives
d36 3
d55 3
a60 1
#	pf*	Packet Filter
d63 3
a66 5
#	ch*	SCSI media changer
#	ss*	SCSI scanners
#	uk*	SCSI Unknown device
#	ses*	SES/SAF-TE SCSI devices
#	pdc	PDC device
d70 1
d215 4
d238 2
a239 2
ses*)
	M ses$U c 37 $U 640 operator
d242 2
a243 2
uk*)
	M uk$U c 15 $U 640 operator
d246 2
a247 14
ss*)
	M ss$U c 14 $(($U*16)) 640 operator
	M nss$U c 14 $(($(($U*16))+1)) 640 operator
	M enss$U c 14 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
	;;

ch*)
	M ch$U c 13 $U 660 operator
	;;

xfs*)
	M xfs$U c 32 $U 600
a262 4
pf*)
	M pf c 21 0 600
	;;

d277 16
a359 13
rd*)
	dodisk2 rd $U 3 9 $U 0
	;;

vnd*)
	dodisk vnd $U 2 8 $U 0
	dodisk svnd $U 2 8 $U 2048
	;;

cd*)
	dodisk2 cd $U 6 12 $U 0
	;;

d388 13
d420 1
a420 1
	R xfs0 ss0 ss1 ch0 ses0 wscons audio0 uk0 random lpa0 lpa1
@


1.39
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
d350 1
a350 1
	o=$(hextod $U)
@


1.38
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d40 1
a40 1
#	tty0*	NS16x50 serial ports
d90 1
a90 1
trunc()
d92 16
a107 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
d348 5
a352 3
tty0*)
	M tty$U c 23 $U 660 dialer uucp
	M cua$U c 23 $(($U+128)) 660 dialer uucp
@


1.37
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d350 1
a350 1
	dodisk svnd $U 2 8 $U 128
@


1.36
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.14 2003/06/18 18:08:59 todd Exp 
d245 1
a245 1
	M xfs$U c 31 $U 600
@


1.35
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.13 2003/02/05 20:17:38 mickey Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.34
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d138 1
a138 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d170 1
a170 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.33
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.12 2002/12/05 04:30:21 kjc Exp 
d54 7
d287 34
d412 3
a414 3
	R xfs0 ss0 ss1 ch0 ses0 audio0 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf systrace std
	R st0 st1 fd
@


1.32
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d166 1
a166 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.31
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d259 1
a259 1
	M lkm c 19 0 640 kmem
@


1.30
log
@replace MAKEDEVs by auto-generated ones.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.11 2002/10/24 18:36:13 mickey Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.29
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.10 2002/10/16 15:48:31 todd Exp 
d201 1
a201 1
	M ksyms		c 29 0 640 kmem
d372 2
a373 2
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf
	R systrace std st0 st1 fd
@


1.28
log
@sync
@
text
@a60 1
#	altq/	ALTQ control interface
a257 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 33 $U 644
		U=$(($U+1))
	done
	;;

d372 1
a372 1
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 crypto pf altq
@


1.27
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.9 2002/10/01 21:10:43 mickey Exp 
#	OpenBSD: MAKEDEV.mi,v 1.51 2002/08/29 23:43:16 todd Exp 
@


1.26
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.8 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d67 1
d70 2
d207 15
d226 4
d380 3
a382 2
	R xfs0 ss0 ss1 ch0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R lkm tty00 tty01 tty02 tty03 pf altq systrace std st0 st1 fd
@


1.25
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.24
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.23
log
@regen. some of these were missed previously.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.7 2002/02/25 19:46:36 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d69 1
d205 4
d360 1
a360 1
	R lkm tty00 tty01 tty02 tty03 pf altq std st0 st1 fd
@


1.22
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
@


1.21
log
@random typo fix; ok deraadt@@
@
text
@d6 1
a6 1
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
a56 1
#	hil	HP300 HIL input devices
d186 1
a186 2
	R pty0 hil com0 com1
	R bpf0 bpf1 tun0 tun1 lkm random
@


1.20
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.17 2002/02/19 21:06:00 todd Exp $
d356 1
a356 1
	R xfs0 ss0 ss1 ch0 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
@


1.19
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.5 2002/02/21 13:06:48 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d57 1
d187 2
a188 1
	R pty0 bpf0 bpf1 tun0 tun1 lkm random
d356 1
a356 1
	R xfs0 ss0 ss1 ch0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
@


1.18
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d354 1
a354 1
	R xfs0 ss0 ss1 ch0 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
@


1.17
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
a56 1
#	hil	HP300 HIL input devices
d186 1
a186 2
	R pty0 hil com0 com1
	R bpf0 bpf1 tun0 tun1 lkm random
@


1.16
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
@


1.15
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d47 1
a47 1
#	rd*	"ramdisk" pseudo-disks
@


1.14
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d352 6
a357 6
	R xfs0 ss0 ss1 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R lkm tty00 tty01 tty02 tty03 pf altq tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H rd0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 cd1
	R ch0 st0 st1 pty0 pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.13
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.hppa/MAKEDEV.md,v 1.3 2002/02/13 20:21:54 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d211 3
a213 1
	M ss$U c 14 $U 440 operator
d274 6
a279 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d284 1
@


1.12
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
@


1.11
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d367 1
a367 1
	R ch0 st0 st1 pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.10
log
@hppa is in.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
@


1.9
log
@fix st and do not make hil; noted by fries@@
@
text
@d3 30
a32 2
#	$OpenBSD: MAKEDEV,v 1.8 2001/09/06 19:24:46 mickey Exp $
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
d35 2
d40 1
a40 1
#	st*	SCSI tape
d42 1
a42 1
#	fd*	floppy disks
d44 2
a45 2
#	cd*	CDROM drives
#	ccd*	"concatenated" pseudo-disks
d47 3
a49 3
#	rd*	RAM disks
# Terminal multiplexors:
#	tty0*	RS-232 single-port serial interface
d51 2
a52 1
#	pty*	set of 16 master and slave pseudo terminals
d54 1
a54 1
#	lpt*	IEEE 1284 cetronics iface
d57 3
a59 4
#	ch*	SCSI media changer
#	fd	file descriptors
#	hil	HIL input devices
#	bpf*	packet filter
d61 1
d63 2
a64 1
#	*random	inkernel random number generator
d66 4
a69 1
#	altq	ALTQ control interface
d71 2
d74 2
a75 2
PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
d77 12
a88 3
#
# Utility functions
#
d90 1
a90 1
hex ()
d92 7
a98 8
	case $1 in
		[0-9]) echo -n $1 ;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d102 17
a118 1
dodisk ()
d120 11
a130 35
	rm -f ${1}${2}? r${1}${2}?
	mknod ${1}${2}a  b $3 $(($5 * 16 + $6 + 0))
	mknod ${1}${2}b  b $3 $(($5 * 16 + $6 + 1))
	mknod ${1}${2}c  b $3 $(($5 * 16 + $6 + 2))
	mknod ${1}${2}d  b $3 $(($5 * 16 + $6 + 3))
	mknod ${1}${2}e  b $3 $(($5 * 16 + $6 + 4))
	mknod ${1}${2}f  b $3 $(($5 * 16 + $6 + 5))
	mknod ${1}${2}g  b $3 $(($5 * 16 + $6 + 6))
	mknod ${1}${2}h  b $3 $(($5 * 16 + $6 + 7))
	mknod ${1}${2}i  b $3 $(($5 * 16 + $6 + 8))
	mknod ${1}${2}j  b $3 $(($5 * 16 + $6 + 9))
	mknod ${1}${2}k  b $3 $(($5 * 16 + $6 + 10))
	mknod ${1}${2}l  b $3 $(($5 * 16 + $6 + 11))
	mknod ${1}${2}m  b $3 $(($5 * 16 + $6 + 12))
	mknod ${1}${2}n  b $3 $(($5 * 16 + $6 + 13))
	mknod ${1}${2}o  b $3 $(($5 * 16 + $6 + 14))
	mknod ${1}${2}p  b $3 $(($5 * 16 + $6 + 15))
	mknod r${1}${2}a c $4 $(($5 * 16 + $6 + 0))
	mknod r${1}${2}b c $4 $(($5 * 16 + $6 + 1))
	mknod r${1}${2}c c $4 $(($5 * 16 + $6 + 2))
	mknod r${1}${2}d c $4 $(($5 * 16 + $6 + 3))
	mknod r${1}${2}e c $4 $(($5 * 16 + $6 + 4))
	mknod r${1}${2}f c $4 $(($5 * 16 + $6 + 5))
	mknod r${1}${2}g c $4 $(($5 * 16 + $6 + 6))
	mknod r${1}${2}h c $4 $(($5 * 16 + $6 + 7))
	mknod r${1}${2}i c $4 $(($5 * 16 + $6 + 8))
	mknod r${1}${2}j c $4 $(($5 * 16 + $6 + 9))
	mknod r${1}${2}k c $4 $(($5 * 16 + $6 + 10))
	mknod r${1}${2}l c $4 $(($5 * 16 + $6 + 11))
	mknod r${1}${2}m c $4 $(($5 * 16 + $6 + 12))
	mknod r${1}${2}n c $4 $(($5 * 16 + $6 + 13))
	mknod r${1}${2}o c $4 $(($5 * 16 + $6 + 14))
	mknod r${1}${2}p c $4 $(($5 * 16 + $6 + 15))
	chown root.operator ${1}${2}[a-p] r${1}${2}[a-p]
	chmod 640 ${1}${2}[a-p] r${1}${2}[a-p]
d133 43
a175 3
#
# End of utility functions
#
d177 3
a179 1
for i
d181 3
d185 5
d191 23
a213 7
all)
	sh MAKEDEV std fd st0 st1 ccd0 ccd1 ccd2
	sh MAKEDEV sd0 sd1 sd2 rd0 rd1 pty0 vnd0 vnd1 vnd2 vnd3
	sh MAKEDEV tty00 tty01 tty02 tty03 
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV pf tun0 tun1 tun2 tun3 lkm random xfs0 altq
	sh MAKEDEV local
d216 2
a217 4
raminst)
	sh MAKEDEV std fd st0 st1 sd0 sd1 sd2 sd3 rd0 rd1
	sh MAKEDEV pty0 hil tty00 tty01
	sh MAKEDEV bpf0 bpf1 tun0 tun1 lkm random
d220 2
a221 14
std)
	rm -f console drum kmem mem null zero tty klog stdin stdout stderr ksyms
	mknod console	c 0 0
	mknod tty	c 1 0	; chmod 666 tty
	mknod mem	c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod kmem	c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod null	c 2 2	; chmod 666 null
	mknod zero	c 2 12	; chmod 666 zero
	mknod drum	c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod klog	c 6 0	; chmod 600 klog
	mknod stdin	c 16 0	; chmod 666 stdin
	mknod stdout	c 16 1	; chmod 666 stdout
	mknod stderr	c 16 2	; chmod 666 stderr
	mknod ksyms	c 29 0  ; chmod 640 ksyms ; chown root.kmem ksyms
d224 1
a224 3
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
d226 5
a230 4
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 24 $n; n="$(( $n + 1 ))"; done )
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
d233 10
a242 20
st*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	st*) name=st;  chr=11; blk=5;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit
	mknod $name$unit	b $blk $(($unit * 16 + 0))
	mknod n$name$unit	b $blk $(($unit * 16 + 1))
	mknod e$name$unit	b $blk $(($unit * 16 + 2))
	mknod en$name$unit	b $blk $(($unit * 16 + 3))
	mknod r$name$unit	c $chr $(($unit * 16 + 0))
	mknod nr$name$unit	c $chr $(($unit * 16 + 1))
	mknod er$name$unit	c $chr $(($unit * 16 + 2))
	mknod enr$name$unit	c $chr $(($unit * 16 + 3))
	chown root.operator $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit
	chmod 660 $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit
	umask 77
d245 2
a246 8
ch*)
	umask 2
	name=ch; chr=13
	rm -f $name$unit
	mknod ${name}${unit}	c $chr $unit
	chown root.operator ${name}${unit}
	chmod 660 ${name}${unit}
	umask 77
d249 2
a250 6
bpf*)
	unit=${i##*[a-z]}
	rm -f bpf$unit
	mknod bpf$unit c 17 $unit
	chmod 600 bpf$unit
	chown root.wheel bpf$unit
d253 2
a254 5
pf)
	rm -f pf
	mknod pf c 21 0
	chown root.wheel pf
	chmod 600 pf
d257 4
a260 6
tun*)
	unit=${i##*[a-z]}
	rm -f tun$unit
	mknod tun$unit c 18 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d263 1
a263 2
rd*|cd*)
	umask 2 ; unit=${i##*[a-z]}
d265 2
a266 2
	rd*) name=cd; blk=3; chr=9;;
	cd*) name=cd; blk=6; chr=12;;
d268 1
a268 8
	rm -f $name${unit}? r$name${unit}?
	mknod ${name}${unit}a  b $blk $(($unit * 16 + 0))
	mknod ${name}${unit}c  b $blk $(($unit * 16 + 2))
	mknod r${name}${unit}a c $chr $(($unit * 16 + 0))
	mknod r${name}${unit}c c $chr $(($unit * 16 + 2))
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	umask 77
d271 19
a289 5
ccd*|sd*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	sd*) name=sd; blk=4; chr=10;;
	ccd*) name=ccd; blk=1; chr=7;;
d291 8
a298 10
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|\
	17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)
		dodisk $name $unit $blk $chr $unit 0
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
d301 3
a303 6
vnd*)
	umask 2 ; unit=${i##*[a-z]}
	blk=2; chr=8;
	dodisk  vnd $unit $blk $chr $unit 0
	dodisk svnd $unit $blk $chr $unit 128
	umask 77
d306 2
a307 12
tty0*)
	unit=${i##tty0}
	case $unit in
	0|1|2|3)
		rm -f tty${unit} cua${unit}
		mknod tty${unit} c 23 ${unit}
		mknod cua${unit} c 23 $((${unit} + 128))
		;;
	*)
		echo bad unit for tty in: $i
		;;
	esac
d310 3
a312 11
lpt*)
	unit=${i##*[a-z]}
	case $unit in
	0|1|2|3)
		rm -f lpt${unit}
		mknod lpt${unit} c 30 ${unit}
		;;
	*)
		echo bad unit for lpt in: $i
		;;
	esac
d315 2
a316 5
lkm)
	rm -f lkm
	mknod lkm c 19 0
	chown root.kmem lkm
	chmod 640 lkm
d319 13
a331 20
pty*)
	class=${i##*[a-z]}
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
d333 3
a335 14
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f {tty,pty}$nam
			mknod tty$nam c 4 "$(( $offset + $n ))"
			mknod pty$nam c 5 "$(( $offset + $n ))"
			n="$(( $n + 1 ))"
		done
		umask 77
		;;
d337 8
d347 8
a354 9
random|srandom|urandom|prandom|arandom)
        rm -f random urandom srandom prandom arandom
	mknod  random c 20 0
	mknod srandom c 20 1
	mknod urandom c 20 2
	mknod prandom c 20 3
	mknod arandom c 20 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d357 2
a358 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 31 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d361 7
a367 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 33 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
d370 5
a374 3
local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
d376 1
d382 31
@


1.8
log
@tty not com, noted by fries@@
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 2001/06/28 02:58:54 kjc Exp $
d107 1
a107 1
	sh MAKEDEV hil tty00 tty01 tty02 tty03 
d153 2
a154 2
	mknod n$name$uni	b $blk $(($unit * 16 + 1))
	mknod e$name$uni	b $blk $(($unit * 16 + 2))
d206 1
a206 1
	rm -f $name$unit? r$name$unit?
@


1.7
log
@add an entry for ALTQ.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.6 2001/06/25 03:19:57 kjell Exp $
d107 1
a107 1
	sh MAKEDEV hil com0 com1 com2 com3 
d115 1
a115 1
	sh MAKEDEV pty0 hil com0 com1
@


1.6
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.5 2001/06/24 23:36:01 kjell Exp $
d34 1
d109 1
a109 1
	sh MAKEDEV pf tun0 tun1 tun2 tun3 lkm random xfs0
d330 13
@


1.5
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.4 2001/05/30 02:11:16 deraadt Exp $
d186 1
a186 1
	mknod pf c 73 0
@


1.4
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.3 2000/03/22 08:08:53 niklas Exp $
d108 1
a108 1
	sh MAKEDEV tun0 tun1 tun2 tun3 lkm random xfs0
d182 7
@


1.3
log
@ch* creation on platforms which had them in conf.c but missed them in MAKEDEV
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.2 2000/03/22 07:34:28 niklas Exp $
d108 1
a108 1
	sh MAKEDEV ipl tun0 tun1 tun2 tun3 lkm random xfs0
a181 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 21 0
	mknod ipnat c 21 1
	mknod ipstate c 21 2
	mknod ipauth c 21 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.2
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.1 1999/11/30 21:25:38 mickey Exp $
d26 1
d163 10
@


1.1
log
@initial /etc files
@
text
@d3 1
a3 1
#	$OpenBSD$
d160 1
a160 1
	chmod 640 $name$unit n$name$unit e$name$unit en$name$unit \
@

