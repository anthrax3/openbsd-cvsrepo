head	1.19;
access;
symbols
	OPENBSD_2_9:1.17.0.6
	OPENBSD_2_9_BASE:1.17
	OPENBSD_2_8:1.17.0.4
	OPENBSD_2_8_BASE:1.17
	OPENBSD_2_7:1.17.0.2
	OPENBSD_2_7_BASE:1.17
	OPENBSD_2_6:1.16.0.2
	OPENBSD_2_6_BASE:1.16
	OPENBSD_2_5:1.15.0.2
	OPENBSD_2_5_BASE:1.15
	OPENBSD_2_4:1.13.0.2
	OPENBSD_2_4_BASE:1.13
	OPENBSD_2_3:1.11.0.2
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6;
locks; strict;
comment	@# @;


1.19
date	2001.06.24.23.47.31;	author deraadt;	state dead;
branches;
next	1.18;

1.18
date	2001.06.24.23.35.59;	author kjell;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.22.07.34.28;	author niklas;	state Exp;
branches;
next	1.16;

1.16
date	99.08.20.17.00.35;	author downsj;	state Exp;
branches;
next	1.15;

1.15
date	98.11.25.04.58.53;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	98.11.19.08.18.56;	author dugsong;	state Exp;
branches;
next	1.13;

1.13
date	98.09.25.11.11.59;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	98.09.25.11.02.43;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	97.12.08.21.27.38;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	97.09.16.06.00.54;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.05.14.15.41.09;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	97.05.13.05.34.50;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	96.12.14.18.23.53;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.09.18.22.03.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.28.08.55.22;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.23.06.32.54;	author etheisen;	state Exp;
branches;
next	1.3;

1.3
date	96.07.23.06.15.14;	author etheisen;	state Exp;
branches;
next	1.2;

1.2
date	96.07.15.14.59.08;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.05.01.13.46.58;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@bye bye
@
text
@#!/bin/sh -
#
#	$OpenBSD: MAKEDEV,v 1.18 2001/06/24 23:35:59 kjell Exp $
#	$NetBSD: MAKEDEV,v 1.3 1996/04/26 20:10:24 mark Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Updated by Mark Brinicombe
# Created by Scott Stevens
#
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#	@@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	floppy	devices needed for install floppies
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	wd*	ISA "winchester" disk drives (ST506,IDE,ESDI,RLL,...)
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	sd*	SCSI disks
#	cd*	SCSI cdrom drives
#	vnd*	"file" pseudo-disks
#
# Console ports:
#	ttyv0	pccons or pcvt screen 0
#	ttyv*	pcvt
#
# Pointing devices:
#	quadmouse	"quadrature mouse"
# 
# Terminal ports:
#	com*	standard PC COM ports			(XXX)
#	tty*	alias for PC COM ports, this is what the system really wants
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Printers:
#	lpt*	stock lp
#	lpa*	interruptless lp
#
# Cpus:
#	cpu*	cpus
#
# Call units:
#
# Special purpose devices:
#	rd*	"ramdisk" pseudo-disks
#	kbd	raw keyboard
#	kbdctl	keyboard control
#	fd	makes fd/* for the fdescfs.
#	bpf*	Berkeley Packet Filter
#	beep	riscpc speaker
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	ch*	SCSI media changer
#	uk*	SCSI Unknown device
#	ss*	SCSI scanners
#	iic*	IIC bus device
#	rtc*	RTC device
#	*random	inkernal random data source
#

PATH=/sbin:/bin:/usr/bin:/usr/sbin
this=$0
umask 77

for i
do

unit=`unt $i`
[ "$unit" ] || unit=0

case $i in

all)
	sh $this std fd fd0 fd1 wd0 wd1 rd0 rd1 sd0 sd1 sd2 tty0 tty1 pty0 pty1
	sh $this st0 st1 ch0 cd0 cd1 vnd0 vnd1 ccd0 ccd1 uk0 uk1 ss0 xfs0
	sh $this ttyv0 ttyv1 ttyv2 ttyv3 ttyv4 ttyv5 ttyv6 ttyv7 ttyv8 ttyv9
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $this lpa0 lpt0 pf tun0 tun1 tun2 random
	sh $this beep lkm quadmouse local cpu0 cpu1 cpu2 cpu3 cpu4 cpu5
	;;

floppy)
	sh $this std fd0 fd1 wd0 wd1 rd0 rd1 sd0 sd1 sd2 tty0 tty1
	sh $this ttyv0 ttyv1 ttyv2 ttyv3 ttyv4 ttyv5
	sh $this st0 st1 cd0 cd1
	;;

std)
	rm -f console drum mem kmem null zero tty klog stdin stdout stderr kbd
	rm -f kbdctl vidcvideo0 vidc iic rtc0
	mknod mem		c 0 0	; chmod 640 mem	; chown root.kmem mem
	mknod kmem		c 0 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod null		c 0 2	; chmod 666 null
	mknod zero		c 0 3	; chmod 666 zero
	mknod drum		c 1 0	; chmod 640 drum ; chown root.kmem drum
	mknod console		c 2 0
	mknod tty		c 3 0	; chmod 666 tty
	mknod klog		c 5 0	; chmod 600 klog
	mknod kbd		c 11 0	; chmod 666 kbd
	mknod kbdctl		c 11 1	; chmod 666 kbdctl
	mknod stdin		c 34 0	; chmod 666 stdin
	mknod stdout		c 34 1	; chmod 666 stdout
	mknod stderr		c 34 2	; chmod 666 stderr
	mknod vidcvideo0	c 37 0	; chmod 640 vidcvideo0
	ln -s vidcvideo0 vidc
	mknod iic		c 42 0	; chmod 600 iic
	mknod rtc0		c 43 0	; chmod 644 rtc0
	;;

ttyv*)
	unit=`expr $i : 'ttyv\(.*\)'`
	rm -f ttyv$unit
	mknod ttyv$unit c 4 $unit
	chown root.wheel ttyv$unit
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 34 %d;", i, i)}'`)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

fd*|sd*|wd*|ccd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	case $i in
	fd*) name=fd; blk=17; chr=17;;
	sd*) name=sd; blk=24; chr=24;;
	wd*) name=wd; blk=16; chr=16;;
	ccd*) name=ccd; blk=21; chr=21;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=19; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + $off + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + $off + 7`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	done
	umask 77
	;;

com*|tty*)					# (XXX -- com should die)
	unit=`expr $i : '...\(.*\)'`
	rm -f com$unit tty0$unit
	mknod tty0$unit c 12 $unit
	chown uucp.dialer tty0$unit
	chmod 660 tty0$unit
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 7 %d;" \
				    "rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
		;;
	esac
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st;  chr=25; blk=25;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
	mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
	mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
	mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
	mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
	mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
	mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
	chown root.operator ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
	chmod 660 ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
	umask 77
	;;

ch*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ch*) name=ch;  chr=27;;
	esac
	rm -f $name$unit
	mknod ${name}${unit}	c $chr $unit
	chown root.operator ${name}${unit}
	chmod 660 ${name}${unit}
	umask 77
	;;

uk*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	uk*) name=uk;  chr=28;;
	esac
	rm -f $name$unit
	mknod ${name}${unit}	c $chr $unit
	chown root.operator ${name}${unit}
	chmod 640 ${name}${unit}
	umask 77
	;;

ss*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ss*) name=ss;  chr=29;;
	esac
	rm -f $name$unit
	mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	chown root.operator ${name}${unit}
	chmod 640 ${name}${unit}
	umask 77
	;;

cd*)
	umask 2 ; unit=`expr $i : '.*cd\(.*\)'`
	case $i in
	cd*) name=cd; blk=26; chr=26;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	umask 77
	;;

rd*)
	unit=`expr $i : 'rd\(.*\)'`
	rm -f rd${unit}
	rm -f rd${unit}c
	mknod rd${unit} b 18 ${unit}
	mknod rd${unit}c c 18 `expr ${unit} + 16`
	chown root.wheel rd${unit}
	chown root.wheel rd${unit}c
	;;

lpa*)
	unit=`expr $i : 'lpa\(.*\)'`
	rm -f lpa$unit
	mknod lpa$unit c 8 `expr $unit + 128`
	chown root.wheel lpa$unit
	;;

lpt*)
	unit=`expr $i : 'lpt\(.*\)'`
	rm -f lpt$unit
	mknod lpt$unit c 8 $unit
	chown root.wheel lpt$unit
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 32 $unit
	chown root.wheel bpf$unit
	;;

pf)
	rm -f pf
	mknod pf c 73 0
	chown root.wheel pf
	chmod 600 pf
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 33 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

beep)
	rm -f beep
	mknod beep c 10 0
	chown root.wheel beep
	;;

lkm)
	rm -f lkm
	mknod lkm c 35 0
	chown root.kmem lkm
	chmod 640 lkm
	;;

quadmouse)
	mknod quadmouse c 9 0
	rm -f mouse
	ln -s quadmouse mouse
	;;

cpu*)
	unit=`expr $i : 'cpu\(.*\)'`
	rm -f cpu$unit
	mknod cpu$unit c 38 $unit
	chown root.wheel cpu$unit
	;;


random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 44 0
	mknod srandom c 44 1
	mknod urandom c 44 2
	mknod prandom c 44 3
	mknod arandom c 44 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh $this.local
	;;

esac
done
@


1.18
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 2000/03/22 07:34:28 niklas Exp $
@


1.17
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1999/08/20 17:00:35 downsj Exp $
d102 1
a102 1
	sh $this lpa0 lpt0 tun0 tun1 tun2 random
d361 7
@


1.16
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1998/11/25 04:58:53 millert Exp $
d274 1
a274 1
	chmod 640 ${name}${unit} n${name}${unit} \
d289 1
a289 1
	chmod 640 ${name}${unit}
@


1.15
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 1998/11/19 08:18:56 dugsong Exp $
d217 2
a218 1
	chown uucp.wheel tty0$unit
@


1.14
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 1998/09/25 11:11:59 todd Exp $
a226 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.13
log
@sync
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 1997/12/08 21:27:38 mickey Exp $
d229 11
d243 1
a243 1
	0|1|2|3|4)
@


1.12
log
@add xfs
@
text
@d99 1
a99 1
	sh $this st0 st1 ch0 cd0 cd1 vnd0 vnd1 ccd0 ccd1 uk0 uk1 ss0
@


1.11
log
@fix chN (N > 0) problem
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 1997/09/16 06:00:54 deraadt Exp $
d30 2
a31 2
#		Tries to make the 'standard' number of each type.
#	floppy	devices to be put on install floppies
d39 2
a40 2
#	wd*	"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
#	fd*	"floppy" disk drives (3 1/2", 5 1/4")
d42 1
a42 1
#	cd*	SCSI CD-ROM
d69 1
a69 1
#	rd	ram disk
d72 2
a73 2
#	fd	file descriptors
#	bpf*	packet filter
d77 1
a77 1
#	ch*	SCSI Auto changer
d79 1
a79 1
#	ss*	SCSI scanner device
d82 1
a82 1
#	*random	random data source
d85 2
a86 1
PATH=/sbin:/usr/sbin:/bin:/usr/bin
d88 1
d91 4
d98 6
a103 6
	sh MAKEDEV std fd fd0 fd1 wd0 wd1 rd0 rd1 sd0 sd1 sd2 tty0 tty1 pty0 pty1
	sh MAKEDEV st0 st1 ch0 cd0 cd1 vnd0 vnd1 ccd0 ccd1 uk0 uk1 ss0
	sh MAKEDEV ttyv0 ttyv1 ttyv2 ttyv3 ttyv4 ttyv5 ttyv6 ttyv7 ttyv8 ttyv9
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV lpa0 lpt0 tun0 tun1 tun2 random
	sh MAKEDEV beep lkm quadmouse local cpu0 cpu1 cpu2 cpu3 cpu4 cpu5
d107 3
a109 3
	sh MAKEDEV std fd0 fd1 wd0 wd1 rd0 rd1 sd0 sd1 sd2 tty0 tty1
	sh MAKEDEV ttyv0 ttyv1 ttyv2 ttyv3 ttyv4 ttyv5
	sh MAKEDEV st0 st1 cd0 cd1
d397 6
d406 1
a406 1
	test -s MAKEDEV.local && sh MAKEDEV.local
@


1.10
log
@10 bpf devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1997/05/14 15:41:09 niklas Exp $
d270 1
a270 1
	mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
@


1.9
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1997/05/13 05:34:50 millert Exp $
d95 2
a96 1
	sh MAKEDEV lpa0 lpt0 bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2 random
@


1.8
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 1996/12/14 18:23:53 millert Exp $
d145 1
a145 1
fd*|sd*|vnd*|wd*|ccd*)
a149 1
	vnd*) name=vnd; blk=19; chr=19;;
d172 31
@


1.7
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.6 1996/09/18 22:03:40 deraadt Exp $
d363 1
a363 1
	sh MAKEDEV.local
@


1.6
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.5 1996/08/28 08:55:22 deraadt Exp $
d140 1
a140 1
	chown -R bin.bin fd
@


1.5
log
@fix all random device node entry stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.4 1996/07/23 06:32:54 etheisen Exp $
d108 2
a109 2
	mknod mem		c 0 0	; chmod 640 mem	; chgrp kmem mem
	mknod kmem		c 0 1	; chmod 640 kmem ; chgrp kmem kmem
d112 1
a112 1
	mknod drum		c 1 0	; chmod 640 drum ; chgrp kmem drum
d171 1
a171 1
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
d222 1
a222 1
	chgrp operator ${name}${unit} n${name}${unit} \
d240 1
a240 1
	chgrp operator ${name}${unit}
d252 1
a252 1
	chgrp operator ${name}${unit}
d264 1
a264 1
	chgrp operator ${name}${unit}
d279 1
a279 1
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.4
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d82 1
a82 1
#	*rnd	random data source
d95 1
a95 1
	sh MAKEDEV lpa0 lpt0 bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2 rnd
d350 9
a358 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 44 0
	mknod srnd c 44 1
	mknod urnd c 44 2
	mknod prnd c 44 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.3
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 1
@


1.2
log
@ad rnd devices.
@
text
@d198 2
a199 2
				printf("rm -f tty%s%x; mknod tty%s%x c 7 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
@


1.1
log
@new arm32 port
@
text
@d81 1
d94 1
a94 1
	sh MAKEDEV lpa0 lpt0 bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2
d348 10
@
