head	1.192;
access;
symbols
	OPENBSD_6_1:1.192.0.4
	OPENBSD_6_1_BASE:1.192
	OPENBSD_6_0:1.187.0.4
	OPENBSD_6_0_BASE:1.187
	OPENBSD_5_9:1.182.0.2
	OPENBSD_5_9_BASE:1.182
	OPENBSD_5_8:1.179.0.4
	OPENBSD_5_8_BASE:1.179
	OPENBSD_5_7:1.178.0.2
	OPENBSD_5_7_BASE:1.178
	OPENBSD_5_6:1.175.0.4
	OPENBSD_5_6_BASE:1.175
	OPENBSD_5_5:1.174.0.4
	OPENBSD_5_5_BASE:1.174
	OPENBSD_5_4:1.167.0.2
	OPENBSD_5_4_BASE:1.167
	OPENBSD_5_3:1.162.0.2
	OPENBSD_5_3_BASE:1.162
	OPENBSD_5_2:1.153.0.2
	OPENBSD_5_2_BASE:1.153
	OPENBSD_5_1_BASE:1.152
	OPENBSD_5_1:1.152.0.2
	OPENBSD_5_0:1.150.0.2
	OPENBSD_5_0_BASE:1.150
	OPENBSD_4_9:1.148.0.2
	OPENBSD_4_9_BASE:1.148
	OPENBSD_4_8:1.145.0.2
	OPENBSD_4_8_BASE:1.145
	OPENBSD_4_7:1.137.0.2
	OPENBSD_4_7_BASE:1.137
	OPENBSD_4_6:1.135.0.4
	OPENBSD_4_6_BASE:1.135
	OPENBSD_4_5:1.130.0.2
	OPENBSD_4_5_BASE:1.130
	OPENBSD_4_4:1.126.0.2
	OPENBSD_4_4_BASE:1.126
	OPENBSD_4_3:1.122.0.4
	OPENBSD_4_3_BASE:1.122
	OPENBSD_4_2:1.122.0.2
	OPENBSD_4_2_BASE:1.122
	OPENBSD_4_1:1.118.0.2
	OPENBSD_4_1_BASE:1.118
	OPENBSD_4_0:1.114.0.2
	OPENBSD_4_0_BASE:1.114
	OPENBSD_3_9:1.113.0.2
	OPENBSD_3_9_BASE:1.113
	OPENBSD_3_8:1.108.0.2
	OPENBSD_3_8_BASE:1.108
	OPENBSD_3_7:1.106.0.2
	OPENBSD_3_7_BASE:1.106
	OPENBSD_3_6:1.100.0.2
	OPENBSD_3_6_BASE:1.100
	OPENBSD_3_5:1.93.0.2
	OPENBSD_3_5_BASE:1.93
	OPENBSD_3_4:1.80.0.2
	OPENBSD_3_4_BASE:1.80
	OPENBSD_3_3:1.78.0.2
	OPENBSD_3_3_BASE:1.78
	OPENBSD_3_2:1.72.0.2
	OPENBSD_3_2_BASE:1.72
	OPENBSD_3_1:1.66.0.2
	OPENBSD_3_1_BASE:1.66
	OPENBSD_3_0:1.23.0.2
	OPENBSD_3_0_BASE:1.23;
locks; strict;
comment	@# @;


1.192
date	2016.09.11.19.59.58;	author deraadt;	state Exp;
branches;
next	1.191;
commitid	nE2mDEOBdUs9pcWt;

1.191
date	2016.09.11.03.09.31;	author deraadt;	state Exp;
branches;
next	1.190;
commitid	5bdWa87DXO6wfavj;

1.190
date	2016.09.08.20.41.30;	author ratchov;	state Exp;
branches;
next	1.189;
commitid	OYpPi53fdbnV5gsb;

1.189
date	2016.09.04.15.39.53;	author naddy;	state Exp;
branches;
next	1.188;
commitid	zStW2v519TMXvpgu;

1.188
date	2016.09.02.17.29.01;	author goda;	state Exp;
branches;
next	1.187;
commitid	jpWYiBSH0Zb5ggN1;

1.187
date	2016.05.21.21.35.52;	author deraadt;	state Exp;
branches;
next	1.186;
commitid	VqgBnfl5n3M9BSSw;

1.186
date	2016.05.21.15.18.50;	author deraadt;	state Exp;
branches;
next	1.185;
commitid	63AnsVd02uEVSedF;

1.185
date	2016.04.28.18.17.31;	author natano;	state Exp;
branches;
next	1.184;
commitid	yJ7nITWQGOm5qxNW;

1.184
date	2016.04.25.20.38.35;	author tedu;	state Exp;
branches;
next	1.183;
commitid	0kiqbjPHHvQxOXM9;

1.183
date	2016.03.12.18.02.18;	author espie;	state Exp;
branches;
next	1.182;
commitid	OOHlYIifEE4gewlK;

1.182
date	2015.11.10.21.50.02;	author sthen;	state Exp;
branches;
next	1.181;
commitid	cbpQoyIQoLnKxXlo;

1.181
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.180;
commitid	xjeR06qiavDtFv9k;

1.180
date	2015.10.23.15.14.47;	author claudio;	state Exp;
branches;
next	1.179;
commitid	D8oDiiCrSjVktjLG;

1.179
date	2015.03.11.18.44.13;	author deraadt;	state Exp;
branches;
next	1.178;
commitid	HFmUOqLhHlo6kb35;

1.178
date	2014.12.11.19.48.39;	author tedu;	state Exp;
branches;
next	1.177;
commitid	2Qyj7V6Rmn8q72sA;

1.177
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.176;
commitid	M66ALjcyb37tQVMc;

1.176
date	2014.08.20.11.23.41;	author mikeb;	state Exp;
branches;
next	1.175;
commitid	vzc4wz1s3pDevb7K;

1.175
date	2014.07.11.22.04.52;	author tedu;	state Exp;
branches;
next	1.174;
commitid	xQhhmJP574n3YeP9;

1.174
date	2014.01.05.01.27.59;	author deraadt;	state Exp;
branches;
next	1.173;

1.173
date	2013.11.21.11.06.09;	author kettenis;	state Exp;
branches;
next	1.172;

1.172
date	2013.11.05.16.06.29;	author deraadt;	state Exp;
branches;
next	1.171;

1.171
date	2013.09.16.08.18.28;	author dcoppa;	state Exp;
branches;
next	1.170;

1.170
date	2013.08.21.15.14.27;	author ajacoutot;	state Exp;
branches;
next	1.169;

1.169
date	2013.08.20.14.30.20;	author ajacoutot;	state Exp;
branches;
next	1.168;

1.168
date	2013.08.08.10.44.27;	author jsg;	state Exp;
branches;
next	1.167;

1.167
date	2013.07.06.17.34.48;	author naddy;	state Exp;
branches;
next	1.166;

1.166
date	2013.07.06.16.15.28;	author naddy;	state Exp;
branches;
next	1.165;

1.165
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.164;

1.164
date	2013.06.15.23.21.02;	author halex;	state Exp;
branches;
next	1.163;

1.163
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.162;

1.162
date	2013.02.12.12.04.21;	author ajacoutot;	state Exp;
branches;
next	1.161;

1.161
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.160;

1.160
date	2012.12.19.21.11.24;	author kettenis;	state Exp;
branches;
next	1.159;

1.159
date	2012.12.19.20.31.03;	author kettenis;	state Exp;
branches;
next	1.158;

1.158
date	2012.12.08.20.40.30;	author kettenis;	state Exp;
branches;
next	1.157;

1.157
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.156;

1.156
date	2012.11.03.22.36.16;	author kettenis;	state Exp;
branches;
next	1.155;

1.155
date	2012.10.20.14.57.02;	author kettenis;	state Exp;
branches;
next	1.154;

1.154
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.153;

1.153
date	2012.04.06.15.32.57;	author jsing;	state Exp;
branches;
next	1.152;

1.152
date	2011.10.22.19.31.41;	author miod;	state Exp;
branches;
next	1.151;

1.151
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.150;

1.150
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.149;

1.149
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.148;

1.148
date	2010.10.08.18.22.19;	author ratchov;	state Exp;
branches;
next	1.147;

1.147
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.146;

1.146
date	2010.09.04.12.18.42;	author miod;	state Exp;
branches;
next	1.145;

1.145
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.144;

1.144
date	2010.07.23.14.36.50;	author mglocker;	state Exp;
branches;
next	1.143;

1.143
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.142;

1.142
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.141;

1.141
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.140;

1.140
date	2010.06.14.14.08.45;	author todd;	state Exp;
branches;
next	1.139;

1.139
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.138;

1.138
date	2010.03.30.19.20.36;	author matthieu;	state Exp;
branches;
next	1.137;

1.137
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.136;

1.136
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.135;

1.135
date	2009.06.03.14.55.47;	author jj;	state Exp;
branches;
next	1.134;

1.134
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.133;

1.133
date	2009.05.12.20.17.09;	author kettenis;	state Exp;
branches;
next	1.132;

1.132
date	2009.04.12.22.19.50;	author kettenis;	state Exp;
branches;
next	1.131;

1.131
date	2009.04.05.17.52.21;	author jmc;	state Exp;
branches;
next	1.130;

1.130
date	2009.02.06.21.18.20;	author grange;	state Exp;
branches;
next	1.129;

1.129
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.128;

1.128
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.127;

1.127
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.126;

1.126
date	2008.06.28.21.48.29;	author mglocker;	state Exp;
branches;
next	1.125;

1.125
date	2008.06.13.21.09.11;	author todd;	state Exp;
branches;
next	1.124;

1.124
date	2008.06.12.20.42.00;	author todd;	state Exp;
branches;
next	1.123;

1.123
date	2008.06.12.18.55.05;	author todd;	state Exp;
branches;
next	1.122;

1.122
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2007.05.28.22.29.57;	author todd;	state Exp;
branches;
next	1.120;

1.120
date	2007.05.27.02.00.20;	author todd;	state Exp;
branches;
next	1.119;

1.119
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.118;

1.118
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.117;

1.117
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.116;

1.116
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.115;

1.115
date	2006.10.10.12.58.03;	author todd;	state Exp;
branches;
next	1.114;

1.114
date	2006.08.28.21.23.34;	author tsi;	state Exp;
branches;
next	1.113;

1.113
date	2005.12.27.19.03.10;	author miod;	state Exp;
branches;
next	1.112;

1.112
date	2005.10.06.06.44.00;	author otto;	state Exp;
branches;
next	1.111;

1.111
date	2005.10.04.18.34.30;	author otto;	state Exp;
branches;
next	1.110;

1.110
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.109;

1.109
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.108;

1.108
date	2005.08.01.22.22.38;	author deraadt;	state Exp;
branches;
next	1.107;

1.107
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.106;

1.106
date	2005.03.01.18.22.57;	author miod;	state Exp;
branches;
next	1.105;

1.105
date	2005.03.01.13.37.10;	author otto;	state Exp;
branches;
next	1.104;

1.104
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.103;

1.103
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.102;

1.102
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.101;

1.101
date	2005.01.10.07.58.01;	author dlg;	state Exp;
branches;
next	1.100;

1.100
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.99;

1.99
date	2004.08.17.20.59.23;	author miod;	state Exp;
branches;
next	1.98;

1.98
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.97;

1.97
date	2004.05.30.08.24.12;	author grange;	state Exp;
branches;
next	1.96;

1.96
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.95;

1.95
date	2004.04.11.18.15.23;	author millert;	state Exp;
branches;
next	1.94;

1.94
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.93;

1.93
date	2004.03.12.04.54.33;	author deraadt;	state Exp;
branches;
next	1.92;

1.92
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.91;

1.91
date	2004.02.16.19.05.06;	author miod;	state Exp;
branches;
next	1.90;

1.90
date	2004.02.14.17.24.59;	author todd;	state Exp;
branches;
next	1.89;

1.89
date	2004.02.13.23.35.04;	author miod;	state Exp;
branches;
next	1.88;

1.88
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.87;

1.87
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.86;

1.86
date	2004.02.05.22.23.31;	author todd;	state Exp;
branches;
next	1.85;

1.85
date	2004.01.12.22.33.10;	author todd;	state Exp;
branches;
next	1.84;

1.84
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.83;

1.83
date	2003.10.15.02.01.25;	author todd;	state Exp;
branches;
next	1.82;

1.82
date	2003.10.14.17.58.50;	author todd;	state Exp;
branches;
next	1.81;

1.81
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.80;

1.80
date	2003.06.18.18.11.08;	author todd;	state Exp;
branches;
next	1.79;

1.79
date	2003.05.21.18.53.00;	author jason;	state Exp;
branches;
next	1.78;

1.78
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	2003.01.06.05.57.40;	author deraadt;	state Exp;
branches;
next	1.76;

1.76
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.75;

1.75
date	2002.12.05.04.33.23;	author kjc;	state Exp;
branches;
next	1.74;

1.74
date	2002.12.05.03.00.27;	author kjc;	state Exp;
branches;
next	1.73;

1.73
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.72;

1.72
date	2002.08.29.23.43.41;	author todd;	state Exp;
branches;
next	1.71;

1.71
date	2002.07.31.16.48.53;	author jason;	state Exp;
branches;
next	1.70;

1.70
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.69;

1.69
date	2002.06.13.02.23.03;	author jason;	state Exp;
branches;
next	1.68;

1.68
date	2002.06.09.05.58.39;	author todd;	state Exp;
branches;
next	1.67;

1.67
date	2002.05.16.21.12.22;	author miod;	state Exp;
branches;
next	1.66;

1.66
date	2002.04.11.20.29.42;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2002.04.10.06.10.05;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.63;

1.63
date	2002.03.15.20.53.05;	author jason;	state Exp;
branches;
next	1.62;

1.62
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.61;

1.61
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.59;

1.59
date	2002.02.21.13.19.07;	author todd;	state Exp;
branches;
next	1.58;

1.58
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.57;

1.57
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.56;

1.56
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.55;

1.55
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.54;

1.54
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.53;

1.53
date	2002.02.14.04.43.09;	author todd;	state Exp;
branches;
next	1.52;

1.52
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.51;

1.51
date	2002.02.10.21.56.04;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2002.02.10.21.53.03;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2002.02.09.17.01.41;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2002.02.08.20.54.35;	author todd;	state Exp;
branches;
next	1.47;

1.47
date	2002.01.31.22.37.31;	author jason;	state Exp;
branches;
next	1.46;

1.46
date	2002.01.31.21.35.16;	author jason;	state Exp;
branches;
next	1.45;

1.45
date	2002.01.28.21.11.49;	author jason;	state Exp;
branches;
next	1.44;

1.44
date	2002.01.23.08.23.19;	author todd;	state Exp;
branches;
next	1.43;

1.43
date	2002.01.23.07.54.42;	author todd;	state Exp;
branches;
next	1.42;

1.42
date	2002.01.23.06.21.20;	author todd;	state Exp;
branches;
next	1.41;

1.41
date	2002.01.13.02.07.28;	author jason;	state Exp;
branches;
next	1.40;

1.40
date	2002.01.12.21.26.14;	author jason;	state Exp;
branches;
next	1.39;

1.39
date	2002.01.12.21.15.28;	author jason;	state Exp;
branches;
next	1.38;

1.38
date	2002.01.12.21.09.14;	author jason;	state Exp;
branches;
next	1.37;

1.37
date	2002.01.08.05.29.13;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	2002.01.08.03.28.59;	author todd;	state Exp;
branches;
next	1.35;

1.35
date	2002.01.07.22.07.12;	author todd;	state Exp;
branches;
next	1.34;

1.34
date	2002.01.07.07.57.12;	author todd;	state Exp;
branches;
next	1.33;

1.33
date	2002.01.07.07.21.53;	author todd;	state Exp;
branches;
next	1.32;

1.32
date	2002.01.07.06.26.20;	author todd;	state Exp;
branches;
next	1.31;

1.31
date	2002.01.07.06.14.38;	author todd;	state Exp;
branches;
next	1.30;

1.30
date	2002.01.04.16.59.38;	author todd;	state Exp;
branches;
next	1.29;

1.29
date	2002.01.04.16.16.36;	author todd;	state Exp;
branches;
next	1.28;

1.28
date	2002.01.04.16.15.01;	author todd;	state Exp;
branches;
next	1.27;

1.27
date	2002.01.04.16.00.23;	author todd;	state Exp;
branches;
next	1.26;

1.26
date	2002.01.04.09.37.30;	author todd;	state Exp;
branches;
next	1.25;

1.25
date	2001.11.16.20.52.18;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	2001.10.29.19.33.39;	author todd;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.21.17.58.56;	author todd;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.20.21.31.35;	author todd;	state Exp;
branches;
next	1.21;

1.21
date	2001.09.20.04.12.07;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2001.09.19.02.18.50;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2001.09.18.20.38.19;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2001.09.07.19.26.03;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2001.09.07.16.53.50;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	2001.09.07.16.49.03;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2001.09.06.20.58.55;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2001.09.05.15.01.53;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2001.09.05.14.42.14;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2001.09.05.14.31.51;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.05.14.26.45;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.05.13.51.50;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.05.13.45.30;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.04.21.25.17;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.04.20.49.08;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.04.20.16.46;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.04.19.17.06;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.04.19.14.04;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.04.18.53.36;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.04.17.53.16;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.04.16.15.05;	author todd;	state Exp;
branches;
next	;


desc
@@


1.192
log
@sync
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.86 2016/09/04 15:38:59 naddy Exp 
#	OpenBSD: MAKEDEV.common,v 1.93 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.83 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	cua[a-z]*	Zilog 8530 serial port
#	magma*	Magma multiport cards
#	spif*	"spif" multiport cards
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	tty[a-z]*	Zilog 8530 serial port
#	ttyh*	Sab82532 serial devices
#	ttyV*	Virtual console concentrator
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	console	PROM console
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Printers:
#	bpp*	Parallel port
#	bpp[jkl]	"spif" parallel port
#	bppmag[mno]	Magma parallel port
#	lpa*	Polled printer port
#	lpt*	IEEE 1284 centronics printer
# USB devices:
#	ttyU*	USB serial ports
#	uall	All USB devices
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	usb*	Bus control devices used by usbd for attach/detach
# Special purpose devices:
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	drm*	Direct Rendering Manager
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	hotplug	devices hot plugging
#	openprom	PROM settings
#	pci*	PCI bus devices
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	rmidi*	Raw MIDI devices
#	*random	In-kernel random data source
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	uk*	Unknown SCSI devices
#	uperf	Performance counters
#	video*	Video V4L2 devices
#	vscsi*	Virtual SCSI controller
#	hvctl	Hypervisor control channel
#	spds	Service processor domain services channel
#	ldom*	Logical domain services channels
#	vdsp*	Virtual disk server ports
#	switch*	Switch driver
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std fd0 wd0 wd1 wd2 sd0 sd1 sd2 rd0
	R st0 cd0 bpf bio diskmap random
	;;

std)
	M console	c 0 0 600
	M tty		c 2 0
	M mem		c 3 0 640 kmem
	M kmem		c 3 1 640 kmem
	M null		c 3 2
	M zero		c 3 12
	M stdin		c 24 0
	M stdout	c 24 1
	M stderr	c 24 2
	M ksyms		c 76 0 640 kmem
	M klog		c 16 0 600
	M openprom	c 70 0 600
	M mdesc		c 70 1 640 kmem
	;;

switch*)
	M switch$U c 136 $U 600
	;;

vdsp*)
	M vdsp$U c 133 $U 600
	;;

ldom*)
	M ldom$U c 132 $(($U+32)) 600
	;;

spds)
	M spds c 132 1 600
	;;

hvctl)
	M hvctl c 132 0 600
	;;

vscsi*)
	M vscsi$U c 128 $U 600
	;;

video*)
	M video$U  c 44 $U 600
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uperf)
	M uperf c 25 0 664
	;;

uk*)
	M uk$U c 60 $U 640 operator
	;;

tap*)
	M tap$U c 135 $U 600
	;;

tun*)
	M tun$U c 111 $U 600
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 119 $n 644
		n=$(($n+1))
	done
	;;

rmidi*)
	M rmidi$U c 68 $U 666
	;;

pppx*)
	M pppx$U c 131 $U 600
	;;

pf*)
	M pf c 73 0 600
	;;

pci*)
	M pci$U	c 52 $U 600
	MKlist[${#MKlist[*]}]=";[ -h pci ] || ln -sf pci0 pci"
	;;

openprom)
	M openprom c 70 0  
	;;

hotplug)
	M hotplug c 124 $U 400
	;;

fuse)
	M fuse$U c 134 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

drm*)
	M drm$U c 87 $U 600
	;;

diskmap)
	M diskmap c 130 0 640 operator
	;;

bpf)
	M bpf c 105 0 600
	M bpf0 c 105 0 600
	;;

bio)
	M bio c 120 0 600
	;;

audio*)
	M audio$U	c 69 $U
	M mixer$U	c 69 $(($U+16))
	M audioctl$U	c 69 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 90 $U 660
	;;

ulpt*)
	M ulpt$U c 93 $U 660
	;;

uhid*)
	M uhid$U c 91 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 92 $(($n+10#$j)) 660
	done
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ugen2 ugen3 ugen4 ugen5
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 usb0 usb1
	R usb2 usb3 usb4 usb5 usb6 usb7
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 95 $o 660 dialer root
	M cuaU$U c 95 $(($o+128)) 660 dialer root
	;;

lpt*|lpa*)
	case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c 37 $(($U+$f)) 600
	;;

bpp*)
	M bpp$U c 107 $U 600
	;;

wsmouse[0-9]*)
	M wsmouse$U c 80 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 81 0 600
	M wskbd c 81 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 79 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyJcfg ttyJ0 ttyJ1 ttyJ2 ttyJ3 ttyJ4 ttyJ5
	R ttyJ6 ttyJ7 ttyJ8 ttyJ9 ttyJa ttyJb ttyIcfg ttyI0 ttyI1
	R ttyI2 ttyI3 ttyI4 ttyI5 ttyI6 ttyI7 ttyI8 ttyI9 ttyIa ttyIb
	R ttyHcfg ttyH0 ttyH1 ttyH2 ttyH3 ttyH4 ttyH5 ttyH6 ttyH7
	R ttyH8 ttyH9 ttyHa ttyHb ttyGcfg ttyG0 ttyG1 ttyG2 ttyG3
	R ttyG4 ttyG5 ttyG6 ttyG7 ttyG8 ttyG9 ttyGa ttyGb ttyFcfg
	R ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5 ttyF6 ttyF7 ttyF8 ttyF9
	R ttyFa ttyFb ttyEcfg ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5
	R ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb ttyDcfg ttyD0 ttyD1
	R ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb
	R ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7
	R ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 78 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 78 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 20 $(($off+$n))
		M pty$nam c 21 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 123 0 666
	;;

ttyV[0-9a-zA-Z])
	U=${i#ttyV*}
	o=$(alph2d $U)
	M ttyV$U c 127 $o 600
	;;

ttyh*)
	M ttyh$U c 77 $U 660 dialer root
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 12 $n 660 dialer root
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 36 $o 660 dialer root
	M cua$U c 36 $(($o+128)) 660 dialer root
	;;

spif*)
	case $U in
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 8 ]
	do
		name=${nam}`hex $n`
		M tty$name c 108 $(($offset+$n)) 660 dialer root
		n=$(($n+1))
	done
	M bpp${nam}0 c 109 $(($offset+0)) 600
	;;

magma*)
	case $U in
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 16 ]
	do
		name=${nam}`hex $n`
		M tty$name c 71 $(($offset+$n)) 660 dialer root
		n=$(($n+1))
	done
	M bpp${nam}0 c 72 $(($offset+0)) 600
	M bpp${nam}1 c 72 $(($offset+1)) 600
	;;

cua[a-z])
	u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown cua device $i ;;
	esac
	M cua$u c 12 $(($n+128)) 660 dialer root
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}rst$U	c 18 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 19 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 8 110 $U 0
	;;

rd*)
	dodisk2 rd $U 5 61 $U 0
	;;

fd*)
	typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=16; chr=54;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=$(($(($U*128))+$(($typnum*16))))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk $(($n+1)) 640 operator
	M ${nam}c	b $blk $(($n+2)) 640 operator
	M ${nam}i	b $blk $(($n+8)) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr $(($n+1)) 640 operator
	M r${nam}c	c $chr $(($n+2)) 640 operator
	M r${nam}i	c $chr $(($n+8)) 640 operator
	;;

cd*)
	dodisk2 cd $U 18 58 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R vdsp0 vdsp1 vdsp2 vdsp3 vdsp4 vdsp5 vdsp6 vdsp7 vdsp8 vdsp9
	R vdsp10 vdsp11 vdsp12 vdsp13 vdsp14 vdsp15 ldom0 ldom1 ldom2
	R ldom3 ldom4 ldom5 ldom6 ldom7 spds hvctl ttyV0 ttyV1 ttyV2
	R ttyV3 ttyV4 ttyV5 ttyV6 ttyV7 cuaa cuab cuac cuad ttya ttyb
	R ttyc ttyd switch0 switch1 switch2 switch3 drm0 drm1 drm2
	R drm3 bpp0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6
	R sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2
	R tun3 bio pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 audio0
	R audio1 audio2 bpf fuse pppx hotplug ptm local wscons pci0
	R pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 video0 video1 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03 tty04 tty05 tty06
	R tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 pf wd0 wd1 wd2 wd3
	R std st0 st1 fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 12 26 $U 0;;
	sd*) dodisk sd $U 7 17 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
@


1.191
log
@sync
@
text
@d393 2
a394 2
	M ttyU$U c 95 $o 660 dialer uucp
	M cuaU$U c 95 $(($o+128)) 660 dialer uucp
d490 1
a490 1
	M ttyh$U c 77 $U 660 dialer uucp
d502 1
a502 1
	M tty$u c 12 $n 660 dialer uucp
d508 2
a509 2
	M tty$U c 36 $o 660 dialer uucp
	M cua$U c 36 $(($o+128)) 660 dialer uucp
d524 1
a524 1
		M tty$name c 108 $(($offset+$n)) 660 dialer uucp
d542 1
a542 1
		M tty$name c 71 $(($offset+$n)) 660 dialer uucp
d558 1
a558 1
	M cua$u c 12 $(($n+128)) 660 dialer uucp
@


1.190
log
@sync after /dev/sound* removal
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.92 2016/09/08 20:39:28 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
d659 1
a659 1
        cat
@


1.189
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.91 2016/09/04 15:38:59 naddy Exp 
d355 1
a355 1
	M sound$U	c 69 $U
a356 1
	M audio$U	c 69 $(($U+128))
a359 1
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
@


1.188
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.85 2016/09/02 17:06:14 goda Exp 
#	OpenBSD: MAKEDEV.common,v 1.90 2016/09/02 17:06:13 goda Exp 
a566 1
		M ${pre}st$U	b 11 $n 660 operator
@


1.187
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.84 2016/04/28 18:17:31 natano Exp 
#	OpenBSD: MAKEDEV.common,v 1.88 2016/05/21 15:17:49 deraadt Exp 
d100 1
d248 4
d273 1
a273 1
	M video$U  c 44 $U 600 
d628 11
a638 10
	R ttyc ttyd drm0 drm1 drm2 drm3 bpp0 vnd0 vnd1 vnd2 vnd3 sd0
	R sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1
	R tap2 tap3 tun0 tun1 tun2 tun3 bio pty0 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R diskmap vscsi0 ch0 audio0 audio1 audio2 bpf fuse pppx
	R hotplug ptm local wscons pci0 pci1 pci2 pci3 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 video0
	R video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01
	R tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b
	R ttyh0 ttyh1 pf wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.186
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.87 2016/04/28 18:17:30 natano Exp 
d268 1
a268 1
	M video$U  c 44 $U
@


1.185
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.83 2016/04/25 20:38:11 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
@


1.184
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d78 1
a78 1
#	bpf*	Berkeley Packet Filter
d228 1
a228 1
	R st0 cd0 bpf0 bio diskmap random
d340 3
a342 2
bpf*)
	M bpf$U c 105 $U 600
d625 8
a632 9
	R tap2 tap3 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 ch0 audio0 audio1 audio2 fuse pppx hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 video0 video1 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03 tty04 tty05
	R tty06 tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 pf wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.183
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.82 2015/10/23 15:14:12 claudio Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a89 1
#	systrace*	System call tracing device
a287 4
systrace)
	M systrace c 50 0 644
	;;

d631 2
a632 2
	R tty06 tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.182
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d192 2
a193 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.181
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
@


1.180
log
@Sync (after tap addition)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
@


1.179
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.80 2014/12/11 19:48:03 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d92 1
d280 4
d627 10
a636 10
	R sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1
	R tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8
	R bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B
	R fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 audio0
	R audio1 audio2 fuse pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07
	R tty08 tty09 tty0a tty0b ttyh0 ttyh1 pf systrace wd0 wd1 wd2
	R wd3 std st0 st1 fd
@


1.178
log
@regen
@
text
@d242 1
a242 1
	M openprom	c 70 0 640 kmem
@


1.177
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.79 2014/10/09 04:37:43 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.77 2014/10/09 04:33:50 tedu Exp 
a73 1
#	urio*	Diamond Multimedia Rio 500
a362 4
urio*)
	M urio$U c 94 $U 660
	;;

d381 2
a382 2
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 urio0 usb0
	R usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.176
log
@Remove userland bits related to the crypto(4) interface;  ok deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.77 2014/07/11 22:04:09 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
a84 1
#	lkm	Loadable kernel modules interface
a317 4
lkm)
	M lkm c 112 0 640 _lkm
	;;

d634 3
a636 3
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 tty04 tty05 tty06
	R tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.175
log
@regen
@
text
@a79 1
#	crypto	Hardware crypto access driver
a344 4
crypto)
	M crypto c 75 0
	;;

d640 1
a640 1
	R tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 crypto pf systrace
@


1.174
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.76 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
a79 1
#	bthub*	Bluetooth Hubs
a349 4
bthub*)
	M bthub$U c 129 $U
	;;

d636 11
a646 11
	R ttyc ttyd drm0 drm1 drm2 drm3 bthub0 bthub1 bthub2 bpp0 vnd0
	R vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0
	R cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 ch0 audio0 audio1 audio2 fuse pppx hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 video0 video1 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 tty04
	R tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 crypto
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.173
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.75 2013/08/21 15:12:50 ajacoutot Exp 
d231 1
a231 1
	R st0 cd0 bpf0 bio diskmap
@


1.172
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
d340 1
a340 1
	M drm$U c 87 $U 660
@


1.171
log
@regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.71 2013/09/16 08:17:02 dcoppa Exp 
@


1.170
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.74 2013/08/08 10:39:29 jsg Exp 
#	OpenBSD: MAKEDEV.common,v 1.69 2013/08/20 14:27:24 ajacoutot Exp 
d400 3
a402 2
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.169
log
@regen
@
text
@a75 1
uscan_dev
@


1.168
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.68 2013/07/06 17:33:44 naddy Exp 
d76 1
a76 1
#	uscanner*	Scanners
a374 4
uscanner*)
	M uscanner$U c 96 $U 660
	;;

d402 1
a402 2
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.167
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.73 2013/06/03 16:06:42 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
d84 1
d340 4
d646 11
a656 11
	R ttyc ttyd bthub0 bthub1 bthub2 bpp0 vnd0 vnd1 vnd2 vnd3 sd0
	R sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1
	R tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8
	R bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B
	R fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 audio0
	R audio1 audio2 fuse pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 tty04 tty05 tty06
	R tty07 tty08 tty09 tty0a tty0b ttyh0 ttyh1 crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.166
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d650 2
a651 2
	R tty07 ttyh0 ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.165
log
@regen
@
text
@d649 3
a651 2
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.164
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d85 1
a85 1
#	fuse*	Userland Filesystem
d329 1
a329 1
fuse*)
d646 5
a650 5
	R audio1 audio2 fuse0 fuse1 fuse2 fuse3 pppx hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 video0 video1 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0
	R ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.163
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d85 1
a85 1
#	fuse	Userland Filesystem
d329 1
a329 1
fuse)
d646 5
a650 5
	R audio1 audio2 fuse pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.162
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.72 2013/02/12 12:03:57 ajacoutot Exp 
#	OpenBSD: MAKEDEV.common,v 1.61 2013/01/30 01:59:20 yasuoka Exp 
d85 1
d329 4
d646 4
a649 4
	R audio1 audio2 pppx hotplug ptm local wscons pci0 pci1 pci2
	R pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
@


1.161
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.71 2012/12/19 21:10:16 kettenis Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d632 14
a645 12
	R vdsp0 vdsp1 vdsp2 vdsp3 vdsp4 vdsp5 vdsp6 vdsp7 ldom0 ldom1
	R ldom2 ldom3 spds hvctl ttyV0 ttyV1 ttyV2 ttyV3 cuaa cuab
	R cuac cuad ttya ttyb ttyc ttyd bthub0 bthub1 bthub2 bpp0 vnd0
	R vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0
	R cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 ch0 audio0 audio1 audio2 pppx hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 video0 video1 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0
	R ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.160
log
@regen
@
text
@d639 5
a643 5
	R vscsi0 ch0 audio0 audio1 audio2 hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 video0 video1 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.159
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.70 2012/12/19 20:30:23 kettenis Exp 
d49 1
a49 1
#	ttyV*	virtual console concentrator
d99 4
a102 4
#	hvctl	hypervisor control channel
#	spds	service processor domain services channel
#	ldom*	logical domain services channels
#	vdsp*	virtual disk server ports
@


1.158
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.69 2012/12/08 20:40:04 kettenis Exp 
d99 3
a246 6
	M hvctl		c 132 0 600
	M spds		c 132 1 600
	M ldom0		c 132 32 600
	M ldom1		c 132 33 600
	M ldom2		c 132 34 600
	M ldom3		c 132 35 600
d253 12
d632 12
a643 12
	R vdsp0 vdsp1 vdsp2 vdsp3 vdsp4 vdsp5 vdsp6 vdsp7 ttyV0 ttyV1
	R ttyV2 ttyV3 cuaa cuab cuac cuad ttya ttyb ttyc ttyd bthub0
	R bthub1 bthub2 bpp0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 video0 video1 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyh0 ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.157
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.68 2012/11/03 22:35:40 kettenis Exp 
d99 1
d252 4
d623 12
a634 11
	R ttyV0 ttyV1 ttyV2 ttyV3 cuaa cuab cuac cuad ttya ttyb ttyc
	R ttyd bthub0 bthub1 bthub2 bpp0 vnd0 vnd1 vnd2 vnd3 sd0 sd1
	R sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 audio0 audio1
	R audio2 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf systrace wd0
	R wd1 wd2 wd3 std st0 st1 fd
@


1.156
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d198 1
a198 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d202 1
a202 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d206 1
a206 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d210 1
a210 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.155
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.67 2012/10/20 14:56:17 kettenis Exp 
d245 4
@


1.154
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.66 2012/08/23 06:15:28 deraadt Exp 
d243 2
@


1.153
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.65 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a86 1
#	nnpfs*	NNPFS filesystem node
a299 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d617 3
a619 3
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ch0 audio0
	R audio1 audio2 hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.152
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.64 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
a34 1
#	raid*	RAIDframe disk devices
d627 1
a627 1
	R wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
d630 1
a630 1
wd*|sd*|raid*)
a633 1
	raid*) dodisk raid $U 25 121 $U 0;;
@


1.151
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.63 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d623 6
a628 7
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ch0 hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 video0 video1
	R audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.150
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.62 2010/10/08 18:21:34 ratchov Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d623 7
a629 7
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ch0 ccd0 ccd1
	R ccd2 ccd3 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R video0 video1 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
d632 1
a632 1
wd*|sd*|raid*|ccd*)
a636 1
	ccd*) dodisk ccd $U 9 23 $U 0;;
@


1.149
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.148
log
@regen
@
text
@a573 1
	dodisk svnd $U 8 110 $U 2048
@


1.147
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.61 2010/09/30 15:27:54 claudio Exp 
d94 1
d282 4
d627 1
@


1.146
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.59 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d93 1
d279 4
@


1.145
log
@regen
@
text
@d45 3
a48 1
#	cua[a-z]*	Zilog 8530 serial port
a49 1
#	spif*	"spif" multiport cards
d58 1
a59 1
#	ttyC-J*	wscons display devices
d66 1
a67 1
#	bpp[jkl]	"spif" parallel port
d71 1
a72 1
#	ttyU*	USB serial ports
d83 1
d85 1
d89 1
a90 1
#	magma*	Magma multiport cards
a98 1
#	nnpfs*	NNPFS filesystem node
a99 2
#	bthub*	Bluetooth Hubs
#	diskmap	Disk mapper
a245 8
diskmap)
	M diskmap c 130 0 640 operator
	;;

bthub*)
	M bthub$U c 129 $U
	;;

a249 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d289 2
a290 17
magma*)
	case $U in
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 16 ]
	do
		name=${nam}`hex $n`
		M tty$name c 71 $(($offset+$n)) 660 dialer uucp
		n=$(($n+1))
	done
	M bpp${nam}0 c 72 $(($offset+0)) 600
	M bpp${nam}1 c 72 $(($offset+1)) 600
d293 2
a294 2
openprom)
	M openprom c 70 0  
d311 4
d319 4
d371 6
a383 6
uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
	;;

d409 16
a443 16
wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyJcfg ttyJ0 ttyJ1 ttyJ2 ttyJ3 ttyJ4 ttyJ5
	R ttyJ6 ttyJ7 ttyJ8 ttyJ9 ttyJa ttyJb ttyIcfg ttyI0 ttyI1
	R ttyI2 ttyI3 ttyI4 ttyI5 ttyI6 ttyI7 ttyI8 ttyI9 ttyIa ttyIb
	R ttyHcfg ttyH0 ttyH1 ttyH2 ttyH3 ttyH4 ttyH5 ttyH6 ttyH7
	R ttyH8 ttyH9 ttyHa ttyHb ttyGcfg ttyG0 ttyG1 ttyG2 ttyG3
	R ttyG4 ttyG5 ttyG6 ttyG7 ttyG8 ttyG9 ttyGa ttyGb ttyFcfg
	R ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5 ttyF6 ttyF7 ttyF8 ttyF9
	R ttyFa ttyFb ttyEcfg ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5
	R ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb ttyDcfg ttyD0 ttyD1
	R ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb
	R ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7
	R ttyC8 ttyC9 ttyCa ttyCb
	;;

d480 19
d517 6
a522 8
tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown tty device $i ;;
d524 10
a533 1
	M tty$u c 12 $n 660 dialer uucp
a545 7
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 36 $o 660 dialer uucp
	M cua$U c 36 $(($o+128)) 660 dialer uucp
@


1.144
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d400 1
@


1.143
log
@sync
@
text
@d616 4
a619 4
	R video0 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.142
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.141
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.58 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a90 1
#	ss*	SCSI scanners
a282 8
ss*)
	M ss$U c 59 $(($U*16)) 640 operator
	M nss$U c 59 $(($(($U*16))+1)) 640 operator
	M enss$U c 59 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d614 6
a619 6
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ss0 ss1 ch0
	R ccd0 ccd1 ccd2 ccd3 hotplug ptm local wscons pci0 pci1 pci2
	R pci3 uall video0 audio0 audio1 audio2 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.140
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.57 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d228 1
a228 1
	R st0 cd0 bpf0 bio
@


1.139
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d248 1
a248 1
	M diskmap b 130 0 640 operator
@


1.138
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.56 2010/03/30 19:16:09 matthieu Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d100 1
d247 4
d623 6
a628 6
	R fd0D fd0E fd0F fd0G fd0H vscsi0 nnpfs0 ss0 ss1 ch0 ccd0 ccd1
	R ccd2 ccd3 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.137
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.55 2009/08/13 15:12:36 deraadt Exp 
d99 1
d246 4
d614 10
a623 9
	R ttyd bpp0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6
	R sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H vscsi0 nnpfs0 ss0 ss1 ch0 ccd0 ccd1 ccd2 ccd3 hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall video0 audio0
	R audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf systrace wd0
	R wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.136
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d413 1
a413 1
wsmouse*)
d422 1
a422 1
wskbd*)
@


1.135
log
@Sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.54 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d98 1
d245 4
d613 5
a617 5
	R fd0H nnpfs0 ss0 ss1 ch0 ccd0 ccd1 ccd2 ccd3 hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall video0 audio0 audio1
	R audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyh0 ttyh1 crypto pf systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.134
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.53 2009/05/12 20:15:21 kettenis Exp 
#	OpenBSD: MAKEDEV.common,v 1.42 2009/04/05 17:49:14 jmc Exp 
d608 5
a612 5
	R fd0H nnpfs0 ss0 ss1 ch0 ccd0 ccd1 ccd2 ccd3 hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall video0 audio0 audio1 audio2
	R uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01
	R tty02 tty03 ttyh0 ttyh1 crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.133
log
@regen
@
text
@d97 1
a97 1
#	xfs*	XFS filesystem node
d244 2
a245 2
xfs*)
	M xfs$U c 51 $U 600
d608 1
a608 1
	R fd0H xfs0 ss0 ss1 ch0 ccd0 ccd1 ccd2 ccd3 hotplug ptm local
@


1.132
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.52 2009/04/12 22:18:50 kettenis Exp 
d50 1
d482 6
d603 10
a612 10
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd bpp0 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ccd0
	R ccd1 ccd2 ccd3 hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall video0 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.131
log
@regen;
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.51 2009/02/06 21:17:15 grange Exp 
d240 1
@


1.130
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d95 1
a95 1
#	video*	Video V4L devices
@


1.129
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.50 2009/01/25 17:30:48 miod Exp 
d596 9
a604 8
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ccd0 ccd1 ccd2 ccd3 hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall video0 audio0
	R audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf systrace wd0
	R wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.128
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.49 2008/06/28 21:46:05 mglocker Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a237 1
	M drum		c 7 0 640 kmem
@


1.127
log
@sync
@
text
@d601 4
a604 4
	R ptm local wscons pci0 pci1 pci2 pci3 uall video0 audio0 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyh0 ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.126
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
d278 1
a278 1
	for pre in " " s u p a
@


1.125
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.47 2008/06/13 21:07:28 todd Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
a76 1
#	video*	Video V4L devices
d95 1
d247 5
a351 5
	;;

video*)
	M video$U  c 44 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
@


1.124
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.46 2008/06/12 20:39:29 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d224 1
a224 1
	R st0 cd0 bpf0
@


1.123
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.45 2008/06/12 18:52:46 todd Exp 
d77 1
d349 5
d601 4
a604 4
	R ptm local wscons pci0 pci1 pci2 pci3 uall audio0 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyh0 ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1
	R raid2 raid3 std st0 st1 fd
@


1.122
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.44 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d223 1
a223 1
	R st0 cd0 bpf0 random
@


1.121
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.120
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.43 2007/05/27 01:50:36 todd Exp 
d80 1
d334 4
d592 1
a592 1
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3
@


1.119
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.42 2007/05/26 19:54:23 todd Exp 
a79 1
#	bio	ioctl tunnel pseudo-device
a332 4
bio)
	M bio c 4 0 600
	;;

d587 1
a587 1
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio
@


1.118
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.41 2006/08/28 21:04:04 tsi Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d80 1
d334 4
d592 1
a592 1
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3
@


1.117
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
d284 1
a284 1
	MKlist[${#MKlist[*]}]=";[ -e pci ] || ln -s pci0 pci"
@


1.116
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
d569 1
d573 1
@


1.115
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.30 2006/10/10 12:33:41 todd Exp 
d86 1
a86 1
#	pci	PCI bus device
d282 3
a284 2
pci)
	M pci c 52 0 600
d588 4
a591 4
	R ptm local wscons pci uall audio0 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.114
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
d379 2
a380 2
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
@


1.113
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.38 2005/08/01 22:22:13 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d57 1
a57 1
#	ttyC-F*	wscons display devices
d408 2
a409 2
tty[C-F]*)
	U=${i##tty[C-F]}
d415 4
d429 12
a440 6
	R wskbd3 wsmux ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5
	R ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg ttyE0 ttyE1
	R ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb
	R ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7
	R ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3
	R ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.112
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d56 1
a56 1
#	ttyC0	Minimal wscons devices
d81 1
a81 1
#	fd	fd/* nodes for fdescfs
@


1.111
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d183 1
a183 2
RMlist="rm -f"
MKlist=":"
d186 1
a186 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d190 1
a190 1
	RMlist="$RMlist $1"
d194 1
a194 1
		MKlist="$MKlist;chown $7:$G $1"
d197 10
a206 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a207 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d265 2
a266 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d318 1
a318 1
	RMlist="mkdir -p fd;$RMlist" n=0
d320 1
a320 1
	MKlist="$MKlist;chmod 555 fd"
d336 4
a339 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d599 8
a606 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d608 1
a608 1
	echo "$list" | sh
@


1.110
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d166 1
a166 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.109
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a162 1
	RMlist="$RMlist $1$2? r$1$2?"
d166 2
a167 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a169 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.108
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a199 1
	mklist="$mklist $1"
@


1.107
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.37 2005/03/01 18:22:34 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
a88 1
#	ses*	SES/SAF-TE SCSI devices
a274 4
ses*)
	M ses$U c 4 $U 640 operator
	;;

d582 5
a586 5
	R fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 ccd0 ccd1 ccd2 ccd3
	R hotplug ptm local wscons pci uall audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0
	R ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
@


1.106
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.105
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.36 2004/08/17 20:58:10 miod Exp 
d48 1
d63 3
a79 3
#	bpp*	Parallel port
#	bppmag[mno]	Magma parallel port
#	bpp[jkl]	"spif" parallel port
a89 1
#	spif*	"spif" multiport cards
a275 18
spif*)
	case $U in
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 8 ]
	do
		name=${nam}`hex $n`
		M tty$name c 108 $(($offset+$n)) 660 dialer uucp
		n=$(($n+1))
	done
	M bpp${nam}0 c 109 $(($offset+0)) 600
	;;

a337 4
bpp*)
	M bpp$U c 107 $U 600
	;;

d402 4
d472 18
@


1.104
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
d413 1
a413 1
	R uscanner0 urio0 usb0 usb1 usb2 usb3
@


1.103
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.102
log
@sync
@
text
@d117 1
a117 1
	local t="$1"  
@


1.101
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d398 1
a398 1
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d400 1
a400 1
		M ugen$U.$j c 92 $(($n+$j)) 660
d446 1
a446 1
	[0-9a-f]) M tty$n$U c 78 $(( 16#$U + $m )) 600;;
@


1.100
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
d408 1
@


1.99
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.11 2004/08/17 20:58:05 miod Exp 
d93 1
a93 1
#	uk*	SCSI unknown devices
@


1.98
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.35 2004/05/30 08:17:18 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d83 1
d332 4
@


1.97
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.96
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.34 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
d81 1
d337 4
d581 5
a585 5
	R fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 ccd0 ccd1 ccd2 ccd3 ptm
	R local wscons pci uall audio0 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.95
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
d402 1
a402 1
	R uscanner0 urio0 usb0 usb1
@


1.94
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d51 2
a52 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.93
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.33 2004/03/12 04:54:05 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d51 2
a52 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d456 6
a461 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d463 1
a463 1
	while [ $n -lt 16 ]
d465 2
a466 2
		nam=$name$(hex $n)
		off=$(($U*16))
d574 7
a580 7
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1
	R pty2 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C
	R fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 ccd0 ccd1
	R ccd2 ccd3 ptm local wscons pci uall audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0
	R ttyh1 crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
@


1.92
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.32 2004/02/20 19:13:08 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
d65 1
a65 1
#	usbs	All USB devices
d400 1
a400 1
usbs)
d573 1
a573 1
	R ccd2 ccd3 ptm local wscons pci usbs audio0 uk0 random lpa0
@


1.91
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.31 2004/02/16 19:01:02 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d38 1
a38 1
#	sd*	SCSI disks
d46 2
a47 2
#	cua[a-z]*	Zilog 8530 Serial Port
#	tty[a-z]*	Zilog 8530 Serial Port
@


1.90
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.30 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 6
#	ramdisk	devices to be put on ramdisk-based media
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tapes
#	ch*	SCSI media changer
d33 2
a34 1
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
d36 2
d39 14
a52 5
#	cd*	SCSI cdrom drives
#	vnd*	"file" pseudo-disks
#	rd*	"rd" pseudo-disks
#	ccd*	concatenated disk devices
#	raid*	RAIDframe disk devices
d54 3
a56 2
#	ttyC0	wscons screen 0
#	ttyC-F*	wscons virtual consoles
a58 1
#	console	PROM console
a59 1
#	mouse	mouse (provides events, for X11)
a60 9
# Terminal ports:
#	tty[a-z]*	Zilog 8530 Serial Port
#	cua[a-z]*	Zilog 8530 Serial Port
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	ttyh*	Sab82532 serial devices
# Pseudo terminals:
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
#	ptm	pty master device
d62 1
a63 1
#	lpa*	interruptless lp
d65 3
a67 1
#	usb*	Bus control devices used by usbd for attach/detach
a68 1
#	ugen*	Generic device
d71 1
a71 1
#	ttyU*	Serial ports
d74 12
a85 1
#	usbs	make USB devices
d87 1
a87 2
#	fd	makes fd/* for the fdescfs
#	xfs*	XFS filesystem devices
d89 5
a93 16
#	uk*	SCSI Unknown device
#	audio*	audio device
#	pf*	Packet Filter
#	bpf*	Berkeley Packet Filter
#	tun*	network tunnel driver
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	magma*	magma card (makes 16 tty and 2 bpp)
#	bppmag[mno]	magma parallel port device
#	bpp*	parallel port devices
#	spif*	spif card (makes 8 tty and 1 bpp)
#	bpp[jkl]	spif parallel port device
#	crypto	hardware crypto access driver
#	pci	PCI bus device
#	uperf	performance counters
#	systrace*	system call tracing device
a242 2
	M mouse		c 13 0 666
	M fb		c 22 0 666
d246 6
a251 7
mouse*)
	name=${i##mouse-}
	if [ ! -c $name ]; then
		$0 $name	# make the appropriate device
	fi
	RMlist="$RMlist mouse"
	MKlist="$MKlist;ln -s $name mouse"
d254 2
a255 2
systrace)
	M systrace c 50 0 644
d258 2
a259 2
uperf)
	M uperf c 25 0 664
d262 2
a263 2
pci)
	M pci c 52 0 600
d266 6
a271 2
crypto)
	M crypto c 75 0
d292 19
a310 2
bpp*)
	M bpp$U c 107 $U 600
d332 8
a339 7
*random)
	n=0
	for pre in " " s u p a
	do
		M ${pre}random c 119 $n 644
		n=$(($n+1))
	done
d342 2
a343 2
lkm)
	M lkm c 112 0 640 _lkm
d346 2
a347 2
tun*)
	M tun$U c 111 $U 600
a353 4
pf*)
	M pf c 73 0 600
	;;

a364 31
uk*)
	M uk$U c 60 $U 640 operator
	;;

ss*)
	M ss$U c 59 $(($U*16)) 640 operator
	M nss$U c 59 $(($(($U*16))+1)) 640 operator
	M enss$U c 59 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
	;;

xfs*)
	M xfs$U c 51 $U 600
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
	;;

ses*)
	M ses$U c 4 $U 640 operator
	;;

usbs)
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1
	;;

d369 3
a371 4
ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 95 $o 660 dialer uucp
d382 4
d394 4
a397 2
uhid*)
	M uhid$U c 91 $U 660
d400 3
a402 3
usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 90 $U 660
d413 36
a448 2
ptm)
	M ptm c 123 0 666
d469 4
d477 2
a478 9
tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 36 $o 660 dialer uucp
	M cua$U c 36 $(($o+128)) 660 dialer uucp
	;;

cua[a-z])
	u=${i#cua*}
d484 1
a484 1
	*) echo unknown cua device $i ;;
d486 1
a486 1
	M cua$u c 12 $(($n+128)) 660 dialer uucp
d489 2
a490 2
tty[a-z])
	u=${i#tty*}
d496 1
a496 1
	*) echo unknown tty device $i ;;
d498 1
a498 1
	M tty$u c 12 $n 660 dialer uucp
d501 5
a505 2
wsmouse*)
	M wsmouse$U c 80 $U 600
d508 8
a515 3
wsmux|wsmouse|wskbd)
	M wsmouse c 81 0 600
	M wskbd c 81 1 600
d518 2
a519 31
wskbd*)
	M wskbd$U c 79 $U 600
	;;

tty[C-F]*)
	U=${i##tty[C-F]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 78 $(( 16#$U + $m )) 600;;
	cfg) M tty${n}cfg c 78 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5
	R ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg ttyE0 ttyE1
	R ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb
	R ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7
	R ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3
	R ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

rd*)
	dodisk2 rd $U 5 61 $U 0
d527 2
a528 2
cd*)
	dodisk2 cd $U 18 58 $U 0
d559 2
a560 12
ch*)
	M ch$U c 19 $U 660 operator
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 11 $n 660 operator
		M ${pre}rst$U	c 18 $n 660 operator
		n=$(($n+1))
	done
d573 4
a576 4
	R ccd2 ccd3 ptm wscons pci usbs audio0 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.89
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.29 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.88
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d58 1
a58 1
#	tty*	set of 16 slave psuedo terminals
@


1.87
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.28 2004/01/12 22:18:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.86
log
@sync
@
text
@d60 1
d424 4
d584 2
a585 2
	R ccd2 ccd3 wscons pci usbs audio0 uk0 random lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1
@


1.85
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a600 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d609 1
a609 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.84
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.83
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.27 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d69 1
a69 1
#	utty*	Serial ports
d112 8
d376 1
a376 1
	R utty0 utty1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
d384 4
a387 2
utty*)
	M utty$U c 95 $U 660
@


1.82
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
d437 1
a437 1
	o=$(hextod $U)
@


1.81
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d55 1
a55 1
#	tty0*	NS16x50 serial ports
d112 1
a112 1
trunc()
d114 16
a129 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
d435 5
a439 3
tty0*)
	M tty$U c 36 $U 660 dialer uucp
	M cua$U c 36 $(($U+128)) 660 dialer uucp
@


1.80
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d499 1
a499 1
	dodisk svnd $U 8 110 $U 128
@


1.79
log
@- use : instead of . for chown
- add bpp devices
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.26 2003/05/21 18:49:00 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.78
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.25 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d94 1
d160 1
a160 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d192 1
a192 1
		MKlist="$MKlist;chown $7.$G $1"
d281 4
d561 9
a569 9
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd vnd0 vnd1 vnd2 vnd3
	R sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 ccd0 ccd1 ccd2
	R ccd3 wscons pci usbs audio0 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyh0 ttyh1 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.77
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d194 1
a194 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.76
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d309 1
a309 1
	M lkm c 112 0 640 kmem
@


1.75
log
@replace MAKEDEVs by auto-generated ones.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.24 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.74
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d563 2
a564 2
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd
@


1.73
log
@sync
@
text
@a87 1
#	altq/	ALTQ control interface
a319 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 74 $U 644
		U=$(($U+1))
	done
	;;

d563 1
a563 1
	R altq systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std
@


1.72
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.23 2002/07/31 16:47:50 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.51 2002/08/29 23:43:16 todd Exp 
d497 6
a502 6
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb ttyFcfg ttyF0 ttyF1
	R ttyF2 ttyF3 ttyF4 ttyF5 ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb
	R ttyEcfg ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7
	R ttyE8 ttyE9 ttyEa ttyEb ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3
	R ttyD4 ttyD5 ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb
@


1.71
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d498 5
a502 2
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb ttyDcfg ttyD0 ttyD1
	R ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb
@


1.70
log
@regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.22 2002/06/13 02:19:27 jason Exp 
d235 1
a235 1
	M openprom	c 70 0 644
@


1.69
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.68
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.21 2002/05/16 21:11:21 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
d10 1
d218 1
a218 1
	R st0 cd0 random
@


1.67
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.66
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.19 2002/04/10 06:09:43 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp 
d101 1
d248 4
d570 2
a571 1
	R altq wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.65
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d252 1
a252 1
	M pci c 52 0 664
@


1.64
log
@regen. some of these were missed previously.
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.18 2002/03/15 20:52:41 jason Exp 
d216 1
a216 1
	R std fd0 wd0 wd1 sd0 sd1 rd0
@


1.63
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
@


1.62
log
@random typo fix; ok deraadt@@
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.16 2002/02/10 21:55:53 deraadt Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d69 3
d404 8
d563 3
a565 3
	R ccd3 wscons pci usbs audio0 uk0 random lkm tty00 tty01 tty02
	R tty03 ttyh0 ttyh1 crypto pf altq wd0 wd1 wd2 wd3 raid0 raid1
	R raid2 raid3 std st0 st1 fd
@


1.61
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.17 2002/02/14 13:29:21 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.58 2002/02/19 21:06:00 todd Exp $
d435 1
a435 1
	*) echo unknown cua device $i ;;  
d552 3
a554 3
	R ccd3 wscons pci usbs audio0 uk0 rndrandom lkm tty00 tty01
	R tty02 tty03 ttyh0 ttyh1 crypto pf altq wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.60
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d552 1
a552 1
	R ccd3 wscons pci usbs audio0 uk1 uk0 random lkm tty00 tty01
@


1.59
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d552 1
a552 1
	R ccd3 wscons pci usbs audio0 uk0 rndrandom lkm tty00 tty01
@


1.58
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
@


1.57
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
d54 1
a54 1
#	ttyC*	wscons virtual consoles
d465 8
a472 2
ttyC*)
	U=${i##ttyC}
d474 2
a475 2
	[0-9a-f]) M ttyC$U c 78 $(( 16#$U )) 600;;
	cfg) M ttyCcfg c 78 255 600;;
d481 4
a484 4
	R ttyCcfg
	R ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9
	R ttyCa ttyCb wsmux wskbd0 wskbd1 wskbd2 wskbd3
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3
@


1.56
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d37 1
a37 1
#	ramdisk	devices to be put on install floppies
d49 1
a49 1
#	rd*	"ramdisk" pseudo-disks
@


1.55
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d541 8
a548 8
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd wscons pci usbs
	R audio0 xfs0 ss0 ss1 uk0 ses0 rndrandom lkm tty00 tty01 tty02
	R tty03 ttyh0 ttyh1 crypto pf altq tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H wd0 wd1 wd2 wd3 rd0 raid0 raid1 raid2 raid3 ccd0 ccd1
	R ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 cd1 ch0 st0 st1 pty0
	R pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.54
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.16 2002/02/10 21:55:53 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d342 3
a344 1
	M ss$U c 59 $U 440 operator
d402 6
a407 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d412 1
@


1.53
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
d44 1
a44 1
#	wd*	"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
@


1.52
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d558 1
a558 1
	R pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.51
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
d147 1
@


1.50
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.15 2002/02/09 16:59:50 deraadt Exp 
d234 2
a235 1
mouse*)name=${i##mouse-}
@


1.49
log
@sync, and update, to make "ramdisk" target disk
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp 
d107 7
a113 7
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d116 1
d128 1
d144 1
d158 1
d172 1
d174 6
a179 6
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
d181 1
d202 1
a402 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d506 9
a514 9
	*A)		typnam=0; typnum=0;;
	*B)		typnum=1;;
	*C)		typnum=2;;
	*D)		typnum=3;;
	*E)		typnum=4;;
	*F)		typnum=5;;
	*G)		typnum=6;;
	*H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
d587 2
a588 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
@


1.48
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.14 2002/02/08 20:26:36 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
d37 1
a37 1
#	floppy	devices to be put on install floppies
d204 2
a205 2
floppy)
	R std fd0 wd0 wd1 sd0 sd1
@


1.47
log
@sync(/dev/pci)
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.13 2002/01/31 22:37:07 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp 
d197 1
d354 1
a354 1
	R urio0 usb0 usb1
d435 2
a436 2
	c) n=4 ;;
	d) n=5 ;;
d447 2
a448 2
	c) n=4 ;;
	d) n=5 ;;
d543 3
a545 3
	R wscons pci usbs audio0 xfs0 ss0 ss1 uk0 ses0 rndrandom lkm
	R tty00 tty01 tty02 tty03 cuaa cuab cuac cuad ttya ttyb ttyc
	R ttyd ttyh0 ttyh1 crypto pf altq tun0 tun1 tun2 tun3 bpf0
d548 1
a548 1
	R fd0H rd0 raid0 raid1 raid2 raid3 wd0 wd1 wd2 wd3 ccd0 ccd1
@


1.46
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.12 2002/01/31 21:34:56 jason Exp 
d96 1
d238 4
d542 1
a542 1
	R wscons usbs audio0 xfs0 ss0 ss1 uk0 ses0 rndrandom lkm
@


1.45
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.11 2002/01/28 20:50:07 jason Exp 
d96 1
d231 4
@


1.44
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.10 2002/01/23 07:53:01 todd Exp 
d448 2
a449 2
	M wsmouse c 69 0 600
	M wskbd c 69 1 600
d453 1
a453 1
	M wskbd$U c 67 $U 600
@


1.43
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.9 2002/01/23 06:18:52 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp 
d532 8
a539 8
	R wscons usbs audio0 xfs0 ss0 uk0 ses0 rndrandom lkm tty00
	R tty01 tty02 tty03 cuaa cuab cuac cuad ttya ttyb ttyc ttyd
	R ttyh0 ttyh1 crypto pf altq tun0 tun1 tun2 tun3 bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R rd0 raid0 raid1 raid2 raid3 wd0 wd1 wd2 wd3 ccd0 ccd1 ccd2
	R ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 ch0 st0 pty0 fd sd0 sd1 sd2
	R sd3 sd4
@


1.42
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp 
a205 6
ramdisk)
	R std lkm random
	R fd0 rd0 wd0 wd1 wd2 wd3 bpf0
	R sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	;;

d534 6
a539 6
	R tth0 tth1 crypto pf altq tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2
	R bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B fd1C fd1D fd1E
	R fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H rd0
	R raid0 raid1 raid2 raid3 wd0 wd1 wd2 wd3 ccd0 ccd1 ccd2 ccd3
	R vnd0 vnd1 vnd2 vnd3 std cd0 ch0 st0 pty0 fd sd0 sd1 sd2 sd3
	R sd4
@


1.41
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.8 2002/01/13 02:06:45 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.17 2002/01/12 21:14:57 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp 
d92 1
d94 1
d235 6
a240 1
	MKlist="$MKlist;ln -s $name mouse";;
d242 1
a242 1
magma*)
d244 3
a246 3
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
d251 1
a251 1
	while [ $n -lt 16 ]
d254 1
a254 1
		M tty$name c 71 $(($offset+$n)) 660 dialer uucp
d257 1
a257 2
	M bpp${nam}0 c 72 $(($offset+0)) 600 wheel root
	M bpp${nam}1 c 72 $(($offset+1)) 600 wheel root
d260 1
a260 1
spif*)
d262 3
a264 3
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
d269 1
a269 1
	while [ $n -lt 8 ]
d272 1
a272 1
		M tty$name c 108 $(($offset+$n)) 660 dialer uucp
d275 2
a276 5
	M bpp${nam}0 c 109 $(($offset+0)) 600 wheel root
	;;

crypto)
	M crypto c 75 0
d348 2
a349 2
	R usb0 usb1 urio uscanner0 uhid0 uhid1 uhid2 uhid3
	R ulpt0 ulpt1 ugen0 ugen1 utty0 utty1
d538 8
a545 10
	R std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1 st0 st1 ch0 cd0 cd1
	R vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 rd0
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R tun0 tun1 tun2 tun3 altq pf crypto ttyh0 ttyh1
	R ttya ttyb ttyc ttyd cuaa cuab cuac cuad
	R tty00 tty01 tty02 tty03 lkm random ses0 uk0 uk1 ss0 ss1 xfs0
	R audio0 usbs wscons
d548 1
a548 1
sd*|ccd*|raid*|wd*)
d550 1
d552 1
a553 2
	raid*) dodisk raid $U 25 121 $U 0;;
	wd*) dodisk wd $U 12 26 $U 0;;
@


1.40
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.7 2002/01/12 21:25:45 jason Exp 
d254 17
@


1.39
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.6 2002/01/12 21:14:57 jason Exp 
d247 1
a247 1
		M tty$name c 71 $(($offset+$n))
d250 2
a251 2
	M bpp${nam}0 c 72 $(($offset+0))
	M bpp${nam}1 c 72 $(($offset+1))
@


1.38
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.5 2002/01/12 21:08:59 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.16 2002/01/08 06:00:15 todd Exp 
d91 2
@


1.37
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.4 2002/01/04 16:59:18 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.15 2002/01/08 05:10:38 todd Exp 
d232 20
@


1.36
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.14 2002/01/08 03:26:04 todd Exp 
@


1.35
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.9 2002/01/07 21:58:54 todd Exp 
d140 2
a141 1
	for d in a b c d e f g h i j k l m n o p
d503 3
a505 3
	R ttya ttyb ttyc ttyd cuaa cuab cuac cuad lkm random ses0
	R uk0 uk1 ss0 ss1 tty00 tty01 tty02 tty03 xfs0 audio0 usbs
	R wscons
@


1.34
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.8 2002/01/07 07:50:48 todd Exp 
a407 4
	;;

mouse)
	M mouse c 30 0 666 
@


1.33
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.7 2002/01/07 07:20:50 todd Exp 
d426 2
a427 2
	[0-9a-f]) M ttyC$U c 78 $(( 16#$U )) 600 ;;
	cfg) M ttyCcfg c 78 255 ;;
@


1.32
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.5 2002/01/07 06:25:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.2 2002/01/07 06:06:40 todd Exp 
d10 1
a10 1
#	$Open{--}BSD$
a429 1
 
d513 4
a516 4
	sd*) n=sd b=7 c=17;;
	ccd*) n=ccd b=9 c=23;;
	raid*) n=raid b=25 c=121;;
	wd*) n=wd b=12 c=26;;
a517 1
	dodisk $n $U $b $c $U 0
@


1.31
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.3 2002/01/04 16:58:41 todd Exp 
d138 1
a138 1
	n=$(($((${5}*16))+${6})) count=0
d150 1
a150 1
	n=$(($(($5*16))+$6))
@


1.30
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.sub,v 1.1 2002/01/04 09:25:35 todd Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV.mi,v 1.3 2002/01/04 16:58:41 todd Exp $
d502 3
a504 1
	R raid0 raid1 raid2 raid3
d507 3
a509 4
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H ttya ttyb ttyc ttyd
	R cuaa cuab cuac cuad lkm random ses0 uk0 uk1 ss0 ss1
	R tty00 tty01 tty02 tty03 xfs0 audio0 usbs wscons
@


1.29
log
@sync; this is like pcidevs .. unlike the last commit, commit separately for
versioning to be imported properly
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.3 2002/01/04 16:15:01 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.2 2002/01/04 15:59:16 todd Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV.mi,v 1.2 2002/01/04 15:59:16 todd Exp $
d54 1
d423 10
d434 3
a436 1
	R ttyCcfg wsmux wskbd0 wskbd1 wskbd2 wskbd3
@


1.28
log
@+wsmouse
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.2 2002/01/04 15:59:52 todd Exp 
@


1.27
log
@sync
@
text
@d59 1
d405 4
d424 1
d495 1
a495 1
	R tty00 tty01 tty02 tty03 xfs0 audio0 usbs
@


1.26
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc64/MAKEDEV.md,v 1.1 2002/01/04 09:25:35 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.1 2002/01/04 09:25:35 todd Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV.mi,v 1.1 2002/01/04 09:25:35 todd Exp $
d67 8
d76 1
d302 38
d489 1
a489 1
	R tty00 tty01 tty02 tty03 xfs0 audio0
@


1.25
log
@+/dev/crypto; prompted by jason@@
@
text
@d3 8
a10 1
#	$OpenBSD$
d53 3
a69 1
#	bwtwo*	
a70 1
#	cgthree*	
a73 1
#	cgsix*	
a75 2
#	cgfourteen*	
#	tcx*	
a184 13
all)
	R std fd wd0 wd1 wd2 wd3 sd0 sd1 sd2
	R pty0 pty1 st0 st1 ch0 cd0 cd1
	R vnd0 vnd1 ccd0 ccd1 ccd2 ccd3
	R raid0 raid1 raid2 raid3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pf altq tun0 tun1 tun2 random ses0 uk0 uk1 ss0 ss1
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	R xfs0 tcx0 lkm audio0 local crypto
	R ttya ttyb ttyc ttyd cuaa cuab cuac cuad
	R tty00 tty01 tty02 tty03 ttyh0 ttyh1
	;;
d189 1
d195 3
a197 1
std)M console	c 0 0 600
d199 2
a202 3
	M mouse		c 13 0 666
	M klog		c 16 0 600
	M fb		c 22 0 666
a205 3
	M kbd		c 29 0 666
	M mem		c 3 0 640 kmem
	M kmem		c 3 1 640 kmem
d208 3
d213 1
d220 7
a226 2
crypto)M crypto c 75 0;;
*random)n=0
d231 17
a247 6
	done;;
lkm)M lkm c 112 0 640 kmem;;tun*)M tun$U c 111 $U 600;;
bpf*)M bpf$U c 105 $U 600;;
tcx*)M tcx$U c 109 $U;;
cgfourteen*)M cgfourteen$U c 99 $U;;
altq)RMlist="mkdir -p altq;$RMlist"
d251 9
a259 4
	done;;
pf*)M pf c 73 0 600;;
cgsix*)M cgsix$U c 67 $U 666;;
audio*)M sound$U	c 69 $U
d266 9
a274 3
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl";;
uk*)M uk$U c 60 $U 640 operator;;
ss*)M ss$U c 59 $U 440 operator
d276 9
a284 5
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U";;
cgthree*)M cgthree$U c 55 $U 666;;
xfs*)M xfs$U c 51 $U 600;;
bwtwo*)M bwtwo$U c 27 $U 666;;
fd)RMlist="mkdir -p fd;$RMlist" n=0
d286 9
a294 3
	MKlist="$MKlist;chmod 555 fd";;
ses*)M ses$U c 4 $U 640 operator;;
pty*)case $U in
d321 14
a334 5
	done;;
ttyh*)M ttyh$U c 77 $U 660 dialer uucp;;
tty0*)M tty$U c 36 $U 660 dialer uucp
	M cua$U c 36 $(($U+128)) 660 dialer uucp;;
cua[a-z])u=${i#cua*}
d342 5
a346 2
	M cua$u c 12 $(($n+128)) 660 dialer uucp;;
tty[a-z])u=${i#tty*}
d354 35
a388 6
	M tty$u c 12 $n 660 dialer uucp;;
mouse)M mouse c 30 0 666 ;;rd*)dodisk2 rd $U 5 61 $U 0;;
vnd*)dodisk vnd $U 8 110 $U 0
	dodisk svnd $U 8 110 $U 128;;
cd*)dodisk2 cd $U 18 58 $U 0;;
fd*)typnam=$U${i#fd[01]*}
d412 9
a420 3
	M r${nam}c	c $chr $(($n+2)) 640 operator;;
ch*)M ch$U c 19 $U 660 operator;;
st*)n=$(($U*16))
d426 21
a446 3
	done;;
local)test -s $T.local && sh $T.local;;
sd*|ccd*|raid*|wd*)case $i in
d452 3
a454 1
	dodisk $n $U $b $c $U 0;;
d466 6
a471 6
		600)mask=077;;
		640)mask=027;;
		660)mask=007;;
		644)mask=022;;
		666)mask=0;;
		440)mask=227;;
@


1.24
log
@add ttyh*, sab82532 serial devices, requested by jason@@
@
text
@d75 1
d189 1
a189 1
	R xfs0 tcx0 lkm audio0 local
d225 1
@


1.23
log
@spelling typo
add tty0*/cua0*
reorder abit
@
text
@a32 1
#
a35 1
#
a44 1
#
a46 1
#
a48 1
#
d52 2
a53 2
#	com*	NS16x50 serial ports
#
d55 2
a56 2
#	pty*	set of 16 master and slave pseudo terminals
#
a74 1
#
d190 1
a190 1
	R tty00 tty01 tty02 tty03
d288 1
@


1.22
log
@+openprom
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.3 2001/09/04 18:53:36 todd Exp $
a26 1
#
d79 1
a79 1
#	*random	inkernal random data source
d83 1
d196 1
d230 36
a265 18
tty[a-z])u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=4 ;;
	d) n=5 ;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 12 $n 660 dialer uucp;;
cua[a-z])u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=4 ;;
	d) n=5 ;;
	*) echo unknown cua device $i ;;  
	esac
	M cua$u c 12 $(($n+128)) 660 dialer uucp;;
d294 24
a317 15
bwtwo*)M bwtwo$U c 27 $U 666;;
cgthree*)M cgthree$U c 55 $U 666;;
cgsix*)M cgsix$U c 67 $U 666;;
cgfourteen*)M cgfourteen$U c 99 $U;;
tcx*)M tcx$U c 109 $U;;
fd)RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd";;
st*)n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 11 $n 660 operator
		M ${pre}rst$U	c 18 $n 660 operator
		n=$(($n+1))
	done;;
d343 1
a343 16
sd*|ccd*|raid*|wd*)case $i in
	sd*) n=sd b=7 c=17;;
	ccd*) n=ccd b=9 c=23;;
	raid*) n=raid b=25 c=121;;
	wd*) n=wd b=12 c=26;;
	esac
	dodisk $n $U $b $c $U 0;;
cd*)dodisk2 cd $U 18 58 $U 0;;
rd*)dodisk2 rd $U 5 61 $U 0;;

vnd*)dodisk vnd $U 8 110 $U 0
	dodisk svnd $U 8 110 $U 128;;
uk*)M uk$U c 60 $U 640 operator;;
ss*)M ss$U c 59 $U 440 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U";;
a350 26
ses*)M ses$U c 4 $U 640 operator;;
ch*)M ch$U c 19 $U 660 operator;;
lkm)M lkm c 112 0 640 kmem;;
xfs*)M xfs$U c 51 $U 600;;
*random)n=0
	for pre in " " s u p a
	do
		M ${pre}random c 119 $n 644
		n=$(($n+1))
	done;;
audio*)M sound$U	c 69 $U
	M mixer$U	c 69 $(($U+16))
	M audio$U	c 69 $(($U+128))
	M audioctl$U	c 69 $(($U+192))
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl";;
pf*)M pf c 73 0 600;;
altq)RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 74 $U 644
		U=$(($U+1))
	done;;
bpf*)M bpf$U c 105 $U 600;;
tun*)M tun$U c 111 $U 600;;
d352 7
a358 1

@


1.21
log
@ksyms take 2 .. blooper found by art@@
@
text
@d220 3
a222 1
	M drum		c 7 0 640 kmem;;
@


1.20
log
@from stone age to the stars in one afternoon, not bad! (go, jason@@)
@
text
@d219 1
@


1.19
log
@as reported by jason@@, sparc64 is in the stone age of 8 partitions
@
text
@d127 1
a127 1
	n=$(($((${5}*${7:-8}))+${6})) count=0
d139 1
a139 1
	n=$(($(($5*${7:-8}))+$6))
@


1.18
log
@add Zilog serial devices to all)
@
text
@d127 1
a127 1
	n=$(($((${5}*16))+${6})) count=0
d139 1
a139 2
	[ "$7" ] && fac=$7 || fac=16
	n=$(($(($5*$fac))+$6))
@


1.17
log
@more tab fixes
@
text
@a0 1

d57 1
d196 1
d218 11
a228 8
	mklist=""
	M mem		c 3 0 640
	M kmem		c 3 1 640
	M drum		c 7 0 640
	MKlist="$MKlist;chown root.kmem $mklist";;
tty[a-z])
	rm -f tty$unit
	case $unit in
d235 3
a237 6
	M tty$unit c 12 $n
	chown uucp.wheel tty$unit
	;;
cua[a-z])
	rm -f cua$unit
	case $unit in
d244 1
a244 8
	M cua$unit c 12 $(($n+128)) wheel uucp
	;;
mouse*)name=${i##mouse-}
	if [ ! -c $name ]; then
		$0 $name	# make the appropriate device
	fi
	RMlist="$RMlist mouse"
	MKlist="$MKlist;ln -s $name mouse";;
@


1.16
log
@o some reformatting, now comments at top look nice with tabstop=8
o correct tun major number
@
text
@d30 2
a31 2
#	all		makes all known devices, including local devices.
#			Tries to make the ``standard'' number of each type.
d38 1
a38 1
#	ch*		SCSI media changer
d41 2
a42 2
#	wd*		"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
#	fd*		Floppy disk drives (3 1/2", 5 1/4")
d79 1
a79 1
#	lkm		loadable kernel modules interface
@


1.15
log
@o re-enable SunOS; broken with last speedup; no speed diff
o fix chgrp lists, found by new regress/etc/MAKEDEV
@
text
@d1 1
d33 1
a33 1
#	std		standard devices
d37 1
a37 1
#	st*		SCSI tapes
d43 2
a44 2
#	sd*		SCSI disks
#	cd*		SCSI cdrom drives
d46 1
a46 1
#	rd*		"ramdisk" pseudo-disks
d65 1
a65 1
#	fd		makes fd/* for the fdescfs
d69 2
a70 2
#	ss*		SCSI scanners
#	uk*		SCSI Unknown device
d251 1
a251 2
pty*)
    case $U in
d275 2
a276 2
		M tty$nam c 20 $(($off+$n)) $mod $grp
		M pty$nam c 21 $(($off+$n)) $mod $grp
d282 2
a283 2
cgfourteen*)M cgfourteen$U c 99 $U 666;;
tcx*)M tcx$U c 109 $U 666;;
d287 1
a287 2
st*)
    n=$(($U*16))
d294 1
a294 2
fd*)
    typnam=$U${i#fd[01]*}
d319 1
a319 2
sd*|ccd*|raid*|wd*)
    case $i in
d326 2
a327 9
cd*)
    dodisk2 cd $U 18 58 $U 0;;
rd*)
    
	n=$(($U*16))
	M rd${unit}a b 5 $(($n+0)) $mod $grp 640 operator
	M rd${unit}c b 5 $(($n+2)) $mod $grp 640 operator
	M rrd${unit}a c 61 $(($n+0)) $mod $grp 640 operator
	M rrd${unit}c c 61 $(($n+2)) $mod $grp 640 operator;;
d329 1
a329 2
vnd*)
    dodisk vnd $U 8 110 $U 0
d335 1
a335 2
st*)
    n=$(($U*16))
d367 1
a367 1
tun*)M tun$U c 105 $U 600;;
@


1.14
log
@'Think cache and context switches .. art@@' .. 34% reduction in runtime!
@
text
@d163 12
a174 4
	[ "$G" ] && {
		[ "$7" ] && {
			MKlist="$MKlist;chown $7.$G $1"
		} || cgp $G $1
a177 9
cgp() {
  G=$1
  [ "${grplist[$G]}" ] && {
    grplist[$G]="${grplist[$G]} $2"
  } || {
    groups="$groups $G"
    grplist[$G]="chgrp $G $2"
  }
}
d410 1
a410 1
	list="$list;${grplist[$groupl]}"
d413 2
a414 2
if [ "$eo" = "echo" ]; then
	echo "$list"
@


1.13
log
@allow eo=echo to generate a full script, even for linked audio device names
@
text
@d406 1
a406 1
$eo eval "$RMlist"
d408 1
a408 1
    $eo eval "${mklist[$mode]}"
d411 1
a411 1
	$eo eval "${grplist[$groupl]}"
d413 6
a418 1
$eo eval "$MKlist"
@


1.12
log
@shrink w/out un-necessary newlines
@
text
@d369 4
a372 4
	[ -e audio ] || ln -s audio$U audio
	[ -e mixer ] || ln -s mixer$U mixer
	[ -e sound ] || ln -s sound$U sound
	[ -e audioctl ] || ln -s audioctl$U audioctl;;
@


1.11
log
@thanks brad@@ for reminding me there were three parts to his patch; audio
devices now generated properly
@
text
@d285 1
a285 2
fd)
	RMlist="mkdir -p fd;$RMlist" n=0
d344 1
a344 2
ss*)
	M ss$U c 59 $U 440 operator
d355 1
a355 2
ses*)
	M ses$U c 4 $U 640 operator;;
d359 1
a359 2
*random)
	n=0
d365 1
a365 2
audio*)
	M sound$U	c 69 $U
d373 2
a374 4
pf*)
	M pf c 73 0 600;;
altq)
	RMlist="mkdir -p altq;$RMlist"
d379 3
a381 6
bpf*)
	M bpf$U c 105 $U 600;;
tun*)
	M tun$U c 105 $U 600;;
local)
	test -s $T.local && sh $T.local;;
@


1.10
log
@remove un-needed eval
@
text
@d370 8
a377 5
	[ "$U" = "0" ] && u= || u=$U
	M sound$u	c 69 $U
	M mixer$u	c 69 $(($U+16))
	M audio$u	c 69 $(($U+128))
	M audioctl$u	c 69 $(($U+192));;
@


1.9
log
@pf0 -> pf
mcd0 & speaker -> crept in, not on sparc64!
if [ "$os" = "SunOS" ]; then .. output script runnable on SunOS
@
text
@d408 1
a408 1
		echo eval `echo "$@@"|sed \
@


1.8
log
@consistent avoidance of unnecessary spaces
@
text
@d204 1
a204 1
	R sd0 sd1 sd2 sd3 st0 st1 cd0 cd1 mcd0
a244 1
speaker)M speaker c 27 0 600;;
d347 2
a348 3
	rm -f scan$U
	umask 77
	ln -s ss$U scan$U;;
d375 2
a376 1
pf*)M pf$U c 73 $U 600;;
d397 17
a413 1
$eo eval $RMlist
d415 1
a415 1
    $eo eval ${mklist[$mode]}
d418 1
a418 1
	$eo eval ${grplist[$groupl]}
d420 1
a420 1
$eo eval $MKlist
@


1.7
log
@compact arithmetic
@
text
@a0 1

d281 5
a285 5
bwtwo*) M bwtwo$U c 27 $U 666;;
cgthree*) M cgthree$U c 55 $U 666;;
cgsix*) M cgsix$U c 67 $U 666;;
cgfourteen*) M cgfourteen$U c 99 $U 666;;
tcx*) M tcx$U c 109 $U 666;;
d287 1
a287 2
	RMlist="mkdir -p fd;$RMlist"
	n=0
d345 1
a345 1
uk*) M uk$U c 60 $U 640 operator;;
d361 1
a361 1
ch*) M ch$U c 19 $U 660 operator;;
d363 1
a363 1
xfs*) M xfs$U c 51 $U 600;;
d377 1
a377 2
pf*)
	M pf c 73 0 600;;
@


1.6
log
@shave 40% off 'MAKEDEV all' by combining(eliminating) 'chgrp' fork's
@
text
@d84 3
d127 1
a127 1
	n=$(( $((${5} * 16 )) + ${6} )) count=0
d131 2
a132 2
		M $1$2$d	b $3 $(( $n + $count )) 640
		M r$1$2$d	c $4 $(( $n + $count )) 640
d140 1
a140 1
	n=$(( $(($5 * $fac )) + $6 ))
d143 1
a143 1
	n=$(( $n + 2 ))
a146 2
# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=
d244 1
a244 1
	M cua$unit c 12 $(( $n + 128 )) wheel uucp
d278 3
a280 3
		M tty$nam c 20 $(( $off + $n )) $mod $grp
		M pty$nam c 21 $(( $off + $n )) $mod $grp
		n=$(( $n + 1 ))
d290 1
a290 1
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(( $n + 1 ));done
d293 1
a293 1
    n=$(( $U * 16 ))
d298 1
a298 1
		n=$(( $n + 1 ))
d319 1
a319 1
	n=$(( $(($U * 128 )) + $(($typnum * 16 )) ))
d321 2
a322 2
	M ${nam}b	b $blk $(( $n + 1 )) 640 operator
	M ${nam}c	b $blk $(( $n + 2 )) 640 operator
d324 2
a325 2
	M r${nam}b	c $chr $(( $n + 1 )) 640 operator
	M r${nam}c	c $chr $(( $n + 2 )) 640 operator;;
d338 5
a342 5
	n=$(( $U * 16 ))
	M rd${unit}a b 5 $(( $n + 0 )) $mod $grp 640 operator
	M rd${unit}c b 5 $(( $n + 2 )) $mod $grp 640 operator
	M rrd${unit}a c 61 $(( $n + 0 )) $mod $grp 640 operator
	M rrd${unit}c c 61 $(( $n + 2 )) $mod $grp 640 operator;;
d354 1
a354 1
    n=$(( $U * 16 ))
d359 1
a359 1
		n=$(( $n + 1 ))
d371 1
a371 1
		n=$(( $n + 1 ))
d376 3
a378 3
	M mixer$u	c 69 $(( $U + 16 ))
	M audio$u	c 69 $(( $U + 128 ))
	M audioctl$u	c 69 $(( $U + 192 ));;
d385 1
a385 1
		U=$(( $U + 1 ))
@


1.5
log
@add xfs0 and tcx0 to all)
@
text
@d4 1
a4 1
#	$OpenBSD: MAKEDEV,v 1.4 2001/09/04 19:14:04 todd Exp $
a83 2

# default shell support functions
d166 1
a166 1
		} || MKlist="$MKlist;chgrp $G $1"
d170 9
a178 1

d363 1
a363 3
lkm) 
	M lkm c 112 0 640 kmem
	;;
d403 3
@


1.4
log
@add xfs; jason@@ ok
add tcx to MAKEDEV
@
text
@d4 1
a4 1
#	$OpenBSD: MAKEDEV,v 1.3 2001/09/04 18:53:36 todd Exp $
d189 1
a189 1
	R lkm audio0 local
@


1.3
log
@enable pf and altq; jason@@ ok
@
text
@d4 1
a4 1
#	$OpenBSD$
d64 1
d67 1
d69 3
d73 2
d76 1
d78 1
a78 2
#	pf*	Packet Filter
#	altq/	ALTQ control interface
a79 2
#	audio*	audio device
#	tun*	network tunnel driver
a80 3
#	uk*		SCSI Unknown device
#	ss*		SCSI scanners
#	ses*	SES/SAF-TE SCSI devices
d279 1
d360 1
@


1.2
log
@reorder short section, don't over-ride 'eo' if set in the environment,
audio fixes from brad@@
@
text
@d1 1
d4 1
a4 1
#	$OpenBSD: MAKEDEV,v 1.1 2001/09/04 16:15:05 todd Exp $
d70 2
d184 1
a184 1
	R tun0 tun1 tun2 random ses0 uk0 uk1 ss0 ss1
d278 1
a278 1
	mkdir -p fd
d370 8
@


1.1
log
@created by reading conf.c by me
@
text
@d3 1
a3 1
#	$OpenBSD$
d70 1
a70 1
#	audio	audio device
a79 1

a80 26
# set this to echo for Echo-Only debugging
eo=

# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"
mkl() {
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
}
M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$G" ] && {
		[ "$7" ] && {
			MKlist="$MKlist;chown $7.$G $1"
		} || MKlist="$MKlist;chgrp $G $1"
	}
	return 0
}
d141 27
d184 1
a184 1
	R audio local
d381 1
a381 1
eval $RMlist
d383 1
a383 1
    eval ${mklist[$mode]}
d385 1
a385 1
eval $MKlist
@

