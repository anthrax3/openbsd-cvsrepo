head	1.10;
access;
symbols
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6;
locks; strict;
comment	@# @;


1.10
date	2007.12.07.17.13.35;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2007.11.28.15.16.18;	author reyk;	state Exp;
branches;
next	1.8;

1.8
date	2007.11.19.15.09.32;	author reyk;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.22.08.44.54;	author reyk;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.26.20.43.32;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2007.02.26.19.25.25;	author reyk;	state Exp;
branches;
next	1.4;

1.4
date	2007.02.26.13.58.31;	author reyk;	state Exp;
branches;
next	1.3;

1.3
date	2007.02.26.13.04.34;	author pyr;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.13.10.16.05;	author pyr;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.31.08.32.16;	author pyr;	state Exp;
branches;
next	;


desc
@@


1.10
log
@hoststated gets renamed to relayd.  easier to type, and actually says
what the daemon does - it is a relayer that pays attention to the status
of pools of hosts; not a status checkers that happens to do some relaying
@
text
@# $OpenBSD: hoststated.conf,v 1.9 2007/11/28 15:16:18 reyk Exp $
#
# Macros
#
ext_addr="192.168.1.1"
webhost1="10.0.0.1"
webhost2="10.0.0.2"
sshhost1="10.0.0.3"

#
# Global Options
#
# interval 10
# timeout 200
# prefork 5

#
# Each table will be mapped to a pf table.
#
table webhosts {
	real port http
	check http "/" code 200
	host $webhost1
	host $webhost2
}

table fallback {
	real port http
	check icmp
	host 127.0.0.1
}

#
# Services will be mapped to a rdr rule.
#
service www {
	virtual host $ext_addr port http interface trunk0

	# tag every packet that goes thru the rdr rule with HOSTSTATED
	tag HOSTSTATED

	table webhosts
	backup table fallback
}

#
# Relay and protocol for HTTP layer 7 loadbalancing and SSL acceleration
#
protocol httpssl {
	protocol http
	header append "$REMOTE_ADDR" to "X-Forwarded-For"
	header append "$SERVER_ADDR:$SERVER_PORT" to "X-Forwarded-By"
	header change "Connection" to "close"

	# Various TCP performance options
	tcp { nodelay, sack, socket buffer 65536, backlog 128 }

#	ssl { no sslv2, sslv3, tlsv1, ciphers HIGH }
#	ssl session cache disable
}

relay wwwssl {
	# Run as a SSL accelerator
	listen on $ext_addr port 443 ssl
	protocol httpssl

	# Forward to hosts in the webhosts table using a src/dst hash
	table webhosts loadbalance
}

#
# Relay and protocol for simple TCP forwarding on layer 7
#
protocol sshtcp {
	protocol tcp

	# The TCP_NODELAY option is required for "smooth" terminal sessions
	tcp nodelay
}

relay sshgw {
	# Run as a simple TCP relay
	listen on $ext_addr port 2222
	protocol sshtcp

	# Forward to the shared carp(4) address of an internal gateway
	forward to $sshhost1 port 22
}

#
# Relay and protocol for a transparent HTTP proxy
#
protocol httpfilter {
	protocol http

	# Return HTTP/HTML error pages to the client
	return error

	# Block disallowed browsers
	label "Please try a <em>different Browser</em>"
	header filter "Mozilla/4.0 (compatible; MSIE *" from "User-Agent"

	# Block some well-known Instant Messengers
	label "Instant messenger disallowed!"
	response header filter "application/x-msn-messenger" from "Content-Type"
	response header filter "app/x-hotbar-xip20" from "Content-Type"
	response header filter "application/x-icq" from "Content-Type"
	response header filter "AIM/HTTP" from "Content-Type"
	response header filter "application/x-comet-log" from "Content-Type"
}

relay httpproxy {
	# Listen on localhost, accept redirected connections from pf(4)
	listen on 127.0.0.1 port 8080
	protocol httpfilter

	# Forward to the original target host
	nat lookup
}
@


1.9
log
@extend proxy example
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.8 2007/11/19 15:09:32 reyk Exp $
@


1.8
log
@Update the transparent HTTP proxy example:

Include filters to block some well-known instant messengers; thanks to
Rene Badalassi (rene at cybersecure dot com dot au) for providing the
examples.

(This change depends on my latest fix to hoststated)
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.7 2007/10/22 08:44:54 reyk Exp $
d96 3
d100 1
d104 1
@


1.7
log
@add additional relay examples: simple non-SSL TCP relay, transparent
HTTP proxy. this makes it easier to test hoststated.

ok pyr@@
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.6 2007/02/26 20:43:32 reyk Exp $
d95 2
d98 7
a104 1
	response header filter "application/*" from "Content-Type"
@


1.6
log
@use a variable $ext_addr instead of the hard-coded 192.168.1.1. this
will make it easier for testing (just run hoststated -Dext_addr=X.X.X.X).
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.5 2007/02/26 19:25:25 reyk Exp $
d8 1
d47 1
a47 1
# Relays and protocols are used for Layer 7 loadbalancing
d50 1
a50 1
        protocol http
d55 2
a56 2
        # Various TCP performance options
        tcp { nodelay, sack, socket buffer 65536, backlog 128 }
d69 37
@


1.5
log
@sync the documentation with the latest change to require a 'header'
keyword for default relay actions.

ok pyr@@
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.4 2007/02/26 13:58:31 reyk Exp $
d5 1
d36 1
a36 1
	virtual host 192.168.1.1 port http interface trunk0
d63 1
a63 1
	listen on 192.168.1.1 port 443 ssl
@


1.4
log
@add an relay example

ok pyr@@
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.3 2007/02/26 13:04:34 pyr Exp $
d49 3
a51 3
        append "$REMOTE_ADDR" to "X-Forwarded-For"
        append "$SERVER_ADDR:$SERVER_PORT" to "X-Forwarded-By"
	change "Connection" to "close"
@


1.3
log
@reflect configuration parser change.
ok reyk@@
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.2 2007/02/13 10:16:05 pyr Exp $
d13 1
d42 25
@


1.2
log
@fix some typos in the default configuration file.
discussed with reyk@@
@
text
@d1 1
a1 1
# $OpenBSD: hoststated.conf,v 1.1 2007/01/31 08:32:16 pyr Exp $
d34 1
a34 1
	virtual ip 192.168.1.1 port http interface trunk0
@


1.1
log
@link hoststated to the builds.
ok miod@@, henning@@
@
text
@d1 1
a1 1
# $OpenBSD$
d18 1
d20 2
a21 2
	host webhost1
	host webhost2
d25 1
d34 1
a34 1
	virtual ip www.example.com port http interface trunk0
@

