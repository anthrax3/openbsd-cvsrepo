head	1.507;
access;
symbols
	OPENBSD_6_1:1.493.0.4
	OPENBSD_6_1_BASE:1.493
	OPENBSD_6_0:1.486.0.4
	OPENBSD_6_0_BASE:1.486
	OPENBSD_5_9:1.474.0.2
	OPENBSD_5_9_BASE:1.474
	OPENBSD_5_8:1.455.0.4
	OPENBSD_5_8_BASE:1.455
	OPENBSD_5_7:1.447.0.2
	OPENBSD_5_7_BASE:1.447
	OPENBSD_5_6:1.438.0.2
	OPENBSD_5_6_BASE:1.438
	OPENBSD_5_5:1.421.0.4
	OPENBSD_5_5_BASE:1.421
	OPENBSD_5_4:1.406.0.2
	OPENBSD_5_4_BASE:1.406
	OPENBSD_5_3:1.405.0.2
	OPENBSD_5_3_BASE:1.405
	OPENBSD_5_2:1.400.0.2
	OPENBSD_5_2_BASE:1.400
	OPENBSD_5_1_BASE:1.397
	OPENBSD_5_1:1.397.0.2
	OPENBSD_5_0:1.392.0.2
	OPENBSD_5_0_BASE:1.392
	OPENBSD_4_9:1.348.0.2
	OPENBSD_4_9_BASE:1.348
	OPENBSD_4_8:1.340.0.2
	OPENBSD_4_8_BASE:1.340
	OPENBSD_4_7:1.335.0.2
	OPENBSD_4_7_BASE:1.335
	OPENBSD_4_6:1.328.0.4
	OPENBSD_4_6_BASE:1.328
	OPENBSD_4_5:1.321.0.2
	OPENBSD_4_5_BASE:1.321
	OPENBSD_4_4:1.318.0.2
	OPENBSD_4_4_BASE:1.318
	OPENBSD_4_3:1.312.0.2
	OPENBSD_4_3_BASE:1.312
	OPENBSD_4_2:1.304.0.2
	OPENBSD_4_2_BASE:1.304
	OPENBSD_4_1:1.301.0.2
	OPENBSD_4_1_BASE:1.301
	OPENBSD_4_0:1.290.0.2
	OPENBSD_4_0_BASE:1.290
	OPENBSD_3_9:1.277.0.2
	OPENBSD_3_9_BASE:1.277
	OPENBSD_3_8:1.271.0.2
	OPENBSD_3_8_BASE:1.271
	OPENBSD_3_7:1.261.0.2
	OPENBSD_3_7_BASE:1.261
	OPENBSD_3_6:1.251.0.2
	OPENBSD_3_6_BASE:1.251
	OPENBSD_3_5:1.241.0.2
	OPENBSD_3_5_BASE:1.241
	OPENBSD_3_4:1.228.0.2
	OPENBSD_3_4_BASE:1.228
	OPENBSD_3_3:1.225.0.2
	OPENBSD_3_3_BASE:1.225
	OPENBSD_3_2:1.205.0.2
	OPENBSD_3_2_BASE:1.205
	OPENBSD_3_1:1.193.0.2
	OPENBSD_3_1_BASE:1.193
	OPENBSD_3_0:1.185.0.2
	OPENBSD_3_0_BASE:1.185
	OPENBSD_2_9:1.167.0.2
	OPENBSD_2_9_BASE:1.167
	OPENBSD_2_8:1.157.0.2
	OPENBSD_2_8_BASE:1.157
	OPENBSD_2_7:1.137.0.2
	OPENBSD_2_7_BASE:1.137
	OPENBSD_2_6:1.123.0.2
	OPENBSD_2_6_BASE:1.123
	OPENBSD_2_5:1.95.0.2
	OPENBSD_2_5_BASE:1.95
	OPENBSD_2_4:1.90.0.2
	OPENBSD_2_4_BASE:1.90
	OPENBSD_2_3:1.71.0.2
	OPENBSD_2_3_BASE:1.71
	OPENBSD_2_2:1.51.0.2
	OPENBSD_2_2_BASE:1.51
	OPENBSD_2_1:1.34.0.2
	OPENBSD_2_1_BASE:1.34
	OPENBSD_2_0:1.25.0.2
	OPENBSD_2_0_BASE:1.25
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.507
date	2017.07.04.19.02.11;	author rpe;	state Exp;
branches;
next	1.506;
commitid	G4nDcLFhfKpa4AG1;

1.506
date	2017.06.30.17.06.03;	author rpe;	state Exp;
branches;
next	1.505;
commitid	sUDtacXshDGSqeZm;

1.505
date	2017.06.27.03.42.00;	author tedu;	state Exp;
branches;
next	1.504;
commitid	XdonPB137ByT3l8N;

1.504
date	2017.06.22.16.03.36;	author deraadt;	state Exp;
branches;
next	1.503;
commitid	fqjgcqbYcvWQAkT9;

1.503
date	2017.06.19.22.50.50;	author deraadt;	state Exp;
branches;
next	1.502;
commitid	qxUetDs8y9dCgVHx;

1.502
date	2017.06.14.21.39.53;	author rpe;	state Exp;
branches;
next	1.501;
commitid	IAzWajafOCGCwW0d;

1.501
date	2017.06.06.13.59.37;	author florian;	state Exp;
branches;
next	1.500;
commitid	7DE2jyjCtRjSvXWx;

1.500
date	2017.06.03.22.59.09;	author deraadt;	state Exp;
branches;
next	1.499;
commitid	WGkKNbSJrLwrOfZd;

1.499
date	2017.06.03.22.33.36;	author deraadt;	state Exp;
branches;
next	1.498;
commitid	Z5tdgH9FLbPi9eOm;

1.498
date	2017.05.30.12.04.26;	author tb;	state Exp;
branches;
next	1.497;
commitid	10TzgqVCDGumO7GM;

1.497
date	2017.05.29.10.24.06;	author florian;	state Exp;
branches;
next	1.496;
commitid	GMPrMXlLo65fu9RV;

1.496
date	2017.05.29.09.44.01;	author deraadt;	state Exp;
branches;
next	1.495;
commitid	pwJo80RfpXiuOJkB;

1.495
date	2017.05.01.14.01.47;	author rpe;	state Exp;
branches;
next	1.494;
commitid	8k2r73E1RcbB2w4F;

1.494
date	2017.04.18.23.06.50;	author schwarze;	state Exp;
branches;
next	1.493;
commitid	iyMKkOg2aY5BtyPg;

1.493
date	2017.02.26.16.51.18;	author matthieu;	state Exp;
branches;
next	1.492;
commitid	P2dlZXDE2JznJMG3;

1.492
date	2016.12.27.09.17.52;	author jca;	state Exp;
branches;
next	1.491;
commitid	3qP8ymCdYHblqMMe;

1.491
date	2016.11.04.22.12.46;	author rpe;	state Exp;
branches;
next	1.490;
commitid	I2YgxXnA9IyHQVjX;

1.490
date	2016.10.07.05.47.24;	author otto;	state Exp;
branches;
next	1.489;
commitid	7mr2LZqFgMns3YXF;

1.489
date	2016.10.06.20.20.41;	author reyk;	state Exp;
branches;
next	1.488;
commitid	S3DUkDNXB4zfM0xB;

1.488
date	2016.10.06.19.32.23;	author reyk;	state Exp;
branches;
next	1.487;
commitid	uNcigddOzqXD9QNV;

1.487
date	2016.09.27.20.18.34;	author rpe;	state Exp;
branches;
next	1.486;
commitid	mjCzgLn6KvUBvd0o;

1.486
date	2016.07.10.09.08.18;	author rpe;	state Exp;
branches;
next	1.485;
commitid	NZCmsZPwmxKVeNvi;

1.485
date	2016.05.29.15.36.06;	author rpe;	state Exp;
branches;
next	1.484;
commitid	ECtLUxJMFPMTSOL4;

1.484
date	2016.05.27.17.03.45;	author rpe;	state Exp;
branches;
next	1.483;
commitid	Jip4Kuuut9ytOqoP;

1.483
date	2016.05.27.16.49.08;	author rpe;	state Exp;
branches;
next	1.482;
commitid	TPk6DcWL15dTIBlP;

1.482
date	2016.05.26.16.29.51;	author deraadt;	state Exp;
branches;
next	1.481;
commitid	Mb7C6XnYoQIeDqBg;

1.481
date	2016.05.26.14.59.48;	author rpe;	state Exp;
branches;
next	1.480;
commitid	VTMh31jLnnS6cjrT;

1.480
date	2016.05.22.15.16.47;	author rpe;	state Exp;
branches;
next	1.479;
commitid	muiqhR4uDP8bqLXV;

1.479
date	2016.05.14.08.21.40;	author jmc;	state Exp;
branches;
next	1.478;
commitid	Tw8BjQnJkxyIeJ1c;

1.478
date	2016.05.05.21.52.16;	author sthen;	state Exp;
branches;
next	1.477;
commitid	aLEsEbffFJp2Vg4b;

1.477
date	2016.04.27.14.49.11;	author ajacoutot;	state Exp;
branches;
next	1.476;
commitid	2Y2H6Mglgh8ZmUqs;

1.476
date	2016.04.27.09.17.53;	author rpe;	state Exp;
branches;
next	1.475;
commitid	xtajTIyloji0lQWq;

1.475
date	2016.04.26.14.56.14;	author deraadt;	state Exp;
branches;
next	1.474;
commitid	sTO82dfQXTjv6y3D;

1.474
date	2015.12.29.19.41.24;	author rpe;	state Exp;
branches;
next	1.473;
commitid	VP13mKQNJEGtXowa;

1.473
date	2015.12.06.13.51.41;	author rpe;	state Exp;
branches;
next	1.472;
commitid	ki8ANPvjQ08jsRiu;

1.472
date	2015.12.05.09.55.18;	author jasper;	state Exp;
branches;
next	1.471;
commitid	BDIjpYbNGByke3hj;

1.471
date	2015.12.02.20.39.57;	author rpe;	state Exp;
branches;
next	1.470;
commitid	4mLc2ArLTGThjKUS;

1.470
date	2015.11.27.03.53.28;	author deraadt;	state Exp;
branches;
next	1.469;
commitid	UAVzkTcfrd4ODMgq;

1.469
date	2015.11.10.20.34.58;	author tim;	state Exp;
branches;
next	1.468;
commitid	JqsDBFP1KwahSt7N;

1.468
date	2015.11.01.14.32.51;	author rpe;	state Exp;
branches;
next	1.467;
commitid	YPdKLUsIXL5GlWxU;

1.467
date	2015.10.18.21.33.18;	author rpe;	state Exp;
branches;
next	1.466;
commitid	51b2XsvTyhQifbok;

1.466
date	2015.10.18.03.51.11;	author deraadt;	state Exp;
branches;
next	1.465;
commitid	bwQJYxBN4EkdrcpZ;

1.465
date	2015.10.03.18.57.11;	author renato;	state Exp;
branches;
next	1.464;
commitid	0rggjTKo2BkzYtPe;

1.464
date	2015.09.29.17.40.56;	author rpe;	state Exp;
branches;
next	1.463;
commitid	xOxoyEyWh7KP5SOy;

1.463
date	2015.09.13.13.29.22;	author rpe;	state Exp;
branches;
next	1.462;
commitid	VNJZC318LMy9wzcJ;

1.462
date	2015.09.13.09.22.05;	author rpe;	state Exp;
branches;
next	1.461;
commitid	KBQKJM8TrclDLxVo;

1.461
date	2015.09.12.14.48.06;	author sthen;	state Exp;
branches;
next	1.460;
commitid	WPPwrl8t4dQOWRuY;

1.460
date	2015.08.28.18.10.46;	author rpe;	state Exp;
branches;
next	1.459;
commitid	oLHaQsoSs92ydOdh;

1.459
date	2015.08.22.23.32.18;	author rpe;	state Exp;
branches;
next	1.458;
commitid	9KwCcbQF7Fc2ryjs;

1.458
date	2015.08.22.10.45.59;	author rpe;	state Exp;
branches;
next	1.457;
commitid	as6pedo5A92Gv2bj;

1.457
date	2015.08.13.17.24.42;	author rpe;	state Exp;
branches;
next	1.456;
commitid	2Sbjnlq7kA2JOvsm;

1.456
date	2015.08.12.17.27.27;	author rpe;	state Exp;
branches;
next	1.455;
commitid	QKIz5wKGcuDaGgGZ;

1.455
date	2015.08.03.04.19.25;	author yasuoka;	state Exp;
branches;
next	1.454;
commitid	UMhaBLtmLfa9I0dg;

1.454
date	2015.07.20.06.59.39;	author rpe;	state Exp;
branches;
next	1.453;
commitid	y7nbZ22RKbjhwOMg;

1.453
date	2015.07.19.04.44.36;	author rpe;	state Exp;
branches;
next	1.452;
commitid	AI4ymZ4o5FHoGW3X;

1.452
date	2015.07.18.21.12.40;	author rpe;	state Exp;
branches;
next	1.451;
commitid	2hZKsDpNwm5LrhZM;

1.451
date	2015.07.18.00.37.23;	author rpe;	state Exp;
branches;
next	1.450;
commitid	nwdUAK7uTuHTiwBf;

1.450
date	2015.07.18.00.03.34;	author rpe;	state Exp;
branches;
next	1.449;
commitid	HAC9bupABqscbVEj;

1.449
date	2015.05.02.09.35.44;	author ajacoutot;	state Exp;
branches;
next	1.448;
commitid	KEtyXRbrWc1uCPli;

1.448
date	2015.03.11.14.48.58;	author krw;	state Exp;
branches;
next	1.447;
commitid	f9K7Av50rwhQBwCp;

1.447
date	2015.01.22.19.00.24;	author krw;	state Exp;
branches;
next	1.446;
commitid	VNLoCz8eejcn2vV2;

1.446
date	2014.12.03.20.13.49;	author florian;	state Exp;
branches;
next	1.445;
commitid	tpsqJ5xr3Ojj3kiE;

1.445
date	2014.11.30.18.06.45;	author dcoppa;	state Exp;
branches;
next	1.444;
commitid	HdtHpkcXYB87LBSb;

1.444
date	2014.11.17.18.19.08;	author deraadt;	state Exp;
branches;
next	1.443;
commitid	1QNngz3xwKZzl4NA;

1.443
date	2014.11.05.17.07.59;	author millert;	state Exp;
branches;
next	1.442;
commitid	jNZiraFlpIdpZONN;

1.442
date	2014.09.15.22.28.58;	author matthieu;	state Exp;
branches;
next	1.441;
commitid	KGd36IP2Igl01unI;

1.441
date	2014.08.26.19.33.48;	author robert;	state Exp;
branches;
next	1.440;
commitid	d4aMPQgs0Avz1qdr;

1.440
date	2014.08.22.19.19.25;	author deraadt;	state Exp;
branches;
next	1.439;
commitid	DjPuiMfLSQV3ARle;

1.439
date	2014.08.17.14.43.34;	author ajacoutot;	state Exp;
branches;
next	1.438;
commitid	i5lo4TpCEhqPeIgx;

1.438
date	2014.08.04.20.17.09;	author naddy;	state Exp;
branches;
next	1.437;
commitid	L30Njgemkm3MhZ9q;

1.437
date	2014.07.19.21.27.16;	author bluhm;	state Exp;
branches;
next	1.436;
commitid	r9lyvxH5XMrmoBTx;

1.436
date	2014.07.18.18.17.28;	author deraadt;	state Exp;
branches;
next	1.435;
commitid	2GHYFUzCbjuv2NU3;

1.435
date	2014.07.17.15.08.29;	author deraadt;	state Exp;
branches;
next	1.434;
commitid	demcGwvRkJ0f6oc3;

1.434
date	2014.07.14.10.10.44;	author ajacoutot;	state Exp;
branches;
next	1.433;
commitid	6ayMLpXtDbq9CpVC;

1.433
date	2014.07.14.09.44.45;	author ajacoutot;	state Exp;
branches;
next	1.432;
commitid	2o7t6HXr5faf1l1V;

1.432
date	2014.07.14.09.44.07;	author ajacoutot;	state Exp;
branches;
next	1.431;
commitid	DbXk7xYmUZl9Wywo;

1.431
date	2014.07.14.09.04.02;	author deraadt;	state Exp;
branches;
next	1.430;
commitid	YUSo98CdDPeK0I4d;

1.430
date	2014.07.14.03.45.55;	author deraadt;	state Exp;
branches;
next	1.429;
commitid	KqGGpwHFPWIGcpoD;

1.429
date	2014.07.13.12.12.30;	author claudio;	state Exp;
branches;
next	1.428;
commitid	guqo1f7E4FQ01KbU;

1.428
date	2014.07.12.10.14.03;	author robert;	state Exp;
branches;
next	1.427;
commitid	bTkdeNHIIsfDwYx7;

1.427
date	2014.04.25.17.59.53;	author bluhm;	state Exp;
branches;
next	1.426;

1.426
date	2014.04.24.15.05.10;	author tedu;	state Exp;
branches;
next	1.425;

1.425
date	2014.04.23.09.56.56;	author ajacoutot;	state Exp;
branches;
next	1.424;

1.424
date	2014.04.19.16.07.09;	author henning;	state Exp;
branches;
next	1.423;

1.423
date	2014.03.15.22.13.36;	author sthen;	state Exp;
branches;
next	1.422;

1.422
date	2014.03.13.10.11.01;	author florian;	state Exp;
branches;
next	1.421;

1.421
date	2014.02.19.21.47.15;	author schwarze;	state Exp;
branches;
next	1.420;

1.420
date	2014.01.19.09.39.04;	author claudio;	state Exp;
branches;
next	1.419;

1.419
date	2014.01.03.23.24.19;	author millert;	state Exp;
branches;
next	1.418;

1.418
date	2013.12.28.01.00.18;	author deraadt;	state Exp;
branches;
next	1.417;

1.417
date	2013.12.27.23.43.39;	author rpe;	state Exp;
branches;
next	1.416;

1.416
date	2013.12.27.23.40.29;	author rpe;	state Exp;
branches;
next	1.415;

1.415
date	2013.12.27.22.34.40;	author deraadt;	state Exp;
branches;
next	1.414;

1.414
date	2013.12.27.22.33.27;	author deraadt;	state Exp;
branches;
next	1.413;

1.413
date	2013.12.27.22.15.40;	author deraadt;	state Exp;
branches;
next	1.412;

1.412
date	2013.12.27.04.21.48;	author deraadt;	state Exp;
branches;
next	1.411;

1.411
date	2013.12.27.04.21.03;	author deraadt;	state Exp;
branches;
next	1.410;

1.410
date	2013.12.26.18.05.31;	author espie;	state Exp;
branches;
next	1.409;

1.409
date	2013.12.17.09.19.45;	author halex;	state Exp;
branches;
next	1.408;

1.408
date	2013.12.15.17.40.45;	author tedu;	state Exp;
branches;
next	1.407;

1.407
date	2013.08.09.16.24.54;	author ajacoutot;	state Exp;
branches;
next	1.406;

1.406
date	2013.06.01.14.06.20;	author naddy;	state Exp;
branches;
next	1.405;

1.405
date	2012.11.18.18.29.10;	author ajacoutot;	state Exp;
branches;
next	1.404;

1.404
date	2012.11.04.21.47.22;	author kettenis;	state Exp;
branches;
next	1.403;

1.403
date	2012.09.20.12.51.43;	author yasuoka;	state Exp;
branches;
next	1.402;

1.402
date	2012.08.26.19.25.19;	author ajacoutot;	state Exp;
branches;
next	1.401;

1.401
date	2012.08.20.12.37.52;	author dlg;	state Exp;
branches;
next	1.400;

1.400
date	2012.04.06.15.11.30;	author jsing;	state Exp;
branches;
next	1.399;

1.399
date	2012.03.10.10.37.13;	author dlg;	state Exp;
branches;
next	1.398;

1.398
date	2012.03.05.19.56.43;	author dlg;	state Exp;
branches;
next	1.397;

1.397
date	2011.12.09.14.52.26;	author ratchov;	state Exp;
branches;
next	1.396;

1.396
date	2011.10.13.07.54.06;	author ajacoutot;	state Exp;
branches;
next	1.395;

1.395
date	2011.10.07.16.36.26;	author deraadt;	state Exp;
branches;
next	1.394;

1.394
date	2011.10.06.20.49.25;	author deraadt;	state Exp;
branches;
next	1.393;

1.393
date	2011.09.16.10.11.20;	author robert;	state Exp;
branches;
next	1.392;

1.392
date	2011.07.28.19.09.16;	author halex;	state Exp;
branches;
next	1.391;

1.391
date	2011.07.20.10.00.13;	author halex;	state Exp;
branches;
next	1.390;

1.390
date	2011.07.20.09.56.00;	author halex;	state Exp;
branches;
next	1.389;

1.389
date	2011.07.19.13.50.49;	author deraadt;	state Exp;
branches;
next	1.388;

1.388
date	2011.07.19.13.49.07;	author deraadt;	state Exp;
branches;
next	1.387;

1.387
date	2011.07.18.21.01.23;	author deraadt;	state Exp;
branches;
next	1.386;

1.386
date	2011.07.18.17.05.29;	author deraadt;	state Exp;
branches;
next	1.385;

1.385
date	2011.07.11.17.20.09;	author deraadt;	state Exp;
branches;
next	1.384;

1.384
date	2011.07.09.01.30.27;	author halex;	state Exp;
branches;
next	1.383;

1.383
date	2011.07.08.22.20.05;	author deraadt;	state Exp;
branches;
next	1.382;

1.382
date	2011.07.08.22.03.56;	author deraadt;	state Exp;
branches;
next	1.381;

1.381
date	2011.07.08.21.42.52;	author robert;	state Exp;
branches;
next	1.380;

1.380
date	2011.07.08.16.20.13;	author ajacoutot;	state Exp;
branches;
next	1.379;

1.379
date	2011.07.08.09.48.18;	author deraadt;	state Exp;
branches;
next	1.378;

1.378
date	2011.07.08.04.54.12;	author robert;	state Exp;
branches;
next	1.377;

1.377
date	2011.07.08.02.15.34;	author robert;	state Exp;
branches;
next	1.376;

1.376
date	2011.07.08.02.02.02;	author deraadt;	state Exp;
branches;
next	1.375;

1.375
date	2011.07.08.01.43.59;	author deraadt;	state Exp;
branches;
next	1.374;

1.374
date	2011.07.08.01.43.09;	author deraadt;	state Exp;
branches;
next	1.373;

1.373
date	2011.07.08.01.41.25;	author deraadt;	state Exp;
branches;
next	1.372;

1.372
date	2011.07.08.00.54.04;	author ajacoutot;	state Exp;
branches;
next	1.371;

1.371
date	2011.07.08.00.51.52;	author deraadt;	state Exp;
branches;
next	1.370;

1.370
date	2011.07.08.00.50.09;	author robert;	state Exp;
branches;
next	1.369;

1.369
date	2011.07.08.00.17.15;	author robert;	state Exp;
branches;
next	1.368;

1.368
date	2011.07.08.00.15.19;	author robert;	state Exp;
branches;
next	1.367;

1.367
date	2011.07.07.23.53.05;	author deraadt;	state Exp;
branches;
next	1.366;

1.366
date	2011.07.07.23.47.22;	author deraadt;	state Exp;
branches;
next	1.365;

1.365
date	2011.07.07.23.29.45;	author robert;	state Exp;
branches;
next	1.364;

1.364
date	2011.07.07.23.09.46;	author guenther;	state Exp;
branches;
next	1.363;

1.363
date	2011.07.07.22.57.29;	author deraadt;	state Exp;
branches;
next	1.362;

1.362
date	2011.07.07.22.53.39;	author deraadt;	state Exp;
branches;
next	1.361;

1.361
date	2011.07.07.22.47.30;	author deraadt;	state Exp;
branches;
next	1.360;

1.360
date	2011.07.07.22.30.37;	author robert;	state Exp;
branches;
next	1.359;

1.359
date	2011.07.07.22.23.56;	author robert;	state Exp;
branches;
next	1.358;

1.358
date	2011.07.07.21.00.59;	author deraadt;	state Exp;
branches;
next	1.357;

1.357
date	2011.07.07.20.54.05;	author deraadt;	state Exp;
branches;
next	1.356;

1.356
date	2011.07.07.18.40.00;	author deraadt;	state Exp;
branches;
next	1.355;

1.355
date	2011.07.07.18.36.03;	author robert;	state Exp;
branches;
next	1.354;

1.354
date	2011.07.07.02.16.58;	author robert;	state Exp;
branches;
next	1.353;

1.353
date	2011.07.06.18.55.36;	author robert;	state Exp;
branches;
next	1.352;

1.352
date	2011.04.22.06.08.14;	author ajacoutot;	state Exp;
branches;
next	1.351;

1.351
date	2011.04.16.05.53.18;	author ajacoutot;	state Exp;
branches;
next	1.350;

1.350
date	2011.03.23.15.22.10;	author stevesk;	state Exp;
branches;
next	1.349;

1.349
date	2011.03.17.16.43.51;	author robert;	state Exp;
branches;
next	1.348;

1.348
date	2011.01.14.00.05.42;	author deraadt;	state Exp;
branches;
next	1.347;

1.347
date	2011.01.10.06.44.49;	author deraadt;	state Exp;
branches;
next	1.346;

1.346
date	2010.12.22.18.13.14;	author deraadt;	state Exp;
branches;
next	1.345;

1.345
date	2010.11.08.19.44.36;	author ajacoutot;	state Exp;
branches;
next	1.344;

1.344
date	2010.11.02.18.59.12;	author deraadt;	state Exp;
branches;
next	1.343;

1.343
date	2010.10.26.20.56.03;	author robert;	state Exp;
branches;
next	1.342;

1.342
date	2010.10.01.20.51.32;	author jakob;	state Exp;
branches;
next	1.341;

1.341
date	2010.09.06.17.10.19;	author naddy;	state Exp;
branches;
next	1.340;

1.340
date	2010.07.27.08.37.33;	author martinh;	state Exp;
branches;
next	1.339;

1.339
date	2010.07.13.12.28.13;	author sthen;	state Exp;
branches;
next	1.338;

1.338
date	2010.06.28.20.16.21;	author reyk;	state Exp;
branches;
next	1.337;

1.337
date	2010.04.25.10.10.51;	author michele;	state Exp;
branches;
next	1.336;

1.336
date	2010.04.23.06.29.36;	author ratchov;	state Exp;
branches;
next	1.335;

1.335
date	2010.01.04.18.03.30;	author deraadt;	state Exp;
branches;
next	1.334;

1.334
date	2009.12.04.21.58.41;	author deraadt;	state Exp;
branches;
next	1.333;

1.333
date	2009.11.23.12.14.25;	author deraadt;	state Exp;
branches;
next	1.332;

1.332
date	2009.08.12.13.21.15;	author deraadt;	state Exp;
branches;
next	1.331;

1.331
date	2009.08.07.22.27.47;	author sthen;	state Exp;
branches;
next	1.330;

1.330
date	2009.08.05.02.06.21;	author deraadt;	state Exp;
branches;
next	1.329;

1.329
date	2009.08.04.15.16.45;	author sthen;	state Exp;
branches;
next	1.328;

1.328
date	2009.06.30.15.30.24;	author deraadt;	state Exp;
branches;
next	1.327;

1.327
date	2009.06.30.15.23.51;	author robert;	state Exp;
branches;
next	1.326;

1.326
date	2009.06.03.14.45.39;	author jj;	state Exp;
branches;
next	1.325;

1.325
date	2009.05.31.20.57.12;	author halex;	state Exp;
branches;
next	1.324;

1.324
date	2009.04.17.17.17.03;	author henning;	state Exp;
branches;
next	1.323;

1.323
date	2009.03.16.23.18.45;	author jacekm;	state Exp;
branches;
next	1.322;

1.322
date	2009.03.04.05.29.09;	author mcbride;	state Exp;
branches;
next	1.321;

1.321
date	2008.12.11.15.44.00;	author naddy;	state Exp;
branches;
next	1.320;

1.320
date	2008.11.27.00.52.06;	author uwe;	state Exp;
branches;
next	1.319;

1.319
date	2008.10.03.14.25.11;	author deraadt;	state Exp;
branches;
next	1.318;

1.318
date	2008.07.09.20.23.47;	author djm;	state Exp;
branches;
next	1.317;

1.317
date	2008.06.15.04.49.34;	author sturm;	state Exp;
branches;
next	1.316;

1.316
date	2008.06.09.22.21.49;	author mbalmer;	state Exp;
branches;
next	1.315;

1.315
date	2008.06.08.03.03.37;	author jdixon;	state Exp;
branches;
next	1.314;

1.314
date	2008.06.02.16.33.39;	author jasper;	state Exp;
branches;
next	1.313;

1.313
date	2008.05.07.11.58.14;	author claudio;	state Exp;
branches;
next	1.312;

1.312
date	2008.02.27.20.27.38;	author djm;	state Exp;
branches;
next	1.311;

1.311
date	2008.01.31.14.18.03;	author reyk;	state Exp;
branches;
next	1.310;

1.310
date	2008.01.16.14.19.28;	author sthen;	state Exp;
branches;
next	1.309;

1.309
date	2008.01.09.21.38.19;	author mpf;	state Exp;
branches;
next	1.308;

1.308
date	2007.12.07.17.13.35;	author deraadt;	state Exp;
branches;
next	1.307;

1.307
date	2007.11.11.16.12.11;	author jmc;	state Exp;
branches;
next	1.306;

1.306
date	2007.10.15.20.58.10;	author deraadt;	state Exp;
branches;
next	1.305;

1.305
date	2007.10.08.11.29.58;	author norby;	state Exp;
branches;
next	1.304;

1.304
date	2007.04.25.14.12.05;	author espie;	state Exp;
branches;
next	1.303;

1.303
date	2007.04.14.11.54.00;	author grunk;	state Exp;
branches;
next	1.302;

1.302
date	2007.03.14.20.47.17;	author ckuethe;	state Exp;
branches;
next	1.301;

1.301
date	2007.02.27.16.24.29;	author beck;	state Exp;
branches;
next	1.300;

1.300
date	2007.02.27.16.21.29;	author beck;	state Exp;
branches;
next	1.299;

1.299
date	2007.02.27.02.10.58;	author beck;	state Exp;
branches;
next	1.298;

1.298
date	2007.02.02.14.51.19;	author ajacoutot;	state Exp;
branches;
next	1.297;

1.297
date	2007.01.31.08.32.16;	author pyr;	state Exp;
branches;
next	1.296;

1.296
date	2007.01.06.12.00.06;	author matthieu;	state Exp;
branches;
next	1.295;

1.295
date	2006.11.28.23.44.35;	author mcbride;	state Exp;
branches;
next	1.294;

1.294
date	2006.11.16.13.07.11;	author henning;	state Exp;
branches;
next	1.293;

1.293
date	2006.11.06.21.55.52;	author deraadt;	state Exp;
branches;
next	1.292;

1.292
date	2006.10.29.18.58.57;	author norby;	state Exp;
branches;
next	1.291;

1.291
date	2006.09.27.19.54.36;	author mpf;	state Exp;
branches;
next	1.290;

1.290
date	2006.09.01.01.18.02;	author mpf;	state Exp;
branches;
next	1.289;

1.289
date	2006.08.29.17.26.55;	author henning;	state Exp;
branches;
next	1.288;

1.288
date	2006.08.04.11.43.43;	author markus;	state Exp;
branches;
next	1.287;

1.287
date	2006.06.02.21.32.50;	author mcbride;	state Exp;
branches;
next	1.286;

1.286
date	2006.06.02.19.59.35;	author mcbride;	state Exp;
branches;
next	1.285;

1.285
date	2006.06.01.21.37.43;	author norby;	state Exp;
branches;
next	1.284;

1.284
date	2006.06.01.16.43.23;	author norby;	state Exp;
branches;
next	1.283;

1.283
date	2006.05.29.16.49.42;	author avsm;	state Exp;
branches;
next	1.282;

1.282
date	2006.05.28.23.29.32;	author avsm;	state Exp;
branches;
next	1.281;

1.281
date	2006.03.27.16.53.10;	author reyk;	state Exp;
branches;
next	1.280;

1.280
date	2006.03.22.15.57.55;	author hshoexer;	state Exp;
branches;
next	1.279;

1.279
date	2006.03.14.22.48.46;	author deraadt;	state Exp;
branches;
next	1.278;

1.278
date	2006.03.12.20.07.48;	author otto;	state Exp;
branches;
next	1.277;

1.277
date	2006.01.12.21.54.15;	author deraadt;	state Exp;
branches;
next	1.276;

1.276
date	2005.11.30.16.04.33;	author tom;	state Exp;
branches;
next	1.275;

1.275
date	2005.11.16.09.19.36;	author camield;	state Exp;
branches;
next	1.274;

1.274
date	2005.10.31.10.32.47;	author henning;	state Exp;
branches;
next	1.273;

1.273
date	2005.09.22.23.57.31;	author deraadt;	state Exp;
branches;
next	1.272;

1.272
date	2005.09.19.15.47.45;	author fgsch;	state Exp;
branches;
next	1.271;

1.271
date	2005.07.25.19.18.44;	author mcbride;	state Exp;
branches;
next	1.270;

1.270
date	2005.06.19.16.55.10;	author deraadt;	state Exp;
branches;
next	1.269;

1.269
date	2005.06.14.22.49.06;	author dhartmei;	state Exp;
branches;
next	1.268;

1.268
date	2005.06.02.20.09.38;	author tholo;	state Exp;
branches;
next	1.267;

1.267
date	2005.05.19.01.58.49;	author millert;	state Exp;
branches;
next	1.266;

1.266
date	2005.05.18.16.43.51;	author millert;	state Exp;
branches;
next	1.265;

1.265
date	2005.05.18.13.44.35;	author millert;	state Exp;
branches;
next	1.264;

1.264
date	2005.04.09.14.15.18;	author deraadt;	state Exp;
branches;
next	1.263;

1.263
date	2005.04.01.05.37.35;	author deraadt;	state Exp;
branches;
next	1.262;

1.262
date	2005.03.22.22.24.38;	author henning;	state Exp;
branches;
next	1.261;

1.261
date	2005.01.19.20.52.29;	author millert;	state Exp;
branches;
next	1.260;

1.260
date	2004.11.22.09.26.23;	author jsg;	state Exp;
branches;
next	1.259;

1.259
date	2004.11.03.18.04.46;	author henning;	state Exp;
branches;
next	1.258;

1.258
date	2004.10.22.00.59.09;	author itojun;	state Exp;
branches;
next	1.257;

1.257
date	2004.10.19.06.45.36;	author grange;	state Exp;
branches;
next	1.256;

1.256
date	2004.09.27.16.08.26;	author henning;	state Exp;
branches;
next	1.255;

1.255
date	2004.09.27.16.06.20;	author henning;	state Exp;
branches;
next	1.254;

1.254
date	2004.09.27.08.43.51;	author henning;	state Exp;
branches;
next	1.253;

1.253
date	2004.09.18.20.17.37;	author henning;	state Exp;
branches;
next	1.252;

1.252
date	2004.09.17.21.50.30;	author mcbride;	state Exp;
branches;
next	1.251;

1.251
date	2004.08.21.08.17.28;	author hshoexer;	state Exp;
branches;
next	1.250;

1.250
date	2004.08.07.00.50.25;	author deraadt;	state Exp;
branches;
next	1.249;

1.249
date	2004.07.06.04.05.27;	author henning;	state Exp;
branches;
next	1.248;

1.248
date	2004.06.04.04.26.41;	author grange;	state Exp;
branches;
next	1.247;

1.247
date	2004.05.16.15.45.46;	author henning;	state Exp;
branches;
next	1.246;

1.246
date	2004.05.16.04.31.01;	author mcbride;	state Exp;
branches;
next	1.245;

1.245
date	2004.04.28.01.01.27;	author deraadt;	state Exp;
branches;
next	1.244;

1.244
date	2004.04.27.22.51.28;	author markus;	state Exp;
branches;
next	1.243;

1.243
date	2004.04.26.02.00.57;	author deraadt;	state Exp;
branches;
next	1.242;

1.242
date	2004.03.30.16.59.25;	author otto;	state Exp;
branches;
next	1.241;

1.241
date	2004.03.22.15.02.35;	author cedric;	state Exp;
branches;
next	1.240;

1.240
date	2004.03.22.04.34.42;	author mcbride;	state Exp;
branches;
next	1.239;

1.239
date	2004.03.05.23.54.47;	author henning;	state Exp;
branches;
next	1.238;

1.238
date	2004.03.03.01.06.44;	author deraadt;	state Exp;
branches;
next	1.237;

1.237
date	2004.03.02.16.11.10;	author deraadt;	state Exp;
branches;
next	1.236;

1.236
date	2004.03.02.15.56.28;	author deraadt;	state Exp;
branches;
next	1.235;

1.235
date	2004.02.26.07.33.08;	author beck;	state Exp;
branches;
next	1.234;

1.234
date	2004.02.25.08.42.38;	author jmc;	state Exp;
branches;
next	1.233;

1.233
date	2004.02.11.23.17.32;	author beck;	state Exp;
branches;
next	1.232;

1.232
date	2004.01.23.22.11.40;	author deraadt;	state Exp;
branches;
next	1.231;

1.231
date	2003.12.29.23.16.45;	author millert;	state Exp;
branches;
next	1.230;

1.230
date	2003.12.05.00.52.16;	author deraadt;	state Exp;
branches;
next	1.229;

1.229
date	2003.11.18.16.37.34;	author henning;	state Exp;
branches;
next	1.228;

1.228
date	2003.07.29.17.52.17;	author henning;	state Exp;
branches;
next	1.227;

1.227
date	2003.05.14.18.41.06;	author ian;	state Exp;
branches;
next	1.226;

1.226
date	2003.04.08.01.53.43;	author millert;	state Exp;
branches;
next	1.225;

1.225
date	2003.03.23.18.45.34;	author marc;	state Exp;
branches;
next	1.224;

1.224
date	2003.03.21.20.33.24;	author todd;	state Exp;
branches;
next	1.223;

1.223
date	2003.03.20.16.04.37;	author sturm;	state Exp;
branches;
next	1.222;

1.222
date	2003.03.10.01.05.28;	author deraadt;	state Exp;
branches;
next	1.221;

1.221
date	2003.03.04.23.37.15;	author jakob;	state Exp;
branches;
next	1.220;

1.220
date	2003.03.04.22.45.53;	author jakob;	state Exp;
branches;
next	1.219;

1.219
date	2003.03.04.18.42.52;	author danh;	state Exp;
branches;
next	1.218;

1.218
date	2003.02.14.16.00.58;	author cedric;	state Exp;
branches;
next	1.217;

1.217
date	2003.01.20.22.42.01;	author jakob;	state Exp;
branches;
next	1.216;

1.216
date	2003.01.20.20.42.28;	author millert;	state Exp;
branches;
next	1.215;

1.215
date	2003.01.15.09.25.46;	author camield;	state Exp;
branches;
next	1.214;

1.214
date	2003.01.06.20.40.39;	author marc;	state Exp;
branches;
next	1.213;

1.213
date	2003.01.03.18.39.58;	author miod;	state Exp;
branches;
next	1.212;

1.212
date	2002.12.27.01.30.19;	author deraadt;	state Exp;
branches;
next	1.211;

1.211
date	2002.12.24.15.53.17;	author mcbride;	state Exp;
branches;
next	1.210;

1.210
date	2002.12.13.10.20.25;	author henning;	state Exp;
branches;
next	1.209;

1.209
date	2002.11.23.18.29.21;	author deraadt;	state Exp;
branches;
next	1.208;

1.208
date	2002.11.14.09.02.28;	author camield;	state Exp;
branches;
next	1.207;

1.207
date	2002.10.14.07.34.25;	author mpech;	state Exp;
branches;
next	1.206;

1.206
date	2002.10.06.19.09.20;	author krw;	state Exp;
branches;
next	1.205;

1.205
date	2002.09.12.18.21.48;	author millert;	state Exp;
branches;
next	1.204;

1.204
date	2002.09.06.21.30.22;	author deraadt;	state Exp;
branches;
next	1.203;

1.203
date	2002.08.20.08.42.59;	author hugh;	state Exp;
branches;
next	1.202;

1.202
date	2002.07.27.22.11.58;	author matthieu;	state Exp;
branches;
next	1.201;

1.201
date	2002.07.27.04.10.01;	author deraadt;	state Exp;
branches;
next	1.200;

1.200
date	2002.07.11.08.27.24;	author deraadt;	state Exp;
branches;
next	1.199;

1.199
date	2002.07.09.16.55.10;	author deraadt;	state Exp;
branches;
next	1.198;

1.198
date	2002.06.11.04.51.39;	author dhartmei;	state Exp;
branches;
next	1.197;

1.197
date	2002.06.09.21.15.54;	author hin;	state Exp;
branches;
next	1.196;

1.196
date	2002.06.07.08.54.48;	author beck;	state Exp;
branches;
next	1.195;

1.195
date	2002.05.23.20.47.57;	author dhartmei;	state Exp;
branches;
next	1.194;

1.194
date	2002.05.23.19.38.18;	author dhartmei;	state Exp;
branches;
next	1.193;

1.193
date	2002.02.25.03.30.46;	author deraadt;	state Exp;
branches;
next	1.192;

1.192
date	2002.02.21.04.18.42;	author millert;	state Exp;
branches;
next	1.191;

1.191
date	2002.02.19.02.21.16;	author deraadt;	state Exp;
branches;
next	1.190;

1.190
date	2002.02.17.20.26.03;	author tdeval;	state Exp;
branches;
next	1.189;

1.189
date	2002.02.09.17.37.34;	author deraadt;	state Exp;
branches;
next	1.188;

1.188
date	2002.01.08.12.04.43;	author tholo;	state Exp;
branches;
next	1.187;

1.187
date	2001.12.30.16.34.50;	author markus;	state Exp;
branches;
next	1.186;

1.186
date	2001.10.29.18.17.03;	author deraadt;	state Exp;
branches;
next	1.185;

1.185
date	2001.10.09.18.44.17;	author angelos;	state Exp;
branches;
next	1.184;

1.184
date	2001.09.21.05.51.13;	author deraadt;	state Exp;
branches;
next	1.183;

1.183
date	2001.09.19.16.27.47;	author todd;	state Exp;
branches;
next	1.182;

1.182
date	2001.08.22.16.13.14;	author deraadt;	state Exp;
branches;
next	1.181;

1.181
date	2001.08.22.07.11.17;	author deraadt;	state Exp;
branches;
next	1.180;

1.180
date	2001.08.21.22.29.52;	author deraadt;	state Exp;
branches;
next	1.179;

1.179
date	2001.08.17.22.00.11;	author deraadt;	state Exp;
branches;
next	1.178;

1.178
date	2001.07.04.06.34.19;	author mickey;	state Exp;
branches;
next	1.177;

1.177
date	2001.07.03.03.28.19;	author deraadt;	state Exp;
branches;
next	1.176;

1.176
date	2001.07.01.08.38.59;	author kjell;	state Exp;
branches;
next	1.175;

1.175
date	2001.06.27.03.34.08;	author hin;	state Exp;
branches;
next	1.174;

1.174
date	2001.06.22.14.46.42;	author deraadt;	state Exp;
branches;
next	1.173;

1.173
date	2001.06.12.06.36.03;	author fgsch;	state Exp;
branches;
next	1.172;

1.172
date	2001.06.02.03.06.29;	author miod;	state Exp;
branches;
next	1.171;

1.171
date	2001.05.30.02.11.09;	author deraadt;	state Exp;
branches;
next	1.170;

1.170
date	2001.05.15.21.28.43;	author deraadt;	state Exp;
branches;
next	1.169;

1.169
date	2001.05.03.21.56.57;	author deraadt;	state Exp;
branches;
next	1.168;

1.168
date	2001.05.02.02.41.26;	author deraadt;	state Exp;
branches;
next	1.167;

1.167
date	2001.04.19.04.00.15;	author deraadt;	state Exp;
branches;
next	1.166;

1.166
date	2001.04.01.19.39.54;	author deraadt;	state Exp;
branches;
next	1.165;

1.165
date	2001.03.02.06.22.39;	author deraadt;	state Exp;
branches;
next	1.164;

1.164
date	2001.02.23.06.50.10;	author deraadt;	state Exp;
branches;
next	1.163;

1.163
date	2001.02.22.08.03.22;	author deraadt;	state Exp;
branches;
next	1.162;

1.162
date	2001.02.10.18.03.16;	author mickey;	state Exp;
branches;
next	1.161;

1.161
date	2001.01.16.04.08.35;	author angelos;	state Exp;
branches;
next	1.160;

1.160
date	2000.12.30.07.59.27;	author angelos;	state Exp;
branches;
next	1.159;

1.159
date	2000.12.30.06.51.09;	author angelos;	state Exp;
branches;
next	1.158;

1.158
date	2000.12.30.06.35.17;	author angelos;	state Exp;
branches;
next	1.157;

1.157
date	2000.10.27.06.36.35;	author deraadt;	state Exp;
branches;
next	1.156;

1.156
date	2000.10.18.21.28.54;	author mickey;	state Exp;
branches;
next	1.155;

1.155
date	2000.10.09.18.07.59;	author aaron;	state Exp;
branches;
next	1.154;

1.154
date	2000.10.07.00.03.52;	author millert;	state Exp;
branches;
next	1.153;

1.153
date	2000.09.06.17.19.27;	author millert;	state Exp;
branches;
next	1.152;

1.152
date	2000.09.01.06.56.48;	author aaron;	state Exp;
branches;
next	1.151;

1.151
date	2000.08.28.02.30.35;	author brad;	state Exp;
branches;
next	1.150;

1.150
date	2000.08.25.16.14.12;	author deraadt;	state Exp;
branches;
next	1.149;

1.149
date	2000.08.05.06.38.55;	author deraadt;	state Exp;
branches;
next	1.148;

1.148
date	2000.07.13.16.26.13;	author millert;	state Exp;
branches;
next	1.147;

1.147
date	2000.07.13.13.15.36;	author itojun;	state Exp;
branches;
next	1.146;

1.146
date	2000.07.11.22.30.56;	author matt;	state Exp;
branches;
next	1.145;

1.145
date	2000.07.06.13.24.49;	author itojun;	state Exp;
branches;
next	1.144;

1.144
date	2000.07.05.17.15.51;	author millert;	state Exp;
branches;
next	1.143;

1.143
date	2000.07.02.21.24.00;	author espie;	state Exp;
branches;
next	1.142;

1.142
date	2000.06.18.22.58.42;	author todd;	state Exp;
branches;
next	1.141;

1.141
date	2000.06.14.15.50.55;	author deraadt;	state Exp;
branches;
next	1.140;

1.140
date	2000.06.13.18.29.48;	author deraadt;	state Exp;
branches;
next	1.139;

1.139
date	2000.05.19.16.53.17;	author mickey;	state Exp;
branches;
next	1.138;

1.138
date	2000.05.15.18.24.42;	author hin;	state Exp;
branches;
next	1.137;

1.137
date	2000.05.12.06.10.26;	author deraadt;	state Exp;
branches;
next	1.136;

1.136
date	2000.05.03.02.40.16;	author deraadt;	state Exp;
branches;
next	1.135;

1.135
date	2000.04.30.23.17.05;	author ericj;	state Exp;
branches;
next	1.134;

1.134
date	2000.04.27.07.06.36;	author deraadt;	state Exp;
branches;
next	1.133;

1.133
date	2000.04.26.22.34.54;	author deraadt;	state Exp;
branches;
next	1.132;

1.132
date	2000.04.06.18.26.04;	author millert;	state Exp;
branches;
next	1.131;

1.131
date	2000.03.05.16.55.22;	author millert;	state Exp;
branches;
next	1.130;

1.130
date	2000.02.28.17.28.35;	author itojun;	state Exp;
branches;
next	1.129;

1.129
date	2000.01.30.02.45.51;	author millert;	state Exp;
branches;
next	1.128;

1.128
date	2000.01.30.02.17.00;	author mickey;	state Exp;
branches;
next	1.127;

1.127
date	2000.01.02.14.25.07;	author itojun;	state Exp;
branches;
next	1.126;

1.126
date	2000.01.01.22.45.35;	author deraadt;	state Exp;
branches;
next	1.125;

1.125
date	99.11.23.02.20.14;	author deraadt;	state Exp;
branches;
next	1.124;

1.124
date	99.11.11.22.28.43;	author fgsch;	state Exp;
branches;
next	1.123;

1.123
date	99.10.18.01.46.24;	author deraadt;	state Exp;
branches;
next	1.122;

1.122
date	99.10.15.19.51.29;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	99.10.11.20.09.53;	author millert;	state Exp;
branches;
next	1.120;

1.120
date	99.10.07.05.11.19;	author deraadt;	state Exp;
branches;
next	1.119;

1.119
date	99.10.07.04.41.07;	author deraadt;	state Exp;
branches;
next	1.118;

1.118
date	99.10.06.04.41.46;	author millert;	state Exp;
branches;
next	1.117;

1.117
date	99.10.03.04.22.42;	author deraadt;	state Exp;
branches;
next	1.116;

1.116
date	99.09.30.13.10.20;	author deraadt;	state Exp;
branches;
next	1.115;

1.115
date	99.09.29.06.46.04;	author deraadt;	state Exp;
branches;
next	1.114;

1.114
date	99.09.28.07.20.01;	author deraadt;	state Exp;
branches;
next	1.113;

1.113
date	99.09.27.23.41.18;	author deraadt;	state Exp;
branches;
next	1.112;

1.112
date	99.09.27.23.40.25;	author deraadt;	state Exp;
branches;
next	1.111;

1.111
date	99.09.04.22.20.20;	author millert;	state Exp;
branches;
next	1.110;

1.110
date	99.09.04.21.30.49;	author millert;	state Exp;
branches;
next	1.109;

1.109
date	99.09.04.21.07.23;	author millert;	state Exp;
branches;
next	1.108;

1.108
date	99.09.03.18.11.48;	author deraadt;	state Exp;
branches;
next	1.107;

1.107
date	99.08.31.03.47.16;	author deraadt;	state Exp;
branches;
next	1.106;

1.106
date	99.08.19.13.58.07;	author kstailey;	state Exp;
branches;
next	1.105;

1.105
date	99.08.05.08.12.10;	author millert;	state Exp;
branches;
next	1.104;

1.104
date	99.08.05.08.10.06;	author millert;	state Exp;
branches;
next	1.103;

1.103
date	99.08.05.08.04.25;	author millert;	state Exp;
branches;
next	1.102;

1.102
date	99.08.04.17.07.27;	author millert;	state Exp;
branches;
next	1.101;

1.101
date	99.08.03.22.52.42;	author deraadt;	state Exp;
branches;
next	1.100;

1.100
date	99.07.15.14.31.52;	author provos;	state Exp;
branches;
next	1.99;

1.99
date	99.05.30.23.20.52;	author millert;	state Exp;
branches;
next	1.98;

1.98
date	99.05.26.08.40.00;	author jakob;	state Exp;
branches;
next	1.97;

1.97
date	99.05.24.18.00.05;	author millert;	state Exp;
branches;
next	1.96;

1.96
date	99.04.21.20.18.02;	author alex;	state Exp;
branches;
next	1.95;

1.95
date	98.12.28.06.58.30;	author deraadt;	state Exp;
branches;
next	1.94;

1.94
date	98.12.21.03.33.43;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	98.11.11.09.22.49;	author downsj;	state Exp;
branches;
next	1.92;

1.92
date	98.11.03.05.10.41;	author downsj;	state Exp;
branches;
next	1.91;

1.91
date	98.10.28.17.47.00;	author art;	state Exp;
branches;
next	1.90;

1.90
date	98.10.12.03.02.57;	author art;	state Exp;
branches;
next	1.89;

1.89
date	98.09.19.02.31.51;	author todd;	state Exp;
branches;
next	1.88;

1.88
date	98.08.28.04.42.38;	author millert;	state Exp;
branches;
next	1.87;

1.87
date	98.08.25.18.19.40;	author marc;	state Exp;
branches;
next	1.86;

1.86
date	98.08.19.04.25.46;	author form;	state Exp;
branches;
next	1.85;

1.85
date	98.08.18.23.54.41;	author marc;	state Exp;
branches;
next	1.84;

1.84
date	98.08.18.23.11.15;	author marc;	state Exp;
branches;
next	1.83;

1.83
date	98.07.24.18.01.25;	author millert;	state Exp;
branches;
next	1.82;

1.82
date	98.07.13.23.24.57;	author deraadt;	state Exp;
branches;
next	1.81;

1.81
date	98.07.13.03.38.54;	author millert;	state Exp;
branches;
next	1.80;

1.80
date	98.07.11.08.41.34;	author deraadt;	state Exp;
branches;
next	1.79;

1.79
date	98.07.05.02.50.08;	author todd;	state Exp;
branches;
next	1.78;

1.78
date	98.07.04.23.35.42;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	98.07.03.03.48.16;	author angelos;	state Exp;
branches;
next	1.76;

1.76
date	98.06.13.03.38.15;	author millert;	state Exp;
branches;
next	1.75;

1.75
date	98.06.03.17.12.03;	author millert;	state Exp;
branches;
next	1.74;

1.74
date	98.06.03.16.04.07;	author millert;	state Exp;
branches;
next	1.73;

1.73
date	98.05.14.23.58.01;	author millert;	state Exp;
branches;
next	1.72;

1.72
date	98.05.13.21.10.03;	author deraadt;	state Exp;
branches;
next	1.71;

1.71
date	98.04.07.06.11.52;	author deraadt;	state Exp;
branches;
next	1.70;

1.70
date	98.03.25.23.07.21;	author deraadt;	state Exp;
branches;
next	1.69;

1.69
date	98.03.25.07.25.20;	author deraadt;	state Exp;
branches;
next	1.68;

1.68
date	98.03.11.18.08.09;	author millert;	state Exp;
branches;
next	1.67;

1.67
date	98.02.26.18.50.52;	author millert;	state Exp;
branches;
next	1.66;

1.66
date	98.02.18.14.05.27;	author art;	state Exp;
branches;
next	1.65;

1.65
date	98.02.13.06.35.25;	author marc;	state Exp;
branches;
next	1.64;

1.64
date	98.02.11.02.28.10;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	98.02.07.21.17.37;	author beck;	state Exp;
branches;
next	1.62;

1.62
date	98.02.06.00.06.00;	author deraadt;	state Exp;
branches;
next	1.61;

1.61
date	98.02.05.09.54.36;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	98.01.23.08.38.31;	author art;	state Exp;
branches;
next	1.59;

1.59
date	98.01.21.23.35.56;	author downsj;	state Exp;
branches;
next	1.58;

1.58
date	97.12.21.06.40.50;	author deraadt;	state Exp;
branches;
next	1.57;

1.57
date	97.12.12.23.02.26;	author niklas;	state Exp;
branches;
next	1.56;

1.56
date	97.11.23.11.54.16;	author maja;	state Exp;
branches;
next	1.55;

1.55
date	97.11.19.23.44.21;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	97.11.08.20.45.33;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	97.11.04.09.15.31;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	97.11.04.08.39.33;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	97.10.15.16.28.29;	author millert;	state Exp;
branches;
next	1.50;

1.50
date	97.09.30.04.54.50;	author millert;	state Exp;
branches;
next	1.49;

1.49
date	97.09.26.18.43.45;	author millert;	state Exp;
branches;
next	1.48;

1.48
date	97.09.20.07.40.40;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	97.09.17.09.37.11;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	97.09.14.10.35.40;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	97.09.02.14.49.25;	author kstailey;	state Exp;
branches;
next	1.44;

1.44
date	97.08.25.20.50.38;	author millert;	state Exp;
branches;
next	1.43;

1.43
date	97.08.23.15.01.24;	author mickey;	state Exp;
branches;
next	1.42;

1.42
date	97.08.19.21.55.14;	author niklas;	state Exp;
branches;
next	1.41;

1.41
date	97.07.31.02.23.45;	author downsj;	state Exp;
branches;
next	1.40;

1.40
date	97.07.25.00.06.02;	author provos;	state Exp;
branches;
next	1.39;

1.39
date	97.07.22.17.11.56;	author kstailey;	state Exp;
branches;
next	1.38;

1.38
date	97.07.22.10.02.47;	author provos;	state Exp;
branches;
next	1.37;

1.37
date	97.06.20.13.01.34;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	97.06.17.13.13.47;	author niklas;	state Exp;
branches;
next	1.35;

1.35
date	97.06.17.10.20.05;	author niklas;	state Exp;
branches;
next	1.34;

1.34
date	97.04.22.23.04.57;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	97.04.16.05.48.27;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	97.04.15.09.26.47;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	97.02.28.07.53.33;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	97.02.19.03.59.14;	author tholo;	state Exp;
branches;
next	1.29;

1.29
date	97.02.03.12.04.44;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	96.12.22.20.14.09;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	96.12.07.12.19.00;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	96.10.09.07.13.30;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	96.09.23.13.06.36;	author deraadt;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	96.09.07.20.45.24;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	96.09.04.10.25.53;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	96.07.27.01.39.04;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	96.07.25.22.04.46;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	96.07.18.09.57.37;	author downsj;	state Exp;
branches;
next	1.19;

1.19
date	96.07.05.02.18.43;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	96.06.28.01.53.53;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	96.06.18.15.30.01;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	96.06.12.09.13.20;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	96.06.12.09.02.59;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	96.06.11.03.25.10;	author tholo;	state Exp;
branches;
next	1.13;

1.13
date	96.06.10.07.15.17;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.05.30.09.37.34;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.05.26.10.25.27;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.05.03.11.46.34;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.04.29.08.05.34;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.04.29.08.02.59;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.04.24.12.43.24;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.04.23.03.18.34;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.01.09.09.29.24;	author dm;	state Exp;
branches;
next	1.4;

1.4
date	95.12.30.23.38.18;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.12.16.04.51.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.22.09.58.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.57;	author deraadt;	state Exp;
branches;
next	;

1.25.2.1
date	96.10.11.23.00.18;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.507
log
@Switch reorder_kernel() from sending emails to logging via syslog
and to write the logfile inside the kernel compile dir.

- turn the whole reorder_kernel function into a subshell {} -> ()
- create kernel compile dir early on
- redirect all stdout/stderr to a logfile inside this dir
- setup ERR trap handler that
  - disables the EXIT trap handler
  - syslogs the error and hints to the logfile
  - additionally sends this message to the console
- setup EXIT trap handler that syslogs success
- wipe only the content instead of the whole kernel compile dir
- reestablish stdout redirection to the log after the wipe
- remove -q option of sha256 to log check result
- run reorder_kernel() in the background

OK deraadt@@ tb@@
@
text
@#	$OpenBSD: rc,v 1.506 2017/06/30 17:06:03 rpe Exp $

# System startup script run by init on autoboot or after single-user.
# Output and error are redirected to console by init, and the console is the
# controlling terminal.

# Turn off Strict Bourne shell.
set +o sh

# Subroutines (have to come first).

# Strip in- and whole-line comments from a file.
# Strip leading and trailing whitespace if IFS is set.
# Usage: stripcom /path/to/file
stripcom() {
	local _file=$1 _line

	[[ -s $_file ]] || return

	while read _line ; do
		_line=${_line%%#*}
		[[ -n $_line ]] && print -r -- "$_line"
	done <$_file
}

# Update resource limits based on login.conf settings.
# Usage: update_limit -flag capability
update_limit() {
	local _flag=$1		# ulimit flag
	local _cap=$2 _val	# login.conf capability and its value
	local _suffix

	for _suffix in {,-max,-cur}; do
		_val=$(getcap -f /etc/login.conf -s ${_cap}${_suffix} daemon 2>/dev/null)
		[[ -n $_val ]] || continue
		[[ $_val == infinity ]] && _val=unlimited

		case $_suffix in
		-cur)	ulimit -S $_flag $_val
			;;
		-max)	ulimit -H $_flag $_val
			;;
		*)	ulimit $_flag $_val
			return
			;;
		esac
	done
}

# Apply sysctl.conf(5) settings.
sysctl_conf() {
	stripcom /etc/sysctl.conf |
	while read _line; do
		sysctl "$_line"

		case $_line in
		kern.maxproc=*)
			update_limit -p maxproc;;
		kern.maxfiles=*)
			update_limit -n openfiles;;
		esac
	done
}

# Apply mixerctl.conf(5) settings.
mixerctl_conf() {
	stripcom /etc/mixerctl.conf |
	while read _line; do
		mixerctl -q "$_line" 2>/dev/null
	done
}

# Apply wsconsctl.conf(5) settings.
wsconsctl_conf() {
	[[ -x /sbin/wsconsctl ]] || return

	stripcom /etc/wsconsctl.conf |
	while read _line; do
		eval "wsconsctl $_line"
	done
}

# Push the old seed into the kernel, create a future seed  and create a seed
# file for the boot-loader.
random_seed() {
	dd if=/var/db/host.random of=/dev/random bs=65536 count=1 status=none
	chmod 600 /var/db/host.random
	dd if=/dev/random of=/var/db/host.random bs=65536 count=1 status=none
	dd if=/dev/random of=/etc/random.seed bs=512 count=1 status=none
	chmod 600 /etc/random.seed
}

# Populate net.inet.(tcp|udp).baddynamic with the contents of /etc/services so
# as to avoid randomly allocating source ports that correspond to well-known
# services.
# Usage: fill_baddynamic tcp|udp
fill_baddynamic() {
	local _service=$1
	local _sysctl="net.inet.${_service}.baddynamic"

	stripcom /etc/services |
	{
		_ban=
		while IFS=" 	/" read _name _port _srv _junk; do
			[[ $_srv == $_service ]] || continue

			_ban="${_ban:+$_ban,}+$_port"

			# Flush before argv gets too long
			if ((${#_ban} > 1024)); then
				sysctl -q "$_sysctl=$_ban"
				_ban=
			fi
		done
		[[ -n $_ban ]] && sysctl -q "$_sysctl=$_ban"
	}
}

# Start daemon using the rc.d daemon control scripts.
# Usage: start_daemon daemon1 daemon2 daemon3
start_daemon() {
	local _daemon

	for _daemon; do
		eval "_do=\${${_daemon}_flags}"
		[[ $_do != NO ]] && /etc/rc.d/${_daemon} start
	done
}

# Generate keys for isakmpd, iked and sshd if they don't exist yet.
make_keys() {
	local _isakmpd_key=/etc/isakmpd/private/local.key
	local _isakmpd_pub=/etc/isakmpd/local.pub
	local _iked_key=/etc/iked/private/local.key
	local _iked_pub=/etc/iked/local.pub

	if [[ ! -f $_isakmpd_key ]]; then
		echo -n "openssl: generating isakmpd/iked RSA keys... "
		if openssl genrsa -out $_isakmpd_key 2048 >/dev/null 2>&1 &&
			chmod 600 $_isakmpd_key &&
			openssl rsa -out $_isakmpd_pub -in $_isakmpd_key \
			    -pubout >/dev/null 2>&1; then
			echo done.
		else
			echo failed.
		fi
	fi

	if [[ ! -f $_iked_key ]]; then
		# Just copy the generated isakmpd key
		cp $_isakmpd_key $_iked_key
		chmod 600 $_iked_key
		cp $_isakmpd_pub $_iked_pub
	fi

	ssh-keygen -A
}

# Re-link libraries, placing the objects in a random order.
reorder_libs() {
	local _dkdev _l _liba _libas _mp _tmpdir _remount=false _error=false

	[[ $library_aslr == NO ]] && return

	_dkdev=$(df /usr/lib | sed '1d;s/ .*//')
	_mp=$(mount | grep "^$_dkdev")

	# Skip if /usr/lib is on a nfs mounted filesystem.
	[[ $_mp == *' type nfs '* ]] && return

	echo -n 'reordering libraries:'

	# Only choose the latest version of the libraries.
	for _liba in /usr/lib/libc.so.*.a /usr/lib/libcrypto.so.*.a; do
		_liba=$(ls ${_liba%%.[0-9]*}*.a | sort -V | tail -1)
		for _l in $_libas; do
			[[ $_l == $_liba ]] && continue 2
		done
		_libas="$_libas $_liba"
	done

	# Remount read-write, if /usr/lib is on a read-only ffs filesystem.
	if [[ $_mp == *' type ffs '*'read-only'* ]]; then
		if mount -u -w $_dkdev; then
			_remount=true
		else
			echo ' failed.'
			return
		fi
	fi

	for _liba in $_libas; do
		_tmpdir=$(mktemp -dq /tmp/_librebuild.XXXXXXXXXXXX) && (
			set -o errexit
			_lib=${_liba#/usr/lib/}
			_lib=${_lib%.a}
			cd $_tmpdir
			ar x ${_liba}
			cc -shared -o $_lib $(ls *.so | sort -R) $(cat .ldadd)
			[[ -s $_lib ]] && file $_lib | fgrep -q 'shared object'
			LD_BIND_NOW=1 LD_LIBRARY_PATH=$_tmpdir awk 'BEGIN {exit 0}'
			LD_BIND_NOW=1 LD_LIBRARY_PATH=$_tmpdir openssl \
			    x509 -in /etc/ssl/cert.pem -out /dev/null
			install -F -S -o root -g bin -m 0444 $_lib /usr/lib/$_lib
		) || { _error=true; break; }
	done

	rm -rf /tmp/_librebuild.*

	# Restore previous mount state if it was changed.
	if $_remount; then
		mount -u -r $_dkdev || _error=true
	fi

	if $_error; then
		echo ' failed.'
	else
		echo ' done.'
	fi
}

# Re-link the kernel, placing the objects in a random order.
# Replace current with relinked kernel and inform root about it.
reorder_kernel() (
	local _dkdev=$(df /usr/share | sed '1d;s/ .*//')

	# Skip if /usr/share is on a nfs mounted filesystem.
	[[ $(mount | grep "^$_dkdev") == *" type nfs "* ]] && return

	_compile=/usr/share/compile
	_kernel=$(sysctl -n kern.osversion)
	_kernel=${_kernel%#*}
	_log=$_compile/$_kernel/relink.log
	_sha256=/var/db/kernel.SHA256

	mkdir -m 700 -p $_compile/$_kernel
	exec 1>$_log
	exec 2>&1

	trap 'trap - EXIT; logger -st /etc/rc \
		"kernel relinking failed; see $_log" >>/dev/console 2>&1' ERR
	trap 'logger -t /etc/rc "kernel relinking done"' EXIT
	set -e

	if [[ -f $_compile.tgz ]]; then
		rm -rf $_compile/$_kernel/*
		exec 1>$_log
		tar -C $_compile -xzf $_compile.tgz $_kernel
		rm -f $_compile.tgz
	fi

	sha256 -C $_sha256 /bsd

	cd $_compile/$_kernel
	make newbsd
	make newinstall

	echo "\nKernel has been relinked and is active on next reboot.\n"
	cat $_sha256
)

# Run rc.* script and email output to root.
# Usage: run_upgrade_script firsttime|sysmerge
run_upgrade_script() {
	local _suffix=$1

	[[ -n $_suffix ]] || return 1

	if [[ -f /etc/rc.$_suffix ]]; then
		mv /etc/rc.$_suffix /etc/rc.$_suffix.run
		. /etc/rc.$_suffix.run 2>&1 | tee /dev/tty |
			mail -Es "$(hostname) rc.$_suffix output" root >/dev/null
	fi
	rm -f /etc/rc.$_suffix.run
}

# Check filesystems, optionally by using a fsck(8) flag.
# Usage: do_fsck [-flag]
do_fsck() {
	fsck -p "$@@"
	case $? in
	0)	;;
	2)	exit 1
		;;
	4)	echo "Rebooting..."
		reboot
		echo "Reboot failed; help!"
		exit 1
		;;
	8)	echo "Automatic file system check failed; help!"
		exit 1
		;;
	12)	echo "Boot interrupted."
		exit 1
		;;
	130)	# Interrupt before catcher installed.
		exit 1
		;;
	*)	echo "Unknown error; help!"
		exit 1
		;;
	esac
}

# End subroutines.

stty status '^T'

# Set shell to ignore SIGINT (2), but not children; shell catches SIGQUIT (3)
# and returns to single user after fsck.
trap : 2
trap : 3	# Shouldn't be needed.

export HOME=/
export INRC=1
export PATH=/sbin:/bin:/usr/sbin:/usr/bin

# Must set the domainname before rc.conf, so YP startup choices can be made.
if [[ -s /etc/defaultdomain ]]; then
	domainname "$(stripcom /etc/defaultdomain)"
fi

# Get local functions from rc.subr to load rc.conf into scope.
FUNCS_ONLY=1 . /etc/rc.d/rc.subr
_rc_parse_conf

# If executed with the 'shutdown' parameter by the halt, reboot or shutdown:
# - update seed files
# - execute the rc.d scripts specified by $pkg_scripts in reverse order
# - bring carp interfaces down gracefully
if [[ $1 == shutdown ]]; then
	if echo 2>/dev/null >>/var/db/host.random || \
	    echo 2>/dev/null >>/etc/random.seed; then
		random_seed
	else
		echo warning: cannot write random seed to disk
	fi

	# If we are in secure level 0, assume single user mode.
	if (($(sysctl -n kern.securelevel) == 0)); then
		echo 'single user: not running shutdown scripts'
	else
		pkg_scripts=${pkg_scripts%%*( )}
		if [[ -n $pkg_scripts ]]; then
			echo -n 'stopping package daemons:'
			while [[ -n $pkg_scripts ]]; do
				_d=${pkg_scripts##* }
				pkg_scripts=${pkg_scripts%%*( )$_d}
				[[ -x /etc/rc.d/$_d ]] && /etc/rc.d/$_d stop
			done
			echo '.'
		fi

		[[ -f /etc/rc.shutdown ]] && sh /etc/rc.shutdown
	fi

	ifconfig | while read _if _junk; do
		[[ $_if == carp+([0-9]): ]] && ifconfig ${_if%:} down
	done

	exit 0
fi

# Add swap block-devices.
swapctl -A -t blk

# Run filesystem check unless a /fastboot file exists.
if [[ -e /fastboot ]]; then
	echo "Fast boot: skipping disk checks."
elif [[ $1 == autoboot ]]; then
	echo "Automatic boot in progress: starting file system checks."
	do_fsck
fi

# From now on, allow user to interrupt (^C) the boot process.
trap "echo 'Boot interrupted.'; exit 1" 3

# Unmount all filesystems except root.
umount -a >/dev/null 2>&1

# Mount all filesystems except those of type NFS and VND.
mount -a -t nonfs,vnd

# Re-mount the root filesystem read/writeable. (root on nfs requires this,
# others aren't hurt.)
mount -uw /
chmod og-rwx /bsd
ln -fh /bsd /bsd.booted

rm -f /fastboot

# Set flags on ttys.
echo 'setting tty flags'
ttyflags -a

# Set keyboard encoding.
if [[ -x /sbin/kbd && -s /etc/kbdtype ]]; then
	kbd "$(cat /etc/kbdtype)"
fi

wsconsctl_conf

# Set initial temporary pf rule set.
if [[ $pf != NO ]]; then
	RULES="block all"
	RULES="$RULES\npass on lo0"
	RULES="$RULES\npass in proto tcp from any to any port ssh keep state"
	RULES="$RULES\npass out proto { tcp, udp } from any to any port domain keep state"
	RULES="$RULES\npass out inet proto icmp all icmp-type echoreq keep state"
	RULES="$RULES\npass out inet proto udp from any port bootpc to any port bootps"
	RULES="$RULES\npass in inet proto udp from any port bootps to any port bootpc"
	if ifconfig lo0 inet6 >/dev/null 2>&1; then
		RULES="$RULES\npass out inet6 proto icmp6 all icmp6-type neighbrsol"
		RULES="$RULES\npass in inet6 proto icmp6 all icmp6-type neighbradv"
		RULES="$RULES\npass out inet6 proto icmp6 all icmp6-type routersol"
		RULES="$RULES\npass in inet6 proto icmp6 all icmp6-type routeradv"
		RULES="$RULES\npass out inet6 proto udp from any port dhcpv6-client to any port dhcpv6-server"
		RULES="$RULES\npass in inet6 proto udp from any port dhcpv6-server to any port dhcpv6-client"
	fi
	RULES="$RULES\npass in proto carp keep state (no-sync)"
	RULES="$RULES\npass out proto carp !received-on any keep state (no-sync)"
	if [[ $(sysctl vfs.mounts.nfs 2>/dev/null) == *[1-9]* ]]; then
		# Don't kill NFS.
		RULES="set reassemble yes no-df\n$RULES"
		RULES="$RULES\npass in proto { tcp, udp } from any port { sunrpc, nfsd } to any"
		RULES="$RULES\npass out proto { tcp, udp } from any to any port { sunrpc, nfsd } !received-on any"
	fi
	print -- "$RULES" | pfctl -f -
	pfctl -e
fi

fill_baddynamic udp
fill_baddynamic tcp

sysctl_conf

start_daemon slaacd >/dev/null 2>&1

echo 'starting network'

# Set carp interlock by increasing the demotion counter.
# Prevents carp from preempting until the system is booted.
ifconfig -g carp carpdemote 128

sh /etc/netstart

# Any write triggers a rekey.
dmesg >/dev/random

# Load pf rules and bring up pfsync interface.
if [[ $pf != NO ]]; then
	if [[ -f /etc/pf.conf ]]; then
		pfctl -f /etc/pf.conf
	fi
	if [[ -f /etc/hostname.pfsync0 ]]; then
		sh /etc/netstart pfsync0
	fi
fi

mount -s /usr >/dev/null 2>&1
mount -s /var >/dev/null 2>&1

random_seed

reorder_libs

# Clean up left-over files.
rm -f /etc/nologin /var/spool/lock/LCK.*
(cd /var/run && { rm -rf -- *; install -c -m 664 -g utmp /dev/null utmp; })
(cd /var/authpf && rm -rf -- *)

# Save a copy of the boot messages.
dmesg >/var/run/dmesg.boot

make_keys

echo -n 'starting early daemons:'
start_daemon syslogd ldattach pflogd nsd rebound unbound ntpd
start_daemon iscsid isakmpd iked sasyncd ldapd npppd
echo '.'

# Load IPsec rules.
if [[ $ipsec != NO && -f /etc/ipsec.conf ]]; then
	ipsecctl -f /etc/ipsec.conf
fi

echo -n 'starting RPC daemons:'
start_daemon portmap ypldap
rm -f /var/run/ypbind.lock
if [[ -n $(domainname) ]]; then
	start_daemon ypserv ypbind
fi
start_daemon mountd nfsd lockd statd amd
echo '.'

# Check and mount remaining file systems and enable additional swap.
mount -a
swapctl -A -t noblk
do_fsck -N
mount -a -N

# /var/crash should be a directory or a symbolic link to the crash directory
# if core dumps are to be saved.
if [[ -d /var/crash ]]; then
	savecore $savecore_flags /var/crash
fi

# Store ACPI tables in /var/db/acpi to be used by sendbug(1).
if [[ -x /usr/sbin/acpidump ]]; then
	acpidump -o /var/db/acpi/
fi

if [[ $check_quotas == YES ]]; then
	echo -n 'checking quotas:'
	quotacheck -a
	echo ' done.'
	quotaon -a
fi

# Build kvm(3) and /dev databases.
kvm_mkdb
dev_mkdb

# Set proper permission for the tty device files.
chmod 666 /dev/tty[pqrstuvwxyzPQRST]*
chown root:wheel /dev/tty[pqrstuvwxyzPQRST]*

# Check for the password temp/lock file.
if [[ -f /etc/ptmp ]]; then
	logger -s -p auth.err \
	    'password file may be incorrect -- /etc/ptmp exists'
fi

echo clearing /tmp

# Prune quickly with one rm, then use find to clean up /tmp/[lqv]*
# (not needed with mfs /tmp, but doesn't hurt there...).
(cd /tmp && rm -rf [a-km-pr-uw-zA-Z]*)
(cd /tmp &&
    find . -maxdepth 1 ! -name . ! -name lost+found ! -name quota.user \
	! -name quota.group ! -name vi.recover -execdir rm -rf -- {} \;)

# Create Unix sockets directories for X if needed and make sure they have
# correct permissions.
[[ -d /usr/X11R6/lib ]] && mkdir -m 1777 /tmp/.{X11,ICE}-unix

[[ -f /etc/rc.securelevel ]] && sh /etc/rc.securelevel

# rc.securelevel did not specifically set -1 or 2, so select the default: 1.
(($(sysctl -n kern.securelevel) == 0)) && sysctl kern.securelevel=1


# Patch /etc/motd.
if [[ ! -f /etc/motd ]]; then
	install -c -o root -g wheel -m 664 /dev/null /etc/motd
fi
if T=$(mktemp /tmp/_motd.XXXXXXXXXX); then
	sysctl -n kern.version | sed 1q >$T
	sed -n '/^$/,$p' </etc/motd >>$T
	cmp -s $T /etc/motd || cp $T /etc/motd
	rm -f $T
fi

if [[ $accounting == YES ]]; then
	[[ ! -f /var/account/acct ]] && touch /var/account/acct
	echo 'turning on accounting'
	accton /var/account/acct
fi

if [[ -x /sbin/ldconfig ]]; then
	echo 'creating runtime link editor directory cache.'
	[[ -d /usr/local/lib ]] && shlib_dirs="/usr/local/lib $shlib_dirs"
	[[ -d /usr/X11R6/lib ]] && shlib_dirs="/usr/X11R6/lib $shlib_dirs"
	ldconfig $shlib_dirs
fi

echo 'preserving editor files.'; /usr/libexec/vi.recover

# If rc.sysmerge exists, run it just once, and make sure it is deleted.
run_upgrade_script sysmerge

echo -n 'starting network daemons:'
start_daemon ldomd sshd switchd snmpd ldpd ripd ospfd ospf6d bgpd ifstated
start_daemon relayd dhcpd dhcrelay mrouted dvmrpd radiusd eigrpd

if ifconfig lo0 inet6 >/dev/null 2>&1; then
	if (($(sysctl -n net.inet6.ip6.forwarding) == 1)); then
		start_daemon route6d rtadvd
	fi
fi

start_daemon hostapd lpd smtpd slowcgi httpd ftpd
start_daemon ftpproxy ftpproxy6 tftpd tftpproxy identd inetd rarpd bootparamd
start_daemon rbootd mopd vmd spamd spamlogd sndiod
echo '.'

# If rc.firsttime exists, run it just once, and make sure it is deleted.
run_upgrade_script firsttime

# Run rc.d(8) scripts from packages.
if [[ -n $pkg_scripts ]]; then
	echo -n 'starting package daemons:'
	for _daemon in $pkg_scripts; do
		if [[ -x /etc/rc.d/$_daemon ]]; then
			start_daemon $_daemon
		else
			echo -n " ${_daemon}(absent)"
		fi
	done
	echo '.'
fi

[[ -f /etc/rc.local ]] && sh /etc/rc.local

# Disable carp interlock.
ifconfig -g carp -carpdemote 128

mixerctl_conf

echo -n 'starting local daemons:'
start_daemon apmd sensorsd hotplugd watchdogd cron wsmoused xenodm
echo '.'

reorder_kernel &

date
exit 0
@


1.506
log
@Improve reorder_kernel()

- check for and exit if /usr/share is on a nfs mounted filesystem
- add trap handlers that mail the logfile to the admin user
- use $_compile instead of $_compile_dir like in the installer
- use $_compile/$_kernel instead of $_kernel_dir
- remove the now redundant sha256 -h ... after make newinstall
- write stdout/stderr of the background subshell to a logfile

OK tb@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.505 2017/06/27 03:42:00 tedu Exp $
d224 1
a224 1
reorder_kernel() {
a229 7
	(
	set -e
	trap 'trap - EXIT; mail -s "$(hostname) Kernel relink failed" root \
		</var/log/kernel_relink.log' ERR
	trap 'mail -s "$(hostname) Kernel relink info" root \
		</var/log/kernel_relink.log' EXIT

d233 1
d236 9
d246 2
a247 2
		rm -rf $_compile
		mkdir -m 700 -p $_compile
d252 1
a252 1
	sha256 -q -C $_sha256 /bsd
d260 1
a260 2
	) >/var/log/kernel_relink.log 2>&1 &
}
d624 1
a624 1
reorder_kernel
@


1.505
log
@remove some old cruft.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.504 2017/06/22 16:03:36 deraadt Exp $
d225 5
d232 6
a237 1
	_compile_dir=/usr/share/compile
a239 1
	_kernel_dir=$_compile_dir/$_kernel
d242 5
a246 5
	if [[ -f /usr/share/compile.tgz ]]; then
		rm -rf $_compile_dir
		mkdir -m 700 -p $_compile_dir
		tar -C $_compile_dir -xzf /usr/share/compile.tgz $_kernel
		rm -f /usr/share/compile.tgz
d251 7
a257 10
	cd $_kernel_dir
	make newbsd   >$_kernel_dir/log 2>&1
	make newinstall >>$_kernel_dir/log 2>&1
	(umask 077 && sha256 -h $_sha256 /bsd)

	(echo "Kernel has been relinked and is active on next reboot\n"; \
		cat $_sha256; echo "\nRelink log:\n"; cat $_kernel_dir/log ) |
		mail -Es "$(hostname) Kernel relink info" root >/dev/null

	) >/dev/null 2>&1 &
@


1.504
log
@Adjust relink procedure to use new targets.  Better use semantics for
users and developers.
diff from rpe, ok tb
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.503 2017/06/19 22:50:50 deraadt Exp $
d384 1
a384 1
# Set flags on ttys. (Do early, in case they use tty for SLIP in netstart.)
a435 6

# Recover resolv.conf in case dhclient died hard.
if [[ -f /etc/resolv.conf.save ]]; then
	mv -f /etc/resolv.conf.save /etc/resolv.conf
	touch /etc/resolv.conf
fi
@


1.503
log
@As early as possible, create a link /bsd.booted to the /bsd kernel we
presume we booted from.  If you boot from another kernel, we cannot help
you later with hibernate, sorry -- The kernel does not get a useable
filename from the bootblocks.

In the bootblocks, detect a live hibernate signature and boot from
/bsd.booted instead.

with yasuoka, lots of discussion with mlarkin, ok tom
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.502 2017/06/14 21:39:53 rpe Exp $
d231 1
a231 1
	_sha256=$_kernel_dir/SHA256
d240 1
a240 1
	[[ -f $_sha256 ]] && sha256 -q -C $_sha256 /bsd
d244 2
a245 2
	make install >>$_kernel_dir/log 2>&1
	sha256 -h $_sha256 /bsd
@


1.502
log
@Add a new function reorder_kernel() that relinks and installs the
new kernel in the background on system startup. It stores the hash
of the new kernel and sends a notification email to the admin or
root user. If it finds /usr/share/compile.tgz, it removes the
existing compile dir and replaces it with the content of (new)
archive. If the hash of /bsd does not match the stored one, no
relinking happens.

Idea from, joint work with and OK deraadt@@
OK tb@@ halex@@
unnoticed by many
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.501 2017/06/06 13:59:37 florian Exp $
d380 1
@


1.501
log
@start slaacd as early as possible, right after pf and sysctl.conf are
setup.
Input & OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.500 2017/06/03 22:59:09 deraadt Exp $
d222 32
d620 2
@


1.500
log
@We have been running a small awk program before installing the relinked libc.
Perform the same kind of test for relinked libcrypto, using an openssl
sequence (proposed by sthen)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.499 2017/06/03 22:33:36 deraadt Exp $
d396 2
d443 1
a443 1
start_daemon syslogd ldattach pflogd slaacd nsd rebound unbound ntpd
@


1.499
log
@Immediately after mounting / read-write, chmod og-rwx the kernel.  Remote
prying eyes were already been hindered at determining kernel addresses, now
local prying eyes are also hindered.
ok tb rpe
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.498 2017/05/30 12:04:26 tb Exp $
d202 2
@


1.498
log
@Introduce a scary rc.conf(8) knob library_aslr=(YES|NO) to turn off the
reordering of libraries by rc(8). This way machines with very slow disk I/O
have a chance of booting within reasonable time now that libcrypto is also
randomized.

Discussed with various;
input & ok from deraadt ajacoutot
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.497 2017/05/29 10:24:06 florian Exp $
d345 1
@


1.497
log
@rc.d(8) for slaacd
OK phessler, deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.496 2017/05/29 09:44:01 deraadt Exp $
d161 6
a166 3
	local _l _liba _libas _tmpdir _remount=false _error=false
	local _dkdev=$(df /usr/lib | sed '1d;s/ .*//')
	local _mp=$(mount | grep "^$_dkdev")
@


1.496
log
@Randomize link-order of libcrypto as we do with libc.  This library
has many small functions without significant local storage, therefore
less tail protection from -fstack-protector-strong to prevent their use
as ROP gadgets.  It is used in security contexts.  Also many functions
dribble pointers onto the stack, allowing discovery of gadgets via the
fixed relative addresses, so let's randomly bias those.
ok tedu jsing

The rc script will soon need a strategy for skipping this step on
machines with poor IO performance.  Or maybe do it less often?  However,
I don't see many more libraries we'll do this with, these are the two
most important ones.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.495 2017/05/01 14:01:47 rpe Exp $
d435 1
a435 1
start_daemon syslogd ldattach pflogd nsd rebound unbound ntpd
@


1.495
log
@Comments and spacing.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.494 2017/04/18 23:06:50 schwarze Exp $
d171 1
a171 1
	for _liba in /usr/lib/libc.so.*.a; do
@


1.494
log
@Simplify patching of motd(5), also making it agree better with the
documentation if the first line of the file is blank.
Quirk reported by Anthony Coulter <bsd at anthonycoulter dot name>.
OK rpe@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.493 2017/02/26 16:51:18 matthieu Exp $
a11 1

d83 2
a85 1
	# push the old seed into the kernel
a87 1
	# ... and create a future seed
a88 1
	# and create a seed file for the boot-loader
d278 1
a278 1
# Need to get local functions from rc.subr.
a279 2

# Load rc.conf into scope.
d282 4
a311 1
	# Bring carp interfaces down gracefully.
d322 1
d330 1
d333 1
d335 2
a337 2
mount -uw /		# root on nfs requires this, others aren't hurt.
rm -f /fastboot		# XXX (root now writeable)
d339 7
a345 1
# Set flags on ttys.  (Do early, in case they use tty for SLIP in netstart.)
a384 1
# Fill net.inet.(tcp|udp).baddynamic lists from /etc/services.
d404 2
a405 1
dmesg >/dev/random	# Any write triggers a rekey.
d429 2
a430 1
dmesg >/var/run/dmesg.boot	# Save a copy of the boot messages.
d485 1
a485 1
# Check the password temp/lock file.
d572 2
a573 1
ifconfig -g carp -carpdemote 128	# Disable carp interlock.
@


1.493
log
@Switch to xenodm(1).

Do it now deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.492 2016/12/27 09:17:52 jca Exp $
d507 1
a507 2
	echo "" >>$T
	sed '1,/^$/d' </etc/motd >>$T
@


1.492
log
@Remove user uucp and group news from base.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.491 2016/11/04 22:12:46 rpe Exp $
d569 1
a569 1
start_daemon apmd sensorsd hotplugd watchdogd cron wsmoused xdm
@


1.491
log
@spacing
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.490 2016/10/07 05:47:24 otto Exp $
d417 1
a417 1
rm -f /etc/nologin /var/spool/lock/LCK.* /var/spool/uucp/STST/*
@


1.490
log
@first set -max limit, then -cur, otherwise if -cur si higher than the current
max, it won't be set. noted by Evgeny Grin; ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.489 2016/10/06 20:20:41 reyk Exp $
d223 1
d225 1
@


1.489
log
@Add switchd

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.488 2016/10/06 19:32:23 reyk Exp $
d34 1
a34 1
	for _suffix in {,-cur,-max}; do
@


1.488
log
@Move vmd down as VMs might need the host's dhcpd, httpd etc. on startup.

OK mlarkin@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.487 2016/09/27 20:18:34 rpe Exp $
d530 1
a530 1
start_daemon ldomd sshd snmpd ldpd ripd ospfd ospf6d bgpd ifstated
@


1.487
log
@Run acpidump(8) at system startup and store ACPI tables in the
/var/db/acpi directory. Later sendbug(1) will use this data in
bug reports. That directory is created by mtree.

idea from and OK deraadt
OK kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.486 2016/07/10 09:08:18 rpe Exp $
d530 1
a530 1
start_daemon ldomd vmd sshd snmpd ldpd ripd ospfd ospf6d bgpd ifstated
d541 1
a541 1
start_daemon rbootd mopd spamd spamlogd sndiod
@


1.486
log
@Fix detection of /usr/lib on NFS.
Found by Frank Scheiner, thanks for reporting this.

OK krw, halex
'cool' deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.485 2016/05/29 15:36:06 rpe Exp $
d452 5
@


1.485
log
@Improve error handling in reorder_libs()

- run commands in subshell only if mktemp is successful
- on error just leave the for-loop but set _error=true
- cleanup tmpdirs afterwards
- set _error=true if the ro remount fails
- print appropriate final message depending on $_error

positive feedback from deraadt
OK krw
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.484 2016/05/27 17:03:45 rpe Exp $
d164 1
a164 1
	local _dkdev=/dev/$(stat -L -f '%Sd' /usr/lib)
@


1.484
log
@No need to show the messages if we skip in case of /usr/lib on nfs.

OK deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.483 2016/05/27 16:49:08 rpe Exp $
d163 1
a163 1
	local _l _liba _libas _tmpdir _remount=false
d192 1
a192 2
		_tmpdir=$(mktemp -dq /tmp/_librebuild.XXXXXXXXXXXX) || return
		(
d202 1
a202 2
		)
		rm -rf /tmp/_librebuild.${_tmpdir#*.}
d205 2
d209 1
a209 1
		mount -u -r $_dkdev
d212 5
a216 1
	echo ' done.'
@


1.483
log
@Add function comments.

OK sthen, deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.482 2016/05/26 16:29:51 deraadt Exp $
d167 3
a170 6

	# Skip if /usr/lib is on a nfs mounted filesystem.
	if [[ $_mp == *' type nfs '* ]]; then
		echo ' skipped.'
		return
	fi
@


1.482
log
@whitespace found during review
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.481 2016/05/26 14:59:48 rpe Exp $
d161 1
d218 2
@


1.481
log
@- rename rebuildlibs() to reorder_libs()
- move the info message inside the function
- skip reordering if /usr/lib is on a nfs mounted filesystem
- temporarily remount rw if /usr/lib is on a ro ffs file-system

OK deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.480 2016/05/22 15:16:47 rpe Exp $
d213 1
a213 1
	
d314 1
a314 1
# Add swap block-devices. 
@


1.480
log
@Use the -F flag of install(1) to ensure the file's content is flushed to disk.

OK deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.479 2016/05/14 08:21:40 jmc Exp $
d161 12
a172 2
rebuildlibs() {
	local _l _liba _libas _tmpdir
d174 1
a174 1
	# Only choose newest
d183 10
d208 7
d408 1
a408 3
echo -n 'reordering libraries:'
rebuildlibs
echo ' done.'
@


1.479
log
@unhphenate the world: re-order -> reorder
sthen does not object
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.478 2016/05/05 21:52:16 sthen Exp $
d184 1
a184 1
			install -S -o root -g bin -m 0444 $_lib /usr/lib/$_lib
@


1.478
log
@show what we're doing when reordering libraries, otherwise the text
above it is "starting network", which can make you think something is
broken when your machine is as slow as some of mine.

"Yeah, that's a pretty crappy machine" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.477 2016/04/27 14:49:11 ajacoutot Exp $
d381 1
a381 1
echo -n 're-ordering libraries:'
@


1.477
log
@We want to run sysmerge(8) a bit earlier in the boot process so that it has a
chance to update the *default* configuration of the important daemons.
Factorize rc.firsttime into a run_upgrade_script() function which takes the
script suffix name as an argument.
i.e. run_upgrade_script sysmerge / run_upgrade_script firsttime

discussed with deraadt@@
ok deraadt@@ rpe@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.476 2016/04/27 09:17:53 rpe Exp $
d381 1
d383 1
@


1.476
log
@Use 'sort -V' which is actually meant to sort version numbers.

Noted by zhuk@@
OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.475 2016/04/26 14:56:14 deraadt Exp $
d190 11
d490 3
d509 1
a509 6
if [[ -f /etc/rc.firsttime ]]; then
	mv /etc/rc.firsttime /etc/rc.firsttime.run
	. /etc/rc.firsttime.run 2>&1 | tee /dev/tty |
		mail -Es "$(hostname) rc.firsttime output" root >/dev/null
fi
rm -f /etc/rc.firsttime.run
@


1.475
log
@Re-link (only the newest) libc.so, placing the objects in a random
order.
with shell script assistance from rpe
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.474 2015/12/29 19:41:24 rpe Exp $
d166 1
a166 1
		_liba=$(ls ${_liba%%.[0-9]*}*.a | sort -n | tail -1)
@


1.474
log
@Replace single pattern case-blocks with simpler code.

OK halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.473 2015/12/06 13:51:41 rpe Exp $
d161 29
d369 2
@


1.473
log
@Add missing rc bits for rebound.

rc-wise OK aja@@ jasper@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.472 2015/12/05 09:55:18 jasper Exp $
d241 1
a241 3
		case $_if in
		carp+([0-9]):) ifconfig ${_if%:} down ;;
		esac
d294 1
a294 2
	case $(sysctl vfs.mounts.nfs 2>/dev/null) in
	*[1-9]*)
d299 1
a299 2
		;;
	esac
@


1.472
log
@add rcscript for vmd

ok mlarkin@@
prompted by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.471 2015/12/02 20:39:57 rpe Exp $
d355 1
a355 1
start_daemon syslogd ldattach pflogd nsd unbound ntpd
@


1.471
log
@Since version 1.467 of /etc/rc, it was no longer possible to add
shlib_dirs using /etc/rc.conf.local.

Fix from Jan Johansson, thanks.

OK krw@@, halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.470 2015/11/27 03:53:28 deraadt Exp $
d453 1
a453 1
start_daemon ldomd sshd snmpd ldpd ripd ospfd ospf6d bgpd ifstated
@


1.470
log
@yppasswd went away
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.469 2015/11/10 20:34:58 tim Exp $
d445 1
a445 1
	[[ -d /usr/local/lib ]] && shlib_dirs="/usr/local/lib"
@


1.469
log
@Fix typos in comments
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.468 2015/11/01 14:32:51 rpe Exp $
d368 1
a368 1
	start_daemon ypserv ypbind yppasswdd
@


1.468
log
@A missed backticks to $() conversion.

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.467 2015/10/18 21:33:18 rpe Exp $
d132 1
a132 1
# Generate keys for isakmpd, iked and sshd if the don't exist yet.
d221 1
a221 1
	# If we are in secure level 0, asume single user mode.
@


1.467
log
@Finish first round of rework of the rc script.

OK krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.466 2015/10/18 03:51:11 deraadt Exp $
d471 1
a471 1
		mail -Es "`hostname` rc.firsttime output" root >/dev/null
@


1.466
log
@Forcibly delete /var/run/ypbind.lock to prepare for the worst cases.
ok aja
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.465 2015/10/03 18:57:11 renato Exp $
d401 1
a401 1
if [ -f /etc/ptmp ]; then
d419 2
a420 1
[ -f /etc/rc.securelevel ] && sh /etc/rc.securelevel
d422 2
a423 3
if [ `sysctl -n kern.securelevel` -eq 0 ]; then
	sysctl kern.securelevel=1
fi
d426 1
a426 1
if [ ! -f /etc/motd ]; then
d429 1
a429 1
if T=`mktemp /tmp/_motd.XXXXXXXXXX`; then
d437 4
a440 5
if [ X"${accounting}" = X"YES" ]; then
	if [ ! -f /var/account/acct ]; then
		touch /var/account/acct
	fi
	echo 'turning on accounting'; accton /var/account/acct
d443 1
a443 1
if [ -f /sbin/ldconfig ]; then
d445 2
a446 6
	if [ -d /usr/local/lib ]; then
		shlib_dirs="/usr/local/lib $shlib_dirs"
	fi
	if [ -d /usr/X11R6/lib ]; then
		shlib_dirs="/usr/X11R6/lib $shlib_dirs"
	fi
d457 1
a457 2
	fw=`sysctl -n net.inet6.ip6.forwarding`
	if [ X"${fw}" = X"1" ]; then
d468 1
a468 1
if [ -f /etc/rc.firsttime ]; then
d476 1
a476 1
if [ -n "${pkg_scripts}" ]; then
d478 3
a480 3
	for _r in $pkg_scripts; do
		if [ -x /etc/rc.d/${_r} ]; then
			start_daemon ${_r}
d482 1
a482 1
			echo -n " ${_r}(absent)"
d488 1
a488 1
[ -f /etc/rc.local ] && sh /etc/rc.local
d490 1
a490 1
ifconfig -g carp -carpdemote 128	# disable carp interlock
d493 1
@


1.465
log
@Enable eigrpd(8) and eigrpctl(8) in the builds

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.464 2015/09/29 17:40:56 rpe Exp $
d366 1
@


1.464
log
@Besides the usual style changes:
- verify that kbd is executable and kbdtype is not empty
- use safer 'print --' to pipe the initial pf ruleset to pfctl
- simplify the ipsecctl if-block

Feedback and OK halex@@
OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.463 2015/09/13 13:29:22 rpe Exp $
d458 1
a458 1
start_daemon relayd dhcpd dhcrelay mrouted dvmrpd radiusd
@


1.463
log
@- FOO=bar; export FOO -> export FOO=bar
- run domainname only with a non-empty /etc/defaultdomain file
- Make single-user if-block more intuitive, which also matches
  better what the comment actually says

OK halex@@, krw@@ on a similar diff
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.462 2015/09/13 09:22:05 rpe Exp $
d270 3
a272 2
if [ -f /sbin/kbd -a -f /etc/kbdtype ]; then
	kbd `cat /etc/kbdtype`
d277 2
a278 1
if [ X"${pf}" != X"NO" ]; then
d296 1
a296 1
	case `sysctl vfs.mounts.nfs 2>/dev/null` in
d304 1
a304 1
	echo $RULES | pfctl -f -
a313 1
# Set hostname, turn on network.
d315 3
d319 3
a321 1
if [ -f /etc/resolv.conf.save ]; then
d325 1
d327 1
d331 2
a332 2
if [ X"${pf}" != X"NO" ]; then
	if [ -f /etc/pf.conf ]; then
d335 1
a335 2
	# Bring up pfsync after the working ruleset has been loaded.
	if [ -f /etc/hostname.pfsync0 ]; then
d350 1
a350 2
# Save a copy of the boot messages.
dmesg >/var/run/dmesg.boot
d360 2
a361 4
if [ X"${ipsec}" != X"NO" ]; then
	if [ -f /etc/ipsec.conf ]; then
		ipsecctl -f /etc/ipsec.conf
	fi
d366 1
a366 1
if [ X"`domainname`" != X"" ]; then
d372 1
a374 2

# Check and mount networked filesystems.
d380 2
a381 2
if [ -d /var/crash ]; then
	savecore ${savecore_flags} /var/crash
d384 1
a384 1
if [ X"${check_quotas}" = X"YES" ]; then
d391 2
a392 1
kvm_mkdb			# build kvm(3) databases
d394 2
@


1.462
log
@Remove setup_X_sockets():
The creation of Unix sockets directories in /tmp for X happens right
after pruning /tmp. So the whole dance of checking for their
existence, ownership or permissions is not necessary. It's safe to
just create them with the right permissions if X is installed.

Changes to do_fsck():
Remove the _flags variable and pass flags to fsck directly with "$@@".

Feedback and OK halex@@
OK krw@@ on a similar diff
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.461 2015/09/12 14:48:06 sthen Exp $
d198 3
a200 4
HOME=/; export HOME
INRC=1; export INRC
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
d203 2
a204 2
if [ -f /etc/defaultdomain ]; then
	domainname `stripcom /etc/defaultdomain`
d213 1
a213 1
if [ X"$1" = X"shutdown" ]; then
d221 4
a224 2
	# If we are in secure level 0, assume single user mode.
	if [ `sysctl -n kern.securelevel` -ne 0 ]; then
d226 1
a226 1
		if [ -n "${pkg_scripts}" ]; then
d228 4
a231 4
			while [ -n "${pkg_scripts}" ]; do
				_r=${pkg_scripts##* }
				pkg_scripts=${pkg_scripts%%*( )${_r}}
				[ -x /etc/rc.d/${_r} ] && /etc/rc.d/${_r} stop
d236 1
a236 3
		[ -f /etc/rc.shutdown ] && sh /etc/rc.shutdown
	else
		echo single user: not running shutdown scripts
d240 3
a242 3
	ifconfig | while read a b; do
		case $a in
		carp+([0-9]):) ifconfig ${a%:} down ;;
d249 1
d252 1
a252 1
if [ -e /fastboot ]; then
d254 1
a254 1
elif [ X"$1" = X"autoboot" ]; then
@


1.461
log
@Provide an ftpproxy6 rc script. ftp-proxy can only open one listening socket
at a time, so a second instance of the daemon is required.

OK mikeb stsp ajacoutot
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.460 2015/08/28 18:10:46 rpe Exp $
d161 2
a162 24
# Create Unix sockets directories for X if needed and make sure they have
# correct permissions.
setup_X_sockets() {
	if [ -d /usr/X11R6/lib ]; then
		for d in /tmp/.X11-unix /tmp/.ICE-unix ; do
			if [ -d $d ]; then
				if [ `ls -ld $d | cut -d' ' -f4` \
				    != root ]; then
					chown root $d
				fi
				if [ `ls -ld $d | cut -d' ' -f1` \
				    != drwxrwxrwt ]; then
					chmod 1777 $d
				fi
			elif [ -e $d ]; then
				echo "Error: $d exists and isn't a directory."
			else
				mkdir -m 1777 $d
			fi
		done
	fi
}

# Check filesystems, optionally by using a flag for fsck(8) passed as $1.
d164 1
a164 3
	local _flags=$1

	fsck -p $_flags
d166 2
a167 4
	0)
		;;
	2)
		exit 1
d169 1
a169 2
	4)
		echo "Rebooting..."
d174 1
a174 2
	8)
		echo "Automatic file system check failed; help!"
d177 1
a177 2
	12)
		echo "Boot interrupted."
d180 1
a180 2
	130)
		# Interrupt before catcher installed.
d183 1
a183 2
	*)
		echo "Unknown error; help!"
d408 3
a410 1
setup_X_sockets
@


1.460
log
@Changes for start_daemon():
- use more descriptive variable name

Changes for make_keys():
- use variables for file paths
- key -> keys in message
- take into account the return codes of isakmpd private *and* public
  key generation

OK krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.459 2015/08/22 23:32:18 rpe Exp $
d491 1
a491 1
start_daemon ftpproxy tftpd tftpproxy identd inetd rarpd bootparamd
@


1.459
log
@- add usage info
- initialize _ban variable
- style

OK halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.458 2015/08/22 10:45:59 rpe Exp $
d124 5
a128 6
	local _n
	for _n; do
		eval _do=\${${_n}_flags}
		if [ X"${_do}" != X"NO" ]; then
			/etc/rc.d/${_n} start
		fi
d134 11
a144 8
	if [ ! -f /etc/isakmpd/private/local.key ]; then
		echo -n "openssl: generating isakmpd/iked RSA key... "
		if openssl genrsa -out /etc/isakmpd/private/local.key 2048 \
		    >/dev/null 2>&1; then
			chmod 600 /etc/isakmpd/private/local.key
			openssl rsa -out /etc/isakmpd/local.pub -in \
			    /etc/isakmpd/private/local.key -pubout \
			    >/dev/null 2>&1
d151 1
a151 1
	if [ ! -f /etc/iked/private/local.key ]; then
d153 3
a155 3
		cp /etc/isakmpd/private/local.key /etc/iked/private/local.key
		chmod 600 /etc/iked/private/local.key
		cp /etc/isakmpd/local.pub /etc/iked/local.pub
@


1.458
log
@Restore previous behaviour for wsconsctl_conf().

In wsconsctl.conf configuration variables can contain doublequotes
which are removed by the shell if wsconsctl is used interactively.

In scripts, without using eval, these doublequotes are preserved
and the wsconsctl command complains about "illegal character in
input".

Found by and OK jmc@@
With feedback from and OK krw@@, halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.457 2015/08/13 17:24:42 rpe Exp $
d98 1
d102 1
d105 1
a105 1
		# Variables are local
d107 4
a110 2
			[ "x${_srv}" = "x${_service}" ] || continue
			_ban="${_ban:+${_ban},}+${_port}"
d112 3
a114 3
			if [ ${#_ban} -gt 1024 ]; then
				sysctl -q ${_sysctl}=${_ban}
				_ban=""
d117 1
a117 1
		[ "${_ban}" ] && sysctl -q ${_sysctl}=${_ban}
@


1.457
log
@Changes to sysctl_conf(), mixerctl_conf() and wsconsctl_conf():
- no need to check for non-empty *.conf files, stripcom handles that now
- pipe stripcom output directly to while-read-loop
- quote the argument to the *ctl commands
- no need to double shutup mixerctl, -q already means quiet

OK krw@@, halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.456 2015/08/12 17:27:27 rpe Exp $
d80 1
a80 1
		wsconsctl "$_line"
@


1.456
log
@Start the rework of the /etc/rc shell script.

General changes:
- apply a similar 'style' as used in the installer scripts
- improve comments to be more to the point, remove where code is obvious
- document usage of functions if they have arguments
- rename variables where it improves readability
- replace really old-school shell code with more contemporary idioms

Changes to stripcom():
- skip empty files (eleminates tests for this before calling stripcom)
- remove {} around the while-loop, feed file directly
- instead of continue if empty and then print, print only if non-empty
- use the safer "print -r --" instead of plain "echo"
- quote "$_line" on output to prevent globbing

Changes to update_limit():
- use {,-cur,-max} instead of "" -cur -max
- eleminate if-block with reverse test and continue

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.455 2015/08/03 04:19:25 yasuoka Exp $
d51 1
a51 1
# Apply sysctl(8) settings.
d53 3
a55 1
	[ -s /etc/sysctl.conf ] || return
d57 1
a57 6
	# delete comments and blank lines
	set -- `stripcom /etc/sysctl.conf`
	while [ $# -ge 1 ] ; do
		sysctl $1
		# update limits if needed
		case $1 in
d59 1
a59 2
			update_limit -p maxproc
			;;
d61 1
a61 2
			update_limit -n openfiles
			;;
a62 1
		shift
d66 1
a66 1
# Apply mixerctl(1) settings.
d68 3
a70 7
	[ -s /etc/mixerctl.conf ] || return

	# delete comments and blank lines
	set -- `stripcom /etc/mixerctl.conf`
	while [ $# -ge 1 ] ; do
		mixerctl -q $1 >/dev/null 2>&1
		shift
d74 1
a74 1
# Apply wscons system driver settings using wsconsctl(8).
d76 1
a76 1
	local save_IFS="$IFS"
d78 3
a80 9
	[ -x /sbin/wsconsctl -a -s /etc/wsconsctl.conf ] || return
	# delete comments and blank lines
	IFS="
"
	set -- `stripcom /etc/wsconsctl.conf`
	IFS="$save_IFS"
	while [ $# -ge 1 ] ; do
		eval wsconsctl $1
		shift
@


1.455
log
@Place etc/defaults/radiusd.conf and etc/rc.d/radiusd.  Modify etc/rc
to hook the rc script and modify etc/rc.conf to make it disable by
default.  Also add an entry for /etc/radiusd.conf to etc/changelist
and etc/mtree/special.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.454 2015/07/20 06:59:39 rpe Exp $
d13 3
a15 2
# Strip comments (and leading/trailing whitespace if IFS is set) from a file
# and spew to stdout.
d17 1
a17 2
	local _file="$1"
	local _line
d19 6
a24 7
	{
		while read _line ; do
			_line=${_line%%#*}		# strip comments
			[ -z "$_line" ] && continue
			echo $_line
		done
	} <$_file
d27 2
a28 2
# Update resource limits when sysctl changes.
# Usage: update_limit -X loginconf_name
d30 18
a47 23
	local _fl="$1"	# ulimit flag
	local _lc="$2"	# login.conf name
	local _new _suf

	for _suf in "" -cur -max; do
		_new=`getcap -f /etc/login.conf -s ${_lc}${_suf} daemon 2>/dev/null`
		if [ X"$_new" != X"" ]; then
			if [ X"$_new" = X"infinity" ]; then
				_new=unlimited
			fi
			case "$_suf" in
			-cur)
				ulimit -S $_fl $_new
				;;
			-max)
				ulimit -H $_fl $_new
				;;
			*)
				ulimit $_fl $_new
				return
				;;
			esac
		fi
@


1.454
log
@Disable Strict Bourne shell mode for /etc/rc and /etc/netstart to be
able to use ksh syntax within these scripts. This way init doesn't
need to be changed, which starts /etc/rc using /bin/sh and people
can still use "sh /etc/netstart ifname".

Idea from and OK halex@@
OK deraadt@@ krw@@ guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.453 2015/07/19 04:44:36 rpe Exp $
d497 1
a497 1
start_daemon relayd dhcpd dhcrelay mrouted dvmrpd
@


1.453
log
@Replace test command with [].

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.452 2015/07/18 21:12:40 rpe Exp $
d6 3
@


1.452
log
@Put the opening curley brackets on the same line as the function name.

OK krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.451 2015/07/18 00:37:23 rpe Exp $
d19 1
a19 1
			test -z "$_line" && continue
d56 1
a56 1
	test -s /etc/sysctl.conf || return
d77 1
a77 1
	test -s /etc/mixerctl.conf || return
d91 1
a91 1
	test -x /sbin/wsconsctl -a -s /etc/wsconsctl.conf || return
@


1.451
log
@- remove trailing blanks introduced in previous commit
- no space in redirections like </foo or >$bar
- few other minor whitespaces

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.450 2015/07/18 00:03:34 rpe Exp $
d76 1
a76 2
mixerctl_conf()
{
d88 1
a88 2
wsconsctl_conf()
{
d103 1
a103 2
random_seed()
{
d117 1
a117 2
fill_baddynamic()
{
d138 1
a138 2
start_daemon()
{
d149 1
a149 2
make_keys()
{
d176 1
a176 2
setup_X_sockets()
{
d198 1
a198 2
do_fsck()
{
@


1.450
log
@Improve comments
- Add comments for functions
- Start comments with capital letters
- End comments with a full stop
- Allow comments to extend up to column 80

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.449 2015/05/02 09:35:44 ajacoutot Exp $
d22 1
a22 1
	} < $_file
d54 1
a54 1
# Apply sysctl(8) settings. 
d83 1
a83 1
		mixerctl -q $1 > /dev/null 2>&1
d119 1
a119 1
# services. 
d141 1
a141 1
# Usage: start_daemon daemon1 daemon2 daemon3 
d372 1
a372 1
dmesg > /dev/random	# Any write triggers a rekey.
d473 3
a475 3
	sysctl -n kern.version | sed 1q > $T
	echo "" >> $T
	sed '1,/^$/d' < /etc/motd >> $T
d484 1
a484 1
	echo 'turning on accounting';	accton /var/account/acct
d498 1
a498 1
echo 'preserving editor files.';	/usr/libexec/vi.recover
@


1.449
log
@Drop pf_rules and ipsec_rules from rc.conf(5); it shouldn't have been made
tweakable: there's no real point and these files support the 'include' option so
one can always get its config from whatever path... especially useful when
testing a new ruleset.

man page inputs from schwarze@@
ok halex@@ schwarze@@ rpe@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.448 2015/03/11 14:48:58 krw Exp $
d3 3
a5 4
# System startup script run by init on autoboot
# or after single-user.
# Output and error are redirected to console by init,
# and the console is the controlling terminal.
d9 3
a11 2
# Strip comments (and leading/trailing whitespace if IFS is set)
# from a file and spew to stdout
d25 1
a25 1
# Update resource limits when sysctl changes
d54 1
d75 1
d88 1
d117 3
d140 2
d153 1
d180 2
a181 2
# create Unix sockets directories for X if needed and make sure they have
# correct permissions
d204 1
d231 1
a231 1
		# interrupt before catcher installed
d241 1
a241 1
# End subroutines
d245 2
a246 2
# Set shell to ignore SIGINT (2), but not children;
# shell catches SIGQUIT (3) and returns to single user after fsck.
d248 1
a248 1
trap : 3	# shouldn't be needed
d255 1
a255 1
# must set the domainname before rc.conf, so YP startup choices can be made
d260 1
a260 1
# need to get local functions from rc.subr
d263 1
a263 1
# load rc.conf into scope
d292 1
a292 1
	# bring carp interfaces down gracefully
d315 1
a315 1
mount -uw /		# root on nfs requires this, others aren't hurt
d318 1
a318 1
# set flags on ttys.  (do early, in case they use tty for SLIP in netstart)
d348 1
a348 1
		# don't kill NFS
d358 1
a358 1
# Fill net.inet.(tcp|udp).baddynamic lists from /etc/services
d364 1
a364 1
# set hostname, turn on network
d372 1
a372 1
dmesg > /dev/random	# any write triggers a rekey
d374 1
d379 1
a379 1
	# bring up pfsync after the working ruleset has been loaded
d390 1
a390 1
# clean up left-over files
d395 1
a395 1
# save a copy of the boot messages
d405 1
d423 1
a423 1
# check and mount networked filesystems
d427 2
a428 2
# /var/crash should be a directory or a symbolic link
# to the crash directory if core dumps are to be saved.
d445 1
a445 1
# check the password temp/lock file
d453 2
a454 2
# prune quickly with one rm, then use find to clean up /tmp/[lqv]*
# (not needed with mfs /tmp, but doesn't hurt there...)
d463 1
a463 1
# rc.securelevel did not specifically set -1 or 2, so select the default: 1
d468 1
a468 1
# patch /etc/motd
d516 1
a516 1
# If rc.firsttime exists, run it just once, and make sure it is deleted
d524 1
a524 1
# Run rc.d(8) scripts from packages
@


1.448
log
@'rc.firstime' -> 'rc.firsttime' in comment.

Diff from Navan Carson via tech@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.447 2015/01/22 19:00:24 krw Exp $
d365 2
a366 2
	if [ -f ${pf_rules} ]; then
		pfctl -f ${pf_rules}
d395 2
a396 2
	if [ -f ${ipsec_rules} ]; then
		ipsecctl -f ${ipsec_rules}
@


1.447
log
@Use /etc/services names in all the default pf rules (most already
did). This allows any local changes to /etc/services to be effective
if all you have is the default.

Issue pointed out by Brian S. Vangsgaard on bugs@@. Thanks!

ok phessler@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.446 2014/12/03 20:13:49 florian Exp $
d504 1
a504 1
# If rc.firstime exists, run it just once, and make sure it is deleted
@


1.446
log
@Unhook rtsol(8) and rtsold(8) from the build.
OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.445 2014/11/30 18:06:45 dcoppa Exp $
d321 2
a322 2
	RULES="$RULES\npass in proto tcp from any to any port 22 keep state"
	RULES="$RULES\npass out proto { tcp, udp } from any to any port 53 keep state"
d340 2
a341 2
		RULES="$RULES\npass in proto { tcp, udp } from any port { 111, 2049 } to any"
		RULES="$RULES\npass out proto { tcp, udp } from any to any port { 111, 2049 } !received-on any"
@


1.445
log
@
Fix comment: We don't use RC4 anymore, it's better to be more
generic.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.444 2014/11/17 18:19:08 deraadt Exp $
d494 1
a494 3
	if [ X"${fw}" = X"0" ]; then
		start_daemon rtsold
	else
@


1.444
log
@Make /var/tmp a symbolic link to /tmp.  The creation of /var/tmp in the
often space-constrained /var filesystem was a historical mistake.  There
are big implications for the daemons which assume they won't run out of
space, and this is a first step towards trying to improve the situation.

Move /tmp to the same 7-day expiration rules that /var/tmp had.
vi.recover works just as well as before, except on memory filesystems;
indicating that vi should be repaired to write files into homedirs or
something.

done with rpe
ok many
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.443 2014/11/05 17:07:59 millert Exp $
d362 1
a362 1
dmesg > /dev/random	# any write triggers an RC4 rekey
@


1.443
log
@When clearing /tmp, use "-maxdepth -1" instead of "-type d -prune".
This is easier to understand and fixes a bug where the "-type d -prune"
was misplaced as noticed by pirofti@@.  OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.442 2014/09/15 22:28:58 matthieu Exp $
d441 1
a441 1
# prune quickly with one rm, then use find to clean up /tmp/[lq]*
d443 1
a443 1
(cd /tmp && rm -rf [a-km-pr-zA-Z]*)
d446 1
a446 1
	! -name quota.group -execdir rm -rf -- {} \;)
@


1.442
log
@Remove sendmail tentacles. ok krw@@ ajacoutot@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.441 2014/08/26 19:33:48 robert Exp $
d445 2
a446 2
    find . ! -name . ! -name lost+found ! -name quota.user \
	! -name quota.group -execdir rm -rf -- {} \; -type d -prune)
@


1.441
log
@usr.sbin
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.440 2014/08/22 19:19:25 deraadt Exp $
d501 1
a501 1
start_daemon hostapd lpd sendmail smtpd slowcgi httpd ftpd
@


1.440
log
@disable use of bind in base; in the base use nsd/unbound instead.
a proper & complete bind port will show up.
discussed with many for years
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.439 2014/08/17 14:43:34 ajacoutot Exp $
d501 1
a501 1
start_daemon hostapd lpd sendmail smtpd slowcgi nginx httpd ftpd
@


1.439
log
@Execute /etc/netstart using sh(1) instead of sourcing it.
Committing early to make sure we have time to fix any side-effect.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.438 2014/08/04 20:17:09 naddy Exp $
a146 13
	if [ X"${named_flags}" != X"NO" ]; then
		if ! cmp -s /etc/rndc.key /var/named/etc/rndc.key ; then
			echo -n "rndc-confgen: generating shared secret... "
			if rndc-confgen -a -t /var/named >/dev/null 2>&1; then
				chmod 0640 /var/named/etc/rndc.key \
				    >/dev/null 2>&1
				echo done.
			else
				echo failed.
			fi
		fi
	fi

d390 1
a390 1
start_daemon syslogd ldattach pflogd named nsd unbound ntpd
@


1.438
log
@enable httpd; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.437 2014/07/19 21:27:16 bluhm Exp $
d374 1
a374 1
. /etc/netstart
@


1.437
log
@Print a warning message if the files with the random seed are not
writeable during shutdown.  This prevents ugly error messages when
the machine is rebooted from singe-user without mounting the file
systems read-write.
suggested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.436 2014/07/18 18:17:28 deraadt Exp $
d514 1
a514 1
start_daemon hostapd lpd sendmail smtpd slowcgi nginx ftpd
@


1.436
log
@ugly ugly whitespace
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.435 2014/07/17 15:08:29 deraadt Exp $
d270 6
a275 1
	random_seed
@


1.435
log
@sh netstart, instead of using .
We don't want any of the variables created inside netstart to infect the
rc script.
ok claudio sthen aja
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.434 2014/07/14 10:10:44 ajacoutot Exp $
d266 1
a266 1
# load rc.conf into scope 
@


1.434
log
@quiet /etc/rc.shutdown, it may not exist.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.433 2014/07/14 09:44:45 ajacoutot Exp $
d378 1
a378 1
		. /etc/netstart pfsync0
@


1.433
log
@This isn't C.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.432 2014/07/14 09:44:07 ajacoutot Exp $
a284 1
		echo /etc/rc.shutdown in progress...
a285 1
		echo /etc/rc.shutdown complete.
@


1.432
log
@Only set kern.securelevel=1 if it was not lowered nor bumped by
rc.securelevel,

with deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.431 2014/07/14 09:04:02 deraadt Exp $
d464 1
a464 1
endif
@


1.431
log
@rc.{local,securelevel,shutdown} become examples.  If versions of them
are created in /etc, they are executed (they used to be sourced) to
avoid polluting the rc variable space.  The powerdown= and securelevel=
features are removed; they are likely only used by 2 people.  the
secureleve is now always raised; this is the only sensible default.
ok ajacoutot
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.430 2014/07/14 03:45:55 deraadt Exp $
d461 4
a464 1
sysctl kern.securelevel=1
@


1.430
log
@check for existance of rc.shutdown, before sourcing it
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.429 2014/07/13 12:12:30 claudio Exp $
d286 1
a286 1
		[ -f /etc/rc.shutdown ] && . /etc/rc.shutdown
a298 3
	if [ X"${powerdown}" = X"YES" ]; then
		exit 2
	fi
d460 2
a461 5
[ -f /etc/rc.securelevel ] && . /etc/rc.securelevel
if [ X"${securelevel}" != X"" ]; then
	echo -n 'setting kernel security level: '
	sysctl kern.securelevel=${securelevel}
fi
d534 1
a534 1
[ -f /etc/rc.local ] && . /etc/rc.local
@


1.429
log
@rc bits for iscsid. Start iscsid as early as possible. Use the new -N
flag for fsck and mount to check and mount the iscsi file systems (marked
with option net) right after the mount -a.
"Get it in" deraadt@@
rpe@@ is OK with this going in but it may need further changes
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.428 2014/07/12 10:14:03 robert Exp $
d286 1
a286 1
		. /etc/rc.shutdown
@


1.428
log
@Make rc.conf a parsed configuration file and stop sourcing it as a shell
script.
From now on rc.conf has a fixed syntax (key=val) and it is not allowed
to add anything to it besides the supported syntax, it all going to be
ignored.

discussed with and help from deraadt@@ and halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.427 2014/04/25 17:59:53 bluhm Exp $
d208 36
d311 1
a311 30
	fsck -p
	case $? in
	0)
		;;
	2)
		exit 1
		;;
	4)
		echo "Rebooting..."
		reboot
		echo "Reboot failed; help!"
		exit 1
		;;
	8)
		echo "Automatic file system check failed; help!"
		exit 1
		;;
	12)
		echo "Boot interrupted."
		exit 1
		;;
	130)
		# interrupt before catcher installed
		exit 1
		;;
	*)
		echo "Unknown error; help!"
		exit 1
		;;
	esac
d404 1
a404 1
start_daemon isakmpd iked sasyncd ldapd npppd
d423 4
@


1.427
log
@Redirecting stderr to /dev/null suppresses all errors.  Instead use
the new status=none feature to make dd quiet.
OK halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.426 2014/04/24 15:05:10 tedu Exp $
d227 5
a231 2
# pick up option configuration
. /etc/rc.conf
@


1.426
log
@rm rwhod tentacles
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.425 2014/04/23 09:56:56 ajacoutot Exp $
d104 8
a111 10
	{
		# push the old seed into the kernel
		dd if=/var/db/host.random of=/dev/random bs=65536 count=1
		chmod 600 /var/db/host.random
		# ... and create a future seed
		dd if=/dev/random of=/var/db/host.random bs=65536 count=1
		# and create a seed file for the boot-loader
		dd if=/dev/random of=/etc/random.seed bs=512 count=1
		chmod 600 /etc/random.seed
	} > /dev/null 2>&1
@


1.425
log
@Remove krb5 bits from rc(8).

ok reyk@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.424 2014/04/19 16:07:09 henning Exp $
d502 1
a502 1
start_daemon hostapd rwhod lpd sendmail smtpd slowcgi nginx ftpd
@


1.424
log
@use "!received-on any" to absolutely ensure that we're not forwarding
carp, rpc or nfs traffic in the initial ruleset active during network
startup for a short time (or a much longer time if /etc/pf.conf is
screwed up). ok phessler
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.422 2014/03/13 10:11:01 florian Exp $
d504 1
a504 2
start_daemon rbootd mopd spamd spamlogd kdc kadmind kpasswdd
start_daemon ipropd_master ipropd_slave sndiod
@


1.423
log
@Enable Unbound in base, ok deraadt@@
@
text
@d339 2
a340 1
	RULES="$RULES\npass proto carp keep state (no-sync)"
d346 1
a346 1
		RULES="$RULES\npass out proto { tcp, udp } from any to any port { 111, 2049 }"
@


1.422
log
@Unhook httpd(8) from build; etc bits
OK krw@@, gilles@@, lteo@@, tedu@@, todd@@, benno@@, sthen@@
"The time is right." and much help getting the show on
the road deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.421 2014/02/19 21:47:15 schwarze Exp $
d394 2
a395 2
start_daemon syslogd ldattach pflogd named nsd ntpd isakmpd iked sasyncd
start_daemon ldapd npppd
@


1.421
log
@Ignore blank characters at the end of ${pkg_scripts} in order
to refrain from trying to execute /etc/rc.d/ in that case.
Problem noticed by jasper@@.

Opinions on this patch vary: "much nicer, ok" sthen@@
"good god, what horrible shell voodoo, ok" ajacoutot@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.420 2014/01/19 09:39:04 claudio Exp $
d501 1
a501 1
start_daemon hostapd rwhod lpd sendmail smtpd httpd slowcgi nginx ftpd
@


1.420
log
@Extend the initial pf ruleset to explicitly allow dhcp / bootp and dhcpv6.
Our dhclient only uses the bpf tap for broadcast packets (which bypass
pf) but lease renewals will use a regular socket and are blocked without
this change.  Rules are written so that accidential forwarding of packets
is not possible.
Diff from brad@@, OK henning@@, benno@@, mikeb@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.419 2014/01/03 23:24:19 millert Exp $
d237 1
@


1.419
log
@Use kern.securelevel to determine whether or not we are in single
user mode now that init no longer raises securelevel during reboot.
OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.418 2013/12/28 01:00:18 deraadt Exp $
d328 2
d335 2
@


1.418
log
@document a hack we want fixed later
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.417 2013/12/27 23:43:39 rpe Exp $
d235 2
a236 5
	# XXX If root is writeable, assume we are not single user
	chmod 600 /etc/random.seed >/dev/null 2>&1
	_notsingle=$?

	if [ ${_notsingle} -eq 0 ]; then
@


1.417
log
@- add chmod of seedfile in /etc
- use its return code for single/multiuser detection

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.416 2013/12/27 23:40:29 rpe Exp $
d235 1
d237 2
a238 1
	_notsingle=$?   # root is writeable, so we are not single user??
@


1.416
log
@re-use random_seed in shutdown section

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.415 2013/12/27 22:34:40 deraadt Exp $
d235 3
a237 2
	_c=$?
	if [ ${_c} -eq 0 ]; then
@


1.415
log
@create a seed file for the bootloader in /etc/random.seed
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.414 2013/12/27 22:33:27 deraadt Exp $
d233 2
a234 2
	dd if=/dev/random of=/var/db/host.random bs=65536 count=1 >/dev/null 2>&1
	chmod 600 /var/db/host.random >/dev/null 2>&1
@


1.414
log
@nest random_seed() contents into a single redirection
idea from rpe
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.413 2013/12/27 22:15:40 deraadt Exp $
d110 3
@


1.413
log
@re-do shutdown operations.  Run the scripts if we may; take down carp
unconditionally, and then do the optional powerdown
discussed at length with rpe
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.412 2013/12/27 04:21:48 deraadt Exp $
d104 7
a110 10
	if [ -f /var/db/host.random ]; then
		dd if=/var/db/host.random of=/dev/random bs=65536 count=1 \
		    > /dev/null 2>&1
		chmod 600 /var/db/host.random >/dev/null 2>&1

		# reset seed file, so that if a shutdown-less reboot occurs,
		# the next seed is not a repeat
		dd if=/dev/random of=/var/db/host.random bs=65536 count=1 \
		    > /dev/null 2>&1
	fi
@


1.412
log
@when forcing a re-key, might as well toss in dmesg as additional seed
material
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.411 2013/12/27 04:21:03 deraadt Exp $
d236 11
a246 10
	if [ ${_c} -eq 0 -a -n "${pkg_scripts}" ]; then
		echo -n 'stopping package daemons:'
		while [ -n "${pkg_scripts}" ]; do
			_r=${pkg_scripts##* }
			pkg_scripts=${pkg_scripts%%*( )${_r}}
			[ -x /etc/rc.d/${_r} ] && /etc/rc.d/${_r} stop
		done
		echo '.'
	fi
	if [ ${_c} -eq 0 -a -f /etc/rc.shutdown ]; then
d250 3
d254 6
a259 6
		# bring carp interfaces down gracefully
		ifconfig | while read a b; do
			case $a in
			carp+([0-9]):) ifconfig ${a%:} down ;;
			esac
		done
d261 2
a262 6
		if [ X"${powerdown}" = X"YES" ]; then
			exit 2
		fi

	else
		echo single user: not running /etc/rc.shutdown
@


1.411
log
@all the random devices have been the same for a while; so let us avoid
being obtuse and use /dev/random
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.410 2013/12/26 18:05:31 espie Exp $
d361 1
a361 1
echo rekey > /dev/random	# any write triggers an RC4 rekey
@


1.410
log
@make absence of pkg_scripts non silent, after nits from theo and halex.
okay rpe@@, kirby@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.409 2013/12/17 09:19:45 halex Exp $
d105 1
a105 1
		dd if=/var/db/host.random of=/dev/arandom bs=65536 count=1 \
d111 1
a111 1
		dd if=/dev/arandom of=/var/db/host.random bs=65536 count=1 \
d233 1
a233 1
	dd if=/dev/arandom of=/var/db/host.random bs=65536 count=1 >/dev/null 2>&1
d361 1
a361 1
echo rekey > /dev/arandom	# any write triggers an RC4 rekey
@


1.409
log
@Run spamd-setup from within /etc/rc.d/spamd, and take $spamd_black
into consideration.
Diff from Maurice Janssen, thanks!

ok rpe@@ giovanni@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.408 2013/12/15 17:40:45 tedu Exp $
d514 5
a518 1
		[ -x /etc/rc.d/${_r} ] && start_daemon ${_r}
@


1.408
log
@remove popa3d etc tendrils
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.407 2013/08/09 16:24:54 ajacoutot Exp $
a500 4

if [ X"${spamd_flags}" != X"NO" ]; then
	/usr/libexec/spamd-setup -D
fi
@


1.407
log
@Add rc.d(8) scripts for ipropd-master and ipropd-slave.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.406 2013/06/01 14:06:20 naddy Exp $
d498 1
a498 1
start_daemon rbootd mopd popa3d spamd spamlogd kdc kadmind kpasswdd
@


1.406
log
@hook up slowcgi to the tree, including /etc glue and a sample configuration
snippet; ok florian@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.405 2012/11/18 18:29:10 ajacoutot Exp $
d496 4
a499 3
start_daemon hostapd rwhod lpd sendmail smtpd httpd slowcgi nginx ftpd ftpproxy
start_daemon tftpd tftpproxy identd inetd rarpd bootparamd rbootd mopd
start_daemon popa3d spamd spamlogd kdc kadmind kpasswdd sndiod
@


1.405
log
@Remove pointless local declaration.

ok halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.404 2012/11/04 21:47:22 kettenis Exp $
d496 1
a496 1
start_daemon hostapd rwhod lpd sendmail smtpd httpd nginx ftpd ftpproxy
@


1.404
log
@Start ldomd(8).
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.403 2012/09/20 12:51:43 yasuoka Exp $
d235 1
a235 1
	local _c=$?
@


1.403
log
@Enable npppd and npppctl in default build.  Add npppd to rc and
install sample configs to /etc/.

ok claudio deraadt henning mcbride
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.402 2012/08/26 19:25:19 ajacoutot Exp $
d484 1
a484 1
start_daemon sshd snmpd ldpd ripd ospfd ospf6d bgpd ifstated
@


1.402
log
@Hook up nginx to rc(8).

ok deraadt@@ robert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.401 2012/08/20 12:37:52 dlg Exp $
d390 1
a390 1
start_daemon ldapd
@


1.401
log
@wire up the bits for tftp-proxy, which is called tftpproxy from rc.d's
point of view.

mostly ok sthen@@ ajacoutot@@, who were discussing the feng shui of the
start_daemons chunk
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.400 2012/04/06 15:11:30 jsing Exp $
d496 3
a498 4
start_daemon hostapd rwhod lpd sendmail smtpd
start_daemon httpd ftpd ftpproxy tftpd tftpproxy
start_daemon identd inetd rarpd bootparamd rbootd mopd popa3d
start_daemon spamd spamlogd kdc kadmind kpasswdd sndiod
@


1.400
log
@tedu the raidctl.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.398 2012/03/05 19:56:43 dlg Exp $
d496 2
a497 1
start_daemon hostapd rwhod lpd sendmail smtpd httpd ftpd ftpproxy tftpd
@


1.399
log
@ypbind likes a ypserv to talk to, and ypldap pretends to be ypserv.
this diff starts ypldap before ypbind instead of after.

ok deraadt@@ ajacoutot@@
@
text
@a266 10
# Configure raid devices.
for dev in 0 1 2 3; do
	if [ -f /etc/raid$dev.conf ]; then
		raidctl -c /etc/raid$dev.conf raid$dev
	fi
done

# Check parity on raid devices.
raidctl -P all

@


1.398
log
@add tftpd to the network daemons list just after ftpd and ftpproxy.

reminded by mikeb@@
ok sthen@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.397 2011/12/09 14:52:26 ratchov Exp $
d410 1
a410 1
start_daemon portmap
d414 1
a414 1
start_daemon ypldap mountd nfsd lockd statd amd
@


1.397
log
@Handle aucat -> sndiod name change, and enable sndiod by default. Mostly
from ajacoutot@@.

ok deraadt ajacoutot
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.396 2011/10/13 07:54:06 ajacoutot Exp $
d506 1
a506 1
start_daemon hostapd rwhod lpd sendmail smtpd httpd ftpd ftpproxy
@


1.396
log
@Start ldapd(8) earlier so that ypldap(8) can properly run (an LDAP
server _must_ be running and accessible before ypldap is started).

Add a proper pexp in the ypldap rc script.

discussed with pyr@@ robert@@ deraadt@@
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.395 2011/10/07 16:36:26 deraadt Exp $
d508 1
a508 1
start_daemon spamd spamlogd kdc kadmind kpasswdd aucat
@


1.395
log
@The new ypbind changes requires that the domainname be set before
rc.conf is run.  There's no real downside.
ok aja
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.394 2011/10/06 20:49:25 deraadt Exp $
d400 1
d506 3
a508 3
start_daemon hostapd rwhod lpd ldapd sendmail smtpd httpd ftpd
start_daemon ftpproxy identd inetd rarpd bootparamd rbootd mopd
start_daemon popa3d spamd spamlogd kdc kadmind kpasswdd aucat
@


1.394
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.393 2011/09/16 10:11:20 robert Exp $
d223 5
@


1.393
log
@Add a script for popa3d to support running it outside of inetd.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.392 2011/07/28 19:09:16 halex Exp $
a259 5
fi

# Configure ccd devices.
if [ -f /etc/ccd.conf ]; then
	ccdconfig -C
@


1.392
log
@supress empty rc.firsttime email and add hostname to the subject line

ok deraadt krw
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.391 2011/07/20 10:00:13 halex Exp $
d507 1
a507 1
start_daemon spamd spamlogd kdc kadmind kpasswdd aucat
@


1.391
log
@remove an unneeded trailing semicolon
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.390 2011/07/20 09:56:00 halex Exp $
d518 1
a518 1
		mail -s 'rc.firsttime output' root >/dev/null
@


1.390
log
@cleanup of fill_baddynamic()

ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.389 2011/07/19 13:50:49 deraadt Exp $
d124 1
a124 1
			[ "x${_srv}" = "x${_service}" ] || continue;
@


1.389
log
@random seed handling can now be done fairly early, well, as soon as
we are beyond the nfs diskless /var and /usr mounting.  Issue also
spotted by Hugo Villeneuve, attempt at repair by me.  Let's see how it
works out in practice...
looked at by krw, too
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.388 2011/07/19 13:49:07 deraadt Exp $
d118 1
a118 1
	local _service="$1"
d120 14
a133 23
	local _name _port _srv _junk _ban
	local _i=0
	local _ifs="${IFS}"
	IFS=" 	/"
	while read _name _port _srv _junk; do
		[ "x${_srv}" = "x${_service}" ] && \
		    [ "x${_name}" = "x${_name#\#}" ] || continue;
		if [ "x${_ban}" = "x" ]; then
			_ban="+${_port}"
		else
			_ban="${_ban},+${_port}"
		fi
		# Flush before argv gets too long
		if [ $((++_i)) -gt 128 ]; then
			sysctl ${_sysctl}=${_ban} >/dev/null
			_ban=""
			_i=0
		fi
	done < /etc/services;
	if [ "x${_ban}" != "x" ]; then
		sysctl ${_sysctl}=${_ban} >/dev/null
	fi
	IFS="${_ifs}"
@


1.388
log
@Now that fill_baddynamic() is being called much earlier, it cannot use
grep in a NFS diskless environment.  Found and fixed by Hugo Villeneuve
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.387 2011/07/18 21:01:23 deraadt Exp $
d104 1
a104 1
	if [ -f /var/db/host.random -a "X$random_seed_done" = "X" ]; then
d107 1
a112 2

		random_seed_done=1
a330 2
random_seed

d395 1
a395 9
# if there's no /var/db/host.random, use /dev/arandom to create one
if [ ! -f /var/db/host.random ]; then
	dd if=/dev/arandom of=/var/db/host.random bs=65536 count=1 \
		>/dev/null 2>&1
	chmod 600 /var/db/host.random >/dev/null 2>&1
else
	# Try to read seed if it was not initially present (e.g. /var on NFS)
	random_seed
fi
@


1.387
log
@put aucat with network daemons for now, until a better solution is found
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.386 2011/07/18 17:05:29 deraadt Exp $
d123 12
a134 17
	grep "/${_service}" /etc/services | {
		IFS=" 	/"
		while read _name _port _srv _junk; do
			[ "x${_srv}" = "x${_service}" ] || continue;
			if [ "x${_ban}" = "x" ]; then
				_ban="+${_port}"
			else
				_ban="${_ban},+${_port}"
			fi
			# Flush before argv gets too long
			if [ $((++_i)) -gt 128 ]; then
				sysctl ${_sysctl}=${_ban} >/dev/null
				_ban=""
				_i=0
			fi
		done;
		if [ "x${_ban}" != "x" ]; then
d136 2
d139 5
a143 1
	}
@


1.386
log
@move aucat very early, to cope with pkgs; ok aja
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.385 2011/07/11 17:20:09 deraadt Exp $
d418 1
a418 1
start_daemon syslogd ldattach pflogd named nsd ntpd isakmpd iked sasyncd aucat
d526 1
a526 1
start_daemon spamd spamlogd kdc kadmind kpasswdd
@


1.385
log
@there is a usage case where ypldap can be used without the local
domainname being set.  adjust the scripts to start it in that way.
discussed with pyr
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.384 2011/07/09 01:30:27 halex Exp $
d418 1
a418 1
start_daemon syslogd ldattach pflogd named nsd ntpd isakmpd iked sasyncd
d556 1
a556 1
start_daemon apmd sensorsd hotplugd watchdogd cron aucat wsmoused xdm
@


1.384
log
@tee the output from rc.firsttime to /dev/tty before passing it to mail(1)
so we can enjoy it on the screen as well

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.383 2011/07/08 22:20:05 deraadt Exp $
d430 1
a430 1
	start_daemon ypserv ypldap ypbind yppasswdd
d432 1
a432 1
start_daemon mountd nfsd lockd statd amd
@


1.383
log
@re-add ospfd/ospf6d support which got lost, and build scripts for them
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.382 2011/07/08 22:03:56 deraadt Exp $
d536 2
a537 2
	. /etc/rc.firsttime.run 2>&1 | mail -s 'rc.firsttime output' \
	    root >/dev/null
@


1.382
log
@early daemons fit on a line
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.381 2011/07/08 21:42:52 robert Exp $
d512 2
a513 2
start_daemon sshd snmpd ldpd ripd bgpd ifstated relayd dhcpd
start_daemon dhcrelay mrouted dvmrpd
@


1.381
log
@move the pflog0 setup to the pflogd script and only
do that if pf is actually enabled (rely on pfctl -si)

requested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.380 2011/07/08 16:20:13 ajacoutot Exp $
d418 1
a418 2
start_daemon syslogd ldattach pflogd
start_daemon named nsd ntpd isakmpd iked sasyncd
@


1.380
log
@Forgot to commit that part yesterday, spotted by sthen@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.379 2011/07/08 09:48:18 deraadt Exp $
d418 1
a418 10
start_daemon syslogd ldattach

if [ X"${pf}" != X"NO" ]; then
	ifconfig pflog0 create >/dev/null 2>&1
	if ifconfig pflog0 >/dev/null 2>&1; then
		ifconfig pflog0 up
		start_daemon pflogd
	fi
fi

@


1.379
log
@simplify, shorten, and "subtly and cleverly" rearrange some daemon
startups according to rules that some of us understand.  it may come of
sounding cocky, but any step beyond that would end up with a dependency
graph which will never happen.  this file is now ~60% of the length a
week ago.
ok guenther, robert, aja and people who will not test it until it is in
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.377 2011/07/08 02:15:34 robert Exp $
d240 1
a240 1
	if [ ${_c} -eq 0 -a -n "${rc_scripts}" ]; then
d242 3
a244 3
		while [ -n "${rc_scripts}" ]; do
			_r=${rc_scripts##* }
			rc_scripts=${rc_scripts%%*( )${_r}}
d552 1
a552 1
if [ -n "${rc_scripts}" ]; then
d554 1
a554 1
	for _r in $rc_scripts; do
@


1.378
log
@fix boot output and make sure spamlogd is only started when needed
@
text
@d417 2
a418 2
echo -n 'starting system logger:'
start_daemon syslogd
d428 1
a428 8
echo '.'

echo -n 'starting name service daemons:'
start_daemon named nsd
echo '.'

echo -n 'starting IPsec daemons:'
start_daemon isakmpd iked sasyncd
d437 1
a437 2
echo -n 'starting initial daemons:'

a442 8

# run rdate before ntpd
if [ X"${rdate_flags}" != X"NO" ]; then
	echo -n ' rdate';	rdate -s ${rdate_flags}
fi

start_daemon ldattach ntpd

d522 2
a523 3

start_daemon sshd snmpd ldpd ripd bgpd ifstated relayd dhcpd \
	dhcrelay mrouted dvmrpd
d536 1
a536 2
start_daemon spamd spamlogd

d539 1
a539 1
[ X"${spamd_flags}" != X"NO" ] && \
a540 5

if [ X"${kdc_flags}" != X"NO" ]; then
	echo -n 'starting KerberosV daemons:'
	start_daemon kdc kadmind kpasswdd
	echo '.'
d562 1
a562 6
echo -n 'starting standard daemons:'

start_daemon apmd sensorsd hotplugd watchdogd cron

# disable carp interlock
ifconfig -g carp -carpdemote 128
d564 3
a569 7

mixerctl_conf

echo -n 'starting console services:'
start_daemon aucat wsmoused xdm
echo '.'

@


1.377
log
@Switch amd and spamlogd to rc scripts and make sure that the
rc_pre() functions are returning correctly. This change
also simplyfies the changes because false || return 1 can be replaced
with false if that's the last call. thanks halex@@!
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.376 2011/07/08 02:02:02 deraadt Exp $
d417 1
a417 1
echo -n 'starting system logger: '
a418 1
echo '.'
d427 2
@


1.376
log
@Small bits of fluff before the final re-organization
ok halex
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.375 2011/07/08 01:43:59 deraadt Exp $
d449 1
a449 6
start_daemon mountd nfsd lockd statd

if [ X"${amd}" = X"YES" -a -e ${amd_master} ]; then
	echo -n ' amd'
	(cd /etc/amd; amd `cat ${amd_master}`)
fi
d551 4
a554 1
start_daemon ftpproxy identd inetd rarpd bootparamd rbootd mopd spamd
a557 7

if [ X"${spamd_flags}" != X"NO" -a X"${spamd_black}" = X"NO" ]; then
	echo -n ' spamlogd'
	/usr/libexec/spamlogd ${spamlogd_flags}
fi

echo '.'
@


1.375
log
@ARGH!  the third part: socket handling cleanup
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.374 2011/07/08 01:43:09 deraadt Exp $
d408 1
a408 3
rm -f /etc/nologin
rm -f /var/spool/lock/LCK.*
rm -f /var/spool/uucp/STST/*
d446 1
a446 2

[ X"`domainname`" != X"" ] && \
d448 1
a448 1

a465 1

d481 1
a481 2
# build kvm(3) databases
kvm_mkdb
a482 1

d489 1
a489 1
	'password file may be incorrect -- /etc/ptmp exists'
d539 1
a539 3
if [ -x /usr/libexec/vi.recover ]; then
	echo 'preserving editor files.';	/usr/libexec/vi.recover
fi
d551 1
a551 2
		start_daemon route6d
		start_daemon rtadvd
d577 2
a578 1
	. /etc/rc.firsttime.run 2>&1 | mail -s 'rc.firsttime output' root >/dev/null
@


1.374
log
@Oops, the second half of moving the key chunks
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.373 2011/07/08 01:41:25 deraadt Exp $
a505 19

# create Unix sockets directories for X if needed and make sure they have
# correct permissions
if [ -d /usr/X11R6/lib ]; then
	for d in /tmp/.X11-unix /tmp/.ICE-unix ; do
		if [ -d $d ]; then
			if [ `ls -ld $d | cut -d' ' -f4` != root ]; then
				chown root $d
			fi
			if [ `ls -ld $d | cut -d' ' -f1` != drwxrwxrwt ]; then
				chmod 1777 $d
			fi
		elif [ -e $d ]; then
			echo "Error: $d exists and isn't a directory."
		else
			mkdir -m 1777 $d
		fi
	done
fi
@


1.373
log
@Move various bits of key generation in rc into one function, which we
can run surprisingly early.  Move the X socket directory creation code
into a function too.
robert liked it
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.372 2011/07/08 00:54:04 ajacoutot Exp $
a430 12
if [ X"${named_flags}" != X"NO" ]; then
	if ! cmp -s /etc/rndc.key /var/named/etc/rndc.key ; then
		echo -n "rndc-confgen: generating new shared secret... "
		if rndc-confgen -a -t /var/named >/dev/null 2>&1; then
			chmod 0640 /var/named/etc/rndc.key >/dev/null 2>&1
			echo done.
		else
			echo failed.
		fi
	fi
fi

a434 20
if [ ! -f /etc/isakmpd/private/local.key ]; then
	echo -n "openssl: generating new isakmpd/iked RSA key... "
	if openssl genrsa -out /etc/isakmpd/private/local.key 2048 \
	    > /dev/null 2>&1; then
		chmod 600 /etc/isakmpd/private/local.key
		openssl rsa -out /etc/isakmpd/local.pub \
		    -in /etc/isakmpd/private/local.key -pubout > /dev/null 2>&1
		echo done.
	else
		echo failed.
	fi
fi

if [ ! -f /etc/iked/private/local.key ]; then
	# Just copy the generated isakmpd key
	cp /etc/isakmpd/private/local.key /etc/iked/private/local.key
	chmod 600 /etc/iked/private/local.key
	cp /etc/isakmpd/local.pub /etc/iked/local.pub
fi

a566 2

ssh-keygen -A
@


1.372
log
@Add the nfs startup scripts.

ok robert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.371 2011/07/08 00:51:52 deraadt Exp $
d156 63
d417 2
d557 2
@


1.371
log
@Give up on btd(8) startup until it can prove itself
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.370 2011/07/08 00:50:09 robert Exp $
d419 1
a419 11
if [ X"${nfs_server}" = X"YES" -a -s /etc/exports -a \
    `sed -e '/^#/d' < /etc/exports | wc -l` -ne 0 ]; then
	rm -f /var/db/mountdtab
	echo -n > /var/db/mountdtab
	echo -n ' mountd';		mountd
	echo -n ' nfsd';		nfsd ${nfsd_flags}
	if [ X"${lockd}" = X"YES" ]; then
		echo -n ' rpc.lockd';	rpc.lockd
		echo -n ' rpc.statd';	rpc.statd
	fi
fi
@


1.370
log
@switch pflogd to rc.d
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.369 2011/07/08 00:17:15 robert Exp $
d560 2
a561 7
start_daemon hostapd rwhod lpd ldapd sendmail smtpd httpd ftpd \
	ftpproxy identd inetd rarpd bootparamd rbootd mopd btd

[ X"${bt}" != X"NO" -a -f ${bt_rules} ] && \
	btctl -f ${bt_rules}

start_daemon spamd
@


1.369
log
@only start spamlogd if spamd_flags != NO and spamd_black = NO
spotted by halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.368 2011/07/08 00:15:19 robert Exp $
d362 1
a362 3
		if [ X"${pflogd_flags}" != X"NO" ]; then
			pflogd ${pflogd_flags}
		fi
@


1.368
log
@make rc_daemons use start_daemon instead of calling the script directly
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.367 2011/07/07 23:53:05 deraadt Exp $
d573 1
a573 1
if [ X"${spamd_black}" = X"NO" ]; then
@


1.367
log
@oops, the netstart for pfsync *MUST* have the conditional
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.360 2011/07/07 22:30:37 robert Exp $
d597 1
a597 1
		[ -x /etc/rc.d/${_r} ] && /etc/rc.d/${_r} start
@


1.366
log
@disable the afs enable stuff.  when nnpfs is re-enabled, that can be added
at the right place.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.365 2011/07/07 23:29:45 robert Exp $
d326 3
a328 1
	. /etc/netstart pfsync0
@


1.365
log
@add scripts for aucat and spamd and switch rc to use them
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.364 2011/07/07 23:09:46 guenther Exp $
a452 8
fi

if [ X"${afs}" = X"YES" -a -c /dev/nnpfs0 ]; then
	echo -n 'mounting afs:'
	mkdir -p -m 0755 /afs
	mount -t nnpfs /dev/nnpfs0 /afs
	/usr/libexec/afsd ${afsd_flags}
	echo ' done.'
@


1.364
log
@Eliminate some $? tests by rolling the command into the condition

ok halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.363 2011/07/07 22:57:29 deraadt Exp $
d574 3
a576 5
if [ X"${spamd_flags}" != X"NO" ]; then
	if [ X"${spamd_black}" != X"NO" ]; then
		spamd_flags="${spamd_flags} -b"
	fi
	echo -n ' spamd';		eval /usr/libexec/spamd ${spamd_flags}
d578 4
a581 4
	if [ X"${spamd_black}" = X"NO" ]; then
		echo -n ' spamlogd'
		/usr/libexec/spamlogd ${spamlogd_flags}
	fi
d622 1
d624 1
a624 6

if [ X"${aucat_flags}" != X"NO" ]; then
	echo -n ' aucat';		aucat -l ${aucat_flags}
fi

start_daemon wsmoused xdm
@


1.363
log
@oops, removed one absolute path which is needed
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.362 2011/07/07 22:53:39 deraadt Exp $
d521 1
a521 2
T=`mktemp /tmp/_motd.XXXXXXXXXX`
if [ $? -eq 0 ]; then
@


1.362
log
@kvm_mkdb and dev_mkdb have been reliable for years, so we can run them
silently now.
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.361 2011/07/07 22:47:30 deraadt Exp $
d537 1
a537 1
if [ -f ldconfig ]; then
@


1.361
log
@We don't need a conditional around the pfsync start.

(As a reminder to others who spot this weirdness later and get
confused like I did:  netstart never starts pfsync automatically,
because it would screw the states.  That is why there is this 2nd
manual netstart run for pfsync)

ok mpf
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.360 2011/07/07 22:30:37 robert Exp $
d470 1
a470 3
# build ps databases
echo -n 'building ps databases:'
echo -n " kvm"
a471 1
echo -n " dev"
a472 1
echo "."
@


1.360
log
@add a script for btd and replace the rc parts
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.359 2011/07/07 22:23:56 robert Exp $
d326 1
a326 3
	if [ -f /etc/hostname.pfsync0 ]; then
		. /etc/netstart pfsync0
	fi
@


1.359
log
@add wsmoused script and switch xdm and wsmoused in rc
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.358 2011/07/07 21:00:59 deraadt Exp $
d576 1
a576 1
	ftpproxy identd inetd rarpd bootparamd rbootd mopd
d578 2
a579 6
if [ X"${bt}" != X"NO" ]; then
	echo -n ' btd';			btd
	if [ -f ${bt_rules} ]; then
		btctl -f ${bt_rules}
	fi
fi
@


1.358
log
@timed's time is up.  use ntpd(8).  Even our own fossil developers
switched a while back.
ok miod, kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.357 2011/07/07 20:54:05 deraadt Exp $
d641 1
a641 8
if [ X"${wsmoused_flags}" != X"NO" -a -x /usr/sbin/wsmoused ]; then
	echo -n ' wsmoused';		wsmoused ${wsmoused_flags}
fi

# Alternatively, on some architectures, xdm may be started in /etc/ttys.
if [ X"${xdm_flags}" != X"NO" -a -x /usr/X11R6/bin/xdm ]; then
	echo -n ' xdm';			/usr/X11R6/bin/xdm ${xdm_flags}
fi
@


1.357
log
@Move various "console-ish" services into a new start_daemon block near
the bottom, after checking that they are OK with being there.
ok ajacoutot
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.356 2011/07/07 18:40:00 deraadt Exp $
d438 1
a438 1
# run rdate before timed/ntpd
d443 1
a443 1
start_daemon timed ldattach ntpd
@


1.356
log
@Do not use absolute paths for things on our (very simple safe) path.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.355 2011/07/07 18:36:03 robert Exp $
a598 6
mixerctl_conf

if [ X"${aucat_flags}" != X"NO" ]; then
	aucat -l ${aucat_flags}
fi

d634 7
d642 1
a642 1
	echo 'starting wsmoused...';	wsmoused ${wsmoused_flags}
d647 1
a647 1
	echo 'starting xdm...';		/usr/X11R6/bin/xdm ${xdm_flags}
d649 1
@


1.355
log
@move portmap, yp* and kerberos services to rc.d scripts
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.354 2011/07/07 02:16:58 robert Exp $
d97 1
a97 1
		eval /sbin/wsconsctl $1
d371 1
a371 1
		if /usr/sbin/rndc-confgen -a -t /var/named >/dev/null 2>&1; then
d386 1
a386 1
	if /usr/sbin/openssl genrsa -out /etc/isakmpd/private/local.key 2048 \
d543 1
a543 1
if [ -f /sbin/ldconfig ]; then
d558 1
a558 1
/usr/bin/ssh-keygen -A
d579 1
a579 1
	echo -n ' btd';			/usr/sbin/btd
d641 1
a641 1
	echo 'starting wsmoused...';	/usr/sbin/wsmoused ${wsmoused_flags}
@


1.354
log
@remove superfluous semicolon from start_daemon()
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.353 2011/07/06 18:55:36 robert Exp $
d416 1
a416 10
if [ X"${portmap}" = X"YES" ]; then
	echo -n ' portmap';		portmap
fi

if [ X`domainname` != X ]; then
	if [ -d /var/yp/`domainname` ]; then
		# YP server capabilities needed...
		echo -n ' ypserv';		ypserv ${ypserv_flags}
		#echo -n ' ypxfrd';		ypxfrd
	fi
d418 2
a419 24
	if [ -d /var/yp/binding ]; then
		# YP client capabilities needed...
		echo -n ' ypbind';		ypbind
	fi

	if [ X"${yppasswdd_flags}" != X"NO" -a -d /var/yp/`domainname` ]; then
		# if we are the master server, run rpc.yppasswdd
		_host1=`ypwhich -m passwd 2> /dev/null`
		_host2=`hostname`
		if [ `grep '^lookup' /etc/resolv.conf | grep yp | wc -c` -ne 0 ]; then
			_host1=`ypmatch $_host1 hosts | cut -d'	' -f2`
			_host2=`ypmatch $_host2 hosts | cut -d'	' -f2 | head -1`
		else
			_host1=`echo $_host1 | nslookup | grep '^Name: ' | \
			    sed -e 's/^Name:    //'`
			_host2=`echo $_host2 | nslookup | grep '^Name: ' | \
			    sed -e 's/^Name:    //'`
		fi
		if [ "$_host2" = "$_host1" ]; then
			echo -n ' rpc.yppasswdd'
			rpc.yppasswdd ${yppasswdd_flags}
		fi
	fi
fi
d605 4
a608 13
# KerberosV master KDC
if [ X"${krb5_master_kdc}" = X"YES" ]; then
	echo 'KerberosV master KDC'
	/usr/libexec/kdc &
	/usr/libexec/kadmind &
	/usr/libexec/kpasswdd &
fi

# KerberosV slave KDC
if [ X"${krb5_slave_kdc}" = X"YES" ]; then
	echo 'KerberosV slave KDC'
	/usr/libexec/kdc &
	# Remember to enable hpropd in inetd.conf
@


1.353
log
@Add rc.d(8) script for the system daemons that are restartable.
From now on rc(8) is going to call these scripts to start them up on boot
in the same order than before.
In addition the inetd and rwhod variables in rc.conf are deprecated so that
inetd_flags and rwhod_flags should be used. The old flags are still going
to be used for some time to allow users to switch.
There are more rc modifications to come later so let's put this in so
we can base more work on this.
It is important to mention that you can still keep using rc.local just
like the way you did before, and we have no intention to remove that either.

I'd also like to thank ajacoutot@@, halex@@, sthen@@ and schwarze@@ for working
on this with me.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.352 2011/04/22 06:08:14 ajacoutot Exp $
d147 1
a147 1
	local _n;
@


1.352
log
@Move the rc.d(8) bits from rc.{local,shutdown} directly into /etc/rc.
By default, rc.{local,shutdown} don't output anything anymore.

original idea from schwarze@@
discussed with deraadt@@ and no objection from millert@@
ok schwarze@@ robert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.351 2011/04/16 05:53:18 ajacoutot Exp $
d145 11
d354 3
a356 20
echo 'starting system logger'
rm -f /dev/log
if [ X"${httpd_flags}" != X"-u" ]; then
	rm -f /var/www/dev/log
	syslogd_flags="${syslogd_flags} -a /var/www/dev/log"
fi
if [ X"${named_flags}" != X"NO" ]; then
	rm -f /var/named/dev/log
	syslogd_flags="${syslogd_flags} -a /var/named/dev/log"
fi
if [ X"${nsd_flags}" != X"NO" ]; then
	rm -f /var/nsd/dev/log
	syslogd_flags="${syslogd_flags} -a /var/nsd/dev/log"
fi
if [ -d /var/empty ]; then
	rm -f /var/empty/dev/log
	mkdir -p -m 0555 /var/empty/dev
	syslogd_flags="${syslogd_flags} -a /var/empty/dev/log"
fi
syslogd ${syslogd_flags}
a377 2

	echo 'starting named';		named $named_flags
d380 3
a382 3
if [ X"${nsd_flags}" != X"NO" ]; then
	echo 'starting nsd';		nsd $nsd_flags
fi
d404 3
a406 17
if [ X"${isakmpd_flags}" != X"NO" ]; then
	if [ X"${sasyncd_flags}" != X"NO" ]; then
		isakmpd_flags="-S ${isakmpd_flags}"
	fi
	echo 'starting isakmpd';	isakmpd ${isakmpd_flags}
fi

if [ X"${iked_flags}" != X"NO" ]; then
	if [ X"${sasyncd_flags}" != X"NO" ]; then
		iked_flags="-S ${iked_flags}"
	fi
	echo 'starting iked';		iked ${iked_flags}
fi

if [ X"${sasyncd_flags}" != X"NO" ]; then
	echo 'starting sasyncd';	sasyncd ${sasyncd_flags}
fi
d474 1
a474 7
if [ X"${timed_flags}" != X"NO" ]; then
	echo -n ' timed'; timed $timed_flags
fi

if [ X"${ldattach_flags}" != X"NO" -a -n "${ldattach_flags}" ]; then
	echo -n ' ldattach'; ldattach ${ldattach_flags}
fi
a475 3
if [ X"${ntpd_flags}" != X"NO" ]; then
	echo -n ' ntpd'; ntpd $ntpd_flags
fi
d591 1
a591 21
echo -n starting network daemons:

if [ X"${sshd_flags}" != X"NO" ]; then
	echo -n ' sshd';		/usr/sbin/sshd ${sshd_flags}
fi

if [ X"${snmpd_flags}" != X"NO" ]; then
	echo -n ' snmpd';		/usr/sbin/snmpd $snmpd_flags
fi

if [ X"${ldpd_flags}" != X"NO" ]; then
	echo -n ' ldpd';		/usr/sbin/ldpd $ldpd_flags
fi

if [ X"${ripd_flags}" != X"NO" ]; then
	echo -n ' ripd';		/usr/sbin/ripd $ripd_flags
fi

if [ X"${mrouted_flags}" != X"NO" ]; then
	echo -n ' mrouted';		mrouted $mrouted_flags
fi
d593 2
a594 32
if [ X"${dvmrpd_flags}" != X"NO" ]; then
	echo -n ' dvmrpd';		/usr/sbin/dvmrpd $dvmrpd_flags
fi

if [ X"${ospfd_flags}" != X"NO" ]; then
	echo -n ' ospfd';		/usr/sbin/ospfd $ospfd_flags
fi

if [ X"${ospf6d_flags}" != X"NO" ]; then
	echo -n ' ospf6d';		/usr/sbin/ospf6d $ospf6d_flags
fi

if [ X"${bgpd_flags}" != X"NO" ]; then
	echo -n ' bgpd';		/usr/sbin/bgpd $bgpd_flags
fi

if [ X"${ifstated_flags}" != X"NO" ]; then
	echo -n ' ifstated';		ifstated $ifstated_flags
fi

if [ X"${relayd_flags}" != X"NO" ]; then
	echo -n ' relayd';		/usr/sbin/relayd $relayd_flags
fi

if [ X"${dhcpd_flags}" != X"NO" -a -f /etc/dhcpd.conf ]; then
	touch /var/db/dhcpd.leases
	echo -n ' dhcpd';	/usr/sbin/dhcpd ${dhcpd_flags}
fi

if [ X"${dhcrelay_flags}" != X"NO" ]; then
	echo -n ' dhcrelay';		/usr/sbin/dhcrelay $dhcrelay_flags
fi
d599 1
a599 4
		if [ X"${rtsold_flags}" != X"NO" ]; then
			echo -n ' rtsold'
			/usr/sbin/rtsold ${rtsold_flags}
		fi
d601 2
a602 8
		if [ X"${route6d_flags}" != X"NO" ]; then
			echo -n ' route6d'
			/usr/sbin/route6d ${route6d_flags}
		fi
		if [ X"${rtadvd_flags}" != X"NO" ]; then
			echo -n ' rtadvd'
			/usr/sbin/rtadvd ${rtadvd_flags}
		fi
d606 2
a607 3
if [ X"${hostapd_flags}" != X"NO" ]; then
	echo -n ' hostapd';		/usr/sbin/hostapd ${hostapd_flags}
fi
a615 46
if [ X"${rwhod}" = X"YES" ]; then
	echo -n ' rwhod';		rwhod
fi


if [ X"${lpd_flags}" != X"NO" ]; then
	echo -n ' lpd';			lpd ${lpd_flags}
fi

if [ X"${ldapd_flags}" != X"NO" ]; then
	echo -n ' ldapd';		/usr/sbin/ldapd ${ldapd_flags}
fi

# We call sendmail with a full path so that SIGHUP works.
# Note that /usr/sbin/sendmail may actually call a
# mailer other than sendmail, depending on /etc/mailer.conf.
if [ X"${sendmail_flags}" != X"NO" -a -s /etc/mailer.conf ]; then
	echo -n ' sendmail';		( /usr/sbin/sendmail ${sendmail_flags} >/dev/null 2>&1 & )
fi

if [ X"${smtpd_flags}" != X"NO" ]; then
	echo -n ' smtpd'; smtpd $smtpd_flags
fi

if [ X"${httpd_flags}" != X"NO" ]; then
	# Clean up left-over httpd locks
	rm -f /var/www/logs/{ssl_mutex,httpd.lock,accept.lock}.*
	echo -n ' httpd';		/usr/sbin/httpd ${httpd_flags}
fi

if [ X"${ftpd_flags}" != X"NO" ]; then
	echo -n ' ftpd';		/usr/libexec/ftpd ${ftpd_flags}
fi

if [ X"${ftpproxy_flags}" != X"NO" ]; then
	echo -n ' ftp-proxy';		/usr/sbin/ftp-proxy ${ftpproxy_flags}
fi

if [ X"${identd_flags}" != X"NO" ]; then
	echo -n ' identd';		/usr/libexec/identd ${identd_flags}
fi

if [ X"${inetd}" = X"YES" -a -e /etc/inetd.conf ]; then
	echo -n ' inetd';		inetd
fi

a627 16
if [ X"${rarpd_flags}" != X"NO" -a -s /etc/ethers ]; then
	echo -n ' rarpd';		rarpd ${rarpd_flags}
fi

if [ X"${bootparamd_flags}" != X"NO" -a -s /etc/bootparams ]; then
	echo -n ' rpc.bootparamd';	rpc.bootparamd ${bootparamd_flags}
fi

if [ X"${rbootd_flags}" != X"NO" -a -s /etc/rbootd.conf ]; then
	echo -n ' rbootd';		rbootd ${rbootd_flags}
fi

if [ X"${mopd_flags}" != X"NO" -a -d /tftpboot/mop ]; then
	echo -n ' mopd';		mopd ${mopd_flags}
fi

d669 1
a669 17
echo -n starting standard daemons:

if [ X"${apmd_flags}" != X"NO" -a -x /usr/sbin/apmd ]; then
	echo -n ' apmd';	/usr/sbin/apmd ${apmd_flags}
fi

if [ X"${sensorsd_flags}" != X"NO" ]; then
	echo -n ' sensorsd';	/usr/sbin/sensorsd ${sensorsd_flags}
fi

if [ X"${hotplugd_flags}" != X"NO" -a -x /usr/sbin/hotplugd ]; then
	echo -n ' hotplugd';	/usr/sbin/hotplugd ${hotplugd_flags}
fi

if [ X"${watchdogd_flags}" != X"NO" -a -x /usr/sbin/watchdogd ]; then
	echo -n ' watchdogd';	/usr/sbin/watchdogd ${watchdogd_flags}
fi
d671 1
a671 1
echo -n ' cron';		cron
@


1.351
log
@Output 'starting standard daemons:' to be consistent with the rest.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.350 2011/03/23 15:22:10 stevesk Exp $
d165 11
a175 1
	if [ $? -eq 0 -a -f /etc/rc.shutdown ]; then
d810 9
@


1.350
log
@use ssh-keygen -A; ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.349 2011/03/17 16:43:51 robert Exp $
d803 1
a803 1
echo -n standard daemons:
@


1.349
log
@- introduce the INRC environment variable so that rc.subr(8) knows if it
  gets called from rc.local or rc.shutdown
- notify the user if a given operation was successfull or not by appending
  the (ok) or (failed) strings to the end of the daemon name
- hide stdout and stdin unless RC_DEBUG=1 is set, otherwise all the function
  names will be printed out and all output sent to stdin or stdout
- since from now on rc.subr is taking care of printing out the daemon names
  on startup, we don't need to do this from rc.{local,shutdown} anymore

brainkilling work done by me and ajacoutot@@, ok ajacoutot@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.348 2011/01/14 00:05:42 deraadt Exp $
d610 1
a610 32
if [ ! -f /etc/ssh/ssh_host_dsa_key ]; then
	echo -n "ssh-keygen: generating new DSA host key... "
	if /usr/bin/ssh-keygen -q -t dsa -f /etc/ssh/ssh_host_dsa_key -N ''; then
		echo done.
	else
		echo failed.
	fi
fi
if [ ! -f /etc/ssh/ssh_host_ecdsa_key ]; then
	echo -n "ssh-keygen: generating new ECDSA host key... "
	if /usr/bin/ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''; then
		echo done.
	else
		echo failed.
	fi
fi
if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then
	echo -n "ssh-keygen: generating new RSA host key... "
	if /usr/bin/ssh-keygen -q -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''; then
		echo done.
	else
		echo failed.
	fi
fi
if [ ! -f /etc/ssh/ssh_host_key ]; then
	echo -n "ssh-keygen: generating new RSA1 host key... "
	if /usr/bin/ssh-keygen -q -t rsa1 -f /etc/ssh/ssh_host_key -N ''; then
		echo done.
	else
		echo failed.
	fi
fi
@


1.348
log
@in the most trivial way, request that the kernel arc4random re-key after
we run netstart
ok tedu, djm liked it too
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.347 2011/01/10 06:44:49 deraadt Exp $
d155 1
@


1.347
log
@talk to /dev/arandom as a single read or write.
in particular a single write will result in a single re-key event,
rather than 64 writes causing 64 re-keys -- wasting the kernel's time.
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.346 2010/12/22 18:13:14 deraadt Exp $
d297 1
@


1.346
log
@Consistantly use /dev/arandom for feeding entropy to the kernel.
ok kjell otto miod
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.345 2010/11/08 19:44:36 ajacoutot Exp $
d105 1
a105 1
		dd if=/var/db/host.random of=/dev/arandom bs=1024 count=64 \
d110 1
a110 1
		dd if=/dev/arandom of=/var/db/host.random bs=1024 count=64 \
d162 1
a162 1
	dd if=/dev/arandom of=/var/db/host.random bs=1024 count=64 >/dev/null 2>&1
d313 1
a313 1
	dd if=/dev/arandom of=/var/db/host.random bs=1024 count=64 \
@


1.345
log
@Don't print 'Null message body; hope that's ok' in the rc output if the
call to rc.firstime doesn't output anything to mail(1).

ok deraadt@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.344 2010/11/02 18:59:12 deraadt Exp $
a104 2
		dd if=/var/db/host.random of=/dev/urandom bs=1024 count=64 \
		    > /dev/null 2>&1
d110 1
a110 1
		dd if=/dev/urandom of=/var/db/host.random bs=1024 count=64 \
d162 1
a162 1
	dd if=/dev/urandom of=/var/db/host.random bs=1024 count=64 >/dev/null 2>&1
d311 1
a311 1
# if there's no /var/db/host.random, make one through /dev/urandom
d313 1
a313 1
	dd if=/dev/urandom of=/var/db/host.random bs=1024 count=64 \
@


1.344
log
@delete excessive ; use
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.343 2010/10/26 20:56:03 robert Exp $
d828 1
a828 1
	. /etc/rc.firsttime.run 2>&1 | mail -s 'rc.firsttime output' root
@


1.343
log
@Add a simple 'rc' system to base in order to start/stop/restart/reload
services installed by the ports system (for now).
It only uses pgrep/pkill to handle these processes. A manual page will
come later.

'put it in' deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.342 2010/10/01 20:51:32 jakob Exp $
d646 1
a646 1
	echo -n ' sshd';		/usr/sbin/sshd ${sshd_flags};
d718 1
a718 1
	echo -n ' hostapd';		/usr/sbin/hostapd ${hostapd_flags};
d738 1
a738 1
	echo -n ' ldapd';		/usr/sbin/ldapd ${ldapd_flags};
@


1.342
log
@start nsd(8); ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.341 2010/09/06 17:10:19 naddy Exp $
d160 3
a248 3

# pick up option configuration
. /etc/rc.conf
@


1.341
log
@add ssh_host_ecdsa_key to /etc; from Mattieu Baptiste <mattieu.b@@gmail.com>
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.340 2010/07/27 08:37:33 martinh Exp $
d343 4
d376 4
@


1.340
log
@Add ldapd to rc and rc.conf. Enable it at boot with ldapd_flags=.

ok deraadt@@ gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.339 2010/07/13 12:28:13 sthen Exp $
d605 8
@


1.339
log
@When cleaning /tmp at boot, run the slower find unconditionally.
Previously if the quick rm -rf failed, find was not run, so some files
were not removed. Looks good to tedu@@.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.338 2010/06/28 20:16:21 reyk Exp $
d719 4
@


1.338
log
@Add iked to rc/rc.conf, you can enable it on boot with the iked_flags= var.
Also copy the generated RSA key for isakmpd into the iked directory;  this
way we share the same RSA key by default.

ok deraadt@@ jsg@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.336 2010/04/23 06:29:36 ratchov Exp $
d537 2
a538 1
(cd /tmp && rm -rf [a-km-pr-zA-Z]* &&
@


1.337
log
@Add ldpd(8) to /etc/rc* files.
It needs to be started before the routing daemons.
In this way every new prefix learnt by them already has a label associated.

discussed with and ok'ed by claudio@@
@
text
@d375 1
a375 1
	echo -n "openssl: generating new isakmpd RSA key... "
d387 7
d399 7
@


1.336
log
@start ``aucat -l'' from /etc/rc, unless aucat_flags=NO, which is
the default setting in rc.conf.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.335 2010/01/04 18:03:30 deraadt Exp $
d620 4
@


1.335
log
@If a /etc/rc.firsttime file exists, run it just once, mailing the output to
root.  If anyone wants to use this in a siteXX.tgz file, please be sure to
*concatenate* to the file -- not replace it -- since the installer is going
to be using this file itself.
discussed with todd and halex
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.334 2009/12/04 21:58:41 deraadt Exp $
d766 4
@


1.334
log
@use mv -f to avoid stopping during wrongly mounted root; sbeyer@@reactor.de
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.333 2009/11/23 12:14:25 deraadt Exp $
d781 7
@


1.333
log
@Move ipsec key creation before isakmpd, and sshd to become the first
of the network daemons so that it can be used if another daemon stops
in its tracks.
ok claudio markus sthen
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.332 2009/08/12 13:21:15 deraadt Exp $
d295 1
a295 1
	mv /etc/resolv.conf.save /etc/resolv.conf
@


1.332
log
@change some defaults inside amd itself, so that the rc scripts no longer
have to pass those options.  this makes amd much easier to restart by
hand (though it still remains a nasty daemon do that with)
ok millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.331 2009/08/07 22:27:47 sthen Exp $
d374 13
d612 4
a615 11
if [ ! -f /etc/isakmpd/private/local.key ]; then
	echo -n "openssl: generating new isakmpd RSA key... "
	if /usr/sbin/openssl genrsa -out /etc/isakmpd/private/local.key 2048 \
	    > /dev/null 2>&1; then
		chmod 600 /etc/isakmpd/private/local.key
		openssl rsa -out /etc/isakmpd/local.pub \
		    -in /etc/isakmpd/private/local.key -pubout > /dev/null 2>&1
		echo done.
	else
		echo failed.
	fi
a617 2
echo -n starting network daemons:

a732 4
fi

if [ X"${sshd_flags}" != X"NO" ]; then
	echo -n ' sshd';		/usr/sbin/sshd ${sshd_flags};
@


1.331
log
@- specifically match carp+([0-9]):, not just carp*:. avoids spurious
attempts to "ifconfig carp down" noticed by david@@.

- use non-descriptive variables names rather than $if/$junk to encourage
people reading the code to think what it's doing; many of the output lines
are not interface names.

ok david@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.330 2009/08/05 02:06:21 deraadt Exp $
d443 1
a443 2
	(cd /etc/amd; amd -l syslog -x error,noinfo,nostats -p \
	    -a ${amd_dir} `cat ${amd_master}` > /var/run/amd.pid )
@


1.330
log
@correct indent
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.329 2009/08/04 15:16:45 sthen Exp $
d169 3
a171 3
		ifconfig | while read if junk; do
			case $if in
			carp*:) ifconfig ${if%:} down ;;
@


1.329
log
@Don't use grep/cut during shutdown, /usr might not be mounted.
Spotted by deraadt@@. These were used to bring down carp ifaces
cleanly; replace with shell features.

ok deraadt@@, henning@@. "Much mo' better" blambert@@.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.328 2009/06/30 15:30:24 deraadt Exp $
d171 1
a171 1
				carp*:) ifconfig ${if%:} down ;;
@


1.328
log
@extra spaces found during inspection of other goo
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.327 2009/06/30 15:23:51 robert Exp $
d169 4
a172 3
		ifconfig -a|grep '^carp.*:'|cut -f1 -d:|while read if
		do
			ifconfig $if down
@


1.327
log
@Make syslogd create a socket in /var/www/dev when httpd is enabled in order
to make logging to syslog work with php for example.

ok deraadt@@, henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.326 2009/06/03 14:45:39 jj Exp $
d109 1
a109 1
	
d125 1
a125 1
	grep "/${_service}" /etc/services | { 
d140 1
a140 1
		done; 
@


1.326
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.325 2009/05/31 20:57:12 halex Exp $
d334 4
@


1.325
log
@Make sure xdm is installed before trying to run it

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.324 2009/04/17 17:17:03 henning Exp $
d470 1
a470 1
if [ X"${afs}" = X"YES" -a -c /dev/xfs0 ]; then
d473 1
a473 1
	mount -t xfs /dev/xfs0 /afs
@


1.324
log
@a scrub was hiding here when nfs was enabled. since we want the no-df
behaviour here replace by an explicit set reassemble yes no-df.
noticed by Valery Masiutsin <val.masutin at gmail dot com>
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.323 2009/03/16 23:18:45 jacekm Exp $
d812 1
a812 1
if [ X"${xdm_flags}" != X"NO" ]; then
@


1.323
log
@support for smtpd(8); ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.322 2009/03/04 05:29:09 mcbride Exp $
d275 1
a275 1
		RULES="scrub in all no-df\n$RULES"
@


1.322
log
@Don't synchronise carp states in default PF ruleset, these get created
on each host and end up conflicting, so they never sync anyways.

ok dlg henning
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.321 2008/12/11 15:44:00 naddy Exp $
d699 4
@


1.321
log
@Bump size of isakmpd RSA host key up to 2048 bits to match the
SSH2-RSA size; ok hshoexer@@, no objection from miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.320 2008/11/27 00:52:06 uwe Exp $
d271 1
a271 1
	RULES="$RULES\npass proto carp"
@


1.320
log
@Add bt=YES to /etc/rc.conf.local to start the daemon
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.319 2008/10/03 14:25:11 deraadt Exp $
d597 1
a597 1
	if /usr/sbin/openssl genrsa -out /etc/isakmpd/private/local.key 1024 \
@


1.319
log
@New option -D to daemonize spamd-setup for early bootup use.  This avoids
spamd-setup hanging if there are various (network?) issues and the system
not proceeding to multiuser so that this can be debugged.  We do not use
& for startup in /etc/rc because this makes the spamd-setup a child of the
rc scripts after bootup (that is gross)
Problem reported in PR 5864, change discussed with beck, ok millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.318 2008/07/09 20:23:47 djm Exp $
d676 7
@


1.318
log
@automatically populate net.inet.(tcp|udp).baddynamic with the
contents of /etc/services so as to avoid randomly allocating
source ports that correspond to well-known services. Auto-filling
of the baddynamic tables is performed before reading sysctl.conf,
so it is still possible to add or subtract ports, or override the
autofilling entirely there.

Note that this requires a new kernel and /sbin/sysctl.

feedback markus@@ ok markus@@ deraadt@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.317 2008/06/15 04:49:34 sturm Exp $
d725 1
a725 1
	/usr/libexec/spamd-setup
@


1.317
log
@start rpc.statd together with rpc.lockd

"just get it in" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.316 2008/06/09 22:21:49 mbalmer Exp $
d119 28
d283 4
@


1.316
log
@Replace nmeattach (which will be removed) with ldattach.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.315 2008/06/08 03:03:37 jdixon Exp $
d400 1
@


1.315
log
@Deprecate /etc/dhcpd.interfaces.  This is made unnecessary by dhcpd_flags.

ok deraadt@@ beck@@ reyk@@ phessler@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.314 2008/06/02 16:33:39 jasper Exp $
d418 2
a419 2
if [ X"${nmeaattach_flags}" != X"NO" -a -n "${nmeaattach_flags}" ]; then
	echo -n ' nmeaattach';	nmeaattach ${nmeaattach_flags}
@


1.314
log
@- add a full stop for consistency

ok deraadt@@ dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.313 2008/05/07 11:58:14 claudio Exp $
d615 1
a615 4
	if [ -f /etc/dhcpd.interfaces ]; then
		dhcpd_ifs=`stripcom /etc/dhcpd.interfaces`
	fi
	echo -n ' dhcpd';	/usr/sbin/dhcpd ${dhcpd_flags} ${dhcpd_ifs}
@


1.313
log
@routed is no longer, use ripd instead.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.312 2008/02/27 20:27:38 djm Exp $
d534 1
a534 1
	echo 'preserving editor files';	/usr/libexec/vi.recover
@


1.312
log
@Try to load host.random before starting the network, no network
randomisations (among other things) benefit from it. We still try again
after /var has been definitely mounted in case it is on NFS;
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.311 2008/01/31 14:18:03 reyk Exp $
a578 4
fi

if [ X"${routed_flags}" != X"NO" ]; then
	echo -n ' routed';		routed $routed_flags
@


1.311
log
@enable snmpd in the build

approved by deraadt@@, ok thib@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.310 2008/01/16 14:19:28 sthen Exp $
d102 17
d216 2
d286 2
a287 9
	dd if=/var/db/host.random of=/dev/urandom bs=1024 count=64 \
	    > /dev/null 2>&1
	dd if=/var/db/host.random of=/dev/arandom bs=1024 count=64 \
	    > /dev/null 2>&1

	# reset seed file, so that if a shutdown-less reboot occurs,
	# the next seed is not a repeat
	dd if=/dev/urandom of=/var/db/host.random bs=1024 count=64 \
	    > /dev/null 2>&1
@


1.310
log
@create pflog0 whenever pf is enabled, not just when pflogd_flags!=NO
fixes spamlogd with pflogd disabled.

ok henning
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.309 2008/01/09 21:38:19 mpf Exp $
d564 4
@


1.309
log
@Do not bring up pfsync(4) before the working ruleset
has been loaded. Otherwise, states that are received during the
initial bulk update mismatch the correct pf-checksum and
do not attach to the rules.
Problem identified by david@@. Fix done in collaboration.
OK henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.308 2007/12/07 17:13:35 deraadt Exp $
d301 1
a301 1
if [ X"${pf}" != X"NO" -a X"${pflogd_flags}" != X"NO" ]; then
d305 3
a307 1
		pflogd ${pflogd_flags}
@


1.308
log
@hoststated gets renamed to relayd.  easier to type, and actually says
what the daemon does - it is a relayer that pays attention to the status
of pools of hosts; not a status checkers that happens to do some relaying
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.307 2007/11/11 16:12:11 jmc Exp $
d224 1
a224 1
	RULES="$RULES\npass proto { pfsync, carp }"
d251 4
@


1.307
log
@-w flag for wsconsctl is deprecated; from Tim van der Molen
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.306 2007/10/15 20:58:10 deraadt Exp $
d591 2
a592 2
if [ X"${hoststated_flags}" != X"NO" ]; then
	echo -n ' hoststated';		/usr/sbin/hoststated $hoststated_flags
@


1.306
log
@permit tcp 111/2049 at boot too, for tcp nfs mounts; Jim Rees
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.305 2007/10/08 11:29:58 norby Exp $
d97 1
a97 1
		eval /sbin/wsconsctl -w $1
@


1.305
log
@Add the user _ospf6d otherwise the newly imported ospf6d daemon will not
start.

ok dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.304 2007/04/25 14:12:05 espie Exp $
d229 2
a230 2
		RULES="$RULES\npass in proto udp from any port { 111, 2049 } to any"
		RULES="$RULES\npass out proto udp from any to any port { 111, 2049 }"
@


1.304
log
@shutdown existing carp interfaces based on ifconfig output, not static
/etc/*.if files.

okay reyk@@, deraadt@@, krw@@...
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.303 2007/04/14 11:54:00 grunk Exp $
d577 4
@


1.303
log
@introduce {fsck,mount}_vnd tools to be able to describe vnd images
in /etc/fstab instead of using some weird homegrown scripts.
No support for boot time mounting yet, so "noauto" is still needed.

original idea from david@@
help and discussion todd@@ bluhm@@ beck@@, manpage help jmc@@
ok simon@@ tedu@@ bluhm@@ todd@@, "looks good" thib@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.302 2007/03/14 20:47:17 ckuethe Exp $
d124 3
a126 9
		for hn in /etc/hostname.carp[0-9]*; do
			# Strip off /etc/hostname. prefix
			if=${hn#/etc/hostname.}
			test "$if" = "carp[0-9]*" && continue

			ifconfig $if > /dev/null 2>&1
			if [ $? -eq 0 ]; then
				ifconfig $if down
			fi
@


1.302
log
@Allow nmeaattach to start a sensor before starting ntpd. Many modern
receivers can cold start in the time it takes the boot process to get
close to starting ntpd. Even if the gps is not ready or the fix is not
valid, at least the sensor has been created; ntpd won't have to wait
a few minutes before scanning for the sensor. This makes using GPS as
the sole source of time a bit easier.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.301 2007/02/27 16:24:29 beck Exp $
d201 1
a201 1
mount -a -t nonfs
@


1.301
log
@catch second instance of spamd_grey - thanks millert and jmc
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.300 2007/02/27 16:21:29 beck Exp $
d404 4
@


1.300
log
@spamd_grey=YES should really be spamd_black=NO
as disscussed with jmc and millert.
ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.299 2007/02/27 02:10:58 beck Exp $
d676 1
a676 1
	if [ X"${spamd_grey}" != X"NO" ]; then
@


1.299
log
@Flag day for spamd -
1) config files move to /etc/mail
2) -g option goes away in spamd-setup and spamd - greylisting is now the default
3) option change to spamd, -b addr becomes -l addr.
4) -b option in spamd-setup and spamd to turn on old blacklisting mode.

Man page shortly to be flensed to make this easier to explain
ok deraadt@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.298 2007/02/02 14:51:19 ajacoutot Exp $
d671 1
a671 1
	if [ X"${spamd_grey}" = X"NO" ]; then
@


1.298
log
@- add a new "accounting" variable (default to NO) to enable accouting
(if the file /var/account/acct does not exist it will be created)

ok mk@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.297 2007/01/31 08:32:16 pyr Exp $
d671 2
a672 2
	if [ X"${spamd_grey}" != X"NO" ]; then
		spamd_flags="${spamd_flags} -g"
@


1.297
log
@link hoststated to the builds.
ok miod@@, henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.296 2007/01/06 12:00:06 matthieu Exp $
d499 4
a502 1
if [ -f /var/account/acct ]; then
@


1.296
log
@remove acpid references. ok gwk@@, steven@@, grange@@ and janus@@.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.295 2006/11/28 23:44:35 mcbride Exp $
d584 4
@


1.295
log
@Move isakmpd's auto-generated public key, local.pub, into /etc/isakmpd
This makes it readable by unprivileged uses, simplifying configuration,
and there is no reason for it to be secret.

ok msf deraadt hshoexer
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.294 2006/11/16 13:07:11 henning Exp $
a715 4
fi

if [ X"${acpid_flags}" != X"NO" -a -x /usr/sbin/acpid ]; then
	echo -n ' acpid';	/usr/sbin/acpid ${acpid_flags}
@


1.294
log
@when pf and pflogd are enabled, do a "ifconfig pflog0 create" early.
rc checks pflog0 existance before starting pflogd0, pbly to not print an
error message on pflog-less kernels... ugh. ok mcbride
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.293 2006/11/06 21:55:52 deraadt Exp $
d548 1
a548 1
		openssl rsa -out /etc/isakmpd/private/local.pub \
@


1.293
log
@duh -- on first boot, do not build the host.random file twice; ok djm
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.292 2006/10/29 18:58:57 norby Exp $
d304 1
@


1.292
log
@Add the _ripd user and startup stuff.

ok claudio@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.291 2006/09/27 19:54:36 mpf Exp $
d273 5
a278 5

# reset seed file, so that if a shutdown-less reboot occurs,
# the next seed is not a repeat
dd if=/dev/urandom of=/var/db/host.random bs=1024 count=64 \
    > /dev/null 2>&1
@


1.291
log
@Add ifstated(8) startup bits.
OK deraadt@@, henning@@, mcbride@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.290 2006/09/01 01:18:02 mpf Exp $
d559 4
@


1.290
log
@Switch boot order: isakmpd starts before sasyncd.
If a user is running sasyncd, start isakmpd with -S.
In this mode isakmpd starts off passsive and doesn't
delete SA's on shutdown.
OK ho@@, hshoexer@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.289 2006/08/29 17:26:55 henning Exp $
d575 4
@


1.289
log
@increase the carp demotion counter by 128 instead of 1 while rc runs.
you do not want a machine that is in the middle of rc and does not have
all network daemons (that possibly increase the carp demotion counter
further) to become master just because the other one lost 2 bgp sessions
or similar for other daemons (esp sasyncd) and as such has a demotion
count of >1.
ok mcbride mpf deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.288 2006/08/04 11:43:43 markus Exp $
d324 7
a332 4
fi

if [ X"${isakmpd_flags}" != X"NO" ]; then
	echo 'starting isakmpd';	isakmpd ${isakmpd_flags}
@


1.288
log
@remove redundant comments; noted by mpf; ok deraadt, millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.287 2006/06/02 21:32:50 mcbride Exp $
d247 1
a247 1
ifconfig -g carp carpdemote
d725 1
a725 1
ifconfig -g carp -carpdemote
@


1.287
log
@Add sasyncd to rc / rc.conf.

ok deraadt@@ cloder@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.286 2006/06/02 19:59:35 mcbride Exp $
a309 2
# $named_flags is imported from /etc/rc.conf;
# if $named_flags != NO, named is run.
a323 2
# $sasyncd_flags is imported from /etc/rc.conf;
# If $sasyncd_flags == NO, sasyncd isn't run.
a327 2
# $isakmpd_flags is imported from /etc/rc.conf;
# If $isakmpd_flags == NO, isakmpd isn't run.
a331 3
# $ipsec is imported from /etc/rc.conf;
# if $ipsec == NO or /etc/ipsec.conf doesn't exist, then
# ipsecctl isn't run.
a339 2
# $portmap is imported from /etc/rc.conf;
# if $portmap == YES, the portmapper is started.
a375 2
# $nfs_server is imported from /etc/rc.conf;
# if $nfs_server == YES, the machine is setup for being an nfs server
a397 2
# $timed_flags is imported from /etc/rc.conf;
# if $timed_flags == NO, timed isn't run.
a553 2
# $routed_flags are imported from /etc/rc.conf.
# If $routed_flags == NO, routed isn't run.
a557 2
# $mrouted_flags is imported from /etc/rc.conf;
# If $mrouted_flags == NO, then mrouted isn't run.
a573 2
# $dhcpd_flags is imported from /etc/rc.conf
# If $dhcpd_flags == NO or /etc/dhcpd.conf doesn't exist, then dhcpd isn't run.
a588 2
		# $rtsold_flags is imported from /etc/rc.conf;
		# If $rtsold_flags == NO, then rtsold isn't run.
a593 2
		# $route6d_flags is imported from /etc/rc.conf;
		# If $route6d_flags == NO, then route6d isn't run.
a597 2
		# $rtadvd_flags is imported from /etc/rc.conf;
		# If $rtadvd_flags == NO, then rtadvd isn't run.
a608 2
# $rwhod is imported from /etc/rc.conf;
# if $rwhod == YES, rwhod is run.
d618 2
a619 4
# $sendmail_flags is imported from /etc/rc.conf;
# If $sendmail_flags == NO or /etc/mailer.conf doesn't exist, then
# sendmail isn't run.  We call sendmail with a full path so that
# SIGHUP works.  Note that /usr/sbin/sendmail may actually call a
a662 3
# $rarpd_flags is imported from /etc/rc.conf;
# If $rarpd_flags == NO or /etc/ethers doesn't exist, then
# rarpd isn't run.
a666 3
# $bootparamd_flags is imported from /etc/rc.conf;
# If $bootparamd_flags == NO or /etc/bootparams doesn't exist, then
# bootparamd isn't run.
a670 3
# $rbootd_flags is imported from /etc/rc.conf;
# If $rbootd_flags == NO or /etc/rbootd.conf doesn't exist, then
# rbootd isn't run.
a674 3
# $mopd_flags is imported from /etc/rc.conf;
# If $mopd_flags == NO or /tftpboot/mop doesn't exist, then
# mopd isn't run.
a701 2
# $apmd_flags is imported from /etc/rc.conf;
# don't run daemon if $apmd_flags == NO or /usr/sbin/apmd doesn't exist
a739 1

a740 1

@


1.286
log
@Carp demotion interlock. Prevents carp from preempting until the system is
booted, allowing for daemons to sync with peers before we take over.

ok deraadt@@ mpf@@ moritz@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.285 2006/06/01 21:37:43 norby Exp $
d324 6
@


1.285
log
@Hook dhcrelay(8) into the startup process.

ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.284 2006/06/01 16:43:23 norby Exp $
d247 1
d763 3
d778 1
@


1.284
log
@add all the goo to hook dvmrp into the system

ok derradt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.283 2006/05/29 16:49:42 avsm Exp $
d594 4
@


1.283
log
@revert vfs.nfs.privport sysctl, broke a few architectures
requested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.281 2006/03/27 16:53:10 reyk Exp $
d572 4
@


1.282
log
@Add support for NFS mounts to be from non-reserved ports:

- new sysctl vfs.nfs.privport to require NFS mount requests to be on
reserved ports when set to 1 (the default).
- mountd now automatically sets the sysctl depending on the -n flag.
- add mountd_flags to rc.conf to enable the -n flag at boot.
deraadt@@ ok
@
text
@d386 1
a386 1
	echo -n ' mountd';		mountd ${mountd_flags}
@


1.281
log
@add hostapd to rc/rc.conf glue

suggested and ok by kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.280 2006/03/22 15:57:55 hshoexer Exp $
d386 1
a386 1
	echo -n ' mountd';		mountd
@


1.280
log
@As the isakmpd fifo race is fixed, hook ipsecctl to rc.

ok naddy@@ todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.279 2006/03/14 22:48:46 deraadt Exp $
d615 4
@


1.279
log
@move wsconsctl up earlier, so that any key changes made can be used
to (for instance) interrupt dhclient with a ^C instead of a 'CAPS-LOCK C'
from e@@molioner.dk checked by matthieu
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.278 2006/03/12 20:07:48 otto Exp $
d329 9
@


1.278
log
@Use the new -s flag to mount the /usr and /var partitions. Avoids
doubly mounted mfs partitions. Also, at the end of the mount dance,
try mount all partitions, not just nfs partitions. Handles a case
where local paritition mounted inside a nfs partition where not
mounted by rc (/usr on nfs with a local /usr/obj, for example).
ok deraadt@@ henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.277 2006/01/12 21:54:15 deraadt Exp $
d216 2
a694 2

wsconsctl_conf
@


1.277
log
@configure mixers late; obsd@@enop.org 4970
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.276 2005/11/30 16:04:33 tom Exp $
d257 2
a258 2
mount /usr >/dev/null 2>&1
mount /var >/dev/null 2>&1
d404 1
a404 1
mount -a -t nfs
@


1.276
log
@Change "starting rpc daemons" to "starting initial daemons" as we
also start ntpd at this time.

discussed with jmc@@; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.275 2005/11/16 09:19:36 camield Exp $
a242 2
mixerctl_conf

d695 2
@


1.275
log
@add new ftp-proxy startup bits

ok henning beck
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.274 2005/10/31 10:32:47 henning Exp $
d331 1
a331 1
echo -n 'starting rpc daemons:'
@


1.274
log
@add bits for watchdogd startup, PR4540 Michael Knudsen <e@@molioner.dk>
but I put it at a different place, watchdogd is really not a network daemon
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.273 2005/09/22 23:57:31 deraadt Exp $
d636 4
@


1.273
log
@split ypserv & ypbind startup; ypserv does not depend on you being a
client; from amh@@POBOX.COM
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.272 2005/09/19 15:47:45 fgsch Exp $
d729 4
@


1.272
log
@change printed line from `printer' to `lpd'; deraadt@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.271 2005/07/25 19:18:44 mcbride Exp $
d339 1
a339 1
if [ -d /var/yp/binding -a X`domainname` != X ]; then
d341 1
a341 1
		# yp server capabilities needed...
d346 4
a349 1
	echo -n ' ypbind';		ypbind
@


1.271
log
@Fix the test for successful ifconfig of carp interface on shutdown, makes
graceful shutdown work correctly.

ok mpf@@ deraadt@@ a long time ago, committed to local repository by accident.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.270 2005/06/19 16:55:10 deraadt Exp $
d613 1
a613 1
	echo -n ' printer';		lpd ${lpd_flags}
@


1.270
log
@ntpd -s by default is just a pause if there is no net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.252 2004/09/17 21:50:30 mcbride Exp $
d130 1
a130 1
			if [ $? -ne 0 ]; then
@


1.269
log
@split the dummy ruleset pfctl -f - -e into separate -f - and -e.
relevant when the dummy ruleset can't be loaded, we still want to enable
pf, otherwise the real ruleset (even if that does load correctly) won't
be active. might happen on a non-GENERIC kernel or after an update (before
/etc is manually updated). reported by Jim Rees. ok frantzen@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.268 2005/06/02 20:09:38 tholo Exp $
d399 1
a399 2
	# since this is system startup, use -s
	echo -n ' ntpd'; ntpd -s $ntpd_flags
@


1.268
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.267 2005/05/19 01:58:49 millert Exp $
d237 2
a238 1
	echo $RULES | pfctl -f - -e
@


1.267
log
@o change wsconsctl.conf subshell into a function
o move test for foo.conf into the foo_conf function proper
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.266 2005/05/18 16:43:51 millert Exp $
d714 4
@


1.266
log
@Make test(1) usage consistent when testing a variable that may not be set.
OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.265 2005/05/18 13:44:35 millert Exp $
d55 2
d76 2
d86 16
d240 1
a240 3
if [ -f /etc/sysctl.conf ]; then
	sysctl_conf
fi
d242 1
a242 3
if [ -f /etc/mixerctl.conf ]; then
	mixerctl_conf
fi
d689 1
a689 14
if [ -x /sbin/wsconsctl -a -f /etc/wsconsctl.conf ]; then
(
	# delete comments and blank lines
	save_IFS="$IFS"
	IFS="
"
	set -- `stripcom /etc/wsconsctl.conf`
	IFS="$save_IFS"
	while [ $# -ge 1 ] ; do
		eval /sbin/wsconsctl -w $1
		shift
	done
)
fi
@


1.265
log
@o move sysctl and mixerctl parsing into a subroutine instead of a subshell
o update resource limits if kern.maxproc or kern.maxfiles is changed
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.264 2005/04/09 14:15:18 deraadt Exp $
d95 1
a95 1
if [ $1x = shutdownx ]; then
d110 1
a110 1
			if [ "$?" != "0" ]; then
d115 1
a115 1
		if [ "X${powerdown}" = X"YES" ]; then
d144 1
a144 1
elif [ $1x = autobootx ]; then
d196 1
a196 1
if [ "X${pf}" != X"NO" ]; then
d236 1
a236 1
if [ "X${pf}" != X"NO" ]; then
d274 1
a274 1
if [ "X${named_flags}" != X"NO" ]; then
d294 1
a294 1
if [ "X${named_flags}" != X"NO" ]; then
d310 1
a310 1
if [ "X${isakmpd_flags}" != X"NO" ]; then
d353 1
a353 1
if [ X${nfs_server} = X"YES" -a -s /etc/exports -a \
d359 1
a359 1
	if [ X${lockd} = X"YES" ]; then
d364 1
a364 1
if [ X${amd} = X"YES" -a -e ${amd_master} ]; then
d377 1
a377 1
if [ "X${timed_flags}" != X"NO" ]; then
d381 1
a381 1
if [ "X${ntpd_flags}" != X"NO" ]; then
d397 1
a397 1
if [ "X${afs}" = X"YES" -a -c /dev/xfs0 ]; then
d405 1
a405 1
if [ "X${check_quotas}" = X"YES" ]; then
d457 1
a457 1
if [ X${securelevel} != X"" ]; then
d536 1
a536 1
if [ "X${routed_flags}" != X"NO" ]; then
d542 1
a542 1
if [ "X${mrouted_flags}" != X"NO" ]; then
d546 1
a546 1
if [ "X${ospfd_flags}" != X"NO" ]; then
d550 1
a550 1
if [ "X${bgpd_flags}" != X"NO" ]; then
d556 1
a556 1
if [ "X${dhcpd_flags}" != X"NO" -a -f /etc/dhcpd.conf ]; then
d566 1
a566 1
	if [ "X${fw}" == X"0" ]; then
d569 1
a569 1
		if [ "X${rtsold_flags}" != X"NO" ]; then
d576 1
a576 1
		if [ "X${route6d_flags}" != X"NO" ]; then
d582 1
a582 1
		if [ "X${rtadvd_flags}" != X"NO" ]; then
d591 1
a591 1
if [ X${rwhod} = X"YES" ]; then
d596 1
a596 1
if [ "X${lpd_flags}" != X"NO" ]; then
d605 1
a605 1
if [ "X${sendmail_flags}" != X"NO" -a -s /etc/mailer.conf ]; then
d609 1
a609 1
if [ "X${httpd_flags}" != X"NO" ]; then
d615 1
a615 1
if [ "X${ftpd_flags}" != X"NO" ]; then
d619 1
a619 1
if [ "X${identd_flags}" != X"NO" ]; then
d623 1
a623 1
if [ X${inetd} = X"YES" -a -e /etc/inetd.conf ]; then
d631 2
a632 2
if [ "X${spamd_flags}" != X"NO" ]; then
	if [ "X${spamd_grey}" != X"NO" ]; then
d637 1
a637 1
	if [ "X${spamd_grey}" != X"NO" ]; then
d646 1
a646 1
if [ "X${rarpd_flags}" != X"NO" -a -s /etc/ethers ]; then
d653 1
a653 1
if [ "X${bootparamd_flags}" != X"NO" -a -s /etc/bootparams ]; then
d660 1
a660 1
if [ "X${rbootd_flags}" != X"NO" -a -s /etc/rbootd.conf ]; then
d667 1
a667 1
if [ "X${mopd_flags}" != X"NO" -a -d /tftpboot/mop ]; then
d689 1
a689 1
if [ X${krb5_master_kdc} = X"YES" ]; then
d697 1
a697 1
if [ X${krb5_slave_kdc} = X"YES" ]; then
d709 1
a709 1
if [ "X${apmd_flags}" != X"NO" -a -x /usr/sbin/apmd ]; then
d727 1
a727 1
if [ "X${wsmoused_flags}" != X"NO" -a -x /usr/sbin/wsmoused ]; then
d732 1
a732 1
if [ "X${xdm_flags}" != X"NO" ]; then
@


1.264
log
@if, at boot time, a /etc/resolv.conf.save is found, assume this is from
a dhclient that crashed so hard it was unable to swap the file back,
and hence, finish that job.  i convinced krw and henning that this is
right right place (not in netstart)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.263 2005/04/01 05:37:35 deraadt Exp $
d25 57
d221 1
a221 8
(
	# delete comments and blank lines
	set -- `stripcom /etc/sysctl.conf`
	while [ $# -ge 1 ] ; do
		sysctl $1
		shift
	done
)
d225 1
a225 8
(
	# delete comments and blank lines
	set -- `stripcom /etc/mixerctl.conf`
	while [ $# -ge 1 ] ; do
		mixerctl -q $1 > /dev/null 2>&1
		shift
	done
)
@


1.263
log
@OK, this is an insane commit.  Comes from johnb@@ugrad.cs.ualberta.ca, pr 3589.
somehow he got his YP and DNS screwed up and nslookup $h was dealing with h = ""
which was doing nslookup "", which is bad and hangs boots.  be more careful
by doing echo $h | nslookup instead.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.262 2005/03/22 22:24:38 henning Exp $
d187 4
@


1.262
log
@add ospfd, ok theo
From: Jason Crawford <jasonrcrawford@@gmail.com>, whitespace fixes me
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.261 2005/01/19 20:52:29 millert Exp $
d292 1
a292 1
			_host1=`nslookup $_host1 | grep '^Name: ' | \
d294 1
a294 1
			_host2=`nslookup $_host2 | grep '^Name: ' | \
@


1.261
log
@Only try to run pflogd if pflog0 exists; from mpech@@
OK deraadt@@ and fgsch@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.260 2004/11/22 09:26:23 jsg Exp $
d497 4
@


1.260
log
@Add support for setting mixerctl values in a sysctl.conf like manner
via mixerctl.conf.
ok deraadt@@, earlier version ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.259 2004/11/03 18:04:46 henning Exp $
d239 4
a242 2
	ifconfig pflog0 up
	pflogd ${pflogd_flags}
@


1.259
log
@introduce spamlogd_flags to make it easier to e. g. bind spamlogd
to an interface; no change in default config
from Toni Mueller <support@@oeko.net>, ja ja ja ja bob
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.258 2004/10/22 00:59:09 itojun Exp $
d169 11
@


1.258
log
@default pf rule too restrictive for IPv6 (need to allow NS/NA).  deraadt ok
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.257 2004/10/19 06:45:36 grange Exp $
d575 1
a575 1
		/usr/libexec/spamlogd
@


1.257
log
@Use inet6 pf rules only for inet6-capable setups, first spotted
by form@@pdp-11.org.ru.

ok todd@@ henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.256 2004/09/27 16:08:26 henning Exp $
d146 2
@


1.256
log
@kill double whitespace, PR3934, for rea this time and without unrelated
changes
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.255 2004/09/27 16:06:20 henning Exp $
d145 4
a148 2
	RULES="$RULES\npass out inet6 proto icmp6 all icmp6-type routersol"
	RULES="$RULES\npass in inet6 proto icmp6 all icmp6-type routeradv"
@


1.255
log
@ooopppssss, backout last, lots of unrelated changes creeped in, noticed
by jmc
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.253 2004/09/18 20:17:37 henning Exp $
d373 1
a373 1
# create Unix sockets directories  for X if needed and make sure they have
d541 1
a541 1
if [ "X${httpd_flags}" != X"NO"  ]; then
@


1.254
log
@double whitespace, one from PR3934
@
text
@d131 1
a131 1
# set flags on ttys. (do early, in case they use tty for SLIP in netstart)
a222 14
# run rdate before timed and ntpd
if [ X"${rdate_flags}" != X"NO" ]; then
	echo -n 'running rdate'; rdate -s ${rdate_flags}; echo '.'
fi

if [ "X${ntpd_flags}" != X"NO" ]; then
	# since this is system startup, use -s
	echo -n 'starting ntpd'; ntpd -s $ntpd_flags; echo '.'
fi

if [ "X${timed_flags}" != X"NO" ]; then
	echo -n 'starting timed'; timed $timed_flags; echo '.'
fi

d306 15
d373 1
a373 1
# create Unix sockets directories for X if needed and make sure they have
d534 2
a535 2
# sendmail isn't run. We call sendmail with a full path so that
# SIGHUP works. Note that /usr/sbin/sendmail may actually call a
d541 1
a541 1
if [ "X${httpd_flags}" != X"NO" ]; then
@


1.253
log
@unconditionally add -s to ntpd_flags in rc and suggest "" for normal
use in the comment in rc.conf again, idea & ok theo
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.252 2004/09/17 21:50:30 mcbride Exp $
d131 1
a131 1
# set flags on ttys.  (do early, in case they use tty for SLIP in netstart)
d223 14
a319 15
# run rdate before timed/ntpd
if [ X"${rdate_flags}" != X"NO" ]; then
	echo -n ' rdate';	rdate -s ${rdate_flags}
fi

# $timed_flags is imported from /etc/rc.conf;
# if $timed_flags == NO, timed isn't run.
if [ "X${timed_flags}" != X"NO" ]; then
	echo -n ' timed'; timed $timed_flags
fi

if [ "X${ntpd_flags}" != X"NO" ]; then
	# since this is system startup, use -s
	echo -n ' ntpd'; ntpd -s $ntpd_flags
fi
d372 1
a372 1
# create Unix sockets directories  for X if needed and make sure they have
d533 2
a534 2
# sendmail isn't run.  We call sendmail with a full path so that
# SIGHUP works.  Note that /usr/sbin/sendmail may actually call a
d540 1
a540 1
if [ "X${httpd_flags}" != X"NO"  ]; then
@


1.252
log
@Set up alternate keyboard encoding earlier in rc.

ok miod@@ henning@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.251 2004/08/21 08:17:28 hshoexer Exp $
d318 2
a319 1
	echo -n ' ntpd'; ntpd $ntpd_flags
@


1.251
log
@no need anymore to require isamkpd.policy for isakmpd startup
ok ho@@ henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.250 2004/08/07 00:50:25 deraadt Exp $
d135 4
a616 4
fi

if [ -f /sbin/kbd -a -f /etc/kbdtype ]; then
	kbd `cat /etc/kbdtype`
@


1.250
log
@permit icmp6-type routersol out, and icmp6-type routeradv in, at boot time
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.249 2004/07/06 04:05:27 henning Exp $
d241 2
a242 3
# If $isakmpd_flags == NO or /etc/isakmpd/isakmpd.policy doesn't exist, then
# isakmpd isn't run.
if [ "X${isakmpd_flags}" != X"NO" -a -e /etc/isakmpd/isakmpd.policy ]; then
@


1.249
log
@eh, actually add the startup code for ntpd
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.248 2004/06/04 04:26:41 grange Exp $
d141 2
@


1.248
log
@hotplugd startup.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.247 2004/05/16 15:45:46 henning Exp $
d301 1
a301 1
# run rdate before timed
d310 4
@


1.247
log
@dhclient doesn't write a pid file any more; do remove the code that
deals with it at startup; noticed by wilfried, millert ok
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.246 2004/05/16 04:31:01 mcbride Exp $
d641 4
@


1.246
log
@Bring down carp interfaces gracefully even if powerdown=YES in rc.shutdown.

ok krw@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.245 2004/04/28 01:01:27 deraadt Exp $
d198 1
a198 1
(cd /var/run && { test -r dhclient.pid && dhclient_pid=`cat dhclient.pid`; rm -rf -- *; install -c -m 664 -g utmp /dev/null utmp; test -n "$dhclient_pid" && echo "$dhclient_pid" > dhclient.pid; })
a199 1

@


1.245
log
@spacing
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.244 2004/04/27 22:51:28 markus Exp $
a44 3
		if [ "X${powerdown}" = X"YES" ]; then
			exit 2
		fi
d57 5
@


1.244
log
@generate a isakmpd (host) key; ok henning, deraadt, cedric
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.243 2004/04/26 02:00:57 deraadt Exp $
d326 1
a326 1
	/usr/libexec/afsd ${afsd_flags} 
@


1.243
log
@double check that the carp* interfaces exist before knocking them down,
mcbride and i think this diff looks good but do not feel like doing the
250 meter walk to go test it
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.242 2004/03/30 16:59:25 otto Exp $
d438 13
@


1.242
log
@Allow spamd_flags banner to contain spaces. Resolves PR 3720.
ok beck@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.241 2004/03/22 15:02:35 cedric Exp $
d55 4
a58 1
			ifconfig $if down
@


1.241
log
@Fix CARP shutdown. ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.240 2004/03/22 04:34:42 mcbride Exp $
d540 1
a540 1
	echo -n ' spamd';		/usr/libexec/spamd ${spamd_flags}
@


1.240
log
@Pass pfsync and carp traffic in the boot-time pf configuration.
Bring carp interfaces down at shutdown, to make a graceful exit if we're master.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.239 2004/03/05 23:54:47 henning Exp $
d53 1
a53 1
			test "$if" = "*" && continue
@


1.239
log
@add the goo for bgpd, theo ok
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.238 2004/03/03 01:06:44 deraadt Exp $
d48 9
d136 1
@


1.238
log
@move spamd to a better place; ok henning beck
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.237 2004/03/02 16:11:10 deraadt Exp $
d443 4
@


1.237
log
@A better place for sshd; pointed out by millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.235 2004/02/26 07:33:08 beck Exp $
a499 12
if [ "X${spamd_flags}" != X"NO" ]; then
	if [ "X${spamd_grey}" != X"NO" ]; then
		spamd_flags="${spamd_flags} -g"
	fi
	echo -n ' spamd';		/usr/libexec/spamd ${spamd_flags}
	/usr/libexec/spamd-setup
	if [ "X${spamd_grey}" != X"NO" ]; then
		echo -n ' spamlogd'
		/usr/libexec/spamlogd
	fi
fi

d520 12
@


1.236
log
@start sshd earlier, ok from various
@
text
@a432 4
if [ X"${sshd_flags}" != X"NO" ]; then
	echo -n ' sshd';		/usr/sbin/sshd ${sshd_flags};
fi

d528 4
@


1.235
log
@add support for spamd greylisting with spamd -g and spamlogd to rc/rc.conf
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.234 2004/02/25 08:42:38 jmc Exp $
d433 4
a559 4
fi

if [ X"${sshd_flags}" != X"NO" ]; then
	echo -n ' sshd';		/usr/sbin/sshd ${sshd_flags};
@


1.234
log
@remove -w option to sysctl;

diffs from Paul de Weerd;
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.233 2004/02/11 23:17:32 beck Exp $
d501 3
d506 4
@


1.233
log
@simplify afs startup so all you have to do is say "YES" to get basic
AFS functionality (enough to to pkg_add's)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.232 2004/01/23 22:11:40 deraadt Exp $
d143 1
a143 1
		sysctl -w $1
d371 1
a371 1
	sysctl -w kern.securelevel=${securelevel}
@


1.232
log
@permit rpc.yppasswdd run to be blocked, and block by default; ok henning tedu
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.231 2003/12/29 23:16:45 millert Exp $
d309 1
a309 1
if [ "X${afs}" = X"YES" -a -c ${afs_device} -a -d ${afs_mount_point} ]; then
d311 3
a313 2
	mount -t xfs ${afs_device} ${afs_mount_point}
	/usr/libexec/afsd ${afsd_flags} -d ${afs_device}
@


1.231
log
@Move vi.recover invocation until after after ldconf is run.  Fixes
a problem when postfix w/ sasl & tls is used instead of sendmail
and perl is dynamically linked anyway.  Closes PR 3605.
OK deraadt@@ and drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.230 2003/12/05 00:52:16 deraadt Exp $
d248 1
a248 1
	if [ -d /var/yp/`domainname` ]; then
@


1.230
log
@spacing
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.229 2003/11/18 16:37:34 henning Exp $
a385 4
if [ -x /usr/libexec/vi.recover ]; then
	echo 'preserving editor files';	/usr/libexec/vi.recover
fi

d399 4
@


1.229
log
@sensorsd startup via rc/rc.conf
ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.228 2003/07/29 17:52:17 henning Exp $
d289 1
a289 1
        echo -n ' rdate';     rdate -s ${rdate_flags}
d597 1
a597 1
        echo -n ' apmd';        /usr/sbin/apmd ${apmd_flags}
@


1.228
log
@"pass on lo0" in the intermediate pf ruleset loaded during boot.
solves PR3376 by matthew.gream@@pobox.com, fix slightly different

ok mcbride@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.227 2003/05/14 18:41:06 ian Exp $
d598 4
@


1.227
log
@No more gated. ok krw@@, deraadt@@, commments from David Krause, jakob@@.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.226 2003/04/08 01:53:43 millert Exp $
d123 1
@


1.226
log
@fix another non-POSIX chown; Chuck Yerkes
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.225 2003/03/23 18:45:34 marc Exp $
d431 1
a431 2
# $gated and $routed_flags are imported from /etc/rc.conf.
# If $gated == YES, gated is used; otherwise routed.
d433 1
a433 3
if [ X${gated} = X"YES" -a -e /etc/gated.conf ]; then
	echo -n ' gated';		/usr/local/sbin/gated $gated_flags
elif [ "X${routed_flags}" != X"NO" ]; then
@


1.225
log
@
Fix operational typo.   Bug reported by William Yodlowsky
bsd at openbsd dot rutgers dot edu.   OK millert@@, others.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.224 2003/03/21 20:33:24 todd Exp $
d331 1
a331 1
chown root.wheel /dev/tty[pqrstuvwxyzPQRST]*
@


1.224
log
@grammar; ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.223 2003/03/20 16:04:37 sturm Exp $
d561 1
a561 1
	saveIFS=$IFS
d565 1
a565 1
	IFS=$save_IFS
@


1.223
log
@enclose X${lpd_flags} in quotation marks, as it could carry more than
one argument.

OK miod@@, millert@@, henning@@, markus@@, fries@@, tdeval@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.222 2003/03/10 01:05:28 deraadt Exp $
d207 1
a207 1
# $named_flags are imported from /etc/rc.conf;
@


1.222
log
@commented hourly spamd-setup run
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.221 2003/03/04 23:37:15 jakob Exp $
d488 1
a488 1
if [ X${lpd_flags} != X"NO" ]; then
@


1.221
log
@only generate shared secret for rndc if named will be started.
tested by grange@@, ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.220 2003/03/04 22:45:53 jakob Exp $
d503 1
a503 1
	/usr/libexec/spamd-setup ${spamd_setup}
@


1.220
log
@remove support for named_chroot and named_user; always run named as user
named and chrooted to /var/named. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.219 2003/03/04 18:42:52 danh Exp $
a206 10
if ! cmp -s /etc/rndc.key /var/named/etc/rndc.key ; then
	echo -n "rndc-confgen: generating new shared secret... "
	if /usr/sbin/rndc-confgen -a -t /var/named >/dev/null 2>&1; then
		chmod 0640 /var/named/etc/rndc.key >/dev/null 2>&1
		echo done.
	else
		echo failed.
	fi
fi

d210 10
@


1.219
log
@make sure both /etc/rndc.key and /var/named/etc/rndc.key exist, and are
the same.

ok jakob@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.218 2003/02/14 16:00:58 cedric Exp $
d191 3
a193 3
if [ "X${named_flags}" != X"NO" -a "X${named_chroot}" != "X" ]; then
	rm -f ${named_chroot}/dev/log
	syslogd_flags="${syslogd_flags} -a ${named_chroot}/dev/log"
d217 1
a217 1
# $named_flags, $named_user, and $named_chroot are imported from /etc/rc.conf;
a219 6
	if [ "X${named_user}" != "X" -a "X${named_user}" != X"root" ]; then
		named_flags="-u ${named_user} ${named_flags}"
	fi
	if [ "X${named_chroot}" != "X" ]; then
		named_flags="-t ${named_chroot} ${named_flags}"
	fi
@


1.218
log
@Fix NFS diskless boot when PF is used.
From dhartmei@@ e-mail, ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.217 2003/01/20 22:42:01 jakob Exp $
d207 1
a207 1
if [ -x /usr/sbin/rndc-confgen -a ! -f /etc/rndc.key ]; then
d209 2
a210 2
	if /usr/sbin/rndc-confgen -a; then
		install -c -o root -g named -m 640 /etc/rndc.key /var/named/etc
@


1.217
log
@generated shared secret for rndc/bind9; ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.216 2003/01/20 20:42:28 millert Exp $
d129 1
@


1.216
log
@Add a /var/empty/dev/log socket for things that chroot to /var/empty.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.215 2003/01/15 09:25:46 camield Exp $
d204 10
@


1.215
log
@Allow outbound ping in initial pf rules.

dhclient needs this to validate old (but valid) leases in
/var/db/dhclient.leases in case it needs to fall back to such a
lease.  (the dhcp server can be down or not responding)

Reported by Chris Jepeway.

"makes sense"  henning dhartmei
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.214 2003/01/06 20:40:39 marc Exp $
d193 5
@


1.214
log
@
Handle wsconsctl.conf entries that contain spaces, e.g.
keyboard.map+="keysym Caps_Lock = Control_L"
OK fgs@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.213 2003/01/03 18:39:58 miod Exp $
d125 1
@


1.213
log
@Remove screenblank section; reported by Andrey Matveev.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.212 2002/12/27 01:30:19 deraadt Exp $
d547 1
a547 1
if [ -f /etc/wsconsctl.conf ]; then
d550 3
d554 1
d556 1
a556 1
		wsconsctl -w $1
@


1.212
log
@spamd startup stuff
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.211 2002/12/24 15:53:17 mcbride Exp $
a584 4
fi

if [ -x /usr/sbin/screenblank ]; then
	echo -n ' screenblank';	/usr/sbin/screenblank
@


1.211
log
@Simpler default block.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.210 2002/12/13 10:20:25 henning Exp $
d488 5
@


1.210
log
@kill whitespace at EOL; David Krause
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.209 2002/11/23 18:29:21 deraadt Exp $
d122 1
a122 1
	RULES="block in all\nblock out all"
@


1.209
log
@no more altqd use
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.208 2002/11/14 09:02:28 camield Exp $
d338 1
a338 1
if [ -d /usr/X11R6/lib ]; then 
d340 1
a340 1
		if [ -d $d ]; then 
@


1.208
log
@Allow host to do dns lookups in the initial ruleset.  This way, pfctl
can properly boot rulesets with dns addresses in it.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.207 2002/10/14 07:34:25 mpech Exp $
a432 6
fi

# $altqd_flags is imported from /etc/rc.conf;
# If $altqd_flags == NO, then altqd isn't run.
if [ "X${altqd_flags}" != X"NO" ]; then
	echo -n ' altqd';		altqd $altqd_flags
@


1.207
log
@use stripcom(), not awk. Spotted by form@@.

millert@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.206 2002/10/06 19:09:20 krw Exp $
d124 1
@


1.206
log
@Remove more remnants of smtpfwdd. ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.205 2002/09/12 18:21:48 millert Exp $
d445 1
a445 1
		dhcpd_ifs=`awk -F\# '{ print $1; }' < /etc/dhcpd.interfaces`
@


1.205
log
@We no longer need to install copies of /dev/null and /etc/localtime
in named's chroot jail.  These things are now dealt with before
named chroots.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.204 2002/09/06 21:30:22 deraadt Exp $
a507 7

# $smtpfwdd_flags is imported from /etc/rc.conf;
# If $smtpfwdd_flags == NO, smtpfwdd isn't run.
if [ "X${smtpfwdd_flags}" != X"NO" ]; then
	echo -n ' smtpfwdd';	/usr/libexec/smtpfwdd ${smtpfwdd_flags}
fi

@


1.204
log
@more photuris bits by bye bye
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.203 2002/08/20 08:42:59 hugh Exp $
a205 7
		if [ ! -c "${named_chroot}/dev/null" ]; then
			( cd /dev ; pax -rw -pe null ${named_chroot}/dev )
		fi
		if [ -f /etc/localtime -a -d "${named_chroot}/etc" ]; then
			cmp -s /etc/localtime "${named_chroot}/etc/localtime" \
			|| cp -p /etc/localtime "${named_chroot}/etc/localtime"
		fi
@


1.203
log
@Prevent possible races by moving .X11 fixups to before the system
goes multiuser. In consultation with dynamo; cleared by millert.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.202 2002/07/27 22:11:58 matthieu Exp $
a215 7
fi

# $photurisd_flags is imported from /etc/rc.conf;
# If $photurisd_flags == NO or /etc/photuris/photuris.conf doesn't exist, then
# photurisd isn't run.
if [ "X${photurisd_flags}" != X"NO" -a -e /etc/photuris/photuris.conf ]; then
	echo 'starting photurisd';	photurisd ${photurisd_flags}
@


1.202
log
@Create directories for X11 unix socket at boot time. This removes the
need for root privileges for processes that create the sockets later.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.201 2002/07/27 04:10:01 deraadt Exp $
d349 19
a621 18
# create Unix sockets directories  for X if needed and make sure they have
# correct permissions
if [ -d /usr/X11R6/lib ]; then 
	for d in /tmp/.X11-unix /tmp/.ICE-unix ; do
		if [ -d $d ]; then 
			if [ `ls -ld $d | cut -d' ' -f4` != root ]; then
				chown root $d
			fi
			if [ `ls -ld $d | cut -d' ' -f1` != drwxrwxrwt ]; then
				chmod 1777 $d
			fi
		elif [ -e $d ]; then
			echo "Error: $d exists and isn't a directory."
		else
			mkdir -m 1777 $d
		fi
	done
fi
@


1.201
log
@echo before running sshd; mcbride@@countersiege.com
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.200 2002/07/11 08:27:24 deraadt Exp $
d603 18
@


1.200
log
@www space no longer needs a dev/crypto
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.199 2002/07/09 16:55:10 deraadt Exp $
d544 1
a544 1
	/usr/sbin/sshd ${sshd_flags};	echo -n ' sshd'
@


1.199
log
@toss a /dev/crypto copy into /var/www/dev; millert ok
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.198 2002/06/11 04:51:39 dhartmei Exp $
a491 3
	if [ ! -c "/var/www/dev/crypto" ]; then
		( cd / ; pax -rw -pe dev/crypto /var/www )
	fi
@


1.198
log
@pfctl -f instead of -N/-R, ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.197 2002/06/09 21:15:54 hin Exp $
d492 3
@


1.197
log
@Remove startup stuff for Kerberos 4 servers.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.196 2002/06/07 08:54:48 beck Exp $
d131 1
a131 1
	echo $RULES | pfctl -R - -e
a149 3
	if [ -f ${nat_rules} ]; then
		pfctl -N ${nat_rules}
	fi
d151 1
a151 1
		pfctl -R ${pf_rules}
@


1.196
log
@clear /var/authpf on bootup - ensure we don't kill things we shouldn't
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.195 2002/05/23 20:47:57 dhartmei Exp $
a564 15
fi

# KerberosIV runs ONLY on the KDC servers
# Kadmin runs only on the master server
if [ X${krb4_master_kdc} = X"YES" ]; then
	echo 'KerberosIV KDC'
	/usr/libexec/kerberos >> /var/log/kerberos.log &
	/usr/libexec/kadmind -n >> /var/log/kadmind.log &
fi

# Kpropd runs only on Kerberos slave servers
if [ X${krb4_slave_kdc} = X"YES" ]; then
	echo 'kerberos slave server'
	/usr/libexec/kerberos -s >> /var/log/kerberos.log &
	/usr/libexec/kpropd -i &
@


1.195
log
@Sigh, add the rule in the right place (not just when NFS is used).
From Dries Schellekens
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.194 2002/05/23 19:38:18 dhartmei Exp $
d183 2
@


1.194
log
@Allow incoming ssh connections in the initial temporary rule set that's
active before /etc/pf.conf is loaded, just in case loading fails (and
leaves the inital set active). ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.193 2002/02/25 03:30:46 deraadt Exp $
d123 1
a128 1
		RULES="$RULES\npass in proto tcp from any to any port 22 keep state"
@


1.193
log
@be silent on kernels which lack nfs; d.doroshenko@@omnitel.net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.192 2002/02/21 04:18:42 millert Exp $
d128 1
@


1.192
log
@If there is a /var/run/dhclient.pid file, stash its contents and
restore it after cleaning out /var/run.  Since we don't have /usr
yet our options are limited here.
Without this change /var/run/dhclient.pid will be removed after
dhclient is started from /etc/netstart.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.191 2002/02/19 02:21:16 deraadt Exp $
d123 1
a123 1
	case `sysctl vfs.mounts.nfs` in
@


1.191
log
@quiet raid check
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.190 2002/02/17 20:26:03 tdeval Exp $
d181 1
a181 1
(cd /var/run && { rm -rf -- *; install -c -m 664 -g utmp /dev/null utmp; })
@


1.190
log
@raid(4) parity check simplification
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.189 2002/02/09 17:37:34 deraadt Exp $
d67 1
a67 1
raidctl -v -P all
@


1.189
log
@move ssh config files to /etc/ssh
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.188 2002/01/08 12:04:43 tholo Exp $
a62 1
		raidctl -v -P raid$dev
d65 3
@


1.188
log
@Permit flags to be set for savecore, e.g. to compress core dumps
ok millert@@ fgsch@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.187 2001/12/30 16:34:50 markus Exp $
d385 1
a385 1
if [ ! -f /etc/ssh_host_dsa_key ]; then
d387 1
a387 1
	if /usr/bin/ssh-keygen -q -t dsa -f /etc/ssh_host_dsa_key -N ''; then
d393 1
a393 1
if [ ! -f /etc/ssh_host_rsa_key ]; then
d395 1
a395 1
	if /usr/bin/ssh-keygen -q -t rsa -f /etc/ssh_host_rsa_key -N ''; then
d401 1
a401 1
if [ ! -f /etc/ssh_host_key ]; then
d403 1
a403 1
	if /usr/bin/ssh-keygen -q -t rsa1 -f /etc/ssh_host_key -N ''; then
@


1.187
log
@print "RSA1" for protocol v1
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.186 2001/10/29 18:17:03 deraadt Exp $
d305 1
a305 1
	savecore /var/crash
@


1.186
log
@handle pflogd_flags better; openbsd@@davidkrause.com
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.185 2001/10/09 18:44:17 angelos Exp $
d402 1
a402 1
	echo -n "ssh-keygen: generating new RSA host key... "
@


1.185
log
@isakmpd can work without an isakmpd.conf, but not without an
isakmpd.policy -- change startup conditions accordingly.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.184 2001/09/21 05:51:13 deraadt Exp $
d119 1
a119 1
if [ "X$pf" != X"NO" ]; then
d146 1
a146 1
if [ "X$pf" != X"NO" ]; then
d192 1
a192 1
if [ "X$pf" != X"NO" ]; then
@


1.184
log
@start pflogd in a different place; do not block NFS in diskless situations; danh & cedric@@wireless-networks.com
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.183 2001/09/19 16:27:47 todd Exp $
d224 1
a224 1
# If $isakmpd_flags == NO or /etc/isakmpd/isakmpd.conf doesn't exist, then
d226 1
a226 1
if [ "X${isakmpd_flags}" != X"NO" -a -e /etc/isakmpd/isakmpd.conf ]; then
@


1.183
log
@re-order shlib_dirs, now X11R6/lib, local/lib, then custom libdirs
concept originally from Joshua Stein <jcs@@rt.fm>, thanks!
markus@@, espie@@ ok; based on useful discussion from fgsch@@, espie@@, heko@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.182 2001/08/22 16:13:14 deraadt Exp $
d120 9
a128 1
	echo "block in all\nblock out all" | pfctl -R - -e
a157 5
if [ "X$pf" != X"NO" ]; then
	ifconfig pflog0 up
	pflogd ${pflogd_flags}
fi

d191 5
@


1.182
log
@pflogd_flags; mbing@@nfr.net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.181 2001/08/22 07:11:17 deraadt Exp $
d369 1
a369 1
		shlib_dirs="$shlib_dirs /usr/local/lib"
d372 1
a372 1
		shlib_dirs="$shlib_dirs /usr/X11R6/lib"
@


1.181
log
@oops, forgot to up pflog0; mbing@@nfr.net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.180 2001/08/21 22:29:52 deraadt Exp $
d152 1
a152 1
	pflogd
@


1.180
log
@start pflogd at the right place, I think
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.179 2001/08/17 22:00:11 deraadt Exp $
d151 1
@


1.179
log
@altqd startup stuff
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.178 2001/07/04 06:34:19 mickey Exp $
d149 4
@


1.178
log
@wsconsctl.conf support, wsconsctl accepts saner var names now; raadtified
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.177 2001/07/03 03:28:19 deraadt Exp $
d412 6
@


1.177
log
@pull in rc.conf early so that pf(1) startup is right; tested by jasoni, comments from millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.176 2001/07/01 08:38:59 kjell Exp $
d527 11
@


1.176
log
@Initialization infrastruture for pf. Based on initial patches
by ian@@, and much input and mangling from theo.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.175 2001/06/27 03:34:08 hin Exp $
d111 3
@


1.175
log
@KerberosV support.

Kerberos related cleanup.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.174 2001/06/22 14:46:42 deraadt Exp $
d116 4
d134 9
@


1.174
log
@bail YP if no domainname; dima@@unixfreak.org
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.173 2001/06/12 06:36:03 fgsch Exp $
d516 4
a519 4
# Kerberos runs ONLY on the Kerberos servers
# Kadmin runs only on the main server
if [ X${kerberos_server} = X"YES" ]; then
	echo 'kerberos server'
d525 1
a525 1
if [ X${kerberos_slave} = X"YES" ]; then
d529 15
@


1.173
log
@Use lpd_flags instead of lpd, thus allowing to pass parameters to lpd;
patch from Yozo TODA <yozo@@imit.chiba-u.ac.jp>, deraadt@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.172 2001/06/02 03:06:29 miod Exp $
d209 1
a209 1
if [ -d /var/yp/binding ]; then
@


1.172
log
@With recent changes to swapctl(8), replace the invocation of swapon
with two swapctl invocations.
Swap on block devices is enabled before fscking filesystems, swap on
files is enabled after all filesystems (including remote) are mounted.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.171 2001/05/30 02:11:09 deraadt Exp $
d440 2
a441 2
if [ X${lpd} = X"YES" ]; then
	echo -n ' printer';		lpd
@


1.171
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.170 2001/05/15 21:28:43 deraadt Exp $
d67 1
a67 1
swapon -a
d270 2
@


1.170
log
@swapon -a before fsck is run
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.169 2001/05/03 21:56:57 deraadt Exp $
a184 4
fi

if [ X"${ipfilter}" = X"YES" -a X"${ipmon_flags}" != X"NO" ]; then
	echo 'starting ipmon';		ipmon ${ipmon_flags}
@


1.169
log
@oops
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.168 2001/05/02 02:41:26 deraadt Exp $
d67 2
a105 2

swapon -a
@


1.168
log
@wsmoused support; missed 2.9 -- bad aaron; heko@@saitti.net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.167 2001/04/19 04:00:15 deraadt Exp $
d554 1
a554 1
	echo 'starting wsmoused...';	/usr/sbin/wsmoused ${moused_flags}
@


1.167
log
@permit passing sshd flags; djm
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.166 2001/04/01 19:39:54 deraadt Exp $
d553 2
a554 2
if [ "X${moused_flags}" != X"NO" -a -x /usr/sbin/moused ]; then
	echo 'starting moused...';	/usr/sbin/moused ${moused_flags}
@


1.166
log
@wscons rc files are not nicely MI clean, so when some nice diffs are shown around, they can go back in
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.165 2001/03/02 06:22:39 deraadt Exp $
d508 2
a509 2
if [ X"${sshd}" == X"YES" ]; then
	/usr/sbin/sshd;			echo -n ' sshd'
@


1.165
log
@amd now crates autodir by itself
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.164 2001/02/23 06:50:10 deraadt Exp $
a549 5

if [ -f /etc/rc.wscons -a -f /etc/wscons.conf ]; then
	echo configuring wscons
	/bin/sh /etc/rc.wscons
fi
@


1.164
log
@I tried to figure out how to have tmp_mnt get created automatically
inside amd source code.  I could not figure out.  So here it goes,
until some rocket scientist points out how to do it in the real source.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.163 2001/02/22 08:03:22 deraadt Exp $
d255 1
a255 1
if [ X${amd} = X"YES" -a -d ${amd_dir} -a -e ${amd_master} ]; then
a256 3
	if [ ! -d ${amd_dir} ]; then
		mkdir -p -m 755 ${amd_dir}
	fi
@


1.163
log
@generate all 3 keys, use -t xxx
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.162 2001/02/10 18:03:16 mickey Exp $
d257 3
@


1.162
log
@install wscons.conf and rc.wscons on alpha/hppa/i386/powerpc and call it from rc
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.161 2001/01/16 04:08:35 angelos Exp $
d360 9
a368 1
	if /usr/bin/ssh-keygen -q -d -f /etc/ssh_host_dsa_key -N ''; then
d376 1
a376 1
	if /usr/bin/ssh-keygen -q -f /etc/ssh_host_key -N ''; then
@


1.161
log
@Check whether /etc/inetd.conf exists before starting inetd (chuck@@snew.com)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.160 2000/12/30 07:59:27 angelos Exp $
d542 5
@


1.160
log
@Back-out use of apachectl to start httpd:
 1) It's one more dependency in /etc/rc
 2) It's one more script that starts from /etc/rc (slowdown)
 3) We're only going to be starting httpd in /etc/rc anyway (no other
    weird operations), so there's no reason to force a change in rc.conf
 4) apachectl(8) doesn't mention "startssl" directive
 5) Admins can use apachectl to manage httpd regardless of how the
   latter was started

Thanks to fgs@@ for yelling about this :-)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.159 2000/12/30 06:51:09 angelos Exp $
d468 1
a468 1
if [ X${inetd} = X"YES" ]; then
@


1.159
log
@Use apachectl to start httpd, rather than directly call httpd in
/etc/rc (PR 1476)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.158 2000/12/30 06:35:17 angelos Exp $
d450 1
a450 1
	echo -n ' httpd';		/usr/sbin/apachectl ${httpd_flags}
@


1.158
log
@Initialize RAID parity as needed (PR 1529)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.157 2000/10/27 06:36:35 deraadt Exp $
d450 1
a450 1
	echo -n ' httpd';		/usr/sbin/httpd ${httpd_flags}
@


1.157
log
@after seeding from the host.random file, immediately reset the seed file, so
that if a shutdown-less reboot occurs, the next re-seed is not a repeat
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.156 2000/10/18 21:28:54 mickey Exp $
d63 1
@


1.156
log
@grammar in comment
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.155 2000/10/09 18:07:59 aaron Exp $
d144 5
@


1.155
log
@moused will now co-exist with X
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.154 2000/10/07 00:03:52 millert Exp $
d505 1
a505 1
# Kadmin is runs only on the main server
@


1.154
log
@If /etc/mailer.conf specifies a mailer other than sendmail, there
may be no /etc/mail/sendmail.cf so don't include that in the check
for whether or not to run /usr/sbin/sendmail.  Instead, check for
the existence of /etc/mailer.conf.  Pointed out by Theo.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.153 2000/09/06 17:19:27 millert Exp $
d539 4
a545 4
else
	if [ "X${moused_flags}" != X"NO" -a -x /usr/sbin/moused ]; then
		echo 'starting moused...';	/usr/sbin/moused ${moused_flags}
	fi
@


1.153
log
@When starting up sendmail in the background, redirect stderr to
/dev/null too.  Otherwise, if there is a name resolution problem
the rc files may finish before sendmail forks into a daemon and it
will complain about EBADF on stderr (since init revoked it).
From a discussion between Theo and myself.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.152 2000/09/01 06:56:48 aaron Exp $
d433 1
a433 1
# If $sendmail_flags == NO or /etc/mail/sendmail.cf doesn't exist, then
d435 3
a437 2
# SIGHUP works.
if [ "X${sendmail_flags}" != X"NO" -a -s /etc/mail/sendmail.cf ]; then
@


1.152
log
@Initialization script stuff for moused.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.151 2000/08/28 02:30:35 brad Exp $
d437 1
a437 1
	echo -n ' sendmail';		( /usr/sbin/sendmail ${sendmail_flags} >/dev/null & )
@


1.151
log
@explicit path to gated so that it will load as expected
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.150 2000/08/25 16:14:12 deraadt Exp $
d541 4
@


1.150
log
@ssh always installed, no more static lib case
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.149 2000/08/05 06:38:55 deraadt Exp $
d375 1
a375 1
	echo -n ' gated';		gated $gated_flags
@


1.149
log
@host.random whacking must be after /var is mounted, obviously
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.148 2000/07/13 16:26:13 millert Exp $
d352 1
a352 1
if [ ! -f /etc/ssh_host_dsa_key -a -x /usr/bin/ssh-keygen ]; then
d360 1
a360 2
if [ ! -f /etc/ssh_host_key -a -x /usr/bin/ssh-keygen ] && \
    ssh-keygen -R; then
d494 1
a494 5
	if [ -x /usr/sbin/sshd ] && /usr/sbin/sshd -Q ; then
		echo -n ' sshd'
	elif [ -x /usr/local/sbin/sshd ] && /usr/local/sbin/sshd ; then
		echo -n ' sshd'
	fi
@


1.148
log
@timed & rdate start before securelevel is set so no need to check
$securelevel; noted by ho@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.147 2000/07/13 13:15:36 itojun Exp $
a114 12
# if there's no /var/db/host.random, make one through /dev/urandom
if [ ! -f /var/db/host.random ]; then
	dd if=/dev/urandom of=/var/db/host.random bs=1024 count=64 \
		>/dev/null 2>&1
	chmod 600 /var/db/host.random >/dev/null 2>&1
else
	dd if=/var/db/host.random of=/dev/urandom bs=1024 count=64 \
	    > /dev/null 2>&1
	dd if=/var/db/host.random of=/dev/arandom bs=1024 count=64 \
	    > /dev/null 2>&1
fi

d132 12
@


1.147
log
@rtadvd.conf is not required, actually
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.146 2000/07/11 22:30:56 matt Exp $
d256 1
a256 1
if [ $securelevel -le 1 -a X"${rdate_flags}" != X"NO" ]; then
@


1.146
log
@- Move ntpd out of rc.securelevel
- Add ntpdate and rdate rc knobs

Approved-And-Assisted-By: millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.145 2000/07/06 13:24:49 itojun Exp $
d414 2
a415 3
		# If $rtadvd_flags == NO or /etc/rtadvd.conf doesn't exist,
		# then rtadvd isn't run.
		if [ "X${rtadvd_flags}" != X"NO" -a -f /etc/rtadvd.conf ]; then
@


1.145
log
@remove ip6defaultif, this is just for IPv6 specification pedants
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.144 2000/07/05 17:15:51 millert Exp $
d253 5
@


1.144
log
@Start sendmail in the background so it doesn't cause blockage
on reboot timing out on DNS problems.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.143 2000/07/02 21:24:00 espie Exp $
a399 4
		fi

		if [ "X${ip6defaultif}" != X"NO" ]; then
			/usr/sbin/ndp -I ${ip6defaultif}
@


1.143
log
@Clean-up after httpd
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.142 2000/06/18 22:58:42 todd Exp $
d438 1
a438 1
	echo -n ' sendmail';		/usr/sbin/sendmail ${sendmail_flags}
@


1.142
log
@ifaliases goes away.
- new installs wont have existing ifaliases
- updates dont touch /etc
- manual updates of /etc/ should know what they're doing anyway

fwiw, see hostname.if(5) alias functionality has moved here for better
overall network configurability
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.141 2000/06/14 15:50:55 deraadt Exp $
d442 2
@


1.141
log
@avoid a few extra processes; d.doroshenko@@omnitel.net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.140 2000/06/13 18:29:48 deraadt Exp $
a160 16

# /etc/ifaliases, if it exists, contains the names of additional IP
# addresses for each interface. It is formatted as a series of lines
# that contain
#	interface address netmask
if [ -f /etc/ifaliases ]; then
(
	# delete comments and blank lines
	set -- `stripcom /etc/ifaliases`
	while [ $# -ge 3 ] ; do
		ifconfig $1 inet alias $2 netmask $3
		route -n add -host $2 localhost
		shift 3
	done
)
fi
@


1.140
log
@normalize test vs [; form
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.139 2000/05/19 16:53:17 mickey Exp $
d255 1
a255 1
    `cat /etc/exports | sed -e '/^#/d' | wc -l` -ne 0 ]; then
d403 1
a403 1
		dhcpd_ifs=`cat /etc/dhcpd.interfaces | awk -F\# '{ print $1; }'`
@


1.139
log
@nfsiod/nfs_client, bye bye
add commented out entry into sysctl.conf for vfs.nfs.iothreads
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.138 2000/05/15 18:24:42 hin Exp $
d509 1
a509 1
	if test -x /usr/sbin/sshd && /usr/sbin/sshd -Q ; then
d511 1
a511 1
	elif [ -x /usr/local/sbin/sshd && /usr/local/sbin/sshd ]; then
@


1.138
log
@Fix SBINDIR path the right way
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.137 2000/05/12 06:10:26 deraadt Exp $
a262 6
fi

# $nfs_client is imported from /etc/rc.conf;
# if $nfs_client == YES, the machine is setup for being an nfs client
if [ X${nfs_client} = X"YES" ]; then
	echo -n ' nfsiod';		nfsiod ${nfsiod_flags}
@


1.137
log
@work around kerberos SBINDIR being misdefined; hin
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.136 2000/05/03 02:40:16 deraadt Exp $
d540 1
a540 1
	/usr/libexec/kpropd -i -p /usr/sbin/kdb_util &
@


1.136
log
@hmm... simplify this
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.135 2000/04/30 23:17:05 ericj Exp $
d540 1
a540 1
	/usr/libexec/kpropd -i &
@


1.135
log
@fix PR #1169; itojun@@ OK
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.134 2000/04/27 07:06:36 deraadt Exp $
d380 1
a380 1
	if /usr/bin/ssh-keygen -q -b 1024 -f /etc/ssh_host_key -N ''; then
@


1.134
log
@ssh_host_dsa_key not ssh_dsa_host_key
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.133 2000/04/26 22:34:54 deraadt Exp $
d424 1
a424 1
		if [ "X${ip6defaultif}" != X"" ]; then
@


1.133
log
@build DSA keys automatically at boot time
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.132 2000/04/06 18:26:04 millert Exp $
d369 1
a369 1
if [ ! -f /etc/ssh_dsa_host_key -a -x /usr/bin/ssh-keygen ]; then
d371 1
a371 1
	if /usr/bin/ssh-keygen -q -d -f /etc/ssh_dsa_host_key -N ''; then
@


1.132
log
@Enable sendmail 8.10.0.  Things like sendmail.* and aliases now live
in /etc/mail.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.131 2000/03/05 16:55:22 millert Exp $
d369 11
a379 3
if [ ! -f /etc/ssh_host_key -a -x /usr/bin/ssh-keygen ]; then
	umask 022
	echo -n "ssh-keygen: generating new host key... "
d516 3
a518 6
		echo -n ' sshd';
		#echo -n ' sshd(2022)';	/usr/sbin/sshd -p 2022
	elif [ -x /usr/local/sbin/sshd ]; then
		/usr/local/sbin/sshd
		echo -n ' sshd';
		#echo -n ' sshd(2022)';	/usr/local/sbin/sshd -p 2022
@


1.131
log
@Adda a stripcom function to strip comments (and leading whitespace,
depending on IFS).  This replaces the ed and sed code previously
used to do this.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.130 2000/02/28 17:28:35 itojun Exp $
d448 1
a448 1
# If $sendmail_flags == NO or /etc/sendmail.cf doesn't exist, then
d451 1
a451 1
if [ "X${sendmail_flags}" != X"NO" -a -s /etc/sendmail.cf ]; then
@


1.130
log
@add ip6defaultif, which configures default outgoing interface
when no neighboring router is found (rare case).  this is to conform
strictly to the ND spec.  it is safe to leave it empty.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.129 2000/01/30 02:45:51 millert Exp $
d8 19
d130 1
a130 8
	# we use ed here because /usr may not be mounted yet.
	set -- `
	ed -s /etc/sysctl.conf <<EOF
1,\\\$s/#.*$//
g/^..*/p
Q
EOF
`
d169 1
a169 1
	set -- `sed -e 's/#.*$//' -e '/^$/d' /etc/ifaliases`
d341 1
a341 1
T=`mktemp /tmp/_motd.XXXXXXXXXX` 
@


1.129
log
@Use ed, not sed, for pulling the interesting bits out of /etc/sysctl.conf.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.128 2000/01/30 02:17:00 mickey Exp $
d402 4
@


1.128
log
@let sed do all the work, do not invoke extra grep; millert@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.127 2000/01/02 14:25:07 itojun Exp $
d111 8
a118 1
	set -- `sed -e 's/#.*$//' -e '/^$/d' /etc/sysctl.conf`
d121 1
a121 1
		shift 1
@


1.127
log
@add following IPv6 configs: rtadvd_flags route6d_flags rtsold_flags
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.126 2000/01/01 22:45:35 deraadt Exp $
d111 1
a111 1
	set -- `sed -e 's/#.*$//' /etc/sysctl.conf | grep -v '^$'`
d150 1
a150 1
	set -- `sed -e 's/#.*$//' /etc/ifaliases | grep -v '^$'`
@


1.126
log
@process sysctl.conf way earlier
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.125 1999/11/23 02:20:14 deraadt Exp $
d385 26
@


1.125
log
@isakmpd is elsewhere; evanc@@concer.to
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.124 1999/11/11 22:28:43 fgsch Exp $
d108 11
a310 11

if [ -f /etc/sysctl.conf ]; then
(
	# delete comments and blank lines
	set -- `sed -e 's/#.*$//' /etc/sysctl.conf | grep -v '^$'`
	while [ $# -ge 1 ] ; do
		sysctl -w $1
		shift 1
	done
)
fi
@


1.124
log
@Allow identd to be used w/o inetd.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.123 1999/10/18 01:46:24 deraadt Exp $
d179 1
a179 1
# If $isakmpd_flags == NO or /etc/isakmpd.conf doesn't exist, then
d181 1
a181 1
if [ "X${isakmpd_flags}" != X"NO" -a -e /etc/isakmpd.conf ]; then
@


1.123
log
@ssh startup fix; millert
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.122 1999/10/15 19:51:29 deraadt Exp $
d412 4
@


1.122
log
@oops, got shared library part wrong
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.121 1999/10/11 20:09:53 millert Exp $
d454 3
a456 5
	if [ -x /usr/sbin/sshd ]; then
		if /usr/sbin/sshd -Q ; then
			echo -n ' sshd';
			#echo -n ' sshd(2022)';	/usr/sbin/sshd -p 2022
		fi
@


1.121
log
@Run /usr/libexec/vi.recover (now a perl script) to preserve vi backup files.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.120 1999/10/07 05:11:19 deraadt Exp $
d453 7
a459 5
if [ X"${sshd}" == X"YES" -a -x /usr/sbin/sshd ]; then
	if /usr/sbin/sshd -Q ; then
		echo -n ' sshd';
		#echo -n ' sshd(2022)';	/usr/sbin/sshd -p 2022
	elif [ -f /usr/local/sbin/sshd ]; then
d462 1
@


1.120
log
@check for executability of ssh-keygen
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.119 1999/10/07 04:41:07 deraadt Exp $
d331 2
a332 41
# vi file recovery
vidir=/var/tmp/vi.recover
if [ ! -e $vidir ]; then
	mkdir $vidir
	chmod 1777 $vidir
elif [ -L $vidir ]; then
	echo "Warning! $vidir is a symbolic link! (ignoring)"
elif [ ! -O $vidir ]; then
	echo "Warning! $vidir is not owned by root! (ignoring)"
elif [ ! -d $vidir -a -e $vidir ]; then
	echo "Warning!  $vidir is not a directory! (ignoring)"
else
	vibackup=$vidir/vi.*
	for i in $vibackup; do
		[ "$i" = "$vibackup" ] && break
		# Unmodified vi editor backup files either have the
		# execute bit set or are zero length.  Delete them.
		# Anything that is not a normal file gets deleted too.
		if [ -x $i -o ! -s $i -o ! -f $i ]; then
			rm $i
		fi
	done

	virecovery=$vidir/recover.*
	echo preserving editor files
	for i in $virecovery; do
		[ "$i" = "$virecovery" ] && break
		# Delete any recovery files that are zero length,
		# corrupted, # or that have no corresponding backup
		# file.  Else send mail to the user.
		if [ -f $i ]; then
			recfile=`awk '/^X-vi-recover-path:/{print $2}' < $i`
			if [ -n "$recfile" -a -s "$recfile" ]; then
				sendmail -t < $i
			else
				rm $i
			fi
		else
			rm $i
		fi
	done
@


1.119
log
@if sshd startup fails due to rsa not being there, start up
/usr/local/sbin/sshd instead, if it is there.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.118 1999/10/06 04:41:46 millert Exp $
d389 1
a389 1
if [ ! -f /etc/ssh_host_key ]; then
@


1.118
log
@Don't complain that /var/tmp/vi.recover is not owned by root
when it doesn't exist.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.117 1999/10/03 04:22:42 deraadt Exp $
d493 7
a499 2
	echo -n ' sshd';	/usr/sbin/sshd
	#echo -n ' sshd(2022)';	/usr/sbin/sshd -p 2022
@


1.117
log
@silence the chmod
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.116 1999/09/30 13:10:20 deraadt Exp $
d333 4
a336 1
if [ -L $vidir ]; then
a341 3
elif [ ! -d $vidir ]; then
	mkdir $vidir
	chmod 1777 $vidir
@


1.116
log
@last i checked, screenblank was not a network daemon
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.115 1999/09/29 06:46:04 deraadt Exp $
d100 1
a100 1
	chmod 600 /var/db/host.random
@


1.115
log
@do ldconfig before all ssh; because they need /usr/local/lib for searching
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.114 1999/09/28 07:20:01 deraadt Exp $
a491 4
if [ -x /usr/sbin/screenblank ]; then
	echo -n ' screenblank';	/usr/sbin/screenblank
fi

d526 4
@


1.114
log
@start ssh as part of base system; if no host key, build it upon boot
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.111 1999/09/04 22:20:20 millert Exp $
d378 11
d492 4
d498 1
a498 5
	#echo -n ' sshd2022';	/usr/sbin/sshd -p 2022
fi

if [ -x /usr/sbin/screenblank ]; then
	echo -n ' screenblank';	/usr/sbin/screenblank
a504 11
fi

if [ -f /sbin/ldconfig ]; then
	echo 'creating runtime link editor directory cache.'
	if [ -d /usr/local/lib ]; then
		shlib_dirs="$shlib_dirs /usr/local/lib"
	fi
	if [ -d /usr/X11R6/lib ]; then
		shlib_dirs="$shlib_dirs /usr/X11R6/lib"
	fi
	ldconfig $shlib_dirs
@


1.113
log
@oops
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.112 1999/09/27 23:40:25 deraadt Exp $
d378 10
d479 5
@


1.112
log
@stir arandom, too; provos
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.111 1999/09/04 22:20:20 millert Exp $
d104 1
a104 1
	dd if=/var/db/host.random of=/dev/arandom bs=1024 count=64 >
@


1.111
log
@Actually, vi file recivery was not happening on reboot due to a
mistaken assumption.  Noted by dynamo@@ime.net.  Fixed by moving the
check for meta character expansion to be inside the two for loops.
They are expanded by simple assignment.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.110 1999/09/04 21:30:49 millert Exp $
d103 3
a105 1
		>/dev/null 2>&1
@


1.110
log
@Ignore /var/tmp/vi.recover if it is a symlink or owned by non-root.
Probably just paranoia (since /var/tmp/vi.recover is created the
first time the machine is booted) but it can't hurt.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.109 1999/09/04 21:07:23 millert Exp $
d342 10
a351 10
	if [ "$vibackup" != "$vidir/vi.*" ]; then
		for i in $vibackup; do
			# Unmodified vi editor backup files either have the
			# execute bit set or are zero length.  Delete them.
			# Anything that is not a normal file gets deleted too.
			if [ -x $i -o ! -s $i -o ! -f $i ]; then
				rm $i
			fi
		done
	fi
d353 10
a362 13
	if [ "$virecovery" != "$vidir/recover.*" ]; then
		echo preserving editor files
		for i in $virecovery; do
			# Delete any recovery files that are zero length,
			# corrupted, # or that have no corresponding backup
			# file.  Else send mail to the user.
			if [ -f $i ]; then
				r=`awk '/^X-vi-recover-path:/{print $2}' < $i`
				if [ -n "$r" -a -s "$r" ]; then
					sendmail -t < $i
				else
					rm $i
				fi
d366 4
a369 2
		done
	fi
@


1.109
log
@Check to make sure vi recovery files are normal files before trying
to read from them (this is a user-writable directory so it is
possible to play games).  Fixes a possible DOS noted by dynamo@@ime.net.
If it's not a regular file, we delete it.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.108 1999/09/03 18:11:48 deraadt Exp $
d330 21
a350 6
if [ ! -d /var/tmp/vi.recover ]; then
	if [ -e /var/tmp/vi.recover ]; then
		echo "Warning!  /var/tmp/vi.recover is not a directory!"
	else
		mkdir /var/tmp/vi.recover
		chmod 1777 /var/tmp/vi.recover
d352 14
a365 23
fi
vibackup=/var/tmp/vi.recover/vi.*
if [ "$vibackup" != "/var/tmp/vi.recover/vi.*" ]; then
	for i in $vibackup; do
		# Unmodified vi editor backup files either have the
		# execute bit set or are zero length.  Delete them.
		# Anything that is not a normal file gets deleted too.
		if [ -x $i -o ! -s $i -o ! -f $i ]; then
			rm $i
		fi
	done
fi
virecovery=/var/tmp/vi.recover/recover.*
if [ "$virecovery" != "/var/tmp/vi.recover/recover.*" ]; then
	echo preserving editor files
	for i in $virecovery; do
		# Delete any recovery files that are zero length, corrupted,
		# or that have no corresponding backup file.  Else send mail
		# to the user.
		if [ -f $i ]; then
			recfile=`awk '/^X-vi-recover-path:/{print $2}' < $i`
			if [ -n "$recfile" -a -s "$recfile" ]; then
				sendmail -t < $i
d369 2
a370 4
		else
			rm $i
		fi
	done
@


1.108
log
@have shutdown code run /etc/rc with arg of "shutdown"; rc.shutdown becomes  completely admin-editable
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.107 1999/08/31 03:47:16 deraadt Exp $
d343 2
a344 1
		if [ -x $i -o ! -s $i ]; then
d356 7
a362 3
		recfile=`awk '/^X-vi-recover-path:/{print $2}' < $i`
		if [ -n "$recfile" -a -s "$recfile" ]; then
			sendmail -t < $i
@


1.107
log
@start amd in /etc/amd; so that if ${amd_master} contains map names, and we
don't want them fetched from YP, it will find them in the current directory.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.106 1999/08/19 13:58:07 kstailey Exp $
d18 16
@


1.106
log
@s/nvi/vi/
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.105 1999/08/05 08:12:10 millert Exp $
d225 2
a226 2
	amd -l syslog -x error,noinfo,nostats -p \
	    -a ${amd_dir} `cat ${amd_master}` > /var/run/amd.pid
@


1.105
log
@typo; -eq not -ne
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.104 1999/08/05 08:10:06 millert Exp $
d313 1
a313 1
# nvi file recovery
d325 1
a325 1
		# Unmodified nvi editor backup files either have the
@


1.104
log
@Use 10 X's for sheeer, raving, paranoia
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.103 1999/08/05 08:04:25 millert Exp $
d305 1
a305 1
if [ $? -ne 0 ]; then
@


1.103
log
@Use -execdir not -exec in find; deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.102 1999/08/04 17:07:27 millert Exp $
d304 1
a304 1
T=`mktemp /tmp/_motd.XXXXXX` 
@


1.102
log
@Use mktemp(1) for motd /tmp file during boot.  This fixes a potential
problem noted by hugh@@openbsd.org whereby a user could create the
well-known /tmp/_motd file and use chflags to make it unremovable.
Then at the next reboot the user's /tmp/_motd would end up in the
system motd.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.101 1999/08/03 22:52:42 deraadt Exp $
d281 1
a281 1
	! -name quota.group -exec rm -rf -- {} \; -type d -prune)
@


1.101
log
@chmod/chown all the ptys
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.100 1999/07/15 14:31:52 provos Exp $
d304 8
a311 7
T=/tmp/_motd
rm -f $T
sysctl -n kern.version | sed 1q > $T
echo "" >> $T
sed '1,/^$/d' < /etc/motd >> $T
cmp -s $T /etc/motd || cp $T /etc/motd
rm -f $T
@


1.100
log
@move /etc/host.random to /var/db for readonly /, save the entropy state
into /var/db/host.random at shutdown time, so we can make use of it
during reboot to seed our random pool. ok millert@@ angelos@@ niklas@@
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.99 1999/05/30 23:20:52 millert Exp $
d266 2
a267 1
chmod 666 /dev/tty[pqrs]*
@


1.99
log
@Fix typo, '=' not '=='; marc@@snafu.org
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.98 1999/05/26 08:40:00 jakob Exp $
d80 8
a87 4
# if there's no /etc/host.random, make one through /dev/urandom
if [ ! -f /etc/host.random ]; then
	dd if=/dev/urandom of=/etc/host.random bs=1024 count=64 >/dev/null 2>&1
	chmod 600 /etc/host.random
@


1.98
log
@Configure raid devices at boot (from NetBSD, ok by niklas@@).
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.97 1999/05/24 18:00:05 millert Exp $
d452 1
a452 1
		shlib_dirs=="$shlib_dirs /usr/local/lib"
d455 1
a455 1
		shlib_dirs=="$shlib_dirs /usr/X11R6/lib"
@


1.97
log
@Add shlib_dirs variable so users can add to the directories cached
in /var/run/ld.so.hints
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.96 1999/04/21 20:18:02 alex Exp $
d23 7
@


1.96
log
@Save a copy of the boot messages in /var/run/dmesg.boot.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.95 1998/12/28 06:58:30 deraadt Exp $
a443 1
	_LIBS=
d445 1
a445 1
		_LIBS="$_LIBS /usr/local/lib"
d448 1
a448 1
		_LIBS="$_LIBS /usr/X11R6/lib"
d450 1
a450 1
	ldconfig $_LIBS
@


1.95
log
@split database line up nicely; krw@@tcn.net
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.94 1998/12/21 03:33:43 deraadt Exp $
d91 3
@


1.94
log
@isakmpd startup stuff
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.93 1998/11/11 09:22:49 downsj Exp $
d245 2
a246 1
echo 'building databases...'
d248 1
d250 1
@


1.93
log
@Add option for running ftpd out of rc.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.92 1998/11/03 05:10:41 downsj Exp $
d144 7
@


1.92
log
@Actually use $xdm_flags.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.91 1998/10/28 17:47:00 art Exp $
d374 4
@


1.91
log
@use xfs, not afs when mounting afs. Making mount_afs work correctly is too hard.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.90 1998/10/12 03:02:57 art Exp $
d470 1
a470 1
	echo 'starting xdm...';		/usr/X11R6/bin/xdm
@


1.90
log
@startup code for AFS
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.89 1998/09/19 02:31:51 todd Exp $
d225 1
a225 1
	mount -t afs ${afs_device} ${afs_mount_point}
@


1.89
log
@shift ifaliases. one more daemon can bind to specific ifaliases.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.88 1998/08/28 04:42:38 millert Exp $
d223 7
d474 1
@


1.88
log
@When running kvm_mkdb, don't specify /bsd so we can use /dev/ksyms if it exists and is configured
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.87 1998/08/25 18:19:40 marc Exp $
d100 16
a132 16
fi

# /etc/ifaliases, if it exists, contains the names of additional IP
# addresses for each interface. It is formatted as a series of lines
# that contain
#	interface address netmask
if [ -f /etc/ifaliases ]; then
(
	# delete comments and blank lines
	set -- `sed -e 's/#.*$//' /etc/ifaliases | grep -v '^$'`
	while [ $# -ge 3 ] ; do
		ifconfig $1 inet alias $2 netmask $3
		route -n add -host $2 localhost
		shift 3
	done
)
@


1.87
log
@put back recent change (apmd flags) that was accidently removed
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.86 1998/08/19 04:25:46 form Exp $
d232 1
a232 1
kvm_mkdb /bsd
@


1.86
log
@dhcpd: start from rc, controlled by rc.conf; sample config files
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.83 1998/07/24 18:01:25 millert Exp $
d448 7
d456 1
@


1.85
log
@allow flags to be passed to apmd at millert's request
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.84 1998/08/18 23:11:15 marc Exp $
d336 10
a447 7

# $apmd_flags is imported from /etc/rc.conf;
# don't run daemon if $apmd_flags == NO or /usr/sbin/apmd doesn't exist
if [ "X${apmd_flags}" != X"NO" -a -x /usr/sbin/apmd ]; then
        echo -n ' apmd';        /usr/sbin/apmd ${apmd_flags}
fi

a448 1

@


1.84
log
@start apmd in rc, controlled by rc.conf
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.83 1998/07/24 18:01:25 millert Exp $
d439 4
a442 3
# $apmd is imported from /etc/rc.conf;
if [ X"${apmd}" == X"YES" -a -x /usr/sbin/apmd ]; then
        echo -n ' apmd';        /usr/sbin/apmd
@


1.83
log
@update /var/named/etc/localtime when /etc/localtime changes
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.82 1998/07/13 23:24:57 deraadt Exp $
d438 6
d445 1
@


1.82
log
@quiet that dd
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.81 1998/07/13 03:38:54 millert Exp $
d109 4
@


1.81
log
@Create /var/named/dev/null if it is not there and we are running named chroot'd.  It would be cleaner to simply do this at install time but this way people who are tracking sources get the correct behavior too.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.80 1998/07/11 08:41:34 deraadt Exp $
d75 1
a75 1
	dd if=/dev/urandom of=/etc/host.random bs=1024 count=64
@


1.80
log
@change last route to route -n
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.79 1998/07/05 02:50:08 todd Exp $
d107 3
@


1.79
log
@yet another typo
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.78 1998/07/04 23:35:42 todd Exp $
d122 1
a122 1
		route add -host $2 localhost
@


1.78
log
@fix a typo
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.77 1998/07/03 03:48:16 angelos Exp $
d75 1
a75 1
	dd if=/dev/urandom of=/dev/host.random bs=1024 count=64
@


1.77
log
@Generate an /etc/host.random if it doesn't exist; 64KB, perms 600.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.76 1998/06/13 03:38:15 millert Exp $
d76 1
a76 1
	chmod 600 /etc/random
@


1.76
log
@don't make /var/named/dev/log if named_flags == NO
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.75 1998/06/03 17:12:03 millert Exp $
d72 6
@


1.75
log
@to turn of named chroot set to be empty, not 'NO'
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.74 1998/06/03 16:04:07 millert Exp $
d88 1
a88 1
if [ "X${named_chroot}" != "X" ]; then
@


1.74
log
@Add named_user and named_chroot variables to simplify chroot'd named
setup.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.73 1998/05/14 23:58:01 millert Exp $
d88 1
a88 1
if [ "X${named_chroot}" != "X" -a "X${named_chroot}" != X"NO" ]; then
d100 1
a100 1
	if [ "X${named_chroot}" != "X" -a "X${named_chroot}" != X"NO" ]; then
@


1.73
log
@move cron to the end so users cannot run cron jobs before the system is all the way up
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.72 1998/05/13 21:10:03 deraadt Exp $
d88 4
d94 1
a94 1
# $named_flags is imported from /etc/rc.conf;
d97 6
@


1.72
log
@test -> [
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.71 1998/04/07 06:11:52 deraadt Exp $
a295 4
echo -n standard daemons:
echo -n ' cron';		cron
echo '.'

d413 4
@


1.71
log
@add xdm control to /etc/rc.conf; X11 docs need updating
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.70 1998/03/25 23:07:21 deraadt Exp $
d239 1
a239 1
test -f /etc/rc.securelevel && . /etc/rc.securelevel
d271 1
a271 1
		if test -x $i -o ! -s $i; then
d284 1
a284 1
		if test -n "$recfile" -a -s "$recfile"; then
d416 1
a416 1
. /etc/rc.local
@


1.70
log
@savecore prints a message; no need to print another
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.69 1998/03/25 07:25:20 deraadt Exp $
d419 6
@


1.69
log
@httpd is now in the tree, and an rc.conf flag turns it on
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.68 1998/03/11 18:08:09 millert Exp $
a196 1
	echo checking for core dump...
@


1.68
log
@Kill whitespace at eol.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.67 1998/02/26 18:50:52 millert Exp $
d335 4
@


1.67
log
@Replace "test -r" with -s and -e as -r always returns true for root?!?!
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.66 1998/02/18 14:05:27 art Exp $
d164 1
a164 1
	rm -f /var/db/mountdtab	
d237 1
a237 1
)	
@


1.66
log
@add an option for kerberos slave servers.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.65 1998/02/13 06:35:25 marc Exp $
d162 1
a162 1
if [ X${nfs_server} = X"YES" -a -r /etc/exports -a \
d179 1
a179 1
if [ X${amd} = X"YES" -a -d ${amd_dir} -a -r ${amd_master} ]; then
d306 1
a306 1
if [ X${gated} = X"YES" -a -r /etc/gated.conf ]; then
d333 1
a333 1
if [ "X${sendmail_flags}" != X"NO" -a -r /etc/sendmail.cf ]; then
d351 1
a351 1
if [ "X${rarpd_flags}" != X"NO" -a -r /etc/ethers ]; then
d358 1
a358 1
if [ "X${bootparamd_flags}" != X"NO" -a -r /etc/bootparams ]; then
d365 1
a365 1
if [ "X${rbootd_flags}" != X"NO" -a -r /etc/rbootd.conf ]; then
@


1.65
log
@fix typo
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.64 1998/02/11 02:28:10 deraadt Exp $
d398 2
a399 1
# Kerberos runs ONLY on the Kerberos server machine
d404 7
@


1.64
log
@syslogd gets a new -a argument: specify additional AF_UNIX log devices
syslogd should create & listen to. As in "syslogd -a /chroot/dev/log",
I'm sure you get the idea.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.63 1998/02/07 21:17:37 beck Exp $
d88 1
a88 1
syslogd {$syslogd_flags}
@


1.63
log
@	Flags and startup for smtpd/smtpfwdd - not enabled by default.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.62 1998/02/06 00:06:00 deraadt Exp $
d88 1
a88 1
syslogd
@


1.62
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.61 1998/02/05 09:54:36 deraadt Exp $
d336 7
@


1.61
log
@introduce /etc/sysctl.conf containing sysctl variables to change at boot time
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.60 1998/01/23 08:38:31 art Exp $
d230 1
@


1.60
log
@correct path to the kerberos servers.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.59 1998/01/21 23:35:56 downsj Exp $
a115 4
if [ X"${rfc1323}" = X"NO" ]; then
	echo 'disabling rfc1323'; 	sysctl -w net.inet.tcp.rfc1323=0
fi

d228 10
@


1.59
log
@Add ${nfsiod_flags}
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.58 1997/12/21 06:40:50 deraadt Exp $
d387 2
a388 2
	kerberos >> /var/log/kerberos.log &
	kadmind -n >> /var/log/kadmind.log &
@


1.58
log
@sigh; move syslog up nearer the top.  Any failures from this?
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.57 1997/12/12 23:02:26 niklas Exp $
d180 1
a180 1
	echo -n ' nfsiod';		nfsiod -n 4
@


1.57
log
@Diskless root mounts were ro too long
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.56 1997/11/23 11:54:16 maja Exp $
d86 4
d93 1
a93 1
	echo -n ' named';		named $named_flags
a188 7
echo '.'
mount -a -t nfs

echo -n 'starting system logger'
rm -f /dev/log
syslogd

d192 1
a192 1
	echo -n ', time daemon'; timed $timed_flags
d195 2
@


1.56
log
@Add support for mopd. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.55 1997/11/19 23:44:21 deraadt Exp $
d66 1
@


1.55
log
@clean /var earlier
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.54 1997/11/08 20:45:33 deraadt Exp $
d353 7
@


1.54
log
@start named earlier; this is an experiment
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.53 1997/11/04 09:15:31 deraadt Exp $
d79 6
a120 6

# clean up left-over files
rm -f /etc/nologin
rm -f /var/spool/lock/LCK.*
rm -f /var/spool/uucp/STST/*
(cd /var/run && { rm -rf -- *; install -c -m 664 -g utmp /dev/null utmp; })
@


1.53
log
@kill spaces at ends of lines; m4
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.52 1997/11/04 08:39:33 deraadt Exp $
d79 6
a309 7

# $named_flags is imported from /etc/rc.conf;
# if $named_flags != NO, named is run.
if [ "X${named_flags}" != X"NO" ]; then
	echo -n ' named';		named $named_flags
fi
mount -a -t nfs		# do again, in case DNS hostnames are used..
@


1.52
log
@things come from rc.conf not netstart nowadays
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.51 1997/10/15 16:28:29 millert Exp $
d376 1
a376 1
fi 
@


1.51
log
@Add rest of stuff from nvi's recover script.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.50 1997/09/30 04:54:50 millert Exp $
d103 1
a103 1
# $photurisd_flags is imported from /etc/netstart;
d118 1
a118 1
# $portmap is imported from /etc/netstart;
d153 1
a153 1
# $nfs_server is imported from /etc/netstart;
d166 1
a166 1
# $nfs_client is imported from /etc/netstart;
d185 1
a185 1
# $timed_flags is imported from /etc/netstart;
d290 1
a290 1
# $gated and $routed_flags are imported from /etc/netstart.
d299 1
a299 1
# $mrouted_flags is imported from /etc/netstart;
d305 1
a305 1
# $named_flags is imported from /etc/netstart;
d312 1
a312 1
# $rwhod is imported from /etc/netstart;
d323 1
a323 1
# $sendmail_flags is imported from /etc/netstart;
d335 1
a335 1
# $rarpd_flags is imported from /etc/netstart;
d342 1
a342 1
# $bootparamd_flags is imported from /etc/netstart;
d349 1
a349 1
# $rbootd_flags is imported from /etc/netstart;
@


1.50
log
@Make /var/tmp/vi.recover if it does not exist.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.49 1997/09/26 18:43:45 millert Exp $
d245 1
d254 10
d268 9
a276 1
		sendmail -t < $i
@


1.49
log
@Clear /tmp before running /etc/rc.securelevel.  Brian Candler <btc@@demon.net>
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.48 1997/09/20 07:40:40 deraadt Exp $
d245 8
@


1.48
log
@re-attempt nfs mounts after named is started...
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.47 1997/09/17 09:37:11 deraadt Exp $
d219 8
a251 8

echo clearing /tmp

# prune quickly with one rm, then use find to clean up /tmp/[lq]*
# (not needed with mfs /tmp, but doesn't hurt there...)
(cd /tmp && rm -rf [a-km-pr-zA-Z]* &&
    find . ! -name . ! -name lost+found ! -name quota.user \
	! -name quota.group -exec rm -rf -- {} \; -type d -prune)
@


1.47
log
@little missing space, argh
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.46 1997/09/14 10:35:40 deraadt Exp $
d283 1
@


1.46
log
@only start mountd if a non-commented line is in exports; decreased vulnerabilty in common cases
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.45 1997/09/02 14:49:25 kstailey Exp $
d156 1
a156 1
    `cat /etc/exports | sed -e '/^#/d' | wc -l` -ne 0]; then
@


1.45
log
@The /etc/photurisd directory is created by /usr/src/Makefile's "beforeinstall"
target.  It does not represent a desire to run photurisd.  Changed photurisd
startup to look for /etc/photurisd/photurisd.conf file.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.44 1997/08/25 20:50:38 millert Exp $
d155 2
a156 1
if [ X${nfs_server} = X"YES" -a -r /etc/exports ]; then
@


1.44
log
@Explicately pass -host flag to route(8) to avoid confusion with networks.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.43 1997/08/23 15:01:24 mickey Exp $
d104 1
a104 1
# If $photurisd_flags == NO or /etc/photuris/ doesn't exist, then
d106 1
a106 1
if [ "X${photurisd_flags}" != X"NO" -a -d /etc/photuris ]; then
@


1.43
log
@echo on ipmon startup
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.42 1997/08/19 21:55:14 niklas Exp $
d89 1
a89 1
		route add $2 localhost
@


1.42
log
@Add hook for rpc.lockd, make nfsd flags settable in netstart
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.41 1997/07/31 02:23:45 downsj Exp $
d96 1
a96 1
	ipmon ${ipmon_flags}
@


1.41
log
@Make quotas optional; wedged into netstart for the time being.
/etc/rc.conf, anyone?
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.40 1997/07/25 00:06:02 provos Exp $
d159 4
a162 1
	echo -n ' nfsd';		nfsd -tun 4
@


1.40
log
@earlier start of keymanagement
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.39 1997/07/22 17:11:56 kstailey Exp $
d195 6
a200 4
				echo -n 'checking quotas:'
quotacheck -a
				echo ' done.'
quotaon -a
@


1.39
log
@now that ipmon daemon(3)s, remove ampersand
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.38 1997/07/22 10:02:47 provos Exp $
d103 7
a319 7
fi

# $photurisd_flags is imported from /etc/netstart;
# If $photurisd_flags == NO or /etc/photuris/ doesn't exist, then
# photurisd isn't run.
if [ "X${photurisd_flags}" != X"NO" -a -d /etc/photuris ]; then
	echo -n ' photurisd';		photurisd ${photurisd_flags}
@


1.38
log
@start the photuris daemon per default. hilfe.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.37 1997/06/20 13:01:34 deraadt Exp $
d96 1
a96 1
	ipmon ${ipmon_flags} &
@


1.37
log
@if screenblank exists, start it
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.36 1997/06/17 13:13:47 niklas Exp $
d313 7
@


1.36
log
@Put in hooks to start ypserv with flags
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.34 1997/04/22 23:04:57 deraadt Exp $
d313 4
@


1.35
log
@Put in hooks to start rpc.yppasswdd with flags
@
text
@d120 1
a120 1
		echo -n ' ypserv';		ypserv
@


1.34
log
@move motd generation to avoid user races; kashmir@@umiacs.umd.edu
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.33 1997/04/16 05:48:27 millert Exp $
d140 2
a141 1
			echo -n ' rpc.yppasswdd'; rpc.yppasswdd
@


1.33
log
@Don't source /etc/rc.securelevel if it doesn't exist and be
more verbose when upping the securelevel.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.32 1997/04/15 09:26:47 deraadt Exp $
d211 12
a318 12

# patch /etc/motd
if [ ! -f /etc/motd ]; then
	install -c -o root -g wheel -m 664 /dev/null /etc/motd
fi
T=/tmp/_motd
rm -f $T
sysctl -n kern.version | sed 1q > $T
echo "" >> $T
sed '1,/^$/d' < /etc/motd >> $T
cmp -s $T /etc/motd || cp $T /etc/motd
rm -f $T
@


1.32
log
@split rc.local, creating rc.securelevel. Read the comments. If you believe
in securelevels, follow them religiously. Problem found by millert...
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.31 1997/02/28 07:53:33 millert Exp $
d205 1
a205 1
. /etc/rc.securelevel
d207 1
@


1.31
log
@fsck now raises datasize limit itself.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.30 1997/02/19 03:59:14 tholo Exp $
d203 5
@


1.30
log
@Start kadmind if kerberos server
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.29 1997/02/03 12:04:44 deraadt Exp $
d28 1
a28 1
	( ulimit -d 32768; fsck -p )
@


1.29
log
@do ifaliases after /usr/bin exists in nfs diskless env; pr#77, matthieu@@laas.fr
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.28 1996/12/22 20:14:09 deraadt Exp $
d328 3
a330 1
	echo 'kerberos server';	kerberos >> /var/log/kerberos.log &
@


1.28
log
@crank ulimit -d for fsck run (someone with a 19GB ccd ran into a problem)
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.27 1996/12/07 12:19:00 deraadt Exp $
d78 16
@


1.27
log
@ypserv w/o -d is OK
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.26 1996/10/09 07:13:30 deraadt Exp $
d28 1
a28 1
	fsck -p
@


1.26
log
@bit more careful ldconfig
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.25 1996/09/23 13:06:36 deraadt Exp $
d104 1
a104 1
		echo -n ' ypserv';		ypserv -d
@


1.25
log
@rfc1323 variable
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.24 1996/09/07 20:45:24 millert Exp $
d300 8
a307 1
	ldconfig /usr/local/lib /usr/X11R6/lib
@


1.25.2.1
log
@pullup
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.26 1996/10/09 07:13:30 deraadt Exp $
d300 1
a300 8
	_LIBS=
	if [ -d /usr/local/lib ]; then
		_LIBS="$_LIBS /usr/local/lib"
	fi
	if [ -d /usr/X11R6/lib ]; then
		_LIBS="$_LIBS /usr/X11R6/lib"
	fi
	ldconfig $_LIBS
@


1.24
log
@typo + comment
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.23 1996/09/04 10:25:53 deraadt Exp $
d81 4
@


1.23
log
@control portmap, inetd, and lpd from netstart; idea from tqbf@@enteract.com
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.22 1996/07/27 01:39:04 deraadt Exp $
d90 4
a93 1
if [ X"${portmap}" == X"YES" ]; then
@


1.22
log
@syslogd: -s goes away, becomes default. -u becomes insecure mode
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.21 1996/07/25 22:04:46 deraadt Exp $
d90 3
a92 1
echo -n ' portmap';		portmap
d235 4
a238 1
echo -n ' printer';		lpd
d248 3
a250 1
echo -n ' inetd';		inetd
@


1.21
log
@ypserv, ypbind, then rpc.yppasswdd
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.20 1996/07/18 09:57:37 downsj Exp $
d146 1
a146 1
syslogd -s		# "-s" is for greater security
@


1.20
log
@daily: disable the fscks by default.
rc: add /usr/local/lib to ldconfig.
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.19 1996/07/05 02:18:43 deraadt Exp $
d97 3
d101 1
a117 2

	echo -n ' ypbind';		ypbind
@


1.19
log
@start ypbind after ypserv
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.18 1996/06/28 01:53:53 deraadt Exp $
d284 1
a284 1
	ldconfig /usr/X11R6/lib
@


1.18
log
@syslogd -s by default
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.17 1996/06/18 15:30:01 deraadt Exp $
a92 2
	echo -n ' ypbind';		ypbind

d114 2
@


1.17
log
@move std stuff from rc.local to rc
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.16 1996/06/12 09:13:20 deraadt Exp $
d144 1
a144 1
syslogd		# use "-s" for greater security
@


1.16
log
@no ypxfrd
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.15 1996/06/12 09:02:59 deraadt Exp $
d20 1
a20 2
if [ -f /etc/ccd.conf ]
then
d24 1
a24 2
if [ -e /fastboot ]
then
d26 1
a26 2
elif [ $1x = autobootx ]
then
d173 1
a173 2
if [ -f /etc/ptmp ]
then
a265 2
. /etc/rc.local

d269 24
@


1.15
log
@fix test for yp in resolv.conf
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.14 1996/06/11 03:25:10 tholo Exp $
d101 1
a101 1
		echo -n ' ypxfrd';		ypxfrd
@


1.14
log
@Kernel-implementation of update(8) my me
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.13 1996/06/10 07:15:17 deraadt Exp $
d106 1
a106 1
		if grep '^lookup' /etc/resolv.conf | grep yp | wc; then
@


1.13
log
@fix rpc.yppasswdd conditional
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.12 1996/05/30 09:37:34 deraadt Exp $
a202 1
echo -n ' update';		update
@


1.12
log
@use kbd command on /etc/kbdtype if applicable
@
text
@d1 1
a1 1
#	$OpenBSD: rc,v 1.11 1996/05/26 10:25:27 deraadt Exp $
d115 1
a115 1
		if [ "$host2" = "$host1" ]; then
@


1.11
log
@sync & label
@
text
@d1 1
a1 1
#	$OpenBSD$
d272 4
@


1.10
log
@pretty comments, run ypxfrd with ypserv
@
text
@d1 1
a1 2
#	$NetBSD: rc,v 1.54 1995/10/08 18:11:43 thorpej Exp $
#	from: @@(#)rc	8.2 (Berkeley) 3/17/94
@


1.9
log
@yp depends on /var/yp/bindings, not only /var/yp
@
text
@d101 2
a102 2
		echo -n 'ypserv';		ypserv -d
		#echo -n 'ypxfrd';		ypxfrd
d117 1
a117 1
			echo -n 'rpc.yppasswdd'; rpc.yppasswdd
@


1.8
log
@intuit whether ypbind, ypserv, and rpc.yppasswdd should run
@
text
@d96 1
a96 1
if [ -d /var/yp ]; then
@


1.7
log
@start ypserv & rpc.yppasswdd automatically
@
text
@d96 23
a118 5
if [ -d /var/yp/`domainname`]; then
	echo -n 'ypserv';		ypserv -d
	#echo -n 'ypxfrd';		ypxfrd
	if [ `ypwhich -m passwd` = `hostname`]; then
		echo -n 'rpc.yppasswdd'; rpc.yppasswdd
a119 4
fi

if [ -f /usr/sbin/ypbind -a -d /var/yp ]; then
	echo -n ' ypbind';		ypbind
@


1.6
log
@sync with netbsd 960418
@
text
@d96 8
@


1.5
log
@added IP filter to netstat/rc and put examples in /usr/share/ipf
@
text
@d219 2
a220 1
# sendmail isn't run.
d222 1
a222 1
	echo -n ' sendmail';		sendmail ${sendmail_flags}
@


1.4
log
@from netbsd: start mrouted like routed
@
text
@d83 4
@


1.3
log
@document where syslogd -s would be used
@
text
@d193 7
a199 1
# $name_flags is imported from /etc/netstart;
@


1.2
log
@kernel is called /bsd
@
text
@d122 1
a122 1
syslogd
@


1.1
log
@Initial revision
@
text
@d145 1
a145 1
kvm_mkdb /netbsd
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

