head	1.256;
access;
symbols
	OPENBSD_6_2:1.256.0.4
	OPENBSD_6_2_BASE:1.256
	OPENBSD_6_1:1.255.0.4
	OPENBSD_6_1_BASE:1.255
	OPENBSD_6_0:1.250.0.4
	OPENBSD_6_0_BASE:1.250
	OPENBSD_5_9:1.245.0.2
	OPENBSD_5_9_BASE:1.245
	OPENBSD_5_8:1.239.0.6
	OPENBSD_5_8_BASE:1.239
	OPENBSD_5_7:1.239.0.2
	OPENBSD_5_7_BASE:1.239
	OPENBSD_5_6:1.236.0.4
	OPENBSD_5_6_BASE:1.236
	OPENBSD_5_5:1.234.0.2
	OPENBSD_5_5_BASE:1.234
	OPENBSD_5_4:1.227.0.2
	OPENBSD_5_4_BASE:1.227
	OPENBSD_5_3:1.221.0.2
	OPENBSD_5_3_BASE:1.221
	OPENBSD_5_2:1.218.0.2
	OPENBSD_5_2_BASE:1.218
	OPENBSD_5_1_BASE:1.217
	OPENBSD_5_1:1.217.0.2
	OPENBSD_5_0:1.215.0.2
	OPENBSD_5_0_BASE:1.215
	OPENBSD_4_9:1.213.0.2
	OPENBSD_4_9_BASE:1.213
	OPENBSD_4_8:1.211.0.2
	OPENBSD_4_8_BASE:1.211
	OPENBSD_4_7:1.204.0.2
	OPENBSD_4_7_BASE:1.204
	OPENBSD_4_6:1.202.0.4
	OPENBSD_4_6_BASE:1.202
	OPENBSD_4_5:1.198.0.2
	OPENBSD_4_5_BASE:1.198
	OPENBSD_4_4:1.194.0.2
	OPENBSD_4_4_BASE:1.194
	OPENBSD_4_3:1.187.0.2
	OPENBSD_4_3_BASE:1.187
	OPENBSD_4_2:1.185.0.2
	OPENBSD_4_2_BASE:1.185
	OPENBSD_4_1:1.183.0.2
	OPENBSD_4_1_BASE:1.183
	OPENBSD_4_0:1.179.0.2
	OPENBSD_4_0_BASE:1.179
	OPENBSD_3_9:1.177.0.2
	OPENBSD_3_9_BASE:1.177
	OPENBSD_3_8:1.172.0.2
	OPENBSD_3_8_BASE:1.172
	OPENBSD_3_7:1.168.0.2
	OPENBSD_3_7_BASE:1.168
	OPENBSD_3_6:1.162.0.2
	OPENBSD_3_6_BASE:1.162
	OPENBSD_3_5:1.154.0.2
	OPENBSD_3_5_BASE:1.154
	OPENBSD_3_4:1.141.0.2
	OPENBSD_3_4_BASE:1.141
	OPENBSD_3_3:1.139.0.2
	OPENBSD_3_3_BASE:1.139
	OPENBSD_3_2:1.133.0.2
	OPENBSD_3_2_BASE:1.133
	OPENBSD_3_1:1.130.0.2
	OPENBSD_3_1_BASE:1.130
	OPENBSD_3_0:1.104.0.2
	OPENBSD_3_0_BASE:1.104
	OPENBSD_2_9:1.91.0.2
	OPENBSD_2_9_BASE:1.91
	OPENBSD_2_8:1.84.0.2
	OPENBSD_2_8_BASE:1.84
	OPENBSD_2_7:1.79.0.2
	OPENBSD_2_7_BASE:1.79
	OPENBSD_2_6:1.73.0.2
	OPENBSD_2_6_BASE:1.73
	OPENBSD_2_5:1.69.0.2
	OPENBSD_2_5_BASE:1.69
	OPENBSD_2_4:1.65.0.2
	OPENBSD_2_4_BASE:1.65
	OPENBSD_2_3:1.57.0.2
	OPENBSD_2_3_BASE:1.57
	OPENBSD_2_2:1.52.0.2
	OPENBSD_2_2_BASE:1.52
	OPENBSD_2_1:1.45.0.2
	OPENBSD_2_1_BASE:1.45
	OPENBSD_2_0:1.27.0.2
	OPENBSD_2_0_BASE:1.27
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.256
date	2017.07.21.19.15.43;	author mikeb;	state Exp;
branches;
next	1.255;
commitid	F0S5RbRB5mWHMNs3;

1.255
date	2016.09.11.19.59.57;	author deraadt;	state Exp;
branches;
next	1.254;
commitid	nE2mDEOBdUs9pcWt;

1.254
date	2016.09.11.03.09.31;	author deraadt;	state Exp;
branches;
next	1.253;
commitid	5bdWa87DXO6wfavj;

1.253
date	2016.09.08.20.41.30;	author ratchov;	state Exp;
branches;
next	1.252;
commitid	OYpPi53fdbnV5gsb;

1.252
date	2016.09.04.15.39.52;	author naddy;	state Exp;
branches;
next	1.251;
commitid	zStW2v519TMXvpgu;

1.251
date	2016.09.02.17.29.01;	author goda;	state Exp;
branches;
next	1.250;
commitid	jpWYiBSH0Zb5ggN1;

1.250
date	2016.05.21.21.35.52;	author deraadt;	state Exp;
branches;
next	1.249;
commitid	VqgBnfl5n3M9BSSw;

1.249
date	2016.05.21.15.18.49;	author deraadt;	state Exp;
branches;
next	1.248;
commitid	63AnsVd02uEVSedF;

1.248
date	2016.04.28.18.17.31;	author natano;	state Exp;
branches;
next	1.247;
commitid	yJ7nITWQGOm5qxNW;

1.247
date	2016.04.25.20.38.35;	author tedu;	state Exp;
branches;
next	1.246;
commitid	0kiqbjPHHvQxOXM9;

1.246
date	2016.03.12.18.02.17;	author espie;	state Exp;
branches;
next	1.245;
commitid	OOHlYIifEE4gewlK;

1.245
date	2016.02.05.06.30.21;	author uebayasi;	state Exp;
branches;
next	1.244;
commitid	BS1QN2U2mq0qO6iK;

1.244
date	2016.01.27.09.12.16;	author reyk;	state Exp;
branches;
next	1.243;
commitid	NpQdAW09XtgD9Zvs;

1.243
date	2015.12.21.21.55.42;	author sf;	state Exp;
branches;
next	1.242;
commitid	ct6bdbF3QZyQ09nF;

1.242
date	2015.11.10.21.50.01;	author sthen;	state Exp;
branches;
next	1.241;
commitid	cbpQoyIQoLnKxXlo;

1.241
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.240;
commitid	xjeR06qiavDtFv9k;

1.240
date	2015.10.23.15.14.46;	author claudio;	state Exp;
branches;
next	1.239;
commitid	D8oDiiCrSjVktjLG;

1.239
date	2014.12.11.19.48.39;	author tedu;	state Exp;
branches;
next	1.238;
commitid	2Qyj7V6Rmn8q72sA;

1.238
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.237;
commitid	M66ALjcyb37tQVMc;

1.237
date	2014.08.20.11.23.41;	author mikeb;	state Exp;
branches;
next	1.236;
commitid	vzc4wz1s3pDevb7K;

1.236
date	2014.07.11.22.04.52;	author tedu;	state Exp;
branches;
next	1.235;
commitid	xQhhmJP574n3YeP9;

1.235
date	2014.03.14.23.51.25;	author kettenis;	state Exp;
branches;
next	1.234;

1.234
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.233;

1.233
date	2013.11.21.11.06.08;	author kettenis;	state Exp;
branches;
next	1.232;

1.232
date	2013.11.05.16.06.28;	author deraadt;	state Exp;
branches;
next	1.231;

1.231
date	2013.09.16.08.18.27;	author dcoppa;	state Exp;
branches;
next	1.230;

1.230
date	2013.08.21.15.14.23;	author ajacoutot;	state Exp;
branches;
next	1.229;

1.229
date	2013.08.20.14.30.19;	author ajacoutot;	state Exp;
branches;
next	1.228;

1.228
date	2013.08.08.10.44.27;	author jsg;	state Exp;
branches;
next	1.227;

1.227
date	2013.07.06.17.34.48;	author naddy;	state Exp;
branches;
next	1.226;

1.226
date	2013.07.06.16.15.27;	author naddy;	state Exp;
branches;
next	1.225;

1.225
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.224;

1.224
date	2013.06.15.23.20.55;	author halex;	state Exp;
branches;
next	1.223;

1.223
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.222;

1.222
date	2013.03.15.09.16.19;	author ratchov;	state Exp;
branches;
next	1.221;

1.221
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.220;

1.220
date	2012.11.26.08.07.59;	author jasper;	state Exp;
branches;
next	1.219;

1.219
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.218;

1.218
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.217;

1.217
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.216;

1.216
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.215;

1.215
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.214;

1.214
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.213;

1.213
date	2010.09.30.15.29.22;	author claudio;	state Exp;
branches;
next	1.212;

1.212
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.211;

1.211
date	2010.08.03.20.16.22;	author miod;	state Exp;
branches;
next	1.210;

1.210
date	2010.07.23.14.36.49;	author mglocker;	state Exp;
branches;
next	1.209;

1.209
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.208;

1.208
date	2010.07.03.04.08.10;	author krw;	state Exp;
branches;
next	1.207;

1.207
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.206;

1.206
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.205;

1.205
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.204;

1.204
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.203;

1.203
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.202;

1.202
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.201;

1.201
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.200;

1.200
date	2009.04.05.17.52.21;	author jmc;	state Exp;
branches;
next	1.199;

1.199
date	2009.03.25.19.30.39;	author miod;	state Exp;
branches;
next	1.198;

1.198
date	2009.02.06.21.18.20;	author grange;	state Exp;
branches;
next	1.197;

1.197
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.196;

1.196
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.195;

1.195
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.194;

1.194
date	2008.06.28.21.48.29;	author mglocker;	state Exp;
branches;
next	1.193;

1.193
date	2008.06.19.15.29.54;	author todd;	state Exp;
branches;
next	1.192;

1.192
date	2008.06.14.22.07.54;	author mbalmer;	state Exp;
branches;
next	1.191;

1.191
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.190;

1.190
date	2008.06.12.22.40.02;	author todd;	state Exp;
branches;
next	1.189;

1.189
date	2008.06.12.20.42.00;	author todd;	state Exp;
branches;
next	1.188;

1.188
date	2008.06.12.18.55.05;	author todd;	state Exp;
branches;
next	1.187;

1.187
date	2007.11.25.17.14.40;	author oga;	state Exp;
branches;
next	1.186;

1.186
date	2007.11.25.15.46.06;	author tedu;	state Exp;
branches;
next	1.185;

1.185
date	2007.07.23.23.22.33;	author todd;	state Exp;
branches;
next	1.184;

1.184
date	2007.05.28.22.38.33;	author todd;	state Exp;
branches;
next	1.183;

1.183
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.182;

1.182
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.181;

1.181
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.180;

1.180
date	2006.10.10.12.58.03;	author todd;	state Exp;
branches;
next	1.179;

1.179
date	2006.08.28.21.23.33;	author tsi;	state Exp;
branches;
next	1.178;

1.178
date	2006.06.11.11.03.33;	author mk;	state Exp;
branches;
next	1.177;

1.177
date	2005.12.27.19.03.08;	author miod;	state Exp;
branches;
next	1.176;

1.176
date	2005.10.06.06.43.59;	author otto;	state Exp;
branches;
next	1.175;

1.175
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.174;

1.174
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.173;

1.173
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.172;

1.172
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.171;

1.171
date	2005.06.29.18.24.52;	author todd;	state Exp;
branches;
next	1.170;

1.170
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.169;

1.169
date	2005.04.21.00.31.07;	author krw;	state Exp;
branches;
next	1.168;

1.168
date	2005.03.01.13.37.09;	author otto;	state Exp;
branches;
next	1.167;

1.167
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.166;

1.166
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.165;

1.165
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.164;

1.164
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.163;

1.163
date	2004.10.03.21.29.15;	author jcs;	state Exp;
branches;
next	1.162;

1.162
date	2004.09.06.10.06.28;	author deraadt;	state Exp;
branches;
next	1.161;

1.161
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.160;

1.160
date	2004.08.09.19.58.27;	author otto;	state Exp;
branches;
next	1.159;

1.159
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.158;

1.158
date	2004.05.30.08.24.11;	author grange;	state Exp;
branches;
next	1.157;

1.157
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.156;

1.156
date	2004.04.11.18.15.22;	author millert;	state Exp;
branches;
next	1.155;

1.155
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.154;

1.154
date	2004.03.12.04.54.32;	author deraadt;	state Exp;
branches;
next	1.153;

1.153
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.152;

1.152
date	2004.02.16.19.05.05;	author miod;	state Exp;
branches;
next	1.151;

1.151
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.150;

1.150
date	2004.02.13.23.35.03;	author miod;	state Exp;
branches;
next	1.149;

1.149
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.148;

1.148
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.147;

1.147
date	2004.02.05.22.23.29;	author todd;	state Exp;
branches;
next	1.146;

1.146
date	2004.01.12.22.33.09;	author todd;	state Exp;
branches;
next	1.145;

1.145
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.144;

1.144
date	2003.10.15.02.01.24;	author todd;	state Exp;
branches;
next	1.143;

1.143
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.142;

1.142
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.141;

1.141
date	2003.06.18.18.11.07;	author todd;	state Exp;
branches;
next	1.140;

1.140
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.139;

1.139
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.138;

1.138
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.137;

1.137
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.136;

1.136
date	2002.12.05.04.33.23;	author kjc;	state Exp;
branches;
next	1.135;

1.135
date	2002.12.05.03.00.26;	author kjc;	state Exp;
branches;
next	1.134;

1.134
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.133;

1.133
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.132;

1.132
date	2002.06.09.05.58.38;	author todd;	state Exp;
branches;
next	1.131;

1.131
date	2002.05.16.16.19.42;	author provos;	state Exp;
branches;
next	1.130;

1.130
date	2002.04.12.02.13.28;	author deraadt;	state Exp;
branches;
next	1.129;

1.129
date	2002.04.11.20.29.41;	author deraadt;	state Exp;
branches;
next	1.128;

1.128
date	2002.04.09.01.58.03;	author deraadt;	state Exp;
branches;
next	1.127;

1.127
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.126;

1.126
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.125;

1.125
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.124;

1.124
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.123;

1.123
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.122;

1.122
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.121;

1.121
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.120;

1.120
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.119;

1.119
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.118;

1.118
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.117;

1.117
date	2002.02.14.04.43.08;	author todd;	state Exp;
branches;
next	1.116;

1.116
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.115;

1.115
date	2002.02.10.21.53.03;	author deraadt;	state Exp;
branches;
next	1.114;

1.114
date	2002.02.09.17.01.40;	author deraadt;	state Exp;
branches;
next	1.113;

1.113
date	2002.02.08.20.54.35;	author todd;	state Exp;
branches;
next	1.112;

1.112
date	2002.01.23.08.23.19;	author todd;	state Exp;
branches;
next	1.111;

1.111
date	2002.01.23.07.54.41;	author todd;	state Exp;
branches;
next	1.110;

1.110
date	2002.01.23.06.21.20;	author todd;	state Exp;
branches;
next	1.109;

1.109
date	2002.01.08.05.29.13;	author todd;	state Exp;
branches;
next	1.108;

1.108
date	2002.01.08.03.28.59;	author todd;	state Exp;
branches;
next	1.107;

1.107
date	2002.01.07.22.07.12;	author todd;	state Exp;
branches;
next	1.106;

1.106
date	2002.01.07.07.57.12;	author todd;	state Exp;
branches;
next	1.105;

1.105
date	2001.11.06.23.46.05;	author drahn;	state Exp;
branches;
next	1.104;

1.104
date	2001.10.04.22.38.13;	author gluk;	state Exp;
branches;
next	1.103;

1.103
date	2001.09.21.18.21.12;	author brad;	state Exp;
branches;
next	1.102;

1.102
date	2001.07.03.22.52.30;	author niklas;	state Exp;
branches;
next	1.101;

1.101
date	2001.06.28.02.58.54;	author kjc;	state Exp;
branches;
next	1.100;

1.100
date	2001.06.24.23.36.02;	author kjell;	state Exp;
branches;
next	1.99;

1.99
date	2001.06.24.04.23.50;	author matthieu;	state Exp;
branches;
next	1.98;

1.98
date	2001.06.23.03.34.34;	author matthieu;	state Exp;
branches;
next	1.97;

1.97
date	2001.06.21.13.24.02;	author nate;	state Exp;
branches;
next	1.96;

1.96
date	2001.06.04.17.59.48;	author millert;	state Exp;
branches;
next	1.95;

1.95
date	2001.06.04.15.29.00;	author brad;	state Exp;
branches;
next	1.94;

1.94
date	2001.05.30.02.11.17;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2001.05.14.07.42.18;	author deraadt;	state Exp;
branches;
next	1.92;

1.92
date	2001.05.13.15.39.23;	author deraadt;	state Exp;
branches;
next	1.91;

1.91
date	2001.04.17.16.20.24;	author todd;	state Exp;
branches;
next	1.90;

1.90
date	2001.04.10.03.03.51;	author brad;	state Exp;
branches;
next	1.89;

1.89
date	2001.02.20.23.53.26;	author jbm;	state Exp;
branches;
next	1.88;

1.88
date	2001.02.11.19.14.05;	author aaron;	state Exp;
branches;
next	1.87;

1.87
date	2001.01.30.00.00.33;	author aaron;	state Exp;
branches;
next	1.86;

1.86
date	2000.11.23.23.37.44;	author deraadt;	state Exp;
branches;
next	1.85;

1.85
date	2000.11.23.10.00.01;	author deraadt;	state Exp;
branches;
next	1.84;

1.84
date	2000.10.16.14.57.56;	author aaron;	state Exp;
branches;
next	1.83;

1.83
date	2000.09.01.05.46.57;	author aaron;	state Exp;
branches;
next	1.82;

1.82
date	2000.08.16.15.38.27;	author marc;	state Exp;
branches;
next	1.81;

1.81
date	2000.08.04.22.52.49;	author fgsch;	state Exp;
branches;
next	1.80;

1.80
date	2000.07.06.22.01.29;	author fgsch;	state Exp;
branches;
next	1.79;

1.79
date	2000.04.15.17.50.45;	author jakob;	state Exp;
branches;
next	1.78;

1.78
date	2000.04.09.21.08.26;	author matthieu;	state Exp;
branches;
next	1.77;

1.77
date	2000.03.29.21.46.07;	author aaron;	state Exp;
branches;
next	1.76;

1.76
date	2000.03.22.07.34.29;	author niklas;	state Exp;
branches;
next	1.75;

1.75
date	2000.02.21.08.22.44;	author mjacob;	state Exp;
branches;
next	1.74;

1.74
date	99.12.05.19.19.08;	author mickey;	state Exp;
branches;
next	1.73;

1.73
date	99.08.20.17.00.36;	author downsj;	state Exp;
branches;
next	1.72;

1.72
date	99.08.13.05.39.24;	author fgsch;	state Exp;
branches;
next	1.71;

1.71
date	99.07.30.18.49.36;	author deraadt;	state Exp;
branches;
next	1.70;

1.70
date	99.04.28.23.20.51;	author alex;	state Exp;
branches;
next	1.69;

1.69
date	99.01.11.15.14.44;	author niklas;	state Exp;
branches;
next	1.68;

1.68
date	99.01.01.23.53.15;	author niklas;	state Exp;
branches;
next	1.67;

1.67
date	98.11.25.04.58.53;	author millert;	state Exp;
branches;
next	1.66;

1.66
date	98.11.19.08.18.57;	author dugsong;	state Exp;
branches;
next	1.65;

1.65
date	98.09.15.21.54.53;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	98.09.15.10.15.31;	author pattonme;	state Exp;
branches;
next	1.63;

1.63
date	98.09.12.06.34.36;	author fgsch;	state Exp;
branches;
next	1.62;

1.62
date	98.09.02.00.28.18;	author art;	state Exp;
branches;
next	1.61;

1.61
date	98.08.24.05.49.52;	author millert;	state Exp;
branches;
next	1.60;

1.60
date	98.08.24.05.29.56;	author millert;	state Exp;
branches;
next	1.59;

1.59
date	98.07.23.17.45.40;	author mickey;	state Exp;
branches;
next	1.58;

1.58
date	98.04.27.14.50.38;	author provos;	state Exp;
branches;
next	1.57;

1.57
date	98.03.24.19.00.27;	author marc;	state Exp;
branches;
next	1.56;

1.56
date	98.02.17.23.41.50;	author matthieu;	state Exp;
branches;
next	1.55;

1.55
date	98.01.26.04.19.40;	author dgregor;	state Exp;
branches;
next	1.54;

1.54
date	97.12.16.21.17.42;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	97.12.08.21.27.39;	author mickey;	state Exp;
branches;
next	1.52;

1.52
date	97.10.06.05.17.17;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	97.09.19.16.46.49;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	97.09.16.06.00.58;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	97.09.07.20.29.11;	author dgregor;	state Exp;
branches;
next	1.48;

1.48
date	97.08.06.07.06.46;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	97.08.04.23.58.15;	author dgregor;	state Exp;
branches;
next	1.46;

1.46
date	97.06.02.22.54.02;	author kstailey;	state Exp;
branches;
next	1.45;

1.45
date	97.05.22.05.26.42;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	97.05.14.15.41.13;	author niklas;	state Exp;
branches;
next	1.43;

1.43
date	97.05.13.05.34.52;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	97.05.04.03.28.27;	author tholo;	state Exp;
branches;
next	1.41;

1.41
date	97.04.25.18.51.05;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	97.04.16.22.26.50;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	97.04.13.20.07.53;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	97.04.13.20.05.51;	author mickey;	state Exp;
branches;
next	1.37;

1.37
date	97.04.13.19.29.50;	author mickey;	state Exp;
branches;
next	1.36;

1.36
date	97.02.06.10.02.13;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	96.12.14.18.23.57;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	96.12.06.10.49.44;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	96.12.05.13.18.12;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	96.11.11.20.47.21;	author kstailey;	state Exp;
branches;
next	1.31;

1.31
date	96.11.10.21.39.18;	author downsj;	state Exp;
branches;
next	1.30;

1.30
date	96.11.06.01.34.01;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	96.10.15.07.44.22;	author downsj;	state Exp;
branches;
next	1.28;

1.28
date	96.10.13.00.53.52;	author downsj;	state Exp;
branches;
next	1.27;

1.27
date	96.09.28.18.28.01;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	96.09.25.13.53.36;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	96.09.22.21.48.21;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	96.09.18.22.03.42;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	96.09.16.03.43.34;	author tholo;	state Exp;
branches;
next	1.22;

1.22
date	96.09.14.03.21.35;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	96.09.12.02.40.42;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	96.08.29.13.22.23;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	96.08.28.08.55.23;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	96.08.24.21.05.09;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	96.08.09.00.25.03;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	96.08.08.18.47.15;	author dm;	state Exp;
branches;
next	1.15;

1.15
date	96.07.23.06.32.55;	author etheisen;	state Exp;
branches;
next	1.14;

1.14
date	96.07.23.06.15.15;	author etheisen;	state Exp;
branches;
next	1.13;

1.13
date	96.07.19.23.50.21;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.07.19.07.03.09;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.07.15.14.59.12;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	96.07.15.07.45.37;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	96.06.09.05.00.04;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	96.06.02.11.52.29;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.04.29.13.05.58;	author hvozda;	state Exp;
branches;
next	1.6;

1.6
date	96.04.23.03.18.42;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.01.16.08.25.06;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.01.14.23.10.30;	author hvozda;	state Exp;
branches;
next	1.3;

1.3
date	96.01.07.02.33.01;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	95.12.15.02.33.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.256
log
@sync
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.83 2016/09/11 19:59:53 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.94 2016/09/11 19:59:51 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.83 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	ttyc*	Cyclades serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Printers:
#	lpa*	Polled printer port
#	lpt*	IEEE 1284 centronics printer
# USB devices:
#	ttyU*	USB serial ports
#	uall	All USB devices
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	usb*	Bus control devices used by usbd for attach/detach
# Special purpose devices:
#	amdmsr	AMD MSR access device
#	apm	Power management device
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bktr*	Video frame grabbers
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	drm*	Direct Rendering Manager
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	gpio*	General Purpose Input/Output
#	gpr*	GPR400 smartcard reader
#	hotplug	devices hot plugging
#	ipmi*	IPMI BMC access
#	joy*	Joystick driver
#	nvram	NVRAM access
#	pci*	PCI bus devices
#	pctr*	PC Performance Tuning Register access device
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	radio*	FM tuner devices
#	*random	In-kernel random data source
#	rmidi*	Raw MIDI devices
#	speaker	PC speaker
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	tuner*	Tuner devices
#	uk*	Unknown SCSI devices
#	video*	Video V4L2 devices
#	vmm	Virtual Machine Monitor
#	vscsi*	Virtual SCSI controller
#	pvbus*	paravirtual device tree root
#	switch*	Switch driver
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std bpf fd0 wd0 sd0 tty00 tty01 rd0 bio diskmap
	R st0 cd0 ttyC0 wskbd0 wskbd1 wskbd2 apm random
	;;

std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 22 0
	M stdout	c 22 1
	M stderr	c 22 2
	M ksyms		c 50 0 640 kmem
	M klog		c 7 0 600
	M xf86		c 2 4 600
	;;

ttyc*)
	M ttyc$U c 38 $U 660 dialer root
	M cuac$U c 38 $(($U+128)) 660 dialer root
	;;

switch*)
	M switch$U c 97 $U 600
	;;

pvbus*)
	M pvbus$U c 95 $U 640
	;;

vscsi*)
	M vscsi$U c 90 $U 600
	;;

vmm)
	M vmm c 10 0 600
	;;

video*)
	M video$U  c 44 $U 600
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uk*)
	M uk$U c 20 $U 640 operator
	;;

tuner*)
	M tuner$U c 49 $(($(($U*2))+16)) 644
	;;

tap*)
	M tap$U c 94 $U 600
	;;

tun*)
	M tun$U c 40 $U 600
	;;

speaker)
	M speaker c 27 0 600
	;;

rmidi*)
	M rmidi$U c 52 $U 666
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 45 $n 644
		n=$(($n+1))
	done
	;;

radio*)
	M radio$U	c 76 $U
	MKlist[${#MKlist[*]}]=";[ -e radio ] || ln -s radio$U radio"
	;;

pppx*)
	M pppx$U c 92 $U 600
	;;

pf*)
	M pf c 73 0 600
	;;

pctr)
	M pctr c 46 0 644
	;;

pci*)
	M pci$U	c 72 $U 600
	MKlist[${#MKlist[*]}]=";[ -h pci ] || ln -sf pci0 pci"
	;;

nvram)
	M nvram c 84 0 440 kmem
	;;

joy*)
	M joy$U c 26 $U 666
	;;

ipmi*)
	M ipmi$U c 96 $U 600
	;;

hotplug)
	M hotplug c 82 $U 400
	;;

gpr*)
	M gpr$U c 80 $U
	;;

gpio*)
	M gpio$U c 83 $U 600
	;;

fuse)
	M fuse$U c 93 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 22 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

drm*)
	M drm$U c 88 $U 600
	;;

diskmap)
	M diskmap c 91 0 640 operator
	;;

bpf)
	M bpf c 23 0 600
	M bpf0 c 23 0 600
	;;

bktr*)
	M bktr$U c 49 $U 644
	;;

bio)
	M bio c 79 0 600
	;;

audio*)
	M audio$U	c 42 $U
	M mixer$U	c 42 $(($U+16))
	M audioctl$U	c 42 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

apm*)
	M apm	c 21 0 644
	M apmctl	c 21 8 644
	;;

amdmsr*)
	M amdmsr c 89 $U 
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 61 $U 660
	;;

ulpt*)
	M ulpt$U c 64 $U 660
	;;

uhid*)
	M uhid$U c 62 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 63 $(($n+10#$j)) 660
	done
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ugen2 ugen3 ugen4 ugen5
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 usb0 usb1
	R usb2 usb3 usb4 usb5 usb6 usb7
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 66 $o 660 dialer root
	M cuaU$U c 66 $(($o+128)) 660 dialer root
	;;

lpt*|lpa*)
	case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c 16 $(($U+$f)) 600
	;;

wsmouse[0-9]*)
	M wsmouse$U c 68 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 69 0 600
	M wskbd c 69 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 67 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 12 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 12 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 5 $(($off+$n))
		M pty$nam c 6 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 81 0 666
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 8 $o 660 dialer root
	M cua$U c 8 $(($o+128)) 660 dialer root
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 17 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 14 41 $U 0
	;;

rd*)
	dodisk2 rd $U 17 47 $U 0
	;;

fd*)
	typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=2; chr=9;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=$(($(($U*128))+$(($typnum*16))))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk $(($n+1)) 640 operator
	M ${nam}c	b $blk $(($n+2)) 640 operator
	M ${nam}i	b $blk $(($n+8)) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr $(($n+1)) 640 operator
	M r${nam}c	c $chr $(($n+2)) 640 operator
	M r${nam}i	c $chr $(($n+8)) 640 operator
	;;

cd*)
	dodisk2 cd $U 6 15 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R switch0 switch1 switch2 switch3 ipmi0 amdmsr drm0 drm1 drm2
	R drm3 nvram gpio0 gpio1 gpio2 bktr0 vnd0 vnd1 vnd2 vnd3 sd0
	R sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1
	R tap2 tap3 tun0 tun1 tun2 tun3 bio pty0 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R diskmap vscsi0 ch0 audio0 audio1 audio2 bpf pvbus0 pvbus1
	R vmm fuse pppx hotplug ptm gpr0 local wscons pci0 pci1 pci2
	R pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 speaker video0 video1 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm pf pctr wd0 wd1 wd2
	R wd3 std st0 st1 fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 0 3 $U 0;;
	sd*) dodisk sd $U 4 13 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
@


1.255
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.82 2016/09/04 15:38:59 naddy Exp 
#	OpenBSD: MAKEDEV.common,v 1.93 2016/09/11 03:06:31 deraadt Exp 
d578 8
a585 8
	R diskmap vscsi0 ch0 audio0 audio1 audio2 bpf pvbus0 vmm fuse
	R pppx hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03 tty04
	R tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1 ttyc2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm pf pctr wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.254
log
@sync
@
text
@d247 2
a248 2
	M ttyc$U c 38 $U 660 dialer uucp
	M cuac$U c 38 $(($U+128)) 660 dialer uucp
d430 2
a431 2
	M ttyU$U c 66 $o 660 dialer uucp
	M cuaU$U c 66 $(($o+128)) 660 dialer uucp
d509 2
a510 2
	M tty$U c 8 $o 660 dialer uucp
	M cua$U c 8 $(($o+128)) 660 dialer uucp
@


1.253
log
@sync after /dev/sound* removal
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.92 2016/09/08 20:39:28 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
d306 1
a306 1
	M radio$U     c 76 $U
d609 1
a609 1
        cat
@


1.252
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.91 2016/09/04 15:38:59 naddy Exp 
d383 1
a383 1
	M sound$U	c 42 $U
a384 1
	M audio$U	c 42 $(($U+128))
a387 1
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
@


1.251
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.81 2016/09/02 17:06:13 goda Exp 
#	OpenBSD: MAKEDEV.common,v 1.90 2016/09/02 17:06:13 goda Exp 
a518 1
		M ${pre}st$U	b 5 $n 660 operator
@


1.250
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.80 2016/04/28 18:17:31 natano Exp 
#	OpenBSD: MAKEDEV.common,v 1.88 2016/05/21 15:17:49 deraadt Exp 
d99 1
d251 4
d268 1
a268 1
	M video$U  c 44 $U 600 
d576 13
a588 12
	R ipmi0 amdmsr drm0 drm1 drm2 drm3 nvram gpio0 gpio1 gpio2
	R bktr0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7
	R sd8 sd9 cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3
	R bio pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B
	R fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 audio0
	R audio1 audio2 bpf pvbus0 vmm fuse pppx hotplug ptm gpr0
	R local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 speaker
	R video0 video1 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08
	R tty09 tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 apm pf pctr wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.249
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.87 2016/04/28 18:17:30 natano Exp 
d263 1
a263 1
	M video$U  c 44 $U
@


1.248
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.79 2016/04/25 20:38:11 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
@


1.247
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d72 1
a72 1
#	bpf*	Berkeley Packet Filter
d226 1
a226 1
	R std bpf0 fd0 wd0 sd0 tty00 tty01 rd0 bio diskmap
d364 3
a366 2
bpf*)
	M bpf$U c 23 $U 600
d574 9
a582 10
	R bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D
	R fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2
	R pvbus0 vmm fuse pppx hotplug ptm gpr0 local wscons pci0 pci1
	R pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 speaker video0 video1 uk0 random
	R joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02
	R tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm pf pctr wd0
	R wd1 wd2 wd3 std st0 st1 fd
@


1.246
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.78 2016/02/05 06:29:45 uebayasi Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a90 1
#	systrace*	System call tracing device
a282 4
systrace)
	M systrace c 78 0 644
	;;

d581 2
a582 2
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm pf pctr
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.245
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.77 2016/01/27 09:09:29 reyk Exp 
#	OpenBSD: MAKEDEV.common,v 1.84 2016/01/27 09:09:28 reyk Exp 
d191 2
a192 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.244
log
@sync
@
text
@d80 1
d334 4
d574 13
a586 13
	R amdmsr drm0 drm1 drm2 drm3 nvram gpio0 gpio1 gpio2 bktr0
	R vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	R cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 bio bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 pvbus0 vmm
	R fuse pppx hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03 tty04
	R tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1 ttyc2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm pf pctr systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.243
log
@regen MAKEDEV
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.76 2015/11/10 21:42:28 sthen Exp 
#	OpenBSD: MAKEDEV.common,v 1.82 2015/12/09 04:11:58 deraadt Exp 
d98 1
d249 4
d574 3
a576 3
	R fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 vmm fuse
	R pppx hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.242
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d253 1
a253 1
	M vmm c 10 0 640
@


1.241
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
d96 1
a96 1
#	vmm	{Virtual Machine Monitor}
@


1.240
log
@Sync (after tap addition)
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.75 2015/10/23 15:14:11 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
d96 1
d252 4
d569 2
a570 2
	R fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 fuse pppx
	R hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 uall
@


1.239
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.74 2014/12/11 19:48:03 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d92 1
d264 4
d561 11
a571 10
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 ch0 audio0 audio1 audio2 fuse pppx hotplug ptm gpr0
	R local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 speaker
	R video0 video1 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08
	R tty09 tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 apm pf pctr systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.238
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.73 2014/10/09 04:37:43 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.77 2014/10/09 04:33:50 tedu Exp 
a64 1
#	urio*	Diamond Multimedia Rio 500
a384 4
urio*)
	M urio$U c 65 $U 660
	;;

d403 2
a404 2
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 urio0 usb0
	R usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.237
log
@Remove userland bits related to the crypto(4) interface;  ok deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.71 2014/07/11 22:04:09 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
a81 1
#	lkm	Loadable kernel modules interface
a314 4
lkm)
	M lkm c 28 0 640 _lkm
	;;

d568 3
a570 4
	R lpt2 lkm tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07
	R tty08 tty09 tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 apm pf pctr systrace wd0 wd1 wd2 wd3 std
	R st0 st1 fd
@


1.236
log
@regen
@
text
@a73 1
#	crypto	Hardware crypto access driver
a353 4
crypto)
	M crypto c 70 0
	;;

d575 1
a575 1
	R ttyc6 ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2 wd3 std
@


1.235
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.70 2014/03/14 23:47:04 kettenis Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
a73 1
#	bthub*	Bluetooth Hubs
a358 4
bthub*)
	M bthub$U c 86 $U
	;;

d569 13
a581 13
	R amdmsr drm0 drm1 drm2 drm3 bthub0 bthub1 bthub2 nvram gpio0
	R gpio1 gpio2 bktr0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 fuse pppx
	R hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf pctr
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.234
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.69 2014/01/05 01:16:52 deraadt Exp 
a67 1
#	agp*	AGP bridge
a395 5
agp*)
	M agp$U c 87 $U
	MKlist[${#MKlist[*]}]=";[ -e agpgart ] || ln -s agp$U agpgart"
	;;

d574 7
a580 7
	R amdmsr drm0 drm1 drm2 drm3 agp0 bthub0 bthub1 bthub2 nvram
	R gpio0 gpio1 gpio2 bktr0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 fuse
	R pppx hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 uall
@


1.233
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.68 2013/11/05 16:05:30 deraadt Exp 
d228 1
a228 1
	R st0 cd0 ttyC0 wskbd0 wskbd1 wskbd2 apm
@


1.232
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
d350 1
a350 1
	M drm$U c 88 $U 660
@


1.231
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.67 2013/08/21 15:12:48 ajacoutot Exp 
#	OpenBSD: MAKEDEV.common,v 1.71 2013/09/16 08:17:02 dcoppa Exp 
a83 1
#	iop*	I2O controller devices
a326 4
iop*)
	M iop$U c 75 $U 660
	;;

d586 6
a591 6
	R pppx hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0
	R iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 speaker video0 video1 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf pctr
@


1.230
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.66 2013/08/08 10:39:29 jsg Exp 
#	OpenBSD: MAKEDEV.common,v 1.69 2013/08/20 14:27:24 ajacoutot Exp 
d433 3
a435 2
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.229
log
@regen
@
text
@a66 1
uscan_dev
@


1.228
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.68 2013/07/06 17:33:44 naddy Exp 
d67 1
a67 1
#	uscanner*	Scanners
a407 4
uscanner*)
	M uscanner$U c 77 $U 660
	;;

d435 1
a435 2
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.227
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.65 2013/06/03 16:06:42 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
d590 12
a601 12
	R amdmsr drm0 agp0 bthub0 bthub1 bthub2 nvram gpio0 gpio1
	R gpio2 bktr0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6
	R sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 fuse pppx
	R hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf pctr
@


1.226
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d600 3
a602 3
	R tty04 tty05 tty06 tty07 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2 wd3 std
	R st0 st1 fd
@


1.225
log
@regen
@
text
@d600 3
a602 2
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf pctr systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.224
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d81 1
a81 1
#	fuse*	Userland Filesystem
d345 1
a345 1
fuse*)
d595 7
a601 8
	R fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 fuse0 fuse1
	R fuse2 fuse3 pppx hotplug ptm gpr0 local wscons pci0 pci1
	R pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 speaker video0 video1 uk0
	R random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.223
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d81 1
a81 1
#	fuse	Userland Filesystem
d345 1
a345 1
fuse)
d595 8
a602 7
	R fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 fuse pppx
	R hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf pctr systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.222
log
@regen after sequencer removal
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.64 2013/03/15 09:10:52 ratchov Exp 
#	OpenBSD: MAKEDEV.common,v 1.62 2013/03/15 09:10:52 ratchov Exp 
d81 1
d345 4
d595 3
a597 3
	R fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 pppx hotplug
	R ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.221
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.63 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
a86 1
#	music*	MIDI sequencer
a319 7
music*)
	M music$U     c 53 $U
	M sequencer$U c 53 $(($U+128))
	MKlist[${#MKlist[*]}]=";[ -e music ] || ln -s music$U music"
	MKlist[${#MKlist[*]}]=";[ -e sequencer ] || ln -s sequencer$U sequencer"
	;;

d593 4
a596 4
	R tuner0 radio0 music0 speaker video0 video1 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.220
log
@regen
@
text
@d598 7
a604 7
	R fd0H diskmap vscsi0 ch0 audio0 audio1 audio2 hotplug ptm
	R gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker video0 video1 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf pctr systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.219
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d202 1
a202 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d206 1
a206 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d210 1
a210 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d214 1
a214 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.218
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.62 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a87 1
#	nnpfs*	NNPFS filesystem node
a320 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d598 7
a604 7
	R fd0H diskmap vscsi0 nnpfs0 ch0 audio0 audio1 audio2 hotplug
	R ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker video0 video1 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.217
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.61 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
a34 1
#	raid*	RAIDframe disk devices
d609 1
a609 2
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
d612 1
a612 1
wd*|sd*|raid*)
a615 1
	raid*) dodisk raid $U 19 54 $U 0;;
@


1.216
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.60 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d604 4
a607 4
	R fd0H diskmap vscsi0 nnpfs0 ch0 hotplug ptm gpr0 local wscons
	R pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0
	R speaker video0 video1 audio0 audio1 audio2 uk0 random joy0
@


1.215
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.59 2011/06/26 23:28:23 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.55 2011/06/26 23:28:23 tedu Exp 
a32 1
#	ccd*	Concatenated disk devices
d600 12
a611 12
	R gpio2 bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1
	R sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ch0 hotplug
	R ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker video0 video1 audio0 audio1
	R audio2 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4
	R ttyc5 ttyc6 ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
d614 1
a614 1
wd*|sd*|raid*|ccd*)
a618 1
	ccd*) dodisk ccd $U 16 18 $U 0;;
@


1.214
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.58 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
a35 1
#	mcd*	Mitsumi CD-ROM drives
a560 4
mcd*)
	dodisk2 mcd $U 7 39 $U 0
	;;

d612 1
a612 1
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.213
log
@regen
@
text
@a555 1
	dodisk svnd $U 14 41 $U 2048
@


1.212
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.56 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d96 1
d302 4
@


1.211
log
@regen
@
text
@d63 1
a64 1
#	ttyU*	USB serial ports
d73 1
a74 1
#	amdmsr	AMD MSR access device
d81 1
d91 1
d97 1
a98 1
#	*random	In-kernel random data source
a104 1
#	nnpfs*	NNPFS filesystem node
a105 1
#	diskmap	Disk mapper
a255 4
diskmap)
	M diskmap c 91 0 640 operator
	;;

a259 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d285 4
a297 4
rmidi*)
	M rmidi$U c 52 $U 666
	;;

d320 4
d365 4
a399 4
amdmsr*)
	M amdmsr c 89 $U 
	;;

d405 4
d443 6
a453 6
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.210
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d453 1
@


1.209
log
@sync
@
text
@d608 5
a612 5
	R tuner0 radio0 music0 speaker video0 audio0 audio1 audio2 uk0
	R random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.208
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.207
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.55 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a97 1
#	ss*	SCSI scanners
a288 8
ss*)
	M ss$U c 19 $(($U*16)) 640 operator
	M nss$U c 19 $(($(($U*16))+1)) 640 operator
	M enss$U c 19 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d605 3
a607 3
	R fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ss0 ss1 ch0
	R hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.206
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.54 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d233 1
a233 1
	R std bpf0 fd0 wd0 sd0 tty00 tty01 rd0 bio
@


1.205
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d258 1
a258 1
	M diskmap b 91 0 640 operator
@


1.204
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.53 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d106 1
d257 4
d614 3
a616 3
	R fd0D fd0E fd0F fd0G fd0H vscsi0 nnpfs0 ss0 ss1 ch0 hotplug
	R ptm gpr0 local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.203
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d467 1
a467 1
wsmouse*)
d476 1
a476 1
wskbd*)
@


1.202
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.52 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d89 1
a89 1
#	music*	MIDI devices
d105 1
d256 4
d609 8
a616 8
	R fd0D fd0E fd0F fd0G fd0H nnpfs0 ss0 ss1 ch0 hotplug ptm gpr0
	R local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker video0 audio0 audio1 audio2 uk0 random
	R joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01
	R tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	R apm crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1
	R raid2 raid3 std st0 st1 fd mcd0
@


1.201
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.51 2009/03/25 19:30:28 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.42 2009/04/05 17:49:14 jmc Exp 
@


1.200
log
@regen;
@
text
@d104 1
a104 1
#	xfs*	XFS filesystem node
d255 2
a256 2
xfs*)
	M xfs$U c 51 $U 600
d604 1
a604 1
	R fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 hotplug ptm gpr0
@


1.199
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d103 1
a103 1
#	video*	Video V4L devices
@


1.198
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.50 2009/02/06 21:17:14 grange Exp 
a52 1
#	drm*	Direct Rendering Manager
d81 1
d364 4
a497 4
	;;

drm*)
	M drm$U c 88 $U 660
@


1.197
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.49 2009/01/25 17:30:48 miod Exp 
d601 11
a611 11
	R sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H xfs0 ss0 ss1 ch0 hotplug ptm gpr0 local wscons pci0
	R pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker
	R video0 audio0 audio1 audio2 uk0 random joy0 joy1 lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf pctr
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd mcd0
@


1.196
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.48 2008/06/28 21:46:05 mglocker Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a245 1
	M drum		c 4 0 640 kmem
@


1.195
log
@sync
@
text
@d608 5
a612 4
	R video0 audio0 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3
	R ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf pctr systrace wd0 wd1
	R wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.194
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
d295 1
a295 1
	for pre in " " s u p a
@


1.193
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.47 2008/06/19 15:27:00 todd Exp 
a71 1
#	video*	Video V4L devices
d103 1
d260 5
a407 5
	;;

video*)
	M video$U  c 44 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
@


1.192
log
@sync.
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.45 2008/06/14 22:06:47 mbalmer Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d53 2
a55 1
#	ttyC-J*	wscons display devices
a57 1
#	drm*	Direct Rendering Manager
a462 4
drm*)
	M drm$U c 88 $U 660
	;;

d472 6
d497 2
a498 4
wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.191
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.44 2008/06/13 21:07:28 todd Exp 
d76 1
d391 4
d600 12
a611 12
	R drm0 agp0 bthub0 bthub1 bthub2 nvram gpio0 gpio1 gpio2
	R bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2
	R sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2
	R bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R xfs0 ss0 ss1 ch0 hotplug ptm gpr0 local wscons pci0 pci1
	R pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker video0
	R audio0 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4
	R ttyc5 ttyc6 ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.190
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.43 2008/06/12 22:38:14 todd Exp 
d230 1
a230 1
	R std bpf0 fd0 wd0 sd0 tty00 tty01 rd0
@


1.189
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.42 2008/06/12 20:39:29 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d57 1
d458 4
d595 12
a606 12
	R agp0 bthub0 bthub1 bthub2 nvram gpio0 gpio1 gpio2 bktr0
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0 ss0
	R ss1 ch0 hotplug ptm gpr0 local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker video0 audio0 uk0
	R random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.188
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.41 2008/06/12 18:52:46 todd Exp 
d71 1
d399 5
d597 5
a601 5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker audio0 uk0 random
	R joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01
	R tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	R apm crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1
	R raid2 raid3 std st0 st1 fd mcd0
@


1.187
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.40 2007/11/25 17:11:11 oga Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d229 1
a229 1
	R st0 cd0 ttyC0 random wskbd0 wskbd1 wskbd2 apm
@


1.186
log
@remove acpi device.  named apmctl on amd64 now, and on i386 apmctl
has become a gate to both apm and acpi.  ok deraadt
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.38 2007/07/23 23:21:25 todd Exp 
d72 1
d393 5
d584 3
a586 3
	R bthub0 bthub1 bthub2 nvram gpio0 gpio1 gpio2 bktr0 ccd0
	R ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0
	R cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
@


1.185
log
@sync
@
text
@a72 1
#	acpi	Advanced Configuration and Power Interface
a386 4
acpi*)
	M acpi	c 85 0 644
	;;

d588 1
a588 1
	R acpi apm crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1
@


1.184
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.37 2007/05/28 22:37:15 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.35 2007/05/28 22:37:14 todd Exp 
d78 1
d361 4
d583 12
a594 12
	R nvram gpio0 gpio1 gpio2 bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1
	R vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C
	R fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 hotplug ptm gpr0
	R local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker audio0 uk0 random joy0 joy1 lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 acpi apm crypto pf pctr
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd mcd0
@


1.183
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.36 2006/06/11 10:58:57 mk Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
a44 1
#	wt*	Archive/Wangtek QIC-cartridge tape drives
a511 9
wt*)
	name=wt
	n=$(($U*8)) m=$(($n+4))
	M $name$U	b 3 $n 640 operator
	M r$name$U	c 10 $n 640 operator
	M n$name$U	b 3 $m 640 operator
	M nr$name$U	c 10 $m 640 operator
	;;

d585 5
a589 5
	R radio0 music0 speaker audio0 wt0 uk0 random joy0 joy1 lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 acpi apm crypto pf
	R pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd mcd0
@


1.182
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
d313 1
a313 1
	MKlist[${#MKlist[*]}]=";[ -e pci ] || ln -s pci0 pci"
@


1.181
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
d572 1
d576 1
@


1.180
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.30 2006/10/10 12:33:41 todd Exp 
d89 1
a89 1
#	pci	PCI bus device
d311 3
a313 2
pci)
	M pci c 72 0 600
d591 7
a597 6
	R local wscons pci iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker
	R audio0 wt0 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3
	R ttyc4 ttyc5 ttyc6 ttyc7 acpi apm crypto pf pctr systrace wd0
	R wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.179
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
d429 2
a430 2
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
@


1.178
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.28 2006/06/11 10:58:57 mk Exp 
d55 1
a55 1
#	ttyC-F*	wscons display devices
d454 2
a455 2
tty[C-F]*)
	U=${i##tty[C-F]}
d461 4
@


1.177
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.33 2005/08/01 22:22:13 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
a100 1
#	wdt0	Watchdog timer
a256 4
wdt0)
	M wdt$U c 55 $U 440 operator
	;;

d588 4
a591 5
	R audio0 wdt0 wt0 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 acpi apm crypto pf pctr
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd mcd0
@


1.176
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d54 1
a54 1
#	ttyC0	Minimal wscons devices
d80 1
a80 1
#	fd	fd/* nodes for fdescfs
@


1.175
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d191 1
a191 2
RMlist="rm -f"
MKlist=":"
d194 1
a194 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d198 1
a198 1
	RMlist="$RMlist $1"
d202 1
a202 1
		MKlist="$MKlist;chown $7:$G $1"
d205 10
a214 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a215 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d282 2
a283 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d305 1
a305 1
	MKlist="$MKlist;[ -e radio ] || ln -s radio$U radio"
d327 2
a328 2
	MKlist="$MKlist;[ -e music ] || ln -s music$U music"
	MKlist="$MKlist;[ -e sequencer ] || ln -s sequencer$U sequencer"
d356 1
a356 1
	RMlist="mkdir -p fd;$RMlist" n=0
d358 1
a358 1
	MKlist="$MKlist;chmod 555 fd"
d382 4
a385 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d616 8
a623 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d625 1
a625 1
	echo "$list" | sh
@


1.174
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d174 1
a174 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.173
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a170 1
	RMlist="$RMlist $1$2? r$1$2?"
d174 2
a175 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a177 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.172
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a207 1
	mklist="$mklist $1"
@


1.171
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.32 2005/06/29 18:23:27 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.19 2005/06/29 18:23:26 todd Exp 
a94 1
#	ses*	SES/SAF-TE SCSI devices
a295 4
ses*)
	M ses$U c 24 $U 640 operator
	;;

d596 5
a600 5
	R fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 hotplug ptm
	R gpr0 local wscons pci iop0 iop1 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0
	R speaker audio0 wdt0 wt0 uk0 random joy0 joy1 lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2
@


1.170
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.31 2005/06/02 20:09:38 tholo Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
d76 1
d384 4
d599 7
a605 7
	R tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 hotplug ptm gpr0
	R local wscons pci iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker
	R audio0 wdt0 wt0 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2
@


1.169
log
@Regen/sync.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.30 2005/04/21 00:26:30 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.17 2005/03/29 16:40:08 miod Exp 
d74 1
d394 4
d601 3
a603 2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf pctr systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.168
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.28 2004/10/03 21:28:34 jcs Exp 
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
d234 2
a235 2
	R std bpf0 fd0 wd0 wd1 wd2 sd0 sd1 sd2 tty00 tty01 rd0
	R st0 cd0 ttyC0 random wskbd0 apm
@


1.167
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
d436 1
a436 1
	R uscanner0 urio0 usb0 usb1 usb2 usb3
@


1.166
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.165
log
@sync
@
text
@d123 1
a123 1
	local t="$1"  
@


1.164
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d421 1
a421 1
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d423 1
a423 1
		M ugen$U.$j c 63 $(($n+$j)) 660
d469 1
a469 1
	[0-9a-f]) M tty$n$U c 12 $(( 16#$U + $m )) 600;;
@


1.163
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
d431 1
@


1.162
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.27 2004/09/06 10:06:05 deraadt Exp 
d86 1
d329 4
d586 11
a596 11
	R gpio0 gpio1 gpio2 bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 hotplug ptm gpr0 local
	R wscons pci iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker audio0
	R wdt0 wt0 uk0 random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4
	R ttyc5 ttyc6 ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.161
log
@Regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.26 2004/08/09 19:57:23 otto Exp 
d234 1
a234 1
	R st0 cd0 ttyC0 random wskbd0
@


1.160
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d98 1
a98 1
#	uk*	SCSI unknown devices
@


1.159
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.25 2004/06/03 18:36:59 grange Exp 
a48 2
# Call units:
#	tun*	Network tunnel driver
d96 1
d274 4
a498 4
	;;

tun*)
	M tun$U c 40 $U 600
@


1.158
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.24 2004/05/30 08:17:18 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
d81 1
d352 4
d582 11
a592 11
	R bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2
	R sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3
	R bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E
	R fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0
	R ss0 ss1 ch0 ses0 hotplug ptm gpr0 local wscons pci iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd mcd0
@


1.157
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.23 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
d82 1
d343 4
d581 2
a582 2
	R ss0 ss1 ch0 ses0 ptm gpr0 local wscons pci iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.156
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
d417 1
a417 1
	R uscanner0 urio0 usb0 usb1
@


1.155
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d53 2
a54 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.154
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.22 2004/03/12 04:54:05 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d53 2
a54 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d467 6
a472 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d474 1
a474 1
	while [ $n -lt 16 ]
d476 2
a477 2
		nam=$name$(hex $n)
		off=$(($U*16))
d574 9
a582 9
	R bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H xfs0 ss0 ss1 ch0 ses0 ptm gpr0 local wscons pci iop0
	R iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 music0 speaker audio0 wdt0 wt0 uk0
	R random joy0 joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 apm crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd mcd0
@


1.153
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.21 2004/02/16 19:01:01 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
d66 1
a66 1
#	usbs	All USB devices
d415 1
a415 1
usbs)
d573 1
a573 1
	R iop1 usbs rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
@


1.152
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d36 1
a36 1
#	mcd*	Mitsumi cdrom drives
d39 1
a39 1
#	sd*	SCSI disks
d45 1
a45 1
#	wt*		Archive/Wangtek QIC-cartridge tape drives
@


1.151
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.20 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 7
#	ramdisk	devices to be put on ramdisk-based media
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	wt*		QIC-interface (e.g. not SCSI) 3M cartridge tape
#	st*	SCSI tapes
#	ch*	SCSI media changer
d33 2
a34 1
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
a35 2
#	sd*	SCSI disks
#	cd*	SCSI cdrom drives
d37 1
a37 1
#	vnd*	"file" pseudo-disks
d39 16
a54 2
#	ccd*	concatenated disk devices
#	raid*	RAIDframe disk devices
d56 2
a57 2
#	ttyC0	wscons screen 0
#	ttyC-F*	wscons virtual consoles
a60 1
#	mouse	mouse (provides events, for X11)
a61 7
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	ttyc*	Cyclades serial ports
# Pseudo terminals:
#	ptm	pty master device
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d63 1
a64 1
#	lpa*	interruptless lp
d66 3
a68 1
#	usb*	Bus control devices used by usbd for attach/detach
a69 1
#	ugen*	Generic device
d72 1
a72 1
#	ttyU*	Serial ports
a73 1
# Call units:
d75 13
a87 2
#	fd	makes fd/* for the fdescfs
#	crypto	hardware crypto access driver
d89 5
a93 12
#	bpf*	Berkeley Packet Filter
#	speaker	pc speaker
#	lkm	loadable kernel modules interface
#	audio*	audio device
#	rmidi*	raw midi devices
#	music*	midi devices
#	apm		power management device
#	tun*	network tunnel driver
#	joy*	joystick driver
#	pcmcia*	PCMCIA card drivers
#	*random	inkernel random data source
#	uk*	SCSI Unknown device
d95 5
a99 13
#	ses*	SES/SAF-TE SCSI devices
#	xfs*	XFS filesystem devices
#	bktr*	video capturing
#	tuner*	tuner device
#	wdt0	watchdog timer
#	pctr*	PC Performance Tuning Register access device
#	pci	PCI bus device
#	iop*	I2O controller device
#	radio*	FM tuner device
#	systrace*	system call tracing device
#	gpr*	gpr400 pcmcia device
#	usbs	make USB devices
#
d257 2
a258 7
mouse*)
	name=${i##mouse-}
	if [ ! -c $name ]; then
		$0 $name	# make the appropriate device
	fi
	RMlist="$RMlist mouse"
	MKlist="$MKlist;ln -s $name mouse"
d261 2
a262 3
usbs)
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1
d265 2
a266 27
gpr*)
	M gpr$U c 80 $U
	;;

systrace)
	M systrace c 78 0 644
	;;

radio*)
	M radio$U     c 76 $U
	MKlist="$MKlist;[ -e radio ] || ln -s radio$U radio"
	;;

iop*)
	M iop$U c 75 $U 660
	;;

pci)
	M pci c 72 0 600
	;;

pctr)
	M pctr c 46 0 644
	;;

wdt0)
	M wdt$U c 55 $U 440 operator
d273 2
a274 10
bktr*)
	M bktr$U c 49 $U 644
	;;

xfs*)
	M xfs$U c 51 $U 600
	;;

ses*)
	M ses$U c 24 $U 640 operator
d285 6
a290 2
uk*)
	M uk$U c 20 $U 640 operator
d302 11
a312 2
joy*)
	M joy$U c 26 $U 666
d315 2
a316 2
tun*)
	M tun$U c 40 $U 600
d319 2
a320 3
apm*)
	M apm	c 21 0 644
	M apmctl	c 21 8 644
d330 10
a339 2
rmidi*)
	M rmidi$U c 52 $U 666
d342 2
a343 9
audio*)
	M sound$U	c 42 $U
	M mixer$U	c 42 $(($U+16))
	M audio$U	c 42 $(($U+128))
	M audioctl$U	c 42 $(($U+192))
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d346 4
a349 2
lkm)
	M lkm c 28 0 640 _lkm
d352 2
a353 2
speaker)
	M speaker c 27 0 600
d360 2
a361 2
pf*)
	M pf c 73 0 600
d364 9
a372 2
crypto)
	M crypto c 70 0
d375 3
a377 4
fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 22 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
d384 3
a386 4
ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 66 $o 660 dialer uucp
d397 4
d409 4
a412 2
uhid*)
	M uhid$U c 62 $U 660
d415 3
a417 3
usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 61 $U 660
d428 34
d484 4
d495 7
a501 2
wsmouse*)
	M wsmouse$U c 68 $U 600
d504 8
a511 3
wsmux|wsmouse|wskbd)
	M wsmouse c 69 0 600
	M wskbd c 69 1 600
d514 2
a515 2
wskbd*)
	M wskbd$U c 67 $U 600
d518 3
a520 19
tty[C-F]*)
	U=${i##tty[C-F]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 12 $(( 16#$U + $m )) 600;;
	cfg) M tty${n}cfg c 12 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
a526 5
vnd*)
	dodisk vnd $U 14 41 $U 0
	dodisk svnd $U 14 41 $U 2048
	;;

a530 4
cd*)
	dodisk2 cd $U 6 15 $U 0
	;;

d559 2
a560 21
ch*)
	M ch$U c 17 $U 660 operator
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
	;;

wt*)
	name=wt
	n=$(($U*8)) m=$(($n+4))
	M $name$U	b 3 $n 640 operator
	M r$name$U	c 10 $n 640 operator
	M n$name$U	b 3 $m 640 operator
	M nr$name$U	c 10 $m 640 operator
d572 7
a578 7
	R fd0H xfs0 ss0 ss1 ch0 ses0 ptm gpr0 wscons pci iop0 iop1
	R usbs rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd mcd0
@


1.150
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.19 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.149
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d58 1
a58 1
#	tty*	set of 16 slave psuedo terminals
@


1.148
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.18 2004/01/12 22:18:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.147
log
@sync
@
text
@d57 1
d461 4
d583 2
a584 2
	R fd0H xfs0 ss0 ss1 ch0 ses0 gpr0 wscons pci iop0 iop1 usbs
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.146
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a602 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d611 1
a611 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.145
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.144
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.17 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d68 1
a68 1
#	utty*	Serial ports
d120 8
d268 1
a268 1
	R utty0 utty1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
d403 4
a406 2
utty*)
	M utty$U c 66 $U 660
@


1.143
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
d452 1
a452 1
	o=$(hextod $U)
@


1.142
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d54 1
a54 1
#	tty0*	NS16x50 serial ports
d120 1
a120 1
trunc()
d122 16
a137 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
d450 5
a454 3
tty0*)
	M tty$U c 8 $U 660 dialer uucp
	M cua$U c 8 $(($U+128)) 660 dialer uucp
@


1.141
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d486 1
a486 1
	dodisk svnd $U 14 41 $U 128
@


1.140
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.16 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.139
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d168 1
a168 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d200 1
a200 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.138
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d203 1
a203 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.137
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d365 1
a365 1
	M lkm c 28 0 640 kmem
@


1.136
log
@replace MAKEDEVs by auto-generated ones.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.15 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.135
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d570 2
a571 2
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1
	R raid2 raid3 std st0 st1 fd mcd0
@


1.134
log
@sync
@
text
@a85 1
#	altq/	ALTQ control interface
a363 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 74 $U 644
		U=$(($U+1))
	done
	;;

d570 1
a570 1
	R crypto pf altq pctr systrace wd0 wd1 wd2 wd3 raid0 raid1
@


1.133
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.14 2002/06/18 00:33:00 fgsch Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
@


1.132
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.13 2002/05/16 16:18:44 provos Exp 
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
d107 1
d264 4
d574 7
a580 7
	R fd0H xfs0 ss0 ss1 ch0 ses0 wscons pci iop0 iop1 usbs rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf altq pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd mcd0
@


1.131
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.130
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.12 2002/04/12 02:13:21 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp 
d107 1
d264 4
d575 2
a576 2
	R pf altq pctr wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0
	R st1 fd mcd0
@


1.129
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.11 2002/04/09 01:57:53 deraadt Exp 
d225 1
a225 1
	R st0 cd0 ttyC0 random
@


1.128
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d273 1
a273 1
	M pci c 72 0 664
@


1.127
log
@regen. some of these were missed previously.
@
text
@d6 1
a6 1
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.10 2002/02/25 01:17:08 todd Exp 
d224 1
a224 1
	R std bpf0 fd0 wd0 wd1 sd0 sd1 tty00 tty01 rd0
@


1.126
log
@random typo fix; ok deraadt@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d561 5
a565 5
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R xfs0 ss0 ss1 ch0 ses0 wscons pci iop0 iop1 usbs rmidi0
@


1.125
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.5 2002/02/17 05:14:30 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.122 2002/02/19 21:06:00 todd Exp $
d489 1
a489 1
	dodisk2 rd $U 17 17 $U 0
d567 5
a571 5
	R radio0 music0 speaker audio0 wdt0 wt0 uk0 rndrandom joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf altq pctr wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd mcd0
@


1.124
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.7 2002/02/21 13:34:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d224 2
a225 2
	R std bpf0 fd0 wd0 wd1 wd2 wd3 sd0 sd1 sd2 sd3 mcd0 random
	R tty00 tty01 tty02 tty03 rd0 st0 st1 wt0 cd0 cd1 ttyC0
d489 1
a489 1
	dodisk2 rd $U 17 47 $U 0
d565 1
a565 1
	R xfs0 ss0 ss1 ch0 ses0 bktr0 wscons pci iop0 iop1 usbs rmidi0
d567 1
a567 1
	R radio0 music0 speaker audio0 wdt0 wt0 uk1 uk0 random joy0
@


1.123
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.6 2002/02/21 13:08:22 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d489 1
a489 1
	dodisk2 rd $U 17 17 $U 0
d567 1
a567 1
	R radio0 music0 speaker audio0 wdt0 wt0 uk1 uk0 rndrandom joy0
@


1.122
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.5 2002/02/17 05:14:30 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
d224 2
a225 2
	R std bpf0 fd0 wd0 wd1 sd0 sd1 tty00 tty01 rd0
	R st0 cd0 ttyC0 random
d565 1
a565 1
	R xfs0 ss0 ss1 ch0 ses0 wscons pci iop0 iop1 usbs rmidi0
d567 1
a567 1
	R radio0 music0 speaker audio0 wdt0 wt0 uk0 rndrandom joy0
@


1.121
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
d56 1
a56 1
#	ttyC*	wscons virtual consoles
d467 8
a474 2
ttyC*)
	U=${i##ttyC}
d476 2
a477 2
	[0-9a-f]) M ttyC$U c 12 $(( 16#$U )) 600;;
	cfg) M ttyCcfg c 12 255 600;;
d483 3
a485 4
	R ttyCcfg
	R ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9
	R ttyCa ttyCb wsmux wskbd0 wskbd1 wskbd2 wskbd3
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3
@


1.120
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d37 1
a37 1
#	ramdisk	devices to be put on install floppies
a38 1
#	ramdisk	makes all devices for a ramdisk kernel
d51 1
a51 1
#	rd*	"ramdisk" pseudo-disks
d224 1
a224 1
	R std wt0 fd0 wd0 wd1 sd0 sd1 tty00 tty01 rd0
a552 5
	;;

ramdisk)
	R bpf0 std mcd0 st0 st1 cd0 cd1 sd0 sd1 sd2 sd3 wd0 wd1 wd2
	R wd3 rd0 wt0 ttyC0
@


1.119
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d562 11
a572 11
	R wscons pci iop0 iop1 usbs rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker
	R audio0 xfs0 wdt0 wt0 ss0 ss1 uk0 ses0 rndrandom joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf altq pctr tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B fd1C fd1D fd1E fd1F fd1G
	R fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H wd0 wd1 wd2 wd3
	R rd0 raid0 raid1 raid2 raid3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1
	R vnd2 vnd3 std cd0 cd1 ch0 st0 st1 pty0 pty1 pty2 fd mcd0 sd0
	R sd1 sd2 sd3 sd4
@


1.118
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.3 2002/02/09 16:59:50 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d302 3
a304 1
	M ss$U c 19 $U 440 operator
d433 6
a438 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d443 1
@


1.117
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
d46 1
a46 1
#	wd*	"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
@


1.116
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d581 2
a582 2
	R vnd2 vnd3 std cd0 cd1 ch0 st0 st1 pty0 pty1 fd mcd0 sd0 sd1
	R sd2 sd3 sd4
@


1.115
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
d159 1
@


1.114
log
@sync, and update, to make "ramdisk" target disk
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp 
d119 7
a125 7
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d128 1
d140 1
d156 1
d170 1
d184 1
d186 6
a191 6
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
d193 1
d214 1
a434 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d514 9
a522 9
	*A)		typnam=0; typnum=0;;
	*B)		typnum=1;;
	*C)		typnum=2;;
	*D)		typnum=3;;
	*E)		typnum=4;;
	*F)		typnum=5;;
	*G)		typnum=6;;
	*H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
d612 2
a613 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
@


1.113
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.2 2002/01/23 07:53:01 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
d37 1
a37 1
#	floppy	devices to be put on install floppies
d216 2
a217 2
floppy)
	R std wt0 fd0 wd0 wd1 sd0 sd1 tty00 tty01
@


1.112
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp 
d209 1
d253 1
a253 1
	R urio0 usb0 usb1
d257 1
a257 1
	M radio$U     c 76 $U 644
d572 2
a573 2
	R fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H rd0 raid0 raid1
	R raid2 raid3 wd0 wd1 wd2 wd3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1
@


1.111
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.1 2002/01/07 07:52:35 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp 
d566 9
a574 8
	R audio0 xfs0 wdt0 wt0 ss0 uk0 ses0 rndrandom joy0 joy1 lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto pf altq
	R pctr tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H rd0 raid0 raid1 raid2
	R raid3 wd0 wd1 wd2 wd3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 std cd0 ch0 st0 pty0 fd mcd0 sd0 sd1 sd2 sd3 sd4
@


1.110
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp 
d39 1
a219 6
ramdisk)
	R std lkm tty00 tty01 tty02 tty03 ttyC0 random
	R wt0 fd0 rd0 wd0 wd1 wd2 wd3 bpf0
	R sd0 sd1 sd2 sd3 st0 st1 cd0 cd1 mcd0
	;;

d556 5
@


1.109
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.15 2002/01/08 05:10:38 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp 
d256 2
a257 2
	R usb0 usb1 urio uscanner0 uhid0 uhid1 uhid2 uhid3
	R ulpt0 ulpt1 ugen0 ugen1 utty0 utty1
d564 10
a573 13
	R std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1 st0 st1 ch0 cd0 cd1
	R mcd0 vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 rd0
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R tun0 tun1 tun2 tun3 pctr bktr0 altq pf crypto apm
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	R tty00 tty01 tty02 tty03 lkm lpa0 lpt0 lpa1 lpt1 lpa2 lpt2
	R joy0 joy1 random ses0 uk0 uk1 ss0 ss1 wt0 wdt0 xfs0 audio0
	R speaker music0 radio0 tuner0
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 usbs
	R  iop0 iop1 pci wscons
d576 1
a576 1
sd*|ccd*|raid*|wd*)
d578 1
d580 1
a581 2
	raid*) dodisk raid $U 19 54 $U 0;;
	wd*) dodisk wd $U 0 3 $U 0;;
@


1.108
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.14 2002/01/08 03:26:04 todd Exp 
d364 1
a364 1
	M speaker$U c 27 $U 600
d574 1
a574 1
	R music0 radio0 tuner0
@


1.107
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.9 2002/01/07 21:58:54 todd Exp 
d157 2
a158 1
	for d in a b c d e f g h i j k l m n o p
d570 1
a570 3
	R tun0 tun1 tun2 tun3 pctr bktr0 altq pf crypto apm lkm
	R iop0 iop1 lpa0 lpt0 lpa1 lpt1 lpa2 lpt2 joy0 joy1 random
	R ses0 uk0 uk1 ss0 ss1 wt0 wdt0
d572 3
a574 1
	R tty00 tty01 tty02 tty03 xfs0 audio0 music0 radio0 tuner0
d576 1
a576 1
	R pci wscons
@


1.106
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.8 2002/01/07 07:50:48 todd Exp 
a464 4
mouse)
	M mouse c 30 0 666 
	;;

d575 1
a575 1
	R wscons
@


1.105
log
@Add USB scanner device node to macppc and i386, both of these had the
uscanner compiled into the kernel, but no device node, or even entry
in the character device switch table.
ok todd@@
@
text
@d3 2
a4 2
#	$OpenBSD: MAKEDEV,v 1.104 2001/10/04 22:38:13 gluk Exp $
#	$NetBSD: MAKEDEV,v 1.40 1996/03/31 00:50:47 perry Exp $
d6 3
a8 2
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
d10 1
a10 1
# Written and contributed by W. Jolitz 12/90
d12 2
a13 13
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d15 18
a32 1
#	@@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
d36 1
a36 1
#		Tries to make the 'standard' number of each type.
a39 2
#	usbs	make USB devices
#
d41 1
a41 1
#	wt*	QIC-interfaced (e.g. not SCSI) 3M cartridge tape
d43 1
a43 1
#
d46 1
a46 1
#	fd*	"floppy" disk drives (3 1/2", 5 1/4")
d48 2
a49 2
#	cd*	SCSI CD-ROM
#	mcd*	Mitsumi CD-ROM
d52 1
a52 1
#	ccd*	contatenated disk devices
a53 1
#
d55 7
a61 9
#	ttyC0	pccons or wscons screen 0
#	ttyC*	wscons
#
# Pointing devices: XXX no longer necessary with wsmouse drivers XXX
#	mms*	Microsoft bus mouse
#	lms*	Logitech bus mouse
#	pms*	PS/2 mouse
#	mouse-*	"mouse link"				(XXX)
# 
d63 1
a63 1
#	tty*	PC COM ports
a64 2
#	ttyZ*	Cyclades-Ze serial ports
#
d66 2
a67 2
#	pty*	set of 16 master and slave pseudo terminals
#
d69 1
a69 1
#	lpt*	stock lp
a70 1
#
d74 1
a76 1
#	ugen*	Generic device
d78 1
a78 1
#
a79 1
#
d81 5
a85 4
#	ch*	SCSI media changer
#	fd	file descriptors
#	bpf*	packet filter
#	speaker	pc speaker				(XXX - installed)
d87 1
d89 3
a91 2
#	radio*	FM tuner device
#	apm	power management device
d95 3
a97 2
#	*random	inkernel random number generator
#	uk*	"unknown SCSI" devices
a98 1
#	ss*	SCSI scanners
d100 2
a101 2
#	bktr0	video capturing
#	tuner0	tuner device
d103 5
a107 2
#	altq	ALTQ control interface
#	iop	I2O controller device
d109 2
d112 2
a113 3
PATH=/sbin:/usr/sbin:/bin:/usr/bin
umask 77
this=$0
d115 1
a115 1
hex ()
d118 1
a118 1
		[0-9]) echo -n $1 ;;
d127 1
a127 2

dodisk ()
d129 8
a136 36
	rm -f ${1}${2}? r${1}${2}?
	n=$(( $5*16 + $6 ))
	mknod ${1}${2}a  b $3 $n
	mknod ${1}${2}b  b $3 $(( $n + 1 ))
	mknod ${1}${2}c  b $3 $(( $n + 2 ))
	mknod ${1}${2}d  b $3 $(( $n + 3 ))
	mknod ${1}${2}e  b $3 $(( $n + 4 ))
	mknod ${1}${2}f  b $3 $(( $n + 5 ))
	mknod ${1}${2}g  b $3 $(( $n + 6 ))
	mknod ${1}${2}h  b $3 $(( $n + 7 ))
	mknod ${1}${2}i  b $3 $(( $n + 8 ))
	mknod ${1}${2}j  b $3 $(( $n + 9 ))
	mknod ${1}${2}k  b $3 $(( $n + 10 ))
	mknod ${1}${2}l  b $3 $(( $n + 11 ))
	mknod ${1}${2}m  b $3 $(( $n + 12 ))
	mknod ${1}${2}n  b $3 $(( $n + 13 ))
	mknod ${1}${2}o  b $3 $(( $n + 14 ))
	mknod ${1}${2}p  b $3 $(( $n + 15 ))
	mknod r${1}${2}a c $4 $n
	mknod r${1}${2}b c $4 $(( $n + 1 ))
	mknod r${1}${2}c c $4 $(( $n + 2 ))
	mknod r${1}${2}d c $4 $(( $n + 3 ))
	mknod r${1}${2}e c $4 $(( $n + 4 ))
	mknod r${1}${2}f c $4 $(( $n + 5 ))
	mknod r${1}${2}g c $4 $(( $n + 6 ))
	mknod r${1}${2}h c $4 $(( $n + 7 ))
	mknod r${1}${2}i c $4 $(( $n + 8 ))
	mknod r${1}${2}j c $4 $(( $n + 9 ))
	mknod r${1}${2}k c $4 $(( $n + 10 ))
	mknod r${1}${2}l c $4 $(( $n + 11 ))
	mknod r${1}${2}m c $4 $(( $n + 12 ))
	mknod r${1}${2}n c $4 $(( $n + 13 ))
	mknod r${1}${2}o c $4 $(( $n + 14 ))
	mknod r${1}${2}p c $4 $(( $n + 15 ))
	chown root.operator ${1}${2}[a-p] r${1}${2}[a-p]
	chmod 640 ${1}${2}[a-p] r${1}${2}[a-p]
a137 1

d153 21
d175 33
a207 1
for i
d209 2
d212 5
a216 2
unit=`unt $i`
[ "$unit" ] || unit=0
d218 5
a222 1
case $i in
d224 14
a237 20
all)
	sh $this std fd wt0 wd0 wd1 wd2 wd3 sd0 sd1 sd2
	sh $this tty00 tty01 tty02 tty03 pty0 pty1 st0 st1 ch0 cd0 cd1
	sh $this ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	sh $this mcd0 vnd0 vnd1 lpa0 lpa1 ccd0 ccd1 ccd2 ccd3
	sh $this raid0 raid1 raid2 raid3 lpt0 lpt1 lpt2
	sh $this ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9
	sh $this ttyCa ttyCb
	sh $this wscons
	sh $this pf tun0 tun1 tun2
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $this speaker lkm audio0 radio0 joy0 joy1 apm local
	sh $this random ses0 uk0 uk1 ss0 ss1 pctr bktr0 tuner0 wdt0
	sh $this fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H 
	sh $this fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	sh $this xfs0 music0 altq
	sh $this rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	sh $this usbs crypto iop0 iop1
# MISSING:
#	sh $this mouse-?
d240 3
a242 3
floppy)
	sh $this std wt0 fd0 wd0 wd1 sd0 sd1 tty00 tty01
	sh $this st0 cd0 ttyC0 random
d245 7
a251 4
ramdisk)
	sh $this std lkm tty00 tty01 tty02 tty03 ttyC0 random
	sh $this wt0 fd0 rd0 wd0 wd1 wd2 wd3 bpf0
	sh $this sd0 sd1 sd2 sd3 st0 st1 cd0 cd1 mcd0
d255 15
a269 5
	sh $this usb0 usb1
	sh $this uhid0 uhid1 uhid2 uhid3
	sh $this ulpt0 ulpt1
	sh $this urio0 uscanner0
	sh $this utty0 utty1
d272 2
a273 15
std)
	rm -f console drum mem kmem null xf86 zero io tty klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 4 0	; chmod 640 drum ; chown root.kmem drum
	mknod mem		c 2 0	; chmod 640 mem	; chown root.kmem mem
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod null		c 2 2	; chmod 666 null
	mknod xf86		c 2 4   ; chmod 600 xf86 ; chown root xf86
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 7 0	; chmod 600 klog
	mknod stdin		c 22 0	; chmod 666 stdin
	mknod stdout		c 22 1	; chmod 666 stdout
	mknod stderr		c 22 2	; chmod 666 stderr
	mknod ksyms		c 50 0  ; chmod 640 ksyms ; chown root.kmem ksyms
d276 2
a277 3
crypto)
	rm -f crypto
	mknod crypto		c 70 0	; chmod 666 crypto	
d280 2
a281 5
iop*)
	rm -f iop$unit
	mknod iop$unit c 75 $unit
	chown root.wheel iop$unit
	chmod 660 iop$unit
d284 2
a285 5
usb*)
	rm -f usb$unit
	mknod usb$unit c 61 $unit
	chown root.wheel usb$unit
	chmod 660 usb$unit
d288 2
a289 5
uhid*)
	rm -f uhid$unit
	mknod uhid$unit c 62 $unit
	chown root.wheel uhid$unit
	chmod 660 uhid$unit
d292 2
a293 5
ulpt*)
	rm -f ulpt$unit
	mknod ulpt$unit c 64 $unit
	chown root.wheel ulpt$unit
	chmod 660 ulpt$unit
d296 4
a299 5
urio*)
	rm -f urio$unit
	mknod urio$unit c 65 $unit
	chown root.wheel urio$unit
	chmod 660 urio$unit
d302 2
a303 5
uscanner*)
	rm -f uscanner$unit
	mknod uscanner$unit c 77 $unit
	chown root.wheel uscanner$unit
	chmod 660 uscanner$unit
d306 3
a308 2
ugen*)
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d310 2
a311 4
		rm -f ugen$unit.$j
		mknod ugen$unit.$j c 63 $(( $unit * 16 + $j ))
		chown root.wheel ugen$unit.$j
		chmod 660 ugen$unit.$j
d315 11
a325 5
utty*)
	rm -f utty$unit
	mknod utty$unit c 66 $unit
	chown root.wheel utty$unit
	chmod 660 utty$unit
d328 5
a332 4
ttyCcfg)
	rm -f ttyCcfg
	mknod ttyCcfg c 12 255
	chown root.wheel ttyCcfg
d335 2
a336 10
ttyC*)
	unit=${i##ttyC}
	case $unit in
	[0123456789abcdef])	;;
	*)			echo bad unit $unit for $i; exit 1;;
	esac
	num=$(( 16#$unit ))
	rm -f ttyC$unit
	mknod ttyC$unit c 12 $num
	chown root.wheel ttyC$unit
d339 9
a347 5
wscons)
	sh $this wskbd0 wskbd1 wskbd2 wskbd3
	sh $this wsmouse0 wsmouse1 wsmouse2 wsmouse3
	sh $this ttyCcfg
	sh $this wsmux
d350 6
a355 4
wskbd*)
	rm -f wskbd$unit
	mknod wskbd$unit c 67 $unit
	chown root.wheel wskbd$unit
d358 2
a359 4
wsmouse*)
	rm -f wsmouse$unit
	mknod wsmouse$unit c 68 $unit
	chown root.wheel wsmouse$unit
d362 2
a363 6
wsmux|wsmouse|wskbd)
	rm -f wsmouse wskbd
	mknod wsmouse c 69 0
	mknod wskbd c 69 1
	chown root.wheel wsmouse wskbd
	chmod 600 wsmouse wskbd
d366 2
a367 6
ttyc*)
	rm -f ttyc$unit cuac$unit
	mknod ttyc$unit c 38 $unit
	mknod cuac$unit c 38 $(( $unit + 128 ))
	chown uucp.dialer ttyc$unit cuac$unit
	chmod 660 ttyc$unit cuac$unit
d370 2
a371 8
ttyZ*)
	major=71
	minor=$unit
	rm -f ttyZ$minor cuaZ$minor
	mknod ttyZ$minor c $major $(($minor  ))
	mknod cuaZ$minor c $major $(($minor + 128 ))
	chown uucp.wheel ttyZ$minor cuaZ$minor
	chmod 600 ttyZ$minor cuaZ$minor
d374 2
a375 8
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 22 $n; n="$(( $n + 1 ))"; done )
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
d378 4
a381 13
wt*)
	umask 2
	case $i in
	wt*) name=wt;  chr=10; blk=3;;
	esac
	rm -f $name$unit n$name$unit r$name$unit nr$name$unit
	mknod $name$unit	b $blk $(( $unit * 8 + 0 ))
	mknod n$name$unit	b $blk $(( $unit * 8 + 4 ))
	mknod r$name$unit	c $chr $(( $unit * 8 + 0 ))
	mknod nr$name$unit	c $chr $(( $unit * 8 + 4 ))
	chown root.operator $name$unit n$name$unit r$name$unit nr$name$unit
	chmod 640 $name$unit n$name$unit r$name$unit nr$name$unit
	umask 77
d384 2
a385 59
fd*)
	umask 2
	unit=${i##fd}
	typnam=${unit#?}
	unit=${unit%%[!0-9]}
	case $typnam in
	"")	typnum=0;;	# no type specified, assume A
	A)	typnam=; typnum=0;;
	B)	typnum=1;;
	C)	typnum=2;;
	D)	typnum=3;;
	E)	typnum=4;;
	F)	typnum=5;;
	G)	typnum=6;;
	H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $unit in
	0|1)	blk=2; chr=9;;
	*)	echo bad unit $unit for $i; exit 1;;
	esac
	nam=fd${unit}${typnam}
	rm -f ${nam}? r${nam}?
	basenum=$(( $unit * 128 + $typnum * 16 ))
	mknod ${nam}a	b $blk $(( $basenum + 0 ))
	mknod ${nam}b	b $blk $(( $basenum + 1 ))
	mknod ${nam}c	b $blk $(( $basenum + 2 ))
	#mknod ${nam}d	b $blk $(( $basenum + 3 ))
	#mknod ${nam}e	b $blk $(( $basenum + 4 ))
	#mknod ${nam}f	b $blk $(( $basenum + 5 ))
	#mknod ${nam}g	b $blk $(( $basenum + 6 ))
	#mknod ${nam}h	b $blk $(( $basenum + 7 ))
	#mknod ${nam}i	b $blk $(( $basenum + 8 ))
	#mknod ${nam}j	b $blk $(( $basenum + 9 ))
	#mknod ${nam}k	b $blk $(( $basenum + 10 ))
	#mknod ${nam}l	b $blk $(( $basenum + 11 ))
	#mknod ${nam}m	b $blk $(( $basenum + 12 ))
	#mknod ${nam}n	b $blk $(( $basenum + 13 ))
	#mknod ${nam}o	b $blk $(( $basenum + 14 ))
	#mknod ${nam}p	b $blk $(( $basenum + 15 ))
	mknod r${nam}a	c $chr $(( $basenum + 0 ))
	mknod r${nam}b	c $chr $(( $basenum + 1 ))
	mknod r${nam}c	c $chr $(( $basenum + 2 ))
	#mknod r${nam}d	c $chr $(( $basenum + 3 ))
	#mknod r${nam}e	c $chr $(( $basenum + 4 ))
	#mknod r${nam}f	c $chr $(( $basenum + 5 ))
	#mknod r${nam}g	c $chr $(( $basenum + 6 ))
	#mknod r${nam}h	c $chr $(( $basenum + 7 ))
	#mknod r${nam}i	c $chr $(( $basenum + 8 ))
	#mknod r${nam}j	c $chr $(( $basenum + 9 ))
	#mknod r${nam}k	c $chr $(( $basenum + 10 ))
	#mknod r${nam}l	c $chr $(( $basenum + 11 ))
	#mknod r${nam}m	c $chr $(( $basenum + 12 ))
	#mknod r${nam}n	c $chr $(( $basenum + 13 ))
	#mknod r${nam}o	c $chr $(( $basenum + 14 ))
	#mknod r${nam}p	c $chr $(( $basenum + 15 ))
	chown root.operator ${nam}[a-p] r${nam}[a-p]
	chmod 640 ${nam}[a-p] r${nam}[a-p]
	umask 77
d388 2
a389 10
ccd*|sd*|wd[0-9]*|raid*)
	umask 2
	case $i in
	ccd*)	name=ccd;	blk=16; chr=18;;
	raid*)	name=raid;	blk=19; chr=54;;
	sd*)	name=sd;	blk=4;  chr=13;;
	wd*)	name=wd;	blk=0;  chr=3;;
	esac
	dodisk $name $unit $blk $chr $unit 0
	umask 77
d392 2
a393 6
vnd*)
	umask 2
	blk=14; chr=41;
	dodisk  vnd $unit $blk $chr $unit 0
	dodisk svnd $unit $blk $chr $unit 128
	umask 77
d396 2
a397 7
tty0*)
	unit=${i##tty0}
	rm -f tty0$unit cua0$unit
	mknod tty0$unit c 8 $unit
	mknod cua0$unit c 8 $(( $unit + 128 ))
	chown uucp.dialer tty0$unit cua0$unit
	chmod 660 tty0$unit cua0$unit
d400 3
a402 23
pty*)
	case $unit in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i; continue ;;
	esac
	umask 0
	n=0
	while [ $n -lt 16 ]
d404 1
a404 5
		nam=$name`hex $n`
		rm -f {tty,pty}$nam
		mknod tty$nam c 5 "$(( $offset + $n ))"
		mknod pty$nam c 6 "$(( $offset + $n ))"
		let n=n+1
a405 23
	umask 77
	;;
st*)
	umask 2
	case $i in
	st*) name=st;  chr=14; blk=5;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	n=$(( $unit*16 ))
	mknod $name$unit	b $blk $n
	mknod n$name$unit	b $blk $(( $n + 1 ))
	mknod e$name$unit	b $blk $(( $n + 2 ))
	mknod en$name$unit	b $blk $(( $n + 3 ))
	mknod r$name$unit	c $chr $n
	mknod nr$name$unit	c $chr $(( $n + 1 ))
	mknod er$name$unit	c $chr $(( $n + 2 ))
	mknod enr$name$unit	c $chr $(( $n + 3 ))
	chown root.operator $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	chmod 660 $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	umask 77
d408 2
a409 10
ch*)
	umask 2
	case $i in
	ch*) name=ch;  chr=17;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.operator $name$unit
	chmod 660 $name$unit
	umask 77
d412 3
a414 16
cd*|mcd*|rd*)
	umask 2
	case $i in
	rd*)  name=rd;  blk=17; chr=47;;
	cd*)  name=cd;  blk=6;  chr=15;;
	mcd*) name=mcd; blk=7;  chr=39;;
	esac
	rm -f $name$unit? r$name$unit?
	n=$(( $unit*16 ))
	mknod ${name}${unit}a	b $blk $n
	mknod ${name}${unit}c	b $blk $(( $n + 2 ))
	mknod r${name}${unit}a	c $chr $n
	mknod r${name}${unit}c	c $chr $(( $n + 2 ))
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	umask 77
d419 2
a420 2
	lpt*) name=lpt; flags=0;;
	lpa*) name=lpa; flags=128;;
d422 1
a422 3
	rm -f $name$unit
	mknod $name$unit c 16 $(( $unit + $flags ))
	chown root.wheel $name$unit
d425 20
a444 4
bpf*|tun[0-9]*)
	case $i in
	bpf*) name=bpf; chr=23;;
	tun*) name=tun; chr=40;;
d446 8
a453 16
	rm -f $name$unit
	mknod $name$unit c $chr $unit
	chown root.wheel $name$unit
	;;

pf)
	rm -f pf
	mknod pf c 73 0
	chown root.wheel pf
	chmod 600 pf
	;;

speaker)					# (XXX - installed)
	rm -f speaker
	mknod speaker c 27 0
	chown root.wheel speaker
d456 3
a458 5
lkm)
	rm -f lkm
	mknod lkm c 28 0
	chown root.kmem lkm
	chmod 640 lkm
d461 2
a462 17
audio*)
	major=42
	audio=audio$unit
	sound=sound$unit
	mixer=mixer$unit
	audioctl=audioctl$unit
	rm -f $sound $audio $mixer $audioctl
	mknod $sound    c $major $unit
	mknod $audio    c $major $(( $unit + 128 ))
	mknod $mixer    c $major $(( $unit + 16 ))
	mknod $audioctl c $major $(( $unit + 192 ))
	chown root.wheel $audio $sound $mixer $audioctl
	chmod 666 $audio $sound $mixer $audioctl
	[ -e audio ] || ln -s $audio audio
	[ -e mixer ] || ln -s $mixer mixer
	[ -e sound ] || ln -s $sound sound
	[ -e audioctl ] || ln -s $audioctl audioctl
d465 2
a466 8
radio*)
	major=76
	radio=radio$unit
	rm -f $radio
	mknod $radio c $major $unit
	chown root.wheel $radio
	chmod 644 $radio
	[ -e radio ] || ln -s $radio radio
d469 3
a471 5
joy*)
	rm -f joy$unit
	mknod joy$unit c 26 $unit
	chown root.wheel joy$unit
	chmod 666 joy$unit
d474 2
a475 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit
	chown root.wheel xfs$unit
	chmod 600 xfs$unit
d478 7
a484 7
rmidi*)
	major=52
	rmidi=rmidi$unit
	rm -f $rmidi
	mknod $rmidi c $major $unit
	chown root.wheel $rmidi
	chmod 666 $rmidi
d487 5
a491 11
music*)
	major=53
	music=music$unit
	sequencer=sequencer$unit
	rm -f $music $sequencer
	mknod $music     c $major $(( $unit + 0 ))
	mknod $sequencer c $major $(( $unit + 128 ))
	chown root.wheel $music $sequencer
	chmod 666 $music $sequencer
	[ -e music ] || ln -s $music music
	[ -e sequencer ] || ln -s $sequencer sequencer
d494 3
a496 50
apm*)
	rm -f apm apmctl
	mknod apm c 21 0
	mknod apmctl c 21 8
	chown root.wheel apm apmctl
	chmod 644 apm apmctl
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 45 0
	mknod srandom c 45 1
	mknod urandom c 45 2
	mknod prandom c 45 3
	mknod arandom c 45 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;

#pcmcia*)
#	rm -f pcmcia/bus? pcmcia/chip? pcmcia/slot*
#	mkdir -p pcmcia
#	mknod pcmcia/bus0 c 25 128
#	mknod pcmcia/bus1 c 25 129
#	mknod pcmcia/bus2 c 25 130
#	mknod pcmcia/bus3 c 25 131
#	mknod pcmcia/chip0 c 25 64
#	mknod pcmcia/chip1 c 25 65
#	mknod pcmcia/chip2 c 25 66
#	mknod pcmcia/chip3 c 25 67
#	mknod pcmcia/slot0 c 25 0
#	mknod pcmcia/slot1 c 25 1
#	mknod pcmcia/slot2 c 25 2
#	mknod pcmcia/slot3 c 25 3
#	mknod pcmcia/slot4 c 25 4
#	mknod pcmcia/slot5 c 25 5
#	mknod pcmcia/slot6 c 25 6
#	mknod pcmcia/slot7 c 25 7
#	mknod pcmcia/slot8 c 25 8
#	mknod pcmcia/slot9 c 25 9
#	mknod pcmcia/slot10 c 25 10
#	mknod pcmcia/slot11 c 25 11
#	mknod pcmcia/slot12 c 25 12
#	mknod pcmcia/slot13 c 25 13
#	mknod pcmcia/slot14 c 25 14
#	mknod pcmcia/slot15 c 25 15
#	chown -R root.wheel pcmcia
#	chmod 700 pcmcia
#	chmod 600 pcmcia/*
#	;;
d498 3
a500 5
uk*)
	rm -f uk$unit
	mknod uk$unit c 20 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
d503 2
a504 5
ses*)
	rm -f ses$unit
	mknod ses$unit c 24 $unit
	chown root.operator ses$unit
	chmod 640 ses$unit
d507 2
a508 8
ss*)
	rm -f ss$unit
	mknod ss$unit c 19 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
d511 26
a536 5
pctr)
	rm -f pctr
	mknod pctr c 46 0
	chown root.wheel pctr
	chmod 0644 pctr
d539 2
a540 5
bktr*)
	rm -f bktr$unit
	mknod bktr$unit c 49 $unit
	chown root.wheel bktr$unit
	chmod 0644 bktr$unit
d543 8
a550 19
tuner*)
	rm -f tuner$unit
	mknod tuner$unit c 49 $(( unit + 16 ))
	chown root.wheel tuner$unit
	chmod 0644 tuner$unit
	;;

wdt*)
	rm -f wdt$unit
	mknod wdt$unit c 55 $unit
	chown root.operator wdt$unit
	chmod 0440 wdt$unit
	;;

pci*)
	rm -f pci
	mknod pci c 72 0
	chown root.kmem pci
	chmod 664 pci
d553 7
a559 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 74 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
d563 26
a588 2
	umask 0
	test -s $this.local && sh $this.local
d592 1
a592 1
	echo no such device
a593 1

d596 31
@


1.104
log
@/dev/radio
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.103 2001/09/21 18:21:12 brad Exp $
d224 1
a224 1
	sh $this urio0
d283 7
@


1.103
log
@change the behavior of the midi related device filename creation to follow
the same behavior as audio devices.
--
Brought to my attention by and reviewed by: fries@@
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.102 2001/07/03 22:52:30 niklas Exp $
d89 1
d198 1
a198 1
	sh $this speaker lkm audio0 joy0 joy1 apm local
d622 10
@


1.102
log
@Add two I2O devices as iop[01]
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.101 2001/06/28 02:58:54 kjc Exp $
d201 1
a201 1
	sh $this xfs0 music altq
a646 3
	[ "$unit" = "0" ] && n= || n=$unit
	music=music$n
	sequencer=sequencer$n
d648 2
d655 2
@


1.101
log
@add an entry for ALTQ.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.100 2001/06/24 23:36:02 kjell Exp $
d102 1
d203 1
a203 1
	sh $this usbs crypto
d247 7
@


1.100
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.99 2001/06/24 04:23:50 matthieu Exp $
d101 1
d200 1
a200 1
	sh $this xfs0 music
d758 13
@


1.99
log
@let other read /dev/pci (so that they can call ioctl(..., PCIOCREAD, ...))
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.98 2001/06/23 03:34:34 matthieu Exp $
d193 1
a193 1
	sh $this tun0 tun1 tun2
d573 7
@


1.98
log
@add /dev/pci
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.97 2001/06/21 13:24:02 nate Exp $
d749 1
a749 1
	chmod 660 pci
@


1.97
log
@Add ttyZ for cyclades-Z cards
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.96 2001/06/04 17:59:48 millert Exp $
d743 7
@


1.96
log
@/dev/io hasn't worked in years
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.95 2001/06/04 15:29:00 brad Exp $
d63 1
d343 10
@


1.95
log
@fix audio device creation.
--
Reported by & fix tested by: Denis A. Doroshenko <d.doroshenko@@omnitel.net>
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.94 2001/05/30 02:11:17 deraadt Exp $
a232 1
	mknod io		c 2 14	; chmod 640 io ; chown root.kmem io
@


1.94
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.93 2001/05/14 07:42:18 deraadt Exp $
d580 4
a583 4
	audio=audio$n
	sound=sound$n
	mixer=mixer$n
	audioctl=audioctl$n
@


1.93
log
@various cleanups
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.92 2001/05/13 15:39:23 deraadt Exp $
d192 1
a192 1
	sh $this ipl tun0 tun1 tun2
a562 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 44 0
	mknod ipnat c 44 1
	mknod ipstate c 44 2
	mknod ipauth c 44 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.92
log
@initial cut at /dev/crypto support.  takes original mbuf "try, and discard
if we fail" semantics and extends to two varients of data movement: mbuf,
or an iovec style block.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.91 2001/04/17 16:20:24 todd Exp $
d225 1
a225 1
	rm -f console drum mem kmem xf86 null zero io tty klog stdin stdout stderr ksyms
d228 1
a229 1
	mknod mem		c 2 0	; chmod 640 mem	; chown root.kmem mem
d243 1
d453 1
a453 1
	rm -f com0$unit tty0$unit cua0$unit
a586 35
#mms*|lms*)
#	case $i in
#	mms*) name=mms; chr=35;;
#	lms*) name=lms; chr=36;;
#	esac
#	rm -f $name$unit
#	mknod $name$unit c $chr $unit
#	chown root.wheel $name$unit
#	;;

#pms*)
#	rm -f pms${unit}
#	rm -f psm${unit}
#	mknod pms${unit} c 37 0
#	mknod psm${unit} c 37 1
#	chown root.wheel pms${unit}
#	chown root.wheel psm${unit}
#	;;

#mouse*)					# (XXX)
#	case $i in
#	mouse-*)
#		name=${i##mouse-}
#		if [ ! -c $name ]; then
#			/bin/sh $0 $name	# make the appropriate device
#		fi
#		rm -f mouse
#		ln -s $name mouse
#		;;
#	*)
#		echo no such device: use mouse-\${dev}, e.g. mouse-cua00
#		;;
#	esac
#	;;

d593 1
a593 1
	rm -f $audio $sound $mixer $audioctl
d634 1
a634 1
	rm -f $sequencer $music
d717 1
a717 1
	rm -f pctr;
@


1.91
log
@spelling
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.90 2001/04/10 03:03:51 brad Exp $
d200 1
a200 1
	sh $this usbs
d240 4
@


1.90
log
@keep naming of audio devices consistent across all archs that have audio
support.
--
Ok'd by: deraadt@@
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.89 2001/02/20 23:53:26 jbm Exp $
d94 1
a94 1
#	ses*	SES/SAF-TE SCSI devives
@


1.89
log
@Import of wsmouse-compatible lms and mms drivers from NetBSD.
Remove creation of non-wsmouse device in MAKEDEV (/dev/lms{0,1}, /dev/mms{0,1}
/dev/psm0, /dev/pms0).
Remove cdevsw[] entries for the devices above, as new mouse protocols are only
accessible trough /dev/wsmouse. aaron@@ ok.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.88 2001/02/11 19:14:05 aaron Exp $
d87 1
a87 1
#	audio	audio device
d194 1
a194 1
	sh $this speaker lkm audio joy0 joy1 apm local
d618 1
a618 1
	[ "$unit" = "0" ] && n= || n=$unit
a622 1
	major=42
d630 4
@


1.88
log
@Allow up to 12 virtual terminals (CTRL-ALT-F1 through CTRL-ALT-F12). Only
6 are enabled by default. After these changes, to enable more you must
change the "option WSDISPLAY_DEFAULTSCREENS" in the kernel config file and
edit /etc/ttys to switch the new ones from 'off' to 'on'.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.87 2001/01/30 00:00:33 aaron Exp $
d54 1
a54 1
# Pointing devices:
d194 1
a194 1
	sh $this speaker lkm mms0 lms0 pms0 audio joy0 joy1 apm local
d582 34
a615 34
mms*|lms*)
	case $i in
	mms*) name=mms; chr=35;;
	lms*) name=lms; chr=36;;
	esac
	rm -f $name$unit
	mknod $name$unit c $chr $unit
	chown root.wheel $name$unit
	;;

pms*)
	rm -f pms${unit}
	rm -f psm${unit}
	mknod pms${unit} c 37 0
	mknod psm${unit} c 37 1
	chown root.wheel pms${unit}
	chown root.wheel psm${unit}
	;;

mouse*)					# (XXX)
	case $i in
	mouse-*)
		name=${i##mouse-}
		if [ ! -c $name ]; then
			/bin/sh $0 $name	# make the appropriate device
		fi
		rm -f mouse
		ln -s $name mouse
		;;
	*)
		echo no such device: use mouse-\${dev}, e.g. mouse-cua00
		;;
	esac
	;;
@


1.87
log
@Support for the wscons machine-independent console driver on the i386. To
become default in a few moments once deraadt commits new kernel config files.

IMPORTANT NOTE: A few important pieces are still required to be worked out
over the next few days. Users (and developers) relying on X should probably
stay away from -current until further notice. This should not take long, but
here is your first heads up. If you decide to upgrade your kernel anyway,
be sure to update your /etc/ttys file to use vt100 instead of vt220. The
rest of the fallout from this should be minor.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.86 2000/11/23 23:37:44 deraadt Exp $
d189 2
a190 1
	sh $this ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
@


1.86
log
@enforce ttyC[0-f]; thanks to millert for some help
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.84 2000/10/16 14:57:56 aaron Exp $
d51 2
a52 3
#	ttyC0	pccons or pcvt screen 0
#	ttyC*	pcvt
#	pcvtctl	userland <-> kernel mouse communication for pcvt
d189 2
a190 1
	sh $this ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 pcvtctl
d286 6
d304 25
a328 5
pcvtctl)
	rm -f pcvtctl
	mknod pcvtctl c 12 255
	chown root.wheel pcvtctl
	chmod 600 pcvtctl
@


1.85
log
@tabs
@
text
@d287 6
d294 1
a294 1
	mknod ttyC$unit c 12 $unit
@


1.84
log
@Create /dev/pcvtctl mode 600.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.83 2000/09/01 05:46:57 aaron Exp $
d162 12
a173 12
        # XXX pdksh can't seem to deal with locally scoped variables
        # in ${foo#$bar} expansions
        arg="$1"
        tmp="${arg#[a-zA-Z]*}"
        tmp="${tmp%*[a-zA-Z]}"
        while [ "$tmp" != "$arg" ]
        do
                arg=$tmp
                tmp="${arg#[a-zA-Z]*}"
                tmp="${tmp%*[a-zA-Z]}"
        done
        echo $arg
d230 1
a230 1
	mknod xf86              c 2 4   ; chmod 600 xf86 ; chown root xf86
d305 1
a305 1
        ;;
d334 1
a334 1
        unit=${i##fd}
d336 1
a336 1
        unit=${unit%%[!0-9]}
d448 2
a449 2
                mknod tty$nam c 5 "$(( $offset + $n ))"
                mknod pty$nam c 6 "$(( $offset + $n ))"
@


1.83
log
@New "pcvtctl" device used by moused to communicate with PCVT in the kernel.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.82 2000/08/16 15:38:27 marc Exp $
d296 1
@


1.82
log
@
Catch the bogus 'MAKEDEV mouse' and spit out a reasonable
error message.  OK deraadt@@
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.81 2000/08/04 22:52:49 fgsch Exp $
d53 1
d190 1
a190 1
	sh $this ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
d290 6
@


1.81
log
@fix typo on utty creation; problem found by cfegan@@cisco.com
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.80 2000/07/06 22:01:29 fgsch Exp $
d560 14
a573 7
mouse*)						# (XXX)
	name=${i##mouse-}
	if [ ! -c $name ]; then
		/bin/sh $0 $name	# make the appropriate device
	fi
	rm -f mouse
	ln -s $name mouse
@


1.80
log
@add utty, serial port for USB devices.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.79 2000/04/15 17:50:45 jakob Exp $
d279 1
a279 1
	rm -f utty$unix
@


1.79
log
@add urio(4)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.78 2000/04/09 21:08:26 matthieu Exp $
d77 1
d219 1
d244 1
a244 1
	chmod 600 usb$unit
d251 1
a251 1
	chmod 666 uhid$unit
d258 1
a258 1
	chmod 600 ulpt$unit
d265 1
a265 1
	chmod 666 urio$unit
d274 1
a274 1
		chmod 600 ugen$unit.$j
d276 7
@


1.78
log
@fix ulpt major # allocation
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.77 2000/03/29 21:46:07 aaron Exp $
d75 1
d217 1
d257 7
@


1.77
log
@Uncomment ulpt targets.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.76 2000/03/22 07:34:29 niklas Exp $
d252 1
a252 1
	mknod ulpt$unit c 63 $unit
@


1.76
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.76 2000/03/22 06:34:47 niklas Exp $
d215 1
a215 1
#	sh $this ulpt0 ulpt1
d250 6
a255 6
#ulpt*)
#	rm -f ulpt$unit
#	mknod ulpt$unit c ?? $unit
#	chown root.wheel ulpt$unit
#	chmod 600 ulpt$unit
#	;;
@


1.75
log
@add SES device
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.74 1999/12/05 19:19:08 mickey Exp $
d80 1
d446 1
a446 1
	chmod 640 $name$unit n$name$unit e$name$unit en$name$unit \
d459 1
a459 1
	chmod 640 $name$unit
@


1.74
log
@expr(1)-less makedev.
includes some works from todd@@ and millert@@
verified by todd@@ and millert@@
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.73 1999/08/20 17:00:36 downsj Exp $
d91 1
d190 1
a190 1
	sh $this random uk0 uk1 ss0 ss1 pctr bktr0 tuner0 wdt0
d657 7
@


1.73
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.72 1999/08/13 05:39:24 fgsch Exp $
d100 1
d115 56
d173 4
d180 15
a194 15
	sh MAKEDEV std fd wt0 wd0 wd1 wd2 wd3 sd0 sd1 sd2
	sh MAKEDEV tty00 tty01 tty02 tty03 pty0 pty1 st0 st1 ch0 cd0 cd1
	sh MAKEDEV ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	sh MAKEDEV mcd0 vnd0 vnd1 lpa0 lpa1 ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV raid0 raid1 raid2 raid3 lpt0 lpt1 lpt2
	sh MAKEDEV ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	sh MAKEDEV ipl tun0 tun1 tun2
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV speaker lkm mms0 lms0 pms0 audio joy0 joy1 apm local
	sh MAKEDEV random uk0 uk1 ss0 ss1 pctr bktr0 tuner0 wdt0
	sh MAKEDEV fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H 
	sh MAKEDEV fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	sh MAKEDEV xfs0 music
	sh MAKEDEV rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	sh MAKEDEV usbs
d196 1
a196 1
#	sh MAKEDEV mouse-?
d200 2
a201 2
	sh MAKEDEV std wt0 fd0 wd0 wd1 sd0 sd1 tty00 tty01
	sh MAKEDEV st0 cd0 ttyC0 random
d205 3
a207 3
	sh MAKEDEV std lkm tty00 tty01 tty02 tty03 ttyC0 random
	sh MAKEDEV wt0 fd0 rd0 wd0 wd1 wd2 wd3 bpf0
	sh MAKEDEV sd0 sd1 sd2 sd3 st0 st1 cd0 cd1 mcd0
d211 3
a213 3
	sh MAKEDEV usb0 usb1 
	sh MAKEDEV uhid0 uhid1 uhid2 uhid3
#	sh MAKEDEV ulpt0 ulpt1 
a234 1
	unit=`expr $i : 'usb\(.\).*'`
a241 1
	unit=`expr $i : 'uhid\(.\).*'`
a248 1
#	unit=`expr $i : 'ulpt\(.\).*'`
a255 1
	unit=`expr $i : 'ugen\(.\).*'`
d259 1
a259 1
		mknod ugen$unit.$j c 63 `expr $unit '*' 16 + $j`
a265 1
	unit=`expr $i : 'ttyC\(.*\)'`
a271 1
	unit=`expr $i : 'ttyc\(.*\)'`
d274 1
a274 1
	mknod cuac$unit c 38 `expr $unit + 128`
d290 1
a290 1
	umask 2 ; unit=`expr $i : '..\(.*\)'`
d295 4
a298 4
	mknod $name$unit	b $blk `expr $unit '*' 8 + 0`
	mknod n$name$unit	b $blk `expr $unit '*' 8 + 4`
	mknod r$name$unit	c $chr `expr $unit '*' 8 + 0`
	mknod nr$name$unit	c $chr `expr $unit '*' 8 + 4`
a303 12
rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	rm -f rd${unit}a rd${unit}c rrd${unit}a rrd${unit}c
	mknod rd${unit}a b 17 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 17 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 47 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 47 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;

d305 4
a308 2
	umask 2 ; typnam=`expr $i : 'fd.*\(.\)$'`
	unit=`expr $i : 'fd\(.\).*'`
d310 10
a319 10
	0|1)		typnam=; typnum=0;;	# no type specified, assume A
	A)		typnam=; typnum=0;;
	B)		typnum=1;;
	C)		typnum=2;;
	D)		typnum=3;;
	E)		typnum=4;;
	F)		typnum=5;;
	G)		typnum=6;;
	H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
d327 33
a359 33
	basenum=`expr $unit '*' 128 + $typnum '*' 16`
	mknod ${nam}a	b $blk `expr $basenum + 0`
	mknod ${nam}b	b $blk `expr $basenum + 1`
	mknod ${nam}c	b $blk `expr $basenum + 2`
	#mknod ${nam}d	b $blk `expr $basenum + 3`
	#mknod ${nam}e	b $blk `expr $basenum + 4`
	#mknod ${nam}f	b $blk `expr $basenum + 5`
	#mknod ${nam}g	b $blk `expr $basenum + 6`
	#mknod ${nam}h	b $blk `expr $basenum + 7`
	#mknod ${nam}i	b $blk `expr $basenum + 8`
	#mknod ${nam}j	b $blk `expr $basenum + 9`
	#mknod ${nam}k	b $blk `expr $basenum + 10`
	#mknod ${nam}l	b $blk `expr $basenum + 11`
	#mknod ${nam}m	b $blk `expr $basenum + 12`
	#mknod ${nam}n	b $blk `expr $basenum + 13`
	#mknod ${nam}o	b $blk `expr $basenum + 14`
	#mknod ${nam}p	b $blk `expr $basenum + 15`
	mknod r${nam}a	c $chr `expr $basenum + 0`
	mknod r${nam}b	c $chr `expr $basenum + 1`
	mknod r${nam}c	c $chr `expr $basenum + 2`
	#mknod r${nam}d	c $chr `expr $basenum + 3`
	#mknod r${nam}e	c $chr `expr $basenum + 4`
	#mknod r${nam}f	c $chr `expr $basenum + 5`
	#mknod r${nam}g	c $chr `expr $basenum + 6`
	#mknod r${nam}h	c $chr `expr $basenum + 7`
	#mknod r${nam}i	c $chr `expr $basenum + 8`
	#mknod r${nam}j	c $chr `expr $basenum + 9`
	#mknod r${nam}k	c $chr `expr $basenum + 10`
	#mknod r${nam}l	c $chr `expr $basenum + 11`
	#mknod r${nam}m	c $chr `expr $basenum + 12`
	#mknod r${nam}n	c $chr `expr $basenum + 13`
	#mknod r${nam}o	c $chr `expr $basenum + 14`
	#mknod r${nam}p	c $chr `expr $basenum + 15`
d366 1
a366 1
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
d368 4
a371 5
	ccd*) name=ccd; blk=16; chr=18;;
	fd*) name=fd; blk=2; chr=9;;
	raid*) name=raid; blk=19; chr=54;;
	sd*) name=sd; blk=4; chr=13;;
	wd*) name=wd; blk=0; chr=3;;
d373 1
a373 35
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
	mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
	mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
	mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
	mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
	mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
	mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
	mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
	mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
	mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
	mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
	mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
	mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
	mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
	mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
	mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
	mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
	chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
	chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
d378 4
a381 47
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	if [ -z "$unit" ]; then
		echo vnd requires a unit number
		exit 1
	fi
	for name in vnd svnd; do
		blk=14; chr=41;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
d386 1
a386 1
	unit=`expr $i : 'tty0\(.*\)'`
d389 1
a389 1
	mknod cua0$unit c 8 `expr $unit + 128`
d395 1
a395 2
	class=`expr $i : 'pty\(.*\)'`
	case $class in
d412 1
a412 16
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
                do
                        nam=$name`hex $n`
                        rm -f {tty,pty}$nam
                        mknod tty$nam c 5 "$(( $offset + $n ))"
                        mknod pty$nam c 6 "$(( $offset + $n ))"
                        n="$(( $n + 1 ))"
                done
		umask 77
		;;
d414 11
a425 1

d427 1
a427 1
	umask 2 ; unit=`expr $i : '..\(.*\)'`
d433 9
a441 8
	mknod $name$unit	b $blk `expr $unit '*' 16 + 0`
	mknod n$name$unit	b $blk `expr $unit '*' 16 + 1`
	mknod e$name$unit	b $blk `expr $unit '*' 16 + 2`
	mknod en$name$unit	b $blk `expr $unit '*' 16 + 3`
	mknod r$name$unit	c $chr `expr $unit '*' 16 + 0`
	mknod nr$name$unit	c $chr `expr $unit '*' 16 + 1`
	mknod er$name$unit	c $chr `expr $unit '*' 16 + 2`
	mknod enr$name$unit	c $chr `expr $unit '*' 16 + 3`
d450 1
a450 1
	umask 2 ; unit=`expr $i : '..\(.*\)'`
d461 2
a462 2
cd*|mcd*)
	umask 2 ; unit=`expr $i : '.*cd\(.*\)'`
d464 3
a466 2
	cd*) name=cd; blk=6; chr=15;;
	mcd*) name=mcd; blk=7; chr=39;;
d469 5
a473 4
	mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
a479 1
	unit=`expr $i : '...\(.*\)'`
d485 1
a485 1
	mknod $name$unit c 16 `expr $unit + $flags`
a489 1
	unit=`expr $i : '...\(.*\)'`
a521 1
	unit=`expr $i : '.ms\(.*\)'`
a531 1
	unit=`expr $i : '.ms\(.*\)'`
d541 1
a541 1
	name=`expr $i : 'mouse-\(.*\)'`
d543 1
a543 1
		$0 $name	# make the appropriate device
d550 5
a554 4
	unit=${i#audio}
	audio=audio$unit
	sound=sound$unit
	mixer=mixer$unit
a555 2
	audioctl=audioctl$unit
	if [ "$unit" = "" ]; then unit=0; fi
d557 4
a560 4
	mknod $sound    c $major $(($unit + 0))
	mknod $audio    c $major $(($unit + 128))
	mknod $mixer    c $major $(($unit + 16))
	mknod $audioctl c $major $(($unit + 192))
a565 1
	unit=`expr $i : 'joy\(.*\)'`
a572 1
	unit=`expr $i : 'xfs\(.*\)'`
a579 1
	unit=${i#rmidi}
d589 3
a591 3
	unit=${i#music}
	music=music$unit
	sequencer=sequencer$unit
a592 1
	if [ "$unit" = "" ]; then unit=0; fi
d594 2
a595 2
	mknod $music     c $major $(($unit + 0))
	mknod $sequencer c $major $(($unit + 128))
a651 1
	unit=`expr $i : 'uk\(.*\)'`
a658 1
	unit=`expr $i : 'ss\(.*\)'`
a675 1
	unit=`expr $i : 'bktr\(.*\)'`
a682 1
	unit=`expr $i : 'tuner\(.*\)'`
d684 1
a684 1
	mknod tuner$unit c 49 $((unit + 16))
a689 1
	unit=`expr $i : 'wdt\(.*\)'`
d698 1
a698 1
	test -s MAKEDEV.local && sh MAKEDEV.local
@


1.72
log
@Create USB devices.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.71 1999/07/30 18:49:36 deraadt Exp $
d220 2
a221 1
	chown uucp.wheel ttyc$unit cuac$unit
d423 2
a424 1
	chown uucp.wheel tty0$unit cua0$unit
@


1.71
log
@no more acd
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.70 1999/04/28 23:20:51 alex Exp $
d33 1
d71 6
d133 1
d149 6
d171 35
@


1.70
log
@Added wdt driver for the Industrial Computer Source PCI-WDT50x watchdog
timers.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.69 1999/01/11 15:14:44 niklas Exp $
a43 1
#	acd*	ATAPI CD-ROM
d115 1
a115 1
	sh MAKEDEV mcd0 acd0 vnd0 vnd1 lpa0 lpa1 ccd0 ccd1 ccd2 ccd3
d132 1
a132 1
	sh MAKEDEV st0 cd0 acd0 ttyC0 random
d138 1
a138 1
	sh MAKEDEV sd0 sd1 sd2 sd3 st0 st1 cd0 cd1 acd0 mcd0
d448 1
a448 1
cd*|mcd*|acd*)
a452 1
	acd*) name=acd; blk=18; chr=24;;
@


1.69
log
@Add raid devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.68 1999/01/01 23:53:15 niklas Exp $
d89 1
d122 1
a122 1
	sh MAKEDEV random uk0 uk1 ss0 ss1 pctr bktr0 tuner0
d271 1
a271 1
ccd*|sd*|wd*|raid*)
d687 8
@


1.68
log
@Create midi and sequencer devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.67 1998/11/25 04:58:53 millert Exp $
d48 1
d116 2
a117 1
	sh MAKEDEV lpt0 lpt1 lpt2 ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
d270 1
a270 1
ccd*|sd*|wd*)
d275 1
@


1.67
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.66 1998/11/19 08:18:57 dugsong Exp $
d122 2
a123 1
	sh MAKEDEV xfs0
d567 23
@


1.66
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.65 1998/09/15 21:54:53 deraadt Exp $
a378 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.65
log
@need bpf nodes for RAMDISK dhclient
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.64 1998/09/15 10:15:31 pattonme Exp $
d381 11
d395 1
a395 1
	0|1|2|3|4)
@


1.64
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.63 1998/09/12 06:34:36 fgsch Exp $
d134 1
a134 1
	sh MAKEDEV wt0 fd0 rd0 wd0 wd1 wd2 wd3
@


1.63
log
@Don't build pcmcia devices.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.62 1998/09/02 00:28:18 art Exp $
d474 1
a474 1
	rm -f ipl ipnat ipstate 
d478 2
a479 1
	chown root.wheel ipl ipnat ipstate 
@


1.62
log
@make the xfs device
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.61 1998/08/24 05:49:52 millert Exp $
d118 1
a118 1
	sh MAKEDEV speaker lkm mms0 lms0 pms0 audio joy0 joy1 apm pcmcia local
d576 31
a606 31
pcmcia*)
	rm -f pcmcia/bus? pcmcia/chip? pcmcia/slot*
	mkdir -p pcmcia
	mknod pcmcia/bus0 c 25 128
	mknod pcmcia/bus1 c 25 129
	mknod pcmcia/bus2 c 25 130
	mknod pcmcia/bus3 c 25 131
	mknod pcmcia/chip0 c 25 64
	mknod pcmcia/chip1 c 25 65
	mknod pcmcia/chip2 c 25 66
	mknod pcmcia/chip3 c 25 67
	mknod pcmcia/slot0 c 25 0
	mknod pcmcia/slot1 c 25 1
	mknod pcmcia/slot2 c 25 2
	mknod pcmcia/slot3 c 25 3
	mknod pcmcia/slot4 c 25 4
	mknod pcmcia/slot5 c 25 5
	mknod pcmcia/slot6 c 25 6
	mknod pcmcia/slot7 c 25 7
	mknod pcmcia/slot8 c 25 8
	mknod pcmcia/slot9 c 25 9
	mknod pcmcia/slot10 c 25 10
	mknod pcmcia/slot11 c 25 11
	mknod pcmcia/slot12 c 25 12
	mknod pcmcia/slot13 c 25 13
	mknod pcmcia/slot14 c 25 14
	mknod pcmcia/slot15 c 25 15
	chown -R root.wheel pcmcia
	chmod 700 pcmcia
	chmod 600 pcmcia/*
	;;
@


1.61
log
@remove ksyms in std entry like other std things
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.60 1998/08/24 05:29:56 millert Exp $
d85 1
d121 2
a122 1
	sh MAKEDEV fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H 
d547 8
@


1.60
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.59 1998/07/23 17:45:40 mickey Exp $
d137 1
a137 1
	rm -f console drum mem kmem xf86 null zero io tty klog stdin stdout stderr
@


1.59
log
@add bktr* and tuner* devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.58 1998/04/27 14:50:38 provos Exp $
d151 1
@


1.58
log
@make the appropriate audio devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.57 1998/03/24 19:00:27 marc Exp $
d85 2
d118 1
a118 1
	sh MAKEDEV random uk0 uk1 ss0 ss1 pctr
d459 1
a459 1
bpf*|tun*)
d622 17
a638 1
	
@


1.57
log
@Change fd* names to agree with man page
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.56 1998/02/17 23:41:50 matthieu Exp $
d520 14
a533 6
	rm -f audio sound mixer
	mknod sound c 42 0
	mknod audio c 42 128
	mknod mixer c 42 16
	chown root.wheel audio sound mixer
	chmod 666 audio sound mixer
@


1.56
log
@add /dev/xf86
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.55 1998/01/26 04:19:40 dgregor Exp $
d117 2
a118 2
	sh MAKEDEV fd0 fdB0 fdC0 fdD0 fdE0 fdF0 fdG0 fdH0 
	sh MAKEDEV fd1 fdB1 fdC1 fdD1 fdE1 fdF1 fdG1 fdH1 
d204 2
a205 2
	umask 2 ; unit=`expr $i : 'fd.*\(.\)$'`
	typnam=`expr $i : 'fd\(.\).*'`
d222 1
a222 1
	nam=fd${typnam}${unit}
@


1.55
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.54 1997/12/16 21:17:42 deraadt Exp $
d135 1
a135 1
	rm -f console drum mem kmem null zero io tty klog stdin stdout stderr
d141 1
@


1.54
log
@fix major number for fd/*; felix reported the i386 flaw
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.53 1997/12/08 21:27:39 mickey Exp $
d468 1
a468 1
	rm -f ipl
d470 3
a472 1
	chown root.wheel ipl
@


1.53
log
@fix chN (N > 0) problem
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.52 1997/10/06 05:17:17 deraadt Exp $
d169 1
a169 1
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 24 $n; n="$(( $n + 1 ))"; done )
@


1.52
log
@make ttyC5; disable getty on ttyC4 (XFree86)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.51 1997/09/19 16:46:49 deraadt Exp $
d422 1
a422 1
	mknod $name$unit	c $chr `expr $unit '*' 16 + 0`
@


1.51
log
@make ttyC0-C4 for all)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.50 1997/09/16 06:00:58 deraadt Exp $
d112 1
a112 1
	sh MAKEDEV lpt0 lpt1 lpt2 ttyC0 ttyC1 ttyC2 ttyC3 ttyC4
@


1.50
log
@10 bpf devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.49 1997/09/07 20:29:11 dgregor Exp $
d112 2
a113 1
	sh MAKEDEV lpt0 lpt1 lpt2 ttyC0 ttyC1 ttyC2 ipl tun0 tun1 tun2
@


1.49
log
@In pty* rule:\n	Change 'rm -rf' to 'rm -f'\n	Fix {pty,tty}$n -> {pty,tty}$nam
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.48 1997/08/06 07:06:46 deraadt Exp $
d112 2
a113 2
	sh MAKEDEV lpt0 lpt1 lpt2 ttyC0 ttyC1 ttyC2 bpf0 bpf1 bpf2 bpf3
	sh MAKEDEV ipl tun0 tun1 tun2
@


1.48
log
@fix cyclades mknod stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.47 1997/08/04 23:58:15 dgregor Exp $
d383 1
a383 1
                        rm -rf {tty,pty}$nam
@


1.47
log
@Add cyclades devices.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.46 1997/06/02 22:54:02 kstailey Exp $
d110 1
a110 1
	sh MAKEDEV cyclades
d157 5
a161 5
        unit=`expr $i : 'ttyc(.*\)'`
        rm -f ttyc$unit cuac$unit
        mknod ttyc$unit c $major $minor
        mknod cuac$unit c $major `expr $minor + 128`
        chown uucp.wheel ttyc$unit cuac$unit
a600 3

cyclades)
	sh MAKEDEV ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
@


1.46
log
@make more resistant to bad args
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.45 1997/05/22 05:26:42 deraadt Exp $
d61 1
d110 1
d156 8
d357 6
a362 6
tty*)
	unit=`expr $i : '...\(.*\)'`
	rm -f com$unit tty$unit cua$unit
	mknod tty$unit c 8 $unit
	mknod cua$unit c 8 `expr $unit + 128`
	chown uucp.wheel tty$unit cua$unit
d601 3
@


1.45
log
@corrections from mickey
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.44 1997/05/14 15:41:13 niklas Exp $
d298 4
d602 4
@


1.44
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.43 1997/05/13 05:34:52 millert Exp $
d181 1
d369 1
a369 1
                        rm -rf {tty,pty}$n
@


1.43
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.42 1997/05/04 03:28:27 tholo Exp $
d249 1
a249 1
ccd*|sd*|vnd*|wd*)
a254 1
	vnd*) name=vnd; blk=14; chr=41;;
d292 47
@


1.42
log
@Do not use awk
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.41 1997/04/25 18:51:05 deraadt Exp $
d550 1
a550 1
	sh MAKEDEV.local
@


1.41
log
@sd2 & sd3 in ramdisk too
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.40 1997/04/16 22:26:50 deraadt Exp $
d88 14
d157 2
a158 3
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 22 %d;", i, i)}'`)
d318 9
a326 5
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 5 %d;" \
				    "rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
@


1.40
log
@no printers on install disk
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.39 1997/04/13 20:07:53 deraadt Exp $
d114 1
a114 1
	sh MAKEDEV sd0 sd1 st0 st1 cd0 cd1 acd0 mcd0
@


1.39
log
@floppy needs random
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.38 1997/04/13 20:05:51 mickey Exp $
d112 1
a112 2
	sh MAKEDEV std lkm tty00 tty01 tty02 tty03 ttyC0
	sh MAKEDEV random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
@


1.38
log
@some more devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.37 1997/04/13 19:29:50 mickey Exp $
d108 1
a108 1
	sh MAKEDEV st0 cd0 acd0 ttyC0
@


1.37
log
@add entry to build all the devs ramdisk needs
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.36 1997/02/06 10:02:13 deraadt Exp $
d112 4
a115 2
	sh MAKEDEV std tty00 tty01 tty02 tty03 ttyC0
	sh MAKEDEV wt0 fd0 rd0 wd0 wd1 sd0 sd1 st0 cd0 acd0 mcd0
@


1.36
log
@make rd device. only make a & c partitions raw & block
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.35 1996/12/14 18:23:57 millert Exp $
d109 5
@


1.35
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.34 1996/12/06 10:49:44 deraadt Exp $
d162 6
a167 4
	mknod rd${unit} b 17 $unit
#	mknod rrd${unit} c 9 $unit
	chown root.operator rd${unit} rrd${unit}
	chmod 640 rd${unit} rrd${unit}
@


1.34
log
@make other floppy nodes
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.33 1996/12/05 13:18:12 deraadt Exp $
d140 1
a140 1
	chown -R bin.bin fd
@


1.33
log
@bring back floppy partitions. but now they are at theold major, and max 2
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.32 1996/11/11 20:47:21 kstailey Exp $
d93 1
a93 1
	sh MAKEDEV std fd wt0 fd0 fd1 wd0 wd1 wd2 wd3 sd0 sd1 sd2
d100 2
@


1.32
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.31 1996/11/10 21:39:18 downsj Exp $
d167 60
a226 1
ccd*|fd*|sd*|vnd*|wd*)
@


1.31
log
@Revert.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.29 1996/10/15 07:44:22 downsj Exp $
d83 1
d99 1
a99 1
	sh MAKEDEV random uk0 uk1 pctr
d442 11
@


1.30
log
@give floppies real partitions
@
text
@d166 1
a166 61
fd*)
	umask 2 ; unit=`expr $i : 'fd.*\(.\)$'`
	typnam=`expr $i : 'fd\(.\).*'`
	case $typnam in
	0|1|2|3)	typnam=; typnum=0;;	# no type specified, assume A
	A)		typnam=; typnum=0;;
	B)		typnum=1;;
	C)		typnum=2;;
	D)		typnum=3;;
	E)		typnum=4;;
	F)		typnum=5;;
	G)		typnum=6;;
	H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
	esac
	case $unit in
	0|1)	blk=20; chr=48;;
	2|3)	blk=21; chr=49;;
	*)	echo bad unit $unit for $i; exit 1;;
	esac
	nam=fd${typnam}${unit}
	rm -f ${nam}? r${nam}?
	basenum=`expr $unit '*' 128 + $typnum '*' 16`
	mknod ${nam}a	b $blk `expr $basenum + 0`
	mknod ${nam}b	b $blk `expr $basenum + 1`
	mknod ${nam}c	b $blk `expr $basenum + 2`
	#mknod ${nam}d	b $blk `expr $basenum + 3`
	#mknod ${nam}e	b $blk `expr $basenum + 4`
	#mknod ${nam}f	b $blk `expr $basenum + 5`
	#mknod ${nam}g	b $blk `expr $basenum + 6`
	#mknod ${nam}h	b $blk `expr $basenum + 7`
	#mknod ${nam}i	b $blk `expr $basenum + 8`
	#mknod ${nam}j	b $blk `expr $basenum + 9`
	#mknod ${nam}k	b $blk `expr $basenum + 10`
	#mknod ${nam}l	b $blk `expr $basenum + 11`
	#mknod ${nam}m	b $blk `expr $basenum + 12`
	#mknod ${nam}n	b $blk `expr $basenum + 13`
	#mknod ${nam}o	b $blk `expr $basenum + 14`
	#mknod ${nam}p	b $blk `expr $basenum + 15`
	mknod r${nam}a	c $chr `expr $basenum + 0`
	mknod r${nam}b	c $chr `expr $basenum + 1`
	mknod r${nam}c	c $chr `expr $basenum + 2`
	#mknod r${nam}d	c $chr `expr $basenum + 3`
	#mknod r${nam}e	c $chr `expr $basenum + 4`
	#mknod r${nam}f	c $chr `expr $basenum + 5`
	#mknod r${nam}g	c $chr `expr $basenum + 6`
	#mknod r${nam}h	c $chr `expr $basenum + 7`
	#mknod r${nam}i	c $chr `expr $basenum + 8`
	#mknod r${nam}j	c $chr `expr $basenum + 9`
	#mknod r${nam}k	c $chr `expr $basenum + 10`
	#mknod r${nam}l	c $chr `expr $basenum + 11`
	#mknod r${nam}m	c $chr `expr $basenum + 12`
	#mknod r${nam}n	c $chr `expr $basenum + 13`
	#mknod r${nam}o	c $chr `expr $basenum + 14`
	#mknod r${nam}p	c $chr `expr $basenum + 15`
	chown root.operator ${nam}[a-p] r${nam}[a-p]
	chmod 640 ${nam}[a-p] r${nam}[a-p]
	umask 77
	;;

ccd*|sd*|vnd*|wd*)
@


1.29
log
@pms0r -> psm0
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.28 1996/10/13 00:53:52 downsj Exp $
d166 61
a226 1
ccd*|fd*|sd*|vnd*|wd*)
@


1.28
log
@pms driver now uses minor numbers.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.27 1996/09/28 18:28:01 deraadt Exp $
d351 1
a351 1
	rm -f pms${unit}?
d353 1
a353 1
	mknod pms${unit}r c 37 1
d355 1
a355 1
	chown root.wheel pms${unit}?
@


1.27
log
@/dev/vga is not needed anymore
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.26 1996/09/25 13:53:36 deraadt Exp $
d337 1
a337 1
mms*|lms*|pms*)
a341 1
	pms*) name=pms; chr=37;;
d346 10
@


1.26
log
@RAW_PART = 2
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.25 1996/09/22 21:48:21 deraadt Exp $
a128 6
	case $unit in
	0)
		rm -f vga
		ln -s ttyC0 vga
		;;
	esac
@


1.25
log
@pcmcia major wrong; from peter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.24 1996/09/18 22:03:42 deraadt Exp $
d294 1
a294 1
	mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
d296 1
a296 1
	mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
@


1.24
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.23 1996/09/16 03:43:34 tholo Exp $
d403 24
a426 24
	mknod pcmcia/bus0 c 26 128
	mknod pcmcia/bus1 c 26 129
	mknod pcmcia/bus2 c 26 130
	mknod pcmcia/bus3 c 26 131
	mknod pcmcia/chip0 c 26 64
	mknod pcmcia/chip1 c 26 65
	mknod pcmcia/chip2 c 26 66
	mknod pcmcia/chip3 c 26 67
	mknod pcmcia/slot0 c 26 0
	mknod pcmcia/slot1 c 26 1
	mknod pcmcia/slot2 c 26 2
	mknod pcmcia/slot3 c 26 3
	mknod pcmcia/slot4 c 26 4
	mknod pcmcia/slot5 c 26 5
	mknod pcmcia/slot6 c 26 6
	mknod pcmcia/slot7 c 26 7
	mknod pcmcia/slot8 c 26 8
	mknod pcmcia/slot9 c 26 9
	mknod pcmcia/slot10 c 26 10
	mknod pcmcia/slot11 c 26 11
	mknod pcmcia/slot12 c 26 12
	mknod pcmcia/slot13 c 26 13
	mknod pcmcia/slot14 c 26 14
	mknod pcmcia/slot15 c 26 15
@


1.23
log
@joy[01] is at major 26
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.22 1996/09/14 03:21:35 deraadt Exp $
d111 3
a113 3
	mknod drum		c 4 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem	; chgrp kmem mem
d116 1
a116 1
	mknod io		c 2 14	; chmod 640 io ; chgrp kmem io
d158 1
a158 1
	chgrp operator $name$unit n$name$unit r$name$unit nr$name$unit
d167 1
a167 1
	chgrp operator rd${unit} rrd${unit}
d214 1
a214 1
	chgrp operator ${name}${unit}[a-p] r${name}${unit}[a-p]
d266 1
a266 1
	chgrp operator $name$unit n$name$unit e$name$unit en$name$unit \
d280 1
a280 1
	chgrp operator $name$unit
d297 1
a297 1
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.22
log
@restrict floppy dev nodes for now
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.21 1996/09/12 02:40:42 deraadt Exp $
d376 1
a376 1
	mknod joy$unit c 25 $unit
@


1.21
log
@16 partitions, fix pcmcia and joy
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.20 1996/08/29 13:22:23 deraadt Exp $
d104 2
a105 2
	sh MAKEDEV std wt0 fd0 fd1 wd0 wd1 sd0 sd1 sd2 tty00 tty01
	sh MAKEDEV st0 st1 cd0 cd1 mcd0 acd0 ttyC0
@


1.20
log
@support cua devices on the com.c driver
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.19 1996/08/28 08:55:23 deraadt Exp $
d182 34
a215 18
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
d293 4
a296 4
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
d380 1
a380 30
	
pcmcia*)
	rm -rf pcmcia
	mkdir pcmcia
	mknod pcmcia/bus c 26 32
	mknod pcmcia/chip0 c 26 16
	mknod pcmcia/chip1 c 26 17
	mknod pcmcia/chip2 c 26 18
	mknod pcmcia/chip3 c 26 19
	mknod pcmcia/slot0 c 26 0
	mknod pcmcia/slot1 c 26 1
	mknod pcmcia/slot2 c 26 2
	mknod pcmcia/slot3 c 26 3
	mknod pcmcia/slot4 c 26 4
	mknod pcmcia/slot5 c 26 5
	mknod pcmcia/slot6 c 26 6
	mknod pcmcia/slot7 c 26 7
	chown -R root.wheel pcmcia
	chmod 700 pcmcia
	chmod 600 pcmcia/*
	;;
	
joy*)
	unit=`expr $i : 'joy\(.*\)'`
	rm -f joy$unit
	mknod joy$unit c 26 $unit
	chown root.wheel joy$unit
	chmod 666 joy$unit
	;;
	
@


1.19
log
@fix all random device node entry stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.18 1996/08/24 21:05:09 deraadt Exp $
d60 1
a60 2
#	com*	standard PC COM ports			(XXX)
#	tty*	alias for PC COM ports, this is what the system really wants
d93 1
a93 1
	sh MAKEDEV tty0 tty1 tty2 tty3 pty0 pty1 st0 st1 ch0 cd0 cd1
d104 1
a104 1
	sh MAKEDEV std wt0 fd0 fd1 wd0 wd1 sd0 sd1 sd2 tty0 tty1
d203 1
a203 1
com*|tty*)					# (XXX -- com should die)
d205 4
a208 4
	rm -f com$unit tty0$unit cua0$unit
	mknod tty0$unit c 8 $unit
	mknod cua0$unit c 8 `expr $unit + 128`
	chown uucp.wheel tty0$unit cua0$unit
@


1.18
log
@make ttyC1/ttyC2 by default
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 1996/08/09 00:25:03 deraadt Exp $
d82 1
a82 1
#	*rnd	inkernel random number generator
d99 1
a99 1
	sh MAKEDEV rnd uk0 uk1 pctr
d206 1
a206 1
	rm -f com$unit tty0$unit
d208 2
a209 1
	chown uucp.wheel tty0$unit
d403 9
a411 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 45 0
	mknod srnd c 45 1
	mknod urnd c 45 2
	mknod prnd c 45 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.17
log
@console device becomes ttyC0 (ttyC0-9 for pcvt) to avoid pty conflict
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1996/08/08 18:47:15 dm Exp $
d96 2
a97 1
	sh MAKEDEV lpt0 lpt1 lpt2 ttyC0 bpf0 bpf1 bpf2 bpf3 ipl tun0 tun1 tun2
@


1.16
log
@Added a pctr pseudo-device for accessing the Pentium performance counters,
and a program pctrctl to set the counter functions.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1996/07/23 06:32:55 etheisen Exp $
d50 2
a51 2
#	ttyv0	pccons or pcvt screen 0
#	ttyv*	pcvt
d96 1
a96 1
	sh MAKEDEV lpt0 lpt1 lpt2 ttyv0 bpf0 bpf1 bpf2 bpf3 ipl tun0 tun1 tun2
d105 1
a105 1
	sh MAKEDEV st0 st1 cd0 cd1 mcd0 acd0 ttyv0
d124 5
a128 5
ttyv*)
	unit=`expr $i : 'ttyv\(.*\)'`
	rm -f ttyv$unit
	mknod ttyv$unit c 12 $unit
	chown root.wheel ttyv$unit
d132 1
a132 1
		ln -s ttyv0 vga
@


1.15
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d98 1
a98 1
	sh MAKEDEV rnd uk0 uk1
d449 7
@


1.14
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 1
@


1.13
log
@make tty2/tty3 also
@
text
@d225 2
a226 2
				printf("rm -f tty%s%x; mknod tty%s%x c 5 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
@


1.12
log
@make "all" create wd2/3
@
text
@d92 3
a94 3
	sh MAKEDEV std fd wt0 fd0 fd1 wd0 wd1 wd2 wd3 sd0 sd1 sd2 tty0 tty1
	sh MAKEDEV pty0 pty1 st0 st1 ch0 cd0 cd1 mcd0 acd0 vnd0 vnd1 lpa0 lpa1
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3
@


1.11
log
@ad rnd devices.
@
text
@d92 2
a93 2
	sh MAKEDEV std fd wt0 fd0 fd1 wd0 wd1 sd0 sd1 sd2 tty0 tty1 pty0 pty1
	sh MAKEDEV st0 st1 ch0 cd0 cd1 mcd0 acd0 vnd0 vnd1 lpa0 lpa1
@


1.10
log
@add uk* devices
@
text
@d446 2
a447 2
	chown root.wheel uk$unit
	chmod 600 uk$unit
@


1.9
log
@Add acd where appropiate.
@
text
@d82 1
d97 1
a97 1
	sh MAKEDEV rnd
d442 8
@


1.8
log
@include *rnd devices.
@
text
@d43 1
d92 1
a92 1
	sh MAKEDEV st0 st1 ch0 cd0 cd1 mcd0 vnd0 vnd1 lpa0 lpa1
d103 1
a103 1
	sh MAKEDEV st0 st1 cd0 cd1 mcd0 ttyv0
d266 1
a266 1
cd*|mcd*)
d271 1
@


1.7
log
@Pull in John Kohl's most recent (15Apr96) APM and PCMCIA work
(original PCMCIA framework  by Stefan Grefen).
@
text
@d80 1
d95 1
d395 10
@


1.6
log
@sync with netbsd 960418
@
text
@d76 1
d93 1
a93 1
	sh MAKEDEV speaker lkm mms0 lms0 pms0 audio joy0 joy1 local
d378 1
a378 1

d385 40
@


1.5
log
@add the freebsd joystick driver; converted by matthieu@@abel.laas.fr;
netbsd pr#1916
@
text
@d3 2
d44 1
d92 1
a92 1
	sh MAKEDEV speaker lkm mms0 lms0 pms0 audio local joy0 joy1
d157 9
d377 9
a385 1
	
@


1.4
log
@New devices for PCMCIA support
@
text
@d74 1
d89 1
a89 1
	sh MAKEDEV speaker lkm mms0 lms0 pms0 audio local
d335 8
@


1.3
log
@from beurton@@fnet.fr:  Darren Reed's IP filter
@
text
@d74 1
d334 21
@


1.2
log
@update from netbsd
@
text
@d86 1
a86 1
	sh MAKEDEV lpt0 lpt1 lpt2 ttyv0 bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2
d284 6
@


1.1
log
@Initial revision
@
text
@d138 11
a148 4
	umask 2
	rm -f wt0 rwt0
	mknod wt0	b 3 0;	chown root.operator wt0
	mknod rwt0	c 10 0;	chown root.operator rwt0
d221 12
a232 16
	mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
	mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
	mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
	mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
	mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
	mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
	mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
	chgrp operator ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
	chmod 640 ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
d242 3
a244 3
	mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	chgrp operator ${name}${unit}
	chmod 640 ${name}${unit}
d264 20
a283 27
lpa*)
	unit=`expr $i : 'lpa\(.*\)'`
	rm -f lpa$unit
	mknod lpa$unit c 16 `expr $unit + 128`
	chown root.wheel lpa$unit
	;;

lpt*)
	unit=`expr $i : 'lpt\(.*\)'`
	rm -f lpt$unit
	mknod lpt$unit c 16 $unit
	chown root.wheel lpt$unit
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 23 $unit
	chown root.wheel bpf$unit
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 40 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d299 10
a308 19
mms*)
	unit=`expr $i : 'mms\(.*\)'`
	rm -f mms$unit
	mknod mms$unit c 35 $unit
	chown root.wheel mms$unit
	;;

lms*)
	unit=`expr $i : 'lms\(.*\)'`
	rm -f lms$unit
	mknod lms$unit c 36 $unit
	chown root.wheel lms$unit
	;;

pms*)
	unit=`expr $i : 'pms\(.*\)'`
	rm -f pms$unit
	mknod pms$unit c 37 $unit
	chown root.wheel pms$unit
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
