head	1.123;
access;
symbols
	OPENBSD_5_5:1.122.0.4
	OPENBSD_5_5_BASE:1.122
	OPENBSD_5_4:1.119.0.2
	OPENBSD_5_4_BASE:1.119
	OPENBSD_5_3:1.115.0.2
	OPENBSD_5_3_BASE:1.115
	OPENBSD_5_2:1.112.0.2
	OPENBSD_5_2_BASE:1.112
	OPENBSD_5_1_BASE:1.111
	OPENBSD_5_1:1.111.0.2
	OPENBSD_5_0:1.110.0.2
	OPENBSD_5_0_BASE:1.110
	OPENBSD_4_9:1.108.0.2
	OPENBSD_4_9_BASE:1.108
	OPENBSD_4_8:1.106.0.2
	OPENBSD_4_8_BASE:1.106
	OPENBSD_4_7:1.100.0.2
	OPENBSD_4_7_BASE:1.100
	OPENBSD_4_6:1.99.0.4
	OPENBSD_4_6_BASE:1.99
	OPENBSD_4_5:1.96.0.2
	OPENBSD_4_5_BASE:1.96
	OPENBSD_4_4:1.94.0.2
	OPENBSD_4_4_BASE:1.94
	OPENBSD_4_3:1.93.0.4
	OPENBSD_4_3_BASE:1.93
	OPENBSD_4_2:1.93.0.2
	OPENBSD_4_2_BASE:1.93
	OPENBSD_4_1:1.89.0.2
	OPENBSD_4_1_BASE:1.89
	OPENBSD_4_0:1.86.0.2
	OPENBSD_4_0_BASE:1.86
	OPENBSD_3_9:1.85.0.2
	OPENBSD_3_9_BASE:1.85
	OPENBSD_3_8:1.80.0.2
	OPENBSD_3_8_BASE:1.80
	OPENBSD_3_7:1.78.0.2
	OPENBSD_3_7_BASE:1.78
	OPENBSD_3_6:1.73.0.2
	OPENBSD_3_6_BASE:1.73
	OPENBSD_3_5:1.67.0.2
	OPENBSD_3_5_BASE:1.67
	OPENBSD_3_4:1.53.0.2
	OPENBSD_3_4_BASE:1.53
	OPENBSD_3_3:1.51.0.2
	OPENBSD_3_3_BASE:1.51
	OPENBSD_3_2:1.46.0.2
	OPENBSD_3_2_BASE:1.46
	OPENBSD_3_1:1.40.0.2
	OPENBSD_3_1_BASE:1.40
	OPENBSD_3_0:1.33.0.2
	OPENBSD_3_0_BASE:1.33
	OPENBSD_2_9:1.29.0.6
	OPENBSD_2_9_BASE:1.29
	OPENBSD_2_8:1.29.0.4
	OPENBSD_2_8_BASE:1.29
	OPENBSD_2_7:1.29.0.2
	OPENBSD_2_7_BASE:1.29
	OPENBSD_2_6:1.28.0.2
	OPENBSD_2_6_BASE:1.28
	OPENBSD_2_5:1.27.0.2
	OPENBSD_2_5_BASE:1.27
	OPENBSD_2_4:1.25.0.2
	OPENBSD_2_4_BASE:1.25
	OPENBSD_2_3:1.21.0.2
	OPENBSD_2_3_BASE:1.21
	OPENBSD_2_2:1.20.0.2
	OPENBSD_2_2_BASE:1.20
	OPENBSD_2_1:1.19.0.2
	OPENBSD_2_1_BASE:1.19
	OPENBSD_2_0:1.11.0.2
	OPENBSD_2_0_BASE:1.11;
locks; strict;
comment	@# @;


1.123
date	2014.03.18.22.36.29;	author miod;	state dead;
branches;
next	1.122;

1.122
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2013.11.21.11.06.08;	author kettenis;	state Exp;
branches;
next	1.120;

1.120
date	2013.11.05.16.06.29;	author deraadt;	state Exp;
branches;
next	1.119;

1.119
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.118;

1.118
date	2013.06.15.23.20.58;	author halex;	state Exp;
branches;
next	1.117;

1.117
date	2013.06.04.02.29.03;	author tedu;	state Exp;
branches;
next	1.116;

1.116
date	2013.06.03.17.34.15;	author tedu;	state Exp;
branches;
next	1.115;

1.115
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.114;

1.114
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.113;

1.113
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.112;

1.112
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.111;

1.111
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.110;

1.110
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.109;

1.109
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.108;

1.108
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.107;

1.107
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.106;

1.106
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.105;

1.105
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.104;

1.104
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.103;

1.103
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.102;

1.102
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.101;

1.101
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.100;

1.100
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.99;

1.99
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.98;

1.98
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.97;

1.97
date	2009.03.01.22.08.29;	author miod;	state Exp;
branches;
next	1.96;

1.96
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.95;

1.95
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.94;

1.94
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.93;

1.93
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.92;

1.92
date	2007.05.28.22.29.57;	author todd;	state Exp;
branches;
next	1.91;

1.91
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.90;

1.90
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.89;

1.89
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.88;

1.88
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.87;

1.87
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.86;

1.86
date	2006.08.28.21.23.34;	author tsi;	state Exp;
branches;
next	1.85;

1.85
date	2005.12.27.19.03.09;	author miod;	state Exp;
branches;
next	1.84;

1.84
date	2005.10.06.06.43.59;	author otto;	state Exp;
branches;
next	1.83;

1.83
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.82;

1.82
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.81;

1.81
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.80;

1.80
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.79;

1.79
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.78;

1.78
date	2005.03.01.13.37.10;	author otto;	state Exp;
branches;
next	1.77;

1.77
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.76;

1.76
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.75;

1.75
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.74;

1.74
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.73;

1.73
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.72;

1.72
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.71;

1.71
date	2004.05.30.08.24.12;	author grange;	state Exp;
branches;
next	1.70;

1.70
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.69;

1.69
date	2004.04.11.18.15.23;	author millert;	state Exp;
branches;
next	1.68;

1.68
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.67;

1.67
date	2004.03.12.04.54.33;	author deraadt;	state Exp;
branches;
next	1.66;

1.66
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.65;

1.65
date	2004.02.16.19.05.06;	author miod;	state Exp;
branches;
next	1.64;

1.64
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.63;

1.63
date	2004.02.13.23.35.04;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.61;

1.61
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.60;

1.60
date	2004.02.05.22.23.30;	author todd;	state Exp;
branches;
next	1.59;

1.59
date	2004.01.12.22.33.09;	author todd;	state Exp;
branches;
next	1.58;

1.58
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.57;

1.57
date	2003.10.15.02.01.25;	author todd;	state Exp;
branches;
next	1.56;

1.56
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.55;

1.55
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.54;

1.54
date	2003.09.26.06.58.26;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2003.06.18.18.11.08;	author todd;	state Exp;
branches;
next	1.52;

1.52
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.51;

1.51
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.50;

1.50
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.48;

1.48
date	2002.12.05.03.00.27;	author kjc;	state Exp;
branches;
next	1.47;

1.47
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.46;

1.46
date	2002.08.21.22.08.01;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.44;

1.44
date	2002.06.09.05.58.39;	author todd;	state Exp;
branches;
next	1.43;

1.43
date	2002.05.16.21.12.22;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2002.04.28.14.49.42;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2002.04.17.22.54.22;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2002.04.14.23.26.46;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2002.04.10.02.27.03;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2002.02.14.04.58.36;	author todd;	state Exp;
branches;
next	1.37;

1.37
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	2002.02.09.17.58.16;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2002.02.09.17.01.41;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2002.01.04.03.00.44;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2001.06.28.02.58.55;	author kjc;	state Exp;
branches;
next	1.32;

1.32
date	2001.06.25.03.20.07;	author kjell;	state Exp;
branches;
next	1.31;

1.31
date	2001.06.24.23.36.05;	author kjell;	state Exp;
branches;
next	1.30;

1.30
date	2001.05.30.02.11.20;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2000.03.22.07.34.29;	author niklas;	state Exp;
branches;
next	1.28;

1.28
date	99.08.20.17.00.36;	author downsj;	state Exp;
branches;
next	1.27;

1.27
date	98.11.25.04.58.54;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	98.11.19.08.18.57;	author dugsong;	state Exp;
branches;
next	1.25;

1.25
date	98.09.23.07.30.57;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	98.09.15.10.23.22;	author pattonme;	state Exp;
branches;
next	1.23;

1.23
date	98.08.24.05.49.54;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	98.08.24.05.29.59;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	98.01.26.04.19.43;	author dgregor;	state Exp;
branches;
next	1.20;

1.20
date	97.09.16.06.01.01;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	97.05.14.15.41.15;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	97.05.13.05.34.54;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.04.22.20.26.38;	author gvf;	state Exp;
branches;
next	1.16;

1.16
date	97.02.16.03.57.28;	author rahnds;	state Exp;
branches;
next	1.15;

1.15
date	97.02.11.15.03.39;	author rahnds;	state Exp;
branches;
next	1.14;

1.14
date	96.12.14.18.23.59;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	96.12.11.21.47.46;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.11.11.20.34.59;	author kstailey;	state Exp;
branches;
next	1.11;

1.11
date	96.09.18.22.03.44;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.08.28.08.55.25;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.07.23.06.32.57;	author etheisen;	state Exp;
branches;
next	1.8;

1.8
date	96.07.23.06.15.17;	author etheisen;	state Exp;
branches;
next	1.7;

1.7
date	96.07.15.14.59.14;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.05.27.22.02.47;	author chuck;	state Exp;
branches;
next	1.5;

1.5
date	96.01.07.07.41.21;	author dm;	state Exp;
branches;
next	1.4;

1.4
date	95.11.16.02.54.44;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.07.22.50.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.31.19.12.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.24.14.43.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.123
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.34 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	cuaa-d	On-board call-up devices
#	tty0*	CL-CD2400 serial ports
#	ttya-d	On-board serial ports
#	ttyd*	MC68681 serial ports
#	ttyw*	WG CL-CD2400 serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Printers:
#	par0	On-board printer port
# Special purpose devices:
#	bio	ioctl tunnel pseudo-device
#	bpf*	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	flash0	On-board flash memory
#	lkm	Loadable kernel modules interface
#	nvram0	On-board non-volatile memory
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	sram0	On-board static memory
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	uk*	Unknown SCSI devices
#	vmel0	VMEbus D32 space
#	vmes0	VMEbus D16 space
#	vscsi*	Virtual SCSI controller
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 43 0 640 kmem
	M klog		c 6 0 600
	;;


vscsi*)
	M vscsi$U c 53 $U 600
	;;

vmes0)
	M vmes0 c 32 0 640 kmem
	;;

vmel0)
	M vmel0 c 31 0 640 kmem
	;;

uk*)
	M uk$U c 41 $U 640 operator
	;;

tun*)
	M tun$U c 23 $U 600
	;;

systrace)
	M systrace c 50 0 644
	;;

sram0)
	M sram0 c 7 0 640 kmem
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 40 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 55 $U 600
	;;

pf*)
	M pf c 39 0 600
	;;

nvram0)
	M nvram0 c 10 0 640 kmem
	;;

lkm)
	M lkm c 24 0 640 _lkm
	;;

flash0)
	M flash0 c 11 0 640 kmem
	;;

fuse)
	M fuse$U c 57 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 54 0 640 operator
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

bio)
	M bio c 27 0 600
	;;

lp*)
	u=${i#lp*}
	case $u in
	0) M par$u c 28 $u 600;;
	*) echo unknown lp device $i ;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 52 0 666
	;;

ttyw*)
	u=${i#ttyw*}
	case $u in
	0|1|2|3)
		M ttyw$u c 30 $u 660 dialer uucp
		M cuaw$u c 30 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

ttyd[01])
	u=${i#ttyd*}
	case $u in
	0|1)
		M ttyd$u c 14 $u 660 dialer uucp
		M cuad$u c 14 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown tty device $i ;;
	esac
	case $u in
	a|b|c|d)
		M tty$u c 12 $n 660 dialer uucp
		;;
	esac
	;;

tty0*)
	u=${i#tty0*}
	case $u in
	0|1|2|3)
		M tty0$u c 13 $u 660 dialer uucp
		M cua0$u c 13 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

cua[a-z])
	u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown cua device $i ;;
	esac
	case $u in
	a|b|c|d)
		M cua$u c 12 $(($n+128)) 660 dialer uucp
		;;
	esac
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 7 $n 660 operator
		M ${pre}rst$U	c 20 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 44 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 6 19 $U 0
	;;

rd*)
	dodisk2 rd $U 9 18 $U 0
	;;

cd*)
	dodisk2 cd $U 8 9 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

ramdisk)
	R diskmap bio pty0 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3
	R sd4 bpf0 std
	;;

all)
	R ttyw0 ttyw1 ttyw2 ttyw3 ttyd0 ttyd1 tty00 tty01 tty02 tty03
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd vnd0 vnd1 vnd2 vnd3
	R sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap
	R vscsi0 ch0 vmel0 vmes0 flash0 nvram0 sram0 fuse pppx ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
	;;

sd*)
	case $i in
	sd*) dodisk sd $U 4 8 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
        cat
else
	sh
fi
@


1.122
log
@sync
@
text
@@


1.121
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.33 2013/06/03 17:34:15 tedu Exp 
@


1.120
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.119
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
@


1.118
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d57 1
a57 1
#	fuse*	Userland Filesystem
d268 1
a268 1
fuse*)
d429 2
a430 3
	R vscsi0 ch0 vmel0 vmes0 flash0 nvram0 sram0 fuse0 fuse1 fuse2
	R fuse3 pppx ptm local uk0 random lkm pf systrace std st0 st1
	R fd
@


1.117
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d57 1
a57 1
#	fuse	Userland Filesystem
d268 1
a268 1
fuse)
d429 3
a431 2
	R vscsi0 ch0 vmel0 vmes0 flash0 nvram0 sram0 fuse pppx ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
@


1.116
log
@fuse on more archs
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.32 2012/08/23 06:15:28 deraadt Exp 
d269 1
a269 1
	M fuse$U c 56 $U 600
@


1.115
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d57 1
d268 4
d429 2
a430 2
	R vscsi0 ch0 vmel0 vmes0 flash0 nvram0 sram0 pppx ptm local
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.114
log
@regen
@
text
@d424 2
a425 2
	R vscsi0 ch0 vmel0 vmes0 flash0 nvram0 sram0 ptm local uk0
	R random lkm pf systrace std st0 st1 fd
@


1.113
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d169 1
a169 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d173 1
a173 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d177 1
a177 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d181 1
a181 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.112
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.31 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a58 1
#	nnpfs*	NNPFS filesystem node
a258 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d424 2
a425 2
	R vscsi0 nnpfs0 ch0 vmel0 vmes0 flash0 nvram0 sram0 ptm local
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.111
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
@


1.110
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.30 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d426 5
a430 6
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd ccd0 ccd1 ccd2 ccd3
	R vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0
	R tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 vmel0 vmes0 flash0
	R nvram0 sram0 ptm local uk0 random lkm pf systrace std st0
	R st1 fd
d433 1
a433 1
sd*|ccd*)
a435 1
	ccd*) dodisk ccd $U 5 17 $U 0;;
@


1.109
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.108
log
@regen
@
text
@a405 1
	dodisk svnd $U 6 19 $U 2048
@


1.107
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.28 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d63 1
d247 4
@


1.106
log
@regen
@
text
@d43 1
a44 1
#	tty0*	CL-CD2400 serial ports
d56 1
d60 1
a69 1
#	nnpfs*	NNPFS filesystem node
a70 1
#	diskmap	Disk mapper
a210 4
diskmap)
	M diskmap c 54 0 640 operator
	;;

a214 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d256 4
d274 4
a341 11
tty0*)
	u=${i#tty0*}
	case $u in
	0|1|2|3)
		M tty0$u c 13 $u 660 dialer uucp
		M cua0$u c 13 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

d355 11
@


1.105
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
@


1.104
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.103
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.27 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a62 1
#	ss*	SCSI scanners
a242 8
ss*)
	M ss$U c 42 $(($U*16)) 640 operator
	M nss$U c 42 $(($(($U*16))+1)) 640 operator
	M enss$U c 42 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d426 3
a428 3
	R bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ss0 ss1 ch0 vmel0 vmes0
	R flash0 nvram0 sram0 ptm local uk0 random lkm pf systrace std
	R st0 st1 fd
@


1.102
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.26 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d426 2
a427 2
	R bio pty0 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3 sd4 bpf0
	R std
@


1.101
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d213 1
a213 1
	M diskmap b 54 0 640 operator
@


1.100
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.25 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d71 1
d212 4
d435 3
a437 3
	R bpf8 bpf9 pty0 vscsi0 nnpfs0 ss0 ss1 ch0 vmel0 vmes0 flash0
	R nvram0 sram0 ptm local uk0 random lkm pf systrace std st0
	R st1 fd
@


1.99
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.24 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d70 1
d211 4
d430 3
a432 2
	R bpf8 bpf9 pty0 nnpfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0
	R sram0 ptm local uk0 random lkm pf systrace std st0 st1 fd
@


1.98
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.23 2009/03/01 21:40:49 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
@


1.97
log
@regen
@
text
@d69 1
a69 1
#	xfs*	XFS filesystem node
d210 2
a211 2
xfs*)
	M xfs$U c 51 $U 600
d425 1
a425 1
	R bpf8 bpf9 pty0 xfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0
@


1.96
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.22 2009/01/25 17:30:48 miod Exp 
d45 1
d330 11
d421 6
a426 6
	R ttyw0 ttyw1 ttyw2 ttyw3 tty00 tty01 tty02 tty03 cuaa cuab
	R cuac cuad ttya ttyb ttyc ttyd ccd0 ccd1 ccd2 ccd3 vnd0 vnd1
	R vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 xfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0 sram0 ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
@


1.95
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.21 2008/06/14 23:09:06 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a204 1
	M drum		c 3 0 640 kmem
@


1.94
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.20 2008/06/13 21:07:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d248 1
a248 1
	for pre in " " s u p a
@


1.93
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.19 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d405 2
a406 1
	R pty0 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3 sd4 bpf0 std
@


1.92
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

d56 1
a56 1
#	flash*	NAND flash pseudo-disk devices
d267 2
a268 3
flash*)
	dodisk flash $U major_flash_b 11 $U 0
	dodisk sflash $U major_flash_b 11 $U 2048
@


1.91
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.18 2007/05/27 01:50:36 todd Exp 
d54 1
d283 4
d414 3
a416 3
	R tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R xfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0 sram0 ptm local
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.90
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.17 2007/05/26 19:54:23 todd Exp 
a53 1
#	bio	ioctl tunnel pseudo-device
a281 4
bio)
	M bio c 14 0 600
	;;

d409 3
a411 3
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 xfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0 sram0 ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
@


1.89
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.16 2006/04/16 02:49:52 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d54 1
d57 1
a57 1
#	flash0	On-board flash memory
d268 3
a270 2
flash0)
	M flash0 c 11 0 640 kmem
d283 4
d414 3
a416 3
	R tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R xfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0 sram0 ptm local
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.88
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
@


1.87
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
@


1.86
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
@


1.85
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.15 2005/08/01 22:22:13 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
@


1.84
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d54 1
a54 1
#	fd	fd/* nodes for fdescfs
@


1.83
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d156 1
a156 2
RMlist="rm -f"
MKlist=":"
d159 1
a159 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d163 1
a163 1
	RMlist="$RMlist $1"
d167 1
a167 1
		MKlist="$MKlist;chown $7:$G $1"
d170 10
a179 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a180 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d237 2
a238 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d271 1
a271 1
	RMlist="mkdir -p fd;$RMlist" n=0
d273 1
a273 1
	MKlist="$MKlist;chmod 555 fd"
d426 8
a433 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d435 1
a435 1
	echo "$list" | sh
@


1.82
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d139 1
a139 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.81
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a135 1
	RMlist="$RMlist $1$2? r$1$2?"
d139 2
a140 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a142 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.80
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a172 1
	mklist="$mklist $1"
@


1.79
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.14 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.78
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.77
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.76
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.75
log
@sync
@
text
@d89 1
a89 1
	local t="$1"  
@


1.74
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
@


1.73
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.72
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d64 1
a64 1
#	uk*	SCSI unknown devices
@


1.71
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.70
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
@


1.69
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
@


1.68
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d48 2
a49 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.67
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.13 2004/02/20 19:13:08 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d48 2
a49 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d299 6
a304 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d306 1
a306 1
	while [ $n -lt 16 ]
d308 2
a309 2
		nam=$name$(hex $n)
		off=$(($U*16))
d414 2
a415 2
	R pty1 pty2 xfs0 ss0 ss1 ch0 vmel0 vmes0 flash0 nvram0 sram0
	R ptm local uk0 random lkm pf systrace std st0 st1 fd
@


1.66
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
@


1.65
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.12 2004/02/16 19:01:02 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d36 1
a36 1
#	sd*	SCSI disks
@


1.64
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.11 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 5
#	ramdisk	makes all devices for a ramdisk kernel
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tapes
d33 1
a33 1
#	sd*	SCSI disks
a34 2
#	ccd*	concatenated disk devices
#	vnd*	"file" pseudo-disks
d36 5
d42 2
a43 2
#	ttya-d	standard serial ports
#	cuaa-d	standard call-up devices
a46 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d48 2
d51 1
a51 1
#	par0	Printer port
a52 4
#	uk*	SCSI Unknown device
#	ss*	SCSI scanners
#	ch*	SCSI media changer
#	fd	makes fd/* for the fdescfs
d54 4
a57 1
#	tun*	network tunnel driver
d59 9
a67 9
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	xfs*	XFS filesystem devices
#	sram0	static memory access
#	nvram0	non-volatile memory access
#	flash0	flash memory access
#	vmes0	VMEbus access
#	vmel0	VMEbus access
#	systrace*	system call tracing device
d215 6
a220 2
systrace)
	M systrace c 50 0 644
d227 6
a232 2
vmes0)
	M vmes0 c 32 0 640 kmem
d235 2
a236 2
flash0)
	M flash0 c 11 0 640 kmem
d239 6
a244 2
nvram0)
	M nvram0 c 10 0 640 kmem
a250 4
xfs*)
	M xfs$U c 51 $U 600
	;;

d260 2
a261 2
lkm)
	M lkm c 24 0 640 _lkm
d264 2
a265 2
pf*)
	M pf c 39 0 600
d268 2
a269 2
tun*)
	M tun$U c 23 $U 600
d272 2
a273 2
bpf*)
	M bpf$U c 22 $U 600
d282 2
a283 14
ch*)
	M ch$U c 44 $U 660 operator
	;;

ss*)
	M ss$U c 42 $(($U*16)) 640 operator
	M nss$U c 42 $(($(($U*16))+1)) 640 operator
	M enss$U c 42 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
	;;

uk*)
	M uk$U c 41 $U 640 operator
a293 4
ptm)
	M ptm c 52 0 666
	;;

d312 4
d338 2
a339 2
cua[a-z])
	u=${i#cua*}
d345 1
a345 1
	*) echo unknown cua device $i ;;
d349 1
a349 1
		M cua$u c 12 $(($n+128)) 660 dialer uucp
d354 2
a355 2
tty[a-z])
	u=${i#tty*}
d361 1
a361 1
	*) echo unknown tty device $i ;;
d365 1
a365 1
		M tty$u c 12 $n 660 dialer uucp
d370 12
a381 2
rd*)
	dodisk2 rd $U 9 18 $U 0
d389 4
a396 10
st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 7 $n 660 operator
		M ${pre}rst$U	c 20 $n 660 operator
		n=$(($n+1))
	done
	;;

d411 1
a411 1
	R ptm uk0 random lkm pf systrace std st0 st1 fd
@


1.63
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.10 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.62
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d45 1
a45 1
#	tty*	set of 16 slave psuedo terminals
@


1.61
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.9 2003/09/26 06:58:02 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.60
log
@sync
@
text
@d47 1
d297 4
d410 1
a410 1
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.59
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a421 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d430 1
a430 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.58
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.57
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d83 8
@


1.56
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
@


1.55
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d85 1
a85 1
trunc()
d87 16
a102 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
@


1.54
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d357 1
a357 1
	dodisk svnd $U 6 19 $U 128
@


1.53
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.8 2003/06/18 18:08:59 todd Exp 
d52 1
d255 4
d387 2
a388 2
	R pty1 pty2 xfs0 ss0 ss1 vmel0 vmes0 flash0 nvram0 sram0 uk0
	R random lkm pf systrace std st0 st1 fd
@


1.52
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.7 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.51
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d132 1
a132 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d164 1
a164 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.50
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d167 1
a167 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.49
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d241 1
a241 1
	M lkm c 24 0 640 kmem
@


1.48
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.6 2002/08/21 22:07:43 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.47
log
@sync
@
text
@a65 1
#	altq/	ALTQ control interface
a230 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 52 $U 644
		U=$(($U+1))
	done
	;;

d391 1
a391 1
	R random lkm pf altq systrace std st0 st1 fd
@


1.46
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.50 2002/08/12 10:45:04 miod Exp 
@


1.45
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.5 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d324 2
a325 2
		M tty0$u c major_tty0_c $u 660 dialer uucp
		M cua0$u c major_tty0_c $(($u+128)) 660 dialer uucp
d395 6
a400 6
	R ttyw0 ttyw1 ttyw2 ttyw3 tty000 tty001 tty002 tty003 cuaa
	R cuab cuac cuad ttya ttyb ttyc ttyd ccd0 ccd1 ccd2 ccd3 vnd0
	R vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1
	R tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 pty1 pty2 xfs0 ss0 ss1 vmel0 vmes0 flash0 nvram0 sram0
	R uk0 random lkm pf altq systrace std st0 st1 fd
@


1.44
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.43
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.42
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.4 2002/04/28 14:49:25 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.45 2002/04/21 23:37:02 miod Exp 
d74 1
d205 4
d401 1
a401 1
	R uk0 random lkm pf altq std st0 st1 fd
@


1.41
log
@Regen mvme68k MAKEDEV, and add it to the list of m4 MAKEDEV enabled arches.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme68k/MAKEDEV.md,v 1.3 2002/04/17 22:53:37 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.44 2002/04/17 22:53:04 miod Exp 
d336 5
a340 1
	M cua$u c 12 $(($n+128)) 660 dialer uucp
d352 5
a356 1
	M tty$u c 12 $n 660 dialer uucp
d402 1
a402 1
	ccd*) dodisk ccd $U 5 7 $U 0;;
@


1.40
log
@add missing cd0 devices to ramdisk targets
@
text
@d3 2
a4 1
#	$OpenBSD: MAKEDEV,v 1.39 2002/04/10 02:27:03 deraadt Exp $
d6 7
a12 1
# Copyright (c) 1990 The Regents of the University of California.
d20 2
a21 10
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
d23 10
a32 13
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	$OpenBSD: MAKEDEV,v 1.39 2002/04/10 02:27:03 deraadt Exp $
d35 3
a37 3
#	all	makes all known devices, including local devices,
#		Tries to make the ``standard'' number of each.
#	fd	makes fd/* for the fdescfs.
a39 1
#
a41 1
#
d43 3
a45 3
#	fd*	Floppy disks
#	sd*	SCSI disks, includes flopticals
#	cd*	SCSI cdrom discs
d47 1
a47 2
#	ccd*	concatenated disk driver
#
d49 4
a52 4
#	ttya,b,c,d	standard serial port.
#	tty0?		cl-cd serial ports
#	ttyw?		willowglen vme cl-cd serial ports
#
d54 2
a55 2
#	pty*	set of 16 master and slave pseudo terminals
#
d57 1
a57 3
#	lp0	MVME147 parallel port
#	lptwo0	MVME16x parallel port
#
d59 3
a61 1
#	lkm	loadable kernel modules interface.
a62 1
#	*random	inkernel random number generator
d64 119
a182 15
#	uk*	unknown SCSI
#	ss*	SCSI scanners
#	altq	ALTQ control interface
#
# Machine specific devices:
#	sram	static ram available on some models.
#	nvram	non-volatile ram
#	flash	flash ram available on some models.
#	bugtty	(depricated)
#	vmel	32-bit vme interface
#	vmes	16-bit vme interface

PATH=/sbin:/bin:/usr/sbin:/usr/bin
umask 77
for i
d184 3
d188 22
a209 14
all)
	sh MAKEDEV std fd st0 ttya ttyb ttyc ttyd
	sh MAKEDEV tty00 tty01 tty02 tty03
	sh MAKEDEV ttyw0
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh MAKEDEV vnd0 vnd1 pty0 cd0
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	#sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV pf tun0 tun1 lkm local
	sh MAKEDEV sram0 nvram0 flash0 vmel0 vmes0
	#sh MAKEDEV lp0 lptwo0
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0 altq
d212 2
a213 15
std)
	rm -f console drum kmem mem null zero tty
	rm -f klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod zero		c 2 12	; chmod 666 zero
	mknod null		c 2 2	; chmod 666 null
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 43 0  ; chmod 640 ksyms ; chown root.kmem ksyms
d216 2
a217 5
ramdisk)
	sh MAKEDEV std fd st0 ttya rd0
	sh MAKEDEV tty00 tty01 tty02 tty03
	sh MAKEDEV sd0 sd1 sd2 sd3 cd0
	sh MAKEDEV local random
d220 2
a221 9
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 21 %d;", i, i)}'`)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
d224 2
a225 31
st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st; blk=7; chr=20;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
		mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
		mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
		mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
		mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
		mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
		mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
		chown root.operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 660 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
d228 6
a233 49
sd*|ccd*)
	umask 2 ; unit=`expr $i : '.*[^0-9]\([0-9]*\)'`
	case $i in
	sd*) name=sd; blk=4; chr=8;;
	#ccd*) name=ccd; blk=5; chr=7;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
d236 6
a241 43
vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=6; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
a242 1
	umask 77
d245 28
a272 20
cd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd; blk=8; chr=9;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a   b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}c   b $blk `expr $unit '*' 8 + 2`
		mknod r${name}${unit}a  c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}c  c $chr `expr $unit '*' 8 + 2`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
d275 2
a276 46
ttyw*|tty0*|ttya|ttyb|ttyc|ttyd)
	type=`expr $i : 'tty\(.\)'`
	case $type in
	0)
		unit=`expr $i : 'tty.\(.\)'`
		case $unit in
		0|1|2|3)
			rm -f tty0${unit} cua0${unit}
			mknod tty0${unit} c 13 ${unit}
			mknod cua0${unit} c 13 `expr 128 + ${unit}`
			chown uucp.dialer tty0${unit} cua0${unit}
			chmod 660 tty0${unit} cua0${unit}
			;;
		*)
			echo bad unit for tty0 in: $i
			;;
		esac
		;;
	w)
		unit=`expr $i : 'tty.\(.\)'`
		case $unit in
		0|1|2|3)
			rm -f ttyw${unit} cuaw${unit}
			mknod ttyw${unit} c 30 ${unit}
			mknod cuaw${unit} c 30 `expr 128 + ${unit}`
			chown uucp.dialer ttyw${unit} cuaw${unit}
			chmod 660 ttyw${unit} cuaw${unit}
			;;
		*)
			echo bad unit for ttyw in: $i
			;;
		esac
		;;
	a|b|c|d)
		unit=${type}
		num=`echo ${unit} | tr abcd 0123`
		rm -f tty${unit} cua${unit}
		mknod tty${unit} c 12 ${num}
		mknod cua${unit} c 12 `expr 128 + ${num}`
		chown uucp.dialer tty${unit} cua${unit}
		chmod 660 tty${unit} cua${unit}
		;;
	*)
		echo bad type for tty in: $i
		;;
	esac
d280 4
a283 9
	unit=`expr $i : 'par\(.*\)'`
	rm -f par${unit}
	case $unit in
	0)
		mknod par${unit} c 28 ${unit}
		;;
	*)
		echo bad unit for lp in: $i
		;;
d288 23
a310 30
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x pty%s%x;" \
			    	    "mknod tty%s%x c 4 %d;" \
				    "mknod pty%s%x c 5 %d; ", \
					n, i, n, i, n, i, b+i, n, i, b+i); }'`
		umask 77
d312 1
d316 9
a324 5
bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 22 $unit
	chown root.wheel bpf$unit
d327 10
a336 5
pf)
	rm -f pf
	mknod pf c 39 0
	chown root.wheel pf
	chmod 600 pf
d339 10
a348 6
tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d352 1
a352 8
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	mknod rd${unit}a b 9 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 9 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 18 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 18 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
d355 4
a358 6
lkm)
        rm -f lkm
        mknod lkm c 24 0
        chown root.kmem lkm
        chmod 640 lkm
        ;;
d360 2
a361 12
sram*|nvram*|flash*|vmel*|vmes*)
        rm -f $i
	case $i in
	sram*) maj=7;;
	nvram*) maj=10;;
	flash*) maj=11;;
	vmel*) maj=31;;
	vmes*) maj=32;;
	esac
        mknod $i c ${maj} 0
        chown root.kmem $i
        chmod 640 $i
d364 8
a371 9
random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 40 0
	mknod srandom c 40 1
	mknod urandom c 40 2
	mknod prandom c 40 3
	mknod arandom c 40 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d374 2
a375 6
uk*)
	unit=`expr $i : 'uk\(.*\)'`
	rm -f uk$unit
	mknod uk$unit c 41 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
d378 2
a379 9
ss*)
	unit=`expr $i : 'ss\(.*\)'`
	rm -f ss$unit
	mknod ss$unit c 42 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
d382 7
a388 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
d391 5
a395 4
local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
	umask 77
d403 31
@


1.39
log
@correct name of ramdisk target (and remove crud)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.38 2002/02/14 04:58:36 todd Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.38 2002/02/14 04:58:36 todd Exp $
d125 1
a125 1
	sh MAKEDEV sd0 sd1 sd2 sd3
@


1.38
log
@escapees; it is not yet time (but soon)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.36 2002/02/09 17:58:16 deraadt Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.36 2002/02/09 17:58:16 deraadt Exp $
d122 1
a122 1
raminst)
d125 2
a126 9
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh MAKEDEV pty0 
	#sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV tun0 tun1 lkm local
	sh MAKEDEV sram0 nvram0 flash0 vmel0 vmes0
	#sh MAKEDEV lp0 lptwo0
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0
@


1.37
log
@sync
@
text
@d3 1
a3 33
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
#
#	$OpenBSD$
#
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#!/bin/sh -
#
#	$OpenBSD: MAKEDEV.md,v 1.2 2002/02/09 16:59:50 deraadt Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV.md,v 1.2 2002/02/09 16:59:50 deraadt Exp $
d122 1
a122 1
ramdisk)
a503 156
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

trunc()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	RMlist="$RMlist $1$2? r$1$2?"
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
		let count=count+1
	done
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"

mkl() {
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
}

M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist="$MKlist;chown $7.$G $1"
	} || {
		case $G in
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
		esac
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in

)
	case $i in
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
	$eo "$list"
else
	echo "$list" | sh
fi
@


1.36
log
@not ready for MAKEDEV.md
@
text
@d3 33
a35 1
#	$OpenBSD: MAKEDEV,v 1.34 2002/01/04 03:00:44 deraadt Exp $
d68 1
a68 1
#	$OpenBSD: MAKEDEV,v 1.34 2002/01/04 03:00:44 deraadt Exp $
d154 1
a154 1
raminst)
d536 156
@


1.35
log
@sync, and update, to make "ramdisk" target disk
@
text
@d3 1
a3 33
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
#
#	$OpenBSD$
#
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#!/bin/sh -
#
#	$OpenBSD: MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp $
d122 1
a122 1
ramdisk)
a503 148
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
	esac
}
trunc()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
	esac
}
unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}
dodisk()
{
	n=$(($((${5}*${7:-16}))+${6})) count=0
	RMlist="$RMlist $1$2? r$1$2?"
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
		let count=count+1
	done
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
}
dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"
mkl() {
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
}
M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist="$MKlist;chown $7.$G $1"
	} || {
		case $G in
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
		esac
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
	}
	return 0
}
R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in

)
	case $i in
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
	$eo "$list"
else
	echo "$list" | sh
fi
@


1.34
log
@add missing rm commands; todd ok
@
text
@d3 33
a35 1
#	$OpenBSD: MAKEDEV,v 1.33 2001/06/28 02:58:55 kjc Exp $
d68 1
a68 1
#	$OpenBSD: MAKEDEV,v 1.33 2001/06/28 02:58:55 kjc Exp $
d154 1
a154 1
raminst)
d536 148
@


1.33
log
@add an entry for ALTQ.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.32 2001/06/25 03:20:07 kjell Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.32 2001/06/25 03:20:07 kjell Exp $
d387 4
a390 3
				printf("mknod tty%s%x c 4 %d;" \
					"mknod pty%s%x c 5 %d; ", \
					n, i, b+i, n, i, b+i); }'`
@


1.32
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.31 2001/06/24 23:36:05 kjell Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.31 2001/06/24 23:36:05 kjell Exp $
d74 1
d102 1
a102 1
	sh MAKEDEV ss0
d477 13
@


1.31
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.30 2001/05/30 02:11:20 deraadt Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.30 2001/05/30 02:11:20 deraadt Exp $
d403 1
a403 1
	mknod pf c 73 0
@


1.30
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.29 2000/03/22 07:34:29 niklas Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.29 2000/03/22 07:34:29 niklas Exp $
d96 1
a96 1
	sh MAKEDEV tun0 tun1 lkm local
d399 7
@


1.29
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.28 1999/08/20 17:00:36 downsj Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.28 1999/08/20 17:00:36 downsj Exp $
d93 1
a93 1
	sh MAKEDEV vnd0 vnd1 pty0 cd0 ipl
a398 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 39 0
	mknod ipnat c 39 1
	mknod ipstate c 39 2
	mknod ipauth c 39 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.28
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.27 1998/11/25 04:58:54 millert Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.27 1998/11/25 04:58:54 millert Exp $
d167 1
a167 1
		chmod 640 ${name}${unit} n${name}${unit} \
@


1.27
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.26 1998/11/19 08:18:57 dugsong Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.26 1998/11/19 08:18:57 dugsong Exp $
d309 2
a310 1
			chown uucp.wheel tty0${unit} cua0${unit}
d324 2
a325 1
			chown uucp.wheel ttyw${unit} cuaw${unit}
d338 2
a339 1
		chown uucp.wheel tty${unit} cua${unit}
@


1.26
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.25 1998/09/23 07:30:57 todd Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.25 1998/09/23 07:30:57 todd Exp $
a363 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.25
log
@s/Id/OpenBSD/
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.24 1998/09/15 10:23:22 pattonme Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.24 1998/09/15 10:23:22 pattonme Exp $
d366 11
d380 1
a380 1
	0|1|2|3|4)
@


1.24
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.23 1998/08/24 05:49:54 millert Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.23 1998/08/24 05:49:54 millert Exp $
@


1.23
log
@remove ksyms in std entry like other std things
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.22 1998/08/24 05:29:59 millert Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.22 1998/08/24 05:29:59 millert Exp $
d389 1
a389 1
	rm -f ipl ipnat ipstate 
d393 2
a394 1
	chown root.wheel ipl ipnat ipstate 
@


1.22
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.21 1998/01/26 04:19:43 dgregor Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.21 1998/01/26 04:19:43 dgregor Exp $
d106 1
a106 1
	rm -f klog stdin stdout stderr
@


1.21
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.20 1997/09/16 06:01:01 deraadt Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.20 1997/09/16 06:01:01 deraadt Exp $
d118 1
@


1.20
log
@10 bpf devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.19 1997/05/14 15:41:15 niklas Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.19 1997/05/14 15:41:15 niklas Exp $
d388 1
d390 3
a392 1
	chown root.wheel ipl
@


1.19
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.18 1997/05/13 05:34:54 millert Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.18 1997/05/13 05:34:54 millert Exp $
d93 2
a94 2
	sh MAKEDEV vnd0 vnd1 vnd2 vnd3 vnd4 pty0 
	sh MAKEDEV vnd5 vnd6 cd0 bpf0 bpf1 bpf2 bpf3 ipl
@


1.18
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 1997/04/22 20:26:38 gvf Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.17 1997/04/22 20:26:38 gvf Exp $
d178 1
a178 1
sd*|vnd*|ccd*)
a181 1
	vnd*) name=vnd; blk=6; chr=19;;
d226 47
@


1.17
log
@fix vnd
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1997/02/16 03:57:28 rahnds Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.16 1997/02/16 03:57:28 rahnds Exp $
d418 1
a418 1
	sh MAKEDEV.local
@


1.16
log
@Changes to support rd miniroot building.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1997/02/11 15:03:39 rahnds Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.15 1997/02/11 15:03:39 rahnds Exp $
a189 2
		if [ $name != cd -a $name != vnd ]
		then
a219 1
		fi
@


1.15
log
@changes to support the new disklabeled ramdisk (rd) and 1st cut at
raminst MAKEDEV list.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 1996/12/14 18:23:59 millert Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.14 1996/12/14 18:23:59 millert Exp $
d121 1
a121 1
	sh MAKEDEV std fd st0 ttya
@


1.14
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 1996/12/11 21:47:46 deraadt Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.13 1996/12/11 21:47:46 deraadt Exp $
d120 14
d359 7
a365 5
	mknod  rd$unit b 9 $unit
#	mknod rrd$unit b ??? `expr $unit + 16`
	mknod rd${unit}c b 9 `expr $unit + 16`
	chown root.operator rd$unit rd${unit}c 
	chmod 640 rd$unit rd${unit}c 
@


1.13
log
@support ttyw*
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.12 1996/11/11 20:34:59 kstailey Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.12 1996/11/11 20:34:59 kstailey Exp $
d126 1
a126 1
	chown -R bin.bin fd
@


1.12
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 1996/09/18 22:03:44 deraadt Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.11 1996/09/18 22:03:44 deraadt Exp $
d58 1
d91 1
d241 1
a241 1
tty0*|ttya|ttyb|ttyc|ttyd)
d255 14
@


1.11
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 1996/08/28 08:55:25 deraadt Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.10 1996/08/28 08:55:25 deraadt Exp $
d71 2
d98 2
d366 19
@


1.10
log
@fix all random device node entry stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/07/23 06:32:57 etheisen Exp $
d36 1
a36 1
#	$Id: MAKEDEV,v 1.9 1996/07/23 06:32:57 etheisen Exp $
d102 3
a104 3
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
d142 1
a142 1
		chgrp operator ${name}${unit} n${name}${unit} \
d203 1
a203 1
		chgrp operator ${name}${unit}[a-p] r${name}${unit}[a-p]
d225 1
a225 1
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
d245 1
a245 1
			chown uucp:wheel tty0${unit} cua0${unit}
d258 1
a258 1
		chown uucp:wheel tty${unit} cua${unit}
d328 1
a328 1
	chgrp operator rd$unit rd${unit}c 
d335 1
a335 1
        chown root:kmem lkm
d349 1
a349 1
        chown root:kmem $i
@


1.9
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d36 1
a36 1
#	$Id: MAKEDEV,v 1.8 1996/07/23 06:15:17 etheisen Exp $
d69 1
d95 1
a95 1
	sh MAKEDEV rnd
d351 11
@


1.8
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 2
d36 1
a36 1
#	$Id: MAKEDEV,v 1.7 1996/07/15 14:59:14 mickey Exp $
@


1.7
log
@ad rnd devices.
@
text
@d34 1
a34 1
#	$Id: MAKEDEV,v 1.6 1996/05/27 22:02:47 chuck Exp $
d292 2
a293 2
				printf("mknod tty%s%x c 4 %d; \
					mknod pty%s%x c 5 %d; ", \
@


1.6
log
@sync with ramdisk
@
text
@d34 1
a34 1
#	$Id: MAKEDEV,v 1.5 1996/01/07 07:41:21 dm Exp $
d92 1
@


1.5
log
@created devices for the IP filter log on all architectures
@
text
@d34 1
a34 1
#	$Id: MAKEDEV,v 1.4 1995/11/16 02:54:44 deraadt Exp $
d124 1
a124 1
	st*) name=st; blk=5; chr=20;;
d158 2
a159 2
	vnd*) name=vnd; blk=8; chr=19;;
	#ccd*) name=ccd; blk=8; chr=7;;
d212 1
a212 1
	cd*) name=cd; blk=6; chr=9;;
d317 9
@


1.4
log
@use awk instead of newish sh features
@
text
@d34 1
a34 1
#	$Id: MAKEDEV,v 1.3 1995/11/07 22:50:58 deraadt Exp $
d87 1
a87 1
	sh MAKEDEV vnd5 vnd6 cd0 bpf0 bpf1 bpf2 bpf3
d304 5
@


1.3
log
@fix tty0?, fd, and skip lp/lptwo for now
@
text
@d34 1
a34 1
#	$Id: MAKEDEV,v 1.2 1995/10/31 19:12:45 deraadt Exp $
d289 5
a293 7
		(i=0; while [ $i -lt 16 ]; do
			eval `printf "rm -f tty%s%x; mknod tty%s%x c 4 %d; \
			    rm -f pty%s%x; mknod pty%s%x c 5 %d" $name $i \
			    $name $i $offset $name $i $name $i $offset`
			offset=$(($offset+1))
			i=$(($i+1))
			done)
@


1.2
log
@update to reality
@
text
@d34 1
a34 1
#	$Id: MAKEDEV,v 1.1 1995/10/24 14:43:20 deraadt Exp $
d89 1
a89 1
	sh MAKEDEV tun0 tun1 lp0 lptwo0 lkm local
d91 1
d110 11
d237 1
a237 1
		0)
d270 1
a270 1
		echo bad unit for par in: $i
@


1.1
log
@etc.mvme68k addition
@
text
@d34 1
a34 5
#	$Id: MAKEDEV,v 1.15 1995/08/19 17:28:22 chopps Exp $
#
#	from:
#	hp300/MAKEDEV (1/15/94), from:
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
a52 3
# Console ports:
#	ttye*	ite bitmapped consoles
#
d68 8
d90 1
a90 5
	;;

floppy)
	sh MAKEDEV std st0 ttya ttyb ttyc ttyd tty00 tty01 tty02 tty03
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 cd0
d206 1
a206 1
		mknod ${name}${unit}d   b $blk `expr $unit '*' 8 + 3`
d208 1
d219 2
a220 4
tty0*|ttyA*)
	type=`expr $i : 'tty\(.\).'`
	unit=`expr $i : 'tty.\(.\)'`
	rm -f ser${unit} tty0${unit} ttym${unit}
d222 8
a229 6
	0)	case $unit in
		0)	
			rm -f tty0${unit} ttym${unit}
			mknod tty0${unit} c 12 0
			mknod ttym${unit} c 12 128
			chown uucp:wheel tty0${unit} ttym${unit}
d236 7
a242 11
	A)	case $unit in
		0|1)
			rm -f ttyA${unit} ttyM${unit}
			mknod ttyA${unit} c 17 $unit
			mknod ttyM${unit} c 17 `expr 128 + $unit`
			chown uucp:wheel ttyA${unit} ttyM${unit}
			;;
		*)
			echo bad unit for ttyA in: $i
			;;
		esac
d255 1
a255 1
		mknod par${unit} c 11 ${unit}
a262 14
ttye*)
	unit=`expr $i : 'ttye\(.*\)'`
	rm -f ttye${unit}
	rm -f ite*
	case $unit in
	0|1|2|3|4)
		mknod ttye${unit} c 13 ${unit}
		;;
	*)
		echo bad unit for ttye in: $i
		;;
	esac
	;;

d299 1
a299 1
	mknod tun$unit c 40 $unit
d310 14
@
