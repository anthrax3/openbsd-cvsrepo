head	1.35;
access;
symbols
	OPENBSD_5_5:1.34.0.4
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.32.0.2
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.31.0.4
	OPENBSD_5_2_BASE:1.31
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.2
	OPENBSD_5_0:1.30.0.4
	OPENBSD_5_0_BASE:1.30
	OPENBSD_4_9:1.30.0.2
	OPENBSD_4_9_BASE:1.30
	OPENBSD_4_8:1.28.0.2
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.24.0.4
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.22.0.2
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.21.0.2
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@# @;


1.35
date	2014.03.18.22.36.29;	author miod;	state dead;
branches;
next	1.34;

1.34
date	2014.01.05.01.16.52;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2013.06.03.17.34.15;	author tedu;	state Exp;
branches;
next	1.32;

1.32
date	2012.08.23.06.15.28;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2011.10.06.20.49.27;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2010.09.30.15.27.54;	author claudio;	state Exp;
branches;
next	1.29;

1.29
date	2010.09.04.12.18.03;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2010.07.03.03.59.15;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2010.06.26.23.49.50;	author jsing;	state Exp;
branches;
next	1.26;

1.26
date	2010.06.09.16.10.25;	author todd;	state Exp;
branches;
next	1.25;

1.25
date	2009.08.13.15.12.36;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.23;

1.23
date	2009.03.01.21.40.49;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2008.06.14.23.09.06;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2008.06.13.21.07.28;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.28.22.26.02;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.26.19.54.23;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.16.02.49.52;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.01.22.22.13;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.11.18.05.23;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.20.19.13.08;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.16.19.01.02;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.14.17.24.31;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.26.06.58.02;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.18.18.08.59;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.05.04.30.21;	author kjc;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.21.22.07.43;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.16.21.11.20;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.28.14.49.25;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.17.22.53.37;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.09.16.59.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.08.20.26.36;	author todd;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@define(MACHINE,mvme68k)dnl
vers(__file__,
	{-$OpenBSD: MAKEDEV.md,v 1.34 2014/01/05 01:16:52 deraadt Exp $-},
etc.MACHINE)dnl
dnl
dnl Copyright (c) 2001-2006 Todd T. Fries <todd@@OpenBSD.org>
dnl
dnl Permission to use, copy, modify, and distribute this software for any
dnl purpose with or without fee is hereby granted, provided that the above
dnl copyright notice and this permission notice appear in all copies.
dnl
dnl THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
dnl WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
dnl MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
dnl ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
dnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
dnl ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
dnl OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
dnl
dnl
dnl *** mvme68k-specific devices
dnl
__devitem(mvme_tzs, ttya-d, On-board serial ports,zs)dnl
__devitem(mvme_czs, cuaa-d, On-board call-up devices,zs)dnl
_mkdev(mvme_tzs, {-tty[a-z]-}, {-u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown tty device $i ;;
	esac
	case $u in
	a|b|c|d)
		M tty$u c major_mvme_tzs_c $n 660 dialer uucp
		;;
	esac-})dnl
_mkdev(mvme_czs, cua[a-z], {-u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	*) echo unknown cua device $i ;;
	esac
	case $u in
	a|b|c|d)
		M cua$u c major_mvme_czs_c Add($n, 128) 660 dialer uucp
		;;
	esac-})dnl
__devitem(cl, tty0*, CL-CD2400 serial ports)dnl
_mkdev(cl, {-tty0*-}, {-u=${i#tty0*}
	case $u in
	0|1|2|3)
		M tty0$u c major_cl_c $u 660 dialer uucp
		M cua0$u c major_cl_c Add($u, 128) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac-})dnl
__devitem(ttyd, ttyd*, MC68681 serial ports,nothing)dnl
_mkdev(ttyd, {-ttyd[01]-}, {-u=${i#ttyd*}
	case $u in
	0|1)
		M ttyd$u c major_ttyd_c $u 660 dialer uucp
		M cuad$u c major_ttyd_c Add($u, 128) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac-})dnl
__devitem(ttyw, ttyw*, WG CL-CD2400 serial ports,nothing)dnl
_mkdev(ttyw, {-ttyw*-}, {-u=${i#ttyw*}
	case $u in
	0|1|2|3)
		M ttyw$u c major_ttyw_c $u 660 dialer uucp
		M cuaw$u c major_ttyw_c Add($u, 128) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac-})dnl
__devitem(lp, par0, On-board printer port,nothing)dnl
_mkdev(lp, {-lp*-}, {-u=${i#lp*}
	case $u in
	0) M par$u c major_lp_c $u 600;;
	*) echo unknown lp device $i ;;
	esac-})dnl
__devitem(sram, sram0, On-board static memory)dnl
_mkdev(sram, sram0, {-M sram0 c major_sram_c 0 640 kmem-})dnl
__devitem(nvram, nvram0, On-board non-volatile memory)dnl
_mkdev(nvram, nvram0, {-M nvram0 c major_nvram_c 0 640 kmem-})dnl
__devitem(flash, flash0, On-board flash memory)dnl
_mkdev(flash, flash0, {-M flash0 c major_flash_c 0 640 kmem-})dnl
__devitem(vmes, vmes0, VMEbus D16 space)dnl
_mkdev(vmes, vmes0, {-M vmes0 c major_vmes_c 0 640 kmem-})dnl
__devitem(vmel, vmel0, VMEbus D32 space)dnl
_mkdev(vmel, vmel0, {-M vmel0 c major_vmel_c 0 640 kmem-})dnl
dnl
dnl *** MAKEDEV itself
dnl
_TITLE(make)
dnl
dnl all)
dnl
target(all, sram, 0)dnl
target(all, nvram, 0)dnl
target(all, flash, 0)dnl
target(all, vmes, 0)dnl
target(all, vmel, 0)dnl
dnl
target(all, ch, 0)dnl
target(all, vscsi, 0)dnl
target(all, diskmap)dnl
target(all, pty, 0)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, bio)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, uk, 0)dnl
target(all, vnd, 0, 1, 2, 3)dnl
twrget(all, mvme_tzs, tty, a, b, c, d)dnl
twrget(all, mvme_czs, cua, a, b, c, d)dnl
twrget(all, cl, tty0, 0, 1, 2, 3)dnl
target(all, ttyd, 0, 1)dnl
target(all, ttyw, 0, 1, 2, 3)dnl
dnl target(all, lp, 0)dnl
_DEV(all)
dnl
dnl ramdisk)
dnl
twrget(ramd, mvme_tzs, tty, a)dnl
target(ramd, pty, 0)dnl
target(ramd, bio)dnl
target(ramd, diskmap)dnl
target(ramd, random)dnl
_DEV(ramd)
dnl
_DEV(std)
_DEV(local)
dnl
_TITLE(dis)
_DEV(cd, 9, 8)
_DEV(rd, 18, 9)
_DEV(sd, 8, 4)
_DEV(vnd, 19, 6)
_TITLE(tap)
_DEV(ch, 44)
_DEV(st, 20, 7)
_TITLE(term)
_DEV(mvme_czs, 12)
_DEV(cl, 13)
_DEV(mvme_tzs, 12)
_DEV(ttyd, 14)
_DEV(ttyw, 30)
_TITLE(pty)
_DEV(ptm, 52)
_DEV(pty, 5)
_DEV(tty, 4)
_TITLE(prn)
_DEV(lp, 28)
_TITLE(spec)
_DEV(bio, 27)
_DEV(bpf, 22)
_DEV(diskmap, 54)
_DEV(fdesc, 21)
_DEV(fuse, 57)
_DEV(flash, 11)
_DEV(lkm, 24)
_DEV(nvram, 10)
_DEV(pf, 39)
_DEV(pppx, 55)
_DEV(rnd, 40)
_DEV(sram, 7)
_DEV(systrace, 50)
_DEV(tun, 23)
_DEV(uk, 41)
_DEV(vmel, 31)
_DEV(vmes, 32)
_DEV(vscsi, 53)
dnl
divert(__mddivert)dnl
dnl
_std(1, 2, 43, 6)
	;;

@


1.34
log
@We need /dev/random on the install media
discussed with rpe and halex
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.33 2013/06/03 17:34:15 tedu Exp $-},
@


1.33
log
@fuse on more archs
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.32 2012/08/23 06:15:28 deraadt Exp $-},
d133 1
@


1.32
log
@get rid of the nnpfs nodes
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.31 2011/10/06 20:49:27 deraadt Exp $-},
d163 1
@


1.31
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.30 2010/09/30 15:27:54 claudio Exp $-},
a107 1
target(all, nnpfs, 0)dnl
a164 1
_DEV(nnpfs, 51)
@


1.30
log
@Add pppx(4) to MAKEDEV but do not create the device unless requested
explicitly. OK dlg@@ & todd@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.29 2010/09/04 12:18:03 miod Exp $-},
a119 1
target(all, ccd, 0, 1, 2, 3)dnl
a139 1
_DEV(ccd, 17, 5)
@


1.29
log
@Reorder device entries within sections, for MAKEDEV.8 to have them sorted.
Prodded by jmc@@.
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.28 2010/07/03 03:59:15 krw Exp $-},
d171 1
@


1.28
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.27 2010/06/26 23:49:50 jsing Exp $-},
d151 1
a152 1
_DEV(cl, 13)
d164 1
d168 1
a177 1
_DEV(nnpfs, 51)
a178 1
_DEV(diskmap, 54)
@


1.27
log
@Add /dev/diskmap to ramdisks.

ok todd@@ krw@@ deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.25 2009/08/13 15:12:36 deraadt Exp $-},
a107 1
target(all, ss, 0, 1)dnl
a170 1
_DEV(ss, 42)
@


1.26
log
@add diskmap entries, not on ramdisks yet
get it in! jsing@@
@
text
@d135 1
@


1.25
log
@Add nodes for vscsi0; ok dlg
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.24 2009/06/03 14:45:40 jj Exp $-},
d111 1
d179 1
@


1.24
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.23 2009/03/01 21:40:49 miod Exp $-},
d110 1
d177 1
@


1.23
log
@Support for MVME165 board - code written in april 2006, eventually debugged
last month.
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.22 2009/01/25 17:30:48 miod Exp $-},
d109 1
a109 1
target(all, xfs, 0)dnl
d175 1
a175 1
_DEV(xfs, 51)
@


1.22
log
@Remove /dev/drum and related code.
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.21 2008/06/14 23:09:06 todd Exp $-},
d60 9
d123 1
d151 1
@


1.21
log
@redo the way MAKEDEV files are generated
get it in, deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.20 2008/06/13 21:07:28 todd Exp $-},
d168 1
a168 1
_std(1, 2, 43, 3, 6)
@


1.20
log
@/dev/bio on ramdisks, it is safe and small
ok deraadt@@, marco@@
@
text
@d1 1
d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.19 2007/05/28 22:26:02 todd Exp $-},
@


1.19
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.18 2007/05/27 01:50:36 todd Exp $-},
d121 1
@


1.18
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.17 2007/05/26 19:54:23 todd Exp $-},
d102 1
d147 1
@


1.17
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.16 2006/04/16 02:49:52 todd Exp $-},
a101 1
target(all, bio)dnl
a145 1
_DEV(bio, 14)
@


1.16
log
@shuffle ramdisk device targets to MAKEDEV.common to avoid duplication and
pave the way for future work; ok since this does not change the generated
MAKEDEV
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.15 2005/08/01 22:22:13 deraadt Exp $-},
d102 1
d147 1
@


1.15
log
@old ses device goes away
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.14 2004/04/11 18:05:23 millert Exp $-},
d5 1
a5 1
dnl Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
a117 4
target(ramd, sd, 0, 1, 2, 3, 4)dnl
target(ramd, st, 0, 1)dnl
target(ramd, cd, 0, 1)dnl)dnl
target(ramd, rd, 0)dnl
@


1.14
log
@Update for pty changes (62 per letter instead of just 16)
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.13 2004/02/20 19:13:08 miod Exp $-},
a96 1
target(all, ses, 0)dnl
@


1.13
log
@MAKEDEV.8 improvement pack:
- refer to the section 4 manual page for every device target, whenever
possible
- repair a few minor quoting errors
- repair a few sorting errors
- fix a few device descriptions (ideally they would be synched with the
  .Nd line of their manpages, but we are not there... yet)
- minor mdoc fixes

Thanks to jmc@@ for review and a lot of constructive criticism.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.12 2004/02/16 19:01:02 miod Exp $-},
d101 1
a101 1
target(all, pty, 0, 1, 2)dnl
@


1.12
log
@Harmonize MAKEDEV sources:
- homogenize section order
- sort devices inside sections
- make sure all platforms provide a local target (sigh)
- remove a few dead devices not worth mentioning on a few arches while there.

disabused ok deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.11 2004/02/14 17:24:31 todd Exp $-},
d22 2
a23 2
__devitem(mvme_tzs, ttya-d, On-board serial ports)dnl
__devitem(mvme_czs, cuaa-d, On-board call-up devices)dnl
d59 1
a59 1
__devitem(ttyw, ttyw*, WG CL-CD2400 serial ports)dnl
d68 1
a68 1
__devitem(lp, par0, On-board printer port)dnl
@


1.11
log
@copyright 2004 as well, prompted/reminded by miod
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.10 2004/02/10 01:31:20 millert Exp $-},
d22 2
a23 2
__devitem(mvme_tzs, ttya-d, standard serial ports)dnl
__devitem(mvme_czs, cuaa-d, standard call-up devices)dnl
d68 1
a68 1
__devitem(lp, par0, Printer port)dnl
d74 1
a74 1
__devitem(sram, sram0, static memory access)dnl
d76 1
a76 1
__devitem(nvram, nvram0, non-volatile memory access)dnl
d78 1
a78 1
__devitem(flash, flash0, flash memory access)dnl
d80 1
a80 1
__devitem(vmes, vmes0, VMEbus access)dnl
d82 1
a82 1
__devitem(vmel, vmel0, VMEbus access)dnl
d128 1
a128 1
_DEV(loc)
a129 2
_TITLE(tap)
_DEV(st, 20, 7)
d131 3
a134 2
_DEV(cd, 9, 8)
_DEV(ccd, 17, 5)
d136 3
a138 1
_DEV(rd, 18, 9)
d140 1
a141 1
_DEV(mvme_czs, 12)
d145 2
a147 2
_DEV(pty, 5)
_DEV(ptm, 52)
d151 1
a151 3
_DEV(uk, 41)
_DEV(ss, 42)
_DEV(ch, 44)
d153 3
a155 2
_DEV(bpf, 22)
_DEV(tun, 23)
a156 1
_DEV(lkm, 24)
a157 1
_DEV(xfs, 51)
d159 5
a163 2
_DEV(nvram, 10)
_DEV(flash, 11)
d165 1
a165 2
_DEV(vmel, 31)
_DEV(systrace, 50)
d167 1
a167 1
divert(7)dnl
@


1.10
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.9 2003/09/26 06:58:02 miod Exp $-},
d5 1
a5 1
dnl Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.9
log
@Add majors and devsw entries for the missing scsi devices on mvme*8k.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.8 2003/06/18 18:08:59 todd Exp $-},
d146 1
@


1.8
log
@switch to share/misc/license.template
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.7 2002/12/05 04:30:21 kjc Exp $-},
d151 1
@


1.7
log
@remove altq entries.  I should have done these before MAKEDEV.
pointed out by todd@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.6 2002/08/21 22:07:43 miod Exp $-},
d5 1
a5 2
dnl Copyright (c) 2002, Miodrag Vallat.
dnl All rights reserved.
d7 3
a9 7
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions
dnl are met:
dnl 1. Redistributions of source code must retain the above copyright
dnl    notice, this list of conditions and the following disclaimer.
dnl 2. The name of the author may not be used to endorse or promote products
dnl    derived from this software without specific prior written permission.
d11 7
a17 10
dnl THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
dnl INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
dnl AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
dnl THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
dnl EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
dnl PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
dnl OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
dnl WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
dnl OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
dnl ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.6
log
@Correct tty0[0-3] device nodes generation.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.5 2002/05/16 21:11:20 miod Exp $-},
a164 1
_DEV(altq, 52)
@


1.5
log
@Add systrace support to all the remaining architectures.

Tested by various people on various platforms, I'm willing to fix any
breakage this causes.

ok niels@@ deraadt@@ and mickey@@ (after his comments were applied)
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.4 2002/04/28 14:49:25 miod Exp $-},
d58 2
a59 3
dnl tty00 not tty0 to prevent description conflict
__devitem(tty00, tty0*, CL-CD2400 serial ports)dnl
_mkdev(tty00, {-tty0*-}, {-u=${i#tty0*}
d62 2
a63 2
		M tty0$u c major_tty0_c $u 660 dialer uucp
		M cua0$u c major_tty0_c Add($u, 128) 660 dialer uucp
d120 1
a120 1
target(all, tty00, 0, 1, 2, 3)dnl
d149 1
a149 1
_DEV(tty00, 13)
@


1.4
log
@Fix ccd entry, and remove a duplicate.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.3 2002/04/17 22:53:37 miod Exp $-},
d173 1
@


1.3
log
@Switch mvme68k to the m4 MAKEDEV scheme.
As a bonus, we do not need awk(1) anymore to run MAKEDEV.
ok deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD$-},
d40 5
a44 1
	M tty$u c major_mvme_tzs_c $n 660 dialer uucp-})dnl
d53 5
a57 1
	M cua$u c major_mvme_czs_c Add($n, 128) 660 dialer uucp-})dnl
a115 1
target(all, ss, 0, 1)dnl
d144 1
a144 1
_DEV(ccd, 7, 5)
@


1.2
log
@use "ramdisk" for the ramdisk target, always
@
text
@d1 169
a169 345
#!/bin/sh -
#
#	$OpenBSD: MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	$OpenBSD: MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp $
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices,
#		Tries to make the ``standard'' number of each.
#	fd	makes fd/* for the fdescfs.
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	fd*	Floppy disks
#	sd*	SCSI disks, includes flopticals
#	cd*	SCSI cdrom discs
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk driver
#
# Terminal ports:
#	ttya,b,c,d	standard serial port.
#	tty0?		cl-cd serial ports
#	ttyw?		willowglen vme cl-cd serial ports
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Printers:
#	lp0	MVME147 parallel port
#	lptwo0	MVME16x parallel port
#
# Special purpose devices:
#	lkm	loadable kernel modules interface.
#	bpf*	Berkeley Packet Filter
#	*random	inkernel random number generator
#	tun*	network tunnel driver
#	uk*	unknown SCSI
#	ss*	SCSI scanners
#	altq	ALTQ control interface
#
# Machine specific devices:
#	sram	static ram available on some models.
#	nvram	non-volatile ram
#	flash	flash ram available on some models.
#	bugtty	(depricated)
#	vmel	32-bit vme interface
#	vmes	16-bit vme interface

PATH=/sbin:/bin:/usr/sbin:/usr/bin
umask 77
for i
do
case $i in
all)
	sh MAKEDEV std fd st0 ttya ttyb ttyc ttyd
	sh MAKEDEV tty00 tty01 tty02 tty03
	sh MAKEDEV ttyw0
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh MAKEDEV vnd0 vnd1 pty0 cd0
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	#sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV pf tun0 tun1 lkm local
	sh MAKEDEV sram0 nvram0 flash0 vmel0 vmes0
	#sh MAKEDEV lp0 lptwo0
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0 altq
	;;

std)
	rm -f console drum kmem mem null zero tty
	rm -f klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod zero		c 2 12	; chmod 666 zero
	mknod null		c 2 2	; chmod 666 null
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 43 0  ; chmod 640 ksyms ; chown root.kmem ksyms
	;;

ramdisk)
	sh MAKEDEV std fd st0 ttya rd0
	sh MAKEDEV tty00 tty01 tty02 tty03
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh MAKEDEV pty0 
	#sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV tun0 tun1 lkm local
	sh MAKEDEV sram0 nvram0 flash0 vmel0 vmes0
	#sh MAKEDEV lp0 lptwo0
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 21 %d;", i, i)}'`)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st; blk=7; chr=20;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
		mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
		mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
		mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
		mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
		mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
		mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
		chown root.operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 660 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
	;;

sd*|ccd*)
	umask 2 ; unit=`expr $i : '.*[^0-9]\([0-9]*\)'`
	case $i in
	sd*) name=sd; blk=4; chr=8;;
	#ccd*) name=ccd; blk=5; chr=7;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=6; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
	umask 77
	;;

cd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd; blk=8; chr=9;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a   b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}c   b $blk `expr $unit '*' 8 + 2`
		mknod r${name}${unit}a  c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}c  c $chr `expr $unit '*' 8 + 2`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

ttyw*|tty0*|ttya|ttyb|ttyc|ttyd)
	type=`expr $i : 'tty\(.\)'`
	case $type in
	0)
		unit=`expr $i : 'tty.\(.\)'`
		case $unit in
		0|1|2|3)
			rm -f tty0${unit} cua0${unit}
			mknod tty0${unit} c 13 ${unit}
			mknod cua0${unit} c 13 `expr 128 + ${unit}`
			chown uucp.dialer tty0${unit} cua0${unit}
			chmod 660 tty0${unit} cua0${unit}
			;;
		*)
			echo bad unit for tty0 in: $i
			;;
		esac
		;;
	w)
		unit=`expr $i : 'tty.\(.\)'`
		case $unit in
		0|1|2|3)
			rm -f ttyw${unit} cuaw${unit}
			mknod ttyw${unit} c 30 ${unit}
			mknod cuaw${unit} c 30 `expr 128 + ${unit}`
			chown uucp.dialer ttyw${unit} cuaw${unit}
			chmod 660 ttyw${unit} cuaw${unit}
			;;
		*)
			echo bad unit for ttyw in: $i
			;;
		esac
		;;
	a|b|c|d)
		unit=${type}
		num=`echo ${unit} | tr abcd 0123`
		rm -f tty${unit} cua${unit}
		mknod tty${unit} c 12 ${num}
		mknod cua${unit} c 12 `expr 128 + ${num}`
		chown uucp.dialer tty${unit} cua${unit}
		chmod 660 tty${unit} cua${unit}
		;;
	*)
		echo bad type for tty in: $i
		;;
	esac
a171 156
lp*)
	unit=`expr $i : 'par\(.*\)'`
	rm -f par${unit}
	case $unit in
	0)
		mknod par${unit} c 28 ${unit}
		;;
	*)
		echo bad unit for lp in: $i
		;;
	esac
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x pty%s%x;" \
			    	    "mknod tty%s%x c 4 %d;" \
				    "mknod pty%s%x c 5 %d; ", \
					n, i, n, i, n, i, b+i, n, i, b+i); }'`
		umask 77
		;;
	esac
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 22 $unit
	chown root.wheel bpf$unit
	;;

pf)
	rm -f pf
	mknod pf c 39 0
	chown root.wheel pf
	chmod 600 pf
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	mknod rd${unit}a b 9 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 9 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 18 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 18 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;

lkm)
        rm -f lkm
        mknod lkm c 24 0
        chown root.kmem lkm
        chmod 640 lkm
        ;;

sram*|nvram*|flash*|vmel*|vmes*)
        rm -f $i
	case $i in
	sram*) maj=7;;
	nvram*) maj=10;;
	flash*) maj=11;;
	vmel*) maj=31;;
	vmes*) maj=32;;
	esac
        mknod $i c ${maj} 0
        chown root.kmem $i
        chmod 640 $i
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 40 0
	mknod srandom c 40 1
	mknod urandom c 40 2
	mknod prandom c 40 3
	mknod arandom c 40 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;

uk*)
	unit=`expr $i : 'uk\(.*\)'`
	rm -f uk$unit
	mknod uk$unit c 41 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
	;;

ss*)
	unit=`expr $i : 'ss\(.*\)'`
	rm -f ss$unit
	mknod ss$unit c 42 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
	;;

altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
	umask 77
	;;

*)
	echo $i: unknown device
	;;
esac
done
@


1.1
log
@prepare for invasion, sparc64 gets major number fix wrt tty[a-d]
order a few places
provide '[ "$DEBUG" ] && set -x' inside R() for debugging help ..
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.34 2002/01/04 03:00:44 deraadt Exp $
d36 1
a36 1
#	$OpenBSD: MAKEDEV,v 1.34 2002/01/04 03:00:44 deraadt Exp $
d122 1
a122 1
raminst)
@

