head	1.100;
access;
symbols
	OPENBSD_5_5:1.99.0.4
	OPENBSD_5_5_BASE:1.99
	OPENBSD_5_4:1.96.0.2
	OPENBSD_5_4_BASE:1.96
	OPENBSD_5_3:1.93.0.2
	OPENBSD_5_3_BASE:1.93
	OPENBSD_5_2:1.90.0.2
	OPENBSD_5_2_BASE:1.90
	OPENBSD_5_1_BASE:1.89
	OPENBSD_5_1:1.89.0.2
	OPENBSD_5_0:1.88.0.2
	OPENBSD_5_0_BASE:1.88
	OPENBSD_4_9:1.86.0.2
	OPENBSD_4_9_BASE:1.86
	OPENBSD_4_8:1.84.0.2
	OPENBSD_4_8_BASE:1.84
	OPENBSD_4_7:1.78.0.2
	OPENBSD_4_7_BASE:1.78
	OPENBSD_4_6:1.77.0.4
	OPENBSD_4_6_BASE:1.77
	OPENBSD_4_5:1.75.0.2
	OPENBSD_4_5_BASE:1.75
	OPENBSD_4_4:1.73.0.2
	OPENBSD_4_4_BASE:1.73
	OPENBSD_4_3:1.72.0.4
	OPENBSD_4_3_BASE:1.72
	OPENBSD_4_2:1.72.0.2
	OPENBSD_4_2_BASE:1.72
	OPENBSD_4_1:1.68.0.2
	OPENBSD_4_1_BASE:1.68
	OPENBSD_4_0:1.65.0.2
	OPENBSD_4_0_BASE:1.65
	OPENBSD_3_9:1.64.0.2
	OPENBSD_3_9_BASE:1.64
	OPENBSD_3_8:1.59.0.2
	OPENBSD_3_8_BASE:1.59
	OPENBSD_3_7:1.57.0.2
	OPENBSD_3_7_BASE:1.57
	OPENBSD_3_6:1.52.0.2
	OPENBSD_3_6_BASE:1.52
	OPENBSD_3_5:1.46.0.2
	OPENBSD_3_5_BASE:1.46
	OPENBSD_3_4:1.30.0.2
	OPENBSD_3_4_BASE:1.30
	OPENBSD_3_3:1.28.0.2
	OPENBSD_3_3_BASE:1.28
	OPENBSD_3_2:1.23.0.2
	OPENBSD_3_2_BASE:1.23
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@# @;


1.100
date	2014.03.18.22.36.29;	author miod;	state dead;
branches;
next	1.99;

1.99
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.98;

1.98
date	2013.11.21.11.06.09;	author kettenis;	state Exp;
branches;
next	1.97;

1.97
date	2013.11.05.16.06.29;	author deraadt;	state Exp;
branches;
next	1.96;

1.96
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.95;

1.95
date	2013.06.15.23.20.58;	author halex;	state Exp;
branches;
next	1.94;

1.94
date	2013.06.03.17.34.15;	author tedu;	state Exp;
branches;
next	1.93;

1.93
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.92;

1.92
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.91;

1.91
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.90;

1.90
date	2012.04.06.15.32.57;	author jsing;	state Exp;
branches;
next	1.89;

1.89
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.88;

1.88
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.87;

1.87
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.86;

1.86
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.85;

1.85
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.84;

1.84
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.83;

1.83
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.82;

1.82
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.81;

1.81
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.80;

1.80
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.79;

1.79
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.78;

1.78
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.77;

1.77
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.76;

1.76
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.75;

1.75
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.74;

1.74
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.73;

1.73
date	2008.06.13.21.09.11;	author todd;	state Exp;
branches;
next	1.72;

1.72
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.71;

1.71
date	2007.05.28.22.29.57;	author todd;	state Exp;
branches;
next	1.70;

1.70
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.69;

1.69
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.68;

1.68
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.67;

1.67
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.66;

1.66
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.65;

1.65
date	2006.08.28.21.23.34;	author tsi;	state Exp;
branches;
next	1.64;

1.64
date	2005.12.27.19.03.09;	author miod;	state Exp;
branches;
next	1.63;

1.63
date	2005.10.06.06.44.00;	author otto;	state Exp;
branches;
next	1.62;

1.62
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.61;

1.61
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.60;

1.60
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.59;

1.59
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.58;

1.58
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.57;

1.57
date	2005.03.01.13.37.10;	author otto;	state Exp;
branches;
next	1.56;

1.56
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.55;

1.55
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.54;

1.54
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.53;

1.53
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.52;

1.52
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.51;

1.51
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.50;

1.50
date	2004.05.30.08.24.12;	author grange;	state Exp;
branches;
next	1.49;

1.49
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2004.04.11.18.15.23;	author millert;	state Exp;
branches;
next	1.47;

1.47
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.46;

1.46
date	2004.03.12.04.54.33;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2004.02.16.19.05.06;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.42;

1.42
date	2004.02.13.23.35.04;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.40;

1.40
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	2004.02.05.22.23.30;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2004.01.12.22.33.10;	author todd;	state Exp;
branches;
next	1.37;

1.37
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	2004.01.05.20.12.21;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2003.12.30.10.34.00;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2003.10.15.02.01.25;	author todd;	state Exp;
branches;
next	1.33;

1.33
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.32;

1.32
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.31;

1.31
date	2003.09.26.06.58.27;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2003.06.18.18.11.08;	author todd;	state Exp;
branches;
next	1.29;

1.29
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.28;

1.28
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.27;

1.27
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.25;

1.25
date	2002.12.05.03.00.27;	author kjc;	state Exp;
branches;
next	1.24;

1.24
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.23;

1.23
date	2002.08.21.22.08.03;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.21;

1.21
date	2002.06.09.05.58.39;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2002.05.16.21.12.22;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2002.04.28.14.56.56;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.14.04.58.36;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.09.17.01.41;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.01.02.32.17;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.28.02.58.55;	author kjc;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.25.03.20.11;	author kjell;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.24.23.36.06;	author kjell;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.30.02.11.21;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.12.23.23.50;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.28.23.31.28;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.22.07.34.29;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	99.03.03.05.47.08;	author smurph;	state Exp;
branches;
next	1.6;

1.6
date	98.11.25.04.58.54;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.11.19.08.18.57;	author dugsong;	state Exp;
branches;
next	1.4;

1.4
date	97.09.16.03.03.00;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.05.14.15.41.16;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	97.05.13.05.34.55;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.03.25.17.06.34;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.100
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.33 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	tty0*	MVME1x7 CL-CD2400 serial ports
#	ttya-b	MVME188 serial ports
#	ttyv*	MVME332XT serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Special purpose devices:
#	bio	ioctl tunnel pseudo-device
#	bpf*	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	lkm	Loadable kernel modules interface
#	nvram0	On-board non-volatile memory
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	sram0	On-board static memory
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	uk*	Unknown SCSI devices
#	vmel0	VMEbus D32 space
#	vmes0	VMEbus D16 space
#	vscsi*	Virtual SCSI controller
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 43 0 640 kmem
	M klog		c 6 0 600
	;;


vscsi*)
	M vscsi$U c 53 $U 600
	;;

vmes0)
	M vmes0 c 32 0 640 kmem
	;;

vmel0)
	M vmel0 c 31 0 640 kmem
	;;

uk*)
	M uk$U c 41 $U 640 operator
	;;

tun*)
	M tun$U c 23 $U 600
	;;

systrace)
	M systrace c 50 0 644
	;;

sram0)
	M sram0 c 7 0 640 kmem
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 40 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 55 $U 600
	;;

pf*)
	M pf c 39 0 600
	;;

nvram0)
	M nvram0 c 10 0 640 kmem
	;;

lkm)
	M lkm c 24 0 640 _lkm
	;;

fuse)
	M fuse$U c 45 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 54 0 640 operator
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

bio)
	M bio c 49 0 600
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 52 0 666
	;;

ttyv*)
	u=${i#ttyv*}
	case $u in
	0|1|2|3|4|5|6|7)
		M ttyv$u c 15 $u 660 dialer uucp
		M cuav$u c 15 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	*) echo unknown tty device $i ;;
	esac
	case $u in
	a|b|c|d)
		M tty$u c 12 $n 660 dialer uucp
		M cua$u c 12 $(($n+128)) 660 dialer uucp
		;;
	esac
	;;

tty0*)
	u=${i#tty0*}
	case $u in
	0|1|2|3|4|5|6|7)
		M tty0$u c 13 $u 660 dialer uucp
		M cua0$u c 13 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 20 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 44 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 8 19 $U 0
	;;

rd*)
	dodisk2 rd $U 7 18 $U 0
	;;

cd*)
	dodisk2 cd $U 6 9 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

ramdisk)
	R diskmap bio pty0 tty00 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2
	R sd3 sd4 bpf0 std
	;;

all)
	R ttyv0 ttyv1 ttyv2 ttyv3 ttyv4 ttyv5 ttyv6 ttyv7 tty00 tty01
	R tty02 tty03 tty04 tty05 tty06 tty07 ttya ttyb vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R diskmap vscsi0 ch0 vmel0 vmes0 nvram0 sram0 fuse pppx ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
	;;

sd*)
	case $i in
	sd*) dodisk sd $U 4 8 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
        cat
else
	sh
fi
@


1.99
log
@sync
@
text
@@


1.98
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.32 2013/06/03 17:34:15 tedu Exp 
@


1.97
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.96
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
@


1.95
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d53 1
a53 1
#	fuse*	Userland Filesystem
d259 1
a259 1
fuse*)
d384 2
a385 3
	R diskmap vscsi0 ch0 vmel0 vmes0 nvram0 sram0 fuse0 fuse1
	R fuse2 fuse3 pppx ptm local uk0 random lkm pf systrace std
	R st0 st1 fd
@


1.94
log
@fuse on more archs
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.31 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d53 1
a53 1
#	fuse	Userland Filesystem
d259 1
a259 1
fuse)
d384 3
a386 2
	R diskmap vscsi0 ch0 vmel0 vmes0 nvram0 sram0 fuse pppx ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
@


1.93
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d53 1
d259 4
d384 2
a385 2
	R diskmap vscsi0 ch0 vmel0 vmes0 nvram0 sram0 pppx ptm local
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.92
log
@regen
@
text
@d379 2
a380 2
	R diskmap vscsi0 ch0 vmel0 vmes0 nvram0 sram0 ptm local uk0
	R random lkm pf systrace std st0 st1 fd
@


1.91
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d164 1
a164 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d168 1
a168 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d172 1
a172 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d176 1
a176 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.90
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.30 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a53 1
#	nnpfs*	NNPFS filesystem node
a253 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d379 2
a380 2
	R diskmap vscsi0 nnpfs0 ch0 vmel0 vmes0 nvram0 sram0 ptm local
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.89
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
@


1.88
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.29 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d381 5
a385 6
	R tty02 tty03 tty04 tty05 tty06 tty07 ttya ttyb ccd0 ccd1 ccd2
	R ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 vmel0 vmes0
	R nvram0 sram0 ptm local uk0 random lkm pf systrace std st0
	R st1 fd
d388 1
a388 1
sd*|ccd*)
a390 1
	ccd*) dodisk ccd $U 9 17 $U 0;;
@


1.87
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.86
log
@regen
@
text
@a360 1
	dodisk svnd $U 8 19 $U 2048
@


1.85
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.27 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d58 1
d242 4
@


1.84
log
@regen
@
text
@d52 1
d55 1
d62 1
a64 2
#	uk*	Unknown SCSI devices
#	nnpfs*	NNPFS filesystem node
a65 1
#	diskmap	Disk mapper
a205 4
diskmap)
	M diskmap c 54 0 640 operator
	;;

a209 8
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

uk*)
	M uk$U c 41 $U 640 operator
	;;

d218 4
d251 4
d263 4
@


1.83
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
@


1.82
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.81
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.26 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a57 1
#	ss*	SCSI scanners
a237 8
ss*)
	M ss$U c 42 $(($U*16)) 640 operator
	M nss$U c 42 $(($(($U*16))+1)) 640 operator
	M enss$U c 42 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d381 3
a383 3
	R bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ss0 ch0 vmel0
	R vmes0 nvram0 sram0 ptm local uk0 random lkm pf systrace std
	R st0 st1 fd
@


1.80
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.25 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d381 2
a382 2
	R bio pty0 tty00 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3 sd4
	R bpf0 std
@


1.79
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d208 1
a208 1
	M diskmap b 54 0 640 operator
@


1.78
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.24 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d66 1
d207 4
d390 3
a392 2
	R bpf7 bpf8 bpf9 pty0 vscsi0 nnpfs0 ss0 ch0 vmel0 vmes0 nvram0
	R sram0 ptm local uk0 random lkm pf systrace std st0 st1 fd
@


1.77
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.23 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d65 1
d206 4
d385 2
a386 2
	R bpf7 bpf8 bpf9 pty0 nnpfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0
	R ptm local uk0 random lkm pf systrace std st0 st1 fd
@


1.76
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.22 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
@


1.75
log
@regen
@
text
@d64 1
a64 1
#	xfs*	XFS filesystem node
d205 2
a206 2
xfs*)
	M xfs$U c 51 $U 600
d380 1
a380 1
	R bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0
@


1.74
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.21 2008/06/14 23:09:06 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a200 1
	M drum		c 3 0 640 kmem
@


1.73
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.20 2008/06/13 21:07:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d244 1
a244 1
	for pre in " " s u p a
@


1.72
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.19 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d372 1
a372 1
	R pty0 tty00 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3 sd4
@


1.71
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.70
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.18 2007/05/27 01:50:36 todd Exp 
d51 1
d274 4
d381 3
a383 3
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 xfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0 ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
@


1.69
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.17 2007/05/26 19:54:23 todd Exp 
a50 1
#	bio	ioctl tunnel pseudo-device
a272 4
bio)
	M bio c 14 0 600
	;;

d376 3
a378 3
	R tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0
	R ptm local uk0 random lkm pf systrace std st0 st1 fd
@


1.68
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.16 2006/04/16 02:49:52 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d51 1
d274 4
d381 3
a383 3
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 xfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0 ptm
	R local uk0 random lkm pf systrace std st0 st1 fd
@


1.67
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
@


1.66
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
@


1.65
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
@


1.64
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.15 2005/08/01 22:22:13 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
@


1.63
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d51 1
a51 1
#	fd	fd/* nodes for fdescfs
@


1.62
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d152 1
a152 2
RMlist="rm -f"
MKlist=":"
d155 1
a155 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d159 1
a159 1
	RMlist="$RMlist $1"
d163 1
a163 1
		MKlist="$MKlist;chown $7:$G $1"
d166 10
a175 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a176 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d233 2
a234 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d263 1
a263 1
	RMlist="mkdir -p fd;$RMlist" n=0
d265 1
a265 1
	MKlist="$MKlist;chmod 555 fd"
d394 8
a401 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d403 1
a403 1
	echo "$list" | sh
@


1.61
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d135 1
a135 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.60
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a131 1
	RMlist="$RMlist $1$2? r$1$2?"
d135 2
a136 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a138 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.59
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a168 1
	mklist="$mklist $1"
@


1.58
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.14 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.57
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.56
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.55
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.54
log
@sync
@
text
@d85 1
a85 1
	local t="$1"  
@


1.53
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
@


1.52
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.51
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d62 1
a62 1
#	uk*	SCSI unknown devices
@


1.50
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.49
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
@


1.48
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
@


1.47
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d47 2
a48 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.46
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.13 2004/02/16 19:01:02 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d47 2
a48 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d283 6
a288 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d290 1
a290 1
	while [ $n -lt 16 ]
d292 2
a293 2
		nam=$name$(hex $n)
		off=$(($U*16))
d382 2
a383 2
	R bpf8 bpf9 pty0 pty1 pty2 xfs0 ss0 ch0 vmel0 vmes0 nvram0
	R sram0 ptm local uk0 random lkm pf systrace std st0 st1 fd
@


1.45
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
@


1.44
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d36 1
a36 1
#	sd*	SCSI disks
@


1.43
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.12 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 5
#	ramdisk	makes all devices for a ramdisk kernel
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tapes
d33 1
a33 1
#	sd*	SCSI disks
a34 2
#	ccd*	concatenated disk devices
#	vnd*	"file" pseudo-disks
d36 5
a41 1
#	ttya-b	MVME188 standard serial ports
d43 1
a45 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d47 2
a49 4
#	uk*	SCSI Unknown device
#	ss*	SCSI scanners
#	ch*	SCSI media changer
#	fd	makes fd/* for the fdescfs
d51 3
a53 1
#	tun*	network tunnel driver
d55 9
a63 8
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	xfs*	XFS filesystem devices
#	sram0	static memory access
#	nvram0	non-volatile memory access
#	vmes0	VMEbus access
#	vmel0	VMEbus access
#	systrace*	system call tracing device
d211 10
a220 2
systrace)
	M systrace c 50 0 644
d227 6
a232 2
vmes0)
	M vmes0 c 32 0 640 kmem
d235 6
a240 2
nvram0)
	M nvram0 c 10 0 640 kmem
a246 4
xfs*)
	M xfs$U c 51 $U 600
	;;

a255 4
lkm)
	M lkm c 24 0 640 _lkm
	;;

d260 2
a261 2
tun*)
	M tun$U c 23 $U 600
d264 2
a265 2
bpf*)
	M bpf$U c 22 $U 600
d274 2
a275 18
ch*)
	M ch$U c 44 $U 660 operator
	;;

ss*)
	M ss$U c 42 $(($U*16)) 640 operator
	M nss$U c 42 $(($(($U*16))+1)) 640 operator
	M enss$U c 42 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
	;;

uk*)
	M uk$U c 41 $U 640 operator
	;;

ptm)
	M ptm c 52 0 666
d296 4
a310 11
tty0*)
	u=${i#tty0*}
	case $u in
	0|1|2|3|4|5|6|7)
		M tty0$u c 13 $u 660 dialer uucp
		M cua0$u c 13 $(($u+128)) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac
	;;

d326 9
a334 11
rd*)
	dodisk2 rd $U 7 18 $U 0
	;;

vnd*)
	dodisk vnd $U 8 19 $U 0
	dodisk svnd $U 8 19 $U 2048
	;;

cd*)
	dodisk2 cd $U 6 9 $U 0
d347 17
d379 1
a379 1
	R sram0 ptm uk0 random lkm pf systrace std st0 st1 fd
@


1.42
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.11 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.41
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d44 1
a44 1
#	tty*	set of 16 slave psuedo terminals
@


1.40
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.10 2004/01/05 20:11:56 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.39
log
@sync
@
text
@d46 1
d281 4
d378 1
a378 1
	R sram0 uk0 random lkm pf systrace std st0 st1 fd
@


1.38
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a389 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d398 1
a398 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.37
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.36
log
@Regen (M8120 tty04-tty07 support).
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d79 8
@


1.35
log
@Regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.9 2003/12/30 10:33:24 miod Exp 
d304 1
a304 1
	0|1|2|3)
d361 5
a365 5
	R tty02 tty03 ttya ttyb ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1
	R pty2 xfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0 uk0 random lkm pf
	R systrace std st0 st1 fd
@


1.34
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.8 2003/09/26 06:58:04 miod Exp 
d40 1
a40 1
#	ttya-d	MVME188 standard serial ports
a316 2
	c) n=2 ;;
	d) n=3 ;;
d361 5
a365 5
	R tty02 tty03 ttya ttyb ttyc ttyd ccd0 ccd1 ccd2 ccd3 vnd0
	R vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1
	R tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 pty1 pty2 xfs0 ss0 ch0 vmel0 vmes0 nvram0 sram0 uk0
	R random lkm pf systrace std st0 st1 fd
@


1.33
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
@


1.32
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d81 1
a81 1
trunc()
d83 16
a98 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
@


1.31
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d326 1
a326 1
	dodisk svnd $U 8 19 $U 128
@


1.30
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.7 2003/06/18 18:08:59 todd Exp 
d47 3
d247 16
d357 2
a358 2
	R pty0 pty1 pty2 xfs0 vmel0 vmes0 nvram0 sram0 random lkm pf
	R systrace std st0 st1 fd
@


1.29
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.6 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.28
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d126 1
a126 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d158 1
a158 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.27
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d161 1
a161 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.26
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d231 1
a231 1
	M lkm c 24 0 640 kmem
@


1.25
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.5 2002/08/21 22:07:44 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.24
log
@sync
@
text
@a60 1
#	altq/	ALTQ control interface
a220 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 52 $U 644
		U=$(($U+1))
	done
	;;

d347 1
a347 1
	R altq systrace std st0 st1 fd
@


1.23
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.50 2002/08/12 10:45:04 miod Exp 
@


1.22
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.4 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d346 2
a347 1
	R pty0 ttya rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3 sd4 bpf0 std
@


1.21
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.20
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.19
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mvme88k/MAKEDEV.md,v 1.3 2002/04/28 14:56:40 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.45 2002/04/21 23:37:02 miod Exp 
d68 1
d199 4
d356 1
a356 1
	R altq std st0 st1 fd
@


1.18
log
@escapees; it is not yet time (but soon)
@
text
@d3 2
a4 2
#	$OpenBSD: MAKEDEV,v 1.16 2002/02/09 17:01:41 deraadt Exp $
#	$NetBSD: MAKEDEV,v 1.5 1997/01/01 23:46:23 pk Exp $
d6 3
a8 2
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
d10 1
a10 1
# Written and contributed by W. Jolitz 12/90
d12 2
a13 13
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d15 18
a32 1
#	@@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
d36 2
a37 1
#		Tries to make the 'standard' number of each type.
a39 1
#
a41 1
#
d44 2
a45 2
#	cd*	SCSI CD-ROM
#	rd*	"ramdisk" pseudo-disks
d47 5
a51 2
#	ccd*	contatenated disk devices
#
d53 2
a54 8
#	pty*	set of 16 master and slave pseudo terminals
#
# Printers:
#	lpt*	stock lp
#	lpa*	interruptless lp
#
# Call units:
#
d56 4
a59 1
#	bpf*	packet filter
d61 116
a176 18
#	tun*	network tunnel driver
#	ss*	SCSI scanner
#	uk*	SCSI unknown
#	ch*	SCSI changer
#	altq	ALTQ control interface
#
# Machine specific devices:
#	sram	static ram available on some models.
#	nvram	non-volatile ram
#	flash	flash ram available on some models.
#	bugtty	(depricated)
#	vmel	32-bit vme interface
#	vmes	16-bit vme interface

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/etc
this=$0
umask 77
for i
d178 3
d182 14
d197 3
a199 14
all)
	sh $this std fd st0 ttya ttyb ttyc ttyd
	sh $this tty00 tty01 tty02 tty03
	sh $this ttyw0
	sh $this sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh $this vnd0 vnd1 pty0 cd0
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	#sh $this ccd0 ccd1 ccd2 ccd3
	sh $this pf tun0 tun1 lkm local
	sh $this sram0 nvram0 flash0 vmel0 vmes0
	#sh $this lp0 lptwo0
	sh $this random
	sh $this uk0 uk1
	sh $this ss0 altq
d202 2
a203 15
std)
	rm -f console drum mem kmem null zero tty
	rm -f klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem	; chgrp kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 43 0	; chmod 640 ksyms ; chown root.kmem ksyms
d206 2
a207 12
ramdisk)
	sh $this std fd st0 ttya rd0
	sh $this tty00 tty01 tty02 tty03
	sh $this sd0 sd1 sd2 sd3 
	sh $this pty0 
	#sh $this ccd0 ccd1 ccd2 ccd3
	sh $this tun0 tun1 lkm local
	sh $this sram0 nvram0 flash0 vmel0 vmes0
	#sh $this lp0 lptwo0
	sh $this random
	sh $this uk0 uk1
	sh $this ss0
d210 2
a211 9
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 21 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
d214 2
a215 9
ss*)
	case $i in
	ss*) name=ss;	unit=${i#ss};	chr=33;;
	esac
	rm -f $name$unit n$name$unit
	mknod $name$unit	c $chr `expr $unit '*' 16 + 0`
	mknod n$name$unit	c $chr `expr $unit '*' 16 + 1`
	chgrp operator $name$unit n$name$unit
	chmod 640 $name$unit n$name$unit
d218 5
a222 13
ccd*|sd*)
	case $i in
	ccd*) name=ccd;	unit=${i#ccd};	blk=5;	chr=17;;
	sd*) name=sd;	unit=${i#sd};	blk=4;	chr=8;;
	esac
	rm -f $name$unit? r$name$unit?
	minor=`expr $unit '*' 16`
	for slice in a b c d e f g h i j k l m n o p
	do
		dev=${name}${unit}${slice}
		mknod $dev b $blk $minor
		mknod r$dev c $chr $minor
		minor=$(( $minor + 1 ))
a223 2
	chown root.operator $name$unit? r$name$unit?
	chmod 640 $name$unit? r$name$unit?
d226 6
a231 19
vnd*)
	unit=${i#vnd}
	for name in vnd svnd; do
		blk=8; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		minor=`expr $unit '*' 16 '+' $off`
		for slice in a b c d e f g h i j k l m n o p
		do
			dev=${name}${unit}${slice}
			mknod $dev b $blk $minor
			mknod r$dev c $chr $minor
			minor=$(( $minor + 1 ))
		done
		chown root.operator ${name}${unit}? r${name}${unit}?
		chmod 640 ${name}${unit}? r${name}${unit}?
d235 2
a236 32
pty*)
	class=${i#pty}
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 4 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
		;;
	esac
d239 2
a240 18
st*)
	case $i in
	st*) name=st;	unit=${i#st};	chr=20;	blk=7;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	mknod $name$unit	b $blk `expr $unit '*' 16 + 0`
	mknod n$name$unit	b $blk `expr $unit '*' 16 + 1`
	mknod e$name$unit	b $blk `expr $unit '*' 16 + 2`
	mknod en$name$unit	b $blk `expr $unit '*' 16 + 3`
	mknod r$name$unit	c $chr `expr $unit '*' 16 + 0`
	mknod nr$name$unit	c $chr `expr $unit '*' 16 + 1`
	mknod er$name$unit	c $chr `expr $unit '*' 16 + 2`
	mknod enr$name$unit	c $chr `expr $unit '*' 16 + 3`
	chgrp operator $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	chmod 660 $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
d243 2
a244 8
ch*)
	case $i in
	ch*) name=ch;	unit=${i#ch};	chr=31;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.operator $name$unit
	chmod 660 $name$unit
d247 2
a248 8
uk*)
	case $i in
	uk*) name=uk;	unit=${i#uk};	chr=34;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.wheel $name$unit
	chmod 600 $name$unit
d251 4
a254 11
cd*)
	case $i in
	cd*) name=cd;	unit=${i#cd};	chr=9;	blk=6;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
	chgrp operator $name$unit? r$name$unit?
	chmod 640 $name$unit? r$name$unit?
d257 16
a272 8
lpt*|lpa*)
	case $i in
	lpt*) name=lpt;	unit=${i#lpt};	chr=11;	flags=0;;
	lpa*) name=lpa;	unit=${i#lpa};	chr=11;	flags=128;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr `expr $unit + $flags`
	chown root.wheel $name$unit
d275 9
a283 5
pf)
	rm -f pf
	mknod pf c 39 0
	chown root.wheel pf
	chmod 600 pf
d286 8
a293 4
bpf*|tun*)
	case $i in
	bpf*) name=bpf;	unit=${i#bpf};	chr=22;;
	tun*) name=tun;	unit=${i#tun};	chr=23;;
a294 3
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.wheel $name$unit
d297 14
a310 8
sram*|nvram*|flash*|vmel*|vmes*)
        rm -f $i
	case $i in
	sram*) maj=7;;
	nvram*) maj=10;;
	flash*) maj=11;;
	vmel*) maj=31;;
	vmes*) maj=32;;
a311 3
        mknod $i c ${maj} 0
        chown root.kmem $i
        chmod 640 $i
d314 2
a315 9
random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 40 0
	mknod srandom c 40 1
	mknod urandom c 40 2
	mknod prandom c 40 3
	mknod arandom c 40 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d318 3
a320 9
rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	mknod rd${unit}a b 7 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 7 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 18 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 18 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
d323 2
a324 5
lkm)
	rm -f lkm
	mknod lkm c 24 0
	chown root.kmem lkm
	chmod 640 lkm
d327 7
a333 10
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
d338 1
a338 2
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
d341 23
d366 31
@


1.17
log
@sync
@
text
@d3 1
a3 33
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
#
#	$OpenBSD$
#
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#!/bin/sh -
#
#	$OpenBSD: MAKEDEV.md,v 1.2 2002/02/09 16:59:50 deraadt Exp $
a361 156
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

trunc()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	RMlist="$RMlist $1$2? r$1$2?"
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
		let count=count+1
	done
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"

mkl() {
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
}

M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist="$MKlist;chown $7.$G $1"
	} || {
		case $G in
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
		esac
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in

)
	case $i in
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
	$eo "$list"
else
	echo "$list" | sh
fi
@


1.16
log
@sync, and update, to make "ramdisk" target disk
@
text
@d3 33
a35 1
#	$OpenBSD: MAKEDEV,v 1.15 2002/01/01 02:32:17 miod Exp $
d394 156
@


1.15
log
@``maxpartition 16'' updates that were sitting in my tree for a long time.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 2001/06/28 02:58:55 kjc Exp $
d109 1
a109 1
raminst)
@


1.14
log
@add an entry for ALTQ.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 2001/06/25 03:20:11 kjell Exp $
d164 1
a164 1
	umask 2 ; unit=${i#vnd}
d172 10
a181 18
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + $off + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + $off + 7`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
a182 1
	umask 77
d264 4
a267 4
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
@


1.13
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.12 2001/06/24 23:36:06 kjell Exp $
d59 1
d89 1
a89 1
	sh $this ss0
d349 13
@


1.12
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 2001/05/30 02:11:21 deraadt Exp $
d292 1
a292 1
	mknod pf c 73 0
@


1.11
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 2001/03/12 23:23:50 miod Exp $
d83 1
a83 1
	sh $this tun0 tun1 lkm local
d288 7
@


1.10
log
@Create /dev/ksyms, and 16 slices per disk.
XXX this is incomplete work, a big cleanup of this file will happen soon.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 2001/01/28 23:31:28 niklas Exp $
d80 1
a80 1
	sh $this vnd0 vnd1 pty0 cd0 ipl
a340 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 39 0
	mknod ipnat c 39 1
	mknod ipstate c 39 2
	mknod ipauth c 39 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.9
log
@$OpenBSD$
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.5 1997/01/01 23:46:23 pk Exp $
d39 1
a40 1
#	md*	"memory" pseudo-disks
a52 1
#	fd	file descriptors
d69 1
d76 13
a88 27
	sh MAKEDEV std fd st0 ttya ttyb ttyc ttyd
	sh MAKEDEV tty00 tty01 tty02 tty03
	sh MAKEDEV ttyw0
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh MAKEDEV vnd0 vnd1 pty0 cd0 ipl
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	#sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV tun0 tun1 lkm local
	sh MAKEDEV sram0 nvram0 flash0 vmel0 vmes0
	#sh MAKEDEV lp0 lptwo0
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0
	;;

all)
	sh $0 std fd pty0
	sh $0 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 
	sh $0 st0 st1 ch0 cd0 cd1 lpa0 lpt0  
	sh $0 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $0 tun0 tun1 lkm ipl
	sh $0 ccd0 ccd1 ccd2 ccd3 
	sh $0 md0 ss0 ch0 uk0 uk1 lkm
	sh $0 sram0 nvram0 flash0 vmel0 vmes0
	sh $0 vnd0 vnd1
	sh $0 uk0 uk1
	sh $0 local
d92 2
a93 1
	rm -f console drum mem kmem null zero tty klog stdin stdout stderr
d105 1
d109 11
a119 11
	sh MAKEDEV std fd st0 ttya rd0
	sh MAKEDEV tty00 tty01 tty02 tty03
	sh MAKEDEV sd0 sd1 sd2 sd3 
	sh MAKEDEV pty0 
	#sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV tun0 tun1 lkm local
	sh MAKEDEV sram0 nvram0 flash0 vmel0 vmes0
	#sh MAKEDEV lp0 lptwo0
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0
a132 11
md*)
	case $i in
	md*) name=md;	unit=${i#md};	chr=32;	blk=9;;
	esac
	rm -f $name$unit r$name$unit
	mknod $name$unit	b $blk `expr $unit + 0`
	mknod r$name$unit	c $chr `expr $unit + 16`
	chgrp operator $name$unit r$name$unit
	chmod 640 $name$unit r$name$unit
	;;

d150 9
a158 17
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
	chgrp operator $name$unit? r$name$unit?
d273 1
a273 1
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
d275 1
a275 1
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
d324 1
@


1.8
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
@


1.7
log
@m88k Updates.
@
text
@d273 1
a273 1
	chmod 640 $name$unit n$name$unit e$name$unit en$name$unit \
d277 1
a277 1
ch*|uk*)
d280 9
d293 2
a294 2
	chgrp operator $name$unit
	chmod 640 $name$unit
@


1.6
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d60 7
d75 19
a93 2
	sh $0 std fd sd0 sd1 sd2 pty0 
	sh $0 st0 st1 ch0 cd0 cd1 lpa0 lpt0 vnd0 vnd1 
d95 6
a100 2
	sh $0 tun0 tun1
	sh $0 ccd0 ccd1 ccd2 ccd3 md0 ss0 ch0 uk0 uk1 lkm
d119 14
d149 2
a150 2
	mknod $name$unit	b $blk $(($unit +  0))
	mknod r$name$unit	c $chr $(($unit + 16))
d160 2
a161 2
	mknod $name$unit	c $chr $(($unit * 16 + 0))
	mknod n$name$unit	c $chr $(($unit * 16 + 1))
d172 16
a187 16
	mknod ${name}${unit}a	b $blk $(($unit * 8 + 0))
	mknod ${name}${unit}b	b $blk $(($unit * 8 + 1))
	mknod ${name}${unit}c	b $blk $(($unit * 8 + 2))
	mknod ${name}${unit}d	b $blk $(($unit * 8 + 3))
	mknod ${name}${unit}e	b $blk $(($unit * 8 + 4))
	mknod ${name}${unit}f	b $blk $(($unit * 8 + 5))
	mknod ${name}${unit}g	b $blk $(($unit * 8 + 6))
	mknod ${name}${unit}h	b $blk $(($unit * 8 + 7))
	mknod r${name}${unit}a	c $chr $(($unit * 8 + 0))
	mknod r${name}${unit}b	c $chr $(($unit * 8 + 1))
	mknod r${name}${unit}c	c $chr $(($unit * 8 + 2))
	mknod r${name}${unit}d	c $chr $(($unit * 8 + 3))
	mknod r${name}${unit}e	c $chr $(($unit * 8 + 4))
	mknod r${name}${unit}f	c $chr $(($unit * 8 + 5))
	mknod r${name}${unit}g	c $chr $(($unit * 8 + 6))
	mknod r${name}${unit}h	c $chr $(($unit * 8 + 7))
d195 1
a195 1
		blk=6; chr=19;
d201 16
a216 16
		mknod ${name}${unit}a	b $blk $(($unit * 8 + $off + 0))
		mknod ${name}${unit}b	b $blk $(($unit * 8 + $off + 1))
		mknod ${name}${unit}c	b $blk $(($unit * 8 + $off + 2))
		mknod ${name}${unit}d	b $blk $(($unit * 8 + $off + 3))
		mknod ${name}${unit}e	b $blk $(($unit * 8 + $off + 4))
		mknod ${name}${unit}f	b $blk $(($unit * 8 + $off + 5))
		mknod ${name}${unit}g	b $blk $(($unit * 8 + $off + 6))
		mknod ${name}${unit}h	b $blk $(($unit * 8 + $off + 7))
		mknod r${name}${unit}a	c $chr $(($unit * 8 + $off + 0))
		mknod r${name}${unit}b	c $chr $(($unit * 8 + $off + 1))
		mknod r${name}${unit}c	c $chr $(($unit * 8 + $off + 2))
		mknod r${name}${unit}d	c $chr $(($unit * 8 + $off + 3))
		mknod r${name}${unit}e	c $chr $(($unit * 8 + $off + 4))
		mknod r${name}${unit}f	c $chr $(($unit * 8 + $off + 5))
		mknod r${name}${unit}g	c $chr $(($unit * 8 + $off + 6))
		mknod r${name}${unit}h	c $chr $(($unit * 8 + $off + 7))
d263 8
a270 8
	mknod $name$unit	b $blk $(($unit * 16 + 0))
	mknod n$name$unit	b $blk $(($unit * 16 + 1))
	mknod e$name$unit	b $blk $(($unit * 16 + 2))
	mknod en$name$unit	b $blk $(($unit * 16 + 3))
	mknod r$name$unit	c $chr $(($unit * 16 + 0))
	mknod nr$name$unit	c $chr $(($unit * 16 + 1))
	mknod er$name$unit	c $chr $(($unit * 16 + 2))
	mknod enr$name$unit	c $chr $(($unit * 16 + 3))
d290 1
a290 1
	cd*) name=cd;	unit=${i#cd};	chr=18;	blk=8;;
d293 4
a296 4
	mknod ${name}${unit}a	b $blk $(($unit * 8 + 0))
	mknod ${name}${unit}d	b $blk $(($unit * 8 + 3))
	mknod r${name}${unit}a	c $chr $(($unit * 8 + 0))
	mknod r${name}${unit}d	c $chr $(($unit * 8 + 3))
d307 1
a307 1
	mknod $name$unit	c $chr $(($unit + $flags))
d321 35
d361 9
@


1.5
log
@add support for more ptys
@
text
@a187 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.4
log
@fix bpf nodes; someone should make sure 0-9 are on all, and rm them nicely
@
text
@d190 11
d204 1
a204 1
	0|1|2|3|4)
@


1.3
log
@Make svnd nodes too, please test this on your port
@
text
@d70 2
a71 1
	sh $0 bpf0 bpf1 bpf2 bpf3 tun0 tun1
@


1.2
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d123 1
a123 1
ccd*|sd*|vnd*)
a126 1
	vnd*) name=vnd;	unit=${i#vnd};	blk=6;	chr=19;;
d147 31
@


1.1
log
@Ok here is the mvme88k userland, minus a few important pieces.
as, ld change need to be merged. It is known that shared libraries and C++
do not work.
If anyone wants to step forward and take over the mvme88k port please do.
It was dumped on me when the original developer, Nivas, left his previous
job and started a new one.

I am trying to get the port in a shape that someone could take over.
@
text
@d247 1
a247 1
	sh $0.local
@
