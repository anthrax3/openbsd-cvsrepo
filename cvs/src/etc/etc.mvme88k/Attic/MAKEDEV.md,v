head	1.34;
access;
symbols
	OPENBSD_5_5:1.33.0.4
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.32.0.2
	OPENBSD_5_4_BASE:1.32
	OPENBSD_5_3:1.31.0.2
	OPENBSD_5_3_BASE:1.31
	OPENBSD_5_2:1.30.0.4
	OPENBSD_5_2_BASE:1.30
	OPENBSD_5_1_BASE:1.30
	OPENBSD_5_1:1.30.0.2
	OPENBSD_5_0:1.29.0.4
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.29.0.2
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.27.0.2
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.23.0.4
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.22.0.2
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.21.0.2
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@# @;


1.34
date	2014.03.18.22.36.29;	author miod;	state dead;
branches;
next	1.33;

1.33
date	2014.01.05.01.16.52;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2013.06.03.17.34.15;	author tedu;	state Exp;
branches;
next	1.31;

1.31
date	2012.08.23.06.15.28;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2011.10.06.20.49.27;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2010.09.30.15.27.54;	author claudio;	state Exp;
branches;
next	1.28;

1.28
date	2010.09.04.12.18.03;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2010.07.03.03.59.15;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2010.06.26.23.49.50;	author jsing;	state Exp;
branches;
next	1.25;

1.25
date	2010.06.09.16.10.25;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	2009.08.13.15.12.36;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.22;

1.22
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2008.06.14.23.09.06;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2008.06.13.21.07.28;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.28.22.26.02;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.26.19.54.23;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.16.02.49.52;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.01.22.22.13;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.11.18.05.23;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.16.19.01.02;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.14.17.24.31;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.05.20.11.56;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.30.10.33.24;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.26.06.58.04;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.18.18.08.59;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.05.04.30.21;	author kjc;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.21.22.07.44;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.16.21.11.20;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.28.14.56.40;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.09.16.59.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.08.20.26.36;	author todd;	state Exp;
branches;
next	;


desc
@@


1.34
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@define(MACHINE,mvme88k)dnl
vers(__file__,
	{-$OpenBSD: MAKEDEV.md,v 1.33 2014/01/05 01:16:52 deraadt Exp $-},
etc.MACHINE)dnl
dnl
dnl Copyright (c) 2001-2006 Todd T. Fries <todd@@OpenBSD.org>
dnl
dnl Permission to use, copy, modify, and distribute this software for any
dnl purpose with or without fee is hereby granted, provided that the above
dnl copyright notice and this permission notice appear in all copies.
dnl
dnl THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
dnl WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
dnl MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
dnl ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
dnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
dnl ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
dnl OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
dnl
dnl
dnl *** mvme88k-specific devices
dnl
__devitem(dart, ttya-b, MVME188 serial ports)dnl
_mkdev(dart, {-tty[a-z]-}, {-u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	*) echo unknown tty device $i ;;
	esac
	case $u in
	a|b|c|d)
		M tty$u c major_dart_c $n 660 dialer uucp
		M cua$u c major_dart_c Add($n, 128) 660 dialer uucp
		;;
	esac-})dnl
__devitem(cl, tty0*, MVME1x7 CL-CD2400 serial ports)dnl
_mkdev(cl, {-tty0*-}, {-u=${i#tty0*}
	case $u in
	0|1|2|3|4|5|6|7)
		M tty0$u c major_cl_c $u 660 dialer uucp
		M cua0$u c major_cl_c Add($u, 128) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac-})dnl
__devitem(vx, ttyv*, MVME332XT serial ports)dnl
_mkdev(vx, {-ttyv*-}, {-u=${i#ttyv*}
	case $u in
	0|1|2|3|4|5|6|7)
		M ttyv$u c major_vx_c $u 660 dialer uucp
		M cuav$u c major_vx_c Add($u, 128) 660 dialer uucp
		;;
	*) echo unknown tty device $i ;;
	esac-})dnl
__devitem(sram, sram0, On-board static memory)dnl
_mkdev(sram, sram0, {-M sram0 c major_sram_c 0 640 kmem-})dnl
__devitem(nvram, nvram0, On-board non-volatile memory)dnl
_mkdev(nvram, nvram0, {-M nvram0 c major_nvram_c 0 640 kmem-})dnl
__devitem(vmes, vmes0, VMEbus D16 space)dnl
_mkdev(vmes, vmes0, {-M vmes0 c major_vmes_c 0 640 kmem-})dnl
__devitem(vmel, vmel0, VMEbus D32 space)dnl
_mkdev(vmel, vmel0, {-M vmel0 c major_vmel_c 0 640 kmem-})dnl
dnl
dnl *** MAKEDEV itself
dnl
_TITLE(make)
dnl
dnl all)
dnl
target(all, sram, 0)dnl
target(all, nvram, 0)dnl
target(all, vmes, 0)dnl
target(all, vmel, 0)dnl
dnl
target(all, ch, 0)dnl
target(all, vscsi, 0)dnl
target(all, diskmap)dnl
target(all, pty, 0)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, bio)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, uk, 0)dnl
target(all, vnd, 0, 1, 2, 3)dnl
twrget(all, dart, tty, a, b)dnl
twrget(all, cl, tty0, 0, 1, 2, 3, 4, 5, 6, 7)dnl
twrget(all, vx, ttyv, 0, 1, 2, 3, 4, 5, 6, 7)dnl
_DEV(all)
dnl
dnl ramdisk)
dnl
twrget(ramd, dart, tty, a)dnl
twrget(ramd, cl, tty0, 0)dnl
target(ramd, pty, 0)dnl
target(ramd, bio)dnl
target(ramd, diskmap)dnl
target(ramd, random)dnl
_DEV(ramd)
dnl
_DEV(std)
_DEV(local)
dnl
_TITLE(dis)
_DEV(cd, 9, 6)
_DEV(rd, 18, 7)
_DEV(sd, 8, 4)
_DEV(vnd, 19, 8)
_TITLE(tap)
_DEV(ch, 44)
_DEV(st, 20, 5)
_TITLE(term)
_DEV(cl, 13)
_DEV(dart, 12)
_DEV(vx, 15)
_TITLE(pty)
_DEV(ptm, 52)
_DEV(pty, 5)
_DEV(tty, 4)
_TITLE(spec)
_DEV(bio, 49)
_DEV(bpf, 22)
_DEV(diskmap, 54)
_DEV(fdesc, 21)
_DEV(fuse, 45)
_DEV(lkm, 24)
_DEV(nvram, 10)
_DEV(pf, 39)
_DEV(pppx, 55)
_DEV(rnd, 40)
_DEV(sram, 7)
_DEV(systrace, 50)
_DEV(tun, 23)
_DEV(uk, 41)
_DEV(vmel, 31)
_DEV(vmes, 32)
_DEV(vscsi, 53)
dnl
divert(__mddivert)dnl
dnl
_std(1, 2, 43, 6)
	;;

@


1.33
log
@We need /dev/random on the install media
discussed with rpe and halex
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.32 2013/06/03 17:34:15 tedu Exp $-},
@


1.32
log
@fuse on more archs
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.31 2012/08/23 06:15:28 deraadt Exp $-},
d98 1
@


1.31
log
@get rid of the nnpfs nodes
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.30 2011/10/06 20:49:27 deraadt Exp $-},
d124 1
@


1.30
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.29 2010/09/30 15:27:54 claudio Exp $-},
a74 1
target(all, nnpfs, 0)dnl
a124 1
_DEV(nnpfs, 51)
@


1.29
log
@Add pppx(4) to MAKEDEV but do not create the device unless requested
explicitly. OK dlg@@ & todd@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.28 2010/09/04 12:18:03 miod Exp $-},
a86 1
target(all, ccd, 0, 1, 2, 3)dnl
a104 1
_DEV(ccd, 17, 9)
@


1.28
log
@Reorder device entries within sections, for MAKEDEV.8 to have them sorted.
Prodded by jmc@@.
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.27 2010/07/03 03:59:15 krw Exp $-},
d131 1
@


1.27
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.26 2010/06/26 23:49:50 jsing Exp $-},
d125 1
d128 1
d135 1
a137 2
_DEV(uk, 41)
_DEV(nnpfs, 51)
a138 1
_DEV(diskmap, 54)
@


1.26
log
@Add /dev/diskmap to ramdisks.

ok todd@@ krw@@ deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.24 2009/08/13 15:12:36 deraadt Exp $-},
a74 1
target(all, ss, 0)dnl
a130 1
_DEV(ss, 42)
@


1.25
log
@add diskmap entries, not on ramdisks yet
get it in! jsing@@
@
text
@d100 1
@


1.24
log
@Add nodes for vscsi0; ok dlg
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.23 2009/06/03 14:45:40 jj Exp $-},
d78 1
d139 1
@


1.23
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.22 2009/01/25 17:30:48 miod Exp $-},
d77 1
d137 1
@


1.22
log
@Remove /dev/drum and related code.
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.21 2008/06/14 23:09:06 todd Exp $-},
d76 1
a76 1
target(all, xfs, 0)dnl
d135 1
a135 1
_DEV(xfs, 51)
@


1.21
log
@redo the way MAKEDEV files are generated
get it in, deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.20 2008/06/13 21:07:28 todd Exp $-},
d139 1
a139 1
_std(1, 2, 43, 3, 6)
@


1.20
log
@/dev/bio on ramdisks, it is safe and small
ok deraadt@@, marco@@
@
text
@d1 1
d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.19 2007/05/28 22:26:02 todd Exp $-},
@


1.19
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.18 2007/05/27 01:50:36 todd Exp $-},
d96 1
@


1.18
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.17 2007/05/26 19:54:23 todd Exp $-},
d78 1
d119 1
@


1.17
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.16 2006/04/16 02:49:52 todd Exp $-},
a77 1
target(all, bio)dnl
a117 1
_DEV(bio, 14)
@


1.16
log
@shuffle ramdisk device targets to MAKEDEV.common to avoid duplication and
pave the way for future work; ok since this does not change the generated
MAKEDEV
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.15 2005/08/01 22:22:13 deraadt Exp $-},
d78 1
d119 1
@


1.15
log
@old ses device goes away
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.14 2004/04/11 18:05:23 millert Exp $-},
d5 1
a5 1
dnl Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
a91 4
target(ramd, sd, 0, 1, 2, 3, 4)dnl
target(ramd, st, 0, 1)dnl
target(ramd, cd, 0, 1)dnl)dnl
target(ramd, rd, 0)dnl
@


1.14
log
@Update for pty changes (62 per letter instead of just 16)
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.13 2004/02/16 19:01:02 miod Exp $-},
a72 1
target(all, ses, 0)dnl
@


1.13
log
@Harmonize MAKEDEV sources:
- homogenize section order
- sort devices inside sections
- make sure all platforms provide a local target (sigh)
- remove a few dead devices not worth mentioning on a few arches while there.

disabused ok deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.12 2004/02/14 17:24:31 todd Exp $-},
d77 1
a77 1
target(all, pty, 0, 1, 2)dnl
@


1.12
log
@copyright 2004 as well, prompted/reminded by miod
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.11 2004/02/10 01:31:20 millert Exp $-},
d22 1
a22 1
__devitem(dart, ttya-b, MVME188 standard serial ports)dnl
d53 1
a53 1
__devitem(sram, sram0, static memory access)dnl
d55 1
a55 1
__devitem(nvram, nvram0, non-volatile memory access)dnl
d57 1
a57 1
__devitem(vmes, vmes0, VMEbus access)dnl
d59 1
a59 1
__devitem(vmel, vmel0, VMEbus access)dnl
d103 1
a103 1
_DEV(loc)
a104 2
_TITLE(tap)
_DEV(st, 20, 5)
d106 3
a109 2
_DEV(cd, 9, 6)
_DEV(ccd, 17, 9)
d111 3
a113 1
_DEV(rd, 18, 7)
d115 1
a116 1
_DEV(cl, 13)
d119 2
a121 2
_DEV(pty, 5)
_DEV(ptm, 52)
d123 1
a123 3
_DEV(uk, 41)
_DEV(ss, 42)
_DEV(ch, 44)
d125 2
a126 2
_DEV(bpf, 22)
_DEV(tun, 23)
a127 1
_DEV(lkm, 24)
a128 1
_DEV(xfs, 51)
d130 4
a133 1
_DEV(nvram, 10)
d135 2
a136 2
_DEV(vmel, 31)
_DEV(systrace, 50)
d138 1
a138 1
divert(7)dnl
@


1.11
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.10 2004/01/05 20:11:56 miod Exp $-},
d5 1
a5 1
dnl Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.10
log
@Handle tty04-tty07 for M8120
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.9 2003/12/30 10:33:24 miod Exp $-},
d120 1
@


1.9
log
@dart(4) provides only two serial ports.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.8 2003/09/26 06:58:04 miod Exp $-},
d38 1
a38 1
	0|1|2|3)
d87 1
a87 1
twrget(all, cl, tty0, 0, 1, 2, 3)dnl
@


1.8
log
@Add majors and devsw entries for the missing scsi devices on mvme*8k.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.7 2003/06/18 18:08:59 todd Exp $-},
d22 1
a22 1
__devitem(dart, ttya-d, MVME188 standard serial ports)dnl
a26 2
	c) n=2 ;;
	d) n=3 ;;
d86 1
a86 1
twrget(all, dart, tty, a, b, c, d)dnl
@


1.7
log
@switch to share/misc/license.template
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.6 2002/12/05 04:30:21 kjc Exp $-},
d77 1
d85 1
d123 3
@


1.6
log
@remove altq entries.  I should have done these before MAKEDEV.
pointed out by todd@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.5 2002/08/21 22:07:44 miod Exp $-},
d5 1
a5 2
dnl Copyright (c) 2002, Miodrag Vallat.
dnl All rights reserved.
d7 3
a9 7
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions
dnl are met:
dnl 1. Redistributions of source code must retain the above copyright
dnl    notice, this list of conditions and the following disclaimer.
dnl 2. The name of the author may not be used to endorse or promote products
dnl    derived from this software without specific prior written permission.
d11 7
a17 10
dnl THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
dnl INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
dnl AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
dnl THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
dnl EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
dnl PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
dnl OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
dnl WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
dnl OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
dnl ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.5
log
@Correct tty0[0-3] device nodes generation.
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.4 2002/05/16 21:11:20 miod Exp $-},
a134 1
_DEV(altq, 52)
@


1.4
log
@Add systrace support to all the remaining architectures.

Tested by various people on various platforms, I'm willing to fix any
breakage this causes.

ok niels@@ deraadt@@ and mickey@@ (after his comments were applied)
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.3 2002/04/28 14:56:40 miod Exp $-},
d106 1
a106 1
twrget(camd, cl, tty0, 0)dnl
@


1.3
log
@Move mvme88k to the joys of the m4-generated MAKEDEV world.
@
text
@d2 1
a2 1
	{-$OpenBSD$-},
d141 1
@


1.2
log
@use "ramdisk" for the ramdisk target, always
@
text
@d1 59
a59 214
#!/bin/sh -
#
#	$OpenBSD: MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp $
#	$NetBSD: MAKEDEV,v 1.5 1997/01/01 23:46:23 pk Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Written and contributed by W. Jolitz 12/90
#
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#	@@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the 'standard' number of each type.
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	sd*	SCSI disks
#	cd*	SCSI CD-ROM
#	rd*	"ramdisk" pseudo-disks
#	vnd*	"file" pseudo-disks
#	ccd*	contatenated disk devices
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Printers:
#	lpt*	stock lp
#	lpa*	interruptless lp
#
# Call units:
#
# Special purpose devices:
#	bpf*	packet filter
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	ss*	SCSI scanner
#	uk*	SCSI unknown
#	ch*	SCSI changer
#	altq	ALTQ control interface
#
# Machine specific devices:
#	sram	static ram available on some models.
#	nvram	non-volatile ram
#	flash	flash ram available on some models.
#	bugtty	(depricated)
#	vmel	32-bit vme interface
#	vmes	16-bit vme interface

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/etc
this=$0
umask 77
for i
do
case $i in

all)
	sh $this std fd st0 ttya ttyb ttyc ttyd
	sh $this tty00 tty01 tty02 tty03
	sh $this ttyw0
	sh $this sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	sh $this vnd0 vnd1 pty0 cd0
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	#sh $this ccd0 ccd1 ccd2 ccd3
	sh $this pf tun0 tun1 lkm local
	sh $this sram0 nvram0 flash0 vmel0 vmes0
	#sh $this lp0 lptwo0
	sh $this random
	sh $this uk0 uk1
	sh $this ss0 altq
	;;

std)
	rm -f console drum mem kmem null zero tty
	rm -f klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem	; chgrp kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 43 0	; chmod 640 ksyms ; chown root.kmem ksyms
	;;

ramdisk)
	sh $this std fd st0 ttya rd0
	sh $this tty00 tty01 tty02 tty03
	sh $this sd0 sd1 sd2 sd3 
	sh $this pty0 
	#sh $this ccd0 ccd1 ccd2 ccd3
	sh $this tun0 tun1 lkm local
	sh $this sram0 nvram0 flash0 vmel0 vmes0
	#sh $this lp0 lptwo0
	sh $this random
	sh $this uk0 uk1
	sh $this ss0
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 21 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
	;;

ss*)
	case $i in
	ss*) name=ss;	unit=${i#ss};	chr=33;;
	esac
	rm -f $name$unit n$name$unit
	mknod $name$unit	c $chr `expr $unit '*' 16 + 0`
	mknod n$name$unit	c $chr `expr $unit '*' 16 + 1`
	chgrp operator $name$unit n$name$unit
	chmod 640 $name$unit n$name$unit
	;;

ccd*|sd*)
	case $i in
	ccd*) name=ccd;	unit=${i#ccd};	blk=5;	chr=17;;
	sd*) name=sd;	unit=${i#sd};	blk=4;	chr=8;;
	esac
	rm -f $name$unit? r$name$unit?
	minor=`expr $unit '*' 16`
	for slice in a b c d e f g h i j k l m n o p
	do
		dev=${name}${unit}${slice}
		mknod $dev b $blk $minor
		mknod r$dev c $chr $minor
		minor=$(( $minor + 1 ))
	done
	chown root.operator $name$unit? r$name$unit?
	chmod 640 $name$unit? r$name$unit?
	;;

vnd*)
	unit=${i#vnd}
	for name in vnd svnd; do
		blk=8; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		minor=`expr $unit '*' 16 '+' $off`
		for slice in a b c d e f g h i j k l m n o p
		do
			dev=${name}${unit}${slice}
			mknod $dev b $blk $minor
			mknod r$dev c $chr $minor
			minor=$(( $minor + 1 ))
		done
		chown root.operator ${name}${unit}? r${name}${unit}?
		chmod 640 ${name}${unit}? r${name}${unit}?
	done
	;;

pty*)
	class=${i#pty}
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 4 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
d61 84
a144 142
	esac
	;;

st*)
	case $i in
	st*) name=st;	unit=${i#st};	chr=20;	blk=7;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	mknod $name$unit	b $blk `expr $unit '*' 16 + 0`
	mknod n$name$unit	b $blk `expr $unit '*' 16 + 1`
	mknod e$name$unit	b $blk `expr $unit '*' 16 + 2`
	mknod en$name$unit	b $blk `expr $unit '*' 16 + 3`
	mknod r$name$unit	c $chr `expr $unit '*' 16 + 0`
	mknod nr$name$unit	c $chr `expr $unit '*' 16 + 1`
	mknod er$name$unit	c $chr `expr $unit '*' 16 + 2`
	mknod enr$name$unit	c $chr `expr $unit '*' 16 + 3`
	chgrp operator $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	chmod 660 $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	;;

ch*)
	case $i in
	ch*) name=ch;	unit=${i#ch};	chr=31;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.operator $name$unit
	chmod 660 $name$unit
	;;

uk*)
	case $i in
	uk*) name=uk;	unit=${i#uk};	chr=34;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.wheel $name$unit
	chmod 600 $name$unit
	;;

cd*)
	case $i in
	cd*) name=cd;	unit=${i#cd};	chr=9;	blk=6;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
	chgrp operator $name$unit? r$name$unit?
	chmod 640 $name$unit? r$name$unit?
	;;

lpt*|lpa*)
	case $i in
	lpt*) name=lpt;	unit=${i#lpt};	chr=11;	flags=0;;
	lpa*) name=lpa;	unit=${i#lpa};	chr=11;	flags=128;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr `expr $unit + $flags`
	chown root.wheel $name$unit
	;;

pf)
	rm -f pf
	mknod pf c 39 0
	chown root.wheel pf
	chmod 600 pf
	;;

bpf*|tun*)
	case $i in
	bpf*) name=bpf;	unit=${i#bpf};	chr=22;;
	tun*) name=tun;	unit=${i#tun};	chr=23;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.wheel $name$unit
	;;

sram*|nvram*|flash*|vmel*|vmes*)
        rm -f $i
	case $i in
	sram*) maj=7;;
	nvram*) maj=10;;
	flash*) maj=11;;
	vmel*) maj=31;;
	vmes*) maj=32;;
	esac
        mknod $i c ${maj} 0
        chown root.kmem $i
        chmod 640 $i
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 40 0
	mknod srandom c 40 1
	mknod urandom c 40 2
	mknod prandom c 40 3
	mknod arandom c 40 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;

rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	mknod rd${unit}a b 7 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 7 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 18 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 18 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;

lkm)
	rm -f lkm
	mknod lkm c 24 0
	chown root.kmem lkm
	chmod 640 lkm
	;;

altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
a146 2
esac
done
@


1.1
log
@prepare for invasion, sparc64 gets major number fix wrt tty[a-d]
order a few places
provide '[ "$DEBUG" ] && set -x' inside R() for debugging help ..
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 2002/01/01 02:32:17 miod Exp $
d109 1
a109 1
raminst)
@

