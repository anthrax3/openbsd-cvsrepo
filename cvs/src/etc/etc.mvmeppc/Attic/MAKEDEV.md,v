head	1.36;
access;
symbols
	OPENBSD_4_9:1.34.0.2
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.33.0.2
	OPENBSD_4_8_BASE:1.33
	OPENBSD_4_7:1.30.0.2
	OPENBSD_4_7_BASE:1.30
	OPENBSD_4_6:1.29.0.4
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.28.0.2
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.27.0.2
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.25.0.4
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.25.0.2
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.22.0.4
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.2
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.19.0.4
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.2
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3;
locks; strict;
comment	@# @;


1.36
date	2011.07.07.19.16.43;	author deraadt;	state dead;
branches;
next	1.35;

1.35
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.34;

1.34
date	2010.09.30.15.27.54;	author claudio;	state Exp;
branches;
next	1.33;

1.33
date	2010.07.03.03.59.15;	author krw;	state Exp;
branches;
next	1.32;

1.32
date	2010.06.26.23.49.50;	author jsing;	state Exp;
branches;
next	1.31;

1.31
date	2010.06.09.16.10.25;	author todd;	state Exp;
branches;
next	1.30;

1.30
date	2009.08.13.15.12.36;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.28;

1.28
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2008.06.14.23.09.06;	author todd;	state Exp;
branches;
next	1.26;

1.26
date	2008.06.13.21.07.28;	author todd;	state Exp;
branches;
next	1.25;

1.25
date	2007.05.28.22.26.02;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.23;

1.23
date	2007.05.26.19.54.23;	author todd;	state Exp;
branches;
next	1.22;

1.22
date	2006.04.16.11.34.02;	author todd;	state Exp;
branches;
next	1.21;

1.21
date	2006.04.16.02.49.52;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2006.03.15.02.20.28;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2005.08.01.22.22.13;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2005.02.07.06.14.18;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2005.01.28.18.56.27;	author danh;	state Exp;
branches;
next	1.16;

1.16
date	2004.04.11.18.05.23;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2004.02.16.19.01.02;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2004.02.14.17.24.31;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.12.22.18.24;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.18.18.08.59;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.10.16.14.28;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.05.04.30.21;	author kjc;	state Exp;
branches;
next	1.8;

1.8
date	2002.10.16.15.48.31;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.09.06.15.14;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.30.06.46.13;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.21.01.41.04;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.16.21.11.21;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.11.20.29.42;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.14.13.29.20;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.08.20.26.36;	author todd;	state Exp;
branches;
next	;


desc
@@


1.36
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@define(MACHINE,macppc)dnl
vers(__file__,
	{-$OpenBSD: MAKEDEV.md,v 1.35 2011/04/18 16:52:11 thib Exp $-},
etc.MACHINE)dnl
dnl
dnl Copyright (c) 2001-2006 Todd T. Fries <todd@@OpenBSD.org>
dnl
dnl Permission to use, copy, modify, and distribute this software for any
dnl purpose with or without fee is hereby granted, provided that the above
dnl copyright notice and this permission notice appear in all copies.
dnl
dnl THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
dnl WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
dnl MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
dnl ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
dnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
dnl ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
dnl OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
dnl
dnl
_TITLE(make)
_DEV(all)
_DEV(ramd)
_DEV(std)
_DEV(local)
_TITLE(dis)
_DEV(ccd, 18, 16)
_DEV(cd, 9, 3)
_DEV(raid, 54, 19)
_DEV(rd, 17, 17)
_DEV(sd, 8, 2)
_DEV(vnd, 19, 14)
_DEV(wd, 11, 0)
_TITLE(tap)
_DEV(ch)
_DEV(st, 20, 5)
_TITLE(term)
_DEV(com, 7)
_TITLE(pty)
_DEV(ptm, 55)
_DEV(pty)
_DEV(tty)
_TITLE(cons)
_DEV(wscons)
_DEV(wsdisp, 67)
_DEV(wskbd, 68)
_TITLE(point)
_DEV(wsmouse, 69)
_TITLE(spec)
_DEV(au)
_DEV(bio, 53)
_DEV(bpf)
_DEV(fdesc, 21)
_DEV(lkm)
_DEV(pf, 39)
_DEV(rnd)
_DEV(systrace, 50)
_DEV(tun)
dnl
divert(__mddivert)dnl
dnl
_std(1, 2, 43, 6)
	;;

sd*|wd*|ccd*|ofdisk*|raid*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	sd*) name=sd;		blk=2;	chr=8;;
	wd*) name=wd;		blk=0;	chr=11;;
	ofdisk*) name=ofdisk;	blk=4;	chr=13;;
	ccd*) name=ccd;		blk=16;	chr=18;;
	raid*) name=raid;	blk=19;	chr=54;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6|7|8|9)
		mknod ${name}${unit}a	b $blk $(( $unit * 16 + 0 ))
		mknod ${name}${unit}b	b $blk $(( $unit * 16 + 1 ))
		mknod ${name}${unit}c	b $blk $(( $unit * 16 + 2 ))
		mknod ${name}${unit}d	b $blk $(( $unit * 16 + 3 ))
		mknod ${name}${unit}e	b $blk $(( $unit * 16 + 4 ))
		mknod ${name}${unit}f	b $blk $(( $unit * 16 + 5 ))
		mknod ${name}${unit}g	b $blk $(( $unit * 16 + 6 ))
		mknod ${name}${unit}h	b $blk $(( $unit * 16 + 7 ))
		mknod ${name}${unit}i	b $blk $(( $unit * 16 + 8 ))
		mknod ${name}${unit}j	b $blk $(( $unit * 16 + 9 ))
		mknod ${name}${unit}k	b $blk $(( $unit * 16 + 10 ))
		mknod ${name}${unit}l	b $blk $(( $unit * 16 + 11 ))
		mknod ${name}${unit}m	b $blk $(( $unit * 16 + 12 ))
		mknod ${name}${unit}n	b $blk $(( $unit * 16 + 13 ))
		mknod ${name}${unit}o	b $blk $(( $unit * 16 + 14 ))
		mknod ${name}${unit}p	b $blk $(( $unit * 16 + 15 ))
		mknod r${name}${unit}a	c $chr $(( $unit * 16 + 0 ))
		mknod r${name}${unit}b	c $chr $(( $unit * 16 + 1 ))
		mknod r${name}${unit}c	c $chr $(( $unit * 16 + 2 ))
		mknod r${name}${unit}d	c $chr $(( $unit * 16 + 3 ))
		mknod r${name}${unit}e	c $chr $(( $unit * 16 + 4 ))
		mknod r${name}${unit}f	c $chr $(( $unit * 16 + 5 ))
		mknod r${name}${unit}g	c $chr $(( $unit * 16 + 6 ))
		mknod r${name}${unit}h	c $chr $(( $unit * 16 + 7 ))
		mknod r${name}${unit}i	c $chr $(( $unit * 16 + 8 ))
		mknod r${name}${unit}j	c $chr $(( $unit * 16 + 9 ))
		mknod r${name}${unit}k	c $chr $(( $unit * 16 + 10 ))
		mknod r${name}${unit}l	c $chr $(( $unit * 16 + 11 ))
		mknod r${name}${unit}m	c $chr $(( $unit * 16 + 12 ))
		mknod r${name}${unit}n	c $chr $(( $unit * 16 + 13 ))
		mknod r${name}${unit}o	c $chr $(( $unit * 16 + 14 ))
		mknod r${name}${unit}p	c $chr $(( $unit * 16 + 15 ))
		chgrp operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

vnd*)
	umask 2 ; unit=${i##*[a-z]}
	blk=14; chr=19;
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk $(( $unit * 16 + 0 ))
	mknod ${name}${unit}b	b $blk $(( $unit * 16 + 1 ))
	mknod ${name}${unit}c	b $blk $(( $unit * 16 + 2 ))
	mknod ${name}${unit}d	b $blk $(( $unit * 16 + 3 ))
	mknod ${name}${unit}e	b $blk $(( $unit * 16 + 4 ))
	mknod ${name}${unit}f	b $blk $(( $unit * 16 + 5 ))
	mknod ${name}${unit}g	b $blk $(( $unit * 16 + 6 ))
	mknod ${name}${unit}h	b $blk $(( $unit * 16 + 7 ))
	mknod ${name}${unit}i	b $blk $(( $unit * 16 + 8 ))
	mknod ${name}${unit}j	b $blk $(( $unit * 16 + 9 ))
	mknod ${name}${unit}k	b $blk $(( $unit * 16 + 10 ))
	mknod ${name}${unit}l	b $blk $(( $unit * 16 + 11 ))
	mknod ${name}${unit}m	b $blk $(( $unit * 16 + 12 ))
	mknod ${name}${unit}n	b $blk $(( $unit * 16 + 13 ))
	mknod ${name}${unit}o	b $blk $(( $unit * 16 + 14 ))
	mknod ${name}${unit}p	b $blk $(( $unit * 16 + 15 ))
	mknod r${name}${unit}a	c $chr $(( $unit * 16 + 0 ))
	mknod r${name}${unit}b	c $chr $(( $unit * 16 + 1 ))
	mknod r${name}${unit}c	c $chr $(( $unit * 16 + 2 ))
	mknod r${name}${unit}d	c $chr $(( $unit * 16 + 3 ))
	mknod r${name}${unit}e	c $chr $(( $unit * 16 + 4 ))
	mknod r${name}${unit}f	c $chr $(( $unit * 16 + 5 ))
	mknod r${name}${unit}g	c $chr $(( $unit * 16 + 6 ))
	mknod r${name}${unit}h	c $chr $(( $unit * 16 + 7 ))
	mknod r${name}${unit}i	c $chr $(( $unit * 16 + 8 ))
	mknod r${name}${unit}j	c $chr $(( $unit * 16 + 9 ))
	mknod r${name}${unit}k	c $chr $(( $unit * 16 + 10 ))
	mknod r${name}${unit}l	c $chr $(( $unit * 16 + 11 ))
	mknod r${name}${unit}m	c $chr $(( $unit * 16 + 12 ))
	mknod r${name}${unit}n	c $chr $(( $unit * 16 + 13 ))
	mknod r${name}${unit}o	c $chr $(( $unit * 16 + 14 ))
	mknod r${name}${unit}p	c $chr $(( $unit * 16 + 15 ))
	chown root:operator ${name}${unit}[a-p] r${name}${unit}[a-p]
	chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	umask 77
	;;

tty0*)
	unit=${i##tty0}
	rm -f tty0$unit cua0$unit
	mknod tty0$unit c 7 $unit
	mknod cua0$unit c 7 `expr $unit + 128`
	chown uucp:dialer tty0$unit cua0$unit
	chmod 660 tty0$unit cua0$unit
	;;

pty*)
	class=${i##*[a-z]}
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f {tty,pty}$nam
			mknod tty$nam c 4 $(( $offset + $n ))
			mknod pty$nam c 5 $(( $offset + $n ))
			n="$(( $n + 1 ))"
		done
		umask 77
		;;
	esac
	;;

st*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	st*) name=st;  chr=20; blk=5;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk $(( $unit * 16 + 0 ))
		mknod n${name}${unit}	b $blk $(( $unit * 16 + 1 ))
		mknod e${name}${unit}	b $blk $(( $unit * 16 + 2 ))
		mknod en${name}${unit}	b $blk $(( $unit * 16 + 3 ))
		mknod r${name}${unit}	c $chr $(( $unit * 16 + 0 ))
		mknod nr${name}${unit}	c $chr $(( $unit * 16 + 1 ))
		mknod er${name}${unit}	c $chr $(( $unit * 16 + 2 ))
		mknod enr${name}${unit}	c $chr $(( $unit * 16 + 3 ))
		chown root:operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit}
		chmod 660 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit}
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
	;;

ch*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	ch*) name=ch;  chr=10;;
	esac
	rm -f $name$unit
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	c $chr $unit
		chown root:operator ${name}${unit}
		chmod 660 ${name}${unit}
		;;
	*)
		echo bad unit for media changer in: $i
		;;
	esac
	umask 77
	;;

cd*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	cd*) name=cd; blk=3; chr=9;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk $(( $unit * 8 + 0 ))
		mknod ${name}${unit}c	b $blk $(( $unit * 8 + 2 ))
		mknod r${name}${unit}a	c $chr $(( $unit * 8 + 0 ))
		mknod r${name}${unit}c	c $chr $(( $unit * 8 + 2 ))
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

audio*)
	major=44
	audio=audio$unit
	sound=sound$unit
	mixer=mixer$unit
	audioctl=audioctl$unit
	rm -f $sound $audio $mixer $audioctl
	mknod $sound    c $major $unit
	mknod $audio    c $major $(( $unit + 128 ))
	mknod $mixer    c $major $(( $unit + 16 ))
	mknod $audioctl c $major $(( $unit + 192 ))
	chown root:wheel $audio $sound $mixer $audioctl
	chmod 666 $audio $sound $mixer $audioctl
	[ -e audio ] || ln -s $audio audio
	[ -e mixer ] || ln -s $mixer mixer
	[ -e sound ] || ln -s $sound sound
	[ -e audioctl ] || ln -s $audioctl audioctl
	;;

usb*)
	rm -f usb$unit
	mknod usb$unit c 61 $unit
	chown root:wheel usb$unit
	chmod 660 usb$unit
	;;

uhid*)
	rm -f uhid$unit
	mknod uhid$unit c 62 $unit
	chown root:wheel uhid$unit
	chmod 660 uhid$unit
	;;

ugen*)
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		rm -f ugen$unit.$j
		mknod ugen$unit.$j c 63 $(( $unit * 16 + 10#$j ))
		chown root:wheel ugen$unit.$j
		chmod 660 ugen$unit.$j
	done
	;;

ulpt*)
	rm -f ulpt$unit
	mknod ulpt$unit c 64 $unit
	chown root:wheel ulpt$unit
	chmod 660 ulpt$unit
	;;

urio*)
	rm -f urio$unit
	mknod urio$unit c 65 $unit
	chown root:wheel urio$unit
	chmod 660 urio$unit
	;;

utty*)
	rm -f utty$unit
	mknod utty$unit c 66 $unit
	chown root:wheel utty$unit
	chmod 660 utty$unit
	;;


ttyCcfg)
	major=67
	minor=255
	rm -f ttyCcfg
	mknod ttyCcfg c $major $minor
	chown root:wheel ttyCcfg
	;;

ttyC*)
	type=C
	unit=${i##ttyC}
	major=67
	minor=$unit
	rm -f tty$type$unit
	mknod tty$type$unit c $major $minor
	chown root:wheel tty$type$unit
	;;

bpf*)
	unit=${i##*[a-z]}
	rm -f bpf${unit}
	mknod bpf${unit} c 22 ${unit}
	chown root:wheel bpf${unit}
	;;

pf)
	rm -f pf
	mknod pf c 39 0
	chown root:wheel pf
	chmod 600 pf
	;;

tun*)
	unit=${i##*[a-z]}
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root:wheel tun$unit
	;;

rd*)
	blk=17; chr=17;
	umask 2 ; unit=${i##*[a-z]}
	rm -f rd${unit}a rd${unit}c rrd${unit}a rrd${unit}c
	mknod rd${unit}a b ${blk} $(( $unit * 16 + 0 ))
	mknod rd${unit}c b ${blk} $(( $unit * 16 + 2 ))
	mknod rrd${unit}a c ${chr} $(( $unit * 16 + 0 ))
	mknod rrd${unit}c c ${chr} $(( $unit * 16 + 2 ))
	chown root:operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;

lkm)
	rm -f lkm
	mknod lkm c 24 0
	chown root:kmem lkm
	chmod 640 lkm
	;;

pci*)
	rm -f pci
	mknod pci c 71 0
	chown root:kmem pci
	chmod 600 pci
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 40 0
	mknod srandom c 40 1
	mknod urandom c 40 2
	mknod prandom c 40 3
	mknod arandom c 40 4
	chown root:wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;
uk*)
	unit=${i##*[a-z]}
	rm -f uk$unit
	mknod uk$unit c 41 $unit
	chown root:operator uk$unit
	chmod 640 uk$unit
	;;

wscons)
	sh $this wskbd0 wskbd1 wskbd2 wskbd3
	sh $this wsmouse0 wsmouse1 wsmouse2 wsmouse3
	sh $this ttyCcfg
	sh $this wsmux
	;;
wsmux|wsmouse|wskbd)
	rm -f wsmouse wskbd
	mknod wsmouse c 70 0
	mknod wskbd c 70 1
	chown root:wheel wsmouse wskbd
	chmod 600 wsmouse wskbd
	;;

wskbd*)
	unit=${i##*[a-z]}
	rm -f wskbd${unit}
	mknod wskbd${unit} c 68 ${unit}
	# XXX
	chmod 660 wskbd${unit}
	chown root:wheel wskbd${unit}
	;;
wsmouse*)
	unit=${i##*[a-z]}
	rm -f wsmouse${unit}
	mknod wsmouse${unit} c 69 ${unit}
	# XXX
	chmod 660 wsmouse${unit}
	chown root:wheel wsmouse${unit}
	;;

nnpfs*)
	rm -f nnpfs$unit
	mknod nnpfs$unit c 46 $unit
	chmod 600 nnpfs$unit
	chown root:wheel nnpfs$unit
	;;

vscsi*)
	rm -f vscsi$unit
	mknod vscsi$unit c 51 $unit
	chmod 600 vscsi$unit
	chown root:wheel vscsi$unit
	;;
diskmap)
	rm -f diskmap
	mknod diskmap c 57 0
	chmod 640 diskmap
	chown root:operator diskmap
	;;

pppx*)
	rm -f pppx$unit
	mknod pppx$unit c 58 0
	chmod 640 pppx$unit
	chown root:wheel pppx$unit
	;;

altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 71 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
	;;

*)
	echo $i: unknown device
esac
done
dnl
dnl *** mvmeppc specific devices
dnl
target(all, ch, 0)dnl
target(all, nnpfs, 0)dnl
target(all, vscsi, 0)dnl
twrget(all, flo, fd, 0, 0B, 0C, 0D, 0E, 0F, 0G, 0H)dnl
twrget(all, flo, fd, 1, 1B, 1C, 1D, 1E, 1F, 1G, 1H)dnl
target(all, pty, 0)dnl
target(all, bpf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)dnl
target(all, bio)dnl
target(all, tun, 0, 1, 2, 3)dnl
target(all, xy, 0, 1, 2, 3)dnl
target(all, rd, 0)dnl
target(all, cd, 0, 1)dnl
target(all, sd, 0, 1, 2, 3, 4)dnl
target(all, vnd, 0, 1, 2, 3)dnl
target(all, ccd, 0, 1, 2, 3)dnl
twrget(ramd, wsdisp, ttyC, 0)dnl
target(ramd, bio)dnl
target(ramd, diskmap)dnl
@


1.35
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.34 2010/09/30 15:27:54 claudio Exp $-},
@


1.34
log
@Add pppx(4) to MAKEDEV but do not create the device unless requested
explicitly. OK dlg@@ & todd@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.33 2010/07/03 03:59:15 krw Exp $-},
d121 36
a156 42
	for name in vnd svnd; do
		blk=14; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk $(( $unit * 16 + $off + 0 ))
		mknod ${name}${unit}b	b $blk $(( $unit * 16 + $off + 1 ))
		mknod ${name}${unit}c	b $blk $(( $unit * 16 + $off + 2 ))
		mknod ${name}${unit}d	b $blk $(( $unit * 16 + $off + 3 ))
		mknod ${name}${unit}e	b $blk $(( $unit * 16 + $off + 4 ))
		mknod ${name}${unit}f	b $blk $(( $unit * 16 + $off + 5 ))
		mknod ${name}${unit}g	b $blk $(( $unit * 16 + $off + 6 ))
		mknod ${name}${unit}h	b $blk $(( $unit * 16 + $off + 7 ))
		mknod ${name}${unit}i	b $blk $(( $unit * 16 + $off + 8 ))
		mknod ${name}${unit}j	b $blk $(( $unit * 16 + $off + 9 ))
		mknod ${name}${unit}k	b $blk $(( $unit * 16 + $off + 10 ))
		mknod ${name}${unit}l	b $blk $(( $unit * 16 + $off + 11 ))
		mknod ${name}${unit}m	b $blk $(( $unit * 16 + $off + 12 ))
		mknod ${name}${unit}n	b $blk $(( $unit * 16 + $off + 13 ))
		mknod ${name}${unit}o	b $blk $(( $unit * 16 + $off + 14 ))
		mknod ${name}${unit}p	b $blk $(( $unit * 16 + $off + 15 ))
		mknod r${name}${unit}a	c $chr $(( $unit * 16 + $off + 0 ))
		mknod r${name}${unit}b	c $chr $(( $unit * 16 + $off + 1 ))
		mknod r${name}${unit}c	c $chr $(( $unit * 16 + $off + 2 ))
		mknod r${name}${unit}d	c $chr $(( $unit * 16 + $off + 3 ))
		mknod r${name}${unit}e	c $chr $(( $unit * 16 + $off + 4 ))
		mknod r${name}${unit}f	c $chr $(( $unit * 16 + $off + 5 ))
		mknod r${name}${unit}g	c $chr $(( $unit * 16 + $off + 6 ))
		mknod r${name}${unit}h	c $chr $(( $unit * 16 + $off + 7 ))
		mknod r${name}${unit}i	c $chr $(( $unit * 16 + $off + 8 ))
		mknod r${name}${unit}j	c $chr $(( $unit * 16 + $off + 9 ))
		mknod r${name}${unit}k	c $chr $(( $unit * 16 + $off + 10 ))
		mknod r${name}${unit}l	c $chr $(( $unit * 16 + $off + 11 ))
		mknod r${name}${unit}m	c $chr $(( $unit * 16 + $off + 12 ))
		mknod r${name}${unit}n	c $chr $(( $unit * 16 + $off + 13 ))
		mknod r${name}${unit}o	c $chr $(( $unit * 16 + $off + 14 ))
		mknod r${name}${unit}p	c $chr $(( $unit * 16 + $off + 15 ))
		chown root:operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
@


1.33
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.32 2010/06/26 23:49:50 jsing Exp $-},
d486 7
@


1.32
log
@Add /dev/diskmap to ramdisks.

ok todd@@ krw@@ deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.30 2009/08/13 15:12:36 deraadt Exp $-},
a436 10
ss*)
	unit=${i##*[a-z]}
	rm -f ss$unit
	mknod ss$unit c 42 $unit
	chown root:operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
	;;
a508 1
target(all, ss, 0, 1)dnl
@


1.31
log
@add diskmap entries, not on ramdisks yet
get it in! jsing@@
@
text
@d536 1
@


1.30
log
@Add nodes for vscsi0; ok dlg
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.29 2009/06/03 14:45:40 jj Exp $-},
d490 6
@


1.29
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.28 2009/01/25 17:30:48 miod Exp $-},
d480 1
a480 1
	mknod nnpfs$unit c 51 $unit
d485 7
d515 1
@


1.28
log
@Remove /dev/drum and related code.
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.27 2008/06/14 23:09:06 todd Exp $-},
d478 5
a482 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit
	chmod 600 xfs$unit
	chown root:wheel xfs$unit
d507 1
a507 1
target(all, xfs, 0)dnl
@


1.27
log
@redo the way MAKEDEV files are generated
get it in, deraadt@@
@
text
@d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.26 2008/06/13 21:07:28 todd Exp $-},
d62 1
a62 1
_std(1, 2, 43, 3, 6)
@


1.26
log
@/dev/bio on ramdisks, it is safe and small
ok deraadt@@, marco@@
@
text
@d1 1
d3 1
a3 1
	{-$OpenBSD: MAKEDEV.md,v 1.25 2007/05/28 22:26:02 todd Exp $-},
@


1.25
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.24 2007/05/27 01:50:36 todd Exp $-},
d520 1
@


1.24
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.23 2007/05/26 19:54:23 todd Exp $-},
d50 1
d511 1
@


1.23
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.22 2006/04/16 11:34:02 todd Exp $-},
a49 1
_DEV(bio, 12)
a509 1
target(all, bio)dnl
@


1.22
log
@remove some rather deceptively unused lines; no change to generated MAKEDEV's
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.21 2006/04/16 02:49:52 todd Exp $-},
d50 1
d511 1
@


1.21
log
@shuffle ramdisk device targets to MAKEDEV.common to avoid duplication and
pave the way for future work; ok since this does not change the generated
MAKEDEV
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.20 2006/03/15 02:20:28 deraadt Exp $-},
a516 1
target(ramd, tty0, 0, 1, 2, 3)dnl
@


1.20
log
@/dev/reload is an old amiga thing, how did it make it here?
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.19 2005/08/01 22:22:13 deraadt Exp $-},
d5 1
a5 1
dnl Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
a518 7
target(ramd, rd, 0)dnl
target(ramd, wd, 0, 1, 2, 3)dnl
target(ramd, sd, 0, 1, 2, 3, 4)dnl
target(ramd, cd, 0, 1)dnl
target(ramd, st, 0, 1)dnl
target(ramd, bpf, 0)dnl
target(ramd, rd, 0)dnl
@


1.19
log
@old ses device goes away
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.18 2005/02/07 06:14:18 david Exp $-},
a60 1
	M reload	c 2 20	640 kmem
@


1.18
log
@indentation whitespace nits (saves a few bytes even)
@
text
@d2 1
a2 1
	{-$OpenBSD: MAKEDEV.md,v 1.17 2005/01/28 18:56:27 danh Exp $-},
a503 1
target(all, ses, 0)dnl
@


1.17
log
@use Add() consistently and make sure we use decimal numbers for addition
in the case of ugen devices.

suggestions and ok todd@@
@
text
@d2 1
a2 1
        {-$OpenBSD: MAKEDEV.md,v 1.16 2004/04/11 18:05:23 millert Exp $-},
d357 1
a357 1
        ;;
d364 4
a367 4
        rm -f tty$type$unit
        mknod tty$type$unit c $major $minor
        chown root:wheel tty$type$unit
        ;;
@


1.16
log
@Update for pty changes (62 per letter instead of just 16)
@
text
@d2 1
a2 1
        {-$OpenBSD: MAKEDEV.md,v 1.15 2004/02/16 19:01:02 miod Exp $-},
d320 1
a320 1
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d323 1
a323 1
		mknod ugen$unit.$j c 63 $(( $unit * 16 + $j ))
@


1.15
log
@Harmonize MAKEDEV sources:
- homogenize section order
- sort devices inside sections
- make sure all platforms provide a local target (sigh)
- remove a few dead devices not worth mentioning on a few arches while there.

disabused ok deraadt@@
@
text
@d2 1
a2 1
        {-$OpenBSD: MAKEDEV.md,v 1.14 2004/02/14 17:24:31 todd Exp $-},
d510 1
a510 1
target(all, pty, 0, 1, 2)dnl
@


1.14
log
@copyright 2004 as well, prompted/reminded by miod
@
text
@d2 1
a2 1
        {-$OpenBSD: MAKEDEV.md,v 1.13 2004/02/10 01:31:20 millert Exp $-},
d22 1
d24 1
a24 4
_DEV(fdesc, 21)
_DEV(ramd)
_TITLE(tap)
_DEV(st, 20, 5)
d26 4
a29 1
_DEV(wd, 11, 0)
a30 1
_DEV(cd, 9, 3)
d32 4
a35 3
_DEV(rd, 17, 17)
_DEV(ccd, 18, 16)
_DEV(raid, 54, 19)
d37 6
a45 1
_DEV(com, 7)
a47 13
_TITLE(pty)
_DEV(tty)
_DEV(pty)
_DEV(ptm, 55)
_TITLE(graphics)
_DEV(mac_grf)
_TTILE(usb)
_DEV(usb)
_DEV(uid)
_DEV(ulpt)
_DEV(urio)
_DEV(ugen)
_DEV(ttyU)
a49 1
_DEV(ch)
d51 1
a51 1
_DEV(tun)
d53 1
a54 1
_DEV(pf, 39)
d56 1
a56 2
_DEV(usbs)
#
d58 1
a58 1
divert(7)dnl
@


1.13
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d2 1
a2 1
        {-$OpenBSD: MAKEDEV.md,v 1.12 2004/01/12 22:18:24 todd Exp $-},
d5 1
a5 1
dnl Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.12
log
@utty[0-9a-f] -> /dev/ttyU[0-9a-zA-Z]; prompted by & ok deraadt@@
@
text
@d2 1
a2 1
        {-$OpenBSD: MAKEDEV.md,v 1.11 2003/06/18 18:08:59 todd Exp $-},
d45 1
@


1.11
log
@switch to share/misc/license.template
@
text
@d2 1
a2 1
        {-$OpenBSD$-},
d53 1
a53 1
_DEV(utty)
@


1.10
log
@POSIX chown
@
text
@d1 19
a19 26
#!/bin/sh -
#	$OpenBSD: MAKEDEV.md,v 1.9 2002/12/05 04:30:21 kjc Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Written and contributed by W. Jolitz 12/90
#
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#	from: @@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#	$NetBSD: MAKEDEV,v 1.17 1996/02/03 15:02:42 briggs Exp $
#
# Device "make" file.  Valid arguments:
@


1.9
log
@remove altq entries.  I should have done these before MAKEDEV.
pointed out by todd@@
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.8 2002/10/16 15:48:31 todd Exp $
d174 1
a174 1
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
d185 1
a185 1
	chown uucp.dialer tty0$unit cua0$unit
d244 1
a244 1
		chown root.operator ${name}${unit} n${name}${unit} \
d269 1
a269 1
		chown root.operator ${name}${unit}
d312 1
a312 1
	chown root.wheel $audio $sound $mixer $audioctl
d323 1
a323 1
	chown root.wheel usb$unit
d330 1
a330 1
	chown root.wheel uhid$unit
d339 1
a339 1
		chown root.wheel ugen$unit.$j
d347 1
a347 1
	chown root.wheel ulpt$unit
d354 1
a354 1
	chown root.wheel urio$unit
d361 1
a361 1
	chown root.wheel utty$unit
d371 1
a371 1
	chown root.wheel ttyCcfg
d381 1
a381 1
        chown root.wheel tty$type$unit
d388 1
a388 1
	chown root.wheel bpf${unit}
d394 1
a394 1
	chown root.wheel pf
d403 1
a403 1
	chown root.wheel tun$unit
d414 1
a414 1
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
d422 1
a422 1
	chown root.kmem lkm
d429 1
a429 1
	chown root.kmem pci
d440 1
a440 1
	chown root.wheel random srandom urandom prandom arandom
d447 1
a447 1
	chown root.operator uk$unit
d455 1
a455 1
	chown root.operator ss$unit
d471 1
a471 1
	chown root.wheel wsmouse wskbd
d481 1
a481 1
	chown root.wheel wskbd${unit}
d489 1
a489 1
	chown root.wheel wsmouse${unit}
d496 1
a496 1
	chown root.wheel xfs$unit
@


1.8
log
@move md things into md files (pass 1) as discussed a long time ago
ok miod@@
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.7 2002/06/09 06:15:14 todd Exp $
a67 1
_DEV(altq)
@


1.7
log
@rm trailing whitespace
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.6 2002/05/30 06:46:13 deraadt Exp $
d517 27
a543 1

@


1.6
log
@space nits
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.5 2002/05/21 01:41:04 deraadt Exp $
d24 1
a24 1
#	$NetBSD: MAKEDEV,v 1.17 1996/02/03 15:02:42 briggs Exp $ 
d234 1
a234 1
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
d248 1
a248 1
			er${name}${unit} enr${name}${unit} 
d252 1
a252 1
			er${name}${unit} enr${name}${unit} 
d366 1
a366 1
 
d371 1
a371 1
	mknod ttyCcfg c $major $minor  
d478 1
a478 1
	rm -f wskbd${unit} 
d486 1
a486 1
	rm -f wsmouse${unit} 
d495 2
a496 2
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
@


1.5
log
@remove MAKEDEV.local finally
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.4 2002/05/16 21:11:21 miod Exp $
d86 1
a86 1
	ccd*) name=ccd; 	blk=16;	chr=18;;
@


1.4
log
@Add systrace support to all the remaining architectures.

Tested by various people on various platforms, I'm willing to fix any
breakage this causes.

ok niels@@ deraadt@@ and mickey@@ (after his comments were applied)
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.3 2002/04/11 20:29:42 deraadt Exp $
a30 1
_DEV(local)
a510 5
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh $this.local
@


1.3
log
@sync
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.2 2002/02/14 13:29:20 todd Exp $
d71 1
@


1.2
log
@complete the function arg KNF spacing
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp $
d431 1
a431 1
	chmod 664 pci
@


1.1
log
@prepare for invasion, sparc64 gets major number fix wrt tty[a-d]
order a few places
provide '[ "$DEBUG" ] && set -x' inside R() for debugging help ..
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.3 2001/07/02 02:37:13 angelos Exp $
d30 1
a30 1
_DEV(fdesc,21)
d34 1
a34 1
_DEV(st,20,5)
d36 7
a42 7
_DEV(wd,11,0)
_DEV(sd,8,2)
_DEV(cd,9,3)
_DEV(vnd,19,14)
_DEV(rd,17,17)
_DEV(ccd,18,16)
_DEV(raid,54,19)
d45 3
a47 3
_DEV(wsdisp,67)
_DEV(wskbd,68)
_DEV(com,7)
d49 1
a49 1
_DEV(wsmouse,69)
d70 1
a70 1
_DEV(pf,39)
d76 1
a76 1
_std(1,2,43,3,6)
@

