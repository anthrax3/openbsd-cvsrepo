head	1.16;
access;
symbols
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.4
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.13.0.8
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.6
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.4
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.6
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.8
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.6
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.4
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.18
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.16
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.14
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.12
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.10
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@# @;


1.16
date	2012.06.20.19.03.06;	author matthew;	state dead;
branches;
next	1.15;

1.15
date	2011.07.22.09.30.54;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2011.04.15.03.11.38;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.22.16.16.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.21.09.12.27;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2006.07.27.02.53.55;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.03.06.37.51;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.10.30.21.37.37;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.13.07.22.43;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	98.02.19.20.58.00;	author ryker;	state Exp;
branches;
next	1.5;

1.5
date	98.02.16.02.04.39;	author gene;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.20.10.52;	author gene;	state Exp;
branches;
next	1.3;

1.3
date	97.09.21.11.50.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.05.11.02.37.43;	author gene;	state Exp;
branches;
next	1.1;

1.1
date	97.05.11.02.03.55;	author gene;	state Exp;
branches;
next	;


desc
@@


1.16
log
@yet more mac68k goop...
@
text
@#	$OpenBSD: Makefile.inc,v 1.15 2011/07/22 09:30:54 espie Exp $

bootblocks:
	# XXX no bootblocks ?

MDEXT=	bsd.rd 				# utils??
@


1.15
log
@unify kernel building on various platforms.
feedback from miod@@ and deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2011/04/15 03:11:38 deraadt Exp $
@


1.14
log
@No need to make depend kernels
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2009/04/22 16:16:22 deraadt Exp $
d3 2
a4 3
kernels: bsd
	cp ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC/bsd \
	    ${RELEASEDIR}/bsd
d6 1
a6 8
bsd:
	cd ${.CURDIR}/../sys/arch/mac68k/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC && \
	    ${MAKE} clean && exec ${MAKE}

MDEXT=	bsd bsd.rd 				# utils??

.PHONY: bsd
@


1.13
log
@no more bsdsbc kernels; probably not needed anymore I read from discussion
between nick and miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2009/04/21 09:12:27 deraadt Exp $
d10 1
a10 1
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
@


1.12
log
@move bsd and bsd.rd and all such other MD "sets" into the MD files,
since we perhaps cannot assume that is what kernels will be in the
pathetically stupid world that SGI created
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2009/04/17 03:58:54 deraadt Exp $
a5 2
	printf "disable ncrscsi\nenable sbc\nquit" | config -e \
	    -o ${RELEASEDIR}/bsdsbc ${RELEASEDIR}/bsd
d12 1
a12 1
MDEXT=	bsd bsd.rd bsdsbc bsdsbc.rd		# utils??
@


1.11
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2006/07/27 02:53:55 deraadt Exp $
d13 2
@


1.10
log
@unify these damnit!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2004/12/03 06:37:51 miod Exp $
d3 1
a3 2
.ifdef DESTDIR
snap_md: bsd bootblocks distrib
d5 1
a5 1
	    ${DESTDIR}/snapshot/bsd
d7 1
a7 1
	    -o ${DESTDIR}/snapshot/bsdsbc ${DESTDIR}/snapshot/bsd
d14 1
a14 6
bootblocks:
	#none needed

.PHONY: bsd bootblocks

.endif	# DESTDIR check
@


1.9
log
@Kill mac68k *SBC kernels. Instead, build kernels with both sbc scsi flavours
compiled in, but one disabled, and use config -e to swap them and build
the other kernels; saves valuable compile time.

Add ramdisks into the build (at release time). Since we are moving to a
bsd.rd installation, it is not necessary to put kernels in .tgz files
anymore, so don't bother, and adjust installation script sets information
accordingly.
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile.inc,v 1.8 2002/10/30 21:37:37 miod Exp $
#	etc.mac68k/Makefile.inc -- mac68k-specific etc Makefile targets
d4 1
a4 1
snap_md: bsd distrib
d15 4
a18 1
.PHONY: bsd
@


1.8
log
@Change kernel set to shorter names on mac68k; supposed to make krw's
next changes easier.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2002/05/13 07:22:43 espie Exp $
d5 7
a11 8
snap_md: bsd-generic bsd-genericsbc
	(cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC; \
	 tar cf - bsd \
	 | ${GZIP} ${GZIPFLAGS} >${DESTDIR}/snapshot/bsd.tgz)
	(cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC; \
	 tar cf - bsd \
	 | ${GZIP} ${GZIPFLAGS} >${DESTDIR}/snapshot/bsd-sbc.tgz)
bsd-generic:
a14 4
bsd-genericsbc:
	cd ${.CURDIR}/../sys/arch/mac68k/conf && config GENERICSBC
	cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC && \
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
d16 1
a16 1
.PHONY: bsd-generic bsd-genericsbc
@


1.7
log
@move common distrib rules to main Makefile,
make -> ${MAKE}
add phony targets
remove unnecessary subshells
install kernel in a separate target from building.
some SUDO.

okay deraadt@@

(checked bootstrap on i386, should be safe elsewhere, and trivial to fix
anyways)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 1998/02/19 20:58:00 ryker Exp $
d8 1
a8 1
	 | ${GZIP} ${GZIPFLAGS} >${DESTDIR}/snapshot/bsd-generic.tar${GZIPEXT})
d11 1
a11 1
	 | ${GZIP} ${GZIPFLAGS} >${DESTDIR}/snapshot/bsd-genericsbc.tar${GZIPEXT})
@


1.6
log
@Add needed continuation marks for subshells that span lines.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1998/02/16 02:04:39 gene Exp $
d13 3
a15 3
	(cd ${.CURDIR}/../sys/arch/mac68k/conf && config GENERIC)
	(cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC && \
	    make clean && make depend && make)
d17 5
a21 3
	(cd ${.CURDIR}/../sys/arch/mac68k/conf && config GENERICSBC)
	(cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC && \
	    make clean && make depend && make)
@


1.5
log
@Explicitly chdir when building snapshot kernels and their associated
tarballs.  In a related effort, do everything that has a different chdir
root (ie, config && make depend etc) in a subshell.
Thanks to Hans for the initial prompting on this.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1997/10/06 20:10:52 gene Exp $
d6 1
a6 1
	(cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC;
d9 1
a9 1
	(cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC;
@


1.4
log
@Build generic and genericsbc kernels into snapshot and distribute them
tar'ed and gzip'ed rather then as unmodified images.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1997/09/21 11:50:28 deraadt Exp $
d6 6
a11 4
	tar cf - ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC/bsd \
	| ${GZIP} ${GZIPFLAGS} >${DESTDIR}/snapshot/bsd-generic.tar${GZIPEXT}
	tar cf - ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC/bsd \
	| ${GZIP} ${GZIPFLAGS} >${DESTDIR}/snapshot/bsd-genericsbc.tar${GZIPEXT}
d13 3
a15 3
	cd ${.CURDIR}/../sys/arch/mac68k/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC && \
	    make clean && make depend && make
d17 3
a19 3
	cd ${.CURDIR}/../sys/arch/mac68k/conf && config GENERICSBC
	cd ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC && \
	    make clean && make depend && make
@


1.3
log
@$OpenBSD
@
text
@d1 1
a1 1
#	$OpenBSD$
d6 4
a9 4
	cp ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC/bsd \
	    ${DESTDIR}/snapshot/bsd-generic
	cp ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC/bsd \
	    ${DESTDIR}/snapshot/bsd-genericsbc
@


1.2
log
@It's OpenBSD policy to ship kernels that _aren't_ gzip'ed.
@
text
@d1 1
a1 2
#
#	$OpenBSD: Makefile.inc,v 1.1 1997/05/11 02:03:55 gene Exp $
@


1.1
log
@Use this file when building mac68k snapshots.
We now build a GENERIC and GENERICSBC kernel w/ all snapshots.
Test please.
@
text
@d2 1
a2 1
#	$OpenBSD$
d7 4
a10 4
	cp ${.CURDIR}/../sys/arch/mac68k/compile/GENERIC/bsd.gz \
	    ${DESTDIR}/snapshot/bsd-generic.gz
	cp ${.CURDIR}/../sys/arch/mac68k/compile/GENERICSBC/bsd.gz \
	    ${DESTDIR}/snapshot/bsd-genericsbc.gz
d14 1
a14 1
	    make clean && make depend && make && gzip -9 bsd
d18 1
a18 1
	    make clean && make depend && make && gzip -9 bsd
@
