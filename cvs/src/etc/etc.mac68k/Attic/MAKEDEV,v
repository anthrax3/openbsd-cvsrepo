head	1.130;
access;
symbols
	OPENBSD_5_1_BASE:1.128
	OPENBSD_5_1:1.128.0.2
	OPENBSD_5_0:1.127.0.2
	OPENBSD_5_0_BASE:1.127
	OPENBSD_4_9:1.125.0.2
	OPENBSD_4_9_BASE:1.125
	OPENBSD_4_8:1.123.0.2
	OPENBSD_4_8_BASE:1.123
	OPENBSD_4_7:1.117.0.2
	OPENBSD_4_7_BASE:1.117
	OPENBSD_4_6:1.115.0.4
	OPENBSD_4_6_BASE:1.115
	OPENBSD_4_5:1.113.0.2
	OPENBSD_4_5_BASE:1.113
	OPENBSD_4_4:1.111.0.2
	OPENBSD_4_4_BASE:1.111
	OPENBSD_4_3:1.110.0.4
	OPENBSD_4_3_BASE:1.110
	OPENBSD_4_2:1.110.0.2
	OPENBSD_4_2_BASE:1.110
	OPENBSD_4_1:1.106.0.2
	OPENBSD_4_1_BASE:1.106
	OPENBSD_4_0:1.103.0.2
	OPENBSD_4_0_BASE:1.103
	OPENBSD_3_9:1.101.0.2
	OPENBSD_3_9_BASE:1.101
	OPENBSD_3_8:1.94.0.2
	OPENBSD_3_8_BASE:1.94
	OPENBSD_3_7:1.92.0.2
	OPENBSD_3_7_BASE:1.92
	OPENBSD_3_6:1.87.0.2
	OPENBSD_3_6_BASE:1.87
	OPENBSD_3_5:1.81.0.2
	OPENBSD_3_5_BASE:1.81
	OPENBSD_3_4:1.67.0.2
	OPENBSD_3_4_BASE:1.67
	OPENBSD_3_3:1.65.0.2
	OPENBSD_3_3_BASE:1.65
	OPENBSD_3_2:1.60.0.2
	OPENBSD_3_2_BASE:1.60
	OPENBSD_3_1:1.54.0.2
	OPENBSD_3_1_BASE:1.54
	OPENBSD_3_0:1.35.0.2
	OPENBSD_3_0_BASE:1.35
	OPENBSD_2_9:1.31.0.6
	OPENBSD_2_9_BASE:1.31
	OPENBSD_2_8:1.31.0.4
	OPENBSD_2_8_BASE:1.31
	OPENBSD_2_7:1.31.0.2
	OPENBSD_2_7_BASE:1.31
	OPENBSD_2_6:1.30.0.2
	OPENBSD_2_6_BASE:1.30
	OPENBSD_2_5:1.28.0.2
	OPENBSD_2_5_BASE:1.28
	OPENBSD_2_4:1.26.0.2
	OPENBSD_2_4_BASE:1.26
	OPENBSD_2_3:1.23.0.2
	OPENBSD_2_3_BASE:1.23
	OPENBSD_2_2:1.20.0.2
	OPENBSD_2_2_BASE:1.20
	OPENBSD_2_1:1.15.0.2
	OPENBSD_2_1_BASE:1.15
	OPENBSD_2_0:1.8.0.2
	OPENBSD_2_0_BASE:1.8
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.130
date	2012.06.20.19.03.06;	author matthew;	state dead;
branches;
next	1.129;

1.129
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.128;

1.128
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.127;

1.127
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.126;

1.126
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.125;

1.125
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.124;

1.124
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.123;

1.123
date	2010.08.03.20.16.22;	author miod;	state Exp;
branches;
next	1.122;

1.122
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.120;

1.120
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.119;

1.119
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.118;

1.118
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.117;

1.117
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.116;

1.116
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.115;

1.115
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.114;

1.114
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.113;

1.113
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.112;

1.112
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.111;

1.111
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.110;

1.110
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.109;

1.109
date	2007.05.28.22.29.56;	author todd;	state Exp;
branches;
next	1.108;

1.108
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.107;

1.107
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.106;

1.106
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.105;

1.105
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.104;

1.104
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.103;

1.103
date	2006.08.28.21.23.33;	author tsi;	state Exp;
branches;
next	1.102;

1.102
date	2006.06.06.00.07.43;	author deraadt;	state Exp;
branches;
next	1.101;

1.101
date	2006.01.04.20.39.26;	author miod;	state Exp;
branches;
next	1.100;

1.100
date	2005.12.27.19.03.09;	author miod;	state Exp;
branches;
next	1.99;

1.99
date	2005.11.16.02.53.20;	author deraadt;	state Exp;
branches;
next	1.98;

1.98
date	2005.10.06.06.43.59;	author otto;	state Exp;
branches;
next	1.97;

1.97
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.96;

1.96
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.95;

1.95
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.94;

1.94
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.92;

1.92
date	2005.03.01.13.37.09;	author otto;	state Exp;
branches;
next	1.91;

1.91
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.90;

1.90
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.89;

1.89
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.88;

1.88
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.87;

1.87
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.86;

1.86
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.85;

1.85
date	2004.05.30.08.24.12;	author grange;	state Exp;
branches;
next	1.84;

1.84
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.83;

1.83
date	2004.04.11.18.15.23;	author millert;	state Exp;
branches;
next	1.82;

1.82
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.81;

1.81
date	2004.03.12.04.54.32;	author deraadt;	state Exp;
branches;
next	1.80;

1.80
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.79;

1.79
date	2004.02.16.19.05.05;	author miod;	state Exp;
branches;
next	1.78;

1.78
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	2004.02.13.23.35.03;	author miod;	state Exp;
branches;
next	1.76;

1.76
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.75;

1.75
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.74;

1.74
date	2004.02.05.22.23.29;	author todd;	state Exp;
branches;
next	1.73;

1.73
date	2004.01.13.15.16.05;	author todd;	state Exp;
branches;
next	1.72;

1.72
date	2004.01.12.22.33.09;	author todd;	state Exp;
branches;
next	1.71;

1.71
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.70;

1.70
date	2003.10.15.02.01.24;	author todd;	state Exp;
branches;
next	1.69;

1.69
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.68;

1.68
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.67;

1.67
date	2003.06.18.18.11.07;	author todd;	state Exp;
branches;
next	1.66;

1.66
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.65;

1.65
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.64;

1.64
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.62;

1.62
date	2002.12.05.03.00.26;	author kjc;	state Exp;
branches;
next	1.61;

1.61
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.60;

1.60
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.59;

1.59
date	2002.06.09.05.58.39;	author todd;	state Exp;
branches;
next	1.58;

1.58
date	2002.05.16.21.12.21;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2002.04.21.23.37.30;	author miod;	state Exp;
branches;
next	1.56;

1.56
date	2002.04.18.22.38.34;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2002.04.18.22.13.24;	author miod;	state Exp;
branches;
next	1.54;

1.54
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.53;

1.53
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.52;

1.52
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.50;

1.50
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.49;

1.49
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.48;

1.48
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.46;

1.46
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.45;

1.45
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.44;

1.44
date	2002.02.14.04.43.08;	author todd;	state Exp;
branches;
next	1.43;

1.43
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.42;

1.42
date	2002.02.09.17.01.41;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2002.02.08.20.54.35;	author todd;	state Exp;
branches;
next	1.40;

1.40
date	2002.01.23.08.23.19;	author todd;	state Exp;
branches;
next	1.39;

1.39
date	2002.01.23.07.54.41;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2002.01.23.06.21.20;	author todd;	state Exp;
branches;
next	1.37;

1.37
date	2002.01.08.05.29.13;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	2002.01.08.03.28.59;	author todd;	state Exp;
branches;
next	1.35;

1.35
date	2001.06.28.02.58.54;	author kjc;	state Exp;
branches;
next	1.34;

1.34
date	2001.06.25.03.20.03;	author kjell;	state Exp;
branches;
next	1.33;

1.33
date	2001.06.24.23.36.03;	author kjell;	state Exp;
branches;
next	1.32;

1.32
date	2001.05.30.02.11.19;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2000.03.22.07.34.29;	author niklas;	state Exp;
branches;
next	1.30;

1.30
date	99.08.20.17.00.36;	author downsj;	state Exp;
branches;
next	1.29;

1.29
date	99.05.01.06.28.47;	author downsj;	state Exp;
branches;
next	1.28;

1.28
date	98.11.25.04.58.54;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	98.11.19.08.18.57;	author dugsong;	state Exp;
branches;
next	1.26;

1.26
date	98.10.15.21.24.53;	author art;	state Exp;
branches;
next	1.25;

1.25
date	98.09.25.12.28.04;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	98.09.15.10.23.22;	author pattonme;	state Exp;
branches;
next	1.23;

1.23
date	98.01.26.04.19.42;	author dgregor;	state Exp;
branches;
next	1.22;

1.22
date	97.12.16.21.17.44;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	97.12.08.21.27.41;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	97.09.16.06.01.00;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	97.09.16.03.02.59;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	97.09.16.02.14.10;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	97.09.07.20.29.12;	author dgregor;	state Exp;
branches;
next	1.16;

1.16
date	97.06.10.00.01.31;	author gene;	state Exp;
branches;
next	1.15;

1.15
date	97.05.25.18.50.16;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	97.05.14.15.41.14;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	97.05.13.05.34.53;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	97.04.23.03.34.12;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	97.04.12.21.35.52;	author briggs;	state Exp;
branches;
next	1.10;

1.10
date	96.12.14.18.23.58;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	96.11.11.22.55.56;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	96.09.18.22.03.43;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.08.28.08.55.24;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.07.23.06.32.56;	author etheisen;	state Exp;
branches;
next	1.5;

1.5
date	96.07.23.06.15.16;	author etheisen;	state Exp;
branches;
next	1.4;

1.4
date	96.07.15.14.59.13;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.17.21.39.43;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.07.41.20;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.00;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.130
log
@yet more mac68k goop...
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.36 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	tty00	Standard serial port
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Special purpose devices:
#	asc*	ASC Audio device
#	bio	ioctl tunnel pseudo-device
#	bpf*	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	lkm	Loadable kernel modules interface
#	nnpfs*	NNPFS filesystem node
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	uk*	Unknown SCSI devices
#	vscsi*	Virtual SCSI controller
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 37 0 640 kmem
	M klog		c 6 0 600
	;;

tty0*)
	case $U in
	00|01)
		M tty$U c 12 $U 660 dialer uucp
		;;
	*)
		echo bad unit for serial tty in: $i
		;;
	esac
	;;

ttye*)
	case $U in
	0|1)
		M ttye$U c 11 $U 600
		;;
	*)
		echo bad unit for ttye in: $i
		;;
	esac
	;;

asc*)
	M asc$U c 36 $U
	;;

vscsi*)
	M vscsi$U c 53 $U 600
	;;

uk*)
	M uk$U c 34 $U 640 operator
	;;

tun*)
	M tun$U c 24 $U 600
	;;

systrace)
	M systrace c 50 0 644
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 32 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 55 $U 600
	;;

pf*)
	M pf c 35 0 600
	;;

nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

lkm)
	M lkm c 25 0 640 _lkm
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 54 0 640 operator
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

bio)
	M bio c 49 0 600
	;;

asc*)
	M asc$U 36 0
	;;

wsmouse[0-9]*)
	M wsmouse$U c 40 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 41 0 600
	M wskbd c 41 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 39 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 38 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 38 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 52 0 666
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 17 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 8 19 $U 0
	;;

rd*)
	dodisk2 rd $U 13 18 $U 0
	;;

cd*)
	dodisk2 cd $U 6 15 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

ramdisk)
	R diskmap bio pty0 tty00 tty01 asc0 rd0 cd0 cd1 st0 st1 sd0
	R sd1 sd2 sd3 sd4 bpf0 std
	;;

all)
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 vnd0
	R vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 bio ptm local wscons asc0
	R uk0 random lkm tty00 tty01 pf systrace std st0 st1 fd
	;;

sd*)
	case $i in
	sd*) dodisk sd $U 4 13 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
        cat
else
	sh
fi
@


1.129
log
@Regen.
@
text
@@


1.128
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
@


1.127
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.35 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d396 4
a399 5
	R ccd0 ccd1 ccd2 ccd3 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap
	R vscsi0 nnpfs0 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R bio ptm local wscons asc0 uk0 random lkm tty00 tty01 pf
	R systrace std st0 st1 fd
d402 1
a402 1
sd*|ccd*)
a404 1
	ccd*) dodisk ccd $U 9 20 $U 0;;
@


1.126
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.125
log
@regen
@
text
@a376 1
	dodisk svnd $U 8 19 $U 2048
@


1.124
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.33 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d63 1
d257 4
@


1.123
log
@regen
@
text
@d48 1
a49 1
#	ttyC-J*	wscons display devices
d58 1
d61 1
a66 1
#	nnpfs*	NNPFS filesystem node
a67 1
#	diskmap	Disk mapper
a232 4
diskmap)
	M diskmap c 54 0 640 operator
	;;

a236 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d262 4
d276 4
d305 6
a327 6
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.122
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
@


1.121
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.120
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.32 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a61 1
#	ss*	SCSI scanners
a256 8
ss*)
	M ss$U c 33 $(($U*16)) 640 operator
	M nss$U c 33 $(($(($U*16))+1)) 640 operator
	M enss$U c 33 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d395 3
a397 3
	R vscsi0 nnpfs0 ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2
	R sd3 sd4 bio ptm local wscons asc0 uk0 random lkm tty00 tty01
	R pf systrace std st0 st1 fd
@


1.119
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.31 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d397 2
a398 2
	R bio pty0 tty00 tty01 asc0 rd0 cd0 cd1 st0 st1 sd0 sd1 sd2
	R sd3 sd4 bpf0 std
@


1.118
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d235 1
a235 1
	M diskmap b 54 0 640 operator
@


1.117
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.30 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d68 1
d234 4
d403 4
a406 4
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 vscsi0
	R nnpfs0 ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R bio ptm local wscons asc0 uk0 random lkm tty00 tty01 pf
	R systrace std st0 st1 fd
@


1.116
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d296 1
a296 1
wsmouse*)
d305 1
a305 1
wskbd*)
@


1.115
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.29 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d67 1
d233 4
d398 4
a401 4
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 nnpfs0 ss0
	R ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 bio ptm
	R local wscons asc0 uk0 random lkm tty00 tty01 pf systrace std
	R st0 st1 fd
@


1.114
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.28 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
@


1.113
log
@regen
@
text
@d66 1
a66 1
#	xfs*	XFS filesystem node
d232 2
a233 2
xfs*)
	M xfs$U c 51 $U 600
d393 1
a393 1
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0
@


1.112
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.27 2008/06/14 23:09:06 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a202 1
	M drum		c 3 0 640 kmem
@


1.111
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.26 2008/06/13 21:07:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d259 1
a259 1
	for pre in " " s u p a
@


1.110
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.25 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d388 2
a389 2
	R pty0 tty00 tty01 asc0 rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3
	R sd4 bpf0 std
@


1.109
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.108
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.24 2007/05/27 01:50:36 todd Exp 
d57 1
d285 4
d396 3
a398 3
	R ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 ptm local
	R wscons asc0 uk0 random lkm tty00 tty01 pf systrace std st0
	R st1 fd
@


1.107
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.23 2007/05/26 19:54:23 todd Exp 
a56 1
#	bio	ioctl tunnel pseudo-device
a283 4
bio)
	M bio c 7 0 600
	;;

d391 3
a393 3
	R ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 bio ptm
	R local wscons asc0 uk0 random lkm tty00 tty01 pf systrace std
	R st0 st1 fd
@


1.106
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.22 2006/04/16 02:49:52 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d57 1
d285 4
d396 3
a398 3
	R ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 ptm local
	R wscons asc0 uk0 random lkm tty00 tty01 pf systrace std st0
	R st1 fd
@


1.105
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
@


1.104
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
@


1.103
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
@


1.102
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.27 2006/04/16 11:34:01 todd Exp 
d49 1
a49 1
#	ttyC-F*	wscons display devices
d300 2
a301 2
tty[C-F]*)
	U=${i##tty[C-F]}
d307 4
@


1.101
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.21 2006/01/04 20:39:03 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d379 2
a380 2
	R pty0 tty00 tty01 asc0 rd0 rd1 st0 st1 sd0 sd1 sd2 sd3 bpf0
	R std
@


1.100
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.20 2005/10/20 21:44:42 jmc Exp 
a42 1
#	ttye*	ITE bitmapped consoles
d48 6
a53 2
#	adb	Apple Desktop bus event interface
#	grf*	Raw interface to the mac68k graphics devices
a227 15
grf*)
	case $U in
	0|1|2|3)
		M grf$U c 10 $U
		;;
	*)
		echo bad unit for grf in: $i
		;;
	esac
	;;

adb)
	M adb c 23 0
	;;

d287 32
a318 2
adb)
	M adb c 23 0
d379 2
a380 2
	R pty0 tty00 tty01 asc0 adb rd0 rd1 st0 st1 sd0 sd1 sd2 sd3
	R bpf0 std
d384 5
a388 5
	R ttye0 ccd0 ccd1 ccd2 ccd3 cd0 cd1 rd0 tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0
	R ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 ptm
	R local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm tty00
	R tty01 pf systrace std st0 st1 fd
@


1.99
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d54 1
a54 1
#	fd	fd/* nodes for fdescfs
@


1.98
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.19 2005/08/01 22:22:13 deraadt Exp 
@


1.97
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d151 1
a151 2
RMlist="rm -f"
MKlist=":"
d154 1
a154 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d158 1
a158 1
	RMlist="$RMlist $1"
d162 1
a162 1
		MKlist="$MKlist;chown $7:$G $1"
d165 10
a174 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a175 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d264 2
a265 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d286 1
a286 1
	RMlist="mkdir -p fd;$RMlist" n=0
d288 1
a288 1
	MKlist="$MKlist;chmod 555 fd"
d387 8
a394 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d396 1
a396 1
	echo "$list" | sh
@


1.96
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d134 1
a134 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.95
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a130 1
	RMlist="$RMlist $1$2? r$1$2?"
d134 2
a135 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a137 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.94
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a167 1
	mklist="$mklist $1"
@


1.93
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.18 2005/02/07 06:14:18 david Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.92
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.91
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.90
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.17 2004/04/11 18:05:23 millert Exp 
d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.89
log
@sync
@
text
@d84 1
a84 1
	local t="$1"  
d247 2
a248 2
        M asc$U c 36 $U
        ;;
@


1.88
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
@


1.87
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.86
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d61 1
a61 1
#	uk*	SCSI unknown devices
@


1.85
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.84
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
@


1.83
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
@


1.82
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d46 2
a47 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.81
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.16 2004/02/20 19:13:08 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d46 2
a47 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d314 6
a319 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d321 1
a321 1
	while [ $n -lt 16 ]
d323 2
a324 2
		nam=$name$(hex $n)
		off=$(($U*16))
d373 4
a376 4
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1
	R pty2 xfs0 ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 ptm local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm
	R tty00 tty01 pf systrace std st0 st1 fd
@


1.80
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
@


1.79
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.15 2004/02/16 19:01:01 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d36 1
a36 1
#	sd*	SCSI disks
@


1.78
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.14 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 5
a33 6
#	std	standard devices
#	fd	makes fd/* for the fdescfs
#	local	configuration specific devices
#	ramdisk	makes all devices for a ramdisk kernel
#	st*	SCSI tapes
#	sd*	SCSI disks
d36 5
a40 3
#	ch*	SCSI media changer
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk devices
d42 2
a43 2
#	ttye*	ite bitmapped consoles
#	tty00	standard serial port
a44 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d46 5
a50 4
# Graphics devices:
#	grf*	custom chip (grf0), Retina Z2/Z3 (grf1/grf2),
#		Cirrus boards (grf3), A2410 (grf4) video or
#		CyberVision 64 (grf5)
d52 1
d54 2
a55 1
#	tun*	network tunnel driver
d57 1
a57 3
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	uk*	SCSI Unknown device
d59 4
a62 4
#	xfs*	XFS filesystem devices
#	adb	Apple Desktop bus event interface
#	asc*	ASC Audio device
#	systrace*	system call tracing device
d250 2
a251 2
systrace)
	M systrace c 50 0 644
d254 2
a255 2
asc*)
	M asc$U 36 0
d258 2
a259 2
adb)
	M adb c 23 0
d262 2
a263 2
xfs*)
	M xfs$U c 51 $U 600
a273 4
uk*)
	M uk$U c 34 $U 640 operator
	;;

d283 4
d291 4
a294 2
pf*)
	M pf c 35 0 600
d297 2
a298 2
tun*)
	M tun$U c 24 $U 600
d301 2
a302 2
bpf*)
	M bpf$U c 22 $U 600
d305 2
a306 2
ptm)
	M ptm c 52 0 666
d327 12
a338 3
vnd*)
	dodisk vnd $U 8 19 $U 0
	dodisk svnd $U 8 19 $U 2048
d345 5
d358 2
a359 8
st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
a364 10
	;;

local)
	test -s $T.local && sh $T.local
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
@


1.77
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.13 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.76
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d43 1
a43 1
#	tty*	set of 16 slave psuedo terminals
@


1.75
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.12 2004/01/13 15:13:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.74
log
@sync
@
text
@d45 1
d302 4
d370 2
a371 2
	R sd4 local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm tty00
	R tty01 pf systrace std st0 st1 fd
@


1.73
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.66 2004/01/13 15:13:14 todd Exp 
a382 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d391 1
a391 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.72
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.11 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
d362 5
a366 5
	R ccd0 ccd1 ccd2 ccd3 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2
	R xfs0 ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm ttye0
	R tty00 tty01 pf systrace std st0 st1 fd
@


1.71
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.70
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d78 8
@


1.69
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
@


1.68
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d80 1
a80 1
trunc()
d82 16
a97 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
@


1.67
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d304 1
a304 1
	dodisk svnd $U 8 19 $U 128
@


1.66
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.10 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.65
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d128 1
a128 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d160 1
a160 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.64
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d163 1
a163 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.63
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d277 1
a277 1
	M lkm c 25 0 640 kmem
@


1.62
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.9 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.61
log
@sync
@
text
@a60 1
#	altq/	ALTQ control interface
a279 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 52 $U 644
		U=$(($U+1))
	done
	;;

d357 1
a357 1
	R tty00 tty01 pf altq systrace std st0 st1 fd
@


1.60
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.8 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d347 2
a348 2
	R bpf0 std pty0 tty00 tty01 asc0 adb rd0 rd1 st0 st1 sd0 sd1
	R sd2 sd3
@


1.59
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.58
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.57
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.7 2002/04/21 23:37:05 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.45 2002/04/21 23:37:02 miod Exp 
d70 1
d241 4
d367 1
a367 1
	R tty00 tty01 pf altq std st0 st1 fd
@


1.56
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.6 2002/04/18 22:38:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.44 2002/04/17 22:53:04 miod Exp 
d44 1
d324 4
d343 2
a344 1
	R bpf0 std pty0 tty00 tty01 asc0 adb st0 st1 sd0 sd1 sd2 sd3
d358 5
a362 5
	R ccd0 ccd1 ccd2 ccd3 cd0 cd1 tun0 tun1 tun2 tun3 bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 xfs0
	R ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 local
	R grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm ttye0 tty00
	R tty01 pf altq std st0 st1 fd
@


1.55
log
@Regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.5 2002/04/18 22:13:04 miod Exp 
a195 1
	M reload	c 2 20 640 kmem
@


1.54
log
@regen. some of these were missed previously.
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d316 2
a317 2
	dodisk vnd $U 8 19 $U 0 8
	dodisk svnd $U 8 19 $U 128 8
d325 1
a325 1
	dodisk2 cd $U 6 15 $U 0 8
d362 2
a363 2
	sd*) dodisk sd $U 4 13 $U 0 8;;
	ccd*) dodisk ccd $U 9 20 $U 0 8;;
@


1.53
log
@random typo fix; ok deraadt@@
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.3 2002/02/08 20:26:36 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
@


1.52
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.49 2002/02/19 21:06:00 todd Exp $
d356 1
a356 1
	R grf0 grf1 grf2 grf3 adb asc0 uk0 rndrandom lkm ttye0 tty00
@


1.51
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
a339 1
	R cd0 cd1 ttye0
d355 2
a356 2
	R ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 grf0
	R grf1 grf2 grf3 local adb asc0 uk1 uk0 random lkm ttye0 tty00
@


1.50
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d356 3
a358 3
	R ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 local
	R grf0 grf1 grf2 grf3 adb asc0 uk1 uk0 rndrandom lkm ttye0
	R tty00 tty01 pf altq std st0 st1 fd
@


1.49
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
d340 1
d357 2
a358 2
	R grf0 grf1 grf2 grf3 adb asc0 uk0 rndrandom lkm ttye0 tty00
	R tty01 pf altq std st0 st1 fd
@


1.48
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
@


1.47
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
@


1.46
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d353 5
a357 5
	R local grf0 grf1 grf2 grf3 adb asc0 xfs0 ss0 ss1 uk0
	R rndrandom lkm ttye0 tty00 tty01 pf altq tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 ccd0 ccd1
	R ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 cd1 ch0 st0 st1 pty0
	R pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.45
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.3 2002/02/08 20:26:36 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d253 3
a255 1
	M ss$U c 33 $U 440 operator
d298 6
a303 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d308 1
@


1.44
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
@


1.43
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d367 1
a367 1
	R pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.42
log
@sync, and update, to make "ramdisk" target disk
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp 
d78 7
a84 7
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d87 1
d99 1
d115 1
d118 1
d130 1
d144 1
d146 6
a151 6
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
d153 1
d174 1
a300 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d396 2
a397 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
@


1.41
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
@


1.40
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.2 2002/01/23 07:53:01 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp 
d168 1
@


1.39
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.1 2002/01/08 03:14:50 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp 
d355 5
a359 5
	R local grf0 grf1 grf2 grf3 adb asc0 xfs0 ss0 uk0 rndrandom
	R lkm ttye0 tty00 tty01 pf altq tun0 tun1 tun2 tun3 bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 ccd0 ccd1 ccd2 ccd3
	R vnd0 vnd1 vnd2 vnd3 std cd0 ch0 st0 pty0 fd sd0 sd1 sd2 sd3
	R sd4
@


1.38
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp 
a173 7
ramdisk)
	R std
	R sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	R adb asc0 grf0 grf1 ttye0
	R tty00 tty01 pty0
	;;

d338 4
@


1.37
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.15 2002/01/08 05:10:38 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp 
d358 5
a362 5
	R std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1 st0 st1 ch0 cd0 cd1
	R vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R tun0 tun1 tun2 tun3 altq pf tty00 tty01 ttye0 lkm random
	R uk0 uk1 ss0 ss1 xfs0 asc0 adb grf0 grf1 grf2 grf3 local
@


1.36
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.14 2002/01/08 03:26:04 todd Exp 
@


1.35
log
@add an entry for ALTQ.
@
text
@d3 2
a4 1
#	$OpenBSD: MAKEDEV,v 1.34 2001/06/25 03:20:03 kjell Exp $
d6 3
a8 2
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
d10 1
a10 1
# Written and contributed by W. Jolitz 12/90
d12 2
a13 13
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d15 18
a32 2
#	from: @@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#	$NetBSD: MAKEDEV,v 1.17 1996/02/03 15:02:42 briggs Exp $ 
d38 1
a38 1
#	fd	makes fd/* for the fdescfs.
a40 2
#
# Tapes:
a41 3
#
# Disks:
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
d44 1
a46 1
#
d49 1
a49 2
#	tty*	standard built-in serial ports (2)
#
d51 2
a52 2
#	pty*	set of 16 master and slave pseudo terminals
#
a56 1
#
a57 1
#	ch*	SCSI media changer
d60 2
d63 1
a63 1
#	*random	inkernal random data source
d66 5
a70 2
#	altq	ALTQ control interface
#
d72 2
a73 3
PATH=/sbin:/bin:/usr/bin:/usr/sbin
this=$0
umask 77
d75 1
a75 16
# default shell support functions
add ()
{
	tmp=0
	while [ "$1" ]
	do
		tmp=$(( $1 + $tmp ))
		shift
	done
	echo $tmp
}
mult ()
{
	echo "$(( $1 * $2 ))"
}
hex ()
d87 1
a87 1
trunc ()
d93 4
a96 1
	echo ${arg1#$arg2}
d102 4
a105 3
	arg1="$1"
	tmp="${arg1#[a-z]*}"
	while [ "$tmp" != "$arg1" ]
d107 3
a109 2
		arg1=$tmp
		tmp="${arg1#[a-z]*}"
d111 8
a118 2
	tmp="${arg1%*[a-z]}"
	while [ "$tmp" != "$arg1" ]
d120 3
a122 2
		arg1=$tmp
		tmp="${arg1%*[a-z]}"
d124 10
a133 1
	echo $arg1
d136 33
a168 1
for i
d170 2
a171 3

unit=`unt $i`
[ "$unit" ] || unit=0
a173 17

all)
	sh $this std fd
	sh $this sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	sh $this vnd0 vnd1 vnd2 vnd3
	sh $this ccd0 ccd1 ccd2 ccd3
	sh $this adb asc0 grf0 grf1 grf2 grf3 ttye0
	sh $this tty00 tty01 pty0
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $this pf tun0 tun1 tun2 tun3
	sh $this lkm
	sh $this random
	sh $this uk0 uk1
	sh $this ss0 xfs0 altq
	sh $this local
	;;

d175 4
a178 4
	sh $this std
	sh $this sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	sh $this adb asc0 grf0 grf1 ttye0
	sh $this tty00 tty01 pty0
d182 13
a194 15
	rm -f console drum kmem mem reload zero null tty
	rm -f klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod reload		c 2 20	; chmod 640 reload ; chown root.kmem reload
	mknod zero		c 2 12	; chmod 666 zero
	mknod null		c 2 2	; chmod 666 null
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 37 0	; chmod 640 ksyms ; chown root.kmem ksyms
d197 4
a200 37
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 21 $n; n=`add $n 1`; done)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

sd*|ccd*)
	umask 2 ; unit=`expr $i : '.*[^0-9]\([0-9]*\)'`
	case $i in
	sd*) name=sd; blk=4; chr=13;;
	ccd*) name=ccd; blk=9; chr=20;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
d203 1
a203 1
		echo bad unit for disk in: $i
a205 1
	umask 77
d208 2
a209 35
vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=8; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + $off + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + $off + 7`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
	done
	umask 77
	;;

tty0*)
	unit=`expr $i : 'tty0\(.*\)'`
	rm -f ser${unit} tty${unit} tty0${unit}
	case ${unit} in
d211 1
a211 3
		mknod tty0${unit} c 12 ${unit}
		chown uucp.dialer tty0${unit}
		chmod 660 tty0${unit}
d214 1
a214 1
		echo bad unit for serial tty in: $i
d219 4
a222 7
ttye*)
	unit=`expr $i : 'ttye\(.*\)'`
	rm -f ttye${unit}
	rm -f ite*
	case $unit in
	0|1)
		mknod ttye${unit} c 11 ${unit}
d225 1
a225 1
		echo bad unit for ttye in: $i
d230 10
a239 36
pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f {tty,pty}$nam
			mknod tty$nam c 4 `add $offset $n`
			mknod pty$nam c 5 `add $offset $n`
			n=`add $n 1`
		done
		umask 77
		;;
	esac
d242 2
a243 31
st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st;  chr=14; blk=5;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
		mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
		mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
		mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
		mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
		mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
		mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
		chown root.operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 660 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
d246 2
a247 17
ch*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ch*) name=ch;  chr=17;;
	esac
	rm -f $name$unit
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	c $chr $unit
		chown root.operator ${name}${unit}
		chmod 660 ${name}${unit}
		;;
	*)
		echo bad unit for media changer in: $i
		;;
	esac
	umask 77
d250 4
a253 20
cd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd; blk=6; chr=15;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
d256 2
a257 11
grf*)
	unit=`expr $i : 'grf\(.*\)'`
	rm -f grf${unit}
	case ${unit} in
      0|1|2|3)
		mknod grf${unit} c 10 ${unit} ; chmod 666 grf${unit}
		;;
	*)
		echo bad unit for grf in: $i
		;;
	esac
d260 7
a266 3
adb)
	rm -f adb
	mknod adb c 23 0 ; chmod 666 adb
d269 3
a271 6
asc*)
        unit=${i#asc}
        rm -f asc$unit
        mknod asc$unit c 36 $unit
        chmod 666 asc$unit
        ;;
d273 6
a278 5
bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf${unit}
	mknod bpf${unit} c 22 ${unit}
	chown root.wheel bpf${unit}
d281 2
a282 5
pf)
	rm -f pf
	mknod pf c 35 0
	chown root.wheel pf
	chmod 600 pf
d286 1
a286 5
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 24 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d289 2
a290 5
lkm)
	rm -f lkm
	mknod lkm c 25 0
	chown root.kmem lkm
	chmod 640 lkm
d293 29
a321 9
random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 32 0
	mknod srandom c 32 1
	mknod urandom c 32 2
	mknod prandom c 32 3
	mknod arandom c 32 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d324 3
a326 6
uk*)
	unit=`expr $i : 'uk\(.*\)'`
	rm -f uk$unit
	mknod uk$unit c 34 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
d329 2
a330 9
ss*)
	unit=`expr $i : 'ss\(.*\)'`
	rm -f ss$unit
	mknod ss$unit c 33 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
d333 2
a334 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d337 7
a343 10
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
d348 22
a369 2
	umask 0
	test -s MAKEDEV.local && sh $this.local
d374 1
d377 31
@


1.34
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.33 2001/06/24 23:36:03 kjell Exp $
d65 1
d147 1
a147 1
	sh $this ss0 xfs0
d482 13
@


1.33
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.32 2001/05/30 02:11:19 deraadt Exp $
d426 1
a426 1
	mknod pf c 73 0
@


1.32
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.31 2000/03/22 07:34:29 niklas Exp $
d142 1
a142 1
	sh $this tun0 tun1 tun2 tun3
d422 7
@


1.31
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.30 1999/08/20 17:00:36 downsj Exp $
a141 1
	sh $this ipl
a421 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 35 0
	mknod ipnat c 35 1
	mknod ipstate c 35 2
	mknod ipauth c 35 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.30
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.29 1999/05/01 06:28:47 downsj Exp $
a41 1
#	ch*	SCSI media changer
d58 1
d340 1
a340 1
		chmod 640 ${name}${unit} n${name}${unit} \
d362 1
a362 1
		chmod 640 ${name}${unit}
@


1.29
log
@Add ksyms.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.28 1998/11/25 04:58:54 millert Exp $
d258 2
a259 1
		chown uucp.wheel tty0${unit}
@


1.28
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.27 1998/11/19 08:18:57 dugsong Exp $
d160 1
a160 1
	rm -f klog stdin stdout stderr
d173 1
@


1.27
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.26 1998/10/15 21:24:53 art Exp $
a285 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.26
log
@add missing entries for xfs in all
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.25 1998/09/25 12:28:04 todd Exp $
d288 11
d302 1
a302 1
	0|1|2|3|4)
@


1.25
log
@add xfs
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.24 1998/09/15 10:23:22 pattonme Exp $
d147 1
a147 1
	sh $this ss0
@


1.24
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.23 1998/01/26 04:19:42 dgregor Exp $
d25 1
a25 1
#     $NetBSD: MAKEDEV,v 1.17 1996/02/03 15:02:42 briggs Exp $
d28 2
a29 3
#	all	a smattering--at least one of each except
#		fd* (unimp.) and ch*
#
d31 1
a31 1
#	fd	file descriptor device nodes
d33 1
a33 1
#	raminst	for RAM disk install
d36 1
a36 1
#	st*	scsi tapes
d39 1
a39 1
#	fd*	floppy disk drives (3 1/2") (not yet available)
d41 4
a44 4
#	cd*	SCSI compact discs
#	ch*	SCSI changers
#	vnd*	vnode pseudo-disks
#	ccd*	concatenated disk driver
d47 1
a47 1
#	ttye*	ite consoles
d54 3
a56 1
#	grf*	Bitmapped graphics device
d59 1
a59 1
#	bpf*	packet filter
d61 3
a63 3
#	lkm	Device to for loadable kernel modules
#	*random	random data source
#	uk*	unknown SCSI
d67 2
a68 1
PATH=/sbin:/bin/:/usr/bin:/usr/sbin
d70 2
d74 11
a84 1
	echo "$(( $1 + $2 ))"
d89 1
a89 1
		[0-9])  echo -n $1 ;;
d98 27
d128 4
d135 21
a155 21
	sh MAKEDEV std fd
	sh MAKEDEV sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	sh MAKEDEV vnd0 vnd1 vnd2 vnd3
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV adb asc0 grf0 grf1 grf2 grf3 ttye0
	sh MAKEDEV tty00 tty01 pty0
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV ipl
	sh MAKEDEV tun0 tun1 tun2 tun3
	sh MAKEDEV lkm
	sh MAKEDEV random
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0
	sh MAKEDEV local
	;;

raminst)
	sh MAKEDEV std
	sh MAKEDEV sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	sh MAKEDEV adb asc0 grf0 grf1 ttye0
	sh MAKEDEV tty00 tty01 pty0
d467 7
d476 1
a476 1
	test -s MAKEDEV.local && sh MAKEDEV.local
@


1.23
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.22 1997/12/16 21:17:44 deraadt Exp $
d369 1
a369 1
	rm -f ipl ipnat ipstate 
d373 2
a374 1
	chown root.wheel ipl ipnat ipstate 
@


1.22
log
@fix major number for fd/*; felix reported the i386 flaw
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.21 1997/12/08 21:27:41 mickey Exp $
d369 1
a369 1
	rm -f ipl
d371 3
a373 1
	chown root.wheel ipl
@


1.21
log
@fix chN (N > 0) problem
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.20 1997/09/16 06:01:00 deraadt Exp $
d134 1
a134 1
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 24 $n; n=`add $n 1`; done)
@


1.20
log
@10 bpf devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.19 1997/09/16 03:02:59 deraadt Exp $
d303 1
a303 1
		mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
@


1.19
log
@fix bpf nodes; someone should make sure 0-9 are on all, and rm them nicely
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.18 1997/09/16 02:14:10 deraadt Exp $
d96 2
a97 2
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	sh MAKEDEV bpf8 bpf9 ipl
@


1.18
log
@fix {pty,tty}[p..]? creation; bug noted by crc@@grand-central.yar.com
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 1997/09/07 20:29:12 dgregor Exp $
d97 1
a97 1
	sh MAKEDEV bpf8 bpf9 bpfa bpfb ipl
d369 1
@


1.17
log
@In pty* rule:\n	Change 'rm -rf' to 'rm -f'\n	Fix {pty,tty}$n -> {pty,tty}$nam
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1997/06/10 00:01:31 gene Exp $
d75 7
a81 2
	[0-9])  echo -n $1 ;;
	1[0-5]) echo -n -e "\\$(( $1 + 131 ))" ;;
@


1.16
log
@Get major number for ss* and ipl* right, so these start working.
Add a missing asc* (rudimentary Apple Sound Chip) entry. & fix a comment.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1997/05/25 18:50:16 millert Exp $
d247 1
a247 1
			rm -rf {tty,pty}$n
@


1.15
log
@slave/master pty is 4/5 not 5/6
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 1997/05/14 15:41:14 niklas Exp $
d40 1
a40 1
#	fd*	floppy disk drives (3 1/2") (unimp.)
d89 1
a89 1
	sh MAKEDEV adb grf0 grf1 grf2 grf3 ttye0
d104 1
a104 1
	sh MAKEDEV adb grf0 grf1 ttye0
d349 7
d364 1
a364 1
	mknod ipl c 32 0
d405 1
a405 1
	mknod ss$unit c 35 $unit
@


1.14
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 1997/05/13 05:34:53 millert Exp $
d248 2
a249 2
			mknod tty$nam c 5 `add $offset $n`
			mknod pty$nam c 6 `add $offset $n`
@


1.13
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.12 1997/04/23 03:34:12 todd Exp $
d135 1
a135 1
sd*|vnd*|ccd*)
a138 1
	vnd*) name=vnd; blk=8; chr=19;;
d167 31
@


1.12
log
@remove awk from this MAKEDEV script as well per request
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 1997/04/12 21:35:52 briggs Exp $
d378 1
a378 1
	sh MAKEDEV.local
@


1.11
log
@It helps if MAKEDEV agrees with conf.c.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 1996/12/14 18:23:58 millert Exp $
d68 12
d128 2
a129 3
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 21 %d;", i, i)}'`)
d213 9
a221 5
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 4 %d;" \
				    "rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
@


1.10
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/11/11 22:55:56 kstailey Exp $
d333 5
a337 5
	mknod  random c 33 0
	mknod srandom c 33 1
	mknod urandom c 33 2
	mknod prandom c 33 3
	mknod arandom c 33 4
@


1.9
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1996/09/18 22:03:43 deraadt Exp $
d119 1
a119 1
	chown -R bin.bin fd
@


1.8
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 1996/08/28 08:55:24 deraadt Exp $
d62 2
d84 2
d340 19
@


1.7
log
@fix all random device node entry stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.6 1996/07/23 06:32:56 etheisen Exp $
d96 4
a99 4
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
	mknod reload		c 2 20	; chmod 640 reload ; chgrp kmem reload
d146 1
a146 1
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
d225 1
a225 1
		chgrp operator ${name}${unit} n${name}${unit} \
d250 1
a250 1
		chgrp operator ${name}${unit}
d272 1
a272 1
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.6
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d61 1
a61 1
#	*rnd	random data source
d81 1
a81 1
	sh MAKEDEV rnd
d327 9
a335 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 33 0
	mknod srnd c 33 1
	mknod urnd c 33 2
	mknod prnd c 33 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.5
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 2
@


1.4
log
@ad rnd devices.
@
text
@d198 2
a199 2
				printf("rm -f tty%s%x; mknod tty%s%x c 4 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
@


1.3
log
@From netbsd:
Make grf units 2 and 3.
@
text
@d59 1
d73 1
a73 1
      sh MAKEDEV adb grf0 grf1 grf2 grf3 ttye0
d79 1
d323 10
@


1.2
log
@created devices for the IP filter log on all architectures
@
text
@d23 1
a23 1
#	$NetBSD: MAKEDEV,v 1.16 1995/10/09 02:19:36 thorpej Exp $
d72 1
a72 1
	sh MAKEDEV adb grf0 grf1 ttye0
d282 1
a282 1
	0|1)
@


1.1
log
@Initial revision
@
text
@d75 1
a75 1
	sh MAKEDEV bpf8 bpf9 bpfa bpfb
d301 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
