head	1.54;
access;
symbols
	OPENBSD_6_1:1.54.0.12
	OPENBSD_6_1_BASE:1.54
	OPENBSD_6_0:1.54.0.10
	OPENBSD_6_0_BASE:1.54
	OPENBSD_5_9:1.54.0.4
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.54.0.6
	OPENBSD_5_8_BASE:1.54
	OPENBSD_5_7:1.54.0.2
	OPENBSD_5_7_BASE:1.54
	OPENBSD_5_6:1.53.0.6
	OPENBSD_5_6_BASE:1.53
	OPENBSD_5_5:1.53.0.4
	OPENBSD_5_5_BASE:1.53
	OPENBSD_5_4:1.52.0.4
	OPENBSD_5_4_BASE:1.52
	OPENBSD_5_3:1.52.0.2
	OPENBSD_5_3_BASE:1.52
	OPENBSD_5_2:1.50.0.6
	OPENBSD_5_2_BASE:1.50
	OPENBSD_5_1_BASE:1.50
	OPENBSD_5_1:1.50.0.4
	OPENBSD_5_0:1.50.0.2
	OPENBSD_5_0_BASE:1.50
	OPENBSD_4_9:1.49.0.6
	OPENBSD_4_9_BASE:1.49
	OPENBSD_4_8:1.49.0.4
	OPENBSD_4_8_BASE:1.49
	OPENBSD_4_7:1.49.0.2
	OPENBSD_4_7_BASE:1.49
	OPENBSD_4_6:1.44.0.4
	OPENBSD_4_6_BASE:1.44
	OPENBSD_4_5:1.38.0.2
	OPENBSD_4_5_BASE:1.38
	OPENBSD_4_4:1.37.0.2
	OPENBSD_4_4_BASE:1.37
	OPENBSD_4_3:1.35.0.2
	OPENBSD_4_3_BASE:1.35
	OPENBSD_4_2:1.34.0.4
	OPENBSD_4_2_BASE:1.34
	OPENBSD_4_1:1.34.0.2
	OPENBSD_4_1_BASE:1.34
	OPENBSD_4_0:1.31.0.4
	OPENBSD_4_0_BASE:1.31
	OPENBSD_3_9:1.31.0.2
	OPENBSD_3_9_BASE:1.31
	OPENBSD_3_8:1.29.0.2
	OPENBSD_3_8_BASE:1.29
	OPENBSD_3_7:1.28.0.4
	OPENBSD_3_7_BASE:1.28
	OPENBSD_3_6:1.28.0.2
	OPENBSD_3_6_BASE:1.28
	OPENBSD_3_5:1.27.0.2
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	OPENBSD_3_3:1.19.0.2
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@# @;


1.54
date	2014.08.23.05.49.42;	author deraadt;	state Exp;
branches;
next	1.53;
commitid	lYlxg0UCq0okY11n;

1.53
date	2014.01.25.10.28.36;	author dtucker;	state Exp;
branches;
next	1.52;

1.52
date	2013.02.13.23.11.14;	author halex;	state Exp;
branches;
next	1.51;

1.51
date	2013.01.26.17.12.21;	author claudio;	state Exp;
branches;
next	1.50;

1.50
date	2011.04.28.00.19.42;	author mikeb;	state Exp;
branches;
next	1.49;

1.49
date	2009.09.17.06.39.03;	author jmc;	state Exp;
branches;
next	1.48;

1.48
date	2009.09.11.13.21.00;	author sthen;	state Exp;
branches;
next	1.47;

1.47
date	2009.09.07.09.48.38;	author jmc;	state Exp;
branches;
next	1.46;

1.46
date	2009.09.01.14.45.32;	author todd;	state Exp;
branches;
next	1.45;

1.45
date	2009.09.01.13.51.19;	author henning;	state Exp;
branches;
next	1.44;

1.44
date	2009.06.10.15.29.34;	author sobrado;	state Exp;
branches;
next	1.43;

1.43
date	2009.05.30.22.18.15;	author henning;	state Exp;
branches;
next	1.42;

1.42
date	2009.05.30.22.15.20;	author henning;	state Exp;
branches;
next	1.41;

1.41
date	2009.04.26.12.32.48;	author sthen;	state Exp;
branches;
next	1.40;

1.40
date	2009.04.20.20.21.41;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2009.04.06.12.10.10;	author henning;	state Exp;
branches;
next	1.38;

1.38
date	2009.02.23.01.18.36;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2008.05.09.06.04.08;	author reyk;	state Exp;
branches;
next	1.36;

1.36
date	2008.04.02.05.05.25;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2008.02.29.17.04.55;	author reyk;	state Exp;
branches;
next	1.34;

1.34
date	2007.02.24.19.30.59;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	2006.10.24.16.33.21;	author david;	state Exp;
branches;
next	1.32;

1.32
date	2006.10.07.01.50.22;	author mcbride;	state Exp;
branches;
next	1.31;

1.31
date	2006.01.30.12.20.31;	author camield;	state Exp;
branches;
next	1.30;

1.30
date	2006.01.26.12.44.59;	author henning;	state Exp;
branches;
next	1.29;

1.29
date	2005.08.23.02.52.58;	author henning;	state Exp;
branches;
next	1.28;

1.28
date	2004.04.29.21.03.09;	author frantzen;	state Exp;
branches;
next	1.27;

1.27
date	2004.03.02.20.13.55;	author cedric;	state Exp;
branches;
next	1.26;

1.26
date	2004.02.26.22.11.11;	author david;	state Exp;
branches;
next	1.25;

1.25
date	2004.01.29.18.54.29;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	2003.12.05.21.23.27;	author david;	state Exp;
branches;
next	1.23;

1.23
date	2003.12.05.20.55.02;	author david;	state Exp;
branches;
next	1.22;

1.22
date	2003.11.18.21.26.51;	author david;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.02.20.38.44;	author david;	state Exp;
branches;
next	1.20;

1.20
date	2003.06.17.21.48.10;	author david;	state Exp;
branches;
next	1.19;

1.19
date	2003.03.24.01.47.28;	author ian;	state Exp;
branches;
next	1.18;

1.18
date	2003.03.11.10.11.59;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2003.02.28.00.34.13;	author david;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.14.00.34.14;	author jason;	state Exp;
branches;
next	1.15;

1.15
date	2002.12.30.23.17.54;	author dhartmei;	state Exp;
branches;
next	1.14;

1.14
date	2002.12.23.17.34.45;	author henning;	state Exp;
branches;
next	1.13;

1.13
date	2002.12.23.17.32.27;	author henning;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.23.11.47.52;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2002.12.21.03.02.40;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.12.19.00.06.29;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.13.10.20.25;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.24.19.56.45;	author pb;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.16.12.55.22;	author ian;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.27.07.00.43;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.22.10.19.13;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.17.08.07.58;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.16.22.53.24;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.26.22.58.31;	author smart;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.26.16.52.39;	author kjell;	state Exp;
branches;
next	;


desc
@@


1.54
log
@Shrink this to the minimum, but reference /etc/examples/pf.conf
(someone should really sit down and flesh out the examples)
@
text
@#	$OpenBSD: pf.conf,v 1.53 2014/01/25 10:28:36 dtucker Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

set skip on lo

block return	# block stateless traffic
pass		# establish keep-state

# By default, do not permit remote connections to X11
block return in on ! lo0 proto tcp to port 6000:6010
@


1.53
log
@Change the default PF policy to "block return", including x11 as
suggested by naddy@@.  This solves the problem that occurs when a
server crashes or is hard booted and comes back up without tearing
down any connections to it, and packets from these connections don't
match any existing state or rule and are silenty dropped.
ok phessler@@ henning@@ claudio@@ dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.52 2013/02/13 23:11:14 halex Exp $
d3 1
a3 6
# See pf.conf(5) for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.

# increase default state limit from 10'000 states on busy systems
#set limit states 100000
a6 7
# filter rules and anchor for ftp-proxy(8)
#anchor "ftp-proxy/*"
#pass in quick inet proto tcp to port ftp divert-to 127.0.0.1 port 8021

# anchor for relayd(8)
#anchor "relayd/*"

a8 12

# rules for spamd(8)
#table <spamd-white> persist
#table <nospamd> persist file "/etc/mail/nospamd"
#pass in on egress proto tcp from any to any port smtp \
#    rdr-to 127.0.0.1 port spamd
#pass in on egress proto tcp from <nospamd> to any port smtp
#pass in log on egress proto tcp from <spamd-white> to any port smtp
#pass out log on egress proto tcp to any port smtp


#block in quick from urpf-failed to any	# use with care
@


1.52
log
@Add a 'block' rule prior to the state creating 'pass' rule. This
way, TCP packets of e.g. timed out states are blocked rather than
passed by the implicit default pass rule.

sthen@@ benno@@ phessler@@ mikeb@@ agrees
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.51 2013/01/26 17:12:21 claudio Exp $
d19 1
a19 1
block		# block stateless traffic
d35 1
a35 1
block in on ! lo0 proto tcp to port 6000:6010
@


1.51
log
@Give an example of how to increase the state limit. The 10k limit is too
small for production servers now that pf is on by default.
OK phessler@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.50 2011/04/28 00:19:42 mikeb Exp $
d19 2
a20 1
pass		# to establish keep-state
@


1.50
log
@ftp-proxy(8) now requires a divert-to rule
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.49 2009/09/17 06:39:03 jmc Exp $
d6 3
@


1.49
log
@sync the spamd example to that used in spamd(8); ok beck
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.48 2009/09/11 13:21:00 sthen Exp $
d11 1
a11 1
#pass in quick proto tcp to port ftp rdr-to 127.0.0.1 port 8021
@


1.48
log
@This sample ruleset does not use require-order to mix NAT/rdr
and filter rules, because we no longer have translation rules.
Pointed out by Mitja Muzenic, ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.47 2009/09/07 09:48:38 jmc Exp $
d22 1
a22 1
#	rdr-to 127.0.0.1 port spamd
d24 2
a25 1
#pass in on egress proto tcp from <spamd-white> to any port smtp
@


1.47
log
@example spamd rules should be "pass in";
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.46 2009/09/01 14:45:32 todd Exp $
d3 1
a3 2
# See pf.conf(5) for syntax and examples; this sample ruleset uses
# require-order to permit mixing of NAT/RDR and filter rules.
@


1.46
log
@add back sample spamd(8) rules, converted appropriately; ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.45 2009/09/01 13:51:19 henning Exp $
d22 4
a25 3
#pass on egress proto tcp from any to any port smtp rdr-to 127.0.0.1 port spamd
#pass on egress proto tcp from <nospamd> to any port smtp
#pass on egress proto tcp from <spamd-white> to any port smtp
@


1.45
log
@todd reminded me we need to adjust this too
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.44 2009/06/10 15:29:34 sobrado Exp $
d18 8
@


1.44
log
@pf should block the port range allocated by net.inet.tcp.baddynamic
for the X protocol instead of port 6000 only; this way pf provides
the same protection level to all X servers.

ok sthen@@; "I am convinced that 6000-6010 is acceptable for blocking
in pf" deraadt@@, "i'd thought of something similar" oga@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.43 2009/05/30 22:18:15 henning Exp $
d10 1
a10 4
# NAT/filter rules and anchors for ftp-proxy(8)
#nat-anchor "ftp-proxy/*"
#rdr-anchor "ftp-proxy/*"
#rdr pass on ! egress proto tcp to port ftp -> 127.0.0.1 port 8021
d12 1
a12 1
#pass out proto tcp from $proxy to any port ftp
d14 1
a14 2
# NAT/filter rules and anchors for relayd(8)
#rdr-anchor "relayd/*"
a15 7

# NAT rules and anchors for spamd(8)
#table <spamd-white> persist
#table <nospamd> persist file "/etc/mail/nospamd"
#no rdr on egress proto tcp from <nospamd> to any port smtp
#no rdr on egress proto tcp from <spamd-white> to any port smtp
#rdr pass on egress proto tcp from any to any port smtp -> 127.0.0.1 port spamd
@


1.43
log
@shorter, ok theo
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.42 2009/05/30 22:15:20 henning Exp $
d33 1
a33 1
block in on ! lo0 proto tcp to port 6000
@


1.42
log
@we want pass, not pass in, so we get state for all connections
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.41 2009/04/26 12:32:48 sthen Exp $
d33 1
a33 1
block in on ! lo0 proto tcp from any to any port 6000
@


1.41
log
@remove "set require-order no", it is now the default
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.40 2009/04/20 20:21:41 deraadt Exp $
d28 1
a28 1
pass in		# to establish keep-state
@


1.40
log
@do NOT set defaults to their default here
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.39 2009/04/06 12:10:10 henning Exp $
a7 1
set require-order no
@


1.39
log
@reassembly works different now
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.38 2009/02/23 01:18:36 deraadt Exp $
a9 1
set reassemble yes
@


1.38
log
@A newruleset that contains actual blocks people can use if they
uncomment them.  this is no longer a sample.  everything in here now
must be completely legit.
discussed at length with henning, claudio, and sthen
ok sthen
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.37 2008/05/09 06:04:08 reyk Exp $
d10 1
a10 1
scrub in
@


1.37
log
@now we also need the anchor "relayd/*" in addition to the rdr-anchor.

ok pyr@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.36 2008/04/02 05:05:25 jmc Exp $
d3 2
a4 1
# See pf.conf(5) for syntax and examples.
d8 3
a10 8
#ext_if="ext0"
#int_if="int0"

#table <spamd-white> persist

#set skip on lo

#scrub in
d12 1
d15 5
d21 8
a28 5
#nat on $ext_if from !($ext_if) -> ($ext_if:0)
#rdr pass on $int_if proto tcp to port ftp -> 127.0.0.1 port 8021
#no rdr on $ext_if proto tcp from <spamd-white> to any port smtp
#rdr pass on $ext_if proto tcp from any to any port smtp \
#	-> 127.0.0.1 port spamd
d30 1
a30 4
#anchor "ftp-proxy/*"
#anchor "relayd/*"
#block in
#pass out
d32 1
a32 2
#pass quick on $int_if no state
#antispoof quick for { lo $int_if }
d34 2
a35 4
#pass in on $ext_if proto icmp to ($ext_if)
#pass in on $ext_if proto tcp to ($ext_if) port ssh
#pass in log on $ext_if proto tcp to ($ext_if) port smtp
#pass out log on $ext_if proto tcp from ($ext_if) to port smtp
@


1.36
log
@no more /usr/share/pf; pointed out by Rod Whitworth
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.35 2008/02/29 17:04:55 reyk Exp $
d26 1
@


1.35
log
@add configuration examples to the default pf.conf file (commented out):

- rdr-anchor "relayd/*": the anchor used by relayd to load
redirections into pf.

- pass in on $ext_if proto icmp to ($ext_if): it is a bad habit to
block icmp, this example proposes to allow it by default.

ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.34 2007/02/24 19:30:59 millert Exp $
d3 1
a3 1
# See pf.conf(5) and /usr/share/pf for syntax and examples.
@


1.34
log
@Make greylisting the default when spamd is enabled.  Uses the new -g flag
for spamd-setup.  OK beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.33 2006/10/24 16:33:21 david Exp $
d18 1
d32 1
@


1.33
log
@kill extra spaces
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.32 2006/10/07 01:50:22 mcbride Exp $
a9 1
#table <spamd> persist
d20 2
a21 3
#rdr pass on $ext_if proto tcp from <spamd> to port smtp \
#	-> 127.0.0.1 port spamd
#rdr pass on $ext_if proto tcp from !<spamd-white> to port smtp \
@


1.32
log
@'keep state' is now default, and use 'no state' where intended.
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.31 2006/01/30 12:20:31 camield Exp $
d33 2
a34 2
#pass in on $ext_if proto tcp to ($ext_if) port ssh 
#pass in log on $ext_if proto tcp to ($ext_if) port smtp 
@


1.31
log
@update for new ftp-proxy

ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.30 2006/01/26 12:44:59 henning Exp $
d28 1
a28 1
#pass out keep state
d30 1
a30 1
#pass quick on $int_if
d33 3
a35 3
#pass in on $ext_if proto tcp to ($ext_if) port ssh keep state
#pass in log on $ext_if proto tcp to ($ext_if) port smtp keep state
#pass out log on $ext_if proto tcp from ($ext_if) to port smtp keep state
@


1.30
log
@set skip is no good idea on int_if in this sample rulseset that also
has a rdo on $int_if that stops working then. pt out by cedric
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.29 2005/08/23 02:52:58 henning Exp $
d17 2
d26 1
a33 1
#pass in on $ext_if proto tcp to ($ext_if) port > 49151 user proxy keep state
@


1.29
log
@replace the "pass quick" example line for loopback and the inner interface
with a set skip statement to the same effect, performs way better
suggested by Stuart Henderson <stu@@spacehopper.org>, theo ok
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.28 2004/04/29 21:03:09 frantzen Exp $
d13 1
a13 1
#set skip on { lo $int_if }
d27 1
@


1.28
log
@reminder to set net.inet.ip.forwarding/net.inet6.ip6.forwarding in sysctl.conf
ok cedric@@ mcbride@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.27 2004/03/02 20:13:55 cedric Exp $
d13 2
a26 1
#pass quick on { lo $int_if }
@


1.27
log
@Simplify pf.conf, provide sample rules for greylisting.
ok beck@@, input from many.
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.25 2004/01/29 18:54:29 todd Exp $
d4 2
@


1.26
log
@add src.track timeout and src-nodes limit
ok mcbride@@
@
text
@a3 48
# Required order: options, normalization, queueing, translation, filtering.
# Macros and tables may be defined and used anywhere.
# Note that translation rules are first match while filter rules are last match.

# Macros: define common values, so they can be referenced and changed easily.
#ext_if="ext0"	# replace with actual external interface name i.e., dc0
#int_if="int0"	# replace with actual internal interface name i.e., dc1
#internal_net="10.1.1.1/8"
#external_addr="192.168.1.1"

# Tables: similar to macros, but more flexible for many addresses.
#table <foo> { 10.0.0.0/8, !10.1.0.0/16, 192.168.0.0/24, 192.168.1.18 }

# Options: tune the behavior of pf, default values are given.
#set timeout { interval 10, frag 30, src.track 0 }
#set timeout { tcp.first 120, tcp.opening 30, tcp.established 86400 }
#set timeout { tcp.closing 900, tcp.finwait 45, tcp.closed 90 }
#set timeout { udp.first 60, udp.single 30, udp.multiple 60 }
#set timeout { icmp.first 20, icmp.error 10 }
#set timeout { other.first 60, other.single 30, other.multiple 60 }
#set timeout { adaptive.start 0, adaptive.end 0 }
#set limit { states 10000, src-nodes 10000, frags 5000 }
#set loginterface none
#set optimization normal
#set block-policy drop
#set require-order yes
#set fingerprints "/etc/pf.os"
#set debug urgent

# Normalization: reassemble fragments and resolve or reduce traffic ambiguities.
#scrub in all

# Queueing: rule-based bandwidth control.
#altq on $ext_if bandwidth 2Mb cbq queue { dflt, developers, marketing }
#queue dflt bandwidth 5% cbq(default)
#queue developers bandwidth 80%
#queue marketing  bandwidth 15%

# Translation: specify how addresses are to be mapped or redirected.
# nat: packets going out through $ext_if with source address $internal_net will
# get translated as coming from the address of $ext_if, a state is created for
# such packets, and incoming packets will be redirected to the internal address.
#nat on $ext_if from $internal_net to any -> ($ext_if)

# rdr: packets coming in on $ext_if with destination $external_addr:1234 will
# be redirected to 10.1.1.1:5678. A state is created for such packets, and
# outgoing packets will be translated as coming from the external address.
#rdr on $ext_if proto tcp from any to $external_addr/32 port 1234 -> 10.1.1.1 port 5678
d5 2
a6 2
# rdr outgoing FTP requests to the ftp-proxy
#rdr on $int_if proto tcp from any to any port ftp -> 127.0.0.1 port 8021
a7 1
# spamd-setup puts addresses to be redirected into table <spamd>.
d9 1
a9 2
#no rdr on { lo0, lo1 } from any to any
#rdr pass inet proto tcp from <spamd> to any port smtp -> 127.0.0.1 port 8025
d11 19
a29 19
# Filtering: the implicit first two rules are
#pass in all
#pass out all

# block all incoming packets but allow ssh, pass all outgoing tcp and udp
# connections and keep state, logging blocked packets.
#block in log all
#pass  in  on $ext_if proto tcp from any to $ext_if port 22 keep state
#pass  out on $ext_if proto { tcp, udp } all keep state

# pass incoming packets destined to the addresses given in table <foo>.
#pass in on $ext_if proto { tcp, udp } from any to <foo> port 80 keep state

# pass incoming ports for ftp-proxy
#pass in on $ext_if inet proto tcp from any to $ext_if user proxy keep state

# assign packets to a queue.
#pass out on $ext_if from 192.168.0.0/24 to any keep state queue developers
#pass out on $ext_if from 192.168.1.0/24 to any keep state queue marketing
@


1.25
log
@sync pf.conf example with spamd(8); ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.24 2003/12/05 21:23:27 david Exp $
d18 1
a18 1
#set timeout { interval 10, frag 30 }
d25 1
a25 1
#set limit { states 10000, frags 5000 }
@


1.24
log
@put back lo1
requested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.23 2003/12/05 20:55:02 david Exp $
d59 1
a59 1
#rdr inet proto tcp from <spamd> to any port smtp -> 127.0.0.1 port 8025
@


1.23
log
@lo1 no longer exists by default so don't try to use it in examples
ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.22 2003/11/18 21:26:51 david Exp $
d58 1
a58 1
#no rdr on lo0 from any to any
@


1.22
log
@add a commented out 'set debug' default
ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.21 2003/09/02 20:38:44 david Exp $
d58 1
a58 1
#no rdr on { lo0, lo1 } from any to any
@


1.21
log
@add set fingerprints example
ok deraadt@@ henning@@ frantzen@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.20 2003/06/17 21:48:10 david Exp $
d31 1
@


1.20
log
@add adaptive, interval, and frag timeouts to pf.conf and BNF
ok henning@@ dhartmei@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.19 2003/03/24 01:47:28 ian Exp $
d30 1
@


1.19
log
@Add comments, mostly borrowed from ftp-proxy(8), showing how to set up up.
Improved & OK'd by dhartmei@@, david@@, millert@@.
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.18 2003/03/11 10:11:59 david Exp $
d18 1
a18 1
#set timeout { interval 30, frag 10 }
d24 1
@


1.18
log
@remove extra #
ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.17 2003/02/28 00:34:13 david Exp $
d10 1
d50 3
d70 3
@


1.17
log
@much-needed update to include examples for all seven types of statements
queueing and table examples are from the fosdem2k3 presentation
spamd rdr simplification from henning@@
ok dhartmei@@ henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.16 2003/02/14 00:34:14 jason Exp $
d7 1
a7 1
#
@


1.16
log
@spamd now uses tables (these load MUCH faster on my ss2); ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.15 2002/12/30 23:17:54 dhartmei Exp $
d4 2
a5 1
# General order: options, scrub rules, translation rules, and filter rules.
d9 6
a14 3
ext_if="ext0"	# replace with actual external interface name i.e., dc0
internal_net="10.1.1.1/8"
external_addr="192.168.1.1"
d29 1
a29 1
# Normalize: reassemble fragments and resolve or reduce traffic ambiguities.
d32 7
d49 1
a49 1
# spamd-setup puts addresses to be redirected into table <spamd>
d52 1
a52 1
#rdr inet proto tcp from { <spamd> } to any port smtp -> 127.0.0.1 port 8025
d54 1
a54 1
# filter rules: the implicit first two rules are
d63 7
@


1.15
log
@#set limit states unlimited -> 10000, as unlimited is not valid syntax.
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.14 2002/12/23 17:34:45 henning Exp $
d38 2
a39 1
# anchor where spamd-setup(8) attaches spam-redirection to spamd(8).
d41 1
a41 1
#rdr-anchor spamd inet proto tcp from any to any port = smtp
@


1.14
log
@default optimization is "normal", not "default"
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.13 2002/12/23 17:32:27 henning Exp $
d19 1
a19 1
#set limit { states unlimited, frags 5000 }
@


1.13
log
@missing }
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.12 2002/12/23 11:47:52 henning Exp $
d21 1
a21 1
#set optimization default
@


1.12
log
@-list options with default values
-correct order
-various spelling/grammar/consistency

from David Krause with feedback from dhartmei@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.11 2002/12/21 03:02:40 deraadt Exp $
d15 1
a15 1
#set timeout { tcp.closing 900, tcp.finwait 45, tcp.closed 90
@


1.11
log
@sample spamd stuff
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.10 2002/12/19 00:06:29 deraadt Exp $
d3 3
a5 3
# See pf.conf(5) for syntax and examples
# General order: options, scrub rules, NAT/rdr, and filter rules.
# Note that NAT is first match while packet filters are last match,
d7 1
d12 14
a25 1
# Normalize: reassemble fragments and resolve or reduce traffic ambiguities
d28 4
a31 4
# nat: packets going out through $ext_if with source address $internal_net will get
# translated as coming from $external_addr, a state is created for such packets,
# and incoming packets will be redirected to the internal address.
#nat on $ext_if from $internal_net to any -> $external_addr
d38 5
a42 2
# filter rules
# the implicit first two rules are
d47 1
a47 1
# connections and keep state, logging blocked packets
a50 5


# anchor where spamd-setup(8) attaches spam-redirection to spamd(8)
#no rdr on { lo0, lo1 } from any to any
#rdr-anchor spamd inet proto tcp from any to any port = smtp
@


1.10
log
@indent so it is more clear, add spews thing
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.9 2002/12/13 10:20:25 henning Exp $
d35 4
a38 2
# anchor to attach spews rules, which will redirect to spewsd(8)
#rdr-anchor spews inet proto tcp from any to any port = smtp
@


1.9
log
@kill whitespace at EOL; David Krause
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.8 2002/11/24 19:56:45 pb Exp $
d12 1
a12 1
# scrub in all
d17 1
a17 2

# nat on $ext_if from $internal_net to any -> $external_addr
d22 1
a22 2

# rdr on $ext_if proto tcp from any to $external_addr/32 port 1234 -> 10.1.1.1 port 5678
d26 2
a27 2
# pass in all
# pass out all
d30 4
a33 2
# connections and keep state
# log blocked packets
d35 2
a36 3
# block in log all
# pass  in  on $ext_if proto tcp from any to $ext_if port 22 keep state
# pass  out on $ext_if proto { tcp, udp } all keep state
@


1.8
log
@make the example parseable (quotes around macros)
from sam smith, thx

henning@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.7 2002/11/16 12:55:22 ian Exp $
d5 1
a5 1
# Note that NAT is first match while packet filters are last match, 
d31 1
a31 1
# block all incoming packets but allow ssh, pass all outgoing tcp and udp 
@


1.7
log
@Use macros in sample file, ok dhartmei@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.6 2002/06/27 07:00:43 fgsch Exp $
d7 3
a9 3
ext_if=ext0	# replace with actual external interface name i.e., dc0
internal_net=10.1.1.1/8
external_addr=192.168.1.1
@


1.6
log
@spell.
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.5 2002/06/22 10:19:13 henning Exp $
d4 2
d7 3
a9 2
# replace ext0 with external interface name, 10.0.0.0/8 with internal network
# and 192.168.1.1 with external address
a11 1

d14 2
a15 2
# nat: packets going out through ext0 with source address 10.0.0.0/8 will get
# translated as coming from 192.168.1.1. a state is created for such packets,
d18 1
a18 1
# nat on ext0 from 10.0.0.0/8 to any -> 192.168.1.1
d20 2
a21 2
# rdr: packets coming in through ext0 with destination 192.168.1.1:1234 will
# be redirected to 10.1.1.1:5678. a state is created for such packets, and
d24 1
a24 1
# rdr on ext0 proto tcp from any to 192.168.1.1/32 port 1234 -> 10.1.1.1 port 5678
d36 2
a37 2
# pass  in  on ext0 proto tcp from any to ext0 port 22 keep state
# pass  out on ext0 proto { tcp, udp } all keep state
@


1.5
log
@add a commented out scrub example
ok frantzen@@
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.4 2002/06/17 08:07:58 henning Exp $
d8 1
a8 1
# Normalize:  reassemble fragments and resolve or reduce traffic ambiguities
d31 1
a31 1
# log blocked pakets
@


1.4
log
@merge nat.conf here as well
add more simple filter rule examples
"commit it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 5
a11 1
#
a35 1

@


1.3
log
@The implicit pass rules come first, not last. Spotted by alec@@dtkco.com.
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.2 2001/06/26 22:58:31 smart Exp $
d4 13
d18 4
a21 1
# pass all packets in and out (these are the implicit first two rules)
d24 9
@


1.2
log
@Point to pf.conf(5) and nat.conf(5) for help
@
text
@d1 1
a1 1
#	$OpenBSD: pf.conf,v 1.1 2001/06/26 16:52:39 kjell Exp $
d5 1
a5 1
# pass all packets in and out (these are the implicit last two rules)
@


1.1
log
@change default pf configuration files to pf.conf and nat.conf. ok theo
@
text
@d1 1
a1 1
#	$OpenBSD: pf.filter,v 1.1 2001/06/26 13:23:20 dhartmei Exp $
d3 1
a3 1
# See pfctl(8) for syntax and examples
@

