head	1.202;
access;
symbols
	OPENBSD_6_0:1.197.0.4
	OPENBSD_6_0_BASE:1.197
	OPENBSD_5_9:1.192.0.2
	OPENBSD_5_9_BASE:1.192
	OPENBSD_5_8:1.189.0.6
	OPENBSD_5_8_BASE:1.189
	OPENBSD_5_7:1.189.0.2
	OPENBSD_5_7_BASE:1.189
	OPENBSD_5_6:1.186.0.4
	OPENBSD_5_6_BASE:1.186
	OPENBSD_5_5:1.185.0.4
	OPENBSD_5_5_BASE:1.185
	OPENBSD_5_4:1.179.0.2
	OPENBSD_5_4_BASE:1.179
	OPENBSD_5_3:1.173.0.2
	OPENBSD_5_3_BASE:1.173
	OPENBSD_5_2:1.170.0.2
	OPENBSD_5_2_BASE:1.170
	OPENBSD_5_1_BASE:1.169
	OPENBSD_5_1:1.169.0.2
	OPENBSD_5_0:1.167.0.2
	OPENBSD_5_0_BASE:1.167
	OPENBSD_4_9:1.165.0.2
	OPENBSD_4_9_BASE:1.165
	OPENBSD_4_8:1.162.0.2
	OPENBSD_4_8_BASE:1.162
	OPENBSD_4_7:1.154.0.2
	OPENBSD_4_7_BASE:1.154
	OPENBSD_4_6:1.152.0.4
	OPENBSD_4_6_BASE:1.152
	OPENBSD_4_5:1.148.0.2
	OPENBSD_4_5_BASE:1.148
	OPENBSD_4_4:1.144.0.2
	OPENBSD_4_4_BASE:1.144
	OPENBSD_4_3:1.140.0.6
	OPENBSD_4_3_BASE:1.140
	OPENBSD_4_2:1.140.0.2
	OPENBSD_4_2_BASE:1.140
	OPENBSD_4_1:1.135.0.2
	OPENBSD_4_1_BASE:1.135
	OPENBSD_4_0:1.131.0.2
	OPENBSD_4_0_BASE:1.131
	OPENBSD_3_9:1.130.0.2
	OPENBSD_3_9_BASE:1.130
	OPENBSD_3_8:1.124.0.2
	OPENBSD_3_8_BASE:1.124
	OPENBSD_3_7:1.122.0.2
	OPENBSD_3_7_BASE:1.122
	OPENBSD_3_6:1.117.0.2
	OPENBSD_3_6_BASE:1.117
	OPENBSD_3_5:1.110.0.2
	OPENBSD_3_5_BASE:1.110
	OPENBSD_3_4:1.97.0.2
	OPENBSD_3_4_BASE:1.97
	OPENBSD_3_3:1.95.0.2
	OPENBSD_3_3_BASE:1.95
	OPENBSD_3_2:1.89.0.2
	OPENBSD_3_2_BASE:1.89
	OPENBSD_3_1:1.85.0.2
	OPENBSD_3_1_BASE:1.85
	OPENBSD_3_0:1.60.0.2
	OPENBSD_3_0_BASE:1.60
	OPENBSD_2_9:1.50.0.2
	OPENBSD_2_9_BASE:1.50
	OPENBSD_2_8:1.48.0.2
	OPENBSD_2_8_BASE:1.48
	OPENBSD_2_7:1.46.0.2
	OPENBSD_2_7_BASE:1.46
	OPENBSD_2_6:1.45.0.2
	OPENBSD_2_6_BASE:1.45
	OPENBSD_2_5:1.42.0.2
	OPENBSD_2_5_BASE:1.42
	OPENBSD_2_4:1.39.0.2
	OPENBSD_2_4_BASE:1.39
	OPENBSD_2_3:1.32.0.2
	OPENBSD_2_3_BASE:1.32
	OPENBSD_2_2:1.28.0.2
	OPENBSD_2_2_BASE:1.28
	OPENBSD_2_1:1.20.0.2
	OPENBSD_2_1_BASE:1.20
	OPENBSD_2_0:1.10.0.2
	OPENBSD_2_0_BASE:1.10
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.202
date	2016.09.11.19.59.57;	author deraadt;	state Exp;
branches;
next	1.201;
commitid	nE2mDEOBdUs9pcWt;

1.201
date	2016.09.11.03.09.30;	author deraadt;	state Exp;
branches;
next	1.200;
commitid	5bdWa87DXO6wfavj;

1.200
date	2016.09.08.20.41.30;	author ratchov;	state Exp;
branches;
next	1.199;
commitid	OYpPi53fdbnV5gsb;

1.199
date	2016.09.04.15.39.52;	author naddy;	state Exp;
branches;
next	1.198;
commitid	zStW2v519TMXvpgu;

1.198
date	2016.09.02.17.29.00;	author goda;	state Exp;
branches;
next	1.197;
commitid	jpWYiBSH0Zb5ggN1;

1.197
date	2016.05.21.21.35.52;	author deraadt;	state Exp;
branches;
next	1.196;
commitid	VqgBnfl5n3M9BSSw;

1.196
date	2016.05.21.15.18.49;	author deraadt;	state Exp;
branches;
next	1.195;
commitid	63AnsVd02uEVSedF;

1.195
date	2016.04.28.18.17.30;	author natano;	state Exp;
branches;
next	1.194;
commitid	yJ7nITWQGOm5qxNW;

1.194
date	2016.04.25.20.38.34;	author tedu;	state Exp;
branches;
next	1.193;
commitid	0kiqbjPHHvQxOXM9;

1.193
date	2016.03.12.18.02.17;	author espie;	state Exp;
branches;
next	1.192;
commitid	OOHlYIifEE4gewlK;

1.192
date	2015.11.10.21.50.01;	author sthen;	state Exp;
branches;
next	1.191;
commitid	cbpQoyIQoLnKxXlo;

1.191
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.190;
commitid	xjeR06qiavDtFv9k;

1.190
date	2015.10.23.15.14.46;	author claudio;	state Exp;
branches;
next	1.189;
commitid	D8oDiiCrSjVktjLG;

1.189
date	2014.12.11.19.48.38;	author tedu;	state Exp;
branches;
next	1.188;
commitid	2Qyj7V6Rmn8q72sA;

1.188
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.187;
commitid	M66ALjcyb37tQVMc;

1.187
date	2014.08.20.11.23.40;	author mikeb;	state Exp;
branches;
next	1.186;
commitid	vzc4wz1s3pDevb7K;

1.186
date	2014.07.11.22.04.51;	author tedu;	state Exp;
branches;
next	1.185;
commitid	xQhhmJP574n3YeP9;

1.185
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.184;

1.184
date	2013.11.21.11.06.08;	author kettenis;	state Exp;
branches;
next	1.183;

1.183
date	2013.11.05.16.06.28;	author deraadt;	state Exp;
branches;
next	1.182;

1.182
date	2013.09.16.08.18.26;	author dcoppa;	state Exp;
branches;
next	1.181;

1.181
date	2013.08.21.15.14.21;	author ajacoutot;	state Exp;
branches;
next	1.180;

1.180
date	2013.08.20.14.30.17;	author ajacoutot;	state Exp;
branches;
next	1.179;

1.179
date	2013.07.06.17.34.47;	author naddy;	state Exp;
branches;
next	1.178;

1.178
date	2013.07.06.16.15.27;	author naddy;	state Exp;
branches;
next	1.177;

1.177
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.176;

1.176
date	2013.06.15.23.20.49;	author halex;	state Exp;
branches;
next	1.175;

1.175
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.174;

1.174
date	2013.03.15.09.16.19;	author ratchov;	state Exp;
branches;
next	1.173;

1.173
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.172;

1.172
date	2012.11.26.08.07.59;	author jasper;	state Exp;
branches;
next	1.171;

1.171
date	2012.08.23.06.16.59;	author deraadt;	state Exp;
branches;
next	1.170;

1.170
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.169;

1.169
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.168;

1.168
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.167;

1.167
date	2011.06.26.23.42.27;	author tedu;	state Exp;
branches;
next	1.166;

1.166
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.165;

1.165
date	2010.11.19.20.56.06;	author miod;	state Exp;
branches;
next	1.164;

1.164
date	2010.09.30.15.29.22;	author claudio;	state Exp;
branches;
next	1.163;

1.163
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.162;

1.162
date	2010.08.03.20.16.22;	author miod;	state Exp;
branches;
next	1.161;

1.161
date	2010.07.23.14.36.49;	author mglocker;	state Exp;
branches;
next	1.160;

1.160
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.159;

1.159
date	2010.07.03.04.08.10;	author krw;	state Exp;
branches;
next	1.158;

1.158
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.157;

1.157
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.156;

1.156
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.155;

1.155
date	2010.03.30.19.20.36;	author matthieu;	state Exp;
branches;
next	1.154;

1.154
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.153;

1.153
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.152;

1.152
date	2009.06.03.14.55.47;	author jj;	state Exp;
branches;
next	1.151;

1.151
date	2009.06.03.14.45.39;	author jj;	state Exp;
branches;
next	1.150;

1.150
date	2009.04.17.15.52.12;	author deraadt;	state Exp;
branches;
next	1.149;

1.149
date	2009.04.05.17.52.21;	author jmc;	state Exp;
branches;
next	1.148;

1.148
date	2009.02.06.21.18.20;	author grange;	state Exp;
branches;
next	1.147;

1.147
date	2009.01.25.17.31.09;	author miod;	state Exp;
branches;
next	1.146;

1.146
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.145;

1.145
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.144;

1.144
date	2008.06.28.21.48.29;	author mglocker;	state Exp;
branches;
next	1.143;

1.143
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.142;

1.142
date	2008.06.12.20.42.00;	author todd;	state Exp;
branches;
next	1.141;

1.141
date	2008.06.12.18.55.04;	author todd;	state Exp;
branches;
next	1.140;

1.140
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.139;

1.139
date	2007.06.20.18.29.20;	author miod;	state Exp;
branches;
next	1.138;

1.138
date	2007.05.28.22.29.56;	author todd;	state Exp;
branches;
next	1.137;

1.137
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.136;

1.136
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.135;

1.135
date	2007.03.07.02.58.40;	author krw;	state Exp;
branches;
next	1.134;

1.134
date	2007.02.16.02.16.33;	author deraadt;	state Exp;
branches;
next	1.133;

1.133
date	2006.12.15.21.03.55;	author kettenis;	state Exp;
branches;
next	1.132;

1.132
date	2006.10.10.12.58.03;	author todd;	state Exp;
branches;
next	1.131;

1.131
date	2006.08.28.21.23.33;	author tsi;	state Exp;
branches;
next	1.130;

1.130
date	2005.12.27.19.03.06;	author miod;	state Exp;
branches;
next	1.129;

1.129
date	2005.11.16.02.53.20;	author deraadt;	state Exp;
branches;
next	1.128;

1.128
date	2005.10.06.06.43.58;	author otto;	state Exp;
branches;
next	1.127;

1.127
date	2005.10.04.18.34.28;	author otto;	state Exp;
branches;
next	1.126;

1.126
date	2005.10.04.18.11.59;	author otto;	state Exp;
branches;
next	1.125;

1.125
date	2005.10.04.07.40.34;	author otto;	state Exp;
branches;
next	1.124;

1.124
date	2005.08.01.22.22.36;	author deraadt;	state Exp;
branches;
next	1.123;

1.123
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.122;

1.122
date	2005.03.01.13.37.09;	author otto;	state Exp;
branches;
next	1.121;

1.121
date	2005.02.07.08.23.41;	author david;	state Exp;
branches;
next	1.120;

1.120
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.119;

1.119
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.118;

1.118
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.117;

1.117
date	2004.08.19.07.05.46;	author miod;	state Exp;
branches;
next	1.116;

1.116
date	2004.06.18.20.36.32;	author miod;	state Exp;
branches;
next	1.115;

1.115
date	2004.06.03.18.40.16;	author grange;	state Exp;
branches;
next	1.114;

1.114
date	2004.05.30.08.24.11;	author grange;	state Exp;
branches;
next	1.113;

1.113
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.112;

1.112
date	2004.04.11.18.15.22;	author millert;	state Exp;
branches;
next	1.111;

1.111
date	2004.04.11.18.06.03;	author millert;	state Exp;
branches;
next	1.110;

1.110
date	2004.03.12.04.54.32;	author deraadt;	state Exp;
branches;
next	1.109;

1.109
date	2004.02.20.19.13.47;	author miod;	state Exp;
branches;
next	1.108;

1.108
date	2004.02.16.19.05.02;	author miod;	state Exp;
branches;
next	1.107;

1.107
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.106;

1.106
date	2004.02.13.23.35.01;	author miod;	state Exp;
branches;
next	1.105;

1.105
date	2004.02.10.02.46.21;	author mickey;	state Exp;
branches;
next	1.104;

1.104
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.103;

1.103
date	2004.02.05.22.23.28;	author todd;	state Exp;
branches;
next	1.102;

1.102
date	2004.01.12.22.33.08;	author todd;	state Exp;
branches;
next	1.101;

1.101
date	2004.01.12.22.31.34;	author todd;	state Exp;
branches;
next	1.100;

1.100
date	2003.10.15.02.01.24;	author todd;	state Exp;
branches;
next	1.99;

1.99
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.98;

1.98
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.97;

1.97
date	2003.06.18.18.11.07;	author todd;	state Exp;
branches;
next	1.96;

1.96
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.95;

1.95
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.94;

1.94
date	2003.01.06.05.57.38;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.92;

1.92
date	2002.12.05.04.33.23;	author kjc;	state Exp;
branches;
next	1.91;

1.91
date	2002.12.05.03.00.26;	author kjc;	state Exp;
branches;
next	1.90;

1.90
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.89;

1.89
date	2002.08.24.17.25.28;	author matthieu;	state Exp;
branches;
next	1.88;

1.88
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.87;

1.87
date	2002.06.09.05.58.38;	author todd;	state Exp;
branches;
next	1.86;

1.86
date	2002.05.16.21.12.19;	author miod;	state Exp;
branches;
next	1.85;

1.85
date	2002.04.11.20.29.41;	author deraadt;	state Exp;
branches;
next	1.84;

1.84
date	2002.04.10.06.10.05;	author deraadt;	state Exp;
branches;
next	1.83;

1.83
date	2002.03.31.21.51.37;	author fgsch;	state Exp;
branches;
next	1.82;

1.82
date	2002.02.25.05.20.36;	author todd;	state Exp;
branches;
next	1.81;

1.81
date	2002.02.21.18.34.09;	author deraadt;	state Exp;
branches;
next	1.80;

1.80
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.79;

1.79
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.78;

1.78
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	2002.02.17.05.14.54;	author deraadt;	state Exp;
branches;
next	1.76;

1.76
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.75;

1.75
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.74;

1.74
date	2002.02.14.05.55.08;	author todd;	state Exp;
branches;
next	1.73;

1.73
date	2002.02.14.04.43.08;	author todd;	state Exp;
branches;
next	1.72;

1.72
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.71;

1.71
date	2002.02.10.21.53.03;	author deraadt;	state Exp;
branches;
next	1.70;

1.70
date	2002.02.09.17.01.40;	author deraadt;	state Exp;
branches;
next	1.69;

1.69
date	2002.02.08.20.54.35;	author todd;	state Exp;
branches;
next	1.68;

1.68
date	2002.02.08.19.52.37;	author todd;	state Exp;
branches;
next	1.67;

1.67
date	2002.02.06.01.36.53;	author art;	state Exp;
branches;
next	1.66;

1.66
date	2002.01.23.08.23.19;	author todd;	state Exp;
branches;
next	1.65;

1.65
date	2002.01.23.07.54.41;	author todd;	state Exp;
branches;
next	1.64;

1.64
date	2002.01.23.06.21.20;	author todd;	state Exp;
branches;
next	1.63;

1.63
date	2002.01.08.05.29.13;	author todd;	state Exp;
branches;
next	1.62;

1.62
date	2002.01.08.03.28.59;	author todd;	state Exp;
branches;
next	1.61;

1.61
date	2001.10.26.01.35.20;	author nate;	state Exp;
branches;
next	1.60;

1.60
date	2001.07.05.02.54.06;	author mickey;	state Exp;
branches;
next	1.59;

1.59
date	2001.06.28.02.58.52;	author kjc;	state Exp;
branches;
next	1.58;

1.58
date	2001.06.25.18.24.28;	author nate;	state Exp;
branches;
next	1.57;

1.57
date	2001.06.25.03.19.42;	author kjell;	state Exp;
branches;
next	1.56;

1.56
date	2001.06.24.23.35.56;	author kjell;	state Exp;
branches;
next	1.55;

1.55
date	2001.06.22.21.17.35;	author brad;	state Exp;
branches;
next	1.54;

1.54
date	2001.06.22.15.20.11;	author brad;	state Exp;
branches;
next	1.53;

1.53
date	2001.06.22.14.54.04;	author nate;	state Exp;
branches;
next	1.52;

1.52
date	2001.05.30.02.11.11;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2001.05.14.07.56.36;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2001.03.08.02.37.15;	author ericj;	state Exp;
branches;
next	1.49;

1.49
date	2001.01.30.08.34.09;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2000.09.13.22.12.39;	author ericj;	state Exp;
branches;
next	1.47;

1.47
date	2000.09.09.15.44.59;	author ericj;	state Exp;
branches;
next	1.46;

1.46
date	2000.03.22.07.34.27;	author niklas;	state Exp;
branches;
next	1.45;

1.45
date	99.09.27.22.09.25;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	99.08.20.17.00.33;	author downsj;	state Exp;
branches;
next	1.43;

1.43
date	99.07.30.18.49.35;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	98.12.19.18.35.36;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	98.11.25.04.58.52;	author millert;	state Exp;
branches;
next	1.40;

1.40
date	98.11.19.08.18.55;	author dugsong;	state Exp;
branches;
next	1.39;

1.39
date	98.09.25.11.11.58;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	98.09.25.09.51.09;	author todd;	state Exp;
branches;
next	1.37;

1.37
date	98.09.21.23.15.52;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	98.09.15.10.23.21;	author pattonme;	state Exp;
branches;
next	1.35;

1.35
date	98.08.24.05.49.48;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	98.08.24.05.29.48;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	98.06.25.06.38.43;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	98.02.16.01.00.35;	author dgregor;	state Exp;
branches;
next	1.31;

1.31
date	98.01.26.04.19.33;	author dgregor;	state Exp;
branches;
next	1.30;

1.30
date	97.12.16.21.17.40;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	97.12.08.21.27.34;	author mickey;	state Exp;
branches;
next	1.28;

1.28
date	97.09.16.06.00.49;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	97.09.07.20.01.15;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	97.09.07.20.00.40;	author dgregor;	state Exp;
branches;
next	1.25;

1.25
date	97.09.07.19.56.10;	author dgregor;	state Exp;
branches;
next	1.24;

1.24
date	97.08.22.17.15.46;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	97.08.06.07.06.48;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	97.08.04.23.43.03;	author dgregor;	state Exp;
branches;
next	1.21;

1.21
date	97.07.06.18.13.34;	author niklas;	state Exp;
branches;
next	1.20;

1.20
date	97.05.25.18.43.59;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	97.05.14.15.41.05;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	97.05.13.05.34.47;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.05.11.02.18.40;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.05.10.23.01.47;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	97.05.07.12.52.22;	author niklas;	state Exp;
branches;
next	1.14;

1.14
date	97.05.06.19.49.56;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	97.04.07.06.19.48;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	96.12.14.18.23.49;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	96.11.11.19.43.25;	author kstailey;	state Exp;
branches;
next	1.10;

1.10
date	96.09.18.22.03.37;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.08.29.13.22.21;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.08.28.08.55.18;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.07.23.06.15.13;	author etheisen;	state Exp;
branches;
next	1.6;

1.6
date	96.07.15.14.59.05;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.06.23.10.07.24;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.03.28.18.24.36;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.01.06.17.29.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.21.15.06.30;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.58;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.58;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.202
log
@sync
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.69 2016/09/04 15:38:59 naddy Exp 
#	OpenBSD: MAKEDEV.common,v 1.93 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.83 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	ttyB?	DEC 3000 ZS8530 ("scc") serial ports
#	ttyc*	Cyclades serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Printers:
#	lpa*	Polled printer port
#	lpt*	IEEE 1284 centronics printer
# USB devices:
#	ttyU*	USB serial ports
#	uall	All USB devices
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	usb*	Bus control devices used by usbd for attach/detach
# Special purpose devices:
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bktr*	Video frame grabbers
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	hotplug	devices hot plugging
#	pci*	PCI bus devices
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	radio*	FM tuner devices
#	*random	In-kernel random data source
#	rmidi*	Raw MIDI devices
#	speaker	PC speaker
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	tuner*	Tuner devices
#	uk*	Unknown SCSI devices
#	video*	Video V4L2 devices
#	vscsi*	Virtual SCSI controller
#	switch*	Switch driver
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std fd0 wd0 wd1 wd2 sd0 sd1 sd2 bpf
	R st0 cd0 ttyC0 rd0 bio diskmap random
	;;

std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 10 0
	M stdout	c 10 1
	M stderr	c 10 2
	M ksyms		c 39 0 640 kmem
	M klog		c 6 0 600
	M xf86		c 2 4 600
	;;

ttyB*|ttyc*)
	U=${i##tty?}
	case $i in
	ttyB*)	type=B major=15 minor=$(($U*2));;
	ttyc*)	type=c major=38 minor=$U;;
	esac
	M tty$type$U c $major $minor 660 dialer root
	M cua$type$U c $major $(($minor+128)) 660 dialer root
	;;

switch*)
	M switch$U c 69 $U 600
	;;

vscsi*)
	M vscsi$U c 61 $U 600
	;;

video*)
	M video$U  c 44 $U 600
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uk*)
	M uk$U c 33 $U 640 operator
	;;

tuner*)
	M tuner$U c 58 $(($(($U*2))+16)) 644
	;;

tap*)
	M tap$U c 68 $U 600
	;;

tun*)
	M tun$U c 7 $U 600
	;;

speaker)
	M speaker c 40 0 600
	;;

rmidi*)
	M rmidi$U c 41 $U 666
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 34 $n 644
		n=$(($n+1))
	done
	;;

radio*)
	M radio$U	c 59 $U
	MKlist[${#MKlist[*]}]=";[ -e radio ] || ln -s radio$U radio"
	;;

pppx*)
	M pppx$U c 64 $U 600
	;;

pf*)
	M pf c 35 0 600
	;;

pci*)
	M pci$U	c 52 $U 600
	MKlist[${#MKlist[*]}]=";[ -h pci ] || ln -sf pci0 pci"
	;;

hotplug)
	M hotplug c 56 $U 400
	;;

fuse)
	M fuse$U c 67 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 10 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 63 0 640 operator
	;;

bpf)
	M bpf c 11 0 600
	M bpf0 c 11 0 600
	;;

bktr*)
	M bktr$U c 58 $U 644
	;;

bio)
	M bio c 53 0 600
	;;

audio*)
	M audio$U	c 24 $U
	M mixer$U	c 24 $(($U+16))
	M audioctl$U	c 24 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 45 $U 660
	;;

ulpt*)
	M ulpt$U c 47 $U 660
	;;

uhid*)
	M uhid$U c 46 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 48 $(($n+10#$j)) 660
	done
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ugen2 ugen3 ugen4 ugen5
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 usb0 usb1
	R usb2 usb3 usb4 usb5 usb6 usb7
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 49 $o 660 dialer root
	M cuaU$U c 49 $(($o+128)) 660 dialer root
	;;

lpt*|lpa*)
	case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c 31 $(($U+$f)) 600
	;;

wsmouse[0-9]*)
	M wsmouse$U c 30 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 60 0 600
	M wskbd c 60 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 29 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 25 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 25 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 55 0 666
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 26 $o 660 dialer root
	M cua$U c 26 $(($o+128)) 660 dialer root
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}rst$U	c 12 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 14 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 9 9 $U 0
	;;

rd*)
	dodisk2 rd $U 6 28 $U 0
	;;

fd*)
	typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=4; chr=37;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=$(($(($U*128))+$(($typnum*16))))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk $(($n+1)) 640 operator
	M ${nam}c	b $blk $(($n+2)) 640 operator
	M ${nam}i	b $blk $(($n+8)) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr $(($n+1)) 640 operator
	M r${nam}c	c $chr $(($n+2)) 640 operator
	M r${nam}i	c $chr $(($n+8)) 640 operator
	;;

cd*)
	dodisk2 cd $U 3 13 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R switch0 switch1 switch2 switch3 vnd0 vnd1 vnd2 vnd3 sd0 sd1
	R sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1 tap2
	R tap3 tun0 tun1 tun2 tun3 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 ch0 bio audio0 audio1 audio2 bpf fuse pppx hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0
	R speaker video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1
	R lpt2 tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08
	R tty09 tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf wd0 wd1 wd2 wd3
	R std st0 st1 fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 0 36 $U 0;;
	sd*) dodisk sd $U 8 8 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
@


1.201
log
@sync
@
text
@d242 2
a243 2
	M tty$type$U c $major $minor 660 dialer uucp
	M cua$type$U c $major $(($minor+128)) 660 dialer uucp
d380 2
a381 2
	M ttyU$U c 49 $o 660 dialer uucp
	M cuaU$U c 49 $(($o+128)) 660 dialer uucp
d459 2
a460 2
	M tty$U c 26 $o 660 dialer uucp
	M cua$U c 26 $(($o+128)) 660 dialer uucp
@


1.200
log
@sync after /dev/sound* removal
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.92 2016/09/08 20:39:28 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
d293 1
a293 1
	M radio$U     c 59 $U
d558 1
a558 1
        cat
@


1.199
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.91 2016/09/04 15:38:59 naddy Exp 
d342 1
a342 1
	M sound$U	c 24 $U
a343 1
	M audio$U	c 24 $(($U+128))
a346 1
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
@


1.198
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.68 2016/09/02 17:06:13 goda Exp 
#	OpenBSD: MAKEDEV.common,v 1.90 2016/09/02 17:06:13 goda Exp 
a468 1
		M ${pre}st$U	b 2 $n 660 operator
@


1.197
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.67 2016/04/28 18:17:30 natano Exp 
#	OpenBSD: MAKEDEV.common,v 1.88 2016/05/21 15:17:49 deraadt Exp 
d89 1
d246 4
d255 1
a255 1
	M video$U  c 44 $U 600 
d526 12
a537 11
	R vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	R cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 pty0 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2
	R bpf fuse pppx hotplug ptm local wscons pci0 pci1 pci2 pci3
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 tty00 tty01 tty02 tty03 tty04 tty05
	R tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3
	R ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5
	R pf wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.196
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.87 2016/04/28 18:17:30 natano Exp 
d250 1
a250 1
	M video$U  c 44 $U
@


1.195
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.66 2016/04/25 20:38:10 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
@


1.194
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d71 1
a71 1
#	bpf*	Berkeley Packet Filter
d216 1
a216 1
	R std fd0 wd0 wd1 wd2 sd0 sd1 sd2 bpf0
d323 3
a325 2
bpf*)
	M bpf$U c 11 $U 600
d522 5
a526 6
	R cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.193
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.65 2015/10/23 15:14:11 claudio Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a82 1
#	systrace*	System call tracing device
a269 4
systrace)
	M systrace c 50 0 644
	;;

d531 1
a531 1
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.192
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d181 2
a182 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.191
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
@


1.190
log
@Sync (after tap addition)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
@


1.189
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.64 2014/12/11 19:48:02 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d85 1
d262 4
d525 11
a535 11
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap
	R vscsi0 ch0 bio audio0 audio1 audio2 fuse pppx hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 speaker
	R video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 tty00
	R tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a
	R tty0b ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0
	R ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.188
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.63 2014/10/09 04:37:42 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.77 2014/10/09 04:33:50 tedu Exp 
a65 1
#	urio*	Diamond Multimedia Rio 500
a349 4
urio*)
	M urio$U c 65 $U 660
	;;

d368 2
a369 2
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 urio0 usb0
	R usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.187
log
@Remove userland bits related to the crypto(4) interface;  ok deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.61 2014/07/11 22:04:09 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
a76 1
#	lkm	Loadable kernel modules interface
a304 4
lkm)
	M lkm c 16 0 640 _lkm
	;;

d531 5
a535 5
	R video0 video1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09
	R tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	R ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf systrace wd0
	R wd1 wd2 wd3 std st0 st1 fd
@


1.186
log
@regen
@
text
@a72 1
#	crypto	Hardware crypto access driver
a327 4
crypto)
	M crypto c 57 0
	;;

d539 1
a539 1
	R ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0
@


1.185
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.60 2014/01/05 01:16:51 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
a72 1
#	bthub*	Bluetooth Hubs
a332 4
bthub*)
	M bthub$U c 62 $U
	;;

d534 12
a545 12
	R bthub0 bthub1 bthub2 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 tty04 tty05
	R tty06 tty07 tty08 tty09 tty0a tty0b ttyc0 ttyc1 ttyc2 ttyc3
	R ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.184
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.59 2013/11/05 16:05:30 deraadt Exp 
d220 1
a220 1
	R st0 cd0 ttyC0 rd0 bio diskmap
@


1.183
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.182
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.58 2013/08/21 15:12:46 ajacoutot Exp 
#	OpenBSD: MAKEDEV.common,v 1.71 2013/09/16 08:17:02 dcoppa Exp 
a78 1
#	iop*	I2O controller devices
a311 4
iop*)
	M iop$U c 54 $U 660
	;;

d544 2
a545 2
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.181
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.57 2013/06/03 16:06:42 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.69 2013/08/20 14:27:24 ajacoutot Exp 
d392 3
a394 2
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.180
log
@regen
@
text
@a67 1
uscan_dev
@


1.179
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
d68 1
a68 1
#	uscanner*	Scanners
a366 4
uscanner*)
	M uscanner$U c 66 $U 660
	;;

d394 1
a394 2
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.178
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d558 3
a560 3
	R tty06 tty07 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	R ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0
	R wd1 wd2 wd3 std st0 st1 fd
@


1.177
log
@regen
@
text
@d557 4
a560 4
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3
	R ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1
	R fd
@


1.176
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d78 1
a78 1
#	fuse*	Userland Filesystem
d322 1
a322 1
fuse*)
d553 8
a560 8
	R fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2 fuse0
	R fuse1 fuse2 fuse3 pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 speaker video0 video1 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0
	R ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2
	R wd3 std st0 st1 fd
@


1.175
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d78 1
a78 1
#	fuse	Userland Filesystem
d322 1
a322 1
fuse)
d553 8
a560 8
	R fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 speaker video0 video1 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3
	R ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1
	R fd
@


1.174
log
@regen after sequencer removal
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.56 2013/03/15 09:10:52 ratchov Exp 
#	OpenBSD: MAKEDEV.common,v 1.62 2013/03/15 09:10:52 ratchov Exp 
d78 1
d322 4
d553 3
a555 3
	R fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2 pppx
	R hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
@


1.173
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.55 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
a80 1
#	music*	MIDI sequencer
a308 7
music*)
	M music$U     c 42 $U
	M sequencer$U c 42 $(($U+128))
	MKlist[${#MKlist[*]}]=";[ -e music ] || ln -s music$U music"
	MKlist[${#MKlist[*]}]=";[ -e sequencer ] || ln -s sequencer$U sequencer"
	;;

d551 5
a555 5
	R tuner0 radio0 music0 speaker video0 video1 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2
	R ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.172
log
@regen
@
text
@d556 1
a556 1
	R fd0G fd0H diskmap vscsi0 ch0 bio audio0 audio1 audio2
@


1.171
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d194 1
a194 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d198 1
a198 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d202 1
a202 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d206 1
a206 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.170
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.54 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a81 1
#	nnpfs*	NNPFS filesystem node
a309 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d556 1
a556 1
	R fd0G fd0H diskmap vscsi0 nnpfs0 ch0 bio audio0 audio1 audio2
@


1.169
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.53 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
a34 1
#	raid*	RAIDframe disk devices
d567 2
a568 2
	R ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
d571 1
a571 1
wd*|sd*|raid*)
a574 1
	raid*) dodisk raid $U 16 43 $U 0;;
@


1.168
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.52 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d562 8
a569 8
	R fd0G fd0H diskmap vscsi0 nnpfs0 ch0 bio hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0
	R music0 speaker video0 video1 audio0 audio1 audio2 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1
	R ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.167
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.51 2010/11/19 20:55:46 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d558 12
a569 12
	R bthub0 bthub1 bthub2 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ch0
	R bio hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker video0 video1 audio0 audio1
	R audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
d572 1
a572 1
wd*|sd*|raid*|ccd*)
a576 1
	ccd*) dodisk ccd $U 7 27 $U 0;;
@


1.166
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.165
log
@regen
@
text
@a513 1
	dodisk svnd $U 9 9 $U 2048
@


1.164
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.50 2010/09/30 15:27:54 claudio Exp 
d68 1
d70 1
d377 4
d386 4
d408 2
a409 1
	R uhid2 uhid3 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.163
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.48 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d85 1
d296 4
@


1.162
log
@regen
@
text
@d53 1
a54 1
#	ttyC-J*	wscons display devices
d63 1
a64 1
#	ttyU*	USB serial ports
d74 1
d76 1
d82 1
d86 1
a87 1
#	*random	In-kernel random data source
a93 1
#	nnpfs*	NNPFS filesystem node
a94 2
#	bthub*	Bluetooth Hubs
#	diskmap	Disk mapper
a249 8
diskmap)
	M diskmap c 63 0 640 operator
	;;

bthub*)
	M bthub$U c 62 $U
	;;

a253 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d279 4
a291 4
rmidi*)
	M rmidi$U c 41 $U 666
	;;

d306 4
d335 4
d343 4
d391 5
a402 5
uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
	;;

d424 6
a446 6
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.161
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d400 1
a400 1
	R uhid2 uhid3 usb0 usb1 usb2 usb3 usb4 usb5
@


1.160
log
@sync
@
text
@d551 5
a555 5
	R tuner0 radio0 music0 speaker video0 audio0 audio1 audio2 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0
	R ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.159
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.158
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.47 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a85 1
#	ss*	SCSI scanners
a286 8
ss*)
	M ss$U c 32 $(($U*16)) 640 operator
	M nss$U c 32 $(($(($U*16))+1)) 640 operator
	M enss$U c 32 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d548 8
a555 9
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ss0
	R ss1 ch0 bio hotplug ptm local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker video0 audio0
	R audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.157
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.46 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d223 1
a223 1
	R st0 cd0 ttyC0 rd0 bio
@


1.156
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d252 1
a252 1
	M diskmap b 63 0 640 operator
@


1.155
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.44 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d95 1
d251 4
d557 9
a565 8
	R fd0B fd0C fd0D fd0E fd0F fd0G fd0H vscsi0 nnpfs0 ss0 ss1 ch0
	R bio hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1
	R uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker video0 audio0 audio1 audio2 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0
	R ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.154
log
@regen
@
text
@d94 1
d250 4
d548 12
a559 12
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H vscsi0 nnpfs0 ss0 ss1 ch0 bio hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0
	R music0 speaker video0 audio0 audio1 audio2 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2
	R ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.153
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d410 1
a410 1
wsmouse*)
d419 1
a419 1
wskbd*)
@


1.152
log
@Sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.43 2009/06/03 14:45:39 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d79 1
a79 1
#	music*	MIDI devices
d93 1
d249 4
d547 8
a554 8
	R fd0G fd0H nnpfs0 ss0 ss1 ch0 bio hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0
	R speaker video0 audio0 audio1 audio2 uk0 random lpa0 lpa1
	R lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1
	R ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3
	R ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1
	R raid2 raid3 std st0 st1 fd
@


1.151
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.41 2009/02/06 21:17:14 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.42 2009/04/05 17:49:14 jmc Exp 
d542 8
a549 8
	R fd0G fd0H nnpfs0 ss0 ss1 ch0 bio hotplug ptm local wscons pci0
	R pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 speaker
	R video0 audio0 audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4
	R ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
@


1.150
log
@sync
@
text
@d92 1
a92 1
#	xfs*	XFS filesystem node
d248 2
a249 2
xfs*)
	M xfs$U c 51 $U 600
d542 1
a542 1
	R fd0G fd0H xfs0 ss0 ss1 ch0 bio hotplug ptm local wscons pci0
@


1.149
log
@regen;
@
text
@d219 1
a219 1
	R std fd0 wd0 wd1 wd2 sd0 sd1 sd2
@


1.148
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d91 1
a91 1
#	video*	Video V4L devices
@


1.147
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.40 2009/01/25 17:30:48 miod Exp 
d539 11
a549 11
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E fd1F
	R fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0 ss0
	R ss1 ch0 bio hotplug ptm local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker video0 audio0
	R audio1 audio2 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.146
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.39 2008/06/28 21:46:04 mglocker Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a233 1
	M drum		c 3 0 640 kmem
@


1.145
log
@sync
@
text
@d545 6
a550 5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker video0 audio0 uk0
	R random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0
	R ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.144
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
d288 1
a288 1
	for pre in " " s u p a
@


1.143
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.37 2008/06/13 21:07:27 todd Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
a68 1
#	video*	Video V4L devices
d91 1
d253 5
a362 5
	;;

video*)
	M video$U  c 44 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
@


1.142
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.36 2008/06/12 20:39:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d220 1
a220 1
	R st0 cd0 ttyC0 rd0
@


1.141
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.35 2008/06/12 18:52:46 todd Exp 
d69 1
d360 5
d545 5
a549 5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker audio0 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1
	R ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.140
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.34 2007/06/20 18:28:55 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d219 1
a219 1
	R st0 cd0 ttyC0 random rd0
@


1.139
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.35 2007/05/28 22:37:14 todd Exp 
@


1.138
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.33 2007/05/28 22:26:01 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

d405 2
a406 2
	M wsmouse c 56 0 600
	M wskbd c 56 1 600
@


1.137
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.32 2007/05/27 01:50:35 todd Exp 
d72 1
d345 4
d538 7
a544 7
	R ss1 ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0
	R iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 music0 speaker audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2
	R ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.136
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.31 2007/05/26 19:54:23 todd Exp 
a71 1
#	bio	ioctl tunnel pseudo-device
a343 4
bio)
	M bio c 44 0 600
	;;

d533 7
a539 7
	R ss1 ch0 bio hotplug ptm local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 speaker audio0 uk0 random
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1
	R ttyB2 ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.135
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.30 2006/04/16 11:34:01 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d72 1
d345 4
d538 7
a544 7
	R ss1 ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0
	R iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6
	R rmidi7 tuner0 radio0 music0 speaker audio0 uk0 random lpa0
	R lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0
	R ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2
	R ttyB3 ttyB4 ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.134
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
d303 1
a303 1
	MKlist[${#MKlist[*]}]=";[ -e pci ] || ln -s pci0 pci"
@


1.133
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
d512 1
d516 1
@


1.132
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.30 2006/10/10 12:33:41 todd Exp 
d79 1
a79 1
#	pci	PCI bus device
d301 3
a303 2
pci)
	M pci c 52 0 600
d530 7
a536 7
	R ss1 ch0 hotplug ptm local wscons pci iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker audio0 uk0 random lpa0 lpa1 lpa2 lpt0
	R lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4
	R ttyB5 crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
@


1.131
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
d382 2
a383 2
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R usb0 usb1 usb2 usb3 usb4 usb5
@


1.130
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.28 2005/11/15 14:36:48 robert Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d54 1
a54 1
#	ttyC-F*	wscons display devices
d407 2
a408 2
tty[C-F]*)
	U=${i##tty[C-F]}
d414 4
@


1.129
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d53 1
a53 1
#	ttyC0	Minimal wscons devices
d74 1
a74 1
#	fd	fd/* nodes for fdescfs
@


1.128
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.27 2005/08/01 22:22:12 deraadt Exp 
d71 1
d81 1
d88 1
d255 4
d292 5
d338 4
d526 6
a531 6
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 music0
	R speaker audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.127
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d176 1
a176 2
RMlist="rm -f"
MKlist=":"
d179 1
a179 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d183 1
a183 1
	RMlist="$RMlist $1"
d187 1
a187 1
		MKlist="$MKlist;chown $7:$G $1"
d190 10
a199 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a200 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d264 2
a265 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d296 2
a297 2
	MKlist="$MKlist;[ -e music ] || ln -s music$U music"
	MKlist="$MKlist;[ -e sequencer ] || ln -s sequencer$U sequencer"
d313 1
a313 1
	RMlist="mkdir -p fd;$RMlist" n=0
d315 1
a315 1
	MKlist="$MKlist;chmod 555 fd"
d331 4
a334 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d534 8
a541 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d543 1
a543 1
	echo "$list" | sh
@


1.126
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d159 1
a159 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.125
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a155 1
	RMlist="$RMlist $1$2? r$1$2?"
d159 2
a160 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a162 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.124
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a192 1
	mklist="$mklist $1"
@


1.123
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.26 2004/06/18 20:35:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.122
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.121
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
d373 1
a373 1
	R usb0 usb1 usb2 usb3
@


1.120
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.119
log
@sync
@
text
@d109 1
a109 1
	local t="$1"  
@


1.118
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d358 1
a358 1
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d360 1
a360 1
		M ugen$U.$j c 48 $(($n+$j)) 660
d406 1
a406 1
	[0-9a-f]) M tty$n$U c 25 $(( 16#$U + $m )) 600;;
@


1.117
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
d368 1
@


1.116
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d86 1
a86 1
#	uk*	SCSI unknown devices
@


1.115
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.25 2004/05/30 08:17:18 grange Exp 
d72 1
d324 4
d518 3
a520 2
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.114
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.113
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.24 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
d73 1
d313 4
d509 6
a514 6
	R ss1 ch0 ptm local wscons pci iop0 iop1 uall rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 music0 speaker
	R audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00
	R tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6
	R ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf systrace wd0
	R wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.112
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
d362 1
a362 1
	R usb0 usb1
@


1.111
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d50 2
a51 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.110
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.23 2004/03/12 04:54:04 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d50 2
a51 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d412 6
a417 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d419 1
a419 1
	while [ $n -lt 16 ]
d421 2
a422 2
		nam=$name$(hex $n)
		off=$(($U*16))
d502 8
a509 8
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R xfs0 ss0 ss1 ch0 ptm local wscons pci iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 music0
	R speaker audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm
	R tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.109
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.22 2004/02/20 19:10:12 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
d63 1
a63 1
#	usbs	All USB devices
d360 1
a360 1
usbs)
d500 1
a500 1
	R xfs0 ss0 ss1 ch0 ptm local wscons pci iop0 iop1 usbs rmidi0
@


1.108
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.21 2004/02/16 19:00:57 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d36 1
d38 1
a38 2
#	raid*	RAIDframe disk devices
#	sd*	SCSI disks
a74 1
#	mmclock	Memory mapped clock
a247 4
mmclock)
	M mmclock c 28 0 444
	;;

d502 4
a505 5
	R speaker audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R mmclock lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3
	R ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5
	R pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0
	R st1 fd
@


1.107
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.20 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 5
#	ramdisk	devices to be put on ramdisk-based media
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tapes
d33 1
a33 1
#	sd*	SCSI disks
d35 1
a35 3
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
d38 6
a43 1
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
d45 1
d47 8
a54 2
#	ttyC0	wscons screen 0
#	ttyC-F*	wscons virtual consoles
a56 2
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	ttyc*	Cyclades serial ports
a58 4
# Pseudo terminals:
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
#	ptm	pty master device
d60 1
a61 1
#	lpa*	interruptless lp
d63 3
a65 1
#	usb*	Bus control devices used by usbd for attach/detach
d68 1
a68 2
#	ugen*	Generic device
#	ttyU*	Serial ports
d70 1
a70 2
#	ch*	SCSI media changer
#	pf*	Packet Filter
d72 5
a76 1
#	iop*	I2O controller device
d78 4
a81 9
#	usbs	make USB devices
#	fd	makes fd/* for the fdescfs
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	mmclock	memory mapped clock
#	kbd	keyboard (provides events, for X11)
#	mouse	mouse (provides events, for X11)
#	*random	inkernel random data source
#	uk*	SCSI Unknown device
d83 4
a86 6
#	xfs*	XFS filesystem devices
#	audio*	audio device
#	speaker	pc speaker
#	rmidi*	raw midi devices
#	music*	midi devices
#	systrace*	system call tracing device
d253 2
a254 2
systrace)
	M systrace c 50 0 644
d257 2
a258 5
music*)
	M music$U     c 42 $U
	M sequencer$U c 42 $(($U+128))
	MKlist="$MKlist;[ -e music ] || ln -s music$U music"
	MKlist="$MKlist;[ -e sequencer ] || ln -s sequencer$U sequencer"
d261 2
a262 2
rmidi*)
	M rmidi$U c 41 $U 666
d265 2
a266 17
speaker)
	M speaker c 40 0 600
	;;

audio*)
	M sound$U	c 24 $U
	M mixer$U	c 24 $(($U+16))
	M audio$U	c 24 $(($U+128))
	M audioctl$U	c 24 $(($U+192))
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

xfs*)
	M xfs$U c 51 $U 600
d277 2
a278 2
uk*)
	M uk$U c 33 $U 640 operator
d290 6
a295 2
kbd)
	M kbd c major_kbd_c 0 600 
d298 9
a306 2
tun*)
	M tun$U c 7 $U 600
d313 4
d323 2
a324 3
usbs)
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R usb0 usb1
d327 9
a335 2
pci)
	M pci c 52 0 600
d338 3
a340 2
iop*)
	M iop$U c 54 $U 660
d343 2
a344 2
bpf*)
	M bpf$U c 11 $U 600
d347 2
a348 2
pf*)
	M pf c 35 0 600
d351 6
a356 2
ch*)
	M ch$U c 14 $U 660 operator
d365 11
a375 6
ugen*)
	n=$(($U*16))
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
	do
		M ugen$U.$j c 48 $(($n+$j)) 660
	done
d378 2
a379 2
ulpt*)
	M ulpt$U c 47 $U 660
d382 3
a384 2
uhid*)
	M uhid$U c 46 $U 660
d387 2
a388 3
usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 45 $U 660
d391 2
a392 1
lpt*|lpa*)
d394 9
a402 2
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
a403 1
	M $n$U c 31 $(($U+$f)) 600
d406 4
a409 2
ptm)
	M ptm c 55 0 666
d430 2
a431 2
wsmouse*)
	M wsmouse$U c 30 $U 600
d441 8
a448 3
wsmux|wsmouse|wskbd)
	M wsmouse c 56 0 600
	M wskbd c 56 1 600
d451 2
a452 2
wskbd*)
	M wskbd$U c 29 $U 600
d455 3
a457 13
tty[C-F]*)
	U=${i##tty[C-F]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 25 $(( 16#$U + $m )) 600;;
	cfg) M tty${n}cfg c 25 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
d460 2
a461 4
wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
a491 9
rd*)
	dodisk2 rd $U 6 28 $U 0
	;;

vnd*)
	dodisk vnd $U 9 9 $U 0
	dodisk svnd $U 9 9 $U 2048
	;;

a495 10
st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 2 $n 660 operator
		M ${pre}rst$U	c 12 $n 660 operator
		n=$(($n+1))
	done
	;;

d505 7
a511 6
	R xfs0 ss0 ss1 ch0 ptm wscons pci iop0 iop1 usbs rmidi0 rmidi1
	R rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 music0 speaker
	R audio0 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 mmclock lkm
	R tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.106
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.19 2004/02/13 23:34:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.105
log
@regen properly
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.18 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d53 1
a53 1
#	tty*	set of 16 slave psuedo terminals
@


1.104
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.17 2004/01/12 22:18:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.103
log
@sync
@
text
@d55 1
d386 4
d509 1
a509 1
	R xfs0 ss0 ss1 ch0 wscons pci iop0 iop1 usbs rmidi0 rmidi1
@


1.102
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a527 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d536 1
a536 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.101
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.100
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.16 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d63 1
a63 1
#	utty*	Serial ports
d105 8
d326 1
a326 1
	R utty0 utty1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
d350 4
a353 2
utty*)
	M utty$U c 49 $U 660
@


1.99
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
d399 1
a399 1
	o=$(hextod $U)
@


1.98
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d48 1
a48 1
#	tty0*	NS16x50 serial ports
d105 1
a105 1
trunc()
d107 16
a122 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
d397 5
a401 3
tty0*)
	M tty$U c 26 $U 660 dialer uucp
	M cua$U c 26 $(($U+128)) 660 dialer uucp
@


1.97
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d457 1
a457 1
	dodisk svnd $U 9 9 $U 128
@


1.96
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.15 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.95
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d153 1
a153 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d185 1
a185 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.94
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d188 1
a188 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.93
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d307 1
a307 1
	M lkm c 16 0 640 kmem
@


1.92
log
@replace MAKEDEVs by auto-generated ones.
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.14 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.91
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d495 2
a496 3
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.90
log
@sync
@
text
@a75 1
#	altq/	ALTQ control interface
a328 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 53 $U 644
		U=$(($U+1))
	done
	;;

d495 1
a495 1
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf altq
@


1.89
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.13 2002/08/24 17:21:44 matthieu Exp 
#	OpenBSD: MAKEDEV.mi,v 1.50 2002/08/12 10:45:04 miod Exp 
@


1.88
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.12 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d227 1
@


1.87
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.86
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.85
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.11 2002/04/10 06:09:43 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp 
d95 1
d244 4
d504 3
a506 2
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf altq wd0
	R wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.84
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d318 1
a318 1
	M pci c 52 0 664
@


1.83
log
@regen. some of these were missed previously.
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.10 2002/02/21 18:36:55 deraadt Exp 
d210 1
a210 1
	R std fd0 wd0 wd1 sd0 sd1
@


1.82
log
@random typo fix; ok deraadt@@
@
text
@d6 3
a8 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.8 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
@


1.81
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.78 2002/02/19 21:06:00 todd Exp $
d497 4
a500 4
	R audio0 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 mmclock
	R lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4
	R ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf
	R altq wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.80
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.9 2002/02/21 13:03:50 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d210 1
a210 1
	R std fd0 wd0 sd0 sd1 sd2
d497 1
a497 1
	R audio0 uk1 uk0 random lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 mmclock
@


1.79
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d497 4
a500 5
	R audio0 uk1 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2
	R mmclock lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3
	R ttyc4 ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5
	R pf altq wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.78
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.8 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
d210 1
a210 1
	R std fd0 wd0 wd1 sd0 sd1
d497 5
a501 4
	R audio0 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 mmclock
	R lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4
	R ttyc5 ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf
	R altq wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.77
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
d54 1
a54 1
#	ttyC*	wscons virtual consoles
d414 8
a421 2
ttyC*)
	U=${i##ttyC}
d423 2
a424 2
	[0-9a-f]) M ttyC$U c 25 $(( 16#$U )) 600;;
	cfg) M ttyCcfg c 25 255 600;;
d430 3
a432 4
	R ttyCcfg
	R ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9
	R ttyCa ttyCb wsmux wskbd0 wskbd1 wskbd2 wskbd3
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3
@


1.76
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d37 1
a37 1
#	ramdisk	devices to be put on install floppies
d48 1
a48 1
#	rd*	"ramdisk" pseudo-disks
@


1.75
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d486 10
a495 10
	R wscons pci iop0 iop1 usbs rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 music0 speaker audio0 xfs0 ss0
	R ss1 uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 mmclock lkm
	R tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5
	R ttyc6 ttyc7 ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5 pf altq tun0
	R tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8
	R bpf9 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C
	R fd0D fd0E fd0F fd0G fd0H wd0 wd1 wd2 wd3 rd0 raid0 raid1
	R raid2 raid3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0
	R cd1 ch0 st0 st1 pty0 pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.74
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.7 2002/02/09 16:59:50 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d274 3
a276 1
	M ss$U c 32 $U 440 operator
d379 6
a384 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d389 1
@


1.73
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
d47 1
a47 1
#	wd*	"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
@


1.72
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d505 1
a505 1
	R cd1 ch0 st0 st1 pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.71
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
d144 1
@


1.70
log
@sync, and update, to make "ramdisk" target disk
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp 
d104 7
a110 7
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d113 1
d125 1
d141 1
d155 1
d169 1
d171 6
a176 6
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
d178 1
d199 1
a380 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d443 9
a451 9
	*A)		typnam=0; typnum=0;;
	*B)		typnum=1;;
	*C)		typnum=2;;
	*D)		typnum=3;;
	*E)		typnum=4;;
	*F)		typnum=5;;
	*G)		typnum=6;;
	*H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
d535 2
a536 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
@


1.69
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.6 2002/02/08 19:42:34 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
d37 1
a37 1
#	floppy	devices to be put on install floppies
d201 1
a201 1
floppy)
@


1.68
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp 
@


1.67
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.5 2002/02/06 01:35:34 art Exp 
d194 1
d202 1
a202 1
	R std wt0 fd0 wd0 wd1 sd0 sd1 tty00 tty01
d496 3
a498 3
	R fd0D fd0E fd0F fd0G fd0H rd0 raid0 raid1 raid2 raid3 wd0 wd1
	R wd2 wd3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 cd1
	R ch0 st0 st1 pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.66
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.4 2002/01/23 07:53:01 todd Exp 
d202 1
a202 1
	R st0 cd0 ttyC0 random
@


1.65
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.3 2002/01/23 06:40:28 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp 
d490 1
a490 1
	R uk0 rndrandom lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 mmclock lkm
d496 2
a497 2
	R wd2 wd3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 ch0
	R st0 pty0 fd sd0 sd1 sd2 sd3 sd4
@


1.64
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.2 2002/01/23 06:15:53 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp 
d93 1
a204 8
raminst)
	R std random
	R sd0 sd1 sd2 wd0 st0
	R cd0
	R rd0 bpf0
	R ttyB0 ttyB1 ttyE0 ttyE1 pty0
	;;

d235 2
a236 2
	M music$U     c 53 $U
	M sequencer$U c 53 $(($U+128))
d241 4
d246 1
a246 1
	M speaker c 27 0 600
d488 2
a489 1
	R wscons pci iop0 iop1 usbs music0 speaker audio0 xfs0 ss0
@


1.63
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.alpha/MAKEDEV.md,v 1.1 2002/01/08 01:33:19 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.15 2002/01/08 05:10:38 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp 
d92 2
d199 5
d241 11
d305 2
a306 2
	R usb0 usb1 uhid0 uhid1 uhid2 uhid3 ulpt0 ulpt1 ugen0 ugen1
	R utty0 utty1
d491 9
a499 12
	R std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1 st0 st1 ch0 cd0 cd1
	R vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 rd0
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R tun0 tun1 tun2 tun3 altq pf
	R ttyB0 ttyB1 ttyB2 ttyB3 ttyB4 ttyB5
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	R tty00 tty01 tty02 tty03 lkm mmclock
	R lpa0 lpt0 lpa1 lpt1 lpa2 lpt2 random uk0 uk1 ss0 ss1 xfs0
	R audio0 usbs iop0 iop1 pci wscons
d502 1
a502 1
sd*|ccd*|raid*|wd*)
d504 1
d506 1
a507 2
	raid*) dodisk raid $U 16 43 $U 0;;
	wd*) dodisk wd $U 0 36 $U 0;;
@


1.62
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.14 2002/01/08 03:26:04 todd Exp 
@


1.61
log
@add floppy device
@
text
@a1 2
#	$OpenBSD: MAKEDEV,v 1.60 2001/07/05 02:54:06 mickey Exp $
#	$NetBSD: MAKEDEV,v 1.8.4.1 1996/06/18 00:41:56 cgd Exp $
d3 10
a12 1
# Copyright (c) 1990 The Regents of the University of California.
d20 2
a21 10
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
d23 10
a32 11
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
a33 1
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
d37 1
a39 1
#
a41 1
#
d47 4
a50 4
#	wd*	ISA "winchester" disk drives (ST506,IDE,ESDI,RLL,...)
#	raid*	RAIDframe disk driver
#	fd*	"floppy" disk drives (3 1/2", 5 1/4")
#
d53 8
a60 3
#	tty0?	AlphaStation NS16550 ("com") serial ports
#	ttyC?	Workstation console ("wscons") tty emulators
#
d62 2
a63 2
#	pty*	set of 16 master and slave pseudo terminals
#
d65 1
a65 1
#	lpt*	stock lp
a66 1
#
a72 1
#
d75 1
d77 5
a81 1
#	fd	makes fd/* for the fdescfs.
a82 1
#	audio*	audio device
d87 1
a87 1
#	*random	inkernal random data source
d90 4
a93 2
#	altq	ALTQ control interface
#	iop	I2O controller device
d95 2
a96 3
PATH=/sbin:/bin:/usr/bin:/usr/sbin
this=$0
umask 77
d98 1
a98 16
# default shell support functions
add ()
{
	tmp=0
	while [ "$1" ]
	do
		tmp=$(( $1 + $tmp ))
		shift
	done
	echo $tmp
}
mult ()
{
	echo "$(( $1 * $2 ))"
}
hex ()
d110 1
a110 1
trunc ()
d116 4
a119 1
	echo ${arg1#$arg2}
d125 4
a128 3
	arg1="$1"
	tmp="${arg1#[a-z]*}"
	while [ "$tmp" != "$arg1" ]
d130 3
a132 2
		arg1=$tmp
		tmp="${arg1#[a-z]*}"
d134 8
a141 2
	tmp="${arg1%*[a-z]}"
	while [ "$tmp" != "$arg1" ]
d143 3
a145 2
		arg1=$tmp
		tmp="${arg1%*[a-z]}"
d147 10
a156 1
	echo $arg1
d159 33
a191 1
for i
d193 2
a194 3

unit=`unt $i`
[ "$unit" ] || unit=0
d197 7
d205 13
a217 15
all)
	sh $this std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1
	sh $this st0 st1 ch0 cd0 cd1 vnd0 vnd1 vnd2 vnd3
	sh $this ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3
	sh $this raid0 raid1 raid2 raid3
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $this pf audio0 tun0 tun1 tun2 tun3
	sh $this ttyB0 ttyB1 tty00 tty01 lkm
	sh $this mmclock lpa0 lpt0 random
	sh $this uk0 uk1 ss0 ss1
	sh $this ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	sh $this local xfs0 altq
	sh $this usbs wscons ttyCcfg iop0 iop1
	sh $this fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H 
	sh $this fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
d220 8
a227 8
raminst)
	sh $this std random
	sh $this sd0 sd1 sd2 wd0 st0
	sh $this cd0
	sh $this rd0 bpf0
	sh $this ttyB0 ttyB1 tty00 tty01 ttyC0 ttyC1 pty0
	sh $this wsmouse0 wskbd0
	sh $this ttyCcfg
d230 2
a231 5
wscons)
	sh $this ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7
	sh $this wsmouse0 wsmouse1 wsmouse2 wsmouse3
	sh $this wskbd0 wskbd1 wskbd2 wskbd3
	sh $this ttyCcfg wsmux
d234 10
a243 7
wsmux|wskbd|wsmouse)
        rm -f wsmouse wskbd
        mknod wsmouse c 56 0
        mknod wskbd c 56 1
        chown root.wheel wsmouse wskbd
        chmod 600 wsmouse wskbd
        ;;
d245 2
a246 5
iop*)
	rm -f iop$unit
	mknod iop$unit c 54 $unit
	chown root.wheel iop$unit
	chmod 660 iop$unit
d249 4
a252 3
floppy)
	sh $this std wt0 fd0 wd0 wd1 sd0 sd1 tty00 tty01
	sh $this st0 cd0 ttyC0 random
d255 2
a256 21
usbs)
	sh $this usb usb0 usb1
	sh $this uhid0 uhid1 uhid2 uhid3
	sh $this ugen0 ugen1
	sh $this ulpt0 ulpt1
	sh $this utty0 utty1
	;;
std)
	rm -f console drum mem kmem null zero tty klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 10 0	; chmod 666 stdin
	mknod stdout		c 10 1	; chmod 666 stdout
	mknod stderr		c 10 2	; chmod 666 stderr
	mknod ksyms		c 39 0  ; chmod 640 ksyms ; chown root.kmem ksyms
d259 7
a265 5
usb*)
	rm -f usb$unit
	mknod usb$unit c 45 $unit
	chown root.wheel usb$unit
	chmod 660 usb$unit
d268 2
a269 5
uhid*)
	rm -f uhid$unit
	mknod uhid$unit c 46 $unit
	chown root.wheel uhid$unit
	chmod 660 uhid$unit
d272 2
a273 5
ulpt*)
	rm -f ulpt$unit
	mknod ulpt$unit c 47 $unit
	chown root.wheel ulpt$unit
	chmod 660 ulpt$unit
d276 2
a277 8
ugen*)
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
	do
		rm -f ugen$unit.$j
		mknod ugen$unit.$j c 48 $(( $unit * 16 + $j ))
		chown root.wheel ugen$unit.$j
		chmod 660 ugen$unit.$j
	done
d280 4
a283 5
utty*)
	rm -f utty$unit
	mknod utty$unit c 49 $unit
	chown root.wheel utty$unit
	chmod 660 utty$unit
d286 3
a288 8
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 10 $n; n=`add $n 1`; done)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
d291 2
a292 59
fd*)
	umask 2
	unit=${i##fd}
	typnam=${unit#?}
	unit=${unit%%[!0-9]}
	case $typnam in
	"")	typnum=0;;	# no type specified, assume A
	A)	typnam=; typnum=0;;
	B)	typnum=1;;
	C)	typnum=2;;
	D)	typnum=3;;
	E)	typnum=4;;
	F)	typnum=5;;
	G)	typnum=6;;
	H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $unit in
	0|1)	blk=4; chr=37;;
	*)	echo bad unit $unit for $i; exit 1;;
	esac
	nam=fd${unit}${typnam}
	rm -f ${nam}? r${nam}?
	basenum=$(( $unit * 128 + $typnum * 16 ))
	mknod ${nam}a	b $blk $(( $basenum + 0 ))
	mknod ${nam}b	b $blk $(( $basenum + 1 ))
	mknod ${nam}c	b $blk $(( $basenum + 2 ))
	#mknod ${nam}d	b $blk $(( $basenum + 3 ))
	#mknod ${nam}e	b $blk $(( $basenum + 4 ))
	#mknod ${nam}f	b $blk $(( $basenum + 5 ))
	#mknod ${nam}g	b $blk $(( $basenum + 6 ))
	#mknod ${nam}h	b $blk $(( $basenum + 7 ))
	#mknod ${nam}i	b $blk $(( $basenum + 8 ))
	#mknod ${nam}j	b $blk $(( $basenum + 9 ))
	#mknod ${nam}k	b $blk $(( $basenum + 10 ))
	#mknod ${nam}l	b $blk $(( $basenum + 11 ))
	#mknod ${nam}m	b $blk $(( $basenum + 12 ))
	#mknod ${nam}n	b $blk $(( $basenum + 13 ))
	#mknod ${nam}o	b $blk $(( $basenum + 14 ))
	#mknod ${nam}p	b $blk $(( $basenum + 15 ))
	mknod r${nam}a	c $chr $(( $basenum + 0 ))
	mknod r${nam}b	c $chr $(( $basenum + 1 ))
	mknod r${nam}c	c $chr $(( $basenum + 2 ))
	#mknod r${nam}d	c $chr $(( $basenum + 3 ))
	#mknod r${nam}e	c $chr $(( $basenum + 4 ))
	#mknod r${nam}f	c $chr $(( $basenum + 5 ))
	#mknod r${nam}g	c $chr $(( $basenum + 6 ))
	#mknod r${nam}h	c $chr $(( $basenum + 7 ))
	#mknod r${nam}i	c $chr $(( $basenum + 8 ))
	#mknod r${nam}j	c $chr $(( $basenum + 9 ))
	#mknod r${nam}k	c $chr $(( $basenum + 10 ))
	#mknod r${nam}l	c $chr $(( $basenum + 11 ))
	#mknod r${nam}m	c $chr $(( $basenum + 12 ))
	#mknod r${nam}n	c $chr $(( $basenum + 13 ))
	#mknod r${nam}o	c $chr $(( $basenum + 14 ))
	#mknod r${nam}p	c $chr $(( $basenum + 15 ))
	chown root.operator ${nam}[a-p] r${nam}[a-p]
	chmod 640 ${nam}[a-p] r${nam}[a-p]
	umask 77
d295 2
a296 45
sd*|wd*|ccd*|rd*|raid*)
	umask 2 ; unit=${i##*d}
	case $i in
	rd*)	name=rd;	blk=6; chr=28;;
	sd*)	name=sd;	blk=8; chr=8;;
	ccd*)	name=ccd;	blk=7; chr=27;;
	wd*)	name=wd;	blk=0; chr=36;;
	raid*)	name=raid;	blk=16; chr=43;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk      $(mult $unit 16)
	mknod ${name}${unit}b	b $blk `add $(mult $unit 16) 1`
	mknod ${name}${unit}c	b $blk `add $(mult $unit 16) 2`
	mknod ${name}${unit}d	b $blk `add $(mult $unit 16) 3`
	mknod ${name}${unit}e	b $blk `add $(mult $unit 16) 4`
	mknod ${name}${unit}f	b $blk `add $(mult $unit 16) 5`
	mknod ${name}${unit}g	b $blk `add $(mult $unit 16) 6`
	mknod ${name}${unit}h	b $blk `add $(mult $unit 16) 7`
	mknod ${name}${unit}i	b $blk `add $(mult $unit 16) 8`
	mknod ${name}${unit}j	b $blk `add $(mult $unit 16) 9`
	mknod ${name}${unit}k	b $blk `add $(mult $unit 16) 10`
	mknod ${name}${unit}l	b $blk `add $(mult $unit 16) 11`
	mknod ${name}${unit}m	b $blk `add $(mult $unit 16) 12`
	mknod ${name}${unit}n	b $blk `add $(mult $unit 16) 13`
	mknod ${name}${unit}o	b $blk `add $(mult $unit 16) 14`
	mknod ${name}${unit}p	b $blk `add $(mult $unit 16) 15`
	mknod r${name}${unit}a	c $chr `add $(mult $unit 16) 0`
	mknod r${name}${unit}b	c $chr `add $(mult $unit 16) 1`
	mknod r${name}${unit}c	c $chr `add $(mult $unit 16) 2`
	mknod r${name}${unit}d	c $chr `add $(mult $unit 16) 3`
	mknod r${name}${unit}e	c $chr `add $(mult $unit 16) 4`
	mknod r${name}${unit}f	c $chr `add $(mult $unit 16) 5`
	mknod r${name}${unit}g	c $chr `add $(mult $unit 16) 6`
	mknod r${name}${unit}h	c $chr `add $(mult $unit 16) 7`
	mknod r${name}${unit}i	c $chr `add $(mult $unit 16) 8`
	mknod r${name}${unit}j	c $chr `add $(mult $unit 16) 9`
	mknod r${name}${unit}k	c $chr `add $(mult $unit 16) 10`
	mknod r${name}${unit}l	c $chr `add $(mult $unit 16) 11`
	mknod r${name}${unit}m	c $chr `add $(mult $unit 16) 12`
	mknod r${name}${unit}n	c $chr `add $(mult $unit 16) 13`
	mknod r${name}${unit}o	c $chr `add $(mult $unit 16) 14`
	mknod r${name}${unit}p	c $chr `add $(mult $unit 16) 15`
	chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
	chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	umask 77
d299 5
a303 43
vnd*)
	umask 2
	for name in vnd svnd; do
		blk=9; chr=9;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `add $(mult $unit 16) $off 0`
		mknod ${name}${unit}b	b $blk `add $(mult $unit 16) $off 1`
		mknod ${name}${unit}c	b $blk `add $(mult $unit 16) $off 2`
		mknod ${name}${unit}d	b $blk `add $(mult $unit 16) $off 3`
		mknod ${name}${unit}e	b $blk `add $(mult $unit 16) $off 4`
		mknod ${name}${unit}f	b $blk `add $(mult $unit 16) $off 5`
		mknod ${name}${unit}g	b $blk `add $(mult $unit 16) $off 6`
		mknod ${name}${unit}h	b $blk `add $(mult $unit 16) $off 7`
		mknod ${name}${unit}i	b $blk `add $(mult $unit 16) $off 8`
		mknod ${name}${unit}j	b $blk `add $(mult $unit 16) $off 9`
		mknod ${name}${unit}k	b $blk `add $(mult $unit 16) $off 10`
		mknod ${name}${unit}l	b $blk `add $(mult $unit 16) $off 11`
		mknod ${name}${unit}m	b $blk `add $(mult $unit 16) $off 12`
		mknod ${name}${unit}n	b $blk `add $(mult $unit 16) $off 13`
		mknod ${name}${unit}o	b $blk `add $(mult $unit 16) $off 14`
		mknod ${name}${unit}p	b $blk `add $(mult $unit 16) $off 15`
		mknod r${name}${unit}a	c $chr `add $(mult $unit 16) $off 0`
		mknod r${name}${unit}b	c $chr `add $(mult $unit 16) $off 1`
		mknod r${name}${unit}c	c $chr `add $(mult $unit 16) $off 2`
		mknod r${name}${unit}d	c $chr `add $(mult $unit 16) $off 3`
		mknod r${name}${unit}e	c $chr `add $(mult $unit 16) $off 4`
		mknod r${name}${unit}f	c $chr `add $(mult $unit 16) $off 5`
		mknod r${name}${unit}g	c $chr `add $(mult $unit 16) $off 6`
		mknod r${name}${unit}h	c $chr `add $(mult $unit 16) $off 7`
		mknod r${name}${unit}i	c $chr `add $(mult $unit 16) $off 8`
		mknod r${name}${unit}j	c $chr `add $(mult $unit 16) $off 9`
		mknod r${name}${unit}k	c $chr `add $(mult $unit 16) $off 10`
		mknod r${name}${unit}l	c $chr `add $(mult $unit 16) $off 11`
		mknod r${name}${unit}m	c $chr `add $(mult $unit 16) $off 12`
		mknod r${name}${unit}n	c $chr `add $(mult $unit 16) $off 13`
		mknod r${name}${unit}o	c $chr `add $(mult $unit 16) $off 14`
		mknod r${name}${unit}p	c $chr `add $(mult $unit 16) $off 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
a304 1
	umask 77
d307 2
a308 13
cd*)
	umask 2
	case $i in
	cd*)	name=cd;	blk=3; chr=13;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `add $(mult $unit 16) 0` 
	mknod ${name}${unit}c	b $blk `add $(mult $unit 16) 2` 
	mknod r${name}${unit}a	c $chr `add $(mult $unit 16) 0` 
	mknod r${name}${unit}c	c $chr `add $(mult $unit 16) 2` 
	chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
	chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	umask 77
d311 2
a312 4
ttyCcfg)
	rm -f $i
	mknod $i c 25 255  
	chown root:wheel $i 
d315 3
a317 10
ttyC*)
	type=C
	unit=${i##ttyC}
	case $type in
	C)	major=25; minor=$unit ;;
	esac
        rm -f tty$type$unit
        mknod tty$type$unit c $major $minor
        chown root.wheel tty$type$unit
        ;;
d319 3
a321 13
ttyB*|tty0*|ttyc*)
		  unit=${i##tty?}
	case $i in
	ttyB*)	type=B; major=15; minor=`mult $unit 2`;;
	tty0*)	type=0; major=26; minor=$unit ;;
	ttyc*)	type=c; major=38; minor=$unit ;;
	esac
        rm -f tty$type$unit cua$type$unit
        mknod tty$type$unit c $major $minor
        mknod cua$type$unit c $major `add $minor 128`
        chown uucp.dialer tty$type$unit cua$type$unit
	chmod 660 tty$type$unit cua$type$unit
        ;;
d323 6
a328 36
pty*)
	class=${i##pty}
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f tty$nam pty$nam
			mknod tty$nam c 4 `add $offset $n`
			mknod pty$nam c 5 `add $offset $n`
			n=`add $n 1`
		done
		umask 77
		;;
	esac
d331 2
a332 22
st*)
	umask 2
	name=st; blk=2; chr=12
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
	r$name$unit nr$name$unit er$name$unit enr$name$unit
	mknod ${name}${unit}	b $blk `add $(mult $unit 16) 0`
	mknod n${name}${unit}	b $blk `add $(mult $unit 16) 1`
	mknod e${name}${unit}	b $blk `add $(mult $unit 16) 2`
	mknod en${name}${unit}	b $blk `add $(mult $unit 16) 3`
	mknod r${name}${unit}	c $chr `add $(mult $unit 16) 0`
	mknod nr${name}${unit}	c $chr `add $(mult $unit 16) 1`
	mknod er${name}${unit}	c $chr `add $(mult $unit 16) 2`
	mknod enr${name}${unit} c $chr `add $(mult $unit 16) 3`
	chown root.operator ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit}
	chmod 660 ${name}${unit} n${name}${unit} \
		e$name$unit en$name$unit \
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit}
	umask 77
d335 2
a336 8
ch*)
	umask 2
	name=ch; chr=14
	rm -f $name$unit
	mknod ${name}${unit}	c $chr $unit
	chown root.operator ${name}${unit}
	chmod 660 ${name}${unit}
	umask 77
d339 3
a341 5
bpf*)
	rm -f bpf$unit
	mknod bpf$unit c 11 $unit
	chmod 600 bpf$unit
	chown root.wheel bpf$unit
d344 6
a349 5
pf)
	rm -f pf
	mknod pf c 35 0
	chown root.wheel pf
	chmod 600 pf
d352 29
a380 5
tun*)
	rm -f tun$unit
	mknod tun$unit c 7 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d383 2
a384 5
lkm)
	rm -f lkm
	mknod lkm c 16 0
	chown root.kmem lkm
	chmod 640 lkm
d387 3
a389 17
audio*)
	major=24
	audio=audio$unit
	sound=sound$unit
	mixer=mixer$unit
	audioctl=audioctl$unit
	rm -f $sound $audio $mixer $audioctl
	mknod $sound    c $major $unit
	mknod $audio    c $major $(( $unit + 128 ))
	mknod $mixer    c $major $(( $unit + 16 ))
	mknod $audioctl c $major $(( $unit + 192 ))
	chown root.wheel $audio $sound $mixer $audioctl
	chmod 666 $audio $sound $mixer $audioctl
	[ -e audio ] || ln -s $audio audio
	[ -e mixer ] || ln -s $mixer mixer
	[ -e sound ] || ln -s $sound sound
	[ -e audioctl ] || ln -s $audioctl audioctl
d392 3
a394 4
mmclock)
	rm -f mmclock
	mknod mmclock c 28 0
	chmod 444 mmclock
d398 1
a398 5
	unit=${i#wskbd}
	wskbd=wskbd$unit
	rm -f $wskbd
	mknod $wskbd c 29 $unit
	chmod 600 $wskbd
d401 14
a414 6
wsmouse*)
	unit=${i#wsmouse}
	wsmouse=wsmouse$unit
	rm -f $wsmouse
	mknod $wsmouse c 30 $unit
	chmod 600 $wsmouse
d417 17
a433 4
lpt*|lpa*)
	case $i in
	lpt*) name=lpt; flags=0;;
	lpa*) name=lpa; flags=128;;
d435 8
a442 3
	rm -f $name$unit
	mknod $name$unit c 31 `add $unit $flags`
	chown root.wheel $name$unit
d445 2
a446 9
random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 34 0
	mknod srandom c 34 1
	mknod urandom c 34 2
	mknod prandom c 34 3
	mknod arandom c 34 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d449 3
a451 5
uk*)
	rm -f uk$unit
	mknod uk$unit c 33 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
d454 2
a455 14
ss*)
	rm -f ss$unit
	mknod ss$unit c 32 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
	;;
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d458 7
a464 10
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 53 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
d469 25
a493 2
	umask 0
	test -s MAKEDEV.local && sh $this.local
a498 1

d501 31
@


1.60
log
@create iop0, iop1
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.60 2001/07/05 02:51:37 mickey Exp $
d53 1
d170 2
d206 5
d280 61
@


1.59
log
@add an entry for ALTQ.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.58 2001/06/25 18:24:28 nate Exp $
d87 1
d168 1
a168 1
	sh $this usbs wscons ttyCcfg 
d195 7
@


1.58
log
@Since audio is obvoiusly working on alpha, enable the device by default
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.57 2001/06/25 03:19:42 kjell Exp $
d86 1
d166 1
a166 1
	sh $this local xfs0
d589 13
@


1.57
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.56 2001/06/24 23:35:56 kjell Exp $
d160 1
a160 1
	sh $this pf tun0 tun1 tun2 tun3
@


1.56
log
@Add the pf device for the shiny new packet filter
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.55 2001/06/22 21:17:35 brad Exp $
d486 1
a486 1
	mknod pf c 73 0
@


1.55
log
@minor nit.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.54 2001/06/22 15:20:11 brad Exp $
d160 1
a160 1
	sh $this tun0 tun1 tun2 tun3
d482 7
@


1.54
log
@make it so that audio device creation is consistent with other archs.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.53 2001/06/22 14:54:04 nate Exp $
d504 1
a504 1
	rm -f $audio $sound $mixer $audioctl
@


1.53
log
@Add /dev/audio to alpha
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.52 2001/05/30 02:11:11 deraadt Exp $
d78 1
a78 1
#	audio	audio device
a498 5
	[ "$unit" = "0" ] && n= || n=$unit
	audio=audio$n
	sound=sound$n
	mixer=mixer$n
	audioctl=audioctl$n
d500 4
d511 4
@


1.52
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.51 2001/05/14 07:56:36 deraadt Exp $
d78 1
d496 16
@


1.51
log
@clean rm -f uses
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.50 2001/03/08 02:37:15 ericj Exp $
a84 1
#	ipl	IP filter log
d161 1
a161 1
	sh $this mmclock lpa0 lpt0 random ipl
a537 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 35 0
	mknod ipnat c 35 1
	mknod ipstate c 35 2
	mknod ipauth c 35 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.50
log
@
create devices for usb devices and raid
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.49 2001/01/30 08:34:09 deraadt Exp $
d202 1
a202 1
	rm -f console drum mem kmem null zero io tty klog stdin stdout stderr ksyms
@


1.49
log
@move console ttys around.  serial becomes tty0?, console ttyC?
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.48 2000/09/13 22:12:39 ericj Exp $
d52 1
d66 7
d158 1
d166 1
a166 1
	sh $this wscons ttyCcfg 
d194 7
d217 38
d265 1
a265 1
sd*|wd*|ccd*|rd*)
d272 1
@


1.48
log
@more cleanups for wscons devices
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.47 2000/09/09 15:44:59 ericj Exp $
d55 2
a56 2
#	ttyC?	AlphaStation NS16550 ("com") serial ports
#	ttyE?	Workstation console ("wscons") tty emulators
d152 1
a152 1
	sh $this ttyB0 ttyB1 ttyC0 ttyC1 lkm
d157 1
a157 1
	sh $this wscons ttyEcfg 
d165 1
a165 1
	sh $this ttyB0 ttyB1 ttyC0 ttyC1 ttyE0 ttyE1 pty0
d167 1
a167 1
	sh $this ttyEcfg
d171 1
a171 1
	sh $this ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7
d174 1
a174 1
	sh $this ttyEcfg wsmux
d319 1
a319 1
ttyEcfg)
d325 3
a327 3
ttyE*)
		  type=E
		  unit=${i##ttyE}
d329 1
a329 1
	E)	major=25; minor=$unit ;;
d336 1
a336 1
ttyB*|ttyC*|ttyc*)
d340 1
a340 1
	ttyC*)	type=C; major=26; minor=$unit ;;
@


1.47
log
@add wscons devices
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.46 2000/03/22 07:34:27 niklas Exp $
d157 1
a157 1
	sh $this wscons
d167 1
d174 1
a174 1
	sh $this wsmux
d317 6
@


1.46
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.45 1999/09/27 22:09:25 deraadt Exp $
d56 1
a56 1
#	ttyE?	Workstation console (framebuffer & keyboard) tty emulators
d152 2
a153 2
	sh $this ttyB0 ttyB1 ttyC0 ttyC1 ttyE0 ttyE1 lkm
	sh $this mmclock kbd mouse lpa0 lpt0 random ipl
d157 1
d166 1
d169 15
d442 6
a447 4
kbd)
	rm -f kbd
	mknod kbd c 29 0
	chmod 666 kbd
d450 6
a455 4
mouse)
	rm -f mouse
	mknod mouse c 30 0
	chmod 666 mouse
@


1.45
log
@random on floppy
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.44 1999/08/20 17:00:33 downsj Exp $
d381 1
a381 1
	chmod 640 ${name}${unit} n${name}${unit} \
d394 1
a394 1
	chmod 640 ${name}${unit}
@


1.44
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.43 1999/07/30 18:49:35 deraadt Exp $
d160 1
a160 1
	sh $this std
@


1.43
log
@no more acd
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.42 1998/12/19 18:35:36 deraadt Exp $
d322 2
a323 1
        chown uucp.wheel tty$type$unit cua$type$unit
@


1.42
log
@make alpha bootfloppy fit again
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.41 1998/11/25 04:58:52 millert Exp $
a51 1
#	acd*	ISA ATAPI cdrom drives
d149 1
a149 1
	sh $this ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3 acd0 acd1
d162 1
a162 1
	sh $this cd0 acd0
d286 1
a286 1
cd*|acd*)
a289 1
	acd*)	name=acd;	blk=4; chr=37;;
@


1.41
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.40 1998/11/19 08:18:55 dugsong Exp $
d162 1
a162 1
	sh $this sd0 sd1 sd2 wd0 wd1 st0
@


1.40
log
@add support for more ptys
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.39 1998/09/25 11:11:58 todd Exp $
a333 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.39
log
@sync
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.37 1998/09/21 23:15:52 deraadt Exp $
d336 11
d350 1
a350 1
	0|1|2|3|4)
@


1.38
log
@o add xfs0
o rm expr
@
text
@d39 1
a39 1
#		Tries to make the 'standard' number of each type.
d44 1
a44 1
#	st*	SCSI tape
d51 2
a52 2
#	wd*	IDE disks
#	acd*	ATAPI cdrom drives
d68 2
a69 2
#	bpf*	packet filter
#	fd	file descriptors
d76 1
a76 1
#	uk*	unknown SCSI
@


1.37
log
@bpf on ramdisks
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.36 1998/09/15 10:23:21 pattonme Exp $
d36 1
d48 1
a48 1
#	cd*	SCSI CD-ROM
d50 1
a50 1
#	ccd*	concatenated disk driver
d52 1
a52 1
#	acd*	ATAPI CD-ROM
d54 1
a54 1
# Terminals:
d75 1
a75 1
#	*random	inkernel random number generator
d80 2
a81 1
PATH=/sbin:/usr/sbin:/bin:/usr/bin
d84 15
d102 1
a102 1
		[0-9]) echo -n $1 ;;
d111 27
d141 4
d148 10
a157 10
	sh MAKEDEV std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1
	sh MAKEDEV st0 st1 ch0 cd0 cd1 vnd0 vnd1 vnd2 vnd3
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3 acd0 acd1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV tun0 tun1 tun2 tun3
	sh MAKEDEV ttyB0 ttyB1 ttyC0 ttyC1 ttyE0 ttyE1 lkm
	sh MAKEDEV mmclock kbd mouse lpa0 lpt0 random ipl
	sh MAKEDEV uk0 uk1 ss0 ss1
	sh MAKEDEV ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
	sh MAKEDEV local
d161 5
a165 5
	sh MAKEDEV std
	sh MAKEDEV sd0 sd1 sd2 wd0 wd1 st0
	sh MAKEDEV cd0 acd0
	sh MAKEDEV rd0 bpf0
	sh MAKEDEV ttyB0 ttyB1 ttyC0 ttyC1 ttyE0 ttyE1 pty0
d188 1
a188 1
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 10 $n; n="$(( $n + 1 ))"; done)
d195 1
a195 1
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
d203 32
a234 32
	mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
	mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
	mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
	mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
	mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
	mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
	mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
	mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
	mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
	mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
	mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
	mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
	mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
	mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
	mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
	mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
	mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
d241 1
a241 1
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
d249 32
a280 32
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
d288 1
a288 1
	umask 2 ; unit=`expr $i : '.*cd\(.*\)'`
d294 4
a297 4
	mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
d304 2
a305 2
        type=`expr $i : 'tty\(.\).'`
        unit=`expr $i : 'tty.\(.\)'`
d315 5
a319 6
        type=`expr $i : 'tty\(.\).'`
        unit=`expr $i : 'tty.\(.\)'`
	case $type in
	B)	major=15; minor=`expr $unit \* 2` ;;
	C)	major=26; minor=$unit ;;
	c)	major=38; minor=$unit ;;
d323 1
a323 1
        mknod cua$type$unit c $major `expr $minor + 128`
d328 1
a328 1
	class=`expr $i : 'pty\(.*\)'`
d346 3
a348 3
			mknod tty$nam c 4 "$(( $offset + $n ))"
			mknod pty$nam c 5 "$(( $offset + $n ))"
			n="$(( $n + 1 ))"
d356 2
a357 4
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st;	blk=2; chr=12;;
	esac
d360 8
a367 8
	mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
	mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
	mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
	mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
	mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
	mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
	mknod enr${name}${unit} c $chr `expr $unit '*' 16 + 3`
d380 2
a381 4
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ch*) name=ch;	chr=14;;
	esac
a389 1
	unit=`expr $i : 'bpf\(.*\)'`
a396 1
	unit=`expr $i : 'tun\(.*\)'`
a428 1
	unit=`expr $i : '...\(.*\)'`
d434 1
a434 1
	mknod $name$unit c 31 `expr $unit + $flags`
a458 1
	unit=`expr $i : 'uk\(.*\)'`
a465 1
	unit=`expr $i : 'ss\(.*\)'`
d474 6
d483 1
a483 1
	test -s MAKEDEV.local && sh MAKEDEV.local
@


1.36
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.35 1998/08/24 05:49:48 millert Exp $
d115 2
a116 2
	sh MAKEDEV cd0 cd1 acd0 acd1
	sh MAKEDEV rd0
@


1.35
log
@remove ksyms in std entry like other std things
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.34 1998/08/24 05:29:48 millert Exp $
d410 1
a410 1
	rm -f ipl ipnat ipstate 
d414 2
a415 1
	chown root.wheel ipl ipnat ipstate 
@


1.34
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.33 1998/06/25 06:38:43 deraadt Exp $
d121 1
a121 1
	rm -f console drum mem kmem null zero io tty klog stdin stdout stderr
@


1.33
log
@smaller ramdisk MAKEDEV entry
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.32 1998/02/16 01:00:35 dgregor Exp $
d133 1
@


1.32
log
@Fix incorrect mknod's for ipl: iplnat -> ipnat and iplstate -> ipstate
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.31 1998/01/26 04:19:33 dgregor Exp $
d114 1
a114 1
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 wd0 wd1 wd2 wd3 st0 st1
@


1.31
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.30 1997/12/16 21:17:40 deraadt Exp $
d411 2
a412 2
	mknod iplnat c 35 1
	mknod iplstate c 35 2
@


1.30
log
@fix major number for fd/*; felix reported the i386 flaw
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.29 1997/12/08 21:27:34 mickey Exp $
d409 1
a409 1
	rm -f ipl
d411 3
a413 1
	chown root.wheel ipl
@


1.29
log
@fix chN (N > 0) problem
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.28 1997/09/16 06:00:49 deraadt Exp $
d139 1
a139 1
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 24 $n; n="$(( $n + 1 ))"; done)
@


1.28
log
@10 bpf devices
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.27 1997/09/07 20:01:15 deraadt Exp $
d339 1
a339 1
	mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
@


1.27
log
@ttyqf/ttyv0 thing is not defunct
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.26 1997/09/07 20:00:40 dgregor Exp $
d103 2
a104 1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2 tun3
@


1.26
log
@(Oops.. that last commit was supposed to be aborted.)
Use 'rm -f' instead of 'rm -rf'.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.25 1997/09/07 19:56:10 dgregor Exp $
a301 3
		if [ $class = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
@


1.25
log
@Fixed 'rm -f' on pty/tty nodes.  [tp]ty$n was being removed instead of [tp]ty$nam
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.24 1997/08/22 17:15:46 deraadt Exp $
d296 1
a296 1
			rm -rf tty$nam pty$nam
@


1.24
log
@uucp console, oh that is a hoot
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.23 1997/08/06 07:06:48 deraadt Exp $
d296 1
a296 1
			rm -rf tty$n pty$n
@


1.23
log
@fix cyclades mknod stuff
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.22 1997/08/04 23:43:03 dgregor Exp $
d261 1
a261 1
        chown uucp.wheel tty$type$unit
@


1.22
log
@Add cyclades devices
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.21 1997/07/06 18:13:34 niklas Exp $
d106 2
a107 1
	sh MAKEDEV uk0 uk1 ss0 ss1 cyclades
a132 3

cyclades)
	sh MAKEDEV ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7
@


1.21
log
@wd and acd support
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.20 1997/05/25 18:43:59 millert Exp $
d106 1
a106 1
	sh MAKEDEV uk0 uk1 ss0 ss1
d133 3
d266 1
a266 1
ttyB*|ttyC*)
d272 1
d298 1
a298 1
			rm -rf {tty,pty}$n
@


1.20
log
@Fix pty's (got changed to i386 values during awk removal).
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.19 1997/05/14 15:41:05 niklas Exp $
d50 2
d102 1
a102 1
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3
d112 2
a113 1
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 st0 st1 cd0 cd1
d143 1
a143 1
sd*|ccd*|rd*)
d149 1
d236 1
a236 1
cd*)
d240 1
@


1.19
log
@Make svnd nodes too, please test this on your port
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.18 1997/05/13 05:34:47 millert Exp $
d290 2
a291 2
			mknod tty$nam c 5 "$(( $offset + $n ))"
			mknod pty$nam c 6 "$(( $offset + $n ))"
@


1.18
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.17 1997/05/11 02:18:40 deraadt Exp $
d140 1
a140 1
sd*|vnd*|ccd*|rd*)
a144 1
	vnd*)	name=vnd;	blk=9; chr=9;;
d182 47
@


1.17
log
@add hex() and kill awk
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.16 1997/05/10 23:01:47 millert Exp $
d384 1
a384 1
	sh MAKEDEV.local
@


1.16
log
@Don't use awk (awk-less bits taken from i386 MAKEDEV)
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.15 1997/05/07 12:52:22 niklas Exp $
d79 14
@


1.15
log
@Ramdisk stuff
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.14 1997/05/06 19:49:56 niklas Exp $
d119 2
a120 3
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 10 %d;", i, i)}'`)
d225 9
a233 5
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 4 %d;" \
				    "rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
@


1.14
log
@Add ipl case
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.13 1997/04/07 06:19:48 millert Exp $
d94 7
d127 1
a127 1
sd*|vnd*|ccd*)
d130 1
@


1.13
log
@16 partitions
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.12 1996/12/14 18:23:49 millert Exp $
d75 1
d89 1
a89 1
	sh MAKEDEV mmclock kbd mouse lpa0 lpt0 random
d330 6
@


1.12
log
@/dev/fd should be owned by root.wheel
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.11 1996/11/11 19:43:25 kstailey Exp $
d119 1
a119 1
cd*|sd*|vnd*|ccd*)
a121 1
	cd*)	name=cd;	blk=3; chr=13;;
d127 49
a175 18
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
	mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
	mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
	mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
	mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
	mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
	mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
	chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.11
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.10 1996/09/18 22:03:37 deraadt Exp $
d114 1
a114 1
	chown -R bin.bin fd
@


1.10
log
@do not use chgrp
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/08/29 13:22:21 deraadt Exp $
d74 1
d89 1
d292 5
a296 5
	mknod  random c 33 0
	mknod srandom c 33 1
	mknod urandom c 33 2
	mknod prandom c 33 3
	mknod arandom c 33 4
d304 1
a304 1
	mknod uk$unit c 32 $unit
d307 11
@


1.9
log
@support cua devices on the com.c driver
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.8 1996/08/28 08:55:18 deraadt Exp $
d94 3
a96 3
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
d142 1
a142 1
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
d213 1
a213 1
	chgrp operator ${name}${unit} n${name}${unit} \
d231 1
a231 1
	chgrp operator ${name}${unit}
@


1.8
log
@fix all random device node entry stuff
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.7 1996/07/23 06:15:13 etheisen Exp $
d147 1
a147 1
ttyB*|ttyC*|ttyE*)
a150 2
	B)	major=15; minor=`expr $unit \* 2` ;;
	C)	major=26; minor=$unit ;;
d156 13
@


1.7
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.6 1996/07/15 14:59:05 mickey Exp $
d72 1
a72 1
#	*rnd	inkernel random number generator
d87 1
a87 1
	sh MAKEDEV mmclock kbd mouse lpa0 lpt0 rnd
d277 9
a285 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 33 0
	mknod srnd c 33 1
	mknod urnd c 33 2
	mknod prnd c 33 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.6
log
@ad rnd devices.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.5 1996/06/23 10:07:24 deraadt Exp $
d176 2
a177 2
				printf("rm -f tty%s%x; mknod tty%s%x c 4 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 5 %d; ", \
@


1.5
log
@sync to 0622
@
text
@d2 1
a2 1
#	$OpenBSD$
d72 2
d87 1
a87 1
	sh MAKEDEV mmclock kbd mouse lpa0 lpt0
d275 18
@


1.4
log
@From NetBSD: merge of 960317
@
text
@d3 1
a3 1
#	$NetBSD: MAKEDEV,v 1.8 1996/03/11 19:21:37 cgd Exp $
d115 1
a115 1
sd*|vnd*|ccd*)
d118 4
a121 3
	sd*) name=sd;	blk=8; chr=8;;
	vnd*) name=vnd;	blk=9; chr=9;;
	ccd*) name=ccd; blk=7; chr=27;;
a219 15
	umask 77
	;;

cd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd;	blk=3; chr=13;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 3`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 3`
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.3
log
@from netbsd; add a way to build kbd and mouse devices
@
text
@d2 2
a3 1
#	$NetBSD: MAKEDEV,v 1.7 1996/01/05 17:12:39 cgd Exp $
d59 4
d85 2
a86 1
	sh MAKEDEV mmclock kbd mouse local
d276 11
@


1.2
log
@from netbsd; add mmclock node
@
text
@d2 1
a2 1
#	$NetBSD: MAKEDEV,v 1.6 1995/12/20 10:27:34 cgd Exp $
d65 2
d80 1
a80 1
	sh MAKEDEV mmclock local
d258 12
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#	$NetBSD: MAKEDEV,v 1.5 1995/08/17 18:02:27 thorpej Exp $
d64 1
d77 2
a78 1
	sh MAKEDEV ttyB0 ttyB1 ttyC0 ttyC1 ttyE0 ttyE1 lkm local
d250 6
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
