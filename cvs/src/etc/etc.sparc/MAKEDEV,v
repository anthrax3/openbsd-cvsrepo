head	1.195;
access;
symbols
	OPENBSD_6_0:1.195.0.4
	OPENBSD_6_0_BASE:1.195
	OPENBSD_5_9:1.192.0.2
	OPENBSD_5_9_BASE:1.192
	OPENBSD_5_8:1.189.0.4
	OPENBSD_5_8_BASE:1.189
	OPENBSD_5_7:1.187.0.2
	OPENBSD_5_7_BASE:1.187
	OPENBSD_5_6:1.186.0.4
	OPENBSD_5_6_BASE:1.186
	OPENBSD_5_5:1.185.0.4
	OPENBSD_5_5_BASE:1.185
	OPENBSD_5_4:1.182.0.2
	OPENBSD_5_4_BASE:1.182
	OPENBSD_5_3:1.177.0.2
	OPENBSD_5_3_BASE:1.177
	OPENBSD_5_2:1.174.0.2
	OPENBSD_5_2_BASE:1.174
	OPENBSD_5_1_BASE:1.173
	OPENBSD_5_1:1.173.0.2
	OPENBSD_5_0:1.171.0.2
	OPENBSD_5_0_BASE:1.171
	OPENBSD_4_9:1.169.0.2
	OPENBSD_4_9_BASE:1.169
	OPENBSD_4_8:1.166.0.2
	OPENBSD_4_8_BASE:1.166
	OPENBSD_4_7:1.160.0.2
	OPENBSD_4_7_BASE:1.160
	OPENBSD_4_6:1.158.0.4
	OPENBSD_4_6_BASE:1.158
	OPENBSD_4_5:1.156.0.2
	OPENBSD_4_5_BASE:1.156
	OPENBSD_4_4:1.153.0.2
	OPENBSD_4_4_BASE:1.153
	OPENBSD_4_3:1.151.0.4
	OPENBSD_4_3_BASE:1.151
	OPENBSD_4_2:1.151.0.2
	OPENBSD_4_2_BASE:1.151
	OPENBSD_4_1:1.147.0.2
	OPENBSD_4_1_BASE:1.147
	OPENBSD_4_0:1.144.0.2
	OPENBSD_4_0_BASE:1.144
	OPENBSD_3_9:1.143.0.2
	OPENBSD_3_9_BASE:1.143
	OPENBSD_3_8:1.138.0.2
	OPENBSD_3_8_BASE:1.138
	OPENBSD_3_7:1.134.0.2
	OPENBSD_3_7_BASE:1.134
	OPENBSD_3_6:1.128.0.2
	OPENBSD_3_6_BASE:1.128
	OPENBSD_3_5:1.122.0.2
	OPENBSD_3_5_BASE:1.122
	OPENBSD_3_4:1.109.0.2
	OPENBSD_3_4_BASE:1.109
	OPENBSD_3_3:1.106.0.2
	OPENBSD_3_3_BASE:1.106
	OPENBSD_3_2:1.100.0.2
	OPENBSD_3_2_BASE:1.100
	OPENBSD_3_1:1.94.0.2
	OPENBSD_3_1_BASE:1.94
	OPENBSD_3_0:1.70.0.2
	OPENBSD_3_0_BASE:1.70
	OPENBSD_2_9:1.64.0.2
	OPENBSD_2_9_BASE:1.64
	OPENBSD_2_8:1.63.0.4
	OPENBSD_2_8_BASE:1.63
	OPENBSD_2_7:1.63.0.2
	OPENBSD_2_7_BASE:1.63
	OPENBSD_2_6:1.60.0.2
	OPENBSD_2_6_BASE:1.60
	OPENBSD_2_5:1.56.0.2
	OPENBSD_2_5_BASE:1.56
	OPENBSD_2_4:1.51.0.2
	OPENBSD_2_4_BASE:1.51
	OPENBSD_2_3:1.40.0.2
	OPENBSD_2_3_BASE:1.40
	OPENBSD_2_2:1.33.0.2
	OPENBSD_2_2_BASE:1.33
	OPENBSD_2_1:1.28.0.2
	OPENBSD_2_1_BASE:1.28
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.195
date	2016.04.28.18.17.31;	author natano;	state Exp;
branches;
next	1.194;
commitid	yJ7nITWQGOm5qxNW;

1.194
date	2016.04.25.20.38.35;	author tedu;	state Exp;
branches;
next	1.193;
commitid	0kiqbjPHHvQxOXM9;

1.193
date	2016.03.12.18.02.18;	author espie;	state Exp;
branches;
next	1.192;
commitid	OOHlYIifEE4gewlK;

1.192
date	2015.11.10.21.50.02;	author sthen;	state Exp;
branches;
next	1.191;
commitid	cbpQoyIQoLnKxXlo;

1.191
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.190;
commitid	xjeR06qiavDtFv9k;

1.190
date	2015.10.23.15.14.47;	author claudio;	state Exp;
branches;
next	1.189;
commitid	D8oDiiCrSjVktjLG;

1.189
date	2015.03.11.18.44.13;	author deraadt;	state Exp;
branches;
next	1.188;
commitid	HFmUOqLhHlo6kb35;

1.188
date	2015.03.11.18.16.18;	author deraadt;	state Exp;
branches;
next	1.187;
commitid	CBza9FvwUk9bFvnY;

1.187
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.186;
commitid	M66ALjcyb37tQVMc;

1.186
date	2014.07.11.22.04.52;	author tedu;	state Exp;
branches;
next	1.185;
commitid	xQhhmJP574n3YeP9;

1.185
date	2014.01.05.01.27.59;	author deraadt;	state Exp;
branches;
next	1.184;

1.184
date	2013.11.21.11.06.09;	author kettenis;	state Exp;
branches;
next	1.183;

1.183
date	2013.11.05.16.06.29;	author deraadt;	state Exp;
branches;
next	1.182;

1.182
date	2013.07.06.17.34.48;	author naddy;	state Exp;
branches;
next	1.181;

1.181
date	2013.07.06.16.15.28;	author naddy;	state Exp;
branches;
next	1.180;

1.180
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.179;

1.179
date	2013.06.15.23.21.01;	author halex;	state Exp;
branches;
next	1.178;

1.178
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.177;

1.177
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.176;

1.176
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.175;

1.175
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.174;

1.174
date	2012.04.06.15.32.57;	author jsing;	state Exp;
branches;
next	1.173;

1.173
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.172;

1.172
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.171;

1.171
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.170;

1.170
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.169;

1.169
date	2010.11.19.20.56.07;	author miod;	state Exp;
branches;
next	1.168;

1.168
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.167;

1.167
date	2010.09.04.12.18.42;	author miod;	state Exp;
branches;
next	1.166;

1.166
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.165;

1.165
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.164;

1.164
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.163;

1.163
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.162;

1.162
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.161;

1.161
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.160;

1.160
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.159;

1.159
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.158;

1.158
date	2009.06.03.14.55.47;	author jj;	state Exp;
branches;
next	1.157;

1.157
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.156;

1.156
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.155;

1.155
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.154;

1.154
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.153;

1.153
date	2008.06.13.21.09.11;	author todd;	state Exp;
branches;
next	1.152;

1.152
date	2008.06.12.18.55.05;	author todd;	state Exp;
branches;
next	1.151;

1.151
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.150;

1.150
date	2007.05.28.22.29.57;	author todd;	state Exp;
branches;
next	1.149;

1.149
date	2007.05.27.02.00.20;	author todd;	state Exp;
branches;
next	1.148;

1.148
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.147;

1.147
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.146;

1.146
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.145;

1.145
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.144;

1.144
date	2006.08.28.21.23.34;	author tsi;	state Exp;
branches;
next	1.143;

1.143
date	2005.12.27.19.03.10;	author miod;	state Exp;
branches;
next	1.142;

1.142
date	2005.10.06.06.44.00;	author otto;	state Exp;
branches;
next	1.141;

1.141
date	2005.10.04.18.34.30;	author otto;	state Exp;
branches;
next	1.140;

1.140
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.139;

1.139
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.138;

1.138
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.137;

1.137
date	2005.07.17.12.23.14;	author miod;	state Exp;
branches;
next	1.136;

1.136
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.135;

1.135
date	2005.03.29.16.27.39;	author miod;	state Exp;
branches;
next	1.134;

1.134
date	2005.03.01.18.22.54;	author miod;	state Exp;
branches;
next	1.133;

1.133
date	2005.03.01.13.37.10;	author otto;	state Exp;
branches;
next	1.132;

1.132
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.131;

1.131
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.130;

1.130
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.129;

1.129
date	2005.01.10.07.58.01;	author dlg;	state Exp;
branches;
next	1.128;

1.128
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.127;

1.127
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.126;

1.126
date	2004.05.30.08.24.12;	author grange;	state Exp;
branches;
next	1.125;

1.125
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.124;

1.124
date	2004.04.11.18.15.23;	author millert;	state Exp;
branches;
next	1.123;

1.123
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.122;

1.122
date	2004.03.12.04.54.33;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.120;

1.120
date	2004.02.16.19.05.06;	author miod;	state Exp;
branches;
next	1.119;

1.119
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.118;

1.118
date	2004.02.13.23.35.04;	author miod;	state Exp;
branches;
next	1.117;

1.117
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.116;

1.116
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.115;

1.115
date	2004.02.05.22.23.30;	author todd;	state Exp;
branches;
next	1.114;

1.114
date	2004.01.12.22.33.10;	author todd;	state Exp;
branches;
next	1.113;

1.113
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.112;

1.112
date	2003.10.15.02.01.25;	author todd;	state Exp;
branches;
next	1.111;

1.111
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.110;

1.110
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.109;

1.109
date	2003.06.18.18.11.08;	author todd;	state Exp;
branches;
next	1.108;

1.108
date	2003.05.21.18.53.00;	author jason;	state Exp;
branches;
next	1.107;

1.107
date	2003.04.13.22.56.24;	author miod;	state Exp;
branches;
next	1.106;

1.106
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.105;

1.105
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.104;

1.104
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.103;

1.103
date	2002.12.05.04.33.23;	author kjc;	state Exp;
branches;
next	1.102;

1.102
date	2002.12.05.03.00.27;	author kjc;	state Exp;
branches;
next	1.101;

1.101
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.100;

1.100
date	2002.08.29.23.43.41;	author todd;	state Exp;
branches;
next	1.99;

1.99
date	2002.08.12.10.46.00;	author miod;	state Exp;
branches;
next	1.98;

1.98
date	2002.07.31.16.48.53;	author jason;	state Exp;
branches;
next	1.97;

1.97
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.96;

1.96
date	2002.06.09.05.58.39;	author todd;	state Exp;
branches;
next	1.95;

1.95
date	2002.05.16.21.12.22;	author miod;	state Exp;
branches;
next	1.94;

1.94
date	2002.04.14.23.21.05;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2002.04.10.02.31.23;	author deraadt;	state Exp;
branches;
next	1.92;

1.92
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.91;

1.91
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.90;

1.90
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.89;

1.89
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.88;

1.88
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.87;

1.87
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.86;

1.86
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.85;

1.85
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.84;

1.84
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.83;

1.83
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.82;

1.82
date	2002.02.14.04.43.09;	author todd;	state Exp;
branches;
next	1.81;

1.81
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.80;

1.80
date	2002.02.10.21.53.03;	author deraadt;	state Exp;
branches;
next	1.79;

1.79
date	2002.02.09.17.01.41;	author deraadt;	state Exp;
branches;
next	1.78;

1.78
date	2002.02.08.20.54.35;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	2002.01.23.08.23.19;	author todd;	state Exp;
branches;
next	1.76;

1.76
date	2002.01.23.07.54.42;	author todd;	state Exp;
branches;
next	1.75;

1.75
date	2002.01.23.06.21.20;	author todd;	state Exp;
branches;
next	1.74;

1.74
date	2002.01.12.21.26.14;	author jason;	state Exp;
branches;
next	1.73;

1.73
date	2002.01.12.21.15.28;	author jason;	state Exp;
branches;
next	1.72;

1.72
date	2002.01.12.21.02.47;	author jason;	state Exp;
branches;
next	1.71;

1.71
date	2002.01.08.06.32.16;	author todd;	state Exp;
branches;
next	1.70;

1.70
date	2001.09.06.19.45.34;	author todd;	state Exp;
branches;
next	1.69;

1.69
date	2001.06.28.02.58.56;	author kjc;	state Exp;
branches;
next	1.68;

1.68
date	2001.06.25.03.20.17;	author kjell;	state Exp;
branches;
next	1.67;

1.67
date	2001.06.24.23.36.09;	author kjell;	state Exp;
branches;
next	1.66;

1.66
date	2001.05.30.02.11.25;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2001.05.14.07.51.41;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2001.04.10.03.03.53;	author brad;	state Exp;
branches;
next	1.63;

1.63
date	2000.05.06.20.30.58;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2000.03.22.07.34.30;	author niklas;	state Exp;
branches;
next	1.61;

1.61
date	2000.02.21.08.22.08;	author mjacob;	state Exp;
branches;
next	1.60;

1.60
date	99.09.04.03.28.04;	author jason;	state Exp;
branches;
next	1.59;

1.59
date	99.08.20.17.00.37;	author downsj;	state Exp;
branches;
next	1.58;

1.58
date	99.07.18.17.07.48;	author deraadt;	state Exp;
branches;
next	1.57;

1.57
date	99.05.26.21.56.13;	author jason;	state Exp;
branches;
next	1.56;

1.56
date	99.02.01.00.35.53;	author jason;	state Exp;
branches;
next	1.55;

1.55
date	99.01.04.03.47.35;	author jason;	state Exp;
branches;
next	1.54;

1.54
date	98.12.29.07.59.25;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	98.11.25.04.58.55;	author millert;	state Exp;
branches;
next	1.52;

1.52
date	98.11.19.08.18.58;	author dugsong;	state Exp;
branches;
next	1.51;

1.51
date	98.10.16.16.50.16;	author marc;	state Exp;
branches;
next	1.50;

1.50
date	98.09.28.06.16.30;	author todd;	state Exp;
branches;
next	1.49;

1.49
date	98.09.25.11.11.59;	author todd;	state Exp;
branches;
next	1.48;

1.48
date	98.09.21.23.15.53;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	98.09.15.10.23.23;	author pattonme;	state Exp;
branches;
next	1.46;

1.46
date	98.08.26.20.51.03;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	98.08.24.05.30.03;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	98.07.21.22.43.03;	author marc;	state Exp;
branches;
next	1.43;

1.43
date	98.05.20.23.37.25;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	98.05.05.21.52.06;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	98.04.30.06.12.51;	author jason;	state Exp;
branches;
next	1.40;

1.40
date	98.03.24.19.32.48;	author marc;	state Exp;
branches;
next	1.39;

1.39
date	98.03.02.14.32.26;	author jason;	state Exp;
branches;
next	1.38;

1.38
date	98.03.02.14.20.32;	author jason;	state Exp;
branches;
next	1.37;

1.37
date	98.03.02.05.12.20;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	98.02.23.05.29.17;	author jason;	state Exp;
branches;
next	1.35;

1.35
date	98.01.26.04.19.49;	author dgregor;	state Exp;
branches;
next	1.34;

1.34
date	97.12.08.21.27.43;	author mickey;	state Exp;
branches;
next	1.33;

1.33
date	97.09.16.03.03.03;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	97.09.07.20.29.15;	author dgregor;	state Exp;
branches;
next	1.31;

1.31
date	97.08.24.22.44.08;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	97.08.08.09.43.02;	author downsj;	state Exp;
branches;
next	1.29;

1.29
date	97.06.06.09.53.52;	author grr;	state Exp;
branches;
next	1.28;

1.28
date	97.05.14.15.41.21;	author niklas;	state Exp;
branches;
next	1.27;

1.27
date	97.05.14.00.11.07;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	97.05.13.05.34.58;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	97.05.06.19.42.41;	author niklas;	state Exp;
branches;
next	1.24;

1.24
date	97.05.06.19.11.38;	author kstailey;	state Exp;
branches;
next	1.23;

1.23
date	97.05.05.22.17.45;	author grr;	state Exp;
branches;
next	1.22;

1.22
date	97.04.30.08.17.56;	author grr;	state Exp;
branches;
next	1.21;

1.21
date	97.04.29.17.26.28;	author niklas;	state Exp;
branches;
next	1.20;

1.20
date	97.04.22.19.06.06;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	97.04.22.07.43.50;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	97.04.22.07.05.12;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	97.04.22.06.34.33;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	97.04.22.05.28.56;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	97.04.13.20.08.19;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.03.28.20.10.35;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	96.12.14.18.24.02;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	96.12.06.10.49.47;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.11.11.23.30.25;	author kstailey;	state Exp;
branches;
next	1.10;

1.10
date	96.11.06.01.34.02;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.09.18.22.03.47;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.09.12.05.07.52;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	96.08.28.08.55.28;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.07.23.06.33.00;	author etheisen;	state Exp;
branches;
next	1.5;

1.5
date	96.07.23.06.15.19;	author etheisen;	state Exp;
branches;
next	1.4;

1.4
date	96.07.15.14.59.19;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.01.07.07.41.26;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	95.10.27.23.58.31;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.195
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.57 2016/04/25 20:38:11 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	presto*	Prestoserve NVRAM memory
#	sd*	SCSI disks, including flopticals
#	rd*	"rd" pseudo-disks
#	vnd*	"file" pseudo-disk devices
#	xd*	Xylogic 753/7053 disks
#	xy*	Xylogic 450/451 disks
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	cua[a-z]*	Zilog 8530 serial ports
#	magma*	Magma multiport cards
#	spif*	"spif" multiport cards
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	tty[a-z]*	Zilog 8530 serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Printers:
#	bpp*	Parallel port
#	bpp[jkl]	"spif" parallel port
#	bppmag[mno]	Magma parallel port
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Special purpose devices:
#	apm	Power management device
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	hotplug	devices hot plugging
#	openprom	PROM settings
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	uk*	Unknown SCSI devices
#	vscsi*	Virtual SCSI controller
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std bpf bio diskmap random
	R fd0 sd0 sd1 sd2 rd0 cd0
	;;

std)
	M console	c 0 0 600
	M tty		c 2 0
	M mem		c 3 0 640 kmem
	M kmem		c 3 1 640 kmem
	M null		c 3 2
	M zero		c 3 12
	M stdin		c 24 0
	M stdout	c 24 1
	M stderr	c 24 2
	M ksyms		c 122 0 640 kmem
	M klog		c 16 0 600
	M eeprom	c 3 11	600
	M openprom	c 70 0	600
	;;

vscsi*)
	M vscsi$U c 128 $U 600
	;;

uk*)
	M uk$U c 120 $U 640 operator
	;;

tap*)
	M tap$U c 132 $U 600
	;;

tun*)
	M tun$U c 111 $U 600
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 119 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 130 $U 600
	;;

pf*)
	M pf c 59 0 600
	;;

openprom)
	M openprom c 70 0  
	;;

hotplug)
	M hotplug c 131 $U 400
	;;

fuse)
	M fuse$U c 82 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 129 0 640 operator
	;;

bpf)
	M bpf c 105 0 600
	M bpf0 c 105 0 600
	;;

bio)
	M bio c 124 0 600
	;;

audio*)
	M sound$U	c 69 $U
	M mixer$U	c 69 $(($U+16))
	M audio$U	c 69 $(($U+128))
	M audioctl$U	c 69 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

apm*)
	M apm	c 30 0 644
	M apmctl	c 30 8 644
	;;

wsmouse[0-9]*)
	M wsmouse$U c 80 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 81 0 600
	M wskbd c 81 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 79 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyIcfg ttyI0 ttyI1 ttyI2 ttyI3 ttyI4 ttyI5
	R ttyI6 ttyI7 ttyI8 ttyI9 ttyIa ttyIb ttyHcfg ttyH0 ttyH1
	R ttyH2 ttyH3 ttyH4 ttyH5 ttyH6 ttyH7 ttyH8 ttyH9 ttyHa ttyHb
	R ttyGcfg ttyG0 ttyG1 ttyG2 ttyG3 ttyG4 ttyG5 ttyG6 ttyG7
	R ttyG8 ttyG9 ttyGa ttyGb ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3
	R ttyF4 ttyF5 ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg
	R ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9
	R ttyEa ttyEb ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5
	R ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1
	R ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 78 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 78 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

bpp*)
	M bpp$U c 104 $U 600
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 20 $(($off+$n))
		M pty$nam c 21 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 125 0 666
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	e) n=4;;
	f) n=5;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 12 $n 660 dialer uucp
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 36 $o 660 dialer uucp
	M cua$U c 36 $(($o+128)) 660 dialer uucp
	;;

spif*)
	case $U in
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 8 ]
	do
		name=${nam}`hex $n`
		M tty$name c 102 $(($offset+$n)) 660 dialer uucp
		n=$(($n+1))
	done
	M bpp${nam}0 c 103 $(($offset+0)) 600
	;;

magma*)
	case $U in
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 16 ]
	do
		name=${nam}`hex $n`
		M tty$name c 100 $(($offset+$n)) 660 dialer uucp
		n=$(($n+1))
	done
	M bpp${nam}0 c 101 $(($offset+0)) 600
	M bpp${nam}1 c 101 $(($offset+1)) 600
	;;

cua[a-z])
	u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	e) n=4;;
	f) n=5;;
	*) echo unknown cua device $i ;;
	esac
	M cua$u c 12 $(($n+128)) 660 dialer uucp
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 11 $n 660 operator
		M ${pre}rst$U	c 18 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 19 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 8 110 $U 0
	;;

rd*)
	dodisk2 rd $U 17 106 $U 0
	;;

fd*)
	typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=16; chr=54;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=$(($(($U*128))+$(($typnum*16))))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk $(($n+1)) 640 operator
	M ${nam}c	b $blk $(($n+2)) 640 operator
	M ${nam}i	b $blk $(($n+8)) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr $(($n+1)) 640 operator
	M r${nam}c	c $chr $(($n+2)) 640 operator
	M r${nam}i	c $chr $(($n+8)) 640 operator
	;;

cd*)
	dodisk2 cd $U 18 58 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R presto0 bpp0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0
	R cd1 rd0 xy0 xy1 xy2 xy3 tap0 tap1 tap2 tap3 tun0 tun1 tun2
	R tun3 pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B
	R fd0C fd0D fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 bio cuaa
	R cuab cuac cuad ttya ttyb ttyc ttyd audio0 audio1 audio2 bpf
	R fuse pppx hotplug ptm local wscons uk0 random tty00 tty01
	R tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b
	R apm pf xd0 xd1 xd2 xd3 std st0 st1 fd
	;;

presto*|xd*|xy*|sd*)
	case $i in
	presto*) dodisk presto $U 26 25 $U 0;;
	xd*) dodisk xd $U 10 42 $U 0;;
	xy*) dodisk xy $U 3 9 $U 0;;
	sd*) dodisk sd $U 7 17 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
        cat
else
	sh
fi
@


1.194
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d69 1
a69 1
#	bpf*	Berkeley Packet Filter
d209 1
a209 1
	R std bpf0 bio diskmap random
d284 3
a286 2
bpf*)
	M bpf$U c 105 $U 600
d520 6
a525 7
	R tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D
	R fd0E fd0F fd0G fd0H diskmap vscsi0 ch0 bio cuaa cuab cuac
	R cuad ttya ttyb ttyc ttyd audio0 audio1 audio2 fuse pppx
	R hotplug ptm local wscons uk0 random tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b apm pf xd0
	R xd1 xd2 xd3 std st0 st1 fd
@


1.193
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.56 2015/10/23 15:14:12 claudio Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a77 1
#	systrace*	System call tracing device
a244 4
systrace)
	M systrace c 50 0 644
	;;

d524 2
a525 2
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b apm pf
	R systrace xd0 xd1 xd2 xd3 std st0 st1 fd
@


1.192
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d174 2
a175 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.191
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
@


1.190
log
@Sync (after tap addition)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
@


1.189
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.54 2015/03/11 18:13:47 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d80 1
d237 4
d522 8
a529 8
	R cd1 rd0 xy0 xy1 xy2 xy3 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2
	R bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R diskmap vscsi0 ch0 bio cuaa cuab cuac cuad ttya ttyb ttyc
	R ttyd audio0 audio1 audio2 fuse pppx hotplug ptm local wscons
	R uk0 random tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07
	R tty08 tty09 tty0a tty0b apm pf systrace xd0 xd1 xd2 xd3 std
	R st0 st1 fd
@


1.188
log
@sync
@
text
@d225 1
a225 1
	M openprom	c 70 0	640 kmem
@


1.187
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.52 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.76 2014/08/20 11:23:40 mikeb Exp 
d224 1
a224 1
	M eeprom	c 3 11	640 kmem
@


1.186
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
a73 1
#	lkm	Loadable kernel modules interface
a264 4
lkm)
	M lkm c 112 0 640 _lkm
	;;

d522 3
a524 3
	R uk0 random lkm tty00 tty01 tty02 tty03 tty04 tty05 tty06
	R tty07 tty08 tty09 tty0a tty0b apm pf systrace xd0 xd1 xd2
	R xd3 std st0 st1 fd
@


1.185
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
@


1.184
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.51 2013/06/03 16:06:42 tedu Exp 
d209 1
a209 1
	R std bpf0 bio diskmap
@


1.183
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.182
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
@


1.181
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d528 2
a529 1
	R tty07 apm pf systrace xd0 xd1 xd2 xd3 std st0 st1 fd
@


1.180
log
@regen
@
text
@d527 2
a528 2
	R uk0 random lkm tty00 tty01 tty02 tty03 apm pf systrace xd0
	R xd1 xd2 xd3 std st0 st1 fd
@


1.179
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d72 1
a72 1
#	fuse*	Userland Filesystem
d274 1
a274 1
fuse*)
d526 3
a528 3
	R ttyd audio0 audio1 audio2 fuse0 fuse1 fuse2 fuse3 pppx
	R hotplug ptm local wscons uk0 random lkm tty00 tty01 tty02
	R tty03 apm pf systrace xd0 xd1 xd2 xd3 std st0 st1 fd
@


1.178
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d72 1
a72 1
#	fuse	Userland Filesystem
d274 1
a274 1
fuse)
d526 3
a528 3
	R ttyd audio0 audio1 audio2 fuse pppx hotplug ptm local wscons
	R uk0 random lkm tty00 tty01 tty02 tty03 apm pf systrace xd0
	R xd1 xd2 xd3 std st0 st1 fd
@


1.177
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.50 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d72 1
d274 4
d526 3
a528 3
	R ttyd audio0 audio1 audio2 pppx hotplug ptm local wscons uk0
	R random lkm tty00 tty01 tty02 tty03 apm pf systrace xd0 xd1
	R xd2 xd3 std st0 st1 fd
@


1.176
log
@regen
@
text
@d521 1
a521 1
	R ttyd audio0 audio1 audio2 hotplug ptm local wscons uk0
@


1.175
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d181 1
a181 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d185 1
a185 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d189 1
a189 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d193 1
a193 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.174
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.49 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a73 1
#	nnpfs*	NNPFS filesystem node
a264 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d520 2
a521 2
	R diskmap vscsi0 nnpfs0 ch0 bio cuaa cuab cuac cuad ttya ttyb
	R ttyc ttyd audio0 audio1 audio2 hotplug ptm local wscons uk0
@


1.173
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.48 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
a36 1
#	raid*	RAIDframe disk devices
d528 1
a528 1
	R xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1 fd
d531 1
a531 1
presto*|xd*|xy*|sd*|raid*)
a536 1
	raid*) dodisk raid $U 25 123 $U 0;;
@


1.172
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.47 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d527 1
a527 1
	R ttyc ttyd hotplug ptm local wscons audio0 audio1 audio2 uk0
@


1.171
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.46 2010/11/19 20:55:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d522 8
a529 9
	R presto0 bpp0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0
	R sd1 sd2 sd3 sd4 cd0 cd1 rd0 xy0 xy1 xy2 xy3 tun0 tun1 tun2
	R tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D
	R fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ch0 bio cuaa cuab
	R cuac cuad ttya ttyb ttyc ttyd hotplug ptm local wscons
	R audio0 audio1 audio2 uk0 random lkm tty00 tty01 tty02 tty03
	R apm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd
d532 1
a532 1
presto*|xd*|xy*|sd*|raid*|ccd*)
a538 1
	ccd*) dodisk ccd $U 9 23 $U 0;;
@


1.170
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.169
log
@regen
@
text
@a477 1
	dodisk svnd $U 8 110 $U 2048
@


1.168
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.45 2010/09/30 15:27:54 claudio Exp 
d74 1
d276 4
d529 4
a532 4
	R cuac cuad ttya ttyb ttyc ttyd ptm local wscons audio0 audio1
	R audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm pf
	R systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.167
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.43 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d78 1
d253 4
@


1.166
log
@regen
@
text
@a47 2
#	tty[a-z]*	Zilog 8530 serial ports
#	tty[0-7][0-9a-f]	NS16x50 serial ports
d50 2
d58 1
a59 1
#	bpp[jkl]	"spif" parallel port
d61 1
a62 1
#	ttyC-J*	wscons display devices
d72 1
d75 1
a81 1
#	nnpfs*	NNPFS filesystem node
a82 1
#	diskmap	Disk mapper
a228 4
diskmap)
	M diskmap c 129 0 640 operator
	;;

a232 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d262 4
d276 4
d317 14
a349 14
wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyIcfg ttyI0 ttyI1 ttyI2 ttyI3 ttyI4 ttyI5
	R ttyI6 ttyI7 ttyI8 ttyI9 ttyIa ttyIb ttyHcfg ttyH0 ttyH1
	R ttyH2 ttyH3 ttyH4 ttyH5 ttyH6 ttyH7 ttyH8 ttyH9 ttyHa ttyHb
	R ttyGcfg ttyG0 ttyG1 ttyG2 ttyG3 ttyG4 ttyG5 ttyG6 ttyG7
	R ttyG8 ttyG9 ttyGa ttyGb ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3
	R ttyF4 ttyF5 ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg
	R ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9
	R ttyEa ttyEb ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5
	R ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1
	R ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

d380 21
a435 21
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 36 $o 660 dialer uucp
	M cua$U c 36 $(($o+128)) 660 dialer uucp
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	e) n=4;;
	f) n=5;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 12 $n 660 dialer uucp
@


1.165
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
@


1.164
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.163
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.42 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a76 1
#	ss*	SCSI scanners
a252 8
ss*)
	M ss$U c 121 $(($U*16)) 640 operator
	M nss$U c 121 $(($(($U*16))+1)) 640 operator
	M enss$U c 121 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d518 5
a522 5
	R fd0E fd0F fd0G fd0H diskmap vscsi0 nnpfs0 ss0 ss1 ch0 bio
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd ptm local wscons
	R audio0 audio1 audio2 uk0 random lkm tty00 tty01 tty02 tty03
	R apm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd
@


1.162
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.41 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d210 1
a210 1
	R std bpf0 bio
@


1.161
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d231 1
a231 1
	M diskmap b 129 0 640 operator
@


1.160
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.40 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d83 1
d230 4
d527 5
a531 5
	R fd0E fd0F fd0G fd0H vscsi0 nnpfs0 ss0 ss1 ch0 bio cuaa cuab
	R cuac cuad ttya ttyb ttyc ttyd ptm local wscons audio0 audio1
	R audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm pf
	R systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.159
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d308 1
a308 1
wsmouse*)
d317 1
a317 1
wskbd*)
@


1.158
log
@Sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.39 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d82 1
d229 4
d522 2
a523 2
	R fd0E fd0F fd0G fd0H nnpfs0 ss0 ss1 ch0 bio cuaa cuab cuac
	R cuad ttya ttyb ttyc ttyd ptm local wscons audio0 audio1
@


1.157
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.38 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d517 5
a521 4
	R fd0E fd0F fd0G fd0H nnpfs0 ss0 ss1 ch0 bio cuaa cuab cuac cuad
	R ttya ttyb ttyc ttyd ptm local wscons audio0 audio1 audio2
	R uk0 random lkm tty00 tty01 tty02 tty03 apm pf systrace xd0
	R xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.156
log
@regen
@
text
@d81 1
a81 1
#	xfs*	XFS filesystem node
d228 2
a229 2
xfs*)
	M xfs$U c 51 $U 600
d517 1
a517 1
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 bio cuaa cuab cuac cuad
@


1.155
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.37 2008/06/14 23:09:06 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a222 1
	M drum		c 7 0 640 kmem
@


1.154
log
@sync
@
text
@d519 3
a521 3
	R ttya ttyb ttyc ttyd ptm local wscons audio0 uk0 random lkm
	R tty00 tty01 tty02 tty03 apm pf systrace xd0 xd1 xd2 xd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.153
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.36 2008/06/13 21:07:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d255 1
a255 1
	for pre in " " s u p a
@


1.152
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.35 2008/06/12 18:52:46 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d208 1
a208 1
	R std bpf0
@


1.151
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.34 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d208 1
a208 1
	R std random bpf0
@


1.150
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.149
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.33 2007/05/27 01:50:36 todd Exp 
d71 1
d285 4
d519 1
a519 1
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 cuaa cuab cuac cuad
@


1.148
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.32 2007/05/26 19:54:23 todd Exp 
a70 1
#	bio	ioctl tunnel pseudo-device
a283 4
bio)
	M bio c 4 0 600
	;;

d514 1
a514 1
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 bio cuaa cuab cuac cuad
@


1.147
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.31 2006/08/28 21:04:04 tsi Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d71 1
d285 4
d519 1
a519 1
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 cuaa cuab cuac cuad
@


1.146
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
@


1.145
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
d493 1
d497 1
@


1.144
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
@


1.143
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.29 2005/08/01 22:22:13 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d62 1
a62 1
#	ttyC-F*	wscons display devices
d312 2
a313 2
tty[C-F]*)
	U=${i##tty[C-F]}
d319 4
d333 10
a342 6
	R wskbd3 wsmux ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5
	R ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg ttyE0 ttyE1
	R ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb
	R ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7
	R ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3
	R ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.142
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d61 1
a61 1
#	ttyC0	Minimal wscons devices
d71 1
a71 1
#	fd	fd/* nodes for fdescfs
@


1.141
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d169 1
a169 2
RMlist="rm -f"
MKlist=":"
d172 1
a172 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d176 1
a176 1
	RMlist="$RMlist $1"
d180 1
a180 1
		MKlist="$MKlist;chown $7:$G $1"
d183 10
a192 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a193 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d248 2
a249 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d274 1
a274 1
	RMlist="mkdir -p fd;$RMlist" n=0
d276 1
a276 1
	MKlist="$MKlist;chmod 555 fd"
d288 4
a291 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d527 8
a534 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d536 1
a536 1
	echo "$list" | sh
@


1.140
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d152 1
a152 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.139
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a148 1
	RMlist="$RMlist $1$2? r$1$2?"
d152 2
a153 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a155 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.138
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a185 1
	mklist="$mklist $1"
@


1.137
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.27 2005/03/29 16:40:10 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.19 2005/06/29 18:23:26 todd Exp 
a75 1
#	ses*	SES/SAF-TE SCSI devices
a257 4
ses*)
	M ses$U c 124 $U 640 operator
	;;

d509 3
a511 3
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 cuaa cuab cuac
	R cuad ttya ttyb ttyc ttyd ptm local wscons audio0 uk0 random
	R lkm tty00 tty01 tty02 tty03 apm pf systrace xd0 xd1 xd2 xd3
@


1.136
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
d49 1
d415 7
d516 2
a517 2
	R lkm apm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.135
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.26 2005/03/29 16:26:40 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.134
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.25 2005/03/01 18:22:32 miod Exp 
d67 1
d304 5
d508 2
a509 2
	R lkm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd
@


1.133
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.24 2004/04/11 18:05:23 millert Exp 
d49 2
d55 4
a68 3
#	bpp*	Parallel port
#	bppmag[mno]	Magma parallel port
#	bpp[jkl]	"spif" parallel port
a71 1
#	magma*	Magma multiport cards
a73 1
#	spif*	"spif" multiport cards
a260 18
spif*)
	case $U in
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 8 ]
	do
		name=${nam}`hex $n`
		M tty$name c 102 $(($offset+$n)) 660 dialer uucp
		n=$(($n+1))
	done
	M bpp${nam}0 c 103 $(($offset+0)) 600
	;;

a273 19
magma*)
	case $U in
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	*)	echo "bad unit for $i: $U"; exit 127;;
	esac
	offset=$(($U*64))
	n=0
	while [ $n -lt 16 ]
	do
		name=${nam}`hex $n`
		M tty$name c 100 $(($offset+$n)) 660 dialer uucp
		n=$(($n+1))
	done
	M bpp${nam}0 c 101 $(($offset+0)) 600
	M bpp${nam}1 c 101 $(($offset+1)) 600
	;;

a287 4
bpp*)
	M bpp$U c 104 $U 600
	;;

d341 4
d369 37
@


1.132
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.131
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.130
log
@sync
@
text
@d100 1
a100 1
	local t="$1"  
@


1.129
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d365 1
a365 1
	[0-9a-f]) M tty$n$U c 78 $(( 16#$U + $m )) 600;;
@


1.128
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.127
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d68 1
a68 1
#	openprom	
d77 1
a77 1
#	uk*	SCSI unknown devices
@


1.126
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.125
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
@


1.124
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
@


1.123
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d51 2
a52 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.122
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.23 2004/02/20 19:13:08 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d51 2
a52 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d386 6
a391 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d393 1
a393 1
	while [ $n -lt 16 ]
d395 2
a396 2
		nam=$name$(hex $n)
		off=$(($U*16))
d498 5
a502 5
	R pty1 pty2 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B
	R fd0C fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 cuaa
	R cuab cuac cuad ttya ttyb ttyc ttyd ptm local wscons audio0
	R uk0 random lkm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
@


1.121
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
@


1.120
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.22 2004/02/16 19:01:02 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d37 2
a38 1
#	sd*	SCSI disks
d47 2
a48 2
#	cua[a-z]*	Zilog 8530 Serial Port
#	tty[a-z]*	Zilog 8530 Serial Port
a70 1
#	raid*	RAIDframe disk devices
@


1.119
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.21 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 4
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	st*	SCSI tapes
d33 4
a37 5
#	cd*	SCSI cdrom drives
#	ch*	SCSI media changer
#	uk*	SCSI Unknown device
#	ss*	SCSI scanners
#	xy*	Xylogic 450/451 disks
d39 1
d41 7
a47 4
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk devices
#	presto*	Prestoserve NVRAM memory
a48 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d50 2
a51 1
# Printers:
d53 2
a54 2
#	ttyC0	wscons screen 0
#	ttyC-F*	wscons virtual consoles
a58 3
# Terminal ports:
#	tty[a-z]*	Zilog 8530 Serial Port
#	cua[a-z]*	Zilog 8530 Serial Port
d60 7
a66 1
#	audio*	audio device
d68 1
a68 1
#	bpf*	Berkeley Packet Filter
a69 9
#	lkm	loadable kernel modules interface
#	tun*	network tunnel driver
#	*random	inkernel random data source
#	magma*	magma card (makes 16 tty and 2 bpp)
#	bppmag[mno]	magma parallel port device
#	spif*	spif card (makes 8 tty and 1 bpp)
#	bpp[jkl]	spif parallel port device
#	bpp*	parallel port devices
#	xfs*	XFS filesystem devices
d71 2
a72 1
#	fd	makes fd/* for the fdescfs
d74 5
a78 1
#	systrace*	system call tracing device
d232 6
a237 2
systrace)
	M systrace c 50 0 644
d240 2
a241 2
ses*)
	M ses$U c 124 $U 640 operator
d244 2
a245 4
fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
d248 6
a253 2
xfs*)
	M xfs$U c 51 $U 600
d256 2
a257 2
bpp*)
	M bpp$U c 104 $U 600
d278 13
d310 2
a311 7
*random)
	n=0
	for pre in " " s u p a
	do
		M ${pre}random c 119 $n 644
		n=$(($n+1))
	done
d314 2
a315 2
tun*)
	M tun$U c 111 $U 600
d318 4
a321 2
lkm)
	M lkm c 112 0 640 _lkm
d324 2
a325 2
pf*)
	M pf c 59 0 600
a331 4
openprom)
	M openprom c 70 0  
	;;

a342 28
cua[a-z])
	u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	e) n=4;;
	f) n=5;;
	*) echo unknown cua device $i ;;
	esac
	M cua$u c 12 $(($n+128)) 660 dialer uucp
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	c) n=2 ;;
	d) n=3 ;;
	e) n=4;;
	f) n=5;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 12 $n 660 dialer uucp
	;;

a380 4
ptm)
	M ptm c 125 0 666
	;;

d399 46
d450 4
a481 20
rd*)
	dodisk2 rd $U 17 106 $U 0
	;;

ss*)
	M ss$U c 121 $(($U*16)) 640 operator
	M nss$U c 121 $(($(($U*16))+1)) 640 operator
	M enss$U c 121 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
	;;

uk*)
	M uk$U c 120 $U 640 operator
	;;

ch*)
	M ch$U c 19 $U 660 operator
	;;

a485 10
st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 11 $n 660 operator
		M ${pre}rst$U	c 18 $n 660 operator
		n=$(($n+1))
	done
	;;

d496 2
a497 2
	R cuab cuac cuad ttya ttyb ttyc ttyd ptm wscons audio0 uk0
	R random lkm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2
@


1.118
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.20 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.117
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d46 1
a46 1
#	tty*	set of 16 slave psuedo terminals
@


1.116
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.19 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.115
log
@sync
@
text
@d48 1
d396 4
d495 3
a497 3
	R cuab cuac cuad ttya ttyb ttyc ttyd wscons audio0 uk0 random
	R lkm pf systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd
@


1.114
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a512 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d521 1
a521 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.113
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.112
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d94 8
@


1.111
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
@


1.110
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d96 1
a96 1
trunc()
d98 16
a113 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
@


1.109
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d398 1
a398 1
	dodisk svnd $U 8 110 $U 128
@


1.108
log
@- use : instead of . for chown
- add bpp devices
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.18 2003/05/21 18:49:00 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.107
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.17 2003/04/13 22:55:43 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.58 2003/04/10 16:11:12 millert Exp 
d79 1
d239 4
d476 8
a483 8
	R presto0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2
	R sd3 sd4 cd0 cd1 rd0 xy0 xy1 xy2 xy3 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D
	R fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 cuaa cuab cuac
	R cuad ttya ttyb ttyc ttyd wscons audio0 uk0 random lkm pf
	R systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.106
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.16 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d52 1
d143 1
a143 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d175 1
a175 1
		MKlist="$MKlist;chown $7.$G $1"
d471 8
a478 7
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R cd0 cd1 rd0 xy0 xy1 xy2 xy3 tun0 tun1 tun2 tun3 bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 cuaa cuab cuac cuad
	R ttya ttyb ttyc ttyd wscons audio0 uk0 random lkm pf systrace
	R xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1 fd
d481 1
a481 1
xd*|xy*|sd*|raid*|ccd*)
d483 1
@


1.105
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d177 1
a177 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.104
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d288 1
a288 1
	M lkm c 112 0 640 kmem
@


1.103
log
@replace MAKEDEVs by auto-generated ones.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.15 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.102
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d475 2
a476 3
	R ttya ttyb ttyc ttyd wscons audio0 uk0 random lkm pf
	R systrace xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.101
log
@sync
@
text
@a70 1
#	altq/	ALTQ control interface
a290 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 125 $U 644
		U=$(($U+1))
	done
	;;

d475 1
a475 1
	R ttya ttyb ttyc ttyd wscons audio0 uk0 random lkm pf altq
@


1.100
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.14 2002/08/12 10:45:06 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.51 2002/08/29 23:43:16 todd Exp 
d381 6
a386 6
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb ttyFcfg ttyF0 ttyF1
	R ttyF2 ttyF3 ttyF4 ttyF5 ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb
	R ttyEcfg ttyE0 ttyE1 ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7
	R ttyE8 ttyE9 ttyEa ttyEb ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3
	R ttyD4 ttyD5 ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb
d479 6
a484 6
	R cuaa cuab cuac cuad ttya ttyb ttyc ttyd ccd0 ccd1 ccd2 ccd3
	R vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 xy0 xy1
	R xy2 xy3 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5
	R bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1 fd1B fd1C fd1D fd1E
	R fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0
	R ss0 ss1 ch0 ses0 wscons audio0 uk0 random lkm pf altq
@


1.99
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.50 2002/08/12 10:45:04 miod Exp 
d382 5
a386 2
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb ttyDcfg ttyD0 ttyD1
	R ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7 ttyD8 ttyD9 ttyDa ttyDb
@


1.98
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.13 2002/07/31 16:47:50 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d56 7
a68 8
#	bwtwo*	
#	cgtwo*	
#	cgthree*	
#	cgfour*	
#	cgsix*	
#	cgeight*	
#	cgfourteen*	
#	tcx*	
a217 3
	M fb		c 22 0
	M mouse		c 13 0
	M kbd		c 29 0
a307 32
tcx*)
	M tcx$U c 109 $U
	;;

cgfourteen*)
	M cgfourteen$U c 99 $U
	;;

cgeight*)
	M cgeight$U c 64 $U 666
	;;

cgsix*)
	M cgsix$U c 67 $U 666
	;;

cgfour*)
	M cgfour$U c 39 $U 666
	;;

cgthree*)
	M cgthree$U c 55 $U 666
	;;

cgtwo*)
	M cgtwo$U c 31 $U 666
	;;

bwtwo*)
	M bwtwo$U c 27 $U 666
	;;

d328 4
a331 2
	c) n=4 ;;
	d) n=5 ;;
d342 4
a345 2
	c) n=4 ;;
	d) n=5 ;;
d351 35
d476 6
a481 7
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R cd0 cd1 rd0 xy0 xy1 xy2 xy3 tun0 tun1 tun2 tun3 bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 fd1
	R fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E
	R fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 tcx0 cgfourteen0
	R cgeight0 cgsix0 cgfour0 cgthree0 cgtwo0 bwtwo0 audio0 uk0
	R random lkm cuaa cuab cuac cuad ttya ttyb ttyc ttyd pf altq
@


1.97
log
@regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.12 2002/05/16 21:11:21 miod Exp 
d218 1
a218 1
	M openprom	c 70 0	644
@


1.96
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.95
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.94
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.11 2002/04/14 23:20:55 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp 
d85 1
d225 4
d481 2
a482 1
	R xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.93
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.10 2002/04/10 02:31:14 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d201 1
a201 1
	R fd0 sd0 sd1 sd2 rd0
@


1.92
log
@regen. some of these were missed previously.
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.9 2002/02/17 05:14:30 deraadt Exp 
d201 1
a201 1
	R fd0 sd0 sd1 rd0
@


1.91
log
@random typo fix; ok deraadt@@
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.8 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
@


1.90
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.9 2002/02/17 05:14:30 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.87 2002/02/19 21:06:00 todd Exp $
d362 1
a362 1
	*) echo unknown cua device $i ;;  
d475 2
a476 2
	R rndrandom lkm cuaa cuab cuac cuad ttya ttyb ttyc ttyd pf
	R altq xd0 xd1 xd2 xd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.89
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d474 2
a475 2
	R cgeight0 cgsix0 cgfour0 cgthree0 cgtwo0 bwtwo0 audio0 uk1
	R uk0 random lkm cuaa cuab cuac cuad ttya ttyb ttyc ttyd pf
@


1.88
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d474 2
a475 2
	R cgeight0 cgsix0 cgfour0 cgthree0 cgtwo0 bwtwo0 audio0 uk0
	R rndrandom lkm cuaa cuab cuac cuad ttya ttyb ttyc ttyd pf
@


1.87
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
@


1.86
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
@


1.85
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.8 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d48 1
a48 1
#	rd*	"ramdisk" pseudo-disks
d200 1
a200 1
	R std random
@


1.84
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d469 8
a476 8
	R tcx0 cgfourteen0 cgeight0 cgsix0 cgfour0 cgthree0 cgtwo0
	R bwtwo0 audio0 xfs0 ss0 ss1 uk0 ses0 rndrandom lkm cuaa cuab
	R cuac cuad ttya ttyb ttyc ttyd pf altq tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B
	R fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F
	R fd0G fd0H xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3 rd0 raid0 raid1
	R raid2 raid3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0
	R cd1 ch0 st0 st1 pty0 pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.83
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.7 2002/02/09 16:59:50 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d380 6
a385 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d390 1
d435 3
a437 1
	M ss$U c 121 $U 440 operator
@


1.82
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
@


1.81
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d486 1
a486 1
	R cd1 ch0 st0 st1 pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.80
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
d134 1
@


1.79
log
@sync, and update, to make "ramdisk" target disk
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp 
d94 7
a100 7
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d103 1
d115 1
d131 1
d145 1
d159 1
d161 6
a166 6
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
d168 1
d189 1
a383 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d417 9
a425 9
	*A)		typnam=0; typnum=0;;
	*B)		typnum=1;;
	*C)		typnum=2;;
	*D)		typnum=3;;
	*E)		typnum=4;;
	*F)		typnum=5;;
	*G)		typnum=6;;
	*H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
d517 2
a518 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
@


1.78
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.6 2002/01/23 07:53:01 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
d191 1
a191 1
floppy)
d193 1
a193 1
	R fd0 sd0 sd1
@


1.77
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp 
d184 1
d477 1
a477 1
	R fd0G fd0H rd0 xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3 raid0 raid1
@


1.76
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.5 2002/01/23 06:17:09 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp 
d472 7
a478 7
	R bwtwo0 audio0 xfs0 ss0 uk0 ses0 rndrandom lkm cuaa cuab cuac
	R cuad ttya ttyb ttyc ttyd pf altq tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H rd0 xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3 raid0 raid1 raid2
	R raid3 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 ch0
	R st0 pty0 fd sd0 sd1 sd2 sd3 sd4
@


1.75
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp 
a192 6
	;;

ramdisk)
	R std random
	R fd0 sd0 sd1 sd2 sd3 rd0 cd0
	R bpf0
@


1.74
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.4 2002/01/12 21:25:45 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.17 2002/01/12 21:14:57 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp 
d78 1
d80 1
d221 15
a235 1
magma*)
d237 3
a239 3
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
d244 1
a244 1
	while [ $n -lt 16 ]
d247 1
a247 1
		M tty$name c 100 $(($offset+$n)) 660 dialer uucp
d250 1
a250 2
	M bpp${nam}0 c 101 $(($offset+0)) 600 wheel root
	M bpp${nam}1 c 101 $(($offset+1)) 600 wheel root
d253 1
a253 1
spif*)
d255 3
a257 3
	0)	offset=0  nam=j;;
	1)	offset=16 nam=k;;
	2)	offset=32 nam=l;;
d262 1
a262 1
	while [ $n -lt 8 ]
d265 1
a265 1
		M tty$name c 102 $(($offset+$n)) 660 dialer uucp
d268 2
a269 15
	M bpp${nam}0 c 103 $(($offset+0)) 600 wheel root
	;;

ses*)
	M ses$U c 124 $U 640 operator
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 24 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
	;;

xfs*)
	M xfs$U c 51 $U 600
d477 8
a484 10
	R std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1 st0 st1 ch0 cd0 cd1
	R vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3
	R raid0 raid1 raid2 raid3 xy0 xy1 xy2 xy3 xd0 xd1 xd2 xd3 rd0
	R fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R tun0 tun1 tun2 tun3 altq pf ttya ttyb ttyc ttyd
	R cuaa cuab cuac cuad lkm random ses0 uk0 uk1 ss0 ss1 xfs0
	R audio0 bwtwo0 cgtwo0 cgthree0 cgfour0 cgsix0 cgeight0
	R cgfourteen0 tcx0
d487 1
a487 1
sd*|ccd*|raid*|xd*|xy*)
d489 2
d492 1
a493 3
	raid*) dodisk raid $U 25 123 $U 0;;
	xd*) dodisk xd $U 10 42 $U 0;;
	xy*) dodisk xy $U 3 9 $U 0;;
@


1.73
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.3 2002/01/12 21:14:57 jason Exp 
d231 1
a231 1
		M tty$name c 100 $(($offset+$n))
d234 2
a235 2
	M bpp${nam}0 c 101 $(($offset+0))
	M bpp${nam}1 c 101 $(($offset+1))
d250 1
a250 1
		M tty$name c 102 $(($offset+$n))
d253 1
a253 1
	M bpp${nam}0 c 103 $(($offset+0))
@


1.72
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.2 2002/01/12 21:02:03 jason Exp 
#	OpenBSD: MAKEDEV.mi,v 1.16 2002/01/08 06:00:15 todd Exp 
d78 1
d247 1
a247 1
	while [ $n -lt 16 ]
@


1.71
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sparc/MAKEDEV.md,v 1.1 2002/01/08 06:00:15 todd Exp 
d219 6
a224 5
	if [ 0$U -gt 3 ]
	then
		echo "bad unit for $i: $U"
		exit 127
	fi
d229 1
a229 1
		name=$U`hex $n`
d233 2
a234 2
	M bpp${unit}0 c 101 $(($offset+0))
	M bpp${unit}1 c 101 $(($offset+1))
d237 1
a237 1
magma*)
d239 3
a241 4
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	3)	offset=48 nam=p;;
d248 2
a249 2
		name=$U`hex $n`
		M tty$name c 100 $(($offset+$n))
d252 1
a252 2
	M bppm${unit} c 101 $(($offset+0))
	M bppm${unit} c 101 $(($offset+1))
@


1.70
log
@populate /dev/fd/ like other archs in 'all)' target
@
text
@a1 1
#	$OpenBSD: MAKEDEV,v 1.69 2001/06/28 02:58:56 kjc Exp $
d3 10
a12 1
# Copyright (c) 1990 The Regents of the University of California.
d20 2
a21 10
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
d23 10
a32 13
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
a38 1
#
a40 1
#
d44 3
a52 2
#	raid*	RAIDframe disk devices
#
d54 2
a55 2
#	pty*	set of 16 master and slave pseudo terminals
#
a56 1
#
d58 2
a59 3
#	tty[a-d]	onboard zs serial ports
#	cua[a-d]	onboard zs serial ports
#
d61 10
a70 14
#	ch*	SCSI media changer
#	uk*	SCSI Unknown device
#	ses*	SCSI SES/SAF-TE device
#	ss*	SCSI scanners
#	audio*
#	openprom
#	bwtwo*
#	cgtwo*
#	cgthree*
#	cgfour*
#	cgsix*
#	cgeight*
#	cgfourteen*
#	tcx*
d72 2
d76 1
a76 1
#	*random	inkernal random data source
a77 2
#	spif*	spif card (makes 8 tty and 1 bpp)
#	bpp*	bpp
d79 91
a169 70
#	altq	ALTQ control interface

PATH=/sbin:/bin:/usr/bin:/usr/sbin
this=$0
umask 77

if ! [ "$os" ]; then
	os=OpenBSD
fi

# SunOS shell support functions
if [ "$os" = "SunOS" ]
then
PATH=$PATH:/usr/etc # SunOS has chown in /usr/etc
	add ()
	{
		expr $1 + $2
	}
	mult ()
	{
		expr $1 '*' $2
	}
	hex ()
	{
		case $1 in
			[0-9]) echo -n $1;;
			10) echo -n a;;
			11) echo -n b;;
			12) echo -n c;;
			13) echo -n d;;
			14) echo -n e;;
			15) echo -n f;;
		esac
	}
	trunc ()
	{
		expr $1 : $2'\(.*\)'
	}
	unt()
	{
		expr $1 : '[a-z]*\([0-9]*\)[a-p]*'
	}
fi
# OpenBSD shell support functions
if [ "$os" = "OpenBSD" ]
then
	add ()
	{
		tmp=0
		while [ "$1" ]
		do
			tmp=$(( $1 + $tmp ))
			shift
		done
		echo $tmp
	}
	mult ()
	{
		echo "$(( $1 * $2 ))"
	}
	hex ()
	{
		case $1 in
			[0-9]) echo -n $1;;
			10) echo -n a;;
			11) echo -n b;;
			12) echo -n c;;
			13) echo -n d;;
			14) echo -n e;;
			15) echo -n f;;
d171 6
d178 4
a181 30
	trunc ()
	{
		# XXX pdksh can't seem to deal with locally scoped variables
		# in ${foo#$bar} expansions
		arg1="$1"
		arg2="$2"
		echo ${arg1#$arg2}
	}
	unt()
	{
		# XXX pdksh can't seem to deal with locally scoped variables
		# in ${foo#$bar} expansions
		arg1="$1"
		tmp="${arg1#[a-z]*}"
		while [ "$tmp" != "$arg1" ]
		do
			arg1=$tmp
			tmp="${arg1#[a-z]*}"
		done
		tmp="${arg1%*[a-z]}"
		while [ "$tmp" != "$arg1" ]
		do
			arg1=$tmp
			tmp="${arg1%*[a-z]}"
		done
		echo $arg1
	}
fi

for i
d183 2
a184 3

unit=`unt $i`
[ "$unit" ] || unit=0
a186 18

all)
	sh $this std fd sd0 sd1 sd2 sd3 sd4 xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3
	sh $this cd0 st0 st1 rd0
	sh $this fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	sh $this uk0 uk1
	sh $this ss0 ss1
	sh $this ses0
	sh $this pty0 vnd0 vnd1 vnd2 vnd3 audio0 pf tun0 tun1 tun2 tun3
	sh $this ccd0 ccd1 ccd2 ccd3
	sh $this raid0 raid1 raid2 raid3
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $this bwtwo0 cgtwo0 cgthree0 cgfour0 cgsix0
	sh $this cgeight0 cgfourteen0 tcx0
	sh $this lkm random local
	sh $this xfs0 altq
	;;

d188 2
a189 2
	sh $this std random
	sh $this fd0 sd0 sd1
d193 3
a195 3
	sh $this std random
	sh $this fd0 sd0 sd1 sd2 sd3 rd0 cd0 st0 st1
	sh $this bpf0
d199 17
a215 21
	rm -f console drum mem kmem null zero tty klog stdin stdout stderr ksyms
	rm -f eeprom openprom tty[abcd] cua[abcd] fb mouse kbd
	mknod console		c 0 0
	mknod drum		c 7 0	; chmod 640 drum ; chown root.kmem drum
	mknod mem		c 3 0	; chmod 640 mem ; chown root.kmem mem
	mknod kmem		c 3 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod null		c 3 2	; chmod 666 null
	mknod zero		c 3 12	; chmod 666 zero
	mknod tty		c 2 0	; chmod 666 tty
	mknod klog		c 16 0	; chmod 600 klog
	mknod stdin		c 24 0	; chmod 666 stdin
	mknod stdout		c 24 1	; chmod 666 stdout
	mknod stderr		c 24 2	; chmod 666 stderr
	mknod ksyms		c 122 0  ; chmod 640 ksyms ; chown root.kmem ksyms
	mknod eeprom		c 3 11  ; chmod 640 eeprom ; chown root.kmem eeprom
	mknod openprom		c 70 0  ; chmod 644 openprom
	sh $this ttya ttyb ttyc ttyd
	sh $this cuaa cuab cuac cuad
	mknod fb		c 22 0 ; chmod 666 fb
	mknod mouse		c 13 0 ; chmod 666 mouse
	mknod kbd		c 29 0 ; chmod 666 kbd
d218 7
a224 3
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
d226 8
a233 4
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 24 $n; n=`add $n 1`; done )
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
d236 18
a253 3
bwtwo*)
	rm -f bwtwo$unit
	mknod bwtwo$unit	c 27 $unit; chmod 666 bwtwo$unit
d256 2
a257 3
cgtwo*)
	rm -f cgtwo$unit
	mknod cgtwo$unit	c 31 $unit; chmod 666 cgtwo$unit
d260 4
a263 3
cgthree*)
	rm -f cgthree$unit
	mknod cgthree$unit	c 55 $unit; chmod 666 cgthree$unit
d266 2
a267 3
cgfour[0-9]*)
	rm -f cgfour$unit
	mknod cgfour$unit	c 39 $unit; chmod 666 cgfour$unit
d270 7
a276 3
cgsix*)
	rm -f cgsix$unit
	mknod cgsix$unit	c 67 $unit; chmod 666 cgsix$unit
d279 2
a280 3
cgeight*)
	rm -f cgeight$unit
	mknod cgeight$unit	c 64 $unit; chmod 666 cgeight$unit
d283 2
a284 3
cgfourteen*)
	rm -f cgfourteen$unit
	mknod cgfourteen$unit	c 99 $unit; chmod 666 cgfourteen$unit
d287 6
a292 3
tcx*)
	rm -f tcx$unit
	mknod tcx$unit		c 109 $unit; chmod 666 tcx$unit
d295 2
a296 17
audio*)
	major=69  
	audio=audio$unit
	sound=sound$unit
	mixer=mixer$unit
	audioctl=audioctl$unit
	rm -f $sound $audio $mixer $audioctl
	mknod $sound	c $major $unit
	mknod $audio	c $major `add $unit 128`
	mknod $mixer	c $major `add $unit 16`
	mknod $audioctl	c $major `add $unit 192`
	chown root.wheel $audio $sound $mixer $audioioctl
	chmod 666 $audio $sound $mixer $audioctl
	[ -e audio ] || ln -s $audio audio
	[ -e mixer ] || ln -s $mixer mixer
	[ -e sound ] || ln -s $sound sound
	[ -e audioctl ] || ln -s $audioctl audioctl
d299 2
a300 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d303 2
a304 3
openprom)
	rm -f openprom
	mknod openprom c 70 0 ;chmod 600 openprom
d307 3
d311 2
a312 5
bpf*)
	rm -f bpf$unit
	mknod bpf$unit c 105 $unit
	chmod 600 bpf$unit
	chown root.wheel bpf$unit
d315 2
a316 5
pf)
	rm -f pf
	mknod pf c 59 0
	chown root.wheel pf
	chmod 600 pf
d319 2
a320 5
tun*)
	rm -f tun$unit
	mknod tun$unit c 111 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d323 2
a324 97
fd*)
	umask 2 ; typnam=`expr $i : 'fd.*\(.\)$'`
	unit=`expr $i : 'fd\(.\).*'`
	case $typnam in
	0|1)		typnam=; typnum=0;;	# no type specified, assume A
	A)		typnam=; typnum=0;;
	B)		typnum=1;;
	C)		typnum=2;;
	D)		typnum=3;;
	E)		typnum=4;;
	F)		typnum=5;;
	G)		typnum=6;;
	H)		typnum=7;;
	*)		echo bad type $typnam for $i; exit 1;;
	esac
	case $unit in
	0|1)	blk=16; chr=54;;
	*)	echo bad unit $unit for $i; exit 1;;
	esac
	nam=fd${unit}${typnam}
	rm -f ${nam}? r${nam}?
	basenum=`expr $unit '*' 128 + $typnum '*' 16`
	mknod ${nam}a	b $blk `expr $basenum + 0`
	mknod ${nam}b	b $blk `expr $basenum + 1`
	mknod ${nam}c	b $blk `expr $basenum + 2`
	#mknod ${nam}d	b $blk `expr $basenum + 3`
	#mknod ${nam}e	b $blk `expr $basenum + 4`
	#mknod ${nam}f	b $blk `expr $basenum + 5`
	#mknod ${nam}g	b $blk `expr $basenum + 6`
	#mknod ${nam}h	b $blk `expr $basenum + 7`
	#mknod ${nam}i	b $blk `expr $basenum + 8`
	#mknod ${nam}j	b $blk `expr $basenum + 9`
	#mknod ${nam}k	b $blk `expr $basenum + 10`
	#mknod ${nam}l	b $blk `expr $basenum + 11`
	#mknod ${nam}m	b $blk `expr $basenum + 12`
	#mknod ${nam}n	b $blk `expr $basenum + 13`
	#mknod ${nam}o	b $blk `expr $basenum + 14`
	#mknod ${nam}p	b $blk `expr $basenum + 15`
	mknod r${nam}a	c $chr `expr $basenum + 0`
	mknod r${nam}b	c $chr `expr $basenum + 1`
	mknod r${nam}c	c $chr `expr $basenum + 2`
	#mknod r${nam}d	c $chr `expr $basenum + 3`
	#mknod r${nam}e	c $chr `expr $basenum + 4`
	#mknod r${nam}f	c $chr `expr $basenum + 5`
	#mknod r${nam}g	c $chr `expr $basenum + 6`
	#mknod r${nam}h	c $chr `expr $basenum + 7`
	#mknod r${nam}i	c $chr `expr $basenum + 8`
	#mknod r${nam}j	c $chr `expr $basenum + 9`
	#mknod r${nam}k	c $chr `expr $basenum + 10`
	#mknod r${nam}l	c $chr `expr $basenum + 11`
	#mknod r${nam}m	c $chr `expr $basenum + 12`
	#mknod r${nam}n	c $chr `expr $basenum + 13`
	#mknod r${nam}o	c $chr `expr $basenum + 14`
	#mknod r${nam}p	c $chr `expr $basenum + 15`
	chown root.operator ${nam}[a-p] r${nam}[a-p]
	chmod 640 ${nam}[a-p] r${nam}[a-p]
	umask 77
	;;

ccd*|sd*|xd*|xy*|cd*|raid*)
	umask 2
	unit=`unt $i`
	if [ 0$unit -gt 15 ]
	then
		echo bad disk unit: $i - $unit
		exit 127
	fi
	case $i in
	ccd*) name=ccd; blk=9; chr=23;;
	raid*) name=raid; blk=25; chr=123;;
	sd*) name=sd; blk=7; chr=17;;
	xd*) name=xd; blk=10; chr=42;;
	xy*) name=xy; blk=3; chr=9;;
	cd*)  name=cd; blk=18; chr=58;;
	*) echo bad unit for disk in: $i;;
	esac
	if [ "$unit" = "" ]
	then
		n=0
		while [ $n -lt 32 ]
		do
			sh $this $name$n
			n=`add $n 1`
		done
	fi
	rm -f $name$unit? r$name$unit?
	minor=`mult $unit 16`
	for slice in a b c d e f g h i j k l m n o p
	do
		dev=$name$unit$slice
		mknod $dev b $blk $minor
		mknod r$dev c $chr $minor
		minor=`add $minor 1`
	done
	chown root.operator $name$unit? r$name$unit?
	chmod 640 $name$unit? r$name$unit?
	umask 77
d327 2
a328 37
vnd*)
	umask 2
	unit=`unt $i`
	if [ 0$unit -gt 15 ]
	then
		echo bad disk unit: $i - $unit
		exit 127
	fi
	blk=8; chr=110;
	for name in vnd svnd; do
		case $name in
		vnd) off=0;;
		svnd) off=128;;
		esac
		if [ "$unit" = "" ]
		then
			n=0
			while [ $n -lt 32 ]
			do
				sh $this $name$n
				n=`add $n 1`
			done
		fi
		rm -f $name$unit? r$name$unit?
		minor=`mult $unit 16`
		minor=`add $minor $off`
		for slice in a b c d e f g h i j k l m n o p
		do
			dev=$name$unit$slice
			mknod $dev b $blk $minor
			mknod r$dev c $chr $minor
			minor=`add $minor 1`
		done
		chown root.operator $name$unit? r$name$unit?
		chmod 640 $name$unit? r$name$unit?
	done
	umask 77
d331 2
a332 36
rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	rm -f rd${unit}* rrd${unit}*
	mknod rd${unit}a b 17 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 17 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 106 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 106 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;
st*)
	umask 2
	case $i in
	st*) name=st; blk=11; chr=18;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	sixt=`mult $unit 16`
	mknod $name$unit	b $blk `add $sixt 0`
	mknod n$name$unit	b $blk `add $sixt 1`
	mknod e$name$unit	b $blk `add $sixt 2`
	mknod en$name$unit	b $blk `add $sixt 3`
	mknod r$name$unit	c $chr `add $sixt 0`
	mknod nr$name$unit	c $chr `add $sixt 1`
	mknod er$name$unit	c $chr `add $sixt 2`
	mknod enr$name$unit	c $chr `add $sixt 3`
	chown root.operator $name$unit n$name$unit \
		e$name$unit en$name$unit \
		r$name$unit nr$name$unit \
		er$name$unit enr$name$unit 
	chmod 660 $name$unit n$name$unit \
		e$name$unit en$name$unit \
		r$name$unit nr$name$unit \
		er$name$unit enr$name$unit 
	umask 77
d335 2
a336 10
ch*)
	umask 2
	case $i in
	ch*) name=ch;  chr=19;;
	esac
	rm -f $name$unit
	mknod $name$unit	c $chr $unit
	chown root.operator $name$unit
	chmod 660 $name$unit
	umask 77
d339 9
a347 5
lkm)
	rm -f lkm
	mknod lkm c 112 0
	chown root.kmem lkm
	chmod 640 lkm
d350 3
a352 4
tty[a-z])
	unit=`expr $i : 'tty\([a-z]\)'`
	rm -f tty$unit
	case $unit in
d357 1
a357 1
	*) echo unknown tty device $i ;;
d359 1
a359 3
	mknod tty$unit c 12 $n
	chown uucp.dialer tty$unit
	chmod 660 tty$unit
d362 3
a364 4
cua[a-z])
	unit=`expr $i : 'cua\([a-z]\)'`
	rm -f cua$unit
	case $unit in
d369 1
a369 1
	*) echo unknown cua device $i ;;
d371 1
a371 3
	mknod cua$unit c 12 `add $n 128`
	chown uucp.dialer cua$unit
	chmod 660 cua$unit
d375 19
a393 18
	case $unit in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
a394 26
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
                do
                        nam=$name`hex $n`
                        rm -f {tty,pty}$nam
                        mknod tty$nam c 20 `add $offset $n`
                        mknod pty$nam c 21 `add $offset $n`
                        n=`add $n 1`
                done
		umask 77
		;;
	esac
	;;

spif*)
	case $unit in
	0)	nam=j;;
	1)	nam=k;;
	2)	nam=l;;
	*)	echo "bad unit for $i: $unit"; exit 127;;
	esac
	rm -f bpps${unit}? tty${nam}?
	offset=`expr $unit \* 64`
d396 1
a396 1
	while [ $n -lt 8 ]
d398 4
a401 5
		name=$nam`hex $n`
		mknod tty$name c 102 `add $offset $n`
		chown uucp.dialer tty$name
		chmod 660 tty$name
		n=`add $n 1`
a402 1
	mknod bpps${unit}0 c 103 `add $offset 0`
d405 22
a426 6
magma*)
	case $unit in
	0)	nam=m;;
	1)	nam=n;;
	2)	nam=o;;
	*)	echo "bad unit for $i: $unit"; exit 127;;
d428 8
a435 13
	rm -f bppm${unit}? tty${nam}?
	offset=`expr $unit \* 64`
	n=0
	while [ $n -lt 16 ]
	do
		name=$nam`hex $n`
		mknod tty$name c 100 `add $offset $n`
		chown uucp.dialer tty$name
		chmod 660 tty$name
		n=`add $n 1`
	done
	mknod bppm${unit}0 c 101 `add $offset 0`
	mknod bppm${unit}1 c 101 `add $offset 1`
d438 2
a439 4
bpp*)
	unit=`expr $i : 'bpp\(.*\)'`
	rm -f bpp${unit}
	mknod bpp${unit} c 104 `add $unit 0`
d442 4
a445 10
fga*)
	unit=`expr $i : 'fga\(.*\)'`
	if [ "$unit" != 0 ]; then
		echo "bad unit $unit for $i"
		exit 127
	fi
	rm -f fga$unit
	mknod fga$unit c 98 $unit
	chmod 600 fga$unit
	chown root.wheel fga$unit
d448 2
a449 10
scf*)
	unit=`expr $i : 'scf\(.*\)'`
	if [ "$unit" != 0 ]; then
		echo "bad unit $unit for $i"
		exit 127
	fi
	rm -f scf$unit
	mknod scf$unit c 107 $unit
	chmod 600 scf$unit
	chown root.wheel scf$unit
d452 2
a453 10
flash*)
	unit=`expr $i : 'flash\(.*\)'`
	if [ "$unit" != 0 ]; then
		echo "bad unit $unit for $i"
		exit 127
	fi
	rm -f flash$unit
	mknod flash$unit c 108 $unit
	chmod 600 flash$unit
	chown root.wheel flash$unit
d456 2
a457 9
random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 119 0
	mknod srandom c 119 1
	mknod urandom c 119 2
	mknod prandom c 119 3
	mknod arandom c 119 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d460 8
a467 6
uk*)
	unit=`trunc $i uk`
	rm -f uk$unit
	mknod uk$unit c 120 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
d470 2
a471 6
ses*)
	unit=`trunc $i ses`
	rm -f ses$unit
	mknod ses$unit c 124 $unit
	chown root.operator ses$unit
	chmod 640 ses$unit
d474 11
a484 9
ss*)
	unit=`trunc $i ss`
	rm -f ss$unit
	mknod ss$unit c 121 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
d487 8
a494 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 125 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
a496 4
local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
	;;
d502 31
@


1.69
log
@add an entry for ALTQ.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.68 2001/06/25 03:20:17 kjell Exp $
d199 1
a199 1
	sh $this std sd0 sd1 sd2 sd3 sd4 xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3
@


1.68
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.67 2001/06/24 23:36:09 kjell Exp $
d89 1
d212 1
a212 1
	sh $this xfs0
d736 13
@


1.67
log
@Add the pf device for the shiny new packet filter
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.66 2001/05/30 02:11:25 deraadt Exp $
d340 1
a340 1
	mknod pf c 73 0
@


1.66
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.65 2001/05/14 07:51:41 deraadt Exp $
d204 1
a204 1
	sh $this pty0 vnd0 vnd1 vnd2 vnd3 audio0 tun0 tun1 tun2 tun3
d336 7
@


1.65
log
@slight cleaning of rm -f calls
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.64 2001/04/10 03:03:53 brad Exp $
a88 1
#	ipl	IP filter log
a207 1
	sh $this ipl
a335 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 59 0
	mknod ipnat c 59 1
	mknod ipstate c 59 2
	mknod ipauth c 59 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.64
log
@keep naming of audio devices consistent across all archs that have audio
support.
--
Ok'd by: deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.63 2000/05/06 20:30:58 miod Exp $
d228 1
a228 1
	rm -f console drum mem kmem xf86 null zero io tty klog stdin stdout stderr ksyms
d231 2
a232 1
	mknod tty		c 2 0	; chmod 666 tty
a233 1
	mknod mem		c 3 0	; chmod 640 mem ; chown root.kmem mem
d236 1
a236 3
	mknod eeprom		c 3 11  ; chmod 640 eeprom ; chown root.kmem eeprom
	mknod openprom		c 70 0  ; chmod 644 openprom
	mknod drum		c 7 0	; chmod 640 drum ; chown root.kmem drum
d241 3
a248 1
	mknod ksyms		c 122 0  ; chmod 640 ksyms ; chown root.kmem ksyms
d307 1
a307 1
	rm -f $audio $sound $mixer $audioctl
d663 1
@


1.63
log
@Add the tape device nodes to the miniroot, for tape install, deraadt@@ ok
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.62 2000/03/22 07:34:30 niklas Exp $
d71 10
a80 10
#	audio	
#	openprom	
#	bwtwo*	
#	cgtwo*	
#	cgthree*	
#	cgfour*	
#	cgsix*	
#	cgeight*	
#	cgfourteen*	
#	tcx*	
d205 1
a205 1
	sh $this pty0 vnd0 vnd1 vnd2 vnd3 audio tun0 tun1 tun2 tun3
@


1.62
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.61 2000/02/21 08:22:08 mjacob Exp $
d223 1
a223 1
	sh $this fd0 sd0 sd1 sd2 sd3 rd0 cd0
@


1.61
log
@add SES device
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.60 1999/09/04 03:28:04 jason Exp $
a48 4
#	ch*	SCSI media changer
#	uk*	SCSI Unknown device
#	ses*	SCSI SES/SAF-TE device
#	ss*	SCSI scanners
d67 4
d525 1
a525 1
	chmod 640 $name$unit n$name$unit \
d540 1
a540 1
	chmod 640 $name$unit
@


1.60
log
@add entries for fga, scf, and flash
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.59 1999/08/20 17:00:37 downsj Exp $
d51 1
d204 1
d719 8
@


1.59
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.58 1999/07/18 17:07:48 deraadt Exp $
d662 36
@


1.58
log
@rf support; m4@@umn.edu
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.57 1999/05/26 21:56:13 jason Exp $
d560 2
a561 1
	chown uucp.wheel tty$unit
d575 2
a576 1
	chown uucp.wheel cua$unit
d630 2
a631 1
		chown uucp.wheel tty$name
d651 2
a652 1
		chown uucp.wheel tty$name
@


1.57
log
@create links for audio->audio0 and friends if they don't exist
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.56 1999/02/01 00:35:53 jason Exp $
d58 1
d205 1
d413 1
a413 1
ccd*|sd*|xd*|xy*|cd*)
d423 1
@


1.56
log
@add spif tty & bpp devices
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.55 1999/01/04 03:47:35 jason Exp $
d310 4
@


1.55
log
@clean up: remove the correct devices before trying to create them
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.54 1998/12/29 07:59:25 deraadt Exp $
d84 1
d605 20
@


1.54
log
@prepare for sparc bpp
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.53 1998/11/25 04:58:55 millert Exp $
d262 1
a262 1
	rm -f bwtwo$unit
d267 1
a267 1
	rm -f bwtwo$unit
d292 1
a292 1
	rm -f cgfourteen$unit
d486 1
a486 1
	rm -f rd${unit}*
@


1.53
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.52 1998/11/19 08:18:58 dugsong Exp $
d84 1
d625 5
@


1.52
log
@add support for more ptys
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.51 1998/10/16 16:50:16 marc Exp $
a573 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.51
log
@fix magma device generation; three cards supported
ttym*, ttyn*, and ttyo* plus bppm{unit}{0,1}
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.50 1998/09/28 06:16:30 todd Exp $
d576 11
d590 1
a590 1
	0|1|2|3|4)
@


1.50
log
@rm -f before creation
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.48 1998/09/21 23:15:53 deraadt Exp $
a595 19
	if [ 0$unit -gt 3 ]
	then
		echo "bad unit for $i: $unit"
		exit 127
	fi
	echo rm -f {tty,bpp}${unit}?
	offset=`expr $unit \* 64`
	n=0
	while [ $n -lt 16 ]
	do
		name=$unit`hex $n`
		mknod tty$name c 100 `add $offset $n`
		n=`add $n 1`
	done
	mknod bpp${unit}0 c 101 `add $offset 0`
	mknod bpp${unit}1 c 101 `add $offset 1`
	;;

magma*)
d597 3
a599 4
	0)	offset=0  nam=m;;
	1)	offset=16 nam=n;;
	2)	offset=32 nam=o;;
	3)	offset=48 nam=p;;
d602 1
a602 1
	echo rm -f bppm${unit}? tty${nam}?
d607 3
a609 2
		name=$unit`hex $n`
		echo mknod tty$name c 100 `add $offset $n`
d612 2
a613 2
	echo mknod bppm${unit} c 101 `add $offset 0`
	echo mknod bppm${unit} c 101 `add $offset 1`
@


1.49
log
@sync
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV.inc,v 1.48 1998/09/21 23:15:53 deraadt Exp $
d98 1
d256 1
d261 1
d266 1
d271 1
d276 1
d281 1
d286 1
d291 1
d485 1
@


1.48
log
@bpf on ramdisks
@
text
@d2 1
a2 2
#
#	$OpenBSD: MAKEDEV,v 1.47 1998/09/15 10:23:23 pattonme Exp $
d38 2
d42 1
d44 2
a45 1
#	st*	SCSI tape
d49 2
a50 2
#	ch*	SCSI changer
#	uk*	unknown SCSI
d55 1
a55 1
#	fd*	Floppies
d58 1
d61 1
d63 1
d67 1
d69 11
a79 11
#	audio
#	openprom
#	bwtwo*
#	cgtwo*
#	cgthree*
#	cgfour*
#	cgsix*
#	cgeight*
#	cgfourteen*
#	tcx*
#	bpf*	packet filter
d82 1
a82 1
#	*random	random data source
d84 2
d87 1
a87 1
PATH=/sbin:/bin/:/usr/bin:/usr/sbin:/usr/etc
d91 8
a98 2
case "$os" in # set os in the environment if not OpenBSD
SunOS) add ()
d109 7
a115 7
		[0-9]) echo $1;;
		10) echo a;;
		11) echo b;;
		12) echo c;;
		13) echo d;;
		14) echo e;;
		15) echo f;;
d122 1
a122 1
	unt ()
d126 5
a130 2
	 ;;
*) add ()
d132 7
a138 1
		echo "$(( $1 + $2 ))"
d147 1
a147 1
			[0-9]) echo -n $1 ;;
d164 1
a164 1
	unt ()
d169 13
a181 7
		if [ "${arg1#xy}" != "$arg1" ]
		then
			unt=${arg1#xy}
		else
			unt=${arg1#*d}
		fi
		echo ${unt%*[a-p]}
d183 1
a183 2
	 ;;
esac
d188 1
a188 1
unit=`expr $i : '[a-z][a-z]*\([0-9][0-9]*\)'`
d194 13
a206 12
	sh ${this} std sd0 sd1 sd2 sd3 sd4 xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3
	sh ${this} cd0 st0 st1 rd0
	sh ${this} fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	sh ${this} uk0 uk1
	sh ${this} ss0 ss1
	sh ${this} pty0 vnd0 vnd1 vnd2 vnd3 audio tun0 tun1 tun2 tun3
	sh ${this} ccd0 ccd1 ccd2 ccd3
	sh ${this} bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh ${this} ipl
	sh ${this} bwtwo0 cgtwo0 cgthree0 cgfour0 cgsix0
	sh ${this} cgeight0 cgfourteen0 tcx0
	sh ${this} lkm random local
d210 2
a211 2
	sh ${this} std random
	sh ${this} fd0 sd0 sd1
d215 3
a217 3
	sh ${this} std random
	sh ${this} fd0 sd0 sd1 sd2 sd3 rd0 cd0
	sh ${this} bpf0
d236 2
a237 2
	sh ${this} ttya ttyb ttyc ttyd
	sh ${this} cuaa cuab cuac cuad
d287 1
a287 1
	unit=${i#audio}
a290 1
	major=69
a291 1
	if [ "$unit" = "" ]; then unit=0; fi
d293 5
a297 5
	mknod $sound    c $major $(($unit + 0))
	mknod $audio    c $major $(($unit + 128))
	mknod $mixer    c $major $(($unit + 16))
	mknod $audioctl c $major $(($unit + 192))
	chown root.wheel $audio $sound $mixer $audioctl
d301 7
d309 2
a310 1
	mknod openprom		c 70 0; chmod 600 openprom
d313 1
d417 1
a417 1
			sh ${this} $name$n
d454 1
a454 1
				sh ${this} $name$n
@


1.47
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.46 1998/08/26 20:51:03 deraadt Exp $
d187 1
@


1.46
log
@rm before mknod
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.45 1998/08/24 05:30:03 millert Exp $
d284 1
a284 1
	rm -f ipl ipnat ipstate 
d288 2
a289 1
	chown root.wheel ipl ipnat ipstate 
@


1.45
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.44 1998/07/21 22:43:03 marc Exp $
d190 2
@


1.44
log
@make cua{a,b,c,d} nodes when generating standard devs
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.43 1998/05/20 23:37:25 deraadt Exp $
d208 1
@


1.43
log
@magma; plunky@@skate.demon.co.uk
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.42 1998/05/05 21:52:06 deraadt Exp $
d60 1
d204 1
@


1.42
log
@split sysctl.conf into MD and MI parts
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.41 1998/04/30 06:12:51 jason Exp $
d75 1
a75 1
#	magma*	magma card (makes 16 mtty and 2 mbpp)
d539 19
@


1.41
log
@Updated sparc audio
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.40 1998/03/24 19:32:48 marc Exp $
d75 1
d539 21
@


1.40
log
@Make floppy device names match the pattern <device name><number><sub-class>
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.39 1998/03/02 14:32:26 jason Exp $
d249 15
a263 2
audio)
	mknod audio		c 69 0; chmod 666 audio
@


1.39
log
@But only if explicitly asked for (until zs code is finialized)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.38 1998/03/02 14:20:32 jason Exp $
d165 1
a165 1
	sh ${this} fd0 fdB0 fdC0 fdD0 fdE0 fdF0 fdG0 fdH0
d280 2
a281 2
	umask 2 ; unit=`expr $i : 'fd.*\(.\)$'`
	typnam=`expr $i : 'fd\(.\).*'`
d298 1
a298 1
	nam=fd${typnam}$unit
@


1.38
log
@add cua devices for tty[a-d]
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.37 1998/03/02 05:12:20 todd Exp $
d483 13
d497 1
a497 1
	chown uucp.wheel tty$unit cua$unit
@


1.37
log
@allow cmdline creation of ttya-d on sparc
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.36 1998/02/23 05:29:17 jason Exp $
d58 2
a59 1
# Call units:
d483 2
a484 1
	chown uucp.wheel tty$unit
@


1.36
log
@add entries for 4/300 extra serial ports
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.35 1998/01/26 04:19:49 dgregor Exp $
d200 1
a200 4
	mknod ttya		c 12 0
	mknod ttyb		c 12 1
	mknod ttyc		c 12 4
	mknod ttyd		c 12 5
d469 14
@


1.35
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.34 1997/12/08 21:27:43 mickey Exp $
d202 2
@


1.34
log
@fix chN (N > 0) problem
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.33 1997/09/16 03:03:03 deraadt Exp $
d265 1
a265 1
	rm -f ipl
d267 3
a269 1
	chown root.wheel ipl
@


1.33
log
@fix bpf nodes; someone should make sure 0-9 are on all, and rm them nicely
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.32 1997/09/07 20:29:15 dgregor Exp $
d457 1
a457 2
	sixt=`mult $unit 16`
	mknod $name$unit	c $chr `add $sixt 0`
@


1.32
log
@In pty* rule:\n	Change 'rm -rf' to 'rm -f'\n	Fix {pty,tty}$n -> {pty,tty}$nam
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.31 1997/08/24 22:44:08 deraadt Exp $
d169 1
a169 1
	sh ${this} bpf0 bpf1 bpf2 bpf3
@


1.31
log
@cgfour* matches cgfourteen*, duh
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.30 1997/08/08 09:43:02 downsj Exp $
d488 1
a488 1
                        rm -rf {tty,pty}$n
@


1.30
log
@Add cgtwo, cgfourteen, tcx.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.29 1997/06/06 09:53:52 grr Exp $
d229 1
a229 1
cgfour*)
@


1.29
log
@add sd2 sd3 to ramdisk devices, impossible to install on some multi-drive confiurations otherwise.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.28 1997/05/14 15:41:21 niklas Exp $
d42 1
a42 1
#	st*	? tape
a45 1
#	st*	SCSI tape
d63 1
d68 2
d171 2
a172 2
	sh ${this} bwtwo0 cgthree0 cgfour0 cgsix0
	sh ${this} cgeight0
d221 4
d239 8
@


1.28
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.27 1997/05/14 00:11:07 deraadt Exp $
d181 1
a181 1
	sh ${this} fd0 sd0 sd1 rd0 cd0
@


1.27
log
@created ramdisk and rd
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.26 1997/05/13 05:34:58 millert Exp $
d322 1
a322 1
ccd*|sd*|xd*|xy*|cd*|vnd*)
a335 1
	vnd*) name=vnd; blk=8; chr=110;;
d359 38
@


1.26
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.25 1997/05/06 19:42:41 niklas Exp $
d51 1
d161 1
a161 1
	sh ${this} cd0 st0 st1
d179 5
d363 10
@


1.25
log
@Remove possibly existing ipl node, before recreating it
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.24 1997/05/06 19:11:38 kstailey Exp $
d463 1
a463 1
	sh ${this}.local
@


1.24
log
@reactivate ipl
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.23 1997/05/05 22:17:45 grr Exp $
d245 1
@


1.23
log
@fix sparc MAKEDEV to match cdevsw[] for pseudo-ttys, scsi scanner and unknown SCSI devices.  Comment out ipl, which doesn't seem to be in cdevsw.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.22 1997/04/30 08:17:56 grr Exp $
d167 1
a167 1
#	sh ${this} ipl
d244 4
a247 4
#ipl)
#	mknod ipl c 59 0
#	chown root.wheel ipl
#	;;
@


1.22
log
@fix assorted problems with miniroot stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.21 1997/04/29 17:26:28 niklas Exp $
d166 3
a168 1
	sh ${this} bpf0 bpf1 bpf2 bpf3 ipl bwtwo0 cgthree0 cgfour0 cgsix0
d244 4
a247 4
ipl)
	mknod ipl c 59 0
	chown root.wheel ipl
	;;
d421 2
a422 2
                        mknod tty$nam c 5 `add $offset $n`
                        mknod pty$nam c 6 `add $offset $n`
d444 1
a444 1
	mknod uk$unit c 98 $unit
d452 1
a452 1
	mknod ss$unit c 99 $unit
@


1.21
log
@Fix syntax problems, workaround sh bugs
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.19 1997/04/22 07:43:50 todd Exp $
d340 1
a340 1
	minor=`mult $unit 8`
d345 1
a345 1
		mknod r$dev b $chr $minor
@


1.20
log
@correcting a bad mistake I made
@
text
@d118 6
a123 1
        		1[0-5]) echo -e -n "\\$(( $1 + 131 ))" ;;
d128 5
a132 1
		echo ${1#$2}
d136 4
a139 1
		if [ "${1#xy}" -ne "$1" ]
d141 1
a141 1
			unt=${1#xy}
d143 1
a143 1
			unt=${1#*d}
@


1.19
log
@removed uname requirement; if not OpenBSD execute with 'os=`uname -s`' as
an environment variable
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.18 1997/04/22 07:05:12 todd Exp $
d106 1
a106 1
OpenBSD) add ()
@


1.18
log
@namespace polution bug fixed
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 1997/04/22 06:34:33 todd Exp $
d76 2
a77 2
case `uname -s` in
SunOS|*) add ()
a411 3
		if [ $unit = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
@


1.17
log
@SunOS compatibility fixes
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1997/04/22 05:28:56 todd Exp $
d77 1
a77 1
SunOS) add ()
d304 1
a304 1
	if [ $unit -gt 15 ]
d405 1
a405 1
                        n=$name`hex $n`
d407 2
a408 2
                        mknod tty$n c 5 `add $offset $n`
                        mknod pty$n c 6 `add $offset $n`
@


1.16
log
@This MAKEDEV no longer requires awk.
It almost is free of expr but will require more work.
PLEASE let me know if this changes anything ASAP!
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1997/04/13 20:08:19 deraadt Exp $
d73 1
d87 13
a99 1
		printf "%x" $1
d103 1
a103 1
		expr $1 : '.[yd]\(.*\)[a-p]'
d121 4
d147 10
a156 10
	sh MAKEDEV std sd0 sd1 sd2 sd3 sd4 xd0 xd1 xd2 xd3 xy0 xy1 xy2 xy3
	sh MAKEDEV cd0 st0 st1
	sh MAKEDEV fd0 fdB0 fdC0 fdD0 fdE0 fdF0 fdG0 fdH0
	sh MAKEDEV uk0 uk1
	sh MAKEDEV ss0 ss1
	sh MAKEDEV pty0 vnd0 vnd1 vnd2 vnd3 audio tun0 tun1 tun2 tun3
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 ipl bwtwo0 cgthree0 cgfour0 cgsix0
	sh MAKEDEV cgeight0
	sh MAKEDEV lkm random local
d160 2
a161 2
	sh MAKEDEV std random
	sh MAKEDEV fd0 sd0 sd1
d323 1
a323 1
			sh MAKEDEV $name$n
d431 1
a431 1
	unit=${i#uk}
d439 1
a439 1
	unit=${i#ss}
d451 1
a451 1
	sh MAKEDEV.local
@


1.15
log
@floppy needs random
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 1997/03/28 20:10:35 deraadt Exp $
d75 46
d171 2
a172 3
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 24 %d;", i, i)}'`)
d244 1
a244 1
	nam=fd${typnam}${unit}
d286 6
d299 1
d301 21
a321 43
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|\
	17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)
		rm -f ${name}${unit}[a-p] r${name}${unit}[a-p]
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
d332 10
a341 9
	mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
	mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
	mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
	mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
	mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
	mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
	mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
	chown root.operator ${name}${unit} n${name}${unit} \
d343 3
a345 3
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
	chmod 640 ${name}${unit} n${name}${unit} \
d347 2
a348 2
		r${name}${unit} nr${name}${unit} \
		er${name}${unit} enr${name}${unit} 
d358 4
a361 3
	mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
	chown root.operator ${name}${unit}
	chmod 640 ${name}${unit}
d385 9
a393 5
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("mknod tty%s%x c 20 %d;" \
					"mknod pty%s%x c 21 %d; ", \
					n, i, b+i, n, i, b+i); }'`
d414 1
a414 1
	unit=`expr $i : 'uk\(.*\)'`
d422 1
a422 1
	unit=`expr $i : 'ss\(.*\)'`
@


1.14
log
@split std into std/fd; add floppy target
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 1996/12/14 18:24:02 millert Exp $
d97 1
a97 1
	sh MAKEDEV std
@


1.13
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.12 1996/12/06 10:49:47 deraadt Exp $
d95 6
d115 9
a130 6

	mknod ttya		c 12 0
	mknod ttyb		c 12 1
	mknod fb		c 22 0 ; chmod 666 fb
	mknod mouse		c 13 0 ; chmod 666 mouse
	mknod kbd		c 29 0 ; chmod 666 kbd
@


1.12
log
@make other floppy nodes
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 1996/11/11 23:30:25 kstailey Exp $
d113 1
a113 1
	chown -R bin.bin fd
@


1.11
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 1996/11/06 01:34:02 deraadt Exp $
d85 2
a86 1
	sh MAKEDEV cd0 st0 st1 fd0
@


1.10
log
@give floppies real partitions
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/09/18 22:03:47 deraadt Exp $
d48 2
d86 2
d365 19
@


1.9
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1996/09/12 05:07:52 downsj Exp $
d166 60
a225 1
ccd*|fd*|sd*|xd*|xy*|cd*|vnd*)
a228 1
	fd*) name=fd; blk=16; chr=54;;
@


1.8
log
@Support 16 partitions.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 1996/08/28 08:55:28 deraadt Exp $
d93 2
a94 2
	mknod kmem		c 3 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 3 0	; chmod 640 mem ; chgrp kmem mem
d97 1
a97 1
	mknod eeprom		c 3 11  ; chmod 640 eeprom ; chgrp kmem eeprom
d99 1
a99 1
	mknod drum		c 7 0	; chmod 640 drum ; chgrp kmem drum
d213 1
a213 1
		chgrp operator ${name}${unit}[a-p] r${name}${unit}[a-p]
d238 1
a238 1
	chgrp operator ${name}${unit} n${name}${unit} \
d256 1
a256 1
	chgrp operator ${name}${unit}
@


1.7
log
@fix all random device node entry stuff
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.6 1996/07/23 06:33:00 etheisen Exp $
d180 35
a214 19
		rm -f ${name}${unit}[a-h] r${name}${unit}[a-h]
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.6
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d68 1
a68 1
#	*rnd	random data source
d88 1
a88 1
	sh MAKEDEV lkm rnd local
d278 9
a286 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 119 0
	mknod srnd c 119 1
	mknod urnd c 119 2
	mknod prnd c 119 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.5
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 2
@


1.4
log
@ad rnd devices.
@
text
@d265 2
a266 2
				printf("mknod tty%s%x c 20 %d; \
					mknod pty%s%x c 21 %d; ", \
@


1.3
log
@created devices for the IP filter log on all architectures
@
text
@d66 1
d86 1
a86 1
	sh MAKEDEV lkm local
d274 10
@


1.2
log
@update from NetBSD
@
text
@d83 1
a83 1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bwtwo0 cgthree0 cgfour0 cgsix0
d149 5
@


1.1
log
@Initial revision
@
text
@d158 1
a158 10
vnd*)
	name=vnd; blk=8; chr=110
	rm -f ${name}${unit}c r${name}${unit}c
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	chgrp operator ${name}${unit}c r${name}${unit}c
	chmod 640 ${name}${unit}c r${name}${unit}c
	;;

ccd*|fd*|sd*|xd*|xy*)
d166 2
d172 1
a233 15
	umask 77
	;;

cd*)
	umask 2
	case $i in
	cd*) name=cd; blk=18; chr=58;;
	esac
	rm -f $name$unit? r$name$unit?
	mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
	mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
	mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
	mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
	chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
	chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

