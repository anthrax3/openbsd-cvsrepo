head	1.17;
access;
symbols
	OPENBSD_2_9:1.16.0.14
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_8:1.16.0.12
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.16.0.10
	OPENBSD_2_7_BASE:1.16
	OPENBSD_2_6:1.16.0.8
	OPENBSD_2_6_BASE:1.16
	OPENBSD_2_5:1.16.0.6
	OPENBSD_2_5_BASE:1.16
	OPENBSD_2_4:1.16.0.4
	OPENBSD_2_4_BASE:1.16
	OPENBSD_2_3:1.16.0.2
	OPENBSD_2_3_BASE:1.16
	OPENBSD_2_2:1.12.0.2
	OPENBSD_2_2_BASE:1.12
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7;
locks; strict;
comment	@# @;


1.17
date	2001.06.24.23.47.40;	author deraadt;	state dead;
branches;
next	1.16;

1.16
date	98.04.08.18.39.30;	author maja;	state Exp;
branches;
next	1.15;

1.15
date	98.04.02.19.57.29;	author maja;	state Exp;
branches;
next	1.14;

1.14
date	98.03.19.15.21.51;	author graichen;	state Exp;
branches;
next	1.13;

1.13
date	98.03.18.10.45.05;	author graichen;	state Exp;
branches;
next	1.12;

1.12
date	97.10.06.17.56.22;	author maja;	state Exp;
branches;
next	1.11;

1.11
date	97.09.26.21.45.17;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.09.26.21.39.25;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	97.09.21.11.50.34;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.09.18.17.17.39;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.05.14.07.37.08;	author graichen;	state Exp;
branches;
next	1.6;

1.6
date	97.05.13.14.32.39;	author graichen;	state Exp;
branches;
next	1.5;

1.5
date	97.05.13.14.30.37;	author graichen;	state Exp;
branches;
next	1.4;

1.4
date	97.05.10.22.38.20;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.05.05.07.54.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.01.21.12.02.57;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	97.01.19.22.29.15;	author graichen;	state Exp;
branches;
next	;


desc
@@


1.17
log
@bye bye
@
text
@#	$OpenBSD: Makefile.inc,v 1.16 1998/04/08 18:39:30 maja Exp $
#	etc.pmax/Makefile.inc -- pmax-specific etc Makefile targets

.ifdef DESTDIR

snap_md: binutils bsd bsd.nfs bsd.rz0 distrib

binutils:
	cd ${DESTDIR} && tar cf - usr/*openbsd* \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.binutils.tar${GZIPEXT}

bsd:
	cd ${.CURDIR}/../sys/arch/pmax/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/pmax/compile/GENERIC && \
	    make clean && make depend && make
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC/bsd \
	    ${DESTDIR}/snapshot/bsd
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC/bsd \
	    ${DESTDIR}/bsd

bsd.nfs:
	cd ${.CURDIR}/../sys/arch/pmax/conf && config GENERIC.NFS
	cd ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.NFS && \
	    make clean && make depend && make
	elf2ecoff ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.NFS/bsd.elf \
	    ${DESTDIR}/snapshot/bsd.nfs
	elf2ecoff ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.NFS/bsd.elf \
	    ${DESTDIR}/bsd.nfs

bsd.rz0:
	cd ${.CURDIR}/../sys/arch/pmax/conf && config GENERIC.rz0
	cd ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.rz0 && \
	    make clean && make depend && make
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.rz0/bsd \
	    ${DESTDIR}/snapshot/bsd.rz0
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.rz0/bsd \
	    ${DESTDIR}/bsd.rz0

distrib:
	cd ${.CURDIR}/../distrib && make cleandir && \
	    make && make install

.endif	# DESTDIR check
@


1.16
log
@ugly hack to get kernels in simpleroot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 1998/04/02 19:57:29 maja Exp $
@


1.15
log
@uudecode and install bootblocks -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 1998/03/19 15:21:51 graichen Exp $
d18 2
d27 2
d36 2
@


1.14
log
@undo ugly booblock hack - it was too ugly
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 1998/03/18 10:45:05 graichen Exp $
d6 1
a6 1
snap_md: binutils bsd bsd.nfs bsd.rz0 bootblocks distrib
@


1.13
log
@ugly workaround for the pmax bootblock problem
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 1997/10/06 17:56:22 maja Exp $
a31 5

# XXX this is an really ugly hack until the bootblock source will
# compile again - or even better: someone writes it new
bootblocks:
	cp /usr/mdec/rzboot /usr/mdec/bootrz ${DESTDIR}/usr/mdec
@


1.12
log
@Don't try to do elf2ecoff on bsd (it's a.out) use bsd.elf instead. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 1997/09/26 21:45:17 deraadt Exp $
d6 1
a6 1
snap_md: binutils bsd bsd.nfs bsd.rz0 distrib
d32 5
@


1.11
log
@oops
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 1997/09/26 21:39:25 maja Exp $
d23 1
a23 1
	elf2ecoff ${.CURDIR}/../sys/arch/pmax/compile/GENERIC.NFS/bsd \
@


1.10
log
@snap_md: arch is pmax not sparc. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 1997/09/21 11:50:34 deraadt Exp $
d6 1
a6 3
snap_md: binutils bsd distrib
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC/bsd \
	    ${DESTDIR}/snapshot/bsd
@


1.9
log
@$OpenBSD
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
a7 1
	cp ${.CURDIR}/../sys/arch/sparc/compile/GENERIC/bsd \
@


1.8
log
@for architectures which go into src/distrib automatically, start at the
top level there...
@
text
@d1 1
a1 1
#
a2 2
#
#	$Id: Makefile.inc,v 1.7 1997/05/14 07:37:08 graichen Exp $
@


1.7
log
@for consistency: change kernel config file name from GENERIC_xxx to
GENERIC.xxx too and adapt etc.pmax/Makefile.inc to reflect the new
compile dir names
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.6 1997/05/13 14:32:39 graichen Exp $
d8 1
a8 1
snap_md: binutils bsd simpleroot
d37 2
a38 2
simpleroot:
	cd ${.CURDIR}/../distrib/simpleroot && make cleandir && \
@


1.6
log
@use elf2ecoff instead of cp for bsd.nfs
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.5 1997/05/13 14:30:37 graichen Exp $
d24 2
a25 2
	cd ${.CURDIR}/../sys/arch/pmax/conf && config GENERIC_NFS
	cd ${.CURDIR}/../sys/arch/pmax/compile/GENERIC_NFS && \
d27 1
a27 1
	elf2ecoff ${.CURDIR}/../sys/arch/pmax/compile/GENERIC_NFS/bsd \
d31 2
a32 2
	cd ${.CURDIR}/../sys/arch/pmax/conf && config GENERIC_rz0
	cd ${.CURDIR}/../sys/arch/pmax/compile/GENERIC_rz0 && \
d34 1
a34 1
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC_rz0/bsd \
@


1.5
log
@also build the other two kernels: bsd.nfs and bsd.rz0
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.4 1997/05/10 22:38:20 deraadt Exp $
d27 1
a27 1
	cp ${.CURDIR}/../sys/arch/pmax/compile/GENERIC_NFS/bsd \
@


1.4
log
@build simpleroot
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.3 1997/05/05 07:54:55 deraadt Exp $
d22 14
@


1.3
log
@put a kernel in the snap & release
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.2 1997/01/21 12:02:57 graichen Exp $
d8 1
a8 1
snap_md: binutils bsd
d22 4
@


1.2
log
@changing SNAP_GZIP_CMD to GZIP + GZIPEXT etc.
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.1 1997/01/19 22:29:15 graichen Exp $
d9 2
@


1.1
log
@add Makefile.inc for tar'ing also the binutils tree (/usr/*-openbsd-*)
then making a snapshot - also add a target for creating and copying
the GENERIC kernel
@
text
@d4 1
a4 1
#	$Id: Makefile.inc,v 1.3 1996/06/11 10:20:33 deraadt Exp $
d12 1
a12 1
	    | ${SNAP_GZIP_CMD} > snapshot/usr.binutils.tar${SNAP_GZIP_EXT}
a18 21
	    ${DESTDIR}/snapshot/bsd

.endif	# DESTDIR check
#
#	etc.alpha/Makefile.inc -- alpha-specific etc Makefile targets
#
#	$Id: Makefile.inc,v 1.3 1996/06/11 10:20:33 deraadt Exp $

.ifdef DESTDIR
# XXX - bsd will come then we have a GENERIC kernel
snap_md: binutils

binutils:
	cd ${DESTDIR} && tar cf - usr/*openbsd* \
	    | ${SNAP_GZIP_CMD} > snapshot/usr.binutils.tar${SNAP_GZIP_EXT}

bsd:
	cd ${.CURDIR}/../sys/arch/alpha/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/alpha/compile/GENERIC && \
	    make clean && make depend && make
	cp ${.CURDIR}/../sys/arch/alpha/compile/GENERIC/bsd \
@

