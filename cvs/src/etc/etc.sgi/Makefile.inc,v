head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.6
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.16.0.16
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.8
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.12
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.10
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.6
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.4
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.4
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.12.0.2
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.18
date	2015.12.27.16.31.08;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	U0bA7BIph3cgPpCH;

1.17
date	2015.09.20.12.55.11;	author miod;	state Exp;
branches;
next	1.16;
commitid	zlXl1mQ2gPmUr0g0;

1.16
date	2012.05.25.17.32.38;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2012.03.29.20.27.53;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2011.07.22.09.30.54;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2011.04.15.03.11.38;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2011.01.14.17.18.50;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2010.08.17.19.17.14;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2010.01.19.19.55.53;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.06.23.59.18;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.30.04.01.29;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.14.21.16.40;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2009.04.21.09.12.27;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.27.02.53.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.24.18.11.47;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.06.22.57.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.21.58.22;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.18
log
@welcome GENERIC.IP27 MP (dual cpu on O350 now)
ok visa
@
text
@#	$OpenBSD: Makefile.inc,v 1.17 2015/09/20 12:55:11 miod Exp $

ALLIP=	22 26 27 28 30 32
KERNELS=
MDEXT=

.for IP in ${ALLIP}
KERNELS+=	GENERIC-IP${IP} bsd.IP${IP}
MDEXT+=		bsd.rd.IP${IP}
.endfor
KERNELS+=	GENERIC-IP30.MP bsd.mp.IP30
KERNELS+=	GENERIC-IP27.MP bsd.mp.IP27

bootblocks:
	cp ${DESTDIR}/usr/mdec/boot32 ${RELEASEDIR}
	cp ${DESTDIR}/usr/mdec/boot64 ${RELEASEDIR}
	cp ${DESTDIR}/usr/mdec/bootecoff ${RELEASEDIR}

MDEXT+=	boot32 boot64 bootecoff cd${OSrev}.iso
@


1.17
log
@Enable IP26 builds.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 2012/05/25 17:32:38 miod Exp $
d12 1
@


1.16
log
@Hook sgi IP28 kernels into the build. While there, update the iso images to
provide IP22 and IP28 kernels, as well as the ECOFF bootblock.

No objection from deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 2012/03/29 20:27:53 miod Exp $
d3 1
a3 1
ALLIP=	22 27 28 30 32
@


1.15
log
@Hook IP22 kernels to the build, and document how to boot the installation
media on them. Try to be helpful and explain how things may fail on the
older PROM and what to do about this.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2011/07/22 09:30:54 espie Exp $
d3 9
a11 6
KERNELS = \
	GENERIC-IP22 bsd.IP22 \
	GENERIC-IP27 bsd.IP27 \
	GENERIC-IP30 bsd.IP30 \
	GENERIC-IP30.MP bsd.mp.IP30 \
	GENERIC-IP32 bsd.IP32
d18 1
a18 2
MDEXT=	bsd.rd.IP22 bsd.rd.IP27 bsd.rd.IP30 bsd.rd.IP32 \
	boot32 boot64 bootecoff cd${OSrev}.iso
@


1.14
log
@unify kernel building on various platforms.
feedback from miod@@ and deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2011/04/15 03:11:38 deraadt Exp $
d3 6
a8 2
KERNELS = GENERIC-IP27 bsd.IP27 GENERIC-IP30 bsd.IP30 \
	GENERIC-IP30.MP bsd.mp.IP30 GENERIC-IP32 bsd.IP32
d13 1
d15 2
a16 2
MDEXT=	bsd.rd.IP27 bsd.rd.IP30 bsd.rd.IP32 \
	boot32 boot64 cd${OSrev}.iso
@


1.13
log
@No need to make depend kernels
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2011/01/14 17:18:50 deraadt Exp $
d3 2
a4 23
kernels: bsd bootblocks
	cp ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP27/bsd \
	    ${RELEASEDIR}/bsd.IP27
	cp ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP30/bsd \
	    ${RELEASEDIR}/bsd.IP30
	cp ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP30.MP/bsd \
	    ${RELEASEDIR}/bsd.mp.IP30
	cp ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP32/bsd \
	    ${RELEASEDIR}/bsd.IP32

bsd:
	cd ${.CURDIR}/../sys/arch/sgi/conf && config GENERIC-IP27
	cd ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP27 && \
	    ${MAKE} clean && exec ${MAKE}
	cd ${.CURDIR}/../sys/arch/sgi/conf && config GENERIC-IP30
	cd ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP30 && \
	    ${MAKE} clean && exec ${MAKE}
	cd ${.CURDIR}/../sys/arch/sgi/conf && config GENERIC-IP30.MP
	cd ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP30.MP && \
	    ${MAKE} clean && exec ${MAKE}
	cd ${.CURDIR}/../sys/arch/sgi/conf && config GENERIC-IP32
	cd ${.CURDIR}/../sys/arch/sgi/compile/GENERIC-IP32 && \
	    ${MAKE} clean && exec ${MAKE}
d10 1
a10 2
MDEXT=	bsd.IP27 bsd.rd.IP27 bsd.IP30 bsd.mp.IP30 bsd.rd.IP30 \
	bsd.IP32 bsd.rd.IP32 \
a11 2

.PHONY: bsd bootblocks
@


1.12
log
@We should not sum the install*.iso file, since it is not created at build
time.  We've been summing the one from the previous build (then additional
goo I run has been cleaning it up..)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2010/08/17 19:17:14 deraadt Exp $
d16 1
a16 1
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
d19 1
a19 1
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
d22 1
a22 1
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
d25 1
a25 1
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
@


1.11
log
@MDEXT missed some files (result was they are not listed in the build-time
SHA256 file).  Issue spotted by claudio.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2010/01/19 19:55:53 miod Exp $
d33 1
a33 1
	boot32 boot64 cd${OSrev}.iso install${OSrev}.iso
@


1.10
log
@Build GENERIC-IP30.MP as bsd.mp.IP30 in the distribution, and allow the
installer to pick it and install it as /bsd when applicable.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2009/10/06 23:59:18 deraadt Exp $
d33 1
a33 1
	boot32 boot64 cd${OSrev}.iso
@


1.9
log
@Be nice if we have bootblocks available, too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2009/05/30 04:01:29 miod Exp $
d8 2
d20 3
d31 2
a32 1
MDEXT=	bsd.IP27 bsd.rd.IP27 bsd.IP30 bsd.rd.IP30 bsd.IP32 bsd.rd.IP32 \
@


1.8
log
@Build IP27 and IP30 kernels on sgi; put then on the cdrom images too
(although for now our cd images fail to boot on IP27 and IP30).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2009/05/14 21:16:40 miod Exp $
d3 1
a3 1
kernels: bsd
d22 4
d27 1
a27 1
	cd${OSrev}.iso
d29 1
a29 1
.PHONY: bsd
@


1.7
log
@Rename sgi GENERIC and RAMDISK with -IP32 suffixes, and have the build
machinery minimally cope with this.

Discussed with and reluctantely accepted by deraadt@@; we both dislike
losing the ``naturally comes out of your fingers'' kernel names and the
``one size fits all'' logic; but for now I don't see any easy way to
get a single kernel binary able to run on multiple IP## flavours.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2009/04/21 09:12:27 deraadt Exp $
d4 4
d9 1
a9 1
	    ${RELEASEDIR}/bsd
d12 6
d22 2
a23 1
MDEXT=	bsd bsd.rd cd${OSrev}.iso
@


1.6
log
@move bsd and bsd.rd and all such other MD "sets" into the MD files,
since we perhaps cannot assume that is what kernels will be in the
pathetically stupid world that SGI created
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2009/04/17 03:58:54 deraadt Exp $
d4 1
a4 1
	cp ${.CURDIR}/../sys/arch/sgi/compile/GENERIC/bsd \
d8 2
a9 2
	cd ${.CURDIR}/../sys/arch/sgi/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/sgi/compile/GENERIC && \
@


1.5
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2006/07/27 02:53:55 deraadt Exp $
d12 1
a12 1
MDEXT=	
a14 1

@


1.4
log
@unify these damnit!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2006/07/24 18:11:47 deraadt Exp $
d3 1
a3 2
.ifdef DESTDIR
snap_md: bsd bootblocks distrib
d5 1
a5 1
	    ${DESTDIR}/snapshot/bsd
d12 1
a12 2
bootblocks:
	#none needed
d14 1
a14 1
.PHONY: bsd bootblocks
a15 1
.endif	# DESTDIR check
@


1.3
log
@do a make depend phase
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile.inc,v 1.2 2004/08/06 22:57:14 deraadt Exp $
#	etc.sgi/Makefile.inc -- sgi-specific etc Makefile targets
d4 1
a4 2

snap_md: bsd distrib1
d13 2
a14 2
distrib1:
	${MAKE} distrib
d16 1
a16 1
.PHONY: bsd distrib1
d18 1
a18 1
.endif
@


1.2
log
@it is not called sgimips
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2004/08/06 21:58:22 pefo Exp $
d13 1
a13 1
	    make clean && make
@


1.1
log
@sgi going in.
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile.inc,v 1.5 1997/09/21 11:50:17 deraadt Exp $
#	etc.sgimips/Makefile.inc -- sgimips-specific etc Makefile targets
d7 1
a7 1
	cp ${.CURDIR}/../sys/arch/sgimips/compile/GENERIC/bsd \
d11 2
a12 2
	cd ${.CURDIR}/../sys/arch/sgimips/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/sgimips/compile/GENERIC && \
@

