head	1.95;
access;
symbols
	OPENBSD_6_1:1.95.0.4
	OPENBSD_6_1_BASE:1.95
	OPENBSD_6_0:1.90.0.4
	OPENBSD_6_0_BASE:1.90
	OPENBSD_5_9:1.85.0.2
	OPENBSD_5_9_BASE:1.85
	OPENBSD_5_8:1.82.0.6
	OPENBSD_5_8_BASE:1.82
	OPENBSD_5_7:1.82.0.2
	OPENBSD_5_7_BASE:1.82
	OPENBSD_5_6:1.79.0.4
	OPENBSD_5_6_BASE:1.79
	OPENBSD_5_5:1.78.0.4
	OPENBSD_5_5_BASE:1.78
	OPENBSD_5_4:1.72.0.2
	OPENBSD_5_4_BASE:1.72
	OPENBSD_5_3:1.67.0.2
	OPENBSD_5_3_BASE:1.67
	OPENBSD_5_2:1.64.0.2
	OPENBSD_5_2_BASE:1.64
	OPENBSD_5_1_BASE:1.62
	OPENBSD_5_1:1.62.0.2
	OPENBSD_5_0:1.60.0.2
	OPENBSD_5_0_BASE:1.60
	OPENBSD_4_9:1.58.0.2
	OPENBSD_4_9_BASE:1.58
	OPENBSD_4_8:1.55.0.2
	OPENBSD_4_8_BASE:1.55
	OPENBSD_4_7:1.48.0.2
	OPENBSD_4_7_BASE:1.48
	OPENBSD_4_6:1.45.0.4
	OPENBSD_4_6_BASE:1.45
	OPENBSD_4_5:1.41.0.2
	OPENBSD_4_5_BASE:1.41
	OPENBSD_4_4:1.36.0.2
	OPENBSD_4_4_BASE:1.36
	OPENBSD_4_3:1.32.0.4
	OPENBSD_4_3_BASE:1.32
	OPENBSD_4_2:1.32.0.2
	OPENBSD_4_2_BASE:1.32
	OPENBSD_4_1:1.28.0.2
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.25.0.2
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.23.0.2
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.18.0.2
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7;
locks; strict;
comment	@# @;


1.95
date	2016.09.11.19.59.58;	author deraadt;	state Exp;
branches;
next	1.94;
commitid	nE2mDEOBdUs9pcWt;

1.94
date	2016.09.11.03.09.31;	author deraadt;	state Exp;
branches;
next	1.93;
commitid	5bdWa87DXO6wfavj;

1.93
date	2016.09.08.20.41.30;	author ratchov;	state Exp;
branches;
next	1.92;
commitid	OYpPi53fdbnV5gsb;

1.92
date	2016.09.04.15.39.53;	author naddy;	state Exp;
branches;
next	1.91;
commitid	zStW2v519TMXvpgu;

1.91
date	2016.09.02.17.29.01;	author goda;	state Exp;
branches;
next	1.90;
commitid	jpWYiBSH0Zb5ggN1;

1.90
date	2016.05.21.21.35.52;	author deraadt;	state Exp;
branches;
next	1.89;
commitid	VqgBnfl5n3M9BSSw;

1.89
date	2016.05.21.15.18.50;	author deraadt;	state Exp;
branches;
next	1.88;
commitid	63AnsVd02uEVSedF;

1.88
date	2016.04.28.18.17.31;	author natano;	state Exp;
branches;
next	1.87;
commitid	yJ7nITWQGOm5qxNW;

1.87
date	2016.04.25.20.38.35;	author tedu;	state Exp;
branches;
next	1.86;
commitid	0kiqbjPHHvQxOXM9;

1.86
date	2016.03.12.18.02.18;	author espie;	state Exp;
branches;
next	1.85;
commitid	OOHlYIifEE4gewlK;

1.85
date	2015.11.10.21.50.02;	author sthen;	state Exp;
branches;
next	1.84;
commitid	cbpQoyIQoLnKxXlo;

1.84
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.83;
commitid	xjeR06qiavDtFv9k;

1.83
date	2015.10.23.15.14.47;	author claudio;	state Exp;
branches;
next	1.82;
commitid	D8oDiiCrSjVktjLG;

1.82
date	2014.12.11.19.48.39;	author tedu;	state Exp;
branches;
next	1.81;
commitid	2Qyj7V6Rmn8q72sA;

1.81
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.80;
commitid	M66ALjcyb37tQVMc;

1.80
date	2014.08.20.11.23.41;	author mikeb;	state Exp;
branches;
next	1.79;
commitid	vzc4wz1s3pDevb7K;

1.79
date	2014.07.11.22.04.52;	author tedu;	state Exp;
branches;
next	1.78;
commitid	xQhhmJP574n3YeP9;

1.78
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.77;

1.77
date	2013.11.21.11.06.09;	author kettenis;	state Exp;
branches;
next	1.76;

1.76
date	2013.11.05.16.06.29;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2013.09.16.08.18.28;	author dcoppa;	state Exp;
branches;
next	1.74;

1.74
date	2013.08.21.15.14.26;	author ajacoutot;	state Exp;
branches;
next	1.73;

1.73
date	2013.08.20.14.30.20;	author ajacoutot;	state Exp;
branches;
next	1.72;

1.72
date	2013.07.06.17.34.48;	author naddy;	state Exp;
branches;
next	1.71;

1.71
date	2013.07.06.16.15.28;	author naddy;	state Exp;
branches;
next	1.70;

1.70
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.69;

1.69
date	2013.06.15.23.21.00;	author halex;	state Exp;
branches;
next	1.68;

1.68
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.67;

1.67
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.66;

1.66
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.65;

1.65
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2012.04.06.15.32.57;	author jsing;	state Exp;
branches;
next	1.63;

1.63
date	2012.03.28.20.46.15;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.61;

1.61
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.59;

1.59
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.58;

1.58
date	2010.11.19.20.56.07;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.56;

1.56
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.54;

1.54
date	2010.07.23.14.36.49;	author mglocker;	state Exp;
branches;
next	1.53;

1.53
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.51;

1.51
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.50;

1.50
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.49;

1.49
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.48;

1.48
date	2010.03.13.21.57.37;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2009.06.03.18.34.35;	author jasper;	state Exp;
branches;
next	1.44;

1.44
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.43;

1.43
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.42;

1.42
date	2009.04.05.17.52.21;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2009.02.06.21.18.20;	author grange;	state Exp;
branches;
next	1.40;

1.40
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.38;

1.38
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2008.08.25.14.01.55;	author jsing;	state Exp;
branches;
next	1.36;

1.36
date	2008.06.28.21.48.29;	author mglocker;	state Exp;
branches;
next	1.35;

1.35
date	2008.06.27.03.17.57;	author todd;	state Exp;
branches;
next	1.34;

1.34
date	2008.06.13.21.09.11;	author todd;	state Exp;
branches;
next	1.33;

1.33
date	2008.06.12.20.42.00;	author todd;	state Exp;
branches;
next	1.32;

1.32
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2007.05.28.22.29.57;	author todd;	state Exp;
branches;
next	1.30;

1.30
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.29;

1.29
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.28;

1.28
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.25;

1.25
date	2006.08.28.21.23.34;	author tsi;	state Exp;
branches;
next	1.24;

1.24
date	2006.04.15.18.20.57;	author todd;	state Exp;
branches;
next	1.23;

1.23
date	2005.12.27.19.03.10;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.06.06.44.00;	author otto;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.20;

1.20
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.16;

1.16
date	2005.03.01.13.37.10;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.12;

1.12
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.02.20.17.21;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.13.17.08.07;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.22.14.40.43;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.21.07.56.20;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.08.06.23.18.03;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.06.23.15.26;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.06.23.15.08;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.06.23.11.24;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.06.22.09.22;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.21.58.22;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.95
log
@sync
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.48 2016/09/04 15:38:59 naddy Exp 
#	OpenBSD: MAKEDEV.common,v 1.93 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.83 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	tty[a-b]*	Zilog 8530 serial port
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# USB devices:
#	ttyU*	USB serial ports
#	uall	All USB devices
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	usb*	Bus control devices used by usbd for attach/detach
# Special purpose devices:
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	hotplug	devices hot plugging
#	pci*	PCI bus devices
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	uk*	Unknown SCSI devices
#	video*	Video V4L2 devices
#	vscsi*	Virtual SCSI controller
#	switch*	Switch driver
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
std)
	M console	c 0 0 600
	M tty		c 2 0
	M mem		c 3 0 640 kmem
	M kmem		c 3 1 640 kmem
	M null		c 3 2
	M zero		c 3 12
	M stdin		c 7 0
	M stdout	c 7 1
	M stderr	c 7 2
	M ksyms		c 35 0 640 kmem
	M klog		c 6 0 600
	;;

switch*)
	M switch$U c 75 $U 600
	;;

vscsi*)
	M vscsi$U c 68 $U 600
	;;

video*)
	M video$U  c 45 $U 600
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uk*)
	M uk$U c 32 $U 640 operator
	;;

tap*)
	M tap$U c 74 $U 600
	;;

tun*)
	M tun$U c 13 $U 600
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 33 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 70 $U 600
	;;

pf*)
	M pf c 31 0 600
	;;

pci*)
	M pci$U	c 29 $U 600
	MKlist[${#MKlist[*]}]=";[ -h pci ] || ln -sf pci0 pci"
	;;

hotplug)
	M hotplug c 67 $U 400
	;;

fuse)
	M fuse$U c 73 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 7 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 69 0 640 operator
	;;

bpf)
	M bpf c 12 0 600
	M bpf0 c 12 0 600
	;;

bio)
	M bio c 49 0 600
	;;

audio*)
	M audio$U	c 44 $U
	M mixer$U	c 44 $(($U+16))
	M audioctl$U	c 44 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 61 $U 660
	;;

ulpt*)
	M ulpt$U c 64 $U 660
	;;

uhid*)
	M uhid$U c 62 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 63 $(($n+10#$j)) 660
	done
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ugen2 ugen3 ugen4 ugen5
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 usb0 usb1
	R usb2 usb3 usb4 usb5 usb6 usb7
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 66 $o 660 dialer root
	M cuaU$U c 66 $(($o+128)) 660 dialer root
	;;

wsmouse[0-9]*)
	M wsmouse$U c 27 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 28 0 600
	M wskbd c 28 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 26 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5
	R ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg ttyE0 ttyE1
	R ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb
	R ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7
	R ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3
	R ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 25 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 25 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 52 0 666
	;;

tty[a-b])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 19 $n 660 dialer root
	M cua$u c 19 $(($n+128)) 660 dialer root
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 17 $o 660 dialer root
	M cua$U c 17 $(($o+128)) 660 dialer root
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}rst$U	c 10 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 36 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 2 11 $U 0
	;;

rd*)
	dodisk2 rd $U 8 22 $U 0
	;;

cd*)
	dodisk2 cd $U 3 8 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

ramdisk)
	R diskmap bio pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4
	R sd0 sd1 sd2 sd3 sd4 tty00 tty01 bpf std
	;;

all)
	R ttya ttyb switch0 switch1 switch2 switch3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 bio pty0 pty1 pty2
	R diskmap vscsi0 ch0 audio0 audio1 audio2 bpf fuse pppx
	R hotplug ptm local wscons pci0 pci1 pci2 pci3 uall video0
	R video1 uk0 random tty00 tty01 tty02 tty03 tty04 tty05 tty06
	R tty07 tty08 tty09 tty0a tty0b pf wd0 wd1 wd2 wd3 std st0 st1
	R fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 4 18 $U 0;;
	sd*) dodisk sd $U 0 9 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
@


1.94
log
@sync
@
text
@d333 2
a334 2
	M ttyU$U c 66 $o 660 dialer uucp
	M cuaU$U c 66 $(($o+128)) 660 dialer uucp
d412 2
a413 2
	M tty$u c 19 $n 660 dialer uucp
	M cua$u c 19 $(($n+128)) 660 dialer uucp
d419 2
a420 2
	M tty$U c 17 $o 660 dialer uucp
	M cua$U c 17 $(($o+128)) 660 dialer uucp
@


1.93
log
@sync after /dev/sound* removal
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.92 2016/09/08 20:39:28 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
d489 1
a489 1
        cat
@


1.92
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.91 2016/09/04 15:38:59 naddy Exp 
d295 1
a295 1
	M sound$U	c 44 $U
a296 1
	M audio$U	c 44 $(($U+128))
a299 1
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
@


1.91
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.47 2016/09/02 17:06:14 goda Exp 
#	OpenBSD: MAKEDEV.common,v 1.90 2016/09/02 17:06:13 goda Exp 
a428 1
		M ${pre}st$U	b 10 $n 660 operator
@


1.90
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.46 2016/04/28 18:17:31 natano Exp 
#	OpenBSD: MAKEDEV.common,v 1.88 2016/05/21 15:17:49 deraadt Exp 
d79 1
d220 4
d229 1
a229 1
	M video$U  c 45 $U 600 
d461 8
a468 7
	R ttya ttyb vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6
	R sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0 tun1 tun2
	R tun3 bio pty0 pty1 pty2 diskmap vscsi0 ch0 audio0 audio1
	R audio2 bpf fuse pppx hotplug ptm local wscons pci0 pci1 pci2
	R pci3 uall video0 video1 uk0 random tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b pf wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.89
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.87 2016/04/28 18:17:30 natano Exp 
d224 1
a224 1
	M video$U  c 45 $U
@


1.88
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.45 2016/04/25 20:38:11 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
@


1.87
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d65 1
a65 1
#	bpf*	Berkeley Packet Filter
d280 3
a282 2
bpf*)
	M bpf$U c 12 $U 600
d452 1
a452 1
	R sd0 sd1 sd2 sd3 sd4 tty00 tty01 bpf0 std
d458 5
a462 6
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 pty1 pty2 diskmap vscsi0 ch0 audio0 audio1 audio2 fuse
	R pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 video1 uk0 random tty00 tty01 tty02 tty03 tty04 tty05
	R tty06 tty07 tty08 tty09 tty0a tty0b pf wd0 wd1 wd2 wd3 std
	R st0 st1 fd
@


1.86
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.44 2015/10/23 15:14:12 claudio Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a73 1
#	systrace*	System call tracing device
a239 4
systrace)
	M systrace c 50 0 644
	;;

d461 2
a462 2
	R tty06 tty07 tty08 tty09 tty0a tty0b pf systrace wd0 wd1 wd2
	R wd3 std st0 st1 fd
@


1.85
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d171 2
a172 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.84
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
@


1.83
log
@Sync (after tap addition)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
@


1.82
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.43 2014/12/11 19:48:03 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d76 1
d232 4
d460 7
a466 6
	R sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2
	R diskmap vscsi0 ch0 audio0 audio1 audio2 fuse pppx hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0
	R random tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08
	R tty09 tty0a tty0b pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.81
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.42 2014/10/09 04:37:43 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.77 2014/10/09 04:33:50 tedu Exp 
a60 1
#	urio*	Diamond Multimedia Rio 500
a302 4
urio*)
	M urio$U c 65 $U 660
	;;

d321 2
a322 2
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 urio0 usb0
	R usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.80
log
@Remove userland bits related to the crypto(4) interface;  ok deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.40 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
d465 1
a465 2
	R tty09 tty0a tty0b pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.79
log
@regen
@
text
@a66 1
#	crypto	Hardware crypto access driver
a279 4
crypto)
	M crypto c 47 0
	;;

d465 1
a465 1
	R tty09 tty0a tty0b crypto pf systrace wd0 wd1 wd2 wd3 std st0
@


1.78
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
@


1.77
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.39 2013/08/21 15:12:49 ajacoutot Exp 
@


1.76
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.75
log
@regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.71 2013/09/16 08:17:02 dcoppa Exp 
@


1.74
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.38 2013/06/03 16:06:42 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.69 2013/08/20 14:27:24 ajacoutot Exp 
d330 3
a332 2
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.73
log
@regen
@
text
@a62 1
uscan_dev
@


1.72
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
d63 1
a63 1
#	uscanner*	Scanners
a304 4
uscanner*)
	M uscanner$U c 72 $U 660
	;;

d332 1
a332 2
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.71
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d474 3
a476 2
	R random tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.70
log
@regen
@
text
@d474 2
a475 2
	R random tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.69
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d71 1
a71 1
#	fuse*	Userland Filesystem
d268 1
a268 1
fuse*)
d472 4
a475 4
	R diskmap vscsi0 ch0 audio0 audio1 audio2 fuse0 fuse1 fuse2
	R fuse3 pppx hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 video1 uk0 random tty00 tty01 tty02 tty03 crypto pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.68
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d71 1
a71 1
#	fuse	Userland Filesystem
d268 1
a268 1
fuse)
d472 4
a475 4
	R diskmap vscsi0 ch0 audio0 audio1 audio2 fuse pppx hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0
	R random tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.67
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.37 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d71 1
d268 4
d472 2
a473 2
	R diskmap vscsi0 ch0 audio0 audio1 audio2 pppx hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0
@


1.66
log
@regen
@
text
@d467 4
a470 4
	R diskmap vscsi0 ch0 audio0 audio1 audio2 hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0 random
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.65
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d180 1
a180 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d184 1
a184 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d188 1
a188 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d192 1
a192 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.64
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.36 2012/03/28 20:44:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a71 1
#	nnpfs*	NNPFS filesystem node
a262 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d467 4
a470 4
	R diskmap vscsi0 nnpfs0 ch0 audio0 audio1 audio2 hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall video0 video1 uk0
	R random tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.63
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
@


1.62
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.35 2011/10/22 19:31:23 miod Exp 
d43 1
d415 11
d469 7
a475 7
	R vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 diskmap vscsi0
	R nnpfs0 ch0 audio0 audio1 audio2 hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 uall video0 video1 uk0 random tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.61
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.34 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d460 4
a463 4
	R nnpfs0 ch0 hotplug ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 video1 audio0 audio1 audio2 uk0 random tty00 tty01
	R tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1
	R fd
@


1.60
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.33 2010/11/19 20:55:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d457 7
a463 7
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2
	R diskmap vscsi0 nnpfs0 ch0 hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall video0 video1 audio0 audio1 audio2 uk0 random
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
d466 1
a466 1
wd*|sd*|ccd*)
a469 1
	ccd*) dodisk ccd $U 6 23 $U 0;;
@


1.59
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.58
log
@regen
@
text
@a437 1
	dodisk svnd $U 2 11 $U 2048
@


1.57
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.32 2010/09/30 15:27:54 claudio Exp 
d63 1
d305 4
d336 2
a337 1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.56
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.30 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d74 1
d248 4
@


1.55
log
@regen
@
text
@d49 1
a50 1
#	ttyC-J*	wscons display devices
d56 1
a57 1
#	ttyU*	USB serial ports
d68 1
d71 1
a78 1
#	nnpfs*	NNPFS filesystem node
a79 1
#	diskmap	Disk mapper
a218 4
diskmap)
	M diskmap c 69 0 640 operator
	;;

a222 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d258 4
d272 4
d324 5
a335 5
uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
	;;

d349 10
a375 10
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyFcfg ttyF0 ttyF1 ttyF2 ttyF3 ttyF4 ttyF5
	R ttyF6 ttyF7 ttyF8 ttyF9 ttyFa ttyFb ttyEcfg ttyE0 ttyE1
	R ttyE2 ttyE3 ttyE4 ttyE5 ttyE6 ttyE7 ttyE8 ttyE9 ttyEa ttyEb
	R ttyDcfg ttyD0 ttyD1 ttyD2 ttyD3 ttyD4 ttyD5 ttyD6 ttyD7
	R ttyD8 ttyD9 ttyDa ttyDb ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3
	R ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.54
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d333 1
a333 1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5
@


1.53
log
@sync
@
text
@d452 3
a454 3
	R pci2 pci3 uall video0 audio0 audio1 audio2 uk0 random tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.52
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.51
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.29 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a72 1
#	ss*	SCSI scanners
a247 8
ss*)
	M ss$U c 34 $(($U*16)) 640 operator
	M nss$U c 34 $(($(($U*16))+1)) 640 operator
	M enss$U c 34 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d451 4
a454 4
	R diskmap vscsi0 nnpfs0 ss0 ss1 ch0 hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 uall video0 audio0 audio1 audio2 uk0
	R random tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.50
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.28 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d452 2
a453 2
	R bio pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0 sd1
	R sd2 sd3 sd4 tty00 tty01 bpf0 std
@


1.49
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d221 1
a221 1
	M diskmap b 69 0 640 operator
@


1.48
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.27 2010/03/13 21:57:04 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d80 1
d220 4
d460 4
a463 4
	R vscsi0 nnpfs0 ss0 ss1 ch0 hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall video0 audio0 audio1 audio2 uk0 random tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.47
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.26 2009/08/13 15:12:36 deraadt Exp 
d374 6
a379 2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.46
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d340 1
a340 1
wsmouse*)
d349 1
a349 1
wskbd*)
@


1.45
log
@- regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.25 2009/06/03 18:32:24 jasper Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d79 1
d219 4
d451 4
a454 4
	R nnpfs0 ss0 ss1 ch0 hotplug ptm local wscons pci0 pci1 pci2
	R pci3 uall video0 audio0 audio1 audio2 uk0 random tty00 tty01
	R tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1
	R fd
@


1.44
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.24 2009/06/03 14:45:40 jj Exp 
d69 1
d265 4
d446 4
a449 3
	R nnpfs0 ss0 ss1 ch0 ptm local wscons pci0 pci1 pci2 pci3 uall
	R video0 audio0 audio1 audio2 uk0 random tty00 tty01 tty02
	R tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.43
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.23 2009/02/06 21:17:15 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.42 2009/04/05 17:49:14 jmc Exp 
@


1.42
log
@regen;
@
text
@d77 1
a77 1
#	xfs*	XFS filesystem node
d217 2
a218 2
xfs*)
	M xfs$U c 51 $U 600
d441 1
a441 1
	R xfs0 ss0 ss1 ch0 ptm local wscons pci0 pci1 pci2 pci3 uall
@


1.41
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d76 1
a76 1
#	video*	Video V4L devices
@


1.40
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.22 2009/01/25 17:30:48 miod Exp 
d439 5
a443 5
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 xfs0 ss0 ss1 ch0 ptm
	R local wscons pci0 pci1 pci2 pci3 uall video0 audio0 audio1
	R audio2 uk0 random tty00 tty01 tty02 tty03 crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.39
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.21 2008/08/25 14:00:33 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a213 1
	M drum		c 1 0 640 kmem
@


1.38
log
@sync
@
text
@d442 3
a444 3
	R local wscons pci0 pci1 pci2 pci3 uall video0 audio0 uk0
	R random tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.37
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d249 1
a249 1
	for pre in " " s u p a
@


1.36
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.20 2008/06/28 21:46:05 mglocker Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
d56 7
d294 37
d442 3
a444 3
	R local wscons pci0 pci1 pci2 pci3 video0 audio0 uk0 random
	R tty00 tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.35
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.19 2008/06/27 03:17:29 todd Exp 
a55 1
#	video*	Video V4L devices
d69 1
d215 5
a284 5
	;;

video*)
	M video$U  c 45 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
@


1.34
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.17 2008/06/13 21:07:28 todd Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d268 1
a268 1
	M bio c 14 0 600
@


1.33
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.16 2008/06/12 20:39:29 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d390 2
a391 2
	R pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0 sd1 sd2
	R sd3 sd4 tty00 tty01 bpf0 std
@


1.32
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.15 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d55 2
d282 5
d398 3
a400 3
	R local wscons pci0 pci1 pci2 pci3 audio0 uk0 random tty00
	R tty01 tty02 tty03 crypto pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.31
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.30
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.14 2007/05/27 01:50:36 todd Exp 
d58 1
d266 4
d390 1
a390 1
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
@


1.29
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.13 2007/05/26 19:54:23 todd Exp 
a57 1
#	bio	ioctl tunnel pseudo-device
a264 4
bio)
	M bio c 14 0 600
	;;

d385 1
a385 1
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4
@


1.28
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.12 2006/04/16 11:34:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d58 1
d266 4
d390 1
a390 1
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
@


1.27
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
d247 1
a247 1
	MKlist[${#MKlist[*]}]=";[ -e pci ] || ln -s pci0 pci"
@


1.26
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
@


1.25
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
d60 1
a60 1
#	pci	PCI bus device
d245 3
a247 2
pci)
	M pci c 29 0 600
d386 3
a388 2
	R local wscons pci audio0 uk0 random tty00 tty01 tty02 tty03
	R crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.24
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.10 2005/08/01 22:22:13 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.25 2006/04/15 18:19:12 todd Exp 
d50 1
a50 1
#	ttyC-F*	wscons display devices
d287 2
a288 2
tty[C-F]*)
	U=${i##tty[C-F]}
d294 4
@


1.23
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d374 1
a374 1
	R sd3 sd4 bpf0 std
@


1.22
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d49 1
a49 1
#	ttyC0	Minimal wscons devices
d59 1
a59 1
#	fd	fd/* nodes for fdescfs
@


1.21
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d156 1
a156 2
RMlist="rm -f"
MKlist=":"
d159 1
a159 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d163 1
a163 1
	RMlist="$RMlist $1"
d167 1
a167 1
		MKlist="$MKlist;chown $7:$G $1"
d170 10
a179 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a180 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d228 2
a229 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d250 1
a250 1
	RMlist="mkdir -p fd;$RMlist" n=0
d252 1
a252 1
	MKlist="$MKlist;chmod 555 fd"
d268 4
a271 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d400 8
a407 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d409 1
a409 1
	echo "$list" | sh
@


1.20
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d139 1
a139 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.19
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a135 1
	RMlist="$RMlist $1$2? r$1$2?"
d139 2
a140 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a142 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.18
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a172 1
	mklist="$mklist $1"
@


1.17
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.9 2005/01/02 20:07:57 kettenis Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.16
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.15
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.14
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.13
log
@sync
@
text
@d89 1
a89 1
	local t="$1"  
@


1.12
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d302 1
a302 1
	[0-9a-f]) M tty$n$U c 25 $(( 16#$U + $m )) 600;;
@


1.11
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.10
log
@Regen (including /dev/crypto support not regen'ed last time)
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.8 2004/12/13 17:06:17 miod Exp 
d56 1
d269 11
d387 2
a388 2
	R local wscons pci uk0 random tty00 tty01 tty02 tty03 crypto
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.9
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.6 2004/09/22 14:40:24 miod Exp 
d57 1
d222 1
a222 1
	M tun$U c 40 $U 600
d260 4
d375 2
a376 2
	R local wscons pci uk0 random tty00 tty01 tty02 tty03 pf
	R systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.8
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.5 2004/09/21 07:55:48 miod Exp 
d29 1
a30 1
#	fd	fd/* nodes for fdescfs
a31 3
#	ramdisk	Ramdisk kernel devices
# Tapes:
#	st*	SCSI tape drives
d33 5
d39 1
a39 2
#	sd*	SCSI disks, including flopticals
#	cd*	ATAPI and SCSI CD-ROM drives
d41 1
a41 3
#	vnd*	"file" pseudo-disk devices
#	rd*	"rd" pseudo-disks
#	ccd*	Concatenated disk devices
d57 6
a63 1
#	*random	In-kernel random data source
d65 1
a65 2
#	ss*	SCSI scanners
#	pf*	Packet Filter
d212 14
a225 2
pf*)
	M pf c 31 0 600
a235 4
uk*)
	M uk$U c 32 $U 640 operator
	;;

d245 12
a256 2
tun*)
	M tun$U c 40 $U 600
d330 12
a341 2
rd*)
	dodisk2 rd $U 8 22 $U 0
d349 2
a350 2
ch*)
	M ch$U c 36 $U 660 operator
d357 2
a358 8
st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 10 $n 660 operator
		M ${pre}rst$U	c 10 $n 660 operator
		n=$(($n+1))
	done
a365 10
local)
	test -s $T.local && sh $T.local
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 7 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
	;;

d369 3
a371 3
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 ss0 ss1 ch0 ptm
	R local wscons uk0 random tty00 tty01 tty02 tty03 pf wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.7
log
@Regen.
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.4 2004/08/06 23:16:31 mickey Exp 
d46 2
a48 1
#	pty*	Set of 62 master pseudo terminals
d298 4
d354 3
a356 3
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 ss0 ss1 ch0 local
	R wscons uk0 random tty00 tty01 tty02 tty03 pf wd0 wd1 wd2 wd3
	R std st0 st1 fd
@


1.6
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d59 1
a59 1
#	uk*	SCSI unknown devices
@


1.5
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.3 2004/08/06 23:15:08 deraadt Exp 
d48 7
a207 2


d241 34
d350 2
a351 2
	R uk0 random tty00 tty01 tty02 tty03 pf wd0 wd1 wd2 wd3 std
	R st0 st1 fd
@


1.4
log
@do not play fast and loose with _TITLE
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.2 2004/08/06 23:11:01 deraadt Exp 
@


1.3
log
@sync
@
text
@a42 1
# Console ports:
a47 1
# USB devices:
@


1.2
log
@order, order...
@
text
@d6 1
a6 1
#	OpenBSD: etc.sgi/MAKEDEV.md,v 1.1 2004/08/06 21:58:22 pefo Exp 
@


1.1
log
@sgi going in.
@
text
@d6 4
a9 3
#	OpenBSD: etc.pmonmips/MAKEDEV.md,v 1.2 2002/01/08 03:26:03 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d12 1
a12 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d14 3
a16 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d18 7
a24 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d29 4
a32 4
#	std	standard devices
#	fd	makes fd/* for the fdescfs
#	local	configuration specific devices
#	ramdisk	makes all devices for a ramdisk kernel
d34 1
a34 1
#	st*	SCSI tapes
d37 4
a40 4
#	sd*	SCSI disks
#	cd*	SCSI cdrom drives
#	ch*	SCSI media changer
#	vnd*	"file" pseudo-disks
d42 1
a42 1
#	ccd*	concatenated disk devices
d45 1
a45 1
#	tty0*	NS16x50 serial ports
d47 2
a48 2
#	tty*	set of 16 slave psuedo terminals
#	pty*	set of 16 master pseudo terminals
d52 3
a54 3
#	tun*	network tunnel driver
#	*random	inkernel random data source
#	uk*	SCSI Unknown device
d76 1
a76 1
trunc()
d78 24
a101 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
d133 1
a133 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d165 1
a165 1
		MKlist="$MKlist;chown $7.$G $1"
d168 1
a168 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
d243 6
a248 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d250 1
a250 1
	while [ $n -lt 16 ]
d252 2
a253 2
		nam=$name$(hex $n)
		off=$(($U*16))
d260 5
a264 3
tty0*)
	M tty$U c 17 $U 660 dialer uucp
	M cua$U c 17 $(($U+128)) 660 dialer uucp
d273 1
a273 1
	dodisk svnd $U 2 11 $U 128
a331 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d340 1
a340 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@

