head	1.23;
access;
symbols
	OPENBSD_2_9:1.21.0.2
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_8:1.19.0.4
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.19.0.2
	OPENBSD_2_7_BASE:1.19
	OPENBSD_2_6:1.17.0.2
	OPENBSD_2_6_BASE:1.17
	OPENBSD_2_5:1.16.0.2
	OPENBSD_2_5_BASE:1.16
	OPENBSD_2_4:1.14.0.6
	OPENBSD_2_4_BASE:1.14
	OPENBSD_2_3:1.14.0.4
	OPENBSD_2_3_BASE:1.14
	OPENBSD_2_2:1.14.0.2
	OPENBSD_2_2_BASE:1.14
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.8.0.2
	OPENBSD_2_0_BASE:1.8
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.23
date	2001.06.24.23.47.34;	author deraadt;	state dead;
branches;
next	1.22;

1.22
date	2001.06.24.23.36.00;	author kjell;	state Exp;
branches;
next	1.21;

1.21
date	2001.01.28.23.31.28;	author niklas;	state Exp;
branches;
next	1.20;

1.20
date	2001.01.04.20.34.12;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2000.03.22.08.34.16;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.22.07.34.28;	author niklas;	state Exp;
branches;
next	1.17;

1.17
date	99.08.20.17.00.35;	author downsj;	state Exp;
branches;
next	1.16;

1.16
date	98.11.25.04.58.53;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	98.11.19.08.18.56;	author dugsong;	state Exp;
branches;
next	1.14;

1.14
date	97.09.16.06.00.55;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	97.05.14.15.41.10;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	97.05.13.05.34.50;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.04.23.20.39.03;	author gvf;	state Exp;
branches;
next	1.10;

1.10
date	96.12.14.18.23.54;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	96.11.11.19.20.40;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	96.09.18.22.03.41;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.08.28.08.55.22;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.07.15.14.59.09;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.04.23.03.18.38;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.01.12.21.11.52;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.01.07.13.19.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.07.41.17;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@bye bye
@
text
@#!/bin/sh -
#
#	$OpenBSD: MAKEDEV,v 1.22 2001/06/24 23:36:00 kjell Exp $
#	$NetBSD: MAKEDEV,v 1.8 1996/03/27 14:27:53 leo Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	from:
#	hp300/MAKEDEV (1/15/94), from:
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices,
#		Tries to make the ``standard'' number of each.
#	fd	makes fd/* for the fdescfs.
#	floppy	devices needed for install floppies
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	fd*	Floppy disks (fdxa: 360Kb, fdxb: 720Kb, fdxc: 1.44Mb)
#	sd*	SCSI disks, includes flopticals
#	cd*	SCSI cdrom discs
#	vnd*	"file" pseudo-disks
#	ccd*	concatedated disk driver
#
# Console ports:
#	ttye*	ite bitmapped consoles
#
# Pointing devices:
#	mouse*	Atari mice
#
# Printer:
#	lpt0	centronics printer
#
# Terminal ports:
#	ser02	serial2 port (channel A on 8530)
#	mdm02	modem2 port (channel B on 8530)
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Special purpose devices:
#	ch*	SCSI media changer
#	grf*	Motherboard bitmapped video.
#	kbd	Atari keyboard.
#	view*	generic interface to graphic displays.
#	aconf	autoconfig information (not yet)
#	lkm	loadable kernel modules interface.
#	bpf*	Berkeley Packet Filter
#	tun*	network tunnel driver
#	*random	random data source
#	uk*	unknown SCSI
#	ss*	SCSI scanners

PATH=/sbin:/bin:/usr/sbin:/usr/bin
umask 77
for i
do
case $i in
all)
	sh MAKEDEV std fd st0 ttye0 ttye1 ttye2 ttye3 ttye4 ttye5 grf0 grf1
	sh MAKEDEV grf2 grf3 grf4 grf5 mouse0 mouse1
	sh MAKEDEV kbd sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 vnd0 vnd1 vnd2
	sh MAKEDEV vnd3 vnd4 view00 view01 view02 view03 view04 view05 pty0 
	sh MAKEDEV vnd5 vnd6 cd0 fd0 fd1 fd2 fd3 ccd0 ccd1 ccd2 ccd3
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV pf tun0 tun1 lkm ser02 mdm02 lpt0 random uk0 uk1 ss0 local
	;;

floppy)
	sh MAKEDEV std st0 ttye0 ttye1 ttye2 grf0 grf1 grf2 kbd tun0 tun1
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 sd5 sd6 cd0 fd0 fd1 rd0
	;;

std)
	rm -f console drum kmem mem nvram reload null zero tty
	rm -f klog stdin stdout stderr
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod nvram		c 2 11	; chmod 640 nvram ; chown root.kmem nvram
	mknod reload		c 2 20	; chmod 640 reload ; chown root.kmem reload
	mknod zero		c 2 12	; chmod 666 zero
	mknod null		c 2 2	; chmod 666 null
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 18 0	; chmod 666 stdin
	mknod stdout		c 18 1	; chmod 666 stdout
	mknod stderr		c 18 2	; chmod 666 stderr
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && i=0 && while [ $i -lt 64 ]; do
		mknod $i c 18 $i
		i=$(($i+1))
		done)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

ser02)
	rm -f ser02
	mknod ser02 c 7 0
	chown uucp.dialer ser02
	chmod 660 ser02
	;;

mdm02)
	rm -f mdm02
	mknod mdm02 c 7 16
	chown uucp.dialer mdm02
	chmod 660 mdm02
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st; blk=5; chr=10;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
		mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
		mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
		mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
		mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
		mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
		mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
		chown root.operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 660 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
	;;

ch*)
	umask 2
	name=ch; chr=33
	rm -f $name$unit
	mknod ${name}${unit}	c $chr $unit
	chown root.operator ${name}${unit}
	chmod 660 ${name}${unit}
	umask 77
	;;

fd*)
	umask 2 ; unit=`expr $i : '.*[^0-9]\([0-9]*\)'`
	rm -f fd$unit? rfd$unit?
	case $unit in
	0|1|2|3)
		mknod fd${unit}a b 2 `expr $unit '*' 16`
		mknod fd${unit}b b 2 `expr $unit '*' 16 + 1`
		mknod fd${unit}c b 2 `expr $unit '*' 16 + 2`
		mknod rfd${unit}a c 16 `expr $unit '*' 16`
		mknod rfd${unit}b c 16 `expr $unit '*' 16 + 1`
		mknod rfd${unit}c c 16 `expr $unit '*' 16 + 2`
		chown root.operator fd$unit? rfd$unit?
		chmod 640 fd$unit? rfd$unit?
		;;
	*)
		echo bad unit for floppy disk in: $i
		;;
	esac
	umask 77
	;;

rd0)	# Ramdisk, only useful for boot-floppy
	umask 2; rm -f rd0
	mknod rd0 b 1 0
	umask 77
	;;

sd*|ccd*)
	umask 2 ; unit=`expr $i : '.*[^0-9]\([0-9]*\)'`
	case $i in
	sd*) name=sd; blk=4; chr=8;;
	ccd*) name=ccd; blk=13; chr=27;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=0; chr=17;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
	umask 77
	;;

cd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd; blk=6; chr=9;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a   b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}d   b $blk `expr $unit '*' 8 + 3`
		mknod r${name}${unit}a  c $chr `expr $unit '*' 8 + 0`
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

ttye*)
	unit=`expr $i : 'ttye\(.*\)'`
	rm -f ttye${unit}
	rm -f ite*
	case $unit in
	0|1|2|3|4|5|6|7|8|9)
		mknod ttye${unit} c 12 ${unit}
		;;
	*)
		echo bad unit for ttye in: $i
		;;
	esac
	;;

grf*)
	unit=`expr $i : 'grf\(.*\)'`
	rm -f grf${unit}
	case $unit in
	0|1|2|3|4|5|6|7|8|9)
		mknod grf${unit} c 11 ${unit}; chmod 666 grf${unit}
		;;
	*)
		echo bad unit for grf in: $i
		;;
	esac
	;;

mouse*)
	unit=`expr $i : 'mouse\(.*\)'`
	rm -f mouse${unit}
	case $unit in
	0|1)
		mknod mouse${unit} c 15 ${unit}; chmod 666 mouse${unit}
		if [ $unit = 0 ]
		then 
			rm -f mouse; ln -s mouse${unit} mouse
		fi
		;;
	*)
		echo bad unit for mouse in: $i
		;;
	esac
	;;

kbd)
	rm -f kbd
	mknod kbd c 14 0
	;;


view*)
	unit=`expr $i : 'view\(.*\)'`
	rm -f view${unit}
	case $unit in
	00|01|02|03|04|05|06|07|08|09)
		mknod view${unit} c 13 ${unit}; chmod 666 view${unit}
		;;
	*)
		echo bad unit for view in: $i
		;;
	esac
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		(i=0; while [ $i -lt 16 ]; do
			eval `printf "rm -f tty%s%x; mknod tty%s%x c 4 %d; \
			    rm -f pty%s%x; mknod pty%s%x c 5 %d" $name $i \
			    $name $i $offset $name $i $name $i $offset`
			offset=$(($offset+1))
			i=$(($i+1))
			done)
		umask 77
		;;
	esac
	;;

lpt*)
	unit=`expr $i : 'lpt\(.*\)'`
	rm -f lpt$unit
	mknod lpt$unit c 29 $unit
	chown root.wheel lpt$unit
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 19 $unit
	chown root.wheel bpf$unit
	;;

pf)
	rm -f pf
	mknod pf c 73 0
	chown root.wheel pf
	chmod 600 pf
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 28 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

lkm)
        rm -f lkm
        mknod lkm c 20 0
        chown root.kmem lkm
        chmod 640 lkm
        ;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 30 0
	mknod srandom c 30 1
	mknod urandom c 30 2
	mknod prandom c 30 3
	mknod arandom c 30 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
	;;

uk*)
	unit=`expr $i : 'uk\(.*\)'`
	rm -f uk$unit
	mknod uk$unit c 31 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
	;;

ss*)
	unit=`expr $i : 'ss\(.*\)'`
	rm -f ss$unit
	mknod ss$unit c 32 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
	;;

local)
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
	umask 77
	;;

*)
	echo $i: unknown device
	;;
esac
done
@


1.22
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.21 2001/01/28 23:31:28 niklas Exp $
@


1.21
log
@$OpenBSD$
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1996/03/27 14:27:53 leo Exp $
d100 1
a100 1
	sh MAKEDEV tun0 tun1 lkm ser02 mdm02 lpt0 random uk0 uk1 ss0 local
d452 7
@


1.20
log
@spelling
@
text
@d3 1
@


1.19
log
@Add ch to some dead ports for consistency, of course not tested.
@
text
@d215 1
a215 1
rd0)	# Ramdisk, only usefull for boot-floppy
@


1.18
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d75 1
d181 10
@


1.17
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d171 1
a171 1
		chmod 640 ${name}${unit} n${name}${unit} \
@


1.16
log
@remove bogus comment about pty use; chris@@sefl.satelnet.org
@
text
@d139 2
a140 1
	chown uucp.wheel ser02
d146 2
a147 1
	chown uucp.wheel mdm02
@


1.15
log
@add support for more ptys
@
text
@a396 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
@


1.14
log
@10 bpf devices
@
text
@d399 11
d413 1
a413 1
	0|1|2|3|4)
@


1.13
log
@Make svnd nodes too, please test this on your port
@
text
@d96 2
a97 2
	sh MAKEDEV vnd5 vnd6 cd0 fd0 fd1 fd2 fd3 bpf0 bpf1 bpf2 bpf3
	sh MAKEDEV ccd0 ccd1 ccd2 ccd3
@


1.12
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d208 1
a208 1
sd*|vnd*|ccd*)
a211 1
	vnd*) name=vnd; blk=0; chr=17;;
d256 47
@


1.11
log
@Fix vnd nodes.
@
text
@d431 1
a431 1
	sh MAKEDEV.local
@


1.10
log
@/dev/fd should be owned by root.wheel
@
text
@a219 2
		if [ $name != cd -a $name != vnd ]
		then
a249 1
		fi
@


1.9
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d131 1
a131 1
	chown -R bin.bin fd
@


1.8
log
@do not use chgrp
@
text
@d83 2
d98 1
a98 1
	sh MAKEDEV tun0 tun1 lkm ser02 mdm02 lpt0 random local
d411 19
@


1.7
log
@fix all random device node entry stuff
@
text
@d108 5
a112 5
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
	mknod nvram		c 2 11	; chmod 640 nvram ; chgrp kmem nvram
	mknod reload		c 2 20	; chmod 640 reload ; chgrp kmem reload
d137 1
a137 1
	chown uucp:wheel ser02
d143 1
a143 1
	chown uucp:wheel mdm02
d163 1
a163 1
		chgrp operator ${name}${unit} n${name}${unit} \
d190 1
a190 1
		chgrp operator fd$unit? rfd$unit?
d251 1
a251 1
		chgrp operator ${name}${unit}[a-p] r${name}${unit}[a-p]
d272 1
a272 1
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
d396 1
a396 1
        chown root:kmem lkm
@


1.6
log
@ad rnd devices.
@
text
@d82 1
a82 1
#	*rnd	random data source
d96 1
a96 1
	sh MAKEDEV tun0 tun1 lkm ser02 mdm02 lpt0 rnd local
d400 9
a408 8
rnd|srnd|urnd|prnd)
	rm -f rnd urnd srnd prnd
	mknod  rnd c 30 0
	mknod srnd c 30 1
	mknod urnd c 30 2
	mknod prnd c 30 3
	chown root.wheel rnd srnd urnd prnd
	chmod 644 rnd srnd urnd prnd
@


1.5
log
@sync with netbsd 960418
@
text
@d82 1
d96 1
a96 1
	sh MAKEDEV tun0 tun1 lkm ser02 mdm02 lpt0 local
d399 10
@


1.4
log
@Correct some typo's, add some virtual consoles and the tun devices
@
text
@d3 1
a3 1
#	$NetBSD: MAKEDEV,v 1.7 1996/01/11 21:34:48 leo Exp $
d64 3
d95 1
a95 1
	sh MAKEDEV tun0 tun1 lkm ser02 mdm02 local
d368 7
@


1.3
log
@from leo:
Add an nvram-driver. This driver makes it possible to read/write the
configuration info stored in the nvram on the mc146818
@
text
@d3 1
a3 1
#	$NetBSD: MAKEDEV,v 1.5 1996/01/06 20:19:59 leo Exp $
d78 1
d86 2
a87 1
	sh MAKEDEV std fd st0 ttye0 ttye1 ttye2 mouse0 mouse1 grf0 grf1 grf2
d90 1
a90 1
	sh MAKEDEV vnd5 vnd6 cd0 fd0 fd1 fd2 fd3 bpf0 bpf1 bpf2 bpf3 ipl
d92 1
a92 1
	sh MAKEDEV lkm ser02 mdm02 local
d96 1
a96 1
	sh MAKEDEV std st0 ttye0 ttye1 ttye2 grf0 grf1 grf2 kbd
d107 2
a108 2
	mknod reload		c 2 20	; chmod 640 mem ; chgrp kmem mem
	mknod nvram		c 2 11	; chmod 640 mem ; chgrp kmem mem
d283 1
a283 1
	0|1|2)
d296 1
a296 1
	0|1|2)
d374 6
a379 3
ipl)
	mknod ipl c 29 0
	chown root.wheel ipl
@


1.2
log
@created devices for the IP filter log on all architectures
@
text
@d3 1
a3 1
#	$NetBSD: MAKEDEV,v 1.4 1995/08/17 18:02:31 thorpej Exp $
d99 1
a99 1
	rm -f console drum kmem mem reload null zero tty
d106 1
@


1.1
log
@Initial revision
@
text
@d88 1
a88 1
	sh MAKEDEV vnd5 vnd6 cd0 fd0 fd1 fd2 fd3 bpf0 bpf1 bpf2 bpf3
d369 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
