head	1.150;
access;
symbols
	OPENBSD_6_1:1.150.0.2
	OPENBSD_6_1_BASE:1.150
	OPENBSD_6_0:1.145.0.4
	OPENBSD_6_0_BASE:1.145
	OPENBSD_5_9:1.140.0.2
	OPENBSD_5_9_BASE:1.140
	OPENBSD_5_8:1.137.0.4
	OPENBSD_5_8_BASE:1.137
	OPENBSD_5_7:1.136.0.2
	OPENBSD_5_7_BASE:1.136
	OPENBSD_5_6:1.133.0.4
	OPENBSD_5_6_BASE:1.133
	OPENBSD_5_5:1.131.0.4
	OPENBSD_5_5_BASE:1.131
	OPENBSD_5_4:1.124.0.2
	OPENBSD_5_4_BASE:1.124
	OPENBSD_5_3:1.118.0.2
	OPENBSD_5_3_BASE:1.118
	OPENBSD_5_2:1.113.0.2
	OPENBSD_5_2_BASE:1.113
	OPENBSD_5_1_BASE:1.112
	OPENBSD_5_1:1.112.0.2
	OPENBSD_5_0:1.110.0.2
	OPENBSD_5_0_BASE:1.110
	OPENBSD_4_9:1.107.0.2
	OPENBSD_4_9_BASE:1.107
	OPENBSD_4_8:1.105.0.2
	OPENBSD_4_8_BASE:1.105
	OPENBSD_4_7:1.98.0.2
	OPENBSD_4_7_BASE:1.98
	OPENBSD_4_6:1.96.0.4
	OPENBSD_4_6_BASE:1.96
	OPENBSD_4_5:1.93.0.2
	OPENBSD_4_5_BASE:1.93
	OPENBSD_4_4:1.89.0.2
	OPENBSD_4_4_BASE:1.89
	OPENBSD_4_3:1.86.0.2
	OPENBSD_4_3_BASE:1.86
	OPENBSD_4_2:1.85.0.2
	OPENBSD_4_2_BASE:1.85
	OPENBSD_4_1:1.83.0.2
	OPENBSD_4_1_BASE:1.83
	OPENBSD_4_0:1.78.0.2
	OPENBSD_4_0_BASE:1.78
	OPENBSD_3_9:1.72.0.2
	OPENBSD_3_9_BASE:1.72
	OPENBSD_3_8:1.66.0.2
	OPENBSD_3_8_BASE:1.66
	OPENBSD_3_7:1.64.0.2
	OPENBSD_3_7_BASE:1.64
	OPENBSD_3_6:1.59.0.2
	OPENBSD_3_6_BASE:1.59
	OPENBSD_3_5:1.53.0.2
	OPENBSD_3_5_BASE:1.53
	OPENBSD_3_4:1.39.0.2
	OPENBSD_3_4_BASE:1.39
	OPENBSD_3_3:1.37.0.2
	OPENBSD_3_3_BASE:1.37
	OPENBSD_3_2:1.30.0.2
	OPENBSD_3_2_BASE:1.30
	OPENBSD_3_1:1.26.0.2
	OPENBSD_3_1_BASE:1.26
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@# @;


1.150
date	2016.09.11.19.59.58;	author deraadt;	state Exp;
branches;
next	1.149;
commitid	nE2mDEOBdUs9pcWt;

1.149
date	2016.09.11.03.09.31;	author deraadt;	state Exp;
branches;
next	1.148;
commitid	5bdWa87DXO6wfavj;

1.148
date	2016.09.08.20.41.30;	author ratchov;	state Exp;
branches;
next	1.147;
commitid	OYpPi53fdbnV5gsb;

1.147
date	2016.09.04.15.39.52;	author naddy;	state Exp;
branches;
next	1.146;
commitid	zStW2v519TMXvpgu;

1.146
date	2016.09.02.17.29.01;	author goda;	state Exp;
branches;
next	1.145;
commitid	jpWYiBSH0Zb5ggN1;

1.145
date	2016.05.21.21.35.52;	author deraadt;	state Exp;
branches;
next	1.144;
commitid	VqgBnfl5n3M9BSSw;

1.144
date	2016.05.21.15.18.50;	author deraadt;	state Exp;
branches;
next	1.143;
commitid	63AnsVd02uEVSedF;

1.143
date	2016.04.28.18.17.31;	author natano;	state Exp;
branches;
next	1.142;
commitid	yJ7nITWQGOm5qxNW;

1.142
date	2016.04.25.20.38.35;	author tedu;	state Exp;
branches;
next	1.141;
commitid	0kiqbjPHHvQxOXM9;

1.141
date	2016.03.12.18.02.17;	author espie;	state Exp;
branches;
next	1.140;
commitid	OOHlYIifEE4gewlK;

1.140
date	2015.11.10.21.50.02;	author sthen;	state Exp;
branches;
next	1.139;
commitid	cbpQoyIQoLnKxXlo;

1.139
date	2015.11.10.21.44.03;	author sthen;	state Exp;
branches;
next	1.138;
commitid	xjeR06qiavDtFv9k;

1.138
date	2015.10.23.15.14.46;	author claudio;	state Exp;
branches;
next	1.137;
commitid	D8oDiiCrSjVktjLG;

1.137
date	2015.03.11.18.44.13;	author deraadt;	state Exp;
branches;
next	1.136;
commitid	HFmUOqLhHlo6kb35;

1.136
date	2014.12.11.19.48.39;	author tedu;	state Exp;
branches;
next	1.135;
commitid	2Qyj7V6Rmn8q72sA;

1.135
date	2014.10.09.04.38.02;	author tedu;	state Exp;
branches;
next	1.134;
commitid	M66ALjcyb37tQVMc;

1.134
date	2014.08.20.11.23.41;	author mikeb;	state Exp;
branches;
next	1.133;
commitid	vzc4wz1s3pDevb7K;

1.133
date	2014.07.11.22.04.52;	author tedu;	state Exp;
branches;
next	1.132;
commitid	xQhhmJP574n3YeP9;

1.132
date	2014.03.14.23.51.25;	author kettenis;	state Exp;
branches;
next	1.131;

1.131
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.130;

1.130
date	2013.11.21.11.06.08;	author kettenis;	state Exp;
branches;
next	1.129;

1.129
date	2013.11.05.16.06.28;	author deraadt;	state Exp;
branches;
next	1.128;

1.128
date	2013.09.16.08.18.28;	author dcoppa;	state Exp;
branches;
next	1.127;

1.127
date	2013.08.21.15.14.26;	author ajacoutot;	state Exp;
branches;
next	1.126;

1.126
date	2013.08.20.14.30.19;	author ajacoutot;	state Exp;
branches;
next	1.125;

1.125
date	2013.08.08.10.44.27;	author jsg;	state Exp;
branches;
next	1.124;

1.124
date	2013.07.06.17.34.48;	author naddy;	state Exp;
branches;
next	1.123;

1.123
date	2013.07.06.16.15.27;	author naddy;	state Exp;
branches;
next	1.122;

1.122
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.121;

1.121
date	2013.06.15.23.20.57;	author halex;	state Exp;
branches;
next	1.120;

1.120
date	2013.06.03.17.34.15;	author tedu;	state Exp;
branches;
next	1.119;

1.119
date	2013.03.15.09.16.19;	author ratchov;	state Exp;
branches;
next	1.118;

1.118
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.117;

1.117
date	2012.12.04.10.45.15;	author mpi;	state Exp;
branches;
next	1.116;

1.116
date	2012.11.26.08.08.00;	author jasper;	state Exp;
branches;
next	1.115;

1.115
date	2012.09.08.17.18.53;	author mpi;	state Exp;
branches;
next	1.114;

1.114
date	2012.08.23.06.17.00;	author deraadt;	state Exp;
branches;
next	1.113;

1.113
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.112;

1.112
date	2011.10.22.19.31.40;	author miod;	state Exp;
branches;
next	1.111;

1.111
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.110;

1.110
date	2011.06.26.23.42.28;	author tedu;	state Exp;
branches;
next	1.109;

1.109
date	2011.04.19.23.09.19;	author todd;	state Exp;
branches;
next	1.108;

1.108
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.107;

1.107
date	2010.09.30.15.29.23;	author claudio;	state Exp;
branches;
next	1.106;

1.106
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.105;

1.105
date	2010.08.03.20.16.23;	author miod;	state Exp;
branches;
next	1.104;

1.104
date	2010.07.23.14.36.49;	author mglocker;	state Exp;
branches;
next	1.103;

1.103
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.102;

1.102
date	2010.07.03.04.08.11;	author krw;	state Exp;
branches;
next	1.101;

1.101
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.100;

1.100
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.99;

1.99
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.98;

1.98
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.97;

1.97
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.96;

1.96
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.95;

1.95
date	2009.06.03.14.45.40;	author jj;	state Exp;
branches;
next	1.94;

1.94
date	2009.04.05.17.52.21;	author jmc;	state Exp;
branches;
next	1.93;

1.93
date	2009.02.06.21.18.20;	author grange;	state Exp;
branches;
next	1.92;

1.92
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.91;

1.91
date	2008.11.30.04.24.26;	author jakemsr;	state Exp;
branches;
next	1.90;

1.90
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.89;

1.89
date	2008.06.28.21.48.29;	author mglocker;	state Exp;
branches;
next	1.88;

1.88
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.87;

1.87
date	2008.06.12.20.42.00;	author todd;	state Exp;
branches;
next	1.86;

1.86
date	2007.11.12.19.25.31;	author kettenis;	state Exp;
branches;
next	1.85;

1.85
date	2007.07.25.14.20.38;	author todd;	state Exp;
branches;
next	1.84;

1.84
date	2007.07.25.13.11.20;	author todd;	state Exp;
branches;
next	1.83;

1.83
date	2007.03.07.03.01.51;	author krw;	state Exp;
branches;
next	1.82;

1.82
date	2007.02.16.02.16.34;	author deraadt;	state Exp;
branches;
next	1.81;

1.81
date	2007.02.07.00.14.06;	author todd;	state Exp;
branches;
next	1.80;

1.80
date	2006.12.15.21.03.56;	author kettenis;	state Exp;
branches;
next	1.79;

1.79
date	2006.10.10.12.58.03;	author todd;	state Exp;
branches;
next	1.78;

1.78
date	2006.08.28.21.23.34;	author tsi;	state Exp;
branches;
next	1.77;

1.77
date	2006.04.15.18.20.57;	author todd;	state Exp;
branches;
next	1.76;

1.76
date	2006.03.28.18.48.47;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2006.03.27.06.35.21;	author deraadt;	state Exp;
branches;
next	1.74;

1.74
date	2006.03.27.04.07.48;	author deraadt;	state Exp;
branches;
next	1.73;

1.73
date	2006.03.15.02.21.31;	author deraadt;	state Exp;
branches;
next	1.72;

1.72
date	2005.12.27.19.03.09;	author miod;	state Exp;
branches;
next	1.71;

1.71
date	2005.11.16.03.48.05;	author deraadt;	state Exp;
branches;
next	1.70;

1.70
date	2005.10.06.06.43.59;	author otto;	state Exp;
branches;
next	1.69;

1.69
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.68;

1.68
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.67;

1.67
date	2005.10.04.07.40.35;	author otto;	state Exp;
branches;
next	1.66;

1.66
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.64;

1.64
date	2005.03.01.13.37.10;	author otto;	state Exp;
branches;
next	1.63;

1.63
date	2005.02.07.08.23.42;	author david;	state Exp;
branches;
next	1.62;

1.62
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.61;

1.61
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.60;

1.60
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.59;

1.59
date	2004.08.19.07.05.50;	author miod;	state Exp;
branches;
next	1.58;

1.58
date	2004.06.03.18.40.17;	author grange;	state Exp;
branches;
next	1.57;

1.57
date	2004.05.30.08.24.12;	author grange;	state Exp;
branches;
next	1.56;

1.56
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2004.04.11.18.15.23;	author millert;	state Exp;
branches;
next	1.54;

1.54
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.53;

1.53
date	2004.03.12.04.54.33;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2004.02.20.19.13.49;	author miod;	state Exp;
branches;
next	1.51;

1.51
date	2004.02.16.19.05.05;	author miod;	state Exp;
branches;
next	1.50;

1.50
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.49;

1.49
date	2004.02.13.23.35.03;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2004.02.10.02.46.22;	author mickey;	state Exp;
branches;
next	1.47;

1.47
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.46;

1.46
date	2004.02.05.22.23.29;	author todd;	state Exp;
branches;
next	1.45;

1.45
date	2004.01.13.13.40.17;	author todd;	state Exp;
branches;
next	1.44;

1.44
date	2004.01.12.22.33.09;	author todd;	state Exp;
branches;
next	1.43;

1.43
date	2004.01.12.22.31.35;	author todd;	state Exp;
branches;
next	1.42;

1.42
date	2003.10.15.02.01.24;	author todd;	state Exp;
branches;
next	1.41;

1.41
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.40;

1.40
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.39;

1.39
date	2003.06.18.18.11.07;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.37;

1.37
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	2003.01.06.05.57.39;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.34;

1.34
date	2002.12.05.04.33.23;	author kjc;	state Exp;
branches;
next	1.33;

1.33
date	2002.12.05.03.00.27;	author kjc;	state Exp;
branches;
next	1.32;

1.32
date	2002.11.08.19.09.21;	author mickey;	state Exp;
branches;
next	1.31;

1.31
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.30;

1.30
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.29;

1.29
date	2002.06.09.05.58.39;	author todd;	state Exp;
branches;
next	1.28;

1.28
date	2002.05.16.21.12.21;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2002.04.21.07.04.45;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2002.04.11.20.29.42;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.24;

1.24
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.23;

1.23
date	2002.02.23.18.29.34;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.14.04.43.08;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.10.21.53.03;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.09.19.35.31;	author drahn;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.09.17.01.41;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.08.20.54.35;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.23.08.23.19;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.23.07.54.41;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.23.06.21.20;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.08.05.29.13;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.12.19.20.16;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.06.23.46.05;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.03.14.50.38;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.16.13.48;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.150
log
@sync
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.69 2016/09/04 15:38:59 naddy Exp 
#	OpenBSD: MAKEDEV.common,v 1.93 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.83 2016/09/11 03:06:31 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
# Terminal ports:
#	cua[a-z]*	Zilog 8530 serial ports
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	tty[a-z]*	Zilog 8530 serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	wscons	Minimal wscons devices
#	ttyC-J*	wscons display devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# USB devices:
#	uall	All USB devices
#	ttyU*	USB serial ports
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	usb*	Bus control devices used by usbd for attach/detach
# Special purpose devices:
#	apm	Power management device
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bktr*	Video frame grabbers
#	bpf	Berkeley Packet Filter
#	diskmap	Disk mapper
#	drm*	Direct Rendering Manager
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	gpio*	General Purpose Input/Output
#	hotplug	devices hot plugging
#	pci*	PCI bus devices
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	radio*	FM tuner devices
#	*random	In-kernel random data source
#	rmidi*	Raw MIDI devices
#	tun*	Network tunnel driver
#	tap*	Ethernet tunnel driver
#	tuner*	Tuner devices
#	uk*	Unknown SCSI devices
#	video*	Video V4L2 devices
#	vscsi*	Virtual SCSI controller
#	switch*	Switch driver
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	: ${mklist[0]:=";mknod"}
	mklist[${#mklist[*]}]=" -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 43 0 640 kmem
	M klog		c 6 0 600
	M xf86		c 2 4 600
	M openprom	c 82 0 600
	;;


switch*)
	M switch$U c 89 $U 600
	;;

vscsi*)
	M vscsi$U c 83 $U 600
	;;

video*)
	M video$U  c 45 $U 600
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
	;;

uk*)
	M uk$U c 41 $U 640 operator
	;;

tuner*)
	M tuner$U c 75 $(($(($U*2))+16)) 644
	;;

tap*)
	M tap$U c 86 $U 600
	;;

tun*)
	M tun$U c 23 $U 600
	;;

rmidi*)
	M rmidi$U c 52 $U 666
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 40 $n 644
		n=$(($n+1))
	done
	;;

radio*)
	M radio$U	c 76 $U
	MKlist[${#MKlist[*]}]=";[ -e radio ] || ln -s radio$U radio"
	;;

pppx*)
	M pppx$U c 85 $U 600
	;;

pf*)
	M pf c 39 0 600
	;;

pci*)
	M pci$U	c 71 $U 600
	MKlist[${#MKlist[*]}]=";[ -h pci ] || ln -sf pci0 pci"
	;;

hotplug)
	M hotplug c 78 $U 400
	;;

gpio*)
	M gpio$U c 79 $U 600
	;;

fuse)
	M fuse$U c 88 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

drm*)
	M drm$U c 87 $U 600
	;;

diskmap)
	M diskmap c 84 0 640 operator
	;;

bpf)
	M bpf c 22 0 600
	M bpf0 c 22 0 600
	;;

bktr*)
	M bktr$U c 75 $U 644
	;;

bio)
	M bio c 80 0 600
	;;

audio*)
	M audio$U	c 44 $U
	M mixer$U	c 44 $(($U+16))
	M audioctl$U	c 44 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

apm*)
	M apm	c 25 0 644
	M apmctl	c 25 8 644
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 61 $U 660
	;;

ulpt*)
	M ulpt$U c 64 $U 660
	;;

uhid*)
	M uhid$U c 62 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 63 $(($n+10#$j)) 660
	done
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 66 $o 660 dialer root
	M cuaU$U c 66 $(($o+128)) 660 dialer root
	;;

uall)
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ugen2 ugen3 ugen4 ugen5
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 usb0 usb1
	R usb2 usb3 usb4 usb5 usb6 usb7
	;;

wsmouse[0-9]*)
	M wsmouse$U c 69 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 70 0 600
	M wskbd c 70 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 68 $U 600
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 67 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 67 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 77 0 666
	;;

tty[a-z])
	u=${i#tty*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	*) echo unknown tty device $i ;;
	esac
	M tty$u c 7 $n 660 dialer root
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 26 $o 660 dialer root
	M cua$U c 26 $(($o+128)) 660 dialer root
	;;

cua[a-z])
	u=${i#cua*}
	case $u in
	a) n=0 ;;
	b) n=1 ;;
	*) echo unknown cua device $i ;;
	esac
	M cua$u c 7 $(($n+128)) 660 dialer root
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}rst$U	c 20 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 10 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 14 19 $U 0
	;;

rd*)
	dodisk2 rd $U 17 17 $U 0
	;;

cd*)
	dodisk2 cd $U 3 9 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

ramdisk)
	R diskmap bio pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4
	R sd0 sd1 sd2 sd3 sd4 tty00 tty01 bpf std
	;;

all)
	R switch0 switch1 switch2 switch3 drm0 drm1 drm2 drm3 bio
	R gpio0 gpio1 gpio2 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0 tap0 tap1 tap2 tap3 tun0
	R tun1 tun2 tun3 pty0 diskmap vscsi0 ch0 cuaa cuab ttya ttyb
	R audio0 audio1 audio2 bpf fuse pppx hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 video0 video1 uk0 random
	R tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09
	R tty0a tty0b apm pf wd0 wd1 wd2 wd3 std st0 st1 fd
	;;

wd*|sd*)
	case $i in
	wd*) dodisk wd $U 0 11 $U 0;;
	sd*) dodisk sd $U 2 8 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
	cat
else
	sh
fi
@


1.149
log
@sync
@
text
@d368 2
a369 2
	M ttyU$U c 66 $o 660 dialer uucp
	M cuaU$U c 66 $(($o+128)) 660 dialer uucp
d449 1
a449 1
	M tty$u c 7 $n 660 dialer uucp
d455 2
a456 2
	M tty$U c 26 $o 660 dialer uucp
	M cua$U c 26 $(($o+128)) 660 dialer uucp
d466 1
a466 1
	M cua$u c 7 $(($n+128)) 660 dialer uucp
@


1.148
log
@sync after /dev/sound* removal
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.92 2016/09/08 20:39:28 ratchov Exp 
#	OpenBSD: MAKEDEV.mi,v 1.82 2016/03/12 17:58:59 espie Exp 
d274 1
a274 1
	M radio$U     c 76 $U
d536 1
a536 1
        cat
@


1.147
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.91 2016/09/04 15:38:59 naddy Exp 
d331 1
a331 1
	M sound$U	c 44 $U
a332 1
	M audio$U	c 44 $(($U+128))
a335 1
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
@


1.146
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.68 2016/09/02 17:06:13 goda Exp 
#	OpenBSD: MAKEDEV.common,v 1.90 2016/09/02 17:06:13 goda Exp 
a474 1
		M ${pre}st$U	b 5 $n 660 operator
@


1.145
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.67 2016/04/28 18:17:31 natano Exp 
#	OpenBSD: MAKEDEV.common,v 1.88 2016/05/21 15:17:49 deraadt Exp 
d87 1
d231 4
d240 1
a240 1
	M video$U  c 45 $U 600 
d507 9
a515 9
	R drm0 drm1 drm2 drm3 bio gpio0 gpio1 gpio2 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 pty0 diskmap vscsi0
	R ch0 cuaa cuab ttya ttyb audio0 audio1 audio2 bpf fuse pppx
	R hotplug ptm local wscons pci0 pci1 pci2 pci3 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 video0 video1 uk0 random tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b apm pf wd0
	R wd1 wd2 wd3 std st0 st1 fd
@


1.144
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.87 2016/04/28 18:17:30 natano Exp 
d235 1
a235 1
	M video$U  c 45 $U
@


1.143
log
@Replace /dev/bpf[0-9] with /dev/bpf and /dev/bpf0. The /dev/bpf node is
unused for now, but I plan to convert all programs in base to use it in
a future diff. /dev/bpf0 is for compatibility with existing binaries
and is to be removed after a transition period.

ok rpe krw, for the installer part
"Let's see it hit the tree." deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.66 2016/04/25 20:38:11 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.86 2016/04/25 20:39:42 tedu Exp 
@


1.142
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.85 2016/02/05 06:29:45 uebayasi Exp 
d68 1
a68 1
#	bpf*	Berkeley Packet Filter
d312 3
a314 2
bpf*)
	M bpf$U c 22 $U 600
d498 1
a498 1
	R sd0 sd1 sd2 sd3 sd4 tty00 tty01 bpf0 std
d504 7
a510 8
	R tap0 tap1 tap2 tap3 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3
	R bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 ch0 cuaa
	R cuab ttya ttyb audio0 audio1 audio2 fuse pppx hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 video0
	R video1 uk0 random tty00 tty01 tty02 tty03 tty04 tty05 tty06
	R tty07 tty08 tty09 tty0a tty0b apm pf wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.141
log
@regen generated files after MAKEDEVs commits
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.65 2015/10/23 15:14:12 claudio Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
a80 1
#	systrace*	System call tracing device
a254 4
systrace)
	M systrace c 50 0 644
	;;

d509 2
a510 2
	R tty07 tty08 tty09 tty0a tty0b apm pf systrace wd0 wd1 wd2
	R wd3 std st0 st1 fd
@


1.140
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.81 2015/11/10 21:49:18 sthen Exp 
d179 2
a180 1
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
@


1.139
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.80 2015/11/10 21:42:28 sthen Exp 
@


1.138
log
@Sync (after tap addition)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.79 2015/10/23 15:14:11 claudio Exp 
@


1.137
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.63 2014/12/11 19:48:03 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.78 2014/12/11 19:46:15 tedu Exp 
d83 1
d247 4
d507 8
a514 7
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 diskmap vscsi0 ch0 cuaa cuab ttya ttyb audio0
	R audio1 audio2 fuse pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 video0 video1 uk0 random tty00
	R tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09 tty0a
	R tty0b apm pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.136
log
@regen
@
text
@d225 1
a225 1
	M openprom	c 82 0 640 kmem
@


1.135
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.62 2014/10/09 04:37:43 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.77 2014/10/09 04:33:50 tedu Exp 
a61 1
#	urio*	Diamond Multimedia Rio 500
a343 4
urio*)
	M urio$U c 65 $U 660
	;;

d369 2
a370 2
	R ugen6 ugen7 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3 urio0 usb0
	R usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.134
log
@Remove userland bits related to the crypto(4) interface;  ok deraadt
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.60 2014/07/11 22:04:09 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.74 2014/07/11 21:58:32 tedu Exp 
a75 1
#	lkm	Loadable kernel modules interface
a285 4
lkm)
	M lkm c 24 0 640 _lkm
	;;

d511 3
a513 4
	R rmidi6 rmidi7 tuner0 radio0 video0 video1 uk0 random lkm
	R tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07 tty08 tty09
	R tty0a tty0b apm pf systrace wd0 wd1 wd2 wd3 std st0
	R st1 fd
@


1.133
log
@regen
@
text
@a69 1
#	crypto	Hardware crypto access driver
a316 4
crypto)
	M crypto c 47 0
	;;

d518 1
a518 1
	R tty0a tty0b apm crypto pf systrace wd0 wd1 wd2 wd3 std st0
@


1.132
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.59 2014/03/14 23:47:04 kettenis Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
a69 1
#	bthub*	Bluetooth Hubs
a321 4
bthub*)
	M bthub$U c 81 $U
	;;

d515 10
a524 10
	R drm0 drm1 drm2 drm3 bthub0 bthub1 bthub2 bio gpio0 gpio1
	R gpio2 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7
	R sd8 sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3
	R bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 ch0 cuaa
	R cuab ttya ttyb audio0 audio1 audio2 fuse pppx hotplug ptm
	R local wscons pci0 pci1 pci2 pci3 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 video0
	R video1 uk0 random lkm tty00 tty01 tty02 tty03 tty04 tty05
	R tty06 tty07 tty08 tty09 tty0a tty0b apm crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.131
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.58 2014/01/05 01:16:52 deraadt Exp 
a72 1
#	agp*	AGP bridge
a312 5
	;;

agp*)
	M agp$U c 86 $U
	MKlist[${#MKlist[*]}]=";[ -e agpgart ] || ln -s agp$U agpgart"
@


1.130
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.57 2013/11/05 16:05:30 deraadt Exp 
@


1.129
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
d313 1
a313 1
	M drm$U c 87 $U 660
@


1.128
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.56 2013/08/21 15:12:49 ajacoutot Exp 
#	OpenBSD: MAKEDEV.common,v 1.71 2013/09/16 08:17:02 dcoppa Exp 
a78 1
#	iop*	I2O controller devices
a293 4
iop*)
	M iop$U c 73 $U 660
	;;

d531 5
a535 5
	R local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 video0 video1 uk0 random lkm tty00 tty01 tty02 tty03
	R tty04 tty05 tty06 tty07 tty08 tty09 tty0a tty0b apm crypto
	R pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.127
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.55 2013/08/08 10:39:29 jsg Exp 
#	OpenBSD: MAKEDEV.common,v 1.69 2013/08/20 14:27:24 ajacoutot Exp 
d399 3
a401 2
	R ttyU0 ttyU1 ttyU2 ttyU3 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1
	R uhid2 uhid3 urio0 usb0 usb1 usb2 usb3 usb4 usb5 usb6 usb7
@


1.126
log
@regen
@
text
@a63 1
uscan_dev
@


1.125
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.68 2013/07/06 17:33:44 naddy Exp 
d64 1
a64 1
#	uscanner*	Scanners
a366 4
uscanner*)
	M uscanner$U c 74 $U 660
	;;

d401 1
a401 2
	R uhid2 uhid3 uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	R usb6 usb7
@


1.124
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.54 2013/06/03 17:34:15 tedu Exp 
#	OpenBSD: MAKEDEV.common,v 1.67 2013/07/06 16:14:38 naddy Exp 
d536 10
a545 10
	R drm0 bthub0 bthub1 bthub2 bio gpio0 gpio1 gpio2 vnd0 vnd1
	R vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1
	R rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 pty0 diskmap vscsi0 ch0 cuaa cuab ttya ttyb
	R audio0 audio1 audio2 fuse pppx hotplug ptm local wscons pci0
	R pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 video0 video1 uk0
	R random lkm tty00 tty01 tty02 tty03 tty04 tty05 tty06 tty07
	R tty08 tty09 tty0a tty0b apm crypto pf systrace wd0 wd1 wd2
	R wd3 std st0 st1 fd
@


1.123
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
d544 2
a545 1
	R apm crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.122
log
@regen
@
text
@d543 2
a544 2
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.121
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d77 1
a77 1
#	fuse*	Userland Filesystem
d308 1
a308 1
fuse*)
d540 5
a544 5
	R audio0 audio1 audio2 fuse0 fuse1 fuse2 fuse3 pppx hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 video0 video1 uk0 random lkm tty00 tty01 tty02 tty03
	R apm crypto pf systrace wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.120
log
@fuse on more archs
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.53 2013/03/15 09:10:52 ratchov Exp 
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d77 1
a77 1
#	fuse	Userland Filesystem
d308 1
a308 1
fuse)
d540 5
a544 5
	R audio0 audio1 audio2 fuse pppx hotplug ptm local wscons pci0
	R pci1 pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3
	R rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 video0 video1 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.119
log
@regen after sequencer removal
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.62 2013/03/15 09:10:52 ratchov Exp 
d77 1
d308 4
d540 5
a544 5
	R audio0 audio1 audio2 pppx hotplug ptm local wscons pci0 pci1
	R pci2 pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 video0 video1 uk0 random
	R lkm tty00 tty01 tty02 tty03 apm crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.118
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.52 2012/12/04 10:44:20 mpi Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
a86 1
#	music*	MIDI sequencer
a259 7
music*)
	M music$U     c 53 $U
	M sequencer$U c 53 $(($U+128))
	MKlist[${#MKlist[*]}]=";[ -e music ] || ln -s music$U music"
	MKlist[${#MKlist[*]}]=";[ -e sequencer ] || ln -s sequencer$U sequencer"
	;;

d537 3
a539 3
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 video0 video1 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.117
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.51 2012/09/08 17:18:22 mpi Exp 
d543 2
a544 2
	R audio0 audio1 audio2 hotplug ptm local wscons pci0 pci1 pci2
	R pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
@


1.116
log
@regen
@
text
@d74 1
d323 5
@


1.115
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.50 2012/08/23 06:15:28 deraadt Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d192 1
a192 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d196 1
a196 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d200 1
a200 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d204 1
a204 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.114
log
@sync
@
text
@d74 1
d320 4
d533 9
a541 9
	R bthub0 bthub1 bthub2 bio gpio0 gpio1 gpio2 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8 sd9 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 diskmap vscsi0 ch0 cuaa cuab ttya ttyb audio0
	R audio1 audio2 hotplug ptm local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 video0 video1 uk0 random
	R lkm tty00 tty01 tty02 tty03 apm crypto pf systrace wd0 wd1
	R wd2 wd3 std st0 st1 fd
@


1.113
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.49 2012/04/06 15:18:41 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a78 1
#	nnpfs*	NNPFS filesystem node
a296 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d531 6
a536 6
	R bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 cuaa cuab ttya ttyb
	R audio0 audio1 audio2 hotplug ptm local wscons pci0 pci1 pci2
	R pci3 iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4
	R rmidi5 rmidi6 rmidi7 tuner0 radio0 music0 video0 video1 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 std st0 st1 fd
@


1.112
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.48 2011/10/22 19:31:23 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
a33 1
#	raid*	RAIDframe disk devices
d541 1
a541 1
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
d544 1
a544 1
wd*|sd*|raid*)
a547 1
	raid*) dodisk raid $U 19 54 $U 0;;
@


1.111
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.47 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d538 3
a540 3
	R hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 video0 video1 audio0 audio1 audio2 uk0
@


1.110
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.46 2011/04/19 23:07:55 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.55 2011/06/26 23:28:23 tedu Exp 
a32 1
#	ccd*	Concatenated disk devices
d534 9
a542 10
	R bthub0 bthub1 bthub2 bio gpio0 gpio1 gpio2 ccd0 ccd1 ccd2
	R ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 sd5 sd6 sd7 sd8
	R sd9 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 cuaa
	R cuab ttya ttyb hotplug ptm local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5
	R rmidi6 rmidi7 tuner0 radio0 music0 video0 video1 audio0
	R audio1 audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
d545 1
a545 1
wd*|sd*|raid*|ccd*)
a549 1
	ccd*) dodisk ccd $U 16 18 $U 0;;
@


1.109
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
@


1.108
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.45 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
d87 2
d262 11
d540 5
a544 4
	R iop0 iop1 uall tuner0 radio0 video0 video1 audio0 audio1
	R audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.107
log
@regen
@
text
@a501 1
	dodisk svnd $U 14 19 $U 2048
@


1.106
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.43 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d84 1
d272 4
@


1.105
log
@regen
@
text
@d44 1
a45 1
#	cua[a-z]*	Zilog 8530 serial ports
d75 1
d77 1
a78 1
#	gpio*	General Purpose Input/Output
d81 1
a90 1
#	nnpfs*	NNPFS filesystem node
a91 1
#	diskmap	Disk mapper
a233 4
diskmap)
	M diskmap c 84 0 640 operator
	;;

a237 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d282 4
d294 4
a301 4
hotplug)
	M hotplug c 78 $U 400
	;;

d308 4
d464 7
a478 7
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 26 $o 660 dialer uucp
	M cua$U c 26 $(($o+128)) 660 dialer uucp
@


1.104
log
@Sync.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
d387 1
@


1.103
log
@sync
@
text
@d522 4
a525 3
	R iop0 iop1 uall tuner0 radio0 video0 audio0 audio1 audio2 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.102
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.101
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.42 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a83 1
#	ss*	SCSI scanners
a266 8
ss*)
	M ss$U c 42 $(($U*16)) 640 operator
	M nss$U c 42 $(($(($U*16))+1)) 640 operator
	M enss$U c 42 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d520 5
a524 6
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ss0 ss1
	R ch0 cuaa cuab ttya ttyb hotplug ptm local wscons pci0 pci1
	R pci2 pci3 iop0 iop1 uall tuner0 radio0 video0 audio0 audio1
	R audio2 uk0 random lkm tty00 tty01 tty02 tty03 apm crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.100
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.41 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d521 2
a522 2
	R bio pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0 sd1
	R sd2 sd3 sd4 tty00 tty01 bpf0 std
@


1.99
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d236 1
a236 1
	M diskmap b 84 0 640 operator
@


1.98
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.40 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d92 1
d235 4
d529 6
a534 5
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 vscsi0 nnpfs0 ss0 ss1 ch0 cuaa
	R cuab ttya ttyb hotplug ptm local wscons pci0 pci1 pci2 pci3
	R iop0 iop1 uall tuner0 radio0 video0 audio0 audio1 audio2 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.97
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d393 1
a393 1
wsmouse*)
d402 1
a402 1
wskbd*)
@


1.96
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.39 2009/06/03 14:45:40 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d91 1
d234 4
d524 3
a526 3
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 nnpfs0 ss0 ss1 ch0 cuaa cuab
	R ttya ttyb hotplug ptm local wscons pci0 pci1 pci2 pci3 iop0
	R iop1 uall tuner0 radio0 video0 audio0 audio1 audio2 uk0
@


1.95
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.38 2009/02/06 21:17:15 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.42 2009/04/05 17:49:14 jmc Exp 
@


1.94
log
@regen;
@
text
@d90 1
a90 1
#	xfs*	XFS filesystem node
d233 2
a234 2
xfs*)
	M xfs$U c 51 $U 600
d519 1
a519 1
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0 ss1 ch0 cuaa cuab
@


1.93
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
d89 1
a89 1
#	video*	Video V4L devices
@


1.92
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.37 2009/01/25 17:30:48 miod Exp 
d517 7
a523 7
	R ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 pty0 xfs0 ss0 ss1 ch0 cuaa cuab ttya ttyb hotplug
	R ptm local wscons pci0 pci1 pci2 pci3 iop0 iop1 uall tuner0
	R radio0 video0 audio0 audio1 audio2 uk0 random lkm tty00
	R tty01 tty02 tty03 apm crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.91
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.36 2008/06/28 21:46:05 mglocker Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a226 1
	M drum		c 3 0 640 kmem
@


1.90
log
@sync
@
text
@d522 3
a524 3
	R radio0 video0 audio0 uk0 random lkm tty00 tty01 tty02 tty03
	R apm crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd
@


1.89
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
d269 1
a269 1
	for pre in " " s u p a
@


1.88
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.34 2008/06/13 21:07:28 todd Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
a66 1
#	video*	Video V4L devices
d89 1
d238 5
a345 5
	;;

video*)
	M video$U  c 45 $U
	MKlist[${#MKlist[*]}]=";[ -e video ] || ln -s video$U video"
@


1.87
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.33 2008/06/12 20:39:29 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d512 2
a513 2
	R pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0 sd1 sd2
	R sd3 sd4 tty00 tty01 bpf0 std
@


1.86
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.32 2007/11/12 19:24:43 kettenis Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d67 1
d343 5
d522 3
a524 3
	R radio0 audio0 uk0 random lkm tty00 tty01 tty02 tty03 apm
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.85
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.31 2007/07/25 14:19:36 todd Exp 
d229 1
@


1.84
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.30 2007/07/25 13:10:14 todd Exp 
d510 8
a517 8
	R bthub bio gpio0 gpio1 gpio2 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1
	R vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0
	R xfs0 ss0 ss1 ch0 cuaa cuab ttya ttyb hotplug ptm local
	R wscons pci0 pci1 pci2 pci3 iop0 iop1 uall tuner0 radio0
	R audio0 uk0 random lkm tty00 tty01 tty02 tty03 apm crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.83
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.29 2007/02/07 00:12:46 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d73 1
d309 4
d510 8
a517 7
	R bio gpio0 gpio1 gpio2 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2
	R vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0
	R ss0 ss1 ch0 cuaa cuab ttya ttyb hotplug ptm local wscons
	R pci0 pci1 pci2 pci3 iop0 iop1 uall tuner0 radio0 audio0 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.82
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
d279 1
a279 1
	MKlist[${#MKlist[*]}]=";[ -e pci ] || ln -s pci0 pci"
@


1.81
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
@


1.80
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.28 2006/04/16 11:34:02 todd Exp 
d70 1
d316 4
d505 5
a509 5
	R gpio0 gpio1 gpio2 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3
	R sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0
	R ss1 ch0 cuaa cuab ttya ttyb hotplug ptm local wscons pci0
	R pci1 pci2 pci3 iop0 iop1 uall tuner0 radio0 audio0 uk0
@


1.79
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.30 2006/10/10 12:33:41 todd Exp 
d78 1
a78 1
#	pci	PCI bus device
d276 3
a278 2
pci)
	M pci c 71 0 600
d503 4
a506 4
	R ss1 ch0 cuaa cuab ttya ttyb hotplug ptm local wscons pci
	R iop0 iop1 uall tuner0 radio0 audio0 uk0 random lkm tty00
	R tty01 tty02 tty03 apm crypto pf systrace wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.78
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
d367 2
a368 2
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
@


1.77
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.26 2006/03/28 18:47:57 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.25 2006/04/15 18:19:12 todd Exp 
d53 1
a53 1
#	ttyC-F*	wscons display devices
d384 2
a385 2
tty[C-F]*)
	U=${i##tty[C-F]}
d391 4
@


1.76
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d491 1
a491 1
	R sd3 sd4 bpf0 std
@


1.75
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.25 2006/03/27 06:34:36 deraadt Exp 
d454 2
a455 2
	M tty$U c 7 $o 660 dialer uucp
	M cua$U c 7 $(($o+128)) 660 dialer uucp
@


1.74
log
@ttya now is same as tty00 (for a few days)
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.24 2006/03/27 04:00:02 deraadt Exp 
d498 4
a501 4
	R ss1 ch0 cuaa cuab cuac cuad ttya ttyb ttyc ttyd hotplug ptm
	R local wscons pci iop0 iop1 uall tuner0 radio0 audio0 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.73
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.23 2006/03/15 02:20:28 deraadt Exp 
d45 2
d431 20
d498 4
a501 4
	R ss1 ch0 hotplug ptm local wscons pci iop0 iop1 uall tuner0
	R radio0 audio0 uk0 random lkm tty00 tty01 tty02 tty03 apm
	R crypto pf systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3
	R std st0 st1 fd
@


1.72
log
@Regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.22 2005/11/16 03:44:12 deraadt Exp 
a224 1
	M reload	c 2 20 640 kmem
@


1.71
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d50 1
a50 1
#	ttyC0	Minimal wscons devices
d71 1
a71 1
#	fd	fd/* nodes for fdescfs
@


1.70
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.21 2005/08/01 22:22:13 deraadt Exp 
d73 1
d287 4
d474 7
a480 6
	R ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0 ss1 ch0 hotplug ptm
	R local wscons pci iop0 iop1 uall tuner0 radio0 audio0 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.69
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d173 1
a173 2
RMlist="rm -f"
MKlist=":"
d176 1
a176 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d180 1
a180 1
	RMlist="$RMlist $1"
d184 1
a184 1
		MKlist="$MKlist;chown $7:$G $1"
d187 10
a196 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a197 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d252 2
a253 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d267 1
a267 1
	MKlist="$MKlist;[ -e radio ] || ln -s radio$U radio"
d291 1
a291 1
	RMlist="mkdir -p fd;$RMlist" n=0
d293 1
a293 1
	MKlist="$MKlist;chmod 555 fd"
d313 4
a316 4
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
d493 8
a500 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d502 1
a502 1
	echo "$list" | sh
@


1.68
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d156 1
a156 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.67
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a152 1
	RMlist="$RMlist $1$2? r$1$2?"
d156 2
a157 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a159 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.66
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a189 1
	mklist="$mklist $1"
@


1.65
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.20 2005/03/29 16:40:09 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.64
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.19 2004/05/30 08:17:18 grange Exp 
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.63
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
d368 1
a368 1
	R uscanner0 urio0 usb0 usb1 usb2 usb3
@


1.62
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.61
log
@sync
@
text
@d106 1
a106 1
	local t="$1"  
@


1.60
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d353 1
a353 1
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d355 1
a355 1
		M ugen$U.$j c 63 $(($n+$j)) 660
d393 1
a393 1
	[0-9a-f]) M tty$n$U c 67 $(( 16#$U + $m )) 600;;
@


1.59
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
d363 1
@


1.58
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d83 1
a83 1
#	uk*	SCSI unknown devices
@


1.57
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.56
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.18 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
d72 1
d292 4
d476 4
a479 4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0 ss1 ch0 ptm local
	R wscons pci iop0 iop1 uall tuner0 radio0 audio0 uk0 random
	R lkm tty00 tty01 tty02 tty03 apm crypto pf systrace wd0 wd1
	R wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.55
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
d362 1
a362 1
	R uscanner0 urio0 usb0 usb1
@


1.54
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d47 2
a48 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.53
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.17 2004/03/12 04:54:05 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d47 2
a48 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d404 6
a409 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d411 1
a411 1
	while [ $n -lt 16 ]
d413 2
a414 2
		nam=$name$(hex $n)
		off=$(($U*16))
d471 4
a474 4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 xfs0 ss0 ss1 ch0 ptm
	R local wscons pci iop0 iop1 uall tuner0 radio0 audio0 uk0
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf systrace
	R wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.52
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.16 2004/02/16 19:01:01 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
d57 1
a57 1
#	usbs	All USB devices
d360 1
a360 1
usbs)
d468 1
a468 1
	R local wscons pci iop0 iop1 usbs tuner0 radio0 audio0 uk0
@


1.51
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d34 1
a34 1
#	cd*	SCSI cdrom drives
d37 1
a37 1
#	sd*	SCSI disks
@


1.50
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.15 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 6
#	std	standard devices
#	fd	makes fd/* for the fdescfs
#	local	configuration specific devices
#	ramdisk	makes all devices for a ramdisk kernel
# Tapes:
#	st*	SCSI tapes
d33 1
a33 2
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
#	sd*	SCSI disks
d35 1
a35 2
#	ch*	SCSI media changer
#	vnd*	"file" pseudo-disks
d37 6
a42 8
#	raid*	RAIDframe disk devices
#	ccd*	concatenated disk devices
# Console ports:
#	ttyC0	wscons screen 0
#	ttyC-F*	wscons virtual consoles
#	wskbd*	wscons keyboards
#	wsmouse*	wscons mice
#	wsmux	wscons keyboard/mouse mux devices
a45 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d47 9
d57 3
a59 1
#	usb*	Bus control devices used by usbd for attach/detach
a60 1
#	ugen*	Generic device
d63 1
a63 1
#	ttyU*	Serial ports
d66 3
a68 2
#	audio*	audio device
#	apm		power management device
d70 8
a77 4
#	tun*	network tunnel driver
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	uk*	SCSI Unknown device
d79 5
a83 10
#	xfs*	XFS filesystem devices
#	iop*	I2O controller device
#	pf*	Packet Filter
#	crypto	hardware crypto access driver
#	usbs	make USB devices
#	pci	PCI bus device
#	systrace*	system call tracing device
#	bktr*	video capturing
#	tuner*	tuner device
#	radio*	FM tuner device
d233 6
a238 3
radio*)
	M radio$U     c 76 $U
	MKlist="$MKlist;[ -e radio ] || ln -s radio$U radio"
d245 2
a246 2
bktr*)
	M bktr$U c 75 $U 644
a252 25
pci)
	M pci c 71 0 600
	;;

usbs)
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1
	;;

crypto)
	M crypto c 47 0
	;;

pf*)
	M pf c 39 0 600
	;;

iop*)
	M iop$U c 73 $U 660
	;;

xfs*)
	M xfs$U c 51 $U 600
	;;

a260 4
uk*)
	M uk$U c 41 $U 640 operator
	;;

d270 13
d287 12
a298 2
tun*)
	M tun$U c 23 $U 600
d305 2
a306 3
apm*)
	M apm	c 25 0 644
	M apmctl	c 25 8 644
d320 5
d329 3
a331 4
ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 66 $o 660 dialer uucp
d342 4
d354 4
a357 2
uhid*)
	M uhid$U c 62 $U 660
d360 3
a362 3
usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 61 $U 660
d365 2
a366 27
ptm)
	M ptm c 77 0 666
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
	n=0
	while [ $n -lt 16 ]
	do
		nam=$name$(hex $n)
		off=$(($U*16))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 7 $o 660 dialer uucp
	M cua$U c 7 $(($o+128)) 660 dialer uucp
a373 4
wsmouse*)
	M wsmouse$U c 69 $U 600
	;;

d399 16
a414 2
rd*)
	dodisk2 rd $U 17 17 $U 0
d417 2
a418 3
vnd*)
	dodisk vnd $U 14 19 $U 0
	dodisk svnd $U 14 19 $U 2048
d421 5
a425 6
ch*)
	M ch$U c 10 $U 660 operator
	;;

cd*)
	dodisk2 cd $U 3 9 $U 0
d438 15
a452 3
ramdisk)
	R pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0 sd1 sd2
	R sd3 sd4 bpf0 std
d459 3
a461 4
fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
@


1.49
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.14 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.48
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d52 1
a52 1
#	tty*	set of 16 slave psuedo terminals
@


1.47
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.13 2004/01/13 13:38:21 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.46
log
@sync
@
text
@d54 1
d357 4
d465 1
a465 1
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 xfs0 ss0 ss1 ch0
@


1.45
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
a481 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d490 1
a490 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.44
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.12 2004/01/12 22:18:24 todd Exp 
a49 1
#	ttyE?	Workstation console (framebuffer & keyboard) tty emulators
a228 7
ttyE*)
	type=E
	case $type in
	E)	major=25; minor=$unit ;;
	esac
	M tty$type$unit c $major $minor 660
	;;
d443 2
a444 2
	R pty0 ttyE0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0 sd1
	R sd2 sd3 sd4 bpf0 std
@


1.43
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.42
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.11 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d61 1
a61 1
#	utty*	Serial ports
d101 8
d260 1
a260 1
	R utty0 utty1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
d333 4
a336 2
utty*)
	M utty$U c 66 $U 660
@


1.41
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
d374 1
a374 1
	o=$(hextod $U)
@


1.40
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d51 1
a51 1
#	tty0*	NS16x50 serial ports
d101 1
a101 1
trunc()
d103 16
a118 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
d372 5
a376 3
tty0*)
	M tty$U c 7 $U 660 dialer uucp
	M cua$U c 7 $(($U+128)) 660 dialer uucp
@


1.39
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d408 1
a408 1
	dodisk svnd $U 14 19 $U 128
@


1.38
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.10 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.37
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d149 1
a149 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d181 1
a181 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.36
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d184 1
a184 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.35
log
@redo "make allarchs".
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d293 1
a293 1
	M lkm c 24 0 640 kmem
@


1.34
log
@replace MAKEDEVs by auto-generated ones.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.9 2002/11/08 19:06:45 mickey Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.33
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d457 2
a458 3
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd
@


1.32
log
@regen
@
text
@a80 1
#	altq/	ALTQ control interface
a266 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 72 $U 644
		U=$(($U+1))
	done
	;;

d457 1
a457 1
	R random lkm tty00 tty01 tty02 tty03 apm crypto pf altq
@


1.31
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.8 2002/10/16 15:48:31 todd Exp 
d88 3
d230 13
d465 4
a468 3
	R local wscons pci iop0 iop1 usbs audio0 uk0 random lkm tty00
	R tty01 tty02 tty03 apm crypto pf altq systrace wd0 wd1 wd2
	R wd3 raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.30
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.7 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d431 2
a432 2
	R bpf0 std pty0 ttyE0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4
	R sd0 sd1 sd2 sd3 sd4
@


1.29
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.28
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.27
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.6 2002/04/21 07:04:28 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.44 2002/04/17 22:53:04 miod Exp 
d88 1
d228 4
d451 2
a452 2
	R tty01 tty02 tty03 apm crypto pf altq wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.26
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.5 2002/02/23 17:02:03 matthieu Exp 
#	OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp 
d224 1
a224 1
	M tty$type$unit c $major $minor
@


1.25
log
@regen. some of these were missed previously.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d228 1
a228 1
	M pci c 71 0 664
@


1.24
log
@random typo fix; ok deraadt@@
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
@


1.23
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.5 2002/02/23 17:02:03 matthieu Exp 
#	OpenBSD: MAKEDEV.mi,v 1.40 2002/02/21 18:36:54 deraadt Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d445 3
a447 3
	R local wscons pci iop0 iop1 usbs audio0 uk0 rndrandom lkm
	R tty00 tty01 tty02 tty03 apm crypto pf altq wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.22
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.19 2002/02/19 21:06:00 todd Exp $
d215 1
@


1.21
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d426 2
a427 2
	R bpf0 std random pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3
	R wd4 sd0 sd1 sd2 sd3 sd4
d444 3
a446 3
	R local wscons pci iop0 iop1 usbs audio0 uk0 random lkm tty00
	R tty01 tty02 tty03 apm crypto pf altq wd0 wd1 wd2 wd3 raid0
	R raid1 raid2 raid3 std st0 st1 fd
@


1.20
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d426 2
a427 2
	R bpf0 std pty0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4 sd0
	R sd1 sd2 sd3 sd4
d444 3
a446 3
	R local wscons pci iop0 iop1 usbs audio0 uk0 rndrandom lkm
	R tty00 tty01 tty02 tty03 apm crypto pf altq wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 std st0 st1 fd
@


1.19
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
d426 2
a427 2
	R bpf0 std pty0 ttyE0 rd0 cd0 cd1 st0 st1 wd0 wd1 wd2 wd3 wd4
	R sd0 sd1 sd2 sd3 sd4
@


1.18
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
d54 1
a54 1
#	ttyC*	wscons virtual consoles
d377 8
a384 2
ttyC*)
	U=${i##ttyC}
d386 2
a387 2
	[0-9a-f]) M ttyC$U c 67 $(( 16#$U )) 600;;
	cfg) M ttyCcfg c 67 255 600;;
d393 3
a395 4
	R ttyCcfg
	R ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5 ttyC6 ttyC7 ttyC8 ttyC9
	R ttyCa ttyCb wsmux wskbd0 wskbd1 wskbd2 wskbd3
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3
@


1.17
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d49 1
a49 1
#	rd*	"ramdisk" pseudo-disks
@


1.16
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d436 6
a441 6
	R local wscons pci iop0 iop1 usbs audio0 xfs0 ss0 ss1 uk0
	R rndrandom lkm tty00 tty01 tty02 tty03 apm crypto pf altq
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 wd0 wd1 wd2 wd3 rd0 raid0 raid1 raid2 raid3 ccd0
	R ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 cd1 ch0 st0 st1
	R pty0 pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.15
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.3 2002/01/23 07:53:01 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d260 3
a262 1
	M ss$U c 42 $U 440 operator
d342 6
a347 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d352 1
@


1.14
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
d44 1
a44 1
#	wd*	"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
@


1.13
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d451 1
a451 1
	R pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.12
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.26 2002/02/10 21:52:30 deraadt Exp 
d137 1
@


1.11
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.25 2002/02/09 19:34:40 drahn Exp 
d97 7
a103 7
		[0-9]) echo -n $1;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d106 1
d118 1
d134 1
d148 1
d162 1
d164 6
a169 6
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
d171 1
d192 1
a343 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
d481 2
a482 2
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
@


1.10
log
@sync, and update, to make "ramdisk" target disk
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.24 2002/02/09 16:59:50 deraadt Exp 
a33 1

d424 2
a425 1
	R bpf0 std pty0 ttyE0 rd0 cd0 cd1 st0 st1 sd0 sd1 sd2 sd3 sd4
@


1.9
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
@


1.8
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.22 2002/01/23 08:09:30 todd Exp 
d188 1
d225 1
a225 1
	R urio0 usb0 usb1
d442 1
a442 1
	R bpf8 bpf9 rd0 raid0 raid1 raid2 raid3 wd0 wd1 wd2 wd3 ccd0
@


1.7
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.macppc/MAKEDEV.md,v 1.2 2002/01/08 03:26:03 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.20 2002/01/23 06:43:53 todd Exp 
d438 1
a438 1
	R local wscons pci iop0 iop1 usbs audio0 xfs0 ss0 uk0
d442 2
a443 2
	R ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std cd0 ch0 st0 pty0 fd
	R sd0 sd1 sd2 sd3 sd4
@


1.6
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.18 2002/01/23 06:10:35 todd Exp 
d34 1
a193 9
ramdisk)
	R std
	R sd0 sd1 sd2 sd3 sd4 st0 st1 cd0 cd1
	R rd0
	R ttyE0
	R random
	R tty00 tty01 pty0
	;;

d421 4
@


1.5
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.15 2002/01/08 05:10:38 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp 
d231 2
a232 2
	R usb0 usb1 urio uscanner0 uhid0 uhid1 uhid2 uhid3
	R ulpt0 ulpt1 ugen0 ugen1 utty0 utty1
d442 6
a447 7
	R std fd sd0 sd1 sd2 sd3 sd4 pty0 pty1 st0 st1 ch0 cd0 cd1
	R vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3 wd0 wd1 wd2 wd3
	R raid0 raid1 raid2 raid3 rd0
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R tun0 tun1 tun2 tun3 altq pf crypto apm
	R tty00 tty01 tty02 tty03 lkm random uk0 uk1 ss0 ss1 xfs0
	R audio0 usbs iop0 iop1 pci wscons local
d450 1
a450 1
sd*|ccd*|raid*|wd*)
d452 1
d454 1
a455 2
	raid*) dodisk raid $U 19 54 $U 0;;
	wd*) dodisk wd $U 0 11 $U 0;;
@


1.4
log
@/dev/crypto
@
text
@a1 1
#	$OpenBSD: MAKEDEV,v 1.3 2001/11/06 23:46:05 drahn Exp $
d3 6
a8 2
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
d10 1
a10 1
# Written and contributed by W. Jolitz 12/90
d12 2
a13 13
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d15 18
a32 2
#	from: @@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#	$NetBSD: MAKEDEV,v 1.17 1996/02/03 15:02:42 briggs Exp $ 
d38 1
a38 1
#	fd	makes fd/* for the fdescfs.
a40 1
#
a42 1
#
d44 1
a44 2
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	wd*	IDE disks
d47 1
d50 1
d52 6
a57 2
#	raid*	RAIDframe disk devices
#
d59 2
a60 9
#	ttyC*	wscons
#	tty*	standard built-in serial ports (2)
#
# Pointing devices:
#	wsmouse* wscons mouse events
#
# Keyboard devices:
#	wskbd* wscons keyboard events
#
d62 2
a63 7
#	pty*	set of 16 master and slave pseudo terminals
#
# Graphics devices:
#	grf*	custom chip (grf0), Retina Z2/Z3 (grf1/grf2),
#		Cirrus boards (grf3), A2410 (grf4) video or
#		CyberVision 64 (grf5)
#
d67 1
a69 1
#	ugen*	Generic device
d71 1
a71 1
#
d73 2
a74 3
#	apm	power management device
#	audio*  audio
#	ch*	SCSI media changer
d78 12
a89 4
#	*random	inkernal random data source
#	altq	ALTQ control interface
#	iop	I2O controller device
#
d91 2
a92 3
PATH=/sbin:/bin:/usr/bin:/usr/sbin
this=$0
umask 77
d94 1
a94 16
# default shell support functions
add ()
{
	tmp=0
	while [ "$1" ]
	do
		tmp=$(( $1 + $tmp ))
		shift
	done
	echo $tmp
}
mult ()
{
	echo "$(( $1 * $2 ))"
}
hex ()
d106 1
a106 1
trunc ()
d112 4
a115 1
	echo ${arg1#$arg2}
d121 4
a124 3
	arg1="$1"
	tmp="${arg1#[a-z]*}"
	while [ "$tmp" != "$arg1" ]
d126 3
a128 2
		arg1=$tmp
		tmp="${arg1#[a-z]*}"
d130 8
a137 2
	tmp="${arg1%*[a-z]}"
	while [ "$tmp" != "$arg1" ]
d139 3
a141 2
		arg1=$tmp
		tmp="${arg1%*[a-z]}"
d143 10
a152 1
	echo $arg1
d155 33
a187 1
for i
d189 12
d202 23
a224 2
unit=`unt $i`
[ "$unit" ] || unit=0
d226 3
a228 1
case $i in
d230 3
a232 22
all)
	sh $this std fd
	sh $this wd0 wd1 wd2 wd3 
	sh $this sd0 sd1 sd2 sd3 st0 st1 cd0 cd1
	sh $this vnd0 vnd1 vnd2 vnd3
	sh $this ccd0 ccd1 ccd2 ccd3
	sh $this raid0 raid1 raid2 raid3
	sh $this rd0
	sh $this ttyC0 ttyCcfg
	sh $this tty00 tty01 tty02 tty03 pty0 pty1
	sh $this bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh $this pf tun0 tun1 tun2 tun3
	sh $this audio0
	sh $this random uk0 uk1 ss0 ss1
	sh $this wscons
	sh $this pci
	sh $this lkm xfs0 altq
	sh $this usbs
	sh $this iop0 iop1
	sh $this apm
	sh $this crypto
	sh $this local
d235 2
a236 9
ramdisk)
	sh $this std
	sh $this wd0 wd1 wd2 wd3 
	sh $this sd0 sd1 sd2 sd3 sd4 st0 st1 cd0 cd1
	sh $this rd0
	sh $this random
	sh $this bpf0
	sh $this tty00 tty01 pty0
	sh $this wscons
d239 2
a240 16
std)
	rm -f console drum kmem mem reload zero null tty
	rm -f klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
	mknod reload		c 2 20	; chmod 640 reload ; chgrp kmem reload
	mknod zero		c 2 12	; chmod 666 zero
	mknod null		c 2 2	; chmod 666 null
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 43 0  ; chmod 640 ksyms ; chown root.kmem ksyms
d244 1
a244 4
	rm -f iop$unit
	mknod iop$unit c 73 $unit
	chown root.wheel iop$unit
	chmod 660 iop$unit
d247 6
a252 6
usbs)
	sh $this usb0 usb1
	sh $this uhid0 uhid1 uhid2 uhid3
	sh $this ulpt0 ulpt1
	sh $this urio0 uscanner0
	sh $this utty0 utty1
d255 2
a256 8
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 21 $n; n="$(( $n + 1 ))"; done)
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
d259 4
a262 52
sd*|wd*|ccd*|ofdisk*|raid*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	sd*) name=sd;		blk=2;	chr=8;;
	wd*) name=wd;		blk=0;	chr=11;;
	ofdisk*) name=ofdisk;	blk=4;	chr=13;;
	ccd*) name=ccd; 	blk=16;	chr=18;;
	raid*) name=raid;	blk=19;	chr=54;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6|7|8|9)
		mknod ${name}${unit}a	b $blk $(( $unit * 16 + 0 ))
		mknod ${name}${unit}b	b $blk $(( $unit * 16 + 1 ))
		mknod ${name}${unit}c	b $blk $(( $unit * 16 + 2 ))
		mknod ${name}${unit}d	b $blk $(( $unit * 16 + 3 ))
		mknod ${name}${unit}e	b $blk $(( $unit * 16 + 4 ))
		mknod ${name}${unit}f	b $blk $(( $unit * 16 + 5 ))
		mknod ${name}${unit}g	b $blk $(( $unit * 16 + 6 ))
		mknod ${name}${unit}h	b $blk $(( $unit * 16 + 7 ))
		mknod ${name}${unit}i	b $blk $(( $unit * 16 + 8 ))
		mknod ${name}${unit}j	b $blk $(( $unit * 16 + 9 ))
		mknod ${name}${unit}k	b $blk $(( $unit * 16 + 10 ))
		mknod ${name}${unit}l	b $blk $(( $unit * 16 + 11 ))
		mknod ${name}${unit}m	b $blk $(( $unit * 16 + 12 ))
		mknod ${name}${unit}n	b $blk $(( $unit * 16 + 13 ))
		mknod ${name}${unit}o	b $blk $(( $unit * 16 + 14 ))
		mknod ${name}${unit}p	b $blk $(( $unit * 16 + 15 ))
		mknod r${name}${unit}a	c $chr $(( $unit * 16 + 0 ))
		mknod r${name}${unit}b	c $chr $(( $unit * 16 + 1 ))
		mknod r${name}${unit}c	c $chr $(( $unit * 16 + 2 ))
		mknod r${name}${unit}d	c $chr $(( $unit * 16 + 3 ))
		mknod r${name}${unit}e	c $chr $(( $unit * 16 + 4 ))
		mknod r${name}${unit}f	c $chr $(( $unit * 16 + 5 ))
		mknod r${name}${unit}g	c $chr $(( $unit * 16 + 6 ))
		mknod r${name}${unit}h	c $chr $(( $unit * 16 + 7 ))
		mknod r${name}${unit}i	c $chr $(( $unit * 16 + 8 ))
		mknod r${name}${unit}j	c $chr $(( $unit * 16 + 9 ))
		mknod r${name}${unit}k	c $chr $(( $unit * 16 + 10 ))
		mknod r${name}${unit}l	c $chr $(( $unit * 16 + 11 ))
		mknod r${name}${unit}m	c $chr $(( $unit * 16 + 12 ))
		mknod r${name}${unit}n	c $chr $(( $unit * 16 + 13 ))
		mknod r${name}${unit}o	c $chr $(( $unit * 16 + 14 ))
		mknod r${name}${unit}p	c $chr $(( $unit * 16 + 15 ))
		chgrp operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
d265 2
a266 45
vnd*)
	umask 2 ; unit=${i##*[a-z]}
	for name in vnd svnd; do
		blk=14; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk $(( $unit * 16 + $off + 0 ))
		mknod ${name}${unit}b	b $blk $(( $unit * 16 + $off + 1 ))
		mknod ${name}${unit}c	b $blk $(( $unit * 16 + $off + 2 ))
		mknod ${name}${unit}d	b $blk $(( $unit * 16 + $off + 3 ))
		mknod ${name}${unit}e	b $blk $(( $unit * 16 + $off + 4 ))
		mknod ${name}${unit}f	b $blk $(( $unit * 16 + $off + 5 ))
		mknod ${name}${unit}g	b $blk $(( $unit * 16 + $off + 6 ))
		mknod ${name}${unit}h	b $blk $(( $unit * 16 + $off + 7 ))
		mknod ${name}${unit}i	b $blk $(( $unit * 16 + $off + 8 ))
		mknod ${name}${unit}j	b $blk $(( $unit * 16 + $off + 9 ))
		mknod ${name}${unit}k	b $blk $(( $unit * 16 + $off + 10 ))
		mknod ${name}${unit}l	b $blk $(( $unit * 16 + $off + 11 ))
		mknod ${name}${unit}m	b $blk $(( $unit * 16 + $off + 12 ))
		mknod ${name}${unit}n	b $blk $(( $unit * 16 + $off + 13 ))
		mknod ${name}${unit}o	b $blk $(( $unit * 16 + $off + 14 ))
		mknod ${name}${unit}p	b $blk $(( $unit * 16 + $off + 15 ))
		mknod r${name}${unit}a	c $chr $(( $unit * 16 + $off + 0 ))
		mknod r${name}${unit}b	c $chr $(( $unit * 16 + $off + 1 ))
		mknod r${name}${unit}c	c $chr $(( $unit * 16 + $off + 2 ))
		mknod r${name}${unit}d	c $chr $(( $unit * 16 + $off + 3 ))
		mknod r${name}${unit}e	c $chr $(( $unit * 16 + $off + 4 ))
		mknod r${name}${unit}f	c $chr $(( $unit * 16 + $off + 5 ))
		mknod r${name}${unit}g	c $chr $(( $unit * 16 + $off + 6 ))
		mknod r${name}${unit}h	c $chr $(( $unit * 16 + $off + 7 ))
		mknod r${name}${unit}i	c $chr $(( $unit * 16 + $off + 8 ))
		mknod r${name}${unit}j	c $chr $(( $unit * 16 + $off + 9 ))
		mknod r${name}${unit}k	c $chr $(( $unit * 16 + $off + 10 ))
		mknod r${name}${unit}l	c $chr $(( $unit * 16 + $off + 11 ))
		mknod r${name}${unit}m	c $chr $(( $unit * 16 + $off + 12 ))
		mknod r${name}${unit}n	c $chr $(( $unit * 16 + $off + 13 ))
		mknod r${name}${unit}o	c $chr $(( $unit * 16 + $off + 14 ))
		mknod r${name}${unit}p	c $chr $(( $unit * 16 + $off + 15 ))
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
	umask 77
d269 7
a275 7
tty0*)
	unit=${i##tty0}
	rm -f tty0$unit cua0$unit
	mknod tty0$unit c 7 $unit
	mknod cua0$unit c 7 `expr $unit + 128`
	chown uucp.dialer tty0$unit cua0$unit
	chmod 660 tty0$unit cua0$unit
d278 2
a279 36
pty*)
	class=${i##*[a-z]}
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f {tty,pty}$nam
			mknod tty$nam c 4 $(( $offset + $n ))
			mknod pty$nam c 5 $(( $offset + $n ))
			n="$(( $n + 1 ))"
		done
		umask 77
		;;
	esac
d282 2
a283 31
st*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	st*) name=st;  chr=20; blk=5;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk $(( $unit * 16 + 0 ))
		mknod n${name}${unit}	b $blk $(( $unit * 16 + 1 ))
		mknod e${name}${unit}	b $blk $(( $unit * 16 + 2 ))
		mknod en${name}${unit}	b $blk $(( $unit * 16 + 3 ))
		mknod r${name}${unit}	c $chr $(( $unit * 16 + 0 ))
		mknod nr${name}${unit}	c $chr $(( $unit * 16 + 1 ))
		mknod er${name}${unit}	c $chr $(( $unit * 16 + 2 ))
		mknod enr${name}${unit}	c $chr $(( $unit * 16 + 3 ))
		chown root.operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 660 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
d286 2
a287 17
ch*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	ch*) name=ch;  chr=10;;
	esac
	rm -f $name$unit
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	c $chr $unit
		chown root.operator ${name}${unit}
		chmod 660 ${name}${unit}
		;;
	*)
		echo bad unit for media changer in: $i
		;;
	esac
	umask 77
d290 3
a292 20
cd*)
	umask 2 ; unit=${i##*[a-z]}
	case $i in
	cd*) name=cd; blk=3; chr=9;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk $(( $unit * 8 + 0 ))
		mknod ${name}${unit}c	b $blk $(( $unit * 8 + 2 ))
		mknod r${name}${unit}a	c $chr $(( $unit * 8 + 0 ))
		mknod r${name}${unit}c	c $chr $(( $unit * 8 + 2 ))
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
d296 8
a303 16
	major=44
	audio=audio$unit
	sound=sound$unit
	mixer=mixer$unit
	audioctl=audioctl$unit
	rm -f $sound $audio $mixer $audioctl
	mknod $sound    c $major $unit
	mknod $audio    c $major $(( $unit + 128 ))
	mknod $mixer    c $major $(( $unit + 16 ))
	mknod $audioctl c $major $(( $unit + 192 ))
	chown root.wheel $audio $sound $mixer $audioctl
	chmod 666 $audio $sound $mixer $audioctl
	[ -e audio ] || ln -s $audio audio
	[ -e mixer ] || ln -s $mixer mixer
	[ -e sound ] || ln -s $sound sound
	[ -e audioctl ] || ln -s $audioctl audioctl
d306 2
a307 3
crypto)
	rm -f crypto
	mknod crypto	c 47 0	;	chmod 666 crypto
d310 2
a311 6
apm*)
	rm -f apm apmctl
	mknod apm c 25 0
	mknod apmctl c 25 8
	chown root.wheel apm apmctl
	chmod 644 apm apmctl
d314 2
a315 5
usb*)
	rm -f usb$unit
	mknod usb$unit c 61 $unit
	chown root.wheel usb$unit
	chmod 660 usb$unit
d318 2
a319 5
uhid*)
	rm -f uhid$unit
	mknod uhid$unit c 62 $unit
	chown root.wheel uhid$unit
	chmod 660 uhid$unit
d323 1
d326 1
a326 4
		rm -f ugen$unit.$j
		mknod ugen$unit.$j c 63 $(( $unit * 16 + $j ))
		chown root.wheel ugen$unit.$j
		chmod 660 ugen$unit.$j
d330 2
a331 5
ulpt*)
	rm -f ulpt$unit
	mknod ulpt$unit c 64 $unit
	chown root.wheel ulpt$unit
	chmod 660 ulpt$unit
d334 3
a336 5
urio*)
	rm -f urio$unit
	mknod urio$unit c 65 $unit
	chown root.wheel urio$unit
	chmod 660 urio$unit
d339 29
a367 5
uscanner*)
	rm -f uscanner$unit
	mknod uscanner$unit c 74 $unit
	chown root.wheel uscanner$unit
	chmod 660 uscanner$unit
d370 3
a372 5
utty*)
	rm -f utty$unit
	mknod utty$unit c 66 $unit
	chown root.wheel utty$unit
	chmod 660 utty$unit
d375 4
a378 8
 
ttyCcfg)
	major=67
	minor=255
	rm -f ttyCcfg
	mknod ttyCcfg c $major $minor  
	chown root.wheel ttyCcfg
        ;;
d380 3
a382 9
ttyC*)
	type=C
	unit=${i##ttyC}
	major=67
	minor=$unit
        rm -f tty$type$unit
        mknod tty$type$unit c $major $minor
        chown root.wheel tty$type$unit
        ;;
d384 2
a385 5
bpf*)
	unit=${i##*[a-z]}
	rm -f bpf${unit}
	mknod bpf${unit} c 22 ${unit}
	chown root.wheel bpf${unit}
d388 7
a394 5
pf)
	rm -f pf
	mknod pf c 39 0
	chown root.wheel pf
	chmod 600 pf
d397 5
a401 6
tun*)
	unit=${i##*[a-z]}
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
d405 1
a405 10
	blk=17; chr=17;
	umask 2 ; unit=${i##*[a-z]}
	rm -f rd${unit}a rd${unit}c rrd${unit}a rrd${unit}c
	mknod rd${unit}a b ${blk} $(( $unit * 16 + 0 ))
	mknod rd${unit}c b ${blk} $(( $unit * 16 + 2 ))
	mknod rrd${unit}a c ${chr} $(( $unit * 16 + 0 ))
	mknod rrd${unit}c c ${chr} $(( $unit * 16 + 2 ))
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
d408 3
a410 23
lkm)
	rm -f lkm
	mknod lkm c 24 0
	chown root.kmem lkm
	chmod 640 lkm
	;;

pci*)
	rm -f pci
	mknod pci c 71 0
	chown root.kmem pci
	chmod 664 pci
	;;

random|srandom|urandom|prandom|arandom)
	rm -f random urandom srandom prandom arandom
	mknod  random c 40 0
	mknod srandom c 40 1
	mknod urandom c 40 2
	mknod prandom c 40 3
	mknod arandom c 40 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d412 3
a414 6
uk*)
	unit=${i##*[a-z]}
	rm -f uk$unit
	mknod uk$unit c 41 $unit
	chown root.operator uk$unit
	chmod 640 uk$unit
d417 2
a418 9
ss*)
	unit=${i##*[a-z]}
	rm -f ss$unit
	mknod ss$unit c 42 $unit
	chown root.operator ss$unit
	chmod 440 ss$unit
#	backwards compatibility with older PINTs
	rm -f scan$unit
	ln -s ss$unit scan$unit
d420 9
a428 12
wscons)
	sh $this wskbd0 wskbd1 wskbd2 wskbd3
	sh $this wsmouse0 wsmouse1 wsmouse2 wsmouse3
	sh $this ttyCcfg
	sh $this wsmux
	;;
wsmux|wsmouse|wskbd)
	rm -f wsmouse wskbd
	mknod wsmouse c 70 0
	mknod wskbd c 70 1
	chown root.wheel wsmouse wskbd
	chmod 600 wsmouse wskbd
d431 2
a432 15
wskbd*)
	unit=${i##*[a-z]}
	rm -f wskbd${unit} 
	mknod wskbd${unit} c 68 ${unit}
	# XXX
	chmod 660 wskbd${unit}
	chown root.wheel wskbd${unit}
	;;
wsmouse*)
	unit=${i##*[a-z]}
	rm -f wsmouse${unit} 
	mknod wsmouse${unit} c 69 ${unit}
	# XXX
	chmod 660 wsmouse${unit}
	chown root.wheel wsmouse${unit}
d435 4
a438 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d441 8
a448 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 72 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
d451 7
a457 3
local)
	umask 0
	test -s MAKEDEV.local && sh $this.local
d462 1
d465 31
a495 1

@


1.3
log
@Add USB scanner device node to macppc and i386, both of these had the
uscanner compiled into the kernel, but no device node, or even entry
in the character device switch table.
ok todd@@
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.2 2001/10/03 14:50:38 drahn Exp $
d172 1
d469 5
@


1.2
log
@Add device nodes for apm for macppc.
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.1 2001/09/01 16:13:48 drahn Exp $
d215 1
a215 1
	sh $this urio0
d514 7
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Files moved from etc/etc.powerpc to etc/etc.macppc
@
text
@d2 1
a2 1
#	$OpenBSD: MAKEDEV,v 1.53 2001/07/05 02:54:07 mickey Exp $
d74 1
d171 1
d468 8
@

