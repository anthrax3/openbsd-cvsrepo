head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.12
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.10
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2015.07.15.13.50.54;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	oeNl5gMltmsYwI9M;

1.6
date	2013.09.01.15.02.35;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2012.11.21.08.07.33;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.22.08.02.04;	author nicm;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.16.09.33.29;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.08.04.29.54;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.08.02.15.34;	author robert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Fix base rc.d scripts after the recent rc.subr change.

ok halex@@
@
text
@#!/bin/sh
#
# $OpenBSD: amd,v 1.6 2013/09/01 15:02:35 ajacoutot Exp $

daemon="/usr/sbin/amd"

. /etc/rc.d/rc.subr

pexp="${daemon}.*"
rc_reload=NO
rc_stop=NO

rc_pre() {
	[ -e ${amd_master} ] || return 1
	daemon_flags="${daemon_flags} $(print -rn -- $(< ${amd_master}))"
}

rc_start() {
	${rcexec} "cd /etc/amd; ${daemon} ${daemon_flags}"
}

rc_cmd $1
@


1.6
log
@Properly pass daemon_flags to amd(8).

ok dcoppa@@ sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: amd,v 1.5 2012/11/21 08:07:33 ajacoutot Exp $
d9 1
@


1.5
log
@rc_restart() does not exists. What the 'restart' action does is to run
'stop' then 'start'; so to prevent this daemon from restarting itself,
rc_stop=NO is enough.

ok robert@@
@
text
@d3 1
a3 1
# $OpenBSD: amd,v 1.4 2011/08/22 08:02:04 nicm Exp $
d14 1
a14 1
	daemon_flags=$(print -rn -- $(< ${amd_master}))
@


1.4
log
@Read amd_master using print -rn, fixes problems if the file has multiple
lines. Problem noticed by me, this solution from halex@@.

ok halex aja
@
text
@d3 1
a3 1
# $OpenBSD: amd,v 1.3 2011/07/16 09:33:29 sthen Exp $
a9 1
rc_restart=NO
@


1.3
log
@Start amd in /etc/amd so it can find maps in files. ok robert@@
@
text
@d3 1
a3 1
# $OpenBSD: amd,v 1.2 2011/07/08 04:29:54 ajacoutot Exp $
d15 1
a15 1
	daemon_flags=$(cat ${amd_master})
@


1.2
log
@Cleanups and fixes.

ok robert@@
@
text
@d3 1
a3 1
# $OpenBSD: amd,v 1.1 2011/07/08 02:15:34 robert Exp $
d16 4
@


1.1
log
@Switch amd and spamlogd to rc scripts and make sure that the
rc_pre() functions are returning correctly. This change
also simplyfies the changes because false || return 1 can be replaced
with false if that's the last call. thanks halex@@!
@
text
@d3 1
a3 1
# $OpenBSD$
d14 1
a14 1
	[ -e ${amd_master} ]
a15 1
	return 0
@

