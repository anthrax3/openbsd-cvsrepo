head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.24
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.18
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.20
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.12
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.16
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.14
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.9.0.8
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3;
locks; strict;
comment	@# @;


1.11
date	2011.07.22.09.30.54;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2011.04.15.03.11.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.26.03.57.11;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2009.04.21.09.12.29;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.07.27.01.58.21;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.07.18.23.52;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.06.03.41.51;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.10.00.28.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.31.00.19.56;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.31.00.06.15;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.11
log
@unify kernel building on various platforms.
feedback from miod@@ and deraadt@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.10 2011/04/15 03:11:38 deraadt Exp $

bootblocks:
	cp ${DESTDIR}/usr/mdec/zboot ${RELEASEDIR}
	cp ${DESTDIR}/usr/mdec/zbsdmod.o ${RELEASEDIR}

MDEXT=	bsd.rd zboot zbsdmod.o openbsd${OSrev}_arm.ipk Packages
@


1.10
log
@No need to make depend kernels
@
text
@d1 1
a1 10
#	$OpenBSD: Makefile.inc,v 1.9 2009/06/26 03:57:11 deraadt Exp $

kernels: bsd bootblocks
	cp ${.CURDIR}/../sys/arch/zaurus/compile/GENERIC/bsd \
	    ${RELEASEDIR}/bsd

bsd:
	cd ${.CURDIR}/../sys/arch/zaurus/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/zaurus/compile/GENERIC && \
	    ${MAKE} clean && exec ${MAKE}
d7 1
a7 3
MDEXT=	bsd bsd.rd zboot zbsdmod.o openbsd${OSrev}_arm.ipk Packages

.PHONY: bsd bootblocks
@


1.9
log
@the correct *.ipk file has ${OSrev} in it
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2009/04/21 09:12:29 deraadt Exp $
d10 1
a10 1
	    ${MAKE} clean && ${MAKE} depend && exec ${MAKE}
@


1.8
log
@move bsd and bsd.rd and all such other MD "sets" into the MD files,
since we perhaps cannot assume that is what kernels will be in the
pathetically stupid world that SGI created
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2009/04/17 03:58:54 deraadt Exp $
d16 1
a16 1
MDEXT=	bsd bsd.rd zboot zbsdmod.o openbsd45_arm.ipk Packages
@


1.7
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2006/07/27 01:58:21 deraadt Exp $
d16 1
a16 1
MDEXT=	zboot zbsdmod.o openbsd45_arm.ipk Packages
@


1.6
log
@make these more similar (few steps to that)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2006/06/07 18:23:52 deraadt Exp $
d3 1
a3 2
.ifdef DESTDIR
snap_md: bsd bootblocks distrib
d5 1
a5 1
	    ${DESTDIR}/snapshot/bsd
d13 4
a16 2
	cp ${DESTDIR}/usr/mdec/zboot ${DESTDIR}/snapshot
	cp ${DESTDIR}/usr/mdec/zbsdmod.o ${DESTDIR}/snapshot
a18 2

.endif	# DESTDIR check
@


1.5
log
@dale, no such thing exists...
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile.inc,v 1.4 2006/06/06 03:41:51 drahn Exp $
#	etc.zaurus/Makefile.inc -- zaurus-specific etc Makefile targets
@


1.4
log
@so how did we not catch this grabbing the wrong (i386) file before?
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2005/01/10 00:28:15 deraadt Exp $
d5 1
a5 1
snap_md: bsd notes bootblocks distrib
a13 3
notes:
	cp ${.CURDIR}/etc.zaurus/INSTALL.* ${DESTDIR}/snapshot

d18 1
a18 1
.PHONY: bsd notes bootblocks
@


1.3
log
@put the boot crud in the snapshot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2004/12/31 00:19:56 miod Exp $
d15 1
a15 1
	cp ${.CURDIR}/etc.i386/INSTALL.* ${DESTDIR}/snapshot
@


1.2
log
@Better to build zaurus, not cats, kernels here.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2004/12/31 00:06:15 drahn Exp $
d5 1
a5 1
snap_md: bsd distrib1
d14 2
a15 3
# knows about bsd.rd
distrib1:
	${MAKE} distrib
d17 5
a21 1
.PHONY: bsd distrib1
@


1.1
log
@etc bits for zaurus
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile.inc,v 1.4 2004/02/09 02:28:23 drahn Exp $
#	etc.cats/Makefile.inc -- cats-specific etc Makefile targets
d6 1
a6 1
	cp ${.CURDIR}/../sys/arch/cats/compile/GENERIC/bsd \
d10 2
a11 2
	cd ${.CURDIR}/../sys/arch/cats/conf && config GENERIC
	cd ${.CURDIR}/../sys/arch/cats/compile/GENERIC && \
@

