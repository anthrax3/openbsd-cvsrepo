head	1.141;
access;
symbols
	OPENBSD_5_5:1.140.0.4
	OPENBSD_5_5_BASE:1.140
	OPENBSD_5_4:1.137.0.2
	OPENBSD_5_4_BASE:1.137
	OPENBSD_5_3:1.134.0.2
	OPENBSD_5_3_BASE:1.134
	OPENBSD_5_2:1.131.0.2
	OPENBSD_5_2_BASE:1.131
	OPENBSD_5_1_BASE:1.130
	OPENBSD_5_1:1.130.0.2
	OPENBSD_5_0:1.128.0.2
	OPENBSD_5_0_BASE:1.128
	OPENBSD_4_9:1.126.0.2
	OPENBSD_4_9_BASE:1.126
	OPENBSD_4_8:1.123.0.2
	OPENBSD_4_8_BASE:1.123
	OPENBSD_4_7:1.117.0.2
	OPENBSD_4_7_BASE:1.117
	OPENBSD_4_6:1.115.0.4
	OPENBSD_4_6_BASE:1.115
	OPENBSD_4_5:1.113.0.2
	OPENBSD_4_5_BASE:1.113
	OPENBSD_4_4:1.111.0.2
	OPENBSD_4_4_BASE:1.111
	OPENBSD_4_3:1.109.0.4
	OPENBSD_4_3_BASE:1.109
	OPENBSD_4_2:1.109.0.2
	OPENBSD_4_2_BASE:1.109
	OPENBSD_4_1:1.105.0.2
	OPENBSD_4_1_BASE:1.105
	OPENBSD_4_0:1.102.0.2
	OPENBSD_4_0_BASE:1.102
	OPENBSD_3_9:1.101.0.2
	OPENBSD_3_9_BASE:1.101
	OPENBSD_3_8:1.95.0.2
	OPENBSD_3_8_BASE:1.95
	OPENBSD_3_7:1.93.0.2
	OPENBSD_3_7_BASE:1.93
	OPENBSD_3_6:1.87.0.2
	OPENBSD_3_6_BASE:1.87
	OPENBSD_3_5:1.79.0.2
	OPENBSD_3_5_BASE:1.79
	OPENBSD_3_4:1.65.0.2
	OPENBSD_3_4_BASE:1.65
	OPENBSD_3_3:1.63.0.2
	OPENBSD_3_3_BASE:1.63
	OPENBSD_3_2:1.57.0.2
	OPENBSD_3_2_BASE:1.57
	OPENBSD_3_1:1.52.0.2
	OPENBSD_3_1_BASE:1.52
	OPENBSD_3_0:1.35.0.2
	OPENBSD_3_0_BASE:1.35
	OPENBSD_2_9:1.31.0.6
	OPENBSD_2_9_BASE:1.31
	OPENBSD_2_8:1.31.0.4
	OPENBSD_2_8_BASE:1.31
	OPENBSD_2_7:1.31.0.2
	OPENBSD_2_7_BASE:1.31
	OPENBSD_2_6:1.30.0.2
	OPENBSD_2_6_BASE:1.30
	OPENBSD_2_5:1.29.0.2
	OPENBSD_2_5_BASE:1.29
	OPENBSD_2_4:1.28.0.2
	OPENBSD_2_4_BASE:1.28
	OPENBSD_2_3:1.24.0.2
	OPENBSD_2_3_BASE:1.24
	OPENBSD_2_2:1.23.0.2
	OPENBSD_2_2_BASE:1.23
	OPENBSD_2_1:1.18.0.2
	OPENBSD_2_1_BASE:1.18
	OPENBSD_2_0:1.8.0.2
	OPENBSD_2_0_BASE:1.8
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.141
date	2014.03.18.22.36.29;	author miod;	state dead;
branches;
next	1.140;

1.140
date	2014.01.05.01.27.58;	author deraadt;	state Exp;
branches;
next	1.139;

1.139
date	2013.11.21.11.06.08;	author kettenis;	state Exp;
branches;
next	1.138;

1.138
date	2013.11.05.16.06.28;	author deraadt;	state Exp;
branches;
next	1.137;

1.137
date	2013.06.21.21.34.33;	author syl;	state Exp;
branches;
next	1.136;

1.136
date	2013.06.15.23.20.53;	author halex;	state Exp;
branches;
next	1.135;

1.135
date	2013.06.03.16.39.41;	author tedu;	state Exp;
branches;
next	1.134;

1.134
date	2013.01.30.02.02.02;	author yasuoka;	state Exp;
branches;
next	1.133;

1.133
date	2012.11.26.08.07.59;	author jasper;	state Exp;
branches;
next	1.132;

1.132
date	2012.08.23.06.16.59;	author deraadt;	state Exp;
branches;
next	1.131;

1.131
date	2012.04.06.15.32.56;	author jsing;	state Exp;
branches;
next	1.130;

1.130
date	2011.12.21.23.12.57;	author miod;	state Exp;
branches;
next	1.129;

1.129
date	2011.10.06.20.50.54;	author deraadt;	state Exp;
branches;
next	1.128;

1.128
date	2011.06.26.23.42.27;	author tedu;	state Exp;
branches;
next	1.127;

1.127
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.126;

1.126
date	2010.11.19.20.56.06;	author miod;	state Exp;
branches;
next	1.125;

1.125
date	2010.09.30.15.29.22;	author claudio;	state Exp;
branches;
next	1.124;

1.124
date	2010.09.04.12.18.41;	author miod;	state Exp;
branches;
next	1.123;

1.123
date	2010.08.03.20.16.22;	author miod;	state Exp;
branches;
next	1.122;

1.122
date	2010.07.22.00.59.56;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2010.07.03.04.08.10;	author krw;	state Exp;
branches;
next	1.120;

1.120
date	2010.06.27.00.00.51;	author jsing;	state Exp;
branches;
next	1.119;

1.119
date	2010.06.14.14.08.44;	author todd;	state Exp;
branches;
next	1.118;

1.118
date	2010.06.09.16.11.42;	author todd;	state Exp;
branches;
next	1.117;

1.117
date	2009.09.23.15.40.18;	author miod;	state Exp;
branches;
next	1.116;

1.116
date	2009.08.13.15.13.09;	author deraadt;	state Exp;
branches;
next	1.115;

1.115
date	2009.06.03.15.36.55;	author todd;	state Exp;
branches;
next	1.114;

1.114
date	2009.06.03.14.45.39;	author jj;	state Exp;
branches;
next	1.113;

1.113
date	2009.01.25.17.31.11;	author miod;	state Exp;
branches;
next	1.112;

1.112
date	2008.10.10.20.16.10;	author deraadt;	state Exp;
branches;
next	1.111;

1.111
date	2008.06.13.21.09.10;	author todd;	state Exp;
branches;
next	1.110;

1.110
date	2008.06.12.18.55.04;	author todd;	state Exp;
branches;
next	1.109;

1.109
date	2007.08.02.16.42.19;	author deraadt;	state Exp;
branches;
next	1.108;

1.108
date	2007.05.28.22.29.56;	author todd;	state Exp;
branches;
next	1.107;

1.107
date	2007.05.27.02.00.19;	author todd;	state Exp;
branches;
next	1.106;

1.106
date	2007.05.26.20.19.33;	author todd;	state Exp;
branches;
next	1.105;

1.105
date	2007.03.07.02.58.41;	author krw;	state Exp;
branches;
next	1.104;

1.104
date	2007.02.16.02.16.33;	author deraadt;	state Exp;
branches;
next	1.103;

1.103
date	2006.12.15.21.03.55;	author kettenis;	state Exp;
branches;
next	1.102;

1.102
date	2006.08.28.21.23.33;	author tsi;	state Exp;
branches;
next	1.101;

1.101
date	2005.12.27.19.03.08;	author miod;	state Exp;
branches;
next	1.100;

1.100
date	2005.10.06.18.03.20;	author otto;	state Exp;
branches;
next	1.99;

1.99
date	2005.10.06.06.43.58;	author otto;	state Exp;
branches;
next	1.98;

1.98
date	2005.10.04.18.34.29;	author otto;	state Exp;
branches;
next	1.97;

1.97
date	2005.10.04.18.12.00;	author otto;	state Exp;
branches;
next	1.96;

1.96
date	2005.10.04.07.40.34;	author otto;	state Exp;
branches;
next	1.95;

1.95
date	2005.08.01.22.22.37;	author deraadt;	state Exp;
branches;
next	1.94;

1.94
date	2005.06.02.20.13.59;	author tholo;	state Exp;
branches;
next	1.93;

1.93
date	2005.03.01.13.37.09;	author otto;	state Exp;
branches;
next	1.92;

1.92
date	2005.02.07.08.23.41;	author david;	state Exp;
branches;
next	1.91;

1.91
date	2005.02.07.06.24.45;	author david;	state Exp;
branches;
next	1.90;

1.90
date	2005.01.28.18.59.42;	author danh;	state Exp;
branches;
next	1.89;

1.89
date	2005.01.14.22.40.07;	author miod;	state Exp;
branches;
next	1.88;

1.88
date	2005.01.10.07.58.00;	author dlg;	state Exp;
branches;
next	1.87;

1.87
date	2004.08.19.07.05.49;	author miod;	state Exp;
branches;
next	1.86;

1.86
date	2004.08.03.21.47.31;	author miod;	state Exp;
branches;
next	1.85;

1.85
date	2004.08.03.21.46.46;	author miod;	state Exp;
branches;
next	1.84;

1.84
date	2004.06.03.18.40.16;	author grange;	state Exp;
branches;
next	1.83;

1.83
date	2004.05.30.08.24.11;	author grange;	state Exp;
branches;
next	1.82;

1.82
date	2004.05.29.04.08.52;	author deraadt;	state Exp;
branches;
next	1.81;

1.81
date	2004.04.11.18.15.22;	author millert;	state Exp;
branches;
next	1.80;

1.80
date	2004.04.11.18.06.04;	author millert;	state Exp;
branches;
next	1.79;

1.79
date	2004.03.12.04.54.32;	author deraadt;	state Exp;
branches;
next	1.78;

1.78
date	2004.02.20.19.13.48;	author miod;	state Exp;
branches;
next	1.77;

1.77
date	2004.02.16.19.05.05;	author miod;	state Exp;
branches;
next	1.76;

1.76
date	2004.02.14.17.24.58;	author todd;	state Exp;
branches;
next	1.75;

1.75
date	2004.02.13.23.35.03;	author miod;	state Exp;
branches;
next	1.74;

1.74
date	2004.02.10.02.46.21;	author mickey;	state Exp;
branches;
next	1.73;

1.73
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.72;

1.72
date	2004.02.05.22.23.28;	author todd;	state Exp;
branches;
next	1.71;

1.71
date	2004.01.13.15.16.05;	author todd;	state Exp;
branches;
next	1.70;

1.70
date	2004.01.12.22.33.09;	author todd;	state Exp;
branches;
next	1.69;

1.69
date	2004.01.12.22.31.34;	author todd;	state Exp;
branches;
next	1.68;

1.68
date	2003.10.15.02.01.24;	author todd;	state Exp;
branches;
next	1.67;

1.67
date	2003.10.14.17.58.49;	author todd;	state Exp;
branches;
next	1.66;

1.66
date	2003.10.11.03.33.15;	author tedu;	state Exp;
branches;
next	1.65;

1.65
date	2003.06.18.18.11.07;	author todd;	state Exp;
branches;
next	1.64;

1.64
date	2003.05.21.18.51.53;	author jason;	state Exp;
branches;
next	1.63;

1.63
date	2003.01.06.17.19.59;	author todd;	state Exp;
branches;
next	1.62;

1.62
date	2003.01.06.05.57.38;	author deraadt;	state Exp;
branches;
next	1.61;

1.61
date	2002.12.25.20.20.34;	author miod;	state Exp;
branches;
next	1.60;

1.60
date	2002.12.05.04.38.22;	author kjc;	state Exp;
branches;
next	1.59;

1.59
date	2002.12.05.03.00.26;	author kjc;	state Exp;
branches;
next	1.58;

1.58
date	2002.10.16.15.49.07;	author todd;	state Exp;
branches;
next	1.57;

1.57
date	2002.09.06.21.48.48;	author miod;	state Exp;
branches;
next	1.56;

1.56
date	2002.06.18.00.56.04;	author fgsch;	state Exp;
branches;
next	1.55;

1.55
date	2002.06.09.05.58.38;	author todd;	state Exp;
branches;
next	1.54;

1.54
date	2002.05.16.21.12.21;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2002.04.18.23.16.14;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2002.04.14.23.27.01;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2002.03.31.21.51.38;	author fgsch;	state Exp;
branches;
next	1.50;

1.50
date	2002.03.26.00.58.02;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2002.02.25.05.20.37;	author todd;	state Exp;
branches;
next	1.48;

1.48
date	2002.02.21.18.34.11;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2002.02.21.13.44.12;	author todd;	state Exp;
branches;
next	1.46;

1.46
date	2002.02.21.13.19.06;	author todd;	state Exp;
branches;
next	1.45;

1.45
date	2002.02.19.21.06.00;	author todd;	state Exp;
branches;
next	1.44;

1.44
date	2002.02.17.05.14.55;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2002.02.15.21.16.02;	author todd;	state Exp;
branches;
next	1.42;

1.42
date	2002.02.14.17.46.15;	author todd;	state Exp;
branches;
next	1.41;

1.41
date	2002.02.14.05.55.09;	author todd;	state Exp;
branches;
next	1.40;

1.40
date	2002.02.14.04.43.08;	author todd;	state Exp;
branches;
next	1.39;

1.39
date	2002.02.14.04.39.56;	author todd;	state Exp;
branches;
next	1.38;

1.38
date	2002.02.09.17.58.16;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2002.02.09.17.01.40;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2002.01.04.03.00.44;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2001.06.28.02.58.53;	author kjc;	state Exp;
branches;
next	1.34;

1.34
date	2001.06.25.03.19.52;	author kjell;	state Exp;
branches;
next	1.33;

1.33
date	2001.06.24.23.36.00;	author kjell;	state Exp;
branches;
next	1.32;

1.32
date	2001.05.30.02.11.15;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2000.03.22.07.34.28;	author niklas;	state Exp;
branches;
next	1.30;

1.30
date	99.08.20.17.00.35;	author downsj;	state Exp;
branches;
next	1.29;

1.29
date	98.11.19.08.18.56;	author dugsong;	state Exp;
branches;
next	1.28;

1.28
date	98.10.15.21.24.53;	author art;	state Exp;
branches;
next	1.27;

1.27
date	98.09.15.10.23.22;	author pattonme;	state Exp;
branches;
next	1.26;

1.26
date	98.08.24.05.49.51;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	98.08.24.05.29.53;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	98.01.26.04.19.39;	author dgregor;	state Exp;
branches;
next	1.23;

1.23
date	97.09.16.06.00.57;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	97.09.07.20.29.10;	author dgregor;	state Exp;
branches;
next	1.21;

1.21
date	97.07.14.04.27.54;	author downsj;	state Exp;
branches;
next	1.20;

1.20
date	97.07.07.23.49.58;	author downsj;	state Exp;
branches;
next	1.19;

1.19
date	97.07.06.19.42.39;	author downsj;	state Exp;
branches;
next	1.18;

1.18
date	97.05.14.15.41.12;	author niklas;	state Exp;
branches;
next	1.17;

1.17
date	97.05.13.05.34.51;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	97.04.22.08.00.02;	author downsj;	state Exp;
branches;
next	1.15;

1.15
date	97.04.21.08.18.02;	author downsj;	state Exp;
branches;
next	1.14;

1.14
date	97.02.16.10.40.50;	author downsj;	state Exp;
branches;
next	1.13;

1.13
date	97.02.10.01.34.08;	author downsj;	state Exp;
branches;
next	1.12;

1.12
date	97.02.03.07.02.08;	author downsj;	state Exp;
branches;
next	1.11;

1.11
date	97.01.18.08.05.19;	author downsj;	state Exp;
branches;
next	1.10;

1.10
date	96.12.14.18.23.56;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	96.10.19.11.51.29;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	96.09.18.22.03.42;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.07.23.06.32.55;	author etheisen;	state Exp;
branches;
next	1.6;

1.6
date	96.07.23.06.15.15;	author etheisen;	state Exp;
branches;
next	1.5;

1.5
date	96.07.15.14.59.11;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.01.07.07.41.18;	author dm;	state Exp;
branches;
next	1.3;

1.3
date	95.12.15.02.33.07;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.13.04.10.20;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.141
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.47 2014/01/05 01:16:52 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.73 2013/11/21 11:04:44 kettenis Exp 
#	OpenBSD: MAKEDEV.mi,v 1.81 2012/11/05 08:07:09 jasper Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#
#
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	cd*	ATAPI and SCSI CD-ROM drives
#	hd*	HP300 HP-IB disks
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
# Tapes:
#	ch*	SCSI media changers
#	ct*	HP300 HP-IB cartridge tape drives
#	mt*	(Magnetic) 9-track reel tape drives
#	st*	SCSI tape drives
# Terminal ports:
#	apci*	HP400 4 port serial mux interface
#	dca*	HP200/300 single port serial interface
#	dcm*	HP200/300 4 port serial mux interface
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC-J*	wscons display devices
#	wscons	Minimal wscons devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Printers:
#	ppi*	HP-IB plotters
# Special purpose devices:
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bpf*	Berkeley Packet Filter
#	diskmap	Disk mapper
#	fd	fd/* nodes
#	fuse	Userland Filesystem
#	hotplug	devices hot plugging
#	lkm	Loadable kernel modules interface
#	pf*	Packet Filter
#	pppx*	PPP Multiplexer
#	*random	In-kernel random data source
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	uk*	Unknown SCSI devices
#	vscsi*	Virtual SCSI controller
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640 operator
		M r$1$2$d	c $4 $(($n+$count)) 640 operator
		let count=count+1
	done
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist[0]="rm -f"

mkl() {
	mklist[${#mklist[*]}]=";mknod -m $1 $2 $3 $4 $5"
}

M() {
	RMlist[${#RMlist[*]}]=$1
	mkl ${5-666} $1 $2 $3 $4
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist[${#MKlist[*]}]="&& chown $7:$G $1"
	} || {
		case $G in
		wheel)
			[ ${#whlist[*]} = 0 ] && whlist[0]="&& chgrp wheel"
			whlist[${#whlist[*]}]="$1"
		;;
		operator)
			[ ${#oplist[*]} = 0 ] && oplist[0]="&& chgrp operator"
			oplist[${#oplist[*]}]="$1"
		;;
		*)
			MKlist[${#MKlist[*]}]="&& chgrp $G $1";
		esac
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std ct0 ct1 st0 st1 hd0 hd1 hd2 hd3 hd4
	R sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 pty0
	R apci0 dca0 dcm0 dcm1 bio diskmap random
	R bpf0 bpf1 tun0 tun1
	;;

std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 36 0 640 kmem
	M klog		c 6 0 600
	;;

dca*)
	case $U in
	0|1|2|3)
		M tty$U c 12 $U 660 dialer uucp
		M cua$U c 12 $(($U+128)) 660 dialer uucp
		;;
	*)
		echo bad unit for dca in: $i
		;;
	esac
	;;

dcm*)
	case $U in
	0|1|2|3)
		u="$(( $U * 4 ))"
		i=0
		while [ $i -lt 4 ]
		do
			n="$(( $u + $i ))"
			ext=`hex $n`

			M tty0${ext} c 15 ${n} 660 dialer uucp
			M cua0${ext} c 15 "$(( $n + 128 ))" 660 dialer uucp

			i="$(( $i + 1 ))"
		done
		;;
	*)
		echo bad unit for dcm in: $i
		;;
	esac
	;;

apci*)
	# There exists only one Frodo ASIC per HP9000/400 SPU.
	case $U in
	0)
		for i in 0 1 2 3; do
			M ttya${i} c 35 ${i} 660 dialer uucp
			M cuaa${i} c 35 $(($i+128)) 660 dialer uucp
		done
		;;
	*)
		echo bad unit for apci in: $i
		;;
	esac
	;;

ppi*)
	case $U in
	0|1|2|3)
		M ppi$U c 11 $U 600
		;;
	*)
		echo bad unit for ppi in: $i
		;;
	esac
	;;



vscsi*)
	M vscsi$U c 53 $U 600
	;;

uk*)
	M uk$U c 37 $U 640 operator
	;;

tun*)
	M tun$U c 23 $U 600
	;;

systrace)
	M systrace c 50 0 644
	;;

*random)
	n=0
	for pre in " " s u a
	do
		M ${pre}random c 32 $n 644
		n=$(($n+1))
	done
	;;

pppx*)
	M pppx$U c 55 $U 600
	;;

pf*)
	M pf c 33 0 600
	;;

lkm)
	M lkm c 24 0 640 _lkm
	;;

hotplug)
	M hotplug c 56 $U 400
	;;

fuse)
	M fuse$U c 57 $U 600
	;;

fd)
	RMlist[${#RMlist[*]}]=";mkdir -p fd;rm -f" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist[${#MKlist[*]}]=";chmod 555 fd"
	;;

diskmap)
	M diskmap c 54 0 640 operator
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

bio)
	M bio c 49 0 600
	;;

audio*)
	M sound$U	c 44 $U
	M mixer$U	c 44 $(($U+16))
	M audio$U	c 44 $(($U+128))
	M audioctl$U	c 44 $(($U+192))
	MKlist[${#MKlist[*]}]=";[ -e audio ] || ln -s audio$U audio"
	MKlist[${#MKlist[*]}]=";[ -e mixer ] || ln -s mixer$U mixer"
	MKlist[${#MKlist[*]}]=";[ -e sound ] || ln -s sound$U sound"
	MKlist[${#MKlist[*]}]=";[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

wsmouse[0-9]*)
	M wsmouse$U c 42 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 43 0 600
	M wskbd c 43 1 600
	;;

wskbd[0-9]*)
	M wskbd$U c 41 $U 600
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

tty[C-J]*)
	U=${i##tty[C-J]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	ttyG*) n=G m=1024;;
	ttyH*) n=H m=1280;;
	ttyI*) n=I m=1536;;
	ttyJ*) n=J m=1792;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 40 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 40 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 52 0 666
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 7 $n 660 operator
		M ${pre}rst$U	c 20 $n 660 operator
		n=$(($n+1))
	done
	;;

ct*|mt*)
	case $i in
	ct*) name=ct blk=0 chr=7;;
	mt*) name=mt blk=1 chr=16;;
	esac
	case $U in
	[0-7])
		four=$(($U+4)) eight=$(($U+8))
		twelve=$(($U+12)) twenty=$(($U+20))
		M r$name$U	c $chr $U 660 operator
		M r$name$four	c $chr $four 660 operator
		M r$name$eight	c $chr $eight 660 operator
		M r$name$twelve	c $chr $twelve 660 operator
		MKlist[${#MKlist[*]}]=";ln r$name$four nr$name$U";: sanity w/pdp11 v7
		MKlist[${#MKlist[*]}]=";ln r$name$twelve nr$name$eight";: ditto
		RMlist[${#RMlist[*]}]="nr$name$U nr$name$eight"
		;;
	*)
		echo bad unit for tape in: 
		;;
	esac
	;;

ch*)
	M ch$U c 39 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 6 19 $U 0
	;;

rd*)
	dodisk2 rd $U 8 34 $U 0
	;;

cd*)
	dodisk2 cd $U 9 18 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R ct0 ct1 hd0 hd1 hd2 dcm0 dcm1 dcm2 dcm3 dca0 dca1 vnd0 vnd1
	R vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 diskmap vscsi0 ch0 audio0 fuse pppx hotplug ptm local
	R ppi0 apci0 wscons uk0 random lkm pf systrace std st0 st1 fd
	;;

sd*|hd*)
	case $i in
	sd*) dodisk sd $U 4 8 $U 0;;
	hd*) dodisk hd $U 2 9 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
{
echo -n ${RMlist[*]}
echo -n ${mklist[*]}
echo -n ${MKlist[*]}
echo -n ${whlist[*]}
echo ${oplist[*]}
} | if [ "$eo" = "echo" ]; then
        cat
else
	sh
fi
@


1.140
log
@sync
@
text
@@


1.139
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.46 2013/06/03 16:06:42 tedu Exp 
d204 2
a205 2
	R apci0 dca0 dcm0 dcm1 bio diskmap
	R bpf0 bpf1 tun0 tun1 lkm
@


1.138
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.72 2013/11/05 16:05:30 deraadt Exp 
@


1.137
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.66 2013/06/21 21:30:38 syl Exp 
@


1.136
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.65 2013/06/15 23:09:36 halex Exp 
d66 1
a66 1
#	fuse*	Userland Filesystem
d325 1
a325 1
fuse*)
d479 2
a480 3
	R pty0 diskmap vscsi0 ch0 audio0 fuse0 fuse1 fuse2 fuse3 pppx
	R hotplug ptm local ppi0 apci0 wscons uk0 random lkm pf
	R systrace std st0 st1 fd
@


1.135
log
@regen. reminded by miod
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.64 2013/06/03 16:06:42 tedu Exp 
d66 1
a66 1
#	fuse	Userland Filesystem
d325 1
a325 1
fuse)
d479 3
a481 2
	R pty0 diskmap vscsi0 ch0 audio0 fuse pppx hotplug ptm local
	R ppi0 apci0 wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.134
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.45 2012/08/23 06:15:28 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.60 2012/08/23 06:15:28 deraadt Exp 
d66 1
d325 4
d479 2
a480 2
	R pty0 diskmap vscsi0 ch0 audio0 pppx hotplug ptm local ppi0
	R apci0 wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.133
log
@regen
@
text
@d474 2
a475 2
	R pty0 diskmap vscsi0 ch0 audio0 hotplug ptm local ppi0 apci0
	R wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.132
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.80 2011/04/18 16:52:10 thib Exp 
d174 1
a174 1
		MKlist[${#MKlist[*]}]=";chown $7:$G $1"
d178 1
a178 1
			[ ${#whlist[*]} = 0 ] && whlist[0]=";chgrp wheel"
d182 1
a182 1
			[ ${#oplist[*]} = 0 ] && oplist[0]=";chgrp operator"
d186 1
a186 1
			MKlist[${#MKlist[*]}]=";chgrp $G $1";
@


1.131
log
@Regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.44 2011/12/21 23:12:24 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.59 2012/04/06 15:18:41 jsing Exp 
a67 1
#	nnpfs*	NNPFS filesystem node
a315 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d474 2
a475 2
	R pty0 diskmap vscsi0 nnpfs0 ch0 audio0 hotplug ptm local ppi0
	R apci0 wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.130
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.58 2011/10/22 19:31:20 miod Exp 
@


1.129
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.43 2011/10/06 20:49:27 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.57 2011/10/06 20:49:25 deraadt Exp 
d61 1
d283 1
d347 11
d479 2
a480 2
	R pty0 diskmap vscsi0 nnpfs0 ch0 hotplug ptm local ppi0 apci0
	R wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.128
log
@regen makedev
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.42 2010/11/19 20:55:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.54 2011/04/18 16:52:10 thib Exp 
a32 1
#	ccd*	Concatenated disk devices
d463 5
a467 6
	R ct0 ct1 hd0 hd1 hd2 dcm0 dcm1 dcm2 dcm3 dca0 dca1 ccd0 ccd1
	R ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1
	R rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5
	R bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 hotplug
	R ptm local ppi0 apci0 wscons uk0 random lkm pf systrace std
	R st0 st1 fd
d470 1
a470 1
sd*|hd*|ccd*)
a473 1
	ccd*) dodisk ccd $U 5 17 $U 0;;
@


1.127
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.53 2010/09/30 15:27:54 claudio Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
@


1.126
log
@regen
@
text
@a448 1
	dodisk svnd $U 6 19 $U 2048
@


1.125
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.41 2010/09/30 15:27:54 claudio Exp 
d66 1
d324 4
d468 3
a470 2
	R bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ch0 ptm local
	R ppi0 apci0 wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.124
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.39 2010/07/03 03:59:15 krw Exp 
#	OpenBSD: MAKEDEV.common,v 1.51 2010/08/03 20:12:01 miod Exp 
d69 1
d305 4
@


1.123
log
@regen
@
text
@d53 1
a54 1
#	ttyC-J*	wscons display devices
d64 1
d67 1
a72 1
#	nnpfs*	NNPFS filesystem node
a73 1
#	diskmap	Disk mapper
a280 4
diskmap)
	M diskmap c 54 0 640 operator
	;;

a284 4
nnpfs*)
	M nnpfs$U c 51 $U 600
	;;

d310 4
d324 4
d349 6
a371 6
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
@


1.122
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.49 2010/07/21 23:40:26 nicm Exp 
@


1.121
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
@


1.120
log
@Regen.
@
text
@d6 4
a9 4
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.38 2010/06/26 23:49:50 jsing Exp 
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
a67 1
#	ss*	SCSI scanners
a304 8
ss*)
	M ss$U c 38 $(($U*16)) 640 operator
	M nss$U c 38 $(($(($U*16))+1)) 640 operator
	M enss$U c 38 $(($(($U*16))+3)) 640 operator
	RMlist[${#RMlist[*]}]="scan$U"
	MKlist[${#MKlist[*]}]=";umask 77;ln -s ss$U scan$U"
	;;

d458 2
a459 3
	R bpf6 bpf7 bpf8 bpf9 pty0 diskmap vscsi0 nnpfs0 ss0 ch0 ptm
	R local ppi0 apci0 wscons uk0 random lkm pf systrace std st0
	R st1 fd
@


1.119
log
@sync
@
text
@d6 4
a9 4
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.37 2010/06/09 16:10:25 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.48 2010/06/14 14:07:49 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.79 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d203 1
a203 1
	R apci0 dca0 dcm0 dcm1 bio
@


1.118
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.47 2010/06/09 16:10:24 todd Exp 
d283 1
a283 1
	M diskmap b 54 0 640 operator
@


1.117
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.36 2009/08/13 15:12:36 deraadt Exp 
#	OpenBSD: MAKEDEV.common,v 1.46 2009/09/23 15:39:56 miod Exp 
d74 1
d282 4
d467 3
a469 2
	R bpf6 bpf7 bpf8 bpf9 pty0 vscsi0 nnpfs0 ss0 ch0 ptm local
	R ppi0 apci0 wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.116
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.45 2009/08/13 15:12:36 deraadt Exp 
d340 1
a340 1
wsmouse*)
d349 1
a349 1
wskbd*)
@


1.115
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.35 2009/06/03 14:45:39 jj Exp 
#	OpenBSD: MAKEDEV.common,v 1.43 2009/06/03 14:45:39 jj Exp 
d73 1
d281 4
d462 2
a463 2
	R bpf6 bpf7 bpf8 bpf9 pty0 nnpfs0 ss0 ch0 ptm local ppi0 apci0
	R wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.114
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.34 2009/01/25 17:30:48 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.41 2008/11/30 03:33:09 jakemsr Exp 
@


1.113
log
@regen
@
text
@d72 1
a72 1
#	xfs*	XFS filesystem node
d280 2
a281 2
xfs*)
	M xfs$U c 51 $U 600
d457 1
a457 1
	R bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 ptm local ppi0 apci0
@


1.112
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.33 2008/06/14 23:09:05 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.40 2008/10/10 20:15:23 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.78 2008/06/14 23:09:05 todd Exp 
a215 1
	M drum		c 3 0 640 kmem
@


1.111
log
@sync
@
text
@d6 3
a8 3
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.32 2008/06/13 21:07:28 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.38 2008/06/12 22:38:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.77 2005/10/06 06:43:19 otto Exp 
d307 1
a307 1
	for pre in " " s u p a
@


1.110
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.31 2008/06/12 18:52:46 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.37 2008/06/10 07:12:24 mglocker Exp 
d201 1
a201 1
	R apci0 dca0 dcm0 dcm1
@


1.109
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.30 2007/05/28 22:26:02 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.36 2007/07/23 23:21:25 todd Exp 
d202 1
a202 1
	R bpf0 bpf1 tun0 tun1 lkm random
@


1.108
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.34 2007/05/18 14:05:33 jmc Exp 
a25 1

@


1.107
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.29 2007/05/27 01:50:35 todd Exp 
d63 1
d333 4
d458 3
a460 3
	R rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 ptm local ppi0 apci0 wscons
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.106
log
@sync
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.28 2007/05/26 19:54:23 todd Exp 
a62 1
#	bio	ioctl tunnel pseudo-device
a331 4
bio)
	M bio c 10 0 600
	;;

d453 3
a455 3
	R rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5
	R bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 ptm local ppi0 apci0
	R wscons uk0 random lkm pf systrace std st0 st1 fd
@


1.105
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.27 2006/04/16 02:49:52 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.33 2007/03/07 02:51:17 krw Exp 
d26 1
d63 1
d333 4
d458 3
a460 3
	R rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6
	R bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 ptm local ppi0 apci0 wscons
	R uk0 random lkm pf systrace std st0 st1 fd
@


1.104
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.32 2007/02/16 02:16:20 deraadt Exp 
@


1.103
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.31 2006/12/15 20:42:19 kettenis Exp 
@


1.102
log
@Resync MAKEDEV scripts and man pages
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.29 2006/08/28 21:04:04 tsi Exp 
@


1.101
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.26 2005/12/27 18:50:26 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.23 2005/12/27 19:02:42 miod Exp 
d54 1
a54 1
#	ttyC-F*	wscons display devices
d344 2
a345 2
tty[C-F]*)
	U=${i##tty[C-F]}
d351 4
@


1.100
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.25 2005/10/06 18:02:29 otto Exp 
#	OpenBSD: MAKEDEV.common,v 1.21 2005/10/06 06:43:19 otto Exp 
d53 1
a53 1
#	ttyC0	Minimal wscons devices
d63 1
a63 1
#	fd	fd/* nodes for fdescfs
@


1.99
log
@regen
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.24 2005/08/01 22:22:13 deraadt Exp 
@


1.98
log
@regen
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.common,v 1.20 2005/08/01 22:22:12 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.76 2005/10/04 18:33:52 otto Exp 
d160 1
a160 2
RMlist="rm -f"
MKlist=":"
d163 1
a163 6
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
d167 1
a167 1
	RMlist="$RMlist $1"
d171 1
a171 1
		MKlist="$MKlist;chown $7:$G $1"
d174 10
a183 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
a184 6
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
d300 2
a301 2
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
d322 1
a322 1
	RMlist="mkdir -p fd;$RMlist" n=0
d324 1
a324 1
	MKlist="$MKlist;chmod 555 fd"
d414 3
a416 3
		MKlist="$MKlist;ln r$name$four nr$name$U";: sanity w/pdp11 v7
		MKlist="$MKlist;ln r$name$twelve nr$name$eight";: ditto
		RMlist="$RMlist nr$name$U nr$name$eight"
d468 8
a475 10
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
d477 1
a477 1
	echo "$list" | sh
@


1.97
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.75 2005/10/04 18:11:10 otto Exp 
d143 1
a143 1
		M $1$2$d	b $3 $(($n+$count)) 640 operaror
@


1.96
log
@regen
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.74 2005/10/04 07:39:37 otto Exp 
a139 1
	RMlist="$RMlist $1$2? r$1$2?"
d143 2
a144 2
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
a146 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
@


1.95
log
@sync
@
text
@d8 1
a8 1
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
a176 1
	mklist="$mklist $1"
@


1.94
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.23 2005/01/14 22:39:15 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.18 2005/06/02 20:09:38 tholo Exp 
@


1.93
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.16 2005/03/01 13:35:59 otto Exp 
@


1.92
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.15 2005/01/28 18:56:27 danh Exp 
@


1.91
log
@sync
@
text
@d8 2
a9 2
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp 
@


1.90
log
@sync
@
text
@d93 1
a93 1
	local t="$1"  
@


1.89
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.14 2005/01/14 22:39:11 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d359 1
a359 1
	[0-9a-f]) M tty$n$U c 40 $(( 16#$U + $m )) 600;;
@


1.88
log
@regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.22 2004/08/03 21:46:46 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.13 2005/01/10 07:53:57 dlg Exp 
d53 6
a58 2
#	grf*	Raw interface to HP300 graphics devices
#	ite*	Terminal emulator interface to HP300 graphics devices
a63 1
#	hil	HP-HIL input devices
d206 1
a206 1
	R hil grf0 apci0 ite0 dca0 dcm0 dcm1
a284 31
ite*)
	case $U in
	0|1|2|3)
		M ttye$U c 13 $U 600
		;;
	*)
		echo bad unit for ite in: $i
		;;
	esac
	;;

grf*)
	case $U in
	0|1|2|3)
		M grf$U c 10 $U 600
		;;
	*)
		echo bad unit for grf in: $i
		;;
	esac
	;;

hil)
	for U in 0 1 2 3 4 5 6 7
	do
		M hil$U c 14 $U 600
	done
	MKlist="$MKlist;ln hil1 keyboard"
	MKlist="$MKlist;ln hil3 locator"
	RMlist="$RMlist keyboard locator"
	;;
d337 34
d452 5
a456 5
	R ite0 ct0 ct1 hd0 hd1 hd2 dcm0 dcm1 dcm2 dcm3 dca0 dca1 hil
	R grf0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ss0 ch0 ptm local ppi0
	R apci0 uk0 random lkm pf systrace std st0 st1 fd
@


1.87
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.12 2004/08/19 07:05:20 miod Exp 
@


1.86
log
@Err, commit after regen...
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.10 2004/06/03 18:36:59 grange Exp 
d67 1
a67 1
#	uk*	SCSI unknown devices
@


1.85
log
@Replace the old 4.4BSD scsi code used on hp300 with a ``real'' driver
interfaced with the MI scsi code.

Adapted from NetBSD with some changes (especially to get tape and old
cd-rom drives to not cause the driver to spin during probe).

Tested by millert@@ and I, ok millert@@
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.21 2004/04/11 18:05:23 millert Exp 
@


1.84
log
@sync
@
text
@d34 1
d40 1
d43 1
a43 1
#	st*	Exabyte tape
d64 2
d67 1
a67 1
#	systrace*	System call tracing device
d202 1
a202 1
	R sd0 sd1 sd2 sd3 sd4 rd0 pty0
d318 8
d330 6
a335 2
tun*)
	M tun$U c 23 $U 600
d391 11
a401 1
ct*|mt*|st*)
a404 1
	st*) name=st blk=7 chr=20;;
d424 4
d437 4
d446 5
a450 5
	R ite0 ct0 ct1 hd0 hd1 hd2 dcm0 dcm1 dcm2 dcm3 dca0 dca1 st0
	R st1 hil grf0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1
	R sd2 sd3 sd4 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0 ptm local ppi0 apci0
	R random lkm pf systrace std fd
@


1.83
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.9 2004/05/30 08:17:17 grange Exp 
@


1.82
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.8 2004/05/29 04:07:30 deraadt Exp 
@


1.81
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
@


1.80
log
@Regen for for pty changes (62 per letter instead of just 16)
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.6 2004/04/11 18:05:22 millert Exp 
d48 2
a49 2
#	pty*	Set of 62 pseudo terminals
tty_dev
@


1.79
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.19 2004/02/20 19:13:08 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.4 2004/03/12 04:54:04 deraadt Exp 
d48 2
a49 2
#	pty*	Set of 16 master pseudo terminals
#	tty*	Set of 16 slave pseudo terminals
d354 6
a359 2
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
d361 1
a361 1
	while [ $n -lt 16 ]
d363 2
a364 2
		nam=$name$(hex $n)
		off=$(($U*16))
d416 2
a417 2
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 xfs0 ptm local ppi0
	R apci0 random lkm pf systrace std fd
@


1.78
log
@Regen; except for alpha, the only changes are in comments.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.common,v 1.3 2004/02/20 19:13:01 miod Exp 
@


1.77
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.17 2004/02/16 19:01:01 miod Exp 
#	OpenBSD: MAKEDEV.common,v 1.1 2004/02/16 18:58:54 miod Exp 
d9 1
a9 1
#	OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp 
d36 1
a36 1
#	sd*	SCSI disks
@


1.76
log
@sync
@
text
@d6 4
a9 3
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.16 2004/02/14 17:24:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.71 2004/02/14 17:24:30 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp 
d29 3
a31 6
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	ct*	HP300 HP-IB cartridge tape
#	mt*	(Magnetic) 9-track reel tape
#	st*	Exabyte tape
d33 1
a33 1
#	ccd*	concatenated disk devices
d35 1
d37 7
a43 3
#	vnd*	"file" pseudo-disks
#	rd*	"rd" pseudo-disks
# Terminal multiplexers:
a45 1
#	apci*	HP400 4 port serial mux interface
a46 2
#	tty*	set of 16 slave pseudo terminals
#	pty*	set of 16 master pseudo terminals
d48 5
a54 1
# Call units:
a55 4
#	fd	makes fd/* for the fdescfs
#	grf*	raw interface to HP300 graphics devices
#	ite*	terminal emulator interface to HP300 graphics devices
#	hil	HP300 HIL input devices
d57 3
a59 1
#	tun*	network tunnel driver
d61 4
a64 4
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	xfs*	XFS filesystem devices
#	systrace*	system call tracing device
d310 4
d318 2
a319 2
xfs*)
	M xfs$U c 51 $U 600
a330 4
lkm)
	M lkm c 24 0 640 _lkm
	;;

d335 2
a336 6
tun*)
	M tun$U c 23 $U 600
	;;

bpf*)
	M bpf$U c 22 $U 600
d345 2
a346 2
ptm)
	M ptm c 52 0 666
d367 2
a368 7
rd*)
	dodisk2 rd $U 8 34 $U 0
	;;

vnd*)
	dodisk vnd $U 6 19 $U 0
	dodisk svnd $U 6 19 $U 2048
d393 9
@


1.75
log
@Regen.
@
text
@d6 3
a8 3
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.15 2004/02/10 01:31:20 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.70 2004/02/13 23:34:13 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
d11 1
a11 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
@


1.74
log
@regen properly
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.68 2004/02/10 01:31:20 millert Exp 
d45 1
a45 1
#	tty*	set of 16 slave psuedo terminals
@


1.73
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.14 2004/01/13 15:13:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.67 2004/02/05 22:22:15 todd Exp 
@


1.72
log
@sync
@
text
@d47 1
d347 4
d410 1
a410 1
	R bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2 xfs0 local ppi0
@


1.71
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.66 2004/01/13 15:13:14 todd Exp 
a423 16
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
d432 1
a432 1
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
@


1.70
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.13 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.65 2004/01/12 22:31:34 todd Exp 
@


1.69
log
@+ alph2d() (thanks dr!), allow ttyU's a-zA-Z to be created
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.64 2004/01/12 22:18:23 todd Exp 
@


1.68
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d79 8
@


1.67
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.62 2003/10/14 17:58:23 todd Exp 
@


1.66
log
@regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.61 2003/10/11 03:32:15 tedu Exp 
d81 1
a81 1
trunc()
d83 16
a98 7
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
@


1.65
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
d353 1
a353 1
	dodisk svnd $U 6 19 $U 128
@


1.64
log
@Use : instead of . in chown (were this not sync'd correctly when the
original commit was done?)
@
text
@d6 3
a8 3
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.12 2002/12/25 20:20:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d11 1
a11 2
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
d13 3
a15 7
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d17 7
a23 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.63
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
d129 1
a129 1
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
d161 1
a161 1
		MKlist="$MKlist;chown $7.$G $1"
@


1.62
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.55 2003/01/06 05:57:32 deraadt Exp 
d164 1
a164 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
@


1.61
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.53 2002/12/05 04:30:21 kjc Exp 
d316 1
a316 1
	M lkm c 24 0 640 kmem
@


1.60
log
@redo "make allarchs".
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.11 2002/12/05 04:30:21 kjc Exp 
d368 1
a368 1
	st*) name=st blk=6 chr=20;;
@


1.59
log
@remove altq entries. altq is now handled through pf.
ok, deraadt@@
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.10 2002/10/16 15:48:31 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.52 2002/10/16 15:48:31 todd Exp 
@


1.58
log
@sync
@
text
@a68 1
#	altq/	ALTQ control interface
a301 8
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 52 $U 644
		U=$(($U+1))
	done
	;;

d397 1
a397 1
	R apci0 random lkm pf altq systrace std fd
@


1.57
log
@Regen
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.9 2002/09/06 21:48:34 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.51 2002/08/29 23:43:16 todd Exp 
@


1.56
log
@regen.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.8 2002/05/16 21:11:20 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.49 2002/06/18 00:53:45 fgsch Exp 
d281 1
a281 2
		M grf$U c 10 $U
#		echo "grf$U: use MAKEDEV.hpux to make HP-UX names for device"
d289 1
a289 1
hil*)
d292 1
a292 1
		M hil$U c 14 $U
@


1.55
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.47 2002/06/09 04:19:15 todd Exp 
@


1.54
log
@Regen.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.46 2002/05/16 16:18:44 provos Exp 
a9 1
#	$OpenBSD$
@


1.53
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.7 2002/04/18 23:16:00 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.44 2002/04/17 22:53:04 miod Exp 
d71 1
d301 4
d408 1
a408 1
	R apci0 random lkm pf altq std fd
@


1.52
log
@sync
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.6 2002/04/14 23:26:45 deraadt Exp 
#	OpenBSD: MAKEDEV.mi,v 1.43 2002/04/11 20:28:49 deraadt Exp 
d186 1
a186 1
	R std ct0 ct1 st0 st1 hd0 hd1 hd2 hd3 hd4 cd0
@


1.51
log
@regen. some of these were missed previously.
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.5 2002/03/26 00:57:46 miod Exp 
#	OpenBSD: MAKEDEV.mi,v 1.42 2002/03/31 21:49:12 fgsch Exp 
d186 1
a186 1
	R std ct0 ct1 st0 st1 hd0 hd1 hd2 hd3 hd4
@


1.50
log
@Regen
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.41 2002/02/25 01:10:26 todd Exp 
@


1.49
log
@random typo fix; ok deraadt@@
@
text
@d6 1
a6 1
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.3 2002/02/14 04:37:15 todd Exp 
d8 1
a8 1
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
a293 21
		if [ -f /usr/sbin/hilinfo ]
		then
			case `/usr/sbin/hilinfo -t hil$U` in
			mouse)
				if [ ! -f locator ]
				then
					MKlist="$MKlist;ln hil$U locator"
					RMlist="$RMlist locator"
				fi
				;;
			keyboard)
				if [ ! -f keyboard ]
				then
					MKlist="$MKlist;ln hil$U keyboard"
					RMlist="$RMlist keyboard"
				fi
				;;
			*)
				;;
			esac
		fi
d295 3
a297 7
	if [ ! -f /usr/sbin/hilinfo ]
	then
		MKlist="$MKlist;ln hil1 keyboard"
		MKlist="$MKlist;ln hil3 locator"
		RMlist="$RMlist keyboard locator"
	fi
#	echo "hil: use MAKEDEV.hpux to make HP-UX names for devices"
@


1.48
log
@Remove uncommited garbage.  I am sorry, but this was just not tested. It
crashes sh, EVEN after that possible fix.  It appears to overflow the
ramdisk _before_ it dumps core.  Noone was shown these changes.  They were
just tossed in.  This is not a development process that will work, so I
am just backing out all the changes in the last 24 hours.
@
text
@d6 3
a8 3
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.4 2002/02/14 13:29:20 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
d10 1
a10 1
#	$OpenBSD: MAKEDEV,v 1.45 2002/02/19 21:06:00 todd Exp $
d428 1
a428 1
	R apci0 rndrandom lkm pf altq std fd
@


1.47
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.38 2002/02/21 13:41:55 todd Exp 
d10 1
a10 1
#	$OpenBSD$
d428 1
a428 1
	R apci0 random lkm pf altq std fd
@


1.46
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.37 2002/02/21 13:03:00 todd Exp 
d428 1
a428 1
	R apci0 rndrandom lkm pf altq std fd
@


1.45
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.36 2002/02/19 21:05:10 todd Exp 
@


1.44
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.34 2002/02/17 05:14:30 deraadt Exp 
@


1.43
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.32 2002/02/15 21:13:47 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp 
d12 1
a12 1
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d48 1
a48 1
#	rd*	"ramdisk" pseudo-disks
@


1.42
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.31 2002/02/14 17:44:38 todd Exp 
d425 4
a428 4
	R st1 hil grf0 local ppi0 apci0 xfs0 rndrandom lkm pf altq
	R tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7
	R bpf8 bpf9 rd0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std
	R pty0 pty1 pty2 fd sd0 sd1 sd2 sd3 sd4
@


1.41
log
@sync (only comments with commas effected)
@
text
@d6 2
a7 2
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.3 2002/02/14 04:37:15 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.29 2002/02/14 05:38:22 todd Exp 
d369 6
a374 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
	esac
d379 1
@


1.40
log
@sync
@
text
@d7 2
a8 2
#	OpenBSD: MAKEDEV.mi,v 1.28 2002/02/14 04:41:32 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
@


1.39
log
@sync
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.27 2002/02/14 04:37:15 todd Exp 
d440 1
a440 1
	R pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
@


1.38
log
@not ready for MAKEDEV.md
@
text
@d3 2
a4 2
#	$OpenBSD: MAKEDEV,v 1.36 2002/01/04 03:00:44 deraadt Exp $
#	$NetBSD: MAKEDEV,v 1.12 1995/11/05 23:50:22 thorpej Exp $
d6 7
a12 1
# Copyright (c) 1990 The Regents of the University of California.
d20 2
a21 10
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
d23 10
a32 13
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
d35 2
d44 1
a44 1
#	ccd*	"concatenated" pseudo-disks
d46 1
a46 1
#	sd*	HP300 SCSI disks
d48 2
a49 1
# Terminal multiplexors:
d54 2
a55 1
#	pty*	set of 16 master and slave pseudo terminals
d60 1
a60 1
#	fd	file descriptors
d64 1
a64 1
#	bpf*	packet filter
d66 1
d68 1
a68 1
#	*random	inkernel random number generator
d70 3
a72 2
#	altq	ALTQ control interface
#
d74 2
a75 2
PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
d77 1
a77 5
#
# Utility functions
#

hex ()
d80 7
a86 7
		[0-9]) echo -n $1 ;;
		10) echo -n a;;
		11) echo -n b;;
		12) echo -n c;;
		13) echo -n d;;
		14) echo -n e;;
		15) echo -n f;;
d90 11
a100 3
#
# End of utility functions
#
d102 15
a116 3
for i
do
case $i in
d118 14
a131 8
all)
	sh MAKEDEV std fd ct0 ct1 st0 st1 ccd0 ccd1 ccd2 hd0 hd1 hd2
	sh MAKEDEV sd0 sd1 sd2 rd0 rd1 pty0 vnd0 vnd1 vnd2 vnd3
	sh MAKEDEV hil grf0 apci0 ppi0 ite0 dca0 dcm0 dcm1 dcm2 dcm3
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV pf tun0 tun1 tun2 tun3 lkm random xfs0 altq
	sh MAKEDEV local
	;;
d133 9
a141 6
raminst)
	sh MAKEDEV std fd ct0 ct1 st0 st1 hd0 hd1 hd2 hd3 hd4
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 rd0 rd1 pty0
	sh MAKEDEV hil grf0 apci0 ite0 dca0 dcm0 dcm1
	sh MAKEDEV bpf0 bpf1 tun0 tun1 lkm random
	;;
d143 12
a154 15
std)
	rm -f console drum kmem mem null zero tty klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 36 0  ; chmod 640 ksyms ; chown root.kmem ksyms
	;;
d156 20
a175 9
fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 21 $n; n="$(( $n + 1 ))"; done )
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;
d177 6
a182 41
ct*|mt*|st*)
	umask 0 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ct*) name=ct; blk=0; chr=7;;
	mt*) name=mt; blk=1; chr=16;;
	st*) name=st; blk=6; chr=20;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7)
		four=`expr $unit + 4` ; eight=`expr $unit + 8`
		twelve=`expr $unit + 12`; twenty=`expr $unit + 20`
		#
		# block devices don't work so don't make them
		#rm -f ${name}${unit} ${name}${four} ${name}${eight} \
		#    ${name}${twelve} n${name}${unit} n${name}${eight}
		#mknod ${name}${unit}	b $blk $unit
		#mknod ${name}${four}	b $blk $four
		#mknod ${name}${eight}	b $blk $eight
		#mknod ${name}${twelve}	b $blk $twelve
		#mknod n${name}${unit}	b $blk $four ;: sanity w/pdp11 v7
		#mknod n${name}${eight}	b $blk $twelve ;: ditto
		#
		rm -f r${name}${unit} r${name}${four} r${name}${eight} \
		    r${name}${twelve} nr${name}${unit} nr${name}${eight}
		mknod r${name}${unit}	c $chr $unit
		mknod r${name}${four}	c $chr $four
		mknod r${name}${eight}	c $chr $eight
		mknod r${name}${twelve}	c $chr $twelve
		chown root.operator r${name}${unit} r${name}${four} \
		    r${name}${eight} r${name}${twelve}
		chmod 660 r${name}${unit} r${name}${four} \
		    r${name}${eight} r${name}${twelve}
		ln r${name}${four} nr${name}${unit} ;: sanity w/pdp11 v7
		ln r${name}${twelve} nr${name}${eight} ;: ditto
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac
	umask 77
	;;
d184 6
a189 6
bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 22 $unit
	chmod 600 bpf$unit
	chown root.wheel bpf$unit
d192 13
a204 125
pf)
	rm -f pf
	mknod pf c 33 0
	chown root.wheel pf
	chmod 600 pf
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	rm -f rd$unit? rrd$unit?
	mknod rd${unit}a b 8 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 8 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 34 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 34 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;

ccd*|hd*|sd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	case $i in
	hd*) name=hd; blk=2; chr=9;;
	sd*) name=sd; blk=4; chr=8;;
	ccd*) name=ccd; blk=5; chr=17;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|\
	17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=6; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
	umask 77
d208 1
a208 2
	unit=`expr $i : 'dca\(.*\)'`
	case $unit in
d210 2
a211 5
		rm -f tty${unit} cua${unit}
		mknod tty${unit} c 12 ${unit}
		mknod cua${unit} c 12 `expr ${unit} + 128`
		chown uucp.dialer tty${unit} cua${unit}
		chmod 660 tty${unit} cua${unit}
d220 1
a220 2
	unit=`expr $i : 'dcm\(.*\)'`
	case $unit in
d222 1
a222 1
		u="$(( $unit * 4 ))"
d229 2
a230 5
			rm -f {tty0,cua0}${ext}
			mknod tty0${ext} c 15 ${n}
			mknod cua0${ext} c 15 "$(( $n + 128 ))"
			chown uucp.dialer tty0${ext} cua0${ext}
			chmod 660 tty0${ext} cua0${ext}
d243 1
a243 2
	unit=`expr $i : 'apci\(.*\)'`
	case $unit in
d246 2
a247 5
			rm -f ttya${i} cuaa${i}
			mknod ttya${i} c 35 ${i}
			mknod cuaa${i} c 35 `expr ${i} + 128`
			chown uucp.dialer ttya${i} cuaa${i}
			chmod 660 ttya${i} cuaa${i}
d257 1
a257 2
	unit=`expr $i : 'ppi\(.*\)'`
	case $unit in
d259 1
a259 2
		rm -f ppi${unit}
		mknod ppi${unit} c 11 ${unit}
d268 1
a268 2
	unit=`expr $i : 'ite\(.*\)'`
	case $unit in
d270 1
a270 2
		rm -f ttye${unit}
		mknod ttye${unit} c 13 ${unit}
d279 1
a279 2
	unit=`expr $i : 'grf\(.*\)'`
	case $unit in
d281 2
a282 3
		rm -f grf${unit}
		mknod grf${unit} c 10 ${unit}; chmod 666 grf${unit}
#		echo "grf${unit}: use MAKEDEV.hpux to make HP-UX names for device"
d290 2
a291 2
hil)
	for unit in 0 1 2 3 4 5 6 7
d293 1
a293 2
		rm -f hil${unit} locator keyboard
		mknod hil${unit} c 14 ${unit}
d296 1
a296 1
			case `/usr/sbin/hilinfo -t hil${unit}` in
d300 2
a301 1
					ln hil${unit} locator
d307 2
a308 1
					ln hil${unit} keyboard
d318 3
a320 2
		ln hil1 keyboard
		ln hil3 locator
a321 1
	chmod 666 hil*
d325 21
d347 19
a365 4
	rm -f lkm
	mknod lkm c 24 0
	chown root.kmem lkm
	chmod 640 lkm
d369 18
a386 34
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f {tty,pty}$nam
			mknod tty$nam c 4 "$(( $offset + $n ))"
			mknod pty$nam c 5 "$(( $offset + $n ))"
			n="$(( $n + 1 ))"
		done
		umask 77
		;;
d388 8
d398 2
a399 9
random|srandom|urandom|prandom|arandom)
        rm -f random urandom srandom prandom arandom
	mknod  random c 32 0
	mknod srandom c 32 1
	mknod urandom c 32 2
	mknod prandom c 32 3
	mknod arandom c 32 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d402 3
a404 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d407 22
a428 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
d432 17
a448 2
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
d450 1
d456 31
@


1.37
log
@sync, and update, to make "ramdisk" target disk
@
text
@d3 2
a4 2
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
d6 1
a6 7
#	OpenBSD: etc.hp300/MAKEDEV.md,v 1.1 2002/02/08 20:26:36 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.23 2002/02/08 20:26:36 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp 
#
#	$OpenBSD$
#
# Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d14 10
a23 2
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
d25 13
a37 10
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a39 2
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
d47 1
a47 1
#	ccd*	concatenated disk devices
d49 1
a49 1
#	sd*	SCSI disks
d51 1
a51 2
#	rd*	"ramdisk" pseudo-disks
# Terminal multiplexers:
d56 1
a56 2
#	tty*	set of 16 slave psuedo terminals
#	pty*	set of 16 master pseudo terminals
d61 1
a61 1
#	fd	makes fd/* for the fdescfs
d65 1
a65 1
#	bpf*	Berkeley Packet Filter
a66 1
#	pf*	Packet Filter
d68 1
a68 1
#	*random	inkernel random data source
d70 2
a71 3
#	altq/	ALTQ control interface
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0
d73 2
a74 2
# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=
d76 5
a80 1
hex()
d83 1
a83 1
		[0-9]) echo -n $1;;
a91 48
trunc()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
	esac
}
unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}
dodisk()
{
	n=$(($((${5}*${7:-16}))+${6})) count=0
	RMlist="$RMlist $1$2? r$1$2?"
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
		let count=count+1
	done
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
}
dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}
d93 5
a97 34
# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"
mkl() {
 [ "${mklist[$1]}" ] && {
  mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
 } || {
  mklist[$1]="mknod -m $1 $2 $3 $4 $5"
  modes="$modes $1"
 }
}
M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist="$MKlist;chown $7.$G $1"
	} || {
		case $G in
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;
		esac
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
	}
	return 0
}
R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
d99 10
a108 2
U=`unt $i`
[ "$U" ] || U=0
a109 1
case $i in
d111 4
a114 4
	R std ct0 ct1 st0 st1 hd0 hd1 hd2 hd3 hd4
	R sd0 sd1 sd2 sd3 sd4 rd0 rd1 pty0
	R hil grf0 apci0 ite0 dca0 dcm0 dcm1
	R bpf0 bpf1 tun0 tun1 lkm random
d118 200
a317 12
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 36 0 640 kmem
	M drum		c 3 0 640 kmem
	M klog		c 6 0 600
d321 2
a322 1
	case $U in
d324 5
a328 2
		M tty$U c 12 $U 660 dialer uucp
		M cua$U c 12 $(($U+128)) 660 dialer uucp
d337 2
a338 1
	case $U in
d340 1
a340 1
		u="$(( $U * 4 ))"
d347 5
a351 2
			M tty0${ext} c 15 ${n} 660 dialer uucp
			M cua0${ext} c 15 "$(( $n + 128 ))" 660 dialer uucp
d364 2
a365 1
	case $U in
d368 5
a372 2
			M ttya${i} c 35 ${i} 660 dialer uucp
			M cuaa${i} c 35 $(($i+128)) 660 dialer uucp
d382 2
a383 1
	case $U in
d385 2
a386 1
		M ppi$U c MACHINE_ppi_maj $U 600
d395 2
a396 1
	case $U in
d398 2
a399 1
		M ttye$U c 13 $U 600
d408 2
a409 1
	case $U in
d411 3
a413 2
		M grf$U c 10 $U
#		echo "grf$U: use MAKEDEV.hpux to make HP-UX names for device"
d421 2
a422 2
hil*)
	for U in 0 1 2 3 4 5 6 7
d424 2
a425 1
		M hil$U c 14 $U
d428 1
a428 1
			case `/usr/sbin/hilinfo -t hil$U` in
d432 1
a432 2
					MKlist="$MKlist;ln hil$U locator"
					RMlist="$RMlist locator"
d438 1
a438 2
					MKlist="$MKlist;ln hil$U keyboard"
					RMlist="$RMlist keyboard"
d448 2
a449 3
		MKlist="$MKlist;ln hil1 keyboard"
		MKlist="$MKlist;ln hil3 locator"
		RMlist="$RMlist keyboard locator"
d451 1
a454 21
altq)
	RMlist="mkdir -p altq;$RMlist"
	for d in altq cbq wfq afm fifoq red rio localq hfsc cdnr blue priq; do
		M altq/$d c 52 $U 644
		U=$(($U+1))
	done
	;;

xfs*)
	M xfs$U c 51 $U 600
	;;

*random)
	n=0
	for pre in " " s u p a
	do
		M ${pre}random c 32 $n 644
		n=$(($n+1))
	done
	;;

d456 4
a459 19
	M lkm c 24 0 640 kmem
	;;

pf*)
	M pf c 33 0 600
	;;

tun*)
	M tun$U c 23 $U 600
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
d463 34
a496 19
	case $U in
	0) off=0 name=p;;
	1) off=16 name=q;;
	2) off=32 name=r;;
	3) off=48 name=s;;
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
	4) off=64 name=t;;
	5) off=80 name=u;;
	6) off=96 name=v;;
	7) off=112 name=w;;
	8) off=128 name=x;;
	9) off=144 name=y;;
	10) off=160 name=z;;
	11) off=176 name=P;;
	12) off=192 name=Q;;
	13) off=206 name=R;;
	14) off=224 name=S;;
	15) off=240 name=T;;
	*) echo bad unit for pty in: $i; continue;;
a497 8
	n=0
	while [ $n -lt 16 ]
	do
		nam=$name$(hex $n)
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
d500 9
a508 2
rd*)
	dodisk2 rd $U 8 34 $U 0
d511 5
a515 3
vnd*)
	dodisk vnd $U 6 19 $U 0
	dodisk svnd $U 6 19 $U 128
d518 11
a528 22
ct*|mt*|st*)
	case $i in
	ct*) name=ct blk=0 chr=7;;
	mt*) name=mt blk=1 chr=16;;
	st*) name=st blk=6 chr=20;;
	esac
	case $U in
	[0-7])
		four=$(($U+4)) eight=$(($U+8))
		twelve=$(($U+12)) twenty=$(($U+20))
		M r$name$U	c $chr $U 660 operator
		M r$name$four	c $chr $four 660 operator
		M r$name$eight	c $chr $eight 660 operator
		M r$name$twelve	c $chr $twelve 660 operator
		MKlist="$MKlist;ln r$name$four nr$name$U";: sanity w/pdp11 v7
		MKlist="$MKlist;ln r$name$twelve nr$name$eight";: ditto
		RMlist="$RMlist nr$name$U nr$name$eight"
		;;
	*)
		echo bad unit for tape in: 
		;;
	esac
d532 2
a533 16
	test -s $T.local && sh $T.local
	;;

all)
	R local ppi0 xfs0 rndrandom lkm pf altq tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 rd0 hd0
	R hd1 hd2 hd3 hd4 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 std
	R pty0 pty1 fd sd0 sd1 sd2 sd3 sd4
	;;

sd*|hd*|ccd*)
	case $i in
	sd*) dodisk sd $U 4 8 $U 0;;
	hd*) dodisk hd $U 2 9 $U 0;;
	ccd*) dodisk ccd $U 5 17 $U 0;;
	esac
a534 1

a539 31
}
R "$@@"
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
			's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
			 s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
	$eo "$list"
else
	echo "$list" | sh
fi
@


1.36
log
@add missing rm commands; todd ok
@
text
@d3 2
a4 2
#	$OpenBSD: MAKEDEV,v 1.35 2001/06/28 02:58:53 kjc Exp $
#	$NetBSD: MAKEDEV,v 1.12 1995/11/05 23:50:22 thorpej Exp $
d6 7
a12 1
# Copyright (c) 1990 The Regents of the University of California.
d20 2
a21 10
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
d23 10
a32 13
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
d35 2
d44 1
a44 1
#	ccd*	"concatenated" pseudo-disks
d46 1
a46 1
#	sd*	HP300 SCSI disks
d48 2
a49 1
# Terminal multiplexors:
d54 2
a55 1
#	pty*	set of 16 master and slave pseudo terminals
d60 1
a60 1
#	fd	file descriptors
d64 1
a64 1
#	bpf*	packet filter
d66 1
d68 1
a68 1
#	*random	inkernel random number generator
d70 3
a72 2
#	altq	ALTQ control interface
#
d74 2
a75 2
PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
d77 1
a77 5
#
# Utility functions
#

hex ()
d80 1
a80 1
		[0-9]) echo -n $1 ;;
d89 48
d138 37
a174 3
#
# End of utility functions
#
a175 2
for i
do
a176 10

all)
	sh MAKEDEV std fd ct0 ct1 st0 st1 ccd0 ccd1 ccd2 hd0 hd1 hd2
	sh MAKEDEV sd0 sd1 sd2 rd0 rd1 pty0 vnd0 vnd1 vnd2 vnd3
	sh MAKEDEV hil grf0 apci0 ppi0 ite0 dca0 dcm0 dcm1 dcm2 dcm3
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	sh MAKEDEV pf tun0 tun1 tun2 tun3 lkm random xfs0 altq
	sh MAKEDEV local
	;;

d178 4
a181 4
	sh MAKEDEV std fd ct0 ct1 st0 st1 hd0 hd1 hd2 hd3 hd4
	sh MAKEDEV sd0 sd1 sd2 sd3 sd4 rd0 rd1 pty0
	sh MAKEDEV hil grf0 apci0 ite0 dca0 dcm0 dcm1
	sh MAKEDEV bpf0 bpf1 tun0 tun1 lkm random
d185 12
a196 200
	rm -f console drum kmem mem null zero tty klog stdin stdout stderr ksyms
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chown root.kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chown root.kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chown root.kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	mknod ksyms		c 36 0  ; chmod 640 ksyms ; chown root.kmem ksyms
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	(cd fd && while [ $n -lt 64 ]; do mknod $n c 21 $n; n="$(( $n + 1 ))"; done )
	chown -R root.wheel fd
	chmod 555 fd
	chmod 666 fd/*
	;;

ct*|mt*|st*)
	umask 0 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ct*) name=ct; blk=0; chr=7;;
	mt*) name=mt; blk=1; chr=16;;
	st*) name=st; blk=6; chr=20;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7)
		four=`expr $unit + 4` ; eight=`expr $unit + 8`
		twelve=`expr $unit + 12`; twenty=`expr $unit + 20`
		#
		# block devices don't work so don't make them
		#rm -f ${name}${unit} ${name}${four} ${name}${eight} \
		#    ${name}${twelve} n${name}${unit} n${name}${eight}
		#mknod ${name}${unit}	b $blk $unit
		#mknod ${name}${four}	b $blk $four
		#mknod ${name}${eight}	b $blk $eight
		#mknod ${name}${twelve}	b $blk $twelve
		#mknod n${name}${unit}	b $blk $four ;: sanity w/pdp11 v7
		#mknod n${name}${eight}	b $blk $twelve ;: ditto
		#
		rm -f r${name}${unit} r${name}${four} r${name}${eight} \
		    r${name}${twelve} nr${name}${unit} nr${name}${eight}
		mknod r${name}${unit}	c $chr $unit
		mknod r${name}${four}	c $chr $four
		mknod r${name}${eight}	c $chr $eight
		mknod r${name}${twelve}	c $chr $twelve
		chown root.operator r${name}${unit} r${name}${four} \
		    r${name}${eight} r${name}${twelve}
		chmod 660 r${name}${unit} r${name}${four} \
		    r${name}${eight} r${name}${twelve}
		ln r${name}${four} nr${name}${unit} ;: sanity w/pdp11 v7
		ln r${name}${twelve} nr${name}${eight} ;: ditto
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac
	umask 77
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 22 $unit
	chmod 600 bpf$unit
	chown root.wheel bpf$unit
	;;

pf)
	rm -f pf
	mknod pf c 33 0
	chown root.wheel pf
	chmod 600 pf
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

rd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	rm -f rd$unit? rrd$unit?
	mknod rd${unit}a b 8 `expr $unit '*' 16 + 0`
	mknod rd${unit}c b 8 `expr $unit '*' 16 + 2`
	mknod rrd${unit}a c 34 `expr $unit '*' 16 + 0`
	mknod rrd${unit}c c 34 `expr $unit '*' 16 + 2`
	chown root.operator rd${unit}[ac] rrd${unit}[ac]
	chmod 640 rd${unit}[ac] rrd${unit}[ac]
	umask 77
	;;

ccd*|hd*|sd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	case $i in
	hd*) name=hd; blk=2; chr=9;;
	sd*) name=sd; blk=4; chr=8;;
	ccd*) name=ccd; blk=5; chr=17;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|\
	17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

vnd*)
	umask 2 ; unit=`expr $i : 'vnd\(.*\)'`
	for name in vnd svnd; do
		blk=6; chr=19;
		case $name in
		vnd)	off=0;;
		svnd)	off=128;;
		esac
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 16 + $off + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 16 + $off + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 16 + $off + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 16 + $off + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 16 + $off + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 16 + $off + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 16 + $off + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 16 + $off + 7`
		mknod ${name}${unit}i	b $blk `expr $unit '*' 16 + $off + 8`
		mknod ${name}${unit}j	b $blk `expr $unit '*' 16 + $off + 9`
		mknod ${name}${unit}k	b $blk `expr $unit '*' 16 + $off + 10`
		mknod ${name}${unit}l	b $blk `expr $unit '*' 16 + $off + 11`
		mknod ${name}${unit}m	b $blk `expr $unit '*' 16 + $off + 12`
		mknod ${name}${unit}n	b $blk `expr $unit '*' 16 + $off + 13`
		mknod ${name}${unit}o	b $blk `expr $unit '*' 16 + $off + 14`
		mknod ${name}${unit}p	b $blk `expr $unit '*' 16 + $off + 15`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 16 + $off + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 16 + $off + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 16 + $off + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 16 + $off + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 16 + $off + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 16 + $off + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 16 + $off + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 16 + $off + 7`
		mknod r${name}${unit}i	c $chr `expr $unit '*' 16 + $off + 8`
		mknod r${name}${unit}j	c $chr `expr $unit '*' 16 + $off + 9`
		mknod r${name}${unit}k	c $chr `expr $unit '*' 16 + $off + 10`
		mknod r${name}${unit}l	c $chr `expr $unit '*' 16 + $off + 11`
		mknod r${name}${unit}m	c $chr `expr $unit '*' 16 + $off + 12`
		mknod r${name}${unit}n	c $chr `expr $unit '*' 16 + $off + 13`
		mknod r${name}${unit}o	c $chr `expr $unit '*' 16 + $off + 14`
		mknod r${name}${unit}p	c $chr `expr $unit '*' 16 + $off + 15`
		chown root.operator ${name}${unit}[a-p] r${name}${unit}[a-p]
		chmod 640 ${name}${unit}[a-p] r${name}${unit}[a-p]
	done
	umask 77
d200 1
a200 2
	unit=`expr $i : 'dca\(.*\)'`
	case $unit in
d202 2
a203 5
		rm -f tty${unit} cua${unit}
		mknod tty${unit} c 12 ${unit}
		mknod cua${unit} c 12 `expr ${unit} + 128`
		chown uucp.dialer tty${unit} cua${unit}
		chmod 660 tty${unit} cua${unit}
d212 1
a212 2
	unit=`expr $i : 'dcm\(.*\)'`
	case $unit in
d214 1
a214 1
		u="$(( $unit * 4 ))"
d221 2
a222 5
			rm -f {tty0,cua0}${ext}
			mknod tty0${ext} c 15 ${n}
			mknod cua0${ext} c 15 "$(( $n + 128 ))"
			chown uucp.dialer tty0${ext} cua0${ext}
			chmod 660 tty0${ext} cua0${ext}
d235 1
a235 2
	unit=`expr $i : 'apci\(.*\)'`
	case $unit in
d238 2
a239 5
			rm -f ttya${i} cuaa${i}
			mknod ttya${i} c 35 ${i}
			mknod cuaa${i} c 35 `expr ${i} + 128`
			chown uucp.dialer ttya${i} cuaa${i}
			chmod 660 ttya${i} cuaa${i}
d249 1
a249 2
	unit=`expr $i : 'ppi\(.*\)'`
	case $unit in
d251 1
a251 2
		rm -f ppi${unit}
		mknod ppi${unit} c 11 ${unit}
d260 1
a260 2
	unit=`expr $i : 'ite\(.*\)'`
	case $unit in
d262 1
a262 2
		rm -f ttye${unit}
		mknod ttye${unit} c 13 ${unit}
d271 1
a271 2
	unit=`expr $i : 'grf\(.*\)'`
	case $unit in
d273 2
a274 3
		rm -f grf${unit}
		mknod grf${unit} c 10 ${unit}; chmod 666 grf${unit}
#		echo "grf${unit}: use MAKEDEV.hpux to make HP-UX names for device"
d282 2
a283 2
hil)
	for unit in 0 1 2 3 4 5 6 7
d285 1
a285 2
		rm -f hil${unit} locator keyboard
		mknod hil${unit} c 14 ${unit}
d288 1
a288 1
			case `/usr/sbin/hilinfo -t hil${unit}` in
d292 2
a293 1
					ln hil${unit} locator
d299 2
a300 1
					ln hil${unit} keyboard
d310 3
a312 2
		ln hil1 keyboard
		ln hil3 locator
a313 1
	chmod 666 hil*
d317 21
d339 19
a357 4
	rm -f lkm
	mknod lkm c 24 0
	chown root.kmem lkm
	chmod 640 lkm
d361 19
a379 34
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
	4) offset=64 name=t;;
	5) offset=80 name=u;;
	6) offset=96 name=v;;
	7) offset=112 name=w;;
	8) offset=128 name=x;;
	9) offset=144 name=y;;
	10) offset=160 name=z;;
	11) offset=176 name=P;;
	12) offset=192 name=Q;;
	13) offset=208 name=R;;
	14) offset=224 name=S;;
	15) offset=240 name=T;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15)
		umask 0
		n=0
		while [ $n -lt 16 ]
		do
			nam=$name`hex $n`
			rm -f {tty,pty}$nam
			mknod tty$nam c 4 "$(( $offset + $n ))"
			mknod pty$nam c 5 "$(( $offset + $n ))"
			n="$(( $n + 1 ))"
		done
		umask 77
		;;
d381 8
d391 2
a392 9
random|srandom|urandom|prandom|arandom)
        rm -f random urandom srandom prandom arandom
	mknod  random c 32 0
	mknod srandom c 32 1
	mknod urandom c 32 2
	mknod prandom c 32 3
	mknod arandom c 32 4
	chown root.wheel random srandom urandom prandom arandom
	chmod 644 random srandom urandom prandom arandom
d395 3
a397 5
xfs*)
	rm -f xfs$unit
	mknod xfs$unit c 51 $unit 
	chmod 600 xfs$unit 
	chown root.wheel xfs$unit
d400 22
a421 11
altq)
	mkdir -p altq
	chmod 755 altq
	unit=0
	for dev in altq cbq wfq afm fifoq red rio localq hfsc \
	    cdnr blue priq; do
		rm -f altq/$dev
		mknod altq/$dev c 52 $unit
		chmod 644 altq/$dev
		unit=$(($unit + 1))
	done
d425 16
a440 2
	umask 0
	test -s MAKEDEV.local && sh MAKEDEV.local
d442 1
d448 31
@


1.35
log
@add an entry for ALTQ.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.34 2001/06/25 03:19:52 kjell Exp $
d210 1
@


1.34
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.33 2001/06/24 23:36:00 kjell Exp $
d70 1
d106 1
a106 1
	sh MAKEDEV pf tun0 tun1 tun2 tun3 lkm random xfs0
d515 13
@


1.33
log
@Add the pf device for the shiny new packet filter
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.32 2001/05/30 02:11:15 deraadt Exp $
d194 1
a194 1
	mknod pf c 73 0
@


1.32
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.31 2000/03/22 07:34:28 niklas Exp $
d105 1
a105 1
	sh MAKEDEV tun0 tun1 tun2 tun3 lkm random xfs0
d190 7
@


1.31
log
@operator should have perms to write and change tapes.  ch* is still missing
in some MAKEDEVs, will see to them in a separate commit.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.30 1999/08/20 17:00:35 downsj Exp $
d105 1
a105 1
	sh MAKEDEV ipl tun0 tun1 tun2 tun3 lkm random xfs0
a189 9
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 33 0
	mknod ipnat c 33 1
	mknod ipstate c 33 2
	mknod ipauth c 33 3
	chown root.wheel ipl ipnat ipstate ipauth
@


1.30
log
@Change the default serial port device and /var/spool/lock permissions.
/var/spool/lock becomes uucp.dialer, mode 1775, and serial devices
become uucp.dialer, mode 660.

(A couple of "dead" MAKEDEVs have been updated because they conformed the
the old permission scheme, while others have not because they didn't.)
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.29 1998/11/19 08:18:56 dugsong Exp $
d170 4
@


1.29
log
@add support for more ptys
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.28 1998/10/15 21:24:53 art Exp $
d323 2
d346 2
d367 2
@


1.28
log
@add missing entries for xfs in all
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.27 1998/09/15 10:23:22 pattonme Exp $
d460 11
d474 1
a474 1
	0|1|2|3|4)
@


1.27
log
@Added definition for ipauth, a new piece for IPFilter v3.2.9
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.26 1998/08/24 05:49:51 millert Exp $
d69 1
d105 1
a105 1
	sh MAKEDEV ipl tun0 tun1 tun2 tun3 lkm random
d488 7
@


1.26
log
@remove ksyms in std entry like other std things
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.25 1998/08/24 05:29:53 millert Exp $
d188 1
a188 1
	rm -f ipl ipnat ipstate 
d192 2
a193 1
	chown root.wheel ipl ipnat ipstate 
@


1.25
log
@Add support for /dev/ksyms to arch-specific files
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.24 1998/01/26 04:19:39 dgregor Exp $
d116 1
a116 1
	rm -f console drum kmem mem null zero tty klog stdin stdout stderr
@


1.24
log
@Add /dev/ipnat and /dev/ipstate for IPF 3.2.3
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.23 1997/09/16 06:00:57 deraadt Exp $
d128 1
@


1.23
log
@10 bpf devices
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.22 1997/09/07 20:29:10 dgregor Exp $
d187 1
d189 3
a191 1
	chown root.wheel ipl
@


1.22
log
@In pty* rule:\n	Change 'rm -rf' to 'rm -f'\n	Fix {pty,tty}$n -> {pty,tty}$nam
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.21 1997/07/14 04:27:54 downsj Exp $
d103 2
a104 1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 ipl tun0 tun1 tun2 tun3 lkm random
@


1.21
log
@Add support for cua devices, and remove all references to awk(1)...
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.20 1997/07/07 23:49:58 downsj Exp $
d462 1
a462 1
			rm -rf {tty,pty}$nam
@


1.20
log
@Add ppi, fix dca.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.19 1997/07/06 19:42:39 downsj Exp $
d73 22
d132 2
a133 3
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 21 %d;", i, i)}'`)
d313 1
a313 1
		rm -f tty${unit}
d315 1
d327 14
a340 4
		eval `echo $unit | awk ' { unit = $1; u = 4 * $1 } END {
		for (i = 0; i < 4; i++)
		printf("rm -f tty0%x; mknod tty0%x c 15 %d; ",u+i,u+i,u+i); }'`
	;;
d353 3
a355 1
			rm -f ttya${i}; mknod ttya${i} c 35 ${i};
d458 9
a466 6
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x pty%s%x;" \
					"mknod tty%s%x c 4 %d;" \
					"mknod pty%s%x c 5 %d; ", \
					n, i, n, i, n, i, b+i, n, i, b+i); }'`
d471 1
@


1.19
log
@Add apci, major 35.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.18 1997/05/14 15:41:12 niklas Exp $
d58 1
d80 1
a80 1
	sh MAKEDEV hil grf0 apci0 ite0 dca0 dcm0 dcm1 dcm2 dcm3
a288 1
	# XXX What about dca cards?
d291 3
a293 3
	0)
		rm -f tty0
		mknod tty0 c 12 0
d326 13
@


1.18
log
@Make svnd nodes too, please test this on your port
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.17 1997/05/13 05:34:51 millert Exp $
d54 1
d79 1
a79 1
	sh MAKEDEV hil grf0 ite0 dca0 dcm0 dcm1 dcm2 dcm3
d87 1
a87 1
	sh MAKEDEV hil grf0 ite0 dca0 dcm0 dcm1
d311 15
@


1.17
log
@Only run MAKEDEV.local if it exists.  Avoids an error message
during installs where there is no MAKEDEV.local.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.16 1997/04/22 08:00:02 downsj Exp $
d186 1
a186 1
ccd*|hd*|sd*|vnd*)
a191 1
	vnd*) name=vnd; blk=6; chr=19;;
d229 2
a230 2
		chown root.operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
d236 47
@


1.16
log
@Make the Theo be quiet.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.15 1997/04/21 08:18:02 downsj Exp $
d372 1
a372 1
	sh MAKEDEV.local
@


1.15
log
@Add a few disk devices to the ramdisk.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.14 1997/02/16 10:40:50 downsj Exp $
a342 1
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
a355 3
		if [ $class = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
@


1.14
log
@Add rd device and raminst from mvme68k.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.13 1997/02/10 01:34:08 downsj Exp $
d84 2
a85 2
	sh MAKEDEV std fd ct0 ct1 st0 st1 hd0 hd1 hd2
	sh MAKEDEV sd0 sd1 sd2 rd0 rd1 pty0
@


1.13
log
@Support 16 partitions.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.12 1997/02/03 07:02:08 downsj Exp $
d77 1
a77 1
	sh MAKEDEV sd0 sd1 sd2 pty0 vnd0 vnd1 vnd2 vnd3
d83 7
d173 11
@


1.12
log
@rd -> hd, OpenBSD ids.
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.11 1997/01/18 08:05:19 downsj Exp $
d168 1
a168 1
ccd*|fd*|hd*|sd*|vnd*)
d180 32
a211 16
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
@


1.11
log
@random -> 32, ipl -> 33
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.10 1996/12/14 18:23:56 millert Exp $
d48 1
a48 1
#	rd*	HP300 HP-IB disks
d76 1
a76 1
	sh MAKEDEV std fd ct0 ct1 st0 st1 ccd0 ccd1 ccd2 rd0 rd1 rd2
d168 1
a168 1
ccd*|fd*|rd*|sd*|vnd*)
d171 1
a171 1
	rd*) name=rd; blk=2; chr=9;;
@


1.10
log
@/dev/fd should be owned by root.wheel
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.9 1996/10/19 11:51:29 mickey Exp $
d156 1
a156 1
	mknod ipl c 31 0
d331 5
a335 5
	mknod  random c 25 0
	mknod srandom c 25 1
	mknod urandom c 25 2
	mknod prandom c 25 3
	mknod arandom c 25 4
@


1.9
log
@add random device
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.8 1996/09/18 22:03:42 deraadt Exp $
d104 1
a104 1
	chown -R bin.bin fd
@


1.8
log
@do not use chgrp
@
text
@d3 1
a3 1
#	$OpenBSD: MAKEDEV,v 1.7 1996/07/23 06:32:55 etheisen Exp $
d66 1
d79 1
a79 1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 ipl tun0 tun1 tun2 tun3 lkm rnd
d328 10
@


1.7
log
@OpenBSD'ify
@
text
@d3 1
a3 1
#	$OpenBSD$
d85 3
a87 3
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
d195 1
a195 1
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
@


1.6
log
@Backslash continuation of literal strings causes nawk to barf.
@
text
@d3 1
@


1.5
log
@ad rnd devices.
@
text
@d316 3
a318 3
				printf("rm -f tty%s%x pty%s%x; \
					mknod tty%s%x c 4 %d; \
					mknod pty%s%x c 5 %d; ", \
@


1.4
log
@created devices for the IP filter log on all architectures
@
text
@d77 1
a77 1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 ipl tun0 tun1 tun2 tun3 lkm
@


1.3
log
@update from netbsd
@
text
@d77 1
a77 1
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2 tun3 lkm
d151 5
@


1.2
log
@from netbsd:
Remove device nodes before trying to create new ones
@
text
@d3 1
a3 1
#	$NetBSD: MAKEDEV,v 1.11.2.1 1995/11/07 08:24:41 thorpej Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
#	$NetBSD: MAKEDEV,v 1.11 1995/09/30 21:59:57 thorpej Exp $
d82 1
d120 2
d129 2
d200 1
d204 1
d219 1
a219 1
		printf("mknod tty0%x c 15 %d; ",u+i,u+i); }'`
d231 1
d244 1
d257 1
d311 2
a312 1
				printf("mknod tty%s%x c 4 %d; \
d314 1
a314 1
					n, i, b+i, n, i, b+i); }'`
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
