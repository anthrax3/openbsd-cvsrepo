head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.48
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.50
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.44
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.46
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.38
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.42
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.40
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.36
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.34
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.32
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.30
	OPENBSD_5_0:1.14.0.28
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.26
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.24
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.20
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.22
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.18
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.16
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.14
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.12
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.10
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.8
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.6
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.4
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7;
locks; strict;
comment	@# @;


1.14
date	2005.02.07.06.14.18;	author david;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.28.18.51.38;	author danh;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.20.19.13.01;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.16.18.58.53;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.14.17.24.31;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.12.22.18.24;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.18.18.08.59;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.01.19.52;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.14.05.50.37;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.23.06.02.19;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.07.06.54.10;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.07.06.25.32;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.07.06.06.40;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.04.09.25.35;	author todd;	state Exp;
branches;
next	;


desc
@@


1.14
log
@indentation whitespace nits (saves a few bytes even)
@
text
@dnl	$OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp $
dnl
dnl Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
dnl
dnl Permission to use, copy, modify, and distribute this software for any
dnl purpose with or without fee is hereby granted, provided that the above
dnl copyright notice and this permission notice appear in all copies.
dnl
dnl THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
dnl WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
dnl MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
dnl ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
dnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
dnl ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
dnl OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
dnl
dnl
dnl This file is an m4 file
dnl
dnl Conventions:
dnl
dnl o First, a change of quote to make shell statements like: `command`
dnl   possible
dnl
changequote(`{-', `-}')dnl
dnl
dnl o Next, change the comment character to make shell parameter
dnl   substitution possible
dnl
changecom(`/*', `*/')dnl
dnl
dnl o version info must be stripped of $ so we can say 'generated from' below
dnl
dnl  If we just use the version string how are we going to know what arch
dnl  'MAKEDEV.md,v' came from?
dnl
dnl  Thus, I have used the below to create a version string looking like
dnl  'OpenBSD: etc.sparc/MAKEDEV.inc,v...' which works, although requires
dnl  some attention if ported to another Id string setup.
dnl
dnl
dnl Initialize the stacks stored in _m4_*
dnl
undefine({-_m4_cvs_ver-})dnl
pushdef({-_m4_cvs_ver-}, {-done-})dnl
dnl
undefine({-_m4_devs-})dnl
pushdef({-_m4_devs-}, {-done-})dnl
dnl
undefine({-_m4_disks-})dnl
undefine({-_m4_disks2-})dnl
pushdef({-_m4_disks-}, {-done-})dnl
pushdef({-_m4_disks2-}, {-done-})dnl
dnl
dnl define stack 'add to' functions, only unique names queued
dnl
define({-ver_q-}, {-ifelse(index($1_ver, y), 0, ,
{-pushdef({-_m4_cvs_ver-}, {-$2-})define({-$1_ver-}, {-y-})-})-})dnl ver_q
dnl
define({-dev_q-}, {-ifelse(index(_q_$1_dev, :), 0,
{-errprint({-duplicated dev id: $1 at -}__file__{-:-}__line__ originally at _q_$1_dev)-},
{-pushdef({-_m4_devs-}, {-$1-})dnl
define({-_q_$1_dev-}, {-:-}__file__{-:-}__line__)-})-})dnl dev_q
dnl
define({-disk_q-}, {-ifelse(index(_q_$1_disk, :), 0,
{-errprint({-duplicated disk id: $1 at -}__file__{-:-}__line__ originally at _q_$1_disk)-}, {-pushdef({-_m4_disks-}, {-$1-})dnl
pushdef({-_m4_disks2-}, {-$1-})dnl
define({-_q_$1_disks-}, {-:-}__file__{-:-}__line__)-})-})dnl disk_q
dnl
dnl store a version string for 'this' file
dnl
dnl vers ( uniqueidstring, versionstring, subdir )
dnl
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp $-}, etc.MACHINE)
dnl
dnl if subdir is defined, prepend it to the filename in the version string
dnl
define({-vers-},
{-ifelse({-$3-}, {--},
{-ver_q(hstcl({-$1-}), {-translit({-{-$2-}-}, {-$-}, {--})-})-},
{-ver_q(hstcl({-$1-}), {-_addsubdir({-{-$2-}-}, $3)-})-})-})dnl
dnl
dnl Version info for this file:
dnl
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.13 2005/01/28 18:51:38 danh Exp $-})dnl
dnl
dnl
define({-_addsubdir-},
{-patsubst({-$1-}, {-\$(OpenBSD:) ([^\$]*)\$-}, {-\1 $2/\2-})-})dnl
dnl
dnl do the 'showing' of the version info
dnl
define({-do_vers-}, {-COMM	$1-})dnl
dnl
dnl show version function, to be called at the place when all versions are
dnl   queued, and it is time to show all of them
dnl
define({-show_vers-},
{-ifelse(_m4_cvs_ver, {-done-}, {--},
{-do_vers(_m4_cvs_ver)
popdef({-_m4_cvs_ver-})dnl
show_vers()dnl
-})-})dnl
dnl
dnl show the routines to generate devices
define({-show_devs-},
{-ifelse(_m4_devs, {-done-}, {--},
{-_MKDEV(_m4_devs){--}dnl
popdef({-_m4_devs-})dnl
show_devs()dnl
-})-})dnl
dnl
dnl routines to generate disks
define({-show_disks-},
{-ifelse(_m4_disks, {-done-}, {--},
{-ifcase(_m4_disks, _m4_disks{--}*)dnl
popdef({-_m4_disks-})dnl
show_disks()dnl
-})-})dnl
dnl
define({-show_disks2-},
{-ifelse(_m4_disks2, {-done-}, {--},
{-CasE(_m4_disks2)dnl
popdef({-_m4_disks2-})dnl
show_disks2()dnl
-})-})dnl
dnl
dnl
dnl Some m4 math functions:
dnl
dnl   Add(a, b)           - displays the result of a+b
dnl   Mult(a, b)          - displays the result of a*b
dnl   trunc a b          - displays the string a minus b removed from the RHS
dnl   hex a              - displays the hex equivalent of 0-15
dnl   unt a              - s/[a-z]*([0-9]*).*/\1/ aka sd0a -> 0
dnl
dnl Functions:
dnl
dnl --> Addition
dnl
define({-Add-}, {-$({-(-}$1+$2{-)-})-})dnl
dnl
dnl --> Multiplication
dnl
define({-Mult-}, {-$({-(-}$1*$2{-)-})-})dnl
dnl
dnl
dnl TRUNC
dnl
define({-expr_trunc-}, {-$1trunc()
$1{
$1	case {-$-}3 in
$1	l)   {-expr-} {-$-}1 : '\(.*\)'{-$-}2 ;;
$1	r|*) {-expr-} ${--}1 : ${--}2'\(.*\)' ;;
$1	esac
$1}-})dnl
dnl
dnl
define({-_SHELL-}, {-sh-})dnl
define({-_this-}, {-{-$-}T-})dnl
dnl define({-_recurse-}, {-_SHELL _this-})dnl
define({-_recurse-}, {-R-})dnl
dnl
dnl _devitem(pattern, description)
dnl
define({-_devitem-},
{-{-#-}	$1	{-$2-}-})dnl
dnl
dnl _devtitle(description)
dnl
define({-_devtitle-}, {-{-#-} $1:-})dnl
dnl
dnl _DEV(name, [character major], [block major])
dnl
define({-_DEV-}, {-$1_dev{--}dnl
dnl
dnl _DEV 'ifelse' .. $2 - major_$1_c
dnl
ifelse($2, , , {-define(major_$1_c, $2)-})dnl
dnl
dnl _DEV 'ifelse' .. $3 - major_$1_b
dnl
ifelse($3, , , {-define(major_$1_b, $3)-})dnl
dnl
dnl _DEV 'ifelse' .. $4 - step_$1
dnl
ifelse($4, , , {-define(step_$1, {-$4-})-})dnl
dnl
dnl Some magic here, defining a devitem also defines another
dnl string so that later we can check if a particular devitem was
dnl defined, and thus determine if the devices themselves are to
dnl be built
dnl
define({-$1__DEV-}, {-Y-})dnl
dnl
dnl More magic, put device string name into a queue of script segments to
dnl be shown later if it has been defined as a device in MAKEDEV.mi
dnl
ifdef({-$1_mkdev-}, {-__mkdev({-$1-})-})dnl
dnl
dnl
-})dnl _DEV
dnl
dnl
define({-ifdev-}, {-ifelse($1__DEV, Y, {-$2-})-})dnl
dnl
define({-_MKDEV-}, {-$1_mkdev-})dnl
define({-_TITLE-}, {-$1_title-})dnl
define({-__devitem-}, {-define($1_dev, {-_devitem($2, $3)-})-})dnl
define({-__devtitle-}, {-define($1_title, {-_devtitle($2)-})-})dnl
dnl
dnl Beginning and ending of case entries, just incase we change in the
dnl future, save chasing things down again
dnl
define({-_end-}, {-
	;;

-})dnl
define({-_beg-}, {-{-)-}
	-})dnl
dnl
dnl  create the script segment for making devices
dnl             $1     $2      $3
dnl _mkdev(shortname, devpatt, action)dnl
define({-_mkdev-}, {-define($1_mkdev, {-$2{--}_beg{--}$3{--}_end-})-})dnl
dnl
dnl  define a major character device
dnl             $1     $2      $3      $4
dnl _mcdev(shortname, devpatt, devbase, devmajor [, group [ owner ] ])dnl
dnl
define({-_mcdev-}, {-define($1_mkdev, {-{-$2-}_beg{--}M $3$U c $4 $U{--}dnl
ifelse($6, , ifelse($5, , , {- -}$5), {- -}ifelse($5, , 600, $5){- -}$6){--}_end-})-})dnl
dnl
dnl         $1        $2      $3        $4       $5      $6
dnl _cdev(shortname, devpatt, devmajor, devminor[, devmod, devgrp])dnl
define({-_cdev-},
{-dnl
define($1_mkdev, {-$2{--}_beg{--}M $2 c $3 $4 $5 $6{--}_end-}){--}-})dnl
dnl
dnl
define({-__mkdev-}, {-dev_q($1)-})dnl
dnl
dnl for showing disks
dnl
define({-CasE-},
{-ifdev({-$1-},
{-	$1*) dodisk $1 $U major_$1_b major_$1_c $U 0{--}ifstep($1);;
-})-})dnl
dnl
dnl
define({-ifcase-}, {-dnl
ifelse(C_ase, Y, ifdev({-$1-}, {-|$2-}),
{-ifdev({-$1-}, {-$2define({-C_ase-}, Y)-})-})-})dnl
dnl
dnl
dnl device list .. list devices 'iff' they are defined
dnl
dnl input:
dnl
dnl    _dl({-usb-}, {-usb0 usb1-}, {-urio-}, {-urio-}, ...)
dnl
dnl output:
dnl
dnl {-<tab>_recurse usb0 usb1 urio
dnl   <tab>_recurse uhid0 uhid2 uhid3-}
dnl
dnl  wrap if more than 60 chars wide
dnl
dnl .. wrap it all up in an 'ifelse({-$1-}, , {- ... -})' for neatness ??
dnl
define({-_dl-}, {-dnl
ifdef({-_dt-}, , {-define({-_dt-})-})dnl
ifdef({-_do-}, , {-_dt{--}_recurse{--}define({-_do-}, 0)dnl
define({-_dt-}, {-	-})-})dnl
ifdef({-$1__DEV-},
{-define({-_di-}, {-$2-})-},
{-define({-_di-})-})dnl
ifelse(eval(len(_di)+_do<60), 1,
{-ifelse(eval(len(_di)>0), 1,
{- _di{--}define({-_do-}, eval(1+_do+len(_di)))-})-},
{-
_dt{--}_recurse _di{--}dnl
define({-_do-}, len(_di))-})dnl
ifelse({-$3-}, {--},
{-undefine({-_dt-}, {-_do-})-}, dnl <--- The END
{-_dl(shift(shift($@@)))-})-})dnl
dnl
dnl
define({-_show_target-}, {-dnl
ifdef({-$1__DEV-}, {-disp_dev({-$2-})-})dnl
ifelse({-$3-}, {--},
{-_disp_dev_end()-}, dnl <--- The END
{-_show_target(shift(shift($@@)))-})-})dnl
dnl
define({-disp_dev-}, {-dnl
ifdef({-_disp_dev_tab-}, , {-define({-_disp_dev_tab-})-})dnl
ifdef({-_disp_dev_len-}, , {-dnl
define({-_disp_dev_len-}, 0)dnl
_disp_dev_tab{--}_recurse{--}dnl
define({-_disp_dev_tab-}, {-	-})-})dnl
ifelse(eval(len($1)+_disp_dev_len<60), 1,
{- $1{--}define({-_disp_dev_len-}, eval(1+_disp_dev_len+len($1)))-}, {-
_disp_dev_tab{--}_recurse $1{--}dnl
define({-_disp_dev_len-}, len($1))-})dnl
-})dnl
define({-_disp_dev_end-}, {-undefine({-_disp_dev_tab-}, {-_disp_dev_len-})-})dnl
dnl
dnl A word about the above:
dnl
dnl _dt -> 'tab' .. at first, defined to nothing, as the tab is already there
dnl        then define it to a tab every time through
dnl        undefine it at the end
dnl
dnl _do -> 'old' count .. stores the length of the old string already displayed
dnl        it is initialized to 0, added to the length plus 1 of '_di' each
dnl        iteration the line is less than 60 chars long
dnl	   undefined at the end
dnl _di -> 'iteration' string .. the string used in this iteration, is empty if
dnl        the device does not exist
dnl
dnl
dnl ifstep(devstr)
dnl   .. if stepping is defined for the particular device, emit ' step', else
dnl      nothing
define({-ifstep-}, {-ifdef({-step_$1-}, {- -}step_$1{--})-})dnl
dnl
dnl
define({-target-}, {-twrget({-$1-}, {-$2-}, {-$2-}, shift(shift($@@)))-})dnl
dnl
dnl twrget(target, devname, prefix, str1, str2, str3)
dnl        $1     $2      $3     $4   $5   $6
dnl
define({-twrget-}, {-dnl
dnl
ifdef({-$1_target-}, , {-pushdef({-$1_target-}, {-done-})-})dnl
dnl
ifelse({-$4-}, , , {-dnl
ifelse({-$4-}, {-_done-}, , {-dnl
ifelse({-$5-}, , , {-dnl
dnl errprint({-recurse: $1, $2, $3, $4, $5, $6, ...-})dnl
twrget({-$1-}, {-$2-}, {-$3-}, shift(shift(shift(shift($@@)))))dnl
-})-})-})dnl
dnl
ifelse({-$4-}, {-_done-}, , {-dnl
dnl errprint({-recurse: $1_$2_dev, $3$4, $3$4, _done-})dnl
twrget({-$1_$2_dev-}, {-$3$4-}, {-$3$4-}, {-_done-})dnl
-})dnl
dnl
ifdef({-$1$2target-}, , {-dnl
pushdef({-$1_target-}, {-$2-})define({-$1$2target-})dnl
-})dnl
dnl
-})dnl
dnl
dnl
define({-show_target-}, {-dnl
ifelse($1_target, {-done-}, {-_disp_dev_end()-},
{-dnl $1_target:
show_dev($1, -}$1_target{-)dnl
popdef({-$1_target-})dnl
show_target({-$1-})dnl
-})-})dnl
dnl
define({-show_dev-}, {-dnl
ifdef({-$2__DEV-}, {-dnl
ifelse($1_$2_dev_target, {-done-}, , {-dnl
disp_dev({-$1_$2_dev_target-})dnl
popdef({-$1_$2_dev_target-})dnl
show_dev({-$1-}, {-$2-})-})dnl
-})dnl
-})dnl
dnl
@


1.13
log
@change start and end comment sequences (not used) to allow shell
parameter substitution.

ok todd@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp $
d29 1
a29 1
dnl   
d74 2
a75 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp $-}, etc.MACHINE)
d86 1
a86 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp $-})dnl
@


1.12
log
@MAKEDEV.8 improvement pack:
- refer to the section 4 manual page for every device target, whenever
possible
- repair a few minor quoting errors
- repair a few sorting errors
- fix a few device descriptions (ideally they would be synched with the
  .Nd line of their manpages, but we are not there... yet)
- minor mdoc fixes

Thanks to jmc@@ for review and a lot of constructive criticism.
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp $
d27 5
d74 2
a75 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp $-}, etc.MACHINE)
d86 1
a86 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.11 2004/02/16 18:58:53 miod Exp $-})dnl
@


1.11
log
@Move the real knowledge of MI devices to a specific file, MAKEDEV.common.
While there, allow the comment char and the divert section for md script
fragments to be overriden.
No functional change (yet).

disabused ok deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp $
d69 2
a70 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp $-}, etc.MACHINE)
d81 1
a81 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.10 2004/02/14 17:24:31 todd Exp $-})dnl
d205 1
a205 1
define({-__devitem-}, {-define($1_dev, {-_devitem($2, $3)-})$4-})dnl
@


1.10
log
@copyright 2004 as well, prompted/reminded by miod
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp $
d69 2
a70 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp $-}, etc.MACHINE)
d81 1
a81 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp $-})dnl
d89 1
a89 1
define({-do_vers-}, {-#	$1-})dnl
@


1.9
log
@utty[0-9a-f] -> /dev/ttyU[0-9a-zA-Z]; prompted by & ok deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp $
d3 1
a3 1
dnl Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
d69 2
a70 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp $-}, etc.MACHINE)
d81 1
a81 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp $-})dnl
@


1.8
log
@switch to share/misc/license.template
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp $
d69 2
a70 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp $-}, etc.MACHINE)
d81 1
a81 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp $-})dnl
d225 1
a225 1
dnl _mcdev(shortname, devpatt, devbase, devmajor)dnl
@


1.7
log
@copyright repair
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp $
d3 1
a3 2
dnl Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
dnl All rights reserved.
d5 11
a15 18
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions
dnl are met:
dnl 1. Redistributions of source code must retain the above copyright
dnl    notice, this list of conditions and the following disclaimer.
dnl 2. The name of the author may not be used to endorse or promote products
dnl    derived from this software without specific prior written permission.
dnl
dnl THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
dnl INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
dnl AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
dnl THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
dnl EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
dnl PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
dnl OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
dnl WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
dnl OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
dnl ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d69 2
a70 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp $-}, etc.MACHINE)
d81 1
a81 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.6 2002/02/14 05:50:37 todd Exp $-})dnl
@


1.6
log
@KNF function argument spacing
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp $
d3 1
a3 1
dnl Copyright (c) 2001 Todd T. Fries <todd@@OpenBSD.org>
d77 2
a78 2
dnl example1: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp $-})
dnl example2: vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp $-}, etc.MACHINE)
d89 1
a89 1
vers(__file__, {-$OpenBSD: MAKEDEV.sub,v 1.5 2002/01/23 06:02:19 todd Exp $-})dnl
@


1.5
log
@add target macros as a result of a conversation with mickey; cleaner look
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp $
d33 1
a33 1
changequote(`{-',`-}')dnl
d48 1
a48 1
pushdef({-_m4_cvs_ver-},{-done-})dnl
d51 1
a51 1
pushdef({-_m4_devs-},{-done-})dnl
d55 2
a56 2
pushdef({-_m4_disks-},{-done-})dnl
pushdef({-_m4_disks2-},{-done-})dnl
d60 2
a61 2
define({-ver_q-},{-ifelse(index($1_ver,y),0,,
{-pushdef({-_m4_cvs_ver-},{-$2-})define({-$1_ver-},{-y-})-})-})dnl ver_q
d63 1
a63 1
define({-dev_q-},{-ifelse(index(_q_$1_dev,:),0,
d65 2
a66 2
{-pushdef({-_m4_devs-},{-$1-})dnl
define({-_q_$1_dev-},{-:-}__file__{-:-}__line__)-})-})dnl dev_q
d68 4
a71 4
define({-disk_q-},{-ifelse(index(_q_$1_disk,:),0,
{-errprint({-duplicated disk id: $1 at -}__file__{-:-}__line__ originally at _q_$1_disk)-},{-pushdef({-_m4_disks-},{-$1-})dnl
pushdef({-_m4_disks2-},{-$1-})dnl
define({-_q_$1_disks-},{-:-}__file__{-:-}__line__)-})-})dnl disk_q
d77 2
a78 2
dnl example1: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp $-})
dnl example2: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp $-},etc.MACHINE)
d83 3
a85 3
{-ifelse({-$3-},{--},
{-ver_q(hstcl({-$1-}),{-translit({-{-$2-}-},{-$-},{--})-})-},
{-ver_q(hstcl({-$1-}),{-_addsubdir({-{-$2-}-},$3)-})-})-})dnl
d89 1
a89 1
vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.4 2002/01/07 06:54:10 todd Exp $-})dnl
d93 1
a93 1
{-patsubst({-$1-},{-\$(OpenBSD:) ([^\$]*)\$-},{-\1 $2/\2-})-})dnl
d97 1
a97 1
define({-do_vers-},{-#	$1-})dnl
d103 1
a103 1
{-ifelse(_m4_cvs_ver,{-done-},{--},
d111 1
a111 1
{-ifelse(_m4_devs,{-done-},{--},
d119 2
a120 2
{-ifelse(_m4_disks,{-done-},{--},
{-ifcase(_m4_disks,_m4_disks{--}*)dnl
d126 1
a126 1
{-ifelse(_m4_disks2,{-done-},{--},
d135 2
a136 2
dnl   Add(a,b)           - displays the result of a+b
dnl   Mult(a,b)          - displays the result of a*b
d145 1
a145 1
define({-Add-},{-$({-(-}$1+$2{-)-})-})dnl
d149 1
a149 1
define({-Mult-},{-$({-(-}$1*$2{-)-})-})dnl
d154 1
a154 1
define({-expr_trunc-},{-$1trunc()
d163 4
a166 4
define({-_SHELL-},{-sh-})dnl
define({-_this-},{-{-$-}T-})dnl
dnl define({-_recurse-},{-_SHELL _this-})dnl
define({-_recurse-},{-R-})dnl
d168 1
a168 1
dnl _devitem(pattern,description)
d175 1
a175 1
define({-_devtitle-},{-{-#-} $1:-})dnl
d177 1
a177 1
dnl _DEV(name,[character major],[block major])
d179 1
a179 1
define({-_DEV-},{-$1_dev{--}dnl
d183 1
a183 1
ifelse($2,,,{-define(major_$1_c,$2)-})dnl
d187 1
a187 1
ifelse($3,,,{-define(major_$1_b,$3)-})dnl
d191 1
a191 1
ifelse($4,,,{-define(step_$1,{-$4-})-})dnl
d198 1
a198 1
define({-$1__DEV-},{-Y-})dnl
d203 1
a203 1
ifdef({-$1_mkdev-},{-__mkdev({-$1-})-})dnl
d209 1
a209 1
define({-ifdev-},{-ifelse($1__DEV,Y,{-$2-})-})dnl
d211 4
a214 4
define({-_MKDEV-},{-$1_mkdev-})dnl
define({-_TITLE-},{-$1_title-})dnl
define({-__devitem-},{-define($1_dev,{-_devitem($2,$3)-})$4-})dnl
define({-__devtitle-},{-define($1_title,{-_devtitle($2)-})-})dnl
d219 1
a219 1
define({-_end-},{-
d223 1
a223 1
define({-_beg-},{-{-)-}
d228 2
a229 2
dnl _mkdev(shortname,devpatt,action)dnl
define({-_mkdev-},{-define($1_mkdev,{-$2{--}_beg{--}$3{--}_end-})-})dnl
d233 1
a233 1
dnl _mcdev(shortname,devpatt,devbase,devmajor)dnl
d235 2
a236 2
define({-_mcdev-},{-define($1_mkdev,{-{-$2-}_beg{--}M $3$U c $4 $U{--}dnl
ifelse($6,,ifelse($5,,,{- -}$5),{- -}ifelse($5,,600,$5){- -}$6){--}_end-})-})dnl
d239 1
a239 1
dnl _cdev(shortname,devpatt,devmajor,devminor[,devmod,devgrp])dnl
d242 1
a242 1
define($1_mkdev,{-$2{--}_beg{--}M $2 c $3 $4 $5 $6{--}_end-}){--}-})dnl
d245 1
a245 1
define({-__mkdev-},{-dev_q($1)-})dnl
d255 3
a257 3
define({-ifcase-},{-dnl
ifelse(C_ase,Y,ifdev({-$1-},{-|$2-}),
{-ifdev({-$1-},{-$2define({-C_ase-},Y)-})-})-})dnl
d264 1
a264 1
dnl    _dl({-usb-},{-usb0 usb1-},{-urio-},{-urio-},...)
d273 1
a273 1
dnl .. wrap it all up in an 'ifelse({-$1-},,{- ... -})' for neatness ??
d275 4
a278 4
define({-_dl-},{-dnl
ifdef({-_dt-},,{-define({-_dt-})-})dnl
ifdef({-_do-},,{-_dt{--}_recurse{--}define({-_do-},0)dnl
define({-_dt-},{-	-})-})dnl
d280 1
a280 1
{-define({-_di-},{-$2-})-},
d282 3
a284 3
ifelse(eval(len(_di)+_do<60),1,
{-ifelse(eval(len(_di)>0),1,
{- _di{--}define({-_do-},eval(1+_do+len(_di)))-})-},
d287 3
a289 3
define({-_do-},len(_di))-})dnl
ifelse({-$3-},{--},
{-undefine({-_dt-},{-_do-})-},dnl <--- The END
d293 4
a296 4
define({-_show_target-},{-dnl
ifdef({-$1__DEV-},{-disp_dev({-$2-})-})dnl
ifelse({-$3-},{--},
{-_disp_dev_end()-},dnl <--- The END
d299 4
a302 4
define({-disp_dev-},{-dnl
ifdef({-_disp_dev_tab-},,{-define({-_disp_dev_tab-})-})dnl
ifdef({-_disp_dev_len-},,{-dnl
define({-_disp_dev_len-},0)dnl
d304 3
a306 3
define({-_disp_dev_tab-},{-	-})-})dnl
ifelse(eval(len($1)+_disp_dev_len<60),1,
{- $1{--}define({-_disp_dev_len-},eval(1+_disp_dev_len+len($1)))-},{-
d308 1
a308 1
define({-_disp_dev_len-},len($1))-})dnl
d310 1
a310 1
define({-_disp_dev_end-},{-undefine({-_disp_dev_tab-},{-_disp_dev_len-})-})dnl
d329 1
a329 1
define({-ifstep-},{-ifdef({-step_$1-},{- -}step_$1{--})-})dnl
d332 1
a332 1
define({-target-},{-twrget({-$1-},{-$2-},{-$2-},shift(shift($@@)))-})dnl
d334 1
a334 1
dnl twrget(target,devname,prefix,str1,str2,str3)
d337 1
a337 1
define({-twrget-},{-dnl
d339 1
a339 1
ifdef({-$1_target-},,{-pushdef({-$1_target-},{-done-})-})dnl
d341 5
a345 5
ifelse({-$4-},,,{-dnl
ifelse({-$4-},{-_done-},,{-dnl
ifelse({-$5-},,,{-dnl
dnl errprint({-recurse: $1,$2,$3,$4,$5,$6,...-})dnl
twrget({-$1-},{-$2-},{-$3-},shift(shift(shift(shift($@@)))))dnl
d348 3
a350 3
ifelse({-$4-},{-_done-},,{-dnl
dnl errprint({-recurse: $1_$2_dev,$3$4,$3$4,_done-})dnl
twrget({-$1_$2_dev-},{-$3$4-},{-$3$4-},{-_done-})dnl
d353 2
a354 2
ifdef({-$1$2target-},,{-dnl
pushdef({-$1_target-},{-$2-})define({-$1$2target-})dnl
d360 2
a361 2
define({-show_target-},{-dnl
ifelse($1_target,{-done-},{-_disp_dev_end()-},
d363 1
a363 1
show_dev($1,-}$1_target{-)dnl
d368 3
a370 3
define({-show_dev-},{-dnl
ifdef({-$2__DEV-},{-dnl
ifelse($1_$2_dev_target,{-done-},,{-dnl
d373 1
a373 1
show_dev({-$1-},{-$2-})-})dnl
@


1.4
log
@sprinklings of 'ifstep()'
'the big disk case' no longer sets vars and calls dodisk, would take more space
to additionally do the 'stepping' argument (see cd\* in generated MAKEDEV)
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.3 2002/01/07 06:25:32 todd Exp $
d77 2
a78 2
dnl example1: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.3 2002/01/07 06:25:32 todd Exp $-})
dnl example2: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.3 2002/01/07 06:25:32 todd Exp $-},etc.MACHINE)
d89 1
a89 1
vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.3 2002/01/07 06:25:32 todd Exp $-})dnl
d292 20
d330 47
@


1.3
log
@DISK_STEPPING is not used, and in any event, is not global to all disks
prepare dodisk* script functions for a 7th argument, what I call disk stepping,
the number to add from rd0a to rd1a minor numbers, defaulted to 16; some archs
*cough*macppc*cough* still have 8 for cdroms and such
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.2 2002/01/07 06:06:40 todd Exp $
d77 2
a78 2
dnl example1: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.2 2002/01/07 06:06:40 todd Exp $-})
dnl example2: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.2 2002/01/07 06:06:40 todd Exp $-},etc.MACHINE)
d89 1
a89 1
vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.2 2002/01/07 06:06:40 todd Exp $-})dnl
d189 4
d251 1
a251 1
{-	$1*) n=$1 b=major_$1_b c=major_$1_c;;
d309 1
a309 1
define({-ifstep-},{-ifdef({-step_$1-},{- -}step_$1)-})dnl
@


1.2
log
@comment tweaking
@
text
@d1 1
a1 1
dnl	$OpenBSD: MAKEDEV.sub,v 1.1 2002/01/04 09:25:35 todd Exp $
d77 2
a78 2
dnl example1: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.1 2002/01/04 09:25:35 todd Exp $-})
dnl example2: vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.1 2002/01/04 09:25:35 todd Exp $-},etc.MACHINE)
d89 1
a89 1
vers(__file__,{-$OpenBSD: MAKEDEV.sub,v 1.1 2002/01/04 09:25:35 todd Exp $-})dnl
d301 5
@


1.1
log
@This is my m4 MAKEDEV generation system.

.mi    -> edit this to add new devices
.sub   -> hardcore m4 here, be careful
*/*.md -> machine dependent information (generally device,block (& char) major)

Thanks for eyes/conversation about this over the years from espie, deraadt,
johns, fgsch, hugh, weingart, mickey, and others ..

SEE ALSO
.     m4(1), MAKEDEV(8)
@
text
@d1 1
a1 1
dnl	$OpenBSD$
d77 2
a78 2
dnl example1: vers(__file__,{-$OpenBSD$-})
dnl example2: vers(__file__,{-$OpenBSD$-},etc.MACHINE)
d89 1
a89 1
vers(__file__,{-$OpenBSD: MAKEDEV.sub,v some version for this file $-})dnl
d185 1
a185 1
dnl _DEV 'ifelse' .. $4 - major_$1_b
d197 1
a197 1
dnl be shown later
d203 2
@

