head	1.30;
access;
symbols
	OPENBSD_6_1:1.30.0.4
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.29.0.2
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.23.0.8
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.4
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.21.0.20
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.16
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.14
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.12
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.10
	OPENBSD_5_0:1.21.0.8
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.6
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.4
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.20.0.4
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.19.0.6
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.4
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.2
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.15.0.2
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.14
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.12
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.10
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.6
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.4
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.30
date	2016.09.11.14.21.17;	author tb;	state Exp;
branches;
next	1.29;
commitid	vQliJ9M8LCn9g8k6;

1.29
date	2016.03.07.13.48.25;	author jmc;	state Exp;
branches;
next	1.28;
commitid	V9r57qdG2mzSCow7;

1.28
date	2016.03.07.12.07.55;	author mestre;	state Exp;
branches;
next	1.27;
commitid	NZhYxChmyb9vOEMM;

1.27
date	2016.01.07.16.00.31;	author tb;	state Exp;
branches;
next	1.26;
commitid	IwzFE3fG5RnKTWNh;

1.26
date	2015.12.31.16.50.29;	author mestre;	state Exp;
branches;
next	1.25;
commitid	jnRgo9DYtb9taiXD;

1.25
date	2015.11.29.15.23.38;	author tb;	state Exp;
branches;
next	1.24;
commitid	ihEIvORWc0RrRk93;

1.24
date	2015.11.20.16.58.37;	author tb;	state Exp;
branches;
next	1.23;
commitid	7bHVYK6B4k5vjzX8;

1.23
date	2014.07.13.14.01.04;	author tedu;	state Exp;
branches;
next	1.22;
commitid	635J7yvaFM3NMwyH;

1.22
date	2014.07.13.13.00.40;	author tedu;	state Exp;
branches;
next	1.21;
commitid	RILS5naX1655SI9i;

1.21
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2009.06.01.13.04.59;	author ray;	state Exp;
branches;
next	1.19;

1.19
date	2007.09.14.14.29.20;	author chl;	state Exp;
branches;
next	1.18;

1.18
date	2007.09.11.15.21.05;	author gilles;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.13.13.41.44;	author sobrado;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.02.14.28.56;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2006.11.02.02.06.05;	author ray;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.27.00.10.14;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.01.02.43.11;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.29.08.52.28;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.06.18.50.36;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.06.21.48.50;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.09.01.00.27.08;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	98.09.21.07.36.06;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.09.02.06.58.10;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	98.06.03.08.11.51;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.06.18.18.32.44;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.12.22.20.00.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.12.19.22.20.52;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.30
log
@Callers of time(3) should #include <time.h>.

ok deraadt
@
text
@/*	$OpenBSD: main.c,v 1.29 2016/03/07 13:48:25 jmc Exp $	*/
/*	$NetBSD: main.c,v 1.4 1995/04/27 21:22:25 mycroft Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ed James.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Copyright (c) 1987 by Ed James, UC Berkeley.  All rights reserved.
 *
 * Copy permission is hereby granted provided that this notice is
 * retained on all partial or complete copies.
 *
 * For more info on this and all of my stuff, mail edjames@@berkeley.edu.
 */

#include <err.h>
#include <signal.h>
#include <stdlib.h>
#include <string.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>

#include "extern.h"
#include "pathnames.h"

int
main(int argc, char *argv[])
{
	int			ch;
	int			f_usage = 0, f_list = 0, f_showscore = 0;
	int			f_printpath = 0;
	const char		*file = NULL;
	char			*seed;
	struct sigaction	sa;
	struct itimerval	itv;

	if (pledge("stdio rpath wpath cpath flock tty", NULL) == -1)
		err(1, "pledge");
	open_score_file();

	start_time = time(0);
	makenoise = 1;
	seed = NULL;

	while ((ch = getopt(argc, argv, "f:g:hlpqr:st")) != -1) {
		switch (ch) {
		case 'f':
		case 'g':
			file = optarg;
			break;
		case 'l':
			f_list = 1;
			break;
		case 'p':
			f_printpath = 1;
			break;
		case 'q':
			makenoise = 0;
			break;
		case 'r':
			seed = optarg;
			break;
		case 's':
		case 't':
			f_showscore = 1;
			break;
		case 'h':
		default:
			f_usage = 1;
			break;
		}
	}
	argc -= optind;
	argv += optind;

	if (argc > 0)
		f_usage = 1;

	if (seed != NULL)
		setseed(seed);

	if (f_usage)
		fprintf(stderr, 
		    "usage: %s [-lpqst] [-f game] [-g game] [-r seed]\n",
		    getprogname());
	if (f_showscore)
		log_score(1);
	if (f_list)
		list_games();
	if (f_printpath) {
		size_t	len;
		char	buf[256];

		strlcpy(buf, _PATH_GAMES, sizeof buf);
		len = strlen(buf);
		if (len != 0 && buf[len - 1] == '/')
			buf[len - 1] = '\0';
		puts(buf);
	}
		
	if (f_usage || f_showscore || f_list || f_printpath)
		return 0;

	if (file == NULL)
		file = default_game();
	else
		file = okay_game(file);

	if (file == NULL || read_file(file) < 0)
		return 1;

	setup_screen(sp);

	addplane();

	signal(SIGINT, quit);
	signal(SIGQUIT, quit);
	signal(SIGTSTP, SIG_IGN);
	signal(SIGSTOP, SIG_IGN);
	signal(SIGHUP, log_score_quit);
	signal(SIGTERM, log_score_quit);

	tcgetattr(fileno(stdin), &tty_start);
	tty_new = tty_start;
	tty_new.c_lflag &= ~(ICANON|ECHO);
	tty_new.c_iflag |= ICRNL;
	tty_new.c_cc[VMIN] = 1;
	tty_new.c_cc[VTIME] = 0;
	tcsetattr(fileno(stdin), TCSADRAIN, &tty_new);

	memset(&sa, 0, sizeof sa);
	sa.sa_handler = update;
	sigemptyset(&sa.sa_mask);
	sigaddset(&sa.sa_mask, SIGALRM);
	sigaddset(&sa.sa_mask, SIGINT);
	sa.sa_flags = 0;
	sigaction(SIGALRM, &sa, (struct sigaction *)0);

	itv.it_value.tv_sec = 0;
	itv.it_value.tv_usec = 1;
	itv.it_interval.tv_sec = sp->update_secs;
	itv.it_interval.tv_usec = 0;
	setitimer(ITIMER_REAL, &itv, NULL);

	for (;;) {
		if (getcommand() != 1)
			planewin();
		else {
			itv.it_value.tv_sec = 0;
			itv.it_value.tv_usec = 0;
			setitimer(ITIMER_REAL, &itv, NULL);

			update(0);

			itv.it_value.tv_sec = sp->update_secs;
			itv.it_value.tv_usec = 0;
			itv.it_interval.tv_sec = sp->update_secs;
			itv.it_interval.tv_usec = 0;
			setitimer(ITIMER_REAL, &itv, NULL);
		}
	}
}

int
read_file(const char *s)
{
	extern FILE	*yyin;
	int		retval;

	file = s;
	yyin = fopen(s, "r");
	if (yyin == NULL) {
		warn("fopen %s", s);
		return (-1);
	}
	retval = yyparse();
	fclose(yyin);

	if (retval != 0)
		return (-1);
	else
		return (0);
}

const char	*
default_game(void)
{
	FILE		*fp;
	static char	file[256];
	char		line[256], games[256];

	strlcpy(games, _PATH_GAMES, sizeof games);
	strlcat(games, GAMES, sizeof games);

	if ((fp = fopen(games, "r")) == NULL) {
		warn("fopen %s", games);
		return (NULL);
	}
	if (fgets(line, sizeof(line), fp) == NULL) {
		warnx("%s: no default game available", games);
		fclose(fp);
		return (NULL);
	}
	fclose(fp);

	line[strcspn(line, "\n")] = '\0';
	if (strlen(line) + strlen(_PATH_GAMES) >= sizeof(file)) {
		warnx("default game name too long");
		return (NULL);
	}
	strlcpy(file, _PATH_GAMES, sizeof file);
	strlcat(file, line, sizeof file);
	return (file);
}

const char	*
okay_game(const char *s)
{
	FILE		*fp;
	static char	file[256];
	const char	*ret = NULL;
	char		line[256], games[256];

	strlcpy(games, _PATH_GAMES, sizeof games);
	strlcat(games, GAMES, sizeof games);

	if ((fp = fopen(games, "r")) == NULL) {
		warn("fopen %s", games);
		return (NULL);
	}
	while (fgets(line, sizeof(line), fp) != NULL) {
		line[strcspn(line, "\n")] = '\0';
		if (strcmp(s, line) == 0) {
			if (strlen(line) + strlen(_PATH_GAMES) >= sizeof(file)) {
				warnx("game name too long");
				return (NULL);
			}
			strlcpy(file, _PATH_GAMES, sizeof file);
			strlcat(file, line, sizeof file);
			ret = file;
			break;
		}
	}
	fclose(fp);
	if (ret == NULL) {
		test_mode = 1;
		ret = s;
		fprintf(stderr, "%s: %s: game not found\n", games, s);
		fprintf(stderr, "Your score will not be logged.\n");
		sleep(2);	/* give the guy time to read it */
	}
	return (ret);
}

int
list_games(void)
{
	FILE		*fp;
	char		line[256], games[256];
	int		num_games = 0;

	strlcpy(games, _PATH_GAMES, sizeof games);
	strlcat(games, GAMES, sizeof games);

	if ((fp = fopen(games, "r")) == NULL) {
		warn("fopen %s", games);
		return (-1);
	}
	puts("available games:");
	while (fgets(line, sizeof(line), fp) != NULL) {
		line[strcspn(line, "\n")] = '\0';
		printf("	%s\n", line);
		num_games++;
	}
	fclose(fp);
	if (num_games == 0) {
		fprintf(stderr, "%s: no games available\n", games);
		return (-1);
	}
	return (0);
}
@


1.29
log
@remove -u? from usage();
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.28 2016/03/07 12:07:55 mestre Exp $	*/
d50 1
@


1.28
log
@- General changes:
- Remove -? from getopt(3) options, but still keep (or add) -h where applicable
- Replace hardcoded program strings by getprogname(3)

- Specific changes:
- atc(6): this used -? and -u for usage(), remove both from game and manpage
- bcd(6): use __progname instead of getprogname(3), no need to include stdlib.h
- hunt(6): replace fputs(3) by fprintf(3)

OK tb@@ after his suggestions
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.27 2016/01/07 16:00:31 tb Exp $	*/
d113 1
a113 1
		    "usage: %s [-lpqstu?] [-f game] [-g game] [-r seed]\n",
@


1.27
log
@Some basic code maintenance in games/

- in main() replace exit with return
- drop some /* NOTREACHED */ lint comments along the way.
- make more use of standard CFLAGS, esp. -Wimplicit-function-declaration
- add and sort some headers when needed
- add straightforward pledges to some programs used at compile time

discussed with and ok mestre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.26 2015/12/31 16:50:29 mestre Exp $	*/
d74 1
a74 1
	while ((ch = getopt(argc, argv, "f:g:lpqr:stu?")) != -1) {
d96 1
a96 2
		case 'u':
		case '?':
@


1.26
log
@Include only needed header files per each source file

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.25 2015/11/29 15:23:38 tb Exp $	*/
d132 1
a132 1
		exit(0);
d140 1
a140 1
		exit(1);
@


1.25
log
@Add pledge support and move score file to $HOME.

For high score entries use the same logic as in snake(6) and tetris(6):
Try LOGNAME then USER then getlogin(2) and fall back to ???.
For variety, atc(6) uses flock(2), so add a "flock" promise to the usual
"stdio rpath rpath cpath tty" for games.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.24 2015/11/20 16:58:37 tb Exp $	*/
d45 8
a52 1
#include "include.h"
@


1.24
log
@Convert hand-rolled option parsing to getopt(3).

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.23 2014/07/13 14:01:04 tedu Exp $	*/
a56 1
	gid_t			gid;
d59 2
a61 4

	/* revoke privs */
	gid = getgid();
	setresgid(gid, gid, gid);
@


1.23
log
@if not seeded explicitly, use arc4random instead. ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.22 2014/07/13 13:00:40 tedu Exp $	*/
d49 1
a49 1
main(int ac, char *av[])
d51 1
d55 1
a55 1
	char			*name, *ptr, *seed;
d70 27
a96 43
	name = *av++;
	while (*av) {
#ifndef SAVEDASH
		if (**av == '-') 
			++*av;
		else
			break;
#endif
		ptr = *av++;
		while (*ptr) {
			switch (*ptr) {
			case '?':
			case 'u':
				f_usage++;
				break;
			case 'l':
				f_list++;
				break;
			case 's':
			case 't':
				f_showscore++;
				break;
			case 'p':
				f_printpath++;
				break;
			case 'q':
				makenoise = 0;
				break;
			case 'r':
				seed = *av;
				av++;
				break;
			case 'f':
			case 'g':
				file = *av;
				av++;
				break;
			default: 
				warnx("unknown option '%c'", *ptr);
				f_usage++;
				break;
			}
			ptr++;
d99 6
d111 1
a111 1
		    name);
@


1.22
log
@long live BSD, SYSV is dead!
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.21 2009/10/27 23:59:23 deraadt Exp $	*/
d115 1
a115 3
		srandom(atol(seed));
	else
		srandomdev();
@


1.21
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.20 2009/06/01 13:04:59 ray Exp $	*/
a56 1
#ifdef BSD
a57 1
#endif
a154 1
#ifdef BSD
a156 1
#endif
a175 1
#ifdef BSD
a180 4
#endif
#ifdef SYSV
	alarm(sp->update_secs);
#endif
a185 1
#ifdef BSD
a188 4
#endif
#ifdef SYSV
			alarm(0);
#endif
a191 1
#ifdef BSD
a196 4
#endif
#ifdef SYSV
			alarm(sp->update_secs);
#endif
@


1.20
log
@Don't assume there will be a newline after calling fgets.

OK millert
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.19 2007/09/14 14:29:20 chl Exp $	*/
a43 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1990, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)main.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: main.c,v 1.19 2007/09/14 14:29:20 chl Exp $";
#endif
#endif /* not lint */
@


1.19
log
@remove some warnings:
unused variable `variable'
`variable' might be used uninitialized in this function

ok gilles@@ ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.18 2007/09/11 15:21:05 gilles Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.18 2007/09/11 15:21:05 gilles Exp $";
d341 2
a342 1
		printf("	%s", line);
@


1.18
log
@use strcspn to properly overwrite '\n' in fgets returned buffer

ok pyr@@, ray@@, millert@@, moritz@@, chl@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.17 2007/04/13 13:41:44 sobrado Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.17 2007/04/13 13:41:44 sobrado Exp $";
d260 1
a260 1
	char		line[256], games[256], *p;
a301 2
		char *p;

@


1.17
log
@when updating atc(6) to split the -f and -g flags in two options
I missed synchronizing the usage() function.

problem noticed by jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.16 2007/04/02 14:28:56 jmc Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.16 2007/04/02 14:28:56 jmc Exp $";
d275 2
a276 2
	if ((p = strchr(line, '\n')) != NULL)
		*p = '\0';
d304 1
a304 2
		if ((p = strchr(line, '\n')) != NULL)
			*p = '\0';
@


1.16
log
@tidy up synopsis and usage(); from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.15 2006/11/02 02:06:05 ray Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.15 2006/11/02 02:06:05 ray Exp $";
d137 2
a138 2
		    "usage: %s [-lpqstu?] [-fg game] [-r seed]\n",
			name);
@


1.15
log
@Check for valid character before truncating string.

Initial patch from Charles Longeau <chl at tuxfamily dot org>.

OK moritz@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.14 2006/03/27 00:10:14 tedu Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.14 2006/03/27 00:10:14 tedu Exp $";
d137 1
a137 1
		    "Usage: %s -[u?lstpq] [-[gf] game_name] [-r random seed]\n",
@


1.14
log
@assorted fixes mostly from coverity via netbsd via jasper adriaanse via tech
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.13 2005/05/01 02:43:11 djm Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.13 2005/05/01 02:43:11 djm Exp $";
d144 1
d148 3
a150 1
		buf[strlen(buf) - 1] = '\0';
d260 1
a260 1
	char		line[256], games[256];
d275 2
a276 1
	line[strlen(line) - 1] = '\0';
d302 4
a305 1
		line[strlen(line) - 1] = '\0';
@


1.13
log
@use setresgid() to drop privs, it is simply a better and less ambiguous API;
ok deraadt@@ and millert@@ a while ago, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.12 2004/11/29 08:52:28 jsg Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.12 2004/11/29 08:52:28 jsg Exp $";
d268 1
@


1.12
log
@ansi. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.11 2003/06/03 03:01:38 millert Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.11 2003/06/03 03:01:38 millert Exp $";
d70 1
d78 2
a79 2
	setegid(getgid());
	setgid(getgid());
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.10 2003/04/06 18:50:36 deraadt Exp $	*/
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.10 2003/04/06 18:50:36 deraadt Exp $";
d63 1
a63 3
main(ac, av)
	int	ac;
	char	*av[];
d231 1
a231 2
read_file(s)
	const char	*s;
d252 1
a252 1
default_game()
d281 1
a281 2
okay_game(s)
	const char	*s;
d320 1
a320 1
list_games()
@


1.10
log
@2451 lines of strdup/sprintf/strcpy whacking.  mostly ok'd by pjanzen
already, but he may have later changes to make still.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.9 2002/12/06 21:48:50 millert Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d55 1
a55 1
static char rcsid[] = "$OpenBSD: main.c,v 1.9 2002/12/06 21:48:50 millert Exp $";
@


1.9
log
@Replace things like srandom(time(NULL)) with srandomdev(3).  random(3)
good enough for games but we should at least use a decent seed.
pjanzen@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.8 1999/09/01 00:27:08 pjanzen Exp $	*/
d59 1
a59 1
static char rcsid[] = "$OpenBSD: main.c,v 1.8 1999/09/01 00:27:08 pjanzen Exp $";
d151 1
a151 1
		strcpy(buf, _PATH_GAMES);
d265 2
a266 2
	strcpy(games, _PATH_GAMES);
	strcat(games, GAMES);
d282 2
a283 2
	strcpy(file, _PATH_GAMES);
	strcat(file, line);
d296 2
a297 2
	strcpy(games, _PATH_GAMES);
	strcat(games, GAMES);
d310 2
a311 2
			strcpy(file, _PATH_GAMES);
			strcat(file, line);
d334 2
a335 2
	strcpy(games, _PATH_GAMES);
	strcat(games, GAMES);
@


1.8
log
@Make sure screen is big enough for the selected game; also a little tidying
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.7 1998/09/21 07:36:06 pjanzen Exp $	*/
d59 1
a59 1
static char rcsid[] = "$OpenBSD: main.c,v 1.7 1998/09/21 07:36:06 pjanzen Exp $";
a70 1
	int			seed;
d74 1
a74 1
	char			*name, *ptr;
d86 1
a86 1
	start_time = seed = time(0);
d88 1
d119 1
a119 1
				seed = atoi(*av);
d135 4
a138 1
	srandom(seed);
@


1.7
log
@Cleanup, partially from NetBSD and jsm28@@cam.ac.uk.  No longer segfaults if
scorefile can't be opened.  New -q quiet option.  Partial man page reformat.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d59 1
a59 1
static char rcsid[] = "$OpenBSD$";
a163 1
	init_gr();
@


1.6
log
@use ICRNL; jsm28@@cam.ac.uk
@
text
@d1 1
d59 1
a59 1
static char rcsid[] = "$NetBSD: main.c,v 1.4 1995/04/27 21:22:25 mycroft Exp $";
d66 1
d68 1
d74 1
a74 1
	char			*file = NULL;
a79 2
	extern char		*default_game(), *okay_game();
	extern void		log_score(), quit(), update();
d88 1
d94 1
a94 1
			*++*av;
d115 3
d128 1
a128 2
				fprintf(stderr, "Unknown option '%c'\n", *ptr,
					name);
d139 1
a139 1
		    "Usage: %s -[u?lstp] [-[gf] game_name] [-r random seed]\n",
d146 1
a146 1
		char	buf[100];
d175 2
a176 2
	signal(SIGHUP, log_score);
	signal(SIGTERM, log_score);
d218 1
a218 1
			update();
d234 1
d236 1
a236 1
	char	*s;
d244 1
a244 1
		perror(s);
d256 1
a256 1
char	*
d267 1
a267 1
		perror(games);
d271 1
a271 1
		fprintf(stderr, "%s: no default game available\n", games);
d276 4
d285 1
a285 1
char	*
d287 1
a287 1
	char	*s;
d291 2
a292 1
	char		*ret = NULL, line[256], games[256];
d298 1
a298 1
		perror(games);
d304 4
d325 1
d336 1
a336 1
		perror(games);
@


1.5
log
@zero struct sigaction before use
@
text
@d177 1
@


1.4
log
@fix highscore file
@
text
@d181 1
@


1.3
log
@proper gid revoke
@
text
@d80 2
@


1.2
log
@setgid games, not setuid games. closes a neat set of holes
@
text
@d80 2
@


1.1
log
@Initial revision
@
text
@d80 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
