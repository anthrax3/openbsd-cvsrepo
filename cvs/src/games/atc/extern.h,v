head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2015.12.31.16.50.29;	author mestre;	state Exp;
branches;
next	1.10;
commitid	jnRgo9DYtb9taiXD;

1.10
date	2015.12.26.00.26.39;	author mestre;	state Exp;
branches;
next	1.9;
commitid	NcBz9zfScw6TwPoT;

1.9
date	2014.12.09.05.01.14;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	ca1sANg0WMJouDvh;

1.8
date	2014.07.13.14.01.04;	author tedu;	state Exp;
branches;
next	1.7;
commitid	635J7yvaFM3NMwyH;

1.7
date	2013.10.25.21.57.10;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.08;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.04.02.15.28;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	99.09.01.00.27.07;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.09.21.07.36.05;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Include only needed header files per each source file

OK tb@@
@
text
@/*	$OpenBSD: extern.h,v 1.10 2015/12/26 00:26:39 mestre Exp $	*/
/*	$NetBSD: extern.h,v 1.4 1995/04/27 21:22:22 mycroft Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ed James.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)extern.h	8.1 (Berkeley) 5/31/93
 */

/*
 * Copyright (c) 1987 by Ed James, UC Berkeley.  All rights reserved.
 *
 * Copy permission is hereby granted provided that this notice is
 * retained on all partial or complete copies.
 *
 * For more info on this and all of my stuff, mail edjames@@berkeley.edu.
 */

#include <curses.h>

#include "def.h"
#include "struct.h"

extern char		GAMES[];
extern const char	*file;

extern int		clck, safe_planes, seeded, test_mode, makenoise;

extern time_t		start_time;

extern FILE		*filein, *fileout;

extern C_SCREEN		screen, *sp;

extern LIST		air, ground;

extern struct termios	tty_start, tty_new;

extern DISPLACEMENT	displacement[MAXDIR];

int		addplane(void);
void		append(LIST *, PLANE *);
void		check_adir(int, int, int);
void		check_edge(int, int);
void		check_edir(int, int, int);
void		check_line(int, int, int, int);
void		check_linepoint(int, int);
void		check_point(int, int);
int		checkdefs(void);
int		compar(const void *, const void *);
void		delete(LIST *, PLANE *);
int		dir_deg(int);
int		dir_no(char);
void		done_screen(void);
void		draw_all(void);
void		draw_line(WINDOW *, int, int, int, int, const char *);
void		erase_all(void);
int		getAChar(void);
int		getcommand(void);
int		gettoken(void);
void		ioaddstr(int, const char *);
void		ioclrtobot(void);
void		ioclrtoeol(int);
void		ioerror(int, int, const char *);
void		iomove(int);
int		list_games(void);
int		log_score(int);
__dead void		log_score_quit(int);
__dead void		loser(const PLANE *, const char *);
char		name(const PLANE *);
int		next_plane(void);
void		noise(void);
int		number(char);
int		open_score_file(void);
void		planewin(void);
int		pop(void);
void		push(int, int);
void		quit(int);
int		read_file(const char *);
void		redraw(void);
void		rezero(void);
void		setseed(const char *);
void		setup_screen(const C_SCREEN *);
int		too_close(const PLANE *p1, const PLANE *p2, int);
void		update(int);
int		yyerror(const char *);
int		yylex(void);
int		yyparse(void);
const char      *Left(char);
const char	*Right(char);
const char	*airport(char);
const char	*beacon(char);
const char	*benum(char);
const char	*circle(char);
const char	*climb(char);
const char	*command(PLANE *);
const char	*default_game(void);
const char	*delayb(char);
const char	*descend(char);
const char	*ex_it(char);
PLANE		*findplane(int);
const char	*ignore(char);
const char	*left(char);
const char	*mark(char);
PLANE		*newplane(void);
const char	*okay_game(const char *);
const char	*rel_dir(char);
const char	*right(char);
const char	*setalt(char);
const char	*setplane(char);
const char	*setrelalt(char);
const char	*timestr(int);
const char	*to_dir(char);
const char	*turn(char);
const char	*unmark(char);
@


1.10
log
@Set as __dead a few more functions, that don't return, on games/

With precious tip, help and also OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.9 2014/12/09 05:01:14 deraadt Exp $	*/
d46 5
@


1.9
log
@Do not memorialize cheaters in the high score file.
from pjanzen
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.8 2014/07/13 14:01:04 tedu Exp $	*/
d91 2
a92 2
void		log_score_quit(int);
void		loser(const PLANE *, const char *);
@


1.8
log
@if not seeded explicitly, use arc4random instead. ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.7 2013/10/25 21:57:10 millert Exp $	*/
d50 1
a50 1
extern int		clck, safe_planes, test_mode, makenoise;
@


1.7
log
@start_time should be time_t, not int since it holds the reasult of
time(0).  OK guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.6 2003/06/03 03:01:38 millert Exp $	*/
d105 1
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.5 2002/02/16 21:27:08 millert Exp $	*/
d50 3
a52 1
extern int		clck, safe_planes, start_time, test_mode, makenoise;
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.4 2001/02/04 02:15:28 pjanzen Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Tidying:  change a constant to a #define, stop logging hostnames with the
score, use strlcpy(), and make it work with long usernames.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.3 1999/09/01 00:27:07 pjanzen Exp $	*/
d66 74
a139 74
int		addplane __P((void));
void		append __P((LIST *, PLANE *));
void		check_adir __P((int, int, int));
void		check_edge __P((int, int));
void		check_edir __P((int, int, int));
void		check_line __P((int, int, int, int));
void		check_linepoint __P((int, int));
void		check_point __P((int, int));
int		checkdefs __P((void));
int		compar __P((const void *, const void *));
void		delete __P((LIST *, PLANE *));
int		dir_deg __P((int));
int		dir_no __P((char));
void		done_screen __P((void));
void		draw_all __P((void));
void		draw_line __P((WINDOW *, int, int, int, int, const char *));
void		erase_all __P((void));
int		getAChar __P((void));
int		getcommand __P((void));
int		gettoken __P((void));
void		ioaddstr __P((int, const char *));
void		ioclrtobot __P((void));
void		ioclrtoeol __P((int));
void		ioerror __P((int, int, const char *));
void		iomove __P((int));
int		list_games __P((void));
int		log_score __P((int));
void		log_score_quit __P((int));
void		loser __P((const PLANE *, const char *));
char		name __P((const PLANE *));
int		next_plane __P((void));
void		noise __P((void));
int		number __P((char));
int		open_score_file __P((void));
void		planewin __P((void));
int		pop __P((void));
void		push __P((int, int));
void		quit __P((int));
int		read_file __P((const char *));
void		redraw __P((void));
void		rezero __P((void));
void		setup_screen __P((const C_SCREEN *));
int		too_close __P((const PLANE *p1, const PLANE *p2, int));
void		update __P((int));
int		yyerror __P((const char *));
int		yylex __P((void));
int		yyparse __P((void));
const char      *Left __P((char));
const char	*Right __P((char));
const char	*airport __P((char));
const char	*beacon __P((char));
const char	*benum __P((char));
const char	*circle __P((char));
const char	*climb __P((char));
const char	*command __P((PLANE *));
const char	*default_game __P((void));
const char	*delayb __P((char));
const char	*descend __P((char));
const char	*ex_it __P((char));
PLANE		*findplane __P((int));
const char	*ignore __P((char));
const char	*left __P((char));
const char	*mark __P((char));
PLANE		*newplane __P((void));
const char	*okay_game __P((const char *));
const char	*rel_dir __P((char));
const char	*right __P((char));
const char	*setalt __P((char));
const char	*setplane __P((char));
const char	*setrelalt __P((char));
const char	*timestr __P((int));
const char	*to_dir __P((char));
const char	*turn __P((char));
const char	*unmark __P((char));
@


1.3
log
@Make sure screen is big enough for the selected game; also a little tidying
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.2 1998/09/21 07:36:05 pjanzen Exp $	*/
a64 2

extern int		NUM_SCORES;
@


1.2
log
@Cleanup, partially from NetBSD and jsm28@@cam.ac.uk.  No longer segfaults if
scorefile can't be opened.  New -q quiet option.  Partial man page reformat.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a87 1
void		init_gr __P((void));
@


1.1
log
@Initial revision
@
text
@d1 1
d51 2
a52 1
extern char		GAMES[], *file;
d54 1
a54 1
extern int		clck, safe_planes, start_time, test_mode;
d66 77
a142 1
extern PLANE		*findplane(), *newplane();
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
