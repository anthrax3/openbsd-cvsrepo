head	1.25;
access;
symbols
	OPENBSD_6_0:1.22.0.2
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.14.0.18
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.22
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.20
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.12.0.18
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.14
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.12
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.10
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.8
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.14
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.12
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.25
date	2016.12.01.20.08.59;	author fcambus;	state Exp;
branches;
next	1.24;
commitid	5EFt3deGQTgUdbsP;

1.24
date	2016.09.11.14.21.18;	author tb;	state Exp;
branches;
next	1.23;
commitid	vQliJ9M8LCn9g8k6;

1.23
date	2016.08.27.02.02.44;	author guenther;	state Exp;
branches;
next	1.22;
commitid	gupFWcYhnkwQ5f1q;

1.22
date	2016.03.07.12.07.56;	author mestre;	state Exp;
branches;
next	1.21;
commitid	NZhYxChmyb9vOEMM;

1.21
date	2016.01.07.16.00.33;	author tb;	state Exp;
branches;
next	1.20;
commitid	IwzFE3fG5RnKTWNh;

1.20
date	2016.01.04.17.33.24;	author mestre;	state Exp;
branches;
next	1.19;
commitid	b21xvsfCGMtCOVrz;

1.19
date	2015.12.26.00.26.39;	author mestre;	state Exp;
branches;
next	1.18;
commitid	NcBz9zfScw6TwPoT;

1.18
date	2015.10.24.17.33.05;	author mmcc;	state Exp;
branches;
next	1.17;
commitid	7jqye15KibH9RW9a;

1.17
date	2015.10.14.08.12.12;	author doug;	state Exp;
branches;
next	1.16;
commitid	l6H409xsPGcs6ezU;

1.16
date	2015.03.17.19.31.30;	author millert;	state Exp;
branches;
next	1.15;
commitid	0y5bUkEOUrNvvJEO;

1.15
date	2015.03.15.00.41.27;	author millert;	state Exp;
branches;
next	1.14;
commitid	IbVxlqGw2UipKdDr;

1.14
date	2009.12.31.13.02.08;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.27.23.59.26;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.05.21.25.00;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.10.07.26.23;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.10.00.03.01;	author david;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.31.03.40.01;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.11;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.09.06.12.29.25;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	98.07.26.06.27.39;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	96.12.22.20.01.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.12.19.22.21.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.02.17.23.54.46;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.12;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Remove useless #ifndef in atc(6) and pom(6).

M_PI is always defined, so we can drop those directives.

OK deraadt@@, millert@@
@
text
@/*	$OpenBSD: pom.c,v 1.24 2016/09/11 14:21:18 tb Exp $	*/
/*    $NetBSD: pom.c,v 1.6 1996/02/06 22:47:29 jtc Exp $      */

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software posted to USENET.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Phase of the Moon.  Calculates the current phase of the moon.
 * Based on routines from `Practical Astronomy with Your Calculator',
 * by Duffett-Smith.  Comments give the section from the book that
 * particular piece of code was adapted from.
 *
 * -- Keith E. Brandt  VIII 1984
 *
 * Updated to the Third Edition of Duffett-Smith's book, IX 1998
 *
 */

#include <sys/time.h>
#include <ctype.h>
#include <err.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>

#define	EPOCH	  90
#define	EPSILONg  279.403303	/* solar ecliptic long at EPOCH */
#define	RHOg	  282.768422	/* solar ecliptic long of perigee at EPOCH */
#define	ECCEN	  0.016713	/* solar orbit eccentricity */
#define	lzero	  318.351648	/* lunar mean long at EPOCH */
#define	Pzero	  36.340410	/* lunar mean long of perigee at EPOCH */
#define	Nzero	  318.510107	/* lunar mean long of node at EPOCH */

#define	isleap(y) (((y) % 4) == 0 && (((y) % 100) != 0 || ((y) % 400) == 0))

void	adj360(double *);
double	dtor(double);
double	potm(double);
time_t	parsetime(char *);
__dead void	badformat(void);

int
main(int argc, char *argv[])
{
	struct timeval tp;
	struct timezone tzp;
	struct tm *GMT;
	time_t tmpt;
	double days, today, tomorrow;
	int cnt;
	char buf[1024];

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	if (argc > 1) {
		tmpt = parsetime(argv[1]);
		strftime(buf, sizeof(buf), "%a %Y %b %e %H:%M:%S (%Z)",
			localtime(&tmpt));
		printf("%s:  ", buf);
	} else {
		if (gettimeofday(&tp,&tzp))
			err(1, "gettimeofday");
		tmpt = tp.tv_sec;
	}
	GMT = gmtime(&tmpt);
	days = (GMT->tm_yday + 1) + ((GMT->tm_hour +
	    (GMT->tm_min / 60.0) + (GMT->tm_sec / 3600.0)) / 24.0);
	for (cnt = EPOCH; cnt < GMT->tm_year; ++cnt)
		days += isleap(cnt + 1900) ? 366 : 365;
	/* Selected time could be before EPOCH */
	for (cnt = GMT->tm_year; cnt < EPOCH; ++cnt)
		days -= isleap(cnt + 1900) ? 366 : 365;
	today = potm(days) + 0.5;
	(void)printf("The Moon is ");
	if ((int)today == 100)
		(void)printf("Full\n");
	else if (!(int)today)
		(void)printf("New\n");
	else {
		tomorrow = potm(days + 1);
		if ((int)today == 50)
			(void)printf("%s\n", tomorrow > today ?
			    "at the First Quarter" : "at the Last Quarter");
			/* today is 0.5 too big, but it doesn't matter here
			 * since the phase is changing fast enough
			 */
		else {
			today -= 0.5;		/* Now it might matter */
			(void)printf("%s ", tomorrow > today ?
			    "Waxing" : "Waning");
			if (today > 50)
				(void)printf("Gibbous (%1.0f%% of Full)\n",
				    today);
			else if (today < 50)
				(void)printf("Crescent (%1.0f%% of Full)\n",
				    today);
		}
	}
	return 0;
}

/*
 * potm --
 *	return phase of the moon
 */
double
potm(double days)
{
	double N, Msol, Ec, LambdaSol, l, Mm, Ev, Ac, A3, Mmprime;
	double A4, lprime, V, ldprime, D, Nm;

	N = 360.0 * days / 365.242191;				/* sec 46 #3 */
	adj360(&N);
	Msol = N + EPSILONg - RHOg;				/* sec 46 #4 */
	adj360(&Msol);
	Ec = 360 / M_PI * ECCEN * sin(dtor(Msol));		/* sec 46 #5 */
	LambdaSol = N + Ec + EPSILONg;				/* sec 46 #6 */
	adj360(&LambdaSol);
	l = 13.1763966 * days + lzero;				/* sec 65 #4 */
	adj360(&l);
	Mm = l - (0.1114041 * days) - Pzero;			/* sec 65 #5 */
	adj360(&Mm);
	Nm = Nzero - (0.0529539 * days);			/* sec 65 #6 */
	adj360(&Nm);
	Ev = 1.2739 * sin(dtor(2*(l - LambdaSol) - Mm));	/* sec 65 #7 */
	Ac = 0.1858 * sin(dtor(Msol));				/* sec 65 #8 */
	A3 = 0.37 * sin(dtor(Msol));
	Mmprime = Mm + Ev - Ac - A3;				/* sec 65 #9 */
	Ec = 6.2886 * sin(dtor(Mmprime));			/* sec 65 #10 */
	A4 = 0.214 * sin(dtor(2 * Mmprime));			/* sec 65 #11 */
	lprime = l + Ev + Ec - Ac + A4;				/* sec 65 #12 */
	V = 0.6583 * sin(dtor(2 * (lprime - LambdaSol)));	/* sec 65 #13 */
	ldprime = lprime + V;					/* sec 65 #14 */
	D = ldprime - LambdaSol;				/* sec 67 #2 */
	return(50.0 * (1 - cos(dtor(D))));			/* sec 67 #3 */
}

/*
 * dtor --
 *	convert degrees to radians
 */
double
dtor(double deg)
{
	return(deg * M_PI / 180);
}

/*
 * adj360 --
 *	adjust value so 0 <= deg <= 360
 */
void
adj360(double *deg)
{
	for (;;)
		if (*deg < 0.0)
			*deg += 360.0;
		else if (*deg > 360.0)
			*deg -= 360.0;
		else
			break;
}

#define	ATOI2(ar)	((ar)[0] - '0') * 10 + ((ar)[1] - '0'); (ar) += 2;
time_t
parsetime(char *p)
{
	struct tm *lt;
	int bigyear;
	int yearset = 0;
	time_t tval;
	char *t;
	
	for (t = p; *t; ++t) {
		if (isdigit((unsigned char)*t))
			continue;
		badformat();
	}

	tval = time(NULL);
	lt = localtime(&tval);
	lt->tm_sec = 0;
	lt->tm_min = 0;

	switch (strlen(p)) {
	case 10:				/* yyyy */
		bigyear = ATOI2(p);
		lt->tm_year = (bigyear * 100) - 1900;
		yearset = 1;
		/* FALLTHROUGH */
	case 8:					/* yy */
		if (yearset) {
			lt->tm_year += ATOI2(p);
		} else {
			lt->tm_year = ATOI2(p);
			if (lt->tm_year < 69)		/* hack for 2000 */
				lt->tm_year += 100;
		}
		/* FALLTHROUGH */
	case 6:					/* mm */
		lt->tm_mon = ATOI2(p);
		if ((lt->tm_mon > 12) || !lt->tm_mon)
			badformat();
		--lt->tm_mon;			/* time struct is 0 - 11 */
		/* FALLTHROUGH */
	case 4:					/* dd */
		lt->tm_mday = ATOI2(p);
		if ((lt->tm_mday > 31) || !lt->tm_mday)
			badformat();
		/* FALLTHROUGH */
	case 2:					/* HH */
		lt->tm_hour = ATOI2(p);
		if (lt->tm_hour > 23)
			badformat();
		break;
	default:
		badformat();
	}
	/* The calling code needs a valid tm_ydays and this is the easiest
	 * way to get one */
	if ((tval = mktime(lt)) == -1)
		errx(1, "specified date is outside allowed range");
	return (tval);
}

void
badformat(void)
{
	warnx("illegal time format");
	(void)fprintf(stderr, "usage: %s [[[[[cc]yy]mm]dd]HH]\n",
	    getprogname());
	exit(1);
}
@


1.24
log
@Callers of time(3) should #include <time.h>.

ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.23 2016/08/27 02:02:44 guenther Exp $	*/
a55 4

#ifndef M_PI
#define	M_PI	  3.14159265358979323846
#endif
@


1.23
log
@Pull in <sys/time.h> for struct timespec, gettimeofday(), clock_gettime(),
and setitimer()

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.22 2016/03/07 12:07:56 mestre Exp $	*/
d54 1
@


1.22
log
@- General changes:
- Remove -? from getopt(3) options, but still keep (or add) -h where applicable
- Replace hardcoded program strings by getprogname(3)

- Specific changes:
- atc(6): this used -? and -u for usage(), remove both from game and manpage
- bcd(6): use __progname instead of getprogname(3), no need to include stdlib.h
- hunt(6): replace fputs(3) by fprintf(3)

OK tb@@ after his suggestions
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.21 2016/01/07 16:00:33 tb Exp $	*/
d47 1
@


1.21
log
@Some basic code maintenance in games/

- in main() replace exit with return
- drop some /* NOTREACHED */ lint comments along the way.
- make more use of standard CFLAGS, esp. -Wimplicit-function-declaration
- add and sort some headers when needed
- add straightforward pledges to some programs used at compile time

discussed with and ok mestre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.20 2016/01/04 17:33:24 mestre Exp $	*/
d264 2
a265 1
	(void)fprintf(stderr, "usage: pom [[[[[cc]yy]mm]dd]HH]\n");
@


1.20
log
@More cleanup and sorting on header section

OK tb@@ and he also pointed out that for consistency with rest of the tree we
should include termios.h instead of sys/ttydefaults.h, where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.19 2015/12/26 00:26:39 mestre Exp $	*/
d133 1
a133 1
	exit(0);
@


1.19
log
@Set as __dead a few more functions, that don't return, on games/

With precious tip, help and also OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.18 2015/10/24 17:33:05 mmcc Exp $	*/
a46 2
#include <sys/time.h>
#include <sys/types.h>
d48 2
a52 2
#include <math.h>
#include <err.h>
@


1.18
log
@Cast isdigit()'s argument to unsigned char.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.17 2015/10/14 08:12:12 doug Exp $	*/
d75 1
a75 1
void	badformat(void);
@


1.17
log
@Pledge "stdio" for simple games.

ok semarie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.16 2015/03/17 19:31:30 millert Exp $	*/
d211 1
a211 1
		if (isdigit(*t))
@


1.16
log
@Eliminate use of TM_YEAR_BASE.  OK guenther@@ deraadt@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.15 2015/03/15 00:41:27 millert Exp $	*/
d87 3
@


1.15
log
@tzfile.h is an internal header that should never have been installed.
What's worse, the tzfile.h that gets installed is over 20 years old
and doesn't match the real tzfile.h in libc/time.  This makes the
tree safe for /usr/include/tzfile.h removal.  The TM_YEAR_BASE
define has been moved to time.h temporarily until its usage is
replaced by 1900 in the tree.  Actual removal of tzfile.h is pending
a ports build.  Based on a diff from deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.14 2009/12/31 13:02:08 sobrado Exp $	*/
d102 1
a102 1
		days += isleap(cnt + TM_YEAR_BASE) ? 366 : 365;
d105 1
a105 1
		days -= isleap(cnt + TM_YEAR_BASE) ? 366 : 365;
d221 1
a221 1
		lt->tm_year = bigyear * 100 - TM_YEAR_BASE;
d228 1
a228 1
			lt->tm_year = ATOI2(p) + 1900 - TM_YEAR_BASE;
@


1.14
log
@remove superfluous bracket level from time representation.

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.13 2009/10/27 23:59:26 deraadt Exp $	*/
a54 1
#include <tzfile.h>
d68 2
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.12 2005/11/05 21:25:00 jmc Exp $	*/
d262 1
a262 1
	(void)fprintf(stderr, "usage: pom [[[[[[cc]yy]mm]dd]HH]]\n");
@


1.12
log
@- use macros for args
- better list -width
- epoch -> Epoch
- missing set of `[]' in usage()
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.11 2004/07/10 07:26:23 deraadt Exp $	*/
a33 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1989, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)pom.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: pom.c,v 1.11 2004/07/10 07:26:23 deraadt Exp $";
#endif
#endif /* not lint */
@


1.11
log
@more ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.10 2003/07/10 00:03:01 david Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: pom.c,v 1.10 2003/07/10 00:03:01 david Exp $";
d276 1
a276 1
	(void)fprintf(stderr, "usage: pom [[[[[cc]yy]mm]dd]HH]\n");
@


1.10
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.9 2003/06/03 03:01:40 millert Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: pom.c,v 1.9 2003/06/03 03:01:40 millert Exp $";
d91 1
a91 3
main(argc, argv)
	int argc;
	char *argv[];
d153 1
a153 2
potm(days)
	double days;
d189 1
a189 2
dtor(deg)
	double deg;
d199 1
a199 2
adj360(deg)
	double *deg;
d212 1
a212 2
parsetime(p)
	char *p;
d273 1
a273 1
badformat()
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.8 2002/05/31 03:40:01 pjanzen Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: pom.c,v 1.8 2002/05/31 03:40:01 pjanzen Exp $";
d65 1
@


1.8
log
@No dm -> no need to revoke setegid.
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.7 2002/02/16 21:27:11 millert Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d45 1
a45 1
static char rcsid[] = "$OpenBSD: pom.c,v 1.7 2002/02/16 21:27:11 millert Exp $";
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.6 1998/09/06 12:29:25 pjanzen Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: pom.c,v 1.6 1998/09/06 12:29:25 pjanzen Exp $";
a104 4

	/* revoke */
	setegid(getgid());
	setgid(getgid());
@


1.6
log
@Use formulae from newer edition of Duffett-Smith's book (and acknowledge in
	man page)
Allow command-line selection of dates other than now
Use M_PI
Fix bug occurring just before a new or full moon.
@
text
@d1 1
a1 1
/*	$OpenBSD: pom.c,v 1.5 1998/07/26 06:27:39 pjanzen Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD$";
d87 5
a91 5
void	adj360 __P((double *));
double	dtor __P((double));
double	potm __P((double));
time_t	parsetime __P((char *));
void	badformat __P((void));
@


1.5
log
@Y2K fix; jsm28@@cam.ac.uk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
static char rcsid[] = "$NetBSD: pom.c,v 1.6 1996/02/06 22:47:29 jtc Exp $";
d61 2
d66 2
d70 2
d73 1
a73 2
#include <math.h>
#include <errno.h>
d75 3
a77 8
#define	PI	  3.141592654
#define	EPOCH	  85
#define	EPSILONg  279.611371	/* solar ecliptic long at EPOCH */
#define	RHOg	  282.680403	/* solar ecliptic long of perigee at EPOCH */
#define	ECCEN	  0.01671542	/* solar orbit eccentricity */
#define	lzero	  18.251907	/* lunar mean long at EPOCH */
#define	Pzero	  192.917585	/* lunar mean long of perigee at EPOCH */
#define	Nzero	  55.204723	/* lunar mean long of node at EPOCH */
d79 18
a96 3
double dtor(), potm(), adj360();

main()
d100 1
a100 1
	struct tm *GMT, *gmtime();
d104 1
d110 9
a118 3
	if (gettimeofday(&tp,&tzp)) {
		(void)fprintf(stderr, "pom: %s\n", strerror(errno));
		exit(1);
a119 1
	tmpt = tp.tv_sec;
d124 5
a128 2
		days += isleap(cnt + 1900) ? 366 : 365;
	today = potm(days) + .5;
d139 3
d143 1
d168 1
a168 1
	N = 360 * days / 365.2422;				/* sec 42 #3 */
d170 1
a170 1
	Msol = N + EPSILONg - RHOg;				/* sec 42 #4 */
d172 2
a173 2
	Ec = 360 / PI * ECCEN * sin(dtor(Msol));		/* sec 42 #5 */
	LambdaSol = N + Ec + EPSILONg;				/* sec 42 #6 */
d175 1
a175 1
	l = 13.1763966 * days + lzero;				/* sec 61 #4 */
d177 1
a177 1
	Mm = l - (0.1114041 * days) - Pzero;			/* sec 61 #5 */
d179 1
a179 1
	Nm = Nzero - (0.0529539 * days);			/* sec 61 #6 */
d181 2
a182 2
	Ev = 1.2739 * sin(dtor(2*(l - LambdaSol) - Mm));	/* sec 61 #7 */
	Ac = 0.1858 * sin(dtor(Msol));				/* sec 61 #8 */
d184 8
a191 8
	Mmprime = Mm + Ev - Ac - A3;				/* sec 61 #9 */
	Ec = 6.2886 * sin(dtor(Mmprime));			/* sec 61 #10 */
	A4 = 0.214 * sin(dtor(2 * Mmprime));			/* sec 61 #11 */
	lprime = l + Ev + Ec - Ac + A4;				/* sec 61 #12 */
	V = 0.6583 * sin(dtor(2 * (lprime - LambdaSol)));	/* sec 61 #13 */
	ldprime = lprime + V;					/* sec 61 #14 */
	D = ldprime - LambdaSol;				/* sec 63 #2 */
	return(50 * (1 - cos(dtor(D))));			/* sec 63 #3 */
d202 1
a202 1
	return(deg * PI / 180);
d209 1
a209 1
double
d214 4
a217 4
		if (*deg < 0)
			*deg += 360;
		else if (*deg > 360)
			*deg -= 360;
d220 71
@


1.4
log
@proper gid revoke
@
text
@d1 1
d103 1
a103 1
		days += isleap(cnt) ? 366 : 365;
@


1.3
log
@setgid games, not setuid games. closes a neat set of holes
@
text
@d89 2
@


1.2
log
@From netbsd:
Removed "extern int errno"; Added #include <errno.h> if not already present.
@
text
@d89 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: pom.c,v 1.5 1995/06/07 16:30:46 cgd Exp $	*/
d48 1
a48 1
static char rcsid[] = "$NetBSD: pom.c,v 1.5 1995/06/07 16:30:46 cgd Exp $";
d67 1
a81 1
	extern int errno;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
