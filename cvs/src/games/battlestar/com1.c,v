head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.26
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.18
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.22
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.20
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.24
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.20
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.18
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.16
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.14
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.11.0.12
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.10
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.8
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.12.31.17.51.19;	author mestre;	state Exp;
branches;
next	1.14;
commitid	GSzV0GYeNlCgMbj0;

1.14
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.10.07.26.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.26.04.42.55;	author pjanzen;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.24.21.55.22;	author pjanzen;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.24.01.02.43;	author pjanzen;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.03.05.23.44;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	99.09.25.20.30.45;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.09.13.01.30.30;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	97.12.16.07.54.21;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	97.09.01.18.13.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.08.24.21.55.01;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.06.30.19.56.29;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Include only needed header files per each source file

OK tb@@
@
text
@/*	$OpenBSD: com1.c,v 1.14 2009/10/27 23:59:23 deraadt Exp $	*/
/*	$NetBSD: com1.c,v 1.3 1995/03/21 15:06:51 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "extern.h"

int
moveplayer(int thataway, int token)
{
	wordnumber++;
	if ((!notes[CANTMOVE] && !notes[LAUNCHED]) ||
	    TestBit(location[position].objects, LAND) ||
	    (fuel > 0 && notes[LAUNCHED])) {
		if (thataway) {
			position = thataway;
			newway(token);
			ourtime++;
		} else {
			puts("You can't go this way.");
			newway(token);
			whichway(location[position]);
			return (0);
		}
	} else
		if (notes[CANTMOVE] && !notes[LAUNCHED])
			puts("You aren't able to move; you better drop something.");
		else
			puts("You are out of fuel; now you will rot in space forever!");
	return (1);
}

/*
 * Converts day to night and vice versa.
 * Day objects are permanent.  Night objects
 * are added at dusk, and subtracted at dawn.
 */
void
convert(int tothis)			
{				
	const struct objs *p;
	unsigned int i, j;

	if (tothis == TONIGHT) {
		for (i = 1; i <= NUMOFROOMS; i++)
			for (j = 0; j < NUMOFWORDS; j++)
				nightfile[i].objects[j] = dayfile[i].objects[j];
		for (p = nightobjs; p->room != 0; p++)
			SetBit(nightfile[p->room].objects, p->obj);
		location = nightfile;
	} else {
		for (i = 1; i <= NUMOFROOMS; i++)
			for (j = 0; j < NUMOFWORDS; j++)
				dayfile[i].objects[j] = nightfile[i].objects[j];
		for (p = nightobjs; p->room != 0; p++)
			ClearBit(dayfile[p->room].objects, p->obj);
		location = dayfile;
	}
}

void
news(void)
{
	int     n;
	int     hurt;

	if (ourtime > 30 && position < 32) {
		puts("An explosion of shuddering magnitude splinters bulkheads and");
		puts("ruptures the battlestar's hull.  You are sucked out into the");
		puts("frozen void of space and killed.");
		die(0);
	}
	if (ourtime > 20 && position < 32)
		puts("Explosions rock the battlestar.");
	if (ourtime > snooze) {
		puts("You drop from exhaustion...");
		zzz();
	}
	if (ourtime > snooze - 5)
		puts("You're getting tired.");
	if (ourtime > (rythmn + CYCLE)) {
		if (location == nightfile) {
			convert(TODAY);
			if (OUTSIDE && ourtime - rythmn - CYCLE < 10) {
				puts("Dew lit sunbeams stretch out from a watery sunrise and herald the dawn.");
				puts("You awake from a misty dream-world into stark reality.");
				puts("It is day.");
			}
		} else {
			convert(TONIGHT);
			ClearBit(location[POOLS].objects, BATHGOD);
			if (OUTSIDE && ourtime - rythmn - CYCLE < 10) {
				puts("The dying sun sinks into the ocean, leaving a blood-stained sunset.");
				puts("The sky slowly fades from orange to violet to black.  A few stars");
				puts("flicker on, and it is night.");
				puts("The world seems completely different at night.");
			}
		}
		rythmn = ourtime - ourtime % CYCLE;
	}
	if (!wiz && !tempwiz)
		if ((TestBit(inven, TALISMAN) || TestBit(wear, TALISMAN)) && (TestBit(inven, MEDALION) || TestBit(wear, MEDALION)) && (TestBit(inven, AMULET) || TestBit(wear, AMULET))) {
			tempwiz = 1;
			puts("The three amulets glow and reenforce each other in power.\nYou are now a wizard.");
		}
	if (TestBit(location[position].objects, ELF)) {
		printf("%s\n", objdes[ELF]);
		fight(ELF, rnd(30));
	}
	if (TestBit(location[position].objects, DARK)) {
		printf("%s\n", objdes[DARK]);
		fight(DARK, 100);
	}
	if (TestBit(location[position].objects, WOODSMAN)) {
		printf("%s\n", objdes[WOODSMAN]);
		fight(WOODSMAN, 50);
	}
	switch (position) {

	case 267:
	case 257:		/* entering a cave */
	case 274:
	case 246:
		notes[CANTSEE] = 1;
		break;
	case 160:
	case 216:		/* leaving a cave */
	case 230:
	case 231:
	case 232:
		notes[CANTSEE] = 0;
		break;
	}
	if (TestBit(location[position].objects, GIRL))
		meetgirl = 1;
	if (meetgirl && CYCLE * 1.5 - ourtime < 10) {
		SetBit(location[GARDEN].objects, GIRLTALK);
		SetBit(location[GARDEN].objects, LAMPON);
		SetBit(location[GARDEN].objects, ROPE);
	}
	if (position == DOCK && (beenthere[position] || ourtime > CYCLE)) {
		ClearBit(location[DOCK].objects, GIRL);
		ClearBit(location[DOCK].objects, MAN);
	}
	if (meetgirl && ourtime - CYCLE * 1.5 > 10) {
		ClearBit(location[GARDEN].objects, GIRLTALK);
		ClearBit(location[GARDEN].objects, LAMPON);
		ClearBit(location[GARDEN].objects, ROPE);
		meetgirl = 0;
	}
	if (TestBit(location[position].objects, CYLON)) {
		puts("Oh my God, you're being shot at by an alien spacecraft!");
		printf("The targeting computer says we have %d seconds to attack!\n",
		    ourclock);
		fflush(stdout);
		sleep(1);
		if (!visual()) {
			hurt = rnd(NUMOFINJURIES);
			injuries[hurt] = 1;
			puts("Laser blasts sear the cockpit, and the alien veers off in a victory roll.");
			puts("The viper shudders under a terrible explosion.");
			printf("I'm afraid you have suffered %s.\n", ouch[hurt]);
		} else
			ClearBit(location[position].objects, CYLON);
	}
	if (injuries[SKULL] && injuries[INCISE] && injuries[NECK]) {
		puts("I'm afraid you have suffered fatal injuries.");
		die(0);
	}
	for (n = 0; n < NUMOFINJURIES; n++)
		if (injuries[n] == 1) {
			injuries[n] = 2;
			if (WEIGHT > 5)
				WEIGHT -= 5;
			else
				WEIGHT = 0;
		}
	if (injuries[ARM] == 2) {
		if (CUMBER > 5)
			CUMBER -= 5;
		else
			CUMBER = 0;
		injuries[ARM]++;
	}
	if (injuries[RIBS] == 2) {
		if (CUMBER > 2)
			CUMBER -= 2;
		else
			CUMBER = 0;
		injuries[RIBS]++;
	}
	if (injuries[SPINE] == 2) {
		WEIGHT = 0;
		injuries[SPINE]++;
	}
	if (carrying > WEIGHT || encumber > CUMBER)
		notes[CANTMOVE] = 1;
	else
		notes[CANTMOVE] = 0;
}

void
crash(void)
{
	int     hurt1, hurt2;

	fuel--;
	if (!location[position].flyhere ||
	    (TestBit(location[position].objects, LAND) && fuel <= 0)) {
		if (!location[position].flyhere)
			puts("You're flying too low.  We're going to crash!");
		else {
			puts("You're out of fuel.  We'll have to crash land!");
			if (!location[position].down) {
				puts("Your viper strikes the ground and explodes into fiery fragments.");
				puts("Thick black smoke billows up from the wreckage.");
				die(0);
			}
			position = location[position].down;
		}
		notes[LAUNCHED] = 0;
		SetBit(location[position].objects, CRASH);
		ourtime += rnd(CYCLE / 4);
		puts("The viper explodes into the ground and you lose consciousness...");
		zzz();
		hurt1 = rnd(NUMOFINJURIES - 2) + 2;
		hurt2 = rnd(NUMOFINJURIES - 2) + 2;
		injuries[hurt1] = 1;
		injuries[hurt2] = 1;
		injuries[0] = 1;	/* abrasions */
		injuries[1] = 1;	/* lacerations */
		printf("I'm afraid you have suffered %s and %s.\n",
		    ouch[hurt1], ouch[hurt2]);
	}
}

void
newlocation(void)
{
	news();
	if (beenthere[position] <= ROOMDESC)
	     beenthere[position]++;
	if (notes[LAUNCHED])
		crash();	/* decrements fuel & crash */
	if (matchlight) {
		puts("Your match splutters out.");
		matchlight = 0;
	}
	if (!notes[CANTSEE] || TestBit(inven, LAMPON) ||
	    TestBit(location[position].objects, LAMPON)) {
		writedes();
		printobjs();
	} else
		puts("It's too dark to see anything in here!");
	whichway(location[position]);
}
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.13 2004/07/10 07:26:22 deraadt Exp $	*/
d32 4
@


1.13
log
@more ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.12 2003/06/03 03:01:38 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)com1.c	8.2 (Berkeley) 4/28/95";
#else
static char rcsid[] = "$OpenBSD: com1.c,v 1.12 2003/06/03 03:01:38 millert Exp $";
#endif
#endif /* not lint */
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.11 2000/09/26 04:42:55 pjanzen Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: com1.c,v 1.11 2000/09/26 04:42:55 pjanzen Exp $";
d44 1
a44 2
moveplayer(thataway, token)
	int     thataway, token;
d68 5
d74 2
a75 3
convert(tothis)			/* Converts day to night and vice versa.     */
	int     tothis;		/* Day objects are permanent.  Night objects */
{				/* are added at dusk, and subtracted at dawn.*/
d97 1
a97 1
news()
d238 1
a238 1
crash()
d273 1
a273 1
newlocation()
@


1.11
log
@Improve handling of multiple commands on one line.  Tidy fight parser.
Handle "all" in one place (almost).  Add AUXVERB category and OBJ_PERSON/
OBJ_NONOBJ flags.  Most was discussed with jsm@@netbsd.org, and some is from
him.
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.10 2000/09/24 21:55:22 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: com1.c,v 1.10 2000/09/24 21:55:22 pjanzen Exp $";
@


1.10
log
@numerous changes from jsm@@netbsd.org:
static where appropriate, add a few comments, format a bit better, and
deal with WEIGHT/CUMBER being zero (and not less).
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.9 2000/07/24 01:02:43 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: com1.c,v 1.9 2000/07/24 01:02:43 pjanzen Exp $";
d271 21
@


1.9
log
@Rename move() to moveplayer() to avoid clashing with curses;
from mycroft@@netbsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.8 2000/07/03 05:23:44 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: com1.c,v 1.8 2000/07/03 05:23:44 pjanzen Exp $";
d215 4
a218 1
		CUMBER -= 5;
d222 4
a225 1
		CUMBER -= 2;
@


1.8
log
@Finding bugs in battlestar is like shooting fish in a barrel.
	Don't overflow beenthere[].  Add "verbose" option.
	Fix spelling (including embedded hyphens in descriptions) and grammar.
	"Kill" will now use the laser if you have no cutting implements.
	Formatting.
	You can do more things to the bathing goddess.
	A little less guess-the-word.  Occasionally better error messages,
particularly with "all" when nothing applies.
	"kick door" no longer segfaults.  Nor does "kill door".
More bugs remain...
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.7 1999/09/25 20:30:45 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: com1.c,v 1.7 1999/09/25 20:30:45 pjanzen Exp $";
d48 1
a48 1
move(thataway, token)
@


1.7
log
@Merge 4.4BSD-Lite2 and NetBSD, including improved save file handling of
jsm28@@cam.ac.uk.  Rename setbit() family of macros so as not to conflict
with <sys/param.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.6 1998/09/13 01:30:30 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: com1.c,v 1.6 1998/09/13 01:30:30 pjanzen Exp $";
d129 1
a129 1
				puts("The dying sun sinks into the ocean, leaving a blood stained sunset.");
d132 1
a132 1
				puts("The world seems completly different at night.");
@


1.6
log
@NetBSD merge, numerous patches from jsm28@@cam.ac.uk, spelling fixes, and
correct gid revoke.
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.5 1997/12/16 07:54:21 angelos Exp $	*/
d39 1
a39 1
static char sccsid[] = "@@(#)com1.c	8.1 (Berkeley) 5/31/93";
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d53 1
a53 1
	    testbit(location[position].objects, LAND) ||
d77 1
a77 1
	struct objs *p;
d85 1
a85 1
			setbit(nightfile[p->room].objects, p->obj);
d92 1
a92 1
			clearbit(dayfile[p->room].objects, p->obj);
d127 1
a127 1
			clearbit(location[POOLS].objects, BATHGOD);
d138 1
a138 1
		if ((testbit(inven, TALISMAN) || testbit(wear, TALISMAN)) && (testbit(inven, MEDALION) || testbit(wear, MEDALION)) && (testbit(inven, AMULET) || testbit(wear, AMULET))) {
d142 1
a142 1
	if (testbit(location[position].objects, ELF)) {
d146 1
a146 1
	if (testbit(location[position].objects, DARK)) {
d150 1
a150 1
	if (testbit(location[position].objects, WOODSMAN)) {
d170 1
a170 1
	if (testbit(location[position].objects, GIRL))
d173 3
a175 3
		setbit(location[GARDEN].objects, GIRLTALK);
		setbit(location[GARDEN].objects, LAMPON);
		setbit(location[GARDEN].objects, ROPE);
d178 2
a179 2
		clearbit(location[DOCK].objects, GIRL);
		clearbit(location[DOCK].objects, MAN);
d182 3
a184 3
		clearbit(location[GARDEN].objects, GIRLTALK);
		clearbit(location[GARDEN].objects, LAMPON);
		clearbit(location[GARDEN].objects, ROPE);
d187 1
a187 1
	if (testbit(location[position].objects, CYLON)) {
d200 1
a200 1
			clearbit(location[position].objects, CYLON);
d239 1
a239 1
	    (testbit(location[position].objects, LAND) && fuel <= 0)) {
d252 1
a252 1
		setbit(location[position].objects, CRASH);
@


1.5
log
@Fix annoying warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.4 1997/09/01 18:13:08 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$NetBSD: com1.c,v 1.3 1995/03/21 15:06:51 cgd Exp $";
a44 1
#include <unistd.h>
a46 2
void convert __P((int));

d49 1
a49 1
int thataway, token;
d52 3
a54 1
	if ((!notes[CANTMOVE] && !notes[LAUNCHED]) || testbit(location[position].objects, LAND) || fuel > 0 && notes[LAUNCHED])
d58 2
a59 3
			btime++;
		}
		else {
d63 1
a63 1
			return(0);
d65 6
a70 5
	else if (notes[CANTMOVE] && !notes[LAUNCHED])
		puts("You aren't able to move; you better drop something.");
	else
		puts("You are out of fuel; now you will rot in space forever!");
	return(1);
d74 5
a78 5
convert(tothis)		/* Converts day to night and vice versa. 	    */
int tothis;		/* Day objects are permanent.  Night objects are added*/
{			/* at dusk, and subtracted at dawn.		*/
	register struct objs *p;
	register unsigned int i, j;
d100 2
a101 2
	register int n;
	int hurt;
d103 1
a103 1
	if (btime > 30 && position < 32){
d109 1
a109 1
	if (btime > 20 && position < 32)
d111 1
a111 1
	if (btime > snooze){
d115 1
a115 1
	if (btime > snooze - 5)
d117 1
a117 1
	if (btime > (rythmn + CYCLE)) {
d120 1
a120 1
			if (OUTSIDE && btime - rythmn - CYCLE < 10) {
d128 1
a128 1
			if (OUTSIDE && btime - rythmn - CYCLE < 10) {
d135 1
a135 1
		rythmn = btime - btime % CYCLE;
d138 1
a138 1
		if ((testbit(inven,TALISMAN) || testbit(wear,TALISMAN)) && (testbit(inven,MEDALION) || testbit(wear,MEDALION)) && (testbit(inven,AMULET) || testbit(wear,AMULET))){
d141 28
a168 28
	}
	if (testbit(location[position].objects,ELF)){
		printf("%s\n",objdes[ELF]);
		fight(ELF,rnd(30));
	}
	if (testbit(location[position].objects,DARK)){
		printf("%s\n",objdes[DARK]);
		fight(DARK,100);
	}
	if (testbit(location[position].objects,WOODSMAN)){
		printf("%s\n",objdes[WOODSMAN]);
		fight(WOODSMAN,50);
	}
	switch(position){

		case 267:
		case 257:	/* entering a cave */
		case 274:
		case 246:
			notes[CANTSEE] = 1;
			break;
		case 160:
		case 216:	/* leaving a cave */
		case 230:
		case 231:
		case 232:
			notes[CANTSEE] = 0;
			break;
d172 4
a175 4
	if (meetgirl && CYCLE * 1.5 - btime < 10){
		setbit(location[GARDEN].objects,GIRLTALK);
		setbit(location[GARDEN].objects,LAMPON);
		setbit(location[GARDEN].objects,ROPE);
d177 1
a177 1
	if (position == DOCK && (beenthere[position] || btime > CYCLE)){
d179 1
a179 1
		clearbit(location[DOCK].objects,MAN);
d181 4
a184 4
	if (meetgirl && btime - CYCLE * 1.5 > 10){
		clearbit(location[GARDEN].objects,GIRLTALK);
		clearbit(location[GARDEN].objects,LAMPON);
		clearbit(location[GARDEN].objects,ROPE);
d187 1
a187 1
	if (testbit(location[position].objects,CYLON)){
d189 2
a190 1
		printf("The targeting computer says we have %d seconds to attack!\n",bclock);
d193 1
a193 1
		if (!visual()){
d199 2
a200 3
		}
		else
			clearbit(location[position].objects,CYLON);
d202 1
a202 1
	if (injuries[SKULL] && injuries[INCISE] && injuries[NECK]){
d206 2
a207 2
	for (n=0; n < NUMOFINJURIES; n++)
		if (injuries[n] == 1){
d214 1
a214 1
	if (injuries[ARM] == 2){
d218 1
a218 1
	if (injuries[RIBS] == 2){
d222 1
a222 1
	if (injuries[SPINE] == 2){
d235 1
a235 1
	int hurt1,hurt2;
d238 2
a239 1
	if (!location[position].flyhere || (testbit(location[position].objects,LAND) && fuel <= 0)){
d242 1
a242 1
		else{
d244 2
a245 2
			if (!location[position].down){
				puts("Your viper strikes the ground and explodes into firey fragments.");
d252 2
a253 2
		setbit(location[position].objects,CRASH);
		btime += rnd(CYCLE/4);
d262 2
a263 1
		printf("I'm afraid you have suffered %s and %s.\n",ouch[hurt1],ouch[hurt2]);
@


1.4
log
@Remove trailing spaces on lines, use sane pathname sizes, and
use warn instead of perror.
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.3 1997/08/24 21:55:01 deraadt Exp $	*/
d108 1
a108 1
		die();
d205 1
a205 1
		die();
d247 1
a247 1
				die();
@


1.3
log
@various linux-based patches; from linux people; sent by jsm@@octomino.demon.co.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: com1.c,v 1.2 1997/06/30 19:56:29 kstailey Exp $	*/
d156 1
a156 1
		
d242 1
a242 1
		else{ 
@


1.2
log
@tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 2
a46 1
#include "externs.h"
d48 3
d59 1
a59 1
			time++;
d74 1
d79 1
a79 1
	register i, j;
d98 1
d104 1
a104 1
	if (time > 30 && position < 32){
d110 1
a110 1
	if (time > 20 && position < 32)
d112 1
a112 1
	if (time > snooze){
d116 1
a116 1
	if (time > snooze - 5)
d118 1
a118 1
	if (time > (rythmn + CYCLE)) {
d121 1
a121 1
			if (OUTSIDE && time - rythmn - CYCLE < 10) {
d129 1
a129 1
			if (OUTSIDE && time - rythmn - CYCLE < 10) {
d136 1
a136 1
		rythmn = time - time % CYCLE;
d173 1
a173 1
	if (meetgirl && CYCLE * 1.5 - time < 10){
d178 1
a178 1
	if (position == DOCK && (beenthere[position] || time > CYCLE)){
d182 1
a182 1
	if (meetgirl && time - CYCLE * 1.5 > 10){
d190 1
a190 1
		printf("The targeting computer says we have %d seconds to attack!\n",clock);
d233 1
d253 1
a253 1
		time += rnd(CYCLE/4);
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
