head	1.20;
access;
symbols
	OPENBSD_6_2:1.20.0.10
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.8
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.4
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.40
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.38
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.36
	OPENBSD_5_0:1.13.0.34
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.32
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.30
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.26
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.28
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.24
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.22
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.20
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.18
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.16
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.14
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.12
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.20
date	2015.12.31.17.51.19;	author mestre;	state Exp;
branches;
next	1.19;
commitid	GSzV0GYeNlCgMbj0;

1.19
date	2015.12.26.00.26.39;	author mestre;	state Exp;
branches;
next	1.18;
commitid	NcBz9zfScw6TwPoT;

1.18
date	2015.12.04.17.34.40;	author tb;	state Exp;
branches;
next	1.17;
commitid	n8gYjdwgWTO47G4i;

1.17
date	2014.11.16.04.50.46;	author guenther;	state Exp;
branches;
next	1.16;
commitid	PH1PuiBCMPNG5RX7;

1.16
date	2014.11.16.04.49.48;	author guenther;	state Exp;
branches;
next	1.15;
commitid	8XNajyb9IqHkZEKg;

1.15
date	2013.08.29.20.22.10;	author naddy;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.05.01.28.27;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.16.21.27.09;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.26.04.42.56;	author pjanzen;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.24.21.55.24;	author pjanzen;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.23.03.02.36;	author pjanzen;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.17.21.28.32;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.24.01.02.44;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.03.05.23.45;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.09.25.20.30.45;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	98.09.13.01.30.32;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	97.12.16.07.54.25;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	97.09.01.18.13.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.08.24.21.55.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Include only needed header files per each source file

OK tb@@
@
text
@/*	$OpenBSD: extern.h,v 1.19 2015/12/26 00:26:39 mestre Exp $	*/
/*	$NetBSD: extern.h,v 1.5 1995/04/24 12:22:18 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)extern.h	8.1 (Berkeley) 5/31/93
 */

#include <sys/types.h>

#define BITS (8 * sizeof (int))

#define OUTSIDE		(position > 68 && position < 246 && position != 218)
#define rnd(x)		arc4random_uniform(x)
#define max(a,b)	((a) < (b) ? (b) : (a))
#define TestBit(array, index)	(array[index/BITS] & (1 << (index % BITS)))
#define SetBit(array, index)	(array[index/BITS] |= (1 << (index % BITS)))
#define ClearBit(array, index)	(array[index/BITS] &= ~(1 << (index % BITS)))
/*
 * These macros yield words to use with objects (followed but not preceded
 * by spaces, or with no spaces if the expansion is the empty string).
 */
#define A_OR_AN(n)		(objflags[(n)] & OBJ_AN ? "an " : "a ")
#define IS_PLURAL(n)	(objflags[(n)] & OBJ_PLURAL)
#define A_OR_AN_OR_THE(n)	(IS_PLURAL((n)) ? "the " : A_OR_AN((n)))
#define A_OR_AN_OR_BLANK(n)	(IS_PLURAL((n)) ? "" : A_OR_AN((n)))
#define IS_OR_ARE(n)		(IS_PLURAL((n)) ? "are " : "is ")

 /* well known rooms */
#define FINAL	275
#define GARDEN	197
#define POOLS	126
#define DOCK	93

 /* word types */
#define VERB	0
#define OBJECT  1
#define NOUNS	2
#define PREPS	3
#define ADJS	4
#define CONJ	5

 /* words numbers */
#define KNIFE		0
#define SWORD		1
#define LAND		2
#define WOODSMAN 	3
#define TWO_HANDED	4
#define CLEAVER		5
#define BROAD		6
#define MAIL		7
#define HELM		8
#define SHIELD		9
#define MAID		10
#define BODY		10
#define VIPER		11
#define LAMPON		12
#define SHOES		13
#define CYLON		14
#define PAJAMAS		15
#define ROBE		16
#define AMULET		17
#define MEDALION	18
#define TALISMAN	19
#define DEADWOOD	20
#define MALLET		21
#define LASER		22
#define BATHGOD		23
#define NORMGOD		24
#define GRENADE		25
#define CHAIN		26
#define ROPE		27
#define LEVIS		28
#define MACE		29
#define SHOVEL		30
#define HALBERD		31
#define COMPASS		32
#define CRASH		33
#define ELF		34
#define FOOT		35
#define COINS		36
#define MATCHES		37
#define MAN		38
#define PAPAYAS		39
#define PINEAPPLE	40
#define KIWI		41
#define COCONUTS	42
#define MANGO		43
#define RING		44
#define POTION		45
#define BRACELET	46
#define GIRL		47
#define GIRLTALK	48
#define DARK		49
#define TIMER		50
#define CHAR		53
#define BOMB		54
#define DEADGOD		55
#define DEADTIME	56
#define DEADNATIVE	57
#define NATIVE		58
#define HORSE		59
#define CAR		60
#define POT		61
#define BAR		62
#define BLOCK		63
#define NUMOFOBJECTS	64
 /* non-objects below */
#define UP	1000
#define DOWN	1001
#define AHEAD	1002
#define BACK	1003
#define RIGHT	1004
#define LEFT	1005
#define TAKE	1006
#define USE	1007
#define LOOK	1008
#define QUIT	1009
#define NORTH	1010
#define SOUTH	1011
#define EAST	1012
#define WEST	1013
#define SU	1014
#define DROP	1015
#define TAKEOFF	1016
#define DRAW	1017
#define PUTON	1018
#define WEARIT	1019
#define PUT	1020
#define INVEN	1021
#define EVERYTHING 1022
#define AND	1023
#define KILL	1024
#define RAVAGE	1025
#define UNDRESS	1026
#define THROW	1027
#define LAUNCH	1028
#define LANDIT	1029
#define LIGHT	1030
#define FOLLOW	1031
#define KISS	1032
#define LOVE	1033
#define GIVE	1034
#define SMITE	1035
#define SHOOT	1036
#define ON	1037
#define OFF	1038
#define TIME	1039
#define SLEEP	1040
#define DIG	1041
#define EAT	1042
#define SWIM	1043
#define DRINK	1044
#define DOOR	1045
#define SAVE	1046
#define RIDE	1047
#define DRIVE	1048
#define SCORE	1049
#define BURY	1050
#define JUMP	1051
#define KICK	1052
#define OPEN	1053
#define VERBOSE	1054
#define BRIEF	1055
#define AUXVERB 1056

 /* injuries */
#define ARM	6		/* broken arm */
#define RIBS	7		/* broken ribs */
#define SPINE	9		/* broken back */
#define SKULL	11		/* fractured skull */
#define INCISE	10		/* deep incisions */
#define NECK	12		/* broken NECK */
#define NUMOFINJURIES 13

 /* notes */
#define CANTLAUNCH	0
#define LAUNCHED	1
#define CANTSEE		2
#define CANTMOVE	3
#define JINXED		4
#define DUG		5
#define NUMOFNOTES	6

 /* number of times room description shown */
#define ROOMDESC	3

 /* fundamental constants */
#define NUMOFROOMS	275
#define NUMOFWORDS	((NUMOFOBJECTS + BITS - 1) / BITS)
#define LINELENGTH	81

#define TODAY		0
#define TONIGHT		1
#define CYCLE		100

 /* initial variable values */
#define TANKFULL	250
#define TORPEDOES	10
#define MAXWEIGHT	60
#define MAXCUMBER	10

/* Flags for objects */
#define OBJ_PLURAL	1
#define OBJ_AN		2
#define OBJ_PERSON	4
#define OBJ_NONOBJ	8	/* footsteps, asteroids, etc. */

struct room {
	const char   *name;
	int     link[8];
#define north	link[0]
#define south	link[1]
#define east	link[2]
#define west	link[3]
#define up	link[4]
#define access	link[5]
#define down	link[6]
#define flyhere	link[7]
	const char   *desc;
	unsigned int objects[NUMOFWORDS];
};
extern struct room dayfile[];
extern struct room nightfile[];
extern struct room *location;

 /* object characteristics */
extern const char   *const objdes[NUMOFOBJECTS];
extern const char   *const objsht[NUMOFOBJECTS];
extern const char   *const ouch[NUMOFINJURIES];
extern const int     objwt[NUMOFOBJECTS];
extern const int     objcumber[NUMOFOBJECTS];
extern const int     objflags[NUMOFOBJECTS];

 /* current input line */
#define WORDLEN 15
#define NWORD	20		/* words per line */
extern char    words[NWORD][WORDLEN];
extern int     wordvalue[NWORD];
extern int     wordtype[NWORD];
extern int     wordcount, wordnumber;
extern int     stop_cypher;	/* continue parsing the current line? */

 /* state of the game */
extern int     ourtime;
extern int     position;
extern int     direction;
extern int     left, right, ahead, back;
extern int     ourclock, fuel, torps;
extern int     carrying, encumber;
extern int     rythmn;
extern int     followfight;
extern int     ate;
extern int     snooze;
extern int     meetgirl;
extern int     followgod;
extern int     godready;
extern int     win;
extern int     wintime;
extern int     wiz;
extern int     tempwiz;
extern int     matchlight;
extern int     matchcount;
extern int     loved;
extern int     pleasure, power, ego;
extern int     WEIGHT;
extern int     CUMBER;
extern int     notes[NUMOFNOTES];
extern unsigned int inven[NUMOFWORDS];
extern unsigned int wear[NUMOFWORDS];
extern char    beenthere[NUMOFROOMS+1];
extern char    injuries[NUMOFINJURIES];
extern int     verbose;

extern const char *username;

struct wlist {
	const char   *string;
	int     value, article;
	struct wlist *next;
};
extern struct wlist wlist[];

struct objs {
	short room;
	short obj;
};
extern const struct objs dayobjs[];
extern const struct objs nightobjs[];

void bury(void);
int card(const char *, int);
void chime(void);
void convert(int);
void crash(void);
int cypher(void);
__dead void die(int);
void dig(void);
void dooropen(void);
int draw(void);
void drink(void);
int drive(void);
int drop(const char *);
int eat(void);
int fight(int, int);
int follow(void);
char *getcom(char *, int, const char *, const char *);
char *getword(char *, char *, int);
int give(void);
int inc_wordnumber(const char *, const char *);
void initialize(const char *);
int jump(void);
void kiss(void);
int land(void);
int launch(void);
void light(void);
__dead void live(void);
void love(void);
int moveplayer(int, int);
void murder(void);
void newlocation(void);
void news(void);
void newway(int);
void open_score_file(void);
void parse(void);
void post(char);
void printobjs(void);
int put(void);
int puton(void);
const char *rate(void);
void ravage(void);
void restore(const char *);
int ride(void);
void save(const char *);
char *save_file_name(const char *, size_t);
int shoot(void);
int take(unsigned int[]);
int takeoff(void);
int throw(const char *);
const char *truedirec(int, char);
int ucard(const unsigned int *);
void undress(void);
int use(void);
int visual(void);
int wearit(void);
void whichway(struct room);
void wordinit(void);
void writedes(void);
int zzz(void);
@


1.19
log
@Set as __dead a few more functions, that don't return, on games/

With precious tip, help and also OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.18 2015/12/04 17:34:40 tb Exp $	*/
d35 1
a35 11
#include <sys/time.h>

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <limits.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
@


1.18
log
@cleanup: remove pwd.h, delete a stray comment and a const qualifier
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.17 2014/11/16 04:50:46 guenther Exp $	*/
d333 1
a333 1
void die(int);
d353 1
a353 1
void live(void);
@


1.17
log
@Remove a bogotified comment
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.16 2014/11/16 04:49:48 guenther Exp $	*/
a40 1
#include <pwd.h>
@


1.16
log
@Eliminate pointless use of <sys/param.h>, <sys/file.h>, <sys/sockio.h>,
    and <sys/ttydefaults.h>
Replace MAXPATHLEN with PATH_MAX and MAXLOGNAME with LOGIN_NAME_MAX
Pull in <limits.h> where needed
Prefer sizeof(var) over MAXFOO or FOO_MAX

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.15 2013/08/29 20:22:10 naddy Exp $	*/
a52 1
 /* avoid name collision with sys/param.h */
@


1.15
log
@replace srandomdev()+random() with the arc4random*() family
tweaks and ok millert@@, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.14 2013/04/05 01:28:27 tedu Exp $	*/
a34 1
#include <sys/param.h>
@


1.14
log
@this doesn't need to be time_t ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.13 2003/06/03 03:01:38 millert Exp $	*/
d52 1
a52 1
#define rnd(x)		(random() % (x))
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.12 2002/02/16 21:27:09 millert Exp $	*/
d284 1
a284 1
extern time_t  ourtime;
@


1.12
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.11 2000/09/26 04:42:56 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@Improve handling of multiple commands on one line.  Tidy fight parser.
Handle "all" in one place (almost).  Add AUXVERB category and OBJ_PERSON/
OBJ_NONOBJ flags.  Most was discussed with jsm@@netbsd.org, and some is from
him.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.10 2000/09/24 21:55:24 pjanzen Exp $	*/
d334 59
a392 59
void bury __P((void));
int card __P((const char *, int));
void chime __P((void));
void convert __P((int));
void crash __P((void));
int cypher __P((void));
void die __P((int));
void dig __P((void));
void dooropen __P((void));
int draw __P((void));
void drink __P((void));
int drive __P((void));
int drop __P((const char *));
int eat __P((void));
int fight __P((int, int));
int follow __P((void));
char *getcom __P((char *, int, const char *, const char *));
char *getword __P((char *, char *, int));
int give __P((void));
int inc_wordnumber __P((const char *, const char *));
void initialize __P((const char *));
int jump __P((void));
void kiss __P((void));
int land __P((void));
int launch __P((void));
void light __P((void));
void live __P((void));
void love __P((void));
int moveplayer __P((int, int));
void murder __P((void));
void newlocation __P((void));
void news __P((void));
void newway __P((int));
void open_score_file __P((void));
void parse __P((void));
void post __P((char));
void printobjs __P((void));
int put __P((void));
int puton __P((void));
const char *rate __P((void));
void ravage __P((void));
void restore __P((const char *));
int ride __P((void));
void save __P((const char *));
char *save_file_name __P((const char *, size_t));
int shoot __P((void));
int take __P((unsigned int[]));
int takeoff __P((void));
int throw __P((const char *));
const char *truedirec __P((int, char));
int ucard __P((const unsigned int *));
void undress __P((void));
int use __P((void));
int visual __P((void));
int wearit __P((void));
void whichway __P((struct room));
void wordinit __P((void));
void writedes __P((void));
int zzz __P((void));
@


1.10
log
@numerous changes from jsm@@netbsd.org:
static where appropriate, add a few comments, format a bit better, and
deal with WEIGHT/CUMBER being zero (and not less).
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.9 2000/09/23 03:02:36 pjanzen Exp $	*/
d62 9
a70 3
 /* "a " vs "an " before an object */
#define AorAn(value)	(objflags[(value)] & OBJ_AN ? "an " : "a ")
#define IsPluralObject(value) (objflags[(value)] & OBJ_PLURAL)
d208 1
d249 2
d285 1
d353 1
d364 1
d385 1
@


1.9
log
@drop adjectives in parse(), since they're never used.
tidy a little.  fix love() a bit.
From conversations with jsm@@netbsd.org:
Add objflags[] to deal with plurals and a/an usage.
Commas don't mean AND if followed by a verb.
Check for object presence before trying to lift or eat it.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.8 2000/09/17 21:28:32 pjanzen Exp $	*/
d308 1
a308 1
extern char    username[LOGIN_NAME_MAX + 1];
a314 4
#define HASHSIZE	256
#define HASHMUL		81
#define HASHMASK	(HASHSIZE - 1)
extern struct wlist *hashtab[HASHSIZE];
a323 1
void blast __P((void));
a325 1
int checkout __P((const char *));
a337 1
void endfly __P((void));
a340 1
void getutmp __P((char *));
a342 1
int hash __P((const char *));
a343 1
void install __P((struct wlist *));
a349 1
struct wlist *lookup __P((const char *));
a350 1
void moveenemy __P((int));
a354 1
void notarget __P((void));
a366 1
void screen __P((void));
a367 1
void succumb __P((int));
a369 1
void target __P((void));
a376 1
int wizard __P((const char *));
@


1.8
log
@Fewer segfaults ("take all and all", "wear wear"), better parsing
(e.g. disambiguation of "drop body").  Also, use "a" or "an" correctly,
don't overflow the words array, and don't kick items you're wearing.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.7 2000/07/24 01:02:44 pjanzen Exp $	*/
d63 2
a64 1
#define AorAn(value)	(strchr("aeiou", objsht[value][0]) ? "an " : "a ")
d114 2
a115 2
#define	COMPASS		32
#define	CRASH		33
d213 1
a213 1
#define	CANTLAUNCH	0
d239 4
d267 1
@


1.7
log
@Rename move() to moveplayer() to avoid clashing with curses;
from mycroft@@netbsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.6 2000/07/03 05:23:45 pjanzen Exp $	*/
d62 2
d264 1
d266 1
a266 1
extern char    words[NWORD][15];
d342 1
a343 1
void getutmp __P((char *));
d356 1
a357 1
void moveenemy __P((int));
@


1.6
log
@Finding bugs in battlestar is like shooting fish in a barrel.
	Don't overflow beenthere[].  Add "verbose" option.
	Fix spelling (including embedded hyphens in descriptions) and grammar.
	"Kill" will now use the laser if you have no cutting implements.
	Formatting.
	You can do more things to the bathing goddess.
	A little less guess-the-word.  Occasionally better error messages,
particularly with "all" when nothing applies.
	"kick door" no longer segfaults.  Nor does "kill door".
More bugs remain...
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.5 1999/09/25 20:30:45 pjanzen Exp $	*/
d353 1
a353 1
int move __P((int, int));
@


1.5
log
@Merge 4.4BSD-Lite2 and NetBSD, including improved save file handling of
jsm28@@cam.ac.uk.  Rename setbit() family of macros so as not to conflict
with <sys/param.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.4 1998/09/13 01:30:32 pjanzen Exp $	*/
d140 1
a140 1
#define	BLOCK		63
d157 1
a157 1
#define SU      1014
d181 1
a181 1
#define	OFF	1038
d196 3
d218 3
d276 1
a276 1
extern int followfight;
d297 1
d329 1
@


1.4
log
@NetBSD merge, numerous patches from jsm28@@cam.ac.uk, spelling fixes, and
correct gid revoke.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.3 1997/12/16 07:54:25 angelos Exp $	*/
d39 1
d58 4
a61 3
#define testbit(array, index)	(array[index/BITS] & (1 << (index % BITS)))
#define setbit(array, index)	(array[index/BITS] |= (1 << (index % BITS)))
#define clearbit(array, index)	(array[index/BITS] &= ~(1 << (index % BITS)))
d231 1
a231 1
	char   *name;
d241 1
a241 1
	char   *desc;
d246 1
a246 1
struct room *location;
d249 5
a253 5
extern char   *objdes[NUMOFOBJECTS];
extern char   *objsht[NUMOFOBJECTS];
extern char   *ouch[NUMOFINJURIES];
extern int     objwt[NUMOFOBJECTS];
extern int     objcumber[NUMOFOBJECTS];
d257 4
a260 4
char    words[NWORD][15];
int     wordvalue[NWORD];
int     wordtype[NWORD];
int     wordcount, wordnumber;
d263 7
a269 7
time_t  ourtime;
int     position;
int     direction;
int     left, right, ahead, back;
int     ourclock, fuel, torps;
int     carrying, encumber;
int     rythmn;
d271 3
a273 3
int     ate;
int     snooze;
int     meetgirl;
d275 1
a275 1
int     godready;
d277 4
a280 4
int     wintime;
int     wiz;
int     tempwiz;
int     matchlight;
d282 2
a283 2
int     loved;
int     pleasure, power, ego;
d286 5
a290 5
int     notes[NUMOFNOTES];
unsigned int inven[NUMOFWORDS];
unsigned int wear[NUMOFWORDS];
char    beenthere[NUMOFROOMS+1];
char    injuries[NUMOFINJURIES];
d292 1
a292 1
char    uname[9];
d295 1
a295 1
	char   *string;
d302 1
a302 1
struct wlist *hashtab[HASHSIZE];
d309 2
a310 2
extern struct objs dayobjs[];
extern struct objs nightobjs[];
d314 2
a315 2
int card __P((char *, int));
int checkout __P((char *));
d325 1
a325 1
int drop __P((char *));
d330 1
a330 1
char *getcom __P((char *, int, char *, char *));
d334 2
a335 2
int hash __P((char *));
void initialize __P((char));
d343 1
a343 1
struct wlist *lookup __P((char *));
d351 1
d357 1
a357 1
char *rate __P((void));
d359 1
a359 1
void restore __P((void));
d361 2
a362 1
void save __P((void));
d369 3
a371 3
int throw __P((char *));
char *truedirec __P((int, char));
int ucard __P((unsigned int *));
d376 1
a376 1
int wizard __P((char *));
a379 2

gid_t	egid;
@


1.3
log
@Fix annoying warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.2 1997/09/01 18:13:16 millert Exp $	*/
a38 5
/* 
 * sigh -- this program thinks "time" is an int.  It's easier to not load
 * <time.h> than try and fix it.
 */   
#define _KERNEL
a39 1
#undef _KERNEL
d41 1
d45 1
d48 1
d50 1
a50 1
#include <stdlib.h>
d55 1
a55 1
#define rnd(x)		(rand() % (x))
d61 1
a61 1
	/* well known rooms */
d67 1
a67 1
	/* word types */
d75 2
a76 2
	/* words numbers */
#define KNIFE		0 
d140 1
a140 1
	/* non-objects below */
d191 1
a191 1
#define BURY	1050 
d195 1
a195 1
	/* injuries */
d204 1
a204 1
	/* notes */
d208 1
a208 1
#define CANTMOVE	3 
d213 1
a213 1
	/* fundamental constants */
d222 1
a222 1
	/* initial variable values */
d229 2
a230 2
	char *name;
	int link[8];
d239 1
a239 1
	char *desc;
d246 63
a308 13
	/* object characteristics */
extern char *objdes[NUMOFOBJECTS];
extern char *objsht[NUMOFOBJECTS];
extern char *ouch[NUMOFINJURIES];
extern int objwt[NUMOFOBJECTS];
extern int objcumber[NUMOFOBJECTS];

	/* current input line */
#define NWORD	20			/* words per line */
char words[NWORD][15];
int wordvalue[NWORD];
int wordtype[NWORD];
int wordcount, wordnumber;
d310 1
d313 1
d315 1
d325 1
d330 1
d332 1
d334 1
d341 1
d344 1
d348 1
d359 1
d361 1
d364 1
d372 1
a375 50

	/* state of the game */
int btime;
int position;
int direction;
int left, right, ahead, back;
int bclock, fuel, torps;
int carrying, encumber;
int rythmn;
extern int followfight;
int ate;
int snooze;
int meetgirl;
extern int followgod;
int godready;
extern int win;
int wintime;
int wiz;
int tempwiz;
int matchlight;
extern int matchcount;
int loved;
int pleasure, power, ego;
extern int WEIGHT;
extern int CUMBER;
int notes[NUMOFNOTES];
unsigned int inven[NUMOFWORDS];
unsigned int wear[NUMOFWORDS];
char beenthere[NUMOFROOMS+1];
char injuries[NUMOFINJURIES];

char uname[9];

struct wlist {
	char *string;
	int value, article;
	struct wlist *next;
};
#define HASHSIZE	256
#define HASHMUL		81
#define HASHMASK	(HASHSIZE - 1)
struct wlist *hashtab[HASHSIZE];
extern struct wlist wlist[];

struct objs {
	short room;
	short obj;
};
extern struct objs dayobjs[];
extern struct objs nightobjs[];
@


1.2
log
@Remove trailing spaces on lines, use sane pathname sizes, and
use warn instead of perror.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.1 1997/08/24 21:55:07 deraadt Exp $	*/
d268 1
a268 1
void die __P((void));
@


1.1
log
@various linux-based patches; from linux people; sent by jsm@@octomino.demon.co.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.5 1997/06/30 19:56:35 kstailey Exp $	*/
d47 1
d49 1
@
