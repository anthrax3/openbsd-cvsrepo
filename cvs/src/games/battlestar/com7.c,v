head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.8
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.26
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.18
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.24
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.20
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.18
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.16
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.14
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.12
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.10
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.12
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.10
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.12.31.17.51.19;	author mestre;	state Exp;
branches;
next	1.12;
commitid	GSzV0GYeNlCgMbj0;

1.12
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.10.07.26.22;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.26.04.42.56;	author pjanzen;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.24.01.02.43;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	99.09.25.20.30.45;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.09.13.01.30.31;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	97.12.16.07.54.24;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	97.09.01.18.13.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.08.24.21.55.04;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.06.30.19.56.32;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Include only needed header files per each source file

OK tb@@
@
text
@/*	$OpenBSD: com7.c,v 1.12 2009/10/27 23:59:23 deraadt Exp $	*/
/*	$NetBSD: com7.c,v 1.3 1995/03/21 15:07:12 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>

#include "extern.h"

int
fight(int enemy, int strength)
{
	int     lifeline = 0;
	int     hurt;
	char    auxbuf[LINELENGTH];
	char   *next;
	int     i;
	int     exhaustion;

	stop_cypher = 1;	/* Don't parse the existing input line further */
fighton:
	ourtime++;
	snooze -= 5;
	if (snooze > ourtime)
		exhaustion = CYCLE / (snooze - ourtime);
	else {
		puts("You collapse exhausted, and he pulverizes your skull.");
		die(0);
	}
	if (snooze - ourtime < 20)
		puts("You look tired! I hope you're able to fight.");
	next = getcom(auxbuf, LINELENGTH, "<fight!>-: ", NULL);
	for (i = 0; next && i < NWORD - 1; i++)
		next = getword(next, words[i], -1);
	parse();
	switch (wordvalue[wordnumber]) {

	case KILL:
	case SMITE:
		if (TestBit(inven, TWO_HANDED))
			hurt = rnd(70) - 2 * card(injuries, NUMOFINJURIES) - ucard(wear) - exhaustion;
		else if (TestBit(inven, SWORD) || TestBit(inven, BROAD))
			hurt = rnd(50) % (WEIGHT - carrying) - card(injuries, NUMOFINJURIES) - encumber - exhaustion;
		else if (TestBit(inven, KNIFE) || TestBit(inven, MALLET) || TestBit(inven, CHAIN) || TestBit(inven, MACE) || TestBit(inven, HALBERD))
			hurt = rnd(15) - card(injuries, NUMOFINJURIES) - exhaustion;
		else
			hurt = rnd(7) - encumber;
		if (hurt < 5)
			switch (rnd(3)) {

			case 0:
				puts("You swung wide and missed.");
				break;
			case 1:
				puts("He checked your blow. CLASH! CLANG!");
				break;
			case 2:
				puts("His filthy tunic hangs by one less thread.");
				break;
			}
		else if (hurt < 10) {
			switch (rnd(3)) {
			case 0:
				puts("He's bleeding.");
				break;
			case 1:
				puts("A trickle of blood runs down his face.");
				break;
			case 2:
				puts("A huge purple bruise is forming on the side of his face.");
				break;
			}
			lifeline++;
		}
		else if (hurt < 20) {
			switch (rnd(3)) {
			case 0:
				puts("He staggers back quavering.");
				break;
			case 1:
				puts("He jumps back with his hand over the wound.");
				break;
			case 2:
				puts("His shirt falls open with a swath across the chest.");
				break;
			}
			lifeline += 5;
		}
		else if (hurt < 30) {
			switch (rnd(3)) {
			case 0:
				printf("A bloody gash opens up on his %s side.\n",(rnd(2) ? "left" : "right"));
				break;
			case 1:
				puts("The steel bites home and scrapes along his ribs.");
				break;
			case 2:
				puts("You pierce him, and his breath hisses through clenched teeth.");
				break;
			}
			lifeline += 10;
		}
		else if (hurt < 40) {
			switch (rnd(3)) {
			case 0:
				puts("You smite him to the ground.");
				if (strength - lifeline > 20)
					puts("But in a flurry of steel he regains his feet!");
				break;
			case 1:
				puts("The force of your blow sends him to his knees.");
				puts("His arm swings lifeless at his side.");
				break;
			case 2:
				puts("Clutching his blood-drenched shirt, he collapses, stunned.");
				break;
			}
			lifeline += 20;
		}
		else {
			switch (rnd(3)) {
			case 0:
				puts("His ribs crack under your powerful swing, flooding his lungs with blood.");
				break;
			case 1:
				puts("You shatter his upheld arm in a spray of blood.  The blade continues deep");
				puts("into his back, severing the spinal cord.");
				lifeline += 25;
				break;
			case 2:
				puts("With a mighty lunge the steel slides in, and gasping, he falls to the ground.");
				lifeline += 25;
				break;
			}
			lifeline += 30;
		}
		break;

	case BACK:
		if (enemy == DARK && lifeline > strength * 0.33) {
			puts("He throws you back against the rock and pummels your face.");
			if (TestBit(inven, AMULET) || TestBit(wear, AMULET)) {
				printf("Lifting the amulet from you, ");
				if (TestBit(inven, MEDALION) || TestBit(wear, MEDALION)) {
					puts("his power grows and the walls of\nthe earth tremble.");
					puts("When he touches the medallion, your chest explodes and the foundations of the\nearth collapse.");
					puts("The planet is consumed by darkness.");
					die(0);
				}
				if (TestBit(inven, AMULET)) {
					ClearBit(inven, AMULET);
					carrying -= objwt[AMULET];
					encumber -= objcumber[AMULET];
				} else
					ClearBit(wear, AMULET);
				puts("he flees down the dark caverns.");
				ClearBit(location[position].objects, DARK);
				injuries[SKULL] = 1;
				followfight = ourtime;
				return (0);
			} else {
				puts("I'm afraid you have been killed.");
				die(0);
			}
		} else {
			puts("You escape stunned and disoriented from the fight.");
			puts("A victorious bellow echoes from the battlescene.");
			if (back && position != back)
				moveplayer(back, BACK);
			else if (ahead &&position != ahead)
				moveplayer(ahead, AHEAD);
			else if (left && position != left)
				moveplayer(left, LEFT);
			else if (right && position != right)
				moveplayer(right, RIGHT);
			else
				moveplayer(location[position].down, AHEAD);
			return (0);
		}

	case SHOOT:
		if (TestBit(inven, LASER)) {
			if (strength - lifeline <= 50) {
				printf("The %s took a direct hit!\n", objsht[enemy]);
				lifeline += 50;
			} else {
				puts("With his bare hand he deflects the laser blast and whips the pistol from you!");
				ClearBit(inven, LASER);
				SetBit(location[position].objects, LASER);
				carrying -= objwt[LASER];
				encumber -= objcumber[LASER];
			}
		} else
			puts("Unfortunately, you don't have a blaster handy.");
		break;

	case DROP:
	case DRAW:
		/* One call to cypher() does only the first command on the line */
		cypher();
		ourtime--;
		break;

	default:
		puts("You don't have a chance; he is too quick.");
		break;

	}
	if (lifeline >= strength) {
		printf("You have killed the %s.\n", objsht[enemy]);
		if (enemy == ELF || enemy == DARK)
			puts("A watery black smoke consumes his body and then vanishes with a peal of thunder!");
		ClearBit(location[position].objects, enemy);
		power += 2;
		notes[JINXED]++;
		return (0);
	}
	puts("He attacks...");
	/* some embellishments */
	hurt = rnd(NUMOFINJURIES) - (TestBit(inven, SHIELD) != 0) - (TestBit(wear, MAIL) != 0) - (TestBit(wear, HELM) != 0);
	hurt += (TestBit(wear, AMULET) != 0) + (TestBit(wear, MEDALION) != 0) + (TestBit(wear, TALISMAN) != 0);
	hurt = hurt < 0 ? 0 : hurt;
	hurt = hurt >= NUMOFINJURIES ? NUMOFINJURIES - 1 : hurt;
	if (!injuries[hurt]) {
		injuries[hurt] = 1;
		printf("I'm afraid you have suffered %s.\n", ouch[hurt]);
	} else
		puts("You emerge unscathed.");
	if (injuries[SKULL] && injuries[INCISE] && injuries[NECK]) {
		puts("I'm afraid you have suffered fatal injuries.");
		die(0);
	}
	goto fighton;
}
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.11 2004/07/10 07:26:22 deraadt Exp $	*/
d32 3
@


1.11
log
@more ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.10 2003/06/03 03:01:38 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)com7.c	8.2 (Berkeley) 4/28/95";
#else
static char rcsid[] = "$OpenBSD: com7.c,v 1.10 2003/06/03 03:01:38 millert Exp $";
#endif
#endif /* not lint */
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.9 2000/09/26 04:42:56 pjanzen Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: com7.c,v 1.9 2000/09/26 04:42:56 pjanzen Exp $";
d44 1
a44 2
fight(enemy, strength)
	int     enemy, strength;
@


1.9
log
@Improve handling of multiple commands on one line.  Tidy fight parser.
Handle "all" in one place (almost).  Add AUXVERB category and OBJ_PERSON/
OBJ_NONOBJ flags.  Most was discussed with jsm@@netbsd.org, and some is from
him.
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.8 2000/07/24 01:02:43 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: com7.c,v 1.8 2000/07/24 01:02:43 pjanzen Exp $";
@


1.8
log
@Rename move() to moveplayer() to avoid clashing with curses;
from mycroft@@netbsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.7 1999/09/25 20:30:45 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: com7.c,v 1.7 1999/09/25 20:30:45 pjanzen Exp $";
d58 1
d70 2
a71 2
	next = getcom(auxbuf, LINELENGTH, "<fight!>-: ", 0);
	for (i = 0; next && i < 10; i++)
d153 1
a153 1
				puts("Clutching his blood drenched shirt, he collapses stunned.");
d237 1
@


1.7
log
@Merge 4.4BSD-Lite2 and NetBSD, including improved save file handling of
jsm28@@cam.ac.uk.  Rename setbit() family of macros so as not to conflict
with <sys/param.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.6 1998/09/13 01:30:31 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: com7.c,v 1.6 1998/09/13 01:30:31 pjanzen Exp $";
d206 1
a206 1
				move(back, BACK);
d208 1
a208 1
				move(ahead, AHEAD);
d210 1
a210 1
				move(left, LEFT);
d212 1
a212 1
				move(right, RIGHT);
d214 1
a214 1
				move(location[position].down, AHEAD);
@


1.6
log
@NetBSD merge, numerous patches from jsm28@@cam.ac.uk, spelling fixes, and
correct gid revoke.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 1
a39 1
static char sccsid[] = "@@(#)com7.c	8.1 (Berkeley) 5/31/93";
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d77 1
a77 1
		if (testbit(inven, TWO_HANDED))
d79 1
a79 1
		else if (testbit(inven, SWORD) || testbit(inven, BROAD))
d81 1
a81 1
		else if (testbit(inven, KNIFE) || testbit(inven, MALLET) || testbit(inven, CHAIN) || testbit(inven, MACE) || testbit(inven, HALBERD))
d179 1
a179 1
			if (testbit(inven, AMULET) || testbit(wear, AMULET)) {
d181 1
a181 1
				if (testbit(inven, MEDALION) || testbit(wear, MEDALION)) {
d187 2
a188 2
				if (testbit(inven, AMULET)) {
					clearbit(inven, AMULET);
d192 1
a192 1
					clearbit(wear, AMULET);
d194 1
a194 1
				clearbit(location[position].objects, DARK);
d219 1
a219 1
		if (testbit(inven, LASER)) {
d225 2
a226 2
				clearbit(inven, LASER);
				setbit(location[position].objects, LASER);
d249 1
a249 1
		clearbit(location[position].objects, enemy);
d256 2
a257 2
	hurt = rnd(NUMOFINJURIES) - (testbit(inven, SHIELD) != 0) - (testbit(wear, MAIL) != 0) - (testbit(wear, HELM) != 0);
	hurt += (testbit(wear, AMULET) != 0) + (testbit(wear, MEDALION) != 0) + (testbit(wear, TALISMAN) != 0);
@


1.5
log
@Fix annoying warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.4 1997/09/01 18:13:14 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$NetBSD: com7.c,v 1.3 1995/03/21 15:07:12 cgd Exp $";
d48 2
a49 2
fight(enemy,strength)
int enemy,strength;
d51 6
a56 6
	int lifeline = 0;
	int hurt;
	char auxbuf[LINELENGTH];
	char *next;
	int i;
	int exhaustion;
d59 1
a59 1
	btime++;
d61 2
a62 2
	if (snooze > btime)
		exhaustion = CYCLE/(snooze - btime);
d67 1
a67 1
	if (snooze - btime < 20)
d70 1
a70 1
	for (i=0; next && i < 10; i++)
d73 1
a73 1
	switch(wordvalue[wordnumber]){
d75 34
a108 36
		case KILL:
		case SMITE:
			if (testbit(inven,TWO_HANDED))
				hurt = rnd(70) - 2 * card(injuries,NUMOFINJURIES) - ucard(wear) - exhaustion;
			else if (testbit(inven,SWORD) || testbit(inven, BROAD))
				hurt = rnd(50)%(WEIGHT-carrying)-card(injuries,NUMOFINJURIES)-encumber - exhaustion;
			else if (testbit(inven,KNIFE) || testbit(inven,MALLET) || testbit(inven,CHAIN) || testbit(inven,MACE) || testbit(inven,HALBERD))
				hurt = rnd(15) - card(injuries,NUMOFINJURIES) - exhaustion;
			else
				hurt = rnd(7) - encumber;
			if (hurt < 5)
				switch(rnd(3)){

					case 0:
						puts("You swung wide and missed.");
						break;
					case 1:
						puts("He checked your blow. CLASH! CLANG!");
						break;
					case 2:
						puts("His filthy tunic hangs by one less thread.");
						break;
				}
			else if (hurt < 10){
				switch(rnd(3)){
					case 0:
						puts("He's bleeding.");
						break;
					case 1:
						puts("A trickle of blood runs down his face.");
						break;
					case 2:
						puts("A huge purple bruise is forming on the side of his face.");
						break;
				}
				lifeline++;
d110 13
a122 13
			else if (hurt < 20){
				switch(rnd(3)){
					case 0:
						puts("He staggers back quavering.");
						break;
					case 1:
						puts("He jumps back with his hand over the wound.");
						break;
					case 2:
						puts("His shirt falls open with a swath across the chest.");
						break;
				}
				lifeline += 5;
d124 13
a136 13
			else if (hurt < 30){
				switch(rnd(3)){
					case 0:
						printf("A bloody gash opens up on his %s side.\n",(rnd(2) ? "left" : "right"));
						break;
					case 1:
						puts("The steel bites home and scrapes along his ribs.");
						break;
					case 2:
						puts("You pierce him, and his breath hisses through clenched teeth.");
						break;
				}
				lifeline += 10;
d138 16
a153 16
			else if (hurt < 40){
				switch(rnd(3)){
					case 0:
						puts("You smite him to the ground.");
						if (strength - lifeline > 20)
							puts("But in a flurry of steel he regains his feet!");
						break;
					case 1:
						puts("The force of your blow sends him to his knees.");
						puts("His arm swings lifeless at his side.");
						break;
					case 2:
						puts("Clutching his blood drenched shirt, he collapses stunned.");
						break;
				}
				lifeline += 20;
d155 16
a170 16
			else {
				switch(rnd(3)){
					case 0:
						puts("His ribs crack under your powerful swing, flooding his lungs with blood.");
						break;
					case 1:
						puts("You shatter his upheld arm in a spray of blood.  The blade continues deep");
						puts("into his back, severing the spinal cord.");
						lifeline += 25;
						break;
					case 2:
						puts("With a mighty lunge the steel slides in, and gasping, he falls to the ground.");
						lifeline += 25;
						break;
				}
				lifeline += 30;
d172 13
a184 28
			break;

		case BACK:
			if (enemy == DARK && lifeline > strength * 0.33){
				puts("He throws you back against the rock and pummels your face.");
				if (testbit(inven,AMULET) || testbit(wear,AMULET)){
					printf("Lifting the amulet from you, ");
					if (testbit(inven,MEDALION) || testbit(wear,MEDALION)){
						puts("his power grows and the walls of\nthe earth tremble.");
						puts("When he touches the medallion, your chest explodes and the foundations of the\nearth collapse.");
						puts("The planet is consumed by darkness.");
						die(0);
					}
					if (testbit(inven,AMULET)){
						clearbit(inven,AMULET);
						carrying -= objwt[AMULET];
						encumber -= objcumber[AMULET];
					}
					else
						clearbit(wear,AMULET);
					puts("he flees down the dark caverns.");
					clearbit(location[position].objects,DARK);
					injuries[SKULL] = 1;
					followfight = btime;
					return (0);
				}
				else{
					puts("I'm afraid you have been killed.");
d187 14
d202 27
a228 14
			else{
				puts("You escape stunned and disoriented from the fight.");
				puts("A victorious bellow echoes from the battlescene.");
				if (back && position != back)
					move(back,BACK);
				else if (ahead &&position != ahead)
					move(ahead,AHEAD);
				else if (left && position != left)
					move(left,LEFT);
				else if (right && position != right)
					move(right,RIGHT);
				else
					move(location[position].down,AHEAD);
				return(0);
d230 13
a242 28

		case SHOOT:
			if (testbit(inven,LASER)){
				if (strength - lifeline <= 50){
					printf("The %s took a direct hit!\n",objsht[enemy]);
					lifeline += 50;
				}
				else {
					puts("With his bare hand he deflects the laser blast and whips the pistol from you!");
					clearbit(inven,LASER);
					setbit(location[position].objects,LASER);
					carrying -= objwt[LASER];
					encumber -= objcumber[LASER];
				}
			}
			else
				puts("Unfortunately, you don't have a blaster handy.");
			break;

		case DROP:
		case DRAW:
			cypher();
			btime--;
			break;
		
		default:
			puts("You don't have a chance, he is too quick.");
			break;
d245 1
a245 1
	if (lifeline >= strength){
d249 1
a249 1
		clearbit(location[position].objects,enemy);
d252 1
a252 1
		return(0);
d255 3
a257 3
	/* some embellisments */
	hurt = rnd(NUMOFINJURIES) - (testbit(inven,SHIELD) != 0) - (testbit(wear,MAIL) != 0) - (testbit(wear,HELM) != 0);
	hurt += (testbit(wear,AMULET) != 0) + (testbit(wear,MEDALION) != 0) + (testbit(wear,TALISMAN) != 0);
d259 2
a260 2
	hurt =	hurt >= NUMOFINJURIES ? NUMOFINJURIES -1 : hurt;
	if (!injuries[hurt]){
d263 1
a263 2
	}
	else
d265 1
a265 1
	if (injuries[SKULL] && injuries[INCISE] && injuries[NECK]){
@


1.4
log
@Remove trailing spaces on lines, use sane pathname sizes, and
use warn instead of perror.
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.3 1997/08/24 21:55:04 deraadt Exp $	*/
d65 1
a65 1
		die();
d185 1
a185 1
						die();
d202 1
a202 1
					die();
d273 1
a273 1
		die();
@


1.3
log
@various linux-based patches; from linux people; sent by jsm@@octomino.demon.co.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: com7.c,v 1.2 1997/06/30 19:56:32 kstailey Exp $	*/
d83 1
a83 1
			else 
@


1.2
log
@tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 1
a45 1
#include "externs.h"
d47 1
d59 1
a59 1
	time++;
d61 2
a62 2
	if (snooze > time)
		exhaustion = CYCLE/(snooze - time);
d67 1
a67 1
	if (snooze - time < 20)
d197 1
a197 1
					followfight = time;
d242 1
a242 1
			time--;
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
