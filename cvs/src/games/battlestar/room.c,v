head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.8
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.24
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.20
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.18
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.16
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.14
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.12
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.12
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.10
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.8
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2015.12.31.17.51.19;	author mestre;	state Exp;
branches;
next	1.10;
commitid	GSzV0GYeNlCgMbj0;

1.10
date	2014.10.26.07.03.47;	author brad;	state Exp;
branches;
next	1.9;
commitid	Ka0hkkBGKwairfjq;

1.9
date	2009.10.27.23.59.24;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.10.07.26.22;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.03.05.23.46;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.09.25.20.30.46;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	98.09.13.01.30.33;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	97.08.24.21.55.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.06.30.19.56.41;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Include only needed header files per each source file

OK tb@@
@
text
@/*	$OpenBSD: room.c,v 1.10 2014/10/26 07:03:47 brad Exp $	*/
/*	$NetBSD: room.c,v 1.3 1995/03/21 15:07:54 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>

#include "extern.h"

void
writedes(void)
{
	int     compass;
	const char   *p;
	int     c;

	printf("\n\t%s\n", location[position].name);
	if (beenthere[position] < ROOMDESC || verbose) {
		compass = NORTH;
		for (p = location[position].desc; (c = *p++) != 0;)
			if (c != '-' && c != '*' && c != '+') {
				if (c == '=')
					putchar('-');
				else
					putchar(c);
			} else {
				if (c != '*')
					printf("%s", truedirec(compass, c));
				compass++;
			}
	}
}

void
printobjs(void)
{
	unsigned int *p = location[position].objects;
	int     n;

	printf("\n");
	for (n = 0; n < NUMOFOBJECTS; n++)
		if (TestBit(p, n) && objdes[n])
			puts(objdes[n]);
}

void
whichway(struct room here)
{
	switch (direction) {

	case NORTH:
		left = here.west;
		right = here.east;
		ahead = here.north;
		back = here.south;
		break;

	case SOUTH:
		left = here.east;
		right = here.west;
		ahead = here.south;
		back = here.north;
		break;

	case EAST:
		left = here.north;
		right = here.south;
		ahead = here.east;
		back = here.west;
		break;

	case WEST:
		left = here.south;
		right = here.north;
		ahead = here.west;
		back = here.east;
		break;

	}
}

const char   *
truedirec(int way, char option)
{
	switch (way) {

	case NORTH:
		switch (direction) {
		case NORTH:
			return ("ahead");
		case SOUTH:
			return (option == '+' ? "behind you" : "back");
		case EAST:
			return ("left");
		case WEST:
			return ("right");
		}

	case SOUTH:
		switch (direction) {
		case NORTH:
			return (option == '+' ? "behind you" : "back");
		case SOUTH:
			return ("ahead");
		case EAST:
			return ("right");
		case WEST:
			return ("left");
		}

	case EAST:
		switch (direction) {
		case NORTH:
			return ("right");
		case SOUTH:
			return ("left");
		case EAST:
			return ("ahead");
		case WEST:
			return (option == '+' ? "behind you" : "back");
		}

	case WEST:
		switch (direction) {
		case NORTH:
			return ("left");
		case SOUTH:
			return ("right");
		case EAST:
			return (option == '+' ? "behind you" : "back");
		case WEST:
			return ("ahead");
		}

	default:
		printf("Error: room %d.  More than four directions wanted.", position);
		return ("!!");
	}
}

void
newway(int thisway)
{
	switch (direction) {

	case NORTH:
		switch (thisway) {
		case LEFT:
			direction = WEST;
			break;
		case RIGHT:
			direction = EAST;
			break;
		case BACK:
			direction = SOUTH;
			break;
		}
		break;
	case SOUTH:
		switch (thisway) {
		case LEFT:
			direction = EAST;
			break;
		case RIGHT:
			direction = WEST;
			break;
		case BACK:
			direction = NORTH;
			break;
		}
		break;
	case EAST:
		switch (thisway) {
		case LEFT:
			direction = NORTH;
			break;
		case RIGHT:
			direction = SOUTH;
			break;
		case BACK:
			direction = WEST;
			break;
		}
		break;
	case WEST:
		switch (thisway) {
		case LEFT:
			direction = SOUTH;
			break;
		case RIGHT:
			direction = NORTH;
			break;
		case BACK:
			direction = EAST;
			break;
		}
		break;
	}
}
@


1.10
log
@Add a format specifier for the printf.
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.9 2009/10/27 23:59:24 deraadt Exp $	*/
d32 2
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.8 2004/07/10 07:26:22 deraadt Exp $	*/
d53 1
a53 1
					printf(truedirec(compass, c));
@


1.8
log
@more ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.7 2003/06/03 03:01:38 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)room.c	8.2 (Berkeley) 4/28/95";
#else
static char rcsid[] = "$OpenBSD: room.c,v 1.7 2003/06/03 03:01:38 millert Exp $";
#endif
#endif /* not lint */
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.6 2000/07/03 05:23:46 pjanzen Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: room.c,v 1.6 2000/07/03 05:23:46 pjanzen Exp $";
d44 1
a44 1
writedes()
d68 1
a68 1
printobjs()
d80 1
a80 2
whichway(here)
	struct room here;
d116 1
a116 3
truedirec(way, option)
	int     way;
	char    option;
d175 1
a175 2
newway(thisway)
	int     thisway;
@


1.6
log
@Finding bugs in battlestar is like shooting fish in a barrel.
	Don't overflow beenthere[].  Add "verbose" option.
	Fix spelling (including embedded hyphens in descriptions) and grammar.
	"Kill" will now use the laser if you have no cutting implements.
	Formatting.
	You can do more things to the bathing goddess.
	A little less guess-the-word.  Occasionally better error messages,
particularly with "all" when nothing applies.
	"kick door" no longer segfaults.  Nor does "kill door".
More bugs remain...
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.5 1999/09/25 20:30:46 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: room.c,v 1.5 1999/09/25 20:30:46 pjanzen Exp $";
@


1.5
log
@Merge 4.4BSD-Lite2 and NetBSD, including improved save file handling of
jsm28@@cam.ac.uk.  Rename setbit() family of macros so as not to conflict
with <sys/param.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.4 1998/09/13 01:30:33 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: room.c,v 1.4 1998/09/13 01:30:33 pjanzen Exp $";
d55 1
a55 1
	if (beenthere[position] < 3) {
d58 6
a63 3
			if (c != '-' && c != '*' && c != '+')
				putchar(c);
			else {
@


1.4
log
@NetBSD merge, numerous patches from jsm28@@cam.ac.uk, spelling fixes, and
correct gid revoke.
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.3 1997/08/24 21:55:13 deraadt Exp $	*/
d39 1
a39 1
static char sccsid[] = "@@(#)room.c	8.1 (Berkeley) 5/31/93";
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d51 1
a51 1
	char   *p;
d57 1
a57 1
		for (p = location[position].desc; (c = *p++);)
d76 1
a76 1
		if (testbit(p, n) && objdes[n])
d117 1
a117 1
char   *
@


1.3
log
@various linux-based patches; from linux people; sent by jsm@@octomino.demon.co.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: room.c,v 1.2 1997/06/30 19:56:41 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$NetBSD: room.c,v 1.3 1995/03/21 15:07:54 cgd Exp $";
d50 3
a52 3
	int compass;
	register char *p;
	register c;
d57 1
a57 1
		for (p = location[position].desc; c = *p++;)
d71 2
a72 2
	register unsigned int *p = location[position].objects;
	register n;
d82 1
a82 1
struct room here;
d84 1
a84 1
	switch(direction) {
d86 27
a112 27
		case NORTH:
			left = here.west;
			right = here.east;
			ahead = here.north;
			back = here.south;
			break;
		
		case SOUTH:
			left = here.east;
			right = here.west;
			ahead = here.south;
			back = here.north;
			break;

		case EAST:
			left = here.north;
			right = here.south;
			ahead = here.east;
			back = here.west;
			break;

		case WEST:
			left = here.south;
			right = here.north;
			ahead = here.west;
			back = here.east;
			break;
d117 1
a117 1
char *
d119 2
a120 2
int way;
char option;
d122 1
a122 1
	switch(way) {
d124 2
d127 8
a134 10
			switch(direction) {
				case NORTH:
					return("ahead");
				case SOUTH:
					return(option == '+' ? "behind you" : "back");
				case EAST:
					return("left");
				case WEST:
					return("right");
			}
d136 4
d141 6
a146 10
			switch(direction) {
				case NORTH:
					return(option == '+' ? "behind you" : "back");
				case SOUTH:
					return("ahead");
				case EAST:
					return("right");
				case WEST:
					return("left");
			}
d148 6
d155 4
a158 10
			switch(direction) {
				case NORTH:
					return("right");
				case SOUTH:
					return("left");
				case EAST:
					return("ahead");
				case WEST:	
					return(option == '+' ? "behind you" : "back");
			}
d160 8
d169 2
a170 10
			switch(direction) {
				case NORTH:
					return("left");
				case SOUTH:
					return("right");
				case EAST:
					return(option == '+' ? "behind you" : "back");
				case WEST:
					return("ahead");
			}
d172 4
a175 4
		default:
			printf("Error: room %d.  More than four directions wanted.", position);
			return("!!");
      }
d180 1
a180 1
int thisway;
d182 1
a182 1
	switch(direction){
d184 43
a226 12
		case NORTH:
			switch(thisway){
				case LEFT:
					direction = WEST;
					break;
				case RIGHT:
					direction = EAST;
					break;
				case BACK:
					direction = SOUTH;
					break;
			}
d228 2
a229 12
		case SOUTH:
			switch(thisway){
				case LEFT:
					direction = EAST;
					break;
				case RIGHT:
					direction = WEST;
					break;
				case BACK:
					direction = NORTH;
					break;
			}
d231 2
a232 12
		case EAST:
			switch(thisway){
				case LEFT:
					direction = NORTH;
					break;
				case RIGHT:
					direction = SOUTH;
					break;
				case BACK:
					direction = WEST;
					break;
			}
d234 3
a236 14
		case WEST:
			switch(thisway){
				case LEFT:
					direction = SOUTH;
					break;
				case RIGHT:
					direction = NORTH;
					break;
				case BACK:
					direction = EAST;
					break;
			}
			break;
      }
@


1.2
log
@tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 1
a45 1
#include "externs.h"
d47 1
d68 1
d80 1
d178 1
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
