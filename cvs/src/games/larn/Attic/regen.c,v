head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.18
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.16
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.03.11.09.29.28;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	98.09.15.05.12.33;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	97.07.15.10.22.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.06;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@OK, this is a strange case.  At least some parts of this software is
copyrighted, and then marked "Copying for Profit is Prohibited", but
the author has passed away.  A number of people have tried to make
some sort of effort at trying to contact his estate, and have failed.
Therefore, lacking the ability to correct this copyright, we must
delete it.  I would bet strongly that this is not what the author
would have intended, but until we can get this resolved, this is the
action we must take.
@
text
@/*	$OpenBSD: regen.c,v 1.3 1998/09/15 05:12:33 pjanzen Exp $	*/
/*	$NetBSD: regen.c,v 1.5 1997/10/18 20:03:43 christos Exp $	*/

/* regen.c		Larn is copyrighted 1986 by Noah Morgan. */
#ifndef lint
static char rcsid[] = "$OpenBSD: regen.c,v 1.3 1998/09/15 05:12:33 pjanzen Exp $";
#endif				/* not lint */

#include "header.h"
#include "extern.h"

/*
 *	*******
 *	REGEN()
 *	*******
 *	regen()
 *
 *	subroutine to regenerate player hp and spells
 */
void
regen()
{
	int	i, flag;
	long	*d;

	d = c;
#ifdef EXTRA
	d[MOVESMADE]++;
#endif
	if (d[TIMESTOP]) {
		if (--d[TIMESTOP] <= 0)
			bottomline();
		return;
	}			/* for stop time spell */
	flag = 0;

	if (d[STRENGTH] < 3) {
		d[STRENGTH] = 3;
		flag = 1;
	}
	if ((d[HASTESELF] == 0) || ((d[HASTESELF] & 1) == 0))
		gltime++;

	if (d[HP] != d[HPMAX])
		if (d[REGENCOUNTER]-- <= 0) {	/* regenerate hit points	 */
			d[REGENCOUNTER] = 22 + (d[HARDGAME] << 1) - d[LEVEL];
			if ((d[HP] += d[REGEN]) > d[HPMAX])
				d[HP] = d[HPMAX];
			bottomhp();
		}
	if (d[SPELLS] < d[SPELLMAX])	/* regenerate spells	 */
		if (d[ECOUNTER]-- <= 0) {
			d[ECOUNTER] = 100 + 4 * (d[HARDGAME] - d[LEVEL] - d[ENERGY]);
			d[SPELLS]++;
			bottomspell();
		}
	if (d[HERO])
		if (--d[HERO] <= 0) {
			for (i = 0; i < 6; i++)
				d[i] -= 10;
			flag = 1;
		}
	if (d[ALTPRO])
		if (--d[ALTPRO] <= 0) {
			d[MOREDEFENSES] -= 3;
			flag = 1;
		}
	if (d[PROTECTIONTIME])
		if (--d[PROTECTIONTIME] <= 0) {
			d[MOREDEFENSES] -= 2;
			flag = 1;
		}
	if (d[DEXCOUNT])
		if (--d[DEXCOUNT] <= 0) {
			d[DEXTERITY] -= 3;
			flag = 1;
		}
	if (d[STRCNT])
		if (--d[STRCNT] <= 0) {
			d[STREXTRA] -= 3;
			flag = 1;
		}
	if (d[BLINDCOUNT])
		if (--d[BLINDCOUNT] <= 0) {
			cursors();
			lprcat("\nThe blindness lifts  ");
			lbeep();
		}
	if (d[CONFUSE])
		if (--d[CONFUSE] <= 0) {
			cursors();
			lprcat("\nYou regain your senses");
			lbeep();
		}
	if (d[GIANTSTR])
		if (--d[GIANTSTR] <= 0) {
			d[STREXTRA] -= 20;
			flag = 1;
		}
	if (d[CHARMCOUNT])
		if ((--d[CHARMCOUNT]) <= 0)
			flag = 1;
	if (d[INVISIBILITY])
		if ((--d[INVISIBILITY]) <= 0)
			flag = 1;
	if (d[CANCELLATION])
		if ((--d[CANCELLATION]) <= 0)
			flag = 1;
	if (d[WTW])
		if ((--d[WTW]) <= 0)
			flag = 1;
	if (d[HASTESELF])
		if ((--d[HASTESELF]) <= 0)
			flag = 1;
	if (d[AGGRAVATE])
		--d[AGGRAVATE];
	if (d[SCAREMONST])
		if ((--d[SCAREMONST]) <= 0)
			flag = 1;
	if (d[STEALTH])
		if ((--d[STEALTH]) <= 0)
			flag = 1;
	if (d[AWARENESS])
		--d[AWARENESS];
	if (d[HOLDMONST])
		if ((--d[HOLDMONST]) <= 0)
			flag = 1;
	if (d[HASTEMONST])
		--d[HASTEMONST];
	if (d[FIRERESISTANCE])
		if ((--d[FIRERESISTANCE]) <= 0)
			flag = 1;
	if (d[GLOBE])
		if (--d[GLOBE] <= 0) {
			d[MOREDEFENSES] -= 10;
			flag = 1;
		}
	if (d[SPIRITPRO])
		if (--d[SPIRITPRO] <= 0)
			flag = 1;
	if (d[UNDEADPRO])
		if (--d[UNDEADPRO] <= 0)
			flag = 1;
	if (d[HALFDAM])
		if (--d[HALFDAM] <= 0) {
			cursors();
			lprcat("\nYou now feel better ");
			lbeep();
		}
	if (d[SEEINVISIBLE])
		if (--d[SEEINVISIBLE] <= 0) {
			monstnamelist[INVISIBLESTALKER] = ' ';
			cursors();
			lprcat("\nYou feel your vision return to normal");
			lbeep();
		}
	if (d[ITCHING]) {
		if (d[ITCHING] > 1)
			if ((d[WEAR] != -1) || (d[SHIELD] != -1))
				if (rnd(100) < 50) {
					d[WEAR] = d[SHIELD] = -1;
					cursors();
					lprcat("\nThe hysteria of itching forces you to remove your armor!");
					lbeep();
					recalc();
					bottomline();
				}
		if (--d[ITCHING] <= 0) {
			cursors();
			lprcat("\nYou now feel the irritation subside!");
			lbeep();
		}
	}
	if (d[CLUMSINESS]) {
		if (d[WIELD] != -1)
			if (d[CLUMSINESS] > 1)
				if (item[playerx][playery] == 0)	/* only if nothing there */
					if (rnd(100) < 33)	/* drop your weapon due
								 * to clumsiness */
						drop_object((int) d[WIELD]);
		if (--d[CLUMSINESS] <= 0) {
			cursors();
			lprcat("\nYou now feel less awkward!");
			lbeep();
		}
	}
	if (flag)
		bottomline();
}
@


1.3
log
@NetBSD merge; also renamed some functions so as not to conflict with curses
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d6 1
a6 1
static char rcsid[] = "$OpenBSD$";
@


1.2
log
@gtime var -> gltime var
@
text
@d1 4
d6 2
a7 2
static char rcsid[] = "$NetBSD: regen.c,v 1.3 1995/03/23 08:34:11 cgd Exp $";
#endif /* not lint */
a8 1
/* regen.c 			Larn is copyrighted 1986 by Noah Morgan. */
d10 2
d13 6
a18 6
	*******
	REGEN()
	*******
	regen()

	subroutine to regenerate player hp and spells
d20 1
d22 4
a25 3
	{
	register int i,flag;
	register long *d;
d30 12
a41 5
	if (d[TIMESTOP])  { if(--d[TIMESTOP]<=0) bottomline();  return; }	/* for stop time spell */
	flag=0;

	if (d[STRENGTH]<3)	{ d[STRENGTH]=3; flag=1; }
	if ((d[HASTESELF]==0) || ((d[HASTESELF] & 1) == 0))
d45 4
a48 4
		if (d[REGENCOUNTER]-- <= 0)		/*	regenerate hit points	*/
			{
			d[REGENCOUNTER] = 22 + (d[HARDGAME]<<1) - d[LEVEL];
			if ((d[HP] += d[REGEN]) > d[HPMAX])  d[HP] = d[HPMAX];
d50 100
a149 33
			}

	if (d[SPELLS] < d[SPELLMAX])		/*	regenerate spells	*/
		if (d[ECOUNTER]-- <= 0)
			{
			d[ECOUNTER] = 100+4*(d[HARDGAME]-d[LEVEL]-d[ENERGY]);
			d[SPELLS]++;	bottomspell();
			}

	if (d[HERO])			if (--d[HERO]<=0) { for (i=0; i<6; i++) d[i] -= 10; flag=1; }
	if (d[ALTPRO])			if (--d[ALTPRO]<=0)			{ d[MOREDEFENSES]-=3; flag=1; }
	if (d[PROTECTIONTIME])	if (--d[PROTECTIONTIME]<=0)	{ d[MOREDEFENSES]-=2; flag=1; }
	if (d[DEXCOUNT])		if (--d[DEXCOUNT]<=0)		{ d[DEXTERITY]-=3; flag=1; }
	if (d[STRCOUNT])		if (--d[STRCOUNT]<=0)		{ d[STREXTRA]-=3; flag=1; }
	if (d[BLINDCOUNT])		if (--d[BLINDCOUNT]<=0)		{ cursors();  lprcat("\nThe blindness lifts  "); beep(); }
	if (d[CONFUSE])			if (--d[CONFUSE]<=0) { cursors();  lprcat("\nYou regain your senses"); beep(); }
	if (d[GIANTSTR])		if (--d[GIANTSTR]<=0) { d[STREXTRA] -= 20; flag=1; }
	if (d[CHARMCOUNT])		if ((--d[CHARMCOUNT]) <= 0) flag=1;
	if (d[INVISIBILITY])	if ((--d[INVISIBILITY]) <= 0) flag=1;
	if (d[CANCELLATION])	if ((--d[CANCELLATION]) <= 0) flag=1;
	if (d[WTW])				if ((--d[WTW]) <= 0) flag=1;
	if (d[HASTESELF])		if ((--d[HASTESELF]) <= 0) flag=1;
	if (d[AGGRAVATE])		--d[AGGRAVATE]; 
	if (d[SCAREMONST])		if ((--d[SCAREMONST]) <= 0) flag=1; 
	if (d[STEALTH])			if ((--d[STEALTH]) <= 0) flag=1; 
	if (d[AWARENESS])		--d[AWARENESS];
	if (d[HOLDMONST])		if ((--d[HOLDMONST]) <= 0) flag=1;
	if (d[HASTEMONST])		--d[HASTEMONST];
	if (d[FIRERESISTANCE])	if ((--d[FIRERESISTANCE]) <= 0) flag=1;
	if (d[GLOBE])			if (--d[GLOBE]<=0) { d[MOREDEFENSES]-=10; flag=1; }
	if (d[SPIRITPRO])		if (--d[SPIRITPRO] <= 0) flag=1;
	if (d[UNDEADPRO])		if (--d[UNDEADPRO] <= 0) flag=1;
	if (d[HALFDAM])			if (--d[HALFDAM]<=0)  { cursors();  lprcat("\nYou now feel better "); beep(); }
d151 21
a171 14
	  if (--d[SEEINVISIBLE]<=0)
		{ monstnamelist[INVISIBLESTALKER] = ' ';
		  cursors();  lprcat("\nYou feel your vision return to normal"); beep(); }
	if (d[ITCHING])
		{
		if (d[ITCHING]>1)
			if ((d[WEAR]!= -1) || (d[SHIELD]!= -1))
				if (rnd(100)<50)
					{
					d[WEAR]=d[SHIELD]= -1; cursors();
					lprcat("\nThe hysteria of itching forces you to remove your armor!"); 
					beep(); recalc();  bottomline();
					}
		if (--d[ITCHING]<=0) { cursors();  lprcat("\nYou now feel the irritation subside!"); beep(); }
d173 2
a174 2
	if (d[CLUMSINESS])
		{
d176 9
a184 5
			if (d[CLUMSINESS]>1)
			  if (item[playerx][playery]==0)	/* only if nothing there */
				if (rnd(100)<33) /* drop your weapon due to clumsiness */
					drop_object((int)d[WIELD]);
		if (--d[CLUMSINESS]<=0) { cursors();  lprcat("\nYou now feel less awkward!"); beep(); }
a185 1
	if (flag) bottomline();
d187 3
a189 1

@


1.1
log
@Initial revision
@
text
@d28 1
a28 1
		gtime++;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
