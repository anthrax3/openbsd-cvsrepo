head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.10
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.03.11.09.29.28;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2000.06.29.07.55.41;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.09.15.05.12.32;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.05;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.05;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@OK, this is a strange case.  At least some parts of this software is
copyrighted, and then marked "Copying for Profit is Prohibited", but
the author has passed away.  A number of people have tried to make
some sort of effort at trying to contact his estate, and have failed.
Therefore, lacking the ability to correct this copyright, we must
delete it.  I would bet strongly that this is not what the author
would have intended, but until we can get this resolved, this is the
action we must take.
@
text
@/*	$OpenBSD: help.c,v 1.3 2000/06/29 07:55:41 pjanzen Exp $	*/
/*	$NetBSD: help.c,v 1.4 1997/10/18 20:03:24 christos Exp $	*/

/* help.c		Larn is copyrighted 1986 by Noah Morgan. */
#ifndef lint
static char rcsid[] = "$OpenBSD: help.c,v 1.3 2000/06/29 07:55:41 pjanzen Exp $";
#endif /* not lint */

#include <unistd.h>

#include "header.h"
#include "extern.h"
/*
 *	help function to display the help info
 *
 *	format of the .larn.help file
 *
 *	1st character of file:	# of pages of help available (ascii digit)
 *	page (23 lines) for the introductory message (not counted in above)
 *	pages of help text (23 lines per page)
 */
void
help()
{
	int	i, j;
	char	tmbuf[128];	/* intermediate translation buffer
					 * when not a VT100 */
	if ((j = openhelp()) < 0)
		return;		/* open the help file and get # pages */
	for (i = 0; i < 23; i++)
		lgetl();	/* skip over intro message */
	for (; j > 0; j--) {
		clear();
		for (i = 0; i < 23; i++)
		{
			tmcapcnv(tmbuf, lgetl());
			lprcat(tmbuf);
		}		/* intercept \33's */
		if (j > 1) {
			lprcat("    ---- Press ");
			lstandout("return");
			lprcat(" to exit, ");
			lstandout("space");
			lprcat(" for more help ---- ");
			i = 0;
			while ((i != ' ') && (i != '\n') && (i != '\33'))
				i = lgetchar();
			if ((i == '\n') || (i == '\33')) {
				lrclose();
				setscroll();
				drawscreen();
				return;
			}
		}
	}
	lrclose();
	retcont();
	drawscreen();
}

/*
 *	function to display the welcome message and background
 */
void
welcome()
{
	int	i;
	char	tmbuf[128];	/* intermediate translation buffer
					 * when not a VT100 */
	if (openhelp() < 0)
		return;		/* open the help file */
	clear();
	for (i = 0; i < 23; i++)
	{
		tmcapcnv(tmbuf, lgetl());
		lprcat(tmbuf);
	}			/* intercept \33's */
	lrclose();
	retcont();		/* press return to continue */
}

/*
 *	function to say press return to continue and reset scroll when done
 */
void
retcont()
{
	cursor(1, 24);
	lprcat("Press ");
	lstandout("return");
	lprcat(" to continue: ");
	while (lgetchar() != '\n');
	setscroll();
}

/*
 *	routine to open the help file and return the first character - '0'
 */
int
openhelp()
{
	if (lopen(helpfile) < 0) {
		lprintf("Can't open help file \"%s\" ", helpfile);
		lflush();
		sleep(4);
		drawscreen();
		setscroll();
		return (-1);
	}
	resetscroll();
	return (lgetc() - '0');
}
@


1.3
log
@Prune some obsolete defines, in particular VT100.  Eventually curses will
  replace termios.
Use system-defined limits for path lengths and usernames.
Use strlcpy() for convenience and to avoid a possible buffer overflow or two.
Various small tweaks.
@
text
@d1 1
a1 1
/*	$OpenBSD: help.c,v 1.2 1998/09/15 05:12:32 pjanzen Exp $	*/
d6 1
a6 1
static char rcsid[] = "$OpenBSD: help.c,v 1.2 1998/09/15 05:12:32 pjanzen Exp $";
@


1.2
log
@NetBSD merge; also renamed some functions so as not to conflict with curses
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d6 1
a6 1
static char rcsid[] = "$OpenBSD$";
a25 1
#ifndef VT100
a27 1
#endif	/* VT100 */
a34 4
#ifdef VT100
			lprcat(lgetl());	/* print out each line that
						 * we read in */
#else	/* VT100 */
a38 1
#endif	/* VT100 */
a67 1
#ifndef VT100
a69 1
#endif	/* VT100 */
a73 3
#ifdef VT100
		lprcat(lgetl());/* print out each line that we read in */
#else	/* VT100 */
a77 1
#endif	/* VT100 */
@


1.1
log
@Initial revision
@
text
@d1 4
d6 1
a6 1
static char rcsid[] = "$NetBSD: help.c,v 1.3 1995/03/23 08:33:33 cgd Exp $";
d9 2
a10 1
/*	help.c		Larn is copyrighted 1986 by Noah Morgan. */
d12 1
d14 1
a14 1
 *	help function to display the help info	
d22 1
a22 1
extern char helpfile[];
d24 2
a25 2
	{
	register int i,j;
d27 8
a34 6
	char tmbuf[128];	/* intermediate translation buffer when not a VT100 */
#endif VT100
	if ((j=openhelp()) < 0)  return;	/* open the help file and get # pages */
	for (i=0; i<23; i++) lgetl();	/* skip over intro message */
	for (;  j>0; j--)
		{
d36 1
a36 1
		for (i=0; i<23; i++)
d38 13
a50 8
			lprcat(lgetl());	/* print out each line that we read in */
#else VT100
			{ tmcapcnv(tmbuf,lgetl());  lprcat(tmbuf); } /* intercept \33's */
#endif VT100
		if (j>1)
			{
			lprcat("    ---- Press ");  standout("return");
			lprcat(" to exit, ");  standout("space");
d52 8
a59 5
			i=0; while ((i!=' ') && (i!='\n') && (i!='\33')) i=getchar();
			if ((i=='\n') || (i=='\33'))
				{
				lrclose();  setscroll();  drawscreen();  return;
				}
a61 1
	lrclose();  retcont();  drawscreen();
d63 4
d71 1
d73 2
a74 2
	{
	register int i;
d76 5
a80 3
	char tmbuf[128];	/* intermediate translation buffer when not a VT100 */
#endif VT100
	if (openhelp() < 0)  return;   	/* open the help file */
d82 1
a82 1
	for(i=0; i<23; i++)
d84 10
a93 6
			lprcat(lgetl());	/* print out each line that we read in */
#else VT100
			{ tmcapcnv(tmbuf,lgetl());  lprcat(tmbuf); } /* intercept \33's */
#endif VT100
	lrclose();  retcont();	/* press return to continue */
	}
d98 1
d100 6
a105 3
	{
	cursor(1,24); lprcat("Press "); standout("return");
	lprcat(" to continue: ");   while (getchar() != '\n');
d107 1
a107 1
	}
d112 1
d114 8
a121 7
	{
	if (lopen(helpfile)<0)
		{
		lprintf("Can't open help file \"%s\" ",helpfile);
		lflush(); sleep(4);	drawscreen();	setscroll(); return(-1);
		}
	resetscroll();  return(lgetc() - '0');
d123 3
a125 1

@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
