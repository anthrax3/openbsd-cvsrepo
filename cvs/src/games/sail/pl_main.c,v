head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.8
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.14
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.10
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.8
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.6
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.4
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.7.0.10
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.8
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2016.01.08.20.26.33;	author mestre;	state Exp;
branches;
next	1.15;
commitid	er3iaGFzAlZtZ8NY;

1.15
date	2015.12.31.16.44.22;	author mestre;	state Exp;
branches;
next	1.14;
commitid	2lAH78sqshL9k4xy;

1.14
date	2015.08.22.14.47.41;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	vWCbqNWL9DL2UkGT;

1.13
date	2014.03.11.07.42.55;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.27.23.59.27;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.11.02.18.15.02;	author ray;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.06.02.03.13;	author avsm;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.03.01.41;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.06.18.50.38;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.17.20.15.00;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	99.06.13.16.43.12;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.03.27.05.07.07;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	99.03.26.02.35.53;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	99.01.18.06.20.53;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.03.31.03.30.06;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.21;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@ANSIfy sail(6) plus some cleanup

OK tb@@
@
text
@/*	$OpenBSD: pl_main.c,v 1.15 2015/12/31 16:44:22 mestre Exp $	*/
/*	$NetBSD: pl_main.c,v 1.5 1995/04/24 12:25:25 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <err.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "extern.h"
#include "player.h"

void
pl_main(void)
{
	initialize();
	Msg("Aye aye, Sir");
	play();
}

void
initialize(void)
{
	struct File *fp;
	struct ship *sp;
	char captain[20];
	char message[60];
	int load;
	int n;
	char *nameptr;
	int nat[NNATION];

	if (game < 0) {
		(void) puts("Choose a scenario:\n");
		(void) puts("\n\tNUMBER\tSHIPS\tIN PLAY\tTITLE");
		for (n = 0; n < NSCENE; n++) {
			/* ( */
			printf("\t%d):\t%d\t%s\t%s\n", n, scene[n].vessels,
				sync_exists(n) ? "YES" : "no",
				scene[n].name);
		}
reprint:
		printf("\nScenario number? ");
		(void) fflush(stdout);
		(void) scanf("%d", &game);
		while (getchar() != '\n' && !feof(stdin))
			;
	}
	if (game < 0 || game >= NSCENE)
		errx(1, "Very funny.");
	cc = &scene[game];
	ls = SHIP(cc->vessels);

	for (n = 0; n < NNATION; n++)
		nat[n] = 0;
	foreachship(sp) {
		if (sp->file == NULL &&
		    (sp->file = calloc(1, sizeof (struct File))) == NULL)
			err(1, NULL);
		sp->file->index = sp - SHIP(0);
		sp->file->stern = nat[sp->nationality]++;
		sp->file->dir = sp->shipdir;
		sp->file->row = sp->shiprow;
		sp->file->col = sp->shipcol;
	}
	windspeed = cc->windspeed;
	winddir = cc->winddir;

	(void) signal(SIGHUP, choke);
	(void) signal(SIGINT, choke);

	hasdriver = sync_exists(game);
	if (sync_open() < 0)
		err(1, "syncfile");

	if (hasdriver) {
		(void) puts("Synchronizing with the other players...");
		(void) fflush(stdout);
		if (Sync() < 0)
			leave(LEAVE_SYNC);
	}
	for (;;) {
		foreachship(sp)
			if (sp->file->captain[0] == 0 && !sp->file->struck
			    && sp->file->captured == 0)
				break;
		if (sp >= ls) {
			(void) puts("All ships taken in that scenario.");
			foreachship(sp)
				free((char *)sp->file);
			sync_close(0);
			people = 0;
			goto reprint;
		}
		if (randomize) {
			player = sp - SHIP(0);
		} else {
			printf("%s\n\n", cc->name);
			foreachship(sp)
				printf("  %2d:  %-10s %-15s  (%-2d pts)   %s\n",
					sp->file->index,
					countryname[sp->nationality],
					sp->shipname,
					sp->specs->pts,
					saywhat(sp, 1));
			printf("\nWhich ship (0-%d)? ", cc->vessels-1);
			(void) fflush(stdout);
			if (scanf("%d", &player) != 1 || player < 0
			    || player >= cc->vessels) {
				while (getchar() != '\n' && !feof(stdin))
					;
				if (feof(stdin)) {
					printf("\nExiting...\n");
					leave(LEAVE_QUIT);
				}
				(void) puts("Say what?");
				player = -1;
			} else
				while (getchar() != '\n' && !feof(stdin))
					;
		}
		if (player < 0)
			continue;
		if (Sync() < 0)
			leave(LEAVE_SYNC);
		fp = SHIP(player)->file;
		if (fp->captain[0] || fp->struck || fp->captured != 0)
			(void) puts("That ship is taken.");
		else
			break;
	}

	ms = SHIP(player);
	mf = ms->file;
	mc = ms->specs;

	Write(W_BEGIN, ms, 0, 0, 0, 0);
	if (Sync() < 0)
		leave(LEAVE_SYNC);

	(void) signal(SIGCHLD, child);
	if (!hasdriver)
		switch (fork()) {
		case 0:
			longjmp(restart, MODE_DRIVER);
		case -1:
			perror("fork");
			leave(LEAVE_FORK);
			break;
		default:
			hasdriver++;
		}

	printf("Your ship is the %s, a %d gun %s (%s crew).\n",
		ms->shipname, mc->guns, classname[mc->class],
		qualname[mc->qual]);
	if ((nameptr = (char *) getenv("SAILNAME")) && *nameptr)
		(void) strlcpy(captain, nameptr, sizeof captain);
	else {
		(void) printf("Your name, Captain? ");
		(void) fflush(stdout);
		if (fgets(captain, sizeof captain, stdin) == NULL ||
		    captain[0] == '\0' || captain[0] == '\n')
			(void) strlcpy(captain, "no name", sizeof captain);
		else if (captain[strlen(captain) - 1] == '\n')
		    captain[strlen(captain) - 1] = '\0';
	}
	Writestr(W_CAPTAIN, ms, captain);
	for (n = 0; n < 2; n++) {
		char buf[10];

		printf("\nInitial broadside %s (grape, chain, round, double): ",
			n ? "right" : "left");
		(void) fflush(stdout);
		(void) scanf("%9s", buf);
		switch (*buf) {
		case 'g':
			load = L_GRAPE;
			break;
		case 'c':
			load = L_CHAIN;
			break;
		case 'r':
			load = L_ROUND;
			break;
		case 'd':
			load = L_DOUBLE;
			break;
		default:
			load = L_ROUND;
		}
		if (n) {
			mf->loadR = load;
			mf->readyR = R_LOADED|R_INITIAL;
		} else {
			mf->loadL = load;
			mf->readyL = R_LOADED|R_INITIAL;
		}
	}

	printf("\n");
	(void) fflush(stdout);
	initscreen();
	draw_board();
	(void) snprintf(message, sizeof message, "Captain %s assuming command",
			captain);
	Writestr(W_SIGNAL, ms, message);
	newturn(0);
}
@


1.15
log
@Include only needed header files per each source file

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.14 2015/08/22 14:47:41 deraadt Exp $	*/
a42 1
/*ARGSUSED*/
d44 1
a44 1
pl_main()
d52 1
a52 1
initialize()
@


1.14
log
@remove malloc/calloc/realloc* casts, due to stdlib.h being present; ok millert krw
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.13 2014/03/11 07:42:55 guenther Exp $	*/
d33 3
a35 3
#include "player.h"
#include <sys/types.h>
#include <sys/wait.h>
d37 1
d39 3
a41 1
#include <err.h>
@


1.13
log
@lint is dead (long live the lint!)
Declare play() and pl_main() as __dead, to solve the original problem
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.12 2009/10/27 23:59:27 deraadt Exp $	*/
d86 1
a86 1
		    (sp->file = (struct File *)calloc(1, sizeof (struct File))) == NULL)
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.11 2006/11/02 18:15:02 ray Exp $	*/
d41 1
a41 1
int
a46 1
	return 0;			/* for lint,  play() never returns */
a173 1
			/*NOTREACHED*/
@


1.11
log
@Check fgets failure and clarify character checks.

OK moritz@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.10 2003/07/06 02:03:13 avsm Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)pl_main.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.10 2003/07/06 02:03:13 avsm Exp $";
#endif
#endif /* not lint */
@


1.10
log
@convert some strncpy->strlcpy
pjanzen@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.9 2003/06/03 03:01:41 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.9 2003/06/03 03:01:41 millert Exp $";
d200 2
a201 2
		(void) fgets(captain, sizeof captain, stdin);
		if (!*captain || *captain == '\n')
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.8 2003/04/06 18:50:38 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.8 2003/04/06 18:50:38 deraadt Exp $";
d196 1
a196 1
		(void) strncpy(captain, nameptr, sizeof captain);
@


1.8
log
@2451 lines of strdup/sprintf/strcpy whacking.  mostly ok'd by pjanzen
already, but he may have later changes to make still.
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.7 2001/02/17 20:15:00 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.7 2001/02/17 20:15:00 pjanzen Exp $";
@


1.7
log
@Use err() rather than errx() immediately after alloc failure.
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.6 1999/06/13 16:43:12 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.6 1999/06/13 16:43:12 pjanzen Exp $";
d206 1
a206 1
			(void) strcpy(captain, "no name");
@


1.6
log
@Don't barf on ^D during initial questions
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.5 1999/03/27 05:07:07 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.5 1999/03/27 05:07:07 pjanzen Exp $";
d100 1
a100 1
			errx(1, "out of memory");
@


1.5
log
@Fix rev 1.4
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.4 1999/03/26 02:35:53 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.4 1999/03/26 02:35:53 pjanzen Exp $";
d87 1
a87 1
		while (getchar() != '\n')
d151 1
a151 1
				while (getchar() != '\n')
d153 4
d160 1
a160 1
				while (getchar() != '\n')
d243 2
@


1.4
log
@fix sizeof/strlen typo and limit scanf length; from FreeBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_main.c,v 1.3 1999/01/18 06:20:53 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: pl_main.c,v 1.3 1999/01/18 06:20:53 pjanzen Exp $";
d201 1
a201 1
		if (!*captain)
d203 2
a204 2
		else
		    captain[sizeof(captain) - 1] = '\0';
@


1.3
log
@NetBSD merge with additional fixes from jsm28@@cam.ac.uk.  This game still
needs much more work.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d67 1
a67 1
	char captain[80];
d204 1
a204 1
		    captain[strlen(captain) - 1] = '\0';
a205 1
	captain[sizeof captain - 1] = '\0';
d213 1
a213 1
		(void) scanf("%s", buf);
@


1.2
log
@Quick fix to shut up the compiler and not to printf() while in curses.
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: pl_main.c,v 1.5 1995/04/24 12:25:25 cgd Exp $";
d48 3
a50 2

void choke(), child();
d53 1
a55 1

d57 1
a57 1
	Signal("Aye aye, Sir", (struct ship *)0);
d62 1
d65 2
a66 2
	register struct File *fp;
	register struct ship *sp;
d70 1
a70 1
	register int n;
d90 2
a91 4
	if (game < 0 || game >= NSCENE) {
		(void) puts("Very funny.");
		exit(1);
	}
d99 2
a100 4
		    (sp->file = (struct File *)calloc(1, sizeof (struct File))) == NULL) {
			(void) puts("OUT OF MEMORY");
			exit(1);
		}
d114 2
a115 4
	if (sync_open() < 0) {
		perror("sail: syncfile");
		exit(1);
	}
d174 1
a174 1
	Write(W_BEGIN, ms, 0, 0, 0, 0, 0);
d207 1
a207 1
	Write(W_CAPTAIN, ms, 1, (long)captain, 0, 0, 0);
a239 5
	/* SCREENTEST calls initscr */
	if (!SCREENTEST()) {
		printf("Can't sail on this terminal.\n");
		exit(1);
	}
d242 4
a245 3
	(void) sprintf(message, "Captain %s assuming command", captain);
	Write(W_SIGNAL, ms, 1, (long)message, 0, 0, 0);
	newturn();
@


1.1
log
@Initial revision
@
text
@a53 4
	if (!SCREENTEST()) {
		printf("Can't sail on this terminal.\n");
		exit(1);
	}
d243 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
