head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.6
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.10.0.18
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.10
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.14
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.12
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.8
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.6
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.01.08.20.26.33;	author mestre;	state Exp;
branches;
next	1.11;
commitid	er3iaGFzAlZtZ8NY;

1.11
date	2015.12.31.16.44.22;	author mestre;	state Exp;
branches;
next	1.10;
commitid	2lAH78sqshL9k4xy;

1.10
date	2011.11.06.01.43.50;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.27.23.59.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.10.00.03.01;	author david;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.03.01.41;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.07.03.44.29;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.01.18.21.53.22;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	99.01.18.06.20.53;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	97.08.05.05.34.36;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.08.04.19.24.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.21;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@ANSIfy sail(6) plus some cleanup

OK tb@@
@
text
@/*	$OpenBSD: pl_1.c,v 1.11 2015/12/31 16:44:22 mestre Exp $	*/
/*	$NetBSD: pl_1.c,v 1.3 1995/04/22 10:37:07 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/wait.h>

#include <errno.h>
#include <signal.h>
#include <stdlib.h>
#include <unistd.h>

#include "extern.h"
#include "player.h"

#ifndef __GNUC__
#define __attribute__(x)
#endif

/*
 * If we get here before a ship is chosen, then ms == 0 and
 * we don't want to update the score file, or do any Write's either.
 * We can assume the sync file is already created and may need
 * to be removed.
 * Of course, we don't do any more Sync()'s if we got here
 * because of a Sync() failure.
 */
void
leave(int conditions)
{
	(void) signal(SIGHUP, SIG_IGN);
	(void) signal(SIGINT, SIG_IGN);
	(void) signal(SIGQUIT, SIG_IGN);
	(void) signal(SIGALRM, SIG_IGN);
	(void) signal(SIGCHLD, SIG_DFL);

	if (done_curses) {
		Msg("It looks like you've had it!");
		switch (conditions) {
		case LEAVE_QUIT:
			break;
		case LEAVE_CAPTURED:
			Msg("Your ship was captured.");
			break;
		case LEAVE_HURRICAN:
			Msg("Hurricane!  All ships destroyed.");
			break;
		case LEAVE_DRIVER:
			Msg("The driver died.");
			break;
		case LEAVE_SYNC:
			Msg("Synchronization error.");
			break;
		default:
			Msg("A funny thing happened (%d).", conditions);
		}
	} else {
		switch (conditions) {
		case LEAVE_QUIT:
			break;
		case LEAVE_DRIVER:
			printf("The driver died.\n");
			break;
		case LEAVE_FORK:
			perror("fork");
			break;
		case LEAVE_SYNC:
			printf("Synchronization error\n.");
			break;
		default:
			printf("A funny thing happened (%d).\n",
				conditions);
		}
	}

	if (ms != 0) {
		logger(ms);
		if (conditions != LEAVE_SYNC) {
			makemsg(ms, "Captain %s relinquishing.",
				mf->captain);
			Write(W_END, ms, 0, 0, 0, 0);
			(void) Sync();
		}
	}
	sync_close(!hasdriver);
	sleep(5);
	cleanupscreen();
	exit(0);
}

void
choke(int n __attribute__((unused)))
{
	leave(LEAVE_QUIT);
}

void
child(int n __attribute__((unused)))
{
	int status;
	int pid;
	int save_errno = errno;
	
	(void) signal(SIGCHLD, SIG_DFL);
	do {
		pid = waitpid((pid_t)-1, &status, WNOHANG);
		if (pid < 0 || (pid > 0 && !WIFSTOPPED(status)))
			hasdriver = 0;
	} while (pid > 0);
	(void) signal(SIGCHLD, child);
	errno = save_errno;
}
@


1.11
log
@Include only needed header files per each source file

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.10 2011/11/06 01:43:50 guenther Exp $	*/
d56 1
a56 2
leave(conditions)
	int conditions;
d119 1
a119 2
choke(n)
	int n __attribute__((unused));
d125 1
a125 2
child(n)
	int n __attribute__((unused));
@


1.10
log
@union wait is dead, ancient history; stop using it

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.9 2009/10/27 23:59:27 deraadt Exp $	*/
d33 2
a34 2
#include "player.h"
#include <sys/types.h>
d36 1
a36 1
#include <sys/wait.h>
d39 3
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.8 2003/07/10 00:03:01 david Exp $	*/
d127 1
a127 1
	union wait status;
d133 1
a133 1
		pid = wait3((int *)&status, WNOHANG, (struct rusage *)0);
@


1.8
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.7 2003/06/03 03:01:41 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)pl_1.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: pl_1.c,v 1.7 2003/06/03 03:01:41 millert Exp $";
#endif
#endif /* not lint */
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.6 2002/01/07 03:44:29 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: pl_1.c,v 1.6 2002/01/07 03:44:29 millert Exp $";
d45 1
@


1.6
log
@To disable a SIGCHLD signal handler use SIG_DFL, *not* SIG_IGN
which now has a different meaning.
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.5 1999/01/18 21:53:22 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: pl_1.c,v 1.5 1999/01/18 21:53:22 pjanzen Exp $";
@


1.5
log
@Only use __attribute__ if __GNUC__ is defined
@
text
@d1 1
a1 1
/*	$OpenBSD: pl_1.c,v 1.4 1999/01/18 06:20:53 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: pl_1.c,v 1.4 1999/01/18 06:20:53 pjanzen Exp $";
d71 1
a71 1
	(void) signal(SIGCHLD, SIG_IGN);
d142 1
a142 1
	(void) signal(SIGCHLD, SIG_IGN);
@


1.4
log
@NetBSD merge with additional fixes from jsm28@@cam.ac.uk.  This game still
needs much more work.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d51 4
d129 1
a129 1
	int n;
d136 1
a136 1
	int n;
@


1.3
log
@pull errno.h in
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: pl_1.c,v 1.3 1995/04/22 10:37:07 cgd Exp $";
d49 1
d59 1
d61 1
a61 1
int conditions;
d70 1
a70 2
		Signal("It looks like you've had it!",
			(struct ship *)0);
d75 1
a75 2
			Signal("Your ship was captured.",
				(struct ship *)0);
d78 1
a78 2
			Signal("Hurricane!  All ships destroyed.",
				(struct ship *)0);
d81 1
a81 1
			Signal("The driver died.", (struct ship *)0);
d84 1
a84 1
			Signal("Synchronization error.", (struct ship *)0);
d87 1
a87 2
			Signal("A funny thing happened (%d).",
				(struct ship *)0, conditions);
d109 1
a109 1
		log(ms);
d111 3
a113 3
			makesignal(ms, "Captain %s relinquishing.",
				(struct ship *)0, mf->captain);
			Write(W_END, ms, 0, 0, 0, 0, 0);
d118 1
d124 2
a125 1
choke()
d131 2
a132 1
child()
d141 1
a141 1
		if (pid < 0 || pid > 0 && !WIFSTOPPED(status))
@


1.2
log
@save errno in sigchld handlers
@
text
@d46 1
@


1.1
log
@Initial revision
@
text
@d133 2
a134 1

d142 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
