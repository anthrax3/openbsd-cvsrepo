head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.11.0.22
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.01.09.18.33.15;	author mestre;	state Exp;
branches;
next	1.14;
commitid	cGEyAVlKS2f51J9L;

1.14
date	2016.01.07.18.25.52;	author millert;	state Exp;
branches;
next	1.13;
commitid	QoDmtTLVsyK4ihAo;

1.13
date	2015.09.27.05.13.11;	author guenther;	state Exp;
branches;
next	1.12;
commitid	XzWkIYKZztPpIW70;

1.12
date	2015.01.15.17.13.37;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	Th3ebMhKUXsQH7OO;

1.11
date	2009.10.27.23.59.25;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.16.14.19.51;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.19.09.00.54;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.19.06.30.56;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.16.21.22.36;	author camield;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.06.22.59.13;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.28.23.41.46;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.24.00.56.00;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	97.01.17.07.11.35;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@This diff is rather large, but it's just simply removing unnecessary headers
, remove some lint-style comments, add missing void to functions without args,
also some function prototypes (extern) were missing their args, so I added them
as they were defined in hack.h

OK tb@@ on separate diffs
@
text
@/*	$OpenBSD: hack.tty.c,v 1.14 2016/01/07 18:25:52 millert Exp $	*/

/*-
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Copyright (c) 1985, Stichting Centrum voor Wiskunde en Informatica,
 * Amsterdam
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * - Neither the name of the Stichting Centrum voor Wiskunde en
 * Informatica, nor the names of its contributors may be used to endorse or
 * promote products derived from this software without specific prior
 * written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1982 Jay Fenlason <hack@@gnu.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* hack.tty.c - version 1.0.3 */
/* With thanks to the people who sent code for SYSV - hpscdi!jon,
   arnold@@ucsf-cgl, wcs@@bo95b, cbcephus!pds and others. */

#include <stdio.h>
#include <stdlib.h>
#include <termios.h>

#include "hack.h"

static char erase_char, kill_char;
static boolean settty_needed = FALSE;
struct termios inittyb, curttyb;

static void setctty(void);

/*
 * Get initial state of terminal,
 * and switch off tab expansion if necessary.
 * Called by startup() in termcap.c and after returning from ! or ^Z
 */
void
gettty(void)
{
	if(tcgetattr(0, &inittyb) < 0)
		perror("Hack (gettty)");
	curttyb = inittyb;
	erase_char = inittyb.c_cc[VERASE];
	kill_char = inittyb.c_cc[VKILL];
	getioctls();

	/* do not expand tabs - they might be needed inside a cm sequence */
	if(curttyb.c_oflag & OXTABS) {
		curttyb.c_oflag &= ~OXTABS;
		setctty();
	}
	settty_needed = TRUE;
}

/* reset terminal to original state */
void
settty(char *s)
{
	clr_screen();
	end_screen();
	if(s) printf("%s", s);
	(void) fflush(stdout);
	if(tcsetattr(0, TCSADRAIN, &inittyb) < 0)
		perror("Hack (settty)");
	flags.echo = (inittyb.c_lflag & ECHO) ? ON : OFF;
	flags.cbreak = (inittyb.c_lflag & ICANON) ? OFF : ON;
	setioctls();
}

static void
setctty(void)
{
	if(tcsetattr(0, TCSADRAIN, &curttyb) < 0)
		perror("Hack (setctty)");
}

void
setftty(void)
{
	int change = 0;
	flags.cbreak = ON;
	flags.echo = OFF;
	/* Should use (ECHO|CRMOD) here instead of ECHO */
	if(curttyb.c_lflag & ECHO){
		curttyb.c_lflag &= ~ECHO;
		change++;
	}
	if(curttyb.c_lflag & ICANON){
		curttyb.c_lflag &= ~ICANON;
		/* be satisfied with one character; no timeout */
		curttyb.c_cc[VMIN] = 1;
		curttyb.c_cc[VTIME] = 0;
		/* we need to be able to read ^Z */
		curttyb.c_cc[VSUSP] = _POSIX_VDISABLE;
		change++;
	}
	if(change){
		setctty();
	}
	start_screen();
}


/* fatal error */
void
error(const char *s, ...)
{
	va_list ap;

	if(settty_needed)
		settty(NULL);
	va_start(ap, s);
	vprintf(s, ap);
	va_end(ap);
	putchar('\n');
	exit(1);
}

/*
 * Read a line closed with '\n' into the array char bufp[BUFSZ].
 * (The '\n' is not stored. The string is closed with a '\0'.)
 * Reading can be interrupted by an escape ('\033') - now the
 * resulting string is "\033".
 */
void
getlin(char *bufp)
{
	char *obufp = bufp;
	int c;

	flags.toplin = 2;		/* nonempty, no --More-- required */
	for(;;) {
		(void) fflush(stdout);
		if((c = getchar()) == EOF) {
			*bufp = 0;
			return;
		}
		if(c == '\033') {
			*obufp = c;
			obufp[1] = 0;
			return;
		}
		if(c == erase_char || c == '\b') {
			if(bufp != obufp) {
				bufp--;
				putstr("\b \b"); /* putsym converts \b */
			} else	hackbell();
		} else if(c == '\n') {
			*bufp = 0;
			return;
		} else if(' ' <= c && c < '\177') {
				/* avoid isprint() - some people don't have it
				   ' ' is not always a printing char */
			*bufp = c;
			bufp[1] = 0;
			putstr(bufp);
			if(bufp-obufp < BUFSZ-1 && bufp-obufp < COLNO)
				bufp++;
		} else if(c == kill_char || c == '\177') { /* Robert Viduya */
				/* this test last - @@ might be the kill_char */
			while(bufp != obufp) {
				bufp--;
				putstr("\b \b");
			}
		} else
			hackbell();
	}
}

void
getret(void)
{
	cgetret("");
}

void
cgetret(char *s)
{
	putsym('\n');
	if(flags.standout)
		standoutbeg();
	putstr("Hit ");
	putstr(flags.cbreak ? "space" : "return");
	putstr(" to continue: ");
	if(flags.standout)
		standoutend();
	xwaitforspace(s);
}

char morc;	/* tell the outside world what char he used */

/* s: chars allowed besides space or return */
void
xwaitforspace(char *s)
{
	int c;

	morc = 0;

	while((c = readchar()) != '\n') {
	    if(flags.cbreak) {
		if(c == ' ') break;
		if(s && strchr(s,c)) {
			morc = c;
			break;
		}
		hackbell();
	    }
	}
}

char *
parse(void)
{
	static char inputline[COLNO];
	int foo;

	flags.move = 1;
	if(!Invisible) curs_on_u(); else home();
	while((foo = readchar()) >= '0' && foo <= '9')
		multi = 10*multi+foo-'0';
	if(multi) {
		multi--;
		save_cm = inputline;
	}
	inputline[0] = foo;
	inputline[1] = 0;
	if(foo == 'f' || foo == 'F'){
		inputline[1] = getchar();
#ifdef QUEST
		if(inputline[1] == foo) inputline[2] = getchar(); else
#endif /* QUEST */
		inputline[2] = 0;
	}
	if(foo == 'm' || foo == 'M'){
		inputline[1] = getchar();
		inputline[2] = 0;
	}
	clrlin();
	return(inputline);
}

char
readchar(void)
{
	int sym;

	(void) fflush(stdout);
	if((sym = getchar()) == EOF)
		end_of_input();
	if(flags.toplin == 1)
		flags.toplin = 2;
	return((char) sym);
}

void
end_of_input(void)
{
	settty("End of input?\n");
	clearlocks();
	exit(0);
}
@


1.14
log
@hack expects to be able to read ^Z as a normal character so disable
SUSP in the termios settings.  Presumably this is how things worked
before the conversion to termios.  Fixes suspend/resume in hack.
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.13 2015/09/27 05:13:11 guenther Exp $	*/
d97 5
a101 5
#include	"hack.h"
#include	<stdio.h>
#include	<stdarg.h>
#include	<stdlib.h>
#include	<termios.h>
d107 1
a107 1
static void setctty();
d115 1
a115 1
gettty()
d148 1
a148 1
setctty()
d155 1
a155 1
setftty()
d248 1
a248 1
getret()
d290 1
a290 1
parse()
d321 1
a321 1
readchar()
d334 1
a334 1
end_of_input()
@


1.13
log
@Annotate funcs with __attribute__((printf(...))) and clean up the fallout:
 * lots of foo(str) --> foo("%s", str) transformations
 * one totally insane foo(fmt, ap) --> vfoo(fmt, ap) conversion: how did
   this ever work?
 * prefer const char[] over char* for static format strings, as it lets
   gcc check the format and eliminates an unnecessary pointer

ok beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.12 2015/01/15 17:13:37 deraadt Exp $	*/
d170 2
@


1.12
log
@NR_OF_EOFS is a festering boil, lance & drain.
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.11 2009/10/27 23:59:25 deraadt Exp $	*/
d181 1
a181 1
error(char *s, ...)
d186 1
a186 1
		settty((char *) 0);
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.10 2005/04/16 14:19:51 deraadt Exp $	*/
a102 8
/*
 * Some systems may have getchar() return EOF for various reasons, and
 * we should not quit before seeing at least NR_OF_EOFS consecutive EOFs.
 */
#ifndef BSD
#define	NR_OF_EOFS	20
#endif /* BSD */

a324 15
#ifdef NR_OF_EOFS
	{ /*
	   * Some SYSV systems seem to return EOFs for various reasons
	   * (?like when one hits break or for interrupted systemcalls?),
	   * and we must see several before we quit.
	   */
		int cnt = NR_OF_EOFS;
		while (cnt--) {
		    clearerr(stdin);	/* omit if clearerr is undefined */
		    if((sym = getchar()) != EOF) goto noteof;
		}
		end_of_input();
	     noteof:	;
	}
#else
a325 1
#endif /* NR_OF_EOFS */
@


1.10
log
@use vprintf, as obvious; frederik.deweerdt@@laposte.net
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.9 2003/06/03 03:01:40 millert Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)hack.tty.c	8.1 (Berkeley) 5/31/93";
#else
static const char rcsid[] = "$OpenBSD: hack.tty.c,v 1.9 2003/06/03 03:01:40 millert Exp $";
#endif
#endif /* not lint */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.8 2003/05/19 09:00:54 pjanzen Exp $	*/
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: hack.tty.c,v 1.8 2003/05/19 09:00:54 pjanzen Exp $";
d204 1
a204 1
	printf(s, ap);
@


1.8
log
@A few more includes discovered in a -fno-builtin compile
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.7 2003/05/19 06:30:56 pjanzen Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: hack.tty.c,v 1.7 2003/05/19 06:30:56 pjanzen Exp $";
@


1.7
log
@De-register, ANSIfy, clean up.
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.6 2003/03/16 21:22:36 camield Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD$";
d112 1
@


1.6
log
@hack is free

Thanks to Andries Brouwer, Jay Fenlason and the folks at CWI for their
efforts.

http://www.cwi.nl/~aeb/games/hack/hack.html

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.5 2001/08/06 22:59:13 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: hack.tty.c,v 1.5 2001/08/06 22:59:13 pjanzen Exp $";
d111 1
a121 1
extern speed_t ospeed;
d126 2
d129 1
a129 1
 * Get initial state of terminal, set ospeed (for termcap routines)
d133 3
a135 1
gettty(){
a138 1
	ospeed = cfgetospeed(&inittyb);
d152 4
a155 2
settty(s) char *s; {
	clear_screen();
d166 3
a168 1
setctty(){
d173 4
a176 3

setftty(){
register int change = 0;
d199 5
a203 2
/*VARARGS1*/
error(s,x,y) char *s; {
d206 3
a208 1
	printf(s,x,y);
d219 2
a220 2
getlin(bufp)
register char *bufp;
d222 2
a223 2
	register char *obufp = bufp;
	register int c;
d241 1
a241 1
			} else	bell();
d260 1
a260 1
			bell();
d264 3
a266 1
getret() {
d270 2
a271 2
cgetret(s)
register char *s;
d286 3
a288 2
xwaitforspace(s)
register char *s;	/* chars allowed besides space or return */
d290 1
a290 1
register int c;
d301 1
a301 1
		bell();
d310 1
a310 1
	register foo;
d338 3
a340 2
readchar() {
	register int sym;
d350 1
a350 1
		register int cnt = NR_OF_EOFS;
d366 1
@


1.5
log
@Nothing but comments after #endif and #else; heko@@iki.fi
@
text
@d1 1
a1 1
/*	$OpenBSD: hack.tty.c,v 1.4 2001/01/28 23:41:46 niklas Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: hack.tty.c,v 1.4 2001/01/28 23:41:46 niklas Exp $";
d44 61
a104 1
/* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: hack.tty.c,v 1.5 1995/04/29 01:08:54 mycroft Exp $";
d59 1
a59 1
#endif BSD
d250 1
a250 1
#endif QUEST
d283 1
a283 1
#endif NR_OF_EOFS
@


1.3
log
@printf() and %s pedantry, from itojun channelling kris@@freebsd
@
text
@d1 2
d40 1
a40 1
static char rcsid[] = "$NetBSD: hack.tty.c,v 1.5 1995/04/29 01:08:54 mycroft Exp $";
@


1.2
log
@r?index -> strr?chr
@
text
@d90 1
a90 1
	if(s) printf(s);
@


1.1
log
@Initial revision
@
text
@d219 1
a219 1
		if(s && index(s,c)) {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
