head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.10
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.8
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.26
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.18
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.22
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.11.30.08.19.25;	author tb;	state Exp;
branches;
next	1.7;
commitid	DsnnMPnBHkgAj0Eo;

1.7
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.23.23.50.05;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.18.03.32.52;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	99.07.31.21.57.41;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.03.19.11.13.34;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Pledge for backgammon and teachgammon.

Both are straightforward "stdio rpath tty" programs; teachgammon
exec's backgammon at the end, so give it "exec" in addition.

While there, ANSIfy
@
text
@/*	$OpenBSD: ttext2.c,v 1.7 2009/10/27 23:59:23 deraadt Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "back.h"
#include "tutor.h"

const char   *const doubl[] = {
	"\nDoubling:",
	"\n   If a player thinks he is in a good position, he may double the",
	"value of the game.  However, his opponent may not accept the proposal",
	"and can forfeit the game before the price gets too high.  A player",
	"must double before he rolls, and once his double has been accepted,",
	"he cannot double again until his opponent has doubled.  Thus, unless",
	"the game swings back and forth in advantage between the two players",
	"a great deal, the value of the game should be low.  At any rate,",
	"the value of the game can never go above 64, or six doubles.",
	"However, if a player wins a backgammon at 64 points, he wins 192",
	"points!",
	"",
	0};

const char   *const stragy[] = {
	"\nStrategy:",
	"\n   Some general hints when playing:  Try not to leave men open:",
	"it is good to make as many points as possible.  Often, two men",
	"from different positions can be brought together to form a new",
	"point.  Although walls (six points in a row) are difficult to form,",
	"many points nestled closely together still produce a formidable",
	"barrier.  Also, while it is good to move back men forward, doing",
	"so lessens the opportunity for you to hit the opponent's blots.",
	"Finally, remember that once the two player's men have passed each other",
	"on the board, there is no chance of either side being hit, so the",
	"game reduces to a race off the board.  Additional hints on strategy",
	"are presented in the practice game.",
	"",
	0};

const char   *const prog[] = {
	"\nThe Program and How It Works:",
	"\n   A general rule of thumb is to type a question mark if you",
	"don't know what to do:  you should get some help.  When it is your",
	"turn, only your color will be printed out, with nothing after it.",
	"You may double by typing `d', but if you type a space or newline,",
	"you will get your roll.  (Remember, you must double before you",
	"roll.)  Also, typing `r' will reprint the board, and typing `q'",
	"will quit the game.  The program will print 'Move:' when it wants",
	"your move.  You may indicate each die's move with <s>-<f>, where",
	"<s> is the starting position and <f> is the finishing position, or",
	"<s>/<r> where <r> is the roll made.  <s>-<f1>-<f2> is short for",
	"<s>-<f1>,<f1>-<f2> and <s>/<r1><r2> is short for <s>/<r1>,<s>/<r2>.",
	"Moves may be separated by a comma or a space.",
	"",
	"\n   Any input which does not make sense will not be echoed; instead,",
	"a bell will sound.  Backspacing and killing lines may echo differently",
	"than usual.  You may examine the board by typing `r' if you have",
	"made a partial move or before you type a newline to see what the",
	"board will look like.  You must end your move with a newline.  If",
	"you cannot double, your roll will be printed and you will not be",
	"given the opportunity to double.  Home and bar can be represented",
	"by the appropriate number, 0 or 25 as the case may be, or by the",
	"letters `h' or `b' as appropriate.  You may also type `r' or `q'",
	"when the program prints 'Move:' to redraw the screen or quit the",
	"game.  At the beginning of the session, you will get to decide if",
	"you want to play red or white (or both if you want to play a friend),",
	"and you will not get to change your mind later, since the computer",
	"keeps a running score.",
	"",
	0};

const char   *const lastch[] = {
	"\nTutorial (Practice Game):",
	"\n   This tutorial, for simplicity's sake, will let you play one",
	"predetermined game.  All the rolls have been pre-arranged, and",
	"only one response will let you advance to the next move.  Although",
	"a given roll will may have several legal moves, the tutorial will",
	"only accept one (not including the same moves in a different order),",
	"claiming that that move is 'best'--obviously, a subjective statement.",
	"At any rate, be patient with it and have fun learning about",
	"backgammon.  To speed things up a little, doubling will not",
	"take place in the tutorial.  Quitting the tutorial leaves only",
	"the tutorial; you will still be able to play a real backgammon",
	"game after quitting.",
	"\n   This is your last chance to look over the rules before the",
	"tutorial starts.",
	"",
	0};

int
text(const char  *const *txt)
{
	const char  *const *begin;
	const char   *a;
	char    b;
	const char   *c;
	int     i;

	begin = txt;
	while (*txt) {
		a = *(txt++);
		if (*a != '\0') {
			c = a;
			for (i = 0; *(c++) != '\0'; i--);
			printw("%s\n", a);
		} else {
			addstr(prompt);
			/* if begscr is set we're past the rules screens */
			if (!begscr) {
				for (;;) {
					if ((b = readc()) == '?') {
						clear();
						text(list);
						addstr(prompt);
						continue;
					}
					i = 0;
					if (b == '\n')
						break;
					while (i < 11) {
						if (b == opts[i])
							break;
						i++;
					}
					if (i == 11)
						beep();
					else
						break;
				}
			} else {
				b = readc();
				i = 0;
			}
			if (begscr) {
				move(18, 0);
				clrtobot();
			} else
				clear();
			if (i)
				return(i);
			/* move to start of current line? */
			begin = txt;
		}
	}
	return(0);
}
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ttext2.c,v 1.6 2003/06/03 03:01:38 millert Exp $	*/
d117 1
a117 2
text(txt)
	const char  *const *txt;
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttext2.c,v 1.5 2001/06/23 23:50:05 pjanzen Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)ttext2.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: ttext2.c,v 1.5 2001/06/23 23:50:05 pjanzen Exp $";
#endif
#endif /* not lint */
@


1.5
log
@termios -> curses
@
text
@d1 1
a1 1
/*	$OpenBSD: ttext2.c,v 1.4 2001/02/18 03:32:52 pjanzen Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char rcsid[] = "$OpenBSD: ttext2.c,v 1.4 2001/02/18 03:32:52 pjanzen Exp $";
@


1.4
log
@Get this not to segfault on startup on alpha.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttext2.c,v 1.3 1999/07/31 21:57:41 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: ttext2.c,v 1.3 1999/07/31 21:57:41 pjanzen Exp $";
a137 1
	fixtty(&noech);
d144 1
a144 2
			writel(a);
			writec('\n');
d146 1
a146 2
			fixtty(&traw);
			writel(prompt);
d151 1
a151 4
						if (tflag)
							clear();
						else
							writec('\n');
d153 1
a153 1
						writel(prompt);
d165 1
a165 1
						writec('\007');
d173 3
a175 6
			if (tflag) {
				if (begscr) {
					curmove(18, 0);
					clend();
				} else
					clear();
d177 1
a177 1
				writec('\n');
d180 1
a180 3
			fixtty(&noech);
			if (tflag)
				curmove(curr, 0);
a183 1
	fixtty(&traw);
@


1.3
log
@use const where appropriate (jsm28@@cam.ac.uk).  Also some very minor tidying.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttext2.c,v 1.2 1998/03/19 11:13:34 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: ttext2.c,v 1.2 1998/03/19 11:13:34 pjanzen Exp $";
d148 1
a148 1
			fixtty(&raw);
d195 1
a195 1
	fixtty(&raw);
@


1.2
log
@NetBSD changes and further improvements and corrections
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD$";
d47 1
a47 1
char   *doubl[] = {
d62 1
a62 1
char   *stragy[] = {
d78 1
a78 1
char   *prog[] = {
d110 1
a110 1
char   *lastch[] = {
d130 1
a130 1
	char  **txt;
d132 2
a133 2
	char  **begin;
	char   *a;
d135 1
a135 1
	char   *c;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: ttext2.c,v 1.4 1995/04/29 00:44:20 mycroft Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: ttext2.c,v 1.4 1995/04/29 00:44:20 mycroft Exp $";
d45 1
d47 84
a130 89
char *prompt, *list, *opts;

char	*doubl[] = {
    "\nDoubling:",
    "\n   If a player thinks he is in a good position, he may double the",
    "value of the game.  However, his opponent may not accept the pro-",
    "posal and forfeit the game before the price gets too high.  A",
    "player must double before he rolls, and once his double has been",
    "accepted, he cannot double again, until his opponent has doubled.",
    "Thus, unless the game swings back and forth in advantage between",
    "the two players a great deal, the value of the game should be",
    "low.  At any rate, the value of the game will never go above 64,",
    "or six doubles.  However, if a player wins a backgammon at 64",
    "points, he wins 192 points!",
    "",
    0};

char	*stragy[] = {
    "\nStrategy:",
    "\n   Some general hints when playing:  Try not to leave men open",
    "unless absolutely necessary.  Also, it is good to make as many",
    "points as possible.  Often, two men from different positions can",
    "be brought together to form a new point.  Although walls (six",
    "points in a row) are difficult to form, many points nestled close-",
    "ly together produce a formidable barrier.  Also, while it is good",
    "to move back men forward, doing so lessens the opportunity for you",
    "to hit men.  Finally, remember that once the two player's have",
    "passed each other on the board, there is no chance of either team",
    "being hit, so the game reduces to a race off the board.  Addi-",
    "tional hints on strategy are presented in the practice game.",
    "",
    0};

char	*prog[] = {
   "\nThe Program and How It Works:",
   "\n   A general rule of thumb is when you don't know what to do,",
   "type a question mark, and you should get some help.  When it is",
   "your turn, only your color will be printed out, with nothing",
   "after it.  You may double by typing a 'd', but if you type a",
   "space or newline, you will get your roll.  (Remember, you must",
   "double before you roll.)  Also, typing a 'r' will reprint the",
   "board, and a 'q' will quit the game.  The program will type",
   "'Move:' when it wants your move, and you may indicate each die's",
   "move with <s>-<f>, where <s> is the starting position and <f> is",
   "the finishing position, or <s>/<r> where <r> is the roll made.",
   "<s>-<f1>-<f2> is short for <s>-<f1>,<f1>-<f2> and <s>/<r1><r2> is",
   "short for <s>/<r1>,<s>/<r2>.  Moves may be separated by a comma",
   "or a space.",
   "",
   "\n   While typing, any input which does not make sense will not be",
   "echoed, and a bell will sound instead.  Also, backspacing and",
   "killing lines will echo differently than normal.  You may examine",
   "the board by typing a 'r' if you have made a partial move, or be-",
   "fore you type a newline, to see what the board looks like.  You",
   "must end your move with a newline.  If you cannot double, your",
   "roll will always be printed, and you will not be given the oppor-",
   "tunity to double.  Home and bar are represented by the appropri-",
   "ate number, 0 or 25 as the case may be, or by the letters 'h' or",
   "'b' as appropriate.  You may also type 'r' or 'q' when the program",
   "types 'Move:', which has the same effect as above.  Finally, you",
   "will get to decide if you want to play red or white (or both if you",
   "want to play a friend) at the beginning of the session, and you",
   "will not get to change your mind later, since the computer keeps",
   "score.",
   "",
   0};

char	*lastch[] = {
   "\nTutorial (Practice Game):",
   "\n   This tutorial, for simplicity's sake, will let you play one",
   "predetermined game.  All the rolls have been pre-arranged, and",
   "only one response will let you advance to the next move.",
   "Although a given roll will may have several legal moves, the tu-",
   "torial will only accept one (not including the same moves in a",
   "different order), claiming that that move is 'best.'  Obviously,",
   "a subjective statement.  At any rate, be patient with it and have",
   "fun learning about backgammon.  Also, to speed things up a lit-",
   "tle, doubling will not take place in the tutorial, so you will",
   "never get that opportunity, and quitting only leaves the tutori-",
   "al, not the game.  You will still be able to play backgammon",
   "after quitting.",
   "\n   This is your last chance to look over the rules before the tu-",
   "torial starts.",
   "",
   0};

text (txt)
char	**txt;

d132 5
a136 5
	char	**begin;
	char	*a;
	char	b;
	char	*c;
	int	i;
d138 1
a138 1
	fixtty (&noech);
d140 1
a140 1
	while (*txt)  {
d142 1
a142 1
		if (*a != '\0')  {
d145 10
a154 12
			writel (a);
			writec ('\n');
		} else  {
			fixtty (&raw);
			writel (prompt);
			for (;;)  {
				if ((b = readc()) == '?')  {
					if (tflag)  {
						if (begscr)  {
							curmove (18,0);
							clend();
						} else
d156 18
a173 5
					} else
						writec ('\n');
					text (list);
					writel (prompt);
					continue;
d175 2
a177 11
				if (b == '\n')
					break;
				while (i < 11)  {
					if (b == opts[i])
						break;
					i++;
				}
				if (i == 11)
					writec ('\007');
				else
					break;
d179 3
a181 3
			if (tflag)  {
				if (begscr)  {
					curmove (18,0);
d186 1
a186 1
				writec ('\n');
d189 1
a189 1
			fixtty (&noech);
d191 1
a191 1
				curmove (curr,0);
d195 2
a196 2
	fixtty (&raw);
	return (0);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

