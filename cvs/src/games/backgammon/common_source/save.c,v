head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2015.11.30.08.19.25;	author tb;	state Exp;
branches;
next	1.13;
commitid	DsnnMPnBHkgAj0Eo;

1.13
date	2015.11.11.01.12.10;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	nVtGolYSsQ6VkRrW;

1.12
date	2015.06.26.19.18.03;	author otto;	state Exp;
branches;
next	1.11;
commitid	rLN6ksd9DcCJ3lkE;

1.11
date	2014.11.16.04.49.48;	author guenther;	state Exp;
branches;
next	1.10;
commitid	8XNajyb9IqHkZEKg;

1.10
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.27.00.10.14;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.23.23.50.04;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.30.04.41.34;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.07.31.21.57.41;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	98.08.29.23.19.09;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.03.19.11.13.25;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	96.02.14.07.06.42;	author etheisen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Pledge for backgammon and teachgammon.

Both are straightforward "stdio rpath tty" programs; teachgammon
exec's backgammon at the end, so give it "exec" in addition.

While there, ANSIfy
@
text
@/*	$OpenBSD: save.c,v 1.13 2015/11/11 01:12:10 deraadt Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <limits.h>
#include <errno.h>
#include "back.h"

static const char confirm[] = "Are you sure you want to leave now?";
static const char prompt[] = "Enter a file name:  ";
static const char exist1[] = "The file '";
static const char exist2[] =
	"' already exists.\nAre you sure you want to use this file?";
static const char cantuse[] = "\nCan't use ";
static const char saved[] = "This game has been saved on the file '";
static const char type[] = "'.\nType \"backgammon -s ";
static const char rec[] = "\" to recover your game.\n\n";
static const char cantrec[] = "Can't recover file:  ";

void
save(int n)
{
	int     fdesc;
	char   *fs;
	char    fname[PATH_MAX];
	int     r, c, i;

	if (n) {
		move(20, 0);
		clrtobot();
		addstr(confirm);
		if (!yorn(0))
			return;
	}
	cflag = 1;
	for (;;) {
		addstr(prompt);
		fs = fname;
		while ((i = readc()) != '\n') {
			if (i == KEY_BACKSPACE || i == 0177) {
				if (fs > fname) {
					fs--;
					getyx(stdscr, r, c);
					move(r, c - 1);
				} else
					beep();
				continue;
			}
			if (fs - fname < sizeof(fname) - 1) {
				if (isascii(i)) {
					*fs = i;
					addch(*fs++);
				} else
					beep();
			} else
				beep();
		}
		*fs = '\0';
		if ((fdesc = open(fname, O_RDWR)) == -1 && errno == ENOENT) {
			if ((fdesc = open(fname,
					  O_CREAT | O_TRUNC | O_WRONLY,
					  0600)) != -1)
				break;
		}
		if (fdesc != -1) {
			move(18, 0);
			clrtobot();
			printw("%s%s%s", exist1, fname, exist2);
			cflag = 0;
			close(fdesc);
			if (yorn(0)) {
				unlink(fname);
				fdesc = open(fname,
					     O_CREAT | O_TRUNC | O_WRONLY,
					     0600);
				break;
			} else {
				cflag = 1;
				continue;
			}
		}
		printw("%s%s.\n", cantuse, fname);
		cflag = 1;
	}
	write(fdesc, board, sizeof(board));
	write(fdesc, off, sizeof(off));
	write(fdesc, in, sizeof(in));
	write(fdesc, dice, sizeof(dice));
	write(fdesc, &cturn, sizeof(cturn));
	write(fdesc, &dflag, sizeof(dflag));
	write(fdesc, &dlast, sizeof(dlast));
	write(fdesc, &pnum, sizeof(pnum));
	write(fdesc, &rscore, sizeof(rscore));
	write(fdesc, &wscore, sizeof(wscore));
	write(fdesc, &gvalue, sizeof(gvalue));
	write(fdesc, &raflag, sizeof(raflag));
	close(fdesc);
	move(18, 0);
	printw("%s%s%s%s%s", saved, fname, type, fname, rec);
	clrtobot();
	getout(0);
}

void
recover(const char *s)
{
	int     fdesc;

	if ((fdesc = open(s, O_RDONLY)) == -1)
		norec(s);
	read(fdesc, board, sizeof(board));
	read(fdesc, off, sizeof(off));
	read(fdesc, in, sizeof(in));
	read(fdesc, dice, sizeof(dice));
	read(fdesc, &cturn, sizeof(cturn));
	read(fdesc, &dflag, sizeof(dflag));
	read(fdesc, &dlast, sizeof(dlast));
	read(fdesc, &pnum, sizeof(pnum));
	read(fdesc, &rscore, sizeof(rscore));
	read(fdesc, &wscore, sizeof(wscore));
	read(fdesc, &gvalue, sizeof(gvalue));
	read(fdesc, &raflag, sizeof(raflag));
	close(fdesc);
	rflag = 1;
}

void
norec(const char *s)
{
	const char   *c;

	addstr(cantrec);
	c = s;
	while (*c != '\0')
		addch(*c++);
	getout(0);
}
@


1.13
log
@creat() -> open equiv; from Frederic Nowak
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.12 2015/06/26 19:18:03 otto Exp $	*/
d49 1
a49 2
save(n)
	int     n;
d133 1
a133 2
recover(s)
	const char   *s;
d156 1
a156 2
norec(s)
	const char   *s;
@


1.12
log
@/home/otto/ok
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.11 2014/11/16 04:49:48 guenther Exp $	*/
d89 3
a91 1
			if ((fdesc = creat(fname, 0600)) != -1)
d102 3
a104 1
				fdesc = creat(fname, 0600);
@


1.11
log
@Eliminate pointless use of <sys/param.h>, <sys/file.h>, <sys/sockio.h>,
    and <sys/ttydefaults.h>
Replace MAXPATHLEN with PATH_MAX and MAXLOGNAME with LOGIN_NAME_MAX
Pull in <limits.h> where needed
Prefer sizeof(var) over MAXFOO or FOO_MAX

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.10 2009/10/27 23:59:23 deraadt Exp $	*/
d115 1
d142 1
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.9 2006/03/27 00:10:14 tedu Exp $	*/
a31 1
#include <sys/param.h>
d33 1
d54 1
a54 1
	char    fname[MAXPATHLEN];
d78 1
a78 1
			if (fs - fname < MAXPATHLEN - 1) {
@


1.9
log
@assorted fixes mostly from coverity via netbsd via jasper adriaanse via tech
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.8 2003/06/03 03:01:38 millert Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)save.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: save.c,v 1.8 2003/06/03 03:01:38 millert Exp $";
#endif
#endif /* not lint */
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.7 2001/06/23 23:50:04 pjanzen Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: save.c,v 1.7 2001/06/23 23:50:04 pjanzen Exp $";
a115 1
		close(fdesc);
@


1.7
log
@termios -> curses
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.6 2001/03/30 04:41:34 pjanzen Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char rcsid[] = "$OpenBSD: save.c,v 1.6 2001/03/30 04:41:34 pjanzen Exp $";
@


1.6
log
@filename length fix from ianm@@cit.uws.edu.au; also, don't overflow the buffer.
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.5 1999/07/31 21:57:41 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: save.c,v 1.5 1999/07/31 21:57:41 pjanzen Exp $";
d45 1
d67 1
d70 3
a72 6
		if (tflag) {
			curmove(20, 0);
			clend();
		} else
			writec('\n');
		writel(confirm);
d78 1
a78 1
		writel(prompt);
d80 2
a81 2
		while ((*fs = readc()) != '\n') {
			if (*fs == old.c_cc[VERASE]) {
d84 2
a85 4
					if (tflag)
						curmove(curr, curc - 1);
					else
						writec(*fs);
d87 1
a87 1
					writec('\007');
d90 8
a97 4
			if (fs - fname < MAXPATHLEN - 1)
				writec(*fs++);
			else
				writec('\007');
d105 3
a107 8
			if (tflag) {
				curmove(18, 0);
				clend();
			} else
				writec('\n');
			writel(exist1);
			writel(fname);
			writel(exist2);
d119 1
a119 3
		writel(cantuse);
		writel(fname);
		writel(".\n");
d135 3
a137 9
	if (tflag)
		curmove(18, 0);
	writel(saved);
	writel(fname);
	writel(type);
	writel(fname);
	writel(rec);
	if (tflag)
		clend();
d170 1
a170 2
	tflag = 0;
	writel(cantrec);
d173 1
a173 1
		writec(*c++);
@


1.5
log
@use const where appropriate (jsm28@@cam.ac.uk).  Also some very minor tidying.
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.4 1998/08/29 23:19:09 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: save.c,v 1.4 1998/08/29 23:19:09 pjanzen Exp $";
d44 1
d65 1
a65 1
	char    fname[50];
d93 4
a96 1
			writec(*fs++);
@


1.4
log
@use names rather than numbers in signals, errors, etc; NetBSD PR6058; jsm28@@cam.ac.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: save.c,v 1.3 1998/03/19 11:13:25 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: save.c,v 1.3 1998/03/19 11:13:25 pjanzen Exp $";
d47 4
a50 4
static char confirm[] = "Are you sure you want to leave now?";
static char prompt[] = "Enter a file name:  ";
static char exist1[] = "The file '";
static char exist2[] =
d52 5
a56 5
static char cantuse[] = "\nCan't use ";
static char saved[] = "This game has been saved on the file '";
static char type[] = "'.\nType \"backgammon -s ";
static char rec[] = "\" to recover your game.\n\n";
static char cantrec[] = "Can't recover file:  ";
d151 1
a151 1
	char   *s;
d174 1
a174 1
	char   *s;
d176 1
a176 1
	char   *c;
@


1.3
log
@NetBSD changes and further improvements and corrections
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD$";
d44 1
a46 2
extern int errno;

d95 1
a95 1
		if ((fdesc = open(fname, 2)) == -1 && errno == 2) {
d155 1
a155 1
	if ((fdesc = open(s, 0)) == -1)
@


1.2
log
@Command line arguments were not being handled correctly.  Modified for
proper funtionality and for compliance with manpage.
@
text
@d1 1
a1 1
/*	$NetBSD: save.c,v 1.4 1995/04/29 00:44:13 mycroft Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: save.c,v 1.4 1995/04/29 00:44:13 mycroft Exp $";
d46 1
a46 1
extern int	errno;
d48 4
a51 4
static char	confirm[] = "Are you sure you want to leave now?";
static char	prompt[] = "Enter a file name:  ";
static char	exist1[] = "The file '";
static char	exist2[] =
d53 9
a61 9
static char	cantuse[] = "\nCan't use ";
static char	saved[] = "This game has been saved on the file '";
static char	type[] = "'.\nType \"backgammon -s ";
static char	rec[] = "\" to recover your game.\n\n";
static char	cantrec[] = "Can't recover file:  ";

save (n)
register int	n;

d63 7
a69 7
	register int	fdesc;
	register char	*fs;
	char		fname[50];

	if (n)  {
		if (tflag)  {
			curmove (20,0);
d72 3
a74 3
			writec ('\n');
		writel (confirm);
		if (! yorn(0))
d78 2
a79 2
	for (;;)  {
		writel (prompt);
d81 3
a83 3
		while ((*fs = readc()) != '\n')  {
			if (*fs == old.c_cc[VERASE])  {
				if (fs > fname)  {
d86 1
a86 1
						curmove (curr,curc-1);
d88 1
a88 1
						writec (*fs);
d90 1
a90 1
					writec ('\007');
d93 1
a93 1
			writec (*fs++);
d96 3
a98 3
		if ((fdesc = open(fname,2)) == -1 && errno == 2)  {
			if ((fdesc = creat (fname,0700)) != -1)
			break;
d100 3
a102 3
		if (fdesc != -1)  {
			if (tflag)  {
				curmove (18,0);
d105 4
a108 4
				writec ('\n');
			writel (exist1);
			writel (fname);
			writel (exist2);
d110 4
a113 4
			close (fdesc);
			if (yorn (0))  {
				unlink (fname);
				fdesc = creat (fname,0700);
d115 1
a115 1
			} else  {
d120 4
a123 4
		writel (cantuse);
		writel (fname);
		writel (".\n");
		close (fdesc);
d126 12
a137 12
	write (fdesc,board,sizeof board);
	write (fdesc,off,sizeof off);
	write (fdesc,in,sizeof in);
	write (fdesc,dice,sizeof dice);
	write (fdesc,&cturn,sizeof cturn);
	write (fdesc,&dlast,sizeof dlast);
	write (fdesc,&pnum,sizeof pnum);
	write (fdesc,&rscore,sizeof rscore);
	write (fdesc,&wscore,sizeof wscore);
	write (fdesc,&gvalue,sizeof gvalue);
	write (fdesc,&raflag,sizeof raflag);
	close (fdesc);
d139 6
a144 6
		curmove (18,0);
	writel (saved);
	writel (fname);
	writel (type);
	writel (fname);
	writel (rec);
d147 1
a147 1
	getout ();
a148 3

recover (s)
char	*s;
d150 3
d154 1
a154 2
	register int	i;
	int		fdesc;
d156 14
a169 14
	if ((fdesc = open (s,0)) == -1)
		norec (s);
	read (fdesc,board,sizeof board);
	read (fdesc,off,sizeof off);
	read (fdesc,in,sizeof in);
	read (fdesc,dice,sizeof dice);
	read (fdesc,&cturn,sizeof cturn);
	read (fdesc,&dlast,sizeof dlast);
	read (fdesc,&pnum,sizeof pnum);
	read (fdesc,&rscore,sizeof rscore);
	read (fdesc,&wscore,sizeof wscore);
	read (fdesc,&gvalue,sizeof gvalue);
	read (fdesc,&raflag,sizeof raflag);
	close (fdesc);
d173 3
a175 3
norec (s)
register char	*s;

d177 1
a177 1
	register char	*c;
d180 1
a180 1
	writel (cantrec);
d183 2
a184 2
		writec (*c++);
	getout ();
@


1.1
log
@Initial revision
@
text
@d55 1
a55 1
static char	type[] = "'.\nType \"backgammon ";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

