head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.11.30.08.19.25;	author tb;	state Exp;
branches;
next	1.6;
commitid	DsnnMPnBHkgAj0Eo;

1.6
date	2015.07.20.23.04.17;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	uHtvBqLOO6XULQKJ;

1.5
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.23.23.50.03;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.03.19.11.13.23;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Pledge for backgammon and teachgammon.

Both are straightforward "stdio rpath tty" programs; teachgammon
exec's backgammon at the end, so give it "exec" in addition.

While there, ANSIfy
@
text
@/*	$OpenBSD: one.c,v 1.6 2015/07/20 23:04:17 schwarze Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "back.h"

int
makmove(int i)
{
	int     n, d;
	int     max;

	d = d0;
	n = abs(g[i] - p[i]);
	max = (*offptr < 0 ? 7 : last());
	if (board[p[i]] * cturn <= 0)
		return(checkd(d) + 2);
	if (g[i] != home && board[g[i]] * cturn < -1)
		return(checkd(d) + 3);
	if (i || D0 == D1) {
		if (n == max ? D1 < n : D1 != n)
			return(checkd(d) + 1);
	} else {
		if (n == max ? D0 < n && D1 < n : D0 != n && D1 != n)
			return(checkd(d) + 1);
		if (n == max ? D0 < n : D0 != n)
			swap;
	}
	if (g[i] == home && *offptr < 0)
		return(checkd(d) + 4);
	h[i] = 0;
	board[p[i]] -= cturn;
	if (g[i] != home) {
		if (board[g[i]] == -cturn) {
			board[home] -= cturn;
			board[g[i]] = 0;
			h[i] = 1;
			if (abs(bar - g[i]) < 7) {
				(*inopp)--;
				if (*offopp >= 0)
					*offopp -= 15;
			}
		}
		board[g[i]] += cturn;
		if (abs(home - g[i]) < 7 && abs(home - p[i]) > 6) {
			(*inptr)++;
			if (*inptr + *offptr == 0)
				*offptr += 15;
		}
	} else {
		(*offptr)++;
		(*inptr)--;
	}
	return(0);
}

void
moverr(int i)
{
	int     j;

	mvprintw(20, 0, "Error:  ");
	for (j = 0; j <= i; j++) {
		printw("%d-%d", p[j], g[j]);
		if (j < i)
			addch(',');
	}
	addstr("... ");
	movback(i);
}

int
checkd(int d)
{
	if (d0 != d)
		swap;
	return(0);
}

int
last(void)
{
	int     i;

	for (i = home - 6 * cturn; i != home; i += cturn)
		if (board[i] * cturn > 0)
			return(abs(home - i));
	return(-1);
}

void
movback(int i)
{
	int     j;

	for (j = i - 1; j >= 0; j--)
		backone(j);
}

void
backone(int i)
{
	board[p[i]] += cturn;
	if (g[i] != home) {
		board[g[i]] -= cturn;
		if (abs(g[i] - home) < 7 && abs(p[i] - home) > 6) {
			(*inptr)--;
			if (*inptr + *offptr < 15 && *offptr >= 0)
				*offptr -= 15;
		}
	} else {
		(*offptr)--;
		(*inptr)++;
	}
	if (h[i]) {
		board[home] += cturn;
		board[g[i]] = -cturn;
		if (abs(bar - g[i]) < 7) {
			(*inopp)++;
			if (*inopp + *offopp == 0)
				*offopp += 15;
		}
	}
}
@


1.6
log
@Sometimes, the computer's move was printed, but the computer's men didn't
actually move.  This happened when "swap" was called earlier, and then
later in the final call to makmove(), swapping back would have been
required, but was erroneously denied.  Patch sent in pjanzen@@.

It looks like the bug was already present in the original version
in 4.1a BSD in 1982.
@
text
@d1 1
a1 1
/*	$OpenBSD: one.c,v 1.5 2009/10/27 23:59:23 deraadt Exp $	*/
d35 1
a35 2
makmove(i)
	int     i;
d85 1
a85 2
moverr(i)
	int     i;
d100 1
a100 2
checkd(d)
	int     d;
d108 1
a108 1
last()
d119 1
a119 2
movback(i)
	int     i;
d128 1
a128 2
backone(i)
	int     i;
@


1.5
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: one.c,v 1.4 2003/06/03 03:01:38 millert Exp $	*/
d54 1
a54 3
		if (n == max ? D0 < n : D0 != n) {
			if (d0)
				return (checkd(d) + 1);
a55 1
		}
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: one.c,v 1.3 2001/06/23 23:50:03 pjanzen Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)one.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: one.c,v 1.3 2001/06/23 23:50:03 pjanzen Exp $";
#endif
#endif /* not lint */
@


1.3
log
@termios -> curses
@
text
@d1 1
a1 1
/*	$OpenBSD: one.c,v 1.2 1998/03/19 11:13:23 pjanzen Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char rcsid[] = "$OpenBSD: one.c,v 1.2 1998/03/19 11:13:23 pjanzen Exp $";
@


1.2
log
@NetBSD changes and further improvements and corrections
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD$";
d106 1
a106 5
	if (tflag)
		curmove(20, 0);
	else
		writec('\n');
	writel("Error:  ");
d108 1
a108 3
		wrint(p[j]);
		writec('-');
		wrint(g[j]);
d110 1
a110 1
			writec(',');
d112 1
a112 1
	writel("... ");
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: one.c,v 1.3 1995/03/21 15:05:49 cgd Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: one.c,v 1.3 1995/03/21 15:05:49 cgd Exp $";
d46 3
a48 3
makmove (i)
register int	i;
 
d50 2
a51 2
	register int	n, d;
	int		max;
d54 13
a66 13
	n = abs(g[i]-p[i]);
	max = (*offptr < 0? 7: last());
	if (board[p[i]]*cturn <= 0)
		return (checkd(d)+2);
	if (g[i] != home && board[g[i]]*cturn < -1)
		return (checkd(d)+3);
	if (i || D0 == D1)  {
		if (n == max? D1 < n: D1 != n)
			return (checkd(d)+1);
	} else  {
		if (n == max? D0 < n && D1 < n: D0 != n && D1 != n)
			return (checkd(d)+1);
		if (n == max? D0 < n: D0 != n)  {
d68 1
a68 1
				return (checkd(d)+1);
d73 1
a73 1
		return (checkd(d)+4);
d76 2
a77 2
	if (g[i] != home)  {
		if (board[g[i]] == -cturn)  {
d81 1
a81 1
			if (abs(bar-g[i]) < 7)  {
d88 1
a88 1
		if (abs(home-g[i]) < 7 && abs(home-p[i]) > 6)  {
d90 1
a90 1
			if (*inptr+*offptr == 0)
d97 1
a97 1
	return (0);
a98 3

moverr (i)
register int	i;
d100 3
d104 1
a104 1
	register int	j;
d107 1
a107 1
		curmove (20,0);
d109 6
a114 6
		writec ('\n');
	writel ("Error:  ");
	for (j = 0; j <= i; j++)  {
		wrint (p[j]);
		writec ('-');
		wrint (g[j]);
d116 1
a116 1
			writec (',');
d118 2
a119 2
	writel ("... ");
	movback (i);
d122 3
a124 4

checkd (d)
register int	d;

d128 1
a128 1
	return (0);
d131 4
a134 2
last ()  {
	register int	i;
d136 4
a139 3
	for (i = home-6*cturn; i != home; i += cturn)
		if (board[i]*cturn > 0)
			return (abs(home-i));
a140 3

movback (i)
register int	i;
d142 3
d146 1
a146 1
	register int	j;
d148 1
a148 1
	for (j = i-1; j >= 0; j--)
d152 3
a154 3
backone (i)
register int	i;

d157 1
a157 1
	if (g[i] != home)  {
d159 1
a159 1
		if (abs(g[i]-home) < 7 && abs(p[i]-home) > 6)  {
d161 1
a161 1
			if (*inptr+*offptr < 15 && *offptr >= 0)
d164 1
a164 1
	} else  {
d168 1
a168 1
	if (h[i])  {
d171 1
a171 1
		if (abs(bar-g[i]) < 7)  {
d173 1
a173 1
			if (*inopp+*offopp == 0)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

