head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.10
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.8
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.26
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.18
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.28
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.11.30.08.19.25;	author tb;	state Exp;
branches;
next	1.8;
commitid	DsnnMPnBHkgAj0Eo;

1.8
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.03.01.38;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.01.23.50.02;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.23.23.49.54;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.18.04.16.36;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	99.07.31.21.57.35;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.03.19.11.13.10;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.39;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.39;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Pledge for backgammon and teachgammon.

Both are straightforward "stdio rpath tty" programs; teachgammon
exec's backgammon at the end, so give it "exec" in addition.

While there, ANSIfy
@
text
@/*	$OpenBSD: text.c,v 1.8 2009/10/27 23:59:23 deraadt Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "back.h"

const char *const instruct[] = {
	"    This program reacts to keystrokes immediately, without waiting",
	"for a newline.  Consequently, special characters such as RUBOUT",
	"and ESC will not perform their special functions during most of",
	"this program.  The program should still usually stop on a CONTROL-D,",
	"though.\n",
	"    These instructions are presented in small chunks designed not",
	"to roll off the top of your screen.  No more data will appear",
	"after the characters '-->' are printed until you type a space or",
	"newline.  In this way, you can finish reading one section before",
	"continuing to another.  Like this:",
	"",
	"    The two sides are called `red' and `white'. The computer can play",
	"one side, or, if there are two players, the computer may act as merely",
	"a gamekeeper, letting the players make the moves.  Once you tell",
	"the computer what color(s) you want to play, the decision remains",
	"in effect until you quit the program, even if you play more than",
	"one game, since the program keeps a running score.\n",
	"    The program will prompt for a move in one of two ways.  If the",
	"player has the opportunity to double, then only his color will be",
	"displayed.  The player can then do one of several things:  he can",
	"double by typing 'd', he can roll by typing a space (` ') or newline,",
	"or if he is not sure, he can reprint the board by typing `r'.\n",
	"    If the player cannot double, his roll will be thrust in front of",
	"him, followed by the request 'Move:' asking for a move without giving",
	"him the chance to double.  He can still ask for the board by typing",
	"`r'.  In either of these two states, the player can quit by typing `q'",
	"or can save the game by typing 's'.  In both cases, the player will be",
	"asked for confirmation.",
	"",
	"    A player can move his men using one of two forms of input.",
	"The first form is <s>-<f>, where <s> is the starting position and",
	"<f> is the finishing position of the player's man.  For example,",
	"if white wanted to move a piece from position 13 to position 8,",
	"his move could be entered as 13-8.  The second form is <s>/<r>,",
	"where <s> is the starting position and <r> is the roll actually",
	"made.  So white could have entered as 13/5 instead of 13-8.\n",
	"    A player must move each roll of the dice separately.  For",
	"example, if a player rolled 4 3, and wanted to move from 13 to",
	"6, he could enter the move as 13/4,9/3 or 13/3,10/4 or 13-10,10-6",
	"or 13-9,9-6, but not as 13-6.  The last two entries can be shortened",
	"to 13-10-6 and 13-9-6.  If he wanted to move more than one piece",
	"from the same position, such as 13-10,13-9, he could abbreviate",
	"this using the <s>/<r> format by entering more than one <r>:  13/34.",
	"A player can use both forms for the same roll, e.g. 13/3,13-9, and",
	"must separate individual moves by either a comma or a space.",
	"The letter 'b' represents the bar, and the letter 'h' represents",
	"a player's home, as do the numbers 25 and 0 (or 0 and 25 as",
	"appropriate).  A turn is finished with a newline.",
	"",
	"    If a typed character does not make sense under the above",
	"constraints, a bell will sound and the character will be ignored.",
	"Finally, the board can be redisplayed after one or more of the",
	"moves has been entered by typing `r'.  This cannot be done in the",
	"middle of a move (e.g., immediately after a `-' or `/').  After",
	"printing the board, the program will go back to inputting the move,",
	"which can still be backspaced over and changed.\n",
	"    Now you should be ready to begin the game.  Good luck!",
	"",
	0};

int
text(const char *const *t)
{
	int     i;
	const char   *s, *a;

	while (*t != 0) {
		s = a = *t;
		for (i = 0; *a != '\0'; i--)
			a++;
		if (i)
			printw("%s\n", s);
		else {
			addstr("-->");
			while ((i = readc()) != ' ' && i != '\n');
			clear();
		}
		t++;
	}
	return(0);
}
@


1.8
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: text.c,v 1.7 2003/06/03 03:01:38 millert Exp $	*/
d96 1
a96 2
text(t)
	const char *const *t;
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: text.c,v 1.6 2003/06/01 23:50:02 millert Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)text.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: text.c,v 1.6 2003/06/01 23:50:02 millert Exp $";
#endif
#endif /* not lint */
@


1.6
log
@Undo a misguided attempt to fix speling errors from long ago.  UCB
copyrights say "acknowledgement", not "acknowledgment".  You cannot
just go changing the text of a license willy-nilly.
@
text
@d1 1
a1 1
/*	$OpenBSD: text.c,v 1.5 2001/06/23 23:49:54 pjanzen Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char rcsid[] = "$OpenBSD: text.c,v 1.5 2001/06/23 23:49:54 pjanzen Exp $";
@


1.5
log
@termios -> curses
@
text
@d1 1
a1 1
/*	$OpenBSD: text.c,v 1.4 2001/02/18 04:16:36 ericj Exp $	*/
d16 1
a16 1
 *    must display the following acknowledgment:
d40 1
a40 1
static char rcsid[] = "$OpenBSD: text.c,v 1.4 2001/02/18 04:16:36 ericj Exp $";
@


1.4
log
@
rename variable raw->traw as to not conflict with raw()
@
text
@d1 1
a1 1
/*	$OpenBSD: text.c,v 1.3 1999/07/31 21:57:35 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: text.c,v 1.3 1999/07/31 21:57:35 pjanzen Exp $";
d46 1
a46 1
const char *const instr[] = {
a113 1
	fixtty(&noech);
d118 4
a121 6
		if (i) {
			writel(s);
			writec('\n');
		} else {
			writel("-->");
			fixtty(&traw);
a122 1
			fixtty(&noech);
a126 1
	fixtty(&traw);
@


1.3
log
@use const where appropriate (jsm28@@cam.ac.uk).  Also some very minor tidying.
@
text
@d1 1
a1 1
/*	$OpenBSD: text.c,v 1.2 1998/03/19 11:13:10 pjanzen Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: text.c,v 1.2 1998/03/19 11:13:10 pjanzen Exp $";
d124 1
a124 1
			fixtty(&raw);
d131 1
a131 1
	fixtty(&raw);
@


1.2
log
@NetBSD changes and further improvements and corrections
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD$";
d46 1
a46 1
char *instr[] = {
d109 1
a109 1
	char  **t;
d112 1
a112 1
	char   *s, *a;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: text.c,v 1.4 1995/04/29 00:44:06 mycroft Exp $	*/
d16 1
a16 1
 *    must display the following acknowledgement:
d40 1
a40 1
static char rcsid[] = "$NetBSD: text.c,v 1.4 1995/04/29 00:44:06 mycroft Exp $";
d47 63
a109 69
    "    If you did not notice by now, this program reacts to things as",
    "soon as you type them, without waiting for a newline.  This means that",
    "the special characters RUBOUT, ESC, and CONTROL-D, will not perform",
    "their special functions during most of this program.  The program",
    "should usually stop when a RUBOUT is typed, but occasionally it will",
    "ignore RUBOUTs until it is waiting for input.\n",
    "    These instructions are presented in small chunks designed not to",
    "roll off the top of your screen.  When the characters '-->' are print-",
    "ed, no more data will be printed until a space or newline is typed.",
    "In this way, you can finish one section before continuing to another.",
    "Like this:",
    "",
    "    The two sides are colored 'red' and 'white.' The computer may play",
    "one side, or if there are two players, the computer can merely act as",
    "a gamekeeper, letting the players make the moves.  Once you tell the",
    "computer what color(s) you want to play, the decision remains in ef-",
    "fect until you quit the program, even if you play more than one game,",
    "since the program keeps a running score.\n",
    "    The program will prompt for a move in one of two ways.  If the",
    "player has the opportunity to double, then merely his color will be",
    "typed out.  The player can now do one of several things.  He can dou-",
    "ble by typing a 'd', he can roll by typing a space (' ') or newline,",
    "or if he is not sure, he can reprint the board by typing a 'r'.\n",
    "    If the player cannot double, his roll will be thrust in front of",
    "him, followed by the request 'Move:', asking for a move but not giving",
    "him the chance to double.  He can still ask for the board by typing",
    "'r'.  In either of these two states, the player can quit by typing 'q'",
    "or save the game by typing 's'.  In either case, the player will be",
    "asked to verify, in case there was some error.  The program then ends",
    "immediately, after first saving the file if so requested.",
    "",
    "    A player can move one of his men using two forms of input.  The",
    "first form is <s>-<f>, where <s> is the starting position, and <f> is",
    "the finishing position of the player's man.  For example, if white",
    "wanted to move a piece from position 13 to position 8, his move could",
    "be entered as 13-8.  The second form is <s>/<r> where <s> is the",
    "starting position, an <r> is the roll actually made.  Hence, white",
    "could have entered as 13/5 instead of 13-8.\n",
    "    A player must move each roll of the dice separately.  For example,",
    "if a player rolled 4 3, and wanted to move from 13 to 6, he could",
    "enter it as 13/4,9/3 or 13/3,10/4 or 13-10,10-6 or 13-9,9-6, but not",
    "13-6.  The last two entries can be shortened to 13-10-6 and 13-9-6.",
    "If you want to move more than one piece from the same position, such",
    "as 13-10,13-9, you can abbreviate this using the <s>/<r> format as by",
    "entering more than one <r>, or 13/34.  A player can use both forms for",
    "the same roll, e.g. 13/3,13-9, and separates individual moves by ei-",
    "ther a comma or a space.  The letter 'b' represents the bar, and the",
    "letter 'h' represents a player's home.  You could also enter the",
    "number that would be in the position of the bar, 25 or 0 as appropri-",
    "ate.  Use a newline at the end of your moves for a turn.",
    "",
    "    As you type in your move, if a character does not make sense under",
    "the above constrictions, a bell will sound instead of the character,",
    "and it will be ignored.  You may kill lines and erase characters as",
    "you would normally, but don't be surprised if they look different than",
    "usual.  Also, if you have entered one or more of your rolls, and you",
    "wish to see what the move looks like so far, type a 'r' to see what it",
    "looks like.  This cannot be done in the middle of a move (e.g., after",
    "a '-' or '/').  After the printing board, the program will go back to",
    "inputting your move and you can backspace or kill just as if you had",
    "just typed in your input.\n",
    "    Now you should be ready to begin the game.  Good luck!",
    "",
    0};


text (t)
char	**t;

d111 2
a112 2
	register int	i;
	register char	*s, *a;
d114 2
a115 2
	fixtty (&noech);
	while (*t != 0)  {
d119 6
a124 6
		if (i)  {
			writel (s);
			writec ('\n');
		} else  {
			writel ("-->");
			fixtty (&raw);
d126 1
a126 1
			fixtty (&noech);
d131 2
a132 1
	fixtty (&raw);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

