head	1.9;
access;
symbols
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.8.0.24
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.26
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.18
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.24
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.20
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.18
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.16
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.14
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.12
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.10
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.20
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.18
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.16
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.14
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.03.08.10.48.39;	author mestre;	state Exp;
branches;
next	1.8;
commitid	MVW94yecJ4ENUFco;

1.8
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.09.15.59.26;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.10.00.03.01;	author david;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.03.01.37;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.09.02.06.36.07;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.08.31.02.29.37;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	97.07.23.20.04.39;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Headers cleanup with and OK tb@@

This was prompted by an initial patch sent by Edgar Pettijohn
<edgar ! pettijohn-web.com> but the actual commit is different
@
text
@/*	$OpenBSD: done.c,v 1.8 2009/10/27 23:59:23 deraadt Exp $	*/
/*	$NetBSD: done.c,v 1.2 1995/03/21 12:05:01 cgd Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * The game adventure was originally written in Fortran by Will Crowther
 * and Don Woods.  It was later translated to C and enhanced by Jim
 * Gillogly.  This code is derived from software contributed to Berkeley
 * by Jim Gillogly at The Rand Corporation.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*	Re-coding of advent in C: termination routines	*/

#include <stdio.h>
#include <stdlib.h>

#include "extern.h"
#include "hdr.h"

int
score(void)			/* sort of like 20000 */
{
	int     scor, i;

	mxscor = scor = 0;
	for (i = 50; i <= maxtrs; i++) {
		if (ptext[i].txtlen == 0)
			continue;
		k = 12;
		if (i == chest)
			k = 14;
		if (i > chest)
			k = 16;
		if (prop[i] >= 0)
			scor += 2;
		if (place[i] == 3 && prop[i] == 0)
			scor += k - 2;
		mxscor += k;
	}
	scor += (maxdie - numdie) * 10;
	mxscor += maxdie * 10;
	if (!(scorng || gaveup))
		scor += 4;
	mxscor += 4;
	if (dflag != 0)
		scor += 25;
	mxscor += 25;
	if (closng)
		scor += 25;
	mxscor += 25;
	if (closed) {
		if (bonus == 0)
			scor += 10;
		if (bonus == 135)
			scor += 25;
		if (bonus == 134)
			scor += 30;
		if (bonus == 133)
			scor += 45;
	}
	mxscor += 45;
	if (place[magzin] == 108)
		scor++;
	mxscor++;
	scor += 2;
	mxscor += 2;
	for (i = 1; i <= hntmax; i++)
		if (hinted[i])
			scor -= hints[i][2];
	return (scor);
}

void
done(int entry)		/* entry=1 means goto 13000 */	/* game is over */
			/* entry=2 means goto 20000 */	/* 3=19000 */
{
	int     i, sc;

	if (entry == 1)
		mspeak(1);
	if (entry == 3)
		rspeak(136);
	printf("\n\n\nYou scored %d out of a ", (sc = score()));
	printf("possible %d using %d turns.\n", mxscor, turns);
	for (i = 1; i <= clsses; i++)
		if (cval[i] >= sc) {
			speak(&ctext[i]);
			if (i == clsses - 1) {
				printf("To achieve the next higher rating");
				printf(" would be a neat trick!\n\n");
				printf("Congratulations!!\n");
				exit(0);
			}
			k = cval[i] + 1 - sc;
			printf("To achieve the next higher rating, you need");
			printf(" %d more point", k);
			if (k == 1)
				printf(".\n");
			else
				printf("s.\n");
			exit(0);
		}
	printf("You just went off my scale!!!\n");
	exit(0);
}


void
die(int entry)			/* label 90 */
{
	int     i;

	if (entry != 99) {
		rspeak(23);
		oldlc2 = loc;
	}
	if (closng) {		/* 99 */
		rspeak(131);
		numdie++;
		done(2);
	}
	yea = yes(81 + numdie * 2, 82 + numdie * 2, 54);
	numdie++;
	if (numdie == maxdie || !yea)
		done(2);
	place[water] = 0;
	place[oil] = 0;
	if (toting(lamp))
		prop[lamp] = 0;
	for (i = 100; i >= 1; i--) {
		if (!toting(i))
			continue;
		k = oldlc2;
		if (i == lamp)
			k = 1;
		drop(i, k);
	}
	loc = 3;
	oldloc = loc;
}
@


1.8
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: done.c,v 1.7 2004/07/09 15:59:26 deraadt Exp $	*/
d42 2
a44 1
#include "extern.h"
@


1.7
log
@ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: done.c,v 1.6 2003/07/10 00:03:01 david Exp $	*/
a36 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)done.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: done.c,v 1.6 2003/07/10 00:03:01 david Exp $";
#endif
#endif /* not lint */
@


1.6
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: done.c,v 1.5 2003/06/03 03:01:37 millert Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: done.c,v 1.5 2003/06/03 03:01:37 millert Exp $";
d54 1
a54 1
score()			/* sort of like 20000 */
d107 2
a108 2
done(entry)		/* entry=1 means goto 13000 */	/* game is over */
	int     entry;	/* entry=2 means goto 20000 */	/* 3=19000 */
d142 1
a142 2
die(entry)			/* label 90 */
	int     entry;
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: done.c,v 1.4 1998/09/02 06:36:07 pjanzen Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: done.c,v 1.4 1998/09/02 06:36:07 pjanzen Exp $";
d49 1
@


1.4
log
@More changes from jsm28@@cam.ac.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: done.c,v 1.3 1998/08/31 02:29:37 pjanzen Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d42 1
a42 1
static char rcsid[] = "$OpenBSD: done.c,v 1.3 1998/08/31 02:29:37 pjanzen Exp $";
@


1.3
log
@merge in NetBSD, including recent PR's of jsm28@@cam.ac.uk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD$";
d144 1
a144 1
int
a176 1
	return (2000);
@


1.2
log
@tabify
@
text
@d1 1
d46 1
a46 1
static char rcsid[] = "$NetBSD: done.c,v 1.2 1995/03/21 12:05:01 cgd Exp $";
d50 1
a50 1
/*	Re-coding of advent in C: termination routines			*/
d52 1
d54 1
d56 18
a73 10
score()						/* sort of like 20000	*/
{       register int scor,i;
	mxscor=scor=0;
	for (i=50; i<=maxtrs; i++)
	{	if (ptext[i].txtlen==0) continue;
		k=12;
		if (i==chest) k=14;
		if (i>chest) k=16;
		if (prop[i]>=0) scor += 2;
		if (place[i]==3&&prop[i]==0) scor += k-2;
d76 4
a79 3
	scor += (maxdie-numdie)*10;
	mxscor += maxdie*10;
	if (!(scorng||gaveup)) scor += 4;
d81 2
a82 1
	if (dflag!=0) scor += 25;
d84 2
a85 1
	if (closng) scor += 25;
d87 9
a95 5
	if (closed)
	{       if (bonus==0) scor += 10;
		if (bonus==135) scor += 25;
		if (bonus==134) scor += 30;
		if (bonus==133) scor += 45;
d98 2
a99 1
	if (place[magzin]==108) scor++;
d103 4
a106 3
	for (i=1; i<=hntmax; i++)
		if (hinted[i]) scor -= hints[i][2];
	return(scor);
d109 17
a125 12
done(entry)	/* entry=1 means goto 13000 */	/* game is over		*/
int entry;      /* entry=2 means goto 20000 */ /* 3=19000 */
{       register int i,sc;
	if (entry==1) mspeak(1);
	if (entry==3) rspeak(136);
	printf("\n\n\nYou scored %d out of a ",(sc=score()));
	printf("possible %d using %d turns.\n",mxscor,turns);
	for (i=1; i<=clsses; i++)
		if (cval[i]>=sc)
		{       speak(&ctext[i]);
			if (i==clsses-1)
			{       printf("To achieve the next higher rating");
d130 1
a130 1
			k=cval[i]+1-sc;
d132 5
a136 3
			printf(" %d more point",k);
			if (k==1) printf(".\n");
			else printf("s.\n");
d144 9
a152 6
die(entry)					/* label 90		*/
int entry;
{       register int i;
	if (entry != 99)
	{       rspeak(23);
		oldlc2=loc;
d154 2
a155 2
	if (closng)				/* 99			*/
	{       rspeak(131);
d159 1
a159 1
	yea=yes(81+numdie*2,82+numdie*2,54);
d161 13
a173 9
	if (numdie==maxdie || !yea) done(2);
	place[water]=0;
	place[oil]=0;
	if (toting(lamp)) prop[lamp]=0;
	for (i=100; i>=1; i--)
	{       if (!toting(i)) continue;
		k=oldlc2;
		if (i==lamp) k=1;
		drop(i,k);
d175 3
a177 3
	loc=3;
	oldloc=loc;
	return(2000);
@


1.1
log
@Initial revision
@
text
@d49 1
a49 1
/*      Re-coding of advent in C: termination routines                  */
d53 1
a53 1
score()                                         /* sort of like 20000   */
d89 1
a89 1
done(entry)     /* entry=1 means goto 13000 */  /* game is over         */
d117 1
a117 1
die(entry)                                      /* label 90             */
d124 1
a124 1
	if (closng)                             /* 99                   */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
