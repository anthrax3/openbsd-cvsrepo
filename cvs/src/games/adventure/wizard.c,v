head	1.20;
access;
symbols
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.24
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.20
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.18
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.16
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.14
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.7.0.10
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.8
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2017.06.23.12.56.25;	author fcambus;	state Exp;
branches;
next	1.19;
commitid	WZ507x8mgOPk64yX;

1.19
date	2016.03.08.10.48.39;	author mestre;	state Exp;
branches;
next	1.18;
commitid	MVW94yecJ4ENUFco;

1.18
date	2016.01.03.14.38.16;	author mestre;	state Exp;
branches;
next	1.17;
commitid	Ptgw9rNvmSHNRfGy;

1.17
date	2014.12.31.15.45.57;	author tedu;	state Exp;
branches;
next	1.16;
commitid	AUwjkKxj3SWsL8mB;

1.16
date	2014.11.16.04.49.48;	author guenther;	state Exp;
branches;
next	1.15;
commitid	8XNajyb9IqHkZEKg;

1.15
date	2013.08.22.04.43.41;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.27.23.59.23;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.09.15.59.26;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.03.01.37;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.07.18.19.37;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.06.18.50.33;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.18.06.38.43;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.22.22.31.47;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	98.08.31.02.29.47;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.07.26.16.59.48;	author imp;	state Exp;
branches;
next	1.5;

1.5
date	97.07.23.20.04.44;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.07.05.23.22.17;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.01.11.10.01.29;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.12.19.22.20.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.36;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove unused confirm() and datime() functions.

Those functions are unused and have been compiled out since 1998,
it's time to let them go.

OK sthen@@, tom@@, mestre@@
@
text
@/*	$OpenBSD: wizard.c,v 1.19 2016/03/08 10:48:39 mestre Exp $	*/
/*	$NetBSD: wizard.c,v 1.3 1995/04/24 12:21:41 cgd Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * The game adventure was originally written in Fortran by Will Crowther
 * and Don Woods.  It was later translated to C and enhanced by Jim
 * Gillogly.  This code is derived from software contributed to Berkeley
 * by Jim Gillogly at The Rand Corporation.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*	Re-coding of advent in C: privileged operations			*/

#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#include "extern.h"
#include "hdr.h"

char    magic[6];

void
poof(void)
{
	strlcpy(magic, DECR(d,w,a,r,f), sizeof magic);
	latncy = 45;
}

int
Start(void)
{
	time_t  t, delay;

	time(&t);
	delay = (t - savet) / 60;	/* Minutes	*/
	saved = -1;

	if (delay >= latncy)
		return (FALSE);
	printf("This adventure was suspended a mere %d minute%s ago.",
		(int)delay, delay == 1 ? "" : "s");
	if (delay <= latncy / 3) {
		mspeak(2);
		exit(0);
	}
	mspeak(8);
	if (!wizard()) {
		mspeak(9);
		exit(0);
	}
	return (FALSE);
}

int
wizard(void)		/* not as complex as advent/10 (for now)	*/
{
	if (!yesm(16, 0, 7))
		return (FALSE);
	mspeak(17);
	getin(wd1, sizeof(wd1), wd2, sizeof(wd2));
	if (!weq(wd1, magic)) {
		mspeak(20);
		return (FALSE);
	}
	mspeak(19);
	return (TRUE);
}

void
ciao(void)
{
	int	ch;
	char   *c;
	char    fname[PATH_MAX];

	printf("What would you like to call the saved version?\n");
	for (c = fname; c - fname < sizeof(fname); c++) {
		if ((ch = getchar()) == '\n' || ch == EOF)
			break;
		*c = ch;
	}
	if (c - fname == sizeof(fname)) {
		c--;
		FLUSHLINE;
	}
	*c = '\0';
	if (save(fname) != 0)
		return;		/* Save failed */
	printf("To resume, say \"adventure %s\".\n", fname);
	printf("\"With these rooms I might now have been familiarly acquainted.\"\n");
	exit(0);
}


int
ran(int range)
{
	return (arc4random_uniform(range));
}
@


1.19
log
@Headers cleanup with and OK tb@@

This was prompted by an initial patch sent by Edgar Pettijohn
<edgar ! pettijohn-web.com> but the actual commit is different
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.18 2016/01/03 14:38:16 mestre Exp $	*/
a46 18

#if 0
void
datime(int *d, int *t)
{
	time_t  tvec;
	struct tm *tptr;

	time(&tvec);
	tptr = localtime(&tvec);
	/* day since 1977  (mod leap)   */
	*d = tptr->tm_yday + 365 * (tptr->tm_year - 77);
	/* bug: this will overflow in the year 2066 AD                  */
	/* it will be attributed to Wm the C's millenial celebration    */
	/* and minutes since midnite */
	*t = tptr->tm_hour * 60 + tptr->tm_min;
}				/* pretty painless              */
#endif
@


1.18
log
@About 13 years ago when the idiom srandom(time()), and sometimes
srandom(time()+getpid()), was changed by srandomdev(), but #include <time.h>
lived up until this day so remove it.

Additionally, earlier than that, 18 years ago, random(6) was one of the first
consumers of arc4random(3) family, and was pulling it from dev/rndvar.h but
these days we pull it from stdlib.h, which is already done, so while here
remove dev/rndvar.h also.

"seems comprehensive to me" deraadt@@ and OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.17 2014/12/31 15:45:57 tedu Exp $	*/
d43 1
a43 1
#include <string.h>
@


1.17
log
@adventure requires deterministic random for its internal data
"obfuscation" scheme to work (words fail me), but we can use arc4random
for the in game fun. from theo buehler
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.16 2014/11/16 04:49:48 guenther Exp $	*/
d42 1
d44 2
a45 2
#include <stdlib.h>
#include <time.h>
a46 1
#include "extern.h"
@


1.16
log
@Eliminate pointless use of <sys/param.h>, <sys/file.h>, <sys/sockio.h>,
    and <sys/ttydefaults.h>
Replace MAXPATHLEN with PATH_MAX and MAXLOGNAME with LOGIN_NAME_MAX
Pull in <limits.h> where needed
Prefer sizeof(var) over MAXFOO or FOO_MAX

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.15 2013/08/22 04:43:41 guenther Exp $	*/
d144 1
a144 4
	long    i;

	i = random() % range;
	return (i);
@


1.15
log
@Correct format string mismatches turned up by -Wformat=2

suggestions and ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.14 2009/10/27 23:59:23 deraadt Exp $	*/
d40 1
a40 1
#include <sys/param.h>
d120 1
a120 1
	char    fname[MAXPATHLEN];
d123 1
a123 1
	for (c = fname; c - fname < MAXPATHLEN; c++) {
d128 1
a128 1
	if (c - fname == MAXPATHLEN) {
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.13 2004/07/09 15:59:26 deraadt Exp $	*/
d87 1
a87 1
		delay, delay == 1 ? "" : "s");
@


1.13
log
@ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.12 2003/06/03 03:01:37 millert Exp $	*/
a36 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)wizard.c	8.1 (Berkeley) 6/2/93";
#else
static char rcsid[] = "$OpenBSD: wizard.c,v 1.12 2003/06/03 03:01:37 millert Exp $";
#endif
#endif /* not lint */
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.11 2003/04/07 18:19:37 millert Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: wizard.c,v 1.11 2003/04/07 18:19:37 millert Exp $";
d58 1
a58 2
datime(d, t)
	int    *d, *t;
d77 1
a77 1
poof()
d84 1
a84 1
Start()
d109 1
a109 1
wizard()		/* not as complex as advent/10 (for now)	*/
d124 1
a124 1
ciao()
d150 1
a150 2
ran(range)
	int     range;
@


1.11
log
@Change wd1 and wd2 from pointers to arrays.  This removes the need
for getin() to have static buffers and allows us to do "sizeof wd1".

Also fix saved game path.  It was removing the first 2 chars of
the filename due to a bug.

tdeval@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.10 2003/04/06 18:50:33 deraadt Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d42 1
a42 1
static char rcsid[] = "$OpenBSD: wizard.c,v 1.10 2003/04/06 18:50:33 deraadt Exp $";
@


1.10
log
@2451 lines of strdup/sprintf/strcpy whacking.  mostly ok'd by pjanzen
already, but he may have later changes to make still.
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.9 2002/02/18 06:38:43 deraadt Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: wizard.c,v 1.9 2002/02/18 06:38:43 deraadt Exp $";
a115 2
	char   *word, *x;

d119 2
a120 2
	getin(&word, &x);
	if (!weq(word, magic)) {
d137 1
a137 2
		*c = ch = getchar();
		if ((*c = getchar()) == '\n' || ch == EOF)
d139 1
@


1.9
log
@someone should read compiler messages on the powerpc
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.8 2001/03/22 22:31:47 pjanzen Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: wizard.c,v 1.8 2001/03/22 22:31:47 pjanzen Exp $";
d84 1
a84 1
	strcpy(magic, DECR(d,w,a,r,f));
@


1.8
log
@File name buffer should be MAXPATHLEN; ianm@@cit.uws.edu.au.  Also avoid
buffer overflow on file name.
@
text
@d1 1
a1 1
/*	$OpenBSD: wizard.c,v 1.7 1998/08/31 02:29:47 pjanzen Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: wizard.c,v 1.7 1998/08/31 02:29:47 pjanzen Exp $";
d133 1
d138 3
a140 2
	for (c = fname; c - fname < MAXPATHLEN; c++)
		if ((*c = getchar()) == '\n' || *c == EOF)
d142 1
@


1.7
log
@merge in NetBSD, including recent PR's of jsm28@@cam.ac.uk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD$";
d52 1
d134 1
a134 1
	char    fname[80];
d137 1
a137 1
	for (c = fname;; c++)
d140 5
a144 1
	*c = 0;
@


1.6
log
@Modernize time proceedures.  Remove obsolete comment
@
text
@d1 1
d46 1
a46 1
static char rcsid[] = "$NetBSD: wizard.c,v 1.3 1995/04/24 12:21:41 cgd Exp $";
d52 1
a52 1
# include "hdr.h"
d54 1
d56 2
d59 7
a65 4
datime(d,t)
int *d,*t;
{       struct tm *tptr;
	time_t tvec;
d68 9
a76 4
	tptr=localtime(&tvec);
	*d=tptr->tm_yday+365*(tptr->tm_year-77); /* day since 1977  (mod leap)   */
	*t=tptr->tm_hour*60+tptr->tm_min; /* and minutes since midnite    */
}					/* pretty painless		*/
d78 1
d80 1
a80 2
char magic[6];

d87 4
a90 2
Start(n)
{       int d,t,delay;
d92 3
a94 2
	datime(&d,&t);
	delay=(d-saved)*1440+(t-savet); /* good for about a month     */
d97 1
a97 3
	{       saved = -1;
		return(FALSE);
	}
d99 3
a101 3
		delay, delay == 1? "" : "s");
	if (delay <= latncy/3)
	{       mspeak(2);
d105 2
a106 2
	if (!wizard())
	{       mspeak(9);
d109 1
a109 2
	saved = -1;
	return(FALSE);
d112 1
d114 5
a118 3
{       register int wiz;
	char *word,*x;
	if (!yesm(16,0,7)) return(FALSE);
d120 4
a123 4
	getin(&word,&x);
	if (!weq(word,magic))
	{       mspeak(20);
		return(FALSE);
d126 1
a126 1
	return(TRUE);
d129 5
a133 6
ciao(cmdfile)
char *cmdfile;
{       register char *c;
	register int outfd, size;
	char fname[80], buf[512];
	extern unsigned filesize;
d136 6
a141 4
	for (c=fname;; c++)
		if ((*c=getchar())=='\n' || *c == EOF) break;
	*c=0;
	if (save(fname) != 0) return;		/* Save failed */
d148 1
d150 1
a150 1
int range;
d152 1
a152 1
	long rand(), i;
d154 2
a155 2
	i = rand() % range;
	return(i);
@


1.5
log
@tabify
@
text
@d57 2
a58 1
{       int tvec[2],*tptr;
d60 4
a63 6
	time(tvec);
	tptr=(int *)localtime(tvec);
	*d=tptr[7]+365*(tptr[5]-77);    /* day since 1977  (mod leap)   */
	/* bug: this will overflow in the year 2066 AD			*/
	/* it will be attributed to Wm the C's millenial celebration    */
	*t=tptr[2]*60+tptr[1];		/* and minutes since midnite	*/
@


1.4
log
@<time.h>
@
text
@d49 1
a49 1
/*      Re-coding of advent in C: privileged operations                 */
d62 1
a62 1
	/* bug: this will overflow in the year 2066 AD                  */
d64 2
a65 2
	*t=tptr[2]*60+tptr[1];          /* and minutes since midnite    */
}                                       /* pretty painless              */
d101 1
a101 1
wizard()                /* not as complex as advent/10 (for now)        */
d126 1
a126 1
	if (save(fname) != 0) return;           /* Save failed */
@


1.3
log
@Fix PR#2 in a simplistic way.  Handle EOF on all getchar()s
@
text
@d53 1
d60 1
a60 1
	tptr=localtime(tvec);
@


1.2
log
@setgid games, not setuid games. closes a neat set of holes
@
text
@d123 1
a123 1
		if ((*c=getchar())=='\n') break;
@


1.1
log
@Initial revision
@
text
@a56 1
	int *localtime();
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
