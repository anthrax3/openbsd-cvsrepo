head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.6.0.26
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2016.01.08.18.20.33;	author mestre;	state Exp;
branches;
next	1.7;
commitid	IlHJftt9IPFIQn9F;

1.7
date	2016.01.08.18.19.47;	author mestre;	state Exp;
branches;
next	1.6;
commitid	73TLYe3VSt6HwinY;

1.6
date	2009.10.27.23.59.26;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.28.08.44.14;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.11;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	98.09.20.23.36.55;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@ANSIfy monop(6)

OK tb@@
@
text
@/*	$OpenBSD: print.c,v 1.7 2016/01/08 18:19:47 mestre Exp $	*/
/*	$NetBSD: print.c,v 1.3 1995/03/23 08:35:05 cgd Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>

#include "monop.ext"

static const char	*header	= "Name      Own      Price Mg # Rent";

static void	printmorg(SQUARE *);

/*
 *	This routine prints out the current board
 */
void
printboard(void)
{
	int	i;

	printf("%s\t%s\n", header, header);
	for (i = 0; i < N_SQRS/2; i++) {
		printsq(i, FALSE);
		putchar('\t');
		printsq(i+N_SQRS/2, TRUE);
	}
}
/*
 *	This routine lists where each player is.
 */
void
where(void)
{
	int	i;

	printf("%s Player\n", header);
	for (i = 0; i < num_play; i++) {
		printsq(play[i].loc, FALSE);
		printf(" %s (%d)", play[i].name, i+1);
		if (cur_p == &play[i])
			printf(" *");
		putchar('\n');
	}
}
/*
 *	This routine prints out an individual square
 */
void
printsq(int sqn, bool eoln)
{
	int	rnt;
	PROP	*pp;
	SQUARE	*sqp;

	sqp = &board[sqn];
	printf("%-10.10s", sqp->name);
	switch (sqp->type) {
	case SAFE:
	case CC:
	case CHANCE:
	case INC_TAX:
	case GOTO_J:
	case LUX_TAX:
	case IN_JAIL:
		if (!eoln)
			printf("                        ");
		break;
	case PRPTY:
		pp = sqp->desc;
		if (sqp->owner < 0) {
			printf(" - %-8.8s %3d", pp->mon_desc->name, sqp->cost);
			if (!eoln)
				printf("         ");
			break;
		}
		printf(" %d %-8.8s %3d", sqp->owner+1, pp->mon_desc->name,
			sqp->cost);
		printmorg(sqp);
		if (pp->monop) {
			if (pp->houses < 5) {
				if (pp->houses > 0)
					printf("%d %4d", pp->houses,
						pp->rent[(int)pp->houses]);
				else
					printf("0 %4d", pp->rent[0] * 2);
			} else
				printf("H %4d", pp->rent[5]);
		} else
			printf("  %4d", pp->rent[0]);
		break;
	case UTIL:
		if (sqp->owner < 0) {
			printf(" -          150");
			if (!eoln)
				printf("         ");
			break;
		}
		printf(" %d          150", sqp->owner+1);
		printmorg(sqp);
		printf("%d", play[(int)sqp->owner].num_util);
		if (!eoln)
			printf("    ");
		break;
	case RR:
		if (sqp->owner < 0) {
			printf(" - Railroad 200");
			if (!eoln)
				printf("         ");
			break;
		}
		printf(" %d Railroad 200", sqp->owner+1);
		printmorg(sqp);
		rnt = 25;
		rnt <<= play[(int)sqp->owner].num_rr - 1;
		printf("%d %4d", play[(int)sqp->owner].num_rr,
		    25 << (play[(int)sqp->owner].num_rr - 1));
		break;
	default:
		printf("Warning: printsq() switch %d\n", sqp->type);
		break;
	}
	if (eoln)
		putchar('\n');
}
/*
 *	This routine prints out the mortgage flag.
 */
static void
printmorg(SQUARE *sqp)
{
	if (sqp->desc->morg)
		printf(" * ");
	else
		printf("   ");
}
/*
 *	This routine lists the holdings of the player given
 */
void
printhold(int pl)
{
	OWN	*op;
	PLAY	*pp;

	pp = &play[pl];
	printf("%s's (%d) holdings (Total worth: $%d):\n", name_list[pl], pl+1,
		pp->money + prop_worth(pp));
	printf("\t$%d", pp->money);
	if (pp->num_gojf) {
		printf(", %d get-out-of-jail-free card", pp->num_gojf);
		if (pp->num_gojf > 1)
			putchar('s');
	}
	putchar('\n');
	if (pp->own_list) {
		printf("\t%s\n", header);
		for (op = pp->own_list; op; op = op->next) {
			putchar('\t');
			printsq(sqnum(op->sqr), TRUE);
		}
	}
}
@


1.7
log
@Headers cleanup and removal where suitable

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.6 2009/10/27 23:59:26 deraadt Exp $	*/
d45 1
a45 1
printboard()
d60 1
a60 1
where()
d77 1
a77 3
printsq(sqn, eoln)
	int	sqn;
	bool	eoln;
d157 1
a157 2
printmorg(sqp)
	SQUARE	*sqp;
d168 1
a168 2
printhold(pl)
	int	pl;
@


1.6
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.5 2003/06/03 03:01:40 millert Exp $	*/
d33 3
a35 1
#include	"monop.ext"
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.4 2002/07/28 08:44:14 pjanzen Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)print.c	8.1 (Berkeley) 5/31/93";
#else
static const char rcsid[] = "$OpenBSD: print.c,v 1.4 2002/07/28 08:44:14 pjanzen Exp $";
#endif
#endif /* not lint */
@


1.4
log
@Tidy the code, follow the rules more closely (and document where we diverge),
and make save files work.  The last stops a number of segfaults.
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.3 2002/02/16 21:27:11 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD$";
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.2 1998/09/20 23:36:55 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: print.c,v 1.2 1998/09/20 23:36:55 pjanzen Exp $";
d47 1
a47 1
static char	*header	= "Name      Own      Price Mg # Rent";
d123 1
a123 1
						pp->rent[pp->houses]);
d140 1
a140 1
		printf("%d", play[sqp->owner].num_util);
d154 6
a159 2
		rnt <<= play[sqp->owner].num_rr - 1;
		printf("%d %4d", play[sqp->owner].num_rr, 25 << (play[sqp->owner].num_rr - 1));
@


1.2
log
@rand -> random; handle EOF; don't overflow on user input; check for calloc()
success; OpenBSD tags; some reformatting and ridding of unused variables.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d49 1
a49 1
static void	printmorg __P((SQUARE *));
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: print.c,v 1.3 1995/03/23 08:35:05 cgd Exp $";
d45 1
a45 1
# include	"monop.ext"
d47 3
a49 2
static char	buf[80],		/* output buffer		*/
		*header	= "Name      Own      Price Mg # Rent";
d54 4
a57 3
printboard() {

	reg int	i;
d69 4
a72 4
where() {

	reg int	i;
	char	*bsp;
d86 1
d88 6
a93 7
int		sqn;
reg bool	eoln; {

	reg int		rnt;
	reg PROP	*pp;
	reg SQUARE	*sqp;
	int		i;
d98 7
a104 8
	  case SAFE:
	  case CC:
	  case CHANCE:
	  case INC_TAX:
	  case GOTO_J:
	  case LUX_TAX:
	  case IN_JAIL:
spec:
d108 1
a108 1
	  case PRPTY:
d120 1
a120 1
			if (pp->houses < 5)
d126 1
a126 1
			else
d128 1
a128 2
		}
		else
d131 1
a131 1
	  case UTIL:
d144 1
a144 1
	  case RR:
d164 1
d166 2
a167 2
reg SQUARE	*sqp; {

d176 1
d178 4
a181 5
reg int	pl; {

	reg OWN		*op;
	reg PLAY	*pp;
	char		*bsp;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
