head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.6
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.9.0.26
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.14
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.10
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.8
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.6
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.4
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.01.08.18.20.33;	author mestre;	state Exp;
branches;
next	1.11;
commitid	IlHJftt9IPFIQn9F;

1.11
date	2016.01.08.18.19.47;	author mestre;	state Exp;
branches;
next	1.10;
commitid	73TLYe3VSt6HwinY;

1.10
date	2015.10.24.18.39.05;	author mmcc;	state Exp;
branches;
next	1.9;
commitid	ZRAuF3eRDYJbBI4z;

1.9
date	2009.10.27.23.59.26;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.03.02.04.32.32;	author ray;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.28.08.44.14;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.10;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.24.00.56.04;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.09.20.23.36.50;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	97.04.01.16.00.57;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.08;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.08;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@ANSIfy monop(6)

OK tb@@
@
text
@/*	$OpenBSD: getinp.c,v 1.11 2016/01/08 18:19:47 mestre Exp $	*/
/*	$NetBSD: getinp.c,v 1.4 1995/04/24 12:24:20 cgd Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "monop.ext"

#define	LINE	70

static char	buf[257];

static int	comp(char *);

int
getinp(char *prompt, char *list[])
{
	int	i, n_match, match;
	char	*sp;

	for (;;) {
		printf("%s", prompt);
		fgets(buf, sizeof(buf), stdin);
		if ((feof(stdin))) {
			printf("user closed input stream, quitting...\n");
			exit(0);
		}
		if (buf[0] == '?' /* && buf[1] == '\n' */ ) {
			printf("Valid inputs are: ");
			for (i = 0, match = 18; list[i]; i++) {
				if ((match += (n_match = strlen(list[i]))) > LINE) {
					printf("\n\t");
					match = n_match + 8;
				}
				if (*list[i] == '\0') {
					match += 8;
					printf("<RETURN>");
				}
				else
					printf("%s", list[i]);
				if (list[i+1])
					printf(", ");
				else
					putchar('\n');
				match += 2;
			}
			continue;
		}
		if ((sp = strchr(buf, '\n')) != NULL)
			*sp = '\0';
		for (sp = buf; *sp; sp++)
			if (isupper((unsigned char)*sp))
				*sp = tolower((unsigned char)*sp);
		for (i = n_match = 0; list[i]; i++)
			if (comp(list[i])) {
				n_match++;
				match = i;
			}
		if (n_match == 1)
			return match;
		else if (buf[0] != '\0')
			printf("Illegal response: \"%s\".  Use '?' to get list of valid answers\n", buf);
	}
	return 0;
}

static int
comp(char *s1)
{
	char	*sp, *tsp, c;

	if (buf[0] != '\0')
		for (sp = buf, tsp = s1; *sp; ) {
			c = isupper((unsigned char)*tsp) ?
			    tolower((unsigned char)*tsp) : *tsp;
			tsp++;
			if (c != *sp++)
				return 0;
		}
	else if (*s1 != '\0')
		return 0;
	return 1;
}
@


1.11
log
@Headers cleanup and removal where suitable

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.10 2015/10/24 18:39:05 mmcc Exp $	*/
d47 1
a47 2
getinp(prompt, list)
	char	*prompt, *list[];
d99 1
a99 2
comp(s1)
	char	*s1;
@


1.10
log
@Cast ctype functions' argument to unsigned char.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.9 2009/10/27 23:59:26 deraadt Exp $	*/
d33 6
a38 4
#include	<stdio.h>
#include	<string.h>
#include	<ctype.h>
#include	"monop.ext"
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.8 2007/03/02 04:32:32 ray Exp $	*/
d82 2
a83 2
			if (isupper(*sp))
				*sp = tolower(*sp);
d105 2
a106 1
			c = isupper(*tsp) ? tolower(*tsp) : *tsp;
@


1.8
log
@strlen fixes from Charles Longeau.

OK moritz@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.7 2003/06/03 03:01:40 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)getinp.c	8.1 (Berkeley) 5/31/93";
#else
static const char rcsid[] = "$OpenBSD: getinp.c,v 1.7 2003/06/03 03:01:40 millert Exp $";
#endif
#endif /* not lint */
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.6 2002/07/28 08:44:14 pjanzen Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: getinp.c,v 1.6 2002/07/28 08:44:14 pjanzen Exp $";
d87 1
a87 2
		sp = buf + strlen(buf) - 1;
		if (*sp == '\n')
@


1.6
log
@Tidy the code, follow the rules more closely (and document where we diverge),
and make save files work.  The last stops a number of segfaults.
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.5 2002/02/16 21:27:10 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD$";
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.4 2000/07/24 00:56:04 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: getinp.c,v 1.4 2000/07/24 00:56:04 pjanzen Exp $";
d70 1
a70 1
		if (buf[0] == '?' && buf[1] == '\n') {
@


1.4
log
@printf() and %s pedantry, from itojun channelling kris@@freebsd
@
text
@d1 1
a1 1
/*	$OpenBSD: getinp.c,v 1.3 1998/09/20 23:36:50 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: getinp.c,v 1.3 1998/09/20 23:36:50 pjanzen Exp $";
d54 1
a54 1
static int	comp __P((char *));
@


1.3
log
@rand -> random; handle EOF; don't overflow on user input; check for calloc()
success; OpenBSD tags; some reformatting and ridding of unused variables.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d64 1
a64 1
		printf(prompt);
d82 1
a82 1
					printf(list[i]);
@


1.2
log
@Changes from NetBSD to compile games without warnings due to short being
unsigned on some archs, PowerPC, ROMP.
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: getinp.c,v 1.4 1995/04/24 12:24:20 cgd Exp $";
d45 4
a48 3
# include	<stdio.h>
# include	<string.h>
# include	<ctype.h>
d50 1
a50 1
# define	reg	register
d52 1
a52 1
# define	LINE	70
d54 1
a54 1
static char	buf[257];
d56 1
d58 3
a60 3
char	*prompt, *list[]; {

	reg int	i, n_match, match;
a61 3
	int	c;
	int	plen;
	static int comp();
a63 1
inter:
d65 4
a68 6
		for (sp = buf; (c=getchar()) != '\n'; ) {
			*sp = c;
			if (c == -1)	/* check for interupted system call */
				goto inter;
			else if (sp != buf || *sp != ' ')
				sp++;
a69 1
		*sp = c;
d73 1
a73 1
				if ((match+=(n_match=strlen(list[i]))) > LINE) {
d91 3
a93 1
		*sp = '\0';
d107 1
d110 1
a110 1
static
d112 3
a114 3
char	*s1; {

	reg char	*sp, *tsp, c;
@


1.1
log
@Initial revision
@
text
@d59 1
d66 3
a68 2
		for (sp = buf; (*sp=getchar()) != '\n'; )
			if (*sp == -1)	/* check for interupted system call */
d72 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
