head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.54
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.46
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.50
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.48
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.44
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.42
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.40
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.01.08.13.33.42;	author tb;	state dead;
branches;
next	1.3;
commitid	HDKswKg7NlWvJhIy;

1.3
date	2003.03.11.04.47.39;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.28.23.41.49;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.24;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.24;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Structural integrity hasn't improved in over twenty years.

ok mestre@@
@
text
@/*	$OpenBSD: board.x,v 1.3 2003/03/11 04:47:39 david Exp $	*/
/*	$NetBSD: board.x,v 1.2 1995/04/22 10:58:30 cgd Exp $	*/

# include	"trek.h"

/*
**  BOARD A KLINGON
**
**	A Klingon battle cruiser is boarded.  If the boarding party
**	is successful, they take over the vessel, otherwise, you
**	have wasted a move.  Needless to say, this move is not free.
**
**	User parameters are the Klingon to be boarded and the size of
**	the boarding party.
**
**	Three things are computed.  The first is the probability that
**	the party takes over the Klingon.  This is dependent on the
**	size of the party, the condition of the Klingon (for which
**	the energy left is used, which is definitely incorrect), and
**	the number of losses that the boarding party sustains.  If too
**	many of the boarding party are killed, the probability drops
**	to zero.  The second quantity computed is the losses that the
**	boarding party sustains.  This counts in your score.  It
**	depends on the absolute and relative size of the boarding
**	party and the strength of the Klingon.  The third quantity
**	computed is the number of Klingon captives you get to take.
**	It is actually computed as the number of losses they sustain
**	subtracted from the size of their crew.  It depends on the
**	relative size of the party.  All of these quantities are
**	randomized in some fashion.
*/

board()
{
	int			prob;
	int			losses;
	int			captives;
	float			t;
	int			party;

	if (checkout(XPORTER))
		return;

	k = selectklingon();
	if (!k->srndreq)
	{
		return (printf("But captain! You must request surrender first\n"));
	}

	t = party / Param.crew;

	prob = 1000 * t;
	prob =- 500 * k->power / Param.klingpwr;

	losses = party * k->power * t * 0.5 / Param.klingpwr * (franf() + 1.0);
	if (losses * 4 > party)
		prob = 0;

	captives = %%% * (1.0 - t) * 0.5 * (franf() + 1.0);

	if (prob > ranf(1000))
		success!!!;
@


1.3
log
@double words and spelling fixes
ok pjanzen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: board.x,v 1.2 2001/01/28 23:41:49 niklas Exp $	*/
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: board.x,v 1.2 1995/04/22 10:58:30 cgd Exp $	*/
d19 1
a19 1
**	the energy left is used, which is definately incorrect), and
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
