head	1.25;
access;
symbols
	OPENBSD_6_2:1.25.0.10
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.25.0.8
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.4
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.6
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.18.0.16
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.14
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.12
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.10
	OPENBSD_5_0:1.18.0.8
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.6
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.4
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.16.0.14
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.10
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.8
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.6
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.4
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.25
date	2016.01.08.18.09.59;	author mestre;	state Exp;
branches;
next	1.24;
commitid	rzHxXR4ksTqCTr4f;

1.24
date	2016.01.08.18.05.58;	author mestre;	state Exp;
branches;
next	1.23;
commitid	qycMYAxRCIO41J4W;

1.23
date	2016.01.07.16.00.32;	author tb;	state Exp;
branches;
next	1.22;
commitid	IwzFE3fG5RnKTWNh;

1.22
date	2015.11.30.08.49.06;	author tb;	state Exp;
branches;
next	1.21;
commitid	qb5k178UBdP66Fhs;

1.21
date	2015.11.04.21.22.10;	author tedu;	state Exp;
branches;
next	1.20;
commitid	XDKIiXhFNs4jqYjv;

1.20
date	2015.01.19.00.47.01;	author deraadt;	state Exp;
branches;
next	1.19;
commitid	5ZAlaeZ7VdZBObKN;

1.19
date	2013.08.29.20.22.15;	author naddy;	state Exp;
branches;
next	1.18;

1.18
date	2009.10.27.23.59.25;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2009.10.17.22.03.44;	author sobrado;	state Exp;
branches;
next	1.16;

1.16
date	2006.12.24.12.47.57;	author martin;	state Exp;
branches;
next	1.15;

1.15
date	2006.10.31.15.16.46;	author martin;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.12.06.21.48.51;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.31.05.11.37;	author pjanzen;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.31.03.40.01;	author pjanzen;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.03.21.36.12;	author pjanzen;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.08.21.18.35;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.07.05.03.15;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	99.09.25.15.52.20;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.09.22.04.08.23;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	98.03.26.20.51.22;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	96.12.22.20.01.27;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.12.19.22.21.35;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.02.19.47.06;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@ANSIfy mille(6)

OK tb@@
@
text
@/*	$OpenBSD: mille.c,v 1.24 2016/01/08 18:05:58 mestre Exp $	*/
/*	$NetBSD: mille.c,v 1.4 1995/03/24 05:01:48 cgd Exp $	*/

/*
 * Copyright (c) 1982, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <err.h>
#include <signal.h>
#include <stdlib.h>
#ifdef DEBUG
#include <string.h>
#endif
#include <unistd.h>

#include "mille.h"

/*
 * @@(#)mille.c	1.3 (Berkeley) 5/10/83
 */

int
main(int ac, char *av[])
{
	bool	restore;
	extern char *__progname;

	if (pledge("stdio rpath wpath cpath tty", NULL) == -1)
		err(1, "pledge");

#ifdef DEBUG
	if (strcmp(av[0], "a.out") == 0) {
		outf = fopen("q", "w");
		setvbuf(outf, NULL, _IONBF, 0);
		Debug = TRUE;
	}
#endif
	restore = FALSE;
	switch (ac) {
	  case 2:
		rest_f(av[1]);
		restore = TRUE;
	  case 1:
		break;
	  default:
		fprintf(stderr, "usage: %s [file]\n", __progname);
		return 1;
	}
	Play = PLAYER;
	initscr();
	if ((LINES < 24) || (COLS < 80)) {
		endwin();
		fprintf(stderr, "Screen must be at least 24x80\n");
		return 1;
	}
	delwin(stdscr);
	stdscr = Board = newwin(BOARD_Y, BOARD_X, 0, 0);
	Score = newwin(SCORE_Y, SCORE_X, 0, 40);
	Miles = newwin(MILES_Y, MILES_X, 17, 0);
	leaveok(Score, TRUE);
	leaveok(Miles, TRUE);
	clearok(curscr, TRUE);
	cbreak();
	noecho();
	signal(SIGINT, rub);
	for (;;) {
		if (!restore || (Player[PLAYER].total >= 5000
		    || Player[COMP].total >= 5000)) {
			if (Player[COMP].total < Player[PLAYER].total)
				Player[PLAYER].games++;
			else if (Player[COMP].total > Player[PLAYER].total)
				Player[COMP].games++;
			Player[COMP].total = 0;
			Player[PLAYER].total = 0;
		}
		do {
			if (!restore)
				Handstart = Play = other(Handstart);
			if (!restore || On_exit) {
				shuffle();
				init();
			}
			newboard();
			if (restore)
				mvwaddstr(Score, ERR_Y, ERR_X, Initstr);
			prboard();
			do {
				domove();
				if (Finished)
					newscore();
				prboard();
			} while (!Finished);
			check_more();
			restore = On_exit = FALSE;
		} while (Player[COMP].total < 5000
		    && Player[PLAYER].total < 5000);
	}
}

/*
 *	Routine to trap rubouts, and make sure they really want to
 * quit.
 */
void
rub(int dummy)
{
	(void)signal(SIGINT, SIG_IGN);
	if (getyn(REALLYPROMPT))
		die(0);
	(void)signal(SIGINT, rub);
}

/*
 *	Time to go beddy-by
 */
void
die(int code)
{
	(void)signal(SIGINT, SIG_IGN);
	if (outf)
		fflush(outf);
	mvcur(0, COLS - 1, LINES - 1, 0);
	endwin();
	exit(code);
}
@


1.24
log
@Headers cleanup and also the following:

mille.h:
#define CTRL locally, which is used by move.c and misc.c, to avoid including
termios.h or sys/ttydefaults.h where it's actually defined

varpush.c:
Change _PATH_DEVNULL to "/dev/null" since other systems may not have it defined
but also avoids including <paths.h>

Included a few sugestions from tb@@ who also gave his OK
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.23 2016/01/07 16:00:32 tb Exp $	*/
d48 1
a48 3
main(ac, av)
	int	ac;
	char	*av[];
d130 1
a130 2
rub(dummy)
	int dummy;
d142 1
a142 2
die(code)
	int code;
@


1.23
log
@Some basic code maintenance in games/

- in main() replace exit with return
- drop some /* NOTREACHED */ lint comments along the way.
- make more use of standard CFLAGS, esp. -Wimplicit-function-declaration
- add and sort some headers when needed
- add straightforward pledges to some programs used at compile time

discussed with and ok mestre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.22 2015/11/30 08:49:06 tb Exp $	*/
d33 9
a41 2
#include	"mille.h"
#include	<signal.h>
@


1.22
log
@The usual deal for a curses game with the possibility of saving a game:
pledge "stdio rpath wpath cpath tty"
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.21 2015/11/04 21:22:10 tedu Exp $	*/
d67 1
a67 2
		exit(1);
		/* NOTREACHED */
d74 1
a74 1
		exit(1);
@


1.21
log
@replace setbuf with setvbuf, from Frederic Nowak
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.20 2015/01/19 00:47:01 deraadt Exp $	*/
d47 3
@


1.20
log
@normalize formatting
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.19 2013/08/29 20:22:15 naddy Exp $	*/
d51 1
a51 1
		setbuf(outf, (char *)NULL);
@


1.19
log
@replace srandomdev()+random() with the arc4random*() family
tweaks and ok millert@@, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.18 2009/10/27 23:59:25 deraadt Exp $	*/
d33 2
a34 2
# include	"mille.h"
# include	<signal.h>
@


1.18
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.17 2009/10/17 22:03:44 sobrado Exp $	*/
a80 1
	srandomdev();
@


1.17
log
@synchronize synopsis and usage.
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.16 2006/12/24 12:47:57 martin Exp $	*/
a31 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1982, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)mille.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: mille.c,v 1.16 2006/12/24 12:47:57 martin Exp $";
#endif
#endif /* not lint */
@


1.16
log
@fix program name in usage, use __progname
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.15 2006/10/31 15:16:46 martin Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.15 2006/10/31 15:16:46 martin Exp $";
d77 1
a77 1
		fprintf(stderr, "usage: %s [ restore_file ]\n", __progname);
@


1.15
log
@usage information goes to stderr
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.14 2003/06/03 03:01:40 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.14 2003/06/03 03:01:40 millert Exp $";
d60 1
d77 1
a77 1
		fprintf(stderr, "usage: milles [ restore_file ]\n");
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.13 2002/12/06 21:48:51 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.13 2002/12/06 21:48:51 millert Exp $";
d76 1
a76 1
		printf("usage: milles [ restore_file ]\n");
@


1.13
log
@Replace things like srandom(time(NULL)) with srandomdev(3).  random(3)
good enough for games but we should at least use a decent seed.
pjanzen@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.12 2002/05/31 05:11:37 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.12 2002/05/31 05:11:37 pjanzen Exp $";
@


1.12
log
@crmode -> cbreak
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.11 2002/05/31 03:40:01 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.11 2002/05/31 03:40:01 pjanzen Exp $";
d98 1
a98 5
# ifndef PROF
	srandom(getpid());
# else
	srandom(0);
# endif
@


1.11
log
@No dm -> no need to revoke setegid.
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.10 2001/09/03 21:36:12 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.10 2001/09/03 21:36:12 pjanzen Exp $";
d103 1
a103 1
	crmode();
@


1.10
log
@Tidying, some from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.9 2001/03/08 21:18:35 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.9 2001/03/08 21:18:35 deraadt Exp $";
a63 4

	/* revoke */
	setegid(getgid());
	setgid(getgid());
@


1.9
log
@whack exit(-#)
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.8 2000/04/07 05:03:15 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.8 2000/04/07 05:03:15 pjanzen Exp $";
d69 1
d75 1
@


1.8
log
@Remove unused ifdef missed previously
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.7 1999/09/25 15:52:20 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.7 1999/09/25 15:52:20 pjanzen Exp $";
d83 1
a83 1
		exit(-1);
@


1.7
log
@Tidying and minor changes from or based on jsm28@@cam.ac.uk's work for the
Linux bsd-games package and NetBSD.  Mainly using 'const'.
@
text
@d1 1
a1 1
/*	$OpenBSD: mille.c,v 1.6 1998/09/22 04:08:23 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mille.c,v 1.6 1998/09/22 04:08:23 pjanzen Exp $";
a96 5
#ifdef attron
	idlok(Board, TRUE);
	idlok(Score, TRUE);
	idlok(Miles, TRUE);
#endif
@


1.6
log
@NetBSD changes and further fixes (reformatted man page, better handling of
user input).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD$";
a52 3
# ifdef attron
#	include	<term.h>
# endif	attron
@


1.5
log
@Quit rather than crashing if screen is too small
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: mille.c,v 1.4 1995/03/24 05:01:48 cgd Exp $";
d61 1
a61 2
void	rub();

d63 4
a66 4
register int		ac;
register char	*av[]; {

	register bool	restore;
d155 3
a157 2
rub() {

d167 1
d169 2
a170 2
int code; {

@


1.4
log
@proper gid revoke
@
text
@d91 5
@


1.3
log
@setgid games, not setuid games. closes a neat set of holes
@
text
@d68 3
a70 1
	setgid(getgid());	/* run as the user */
@


1.2
log
@Update for modern curses implementation
@
text
@d68 1
a68 2
	/* run as the user */
	setuid(getuid());
@


1.1
log
@Initial revision
@
text
@d63 2
a64 2
reg int		ac;
reg char	*av[]; {
d66 1
a66 1
	reg bool	restore;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
