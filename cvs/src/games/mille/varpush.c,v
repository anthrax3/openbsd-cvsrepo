head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.8
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.22
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.01.08.18.09.59;	author mestre;	state Exp;
branches;
next	1.10;
commitid	rzHxXR4ksTqCTr4f;

1.10
date	2016.01.08.18.05.58;	author mestre;	state Exp;
branches;
next	1.9;
commitid	qycMYAxRCIO41J4W;

1.9
date	2015.11.04.21.22.10;	author tedu;	state Exp;
branches;
next	1.8;
commitid	XDKIiXhFNs4jqYjv;

1.8
date	2015.01.19.00.47.01;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	5ZAlaeZ7VdZBObKN;

1.7
date	2009.10.27.23.59.26;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.10;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.03.21.36.12;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.09.22.04.08.25;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	96.06.02.19.47.11;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.08;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.08;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@ANSIfy mille(6)

OK tb@@
@
text
@/*	$OpenBSD: varpush.c,v 1.10 2016/01/08 18:05:58 mestre Exp $	*/
/*	$NetBSD: varpush.c,v 1.4 1995/03/24 05:02:35 cgd Exp $	*/

/*
 * Copyright (c) 1982, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifdef DEBUG
#include <err.h>
#endif
#include <errno.h>
#include <string.h>
#include <unistd.h>

#include "mille.h"

/*
 * @@(#)varpush.c	1.1 (Berkeley) 4/1/82
 */

/*
 *	push variables around via the routine func() on the file
 * channel file.  func() is either read or write.
 */
bool
varpush(int file, ssize_t (*func)(int, const struct iovec *, int))
{
	int	temp;
	const struct iovec vec[] = {
		{ (void *) &Debug, sizeof Debug },
		{ (void *) &Finished, sizeof Finished },
		{ (void *) &Order, sizeof Order },
		{ (void *) &End, sizeof End },
		{ (void *) &On_exit, sizeof On_exit },
		{ (void *) &Handstart, sizeof Handstart },
		{ (void *) &Numgos, sizeof Numgos },
		{ (void *) Numseen, sizeof Numseen },
		{ (void *) &Play, sizeof Play },
		{ (void *) &Window, sizeof Window },
		{ (void *) Deck, sizeof Deck },
		{ (void *) &Discard, sizeof Discard },
		{ (void *) Player, sizeof Player }
	};

	if (((func)(file, vec, sizeof(vec) / sizeof(vec[0]))) < 0) {
		error(strerror(errno));
		return FALSE;
	}

	if (func == readv) {
		if ((read(file, (void *) &temp, sizeof temp)) < 0) {
			error(strerror(errno));
			return FALSE;
		}
		Topcard = &Deck[temp];
#ifdef DEBUG
		if (Debug) {
			char	buf[80];
over:
			printf("Debug file:");
			fgets(buf, sizeof(buf), stdin);
			if ((outf = fopen(buf, "w")) == NULL) {
				warn("%s", buf);
				goto over;
			}
			if (strcmp(buf, "/dev/null") != 0)
				setvbuf(outf, NULL, _IONBF, 0);
		}
#endif
	} else {
		temp = Topcard - Deck;
		if ((write(file, (void *) &temp, sizeof temp)) < 0) {
			error(strerror(errno));
			return FALSE;
		}
	}
	return TRUE;
}
@


1.10
log
@Headers cleanup and also the following:

mille.h:
#define CTRL locally, which is used by move.c and misc.c, to avoid including
termios.h or sys/ttydefaults.h where it's actually defined

varpush.c:
Change _PATH_DEVNULL to "/dev/null" since other systems may not have it defined
but also avoids including <paths.h>

Included a few sugestions from tb@@ who also gave his OK
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.9 2015/11/04 21:22:10 tedu Exp $	*/
d51 1
a51 3
varpush(file, func)
	int	file;
	ssize_t	(*func)(int, const struct iovec *, int);
@


1.9
log
@replace setbuf with setvbuf, from Frederic Nowak
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.8 2015/01/19 00:47:01 deraadt Exp $	*/
d33 8
a40 2
#include	<paths.h>
#include	"mille.h"
d93 1
a93 1
			if (strcmp(buf, _PATH_DEVNULL) != 0)
@


1.8
log
@normalize formatting
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.7 2009/10/27 23:59:26 deraadt Exp $	*/
d88 1
a88 1
				setbuf(outf, (char *)NULL);
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.6 2003/06/03 03:01:40 millert Exp $	*/
d33 2
a34 2
# include	<paths.h>
# include	"mille.h"
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.5 2002/02/16 21:27:10 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)varpush.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: varpush.c,v 1.5 2002/02/16 21:27:10 millert Exp $";
#endif
#endif /* not lint */
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.4 2001/09/03 21:36:12 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: varpush.c,v 1.4 2001/09/03 21:36:12 pjanzen Exp $";
@


1.4
log
@Tidying, some from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: varpush.c,v 1.3 1998/09/22 04:08:25 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d59 1
a59 1
	ssize_t	(*func) __P((int, const struct iovec *, int));
@


1.3
log
@NetBSD changes and further fixes (reformatted man page, better handling of
user input).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$NetBSD: varpush.c,v 1.4 1995/03/24 05:02:35 cgd Exp $";
@


1.2
log
@Update for modern curses implementation
@
text
@d1 1
a51 2
int	read(), write();

d56 1
d58 3
a60 3
register int	file;
register int	(*func)(); {

d62 20
d83 5
a87 15
	(*func)(file, (char *) &Debug, sizeof Debug);
	(*func)(file, (char *) &Finished, sizeof Finished);
	(*func)(file, (char *) &Order, sizeof Order);
	(*func)(file, (char *) &End, sizeof End);
	(*func)(file, (char *) &On_exit, sizeof On_exit);
	(*func)(file, (char *) &Handstart, sizeof Handstart);
	(*func)(file, (char *) &Numgos, sizeof Numgos);
	(*func)(file, (char *)  Numseen, sizeof Numseen);
	(*func)(file, (char *) &Play, sizeof Play);
	(*func)(file, (char *) &Window, sizeof Window);
	(*func)(file, (char *)  Deck, sizeof Deck);
	(*func)(file, (char *) &Discard, sizeof Discard);
	(*func)(file, (char *)  Player, sizeof Player);
	if (func == read) {
		read(file, (char *) &temp, sizeof temp);
d94 1
a94 1
			gets(buf);
d96 1
a96 1
				perror(buf);
d103 1
a103 2
	}
	else {
d105 4
a108 1
		write(file, (char *) &temp, sizeof temp);
d110 1
@


1.1
log
@Initial revision
@
text
@d58 2
a59 2
reg int	file;
reg int	(*func)(); {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
