head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.10
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.8
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.16
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.14
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.12
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.10
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.01.08.18.09.59;	author mestre;	state Exp;
branches;
next	1.8;
commitid	rzHxXR4ksTqCTr4f;

1.8
date	2016.01.08.18.05.58;	author mestre;	state Exp;
branches;
next	1.7;
commitid	qycMYAxRCIO41J4W;

1.7
date	2015.01.19.00.47.01;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	5ZAlaeZ7VdZBObKN;

1.6
date	2009.10.27.23.59.25;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.09.25.15.52.20;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.09.22.04.08.24;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	96.06.02.19.47.08;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.08;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.08;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@ANSIfy mille(6)

OK tb@@
@
text
@/*	$OpenBSD: print.c,v 1.8 2016/01/08 18:05:58 mestre Exp $	*/
/*	$NetBSD: print.c,v 1.4 1995/03/24 05:02:02 cgd Exp $	*/

/*
 * Copyright (c) 1982, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "mille.h"

/*
 * @@(#)print.c	1.1 (Berkeley) 4/1/82
 */

# define	COMP_STRT	20
# define	CARD_STRT	2

void
prboard(void)
{
	PLAY	*pp;
	int	i, j, k, temp;

	for (k = 0; k < 2; k++) {
		pp = &Player[k];
		temp = k * COMP_STRT + CARD_STRT;
		for (i = 0; i < NUM_SAFE; i++)
			if (pp->safety[i] == S_PLAYED && !pp->sh_safety[i]) {
				mvaddstr(i, temp, C_name[i + S_CONV]);
				if (pp->coups[i])
					mvaddch(i, temp - CARD_STRT, '*');
				pp->sh_safety[i] = TRUE;
			}
		show_card(14, temp, pp->battle, &pp->sh_battle);
		show_card(16, temp, pp->speed, &pp->sh_speed);
		for (i = C_25; i <= C_200; i++) {
			const char	*name;
			int	end;

			if (pp->nummiles[i] == pp->sh_nummiles[i])
				continue;

			name = C_name[i];
			temp = k * 40;
			end = pp->nummiles[i];
			for (j = pp->sh_nummiles[i]; j < end; j++)
				mvwaddstr(Miles, i + 1, (j << 2) + temp, name);
			pp->sh_nummiles[i] = end;
		}
	}
	prscore(TRUE);
	temp = CARD_STRT;
	pp = &Player[PLAYER];
	for (i = 0; i < HAND_SZ; i++)
		show_card(i + 6, temp, pp->hand[i], &pp->sh_hand[i]);
	mvprintw(6, COMP_STRT + CARD_STRT, "%2d", Topcard - Deck);
	show_card(8, COMP_STRT + CARD_STRT, Discard, &Sh_discard);
	if (End == 1000) {
		move(EXT_Y, EXT_X);
		standout();
		addstr("Extension");
		standend();
	}
	wrefresh(Board);
	wrefresh(Miles);
	wrefresh(Score);
}

/*
 * show_card:
 *	Show the given card if it is different from the last one shown
 */
void
show_card(int y, int x, CARD c, CARD *lc)
{
	if (c == *lc)
		return;

	mvprintw(y, x, C_fmt, C_name[c]);
	*lc = c;
}

static char	Score_fmt[] = "%4d";

void
prscore(bool for_real)
{
	PLAY	*pp;
	int	x;

	stdscr = Score;
	for (pp = Player; pp < &Player[2]; pp++) {
		x = (pp - Player) * 6 + 21;
		show_score(1, x, pp->mileage, &pp->sh_mileage);
		if (pp->safescore != pp->sh_safescore) {
			mvprintw(2, x, Score_fmt, pp->safescore);
			if (pp->safescore == 400)
				mvaddstr(3, x + 1, "300");
			else
				mvaddstr(3, x + 1, "  0");
			mvprintw(4, x, Score_fmt, pp->coupscore);
			pp->sh_safescore = pp->safescore;
		}
		if (Window == W_FULL || Finished) {
#ifdef EXTRAP
			if (for_real)
				finalscore(pp);
			else
				extrapolate(pp);
#else
			finalscore(pp);
#endif
			show_score(11, x, pp->hand_tot, &pp->sh_hand_tot);
			show_score(13, x, pp->total, &pp->sh_total);
			show_score(14, x, pp->games, &pp->sh_games);
		}
		else {
			show_score(6, x, pp->hand_tot, &pp->sh_hand_tot);
			show_score(8, x, pp->total, &pp->sh_total);
			show_score(9, x, pp->games, &pp->sh_games);
		}
	}
	stdscr = Board;
}

/*
 * show_score:
 *	Show a score value if it is different from the last time we
 *	showed it.
 */
void
show_score(int y, int x, int s, int *ls)
{
	if (s == *ls)
		return;

	mvprintw(y, x, Score_fmt, s);
	*ls = s;
}
@


1.8
log
@Headers cleanup and also the following:

mille.h:
#define CTRL locally, which is used by move.c and misc.c, to avoid including
termios.h or sys/ttydefaults.h where it's actually defined

varpush.c:
Change _PATH_DEVNULL to "/dev/null" since other systems may not have it defined
but also avoids including <paths.h>

Included a few sugestions from tb@@ who also gave his OK
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.7 2015/01/19 00:47:01 deraadt Exp $	*/
d43 1
a43 1
prboard()
d98 1
a98 3
show_card(y, x, c, lc)
	int	y, x;
	CARD	c, *lc;
d110 1
a110 2
prscore(for_real)
	bool	for_real;
d156 1
a156 3
show_score(y, x, s, ls)
	int	y, x;
	int	s, *ls;
@


1.7
log
@normalize formatting
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.6 2009/10/27 23:59:25 deraadt Exp $	*/
d33 1
a33 1
#include	"mille.h"
@


1.6
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.5 2003/06/03 03:01:40 millert Exp $	*/
d33 1
a33 1
# include	"mille.h"
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.4 1999/09/25 15:52:20 pjanzen Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)print.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: print.c,v 1.4 1999/09/25 15:52:20 pjanzen Exp $";
#endif
#endif /* not lint */
@


1.4
log
@Tidying and minor changes from or based on jsm28@@cam.ac.uk's work for the
Linux bsd-games package and NetBSD.  Mainly using 'const'.
@
text
@d1 1
a1 1
/*	$OpenBSD: print.c,v 1.3 1998/09/22 04:08:24 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: print.c,v 1.3 1998/09/22 04:08:24 pjanzen Exp $";
@


1.3
log
@NetBSD changes and further fixes (reformatted man page, better handling of
user input).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d73 1
a73 1
			char	*name;
@


1.2
log
@Update for modern curses implementation
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: print.c,v 1.4 1995/03/24 05:02:02 cgd Exp $";
d54 5
a58 4
prboard() {

	register PLAY	*pp;
	register int		i, j, k, temp;
d73 2
a74 2
			register char	*name;
			register int		end;
d109 1
d111 2
a112 2
int		y, x;
register CARD	c, *lc;
d123 1
d125 4
a128 4
register bool	for_real; {

	register PLAY	*pp;
	register int		x;
d170 1
d172 2
a173 2
int		y, x;
register int	s, *ls;
@


1.1
log
@Initial revision
@
text
@d55 2
a56 2
	reg PLAY	*pp;
	reg int		i, j, k, temp;
d71 2
a72 2
			reg char	*name;
			reg int		end;
d121 1
a121 1
reg bool	for_real; {
d123 2
a124 2
	reg PLAY	*pp;
	reg int		x;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
