head	1.12;
access;
symbols
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.6.0.16
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.11.27.09.37.56;	author tb;	state dead;
branches;
next	1.11;
commitid	56ZxatNcgjaakBrl;

1.11
date	2014.11.18.20.51.00;	author krw;	state Exp;
branches;
next	1.10;
commitid	G35ycnLxaVis5TX9;

1.10
date	2009.11.13.19.54.09;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2009.11.13.19.45.41;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2009.11.12.23.53.24;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.27;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.27.00.10.15;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2004.07.10.07.26.24;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.03.01.41;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.18.16.03.03;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.04.02.17.54;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	99.03.13.02.08.10;	author pjanzen;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Fix after removal of the setgid bit:

Add pledge "stdio rpath wpath cpath tty".
Move score file to $HOME, add $USER as high score entry.
Maintain hall of fame of 10 high scores, make snake wink if
it ate you while you were eligible for eternal fame.

Based on an initial diff by Ricardo Mestre and with helpful input from tedu@@.

ok beck@@
@
text
@/*	$OpenBSD: snscore.c,v 1.11 2014/11/18 20:51:00 krw Exp $	*/
/*	$NetBSD: snscore.c,v 1.5 1995/04/24 12:25:43 cgd Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <err.h>
#include <fcntl.h>
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include "pathnames.h"

#define MAXPLAYERS 256

struct player	{
	uid_t	uids;
	short	scores;
	char	*name;
} players[MAXPLAYERS], temp;

void
snscore(int fd, int topn)
{
	uid_t	uid;
	short	score;
	int	noplayers;
	int	i, j, notsorted;
	char	*q;
	struct	passwd	*p;

	if (fd < 0) {
		fd = open(_PATH_RAWSCORES, O_RDONLY, 0);
		if (fd < 0)
			errx(1, "Couldn't open raw scorefile");
	}

	lseek(fd, 0, SEEK_SET);
	printf("%sSnake scores to date:\n", topn > 0 ? "Top " : "");
	/* read(fd, &whoallbest, sizeof(uid_t));
	 * read(fd, &allbest, sizeof(short));   SCOREFILE FORMAT CHANGE
	 */
	noplayers = 0;
	for (uid = 0; ; uid++) {
		if (read(fd, &score, sizeof(short)) == 0)
			break;
		if (score > 0) {
			if (noplayers >= MAXPLAYERS)
				errx(2, "Too many entries in scorefile!");
			players[noplayers].uids = uid;
			players[noplayers].scores = score;
			p = getpwuid(uid);
			if (p == NULL)
				continue;
			q = p -> pw_name;
			if ((players[noplayers].name = strdup(q)) == NULL)
				err(1, "strdup");

			noplayers++;
		}
	}

	/* bubble sort scores */
	for (notsorted = 1; notsorted; ) {
		notsorted = 0;
		for (i = 0; i < noplayers - 1; i++)
			if (players[i].scores < players[i + 1].scores) {
				temp = players[i];
				players[i] = players[i + 1];
				players[i + 1] = temp;
				notsorted++;
			}
	}

	if ((topn > 0) && (topn < noplayers))
		noplayers = topn;
	j = 1;
	for (i = 0; i < noplayers; i++) {
		printf("%d:\t$%d\t%s\n", j, players[i].scores, players[i].name);
		if (i < noplayers - 1 &&
		    players[i].scores > players[i + 1].scores)
			j = i + 2;
	}
	if (noplayers == 0)
		printf("None.\n");
}
@


1.11
log
@Nuke some obvious #include duplications.

ok espie@@ deraadt@@ millert@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.10 2009/11/13 19:54:09 jsg Exp $	*/
@


1.10
log
@Correct fix for rev 1.8 from pjanzen.
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.9 2009/11/13 19:45:41 jsg Exp $	*/
a38 1
#include <stdio.h>
@


1.9
log
@1.8 broke things, back it out, correct fix coming from pjanzen
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.8 2009/11/12 23:53:24 jsg Exp $	*/
d110 2
a111 1
		if (players[i].scores > players[i + 1].scores)
@


1.8
log
@fix an off by one in loop termination
found by parfait

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.7 2009/10/27 23:59:27 deraadt Exp $	*/
d108 1
a108 1
	for (i = 0; i < noplayers - 1; i++) {
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.6 2006/03/27 00:10:15 tedu Exp $	*/
d108 1
a108 1
	for (i = 0; i < noplayers; i++) {
@


1.6
log
@assorted fixes mostly from coverity via netbsd via jasper adriaanse via tech
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.5 2004/07/10 07:26:24 deraadt Exp $	*/
a31 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1980, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)snscore.c	8.1 (Berkeley) 7/19/93";
#else
static char rcsid[] = "$OpenBSD: snscore.c,v 1.5 2004/07/10 07:26:24 deraadt Exp $";
#endif
#endif /* not lint */
@


1.5
log
@more ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.4 2003/06/03 03:01:41 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: snscore.c,v 1.4 2003/06/03 03:01:41 millert Exp $";
d92 1
a92 1
			if (noplayers > MAXPLAYERS)
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.3 2001/02/18 16:03:03 pjanzen Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: snscore.c,v 1.3 2001/02/18 16:03:03 pjanzen Exp $";
d67 1
a67 2
snscore(fd, topn)
	int fd, topn;
@


1.3
log
@Convert to curses and tidy some.  Generally based on NetBSD changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.2 2001/02/04 02:17:54 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: snscore.c,v 1.2 2001/02/04 02:17:54 pjanzen Exp $";
@


1.2
log
@Use strdup()
@
text
@d1 1
a1 1
/*	$OpenBSD: snscore.c,v 1.1 1999/03/13 02:08:10 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: snscore.c,v 1.1 1999/03/13 02:08:10 pjanzen Exp $";
d88 1
a88 1
	printf("%sSnake scores to date\n", topn > 0 ? "Top " : "");
@


1.1
log
@Fix a few bugs (e.g. snake used to miss turns); use usleep() so display
speed is correct on xterms; put snscore functionality inside snake and
make snscore a symbolic link (to be phased out); clean up formatting;
install score file properly; disable the log file by default (logging should
be done through dm).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD$";
d105 3
a107 3
			if ((players[noplayers].name = malloc(strlen(q) + 1)) == NULL)
				errx(1, "malloc");
			strcpy(players[noplayers].name, q);
@

