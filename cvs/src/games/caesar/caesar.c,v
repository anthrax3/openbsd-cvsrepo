head	1.20;
access;
symbols
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.16.0.8
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.4
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.13.0.24
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.20
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.18
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.16
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.14
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.7.0.10
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.8
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2017.08.10.17.24.30;	author tedu;	state Exp;
branches;
next	1.19;
commitid	2AWxGhHCobxi6oVp;

1.19
date	2016.02.26.12.10.49;	author mestre;	state Exp;
branches;
next	1.18;
commitid	p3jbBZFFLoEFsrdN;

1.18
date	2015.12.16.14.21.50;	author tb;	state Exp;
branches;
next	1.17;
commitid	47lKFCMHfkqci7HY;

1.17
date	2015.10.14.08.12.12;	author doug;	state Exp;
branches;
next	1.16;
commitid	l6H409xsPGcs6ezU;

1.16
date	2014.07.03.20.30.17;	author schwarze;	state Exp;
branches;
next	1.15;
commitid	axonC53P6gHg5uqp;

1.15
date	2010.02.22.18.57.42;	author otto;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.27.23.59.24;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.09.15.59.26;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.03.01.39;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.31.04.21.30;	author pjanzen;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.31.03.40.00;	author pjanzen;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.16.21.27.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.17.20.15.00;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	98.08.19.07.53.54;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.03.12.09.06.43;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	98.02.22.13.16.25;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.12.22.20.01.03;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.12.19.22.21.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.02.17.23.54.40;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@convert source code frequencies to match those in the man page
@
text
@/*	$OpenBSD: caesar.c,v 1.19 2016/02/26 12:10:49 mestre Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Rick Adams.
 *
 * Authors:
 *	Stan King, John Eldridge, based on algorithm suggested by
 *	Bob Morris
 * 29-Sep-82
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>

#define	LINELENGTH	2048
#define	ROTATE(ch, perm) \
	isupper(ch) ? ('A' + (ch - 'A' + perm) % 26) : \
	    islower(ch) ? ('a' + (ch - 'a' + perm) % 26) : ch

/*
 * letter frequencies
 */
double stdf[26] = {
	8.1, 1.4, 2.7, 3.8, 13.0, 2.9, 2.0, 5.2, 6.3, 0.13,
	0.4, 3.4, 2.5, 7.1, 7.9, 1.9, 0.11, 6.8, 6.1, 10.5,
	2.4, 0.9, 1.5, 0.15, 1.9, 0.07
};

__dead void printit(int);

int
main(int argc, char *argv[])
{
	int ch, i, nread;
	extern char *__progname;
	const char *errstr;
	char *inbuf;
	int obs[26], try, winner;
	double dot, winnerdot;

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	/* check to see if we were called as rot13 */
	if (strcmp(__progname, "rot13") == 0)
		printit(13);

	if (argc > 1) {
		i = strtonum(argv[1], 0, 25, &errstr);
		if (errstr)
			errx(1, "rotation is %s: %s", errstr, argv[1]);
		else
			printit(i);
	}

	if (!(inbuf = malloc(LINELENGTH)))
		err(1, NULL);

	/* adjust frequency table to weight low probs REAL low */
	for (i = 0; i < 26; ++i)
		stdf[i] = log(stdf[i]) + log(26.0 / 100.0);

	/* zero out observation table */
	memset(obs, 0, 26 * sizeof(int));

	nread = 0;
	while ((nread < LINELENGTH) && ((ch = getchar()) != EOF)) {
		inbuf[nread++] = ch;
		if (islower(ch))
			++obs[ch - 'a'];
		else if (isupper(ch))
			++obs[ch - 'A'];
	}

	/*
	 * now "dot" the freqs with the observed letter freqs
	 * and keep track of best fit
	 */
	winnerdot = 0;
	for (try = winner = 0; try < 26; ++try) { /* += 13) { */
		dot = 0;
		for (i = 0; i < 26; i++)
			dot += obs[i] * stdf[(i + try) % 26];
		if (dot > winnerdot) {
			/* got a new winner! */
			winner = try;
			winnerdot = dot;
		}
	}

	/* dump the buffer before calling printit */
	for (i = 0; i < nread; ++i) {
		ch = inbuf[i];
		putchar(ROTATE(ch, winner));
	}
	printit(winner);
}

void
printit(int rot)
{
	int ch;
	
	while ((ch = getchar()) != EOF)
		putchar(ROTATE(ch, rot));
	exit(0);
}
@


1.19
log
@- Convert atoi(3) to strtonum(3)
- Remove lint-style comment
- Remove usage() since errors are now more informative (the usage is still
available in the manpage)

With this diff I made it accept 0 as rotation whereas before it didn't, but
alas if you use 0 then it defeats the whole purpose of the game.

Initial diff sent by Peter Williams <peterbw at gmail.com>, tweaked by me and
several hints and OK by tb@@. I'm in desperate need of a coffee, thank you tb@@
for making me notice that!
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.18 2015/12/16 14:21:50 tb Exp $	*/
d55 1
a55 2
 * letter frequencies (taken from some unix(tm) documentation)
 * (unix is a trademark of Bell Laboratories)
d58 3
a60 3
	7.97, 1.35, 3.61, 4.78, 12.37, 2.01, 1.46, 4.49, 6.39, 0.04,
	0.42, 3.81, 2.69, 5.92,  6.96, 2.91, 0.08, 6.63, 8.77, 9.68,
	2.62, 0.81, 1.88, 0.23,  2.07, 0.06
@


1.18
log
@Use __progname instead of hand-rolled parsing of argv[0].
Inspired by similar diffs by tobias@@ and millert@@.

"I like the concept" pjanzen@@
ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.17 2015/10/14 08:12:12 doug Exp $	*/
a64 2
__dead void usage(void);

d71 1
d84 4
a87 1
		if ((i = atoi(argv[1])))
a88 2
		else
			usage();
a131 1
	/* NOT REACHED */
a137 3

	if ((rot < 0) || ( rot >= 26))
		errx(1, "bad rotation value");
a141 7
}

void
usage(void)
{
	fprintf(stderr,"usage: caesar [rotation]\n");
	exit(1);
@


1.17
log
@Pledge "stdio" for simple games.

ok semarie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.16 2014/07/03 20:30:17 schwarze Exp $	*/
d72 2
a73 1
	char *inbuf, *p, **av;
d81 1
a81 5
	av = argv;
	p = strrchr(*av, '/');
	if (p++ == NULL)
		p = *av;
	if (strcmp(p,"rot13") == 0)
@


1.16
log
@Mark functions calling exit(3) as __dead.
Issue reported by David Crosby <dave at dafyddcrosby dot com> on tech@@.
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.15 2010/02/22 18:57:42 otto Exp $	*/
d75 3
@


1.15
log
@compute intermediate results in double precision; from pjanzen@@, ok
sobrado@@
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.14 2009/10/27 23:59:24 deraadt Exp $	*/
d64 2
a65 2
void printit(int);
void usage(void);
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.13 2004/07/09 15:59:26 deraadt Exp $	*/
d61 1
a61 1
	2.62, 0.81, 1.88, 0.23,  2.07, 0.06,
d71 1
a71 1
	int ch, dot, i, nread, winnerdot;
d74 1
@


1.13
log
@ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.12 2003/06/03 03:01:39 millert Exp $	*/
a38 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1989, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)caesar.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: caesar.c,v 1.12 2003/06/03 03:01:39 millert Exp $";
#endif
#endif /* not lint */
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.11 2002/05/31 04:21:30 pjanzen Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: caesar.c,v 1.11 2002/05/31 04:21:30 pjanzen Exp $";
d83 1
a83 3
main(argc, argv)
	int argc;
	char **argv;
d149 1
a149 2
printit(rot)
	int rot;
d162 1
a162 1
usage()
@


1.11
log
@de-register
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.10 2002/05/31 03:40:00 pjanzen Exp $	*/
d23 1
a23 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d50 1
a50 1
static char rcsid[] = "$OpenBSD: caesar.c,v 1.10 2002/05/31 03:40:00 pjanzen Exp $";
@


1.10
log
@No dm -> no need to revoke setegid.
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.9 2002/02/16 21:27:09 millert Exp $	*/
d54 1
a54 1
static char rcsid[] = "$OpenBSD: caesar.c,v 1.9 2002/02/16 21:27:09 millert Exp $";
d158 1
a158 1
	register int ch;
@


1.9
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.8 2001/02/17 20:15:00 pjanzen Exp $	*/
d54 1
a54 1
static char rcsid[] = "$OpenBSD: caesar.c,v 1.8 2001/02/17 20:15:00 pjanzen Exp $";
d91 2
a92 2
	register int ch, dot, i, nread, winnerdot;
	register char *inbuf, *p, **av;
a93 4

	/* revoke privs */
	setegid(getgid());
	setgid(getgid());
@


1.8
log
@Use err() rather than errx() immediately after alloc failure.
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.7 1998/08/19 07:53:54 pjanzen Exp $	*/
d54 1
a54 1
static char rcsid[] = "$OpenBSD: caesar.c,v 1.7 1998/08/19 07:53:54 pjanzen Exp $";
d82 2
a83 2
void printit __P((int));
void usage   __P((void));
@


1.7
log
@minor tidying, and a fix to rot13's command line behaviour
@
text
@d1 1
a1 1
/*	$OpenBSD: caesar.c,v 1.6 1998/03/12 09:06:43 pjanzen Exp $	*/
d54 1
a54 1
static char rcsid[] = "$OpenBSD: caesar.c,v 1.6 1998/03/12 09:06:43 pjanzen Exp $";
d115 1
a115 1
		errx(1, "out of memory.");
@


1.6
log
@OpenBSD ID and minor fixes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 1
a54 1
static char rcsid[] = "$OpenBSD$";
d58 3
a60 2
#include <stdlib.h>
#include <string.h>
d63 2
a64 1
#include <ctype.h>
a65 2
#include <err.h>
#include <errno.h>
d83 1
a83 1
void usage   __P(());
d91 1
a91 1
	register int ch, dot, i, nread, winnerdot = 0;
a98 7
	if (argc > 1) {
		if ((i = atoi(argv[1])))
			printit(i);
		else
			usage();
	}

d107 7
d137 1
d159 2
a160 1
printit(int rot)
@


1.5
log
@repairs from pjanzen@@foatdi.harvard.edu
@
text
@d1 1
a1 1
/*    $NetBSD: caesar.c,v 1.4 1996/02/06 22:47:15 jtc Exp $   */
d54 1
a54 1
static char rcsid[] = "$NetBSD: caesar.c,v 1.4 1996/02/06 22:47:15 jtc Exp $";
d101 1
a101 1
			printit(atoi(argv[1]));
@


1.4
log
@proper gid revoke
@
text
@d58 2
d64 1
d82 5
d91 2
a92 2
	register int ch, dot, i, nread, winnerdot;
	register char *inbuf;
a93 1
	char *malloc(), *strerror();
d99 14
a112 2
	if (argc > 1)
		printit(argv[1]);
d114 2
a115 4
	if (!(inbuf = malloc(LINELENGTH))) {
		(void)fprintf(stderr, "caesar: out of memory.\n");
		exit(1);
	}
d122 1
a122 1
	bzero(obs, 26 * sizeof(int));
d124 3
a126 6
	if ((nread = read(STDIN_FILENO, inbuf, LINELENGTH)) < 0) {
		(void)fprintf(stderr, "caesar: %s\n", strerror(errno));
		exit(1);
	}
	for (i = nread; i--;) {
		ch = inbuf[i];
a140 3
		/* initialize winning score */
		if (try == 0)
			winnerdot = dot;
d148 4
a151 11
	for (;;) {
		for (i = 0; i < nread; ++i) {
			ch = inbuf[i];
			putchar(ROTATE(ch, winner));
		}
		if (nread < LINELENGTH)
			break;
		if ((nread = read(STDIN_FILENO, inbuf, LINELENGTH)) < 0) {
			(void)fprintf(stderr, "caesar: %s\n", strerror(errno));
			exit(1);
		}
d153 2
a154 1
	exit(0);
d157 2
a158 2
printit(arg)
	char *arg;
d160 1
a160 1
	register int ch, rot;
d162 3
a164 4
	if ((rot = atoi(arg)) < 0) {
		(void)fprintf(stderr, "caesar: bad rotation value.\n");
		exit(1);
	}
d168 7
@


1.3
log
@setgid games, not setuid games. closes a neat set of holes
@
text
@d88 2
@


1.2
log
@From netbsd:
Removed "extern int errno"; Added #include <errno.h> if not already present.
@
text
@d88 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: caesar.c,v 1.3 1995/03/21 15:08:21 cgd Exp $	*/
d54 1
a54 1
static char rcsid[] = "$NetBSD: caesar.c,v 1.3 1995/03/21 15:08:21 cgd Exp $";
d62 1
a82 1
	extern int errno;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

