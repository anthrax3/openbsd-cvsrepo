head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.9.0.30
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.26
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.28
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.24
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.22
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.20
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.18
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.16
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.12
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.10
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.8
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.6
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2016.03.07.12.07.56;	author mestre;	state Exp;
branches;
next	1.18;
commitid	NZhYxChmyb9vOEMM;

1.18
date	2016.01.10.13.35.10;	author mestre;	state Exp;
branches;
next	1.17;
commitid	mVbl9a8GbGdqcFgu;

1.17
date	2016.01.06.14.28.09;	author mestre;	state Exp;
branches;
next	1.16;
commitid	A5CGsPmxC2qOSHvN;

1.16
date	2016.01.06.10.28.38;	author tb;	state Exp;
branches;
next	1.15;
commitid	5hwQPK1uoBZOZq3E;

1.15
date	2016.01.06.09.24.38;	author tb;	state Exp;
branches;
next	1.14;
commitid	elhvrdOiTYN4GEFY;

1.14
date	2015.12.26.00.26.39;	author mestre;	state Exp;
branches;
next	1.13;
commitid	NcBz9zfScw6TwPoT;

1.13
date	2014.11.16.04.49.48;	author guenther;	state Exp;
branches;
next	1.12;
commitid	8XNajyb9IqHkZEKg;

1.12
date	2013.08.29.20.22.17;	author naddy;	state Exp;
branches;
next	1.11;

1.11
date	2011.06.23.03.14.32;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2010.12.15.06.40.39;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.25.21.37.47;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.06.18.50.38;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.06.21.48.51;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.31.04.21.30;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.11;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.11.29.19.57.02;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.40.40;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.05.26.07.23.14;	author fn;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@- General changes:
- Remove -? from getopt(3) options, but still keep (or add) -h where applicable
- Replace hardcoded program strings by getprogname(3)

- Specific changes:
- atc(6): this used -? and -u for usage(), remove both from game and manpage
- bcd(6): use __progname instead of getprogname(3), no need to include stdlib.h
- hunt(6): replace fputs(3) by fprintf(3)

OK tb@@ after his suggestions
@
text
@/*	$OpenBSD: setup.c,v 1.18 2016/01/10 13:35:10 mestre Exp $	*/
/*	$NetBSD: setup.c,v 1.4 1995/04/24 12:24:41 cgd Exp $	*/

/*
 * setup.c - set up all files for Phantasia
 */
#include <sys/stat.h>

#include <fcntl.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "macros.h"
#include "pathnames.h"
#include "phantdefs.h"
#include "phantglobs.h"

__dead void Error(char *, char *);

/**/
/************************************************************************
/
/ FUNCTION NAME: main()
/
/ FUNCTION: setup files for Phantasia 3.3.2
/
/ AUTHOR: E. A. Estes, 12/4/85
/
/ ARGUMENTS: none
/
/ RETURN VALUE: none
/
/ MODULES CALLED: exit(), stat(), Error(), open(), close(), fopen(), 
/	fgets(), floor(), umask(), strlcpy(),
/	unlink(), fwrite(), fclose(), sscanf(), printf(), strlen(), fprintf()
/
/ GLOBAL INPUTS: Curmonster, _iob[], Databuf[], *Monstfp, Enrgyvoid
/
/ GLOBAL OUTPUTS: Curmonster, Databuf[], *Monstfp, Enrgyvoid
/
/ DESCRIPTION: 
/
/	This program tries to verify the parameters specified in
/	the Makefile.
/
/	Create all necessary files.  Note that nothing needs to be
/	put in these files.
/	Also, the monster binary data base is created here.
/
*************************************************************************/

static char *files[] = {		/* all files to create */
	_PATH_MONST,
	_PATH_PEOPLE,
	_PATH_MESS,
	_PATH_LASTDEAD,
	_PATH_MOTD,
	_PATH_GOLD,
	_PATH_VOID,
	_PATH_SCORE,
	NULL,
};

char *monsterfile="monsters.asc";

int
main(int argc, char *argv[])
{
	char	**filename;	/* for pointing to file names */
	int	fd;		/* file descriptor */
	FILE	*fp;			/* for opening files */
	struct stat	fbuf;		/* for getting files statistics */
	int ch;
	char path[PATH_MAX], *prefix;

	while ((ch = getopt(argc, argv, "hm:")) != -1)
		switch(ch) {
		case 'm':
			monsterfile = optarg;
			break;
		case 'h':
		default:
			break;
		}
	argc -= optind;
	argv += optind;

    umask(0117);		/* only owner can read/write created files */

    prefix = getenv("DESTDIR");

    /* try to create data files */
    filename = &files[0];
    while (*filename != NULL)
	/* create each file */
	{
	snprintf(path, sizeof(path), "%s%s", prefix?prefix:"", *filename);
	if (stat(path, &fbuf) == 0)
	    /* file exists; remove it */
	    {
	    if (!strcmp(*filename, _PATH_PEOPLE))
		/* do not reset character file if it already exists */
		{
		++filename;
		continue;
		}

	    if (!strcmp(*filename, _PATH_SCORE))
		/* do not reset score file if it already exists */
		{
		++filename;
		continue;
		}

	    if (unlink(path) < 0)
		Error("Cannot unlink %s.\n", path);
	    }

	if ((fd = open(path, O_CREAT | O_TRUNC | O_WRONLY, 0660)) < 0)
	    Error("Cannot create %s.\n", path);

	close(fd);			/* close newly created file */

	++filename;			/* process next file */
	}

    /* put holy grail info into energy void file */
    Enrgyvoid.ev_active = true;
    Enrgyvoid.ev_x = ROLL(-1.0e6, 2.0e6);
    Enrgyvoid.ev_y = ROLL(-1.0e6, 2.0e6);
    snprintf(path, sizeof(path), "%s%s", prefix?prefix:"", _PATH_VOID);
    if ((fp = fopen(path, "w")) == NULL)
	Error("Cannot update %s.\n", path);
    else
	{
	fwrite(&Enrgyvoid, SZ_VOIDSTRUCT, 1, fp);
	fclose(fp);
	}

    /* create binary monster data base */
    snprintf(path, sizeof(path), "%s%s", prefix?prefix:"", _PATH_MONST);
    if ((Monstfp = fopen(path, "w")) == NULL)
	Error("Cannot update %s.\n", path);
    else
	{
	if ((fp = fopen(monsterfile, "r")) == NULL)
	    {
	    fclose(Monstfp);
	    Error("cannot open %s to create monster database.\n", "monsters.asc");
	    }
	else
	    {
	    Curmonster.m_o_strength =
	    Curmonster.m_o_speed =
	    Curmonster.m_maxspeed =
	    Curmonster.m_o_energy =
	    Curmonster.m_melee =
	    Curmonster.m_skirmish = 0.0;

	    while (fgets(Databuf, SZ_DATABUF, fp) != NULL)
		/* read in text file, convert to binary */
		{
		sscanf(&Databuf[24], "%lf%lf%lf%lf%lf%d%d%lf",
		    &Curmonster.m_strength, &Curmonster.m_brains,
		    &Curmonster.m_speed, &Curmonster.m_energy,
		    &Curmonster.m_experience, &Curmonster.m_treasuretype,
		    &Curmonster.m_type, &Curmonster.m_flock);
		Databuf[24] = '\0';
		strlcpy(Curmonster.m_name, Databuf, sizeof Curmonster.m_name);
		fwrite(&Curmonster, SZ_MONSTERSTRUCT, 1, Monstfp);
		}
	    fclose(fp);
	    fclose(Monstfp);
	    }
	}

    return 0;
}
/**/
/************************************************************************
/
/ FUNCTION NAME: Error()
/
/ FUNCTION: print an error message, and exit
/
/ AUTHOR: E. A. Estes, 12/4/85
/
/ ARGUMENTS:
/	char *str - format string for printf()
/	char *file - file which caused error
/
/ RETURN VALUE: none
/
/ MODULES CALLED: exit(), perror(), fprintf()
/
/ GLOBAL INPUTS: _iob[]
/
/ GLOBAL OUTPUTS: none
/
/ DESCRIPTION:
/	Print an error message, then exit.
/
*************************************************************************/

void
Error(char *str, char *file)
{
	fprintf(stderr, "Error: ");
	fprintf(stderr, str, file);
	perror(file);
	exit(1);
}
/**/
/************************************************************************
/
/ FUNCTION NAME: drandom()
/
/ FUNCTION: return a random number
/
/ AUTHOR: E. A. Estes, 2/7/86
/
/ ARGUMENTS: none
/
/ RETURN VALUE: none
/
/ MODULES CALLED: arc4random()
/
/ GLOBAL INPUTS: none
/
/ GLOBAL OUTPUTS: none
/
/ DESCRIPTION: 
/
*************************************************************************/

double
drandom(void)
{
	return((double) arc4random() / (UINT32_MAX + 1.0));
}
@


1.18
log
@As per style(9), remove remaining lint-style comments from games/

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.17 2016/01/06 14:28:09 mestre Exp $	*/
d80 1
a80 1
	while ((ch = getopt(argc, argv, "m:")) != -1)
d85 1
a85 1
		case '?':
@


1.17
log
@Remove unnecessary header files from phantasia(6)

Lesson learnt: don't include an header sorted alphabetically just because. The
external definition of variables was done on phantglobs.h but their declaration
was on phantstruct.h and therefore the latter must be included before the
former. It's easier to just include phantstruct.h inside phantglobs.h since it
always need it.

With help and OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.16 2016/01/06 10:28:38 tb Exp $	*/
a120 1
		/*NOTREACHED*/
a124 1
	    /*NOTREACHED*/
a215 1
	/* NOTREACHED */
@


1.16
log
@ansify

ok mestre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.15 2016/01/06 09:24:38 tb Exp $	*/
a6 1
#include <sys/types.h>
d8 1
a8 2
#include "include.h"
#include <limits.h>
d10 11
d134 1
a134 1
    Enrgyvoid.ev_active = TRUE;
@


1.15
log
@Use return instead of exit from main.

ok mestre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.14 2015/12/26 00:26:39 mestre Exp $	*/
d62 1
a62 3
main(argc, argv)
	int argc;
	char *argv[];
d203 1
a203 2
Error(str, file)
	char	*str, *file;
d235 1
a235 1
drandom()
@


1.14
log
@Set as __dead a few more functions, that don't return, on games/

With precious tip, help and also OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.13 2014/11/16 04:49:48 guenther Exp $	*/
d176 1
a176 2
    exit(0);
    /*NOTREACHED*/
@


1.13
log
@Eliminate pointless use of <sys/param.h>, <sys/file.h>, <sys/sockio.h>,
    and <sys/ttydefaults.h>
Replace MAXPATHLEN with PATH_MAX and MAXLOGNAME with LOGIN_NAME_MAX
Pull in <limits.h> where needed
Prefer sizeof(var) over MAXFOO or FOO_MAX

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.12 2013/08/29 20:22:17 naddy Exp $	*/
d13 1
a13 1
void Error(char *, char *);
@


1.12
log
@replace srandomdev()+random() with the arc4random*() family
tweaks and ok millert@@, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.11 2011/06/23 03:14:32 deraadt Exp $	*/
d7 1
a7 1
#include <sys/param.h>
a8 1
#include <sys/types.h>
d10 1
d71 1
a71 1
	char path[MAXPATHLEN], *prefix;
@


1.11
log
@delete unused stupid code; Daniel Dickman
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.10 2010/12/15 06:40:39 tedu Exp $	*/
d28 2
a29 2
/ MODULES CALLED: time(), exit(), stat(), Error(), open(), close(), fopen(), 
/	fgets(), floor(), srandomdev(), umask(), strlcpy(),
a84 2
    srandomdev();	/* prime random numbers */

d228 1
a228 1
/ MODULES CALLED: random()
d241 1
a241 4
    if (sizeof(int) != 2)
	return((double) (random() & 0x7fff) / 32768.0);
    else
	return((double) random() / 32768.0);
@


1.10
log
@as of 1989, fread/fwrite take void *, so there's no need to cast to char *.
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.9 2003/04/25 21:37:47 deraadt Exp $	*/
a176 36

#ifdef MAKE_INSTALLS_THIS_AND_DOESNT_WANT_TO_HEAR_ABOUT_IT
    /* write to motd file */
    printf("One line 'motd' ? ");
    if (fgets(Databuf, SZ_DATABUF, stdin) == NULL)
	Databuf[0] = '\0';
    snprintf(path, sizeof(path), "%s%s", prefix?prefix:"", _PATH_MOTD);
    if ((fp = fopen(path, "w")) == NULL)
	Error("Cannot update %s.\n", path);
    else
	{
	fwrite(Databuf, sizeof(char), strlen(Databuf), fp);
	fclose(fp);
	}

    /* report compile-time options */
    printf("Compiled options:\n\n");
    printf("Phantasia destination directory:  %s\n", _PATH_PHANTDIR);
    printf("Wizard: root UID: 0\n");

#ifdef BSD41
    printf("Compiled for BSD 4.1\n");
#endif

#ifdef BSD42
    printf("Compiled for BSD 4.2\n");
#endif

#ifdef SYS3
    printf("Compiled for System III\n");
#endif

#ifdef SYS5
    printf("Compiled for System V\n");
#endif
#endif
@


1.9
log
@comment repair
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.8 2003/04/06 18:50:38 deraadt Exp $	*/
d171 1
a171 1
		fwrite((char *) &Curmonster, SZ_MONSTERSTRUCT, 1, Monstfp);
@


1.8
log
@2451 lines of strdup/sprintf/strcpy whacking.  mostly ok'd by pjanzen
already, but he may have later changes to make still.
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.7 2002/12/06 21:48:51 millert Exp $	*/
d29 1
a29 1
/	fgets(), floor(), srandomdev(), umask(), strcpy(),
@


1.7
log
@Replace things like srandom(time(NULL)) with srandomdev(3).  random(3)
good enough for games but we should at least use a decent seed.
pjanzen@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.6 2002/05/31 04:21:30 pjanzen Exp $	*/
d170 1
a170 1
		strcpy(Curmonster.m_name, Databuf);
@


1.6
log
@de-register
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.5 2002/02/16 21:27:11 millert Exp $	*/
d29 1
a29 1
/	fgets(), floor(), srandom(), umask(), strcpy(),
d85 1
a85 1
    srandom((unsigned) time(NULL));	/* prime random numbers */
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: setup.c,v 1.4 1998/11/29 19:57:02 pjanzen Exp $	*/
d66 2
a67 2
	register char	**filename;	/* for pointing to file names */
	register int	fd;		/* file descriptor */
@


1.4
log
@NetBSD merge (mainly -Wall related)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d13 1
a13 1
void Error __P((char *, char *));
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
d9 1
a9 1
#include <stdlib.h>
d11 4
d28 2
a29 2
/ MODULES CALLED: time(), exit(), stat(), Error(), creat(), close(), fopen(), 
/	fgets(), floor(), srandom(), umask(), drandom(), strcpy(), getuid(), 
d107 7
d119 1
a119 1
	if ((fd = creat(path, 0660)) < 0)
d243 1
d245 1
a245 1
char	*str, *file;
d247 5
a251 5
    fprintf(stderr, "Error: ");
    fprintf(stderr, str, file);
    perror(file);
    exit(1);
    /*NOTREACHED*/
@


1.2
log
@fixed the "/* in comments" problem.
@
text
@d68 1
a68 1
	while ((ch = getopt(argc, argv, "m:")) != EOF)
@


1.1
log
@Initial revision
@
text
@d40 1
a40 1
/************************************************************************/
d229 1
a229 1
/************************************************************************/
d261 1
a261 1
/************************************************************************/
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
