head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.58
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.56
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.52
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.50
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.48
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.46
	OPENBSD_5_0:1.3.0.44
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.42
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.40
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.36
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.38
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.34
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.32
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.30
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.28
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.26
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.24
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.22
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.20
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.18
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.16
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.14
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.01.06.14.28.09;	author mestre;	state Exp;
branches;
next	1.4;
commitid	A5CGsPmxC2qOSHvN;

1.4
date	2014.11.16.04.49.48;	author guenther;	state Exp;
branches;
next	1.3;
commitid	8XNajyb9IqHkZEKg;

1.3
date	2001.02.04.02.51.25;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.11.29.19.57.02;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove unnecessary header files from phantasia(6)

Lesson learnt: don't include an header sorted alphabetically just because. The
external definition of variables was done on phantglobs.h but their declaration
was on phantstruct.h and therefore the latter must be included before the
former. It's easier to just include phantstruct.h inside phantglobs.h since it
always need it.

With help and OK from tb@@
@
text
@/*	$OpenBSD: phantstruct.h,v 1.4 2014/11/16 04:49:48 guenther Exp $	*/
/*	$NetBSD: phantstruct.h,v 1.2 1995/03/24 04:00:11 cgd Exp $	*/

/*
 * phantstruct.h - structure definitions for Phantasia
 */

#include <limits.h>
#include <stdbool.h>

struct	player	    	/* player statistics */
    {
    double	p_experience;	/* experience */
    double	p_level;    	/* level */
    double	p_strength;	/* strength */
    double	p_sword;	/* sword */
    double	p_might;	/* effect strength */
    double	p_energy;	/* energy */
    double	p_maxenergy;	/* maximum energy */
    double	p_shield;	/* shield */
    double	p_quickness;	/* quickness */
    double	p_quksilver;	/* quicksilver */
    double	p_speed;	/* effective quickness */
    double	p_magiclvl;	/* magic level */
    double	p_mana;		/* mana */
    double	p_brains;	/* brains */
    double	p_poison;	/* poison */
    double	p_gold;		/* gold */
    double	p_gems;		/* gems */
    double	p_sin;		/* sin */
    double	p_x;	    	/* x coord */
    double	p_y;	    	/* y coord */
    double	p_1scratch,
		p_2scratch;	/* variables used for decree, player battle */

    struct
	{
	short	ring_type;	/* type of ring */
	short	ring_duration;	/* duration of ring */
	bool	ring_inuse;	/* ring in use flag */
	}	p_ring;	    	/* ring stuff */

    long	p_age;		/* age of player */

    int		p_degenerated;	/* age/3000 last degenerated */

    short	p_type;		/* character type */
    short	p_specialtype;	/* special character type */
    short	p_lives;	/* multiple lives for council, valar */
    short	p_crowns;	/* crowns */
    short	p_charms;	/* charms */
    short	p_amulets;	/* amulets */
    short	p_holywater;   	/* holy water */
    short	p_lastused;	/* day of year last used */
    short	p_status;	/* playing, cloaked, etc. */
    short	p_tampered;	/* decree'd, etc. flag */
    short	p_istat;	/* used for inter-terminal battle */

    bool	p_palantir;	/* palantir */
    bool	p_blessing;	/* blessing */
    bool	p_virgin;	/* virgin */
    bool	p_blindness;	/* blindness */

    char	p_name[SZ_NAME];	/* name */
    char	p_password[SZ_PASSWORD];/* password */
    char	p_login[LOGIN_NAME_MAX];/* login */
    };

struct	monster	    	/* monster stats */
    {
    double	m_strength;	/* strength */
    double	m_brains;	/* brains */
    double	m_speed;	/* speed */
    double	m_energy;	/* energy */
    double	m_experience;	/* experience */
    double	m_flock;    	/* % chance of flocking */

    double	m_o_strength;	/* original strength */
    double	m_o_speed;	/* original speed */
    double	m_maxspeed;	/* maximum speed */
    double	m_o_energy;	/* original energy */
    double	m_melee;	/* melee damage */
    double	m_skirmish;	/* skirmish damage */

    int		m_treasuretype;	/* treasure type */
    int		m_type;	    	/* special type */

    char	m_name[26];	/* name */
    };

struct	energyvoid     	/* energy void */
    {
    double	ev_x;		/* x coordinate */
    double	ev_y;		/* y coordinate */
    bool	ev_active;	/* active or not */
    };

struct	scoreboard			/* scoreboard entry */
    {
    double	sb_level;		/* level of player */
    char	sb_type[4];		/* character type of player */
    char	sb_name[SZ_NAME];	/* name of player */
    char	sb_login[LOGIN_NAME_MAX];/* login of player */
    };

struct	charstats			/* character type statistics */
    {
    double	c_maxbrains;		/* max brains per level */
    double	c_maxmana;		/* max mana per level */
    double	c_weakness;		/* how strongly poison affects player */
    double	c_goldtote;		/* how much gold char can carry */
    int		c_ringduration;		/* bad ring duration */
    struct
	{
	double	base;		/* base for roll */
	double	interval;	/* interval for roll */
	double	increase;	/* increment per level */
	} c_quickness,		/* quickness */
	  c_strength,		/* strength */
	  c_mana,		/* mana */
	  c_energy,		/* energy level */
	  c_brains,		/* brains */
	  c_magiclvl;		/* magic level */
    };

struct menuitem				/* menu item for purchase */
    {
    char	*item;		/* menu item name */
    double	cost;		/* cost of item */
    };
@


1.4
log
@Eliminate pointless use of <sys/param.h>, <sys/file.h>, <sys/sockio.h>,
    and <sys/ttydefaults.h>
Replace MAXPATHLEN with PATH_MAX and MAXLOGNAME with LOGIN_NAME_MAX
Pull in <limits.h> where needed
Prefer sizeof(var) over MAXFOO or FOO_MAX

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: phantstruct.h,v 1.3 2001/02/04 02:51:25 pjanzen Exp $	*/
d7 3
@


1.3
log
@Tidy, avoid segfaults on unknown users, and deal with long usernames
@
text
@d1 1
a1 1
/*	$OpenBSD: phantstruct.h,v 1.2 1998/11/29 19:57:02 pjanzen Exp $	*/
d63 1
a63 1
    char	p_login[MAXLOGNAME];	/* login */
d100 1
a100 1
    char	sb_login[MAXLOGNAME];	/* login of player */
@


1.2
log
@NetBSD merge (mainly -Wall related)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
    char	p_login[SZ_LOGIN];	/* login */
d100 1
a100 1
    char	sb_login[SZ_LOGIN];	/* login of player */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
