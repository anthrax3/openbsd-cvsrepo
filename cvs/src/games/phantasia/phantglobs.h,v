head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.8
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.52
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.44
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.48
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.01.06.14.28.09;	author mestre;	state Exp;
branches;
next	1.6;
commitid	A5CGsPmxC2qOSHvN;

1.6
date	2003.05.12.07.43.27;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.06.18.50.38;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.11;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.11.29.19.57.01;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.07.10.09.46.50;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove unnecessary header files from phantasia(6)

Lesson learnt: don't include an header sorted alphabetically just because. The
external definition of variables was done on phantglobs.h but their declaration
was on phantstruct.h and therefore the latter must be included before the
former. It's easier to just include phantstruct.h inside phantglobs.h since it
always need it.

With help and OK from tb@@
@
text
@/*	$OpenBSD: phantglobs.h,v 1.6 2003/05/12 07:43:27 pjanzen Exp $	*/
/*	$NetBSD: phantglobs.h,v 1.3 1995/04/24 12:24:39 cgd Exp $	*/

/*
 * phantglobs.h - global declarations for Phantasia
 */

#include <stdio.h>

#include "phantstruct.h"

extern	double	Circle;		/* which circle player is in */
extern	double	Shield;		/* force field thrown up in monster battle */

extern	bool	Beyond;		/* set if player is beyond point of no return */
extern	bool	Marsh;		/* set if player is in dead marshes */
extern	bool	Throne;		/* set if player is on throne */
extern	bool	Changed;	/* set if important player stats have changed */
extern	bool	Wizard;		/* set if player is the 'wizard' of the game */
extern	bool	Timeout;	/* set if short timeout waiting for input */
extern	bool	Windows;	/* set if we are set up for curses stuff */
extern	bool	Luckout;	/* set if we have tried to luck out in fight */
extern	bool	Foestrikes;	/* set if foe gets a chance to hit in battleplayer()*/
extern	bool	Echo;		/* set if echo input to terminal */

extern	int	Users;		/* number of users currently playing */
extern	int	Whichmonster;	/* which monster we are fighting */
extern	int	Lines;		/* line on screen counter for fight routines */

extern	char	Ch_Erase;	/* backspace key */
extern	char	Ch_Kill;	/* linekill key */

extern	long	Fileloc;	/* location in file of player statistics */

extern	const char *Login;	/* pointer to login of current player */
extern	char	*Enemyname;	/* pointer name of monster/player we are battling*/

extern	struct player	Player;	/* stats for player */
extern	struct player	Other;	/* stats for another player */

extern	struct monster	Curmonster;/* stats for current monster */

extern	struct energyvoid Enrgyvoid;/* energy void buffer */

extern	struct charstats Stattable[];/* used for rolling and changing player stats*/

extern	struct charstats *Statptr;/* pointer into Stattable[] */

extern	struct menuitem	Menu[];	/* menu of items for purchase */

extern	FILE	*Playersfp;	/* pointer to open player file */
extern	FILE	*Monstfp;	/* pointer to open monster file */
extern	FILE	*Messagefp;	/* pointer to open message file */
extern	FILE	*Energyvoidfp;	/* pointer to open energy void file */

extern	char	Databuf[SZ_DATABUF];	/* a place to read data into */

/* some canned strings for messages */
extern	char	Illcmd[];
extern	char	Illmove[];
extern	char	Illspell[];
extern	char	Nomana[];
extern	char	Somebetter[];
extern	char	Nobetter[];

/* functions which we need to know about */

char	*descrlocation(struct player *, bool);
char	*descrstatus(struct player *);
char	*descrtype(struct player *, bool);
void	activelist(void);
void	adjuststats(void);
long	allocrecord(void);
long	allocvoid(void);
void	allstatslist(void);
void	altercoordinates(double, double, int);
void	awardtreasure(void);
void	battleplayer(long);
void	callmonster(int);
void	cancelmonster(void);
void	catchalarm(int);
void	changestats(bool);
void	checkbattle(void);
void	checktampered(void);
void	cleanup(int);
void	collecttaxes(double, double);
void	cursedtreasure(void);
void	death(char *);
void	displaystats(void);
double	distance(double, double, double, double);
void	dotampered(void);
double	drandom(void);
void	encounter(int);
void	enterscore(void);
void	error(char *);
double	explevel(double);
long	findname(char *, struct player *);
void	freerecord(struct player *, long);
void	genchar(int);
int	getanswer(char *, bool);
void	getstring(char *, int);
void	hitmonster(double);
void	ill_sig(int);
double	infloat(void);
void	initialstate(void);
void	initplayer(struct player *);
int	inputoption(void);
void	interrupt(void);
void	leavegame(void);
void	monsthits(void);
void	monstlist(void);
void	more(int);
void	movelevel(void);
void	myturn(void);
void	neatstuff(void);
int	pickmonster(void);
void	playerhits(void);
void	playinit(void);
void	procmain(void);
void	purgeoldplayers(void);
void	readmessage(void);
void	readrecord(struct player *, long);
long	recallplayer(void);
long	rollnewplayer(void);
void	scorelist(void);
void	scramblestats(void);
void	tampered(int, double, double);
void	throneroom(void);
void	throwspell(void);
void	titlelist(void);
void	tradingpost(void);
void	truncstring(char *);
void	userlist(bool);
void	writerecord(struct player *, long);
void	writevoid(struct energyvoid *, long);
@


1.6
log
@From NetBSD:  remove redundant declaration
@
text
@d1 1
a1 1
/*	$OpenBSD: phantglobs.h,v 1.5 2003/04/06 18:50:38 deraadt Exp $	*/
d8 4
a31 3

extern	jmp_buf Fightenv;	/* used to jump into fight routine */
extern	jmp_buf Timeoenv;	/* used for timing out waiting for input */
@


1.5
log
@2451 lines of strdup/sprintf/strcpy whacking.  mostly ok'd by pjanzen
already, but he may have later changes to make still.
@
text
@d1 1
a1 1
/*	$OpenBSD: phantglobs.h,v 1.4 2002/02/16 21:27:11 millert Exp $	*/
a121 1
long	recallplayer(void);
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: phantglobs.h,v 1.3 1998/11/29 19:57:01 pjanzen Exp $	*/
d55 1
a55 1
extern	char	Databuf[];	/* a place to read data into */
@


1.3
log
@NetBSD merge (mainly -Wall related)
@
text
@d1 1
a1 1
/*	$OpenBSD: phantglobs.h,v 1.2 1998/07/10 09:46:50 downsj Exp $	*/
d67 69
a135 69
char	*descrlocation __P((struct player *, bool));
char	*descrstatus __P((struct player *));
char	*descrtype __P((struct player *, bool));
void	activelist __P((void));
void	adjuststats __P((void));
long	allocrecord __P((void));
long	allocvoid __P((void));
void	allstatslist __P((void));
void	altercoordinates __P((double, double, int));
void	awardtreasure __P((void));
void	battleplayer __P((long));
void	callmonster __P((int));
void	cancelmonster __P((void));
void	catchalarm __P((int));
void	changestats __P((bool));
void	checkbattle __P((void));
void	checktampered __P((void));
void	cleanup __P((int));
void	collecttaxes __P((double, double));
void	cursedtreasure __P((void));
void	death __P((char *));
void	displaystats __P((void));
double	distance __P((double, double, double, double));
void	dotampered __P((void));
double	drandom __P((void));
void	encounter __P((int));
void	enterscore __P((void));
void	error __P((char *));
double	explevel __P((double));
long	findname __P((char *, struct player *));
void	freerecord __P((struct player *, long));
void	genchar __P((int));
int	getanswer __P((char *, bool));
void	getstring __P((char *, int));
void	hitmonster __P((double));
void	ill_sig __P((int));
double	infloat __P((void));
void	initialstate __P((void));
void	initplayer __P((struct player *));
int	inputoption __P((void));
void	interrupt __P((void));
void	leavegame __P((void));
void	monsthits __P((void));
void	monstlist __P((void));
void	more __P((int));
void	movelevel __P((void));
void	myturn __P((void));
void	neatstuff __P((void));
int	pickmonster __P((void));
void	playerhits __P((void));
void	playinit __P((void));
void	procmain __P((void));
void	purgeoldplayers __P((void));
void	readmessage __P((void));
void	readrecord __P((struct player *, long));
long	recallplayer __P((void));
long	recallplayer __P((void));
long	rollnewplayer __P((void));
void	scorelist __P((void));
void	scramblestats __P((void));
void	tampered __P((int, double, double));
void	throneroom __P((void));
void	throwspell __P((void));
void	titlelist __P((void));
void	tradingpost __P((void));
void	truncstring __P((char *));
void	userlist __P((bool));
void	writerecord __P((struct player *, long));
void	writevoid __P((struct energyvoid *, long));
@


1.2
log
@Ok, so I was bored and couldn't sleep...

Make this sucker work with decent terminal settings.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d8 2
a9 2
extern	double	Circle;		/* which circle player is in			*/
extern	double	Shield;		/* force field thrown up in monster battle	*/
d11 8
a18 8
extern	bool	Beyond;		/* set if player is beyond point of no return	*/
extern	bool	Marsh;		/* set if player is in dead marshes		*/
extern	bool	Throne;		/* set if player is on throne			*/
extern	bool	Changed;	/* set if important player stats have changed	*/
extern	bool	Wizard;		/* set if player is the 'wizard' of the game	*/
extern	bool	Timeout;	/* set if short timeout waiting for input	*/
extern	bool	Windows;	/* set if we are set up for curses stuff	*/
extern	bool	Luckout;	/* set if we have tried to luck out in fight	*/
d20 1
a20 1
extern	bool	Echo;		/* set if echo input to terminal		*/
d22 3
a24 3
extern	int	Users;		/* number of users currently playing		*/
extern	int	Whichmonster;	/* which monster we are fighting		*/
extern	int	Lines;		/* line on screen counter for fight routines	*/
d29 2
a30 2
extern	jmp_buf Fightenv;	/* used to jump into fight routine		*/
extern	jmp_buf Timeoenv;	/* used for timing out waiting for input	*/
d32 1
a32 1
extern	long	Fileloc;	/* location in file of player statistics	*/
d34 1
a34 1
extern	char	*Login;		/* pointer to login of current player		*/
d37 2
a38 2
extern	struct player	Player;	/* stats for player				*/
extern	struct player	Other;	/* stats for another player			*/
d40 1
a40 1
extern	struct monster	Curmonster;/* stats for current monster			*/
d42 1
a42 1
extern	struct energyvoid Enrgyvoid;/* energy void buffer			*/
d46 1
a46 1
extern	struct charstats *Statptr;/* pointer into Stattable[]			*/
d48 1
a48 1
extern	struct menuitem	Menu[];	/* menu of items for purchase			*/
d50 4
a53 4
extern	FILE	*Playersfp;	/* pointer to open player file			*/
extern	FILE	*Monstfp;	/* pointer to open monster file			*/
extern	FILE	*Messagefp;	/* pointer to open message file			*/
extern	FILE	*Energyvoidfp;	/* pointer to open energy void file		*/
d55 1
a55 1
extern	char	Databuf[];	/* a place to read data into			*/
d65 1
a65 11
/* library functions and system calls */
/* extern	long	time(); */
extern	char	*getlogin();
extern	char	*getpass();
extern	char	*strchr();
extern	char	*strcat();
extern	char	*strcpy();
extern	char	*strncpy();
extern	char	*getenv();
struct	passwd	*getpwuid();
extern	char	*fgets();
d67 69
a135 16
/* functions which we need to know about */
extern	int	interrupt();
extern	int	ill_sig();
extern	void	catchalarm();
extern	long	recallplayer();
extern	long	findname();
extern	long	allocrecord();
extern	long	rollnewplayer();
extern	long	allocvoid();
extern	double	drandom();
extern	double	distance();
extern	double	infloat();
extern	double	explevel();
extern	char	*descrlocation();
extern	char	*descrtype();
extern	char	*descrstatus();
@


1.1
log
@Initial revision
@
text
@d1 1
d25 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
