head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.14
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.10
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.8
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.6
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.16
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.14
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.12
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.10
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.09.11.09.32.47;	author tb;	state Exp;
branches;
next	1.10;
commitid	96VASxpoCdUkhhfd;

1.10
date	2015.12.31.15.20.36;	author mestre;	state Exp;
branches;
next	1.9;
commitid	NXTXcl91lB5rsV7P;

1.9
date	2015.10.24.17.55.02;	author mmcc;	state Exp;
branches;
next	1.8;
commitid	nfmRa8vd0yFFqKpb;

1.8
date	2013.08.29.20.22.14;	author naddy;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.25;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.10.24.17.20.41;	author moritz;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.29.08.52.28;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.09.25.20.51.53;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.08.19.07.40.34;	author pjanzen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@KNF: Break an overlong line. No binary change.
@
text
@/*	$OpenBSD: getword.c,v 1.10 2015/12/31 15:20:36 mestre Exp $	*/
/*	$NetBSD: getword.c,v 1.4 1995/03/23 08:32:45 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <curses.h>
#include <err.h>
#include <stdlib.h>
#include <string.h>

#include "hangman.h"
#include "pathnames.h"

/*
 * getword:
 *	Get a valid word out of the dictionary file
 */
void
getword(void)
{
	FILE		*inf;
	char		*wp, *gp;
	long		 pos;
	int		badwords, countwords;
	size_t		wordlen;

	inf = Dict;
	badwords = 0;
	/* Make sure the dictionary file is valid if it's not the default */
	countwords = strcmp(Dict_name, _PATH_DICT);
	while (badwords < MAXBADWORDS) {
		if (countwords)
			badwords++;
		pos = arc4random_uniform(Dict_size);
		fseek(inf, pos, SEEK_SET);
		if (fgets(Word, BUFSIZ, inf) == NULL)
			continue;
		if (fgets(Word, BUFSIZ, inf) == NULL)
			continue;
		wordlen = strlen(Word);
		if (wordlen > 0 && Word[wordlen - 1] == '\n')
			Word[wordlen - 1] = '\0';
		if (wordlen < MINLEN || wordlen > MAXLEN)
			continue;
		for (wp = Word; *wp; wp++)
			if (!islower((unsigned char)*wp))
				goto cont;
		break;
cont:		;
	}
	if (badwords >= MAXBADWORDS) {
		mvcur(0, COLS - 1, LINES - 1, 0);
		endwin();
		errx(1, "file %s appears to be incorrectly formatted\n"
		    "(Need one lower-case word per line)", Dict_name);
	}
	gp = Known;
	wp = Word;
	while (*wp) {
		*gp++ = '-';
		wp++;
	}
	*gp = '\0';
}
@


1.10
log
@Include only needed header files per each source file

With help and OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.9 2015/10/24 17:55:02 mmcc Exp $	*/
d82 2
a83 2
		errx(1, "file %s appears to be incorrectly formatted\n(Need one lower-case word per line)",
			Dict_name);
@


1.9
log
@Cast islower()'s argument to unsigned char.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.8 2013/08/29 20:22:14 naddy Exp $	*/
d33 3
d37 2
@


1.8
log
@replace srandomdev()+random() with the arc4random*() family
tweaks and ok millert@@, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.7 2009/10/27 23:59:25 deraadt Exp $	*/
d69 1
a69 1
			if (!islower(*wp))
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.6 2006/10/24 17:20:41 moritz Exp $	*/
d57 1
a57 1
		pos = (double) random() / (RAND_MAX + 1.0) * (double) Dict_size;
@


1.6
log
@Check strlen(buf) to be > 0 before accessing buf[strlen(buf)-1].
OK ray@@ cloder@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.5 2004/11/29 08:52:28 jsg Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)getword.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: getword.c,v 1.5 2004/11/29 08:52:28 jsg Exp $";
#endif
#endif /* not lint */
@


1.5
log
@ansi. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.4 2003/06/03 03:01:40 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getword.c,v 1.4 2003/06/03 03:01:40 millert Exp $";
d56 1
d71 4
a74 2
		Word[strlen(Word) - 1] = '\0';
		if (strlen(Word) < MINLEN || strlen(Word) > MAXLEN)
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.3 1999/09/25 20:51:53 pjanzen Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getword.c,v 1.3 1999/09/25 20:51:53 pjanzen Exp $";
d50 1
a50 1
getword()
@


1.3
log
@Merge NetBSD changes (use const where appropriate; allow alternate wordlists).
Add some code beyond that so the game doesn't hang if it gets a badly formatted
alternate wordlist.
@
text
@d1 1
a1 1
/*	$OpenBSD: getword.c,v 1.2 1998/08/19 07:40:34 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getword.c,v 1.2 1998/08/19 07:40:34 pjanzen Exp $";
@


1.2
log
@tags, formatting, ANSI-fication, prototypes, de-typos, and the occasional
initialization, removal of unused variable, or other minor fix.  Most
changes are from or inspired by NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d45 1
d47 1
a47 1
#include <stdlib.h>
d56 4
a59 3
	register FILE		*inf;
	register char		*wp, *gp;
	register long		 pos;
d62 6
a67 1
	for (;;) {
d69 1
a69 1
		fseek(inf, pos, 0);
d75 1
a75 1
		if (strlen(Word) < MINLEN)
d82 6
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: getword.c,v 1.4 1995/03/23 08:32:45 cgd Exp $";
d52 1
d61 1
a61 1
		pos = (double)rand() / (RAND_MAX + 1.0) * (double)Dict_size;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
