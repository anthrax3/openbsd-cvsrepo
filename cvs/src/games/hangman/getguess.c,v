head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.6
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.8
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.12
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.10
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.8
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.6
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.16
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.14
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.12
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.10
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.01.04.17.33.24;	author mestre;	state Exp;
branches;
next	1.14;
commitid	b21xvsfCGMtCOVrz;

1.14
date	2015.12.31.15.20.36;	author mestre;	state Exp;
branches;
next	1.13;
commitid	NXTXcl91lB5rsV7P;

1.13
date	2015.02.07.03.30.08;	author tedu;	state Exp;
branches;
next	1.12;
commitid	GdLzTOwZ0maxhwiX;

1.12
date	2015.02.07.03.26.20;	author tedu;	state Exp;
branches;
next	1.11;
commitid	gyRog8burdNChGv8;

1.11
date	2015.02.07.03.07.02;	author tedu;	state Exp;
branches;
next	1.10;
commitid	PKNYAOzVBptalUvk;

1.10
date	2015.02.07.01.43.51;	author tedu;	state Exp;
branches;
next	1.9;
commitid	MV27kXALfrRVSn0f;

1.9
date	2009.10.27.23.59.25;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2008.04.01.21.05.50;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.13.02.33.07;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.29.08.52.28;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.09.25.20.51.53;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.08.19.07.40.32;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	96.06.02.19.47.04;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@More cleanup and sorting on header section

OK tb@@ and he also pointed out that for consistency with rest of the tree we
should include termios.h instead of sys/ttydefaults.h, where applicable
@
text
@/*	$OpenBSD: getguess.c,v 1.14 2015/12/31 15:20:36 mestre Exp $	*/
/*	$NetBSD: getguess.c,v 1.5 1995/03/23 08:32:43 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <curses.h>
#include <termios.h>
#include <unistd.h>

#include "hangman.h"

/*
 * getguess:
 *	Get another guess
 */
void
getguess(void)
{
	int	i;
	unsigned char	ch, uch;
	bool	correct;

	leaveok(stdscr, FALSE);
	for (;;) {
		move(PROMPTY, PROMPTX + sizeof "Guess: ");
		refresh();
		ch = readch();
		if (isalpha(ch)) {
			if (isupper(ch))
				ch = tolower(ch);
			if (Guessed[ch - 'a']) {
				move(MESGY, MESGX);
				clrtoeol();
				mvprintw(MESGY, MESGX, "Already guessed '%c'",
				    ch);
			} else
				break;
		} else if (isdigit(ch)) {
			if (Guessed[ch - '0' + 26]) {
				move(MESGY, MESGX);
				clrtoeol();
				mvprintw(MESGY, MESGX, "Already guessed '%c'",
				    ch);
			} else
				break;
		} else
			if (ch == CTRL('D'))
				die(0);
			else {
				move(MESGY, MESGX);
				clrtoeol();
				mvprintw(MESGY, MESGX,
				    "Not a valid guess: '%s'", unctrl(ch));
			}
	}
	leaveok(stdscr, TRUE);
	move(MESGY, MESGX);
	clrtoeol();

	if (isalpha(ch))
		Guessed[ch - 'a'] = TRUE;
	else
		Guessed[ch - '0' + 26] = TRUE;
	correct = FALSE;
	uch = toupper(ch);
	for (i = 0; Word[i] != '\0'; i++)
		if (Word[i] == ch) {
			Known[i] = ch;
			correct = TRUE;
		} else if (Word[i] == uch) {
			Known[i] = uch;
			correct = TRUE;
		}
	if (!correct)
		Errors++;
}

/*
 * readch;
 *	Read a character from the input
 */
unsigned char
readch(void)
{
	int	cnt;
	char	ch;

	cnt = 0;
	for (;;) {
		if (read(STDIN_FILENO, &ch, sizeof ch) <= 0) {
			if (++cnt > 100)
				die(0);
		} else
			if (ch == CTRL('L')) {
				wrefresh(curscr);
				mvcur(0, 0, curscr->_cury, curscr->_curx);
			} else
				return ch;
	}
}
@


1.14
log
@Include only needed header files per each source file

With help and OK from tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.13 2015/02/07 03:30:08 tedu Exp $	*/
a32 2
#include <sys/ttydefaults.h>

d35 1
@


1.13
log
@use unsigned char type to avoid many casts
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.12 2015/02/07 03:26:20 tedu Exp $	*/
d34 5
@


1.12
log
@by popular request, stop giving away numeric letters. no more will the
appearance of 509 in a symbol name tell you what letter to guess first.
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.11 2015/02/07 03:07:02 tedu Exp $	*/
d44 1
a44 1
	int	ch, uch;
d52 3
a54 3
		if (isalpha((unsigned char)ch)) {
			if (isupper((unsigned char)ch))
				ch = tolower((unsigned char)ch);
d62 1
a62 1
		} else if (isdigit((unsigned char)ch)) {
d84 1
a84 1
	if (isalpha((unsigned char)ch))
d89 1
a89 1
	uch = toupper((unsigned char)ch);
d106 1
a106 1
int
@


1.11
log
@unsigned char for ctype functions
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.10 2015/02/07 01:43:51 tedu Exp $	*/
d62 8
d84 4
a87 1
	Guessed[ch - 'a'] = TRUE;
d89 1
a89 1
	uch = toupper(ch);
@


1.10
log
@clear to end of line when printing error messages so that previous
messages don't remain and pollute the line
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.9 2009/10/27 23:59:25 deraadt Exp $	*/
d52 3
a54 3
		if (isalpha(ch)) {
			if (isupper(ch))
				ch = tolower(ch);
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.8 2008/04/01 21:05:50 miod Exp $	*/
d55 3
a57 1
			if (Guessed[ch - 'a'])
d60 1
a60 1
			else
d65 3
a67 1
			else
d70 1
@


1.8
log
@Add a -k option to use the kernel symbols as the words file.
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.7 2005/04/13 02:33:07 deraadt Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)getguess.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: getguess.c,v 1.7 2005/04/13 02:33:07 deraadt Exp $";
#endif
#endif /* not lint */
@


1.7
log
@use STD{IN,OUT,ERR}_FILENO
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.6 2004/11/29 08:52:28 jsg Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getguess.c,v 1.6 2004/11/29 08:52:28 jsg Exp $";
d52 1
a52 1
	int	ch;
d81 1
d85 3
@


1.6
log
@ansi. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.5 2003/06/03 03:01:40 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getguess.c,v 1.5 2003/06/03 03:01:40 millert Exp $";
d102 1
a102 1
		if (read(0, &ch, sizeof ch) <= 0) {
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.4 1999/09/25 20:51:53 pjanzen Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getguess.c,v 1.4 1999/09/25 20:51:53 pjanzen Exp $";
d49 1
a49 1
getguess()
d95 1
a95 1
readch()
@


1.4
log
@Merge NetBSD changes (use const where appropriate; allow alternate wordlists).
Add some code beyond that so the game doesn't hang if it gets a badly formatted
alternate wordlist.
@
text
@d1 1
a1 1
/*	$OpenBSD: getguess.c,v 1.3 1998/08/19 07:40:32 pjanzen Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: getguess.c,v 1.3 1998/08/19 07:40:32 pjanzen Exp $";
@


1.3
log
@tags, formatting, ANSI-fication, prototypes, de-typos, and the occasional
initialization, removal of unused variable, or other minor fix.  Most
changes are from or inspired by NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD$";
d55 3
a57 3
	register int	i;
	register int	ch;
	register bool	correct;
@


1.2
log
@Update for modern curses implementation
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: getguess.c,v 1.5 1995/03/23 08:32:43 cgd Exp $";
d52 1
d68 2
a69 1
				mvprintw(MESGY, MESGX, "Already guessed '%c'", ch);
d72 6
a77 6
		}
		else if (ch == CTRL('D'))
			die();
		else
			mvprintw(MESGY, MESGX, "Not a valid guess: '%s'",
				unctrl(ch));
d98 1
d101 2
a102 2
	register int	cnt, r;
	auto char	ch;
d106 1
a106 2
		if (read(0, &ch, sizeof ch) <= 0)
		{
d108 7
a114 8
				die();
		}
		else if (ch == CTRL('L')) {
			wrefresh(curscr);
			mvcur(0, 0, curscr->_cury, curscr->_curx);
		}
		else
			return ch;
@


1.1
log
@Initial revision
@
text
@d109 1
a109 1
			mvcur(0, 0, curscr->cury, curscr->curx);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
