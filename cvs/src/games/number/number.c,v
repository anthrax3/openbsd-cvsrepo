head	1.20;
access;
symbols
	OPENBSD_6_2:1.20.0.8
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.6
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.14.0.26
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.18
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.22
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.20
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.18
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.14
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.12
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.10
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.10
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.6
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.03.07.12.07.56;	author mestre;	state Exp;
branches;
next	1.19;
commitid	NZhYxChmyb9vOEMM;

1.19
date	2016.01.07.16.00.33;	author tb;	state Exp;
branches;
next	1.18;
commitid	IwzFE3fG5RnKTWNh;

1.18
date	2016.01.04.17.33.24;	author mestre;	state Exp;
branches;
next	1.17;
commitid	b21xvsfCGMtCOVrz;

1.17
date	2015.12.25.20.59.09;	author mestre;	state Exp;
branches;
next	1.16;
commitid	5J5Os05YMVA0ZKC5;

1.16
date	2015.10.24.18.37.23;	author mmcc;	state Exp;
branches;
next	1.15;
commitid	xFP50aHUKKiX7EoN;

1.15
date	2015.10.14.08.12.12;	author doug;	state Exp;
branches;
next	1.14;
commitid	l6H409xsPGcs6ezU;

1.14
date	2009.10.27.23.59.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2005.11.05.22.55.37;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.05.22.53.05;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.10.07.26.23;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.03.01.40;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.31.03.40.01;	author pjanzen;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.11;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.09.25.15.52.20;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	98.03.25.08.45.25;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	98.02.27.02.43.32;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.01.15.23.40.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.12.22.20.01.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.12.19.22.21.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@- General changes:
- Remove -? from getopt(3) options, but still keep (or add) -h where applicable
- Replace hardcoded program strings by getprogname(3)

- Specific changes:
- atc(6): this used -? and -u for usage(), remove both from game and manpage
- bcd(6): use __progname instead of getprogname(3), no need to include stdlib.h
- hunt(6): replace fputs(3) by fprintf(3)

OK tb@@ after his suggestions
@
text
@/*	$OpenBSD: number.c,v 1.19 2016/01/07 16:00:33 tb Exp $	*/

/*
 * Copyright (c) 1988, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define	MAXNUM		65		/* Biggest number we handle. */
#define	LINELEN		256

static const char	*const name1[] = {
	"",		"one",		"two",		"three",
	"four",		"five",		"six",		"seven",
	"eight",	"nine",		"ten",		"eleven",
	"twelve",	"thirteen",	"fourteen",	"fifteen",
	"sixteen",	"seventeen",	"eighteen",	"nineteen",
},
		*const name2[] = {
	"",		"ten",		"twenty",	"thirty",
	"forty",	"fifty",	"sixty",	"seventy",
	"eighty",	"ninety",
},
		*const name3[] = {
	"hundred",	"thousand",	"million",	"billion",
	"trillion",	"quadrillion",	"quintillion",	"sextillion",
	"septillion",	"octillion",	"nonillion",	"decillion",
	"undecillion",	"duodecillion",	"tredecillion",	"quattuordecillion",
	"quindecillion",		"sexdecillion",	
	"septendecillion",		"octodecillion",
	"novemdecillion",		"vigintillion",
};

void	convert(char *);
void	convertexp(char *);
int	number(const char *, int);
void	pfract(int);
int	unit(int, const char *);
__dead void	usage(void);

int lflag;

int
main(int argc, char *argv[])
{
	int ch, first;
	char line[LINELEN];

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	lflag = 0;
	while ((ch = getopt(argc, argv, "hl")) != -1)
		switch (ch) {
		case 'l':
			lflag = 1;
			break;
		case 'h':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if (*argv == NULL)
		for (first = 1;
		    fgets(line, sizeof(line), stdin) != NULL; first = 0) {
			if (strchr(line, '\n') == NULL)
				errx(1, "line too long.");
			if (!first)
				(void)printf("...\n");
			convert(line);
			if (lflag)
				(void)printf("\n");
		}
	else
		for (first = 1; *argv != NULL; first = 0, ++argv) {
			if (!first)
				(void)printf("...\n");
			convert(*argv);
			if (lflag)
				(void)printf("\n");
		}
	return 0;
}

void
convert(char *line)
{
	int flen, len, rval;
	char *p, *fraction;

	/* strip trailing and leading whitespace */
	len = strlen(line) - 1;
	while ((isblank((unsigned char)line[len])) || (line[len] == '\n'))
		line[len--] = '\0';
	while ((isblank((unsigned char)line[0])) || (line[0] == '\n'))
		line++;
	if (strchr(line, 'e') || strchr(line, 'E'))
		convertexp(line);
	else {
	fraction = NULL;
	for (p = line; *p != '\0' && *p != '\n'; ++p) {
		if (isblank((unsigned char)*p))
			goto badnum;
		if (isdigit((unsigned char)*p))
			continue;
		switch (*p) {
		case '.':
			if (fraction != NULL)
				goto badnum;
			fraction = p + 1;
			*p = '\0';
			break;
		case '-':
		case '+':
			if (p == line)
				break;
			/* FALLTHROUGH */
		default:
badnum:			errx(1, "illegal number: %s", line);
			break;
		}
	}
	*p = '\0';

	if ((len = strlen(line)) > MAXNUM ||
	    ((fraction != NULL) && (flen = strlen(fraction)) > MAXNUM))
		errx(1, "number too long (max %d digits).", MAXNUM);

	if (*line == '-') {
		(void)printf("minus%s", lflag ? " " : "\n");
		++line;
		--len;
	}
	if (*line == '+') {
		(void)printf("plus%s", lflag ? " " : "\n");
		++line;
		--len;
	}

	rval = len > 0 ? unit(len, line) : 0;
	if (fraction != NULL && flen != 0)
		for (p = fraction; *p != '\0'; ++p)
			if (*p != '0') {
				if (rval)
					(void)printf("%sand%s",
					    lflag ? " " : "",
					    lflag ? " " : "\n");
				if (unit(flen, fraction)) {
					if (lflag)
						(void)printf(" ");
					pfract(flen);
					rval = 1;
				}
				break;
			}
	if (!rval)
		(void)printf("zero%s", lflag ? "" : ".\n");
	}
}

void
convertexp(char *line)
{
	char locline[LINELEN];
	char *part1, *part2, *part3, *part4;
	char tmp[2];
	int  i, j;

	(void)strlcpy(locline,line,LINELEN);
	part3 = locline;
	part2 = strsep(&part3, "eE");	/* part3 is the exponent */
	part4 = part3;
	(void)strsep(&part4, ".");	/* no decimal allowed in the exponent */	
	if (part4)
		errx(1, "illegal number: %s", line);
	part1 = strsep(&part2, ".");	/* we can have one in the mantissa */
	/* At this point everything should be null or a digit.  Check for
	 * that before starting to convert.  Two characters may be + or -.
	 */
	j = strlen(line);
	for (i = 0; i < j; i++)
		if ((!isdigit((unsigned char)locline[i])) && (locline[i]))
			if (((locline[i] != '+') && (locline[i] != '-')) ||
				((i != 0) && (i != part3 - locline)))
				errx(1, "illegal number: %s", line);
	convert(part1);
	printf("%s", lflag ? " " : "");
	if (part2 && part2[0]) {	/* do individual digits separately */
		(void)printf("point%s", lflag ? " " : "\n");
		j = strlen(part2); tmp[1] = '\0';
		for (i = 0 ; i < j; i++ ) {
			tmp[0] = part2[i];
			convert(tmp);
			(void)printf("%s", lflag ? " " : "");
		}
	}
	(void)printf("times ten to the%s", lflag ? " " : "\n");
	if (part3 && part3[0])
		convert(part3);
	else
		(void)printf("zero%s", lflag ? " " : ".\n");
}

int
unit(int len, const char *p)
{
	int off, rval;

	rval = 0;
	if (len > 3) {
		if (len % 3) {
			off = len % 3;
			len -= off;
			if (number(p, off)) {
				rval = 1;
				(void)printf(" %s%s",
				    name3[len / 3], lflag ? " " : ".\n");
			}
			p += off;
		}
		for (; len > 3; p += 3) {
			len -= 3;
			if (number(p, 3)) {
				rval = 1;
				(void)printf(" %s%s",
				    name3[len / 3], lflag ? " " : ".\n");
			}
		}
	}
	if (number(p, len)) {
		if (!lflag)
			(void)printf(".\n");
		rval = 1;
	}
	return (rval);
}

int
number(const char *p, int len)
{
	int val, rval;

	rval = 0;
	switch (len) {
	case 3:
		if (*p != '0') {
			rval = 1;
			(void)printf("%s hundred", name1[*p - '0']);
		}
		++p;
		/* FALLTHROUGH */
	case 2:
		val = (p[1] - '0') + (p[0] - '0') * 10;
		if (val) {
			if (rval)
				(void)printf(" ");
			if (val < 20)
				(void)printf("%s", name1[val]);
			else {
				(void)printf("%s", name2[val / 10]);
				if (val % 10)
					(void)printf("-%s", name1[val % 10]);
			}
			rval = 1;
		}
		break;
	case 1:
		if (*p != '0') {
			rval = 1;
			(void)printf("%s", name1[*p - '0']);
		}
	}
	return (rval);
}

void
pfract(int len)
{
	static const char *const pref[] = { "", "ten-", "hundred-" };

	switch(len) {
	case 1:
		(void)printf("tenths%s", lflag ? "" : ".\n");
		break;
	case 2:
		(void)printf("hundredths%s", lflag ? "" : ".\n");
		break;
	default:
		(void)printf("%s%sths%s", pref[len % 3], name3[len / 3],
		    lflag ? "" : ".\n");
		break;
	}
}

void
usage(void)
{
	(void)fprintf(stderr, "usage: %s [-l] [--] [# ...]\n", getprogname());
	exit(1);
}
@


1.19
log
@Some basic code maintenance in games/

- in main() replace exit with return
- drop some /* NOTREACHED */ lint comments along the way.
- make more use of standard CFLAGS, esp. -Wimplicit-function-declaration
- add and sort some headers when needed
- add straightforward pledges to some programs used at compile time

discussed with and ok mestre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.18 2016/01/04 17:33:24 mestre Exp $	*/
a87 1
		case '?':
d330 1
a330 1
	(void)fprintf(stderr, "usage: number [-l] [--] [# ...]\n");
@


1.18
log
@More cleanup and sorting on header section

OK tb@@ and he also pointed out that for consistency with rest of the tree we
should include termios.h instead of sys/ttydefaults.h, where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.17 2015/12/25 20:59:09 mestre Exp $	*/
d115 1
a115 1
	exit(0);
@


1.17
log
@Declare usage() functions as __dead void, if they don't return, on games section.

Found another one in arithmetic(6) which also didn't return, and removed a function from number(6) which is not used anymore.

OK tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.16 2015/10/24 18:37:23 mmcc Exp $	*/
a30 2

#include <sys/types.h>
@


1.16
log
@Cast ctype functions' argument to unsigned char.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.15 2015/10/14 08:12:12 doug Exp $	*/
a69 1
void	toobig(void);
d71 1
a71 1
void	usage(void);
@


1.15
log
@Pledge "stdio" for simple games.

ok semarie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.14 2009/10/27 23:59:26 deraadt Exp $	*/
d129 1
a129 1
	while ((isblank(line[len])) || (line[len] == '\n'))
d131 1
a131 1
	while ((isblank(line[0])) || (line[0] == '\n'))
d138 1
a138 1
		if (isblank(*p))
d140 1
a140 1
		if (isdigit(*p))
d218 1
a218 1
		if ((!isdigit(locline[i])) && (locline[i]))
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.13 2005/11/05 22:55:37 jmc Exp $	*/
d81 3
@


1.13
log
@remove extra \n;
from pjanzen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.12 2005/11/05 22:53:05 jmc Exp $	*/
a30 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1988, 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)number.c	8.3 (Berkeley) 5/4/95";
#else
static char rcsid[] = "$OpenBSD: number.c,v 1.12 2005/11/05 22:53:05 jmc Exp $";
#endif
#endif /* not lint */
@


1.12
log
@- correct misplaced parenthesis
- better error message

from pjanzen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.11 2004/07/10 07:26:23 deraadt Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: number.c,v 1.11 2004/07/10 07:26:23 deraadt Exp $";
d330 1
a330 1
		(void)printf("tenths.\n");
d333 1
a333 1
		(void)printf("hundredths.\n");
d336 2
a337 1
		(void)printf("%s%sths.\n", pref[len % 3], name3[len / 3]);
@


1.11
log
@more ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.10 2003/06/03 03:01:40 millert Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: number.c,v 1.10 2003/06/03 03:01:40 millert Exp $";
d173 2
a174 2
	    ((fraction != NULL) && (flen = strlen(fraction))) > MAXNUM)
		errx(1, "number too large (max %d digits).", MAXNUM);
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.9 2002/05/31 03:40:01 pjanzen Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: number.c,v 1.9 2002/05/31 03:40:01 pjanzen Exp $";
d91 1
a91 3
main(argc, argv)
	int argc;
	char *argv[];
d133 1
a133 2
convert(line)
	char *line;
d209 1
a209 2
convertexp(line)
	char *line;
d252 1
a252 3
unit(len, p)
	int len;
	const char *p;
d286 1
a286 3
number(p, len)
	const char *p;
	int len;
d324 1
a324 2
pfract(len)
	int len;
d342 1
a342 1
usage()
@


1.9
log
@No dm -> no need to revoke setegid.
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.8 2002/02/16 21:27:11 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d42 1
a42 1
static char rcsid[] = "$OpenBSD: number.c,v 1.8 2002/02/16 21:27:11 millert Exp $";
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.7 1999/09/25 15:52:20 pjanzen Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: number.c,v 1.7 1999/09/25 15:52:20 pjanzen Exp $";
a100 4

	/* revoke */
	setegid(getgid());
	setgid(getgid());
@


1.7
log
@Tidying and minor changes from or based on jsm28@@cam.ac.uk's work for the
Linux bsd-games package and NetBSD.  Mainly using 'const'.
@
text
@d1 1
a1 1
/*	$OpenBSD: number.c,v 1.6 1998/03/25 08:45:25 pjanzen Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: number.c,v 1.6 1998/03/25 08:45:25 pjanzen Exp $";
d84 7
a90 7
void	convert __P((char *));
void	convertexp __P((char *));
int	number __P((const char *, int));
void	pfract __P((int));
void	toobig __P((void));
int	unit __P((int, const char *));
void	usage __P((void));
@


1.6
log
@handle exponents, leading whitespace, and +
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char sccsid[] = "@@(#)number.c	8.2 (Berkeley) 3/31/94";
d46 1
a46 1
static char rcsid[] = "$OpenBSD$";
d62 1
a62 1
static char	*name1[] = {
d69 1
a69 1
		*name2[] = {
d74 1
a74 1
		*name3[] = {
d86 1
a86 1
int	number __P((char *, int));
d89 1
a89 1
int	unit __P((int, char *));
d228 1
a228 1
	(void)strncpy(locline,line,LINELEN);
d265 2
a266 2
	register int len;
	register char *p;
d268 1
a268 1
	register int off, rval;
d301 1
a301 1
	register char *p;
d304 1
a304 1
	register int val, rval;
d343 1
a343 1
	static char *pref[] = { "", "ten-", "hundred-" };
@


1.5
log
@fix a bug; steve@@freebsd
@
text
@d1 1
a1 1
/*	$NetBSD: number.c,v 1.3 1995/03/23 08:35:30 cgd Exp $	*/
d46 1
a46 1
static char rcsid[] = "$NetBSD: number.c,v 1.3 1995/03/23 08:35:30 cgd Exp $";
d53 1
d57 1
a57 1
#include <err.h>
d60 1
d85 1
d100 1
a100 1
	char line[256];
d107 1
a107 1
	while ((ch = getopt(argc, argv, "l")) != -1)
d113 1
d128 2
d136 2
d146 2
a147 2
	register flen, len, rval;
	register char *p, *fraction;
d149 9
d160 1
a160 5
		if (isblank(*p)) {
			if (p == line) {
				++line;
				continue;
			}
a161 1
		}
d172 1
d184 2
a185 2
	    fraction != NULL && (flen = strlen(fraction)) > MAXNUM)
		errx(1, "number too large, max %d digits.", MAXNUM);
d192 5
d216 45
a260 2
	if (lflag)
		(void)printf("\n");
d361 1
a361 1
	(void)fprintf(stderr, "usage: number [# ...]\n");
@


1.4
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d177 1
@


1.3
log
@proper gid revoke
@
text
@d104 1
a104 1
	while ((ch = getopt(argc, argv, "l")) != EOF)
@


1.2
log
@setgid games, not setuid games. closes a neat set of holes
@
text
@d99 2
@


1.1
log
@Initial revision
@
text
@d99 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

