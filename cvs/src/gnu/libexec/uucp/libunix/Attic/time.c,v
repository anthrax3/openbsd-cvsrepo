head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.09.09.16.41.31;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.38.31;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.31;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@uucp goes away
@
text
@/* time.c
   Get the current time.  */

#include "uucp.h"

#if HAVE_TIME_H
#include <time.h>
#endif

#include "system.h"

#ifndef time
extern time_t time ();
#endif

/* Get the time in seconds since the epoch, with optional
   microseconds.  We use ixsysdep_process_time to get the microseconds
   if it will work (it won't if it uses times, since that returns a
   time based only on the process).  */

long
ixsysdep_time (pimicros)
     long *pimicros;
{
#if HAVE_GETTIMEOFDAY || HAVE_FTIME
  return ixsysdep_process_time (pimicros);
#else
  if (pimicros != NULL)
    *pimicros = 0;
  return (long) time ((time_t *) NULL);
#endif
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
