head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.2
date	2001.09.09.16.41.31;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.38.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@uucp goes away
@
text
@#!/bin/sh
#
# uuxconv
#
# After converting to Taylor from SVR4.03 UUCP, I still had a lot of
# jobs queued up to go out.
#
# This script is a one-shot to mass-requeue a site's spool.
#
# It doesn't go and do your whole spool, nor even all grades.
# you need to go into each grade directory for each site and 
# execute this.
#
# i.e.:  You have a site named 'foo'
# cd /var/spool/uucp/foo/Z
# uuxconv foo
# 
# it does delete the 'D' & 'X' after requeing them, but doesn't remove
# the 'C' files.
#
# I foolishly went and ran this script on all my queued jobs, without
# adding the improvements to recursively go through the entire UUCP spool,
# so now I'm out of files to test with.  I don't want to add the code
# to do that since I can't test it, and this worked.
#
# I hereby give this (trivial :-)) program to the GNU Project/FSF
# and Ian Taylor in it's entirety, so that it can be placed in
# the contrib directory of taylor-uucp, and save others the pain
# of rewriting it.
#
# Richard Nickle (rick@@trystro.uucp, rnickle@@gnu.ai.mit.edu)
# May 27, 1993
#
if [ $# -eq 0 ]
then
	echo "Usage: $0 sitename"
	exit 1
fi
exit 0
site=$1
tsite=`echo $site | cut -c1-5`
find . -name "D.$tsite*" -print |
while read file
do
	control=`egrep "^C" $file | cut -c3-`
	input=`egrep "^I" $file | cut -c3-`
	(uux - -r -z $site!$control < $input) && (rm $file $input)
	echo "$site!$control < $input"
done
exit 0
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
