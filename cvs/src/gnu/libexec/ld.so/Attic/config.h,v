head	1.3;
access;
symbols
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2001.06.27.19.48.51;	author miod;	state dead;
branches;
next	1.2;

1.2
date	96.09.28.10.34.02;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	96.09.18.08.15.21;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.3
log
@More mips leftovers to get rid of...
@
text
@#ifdef DEBUG
#  define LDSO_IMAGE "../ld-so/ld.so"
#  define LDSO_CONF  "../util/ld.so.conf"
#  define LDSO_CACHE "../util/ld.so.cache"
#else
#  define LDSO_IMAGE "/lib/ld.so"
#  define LDSO_CONF  "/etc/ld.so.conf"
#  define LDSO_CACHE "/etc/ld.so.cache"
#endif

#define LDD_ARGV0    "__LDD_ARGV0"
#define DIR_SEP      ":, \t\n"
#define MAX_DIRS     32

#define	VERSION	"1.0"

typedef void (*loadptr)(int func, ...);
typedef void (*callbackptr)(int ver, int nlibs, char **libs, 
		int nmods, char **mods);

#define CALLBACK_VER 1

#define LIB_DLL      0
#define LIB_ELF      1

#define FUNC_VERS    0
#define FUNC_LDD     1
#define FUNC_LINK    2
#define FUNC_LINK_AND_CALLBACK 3

#define LDSO_CACHE_MAGIC "ld.so-"
#define LDSO_CACHE_MAGIC_LEN (sizeof LDSO_CACHE_MAGIC -1)
#define LDSO_CACHE_VER "1.7.0"
#define LDSO_CACHE_VER_LEN (sizeof LDSO_CACHE_VER -1)

typedef struct {
	char magic   [LDSO_CACHE_MAGIC_LEN];
	char version [LDSO_CACHE_VER_LEN];
	int nlibs;
} header_t;

typedef struct {
	int flags;
	int sooffset;
	int liboffset;
} libentry_t;
@


1.2
log
@hmm.. /etc was perhaps a better place
@
text
@@


1.1
log
@OK, this is the dynamic loader for the MIPS. It's a hack, it's GPL'd, its
just ugly, but it works. So we stick with it right now...
@
text
@d8 1
a8 1
#  define LDSO_CACHE "/var/run/ld.so.cache"
@
