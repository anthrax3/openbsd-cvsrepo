head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.0.20
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.06.27.19.49.04;	author miod;	state dead;
branches;
next	1.1;

1.1
date	96.09.18.08.15.43;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@More mips leftovers to get rid of...
@
text
@#if 0
#include <sysdep.h>
#endif
/*
 * These are various helper routines that are needed to run an ELF image.
 */

#ifdef NO_UNDERSCORE
#define __dl_linux_resolve _dl_linux_resolve
#define __dl_linux_resolver _dl_linux_resolver
#endif

.text
.even

.globl __dl_linux_resolve
	.type	__dl_linux_resolve,@@function
__dl_linux_resolve:
	moveml	%a0/%a1,%sp@@-
#ifdef __PIC__
	bsrl	__dl_linux_resolver:PLTPC
#else
	jsr	__dl_linux_resolver
#endif
	moveml	%sp@@+,%a0/%a1
	addql 	#8,%sp
	jmp	@@(%d0)
.LFE2:
	.size __dl_linux_resolve,.LFE2-__dl_linux_resolve
@


1.1
log
@OK, this is the dynamic loader for the MIPS. It's a hack, it's GPL'd, its
just ugly, but it works. So we stick with it right now...
@
text
@@

