head	1.6;
access;
symbols
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2001.06.27.19.48.53;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2000.11.05.22.28.19;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	97.04.27.20.55.51;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.09.26.12.22.02;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.09.23.18.58.55;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	96.09.18.08.15.23;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@More mips leftovers to get rid of...
@
text
@#	$OpenBSD: Makefile,v 1.5 2000/11/05 22:28:19 miod Exp $

SUBDIR= # libdl

CFLAGS += -I${.CURDIR} -DNO_UNDERSCORE -DVERBOSE_DLINKER \
	-DUSE_CACHE -D__PIC__ -I${.CURDIR}/${MACHINE_ARCH}

SRCS=	boot1.c hash.c readelflib1.c vsprintf.c elfinterp.c
PROG=	ld.so
MAN=	ld.so.8
BINDIR=/usr/libexec
INSTALL_STRIP=

.PATH:	${.CURDIR}/${MACHINE_ARCH}

$(PROG):
	${CC} -shared -e _dl_boot -o ${PROG} `${LORDER} ${OBJS}|tsort -q`


.include <bsd.prog.mk>
.include <bsd.subdir.mk>
@


1.5
log
@Link with gcc -shared
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/04/27 20:55:51 millert Exp $
@


1.4
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP
This fixes namespace problems where STRIP is sometimes used as
the name of the strip(1) to use and other times used as
the flag to send install(1) when stripping (or not).
COPY doesn't have this problem (yet) but was poorly named.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1996/09/26 12:22:02 deraadt Exp $
a15 2
ELF_LDFLAGS=--shared # using GNU ld

d17 1
a17 1
	$(LD) -x -e _dl_boot $(ELF_LDFLAGS) -o $(PROG) $(OBJS)
@


1.3
log
@handle obj dirs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1996/09/23 18:58:55 pefo Exp $
d12 1
a12 1
STRIP=
@


1.2
log
@Fixes to avoid using asm to get pointer to start sp in ld.so. It's a little
hackish but doesn't add any machdep stuff to MI code.
Also don't strip when installing ld.so.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1996/09/18 08:15:23 pefo Exp $
d5 2
a6 2
CFLAGS += -I. -DNO_UNDERSCORE -DVERBOSE_DLINKER \
	-DUSE_CACHE -D__PIC__ -I${MACHINE_ARCH}
d14 1
a14 1
.PATH:	${MACHINE_ARCH}
@


1.1
log
@OK, this is the dynamic loader for the MIPS. It's a hack, it's GPL'd, its
just ugly, but it works. So we stick with it right now...
@
text
@d1 1
a1 1
#	$OpenBSD$
d12 1
d19 1
a19 1
	$(LD) -x -e _dl_boot $(ELF_LDFLAGS) -o $(DLINKER) $(OBJS)
@
