head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.0.20
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.06.27.19.49.07;	author miod;	state dead;
branches;
next	1.1;

1.1
date	96.09.18.08.15.48;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@More mips leftovers to get rid of...
@
text
@.include "../../Version.mk"
.include "../../Config.mk"

CC = $(ELFCC)
AS = $(ELFAS)
LD = $(ELFLD)

CFLAGS += -I.. -I. -DNO_UNDERSCORE -DVERBOSE_DLINKER
CFLAGS += -mabicalls -G0 -fPIC -D__PIC__ #-DDEBUG # -funroll-loops

../%.o: %.S
	$(CC) $(CFLAGS) -c $< -o $@@
../%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@@

SRC1S = resolve.S
SRC2S = elfinterp.c

SRCS	= $(SRC1S) $(SRC2S)
OBJ1S	= $(SRC1S:.S=.o)
OBJ2S	= $(SRC2S:.c=.o)
OBJS	= $(OBJ1S) $(OBJ2S)

DLINK_OBJS:= $(addprefix ../, $(OBJS))

lib:: $(DLINK_OBJS)

obj: $(DLINK_OBJS)

asm: $(ASMS)

realclean::
	$(RM) -f .depend core *.o *.a *.s *.i tmp_make *~

clean::
	$(RM) -f core *.o *.a *.s *.i tmp_make *~

depend::
	$(CC) $(CFLAGS) -M $(SRCS) | \
		sed -e 's,^[ 	]*\(.*\.o\)[ 	]*:,../\1:,' > .depend
#	$(MAKE) subdir TARGET=depend

#
# include a dependency file if one exists
#
#ifeq (.depend,$(wildcard .depend))
#include .depend
#endif

@


1.1
log
@OK, this is the dynamic loader for the MIPS. It's a hack, it's GPL'd, its
just ugly, but it works. So we stick with it right now...
@
text
@@

