head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.1.5.0.50
	OPENBSD_5_4_BASE:1.1.1.5
	OPENBSD_5_3:1.1.1.5.0.48
	OPENBSD_5_3_BASE:1.1.1.5
	OPENBSD_5_2:1.1.1.5.0.46
	OPENBSD_5_2_BASE:1.1.1.5
	OPENBSD_5_1_BASE:1.1.1.5
	OPENBSD_5_1:1.1.1.5.0.44
	OPENBSD_5_0:1.1.1.5.0.42
	OPENBSD_5_0_BASE:1.1.1.5
	OPENBSD_4_9:1.1.1.5.0.40
	OPENBSD_4_9_BASE:1.1.1.5
	OPENBSD_4_8:1.1.1.5.0.38
	OPENBSD_4_8_BASE:1.1.1.5
	OPENBSD_4_7:1.1.1.5.0.34
	OPENBSD_4_7_BASE:1.1.1.5
	OPENBSD_4_6:1.1.1.5.0.36
	OPENBSD_4_6_BASE:1.1.1.5
	OPENBSD_4_5:1.1.1.5.0.32
	OPENBSD_4_5_BASE:1.1.1.5
	OPENBSD_4_4:1.1.1.5.0.30
	OPENBSD_4_4_BASE:1.1.1.5
	OPENBSD_4_3:1.1.1.5.0.28
	OPENBSD_4_3_BASE:1.1.1.5
	OPENBSD_4_2:1.1.1.5.0.26
	OPENBSD_4_2_BASE:1.1.1.5
	OPENBSD_4_1:1.1.1.5.0.24
	OPENBSD_4_1_BASE:1.1.1.5
	OPENBSD_4_0:1.1.1.5.0.22
	OPENBSD_4_0_BASE:1.1.1.5
	OPENBSD_3_9:1.1.1.5.0.20
	OPENBSD_3_9_BASE:1.1.1.5
	OPENBSD_3_8:1.1.1.5.0.18
	OPENBSD_3_8_BASE:1.1.1.5
	OPENBSD_3_7:1.1.1.5.0.16
	OPENBSD_3_7_BASE:1.1.1.5
	OPENBSD_3_6:1.1.1.5.0.14
	OPENBSD_3_6_BASE:1.1.1.5
	OPENBSD_3_5:1.1.1.5.0.12
	OPENBSD_3_5_BASE:1.1.1.5
	OPENBSD_3_4:1.1.1.5.0.10
	OPENBSD_3_4_BASE:1.1.1.5
	OPENBSD_3_3:1.1.1.5.0.8
	OPENBSD_3_3_BASE:1.1.1.5
	OPENBSD_3_2:1.1.1.5.0.6
	OPENBSD_3_2_BASE:1.1.1.5
	OPENBSD_3_1:1.1.1.5.0.4
	OPENBSD_3_1_BASE:1.1.1.5
	OPENBSD_3_0:1.1.1.5.0.2
	OPENBSD_3_0_BASE:1.1.1.5
	cvs-1-11-1p1:1.1.1.5
	OPENBSD_2_9:1.1.1.4.0.14
	OPENBSD_2_9_BASE:1.1.1.4
	cvs-1-11:1.1.1.4
	OPENBSD_2_8:1.1.1.4.0.12
	OPENBSD_2_8_BASE:1.1.1.4
	OPENBSD_2_7:1.1.1.4.0.10
	OPENBSD_2_7_BASE:1.1.1.4
	OPENBSD_2_6:1.1.1.4.0.8
	OPENBSD_2_6_BASE:1.1.1.4
	cvs-1-10-7:1.1.1.4
	OPENBSD_2_5:1.1.1.4.0.6
	OPENBSD_2_5_BASE:1.1.1.4
	cvs-1-10-5:1.1.1.4
	OPENBSD_2_4:1.1.1.4.0.4
	OPENBSD_2_4_BASE:1.1.1.4
	cvs-1-10:1.1.1.4
	cvs-1-9-28:1.1.1.4
	OPENBSD_2_3:1.1.1.4.0.2
	OPENBSD_2_3_BASE:1.1.1.4
	cvs-1-9-26:1.1.1.4
	cvs-1-9-24:1.1.1.4
	OPENBSD_2_2:1.1.1.3.0.2
	OPENBSD_2_2_BASE:1.1.1.3
	cvs-1-9-10:1.1.1.3
	OPENBSD_2_1:1.1.1.2.0.2
	OPENBSD_2_1_BASE:1.1.1.2
	cvs-1-9-8:1.1.1.2
	cvs-1-9-6:1.1.1.2
	cvs-1-9-4:1.1.1.2
	cvs-1-9-2:1.1.1.1
	cvs-1-9:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.12.03.01.32.49;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.10.18.03.37.07;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.10.18.03.37.07;	author tholo;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.18.01.57.30;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.06.28.03.29.58;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	98.02.22.08.22.52;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2001.09.28.22.45.42;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Kill usage of timeb.h for upcoming removal of libcompat.  OK deraadt@@
@
text
@/* config.h - OpenVMS/AXP specific configuration
              June 1995 - <benjamin@@cyclic.com> */

/* We only want to build the client */
#define CLIENT_SUPPORT 1
#undef SERVER_SUPPORT

/* Set up for other #if's which follow */
#ifndef __DECC_VER
#define __DECC_VER  0
#endif
#ifndef __VMS_VER
#define __VMS_VER   0
#endif

/* VMS is case insensitive */
/* #define FOLD_FN_CHAR(c) tolower(c) */

/* Temporary files named "#booger.3.6~" aren't legal under VMS,
   Define this if you want to use names which are legal for VMS */
#define USE_VMS_FILENAMES 1

/* More issues with how VMS names files, kind of a kludge.  See login.c.  */
#define NO_SLASH_AFTER_HOME 1

/* Define to empty if the keyword does not work.  */
/* #undef const */

/* Define if you have <dirent.h>.  */
/* #undef DIRENT */

/* Define if you have <sys/param.h> */
/* #undef HAVE_SYS_PARAM_H */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef gid_t */

/* Define if you support file names longer than 14 characters.  */
/* #undef HAVE_LONG_FILE_NAMES */

/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
/* #define HAVE_SYS_WAIT_H 1 OpenVMS POSIX has it, but VMS does not. */
#undef POSIX

/* Define if utime(file, NULL) sets file's timestamp to the present.  */
/* #undef HAVE_UTIME_NULL */

/* Define if on MINIX.  */
/* #undef _MINIX */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef mode_t */

/* Define if you don't have <dirent.h>, but have <ndir.h>.  */
#define HAVE_NDIR_H 1

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef pid_t */

/* Define if the system does not provide POSIX.1 features except
   with this defined.  */
/* #undef _POSIX_1_SOURCE */

/* Define if you need to in order for stat and other things to work.  */
/* #undef _POSIX_SOURCE */

/* Define as the return type of signal handlers (int or void).  */
#define RETSIGTYPE void

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
/* #undef size_t */

/* Define if you have the ANSI C header files.  */
#define STDC_HEADERS 1

/* Define if you don't have <dirent.h>, but have <sys/dir.h>.  */
/* #undef SYSDIR */

/* Define if you don't have <dirent.h>, but have <sys/ndir.h>.  */
/* #undef SYSNDIR */

/* Define if your <sys/time.h> declares struct tm.  */
/* #undef TM_IN_SYS_TIME */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef uid_t */

/* Define if the closedir function returns void instead of int.  */
/* #undef VOID_CLOSEDIR */

/* Define if you have MIT Kerberos version 4 available.  */
/* #undef HAVE_KERBEROS */

/* Define if you have the fchmod function.  */
/* #undef HAVE_FCHMOD */

/* Define if you have the fsync function.  */
/* #undef HAVE_FSYNC */

/* Define if you have the ftime function.  */
/* #undef HAVE_FTIME */

/* Define if you have the ftruncate function.  */
/* #undef HAVE_FTRUNCATE */

/* Define if you have the getpagesize function.  */
/* #undef HAVE_GETPAGESIZE */

/* Define if you have the krb_get_err_text function.  */
/* #undef HAVE_KRB_GET_ERR_TEXT */

/* Define if you have the mkdir function */
#define HAVE_MKDIR 1

/* Define if you have the rmdir function */
#define HAVE_RMDIR 1

/* Define if you have the rename function */
#define HAVE_RENAME 1

/* Define if you have the putenv function.  */
/* #undef HAVE_PUTENV */

/* Define if you have the timezone function.  */
/* #undef HAVE_TIMEZONE */

/* Define if you have the vfork function.  */
#define HAVE_VFORK

/* Define if you have the vprintf function.  */
#define HAVE_VPRINTF

/* Define if you have the <errno.h> header file.  */
/* #undef HAVE_ERRNO_H */

/* Define if you have the <fcntl.h> header file.  */
#if __DECC_VER >= 50700000
# define HAVE_FCNTL_H 1
#endif

/* Define if you have the <memory.h> header file.  */
/* #undef HAVE_MEMORY_H */

/* Define if you have the <ndbm.h> header file.  */
/* #undef HAVE_NDBM_H */

/* Define if you have the <string.h> header file.  */
#define HAVE_STRING_H 1

/* Define to force lib/regex.c to use malloc instead of alloca.  */
#define REGEX_MALLOC 1

/* Define to force lib/regex.c to define re_comp et al.  */
#define _REGEX_RE_COMP 1

/* Define if you have the <sys/select.h> header file.  */
/* #undef HAVE_SYS_SELECT_H */

/* Define this if your <sys/socket.h> defines select() */
#define SYS_SOCKET_H_DEFINES_SELECT 1

/* Define if you have the <unistd.h> header file.  */
#define HAVE_UNISTD_H 1

/* Define if you have the <utime.h> header file.  */
/* #undef HAVE_UTIME_H */

/* Define if you have the nsl library (-lnsl).  */
/* #undef HAVE_LIBNSL */

/* Define if you have the socket library (-lsocket).  */
/* #undef HAVE_LIBSOCKET */

/* Under Windows NT, filenames are case-insensitive, and both / and \
   are path component separators.  */
#define FOLD_FN_CHAR(c) (VMS_filename_classes[(unsigned char) (c)])
extern unsigned char VMS_filename_classes[];
#define FILENAMES_CASE_INSENSITIVE 1

/* Like strcmp, but with the appropriate tweaks for file names.
   Under Windows NT, filenames are case-insensitive but case-preserving,
   and both \ and / are path element separators.  */
extern int fncmp (const char *n1, const char *n2);

/* Fold characters in FILENAME to their canonical forms.  
   If FOLD_FN_CHAR is not #defined, the system provides a default
   definition for this.  */
extern void fnfold (char *FILENAME);

#define RSH_NOT_TRANSPARENT 1
#define START_SERVER vms_start_server
#define NO_SOCKET_TO_FD 1
#define START_SERVER_RETURNS_SOCKET 1
#define SEND_NEVER_PARTIAL 1
#define SYSTEM_GETCALLER() getlogin ()
#define GETPWNAM_MISSING 1

/* Avoid name conflicts with VMS libraries.  */
#define getopt cvs_getopt
#define optind cvs_optind
#define optopt cvs_optopt
#define optarg cvs_optarg
#define opterr cvs_opterr

/* Avoid open/read/closedir name conflicts with DEC C 5.7 libraries,
   and fix the problem with readdir() retaining the trailing period.  */
#define CVS_OPENDIR  vms_opendir
#define CVS_READDIR  vms_readdir
#define CVS_CLOSEDIR vms_closedir

/* argv[0] in VMS is the full pathname which would look really ugly in error
   messages.  Even if we stripped out the directory and ".EXE;5", it would
   still be misleading, as if one has used "OLDCVS :== ...CVS-JULY.EXE",
   then argv[0] does not contain the name of the command which the user
   invokes CVS with.  If there is a way for VMS to find the latter, that
   might be worth messing with, but it also seems fine to just always call
   it "cvs".  */
#define ARGV0_NOT_PROGRAM_NAME

#define CVS_UNLINK vms_unlink
@


1.1
log
@Initial revision
@
text
@d8 8
a25 3
/* Only good for NT or DOS with hacked open */
/* #undef LINES_CRLF_TERMINATED */

d55 1
a55 1
/* #undef NDIR */
a90 3
/* Define if you want direct TCP access to server */
#define USE_DIRECT_TCP 1

a93 6
/* The number of bytes in a int.  */
#define SIZEOF_INT 4

/* The number of bytes in a long.  */
#define SIZEOF_LONG 4

a120 6
/* Define if you have the strdup function */
#define HAVE_STRDUP 1

/* Define if you have the mkfifo function.  */
/* #undef HAVE_MKFIFO */

a123 3
/* Define if you have the setvbuf function.  */
/* #undef HAVE_SETVBUF */

d131 1
a131 1
/* #undef HAVE_VPRINTF */
d137 3
a139 1
/* #undef HAVE_FCNTL_H */
d150 6
a161 4
/* Define if you have the <sys/timeb.h> header file.  */
#define HAVE_SYS_TIMEB_H 1
#define HAVE_TIMEB_H 1

d195 2
d205 6
d219 2
@


1.1.1.1
log
@New release from Cyclic Software
@
text
@@


1.1.1.2
log
@New release from Cyclic Software
@
text
@d92 6
d133 3
@


1.1.1.3
log
@Latest version from Cyclic Software
@
text
@d86 3
d121 3
@


1.1.1.4
log
@Latest version from Cyclic
@
text
@d18 3
d50 1
a50 1
#define HAVE_NDIR_H 1
d116 3
d129 1
a129 1
#define HAVE_VPRINTF
a188 2
#define SYSTEM_GETCALLER() getlogin ()
#define GETPWNAM_MISSING 1
@


1.1.1.5
log
@Latest from Cyclic Software
@
text
@a7 8
/* Set up for other #if's which follow */
#ifndef __DECC_VER
#define __DECC_VER  0
#endif
#ifndef __VMS_VER
#define __VMS_VER   0
#endif

d129 1
a129 3
#if __DECC_VER >= 50700000
# define HAVE_FCNTL_H 1
#endif
a139 6
/* Define to force lib/regex.c to use malloc instead of alloca.  */
#define REGEX_MALLOC 1

/* Define to force lib/regex.c to define re_comp et al.  */
#define _REGEX_RE_COMP 1

a192 6
/* Avoid open/read/closedir name conflicts with DEC C 5.7 libraries,
   and fix the problem with readdir() retaining the trailing period.  */
#define CVS_OPENDIR  vms_opendir
#define CVS_READDIR  vms_readdir
#define CVS_CLOSEDIR vms_closedir

a200 2

#define CVS_UNLINK vms_unlink
@


