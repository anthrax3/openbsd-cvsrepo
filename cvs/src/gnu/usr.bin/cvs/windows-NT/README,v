head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.10
	OPENBSD_6_1:1.1.1.10.0.76
	OPENBSD_6_1_BASE:1.1.1.10
	OPENBSD_6_0:1.1.1.10.0.72
	OPENBSD_6_0_BASE:1.1.1.10
	OPENBSD_5_9:1.1.1.10.0.68
	OPENBSD_5_9_BASE:1.1.1.10
	OPENBSD_5_8:1.1.1.10.0.70
	OPENBSD_5_8_BASE:1.1.1.10
	OPENBSD_5_7:1.1.1.10.0.62
	OPENBSD_5_7_BASE:1.1.1.10
	OPENBSD_5_6:1.1.1.10.0.66
	OPENBSD_5_6_BASE:1.1.1.10
	OPENBSD_5_5:1.1.1.10.0.64
	OPENBSD_5_5_BASE:1.1.1.10
	OPENBSD_5_4:1.1.1.10.0.60
	OPENBSD_5_4_BASE:1.1.1.10
	OPENBSD_5_3:1.1.1.10.0.58
	OPENBSD_5_3_BASE:1.1.1.10
	OPENBSD_5_2:1.1.1.10.0.56
	OPENBSD_5_2_BASE:1.1.1.10
	OPENBSD_5_1_BASE:1.1.1.10
	OPENBSD_5_1:1.1.1.10.0.54
	OPENBSD_5_0:1.1.1.10.0.52
	OPENBSD_5_0_BASE:1.1.1.10
	OPENBSD_4_9:1.1.1.10.0.50
	OPENBSD_4_9_BASE:1.1.1.10
	OPENBSD_4_8:1.1.1.10.0.48
	OPENBSD_4_8_BASE:1.1.1.10
	OPENBSD_4_7:1.1.1.10.0.44
	OPENBSD_4_7_BASE:1.1.1.10
	OPENBSD_4_6:1.1.1.10.0.46
	OPENBSD_4_6_BASE:1.1.1.10
	OPENBSD_4_5:1.1.1.10.0.42
	OPENBSD_4_5_BASE:1.1.1.10
	OPENBSD_4_4:1.1.1.10.0.40
	OPENBSD_4_4_BASE:1.1.1.10
	OPENBSD_4_3:1.1.1.10.0.38
	OPENBSD_4_3_BASE:1.1.1.10
	OPENBSD_4_2:1.1.1.10.0.36
	OPENBSD_4_2_BASE:1.1.1.10
	OPENBSD_4_1:1.1.1.10.0.34
	OPENBSD_4_1_BASE:1.1.1.10
	OPENBSD_4_0:1.1.1.10.0.32
	OPENBSD_4_0_BASE:1.1.1.10
	OPENBSD_3_9:1.1.1.10.0.30
	OPENBSD_3_9_BASE:1.1.1.10
	OPENBSD_3_8:1.1.1.10.0.28
	OPENBSD_3_8_BASE:1.1.1.10
	OPENBSD_3_7:1.1.1.10.0.26
	OPENBSD_3_7_BASE:1.1.1.10
	OPENBSD_3_6:1.1.1.10.0.24
	OPENBSD_3_6_BASE:1.1.1.10
	OPENBSD_3_5:1.1.1.10.0.22
	OPENBSD_3_5_BASE:1.1.1.10
	OPENBSD_3_4:1.1.1.10.0.20
	OPENBSD_3_4_BASE:1.1.1.10
	OPENBSD_3_3:1.1.1.10.0.18
	OPENBSD_3_3_BASE:1.1.1.10
	OPENBSD_3_2:1.1.1.10.0.16
	OPENBSD_3_2_BASE:1.1.1.10
	OPENBSD_3_1:1.1.1.10.0.14
	OPENBSD_3_1_BASE:1.1.1.10
	OPENBSD_3_0:1.1.1.10.0.12
	OPENBSD_3_0_BASE:1.1.1.10
	cvs-1-11-1p1:1.1.1.10
	OPENBSD_2_9:1.1.1.10.0.10
	OPENBSD_2_9_BASE:1.1.1.10
	cvs-1-11:1.1.1.10
	OPENBSD_2_8:1.1.1.10.0.8
	OPENBSD_2_8_BASE:1.1.1.10
	OPENBSD_2_7:1.1.1.10.0.6
	OPENBSD_2_7_BASE:1.1.1.10
	OPENBSD_2_6:1.1.1.10.0.4
	OPENBSD_2_6_BASE:1.1.1.10
	cvs-1-10-7:1.1.1.10
	OPENBSD_2_5:1.1.1.10.0.2
	OPENBSD_2_5_BASE:1.1.1.10
	cvs-1-10-5:1.1.1.10
	OPENBSD_2_4:1.1.1.9.0.4
	OPENBSD_2_4_BASE:1.1.1.9
	cvs-1-10:1.1.1.9
	cvs-1-9-28:1.1.1.9
	OPENBSD_2_3:1.1.1.9.0.2
	OPENBSD_2_3_BASE:1.1.1.9
	cvs-1-9-26:1.1.1.9
	cvs-1-9-24:1.1.1.9
	OPENBSD_2_2:1.1.1.8.0.4
	OPENBSD_2_2_BASE:1.1.1.8
	cvs-1-9-10:1.1.1.8
	OPENBSD_2_1:1.1.1.8.0.2
	OPENBSD_2_1_BASE:1.1.1.8
	cvs-1-9-8:1.1.1.8
	cvs-1-9-6:1.1.1.7
	cvs-1-9-4:1.1.1.7
	cvs-1-9-2:1.1.1.6
	cvs-1-9:1.1.1.5
	OPENBSD_2_0:1.1.1.4.0.2
	OPENBSD_2_0_BASE:1.1.1.4
	cvs-1-8-1:1.1.1.4
	cvs-1-8:1.1.1.4
	cvs-1-7-2:1.1.1.3
	cvs-1-7-1:1.1.1.2
	cvs-1-6:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.12.19.09.21.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.19.09.21.44;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.01.30.00.19.35;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.04.27.19.43.17;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.05.06.22.20.58;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	96.10.18.03.36.42;	author tholo;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	97.02.21.06.38.37;	author tholo;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	97.03.18.01.57.10;	author tholo;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	97.04.21.04.29.15;	author tholo;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	98.02.22.08.22.24;	author tholo;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.02.28.21.34.39;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@	     Concurrent Versions System (CVS) Version 1.5
		    ported to Microsoft Windows NT
			   Cyclic Software

Cyclic Software has ported the client side of CVS 1.5 to Windows NT.
The port implements the full set of CVS commands, but cannot access
repositories located on the local machine.  The repository must live
on another machine (a Unix box, say) which runs a complete port of
CVS.

Source code for the port is available from Cyclic Software as:

	ftp://ftp.cyclic.com/pub/cvs/windows-nt/cvs-1.5nt.tar.gz

That includes documentation, in Texinfo and PostScript.  It's all
distributed as a gzipped tar file instead of a .ZIP file because, as
far as I can tell, PKZIP insists on munging long file names, which
would confuse the makefile for Visual C++.

To compile, use Microsoft Visual C++ on the file cvsnt.mak in the
distribution's top directory.  We haven't tested it under any other
development environments.  If you're curious, see below about the
warnings you may encounter.

We've put a Windows NT 80x86 executable for CVS in the same directory
as the source distribution, called cvs.exe.  Full documentation is
present in PostScript format in the source distribution.  Generally,
we'd like to avoid spending much time on binary distributions.

Please send bug reports to bug-cvs@@prep.ai.mit.edu.  I can't promise
to fix them --- paying work must come first --- but the reports will
not be tossed, and I'll see what I can do.

This port passes the test in src/sanity.sh.  (We ran the checks by
hand, since we couldn't find a port of the Bourne shell good enough to
execute the script).  Sanity.sh provides pretty minimal feature
coverage, but still gives me some confidence it isn't totally broken.

For best results, you will also need GNU patch and GZIP installed on
your system, although CVS can be used without them.  The Congruent
ports of these packages to Windows NT, binary and source, are
available in:

	ftp://microlib.cc.utexas.edu/microlib/nt/gnu

At the moment, this port isn't integrated into our mainline CVS
sources, but I expect that to be straightforward.  I'll get around to
it soon, but as I said, paying work...

Now, strictly speaking, I don't *know* that this port won't correctly
access repositories on the local machine.  I haven't tried it.  I
have put calls to abort in places I'm pretty sure are wrong.  If you'd
like to finish it off and post patches, Morten Hindsholm's port of CVS
1.4A2 to Windows NT might be helpful; it is available as

	ftp://ftp.digex.net/pub/access/schueman/cvs/cvsnt14b.zip



I get the following warnings when compiling this port of CVS 1.5 under
Microsoft Visual C++.  They are all harmless.

- main.c: This is a very weird warning message!  If you understand
  what it's trying to say, let me know:
	'void (__cdecl *)(void)' differs in parameter lists from
	'void (__cdecl *)(void )'
  Okay, whatever, man.
- sighandle.c: These are harmless conflicts in the arguments of
  pointed-to functions.  You're welcome to submit patches for them.
- regex.c: These are signed/unsigned comparison conflicts.  I am not
  going to *touch* this code. :-) I got my fill of it when I was
  hacking GNU Emacs.



Jim Blandy <jimb@@cyclic.com>
Sunday, August 20, 1995
@


1.1.1.1
log
@raw import of cvs-1.6
@
text
@@


1.1.1.2
log
@Upgrade to 1.7.1 snapshot
@
text
@d1 1
a1 1
	           Concurrent Versions System (CVS)
d5 14
a18 11
Check the ../INSTALL file for information on the most recent version
of CVS which has been known to be tested with NT.

The port implements the full set of CVS commands, but is client only,
not server or local ("local" meaning accessing repositories on a
filesystem mounted on the local machine).  The repository must live on
another machine (a Unix box, say) which runs a complete port of CVS.

We don't distribute a .ZIP source distribution partly because, as far
as I can tell, PKZIP insists on munging long file names, which would
confuse the makefile for Visual C++.
d21 22
a42 19
distribution's top directory.  At least with the tar port I'm using,
the sources get extracted without carriage returns and you must add
carriage returns to the end of every line in cvsnt.mak.  It doesn't
seem to be necessary to add them to any other file.  This has been
tested with Visual C++ 2.1.  Visual C++ 4.0 apparently requires one to
remove some quotation marks from cvsnt.mak (around save-cwd.c,
save-cwd.sbr, and save-cwd.obj).

Send bug reports to bug-cvs@@prep.ai.mit.edu.

As of August 20, 1995, this port passed the test in src/sanity.sh.
(We ran the checks by hand, since we couldn't find a port of the
Bourne shell good enough to execute the script).  Sanity.sh provides
pretty minimal feature coverage, but still gives me some confidence it
isn't totally broken.

You will also need GNU patch installed on your system.  GZIP is useful
but not required.  The Congruent ports of these packages to Windows
NT, binary and source, are available in:
d46 9
a54 2
If you'd like to finish off the port of local CVS, Morten Hindsholm's
port of CVS 1.4A2 to Windows NT might be helpful; it is available as
a58 1
The following harmless warnings are known:
d60 10
d73 5
a77 3
.\lib\getdate.c(760) : warning C4013: 'getdate_yyparse' undefined; assuming extern returning int
.\lib\getdate.c(1612) : warning C4102: 'yyerrlab' : unreferenced label
.\lib\getdate.c(1612) : warning C4102: 'yynewstate' : unreferenced label
@


1.1.1.3
log
@Latest public release from Cyclic; fixes numerous memory leaks and have
some performance improvements
@
text
@d21 4
a24 3
seem to be necessary to add them to any other file.  This makefile
was generated with Visual C++ 2.1.  As far as is known, it should work
with Visual C++ 4,0 also.
@


1.1.1.4
log
@New CVS release from Cyclic Software
@
text
@d20 4
a23 4
carriage returns to the end of every line in cvsnt.mak.  I also had to
add them to src/server.c.  It doesn't seem to be necessary to add them
to any other file.  This makefile was generated with Visual C++ 2.1.
As far as is known, it should work with Visual C++ 4,0 also.
@


1.1.1.5
log
@New release from Cyclic Software
@
text
@d8 4
a11 2
This port implements the full set of CVS commands, both local and
client.  It does not provide a CVS server for NT.
d23 1
a23 1
As far as is known, it should work with Visual C++ 4.0 also.
d27 9
a35 36
This port passes all of the tests in src/sanity.sh, save the one that
deals with reserved all-upper-case tags (BASE and HEAD), due to a
limitation in the NT command shell.  sanity.sh provides pretty minimal
feature coverage, but still gives me some confidence it isn't totally
broken.

To operate in client mode, you will need GNU patch.  gzip is useful
but not required.

To operate in local mode, you will need GNU patch, GNU diffutils, a
version of grep, and rcs version 5.7 installed on your system.  Make
sure NOT to get a version of rcs less than 5.7 (gr564bnt.zip was
particularly bad), because those versions insist on putting their
files in their own directory structure, making them incompatible with
CVS.

Noel Cragg, who did the latest mods to the Windows NT port, used the
following packages:

	ftp://wuarchive.wustl.edu/systems/ibmpc/gnuish/grep15.zip
	  ** use grepb.exe and egrepb.exe, but install as
	  ** grep.exe and egrep.exe respectively)
	ftp://wuarchive.wustl.edu/systems/ibmpc/gnuish/patch212.zip
	ftp://ftp.netcom.com/pub/al/alexande/rcs57nt.zip
	ftp://ftp.netcom.com/pub/al/alexande/diff57nt.zip

If you want to try other versions of these utilities, you might have
luck with the Congruent ports of these packages to Windows NT, binary
and source:

	ftp://microlib.cc.utexas.edu/microlib/nt/gnu/

The CYGWIN32 package is a port of various GNU tools for NT, providing
bash as the shell and gcc as the compiler.  The tools are still in
development, but they are useful for running a modified version of
sanity.sh:
d37 1
a37 1
	http://www.cygnus.com/misc/gnu-win32/
d39 2
a40 2
Morten Hindsholm's port of CVS 1.4A2 to Windows NT may be useful if
you're modifying CVS itself:
a43 9
Mark A. Solinski <markso@@www.mcs.net> has ported CVS 1.7 to Windows
95.  You can find his source code at:

	http://www.mcs.net/~markso/cvs/cvs95.html

Here are some other things which may be of interest for unix junkies:

	http://www.halcyon.com/gvr/vim/       (VI clone)
	ftp://wuarchive.wustl.edu/systems/ibmpc/gnuish/less177.zip
a52 6

If you want to browse/edit the sources using Visual C++, we recommend
setting tab stops to 8 spaces, since that is what the CVS sources
expect.  The tab stop setting is in the "Editor" section of the "Options..."
dialog which is in the "Tools..." menu.

@


1.1.1.6
log
@New release from Cyclic Software
@
text
@d6 1
a6 1
of CVS which has been known to be tested with NT and/or Win95.
d9 1
a9 3
client.  It does not provide a CVS server for NT.  Multiple users can
access a common CVS repository, if they can mount the repository,
either directly or via a networked file system.
d31 2
a32 5
To operate in client mode, you will need GNU patch.  To do compressed
transfers with old versions of CVS (1.8 and older), you also need
gzip.  Note that you do NOT need an rsh client if you are using the
:server: access method (which uses the internal rsh client), except
perhaps for debugging.
d34 2
a35 2
To operate in local mode, you will need GNU patch, GNU diffutils,
and rcs version 5.7 installed on your system.  Make
d44 3
a50 4
Copies of these zip files can be also be found at:

	ftp://ftp.cyclic.com/pub/cvs/cvs-1.8.3/windows-nt

d68 5
@


1.1.1.7
log
@New release from Cyclic Software
@
text
@a79 5
If you want to browse/edit the sources using Visual C++, we recommend
setting tab stops to 8 spaces, since that is what the CVS sources
expect.  The tab stop setting is in the "Editor" or "Tabs" section of
the "Options..."  dialog which is in the "Tools..." menu.

d82 2
a83 2
- regex.c: 103 warnings, mostly signed/unsigned comparison conflicts.
  I am not going to *touch* this code. :-) I got my fill of it when I was
a84 1

d89 4
@


1.1.1.8
log
@Latest release from Cyclic Software
@
text
@d53 1
a53 3
Copies of these zip files can be also be found in the windows-nt
directory for the latest CVS release (cvs-1.9/windows-nt, for example)
under:
d55 1
a55 2
	ftp://ftp.cyclic.com/pub/cvs/ or
	http://www.cyclic.com/archive/pub/cvs/
a61 4

In particular, microlib seems to have versions of GNU tar and gzip
which support long file names, which you will need to unpack the CVS
source distribution.
@


1.1.1.9
log
@Latest version from Cyclic
@
text
@d22 16
a37 23
to any other file.  This makefile was generated with Visual C++ 4.x.
For Visual C++ 5.x use cvsnet.dsp (which is probably more likely to be
up to date than cvsnt.mak anyway).  For Visual C++ 2.x you probably
are in the position of digging through old versions of CVS for a
cvsnt.mak and then updating it.  Feel free to let us know about
problems of this sort as with other bug reports; our impression thus
far is that relatively few people care about which versions of Visual
C++ work.

Send bug reports to bug-cvs@@gnu.org.

As of May 1996, this port passed all of the tests in src/sanity.sh,
save the one that deals with reserved all-upper-case tags (BASE and
HEAD), due to a limitation in the NT command shell.  sanity.sh
provides pretty minimal feature coverage, but still gives me some
confidence it isn't totally broken.  The tests were run by defining
KLUDGE_FOR_WNT_TESTSUITE (see src/main.c).

To operate in client mode with old versions of CVS (1.9 and older),
you will need GNU patch.  To do compressed transfers with old versions
of CVS (1.8 and older), you also need gzip.  Note that you do NOT need
an rsh client if you are using the :server: access method (which uses
the internal rsh client), except perhaps for debugging.
a102 19
CODING STANDARDS for Windows

For general coding standards, see ../HACKING.

In my opinion win32 is the right API to write to.  Microsoft seems to
be better about compatibility across versions than unix vendors (on a
good day, anyway)--the Visual C++ package I bought has not only win32
but also win16 too (that is, they also include Visual C++ 1.x).  As
far as I know there is only one win32 (not counting win32s or win32c
or whatever), not multiple versions.

ANSI C is also good.  As far as I know these calls work fairly well on
NT.

What one should avoid like the plague on NT (IMHO) is POSIX calls such
as stat().  These tend to be very poorly supported, and tend to break
from version to version or vendor to vendor (the latter being
particularly an issue on OS/2, with IBM, Watcom, and EMX all having
_very_ different C libraries).
@


1.1.1.10
log
@Latest version from Cyclic
@
text
@d3 1
d20 10
a29 20
carriage returns to the end of every line in cvsnt.mak.  It doesn't
seem to be necessary to add them to any other file.  This makefile was
generated with Visual C++ 4.x.  For Visual C++ 5.x you can try
cvsnet.dsp.  For Visual C++ 2.x you probably are in the position of
digging through old versions of CVS for a cvsnt.mak and then updating
it.  Feel free to let us know about problems of this sort as with
other bug reports.

Update as of 13 Oct 1998: I (Jim Kingdon) do build CVS successfully
with Visual C++ on a regular basis.  The builds on download.cyclic.com
(CVS 1.10, CVS 1.10.3, &c) are built using Visual C++ 4.0 and
cvsnt.mak from the Debug (not release) configuration.  I have pretty
much given up on getting the Visual C++ IDE to generate a makefile
that works for anyone except me :-(.  If I knew an easy fix for this,
I'd do it, but it is easier to just complain about Microsoft's finicky
IDE and makefile/project file format du jour :-).  Having people send
in "fixed" versions of cvsnt.mak and cvsnt.dsp regularly, as has been
happening, is fine but it isn't an "easy fix", unfortunately, as it is
rarely clear to me whether a particular submission will improve things
or not.
d46 24
a69 5
To operate in local mode, you should need nothing other than CVS (that
is, you no longer need RCS, diff, &c, in order to run CVS).

One useful site may be the Congruent ports of various packages to
Windows NT, binary and source:
d78 3
a80 4
bash as the shell and gcc as the compiler.  Basically, you don't want
the stuff in this directory for CVS running under cygwin32; you want
the same stuff as for unix (../configure, Makefile.in, &c).  For
cygwin32 information see
a108 2
Oct 1998 update: there are more now.  I've gotten lax about removing
the warnings lately :-( -kingdon.
@


