head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.6.0.64
	OPENBSD_6_1_BASE:1.1.1.6
	OPENBSD_6_0:1.1.1.6.0.62
	OPENBSD_6_0_BASE:1.1.1.6
	OPENBSD_5_9:1.1.1.6.0.58
	OPENBSD_5_9_BASE:1.1.1.6
	OPENBSD_5_8:1.1.1.6.0.60
	OPENBSD_5_8_BASE:1.1.1.6
	OPENBSD_5_7:1.1.1.6.0.52
	OPENBSD_5_7_BASE:1.1.1.6
	OPENBSD_5_6:1.1.1.6.0.56
	OPENBSD_5_6_BASE:1.1.1.6
	OPENBSD_5_5:1.1.1.6.0.54
	OPENBSD_5_5_BASE:1.1.1.6
	OPENBSD_5_4:1.1.1.6.0.50
	OPENBSD_5_4_BASE:1.1.1.6
	OPENBSD_5_3:1.1.1.6.0.48
	OPENBSD_5_3_BASE:1.1.1.6
	OPENBSD_5_2:1.1.1.6.0.46
	OPENBSD_5_2_BASE:1.1.1.6
	OPENBSD_5_1_BASE:1.1.1.6
	OPENBSD_5_1:1.1.1.6.0.44
	OPENBSD_5_0:1.1.1.6.0.42
	OPENBSD_5_0_BASE:1.1.1.6
	OPENBSD_4_9:1.1.1.6.0.40
	OPENBSD_4_9_BASE:1.1.1.6
	OPENBSD_4_8:1.1.1.6.0.38
	OPENBSD_4_8_BASE:1.1.1.6
	OPENBSD_4_7:1.1.1.6.0.34
	OPENBSD_4_7_BASE:1.1.1.6
	OPENBSD_4_6:1.1.1.6.0.36
	OPENBSD_4_6_BASE:1.1.1.6
	OPENBSD_4_5:1.1.1.6.0.32
	OPENBSD_4_5_BASE:1.1.1.6
	OPENBSD_4_4:1.1.1.6.0.30
	OPENBSD_4_4_BASE:1.1.1.6
	OPENBSD_4_3:1.1.1.6.0.28
	OPENBSD_4_3_BASE:1.1.1.6
	OPENBSD_4_2:1.1.1.6.0.26
	OPENBSD_4_2_BASE:1.1.1.6
	OPENBSD_4_1:1.1.1.6.0.24
	OPENBSD_4_1_BASE:1.1.1.6
	OPENBSD_4_0:1.1.1.6.0.22
	OPENBSD_4_0_BASE:1.1.1.6
	OPENBSD_3_9:1.1.1.6.0.20
	OPENBSD_3_9_BASE:1.1.1.6
	OPENBSD_3_8:1.1.1.6.0.18
	OPENBSD_3_8_BASE:1.1.1.6
	OPENBSD_3_7:1.1.1.6.0.16
	OPENBSD_3_7_BASE:1.1.1.6
	OPENBSD_3_6:1.1.1.6.0.14
	OPENBSD_3_6_BASE:1.1.1.6
	OPENBSD_3_5:1.1.1.6.0.12
	OPENBSD_3_5_BASE:1.1.1.6
	OPENBSD_3_4:1.1.1.6.0.10
	OPENBSD_3_4_BASE:1.1.1.6
	OPENBSD_3_3:1.1.1.6.0.8
	OPENBSD_3_3_BASE:1.1.1.6
	OPENBSD_3_2:1.1.1.6.0.6
	OPENBSD_3_2_BASE:1.1.1.6
	OPENBSD_3_1:1.1.1.6.0.4
	OPENBSD_3_1_BASE:1.1.1.6
	OPENBSD_3_0:1.1.1.6.0.2
	OPENBSD_3_0_BASE:1.1.1.6
	cvs-1-11-1p1:1.1.1.6
	OPENBSD_2_9:1.1.1.5.0.2
	OPENBSD_2_9_BASE:1.1.1.5
	cvs-1-11:1.1.1.5
	OPENBSD_2_8:1.1.1.4.0.10
	OPENBSD_2_8_BASE:1.1.1.4
	OPENBSD_2_7:1.1.1.4.0.8
	OPENBSD_2_7_BASE:1.1.1.4
	OPENBSD_2_6:1.1.1.4.0.6
	OPENBSD_2_6_BASE:1.1.1.4
	cvs-1-10-7:1.1.1.4
	OPENBSD_2_5:1.1.1.4.0.4
	OPENBSD_2_5_BASE:1.1.1.4
	cvs-1-10-5:1.1.1.4
	OPENBSD_2_4:1.1.1.4.0.2
	OPENBSD_2_4_BASE:1.1.1.4
	cvs-1-10:1.1.1.4
	cvs-1-9-28:1.1.1.3
	OPENBSD_2_3:1.1.1.3.0.2
	OPENBSD_2_3_BASE:1.1.1.3
	cvs-1-9-26:1.1.1.3
	cvs-1-9-24:1.1.1.3
	OPENBSD_2_2:1.1.1.2.0.4
	OPENBSD_2_2_BASE:1.1.1.2
	cvs-1-9-10:1.1.1.2
	OPENBSD_2_1:1.1.1.2.0.2
	OPENBSD_2_1_BASE:1.1.1.2
	cvs-1-9-8:1.1.1.2
	cvs-1-9-6:1.1.1.2
	cvs-1-9-4:1.1.1.2
	cvs-1-9-2:1.1.1.2
	cvs-1-9:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@-- @;


1.1
date	96.10.18.03.34.46;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.10.18.03.34.46;	author tholo;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.02.21.06.36.22;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	98.02.22.08.20.14;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	98.08.22.20.50.54;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2001.02.10.18.57.23;	author tholo;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2001.09.28.22.45.36;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@Summary: Concurrent Versions System
Name: cvs
Version: @@VERSION@@
Release: 1
Copyright: GPL
Group: Development/Version Control
Source: ftp.cyclic.com:/pub/cvs-@@VERSION@@.tar.gz
Buildroot: /

%description
CVS is a version control system, which allows you to keep old versions
of files (usually source code), keep a log of who, when, and why
changes occurred, etc., like RCS or SCCS.  It handles multiple
developers, multiple directories, triggers to enable/log/control
various operations, and can work over a wide area network.  The
following tasks are not included; they can be done in conjunction with
CVS but will tend to require some script-writing and software other
than CVS: bug-tracking, build management (that is, make and make-like
tools), and automated testing.

%prep
%setup

%build
./configure --prefix=$RPM_BUILD_ROOT/usr
make CFLAGS="$RPM_OPT_FLAGS -DRCSBIN_DFLT=\\\"/usr/bin\\\"" LDFLAGS=-s 

%install
make installdirs
make install
rm -f $RPM_BUILD_ROOT/usr/info/cvs*
make install-info
gzip -9nf $RPM_BUILD_ROOT/usr/info/cvs*

%files
%doc BUGS COPYING COPYING.LIB ChangeLog ChangeLog.zoo FAQ HACKING
%doc INSTALL MINOR-BUGS NEWS PROJECTS README TESTS TODO
/usr/bin/cvs
/usr/bin/cvsbug
/usr/bin/rcs2log
/usr/man/man1/cvs.1
/usr/man/man5/cvs.5
/usr/man/man8/cvsbug.8
/usr/info/cvs*
/usr/lib/cvs
@


1.1.1.1
log
@New release from Cyclic Software
@
text
@@


1.1.1.2
log
@New release from Cyclic Software
@
text
@d36 1
a36 1
%doc BUGS COPYING COPYING.LIB FAQ HACKING
@


1.1.1.3
log
@Latest version from Cyclic
@
text
@d7 2
a8 2
Source: ftp://download.cyclic.com/pub/cvs-@@VERSION@@/cvs-@@VERSION@@.tar.gz
Prefix: /usr
@


1.1.1.4
log
@Latest version from Cyclic
@
text
@d13 7
a19 7
changes occurred, etc., like RCS or SCCS.  Unlike the simpler systems,
CVS does not just operate on one file at a time or one directory at a
time, but operates on hierarchical collections of directories
consisting of version controlled files.  CVS helps to manage releases
and to control the concurrent editing of source files among multiple
authors.  CVS allows triggers to enable/log/control various
operations and works well over a wide area network.
@


1.1.1.5
log
@Latest from Cyclic Software
@
text
@d7 1
a7 1
Source: ftp://ftp.cvshome.org/pub/cvs-@@VERSION@@/cvs-@@VERSION@@.tar.gz
@


1.1.1.6
log
@Latest from Cyclic Software
@
text
@d1 1
a1 1
Summary: A version control system.
d3 1
a3 1
Version: 1.11.1p1
d6 3
a8 6
Group: Development/Tools
Source: ftp://ftp.cvshome.com/pub/cvs-%{version}/cvs-%{version}.tar.gz
URL: http://CVSHome.org
Prereq: /sbin/install-info
Prefix: %{_prefix}
Buildroot: %{_tmppath}/%{name}-root
d11 9
a19 48
CVS (Concurrent Version System) is a version control system which can
record the history of your files (usually, but not always, source
code). CVS only stores the differences between versions, instead of
every version of every file you've ever created. CVS also keeps a log
of who, when and why changes occurred.

CVS is very helpful for managing releases and controlling the
concurrent editing of source files among multiple authors. Instead of
providing version control for a collection of files in a single
directory, CVS provides version control for a hierarchical collection
of directories consisting of revision controlled files.  These
directories and files can then be combined together to form a software
release.

Install the cvs package if you need to use a version control system.

%define gssapi %(test -r /usr/kerberos/lib/libkrb5.a && echo 1 || echo 0)
%if %gssapi
%package krb5
Summary: A version control system with Kerberos authentication.
Group: Development/Tools
Requires: cvs krb5-libs
BuildRequires: krb5-devel

%description krb5
CVS (Concurrent Version System) is a version control system which can
record the history of your files (usually, but not always, source
code). CVS only stores the differences between versions, instead of
every version of every file you've ever created. CVS also keeps a log
of who, when and why changes occurred.

CVS is very helpful for managing releases and controlling the
concurrent editing of source files among multiple authors. Instead of
providing version control for a collection of files in a single
directory, CVS provides version control for a hierarchical collection
of directories consisting of revision controlled files.  These
directories and files can then be combined together to form a software
release.

This package contains only a Kerberized version of the CVS binary.  You should
install the base cvs package to get the standard CVS distribution.

Install the Kerberos version of the cvs package if you need to use a version
control system with Kerberos authentication and encryption.

%define _kerberosdir %{prefix}/kerberos
%define _kerberosbindir %{_kerberosdir}/bin
%endif
d22 1
a22 1
%setup -q
d25 2
a26 15
# The Kerberized binary
%if %gssapi
%configure --with-gssapi=/usr/kerberos --enable-encryption

make LDFLAGS=-s
mv src/cvs src/cvs.krb5

rm config.cache
%endif

# The standard package
%configure --without-gssapi

make LDFLAGS=-s
make -C doc info
d29 5
a33 27
rm -rf $RPM_BUILD_ROOT

%makeinstall
# The Kerberized binary
%if %gssapi
./install-sh src/cvs.krb5 $RPM_BUILD_ROOT%{_kerberosbindir}/cvs
%endif

rm -f $RPM_BUILD_ROOT${_infodir}/dir
gzip -9nf $RPM_BUILD_ROOT%{_infodir}/cvs*
strip $RPM_BUILD_ROOT%{_bindir}/cvs
%if %gssapi
strip $RPM_BUILD_ROOT%{_kerberosbindir}/cvs
%endif

%clean
rm -rf $RPM_BUILD_ROOT

%post
    /sbin/install-info --info-dir=%{_infodir} %{_infodir}/cvs.info.gz
    /sbin/install-info --info-dir=%{_infodir} %{_infodir}/cvsclient.info.gz
%preun
if [ $1 = 0 ]; then
    # uninstall the info reference in the dir file
    /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/cvs.info.gz
    /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/cvsclient.info.gz
fi
d36 10
a45 101
%defattr(-,root,root)
%doc BUGS FAQ MINOR-BUGS NEWS PROJECTS TODO README
%doc doc/RCSFILES doc/*.ps
%{_bindir}
%{_infodir}/cvs*.gz
%{_mandir}

%if %gssapi
%files krb5
%defattr(-,root,root)
%{_kerberosdir}
%endif

%changelog
* Thu Apr 26 2001 Derek Price <dprice@@collab.net>
- avoid picking up %{_infodir}/dir.
- remove krb5-configs from requirements since RedHat doesn't use it anymore.

* Wed Nov 29 2000 Derek Price <dprice@@openavenue.com>
- Use _infodir consistently for info pages and _bindir for binaries.
- use more succinct file list

* Wed Oct 18 2000 Derek Price <dprice@@openavenue.com>
- Make the Kerberos binary a subpackage.
- fix the info & man pages too

* Wed Sep 27 2000 Derek Price <dprice@@openavenue.com>
- updated for cvs 1.11

* Wed Mar  1 2000 Nalin Dahyabhai <nalin@@redhat.com>
- make kerberos support conditional at build-time

* Wed Mar  1 2000 Bill Nottingham <notting@@redhat.com>
- integrate kerberos support into main tree

* Mon Feb 14 2000 Nalin Dahyabhai <nalin@@redhat.com>
- build with gssapi auth (--with-gssapi, --with-encryption)
- apply patch to update libs to krb5 1.1.1

* Fri Feb 04 2000 Cristian Gafton <gafton@@redhat.com>
- fix the damn info pages too while we're at it.
- fix description
- man pages are compressed
- make sure %post and %preun work okay

* Sun Jan 9 2000  Jim Kingdon <http://bugzilla.redhat.com/bugzilla>
- update to 1.10.7.

* Wed Jul 14 1999 Jim Kingdon <http://developer.redhat.com>
- add the patch to make 1.10.6 usable
  (http://www.cyclic.com/cvs/dev-known.html).

* Tue Jun  1 1999 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.6.

* Sun Mar 21 1999 Cristian Gafton <gafton@@redhat.com> 
- auto rebuild in the new build environment (release 2)

* Mon Feb 22 1999 Jeff Johnson <jbj@@redhat.com>
- updated text in spec file.

* Mon Feb 22 1999 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.5.

* Tue Feb  2 1999 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.4.

* Tue Oct 20 1998 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.3.

* Mon Sep 28 1998 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.2.

* Wed Sep 23 1998 Jeff Johnson <jbj@@redhat.com>
- remove trailing characters from rcs2log mktemp args

* Thu Sep 10 1998 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.1

* Mon Aug 31 1998 Jeff Johnson <jbj@@redhat.com>
- fix race conditions in cvsbug/rcs2log

* Sun Aug 16 1998 Jeff Johnson <jbj@@redhat.com>
- update to 1.10.

* Wed Aug 12 1998 Jeff Johnson <jbj@@redhat.com>
- update to 1.9.30.

* Mon Jun 08 1998 Prospector System <bugs@@redhat.com>
- translations modified for de, fr

* Mon Jun  8 1998 Jeff Johnson <jbj@@redhat.com>
- build root
- update to 1.9.28

* Mon Apr 27 1998 Prospector System <bugs@@redhat.com>
- translations modified for de, fr, tr

* Wed Oct 29 1997 Otto Hammersmith <otto@@redhat.com>
- added install-info stuff
- added changelog section
@


