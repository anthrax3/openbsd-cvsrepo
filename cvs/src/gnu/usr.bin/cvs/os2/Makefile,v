head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.10.0.62
	OPENBSD_6_0_BASE:1.1.1.10
	OPENBSD_5_9:1.1.1.10.0.58
	OPENBSD_5_9_BASE:1.1.1.10
	OPENBSD_5_8:1.1.1.10.0.60
	OPENBSD_5_8_BASE:1.1.1.10
	OPENBSD_5_7:1.1.1.10.0.52
	OPENBSD_5_7_BASE:1.1.1.10
	OPENBSD_5_6:1.1.1.10.0.56
	OPENBSD_5_6_BASE:1.1.1.10
	OPENBSD_5_5:1.1.1.10.0.54
	OPENBSD_5_5_BASE:1.1.1.10
	OPENBSD_5_4:1.1.1.10.0.50
	OPENBSD_5_4_BASE:1.1.1.10
	OPENBSD_5_3:1.1.1.10.0.48
	OPENBSD_5_3_BASE:1.1.1.10
	OPENBSD_5_2:1.1.1.10.0.46
	OPENBSD_5_2_BASE:1.1.1.10
	OPENBSD_5_1_BASE:1.1.1.10
	OPENBSD_5_1:1.1.1.10.0.44
	OPENBSD_5_0:1.1.1.10.0.42
	OPENBSD_5_0_BASE:1.1.1.10
	OPENBSD_4_9:1.1.1.10.0.40
	OPENBSD_4_9_BASE:1.1.1.10
	OPENBSD_4_8:1.1.1.10.0.38
	OPENBSD_4_8_BASE:1.1.1.10
	OPENBSD_4_7:1.1.1.10.0.34
	OPENBSD_4_7_BASE:1.1.1.10
	OPENBSD_4_6:1.1.1.10.0.36
	OPENBSD_4_6_BASE:1.1.1.10
	OPENBSD_4_5:1.1.1.10.0.32
	OPENBSD_4_5_BASE:1.1.1.10
	OPENBSD_4_4:1.1.1.10.0.30
	OPENBSD_4_4_BASE:1.1.1.10
	OPENBSD_4_3:1.1.1.10.0.28
	OPENBSD_4_3_BASE:1.1.1.10
	OPENBSD_4_2:1.1.1.10.0.26
	OPENBSD_4_2_BASE:1.1.1.10
	OPENBSD_4_1:1.1.1.10.0.24
	OPENBSD_4_1_BASE:1.1.1.10
	OPENBSD_4_0:1.1.1.10.0.22
	OPENBSD_4_0_BASE:1.1.1.10
	OPENBSD_3_9:1.1.1.10.0.20
	OPENBSD_3_9_BASE:1.1.1.10
	OPENBSD_3_8:1.1.1.10.0.18
	OPENBSD_3_8_BASE:1.1.1.10
	OPENBSD_3_7:1.1.1.10.0.16
	OPENBSD_3_7_BASE:1.1.1.10
	OPENBSD_3_6:1.1.1.10.0.14
	OPENBSD_3_6_BASE:1.1.1.10
	OPENBSD_3_5:1.1.1.10.0.12
	OPENBSD_3_5_BASE:1.1.1.10
	OPENBSD_3_4:1.1.1.10.0.10
	OPENBSD_3_4_BASE:1.1.1.10
	OPENBSD_3_3:1.1.1.10.0.8
	OPENBSD_3_3_BASE:1.1.1.10
	OPENBSD_3_2:1.1.1.10.0.6
	OPENBSD_3_2_BASE:1.1.1.10
	OPENBSD_3_1:1.1.1.10.0.4
	OPENBSD_3_1_BASE:1.1.1.10
	OPENBSD_3_0:1.1.1.10.0.2
	OPENBSD_3_0_BASE:1.1.1.10
	cvs-1-11-1p1:1.1.1.10
	OPENBSD_2_9:1.1.1.9.0.8
	OPENBSD_2_9_BASE:1.1.1.9
	cvs-1-11:1.1.1.9
	OPENBSD_2_8:1.1.1.9.0.6
	OPENBSD_2_8_BASE:1.1.1.9
	OPENBSD_2_7:1.1.1.9.0.4
	OPENBSD_2_7_BASE:1.1.1.9
	OPENBSD_2_6:1.1.1.9.0.2
	OPENBSD_2_6_BASE:1.1.1.9
	cvs-1-10-7:1.1.1.9
	OPENBSD_2_5:1.1.1.8.0.2
	OPENBSD_2_5_BASE:1.1.1.8
	cvs-1-10-5:1.1.1.8
	OPENBSD_2_4:1.1.1.7.0.2
	OPENBSD_2_4_BASE:1.1.1.7
	cvs-1-10:1.1.1.7
	cvs-1-9-28:1.1.1.6
	OPENBSD_2_3:1.1.1.6.0.2
	OPENBSD_2_3_BASE:1.1.1.6
	cvs-1-9-26:1.1.1.6
	cvs-1-9-24:1.1.1.6
	OPENBSD_2_2:1.1.1.5.0.4
	OPENBSD_2_2_BASE:1.1.1.5
	cvs-1-9-10:1.1.1.5
	OPENBSD_2_1:1.1.1.5.0.2
	OPENBSD_2_1_BASE:1.1.1.5
	cvs-1-9-8:1.1.1.5
	cvs-1-9-6:1.1.1.5
	cvs-1-9-4:1.1.1.5
	cvs-1-9-2:1.1.1.5
	cvs-1-9:1.1.1.4
	OPENBSD_2_0:1.1.1.3.0.2
	OPENBSD_2_0_BASE:1.1.1.3
	cvs-1-8-1:1.1.1.3
	cvs-1-8:1.1.1.3
	cvs-1-7-2:1.1.1.2
	cvs-1-7-1:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@# @;


1.1
date	96.01.30.00.41.38;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.30.00.41.38;	author tholo;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.04.27.20.02.52;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.05.06.22.27.23;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.10.18.03.41.47;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.02.21.06.47.36;	author tholo;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	98.02.22.08.31.08;	author tholo;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	98.08.22.20.58.12;	author tholo;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.02.28.21.40.25;	author tholo;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	99.09.10.05.14.53;	author tholo;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2001.09.28.22.48.46;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# Generated automatically from Makefile.in by configure.
# Makefile for OS/2.  Generated from Makefile.in when CVS is
# configured for a dist-build.  Configure never gets run on OS/2, so
# we must include the generated Makefile in the distribution.  See the
# `dist-dir' rule.

project: cvs.exe
# .SUFFIXES .c .obj .exe

# path slash
# Maintainers: always leave this set to "/", because `make dist' has
# to work on Unix systems.  See os2/README to find out why we have
# this var.
SL = /

# Directory in which to install executables.
install_dir = s:${SL}gnu${SL}util

# srcdir is usually "."
srcdir     = .

# top_srcdir is usually ".."
top_srcdir = ..

lib_dir     = ..${SL}lib
cvs_srcdir = ..${SL}src

# Do we need these?
# prefix = /usr/local
# exec_prefix = ${prefix}

# taken straight from the example project
LIB = s:${SL}ibmcpp${SL}lib;s:${SL}toolkt21${SL}os2lib;
CINC = -Is:${SL}ibmcpp${SL}include -Is:${SL}toolkt21${SL}c${SL}os2h
# This says we are building an object file, not a full executable.
OBJ_CFLAGS = -C+
CFLAGS = -W3 -Wpro+rea+tru+use+ -Ti+ -Ss+ -Gd+ -Gm+ -G4 -Q+ -Sm ${CINC} \
  -I${srcdir} -I${lib_dir} -I${cvs_srcdir} \
  -DIBM_CPP -DHAVE_CONFIG_H \
  -DTCPIP_IBM -Is:${SL}ibmtcpip${SL}include

# needed to make command-line wildcard expansion work right.  That's
# right, DOS-descendants handle this from the program, not the shell.
ARGVLIB = s:${SL}ibmcpp${SL}lib${SL}setargv.obj

# TCP/IP stuff
TCPIPLIB = s:${SL}ibmtcpip${SL}lib${SL}tcp32dll.lib	s:${SL}ibmtcpip${SL}lib${SL}so32dll.lib


# headers specific to OS/2

# We list OS2_HEADERS so we know what to include when we make dist-dir
# here.
OS2_HEADERS = \
       ${srcdir}${SL}tcpip.h \
       ${srcdir}${SL}config.h \
       ${srcdir}${SL}options.h \
       ${srcdir}${SL}pwd.h \
       ${srcdir}${SL}dirent.h \
       ${srcdir}${SL}rcmd.h \
       ${srcdir}${SL}popen.h

# headers we use from the common src dir, ..${SL}src
COMMON_HEADERS = \
       ${cvs_srcdir}${SL}client.h \
       ${cvs_srcdir}${SL}cvs.h \
       ${cvs_srcdir}${SL}rcs.h \
       ${cvs_srcdir}${SL}hash.h \
       ${cvs_srcdir}${SL}myndbm.h \
       ${cvs_srcdir}${SL}patchlevel.h \
       ${cvs_srcdir}${SL}update.h \
       ${cvs_srcdir}${SL}server.h \
       ${cvs_srcdir}${SL}error.h

# sources specific to OS/2
OS2_SOURCES = \
       ${srcdir}${SL}mkdir.c \
       ${srcdir}${SL}pwd.c \
       ${srcdir}${SL}filesubr.c \
       ${srcdir}${SL}dirent.c \
       ${srcdir}${SL}run.c \
       ${srcdir}${SL}stripslash.c \
       ${srcdir}${SL}rcmd.c \
       ${srcdir}${SL}waitpid.c \
       ${srcdir}${SL}popen.c \
       ${srcdir}${SL}porttcp.c \
       ${srcdir}${SL}strippath.c \
       ${srcdir}${SL}getdate.c \
       ${srcdir}${SL}getpass.c

# sources we use from the common src dir, ..${SL}src
COMMON_SOURCES = \
       ${cvs_srcdir}${SL}add.c \
       ${cvs_srcdir}${SL}admin.c \
       ${cvs_srcdir}${SL}checkin.c \
       ${cvs_srcdir}${SL}checkout.c \
       ${cvs_srcdir}${SL}classify.c \
       ${cvs_srcdir}${SL}client.c \
       ${cvs_srcdir}${SL}commit.c \
       ${cvs_srcdir}${SL}create_adm.c \
       ${cvs_srcdir}${SL}cvsrc.c \
       ${cvs_srcdir}${SL}diff.c \
       ${cvs_srcdir}${SL}edit.c \
       ${cvs_srcdir}${SL}entries.c \
       ${cvs_srcdir}${SL}error.c \
       ${cvs_srcdir}${SL}expand_path.c \
       ${cvs_srcdir}${SL}fileattr.c \
       ${cvs_srcdir}${SL}find_names.c \
       ${cvs_srcdir}${SL}hash.c \
       ${cvs_srcdir}${SL}history.c \
       ${cvs_srcdir}${SL}ignore.c \
       ${cvs_srcdir}${SL}import.c \
       ${cvs_srcdir}${SL}lock.c \
       ${cvs_srcdir}${SL}log.c \
       ${cvs_srcdir}${SL}login.c \
       ${cvs_srcdir}${SL}logmsg.c \
       ${cvs_srcdir}${SL}main.c \
       ${cvs_srcdir}${SL}modules.c \
       ${cvs_srcdir}${SL}myndbm.c \
       ${cvs_srcdir}${SL}no_diff.c \
       ${cvs_srcdir}${SL}parseinfo.c \
       ${cvs_srcdir}${SL}patch.c \
       ${cvs_srcdir}${SL}rcs.c \
       ${cvs_srcdir}${SL}rcscmds.c \
       ${cvs_srcdir}${SL}recurse.c \
       ${cvs_srcdir}${SL}release.c \
       ${cvs_srcdir}${SL}remove.c \
       ${cvs_srcdir}${SL}repos.c \
       ${cvs_srcdir}${SL}root.c \
       ${cvs_srcdir}${SL}rtag.c \
       ${cvs_srcdir}${SL}scramble.c \
       ${cvs_srcdir}${SL}server.c \
       ${cvs_srcdir}${SL}status.c \
       ${cvs_srcdir}${SL}subr.c \
       ${cvs_srcdir}${SL}tag.c \
       ${cvs_srcdir}${SL}update.c \
       ${cvs_srcdir}${SL}watch.c \
       ${cvs_srcdir}${SL}wrapper.c \
       ${cvs_srcdir}${SL}vers_ts.c \
       ${cvs_srcdir}${SL}version.c
# end of $COMMON_SOURCES

# sources from ..${SL}lib
LIB_SOURCES = \
       ${lib_dir}${SL}getopt.c \
       ${lib_dir}${SL}getopt1.c \
       ${lib_dir}${SL}getline.c \
       ${lib_dir}${SL}getwd.c \
       ${lib_dir}${SL}save-cwd.c \
       ${lib_dir}${SL}sighandle.c \
       ${lib_dir}${SL}yesno.c \
       ${lib_dir}${SL}xgetwd.c \
       ${lib_dir}${SL}md5.c \
       ${lib_dir}${SL}fnmatch.c \
       ${lib_dir}${SL}regex.c

# object files from OS/2 sources
OS2_OBJECTS = \
       ${srcdir}${SL}mkdir.obj \
       ${srcdir}${SL}pwd.obj \
       ${srcdir}${SL}filesubr.obj \
       ${srcdir}${SL}dirent.obj \
       ${srcdir}${SL}run.obj \
       ${srcdir}${SL}stripslash.obj \
       ${srcdir}${SL}rcmd.obj \
       ${srcdir}${SL}waitpid.obj \
       ${srcdir}${SL}popen.obj \
       ${srcdir}${SL}porttcp.obj \
       ${srcdir}${SL}strippath.obj \
       ${srcdir}${SL}getdate.obj \
       ${srcdir}${SL}getpass.obj

# object files from ..${SL}src
COMMON_OBJECTS = \
       ${cvs_srcdir}${SL}add.obj \
       ${cvs_srcdir}${SL}admin.obj \
       ${cvs_srcdir}${SL}checkin.obj \
       ${cvs_srcdir}${SL}checkout.obj \
       ${cvs_srcdir}${SL}classify.obj \
       ${cvs_srcdir}${SL}client.obj \
       ${cvs_srcdir}${SL}commit.obj \
       ${cvs_srcdir}${SL}create_adm.obj \
       ${cvs_srcdir}${SL}cvsrc.obj \
       ${cvs_srcdir}${SL}diff.obj \
       ${cvs_srcdir}${SL}edit.obj \
       ${cvs_srcdir}${SL}entries.obj \
       ${cvs_srcdir}${SL}error.obj \
       ${cvs_srcdir}${SL}expand_path.obj \
       ${cvs_srcdir}${SL}fileattr.obj \
       ${cvs_srcdir}${SL}find_names.obj \
       ${cvs_srcdir}${SL}hash.obj \
       ${cvs_srcdir}${SL}history.obj \
       ${cvs_srcdir}${SL}ignore.obj \
       ${cvs_srcdir}${SL}import.obj \
       ${cvs_srcdir}${SL}lock.obj \
       ${cvs_srcdir}${SL}log.obj \
       ${cvs_srcdir}${SL}login.obj \
       ${cvs_srcdir}${SL}logmsg.obj \
       ${cvs_srcdir}${SL}main.obj \
       ${cvs_srcdir}${SL}modules.obj \
       ${cvs_srcdir}${SL}myndbm.obj \
       ${cvs_srcdir}${SL}no_diff.obj \
       ${cvs_srcdir}${SL}parseinfo.obj \
       ${cvs_srcdir}${SL}patch.obj \
       ${cvs_srcdir}${SL}rcs.obj \
       ${cvs_srcdir}${SL}rcscmds.obj \
       ${cvs_srcdir}${SL}recurse.obj \
       ${cvs_srcdir}${SL}release.obj \
       ${cvs_srcdir}${SL}remove.obj \
       ${cvs_srcdir}${SL}repos.obj \
       ${cvs_srcdir}${SL}root.obj \
       ${cvs_srcdir}${SL}rtag.obj \
       ${cvs_srcdir}${SL}scramble.obj \
       ${cvs_srcdir}${SL}server.obj \
       ${cvs_srcdir}${SL}status.obj \
       ${cvs_srcdir}${SL}subr.obj \
       ${cvs_srcdir}${SL}tag.obj \
       ${cvs_srcdir}${SL}update.obj \
       ${cvs_srcdir}${SL}watch.obj \
       ${cvs_srcdir}${SL}wrapper.obj \
       ${cvs_srcdir}${SL}vers_ts.obj \
       ${cvs_srcdir}${SL}version.obj
# end of $COMMON_OBJECTS

# objects from ..${SL}lib
LIB_OBJECTS = \
       ${lib_dir}${SL}getopt.obj \
       ${lib_dir}${SL}getopt1.obj \
       ${lib_dir}${SL}getline.obj \
       ${lib_dir}${SL}getwd.obj \
       ${lib_dir}${SL}save-cwd.obj \
       ${lib_dir}${SL}sighandle.obj \
       ${lib_dir}${SL}yesno.obj \
       ${lib_dir}${SL}xgetwd.obj \
       ${lib_dir}${SL}md5.obj \
       ${lib_dir}${SL}fnmatch.obj \
       ${lib_dir}${SL}regex.obj

SOURCES = ${COMMON_SOURCES} ${LIB_SOURCES} ${OS2_SOURCES}
HEADERS = ${COMMON_HEADERS} ${OS2_HEADERS}
OBJECTS = ${COMMON_OBJECTS} ${LIB_OBJECTS} ${OS2_OBJECTS}

DISTFILES = ${OS2_HEADERS} ${OS2_SOURCES} \
  ${srcdir}${SL}README ${srcdir}${SL}ChangeLog \
  ${srcdir}${SL}Makefile.in ${srcdir}${SL}.cvsignore \
  ${srcdir}${SL}test-makefile Makefile

all:

.PHONY: all install uninstall
all install uninstall:

.PHONY: tags TAGS
tags TAGS:

.PHONY: ls
ls:
	@@echo ${DISTFILES}

.PHONY: clean distclean realclean mostlyclean
clean distclean realclean mostlyclean:

.PHONY: lint
lint:

.PHONY: dist-dir
dist-dir:
	mkdir ${DISTDIR}
	for i in ${DISTFILES}; do \
	  ln $${i} ${DISTDIR}; \
	done

# We don't have a real distclean or anything like that, but at least
# we can get rid of the obj files and cvs.exe. 
clean:
	rm -f cvs.exe
	rm -f ${srcdir}${SL}*.obj 
	rm -f ${lib_dir}${SL}*.obj 
	rm -f ${cvs_srcdir}${SL}*.obj 

install-cvs: cvs.exe
	cp ${srcdir}${SL}cvs.exe ${install_dir}${SL}cvs.exe

%.obj: %.c
	icc ${OBJ_CFLAGS} ${CFLAGS} /Fo$@@ $*.c

# There seems to be no ICC option for specifying library locations, so
# we must `set' the path in the compilation environment.  Urgkle. 
cvs.exe: ${OBJECTS}
	echo Creating icc.in...
	echo -Q+ -Ti+ -Fe$@@ -B"/batch" -B"/NOE" > icc.in
	echo ${OS2_OBJECTS}                    >> icc.in
	echo ${LIB_OBJECTS}                    >> icc.in
	echo ${COMMON_OBJECTS}                 >> icc.in
	echo ${TCPIPLIB}                       >> icc.in
	echo ${ARGVLIB}                        >> icc.in
	echo Creating icc.in... done.
	set LIB=${LIB} & icc @@icc.in

# cvs.obj: ${OBJECTS} ${SOURCES} ${HEADERS}

subdir = os2
Makefile: ../config.status $(srcdir)/Makefile.in
	cd .. && CONFIG_FILES=$(subdir)/$@@ CONFIG_HEADERS= ./config.status
@


1.1.1.1
log
@Missed files from 1.7.1 import
@
text
@@


1.1.1.2
log
@Some files missed by initial import
@
text
@d20 1
a20 1
srcdir     = ../../ccvs/os2
d23 1
a23 1
top_srcdir = ../../ccvs
d25 2
a26 2
lib_dir     = ../../ccvs${SL}lib
cvs_srcdir = ../../ccvs${SL}src
a117 1
       ${cvs_srcdir}${SL}mkmodules.c \
d149 1
a149 1
       ${lib_dir}${SL}savecwd.c \
a151 1
       ${lib_dir}${SL}vasprintf.c \
a199 1
       ${cvs_srcdir}${SL}mkmodules.obj \
d231 1
a231 1
       ${lib_dir}${SL}savecwd.obj \
a233 1
       ${lib_dir}${SL}vasprintf.obj \
@


1.1.1.3
log
@Files missed by previous import
@
text
@d20 1
a20 1
srcdir     = .
d23 1
a23 1
top_srcdir = ..
d25 2
a26 2
lib_dir     = ..${SL}lib
cvs_srcdir = ..${SL}src
@


1.1.1.4
log
@Missing files from import
@
text
@d10 4
a13 3
# path slash.  This was introduced so that it can be set to \
# instead of / for linking, but now that the cvs.exe rule uses
# subst to produce \, it should be possible to nuke SL.
a27 2
zlib_dir = ${top_srcdir}/zlib

d38 1
a38 1
  -I${srcdir} -I${lib_dir} -I${cvs_srcdir} -I${zlib_dir} \
a91 1
# FIXME: Is this used anywhere?  I don't think it is.
a94 1
       ${cvs_srcdir}${SL}buffer.c \
a144 1
# FIXME: Is this used anywhere?  I don't think it is.
a178 1
       ${cvs_srcdir}${SL}buffer.obj \
d225 1
a225 2
       ${cvs_srcdir}${SL}version.obj \
       ${cvs_srcdir}/zlib.obj
d241 1
a241 16
       ${lib_dir}${SL}regex.obj \
       ${lib_dir}/valloc.obj

ZLIB_OBJECTS = ${zlib_dir}/adler32.obj \
       ${zlib_dir}/compress.obj \
       ${zlib_dir}/crc32.obj \
       ${zlib_dir}/uncompr.obj \
       ${zlib_dir}/deflate.obj \
       ${zlib_dir}/trees.obj \
       ${zlib_dir}/zutil.obj \
       ${zlib_dir}/inflate.obj \
       ${zlib_dir}/infblock.obj \
       ${zlib_dir}/inftrees.obj \
       ${zlib_dir}/infcodes.obj \
       ${zlib_dir}/infutil.obj \
       ${zlib_dir}/inffast.obj
d245 1
a245 1
OBJECTS = ${COMMON_OBJECTS} ${LIB_OBJECTS} ${OS2_OBJECTS} ${ZLIB_OBJECTS}
a256 3
installdirs:
.PHONY: installdirs

a292 7
#
#         I'm having some weird problem with "\" vs. "/".  If I build
# with "\" as the path separator in the makefile, the compiler dumps
# core.  Go figure.  If I build with "/" as the path separator, the
# object files compile fine but the linker thinks the "/" is indicating
# options and gets all confused (though at least it doesn't dump core).
# So, use subst to compile with "/" and link with "\".
d296 5
a300 6
	echo $(subst /,\,$(OS2_OBJECTS))       >> icc.in
	echo $(subst /,\,$(LIB_OBJECTS))       >> icc.in
	echo $(subst /,\,$(COMMON_OBJECTS))    >> icc.in
	echo $(subst /,\,$(ZLIB_OBJECTS))      >> icc.in
	echo $(subst /,\,$(TCPIPLIB))          >> icc.in
	echo $(subst /,\,$(ARGVLIB))           >> icc.in
d302 1
a302 1
	set LIB=$(subst /,\,$(LIB)) & icc @@icc.in
@


1.1.1.5
log
@Missed files from new release from Cyclic Software
@
text
@d19 1
a19 1
srcdir     = ../../work/ccvs/os2
d22 1
a22 1
top_srcdir = ../../work/ccvs
d24 2
a25 2
lib_dir     = ../../work/ccvs${SL}lib
cvs_srcdir = ../../work/ccvs${SL}src
d38 1
a38 1
CFLAGS = -W3 -Wrea+tru+ -Ti+ -Ss+ -Gd- -Gm+ -G4 -Q+ -Sm ${CINC} \
d88 1
d175 1
d271 1
a271 2
  ${srcdir}${SL}test-makefile Makefile ${srcdir}/os2inc.h \
  ${srcdir}/watcom.mak
@


1.1.1.6
log
@Latest version from Cyclic; files missed in first run
@
text
@a337 4
# Hmm.  This rule wants to exist on unix, so that "make dist" works.
# And it doesn't want to exist on OS/2, because configure doesn't
# run on OS/2 and so ../config.status won't exist.  For now we just
# say, in emx/README, that people will need to comment it out.
@


1.1.1.7
log
@Latest version from Cyclic; skipped files
@
text
@d19 1
a19 1
srcdir     = .
d22 1
a22 1
top_srcdir = ..
d24 2
a25 2
lib_dir     = ..${SL}lib
cvs_srcdir = ..${SL}src
@


1.1.1.8
log
@Latest version from Cyclic; skipped files
@
text
@d19 1
a19 1
srcdir     = ../../work/ccvs/os2
d22 1
a22 1
top_srcdir = ../../work/ccvs
d24 2
a25 2
lib_dir     = ../../work/ccvs${SL}lib
cvs_srcdir = ../../work/ccvs${SL}src
d88 1
a148 1
       ${lib_dir}${SL}getdate.c \
d174 1
a233 1
       ${lib_dir}${SL}getdate.obj \
@


1.1.1.9
log
@Latest version from Cyclic; skipped files
@
text
@d19 1
a19 1
srcdir     = .
d22 1
a22 1
top_srcdir = ..
d24 2
a25 2
lib_dir     = ..${SL}lib
cvs_srcdir = ..${SL}src
@


1.1.1.10
log
@Latest from Cyclic Software
@
text
@a12 1
# FIXME - nuke SL
a23 2
subdir     = os2

d132 1
d217 1
a276 7
# Remove targets for Automake
info:
.PHONY: info

installcheck:
.PHONY: installcheck

d283 7
d293 5
a297 29
.PHONY: check
check:

# distdir added for CVS.
top_builddir = ..
PACKAGE = cvs
VERSION = 1.11.1p1
distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
# FIXME - sedding the directory off of the DISTFILES targets is really yucky.
# The $(srcdir) prefixes should really be removed from all of the files in the
# lists that make up DISTFILES above.  Unfortunately, I don't have an OS2 box
# to test on.
distdir: $(DISTFILES)
	@@d=$(srcdir); \
	for f in $(DISTFILES); do \
	  file=`echo $$f |sed 's,.*/,,'`; \
	  if test -d $(distdir)/`dirname $$file`; then \
	    :; \
	  else \
	    mkdir $(distdir)/`dirname $$file`; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
a298 1
.PHONY: distdir
d302 1
a302 2
.PHONY: clean distclean realclean mostlyclean maintainer-clean
clean distclean realclean maintainer-clean mostlyclean:
d337 1
@


