head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.6
	OPENBSD_6_0:1.1.1.6.0.76
	OPENBSD_6_0_BASE:1.1.1.6
	OPENBSD_5_9:1.1.1.6.0.72
	OPENBSD_5_9_BASE:1.1.1.6
	OPENBSD_5_8:1.1.1.6.0.74
	OPENBSD_5_8_BASE:1.1.1.6
	OPENBSD_5_7:1.1.1.6.0.66
	OPENBSD_5_7_BASE:1.1.1.6
	OPENBSD_5_6:1.1.1.6.0.70
	OPENBSD_5_6_BASE:1.1.1.6
	OPENBSD_5_5:1.1.1.6.0.68
	OPENBSD_5_5_BASE:1.1.1.6
	OPENBSD_5_4:1.1.1.6.0.64
	OPENBSD_5_4_BASE:1.1.1.6
	OPENBSD_5_3:1.1.1.6.0.62
	OPENBSD_5_3_BASE:1.1.1.6
	OPENBSD_5_2:1.1.1.6.0.60
	OPENBSD_5_2_BASE:1.1.1.6
	OPENBSD_5_1_BASE:1.1.1.6
	OPENBSD_5_1:1.1.1.6.0.58
	OPENBSD_5_0:1.1.1.6.0.56
	OPENBSD_5_0_BASE:1.1.1.6
	OPENBSD_4_9:1.1.1.6.0.54
	OPENBSD_4_9_BASE:1.1.1.6
	OPENBSD_4_8:1.1.1.6.0.52
	OPENBSD_4_8_BASE:1.1.1.6
	OPENBSD_4_7:1.1.1.6.0.48
	OPENBSD_4_7_BASE:1.1.1.6
	OPENBSD_4_6:1.1.1.6.0.50
	OPENBSD_4_6_BASE:1.1.1.6
	OPENBSD_4_5:1.1.1.6.0.46
	OPENBSD_4_5_BASE:1.1.1.6
	OPENBSD_4_4:1.1.1.6.0.44
	OPENBSD_4_4_BASE:1.1.1.6
	OPENBSD_4_3:1.1.1.6.0.42
	OPENBSD_4_3_BASE:1.1.1.6
	OPENBSD_4_2:1.1.1.6.0.40
	OPENBSD_4_2_BASE:1.1.1.6
	OPENBSD_4_1:1.1.1.6.0.38
	OPENBSD_4_1_BASE:1.1.1.6
	OPENBSD_4_0:1.1.1.6.0.36
	OPENBSD_4_0_BASE:1.1.1.6
	OPENBSD_3_9:1.1.1.6.0.34
	OPENBSD_3_9_BASE:1.1.1.6
	OPENBSD_3_8:1.1.1.6.0.32
	OPENBSD_3_8_BASE:1.1.1.6
	OPENBSD_3_7:1.1.1.6.0.30
	OPENBSD_3_7_BASE:1.1.1.6
	OPENBSD_3_6:1.1.1.6.0.28
	OPENBSD_3_6_BASE:1.1.1.6
	OPENBSD_3_5:1.1.1.6.0.26
	OPENBSD_3_5_BASE:1.1.1.6
	OPENBSD_3_4:1.1.1.6.0.24
	OPENBSD_3_4_BASE:1.1.1.6
	OPENBSD_3_3:1.1.1.6.0.22
	OPENBSD_3_3_BASE:1.1.1.6
	OPENBSD_3_2:1.1.1.6.0.20
	OPENBSD_3_2_BASE:1.1.1.6
	OPENBSD_3_1:1.1.1.6.0.18
	OPENBSD_3_1_BASE:1.1.1.6
	OPENBSD_3_0:1.1.1.6.0.16
	OPENBSD_3_0_BASE:1.1.1.6
	cvs-1-11-1p1:1.1.1.6
	OPENBSD_2_9:1.1.1.6.0.14
	OPENBSD_2_9_BASE:1.1.1.6
	cvs-1-11:1.1.1.6
	OPENBSD_2_8:1.1.1.6.0.12
	OPENBSD_2_8_BASE:1.1.1.6
	OPENBSD_2_7:1.1.1.6.0.10
	OPENBSD_2_7_BASE:1.1.1.6
	OPENBSD_2_6:1.1.1.6.0.8
	OPENBSD_2_6_BASE:1.1.1.6
	cvs-1-10-7:1.1.1.6
	OPENBSD_2_5:1.1.1.6.0.6
	OPENBSD_2_5_BASE:1.1.1.6
	cvs-1-10-5:1.1.1.6
	OPENBSD_2_4:1.1.1.6.0.4
	OPENBSD_2_4_BASE:1.1.1.6
	cvs-1-10:1.1.1.6
	cvs-1-9-28:1.1.1.6
	OPENBSD_2_3:1.1.1.6.0.2
	OPENBSD_2_3_BASE:1.1.1.6
	cvs-1-9-26:1.1.1.6
	cvs-1-9-24:1.1.1.6
	OPENBSD_2_2:1.1.1.5.0.4
	OPENBSD_2_2_BASE:1.1.1.5
	cvs-1-9-10:1.1.1.5
	OPENBSD_2_1:1.1.1.5.0.2
	OPENBSD_2_1_BASE:1.1.1.5
	cvs-1-9-8:1.1.1.5
	cvs-1-9-6:1.1.1.5
	cvs-1-9-4:1.1.1.5
	cvs-1-9-2:1.1.1.4
	cvs-1-9:1.1.1.3
	OPENBSD_2_0:1.1.1.2.0.2
	OPENBSD_2_0_BASE:1.1.1.2
	cvs-1-8-1:1.1.1.2
	cvs-1-8:1.1.1.2
	cvs-1-7-2:1.1.1.1
	cvs-1-7-1:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@# @;


1.1
date	96.01.30.00.19.38;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.30.00.19.38;	author tholo;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.05.06.22.21.14;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.10.18.03.36.51;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.02.21.06.38.50;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.03.18.01.57.19;	author tholo;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	98.02.22.08.22.37;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@        This port requires IBM C/C++ and the IBM TCPIP library.
You'll need to edit the makefile to reflect your system's paths
(unless you're our customer for this port, in which case the paths
are correct because we did the port on your machine. :-) ).

        I'm having some weird problem with "\" vs. "/".  If I build
with "\" as the path separator in the makefile, the compiler dumps
core.  Go figure.  If I build with "/" as the path separator, the
object files compile fine but the linker thinks the "/" is indicating
options and gets all confused (though at least it doesn't dump core).

        Right now the solution is to have a makefile variable called
SL, which must be set to "/" for the first invocation of make and "\"
for the second (the first pass will successfully build the object
files, but you can expect it do die with "unknown options" errors at
link time).

        $SL is defined near the top of the makefile.  If you're going
to set $SL in the makefile itself, make sure to quote it ("\\").  On
the command line (i.e., "make SL=\"), I believe just one will do.

        That should be all -- edit the makefile, do "make" twice
(changing $SL the second time), and get os2\cvs.exe.  Assuming you
have edited the `install_dir' variable in the Makefile, you may type
"make install-cvs" to put cvs.exe in the right place.

        You will get warnings during the compilation; ignore them.
Report bugs to <bug-cvs@@prep.ai.mit.edu>.

-Karl
 <kfogel@@cyclic.com>
@


1.1.1.1
log
@Upgrade to 1.7.1 snapshot
@
text
@@


1.1.1.2
log
@New CVS release from Cyclic Software
@
text
@a26 6
        If the makefile has linefeeds only at the end of lines, make
(at least the port of GNU make that I have) will interpret it
differently.  This is (IMHO) a bizarre behavior, but you need to
convert the linefeeds to CRLF pairs (editing the file with an editor
such as emacs will generally do this).

@


1.1.1.3
log
@New release from Cyclic Software
@
text
@d6 20
a25 4
        That should be all -- edit the makefile, do "make" and get
os2\cvs.exe.  Assuming you have edited the `install_dir' variable in
the Makefile, you may type "make install-cvs" to put cvs.exe in the
right place.
@


1.1.1.4
log
@New release from Cyclic Software
@
text
@d1 4
a4 6
        This port requires IBM C/C++ and the IBM TCPIP library.  It
has probably only been tested with the CVS client.  Local CVS might or
might not work, and the server would definitely not work.  You'll need
to edit the makefile to reflect your system's paths (unless you're our
customer for this port, in which case the paths are correct because we
did the port on your machine. :-) ).
d20 2
a21 24


Some notes on the watcom port:
------------------------------

You need the OS/2 TCPIP developers toolkit to translate the sources.
This is not as bad as it sounds, since the toolkit is on your OS/2
CD.

To compile the sources, enter

        wmake -f watcom.mak

at the OS/2 prompt.

The executable created by the watcom compiler does *not* need a runtime
DLL.


        Uz      (uz@@musoftware.com)

Credits:

Original port in 1995 by Karl Fogel <kfogel@@cyclic.com>.
@


1.1.1.5
log
@New release from Cyclic Software
@
text
@d19 1
a19 3
        There are two compiler warnings in os2/popen.c which we haven't
figured out the cause of.  Other than that there probably aren't a whole
lot of warnings (but there might be a few).
@


1.1.1.6
log
@Latest version from Cyclic
@
text
@d6 1
a6 4
did the port on your machine. :-) ).  You also may need to comment out
the "Makefile" rule in emx/Makefile to avoid a complaint about
../config.status not existing.  You also might need to edit srcdir to
be "." and top_srcdir to be "..".
d22 1
a22 1
Report bugs to <bug-cvs@@gnu.org>.
@

