head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.84
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.80
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.76
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.78
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.70
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.74
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.72
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.68
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.66
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.64
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.62
	OPENBSD_5_0:1.1.1.1.0.60
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.58
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.56
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.52
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.54
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.50
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.48
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.46
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.44
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.42
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.40
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.38
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.36
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.34
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.32
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.30
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.28
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.26
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.24
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.22
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.20
	OPENBSD_3_0_BASE:1.1.1.1
	cvs-1-11-1p1:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.18
	OPENBSD_2_9_BASE:1.1.1.1
	cvs-1-11:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.16
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.14
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.12
	OPENBSD_2_6_BASE:1.1.1.1
	cvs-1-10-7:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.10
	OPENBSD_2_5_BASE:1.1.1.1
	cvs-1-10-5:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	cvs-1-10:1.1.1.1
	cvs-1-9-28:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	cvs-1-9-26:1.1.1.1
	cvs-1-9-24:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	cvs-1-9-10:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	cvs-1-9-8:1.1.1.1
	cvs-1-9-6:1.1.1.1
	cvs-1-9-4:1.1.1.1
	cvs-1-9-2:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.02.21.06.38.53;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.02.21.06.38.53;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# Makefile for OS/2 (Watcom-C) for use with the watcom make.
# Written 11/96 by Ullrich von Bassewitz (uz@@musoftware.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# The directory, where the IBM TCP/IP developers toolkit is installed. As far
# as I remember, c:\mptn is the default location. If it is not, it is still
# a good choice :-)
tcpip_dir       = c:\mptn
tcpip_libdir    = $(tcpip_dir)\lib
tcpip_incdir    = $(tcpip_dir)\inc

# Directory for source files and objects
srcdir          = .
top_srcdir      = ..
lib_dir         = $(top_srcdir)\lib
cvs_srcdir      = $(top_srcdir)\src
zlib_dir        = $(top_srcdir)\zlib

# Define the stuff used for building the executable
CC = WCC386
LD = WLINK
CFLAGS = -bm -bt=OS2 -I$(srcdir) -I$(lib_dir) -I$(cvs_srcdir) -I$(zlib_dir) &
        -DIBM_CPP -DHAVE_CONFIG_H -DTCPIP_IBM -d1 -onatx -zp4 -5s -fpi87 -zq &
        -w2 -ze -I$(tcpip_incdir)

# Tell the make where the C files are located
.c:     $(srcdir);$(lib_dir);$(cvs_srcdir);$(zlib_dir)

# Somewhat modified generic rule for .obj files. Don't put the .obj file into
# the current directory, use the source directory instead.
.c.obj: .AUTODEPEND
  $(CC) $(CFLAGS) -fo=$*.obj $^*

# object files from OS/2 sources
OS2_OBJECTS = &
        $(srcdir)\mkdir.obj &
        $(srcdir)\pwd.obj &
        $(srcdir)\filesubr.obj &
        $(srcdir)\run.obj &
        $(srcdir)\stripslash.obj &
        $(srcdir)\rcmd.obj &
        $(srcdir)\waitpid.obj &
        $(srcdir)\popen.obj &
        $(srcdir)\porttcp.obj &
        $(srcdir)\getpass.obj

# object files from ..\src
COMMON_OBJECTS = &
        $(cvs_srcdir)\add.obj &
        $(cvs_srcdir)\admin.obj &
        $(cvs_srcdir)\buffer.obj &
        $(cvs_srcdir)\checkin.obj &
        $(cvs_srcdir)\checkout.obj &
        $(cvs_srcdir)\classify.obj &
        $(cvs_srcdir)\client.obj &
        $(cvs_srcdir)\commit.obj &
        $(cvs_srcdir)\create_adm.obj &
        $(cvs_srcdir)\cvsrc.obj &
        $(cvs_srcdir)\diff.obj &
        $(cvs_srcdir)\edit.obj &
        $(cvs_srcdir)\entries.obj &
        $(cvs_srcdir)\error.obj &
        $(cvs_srcdir)\expand_path.obj &
        $(cvs_srcdir)\fileattr.obj &
        $(cvs_srcdir)\find_names.obj &
        $(cvs_srcdir)\hash.obj &
        $(cvs_srcdir)\history.obj &
        $(cvs_srcdir)\ignore.obj &
        $(cvs_srcdir)\import.obj &
        $(cvs_srcdir)\lock.obj &
        $(cvs_srcdir)\log.obj &
        $(cvs_srcdir)\login.obj &
        $(cvs_srcdir)\logmsg.obj &
        $(cvs_srcdir)\main.obj &
        $(cvs_srcdir)\mkmodules.obj &
        $(cvs_srcdir)\modules.obj &
        $(cvs_srcdir)\myndbm.obj &
        $(cvs_srcdir)\no_diff.obj &
        $(cvs_srcdir)\parseinfo.obj &
        $(cvs_srcdir)\patch.obj &
        $(cvs_srcdir)\rcs.obj &
        $(cvs_srcdir)\rcscmds.obj &
        $(cvs_srcdir)\recurse.obj &
        $(cvs_srcdir)\release.obj &
        $(cvs_srcdir)\remove.obj &
        $(cvs_srcdir)\repos.obj &
        $(cvs_srcdir)\root.obj &
        $(cvs_srcdir)\rtag.obj &
        $(cvs_srcdir)\scramble.obj &
        $(cvs_srcdir)\server.obj &
        $(cvs_srcdir)\status.obj &
        $(cvs_srcdir)\subr.obj &
        $(cvs_srcdir)\tag.obj &
        $(cvs_srcdir)\update.obj &
        $(cvs_srcdir)\watch.obj &
        $(cvs_srcdir)\wrapper.obj &
        $(cvs_srcdir)\vers_ts.obj &
        $(cvs_srcdir)\version.obj &
        $(cvs_srcdir)\zlib.obj
# end of $COMMON_OBJECTS

# objects from ..\lib
LIB_OBJECTS = &
        $(lib_dir)\getopt.obj &
        $(lib_dir)\getopt1.obj &
        $(lib_dir)\getline.obj &
        $(lib_dir)\getwd.obj &
        $(lib_dir)\savecwd.obj &
        $(lib_dir)\sighandle.obj &
        $(lib_dir)\yesno.obj &
        $(lib_dir)\vasprintf.obj &
        $(lib_dir)\xgetwd.obj &
        $(lib_dir)\md5.obj &
        $(lib_dir)\fnmatch.obj &
        $(lib_dir)\regex.obj &
        $(lib_dir)\getdate.obj &
        $(lib_dir)\valloc.obj

ZLIB_OBJECTS = &
        $(zlib_dir)\adler32.obj &
        $(zlib_dir)\compress.obj &
        $(zlib_dir)\crc32.obj &
        $(zlib_dir)\uncompr.obj &
        $(zlib_dir)\deflate.obj &
        $(zlib_dir)\trees.obj &
        $(zlib_dir)\zutil.obj &
        $(zlib_dir)\inflate.obj &
        $(zlib_dir)\infblock.obj &
        $(zlib_dir)\inftrees.obj &
        $(zlib_dir)\infcodes.obj &
        $(zlib_dir)\infutil.obj &
        $(zlib_dir)\inffast.obj

OBJECTS = $(COMMON_OBJECTS) $(LIB_OBJECTS) $(OS2_OBJECTS) $(ZLIB_OBJECTS)

cvs.exe:        $(OBJECTS)
        $(LD) SYSTEM os2v2 DEBUG all NAME cvs.exe OPTION dosseg &
        OPTION stack=32K FILE $(cvs_srcdir)\*.obj,$(lib_dir)\*.obj, &
        $(srcdir)\*.obj,$(zlib_dir)\*.obj &
        LIBRARY $(tcpip_libdir)\tcp32dll.lib, &
        $(tcpip_libdir)\so32dll.lib

strip:  cvs.exe         .SYMBOLIC
        -wstrip cvs.exe
@


1.1.1.1
log
@New release from Cyclic Software
@
text
@@

