head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.15.0.62
	OPENBSD_6_0_BASE:1.1.1.15
	OPENBSD_5_9:1.1.1.15.0.58
	OPENBSD_5_9_BASE:1.1.1.15
	OPENBSD_5_8:1.1.1.15.0.60
	OPENBSD_5_8_BASE:1.1.1.15
	OPENBSD_5_7:1.1.1.15.0.52
	OPENBSD_5_7_BASE:1.1.1.15
	OPENBSD_5_6:1.1.1.15.0.56
	OPENBSD_5_6_BASE:1.1.1.15
	OPENBSD_5_5:1.1.1.15.0.54
	OPENBSD_5_5_BASE:1.1.1.15
	OPENBSD_5_4:1.1.1.15.0.50
	OPENBSD_5_4_BASE:1.1.1.15
	OPENBSD_5_3:1.1.1.15.0.48
	OPENBSD_5_3_BASE:1.1.1.15
	OPENBSD_5_2:1.1.1.15.0.46
	OPENBSD_5_2_BASE:1.1.1.15
	OPENBSD_5_1_BASE:1.1.1.15
	OPENBSD_5_1:1.1.1.15.0.44
	OPENBSD_5_0:1.1.1.15.0.42
	OPENBSD_5_0_BASE:1.1.1.15
	OPENBSD_4_9:1.1.1.15.0.40
	OPENBSD_4_9_BASE:1.1.1.15
	OPENBSD_4_8:1.1.1.15.0.38
	OPENBSD_4_8_BASE:1.1.1.15
	OPENBSD_4_7:1.1.1.15.0.34
	OPENBSD_4_7_BASE:1.1.1.15
	OPENBSD_4_6:1.1.1.15.0.36
	OPENBSD_4_6_BASE:1.1.1.15
	OPENBSD_4_5:1.1.1.15.0.32
	OPENBSD_4_5_BASE:1.1.1.15
	OPENBSD_4_4:1.1.1.15.0.30
	OPENBSD_4_4_BASE:1.1.1.15
	OPENBSD_4_3:1.1.1.15.0.28
	OPENBSD_4_3_BASE:1.1.1.15
	OPENBSD_4_2:1.1.1.15.0.26
	OPENBSD_4_2_BASE:1.1.1.15
	OPENBSD_4_1:1.1.1.15.0.24
	OPENBSD_4_1_BASE:1.1.1.15
	OPENBSD_4_0:1.1.1.15.0.22
	OPENBSD_4_0_BASE:1.1.1.15
	OPENBSD_3_9:1.1.1.15.0.20
	OPENBSD_3_9_BASE:1.1.1.15
	OPENBSD_3_8:1.1.1.15.0.18
	OPENBSD_3_8_BASE:1.1.1.15
	OPENBSD_3_7:1.1.1.15.0.16
	OPENBSD_3_7_BASE:1.1.1.15
	OPENBSD_3_6:1.1.1.15.0.14
	OPENBSD_3_6_BASE:1.1.1.15
	OPENBSD_3_5:1.1.1.15.0.12
	OPENBSD_3_5_BASE:1.1.1.15
	OPENBSD_3_4:1.1.1.15.0.10
	OPENBSD_3_4_BASE:1.1.1.15
	OPENBSD_3_3:1.1.1.15.0.8
	OPENBSD_3_3_BASE:1.1.1.15
	OPENBSD_3_2:1.1.1.15.0.6
	OPENBSD_3_2_BASE:1.1.1.15
	OPENBSD_3_1:1.1.1.15.0.4
	OPENBSD_3_1_BASE:1.1.1.15
	OPENBSD_3_0:1.1.1.15.0.2
	OPENBSD_3_0_BASE:1.1.1.15
	cvs-1-11-1p1:1.1.1.15
	OPENBSD_2_9:1.1.1.14.0.2
	OPENBSD_2_9_BASE:1.1.1.14
	cvs-1-11:1.1.1.14
	OPENBSD_2_8:1.1.1.13.0.6
	OPENBSD_2_8_BASE:1.1.1.13
	OPENBSD_2_7:1.1.1.13.0.4
	OPENBSD_2_7_BASE:1.1.1.13
	OPENBSD_2_6:1.1.1.13.0.2
	OPENBSD_2_6_BASE:1.1.1.13
	cvs-1-10-7:1.1.1.13
	OPENBSD_2_5:1.1.1.12.0.2
	OPENBSD_2_5_BASE:1.1.1.12
	cvs-1-10-5:1.1.1.12
	OPENBSD_2_4:1.1.1.11.0.2
	OPENBSD_2_4_BASE:1.1.1.11
	cvs-1-10:1.1.1.11
	cvs-1-9-28:1.1.1.10
	OPENBSD_2_3:1.1.1.10.0.2
	OPENBSD_2_3_BASE:1.1.1.10
	cvs-1-9-26:1.1.1.10
	cvs-1-9-24:1.1.1.9
	OPENBSD_2_2:1.1.1.8.0.2
	OPENBSD_2_2_BASE:1.1.1.8
	cvs-1-9-10:1.1.1.8
	OPENBSD_2_1:1.1.1.7.0.2
	OPENBSD_2_1_BASE:1.1.1.7
	cvs-1-9-8:1.1.1.7
	cvs-1-9-6:1.1.1.7
	cvs-1-9-4:1.1.1.7
	cvs-1-9-2:1.1.1.6
	cvs-1-9:1.1.1.5
	OPENBSD_2_0:1.1.1.4.0.2
	OPENBSD_2_0_BASE:1.1.1.4
	cvs-1-8-1:1.1.1.4
	cvs-1-8:1.1.1.4
	cvs-1-7-2:1.1.1.3
	cvs-1-7-1:1.1.1.2
	cvs-1-6:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.12.19.09.21.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.19.09.21.26;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.01.30.00.16.59;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.04.27.19.40.47;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.05.06.22.18.10;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	96.10.18.03.34.32;	author tholo;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	97.02.21.06.36.04;	author tholo;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	97.03.18.01.54.58;	author tholo;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	97.06.28.03.27.49;	author tholo;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	98.02.22.08.19.50;	author tholo;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	98.03.12.06.57.16;	author tholo;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	98.08.22.20.50.00;	author tholo;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	99.02.28.21.30.24;	author tholo;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	99.09.10.05.06.01;	author tholo;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2001.02.10.18.57.18;	author tholo;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2001.09.28.22.45.35;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@First, read the README file.  If you're still happy...

CVS has been tested on the following platforms.  The most recent
version of CVS reported to have been tested is indicated, but more
recent versions of CVS probably will work too.  Please send updates to
this list to info-cvs@@prep.ai.mit.edu.

Alpha:
	DEC Alpha running OSF/1 version 1.3 using cc (about 1.4A2)
	DEC Alpha running OSF/1 version 2.0 (1.4.90)
	DEC Alpha running OSF/1 version 2.1 (about 1.4A2)
	DEC Alpha running OSF/1 version 3.0 (1.5.95) (footnote 7)
HPPA:
	HP 9000/710 running HP-UX 8.07A using gcc (about 1.4A2)
	HP 9000/715 running HP-UX 9.01 using gcc (about 1.4A2)
        HPPA 1.1 running HP-UX A.09.03 (1.5.95) (footnote 8)
	NextSTEP 3.3 (1.4.92, a few tweaks needed)
i386 family:
	Gateway P5-66 (pentium) running Solaris 2.4 using gcc (about 1.4A2)
	PC Clone running UnixWare v1.1.1 using gcc (about 1.4A2)
	PC Clone running ISC 4.0.1 (1.5.94)
	PC Clone running Fintronic Linux 1.2.5 (1.5)
	PC Clone running BSDI 2.0 (1.4.93) (footnote 5)
	PC Clone running Windows NT 3.51 (1.5 client)
	FreeBSD 2.0.5, i486, gcc (1.5.95)
	NextSTEP 3.3 (1.4.92, a few tweaks needed)
	SCO Unix 3.2.4.2 (1.4.93) (footnote 4)
	SCO OpenServer 5.0.0, "CC='cc -b elf' configure"
m68k:
	NextSTEP 3.3 (1.4.92, a few tweaks needed)
m88k:
	Data General AViiON running dgux 5.4R2.10 (1.5)
	Harris Nighthawk 5800 running CX/UX 7.1 (1.5) (footnote 6)
MIPS:
	DECstation running Ultrix 4.2a (1.4.90)
	DECstation running Ultrix 4.3 (1.5)
	SGI running Irix 4.0.5H using gcc and cc (about 1.4A2) (footnote 2)
	SGI running Irix 5.3 (1.4.93)
	SGI running Irix-6 (about 1.4.90) (footnote 3)
PowerPC or RS/6000:
	IBM RS/6000 running AIX 3.2.5 (cc=xlc, CVS 1.5)
	IBM RS/6000 running AIX 4.1 using gcc and cc (about 1.4A2) (footnote 1)
SPARC:
	Sun SPARC running SunOS 4.1.3, 4.1.2, and 4.1.1 (1.5)
	Sun SPARC running SunOS 4.1.3, w/ bundled K&R cc (1.5.94)
	Sun SPARCstation 10 running Solaris 2.3 using gcc and cc (about 1.4A2)
	Sun SPARCstation running Solaris 2.4 using gcc and cc (about 1.5.91)
	NextSTEP 3.3 (1.4.92, a few tweaks needed)

(footnote 1)
	AIX 4.1 systems fail to run "configure" due to bugs in their
	"/bin/sh" implementation.  You might want to try feeding the
	configure script to "bash" ported to AIX 4.1.  (about 1.4A2).

(footnote 2)
	Some Irix 4.0 systems may core dump in malloc while running
	CVS.  We believe this is a bug in the Irix malloc.  You can
	workaround this bug by linking with "-lmalloc" if necessary.
	(about 1.4A2).

(footnote 3)
        There are some warnings about pointer casts which can safely be
        ignored.  (about 1.4.90).

(footnote 4) Comment out the include of sys/time.h in src/server.c. (1.4.93)
	You also may have to make sure TIME_WITH_SYS_TIME is undef'ed.

(footnote 5) Change /usr/tmp to /var/tmp in src/server.c (2 places) (1.4.93).

(footnote 6) Build in ucb universe with COFF compiler tools.  Put
	/usr/local/bin first in PATH while doing a configure, make
	and install of GNU diffutils-2.7, rcs-5.7, then cvs-1.5.

(footnote 7) Manoj Srivastava <srivasta@@pilgrim.umass.edu> reports
        success with this configure command:
  CC=cc CFLAGS='-O2 -Olimit 2000 -std1' ./configure --verbose alpha-dec-osf

(footnote 8) Manoj Srivastava <srivasta@@pilgrim.umass.edu> reports
        success with this configure command:
  CC=cc CFLAGS='+O2 -Aa -D_HPUX_SOURCE' ./configure --verbose hppa1.1-hp-hpux

-------------------------------------------------------------------------------

Installation under Unix:

1)  Run "configure":

	$ ./configure

    You can specify an alternate destination to override the default with
    the --prefix option:

	$ ./configure --prefix=/usr/local/gnu

    or some path that is more appropriate for your site.  The default prefix
    value is "/usr/local", with binaries in sub-directory "bin", manual
    pages in sub-directory "man", and libraries in sub-directory "lib".

    This release of CVS also requires RCS commands to be installed in
    the user's PATH (or a path you have configured in src/options.h).
    If you don't have RCS, you will need to get it from GNU as well.
    It is best to get the version 5.6.0.1 (or later) version of RCS,
    available from prep.ai.mit.edu in the file
    pub/gnu/rcs-5.6.0.1.tar.Z.  It is best (although not essential) to
    avoid RCS versions 5.6.[5-7] beta because the rcsmerge therein
    defaults to -A instead of -E which affects the way CVS handles
    conflicts (this is fixed in RCS 5.6.8 and RCS 5.7).  Along with
    RCS, you will want to run GNU diff.  This will allow revision
    control of files with binary data (a real nice feature).  You will
    need at least version 1.15 of GNU diff for this to work.  Be sure
    that you configure RCS to work correctly with GNU diff to avoid
    other configuration problems.  If you are running RCS 5.7, you
    should be aware that you must supply a log message containing at
    least one non-whitespace character (CVS catches some, but not all,
    cases).  This has always been a problem but the symptoms are
    apparently more severe with RCS 5.7.  This is expected to be fixed
    in a future CVS release.

    If you are using the remote client, you will need a version of
    patch which understands unidiffs (such as any recent version of
    GNU patch).

    NOTE: The configure program will cache the results of the previous
    configure execution.  If you need to re-run configure from scratch, you
    may need to run "make distclean" first to remove the cached
    configuration information.

    NOTE ON CVS's USE OF NDBM:

	By default, CVS uses some built-in ndbm emulation code to allow
	CVS to work in a heterogeneous environment.  However, if you have
	a very large modules database, this may not work well.  You will
	need to edit src/options.h to turn off the MY_NDBM #define and
	re-run configure.  If you do this, the following comments apply.
	If not, you may safely skip these comments.

	If you configure CVS to use the real ndbm(3) libraries and
	you do not have them installed in a "normal" place, you will
	probably want to get the GNU version of ndbm (gdbm) and install
	that before running the CVS configure script.  Be aware that the
	GDBM 1.5 release does NOT install the <ndbm.h> header file included
	with the release automatically.  You may have to install it by hand.

	If you configure CVS to use the ndbm(3) libraries, you cannot
	compile CVS with GNU cc (gcc) on Sun-4 SPARC systems.  However, gcc
	2.0 may have fixed this limitation if -fpcc-struct-return is
	defined.  When using gcc on other systems to compile CVS, you *may*
	need to specify the -fpcc-struct-return option to gcc (you will
	*know* you have to if "cvs checkout" core dumps in some ndbm
	function).  You can do this as follows:

	    $ CC='gcc -fpcc-struct-return' ./configure

	for sh, bash, and ksh users and:

	    % setenv CC 'gcc -fpcc-struct-return'
	    % ./configure

	for csh and tcsh users.

    END OF NOTE FOR NDBM GUNK.

2)  Edit src/options.h.  Appropriate things to look at may be the
    invocation locations of programs like DIFF, GREP, RM, and SORT.
    Also glance at the default values for the environment variables
    that CVS uses, in particular, the RCSBIN variable, which holds the
    path to where the RCS programs live on your system.  The
    likelihood is that you don't have to change anything here, except
    perhaps adding the -a option to DIFF if you are using GNU diff.

3)  Try to build it:

	$ make

    This will (hopefully) make the needed CVS binaries within the "src"
    directory.  Send me your "config.status" file with your host type,
    operating system information, and make output if something fails for
    your system.

4)  Install the binaries/documentation:

	$ make install

    Depending on your installation's configuration, you may need to be
    root to do this.

5)  Take a look at the CVS documentation.

	$ man cvs

    and

	$ info cvs  

    See what it can do for you, and if it fits your environment (or can
    possibly be made to fit your environment).  If things look good,
    continue on...

6)  Setup the master source repository.  Choose a directory with ample disk
    space available for source files.  This is where the RCS ",v" files
    will be stored.  Note that this should be some shared directory for your
    site.  It should probably be auto-mounted, if you're running NFS.

    Say you choose "/src/master" as the root of your source repository.
    Run the "cvsinit" script to help you set it up.  It will ask you to
    enter the path to your CVSROOT area.  You would enter /src/master in
    this example.

	$ ./cvsinit

    The cvsinit script will setup a reasonable CVSROOT area to start with.
    It is also valuable to folks who already have a CVSROOT area setup from
    using earlier releases of CVS.  It assumes that you have installed CVS
    already (step 4) and that the RCS programs (co and ci) are in your
    PATH.  There are many ways to customize CVS for your site.  Read the
    cvs(5) manual page when you get the chance.

7)  Have all users of the CVS system set the CVSROOT environment variable
    appropriately to reflect the placement of your source repository.  If
    the above example is used, the following commands can be placed in
    user's ~/.profile, ~/.bash_profile, or ~/.login file:

	CVSROOT=/src/master; export CVSROOT

    for sh/bash/ksh users, or

	setenv CVSROOT /src/master

    for csh/tcsh users.  If these environment variables are not already set
    in your current shell, set them now (or source the login script you
    just edited).  You will need to have the CVSROOT environment variable
    set to continue on to the next step.

8)  It might be a good idea to jump right in and put the CVS distribution
    directly under CVS control.  From within the top-level directory of the
    CVS distribution (the one that contains this README file) do the
    following commands:

	$ make distclean
	$ cvs import -m 'CVS 1.4 distribution' cvs CVS CVS1_4

9)  Having done step 8, one should be able to checkout a fresh copy of the
    CVS distribution and hack away at the sources with the following command:

	$ cd
	$ cvs checkout cvs

    This will make the directory "cvs" in your current directory and
    populate it with the appropriate CVS files and directories.

10) Remember to edit the modules file manually when sources are checked in
    with "cvs import" or "cvs add".  A copy of the modules file for editing
    can usually be retrieved with the "cvs checkout modules" command, and
    definitely with the "cvs checkout CVSROOT" command.  See cvs(5).

11) Read the NEWS file to see what's new.

12) Hack away.

-------------------------------------------------------------------------------

Detailed info about your interaction with "configure":

The "configure" script and its interaction with its options and the
environment is described here.

Supported options are:
	--srcdir=DIR		Useful for compiling on many different
				machines sharing one source tree.
	--prefix=DIR		The root of where to install the
				various pieces of CVS (/usr/local).
	--exec_prefix=DIR	If you want executables in a
				host-dependent place and shared
				things in a host-independent place.

The following environment variables override configure's default
behaviour:
	CC			If not set, tries to use gcc first,
				then cc.  Also tries to use "-g -O"
				as options, backing down to -g
				alone if that doesn't work.
	INSTALL			If not set, tries to use "install", then
				"cp" as a final choice.
	RANLIB			If not set, tries to determine if "ranlib"
				is available, choosing "echo" if it doesn't
				appear to be.
	YACC			If not set, tries to determine if "bison"
				is available, choosing "yacc" if it doesn't
				appear to be.

-------------------------------------------------------------------------------
Installation under Windows NT:

You may find interesting information in windows-NT/README.

1) Using Microsoft Visual C++ version 2.1, open the project `cvsnt.mak',
   in the top directory of the CVS distribution.
2) Choose "Build cvs.exe" from the "Project" menu.
3) MSVC will place the executable file cvs.exe in WinDebug, or whatever
   your target directory is.
-------------------------------------------------------------------------------
@


1.1.1.1
log
@raw import of cvs-1.6
@
text
@@


1.1.1.2
log
@Upgrade to 1.7.1 snapshot
@
text
@a0 2
#ident	"$CVSid$"

d15 1
a15 1
	HP 9000/715 running HP-UX 9.01 (1.6)
d17 1
a17 1
	NextSTEP 3.3 (1.6.86)
d19 6
a24 5
	Solaris 2.4 using gcc (about 1.4A2)
	UnixWare v1.1.1 using gcc (about 1.4A2)
	ISC 4.0.1 (1.5.94)
	Linux (kernel 1.2.x) (1.6.86)
	BSDI 2.0 (1.4.93) (footnote 5)
d26 1
a26 1
	NextSTEP 3.3 (1.6.86)
a28 2
	Lynx 2.3.0 080695 (1.6.86) (footnote 9)
	Windows NT 3.51 (1.6.86 client-only)
d30 1
a30 3
	Sun 3 running SunOS 4.1.1_U1 w/ bundled K&R /usr/5bin/cc (1.6)
	NextSTEP 3.3 (1.6.86)
	Lynx 2.3.0 062695 (1.6.86) (footnote 9)
d36 1
a36 1
	DECstation running Ultrix 4.3 (1.6.86)
a39 1
	Siemens-Nixdorf RM600 running SINIX-Y (1.6)
d41 1
a41 2
	IBM RS/6000 running AIX 3.1 using gcc and cc (1.6.86)
	IBM RS/6000 running AIX 3.2.5 using xlc (1.5)
a42 1
	Lynx 2.3.1 120495 (1.6.86) (footnote 9)
d44 2
a45 1
	Sun SPARC running SunOS 4.1.x (1.6.86)
d48 1
a48 2
	Sun SPARC running Solaris 2.5 (2.5 beta?) (1.6.4)
	NextSTEP 3.3 (1.6.86)
a81 11
(footnote 9) 
    Had to configure with ./configure --host=<arch>-lynx.

    In src/cvs.h, protected the waitpid prototype with ifdef _POSIX_SOURCE.
    (I might try building with gcc -mposix -D_POSIX_SOURCE.)

    LynxOS has <dirent.h>, but you don't want to use it.
    You want to use <sys/dir.h> instead.
    So after running configure I had to undef HAVE_DIRENT_H and
    define HAVE_SYS_DIR_H.

d101 21
a121 30
    If you don't have RCS, you will need to get it from GNU as well.  It
    is best to get the version 5.7 (or later) version of RCS, available
    from prep.ai.mit.edu in the file pub/gnu/rcs-5.7.tar.gz.  It is best
    (although not essential) to avoid RCS versions 5.6.[5-7] beta
    because the rcsmerge therein defaults to -A instead of -E which
    affects the way CVS handles conflicts (this is fixed in RCS 5.6.8
    and RCS 5.7).

    Along with RCS, you will want to run GNU diffutils.  This will allow
    revision control of files with binary data (a real nice feature).
    You will need at least version 1.15 of GNU diff for this to work.
    The current version of GNU diffutils is 2.7, and it is also
    available from prep.ai.mit.edu in the file pub/gnu/diffutils-2.7.tar.gz.

    WARNING:  Be sure that you (have) configure(d) RCS to work correctly
    with GNU diff to avoid other configuration problems.

    Configure will attempt to discern the location of your most capable
    version of diff, and tries to find the GNU Diffutils version first.
    You can explicitly tell configure to use the diffutils that's
    installed in the same place you intend to install CVS:

	$ ./configure --with-diffutils

    Or, if you've installed it somewhere else, you can give configure
    the full pathname:

	$ ./configure --with-diffutils=/usr/gnu/bin/diff

    If you are using the remote client, you will need patch installed.
a127 8
    If you are using gcc and are planning to modify CVS, you may want to
    configure with -Wall, which can detect many programming errors.  This
    is not the default because it might cause spurious warnings, but at least
    on some machines, there are no spurious warnings.  For example:
	$ CFLAGS="-g -Wall" ./configure

    Try './configure --help' for further information on its usage.

d175 4
a178 29
    This will (hopefully) make the needed CVS binaries within the
    "src" directory.  If something fails for your system, and you want
    to submit a bug report, you may wish to include your
    "config.status" file, your host type, operating system and
    compiler information, make output, and anything else you think
    will be helpful.

3a)  Run the regression tests (optional).

    You may also wish to validate the correctness of the new binary by
    running the regression tests:

	$ make check

    Note that if your /bin/sh doesn't support shell functions, you'll
    have to try something like this, where "/bin/sh5" is replaced by the
    pathname of a shell which handles normal shell functions:

	$ make SHELL=/bin/sh5 check

    WARNING:  This test can take quite a while to run, esp. if your
    disks are slow or over-loaded.

    If you receive any un-expected output from the regression tests,
    it may indicate a bug in CVS (or might just indicate a problem
    running the tests).  If you choose to submit a bug report,
    relevant information to include might be your "config.status"
    file, your host type, operating system and compiler information,
    the contents of check.log, and any "make check" output.
d218 4
a221 5
7)  Have all users of the CVS system set the CVSROOT environment
    variable appropriately to reflect the placement of your source
    repository.  If the above example is used, the following commands
    can be placed in user's ~/.profile, ~/.bash_profile file; or in the
    site-wide /etc/profile:
d225 1
a225 2
    for sh/bash/ksh users, or place the following commands in the user's
    ~/.cshrc, ~/.login, or /etc/chsrc file:
d240 1
a240 1
	$ cvs import -m 'CVS 1.6 distribution' cvs CVS CVS-1_6
d262 1
a262 1
Detailed information about your interaction with "configure":
d265 1
a265 2
environment is described here.  For more detailed documentation about
"configure", please refer to the GNU Autoconf documentation.
a267 1

a274 1
	--with-diffutils[=PATH]	Assume use of GNU diffutils is possible.
a277 1

d283 1
a283 1
				"./install-sh" as a final choice.
@


1.1.1.3
log
@Latest public release from Cyclic; fixes numerous memory leaks and have
some performance improvements
@
text
@a18 1
        HPPA 1.1 running HP-UX A.09.04 (1.7.1)
d24 1
a24 1
	Linux (kernel 1.2.x) (1.7.1)
a37 1
	Data General AViiON running dgux 5.4R3.10 (1.7.1)
d119 31
a149 11
    the user's PATH (or a path you have configured in src/options.h,
    or a path specified with the -b option).  If you don't have RCS,
    you will need to get it from GNU as well.  It is best to get the
    version 5.7 (or later) version of RCS, available from
    prep.ai.mit.edu in the file pub/gnu/rcs-5.7.tar.gz.

    If you want version control of files with binary data, make sure
    that the RCS configure script finds GNU diff 1.15 or later and
    notices that diff supports the -a option.  CVS itself is much less
    picky about which version of diff it uses, and you shouldn't need
    to worry about that.
d157 4
a160 1
    configure with -Wall; see the file HACKING for details.
d200 1
a200 1
    invocation locations of programs like DIFF and GREP.
d203 3
a205 1
    path to where the RCS programs live on your system.
d340 1
@


1.1.1.4
log
@New CVS release from Cyclic Software
@
text
@d8 1
a8 2
this list to bug-cvs@@prep.ai.mit.edu (doing so in the form of a diff
to this file is encouraged).
a14 1
	DEC Alpha running OSF/1 version 3.2 (1.7+obvious patch)
a17 1
	HPPA running HP-UX 10.01 (1.7)
a28 1
	NeXTSTEP 3.3 (1.7), (footnote 10)
d32 1
a32 3
	Windows NT 3.51 (1.7.87 client-only)
	QNX 4 (1.7 + obvious patches)
	OS/2 Version 3 using IBM C/C++ Tools 2.01 (1.7.86 with patches)
a35 1
	NeXTSTEP 3.3 (1.7), (footnote 10)
d45 1
a45 1
	SGI running Irix 5.3 (1.7)
d50 1
a50 1
	IBM RS/6000 running AIX 3.2.5 (1.7.87)
a58 1
	NeXTSTEP 3.3 (1.7), (footnote 10)
a102 6
(footnote 10) Ralf E. Stranzenbach <ralf@@reswi.ruhr.de>
    I've made some modifications to "filesubr.c" to deal with NFS
    mounted directories (and those funny .nfs* files). This patch
    should be used whenever the programmers "sandbox" is located on
    a NFS mounted device --- at least on NeXTSTEP.

d120 1
a120 1
    If you are using server or local CVS, RCS needs to be installed in
d214 3
a216 5
    be aware that, as with all bug reports, you may or may not get a
    response, and your odds might be better if you include enough information
    to reproduce the bug, an analysis of what is going wrong (if you have
    the time and ability to provide one), etc.  The check.log file is the
    first place to look.
d237 18
a254 4
6)  Set up the master source repository.  See the "Setting up the repository"
    section of cvs.texinfo for details; the one-line summary is (if you
    are putting the repository in /src/master):
    $ cvs -d /src/master init
d280 1
a280 1
	$ cvs import -m 'CVS 1.6 distribution' cvs CVS_DIST CVS-1_6
d291 4
a294 2
10) You may wish to customize the various administrative files, in particular
    modules.  See cvs.texinfo for details.
@


1.1.1.5
log
@New release from Cyclic Software
@
text
@d1 2
d9 1
a9 4
to this file is encouraged).  "tested" means, at a minimum, that CVS
compiles and appears to work on simple (manual) testing.  In many
cases it also means "make check" and/or "make remotecheck" passes, but
we don't try to list the platforms for which that is true.
d13 1
a13 1
	DEC Alpha running OSF/1 version 2.0 (1.8)
a16 1
	DEC Alpha running VMS 6.2 (1.8.85 client-only)
d19 1
a19 1
	HPPA running HP-UX 9 (1.8)
d23 1
a23 2
	HPPA 9000/735 running HP-UX A.09.05 (1.8.87)
	NextSTEP 3.3 (1.7)
d27 2
a28 3
	Unixware 2.1 (1.8.86)
	ISC 4.0.1 (1.8.87)
	Linux (kernel 1.2.x) (1.8.86)
d31 4
a34 3
	NextSTEP 3.3 (1.7)
	SCO Unix 3.2.4.2, gcc 2.7.2 (1.8.87) (footnote 4)
	SCO OpenServer 5 (1.8.86)
d36 1
a36 2
	Windows NT 3.51 (1.8.86 client; 1.8.3 local)
	Windows 95 (1.8.86 client and local)
d38 1
a38 1
	OS/2 Version 3 using IBM C/C++ Tools 2.01 (1.8.86 + patches)
d40 3
a42 2
	Sun 3 running SunOS 4.1.1_U1 w/ bundled K&R /usr/5bin/cc (1.8.86+)
	NextSTEP 3.3 (1.7)
d50 1
a50 1
	DECstation running Ultrix 4.3 (1.8.85)
d52 1
a52 1
	SGI running Irix 5.3 using gcc 2.7.2 (1.8.87)
d57 1
a57 1
	IBM RS/6000 running AIX 3.2.5 (1.8)
d61 1
a61 1
	Sun SPARC running SunOS 4.1.x (1.8.87)
d64 3
a66 3
	Sun SPARC running Solaris 2.5 (1.8.87)
	NextSTEP 3.3 (1.7)
	Sun SparcClassing running Linux 2.0.17, gcc 2.7.2 (1.8.87)
d111 6
a154 10
    If you have Kerberos 4 installed, you can specify the location of
    the header files and libraries using the --with-krb4=DIR option.
    DIR should be a directory with subdirectories include and lib
    holding the Kerberos 4 header files and libraries, respectively.
    The default value is /usr/kerberos.

    If you want to enable support for encryption over Kerberos, use
    the --enable-encryption option.  This option is disabled by
    default.

d212 3
a214 6
    running the regression tests.  If they succeed, that is nice to
    know.  However, if they fail, it doesn't tell you much.  Often it
    will just be a problem with running the tests on your machine,
    rather than a problem with CVS.  Unless you will have the time to
    determine which of the two it is in case of failure, you might
    want to save yourself the time and just not run the tests.
d216 17
a232 1
    If you want to run the tests, see the file TESTS for more information.
@


1.1.1.6
log
@New release from Cyclic Software
@
text
@d17 1
a17 1
	DEC Alpha running OSF/1 version 3.2 (1.9)
a18 2
Cray:
	J90 running unicos 9 (CVS version unknown; Oct 1996) (footnote 10)
d34 1
a34 1
	FreeBSD 2.1.5-stable (1.8.87)
d45 1
a45 1
	NextSTEP 3.3p1 (1.8.87)
a69 3
VAX:
	VAX running VMS 6.2 (1.9+patches, client-only)
	  (see README.VMS for information on necessary hacks).
a113 5
(footnote 10)
    remove CLIENT_SUPPORT and SERVER_SUPPORT from config.h
    remove md5.o from lib/Makefile
    remove "#include "regex.h" from cvs.h

d116 1
a116 3
Installation under Unix (if you got a binary distribution from
somewhere, install it according to procedure for that binary
distribution, then skip to step 5):
a129 12

    A normal build of CVS will create an executable which supports
    local, server, or client CVS (if you don't know the difference,
    it is described in the Repository chapter of doc/cvs.texinfo).  If
    you do not intend to use client or server CVS, you may want to
    prevent these features from being included in the executable you
    build. You can do this with the --disable-client and
    --disable-server options:

	$ ./configure --disable-client --disable-server

    Typically this can reduce the size of the executable by around 30%.
@


1.1.1.7
log
@New release from Cyclic Software
@
text
@d20 1
a20 2
	J90 (CVS 970215 snapshot)
	T3E (CVS 970215 snapshot)
a41 1
	Windows NT 4.0 (1.9 client and local)
d44 1
a44 1
	OS/2 Version 3 using IBM C/C++ Tools 2.01 (1.8.86 + patches, client)
a94 3
	(This should no longer be needed; CVS doesn't have /usr/tmp in
	src/server.c any more.  Has anyone tried a more recent version
	on BSDI?  If so, please report it so we can update this file).
d119 5
d160 1
a160 5
    prep.ai.mit.edu in the file pub/gnu/rcs-5.7.tar.gz.  If you do not
    have RCS version 5.x (for example, if you are using the old RCS
    shipped with some versions of HPUX), CVS will probably fail to work
    entirely.  To find out what version of RCS you have, invoke "co -V".
    If it fails to print a version number, it is an old version.
@


1.1.1.8
log
@Latest version from Cyclic Software
@
text
@d60 1
a60 1
	SGI running Irix-6.2 (1.9.8)
d89 4
d170 1
a170 2
    to worry about that.  If you are using GNU diff 2.6 or 2.7, you may
    want to know about a (subtle) bug described in doc/DIFFUTILS-2.7-BUG.
d228 1
a228 1
    invocation locations of programs like DIFF.
@


1.1.1.9
log
@Latest version from Cyclic
@
text
@a2 92
First you need to obtain and install the CVS executables.  If you got
a distribution which contains executables, consult the installation
instructions for that distribution.  If you got source code, do not
panic.  On many platforms building CVS from source code is a
straightforward process requiring no programming knowledge.  See the
section BUILDING FROM SOURCE CODE at the end of this file, which
includes a list of platforms which have been tested.

-------------------------------------------------------------------------------

1) Take a look at the CVS documentation, if desired.  For most
   purposes you want doc/cvs.texinfo, also known as _Version Management
   with CVS_ by Per Cederqvist et al.  Looking at it might be as simple
   as "info cvs" but this will depend on your installation; see README
   for more details.

   See what CVS can do for you, and if it fits your environment (or can
   possibly be made to fit your environment).  If things look good,
   continue on.  Alternately, just give CVS a try first then figure out
   what it is good for.

2) Set the CVSROOT environment variable to where you want to put your
   source repository.  See the "Setting up the repository" section of
   the Cederqvist manual for details, but the quick summary is just to
   pick some directory.  We'll use /src/master as an example.  For
   users of a POSIX shell (sh/bash/ksh) on unix, the following
   commands can be placed in user's ~/.profile, ~/.bash_profile file;
   or in the site-wide /etc/profile:

       CVSROOT=/src/master; export CVSROOT

   For C shell users on unix place the following commands in the
   user's ~/.cshrc, ~/.login, or /etc/chsrc file:

       setenv CVSROOT /src/master

   For Windows users, supposing the repository will be in
   d:\src\master, place the following line in c:\autoexec.bat.  On
   Windows 95, autoexec.bat might not already exist.  In that case,
   just create a new file containing the following line.

       set CVSROOT=:local:d:\src\master

   If these environment variables are not already set in your current
   shell, set them now by typing the above line at the command prompt
   (or source the login script you just edited).
   The instructions for the remaining steps assume that you have set
   the CVSROOT environment variable.

3) Create the master source repository.  Again, the details are in
   the "Setting up the repository" section of cvs.texinfo; the
   one-line summary is:

       $ cvs init

   In this and subsequent examples we use "$" to indicate the command
   prompt; do not type the "$".

4) It might be a good idea to jump right in and put some sources or
   documents directly under CVS control.  From within the top-level
   directory of your source tree, run the following commands:

       $ cvs import -m "test distribution" ccvs CVS_DIST CVS-TEST

   (Those last three items are, respectively, a repository location, a
   "vendor tag", and a "release tag".  You don't need to understand
   them yet, but read the section "Starting new projects" in the
   Cederqvist manual for details).

5) Having done step 4, one should be able to checkout a fresh copy of the
   sources you just imported and hack away at the sources with the
   following command:

      $ cd
      $ cvs checkout ccvs

   This will make the directory "ccvs" in your current directory and
   populate it with the appropriate files and directories.

6) You may wish to customize the various administrative files, in particular
   modules.  See the Cederqvist manual for details.

7) Read the NEWS file to see what's new.

8) Hack away.

-------------------------------------------------------------------------------

BUILDING FROM SOURCE CODE

Tested platforms

d6 5
a10 6
this list to bug-cvs@@gnu.org (doing so in the form of a diff
to this file, or at least exact suggested text, is encouraged).
"tested" means, at a minimum, that CVS compiles and appears to work on
simple (manual) testing.  In many cases it also means "make check"
and/or "make remotecheck" passes, but we don't try to list the
platforms for which that is true.
a17 1
	DEC Alpha running Digital UNIX v4.0C using gcc 2.7.2.2 (1.9.14)
d25 1
a28 2
	HPPA running HP-UX 10.01 (1.7)
	HPPA running HP-UX 10.20 using gcc 2.7.2.2 (1.9.14)
a35 1
	Linux (kernel 2.0.x, RedHat 4.2) (1.9)
a40 1
	Sequent Dynix/PTX 4.1.4 (1.9.20 or so + patches)
a42 2
	Windows NT 3.51 service pack 4 (1.9)
	Windows NT 3.51 service pack 5 (1.9) -- DOES NOT WORK (footnote 11)
d44 2
a45 2
	Windows 95 (1.9 client and local)
	QNX (1.9.1 + patches for strippath() and va_list)
a46 2
	OS/2 Version 3 using EMX 0.9c (1.9.10 + patches, client)
	OS/2 Version 3 using Watcom version ? (? - has this been tested?)
a59 1
	SGI running Irix 6.2 using SGI MIPSpro 6.2 and beta 7.2 compilers (1.9)
a66 1
	Lynx 2.5 (1.9) (footnote 10)
d68 1
a68 1
	Sun SPARC running SunOS 4.1.x using gcc 2.7.2.1 (1.9.14)
a71 1
	Sun SPARC running Solaris 2.5.1 using gcc 2.7.2.2 (1.9.14)
d73 1
a73 1
	Sun SPARC running Linux 2.0.17, gcc 2.7.2 (1.8.87)
a119 10
(footnote 10)
    Had to compile with "make LIBS=-lbsd" (to get gethostbyname
    and getservbyname).

(footnote 11)
    when I do a `cvs init' I get this message:
      ci: 'RCS/loginfo,v' is not a regular file
      ci:  RCS/loginfo,v: Invalid argument
      cvs [init aborted]: failed to checkin n:/safe/CVSROOT/loginfo

d122 3
a124 1
Building from source code under Unix:
d151 17
a167 2
    Unlike previous versions of CVS, you do not need to install RCS
    or GNU diff.  
d224 5
a228 2
2)  Edit src/options.h.  The defaults should be reasonable, and in fact
    if you are lazy you can safely skip this step.
d260 59
d354 1
a354 2

Building from source code under Windows NT/95:
d358 2
a359 3
1) Using Microsoft Visual C++ 5.x, open the project `cvsnt.dsp',
   in the top directory of the CVS distribution.  If you have an older
   version of Visual C++, take a look at windows-NT/README.
d361 1
a361 1
3) MSVC will place the executable file cvs.exe in WinRel, or whatever
a362 15

-------------------------------------------------------------------------------

Building from source code under other platforms:

For OS/2, see os2/README and emx/README.

For VMS, see README.VMS

For Macintosh, see macintosh/README.MacCVS

For a Java client, see jCVS (which is a separate package from CVS
itself, but which might be preferable to the Macintosh port mentioned
above, for example).

@


1.1.1.10
log
@Latest version from Cyclic
@
text
@d146 1
a146 1
	OS/2 Version 3 using EMX 0.9c (1.9.22, client)
@


1.1.1.11
log
@Latest version from Cyclic
@
text
@d121 1
a121 1
	HPPA running HP-UX 9.05 (1.9)
d123 1
a123 1
	HPPA running HP-UX 10.20 (1.9, 1.9.14)
a128 1
	Unixware 7 (1.9.29)
d136 1
a136 1
	SCO OpenServer 5 (1.9.29)
d167 1
a167 1
	IBM RS/6000 running AIX 4.1 (1.9)
d181 5
@


1.1.1.12
log
@Latest version from Cyclic
@
text
@a110 1
	Alpha running alpha-dec-osf4.0 (1.10)
a112 1
	Alpha running NetBSD 1.2E (1.10)
a126 1
	Solaris 2.6 (1.9)
d132 1
a132 2
	Linux (kernel 2.0.x, RedHat 4.2) (1.10)
	Linux (kernel 2.0.x, RedHat 5.x) (1.10)
d137 1
a137 2
	SCO OpenServer 5.0.5 (1.10.2)
	Sequent DYNIX/ptx4.0 (1.10 or so) (remove -linet)
a152 1
	NetBSD/mac68k (1.9.28)
d159 1
a159 1
	DECstation running Ultrix 4.3 (1.10)
d161 1
a161 1
	SGI running Irix 5.3 (1.10)
a163 1
	SGI running IRIX 6.4 (1.10)
d172 1
a172 1
	Sun SPARC running SunOS 4.1.x (1.10)
a176 1
	Sun UltraSPARC running Solaris 2.6 using gcc 2.8.1 (1.10)
@


1.1.1.13
log
@Latest version from Cyclic
@
text
@a177 1
	MkLinux DR3 GENERIC #6 (1.10.5.1) (presumably LinuxPPC too)
@


1.1.1.14
log
@Latest from Cyclic Software
@
text
@d125 1
a125 1
	HPPA running HP-UX 10.20 (1.10.7)
d137 1
a137 1
	BSDI 4.0 (1.10.7)
a170 1
	SGI running IRIX 6.5 (1.10.7)
a175 1
	IBM RS/6000 running AIX 4.3 (1.10.7)
a184 1
	Sun SPARC running Solaris 2.6 (1.10.7)
d200 5
@


1.1.1.15
log
@Latest from Cyclic Software
@
text
@a136 2
	Linux (kernel 2.2.x, RedHat 6.x) (1.10.8)
	Linux (kernel 2.2.x, RedHat 7.x) (1.11)
a148 1
	Windows NT 4.0 (1.11 client and local - build & test, but no test suite)
a286 8
    If you want to disable automatic dependency tracking in the makefiles,
    use the '--disable-dependency-tracking' option:

	$ ./configure --disable-dependency-tracking

    This avoids problems on some platforms.  See the note at the end of this
    file on BSD.

d393 1
a393 1
Building from source code under Windows NT/95/98/2000:
a403 8
* From the top level directory, with MSVC++ 6.0 installed, something like the
following also works:

	C:\> vcvars32
	C:\> nmake /f cvsnt.mak CFG="cvsnt - Win32 Debug"

* You might also try http://wincvs.org & http://www.cvsnt.org

d412 1
a412 2
For Macintosh, see macintosh/README.MacCVS, or, since that file isn't there
anymore, you might try http://wincvs.org .
a416 14

                                  **** ****

Builds are breaking on some systems (notably,
BSD/OS thor.sdrc.com 4.0.1 BSDI BSD/OS 4.0.1 Kernel #3: Thu Mar  9 11:29:16 EST 2000
) due to Automake's dependency tracking code.  The work around for this is to
comile without it by passing the '--disable-dependency-tracking' option to
configure:

	$ ./configure --disable-dependency-tracking

This will allow a compile but make will no longer be tracking header
dependencies.  This means that if you make any changes to header files you may
have to run 'make clean' before running a 'make' to get everything to compile.
@


