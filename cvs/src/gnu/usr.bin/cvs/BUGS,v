head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.10.0.70
	OPENBSD_6_0_BASE:1.1.1.10
	OPENBSD_5_9:1.1.1.10.0.66
	OPENBSD_5_9_BASE:1.1.1.10
	OPENBSD_5_8:1.1.1.10.0.68
	OPENBSD_5_8_BASE:1.1.1.10
	OPENBSD_5_7:1.1.1.10.0.60
	OPENBSD_5_7_BASE:1.1.1.10
	OPENBSD_5_6:1.1.1.10.0.64
	OPENBSD_5_6_BASE:1.1.1.10
	OPENBSD_5_5:1.1.1.10.0.62
	OPENBSD_5_5_BASE:1.1.1.10
	OPENBSD_5_4:1.1.1.10.0.58
	OPENBSD_5_4_BASE:1.1.1.10
	OPENBSD_5_3:1.1.1.10.0.56
	OPENBSD_5_3_BASE:1.1.1.10
	OPENBSD_5_2:1.1.1.10.0.54
	OPENBSD_5_2_BASE:1.1.1.10
	OPENBSD_5_1_BASE:1.1.1.10
	OPENBSD_5_1:1.1.1.10.0.52
	OPENBSD_5_0:1.1.1.10.0.50
	OPENBSD_5_0_BASE:1.1.1.10
	OPENBSD_4_9:1.1.1.10.0.48
	OPENBSD_4_9_BASE:1.1.1.10
	OPENBSD_4_8:1.1.1.10.0.46
	OPENBSD_4_8_BASE:1.1.1.10
	OPENBSD_4_7:1.1.1.10.0.42
	OPENBSD_4_7_BASE:1.1.1.10
	OPENBSD_4_6:1.1.1.10.0.44
	OPENBSD_4_6_BASE:1.1.1.10
	OPENBSD_4_5:1.1.1.10.0.40
	OPENBSD_4_5_BASE:1.1.1.10
	OPENBSD_4_4:1.1.1.10.0.38
	OPENBSD_4_4_BASE:1.1.1.10
	OPENBSD_4_3:1.1.1.10.0.36
	OPENBSD_4_3_BASE:1.1.1.10
	OPENBSD_4_2:1.1.1.10.0.34
	OPENBSD_4_2_BASE:1.1.1.10
	OPENBSD_4_1:1.1.1.10.0.32
	OPENBSD_4_1_BASE:1.1.1.10
	OPENBSD_4_0:1.1.1.10.0.30
	OPENBSD_4_0_BASE:1.1.1.10
	OPENBSD_3_9:1.1.1.10.0.28
	OPENBSD_3_9_BASE:1.1.1.10
	OPENBSD_3_8:1.1.1.10.0.26
	OPENBSD_3_8_BASE:1.1.1.10
	OPENBSD_3_7:1.1.1.10.0.24
	OPENBSD_3_7_BASE:1.1.1.10
	OPENBSD_3_6:1.1.1.10.0.22
	OPENBSD_3_6_BASE:1.1.1.10
	OPENBSD_3_5:1.1.1.10.0.20
	OPENBSD_3_5_BASE:1.1.1.10
	OPENBSD_3_4:1.1.1.10.0.18
	OPENBSD_3_4_BASE:1.1.1.10
	OPENBSD_3_3:1.1.1.10.0.16
	OPENBSD_3_3_BASE:1.1.1.10
	OPENBSD_3_2:1.1.1.10.0.14
	OPENBSD_3_2_BASE:1.1.1.10
	OPENBSD_3_1:1.1.1.10.0.12
	OPENBSD_3_1_BASE:1.1.1.10
	OPENBSD_3_0:1.1.1.10.0.10
	OPENBSD_3_0_BASE:1.1.1.10
	cvs-1-11-1p1:1.1.1.10
	OPENBSD_2_9:1.1.1.10.0.8
	OPENBSD_2_9_BASE:1.1.1.10
	cvs-1-11:1.1.1.10
	OPENBSD_2_8:1.1.1.10.0.6
	OPENBSD_2_8_BASE:1.1.1.10
	OPENBSD_2_7:1.1.1.10.0.4
	OPENBSD_2_7_BASE:1.1.1.10
	OPENBSD_2_6:1.1.1.10.0.2
	OPENBSD_2_6_BASE:1.1.1.10
	cvs-1-10-7:1.1.1.10
	OPENBSD_2_5:1.1.1.9.0.4
	OPENBSD_2_5_BASE:1.1.1.9
	cvs-1-10-5:1.1.1.9
	OPENBSD_2_4:1.1.1.9.0.2
	OPENBSD_2_4_BASE:1.1.1.9
	cvs-1-10:1.1.1.9
	cvs-1-9-28:1.1.1.8
	OPENBSD_2_3:1.1.1.8.0.2
	OPENBSD_2_3_BASE:1.1.1.8
	cvs-1-9-26:1.1.1.8
	cvs-1-9-24:1.1.1.8
	OPENBSD_2_2:1.1.1.7.0.2
	OPENBSD_2_2_BASE:1.1.1.7
	cvs-1-9-10:1.1.1.7
	OPENBSD_2_1:1.1.1.6.0.2
	OPENBSD_2_1_BASE:1.1.1.6
	cvs-1-9-8:1.1.1.6
	cvs-1-9-6:1.1.1.5
	cvs-1-9-4:1.1.1.5
	cvs-1-9-2:1.1.1.4
	cvs-1-9:1.1.1.3
	OPENBSD_2_0:1.1.1.2.0.2
	OPENBSD_2_0_BASE:1.1.1.2
	cvs-1-8-1:1.1.1.2
	cvs-1-8:1.1.1.2
	cvs-1-7-2:1.1.1.2
	cvs-1-7-1:1.1.1.2
	cvs-1-6:1.1.1.1
	cyclic:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.12.19.09.21.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.19.09.21.26;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.01.30.00.17.02;	author tholo;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.10.18.03.34.34;	author tholo;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.02.21.06.36.06;	author tholo;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.03.18.01.55.00;	author tholo;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	97.04.21.04.24.55;	author tholo;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	97.06.28.03.27.51;	author tholo;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	98.02.22.08.19.52;	author tholo;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	98.08.22.20.50.06;	author tholo;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.09.10.05.06.02;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@* `cvs checkout -d nested/dir/path <module>' just doesn't work.  The
  simpler version -- `cvs checkout -d single-dir <module>' works,
  however.


* CVS leaves .#mumble files around when a conflict occurs.  (Note:
  this is intentional and is documented in doc/cvs.texinfo.  Of course
  whether it is a good idea is a separate question).


* pcl-cvs doesn't like it when you try to check in a file which isn't
  up-to-date.  The messages produced by the server perhaps don't match
  what pcl-cvs is looking for.


* From: Roland McGrath <roland@@gnu.ai.mit.edu>
  To: Cyclic CVS Hackers <cyclic-cvs@@cyclic.com>
  Subject: weird bug
  Date: Sat, 25 Mar 1995 16:41:41 -0500
  X-Windows: Even your dog won't like it.

  I just noticed some droppings on my disk from what must be a pretty weird
  bug in remote CVS.

  In my home directory on a repository machine I use, I find:

  drwxr-xr-x   4 roland   staff         512 Mar  7 14:08 cvs-serv28962
  drwxr-xr-x   4 roland   staff         512 Mar  7 14:11 cvs-serv28978
  drwxr-xr-x   4 roland   staff         512 Mar  7 15:13 cvs-serv29141

  OK, so these are leftover cruft from some cvs run that got aborted.
  Well, it should clean up after itself, but so what.

  The last one is pretty dull; the real weirdness is the contents of the
  first two directories.

  duality 77 # ls -RF cvs-serv28978/
  CVS/		cvs-serv28978/

  cvs-serv28978/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978:
  arpa/

  cvs-serv28978/cvs-serv28978/arpa:
  CVS/		cvs-serv28978/

  cvs-serv28978/cvs-serv28978/arpa/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978:
  assert/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert:
  CVS/		cvs-serv28978/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978:
  bare/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare:
  CVS/		cvs-serv28978/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978:
  conf/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf:
  CVS/		cvs-serv28978/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978:
  crypt/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt:
  CVS/		cvs-serv28978/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978:
  csu/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978/csu:
  CVS/		cvs-serv28978/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978/csu/CVS:
  Entries	    Repository

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978/csu/cvs-serv28978:
  ctype/

  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978/csu/cvs-serv28978/ctype:
  CVS/		cvs-serv28978/

  [...]

  ls: cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978/csu/cvs-serv28978/ctype/cvs-serv28978/dirent/cvs-serv28978/elf/cvs-serv28978/gnu/cvs-serv28978/gnulib/cvs-serv28978/grp/cvs-serv28978/hurd/cvs-serv28978/hurd/hurd/cvs-serv28978/inet/cvs-serv28978/inet/arpa/cvs-serv28978/inet/netinet[...]/cvs-serv28978/posix/cvs-serv28978/posix/glob/cvs-serv28978/posix/gnu/cvs-serv28978/posix/sys/cvs-serv28978/protocols/cvs-serv28978/pwd/cvs-serv28978/resolv/cvs-serv28978/resolv/arpa/cvs-serv28978/resolv/sys/cvs-serv28978/resource/cvs-serv28978/resource/sys/cvs-serv28978/rpc/cvs-serv28978/setjmp/cvs-serv28978/signal/cvs-serv28978/signal/sys/cvs-serv28978/socket/cvs-serv28978/socket: File name too long
  cvs-serv28978/cvs-serv28978/arpa/cvs-serv28978/assert/cvs-serv28978/bare/cvs-serv28978/conf/cvs-serv28978/crypt/cvs-serv28978/csu/cvs-serv28978/ctype/cvs-serv28978/dirent/cvs-serv28978/elf/cvs-serv28978/gnu/cvs-serv28978/gnulib/cvs-serv28978/grp/cvs-serv28978/hurd/cvs-serv28978/hurd/hurd/cvs-serv28978/inet/cvs-serv28978/inet/arpa/cvs-serv28978/inet/netinet[...]/cvs-serv28978/posix/glob/cvs-serv28978/posix/gnu/cvs-serv28978/posix/sys/cvs-serv28978/protocols/cvs-serv28978/pwd/cvs-serv28978/resolv/cvs-serv28978/resolv/arpa/cvs-serv28978/resolv/sys/cvs-serv28978/resource/cvs-serv28978/resource/sys/cvs-serv28978/rpc/cvs-serv28978/setjmp/cvs-serv28978/signal/cvs-serv28978/signal/sys/cvs-serv28978/socket/cvs-serv28978:


* From: billr@@mpd.tandem.com (Bill Robertson)
  Subject: Problem with rtag and the -D option
  Date: Fri, 17 Mar 1995 10:53:29 -0600 (CST)

  I have been trying to use the -D option to specify a date for tagging, but
  rtag does not recognize the -D option. It is documented to do so and I've
  tested the use of -D with cvs update and cvs diff and it works fine there.
  

*         We need some version numbers really badly.  Are there some
  (and Charles Hannum is just not including them in his reports), or do
  we simply have no reliable way to distinguish between the various
  versions of rCVS people on the list are running?
  
          Now that I think of it, version numbers present a problem when
  people can update their sources anytime and rebuild.  I think the
  solution is to increment a minor version number *every* time a bug is
  fixed, so we can identify uniquely what someone is running when they
  submit a report.  This implies recording the version increments in the
  ChangeLog; that way we can just look to see where a particular version
  lies in relation to the flow of changing code.
  
          Should we be doing same with Guppy?  I guess not -- it's only
  important when you have people who are updating directly from your
  development tree, which is the case with the remote-cvs folks.
  
          Thoughts?


* (Charles Hannum <mycroft@@ai.mit.edu>) has these bugs:

  I just tossed remote CVS at a fairly large source tree that I already
  had, and noticed a few problems:

  1) server.c assumes that /usr/tmp is a valid default for the place to
  store files uploaded from the client.  There are a number of systems
  that now use /var/tmp.  These should probably be detected by autoconf.

  2) The server deals rather ungracefully with the tmp directory
  becoming full.

  3) There's some oddness with relative paths in Repository files that
  causes the directory prefix to be added twice; e.g. if I have CVSROOT
  set to `machine:/this/dir', and I try to update in a directory whose
  Repository file says `src/bin', the server looks in
  `/this/dir/machine:/this/dir/src/bin'.

* From: "Charles M. Hannum" <mycroft@@ai.mit.edu>
  To: jimb@@duality.gnu.ai.mit.edu, roland@@duality.gnu.ai.mit.edu
  Subject: Serious flaw in remote CVS
  Date: Wed, 22 Feb 1995 20:54:36 -0500

  I just found a major flaw in the current implementation.  Because the
  sockets are not changed to non-blocking mode, write(2)s can hang.  In
  some cases, this happens on both sides at the same time, with the
  socket buffers full in both directions.  This causes a deadlock,
  because both processes are stuck in I/O wait and thus never drain
  their input queues.
  
  Until this is fixed, I can't use it.  I'll look at the problem myself
  at some point, but I don't know when.
  

  From: "Charles M. Hannum" <mycroft@@ai.mit.edu>
  To: remote-cvs@@cyclic.com
  Cc: jimb@@totoro.bio.indiana.edu
  Subject: Re: forwarded message from Charles M. Hannum
  Date: Wed, 22 Feb 1995 22:07:07 -0500
  
  FYI, this happened because the tmp directory on the server became
  full.  Somehow the server started interpreting the files the client
  was sending as commands, and started spewing tons of errors.
  Apparently the errors are sent with blocking I/O, or something, and
  thus allowed the deadlock to happen.


* From: "Charles M. Hannum" <mycroft@@ai.mit.edu>
  To: remote-cvs@@cyclic.com
  Subject: Regarding that relative path problem
  Date: Thu, 23 Feb 1995 02:41:51 -0500

  This is actually more serious.  If you have `bar.com:/foo' as your CVS
  root directory, then:

  1) When you check things out, the Repository files will contain
  `/foo/...' (i.e. without the machine name), which makes little sense.

  2) If you instead have a relative path, when the Repository file is
  read, `bar.com:/foo' is prepended.  This is sent to the server, but
  confuses it, because it's not expecting the machine name to be
  prepended.

  A slightly klugy fix would be to have the client prepend the machine
  name when writing a new Repository file, and strip it off before
  sending one to the server.  This would be backward-compatible with the
  current arrangement.


* From: "Charles M. Hannum" <mycroft@@ai.mit.edu>
  To: remote-cvs@@cyclic.com
  Subject: Still one more bug
  Date: Sat, 25 Feb 1995 17:01:15 -0500
  
  mycroft@@duality [1]; cd /usr/src/lib/libc
  mycroft@@duality [1]; cvs diff -c2 '-D1 day ago' -Dnow
  cvs server: Diffing .
  cvs server: Diffing DB
  cvs [server aborted]: could not chdir to DB: No such file or directory
  mycroft@@duality [1];
  
  `DB' is an old directory, which no longer has files in it, and is
  removed automatically when I use the `-P' option to checkout.
  
  This error doesn't occur when run locally.
  
  P.S.  Is anyone working on fixing these bugs?


* From: Roland McGrath <roland@@gnu.ai.mit.edu>
  To: Cyclic CVS Hackers <cyclic-cvs@@cyclic.com>
  Subject: bizarre failure mode
  Date: Tue, 7 Mar 95 14:17:28 -0500
  
  This is pretty weird:
  
  CVS_SERVER='TMPDIR=. /usr/local/bin/cvs' ../cvs-build/src/cvs update -q
  cvs [server aborted]: could not get working directory: Result too large
  [Exit 1]
  asylum 29 % grep 'Result too large' /usr/include/sys/errno.h 
  #define ERANGE          34              /* Result too large */
  
  Now, getcwd fails with ERANGE when the buffer is too small.  But I don't
  know why that would be the case; I don't think there are exceptionally long
  directory names involved.  It would be robust to notice ERANGE and use a
  bigger buffer.  But I suspect something weirder is going on.
  
  The repository in question in duality.gnu.ai.mit.edu:/gd4/gnu/cvsroot/libc.
  
  Send me a PGP-signed message if you want the password to use the machine
  where the problem showed up.
@


1.1.1.1
log
@raw import of cvs-1.6
@
text
@@


1.1.1.2
log
@Upgrade to 1.7.1 snapshot
@
text
@a0 14
To report bugs send mail to bug-cvs@@prep.ai.mit.edu, or run the "cvsbug"
program and fill out the template:

	$ cvsbug

The "cvsbug" program is installed in the same location as the "cvs"
program.  If your installation failed, you may need to run "cvsbug"
directly out of the "src" directory as "src/cvsbug.sh".  This is also
the procedure for submitting suggested changes to CVS--note that all
submitted changes may be distributed under the terms of the GNU Public
License, so if you don't like this, don't submit them.



d17 1
a17 1
  To: Cyclic CVS Hackers <info-cvs@@prep.ai.mit.edu>
d173 1
a173 1
  To: info-cvs@@prep.ai.mit.edu
d186 1
a186 1
  To: info-cvs@@prep.ai.mit.edu
d208 1
a208 1
  To: info-cvs@@prep.ai.mit.edu
d228 1
a228 1
  To: Cyclic CVS Hackers <info-cvs@@prep.ai.mit.edu>
@


1.1.1.3
log
@New release from Cyclic Software
@
text
@d1 2
a2 2
See the README file for information on how to report bugs (and what
will happen to your bug reports if you do).
d4 1
a4 6
The following is a list of some of the known bugs.  It may or may not
be comprehensive.  We would dearly love for people to volunteer to
help us keep it up to date (for starters, if you notice any
inaccuracies, please let bug-cvs know as described in README).  There
are some other reported bugs in MINOR-BUGS; the difference, at least
in theory, is that those bugs are less serious.
d6 6
a12 24
* For platform-specific information (in some cases including known
bugs), see README.VMS, windows-NT/README, or os2/README.  There is no
similar file for the unix-like operating systems (not yet, at least).
This file also might contain some platform-specific bugs.


* The "&" feature of the modules file does not work correctly with
client/server CVS.  The documented behavior (which is implemented by
non-client/server CVS) is the correct one.


* The -m option to "cvs add" does not work with client/server CVS.
CVS will accept the option, but it won't actually set the
file's description.


* cvs update walks into a user's work directory if there's a directory
  of the same name in the repository even if the user's directory
  doesn't yet have a CVS admin sub-directory.  This can greatly confuse
  users who try to add the same directory at nearly the same time.


* 'cvs admin' dumped core when files were missing from working directory
  (and from the repository)?
d20 5
a29 30
* From: billr@@mpd.tandem.com (Bill Robertson)
  Subject: Problem with rtag and the -D option
  Date: Fri, 17 Mar 1995 10:53:29 -0600 (CST)

  I have been trying to use the -D option to specify a date for tagging, but
  rtag does not recognize the -D option. It is documented to do so and I've
  tested the use of -D with cvs update and cvs diff and it works fine there.

* Defining RELATIVE_REPOS is said to not work with client/server CVS.

* From: "Charles M. Hannum" <mycroft@@ai.mit.edu>
  To: info-cvs@@prep.ai.mit.edu
  Subject: Still one more bug
  Date: Sat, 25 Feb 1995 17:01:15 -0500
  
  mycroft@@duality [1]; cd /usr/src/lib/libc
  mycroft@@duality [1]; cvs diff -c2 '-D1 day ago' -Dnow
  cvs server: Diffing .
  cvs server: Diffing DB
  cvs [server aborted]: could not chdir to DB: No such file or directory
  mycroft@@duality [1];
  
  `DB' is an old directory, which no longer has files in it, and is
  removed automatically when I use the `-P' option to checkout.
  
  This error doesn't occur when run locally.
  
  P.S.  Is anyone working on fixing these bugs?


d121 119
@


1.1.1.4
log
@New release from Cyclic Software
@
text
@d18 3
a20 26
* Importing files as binary (using wrappers to specify that--like
binwrap-1 in the testsuite) will not work on systems which need to
translate between text and binary files (that is, it will work only on
unix).  (for the cause, look at send_modified and note that it knows
nothing about whether wrappers specified binary-ness).  The file will
be marked as binary, but the contents will be incorrect.  The
workaround is (a) import the binary files (but not text files, unless
they have been converted to unix text files) on unix, or (b) check in
the correct contents for the binary files after the import is done.


* Some people have reported seeing the message "dying gasps from %s
unexpected" (where %s is the name of your server) when using
client/server CVS.  One person reported that this had to do with using
pserver and trying to run a program not in the PATH (which is set up
by inetd, I think) from one of the *info scripts.  But noone has
carefully tracked this down (is it caused by something in the server
writing to stdout or stderr when it shouldn't?  But then wouldn't the
"dying gasps" message be preceded by "warning: unrecognized response
`%s' from cvs server"?).


* "make remotecheck" sometimes fails on test 187a3 with
    cvs server: in directory .:
    cvs [server aborted]: *PANIC* administration files missing
This does not happen every time.  (-kingdon, Nov 96, Red Hat linux 3.0.3).
@


1.1.1.5
log
@New release from Cyclic Software
@
text
@a65 19
* The following bug was reported against CVS 1.9:

    Create a module named test with a file named test in it.

      cactus:sfavor> cvs get test
      cvs checkout: Updating test
      U test/test
      cactus:sfavor> cd test
      cactus:sfavor> cvs get test
      cvs checkout: cannot chdir to test: Not a directory
      cvs checkout: ignoring module test
      Exit 1
      cactus:sfavor> cvs update
      cvs update: Updating .
      rcs.c:2139: failed assertion `rev == NULL || isdigit (*rev)'
      Abort (core dumped)
      Exit 134


@


1.1.1.6
log
@Latest release from Cyclic Software
@
text
@d18 9
a26 10
* Importing files as binary (using -kb or wrappers to specify
binaryness; see binwrap-1 in the testsuite for the latter) will not
work on systems which need to translate between text and binary files
(that is, it will work only on unix).  (for the cause, look at
send_modified and note that it knows nothing about whether wrappers
specified binary-ness).  The file will be marked as binary, but the
contents will be incorrect.  The workaround is (a) import the binary
files (but not text files, unless they have been converted to unix
text files) on unix, or (b) check in the correct contents for the
binary files after the import is done.
@


1.1.1.7
log
@Latest version from Cyclic Software
@
text
@d18 10
a27 8
* Exporting binary files on non-unix clients with "cvs export" does
not work.  The workaround is to use "cvs checkout" instead.  If you
are thinking of fixing this, check out the comment "For cvs export,
assume it is a text file." in client.c.


* Wrappers do not work client/server, and there are a variety of other
bugs and annoyances with wrappers.
@


1.1.1.8
log
@Latest version from Cyclic
@
text
@d1 2
a2 2
See the Cederqvist manual (cvs.texinfo) for information on how to
report bugs (and what will happen to your bug reports if you do).
d7 3
a9 3
inaccuracies, please let bug-cvs know as described in the Cederqvist
manual).  There are some other reported bugs in MINOR-BUGS; the
difference, at least in theory, is that those bugs are less serious.
d18 4
a21 4
* One cannot specify some files as binary in a "cvs import" using
CVSROOT/cvswrappers (for why, note that client_process_import_file has
no way of knowing about CVSROOT/cvswrappers which is off on the
server).
d24 1
a24 15
* I don't think that "cvs add" honors any of the -k wrappers, at least
not in client/server mode.  I would think it should.  Getting
CVSROOT/cvswrappers to work would presumably best be done by keeping a
copy of it in the CVS directory on the client, as has also been
discussed for CVS/Template, &c.  Getting a client-side .cvswrappers to
work is a separate issue.


* Need more work on the procedure for fixing it if a binary file is
accidentally added in text mode (sanity.sh test cases, better
documentation, probably update and/or admin -kb should update
the -k setting in CVS/Entries).


* Wrappers (-t/-f) do not work client/server, and there are a variety of other
d28 9
a36 15
* If your login name contains a space or various other characters
(particularly an issue on Windows), CVS will have trouble (it will
write invalid RCS files, probably).  The fix would be to have CVS
change such characters to underscores before writing them to the RCS
file.  Furthermore, the LOGNAME or USER environment variables usually
won't override the system login name, so this can be hard to work
around.


* If you specify the -w global option to client/server CVS, it only
overrides a CVSREAD environment variable set on the client, not a
CVSREAD variable which was set on the server (for example, in .bashrc
when the server was run via rsh).  The fix of course will be to
provide a "Option-read-write" request which sends -w, in addition to
"Global_option -r" which sends -r.
d58 5
@


1.1.1.9
log
@Latest version from Cyclic
@
text
@d18 14
@


1.1.1.10
log
@Latest version from Cyclic
@
text
@d98 2
@


