head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.2
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2017.07.24.19.22.49;	author robert;	state Exp;
branches;
next	1.7;
commitid	UaRI0KjiFSBzsJzP;

1.7
date	2017.07.10.21.30.37;	author espie;	state Exp;
branches;
next	1.6;
commitid	XYfTVJ6bHQf1fCDD;

1.6
date	2017.06.16.10.25.54;	author espie;	state Exp;
branches;
next	1.5;
commitid	Yn1L9TuGVODhqMDI;

1.5
date	2017.02.15.21.22.53;	author miod;	state Exp;
branches;
next	1.4;
commitid	MlRJHIWv0s0jTl16;

1.4
date	2016.11.08.17.39.12;	author tb;	state Exp;
branches;
next	1.3;
commitid	W1UPKCW8N0De6000;

1.3
date	2013.07.01.14.22.08;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.01.06.56.03;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.09.13.26.56;	author robert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@install gcc, g++ as gcc and g++ instead of cc, c++ and create links
to the latter on non-clang architectures and make sure we build gcc
with itself because clang won't be able to build it

ok naddy@@
@
text
@# $FreeBSD: src/gnu/lib/libobjc/Makefile,v 1.34.2.1 2009/08/03 08:13:06 kensmith Exp $
# $OpenBSD: Makefile,v 1.7 2017/07/10 21:30:37 espie Exp $

OBJCDIR=${.CURDIR}/../../../gcc/libobjc
GCCDIR=	${.CURDIR}/../../../gcc/gcc
GCCLIB=	${.CURDIR}/../../../gcc

.PATH: ${OBJCDIR}/objc ${OBJCDIR}

LIB=	objc

SRCS=	archive.c class.c encoding.c gc.c hash.c init.c linking.m misc.c \
	nil_method.c NXConstStr.m Object.m objects.c Protocol.m sarray.c \
	selector.c sendmsg.c thr.c thr-objc.c exception.c

INCS=	encoding.h hash.h objc-api.h objc-decls.h objc-list.h objc.h runtime.h \
	sarray.h thr.h typedstream.h NXConstStr.h Object.h Protocol.h

CFLAGS+= -DHAVE_GTHR_DEFAULT -DIN_GCC -DIN_TARGET_LIBS
CFLAGS+= -I. -I${.CURDIR}/../cc_tools
CFLAGS+= -I${OBJCDIR}/objc -I${OBJCDIR}
CFLAGS+= -I${GCCDIR}/config -I${GCCDIR}
CFLAGS+= -I${GCCLIB}/include
CFLAGS+= -fexceptions -frandom-seed=RepeatabilityConsideredGood
.if ${MACHINE_ARCH} == "m88k"
CPPFLAGS+=	-DSJLJ_EXCEPTIONS=1
.endif
OBJCFLAGS= -fgnu-runtime ${CFLAGS}

GENHDRS= runtime-info.h

runtime-info.h:
	`${CC} --print-prog-name=cc1obj` -print-objc-runtime-info \
	    < /dev/null > ${.TARGET}

.for H in tconfig.h tm.h config.h options.h gthr-default.h unwind.h
$H: ${.CURDIR}/../cc_tools/Makefile
	${MAKE} -f ${.ALLSRC} MFILE=${.ALLSRC} GCCDIR=${GCCDIR} ${.TARGET}
GENHDRS+=	$H
.endfor

CLEANFILES+=	${GENHDRS} cs-* optionlist
SRCS+=		${GENHDRS}

.if !empty(INCS)
includes: ${INCS}
	@@test -d ${DESTDIR}/usr/include/objc || \
	    mkdir ${DESTDIR}/usr/include/objc
	${INSTALL} -C -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} ${.ALLSRC} \
		${DESTDIR}/usr/include/objc
.endif

BUILDFIRST = ${GENHDRS}

.include <bsd.lib.mk>

.SUFFIXES: .m

# ObjC
OBJC?=		${CC}
OBJCFLAGS?=	${CFLAGS} ${CPPFLAGS} -Wno-import
COMPILE.m?=	${OBJC} ${OBJCFLAGS} -c
LINK.m?=	${OBJC} ${OBJCFLAGS} ${LDFLAGS}

.m:
	${LINK.m} -o ${.TARGET} ${.IMPSRC} ${LDLIBS}
.m.o:
	${COMPILE.m} ${.IMPSRC}
.m.a:
	${COMPILE.m} ${.IMPSRC}
	${AR} ${ARFLAGS} $@@ $*.o
	rm -f $*.o
.m.po:
	${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}.o
	${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	rm -f ${.TARGET}.o
.m.so:
	${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	rm -f ${.TARGET}.o
@


1.7
log
@remove misc. depend and yacc nits that no longer matter.
okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.6 2017/06/16 10:25:54 espie Exp $
d60 1
a60 1
OBJC?=		cc
@


1.6
log
@mark files as BUILDFIRST, or write explicit dependencies, so that most
programs will build even without a make depend first.
okay tb@@ millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.5 2017/02/15 21:22:53 miod Exp $
a52 1
${OBJS}: ${GENHDRS}
@


1.5
log
@gcc4 on m88k still uses sjlj exceptions, as did arm before EABI.
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.4 2016/11/08 17:39:12 tb Exp $
d54 1
@


1.4
log
@Set the permissions of the specs file explicitly so that they don't
depend on the umask.  Install headers and info files with group bin
like all the other headers and info files.

ok stefan
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.3 2013/07/01 14:22:08 mpi Exp $
d25 3
@


1.3
log
@Unbreak "make includes" with an empty /usr/include by creating the 'objc'
directory if it doesn't exist.

ok sthen@@, espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.2 2012/09/01 06:56:03 guenther Exp $
d46 1
a46 1
	${INSTALL} -C -o ${BINOWN} -g ${LOCALEGRP} -m ${NONBINMODE} ${.ALLSRC} \
@


1.2
log
@Clean up the correct file to fix parallel make failures

ok deraadt@@
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.1 2010/05/09 13:26:56 robert Exp $
d44 2
@


1.1
log
@Makefile for libobjc for gcc4
@
text
@d2 1
a2 1
# $OpenBSD$
d71 1
a71 1
	rm -f $*.o
d75 1
a75 1
	rm -f $*.o
@

