head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.62
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.60
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.58
	OPENBSD_5_0:1.2.0.56
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.54
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.52
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.48
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.50
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.46
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.44
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.42
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.40
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.38
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.36
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.34
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.32
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.30
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.28
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.26
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.24
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.07.05.21.31.45;	author miod;	state dead;
branches;
next	1.2;

1.2
date	98.02.15.18.48.42;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/*	$OpenBSD: bignum-copy.c,v 1.2 1998/02/15 18:48:42 niklas Exp $	*/

/* bignum_copy.c - copy a bignum
   Copyright (C) 1987, 1990, 1991, 1992 Free Software Foundation, Inc.
   
   This file is part of GAS, the GNU Assembler.
   
   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.
   
   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */

#ifndef lint
static char rcsid[] = "$OpenBSD: bignum-copy.c,v 1.2 1998/02/15 18:48:42 niklas Exp $";
#endif

#include "as.h"

/*
 *			bignum_copy ()
 *
 * Copy a bignum from in to out.
 * If the output is shorter than the input, copy lower-order littlenums.
 * Return 0 or the number of significant littlenums dropped.
 * Assumes littlenum arrays are densely packed: no unused chars between
 * the littlenums. Uses memcpy() to move littlenums, and wants to
 * know length (in chars) of the input bignum.
 */

/* void */
int
    bignum_copy(in, in_length, out, out_length)
register LITTLENUM_TYPE *in;
register int in_length; /* in sizeof(littlenum)s */
register LITTLENUM_TYPE *out;
register int out_length; /* in sizeof(littlenum)s */
{
	int significant_littlenums_dropped;
	
	if (out_length < in_length) {
		LITTLENUM_TYPE *p; /* -> most significant (non-zero) input
				      littlenum. */ 
		
		memcpy((void *) out, (void *) in,
		      out_length << LITTLENUM_SHIFT); 
		for (p = in + in_length - 1; p >= in; --p) {
			if (* p) break;
		}
		significant_littlenums_dropped = p - in - in_length + 1;
		
		if (significant_littlenums_dropped < 0) {
			significant_littlenums_dropped = 0;
		}
	} else {
		memcpy((char *) out, (char *) in,
		      in_length << LITTLENUM_SHIFT);

		if (out_length > in_length) {
			memset((char *) (out + out_length),
			      '\0', (out_length - in_length) << LITTLENUM_SHIFT);
		}

		significant_littlenums_dropped = 0;
	}
	
	return(significant_littlenums_dropped);
} /* bignum_copy() */

/* end of bignum-copy.c */
@


1.2
log
@Merge of NetBSD changes + $OpenBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 1
a23 1
static char rcsid[] = "$OpenBSD: bignum-copy.c,v 1.1.1.1 1995/10/18 08:38:57 deraadt Exp $";
@


1.1
log
@Initial revision
@
text
@d1 2
d23 1
a23 1
static char rcsid[] = "$Id: bignum-copy.c,v 1.3 1993/10/02 20:57:18 pk Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
