head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.62
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.60
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.58
	OPENBSD_5_0:1.2.0.56
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.54
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.52
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.48
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.50
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.46
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.44
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.42
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.40
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.38
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.36
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.34
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.32
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.30
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.28
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.26
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.24
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.07.05.21.31.45;	author miod;	state dead;
branches;
next	1.2;

1.2
date	98.02.15.18.48.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.58;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.58;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/*	$OpenBSD: flo-copy.c,v 1.2 1998/02/15 18:48:47 niklas Exp $	*/

/* flonum_copy.c - copy a flonum
   Copyright (C) 1987, 1990, 1991, 1992 Free Software Foundation, Inc.
   
   This file is part of GAS, the GNU Assembler.
   
   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.
   
   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

#ifndef lint
static char rcsid[] = "$OpenBSD: flo-copy.c,v 1.2 1998/02/15 18:48:47 niklas Exp $";
#endif

#include "as.h"

void
    flonum_copy(in, out)
FLONUM_TYPE *in;
FLONUM_TYPE *out;
{
	int in_length;	/* 0 origin */
	int out_length;	/* 0 origin */
	
	out->sign = in->sign;
	in_length = in->leader - in->low;
	
	if (in_length < 0) {
		out->leader = out->low - 1; /* 0.0 case */
	} else {
		out_length = out->high - out->low;
		/*
		 * Assume no GAPS in packing of littlenums.
		 * I.e. sizeof(array) == sizeof(element) * number_of_elements.
		 */
		if (in_length <= out_length) {
			{
				/*
				 * For defensive programming, zero any high-order littlenums we don't need.
				 * This is destroying evidence and wasting time, so why bother???
				 */
				if (in_length < out_length) {
memset((char *)(out->low + in_length + 1), '\0', out_length - in_length);
				}
			}
			memcpy((void *)(out->low), (void *)(in->low), (int)((in_length + 1) * sizeof(LITTLENUM_TYPE)));
			out->exponent = in->exponent;
			out->leader   = in->leader - in->low + out->low;
		} else {
			int	shorten;		/* 1-origin. Number of littlenums we drop. */
			
			shorten = in_length - out_length;
			/* Assume out_length >= 0 ! */
			memcpy((void *)( out->low), (void *)(in->low + shorten), (int)((out_length + 1) * sizeof(LITTLENUM_TYPE)));
			out->leader = out->high;
			out->exponent = in->exponent + shorten;
		}
	} /* if any significant bits */
} /* flonum_copy() */

/* end of flonum_copy.c */
@


1.2
log
@Merge of NetBSD changes + $OpenBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 1
a23 1
static char rcsid[] = "$OpenBSD: flo-copy.c,v 1.1.1.1 1995/10/18 08:38:58 deraadt Exp $";
@


1.1
log
@Initial revision
@
text
@d1 2
d23 1
a23 1
static char rcsid[] = "$Id: flo-copy.c,v 1.1 1993/10/02 20:57:29 pk Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
