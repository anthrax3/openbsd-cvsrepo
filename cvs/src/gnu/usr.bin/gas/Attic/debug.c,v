head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.62
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.60
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.58
	OPENBSD_5_0:1.2.0.56
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.54
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.52
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.48
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.50
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.46
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.44
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.42
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.40
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.38
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.36
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.34
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.32
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.30
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.28
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.26
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.24
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.07.05.21.31.45;	author miod;	state dead;
branches;
next	1.2;

1.2
date	98.02.15.18.48.44;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/*	$OpenBSD: debug.c,v 1.2 1998/02/15 18:48:44 niklas Exp $	*/

/* This file is debug.c

   Copyright (C) 1987-1992 Free Software Foundation, Inc.
   
   This file is part of GAS, the GNU Assembler.
   
   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.
   
   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

/* Routines for debug use only.  */

#ifndef lint
static char rcsid[] = "$OpenBSD: debug.c,v 1.2 1998/02/15 18:48:44 niklas Exp $";
#endif

#include "as.h"
#include "subsegs.h"

dmp_frags()
{
    frchainS *chp;
    char *p;
    
    for ( chp=frchain_root; chp; chp = chp->frch_next ){
	switch ( chp->frch_seg ){
	case SEG_DATA:
	    p ="Data";
	    break;
	case SEG_TEXT:
	    p ="Text";
	    break;
	default:
	    p ="???";
	    break;
	}
	printf("\nSEGMENT %s %d\n", p, chp->frch_subseg);
	dmp_frag( chp->frch_root,"\t");
    }
}

dmp_frag( fp, indent )
    struct frag *fp;
    char *indent;
{
    for ( ; fp; fp = fp->fr_next ){
	printf("%sFRAGMENT @@ 0x%x\n", indent, fp);
	switch( fp->fr_type ){
	case rs_align:
	    printf("%srs_align(%d)\n",indent, fp->fr_offset);
	    break;
	case rs_fill:
	    printf("%srs_fill(%d)\n",indent, fp->fr_offset);
	    printf("%s", indent);
	    var_chars( fp, fp->fr_var + fp->fr_fix );
	    printf("%s\t repeated %d times,",
		   indent, fp->fr_offset);
	    printf(" fixed length if # chars == 0)\n");
	    break;
	case rs_org:
	    printf("%srs_org(%d+sym @@0x%x)\n",indent,
		   fp->fr_offset, fp->fr_symbol);
	    printf("%sfill with ",indent);
	    var_chars( fp, 1 );
	    printf("\n");
	    break;
	case rs_machine_dependent:
	    printf("%smachine_dep\n",indent);
	    break;
	default:
	    printf("%sunknown type\n",indent);
	    break;
	}
	printf("%saddr=%d(0x%x)\n",indent,fp->fr_address,fp->fr_address);
	printf("%sfr_fix=%d\n",indent,fp->fr_fix);
	printf("%sfr_var=%d\n",indent,fp->fr_var);
	printf("%sfr_offset=%d\n",indent,fp->fr_offset);
	printf("%schars @@ 0x%x\n",indent,fp->fr_literal);
	printf("\n");
    }
}

var_chars( fp, n )
    struct frag *fp;
    int n;
{
    unsigned char *p;
    
    for ( p=(unsigned char*)fp->fr_literal; n; n-- , p++ ){
	printf("%02x ", *p );
    }
}

/* end of debug.c */
@


1.2
log
@Merge of NetBSD changes + $OpenBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 1
a26 1
static char rcsid[] = "$OpenBSD: debug.c,v 1.1.1.1 1995/10/18 08:38:57 deraadt Exp $";
@


1.1
log
@Initial revision
@
text
@d1 2
d26 1
a26 1
static char rcsid[] = "$Id: debug.c,v 1.1 1993/10/02 20:57:24 pk Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
