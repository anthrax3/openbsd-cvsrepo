head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.62
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.60
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.58
	OPENBSD_5_0:1.3.0.56
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.54
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.52
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.48
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.50
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.46
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.44
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.42
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.40
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.38
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.36
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.34
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.32
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.30
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.28
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.26
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.24
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.22
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.20
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.18
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.07.05.21.31.46;	author miod;	state dead;
branches;
next	1.3;

1.3
date	98.02.28.00.52.14;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.02.15.18.49.29;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.39.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.39.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/*	$OpenBSD: obj-generic.h,v 1.3 1998/02/28 00:52:14 niklas Exp $	*/

/* This file is obj-generic.h
   Copyright (C) 1987-1992 Free Software Foundation, Inc.
   
   This file is part of GAS, the GNU Assembler.
   
   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.
   
   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

/*
 * This file is obj-generic.h and is intended to be a template for
 * object format specific header files. 
 */

/* define an obj specific macro off which target cpu back ends may key. */
#define OBJ_GENERIC 1

/* include whatever target cpu is appropriate. */
#include "targ-cpu.h"

/*
 * SYMBOLS
 */

/*
 * If your object format needs to reorder symbols, define this.  When
 * defined, symbols are kept on a doubly linked list and functions are
 * made available for push, insert, append, and delete.  If not defined,
 * symbols are kept on a singly linked list, only the append and clear
 * facilities are available, and they are macros.
 */

/* #define SYMBOLS_NEED_PACKPOINTERS */

/*  */
typedef struct {
	void *nothing;
} obj_symbol_type; /* should be the format's symbol structure */

typedef void *object_headers;

/* symbols have names */
#define S_GET_NAME(s)		("foo") /* get the name of a symbolP */
#define S_SET_NAME(s,v)		;
    /* symbols have segments */
#define S_GET_SEGMENT(s)	(SEG_UNKNOWN)
#define S_SET_SEGMENT(s,v)	;
    /* symbols may be external */
#define S_IS_EXTERNAL(s)	(0)
#define S_SET_EXTERNAL(s)	;
    
    /* symbols may or may not be defined */
#define S_IS_DEFINED(s)		(0)


#define OBJ_EMIT_LINENO(a,b,c) /* must be *something*.  This no-op's it out. */

/*
 * Local Variables:
 * comment-column: 0
 * fill-column: 131
 * End:
 */

/* end of obj-generic.h */
@


1.3
log
@A merge of the  late resolution of symbols code Ian Lance Taylor added to
gas2 back in 1993.  gcc2.8 generates code which relies on this.
@
text
@d1 1
a1 1
/*	$OpenBSD: obj-generic.h,v 1.2 1998/02/15 18:49:29 niklas Exp $	*/
@


1.2
log
@Merge of NetBSD changes + $OpenBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a59 3
    /* symbols have a value */
#define S_GET_VALUE(s)		(0)
#define S_SET_VALUE(s,v)	;
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

