head	1.3;
access;
symbols
	OPENBSD_6_1:1.1.0.26
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.24
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.18
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.20
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.12
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.01.18.00.01;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	ngjKvROP309ZePr5;

1.2
date	2017.06.21.20.29.39;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	6bzYub9Agr5ZfEn0;

1.1
date	2011.04.24.20.19.25;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@provide both TRAP and NOP values for our architectures, then change
elf.sc to FILL .text segment with TRAP.  .init/.fini remain NOP FILL.

It is possible that some of these TRAP values aren't perfect yet, but
they can be changed.  When doing so also change the ld.script and gap.o
TRAP value.

discussions with mortimer, ok kettenis
@
text
@. ${srcdir}/emulparams/elf_x86_64.sh
. ${srcdir}/emulparams/elf_obsd.sh
NOP=0x090909090
TRAP=0xcccccccc
@


1.2
log
@Intra-segment traps instead of nops.  Similar to kernel change, further
reduction in nopsleds in code and data segments (if those data segments
ever become X, that is)
ok mlarkin
@
text
@d3 2
a4 1
NOP=0xcccccccc
@


1.1
log
@A first attempt at merging our local changes and fixes into the 2.17 codebase.
ld(1) needs a lot more work, as the upstream code evolved significantly since
2.15, mostly due to changes in PIE binaries layout, and we had already
diverged significantly to implement W^X.
@
text
@d3 1
@

