head	1.2;
access;
symbols
	BINUTILS_2_17_RELEASE:1.1.1.1 FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.04.24.22.11.52;	author miod;	state dead;
branches;
next	1.1;

1.1
date	2011.04.24.20.14.46;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.04.24.20.14.46;	author miod;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Grr, this was supposed to be an import without the testsuite directories,
really.
@
text
@# Test for warnings when producing load hazards (instructions that
# reference the target of load one stage further down the pipeline.
# Written by Ben Elliston (bje@@redhat.com)

# Run GAS and check that it emits the desired warning for the test case.
# Arguments:
#   file -- name of the test case to assemble.
#   testname -- a string describing the test.
#   warnpattern -- a regular expression, suitable for use by the Tcl
#     regexp command, to decide if the warning string was emitted by
#     the assembler to stderr.

proc iq2000_warning_test { file testname {warnpattern ""} } {
    global comp_output

    gas_run $file "" ">/dev/null"
    verbose "output was $comp_output" 2

    if {$warnpattern == ""} {
	if {$comp_output == ""} { pass $testname } else { fail $testname }
	return
    }

    if {[regexp "Warning: $warnpattern" $comp_output]} {
	pass $testname
    } else {
	fail $testname
    }
}

if [istarget iq2000*-*-*] {
    foreach file [glob -nocomplain -- $srcdir/$subdir/hazard*.s] {
	set file [file tail $file]
	switch -- $file {
	    "hazard0.s" {
		set warnpattern "operand references R10 of previous load"
	    }
	    "hazard1.s" {
		set warnpattern "operand references R1 of previous load"
	    }
	    "hazard2.s" {
		set warnpattern "operand references R2 of previous load"
	    }
	    "hazard3.s" {
		set warnpattern "instruction implicitly accesses R31 of previous load"
	    }
	    "hazard4.s" {
		set warnpattern "operand references R10 of previous load"
	    }
	    "hazard5.s" {
		set warnpattern "operand references R8 of previous load"
	    }
	    default {
		error "no expected result specified for $file"
		return
	    }
	}
	iq2000_warning_test $file "assembler emits load hazard warning for $file" $warnpattern
    }

    set testname "assembler emits no warnings when there are no load hazards"
    iq2000_warning_test nohazard.s $testname
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Here comes the easter bunnytils 2.17 (the last version released against a
licence mere mortals can understand the terms of); will be connected to the
build on an arch-by-arch basis.

Testsuites and generated files have been intentionnaly omitted from this import.

Peer pressure and ok from at least drahn@@ pirofti@@ deraadt@@
@
text
@@
