head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.22
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.18
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.16
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.14
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.12
	OPENBSD_5_0:1.5.0.10
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.8
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.07.23.19.13.26;	author deraadt;	state dead;
branches;
next	1.5;
commitid	EcR8E7r0stjLUV4p;

1.5
date	2009.05.31.09.16.52;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.04.01.50;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.40;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.17.14;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.59;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.59;	author maja;	state Exp;
branches;
next	;


desc
@@


1.6
log
@delinked from tree, now it goes to the bit bucket
@
text
@#ifndef UCDOMAP_H
#define UCDOMAP_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifndef ALL_CHARSETS
#define ALL_CHARSETS 1
#endif

#include <UCkd.h>

#ifdef __cplusplus
extern "C" {
#endif
/*
 * [old comments:  - KW ]
 * consolemap.h
 *
 * Interface between console.c, selection.c and UCmap.c
 */
#define LAT1_MAP 0
#define GRAF_MAP 1
#define IBMPC_MAP 2
#define USER_MAP 3
/*
 * Some conventions I try to follow (loosely):
 *	[a-z]* only internal, names from linux driver code.
 *	UC_* to be only known internally.
 *	UC[A-Z]* to be exported to other parts of Lynx. -KW
 */ extern void UC_Charset_Setup(const char *UC_MIMEcharset,
				 const char *UC_LYNXcharset,
				 const u8 * unicount,
				 const u16 * unitable,
				 int nnuni,
				 struct unimapdesc_str replacedesc,
				 int lowest_eight,
				 int UC_rawuni,
				 int codepage);

    struct UC_charset {
	const char *MIMEname;
	const char *LYNXname;
	const u8 *unicount;
	const u16 *unitable;
	int num_uni;
	struct unimapdesc_str replacedesc;
	int uc_status;
	int LYhndl;
	int GN;
	int lowest_eight;
	int enc;
	int codepage;		/* codepage number, used by OS/2 font-switching code */
    };

    extern int UCNumCharsets;
    extern int UCInitialized;

    extern void UCInit(void);

/*
 * INSTRUCTIONS for adding new character sets which do not have Unicode tables.
 *
 * Several #defines below are declarations for charsets which need no tables
 * for mapping to Unicode - CJK multibytes, x-transparent, UTF8 - Lynx takes
 * care of them internally.
 *
 * The declaration's format is kept in chrtrans/XXX_uni.h - keep this in mind
 * when changing ucmaketbl.c, see also UC_Charset_Setup() above for details.
 */

    /*
     * There is no strict correlation for the next five, since the transfer
     * charset gets decoded into Display Char Set by the CJK code (separate from
     * Unicode mechanism).  For now we use the MIME name that describes what is
     * output to the terminal.  - KW
     */

/*----------------------------------------------------------------------------*/

#ifndef NO_CHARSET_euc_cn
#define NO_CHARSET_euc_cn !ALL_CHARSETS
#endif

#if NO_CHARSET_euc_cn
#define UC_CHARSET_SETUP_euc_cn	/* nothing */
#else
#define UC_CHARSET_SETUP_euc_cn UC_Charset_NoUctb_Setup("euc-cn","Chinese",\
       1, 128,UCT_ENC_CJK,0)
#endif

/*----------------------------------------------------------------------------*/

#ifndef NO_CHARSET_euc_jp
#define NO_CHARSET_euc_jp !ALL_CHARSETS
#endif

#if NO_CHARSET_euc_jp
#define UC_CHARSET_SETUP_euc_jp	/* nothing */
#else
#define UC_CHARSET_SETUP_euc_jp UC_Charset_NoUctb_Setup("euc-jp","Japanese (EUC-JP)",\
       1, 128,UCT_ENC_CJK,0)
#endif

/*----------------------------------------------------------------------------*/

#ifndef NO_CHARSET_shift_jis
#define NO_CHARSET_shift_jis !ALL_CHARSETS
#endif

#if NO_CHARSET_shift_jis
#define UC_CHARSET_SETUP_shift_jis	/* nothing */
#else
#define UC_CHARSET_SETUP_shift_jis UC_Charset_NoUctb_Setup("shift_jis","Japanese (Shift_JIS)",\
       1, 128,UCT_ENC_CJK,0)
#endif

/*----------------------------------------------------------------------------*/

#ifndef NO_CHARSET_euc_kr
#define NO_CHARSET_euc_kr !ALL_CHARSETS
#endif

#if NO_CHARSET_euc_kr
#define UC_CHARSET_SETUP_euc_kr	/* nothing */
#else
#define UC_CHARSET_SETUP_euc_kr UC_Charset_NoUctb_Setup("euc-kr","Korean",\
       1, 128,UCT_ENC_CJK,0)
#endif

/*----------------------------------------------------------------------------*/

#ifndef NO_CHARSET_big5
#define NO_CHARSET_big5 !ALL_CHARSETS
#endif

#if NO_CHARSET_big5
#define UC_CHARSET_SETUP_big5	/* nothing */
#else
#define UC_CHARSET_SETUP_big5 UC_Charset_NoUctb_Setup("big5","Taipei (Big5)",\
       1, 128,UCT_ENC_CJK,0)
#endif

/*----------------------------------------------------------------------------*/

    /*
     * Placeholder for non-translation mode.  - FM
     */

#ifndef NO_CHARSET_x_transparent
#define NO_CHARSET_x_transparent !ALL_CHARSETS
#endif

#if NO_CHARSET_x_transparent
#define UC_CHARSET_SETUP_x_transparent	/* nothing */
#else
#define UC_CHARSET_SETUP_x_transparent UC_Charset_NoUctb_Setup("x-transparent","Transparent",\
       0, 128,UCT_ENC_8BIT,0)
#endif

/*----------------------------------------------------------------------------*/

#ifndef NO_CHARSET_utf_8
#define NO_CHARSET_utf_8 !ALL_CHARSETS
#endif

#if NO_CHARSET_utf_8
#define UC_CHARSET_SETUP_utf_8	/* nothing */
#else
#define UC_CHARSET_SETUP_utf_8 UC_Charset_NoUctb_Setup("utf-8","UNICODE (UTF-8)",\
       0, 128,UCT_ENC_UTF8,-4)
#endif

#ifdef __cplusplus
}
#endif
#endif				/* UCDOMAP_H */
@


1.5
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@@


1.4
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@d14 3
d18 2
a19 2
 *  [old comments: - KW ]
 *  consolemap.h
d21 1
a21 1
 *  Interface between console.c, selection.c  and UCmap.c
a26 1

d28 1
a28 1
 *  Some conventions I try to follow (loosely):
d32 15
a46 17
 */
extern void UC_Charset_Setup PARAMS((
	CONST char *		UC_MIMEcharset,
	CONST char *		UC_LYNXcharset,
	CONST u8 *		unicount,
	CONST u16 *		unitable,
	int			nnuni,
	struct unimapdesc_str	replacedesc,
	int			lowest_eight,
	int			UC_rawuni,
	int			codepage));

struct UC_charset {
	CONST char *MIMEname;
	CONST char *LYNXname;
	CONST u8* unicount;
	CONST u16* unitable;
d54 2
a55 2
	int codepage;	/* codepage number, used by OS/2 font-switching code */
};
d57 2
a58 2
extern int UCNumCharsets;
extern int UCInitialized;
d60 1
a60 1
extern void UCInit NOARGS;
d63 1
a63 2
 *  INSTRUCTIONS for adding new character sets which do not have
 *              Unicode tables.
d65 3
a67 3
 *  Several #defines below are declarations for charsets which need no
 *  tables for mapping to Unicode - CJK multibytes, x-transparent, UTF8 -
 *  Lynx takes care of them internally.
d69 2
a70 3
 *  The declaration's format is kept in chrtrans/XXX_uni.h -
 *  keep this in mind when changing ucmaketbl.c,
 *  see also UC_Charset_Setup() above for details.
d73 6
a78 6
  /*
   *  There is no strict correlation for the next five, since the transfer
   *  charset gets decoded into Display Char Set by the CJK code (separate
   *  from Unicode mechanism).  For now we use the MIME name that describes
   *  what is output to the terminal. - KW
   */
d87 1
a87 1
#define UC_CHARSET_SETUP_euc_cn /*nothing*/
d100 1
a100 1
#define UC_CHARSET_SETUP_euc_jp /*nothing*/
d113 1
a113 1
#define UC_CHARSET_SETUP_shift_jis /*nothing*/
d126 1
a126 1
#define UC_CHARSET_SETUP_euc_kr /*nothing*/
d139 1
a139 1
#define UC_CHARSET_SETUP_big5 /*nothing*/
d147 3
a149 3
  /*
   *  Placeholder for non-translation mode. - FM
   */
d156 1
a156 1
#define UC_CHARSET_SETUP_x_transparent /*nothing*/
d169 1
a169 1
#define UC_CHARSET_SETUP_utf_8 /*nothing*/
d175 4
a178 2

#endif /* UCDOMAP_H */
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@a41 5
CONST char *UC_GNsetMIMEnames[4] =
	{"iso-8859-1", "x-dec-graphics", "cp437", "x-transparent"};

int UC_GNhandles[4] = {-1, -1, -1, -1};

d58 1
a60 1

@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d8 4
d73 1
a73 1
 *  Lynx care of them internally.
a85 1
static CONST struct unimapdesc_str dfont_replacedesc_fallback = {0,NULL,0,1};
d87 67
a153 15
#define UC_CHARSET_SETUP_euc_cn UC_Charset_Setup("euc-cn","Chinese",\
       NULL,NULL,0,dfont_replacedesc_fallback,\
       128,UCT_ENC_CJK,0)
#define UC_CHARSET_SETUP_euc_jp UC_Charset_Setup("euc-jp","Japanese (EUC-JP)",\
       NULL,NULL,0,dfont_replacedesc_fallback,\
       128,UCT_ENC_CJK,0)
#define UC_CHARSET_SETUP_shift_jis UC_Charset_Setup("shift_jis","Japanese (Shift_JIS)",\
       NULL,NULL,0,dfont_replacedesc_fallback,\
       128,UCT_ENC_CJK,0)
#define UC_CHARSET_SETUP_euc_kr UC_Charset_Setup("euc-kr","Korean",\
       NULL,NULL,0,dfont_replacedesc_fallback,\
       128,UCT_ENC_CJK,0)
#define UC_CHARSET_SETUP_big5 UC_Charset_Setup("big5","Taipei (Big5)",\
       NULL,NULL,0,dfont_replacedesc_fallback,\
       128,UCT_ENC_CJK,0)
d157 24
a180 9
#define UC_CHARSET_SETUP_x_transparent UC_Charset_Setup("x-transparent","Transparent",\
       NULL,NULL,0,dfont_replacedesc_fallback,\
       128,1,0)

static CONST struct unimapdesc_str dfont_replacedesc_NO_fallback = {0,NULL,0,0};

#define UC_CHARSET_SETUP_utf_8 UC_Charset_Setup("utf-8","UNICODE (UTF-8)",\
       NULL,NULL,0,dfont_replacedesc_NO_fallback,\
       128,UCT_ENC_UTF8,0)
@


1.1
log
@Initial revision
@
text
@a0 1

d4 6
d30 2
a31 2
	u8 *			unicount,
	u16 *			unitable,
d35 2
a36 1
	int			UC_rawuni));
d38 1
a38 1
char *UC_GNsetMIMEnames[4] =
d46 2
a47 2
	u8* unicount;
	u16* unitable;
d55 1
d61 51
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
