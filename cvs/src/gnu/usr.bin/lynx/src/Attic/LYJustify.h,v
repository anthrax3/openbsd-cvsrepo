head	1.5;
access;
symbols
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.24
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.22
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.14
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.12
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2014.07.23.19.13.26;	author deraadt;	state dead;
branches;
next	1.4;
commitid	EcR8E7r0stjLUV4p;

1.4
date	2014.07.09.04.11.35;	author daniel;	state Exp;
branches;
next	1.3;
commitid	lGGuvDWEniklWrQe;

1.3
date	2011.07.22.14.10.39;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.31.09.16.52;	author avsm;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.01.18.59.39;	author avsm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: LYJustify.h,v 1.8 2009/11/21 15:24:48 tom Exp $
 *
 * Justification for lynx - implemented by Vlad Harchev <hvv@@hippo.ru>
 * 11 July 1999
 */

#ifndef LYJUSTIFY_H
#define LYJUSTIFY_H

#include <HTUtils.h>

#ifdef __cplusplus
extern "C" {
#endif
#ifdef USE_JUSTIFY_ELTS
    extern BOOL can_justify_here;
    extern BOOL can_justify_here_saved;

    extern BOOL can_justify_this_line;
    extern int wait_for_this_stacked_elt;
    extern BOOL form_in_htext;

/* this is the element with SGML_EMPTY content, so it won't get on the stack,
 * so we can't trap it with wait_for_this_stacked_elt
 */
    extern BOOL in_DT;

/*disabled by default*/
/*#define DEBUG_JUSTIFY*/
#ifdef DEBUG_JUSTIFY
    extern BOOL can_justify_stack_depth;	/* can be 0 or 1 if all code is correct */

#  define CAN_JUSTIFY_STACK_INC ++can_justify_stack_depth;\
	assert(can_justify_stack_depth < 2 && can_justify_stack_depth >=0 );
#  define CAN_JUSTIFY_STACK_DEC --can_justify_stack_depth;\
	assert(can_justify_stack_depth < 2 && can_justify_stack_depth >=0 );
#else
#  define CAN_JUSTIFY_STACK_INC	/* nothing */
#  define CAN_JUSTIFY_STACK_DEC	/* nothing */
#endif

#define CAN_JUSTIFY_PUSH(x) can_justify_here_saved=can_justify_here;\
	can_justify_here=(x); CAN_JUSTIFY_STACK_INC
#define CAN_JUSTIFY_POP can_justify_here=can_justify_here_saved;\
	CAN_JUSTIFY_STACK_INC
#define CAN_JUSTIFY_SET(x) can_justify_here=(x);

/*
 * This is used to indicate that starting from the current offset in current
 * line justification can take place (in order the gap between some prefix and
 * the word not to be enlarged.
 * For example, when forming OL,
 *     1.21 foo
 * 	   ^justification can start here so that gap between 1.21 and "foo"
 *	   will not be enlarged.
 * This is a macro (that uses 'me').
 */
#define CAN_JUSTIFY_START  mark_justify_start_position(me->text);
#define CANT_JUSTIFY_THIS_LINE can_justify_this_line = FALSE
#define EMIT_IFDEF_USE_JUSTIFY_ELTS(x) x
    /*defined in order not to wrap single line of code  into #ifdef/#endif */

    extern void ht_justify_cleanup(void);
    extern void mark_justify_start_position(void *text);

#else				/* ! USE_JUSTIFY_ELTS */
/*
 * define empty macros so that they can be used without wrapping them in
 * #ifdef USE_JUSTIFY_ELTS/#endif
 */
#define CAN_JUSTIFY_PUSH(x)
#define CAN_JUSTIFY_POP
#define CAN_JUSTIFY_SET(x)
#define CAN_JUSTIFY_START
#define CANT_JUSTIFY_THIS_LINE
#define EMIT_IFDEF_USE_JUSTIFY_ELTS(x)
#endif				/* USE_JUSTIFY_ELTS */
#define CAN_JUSTIFY_PUSH_F CAN_JUSTIFY_PUSH(FALSE)
#ifdef __cplusplus
}
#endif
#endif				/* LYJUSTIFY_H */
@


1.4
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.3
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: LYJustify.h,v 1.7 2009/04/07 00:24:15 tom Exp $
d16 1
a16 1
#ifdef EXP_JUSTIFY_ELTS
d61 1
a61 1
#define EMIT_IFDEF_EXP_JUSTIFY_ELTS(x) x
d67 1
a67 1
#else				/* ! EXP_JUSTIFY_ELTS */
d70 1
a70 1
 * #ifdef EXP_JUSTIFY_ELTS/#endif
d77 2
a78 2
#define EMIT_IFDEF_EXP_JUSTIFY_ELTS(x)
#endif				/* EXP_JUSTIFY_ELTS */
@


1.2
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 4
a4 1
/* Justification for lynx - implemented by Vlad Harchev <hvv@@hippo.ru>
a16 1
    extern BOOL ok_justify;
@


1.1
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d2 2
a3 2
   11 July 1999
*/
d10 3
d14 7
d22 4
a25 11
extern BOOL ok_justify;
extern BOOL can_justify_here;
extern BOOL can_justify_here_saved;

extern BOOL can_justify_this_line;
extern int wait_for_this_stacked_elt;
extern BOOL form_in_htext;

    /*this is the element with SGML_EMPTY content, so it won't
    get on the stack, so we can't trap it with wait_for_this_stacked_elt */
extern BOOL in_DT;
d30 2
a31 1
extern BOOL can_justify_stack_depth;/* can be 0 or 1 if all code is correct*/
d37 2
a38 2
#  define CAN_JUSTIFY_STACK_INC /* nothing */
#  define CAN_JUSTIFY_STACK_DEC /* nothing */
d62 2
a63 4
extern void ht_justify_cleanup NOPARAMS;
extern void mark_justify_start_position PARAMS((void* text));

#else /* ! EXP_JUSTIFY_ELTS */
d65 1
a69 1

d76 1
a76 3

#endif /* EXP_JUSTIFY_ELTS */

d78 4
a81 2

#endif /* LYJUSTIFY_H */
@

