head	1.8;
access;
symbols
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.8
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.07.23.19.13.26;	author deraadt;	state dead;
branches;
next	1.7;
commitid	EcR8E7r0stjLUV4p;

1.7
date	2014.07.09.04.11.35;	author daniel;	state Exp;
branches;
next	1.6;
commitid	lGGuvDWEniklWrQe;

1.6
date	2011.07.22.14.10.39;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.31.09.16.52;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.04.01.47;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.39;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.17.07;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.52;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.52;	author maja;	state Exp;
branches;
next	;


desc
@@


1.8
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: LYCharSets.h,v 1.34 2012/02/10 18:43:40 tom Exp $
 */
#ifndef LYCHARSETS_H
#define LYCHARSETS_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#include <UCDefs.h>

#ifndef UCMAP_H
#include <UCMap.h>
#endif /* !UCMAP_H */

#include <HTCJK.h>

#ifdef __cplusplus
extern "C" {
#endif
    extern BOOL HTPassEightBitRaw;
    extern BOOL HTPassEightBitNum;
    extern BOOL HTPassHighCtrlRaw;
    extern BOOL HTPassHighCtrlNum;
    extern BOOLEAN LYHaveCJKCharacterSet;
    extern BOOLEAN DisplayCharsetMatchLocale;

    extern HTkcode kanji_code;

/*
 *  currently active character set (internal handler)
 */
    extern int current_char_set;
/*
 *  character set where it is safe to draw lines on boxes.
 */
    extern int linedrawing_char_set;

/*
 *  Initializer, calls initialization function for the
 *  CHARTRANS handling. - KW
 */
    extern int LYCharSetsDeclared(void);

    extern STRING2PTR LYCharSets[];
    extern const char *SevenBitApproximations[];
    extern STRING2PTR p_entity_values;
    extern const char *LYchar_set_names[];	/* Full name, not MIME */
    extern int LYlowest_eightbit[];
    extern int LYNumCharsets;
    extern LYUCcharset LYCharSet_UC[];
    extern int UCGetLYhndl_byAnyName(char *value);
    extern void HTMLSetCharacterHandling(int i);
    extern void HTMLSetUseDefaultRawMode(int i, int modeflag);
    extern void HTMLUseCharacterSet(int i);
    extern UCode_t HTMLGetEntityUCValue(const char *name);
    extern void Set_HTCJK(const char *inMIMEname, const char *outMIMEname);

    extern const char *HTMLGetEntityName(UCode_t code);

    UCode_t LYcp1252ToUnicode(UCode_t code);

/*
 * HTMLGetEntityName calls LYEntityNames for iso-8859-1 entity names only. 
 * This is an obsolete technique but widely used in the code.  Note that
 * unicode number in general may have several equivalent entity names because
 * of synonyms.
 */
    extern BOOL force_old_UCLYhndl_on_reload;
    extern int forced_UCLYhdnl;

#ifndef  USE_CHARSET_CHOICE
# define ALL_CHARSETS_IN_O_MENU_SCREEN 1
#endif

#ifdef USE_CHARSET_CHOICE
    typedef struct {
	BOOL hide_display;	/* if FALSE, show in "display-charset" menu */
	BOOL hide_assumed;	/* if FALSE, show in "assumed-charset" menu */
#ifndef ALL_CHARSETS_IN_O_MENU_SCREEN
	int assumed_idx;	/* only this field is needed */
#endif
    } charset_subset_t;

/* each element corresponds to charset in LYCharSets */
    extern charset_subset_t charset_subsets[];

/* all zeros by default - i.e., all charsets allowed */

/*
 * true if the charset choices for display charset were requested by user via
 * lynx.cfg.  It will remain FALSE if no "display_charset_choice" settings were
 * encountered in lynx.cfg
 */
    extern BOOL custom_display_charset;

/* similar to custom_display_charset */
    extern BOOL custom_assumed_doc_charset;

#ifndef ALL_CHARSETS_IN_O_MENU_SCREEN

/* this stuff is initialized after reading lynx.cfg and .lynxrc */

/*
 * These arrays map index of charset shown in menu to the index in LYCharsets[]
 */
    extern int display_charset_map[];
    extern int assumed_doc_charset_map[];

/* these arrays are NULL terminated */
    extern const char *display_charset_choices[];
    extern const char *assumed_charset_choices[];

    extern int displayed_display_charset_idx;

#endif
/* this will be called after lynx.cfg and .lynxrc are read */
    extern void init_charset_subsets(void);
#endif				/* USE_CHARSET_CHOICE */

#if !defined(NO_AUTODETECT_DISPLAY_CHARSET)
#  ifdef __EMX__
#    define CAN_AUTODETECT_DISPLAY_CHARSET
#    ifdef EXP_CHARTRANS_AUTOSWITCH
#      define CAN_SWITCH_DISPLAY_CHARSET
#    endif
#  endif
#endif

#ifdef CAN_AUTODETECT_DISPLAY_CHARSET
    extern int auto_display_charset;
#endif

#ifdef CAN_SWITCH_DISPLAY_CHARSET
    enum switch_display_charset_t {
	SWITCH_DISPLAY_CHARSET_MAYBE,
	SWITCH_DISPLAY_CHARSET_REALLY,
	SWITCH_DISPLAY_CHARSET_RESIZE
    };
    extern int Switch_Display_Charset(int ord, enum switch_display_charset_t really);
    extern int Find_Best_Display_Charset(int ord);
    extern char *charsets_directory;
    extern char *charset_switch_rules;
    extern int switch_display_charsets;
    extern int auto_other_display_charset;
    extern int codepages[2];
    extern int real_charsets[2];	/* Non "auto-" charsets for the codepages */
#endif

#ifdef __cplusplus
}
#endif
#endif				/* LYCHARSETS_H */
@


1.7
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.6
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: LYCharSets.h,v 1.31 2009/05/25 13:48:24 tom Exp $
d46 1
a46 1
    extern const char **LYCharSets[];
d48 1
a48 1
    extern const char **p_entity_values;
d55 1
a55 1
    extern void HTMLSetUseDefaultRawMode(int i, BOOLEAN modeflag);
d73 1
a73 1
#ifndef  EXP_CHARSET_CHOICE
d77 1
a77 1
#ifdef EXP_CHARSET_CHOICE
d120 1
a120 1
#endif				/* EXP_CHARSET_CHOICE */
@


1.5
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 3
d61 2
@


1.4
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@d14 11
a24 6
extern BOOL HTPassEightBitRaw;
extern BOOL HTPassEightBitNum;
extern BOOL HTPassHighCtrlRaw;
extern BOOL HTPassHighCtrlNum;
extern BOOLEAN LYHaveCJKCharacterSet;
extern BOOLEAN DisplayCharsetMatchLocale;
d26 1
a26 2
#include <HTCJK.h>
extern HTkcode kanji_code;
d31 5
a35 1
extern int current_char_set;
d41 15
a55 1
extern int LYCharSetsDeclared NOPARAMS;
d57 1
d59 8
a66 23
extern CONST char ** LYCharSets[];
extern CONST char * SevenBitApproximations[];
extern CONST char ** p_entity_values;
extern CONST char * LYchar_set_names[];  /* Full name, not MIME */
extern int LYlowest_eightbit[];
extern int LYNumCharsets;
extern LYUCcharset LYCharSet_UC[];
extern int UCGetLYhndl_byAnyName PARAMS((char *value));
extern void HTMLSetCharacterHandling PARAMS((int i));
extern void HTMLSetUseDefaultRawMode PARAMS((int i, BOOLEAN modeflag));
extern void HTMLUseCharacterSet PARAMS((int i));
extern UCode_t HTMLGetEntityUCValue PARAMS((CONST char *name));
extern void Set_HTCJK PARAMS((CONST char *inMIMEname, CONST char *outMIMEname));

extern CONST char * HTMLGetEntityName PARAMS((UCode_t code));
		/*
		** HTMLGetEntityName calls LYEntityNames for iso-8859-1 entity
		** names only.	This is an obsolete technique but widely used in
		** the code.  Note that unicode number in general may have
		** several equivalent entity names because of synonyms.
		*/
extern BOOL force_old_UCLYhndl_on_reload;
extern int forced_UCLYhdnl;
d73 3
a75 3
typedef struct {
    BOOL hide_display;		/* if FALSE, show in "display-charset" menu */
    BOOL hide_assumed;		/* if FALSE, show in "assumed-charset" menu */
d77 1
a77 1
    int assumed_idx;		/* only this field is needed */
d79 2
a80 1
} charset_subset_t;
d82 2
a83 1
extern charset_subset_t charset_subsets[];
d86 9
a94 4
extern BOOL custom_display_charset; /* whether the charset choices for display
    charset were requested by user via lynx.cfg.  It will remain FALSE if no
    "display_charset_choice" settings were encountered in lynx.cfg */
extern BOOL custom_assumed_doc_charset; /* similar to custom_display_charset */
d100 5
a104 3
/* these arrays maps index of charset shown in menu to the index in LYCharsets[]*/
extern int display_charset_map[];
extern int assumed_doc_charset_map[];
d107 2
a108 2
extern CONST char* display_charset_choices[];
extern CONST char* assumed_charset_choices[];
d110 1
a110 1
extern int displayed_display_charset_idx;
d114 2
a115 2
extern void init_charset_subsets NOPARAMS;
#endif /* EXP_CHARSET_CHOICE */
d127 1
a127 1
extern int auto_display_charset;
d131 13
a143 13
enum switch_display_charset_t {
    SWITCH_DISPLAY_CHARSET_MAYBE,
    SWITCH_DISPLAY_CHARSET_REALLY,
    SWITCH_DISPLAY_CHARSET_RESIZE
};
extern int Switch_Display_Charset PARAMS((int ord, enum switch_display_charset_t really));
extern int Find_Best_Display_Charset PARAMS((int ord));
extern char *charsets_directory;
extern char *charset_switch_rules;
extern int switch_display_charsets;
extern int auto_other_display_charset;
extern int codepages[2];
extern int real_charsets[2];	/* Non "auto-" charsets for the codepages */
d146 4
a149 1
#endif /* LYCHARSETS_H */
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d14 4
d117 1
a117 1
    SWITCH_DISPLAY_CHARSET_SIZECHANGE
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d17 3
d53 2
d56 68
a124 2
extern BOOL force_old_UCLYhndl_on_reload;
extern int forced_UCLYhdnl;
@


1.1
log
@Initial revision
@
text
@a0 1

d4 6
d11 1
a11 1
#include "UCMap.h"
d15 1
d18 1
a18 1
 *  LYchar_set_name[current_char_set] points to the currently active set.
a20 1
extern CONST char * LYchar_set_names[];
d29 4
a32 3
extern char ** LYCharSets[];
extern char * SevenBitApproximations[];
extern char ** p_entity_values;
d36 1
a37 1
extern void HTMLSetRawModeDefault PARAMS((int i));
a38 1
extern void HTMLSetHaveCJKCharacterSet PARAMS((int i));
d41 1
a42 1
extern CONST char * LYEntityNames[];
d52 2
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
