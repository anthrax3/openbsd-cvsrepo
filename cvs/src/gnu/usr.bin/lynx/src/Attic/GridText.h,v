head	1.8;
access;
symbols
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.8
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.07.23.19.13.25;	author deraadt;	state dead;
branches;
next	1.7;
commitid	EcR8E7r0stjLUV4p;

1.7
date	2014.07.09.04.11.35;	author daniel;	state Exp;
branches;
next	1.6;
commitid	lGGuvDWEniklWrQe;

1.6
date	2011.07.22.14.10.39;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.31.09.16.52;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.04.01.47;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.38;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.17.05;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.55;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.55;	author maja;	state Exp;
branches;
next	;


desc
@@


1.8
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: GridText.h,v 1.69 2012/02/12 23:25:38 tom Exp $
 *
 * Specialities of GridText as subclass of HText
 */
#ifndef LYGRIDTEXT_H
#define LYGRIDTEXT_H

#include <HText.h>		/* Superclass */

#ifndef HTFORMS_H
#include <HTForms.h>
#endif /* HTFORMS_H */

#include <HTFont.h>

#include <HTCJK.h>

#ifdef __cplusplus
extern "C" {
#endif
#define TABSTOP 8
#define SPACES  "        "	/* must be at least TABSTOP spaces long */
#define SPLAT   '.'
#define NOCHOP 0
#define CHOP   1
/* just for information:
US-ASCII control characters <32 which are not defined in Unicode standard
=00	U+0000	NULL
=01	U+0001	START OF HEADING
=02	U+0002	START OF TEXT
=03	U+0003	END OF TEXT
=04	U+0004	END OF TRANSMISSION
=05	U+0005	ENQUIRY
=06	U+0006	ACKNOWLEDGE
=07	U+0007	BELL
=08	U+0008	BACKSPACE
=09	U+0009	HORIZONTAL TABULATION
=0A	U+000A	LINE FEED
=0B	U+000B	VERTICAL TABULATION
=0C	U+000C	FORM FEED
=0D	U+000D	CARRIAGE RETURN
=0E	U+000E	SHIFT OUT
=0F	U+000F	SHIFT IN
=10	U+0010	DATA LINK ESCAPE
=11	U+0011	DEVICE CONTROL ONE
=12	U+0012	DEVICE CONTROL TWO
=13	U+0013	DEVICE CONTROL THREE
=14	U+0014	DEVICE CONTROL FOUR
=15	U+0015	NEGATIVE ACKNOWLEDGE
=16	U+0016	SYNCHRONOUS IDLE
=17	U+0017	END OF TRANSMISSION BLOCK
=18	U+0018	CANCEL
=19	U+0019	END OF MEDIUM
=1A	U+001A	SUBSTITUTE
=1B	U+001B	ESCAPE
=1C	U+001C	FILE SEPARATOR
=1D	U+001D	GROUP SEPARATOR
=1E	U+001E	RECORD SEPARATOR
=1F	U+001F	UNIT SEPARATOR
=7F	U+007F	DELETE
*/ extern int HTCurSelectGroupType;
    extern char *HTCurSelectGroupSize;

#if defined(VMS) && defined(VAXC) && !defined(__DECC)
    extern int HTVirtualMemorySize;
#endif				/* VMS && VAXC && !__DECC */

    extern HTChildAnchor *HText_childNextNumber(int n, void **prev);
    extern int HText_findAnchorNumber(void *avoid);
    extern void HText_FormDescNumber(int n, const char **desc);

/*	Is there any file left?
*/
    extern BOOL HText_canScrollUp(HText *text);
    extern BOOL HText_canScrollDown(void);

/*	Move display within window
*/
    extern void HText_scrollUp(HText *text);	/* One page */
    extern void HText_scrollDown(HText *text);	/* One page */
    extern void HText_scrollTop(HText *text);
    extern void HText_scrollBottom(HText *text);
    extern void HText_pageDisplay(int line_num, char *target);
    extern BOOL HText_pageHasPrevTarget(void);

    extern int HText_LinksInLines(HText *text, int line_num, int Lines);

    extern int HText_getAbsLineNumber(HText *text, int anchor_number);
    extern int HText_closestAnchor(HText *text, int offset);
    extern int HText_locateAnchor(HText *text, int anchor_number);
    extern int HText_anchorRelativeTo(HText *text, int top_lineno, int anchor_num);

    extern void HText_setLastChar(HText *text, int ch);
    extern char HText_getLastChar(HText *text);

    extern int HText_sourceAnchors(HText *text);
    extern void HText_setStale(HText *text);
    extern void HText_refresh(HText *text);
    extern const char *HText_getTitle(void);
    extern const char *HText_getSugFname(void);
    extern void HTCheckFnameForCompression(char **fname,
					   HTParentAnchor *anchor,
					   int strip_ok);
    extern const char *HText_getLastModified(void);
    extern const char *HText_getDate(void);
    extern const char *HText_getHttpHeaders(void);
    extern const char *HText_getServer(void);
    extern const char *HText_getOwner(void);
    extern const char *HText_getContentBase(void);
    extern const char *HText_getContentLocation(void);
    extern const char *HText_getMessageID(void);
    extern const char *HText_getRevTitle(void);

#ifdef USE_COLOR_STYLE
    extern const char *HText_getStyle(void);
#endif
    extern void HText_setMainTextOwner(const char *owner);
    extern void print_wwwfile_to_fd(FILE *fp, int is_email, int is_reply);
    extern BOOL HText_select(HText *text);
    extern BOOL HText_POSTReplyLoaded(DocInfo *doc);
    extern BOOL HTFindPoundSelector(const char *selector);
    extern int HTGetRelLinkNum(int num, int rel, int cur);
    extern int HTGetLinkInfo(int number,
			     int want_go,
			     int *go_line,
			     int *linknum,
			     char **hightext,
			     char **lname);
    extern BOOL HText_TAHasMoreLines(int curlink,
				     int direction);
    extern int HTGetLinkOrFieldStart(int curlink,
				     int *go_line,
				     int *linknum,
				     int direction,
				     int ta_skip);
    extern BOOL HText_getFirstTargetInLine(HText *text,
					   int line_num,
					   int utf_flag,
					   int *offset,
					   int *tLen,
					   char **data,
					   const char *target);
    extern int HTisDocumentSource(void);
    extern void HTuncache_current_document(void);

#ifdef USE_SOURCE_CACHE
    extern BOOLEAN HTreparse_document(void);
    extern BOOLEAN HTcan_reparse_document(void);
    extern BOOLEAN HTdocument_settings_changed(void);
#endif

    extern BOOL HTLoadedDocumentEightbit(void);
    extern BOOL HText_LastLineEmpty(HText *me, int IgnoreSpaces);
    extern BOOL HText_PreviousLineEmpty(HText *me, int IgnoreSpaces);
    extern BOOL HText_inLineOne(HText *text);
    extern BOOLEAN HTLoadedDocumentIsHEAD(void);
    extern BOOLEAN HTLoadedDocumentIsSafe(void);
    extern bstring *HTLoadedDocumentPost_data(void);
    extern const char *HTLoadedDocumentBookmark(void);
    extern const char *HTLoadedDocumentCharset(void);
    extern const char *HTLoadedDocumentTitle(void);
    extern const char *HTLoadedDocumentURL(void);
    extern const char *HText_HiddenLinkAt(HText *text, int number);
    extern int HText_HiddenLinkCount(HText *text);
    extern int HText_LastLineOffset(HText *me);
    extern int HText_LastLineSize(HText *me, int IgnoreSpaces);
    extern int HText_PreviousLineSize(HText *me, int IgnoreSpaces);
    extern int HText_getCurrentColumn(HText *text);
    extern int HText_getLines(HText *text);
    extern int HText_getMaximumColumn(HText *text);
    extern int HText_getNumOfBytes(void);
    extern int HText_getNumOfLines(void);
    extern int HText_getPreferredTopLine(HText *text, int line_number);
    extern int HText_getTabIDColumn(HText *text, const char *name);
    extern int HText_getTopOfScreen(void);
    extern int do_www_search(DocInfo *doc);
    extern void HText_NegateLineOne(HText *text);
    extern void HText_RemovePreviousLine(HText *text);
    extern void HText_setNodeAnchorBookmark(const char *bookmark);
    extern void HText_setTabID(HText *text, const char *name);
    extern void *HText_pool_calloc(HText *text, unsigned size);

/* "simple table" stuff */
    extern BOOLEAN HText_endStblTABLE(HText *);
    extern int HText_trimCellLines(HText *text);
    extern void HText_cancelStbl(HText *);
    extern void HText_endStblCOLGROUP(HText *);
    extern void HText_endStblTD(HText *);
    extern void HText_endStblTR(HText *);
    extern void HText_startStblCOL(HText *, int, int, int);
    extern void HText_startStblRowGroup(HText *, int);
    extern void HText_startStblTABLE(HText *, int);
    extern void HText_startStblTD(HText *, int, int, int, int);
    extern void HText_startStblTR(HText *, int);

/* forms stuff */
    extern void HText_beginForm(char *action,
				char *method,
				char *enctype,
				char *title,
				const char *accept_cs);
    extern void HText_endForm(HText *text);
    extern void HText_beginSelect(char *name,
				  int name_cs,
				  int multiple,
				  char *len);
    extern int HText_getOptionNum(HText *text);
    extern char *HText_setLastOptionValue(HText *text,
					  char *value,
					  char *submit_value,
					  int order,
					  int checked,
					  int val_cs,
					  int submit_val_cs);
    extern int HText_beginInput(HText *text,
				int underline,
				InputFieldData * I);
    extern void HText_endInput(HText *text);
    extern PerFormInfo *HText_PerFormInfo(int number);
    extern int HText_SubmitForm(FormInfo * submit_item, DocInfo *doc,
				const char *link_name,
				const char *link_value);
    extern void HText_DisableCurrentForm(void);
    extern void HText_ResetForm(FormInfo * form);
    extern void HText_activateRadioButton(FormInfo * form);
    extern BOOLEAN HText_HaveUserChangedForms(HText *text);

    extern HTList *search_queries;	/* Previous isindex and whereis queries */
    extern void HTSearchQueries_free(void);
    extern void HTAddSearchQuery(char *query);

    extern void user_message(const char *message,
			     const char *argument);

#define _user_message(msg, arg)	mustshow = TRUE, user_message(msg, arg)

    extern void www_user_search(int start_line,
				DocInfo *doc,
				char *target,
				int direction);

    extern void print_crawl_to_fd(FILE *fp,
				  char *thelink,
				  char *thetitle);
    extern char *stub_HTAnchor_address(HTAnchor * me);

    extern void HText_setToolbar(HText *text);
    extern BOOL HText_hasToolbar(HText *text);

    extern void HText_setNoCache(HText *text);
    extern BOOL HText_hasNoCacheSet(HText *text);

    extern BOOL HText_hasUTF8OutputSet(HText *text);
    extern void HText_setKcode(HText *text,
			       const char *charset,
			       LYUCcharset *p_in);

    extern void HText_setBreakPoint(HText *text);

    extern BOOL HText_AreDifferent(HTParentAnchor *anchor,
				   const char *full_address);

    extern int HText_EditTextArea(LinkInfo * form_link);
    extern void HText_EditTextField(LinkInfo * form_link);
    extern void HText_ExpandTextarea(LinkInfo * form_link, int newlines);
    extern int HText_InsertFile(LinkInfo * form_link);

    extern void redraw_lines_of_link(int cur);
    extern void LYMoveToLink(int cur,
			     const char *target,
			     const char *hightext,
			     int flag,
			     int inU,
			     int utf_flag);

#ifdef USE_PRETTYSRC
    extern void HTMark_asSource(void);
#endif

    extern int HTMainText_Get_UCLYhndl(void);

#ifdef KANJI_CODE_OVERRIDE
    extern HTkcode last_kcode;
#endif

    extern HTkcode HText_getKcode(HText *text);
    extern void HText_updateKcode(HText *text, HTkcode kcode);
    extern HTkcode HText_getSpecifiedKcode(HText *text);
    extern void HText_updateSpecifiedKcode(HText *text, HTkcode kcode);

#ifdef __cplusplus
}
#endif
#endif				/* LYGRIDTEXT_H */
@


1.7
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.6
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: GridText.h,v 1.61 2009/01/01 23:02:02 tom Exp $
d70 1
d94 1
a94 1
    extern void HText_setLastChar(HText *text, char ch);
d104 1
a104 1
					   BOOLEAN strip_ok);
d119 1
a119 1
    extern void print_wwwfile_to_fd(FILE *fp, BOOLEAN is_email, BOOLEAN is_reply);
d136 1
a136 1
				     BOOLEAN ta_skip);
d139 1
a139 1
					   BOOL utf_flag,
d154 2
a155 2
    extern BOOL HText_LastLineEmpty(HText *me, BOOL IgnoreSpaces);
    extern BOOL HText_PreviousLineEmpty(HText *me, BOOL IgnoreSpaces);
d167 2
a168 2
    extern int HText_LastLineSize(HText *me, BOOL IgnoreSpaces);
    extern int HText_PreviousLineSize(HText *me, BOOL IgnoreSpaces);
d191 5
a195 5
    extern void HText_startStblCOL(HText *, int, short, BOOL);
    extern void HText_startStblRowGroup(HText *, short);
    extern void HText_startStblTABLE(HText *, short);
    extern void HText_startStblTD(HText *, int, int, short, BOOL);
    extern void HText_startStblTR(HText *, short);
d206 1
a206 1
				  BOOLEAN multiple,
d213 1
a213 1
					  BOOLEAN checked,
d217 1
a217 1
				BOOL underline,
d220 1
d222 2
a223 2
				char *link_name,
				char *link_value);
d264 2
a265 1
    extern int HText_ExtEditForm(LinkInfo * form_link);
d274 2
a275 2
			     BOOL inU,
			     BOOL utf_flag);
@


1.5
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 5
a5 2
/*	Specialities of GridText as subclass of HText
*/
a94 1
    extern void HText_setIgnoreExcess(HText *text, BOOL ignore);
d184 1
a184 1
    extern int HText_endStblTABLE(HText *);
@


1.4
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@a0 1

d14 5
d20 1
a20 1
#define SPACES  "        "  /* must be at least TABSTOP spaces long */
a21 1

a23 1

d59 2
a60 4
*/

extern int HTCurSelectGroupType;
extern char * HTCurSelectGroupSize;
d63 2
a64 2
extern int HTVirtualMemorySize;
#endif /* VMS && VAXC && !__DECC */
d66 2
a67 2
extern HTChildAnchor * HText_childNextNumber PARAMS((int n, void** prev));
extern void HText_FormDescNumber PARAMS((int n, char **desc));
d71 2
a72 2
extern BOOL HText_canScrollUp PARAMS((HText * text));
extern BOOL HText_canScrollDown NOPARAMS;
d76 36
a111 30
extern void HText_scrollUp PARAMS((HText * text));	/* One page */
extern void HText_scrollDown PARAMS((HText * text));	/* One page */
extern void HText_scrollTop PARAMS((HText * text));
extern void HText_scrollBottom PARAMS((HText * text));
extern void HText_pageDisplay PARAMS((int line_num, char *target));
extern BOOL HText_pageHasPrevTarget NOPARAMS;

extern int HText_LinksInLines PARAMS((HText *text, int line_num, int Lines));

extern void HText_setLastChar PARAMS((HText *text, char ch));
extern char HText_getLastChar PARAMS((HText *text));
extern void HText_setIgnoreExcess PARAMS((HText *text, BOOL ignore));

extern int HText_sourceAnchors PARAMS((HText * text));
extern void HText_setStale PARAMS((HText * text));
extern void HText_refresh PARAMS((HText * text));
extern CONST char * HText_getTitle NOPARAMS;
extern CONST char * HText_getSugFname NOPARAMS;
extern void HTCheckFnameForCompression PARAMS((
	char **			fname,
	HTParentAnchor *	anchor,
	BOOLEAN			strip_ok));
extern CONST char * HText_getLastModified NOPARAMS;
extern CONST char * HText_getDate NOPARAMS;
extern CONST char * HText_getServer NOPARAMS;
extern CONST char * HText_getOwner NOPARAMS;
extern CONST char * HText_getContentBase NOPARAMS;
extern CONST char * HText_getContentLocation NOPARAMS;
extern CONST char * HText_getMessageID NOPARAMS;
extern CONST char * HText_getRevTitle NOPARAMS;
d113 1
a113 1
extern CONST char * HText_getStyle NOPARAMS;
d115 28
a142 32
extern void HText_setMainTextOwner PARAMS((CONST char * owner));
extern void print_wwwfile_to_fd PARAMS((FILE * fp, BOOLEAN is_reply));
extern BOOL HText_select PARAMS((HText *text));
extern BOOL HText_POSTReplyLoaded PARAMS((DocInfo *doc));
extern BOOL HTFindPoundSelector PARAMS((CONST char *selector));
extern int HTGetRelLinkNum PARAMS((int num, int rel, int cur));
extern int HTGetLinkInfo PARAMS((
	int		number,
	int		want_go,
	int *		go_line,
	int *		linknum,
	char **		hightext,
	char **		lname));
extern BOOL HText_TAHasMoreLines PARAMS((
	int		curlink,
	int		direction));
extern int HTGetLinkOrFieldStart PARAMS((
	int		curlink,
	int *		go_line,
	int *		linknum,
	int		direction,
	BOOLEAN		ta_skip));
extern BOOL HText_getFirstTargetInLine PARAMS((
	HText *		text,
	int		line_num,
	BOOL		utf_flag,
	int *		offset,
	int *		tLen,
	char **		data,
	CONST char *	target));
extern int HTisDocumentSource NOPARAMS;
extern void HTuncache_current_document NOPARAMS;
d145 3
a147 3
extern BOOLEAN HTreparse_document NOPARAMS;
extern BOOLEAN HTcan_reparse_document NOPARAMS;
extern BOOLEAN HTdocument_settings_changed NOPARAMS;
d150 30
a179 28
extern BOOL HTLoadedDocumentEightbit NOPARAMS;
extern BOOL HText_LastLineEmpty PARAMS((HText *me, BOOL IgnoreSpaces));
extern BOOL HText_PreviousLineEmpty PARAMS((HText *me, BOOL IgnoreSpaces));
extern BOOL HText_inLineOne PARAMS((HText *text));
extern BOOLEAN HTLoadedDocumentIsHEAD NOPARAMS;
extern BOOLEAN HTLoadedDocumentIsSafe NOPARAMS;
extern bstring * HTLoadedDocumentPost_data NOPARAMS;
extern char * HTLoadedDocumentBookmark NOPARAMS;
extern char * HTLoadedDocumentCharset NOPARAMS;
extern char * HTLoadedDocumentTitle NOPARAMS;
extern char * HTLoadedDocumentURL NOPARAMS;
extern char * HText_HiddenLinkAt PARAMS((HText *text, int number));
extern int HText_HiddenLinkCount PARAMS((HText *text));
extern int HText_LastLineOffset PARAMS((HText *me));
extern int HText_LastLineSize PARAMS((HText *me, BOOL IgnoreSpaces));
extern int HText_PreviousLineSize PARAMS((HText *me, BOOL IgnoreSpaces));
extern int HText_getCurrentColumn PARAMS((HText *text));
extern int HText_getLines PARAMS((HText * text));
extern int HText_getMaximumColumn PARAMS((HText *text));
extern int HText_getNumOfLines NOPARAMS;
extern int HText_getTabIDColumn PARAMS((HText *text, CONST char *name));
extern int HText_getTopOfScreen NOPARAMS;
extern int do_www_search PARAMS((DocInfo *doc));
extern void HText_NegateLineOne PARAMS((HText *text));
extern void HText_RemovePreviousLine PARAMS((HText *text));
extern void HText_setNodeAnchorBookmark PARAMS((CONST char *bookmark));
extern void HText_setTabID PARAMS((HText *text, CONST char *name));
extern void* HText_pool_calloc PARAMS((HText * text, unsigned size));
d182 11
a192 11
extern int HText_endStblTABLE PARAMS((HText *));
extern int HText_trimCellLines PARAMS((HText * text));
extern void HText_cancelStbl PARAMS((HText *));
extern void HText_endStblCOLGROUP PARAMS((HText *));
extern void HText_endStblTD PARAMS((HText *));
extern void HText_endStblTR PARAMS((HText *));
extern void HText_startStblCOL PARAMS((HText *, int, short, BOOL));
extern void HText_startStblRowGroup PARAMS((HText *, short));
extern void HText_startStblTABLE PARAMS((HText *, short));
extern void HText_startStblTD PARAMS((HText *, int, int, short, BOOL));
extern void HText_startStblTR PARAMS((HText *, short));
d195 36
a230 43
extern void HText_beginForm PARAMS((
	char *		action,
	char *		method,
	char *		enctype,
	char *		title,
	CONST char *	accept_cs));
extern void HText_endForm PARAMS((HText *text));
extern void HText_beginSelect PARAMS((char *name,
				      int name_cs,
				      BOOLEAN multiple,
				      char *len));
extern int HText_getOptionNum PARAMS((HText *text));
extern char * HText_setLastOptionValue PARAMS((
	HText *		text,
	char *		value,
	char *		submit_value,
	int		order,
	BOOLEAN		checked,
	int		val_cs,
	int		submit_val_cs));
extern int HText_beginInput PARAMS((
	HText *		text,
	BOOL		underline,
	InputFieldData *I));
extern void HText_endInput PARAMS((
	HText *		text));
extern int HText_SubmitForm PARAMS((
	FormInfo *	submit_item,
	DocInfo *	doc,
	char *		link_name,
	char *		link_value));
extern void HText_DisableCurrentForm NOPARAMS;
extern void HText_ResetForm PARAMS((FormInfo *form));
extern void HText_activateRadioButton PARAMS((FormInfo *form));
extern BOOLEAN HText_HaveUserChangedForms PARAMS((HText *text));

extern HTList * search_queries; /* Previous isindex and whereis queries */
extern void HTSearchQueries_free NOPARAMS;
extern void HTAddSearchQuery PARAMS((char *query));

extern void user_message PARAMS((
	CONST char *	message,
	CONST char *	argument));
d234 37
a270 47
extern void www_user_search PARAMS((
	int		start_line,
	DocInfo *	doc,
	char *		target,
	int		direction));

extern void print_crawl_to_fd PARAMS((
	FILE *		fp,
	char *		thelink,
	char *		thetitle));
extern char * stub_HTAnchor_address PARAMS((HTAnchor *me));

extern void HText_setToolbar PARAMS((HText *text));
extern BOOL HText_hasToolbar PARAMS((HText *text));

extern void HText_setNoCache PARAMS((HText *text));
extern BOOL HText_hasNoCacheSet PARAMS((HText *text));

extern BOOL HText_hasUTF8OutputSet PARAMS((HText *text));
extern void HText_setKcode PARAMS((
	HText *		text,
	CONST char *	charset,
	LYUCcharset *	p_in));

extern void HText_setBreakPoint PARAMS((HText *text));

extern BOOL HText_AreDifferent PARAMS((
	HTParentAnchor *	anchor,
	CONST char *		full_address));

extern int HText_ExtEditForm PARAMS((
	LinkInfo *	form_link));
extern void HText_ExpandTextarea PARAMS((
	LinkInfo *	form_link,
	int             newlines));
extern int HText_InsertFile PARAMS((
	LinkInfo *	form_link));

extern void redraw_lines_of_link PARAMS((int cur));
extern void LYMoveToLink PARAMS((
	int		cur,
	CONST char *	target,
	char *		hightext,
	int		flag,
	BOOL		inU,
	BOOL		utf_flag));

d273 1
a273 1
extern void HTMark_asSource NOPARAMS;
d276 1
a276 3
extern int HTMainText_Get_UCLYhndl NOPARAMS;

#include <HTCJK.h>
d279 1
a279 1
extern HTkcode last_kcode;
d282 4
a285 4
extern HTkcode HText_getKcode PARAMS((HText * text));
extern void HText_updateKcode PARAMS((HText * text, HTkcode kcode));
extern HTkcode HText_getSpecifiedKcode PARAMS((HText * text));
extern void HText_updateSpecifiedKcode PARAMS((HText * text, HTkcode kcode));
d287 4
a290 1
#endif /* LYGRIDTEXT_H */
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@a60 2
extern HText * HTMainText;		/* Equivalent of main window */
extern HTParentAnchor * HTMainAnchor;	/* Anchor for HTMainText */
d65 2
a66 1
extern HTChildAnchor * HText_childNumber PARAMS((int n));
d112 2
a113 2
extern BOOL HText_POSTReplyLoaded PARAMS((document *doc));
extern BOOL HTFindPoundSelector PARAMS((char *selector));
d141 2
a142 1
#ifdef SOURCE_CACHE
d147 5
a151 7
extern int HText_getTopOfScreen NOPARAMS;
extern int HText_getLines PARAMS((HText * text));
extern int HText_getNumOfLines NOPARAMS;
extern int do_www_search PARAMS((document *doc));
extern char * HTLoadedDocumentURL NOPARAMS;
extern char * HTLoadedDocumentPost_data NOPARAMS;
extern char * HTLoadedDocumentTitle NOPARAMS;
d154 2
d157 5
a161 3
extern BOOL HTLoadedDocumentEightbit NOPARAMS;
extern void HText_setNodeAnchorBookmark PARAMS((CONST char *bookmark));
extern char * HTLoadedDocumentBookmark NOPARAMS;
a162 1
extern int HText_LastLineOffset PARAMS((HText *me));
d164 7
a171 1
extern BOOL HText_inLineOne PARAMS((HText *text));
d173 1
a173 2
extern int HText_getCurrentColumn PARAMS((HText *text));
extern int HText_getMaximumColumn PARAMS((HText *text));
d175 1
a175 3
extern int HText_getTabIDColumn PARAMS((HText *text, CONST char *name));
extern int HText_HiddenLinkCount PARAMS((HText *text));
extern char * HText_HiddenLinkAt PARAMS((HText *text, int number));
d179 1
d215 2
d219 1
a219 1
	document *	doc,
d225 1
a225 1
extern BOOLEAN HText_HaveUserChangedForms NOPARAMS;
d239 1
a239 1
	document *	doc,
d268 1
a268 1
	struct link *	form_link));
d270 1
a270 1
	struct link *	form_link,
d273 1
a273 1
	struct link *	form_link));
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d13 1
a13 29
#ifndef HT_NON_BREAK_SPACE
#define HT_NON_BREAK_SPACE	((char)1)	/* remember it */
#endif /* !HT_NON_BREAK_SPACE */
#ifndef HT_EN_SPACE
#define HT_EN_SPACE		((char)2)	/* remember it */
#endif /* !HT_EN_SPACE */
#define LY_UNDERLINE_START_CHAR	'\003'
#define LY_UNDERLINE_END_CHAR	'\004'

/* Turn about is fair play ASCII platforms use EBCDIC tab;
   EBCDIC platforms use ASCII tab for LY_BOLD_START_CHAR.
*/
#ifdef EBCDIC
#define LY_BOLD_START_CHAR	'\011'
#else
#define LY_BOLD_START_CHAR	'\005'
#endif

#define LY_BOLD_END_CHAR	'\006'
#ifndef LY_SOFT_HYPHEN
#define LY_SOFT_HYPHEN		((char)7)
#endif /* !LY_SOFT_HYPHEN */
#define LY_SOFT_NEWLINE 	((char)8)

#ifdef EBCDIC
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
#else
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\010'))
#endif
a63 2
extern int WWW_TraceFlag;

d107 1
a107 1
#ifdef USE_HASH
d111 1
a111 1
extern void print_wwwfile_to_fd PARAMS((FILE * fp, int is_reply));
d123 3
d139 1
a139 1
	char *		target));
d161 1
d173 12
d202 1
a202 1
	int 		order,
d204 2
a205 2
	int 		val_cs,
	int 		submit_val_cs));
d210 1
a210 4
extern void HText_trimHightext PARAMS((
	HText *		text,
	BOOLEAN 	final));
extern void HText_SubmitForm PARAMS((
d230 5
a234 1
extern void www_user_search PARAMS((int start_line, document *doc, char *target));
d269 7
d277 2
a278 1
#ifdef USE_PSRC
d283 11
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
#include "HText.h"		/* Superclass */
d10 1
a10 1
#include "HTForms.h"
d13 6
d21 7
d29 2
d35 51
a85 1
#define IsSpecialAttrChar(a)  ((a > '\002') && (a < '\010'))
a91 13
#ifdef SHORT_NAMES
#define HText_childNumber		HTGTChNu
#define HText_canScrollUp		HTGTCaUp
#define HText_canScrollDown		HTGTCaDo
#define HText_scrollUp			HTGTScUp
#define HText_scrollDown		HTGTScDo
#define HText_scrollTop			HTGTScTo
#define HText_scrollBottom		HTGTScBo
#define HText_sourceAnchors		HTGTSoAn
#define HText_setStale			HTGTStal
#define HText_refresh			HTGTRefr
#endif /* SHORT_NAMES */

a92 3
extern int HTCacheSize;

extern BOOLEAN mustshow;
d123 2
a124 2
extern char * HText_getTitle NOPARAMS;
extern char * HText_getSugFname NOPARAMS;
d129 8
a136 6
extern char * HText_getLastModified NOPARAMS;
extern char * HText_getDate NOPARAMS;
extern char * HText_getServer NOPARAMS;
extern char * HText_getOwner NOPARAMS;
extern char * HText_getContentBase NOPARAMS;
extern char * HText_getContentLocation NOPARAMS;
d138 1
a138 1
extern char * HText_getStyle NOPARAMS;
a140 1
extern char * HText_getRevTitle NOPARAMS;
d145 1
d153 6
d169 5
d190 1
d224 3
d235 1
d272 16
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
