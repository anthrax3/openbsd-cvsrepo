head	1.9;
access;
symbols
	OPENBSD_5_5:1.7.0.14
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.8
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.6
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.18
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.16
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.14
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.12
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.10
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2014.07.23.19.13.25;	author deraadt;	state dead;
branches;
next	1.8;
commitid	EcR8E7r0stjLUV4p;

1.8
date	2014.07.09.04.11.35;	author daniel;	state Exp;
branches;
next	1.7;
commitid	lGGuvDWEniklWrQe;

1.7
date	2011.07.22.14.10.39;	author avsm;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.31.09.16.52;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.21.17.04.47;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.04.01.47;	author avsm;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2003.05.01.18.59.38;	author avsm;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2000.03.25.18.17.06;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.55;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.55;	author maja;	state Exp;
branches;
next	;

1.3.2.1
date	2004.11.06.04.19.29;	author brad;	state Exp;
branches;
next	;

1.3.4.1
date	2004.11.06.04.00.44;	author brad;	state Exp;
branches;
next	;

1.4.2.1
date	2004.11.06.05.06.25;	author brad;	state Exp;
branches;
next	;


desc
@@


1.9
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: HTForms.h,v 1.33 2012/02/12 22:30:53 tom Exp $
 */
#ifndef HTFORMS_H
#define HTFORMS_H

#ifndef LYSTRUCTS_H
#include <LYStructs.h>
#endif /* LYSTRUCTS_H */

#ifdef __cplusplus
extern "C" {
#endif
/* change_form_link() calls change_form_link_ex() with all its args and FALSE
 * as last arg
 */ extern int change_form_link(int cur,
				DocInfo *newdoc,
				BOOLEAN *refresh_screen,
				int use_last_tfpos,
				int immediate_submit);

    extern int change_form_link_ex(int cur,
				   DocInfo *newdoc,
				   BOOLEAN *refresh_screen,
				   int use_last_tfpos,
				   int immediate_submit,
				   int draw_only);

/* InputFieldData is used to pass the info between HTML.c and Gridtext.c in
 * HText_beginInput()
 */
    typedef struct _InputFieldData {
	const char *accept;
	const char *align;
	int checked;
	const char *iclass;
	int disabled;
	int readonly;
	const char *error;
	const char *height;
	const char *id;
	const char *lang;
	const char *max;
	const char *maxlength;
	const char *md;
	const char *min;
	const char *name;
	int size;
	const char *src;
	const char *type;
	char *value;
	const char *width;
	int name_cs;		/* charset handle for name */
	int value_cs;		/* charset handle for value */
	const char *accept_cs;
    } InputFieldData;

/* The OptionType structure is for a linked list of option entries
 */
    typedef struct _OptionType {
	char *name;		/* the name of the entry */
	char *cp_submit_value;	/* the value to submit   */
	int value_cs;		/* charset value is in   */
	struct _OptionType *next;	/* the next entry        */
    } OptionType;

/*
 * The FormInfo structure is used to contain the form field data within each
 * anchor.  A pointer to this structure is in the TextAnchor struct.
 */
    typedef struct _FormInfo {
	char *name;		/* the name of the link */
	int number;		/* which form is the link within */
	int type;		/* string, int, etc. */
	char *value;		/* user entered string data */
	char *orig_value;	/* the original value */
	int size;		/* width on the screen */
	size_t maxlength;	/* max width of data */
	int group;		/* a group associated with the link
				 *  this is used for select's
				 */
	int num_value;		/* value of the numerical fields */
	int hrange;		/* high numerical range */
	int lrange;		/* low numerical range */
	OptionType *select_list;	/* array of option choices */
	char *submit_action;	/* form's action */
	int submit_method;	/* form's method */
	char *submit_enctype;	/* form's entype */
	char *submit_title;	/* form's title */
	BOOL no_cache;		/* Always resubmit? */
	char *cp_submit_value;	/* option value to submit */
	char *orig_submit_value;	/* original submit value */
	int size_l;		/* The length of the option list */
	int disabled;		/* If YES, can't change values */
	int readonly;		/* If YES, can't change values */
	int name_cs;
	int value_cs;
	char *accept_cs;
    } FormInfo;

#define FormIsReadonly(form) ((form) && ((form)->disabled || (form)->readonly))

/*
 * As structure for info associated with a form.  There is some redundancy
 * here, this shouldn't waste too much memory since the total number of forms
 * (as opposed to form fields) per doc is expected to be rather small.  More
 * things which are per form rather than per field could be moved here.  - kw
 */
    typedef struct _PerFormInfo {
	int number;		/* form number, see GridText.c */
	int disabled;		/* If YES, can't change values */
	FormInfo data;
	struct _PerFormInfo *next;	/* pointer to next form in doc */
	int nfields;		/* number of fields */
	FormInfo *first_field;
	FormInfo *last_field;	/* pointer to last field in form */
	char *accept_cs;
	char *thisacceptcs;	/* used during submit */
    } PerFormInfo;

#define HYPERTEXT_ANCHOR 1
#define INPUT_ANCHOR     2	/* forms mode input fields */
#define INTERNAL_LINK_ANCHOR 5	/* 1+4, can be used as bitflag... - kw */

    typedef enum {
	F_UNKNOWN = 0,
	F_TEXT_TYPE,
	F_PASSWORD_TYPE,
	F_CHECKBOX_TYPE,
	F_RADIO_TYPE,
	F_SUBMIT_TYPE,
	F_RESET_TYPE,
	F_OPTION_LIST_TYPE,
	F_HIDDEN_TYPE,
	F_TEXTAREA_TYPE,
	F_RANGE_TYPE,
	F_FILE_TYPE,
	F_TEXT_SUBMIT_TYPE,
	F_IMAGE_SUBMIT_TYPE,
	F_KEYGEN_TYPE,
	F_BUTTON_TYPE
    } FieldTypes;

#define F_SUBMITLIKE(type) ((type) == F_SUBMIT_TYPE || \
			    (type) == F_IMAGE_SUBMIT_TYPE || \
			    (type) == F_TEXT_SUBMIT_TYPE)

#define F_TEXTLIKE(type) ((type) == F_TEXT_TYPE || \
			  (type) == F_TEXT_SUBMIT_TYPE || \
			  (type) == F_PASSWORD_TYPE || \
			  (type) == F_FILE_TYPE || \
			  (type) == F_TEXTAREA_TYPE)

#define WWW_FORM_LINK_TYPE  1
#define WWW_LINK_TYPE   2
#define WWW_INTERN_LINK_TYPE   6	/* can be used as a bitflag... - kw */
#define LINK_LINE_FOUND	8	/* used in follow_link_number, others - kw */
#define LINK_DO_ARROWUP	16	/* returned by HTGetLinkOrFieldStart - kw */

/* #define different lynx modes */
#define NORMAL_LYNX_MODE 1
#define FORMS_LYNX_MODE  2

#define FIRST_ORDER  1
#define MIDDLE_ORDER 2
#define LAST_ORDER   3

/* in LYForms.c */
    extern void show_formlink_statusline(const FormInfo * form,
					 int for_what);
#ifdef __cplusplus
}
#endif
#endif				/* HTFORMS_H */
@


1.8
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.7
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: HTForms.h,v 1.27 2009/05/28 22:49:51 tom Exp $
d19 2
a20 2
				BOOLEAN use_last_tfpos,
				BOOLEAN immediate_submit);
d25 3
a27 3
				   BOOLEAN use_last_tfpos,
				   BOOLEAN immediate_submit,
				   BOOLEAN draw_only);
d38 1
d78 1
a78 1
	unsigned maxlength;	/* max width of data */
d95 1
d101 2
a110 1
	/* except for the last two, the following fields aren't actually used.. */
d112 1
d143 4
@


1.6
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 3
d121 24
a144 20
#define F_TEXT_TYPE	   1
#define F_PASSWORD_TYPE    2
#define F_CHECKBOX_TYPE    3
#define F_RADIO_TYPE	   4
#define F_SUBMIT_TYPE	   5
#define F_RESET_TYPE	   6
#define F_OPTION_LIST_TYPE 7
#define F_HIDDEN_TYPE      8
#define F_TEXTAREA_TYPE    9
#define F_RANGE_TYPE      10
#define F_FILE_TYPE       11
#define F_TEXT_SUBMIT_TYPE 12
#define F_IMAGE_SUBMIT_TYPE 13
#define F_KEYGEN_TYPE     14

#define F_TEXTLIKE(type) ((type)==F_TEXT_TYPE ||\
			  (type)==F_TEXT_SUBMIT_TYPE ||\
			  (type)==F_PASSWORD_TYPE ||\
			  (type)==F_FILE_TYPE ||\
			  (type)==F_TEXTAREA_TYPE)
@


1.5
log
@Backport from lynx-2.8.6dev.7b to prevent a memory exhaustion from crashing
lynx while parsing pages such as:
http://lcamtuf.coredump.cx/mangleme/gallery/lynx_die1.html

Submitted by: Thorsten Glaser <tg at 66h.42h.de>
@
text
@d8 17
a24 16
/* in LYForms.c */

/* change_form_link calls change_form_link_ex with all its args and FALSE as
  last arg */
extern int change_form_link PARAMS((int cur,
				    DocInfo *newdoc,
				    BOOLEAN *refresh_screen,
				    BOOLEAN use_last_tfpos,
				    BOOLEAN immediate_submit));

extern int change_form_link_ex PARAMS((int cur,
				    DocInfo *newdoc,
				    BOOLEAN *refresh_screen,
				    BOOLEAN use_last_tfpos,
				    BOOLEAN immediate_submit,
				    BOOLEAN draw_only));
d26 2
a27 2
/* InputFieldData is used to pass the info between
 * HTML.c and Gridtext.c in HText_beginInput()
d29 18
a46 18
typedef struct _InputFieldData {
	CONST char *accept;
	CONST char *align;
	int   checked;
	CONST char *class;
	int   disabled;
	CONST char *error;
	CONST char *height;
	CONST char *id;
	CONST char *lang;
	CONST char *max;
	CONST char *maxlength;
	CONST char *md;
	CONST char *min;
	CONST char *name;
	int   size;
	CONST char *src;
	CONST char *type;
d48 1
a48 1
	CONST char *width;
d51 2
a52 2
	CONST char *accept_cs;
} InputFieldData;
d56 10
a65 10
typedef struct _OptionType {
	char *			name;		 /* the name of the entry */
	char *			cp_submit_value; /* the value to submit	  */
	int			value_cs;        /* charset value is in   */
	struct _OptionType *	next;		 /* the next entry	  */
} OptionType;

/* the FormInfo structure is used to contain the form field
 * data within each anchor
 * A pointer to this structure is in the TextAnchor struct.
d67 28
a94 28
typedef struct _FormInfo {
	char *			name;	   /* the name of the link */
	int			number;	   /* which form is the link within */
	int			type;	   /* string, int, etc. */
	char *			value;	   /* user entered string data */
	char *			orig_value;/* the original value */
	int			size;	   /* width on the screen */
	unsigned		maxlength; /* max width of data */
	int			group;	   /* a group associated with the link
					    *  this is used for select's
					    */
	int			num_value; /* value of the numerical fields */
	int 			hrange;	   /* high numerical range */
	int			lrange;	   /* low numerical range */
	OptionType *		select_list; /* array of option choices */
	char *			submit_action;	/* form's action */
	int			submit_method;	/* form's method */
	char *			submit_enctype; /* form's entype */
	char *			submit_title;	/* form's title */
	BOOL			no_cache;  /* Always resubmit? */
	char *			cp_submit_value; /* option value to submit */
	char *			orig_submit_value; /* original submit value */
	int			size_l;	   /* The length of the option list */
	int			disabled;  /* If YES, can't change values */
	int			name_cs;
	int			value_cs;
	char *			accept_cs;
} FormInfo;
d97 4
a100 6
 *  As structure for info associated with a form.
 *  There is some redundancy here, this shouldn't waste too much memory
 *  since the total number of forms (as opposed to form fields) per doc
 *  is expected to be rather small.
 *  More things which are per form rather than per field could be moved
 *  here. - kw
d102 11
a112 12
typedef struct _PerFormInfo
{
	int			number;	   /* form number, see GridText.c */
    /* except for the last two, the following fields aren't actually used.. */
	int			disabled;  /* If YES, can't change values */
	struct _PerFormInfo *	next;	   /* pointer to next form in doc */
	int			nfields;   /* number of fields */
	FormInfo *		first_field;
	FormInfo *		last_field; /* pointer to last field in form */
	char *			accept_cs;
	char *			thisacceptcs; /* used during submit */
} PerFormInfo;
d115 1
a115 1
#define INPUT_ANCHOR     2   /* forms mode input fields */
d141 1
a141 1
#define WWW_INTERN_LINK_TYPE   6 /* can be used as a bitflag... - kw */
d154 6
a159 4
extern void show_formlink_statusline PARAMS((CONST FormInfo *	form,
					     int		for_what));

#endif /* HTFORMS_H */
@


1.4
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@d43 1
a43 1
	CONST char *size;
@


1.4.2.1
log
@MFC:
Fix by avsm@@

Backport from lynx-2.8.6dev.7b to prevent a memory exhaustion from crashing
lynx while parsing pages such as:
http://lcamtuf.coredump.cx/mangleme/gallery/lynx_die1.html

Submitted by: Thorsten Glaser <tg at 66h.42h.de>

ok deraadt@@
@
text
@d43 1
a43 1
	int   size;
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d12 3
a14 3
extern int change_form_link PARAMS((struct link *form_link,
				    document *newdoc, BOOLEAN *refresh_screen,
				    char *link_name, char *link_value,
d18 3
a20 3
extern int change_form_link_ex PARAMS((struct link *form_link,
				    document *newdoc, BOOLEAN *refresh_screen,
				    char *link_name, char *link_value,
d106 1
a106 1
    /* except for the last two, the followign fields aren't actually used.. */
d135 5
a139 2
#define F_TEXTLIKE(type) ((type)==F_TEXT_TYPE || (type)==F_TEXT_SUBMIT_TYPE ||\
			  (type)==F_PASSWORD_TYPE || (type)==F_TEXTAREA_TYPE)
@


1.3.2.1
log
@MFC:
Fix by avsm@@

Backport from lynx-2.8.6dev.7b to prevent a memory exhaustion from crashing
lynx while parsing pages such as:
http://lcamtuf.coredump.cx/mangleme/gallery/lynx_die1.html

Submitted by: Thorsten Glaser <tg at 66h.42h.de>

ok deraadt@@
@
text
@d43 1
a43 1
	int   size;
@


1.3.4.1
log
@MFC:
Fix by avsm@@

Backport from lynx-2.8.6dev.7b to prevent a memory exhaustion from crashing
lynx while parsing pages such as:
http://lcamtuf.coredump.cx/mangleme/gallery/lynx_die1.html

Submitted by: Thorsten Glaser <tg at 66h.42h.de>

ok deraadt@@
@
text
@d43 1
a43 1
	int   size;
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d9 3
d13 11
a23 2
                                    document *newdoc, BOOLEAN *refresh_screen,
				    char *link_name, char *link_value));
d42 1
a42 1
    	CONST char *name;
d48 3
a50 3
        int name_cs;		/* charset handle for name */
        int value_cs;		/* charset handle for value */
        CONST char *accept_cs;
d81 3
a83 3
        char *                  submit_action;  /* form's action */
        int                     submit_method;  /* form's method */
        char *                  submit_enctype; /* form's entype */
d87 1
a87 1
        char *			orig_submit_value; /* original submit value */
d90 3
a92 3
        int 			name_cs;
        int 			value_cs;
        char *			accept_cs;
d108 6
a113 6
        struct _PerFormInfo *	next; 	   /* pointer to next form in doc */
        int			nfields;   /* number of fields */
        FormInfo *		first_field;
        FormInfo *		last_field; /* pointer to last field in form */
        char *			accept_cs;
        char *			thisacceptcs; /* used during submit */
d135 3
d151 4
@


1.1
log
@Initial revision
@
text
@a0 1

d5 1
a5 1
#include "LYStructs.h"
d9 1
a9 1
extern int change_form_link PARAMS((struct link *form_link, int mode,
d61 1
a61 1
	int			maxlength; /* max width of data */
d94 1
a94 1
    /* except for the last two, the followign fields aren't actually used.. */ 
d126 2
a127 1
#define LINK_LINE_FOUND	8	/* used in follow_link_number - kw */
a131 3

#define FORM_UP   1
#define FORM_DOWN 2
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
