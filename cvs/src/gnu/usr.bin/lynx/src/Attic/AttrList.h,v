head	1.7;
access;
symbols
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.07.23.19.13.25;	author deraadt;	state dead;
branches;
next	1.6;
commitid	EcR8E7r0stjLUV4p;

1.6
date	2014.07.09.04.11.35;	author daniel;	state Exp;
branches;
next	1.5;
commitid	lGGuvDWEniklWrQe;

1.5
date	2011.07.22.14.10.39;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.31.09.16.52;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.38;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.17.05;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.48.00;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.48.00;	author maja;	state Exp;
branches;
next	;


desc
@@


1.7
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: AttrList.h,v 1.17 2013/05/03 20:54:09 tom Exp $
 */
#if !defined(__ATTRLIST_H)
#define __ATTRLIST_H

#include <HText.h>
#include <HTMLDTD.h>

#ifdef __cplusplus
extern "C" {
#endif
    enum {
	ABS_OFF = 0,
	STACK_OFF = 0,
	STACK_ON,
	ABS_ON
    };

#define STARTAT 8

    enum {
	DSTYLE_LINK = HTML_A + STARTAT,
	DSTYLE_STATUS = HTML_ELEMENTS + STARTAT,
	DSTYLE_ALINK,		/* active link */
	DSTYLE_NORMAL,		/* default attributes */
	DSTYLE_OPTION,		/* option on the option screen */
	DSTYLE_VALUE,		/* value on the option screen */
	DSTYLE_CANDY,		/* possibly going to vanish */
	DSTYLE_WHEREIS,		/* whereis search target */
	DSTYLE_ELEMENTS
    };

    typedef struct {
	int color;		/* color highlighting to be done */
	int mono;		/* mono highlighting to be done */
	int cattr;		/* attributes to go with the color */
    } HTCharStyle;

#if 0
#define HText_characterStyle CTRACE((tfp,"HTC called from %s/%d\n",__FILE__,__LINE__));_internal_HTC
#else
#define HText_characterStyle _internal_HTC
#endif

#if defined(USE_COLOR_STYLE)
    extern void _internal_HTC(HText *text, int style, int dir);

#define TEMPSTRINGSIZE 256
    extern char class_string[TEMPSTRINGSIZE + 1];

/* stack of attributes during page rendering */
#define MAX_LAST_STYLES 128
    extern int last_styles[MAX_LAST_STYLES + 1];
    extern int last_colorattr_ptr;

#endif

#ifdef __cplusplus
}
#endif
#endif
@


1.6
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.5
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: AttrList.h,v 1.16 2009/04/16 23:42:58 tom Exp $
d50 1
a50 1
    extern char class_string[TEMPSTRINGSIZE];
@


1.4
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 3
d40 1
d42 1
a42 2

#undef HText_characterStyle
d44 1
d54 1
a54 1
    extern int last_styles[MAX_LAST_STYLES];
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d7 9
a15 6
enum {
 ABS_OFF = 0,
 STACK_OFF = 0,
 STACK_ON,
 ABS_ON
};
d19 17
a35 18
enum {
 DSTYLE_LINK = HTML_A+STARTAT,
 DSTYLE_STATUS = HTML_ELEMENTS+STARTAT,
 DSTYLE_ALINK,		/* active link */
 DSTYLE_NORMAL,		/* default attributes */
 DSTYLE_OPTION, 	/* option on the option screen */
 DSTYLE_VALUE, 		/* value on the option screen */
 DSTYLE_HIGH,
 DSTYLE_CANDY,		/* possibly going to vanish */
 DSTYLE_WHEREIS,	/* whereis search target */
 DSTYLE_ELEMENTS
};

typedef struct {
 int color; /* color highlighting to be done */
 int mono; /* mono highlighting to be done */
 int cattr; /* attributes to go with the color */
} HTCharStyle;
d43 2
a44 1
extern void _internal_HTC PARAMS((HText * text, int style, int dir));
d46 1
a46 1
extern char class_string[TEMPSTRINGSIZE];
d49 3
a51 2
extern int last_styles[128];
extern int last_colorattr_ptr;
d55 3
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@a28 15
enum {
 MSTYLE_NORMAL = 0,
 MSTYLE_EM = 1,
 MSTYLE_STRONG = 2,
 MSTYLE_PHYSICAL = 3,
 MSTYLE_A = 4,
 MSTYLE_A_OFF = 4,
 MSTYLE_A_ON,
 MSTYLE_BOLD,
 MSTYLE_UL,
 MSTYLE_STATUS,
 MSTYLE_CANDY,
 MSTYLE_NOMORE
};

d35 1
a35 1
#define HText_characterStyle CTRACE(tfp,"HTC called from %s/%d\n",__FILE__,__LINE__);_internal_HTC
@


1.1
log
@Initial revision
@
text
@d4 2
a5 4
#include "HText.h"
#include "HTMLDTD.h"

#define TEMPSTRINGSIZE 256
d19 7
a25 6
 DSTYLE_ALINK, /* active link */
 DSTYLE_NORMAL, /* default attributes */
	DSTYLE_OPTION, 		/* option on the option screen */
	DSTYLE_VALUE, 		/* value on the option screen */
	DSTYLE_HIGH,
 DSTYLE_CANDY, /* possibly going to vanish */
d35 1
a35 1
 MSTYLE_A_OFF = 4, 
d50 1
a50 9
#ifdef NOT_USED

typedef struct _linkedlist {
 char name[64];
 struct _linkedlist *next;
} linked_list;
#endif

#define HText_characterStyle if(TRACE)fprintf(stderr,"HTC called from %s/%d\n",__FILE__,__LINE__);_internal_HTC
d57 7
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
