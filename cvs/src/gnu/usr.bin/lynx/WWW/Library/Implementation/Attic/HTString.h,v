head	1.8;
access;
symbols
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.8
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.07.23.19.13.24;	author deraadt;	state dead;
branches;
next	1.7;
commitid	EcR8E7r0stjLUV4p;

1.7
date	2014.07.09.04.11.34;	author daniel;	state Exp;
branches;
next	1.6;
commitid	lGGuvDWEniklWrQe;

1.6
date	2011.07.22.14.10.38;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.31.09.16.51;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.04.01.42;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.37;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.16.48;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.44;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.44;	author maja;	state Exp;
branches;
next	;


desc
@@


1.8
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: HTString.h,v 1.38 2013/11/28 11:09:55 tom Exp $
 *						String handling for libwww
 *                                         STRINGS
 *                                            
 * Case-independent string comparison and allocations with copies etc
 */
#ifndef HTSTRING_H
#define HTSTRING_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif /* HTUTILS_H */

#ifdef __cplusplus
extern "C" {
#endif
    extern const char *HTLibraryVersion;	/* String for help screen etc */

/*
 * EBCDIC string comparison using ASCII collating sequence
 */
#ifdef    NOT_ASCII
    extern int AS_casecomp(const char *a, const char *b);
    extern int AS_ncmp(const char *a, const char *b, unsigned int n);

#define    AS_cmp( a, b )  ( AS_ncmp( ( a ), ( b ), -1 ) )

#else
#define AS_casecomp( a, b ) ( strcasecomp( ( a ), ( b ) ) )
#define AS_ncmp( a, b, c )  ( StrNCmp( ( a ), ( b ), ( c ) ) )
#define AS_cmp strcmp

#endif				/* NOT_ASCII */

#define StrNCat(a,b,c) strncat((a),(b),(size_t)(c))
#define StrNCpy(a,b,c) strncpy((a),(b),(size_t)(c))
#define StrNCmp(a,b,c) strncmp((a),(b),(size_t)(c))

#define MemCpy(a,b,c)  memcpy((a),(b),(size_t)(c))
#define MemCmp(a,b,c)  memcmp((a),(b),(size_t)(c))

    /*
     * Workaround for glibc header defect combined with -Wlogical-op warnings
     */
#define StrChr (strchr)

    /*
     * Case-insensitive string comparison
     *
     * The usual routines (comp instead of cmp) had some problem.
     */
    extern int strcasecomp(const char *a, const char *b);
    extern int strncasecomp(const char *a, const char *b, int n);

    extern int strcasecomp8(const char *a, const char *b);
    extern int strncasecomp8(const char *a, const char *b, int n);

    extern int strcasecomp_asterisk(const char *a, const char *b);

    /*
     * strcasecomp8 and strncasecomp8 are variants of strcasecomp and
     * strncasecomp, but use 8bit upper/lower case information from the
     * current display charset
     */

    /*
     * Malloced string manipulation
     */
#define StrAllocCopy(dest, src) HTSACopy (&(dest), src)
#define StrAllocCat(dest, src)  HTSACat  (&(dest), src)
    extern char *HTSACopy(char **dest, const char *src);
    extern char *HTSACat(char **dest, const char *src);

    /*
     * optimized for heavily realloc'd strings in temp objects
     */
#define StrAllocCopy_extra(dest, src) HTSACopy_extra (&(dest), src)
#define FREE_extra(x)   {if (x != NULL) {HTSAFree_extra(x); x = NULL;}}
#define Clear_extra(x)  {if (x != NULL) {*x = '\0';}}
    extern char *HTSACopy_extra(char **dest, const char *src);
    extern void HTSAFree_extra(char *s);

    /*
     * Next word or quoted string
     */
    extern char *HTNextField(char **pstr);

    /* A more general parser - kw */
    extern char *HTNextTok(char **pstr,
			   const char *delims, const char *bracks, char *found);

    extern char *HTSprintf(char **pstr, const char *fmt,...) GCC_PRINTFLIKE(2,3);
    extern char *HTSprintf0(char **pstr, const char *fmt,...) GCC_PRINTFLIKE(2,3);

#if defined(LY_FIND_LEAKS)	/* private otherwise */
    extern char *StrAllocVsprintf(char **pstr,
				  size_t len,
				  const char *fmt,
				  va_list * ap);
#endif

#if defined(__CYGWIN__)
#define USE_QUOTED_PARAMETER 2	/* single and double-quoting */
#elif defined(DOSPATH)
#define USE_QUOTED_PARAMETER 1	/* double-quoting only */
#elif (defined(VMS) || defined(__EMX__))
#define USE_QUOTED_PARAMETER 0	/* no quoting */
#else
#define USE_QUOTED_PARAMETER 2	/* single and double-quoting */
#endif

#if USE_QUOTED_PARAMETER
    extern char *HTQuoteParameter(const char *parameter);
    extern void HTAddXpand(char **result, const char *command, int number, const char *parameter);

#else
#define HTQuoteParameter(parameter) parameter	/* simplify ifdef'ing */
#define HTAddXpand(result,command,number,parameter)  HTAddParam(result,command,number,parameter)
#endif

    extern int HTCountCommandArgs(const char *command);
    extern void HTAddToCmd(char **result, const char *command, int number, const char *string);
    extern void HTAddParam(char **result, const char *command, int number, const char *parameter);
    extern void HTEndParam(char **result, const char *command, int number);

/* Force an option, with leading blanks, to be appended without quoting them */
#define HTOptParam(result, command, number, parameter) HTSACat(result, parameter)

/* Binary copy and concat */
    typedef struct {
	char *str;
	int len;
    } bstring;

    extern void HTSABAlloc(bstring **dest, int len);
    extern void HTSABCopy(bstring **dest, const char *src, int len);
    extern void HTSABCopy0(bstring **dest, const char *src);
    extern void HTSABCat(bstring **dest, const char *src, int len);
    extern void HTSABCat0(bstring **dest, const char *src);
    extern BOOL HTSABEql(bstring *a, bstring *b);
    extern void HTSABFree(bstring **ptr);

#define BStrLen(s)    (((s) != 0) ? (s)->len : 0)
#define BStrData(s)   (((s) != 0) ? (s)->str : 0)

#define BINEQ(a,b)    (HTSABEql(a,b))	/* like STREQ() */

#define isBEmpty(p)   ((p) == 0 || BStrLen(p) == 0)

#define BStrAlloc(d,n)   HTSABAlloc( &(d), n)
#define BStrCopy(d,s)    HTSABCopy( &(d), BStrData(s), BStrLen(s))
#define BStrCopy0(d,s)   HTSABCopy0( &(d), s)
#define BStrCopy1(d,s,n) HTSABCopy(  &(d), s, n)
#define BStrCat(d,s)     HTSABCat( &(d), BStrData(s), BStrLen(s))
#define BStrCat0(d,s)    HTSABCat0( &(d), s)
#define BStrFree(d)      HTSABFree( &(d))

    extern bstring *HTBprintf(bstring **pstr, const char *fmt,...) GCC_PRINTFLIKE(2,3);

    extern void trace_bstring(bstring *data);
    extern void trace_bstring2(const char *text, int size);

#ifdef __cplusplus
}
#endif
#endif				/* HTSTRING_H */
@


1.7
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.6
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: HTString.h,v 1.31 2009/03/17 22:25:50 tom Exp $
d31 1
a31 1
#define AS_ncmp( a, b, c )  ( strncmp( ( a ), ( b ), ( c ) ) )
d36 12
d136 1
d151 7
a157 5
#define BStrCopy(d,s)  HTSABCopy(  &(d), BStrData(s), BStrLen(s))
#define BStrCopy0(d,s) HTSABCopy0( &(d), s)
#define BStrCat(d,s)   HTSABCat(   &(d), BStrData(s), BStrLen(s))
#define BStrCat0(d,s)  HTSABCat0(  &(d), s)
#define BStrFree(d)    HTSABFree(  &(d))
@


1.5
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 6
a6 5
/*                                                   String handling for libwww
                                         STRINGS
                                             
   Case-independent string comparison and allocations with copies etc
   
d21 2
a22 2
    EBCDIC string comparison using ASCII collating sequence
*/
d36 5
a40 7
/*

Case-insensitive string comparison

   The usual routines (comp instead of cmp) had some problem.
   
 */
d55 3
a57 5
/*

Malloced string manipulation

 */
d63 3
a65 3
/*
optimized for heavily realloc'd strings in temp objects
*/
d72 3
a74 5
/*

Next word or quoted string

 */
d77 1
a77 1
/* A more general parser - kw */
d91 6
a96 2
#if (defined(VMS) || defined(DOSPATH) || defined(__EMX__)) && !defined(__CYGWIN__)
#define USE_QUOTED_PARAMETER 0
d98 1
a98 1
#define USE_QUOTED_PARAMETER 1
@


1.4
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@d14 4
a17 1
extern CONST char * HTLibraryVersion;   /* String for help screen etc */
d23 3
a25 2
extern int AS_casecomp  PARAMS((CONST char *a, CONST char *b));
extern int AS_ncmp PARAMS((CONST char *a, CONST char *b, unsigned int n));
a26 1
extern int AS_cmp PARAMS((CONST char *a, CONST char *b));
d33 1
a33 1
#endif /* NOT_ASCII */
d42 5
a46 2
extern int strcasecomp  PARAMS((CONST char *a, CONST char *b));
extern int strncasecomp PARAMS((CONST char *a, CONST char *b, int n));
d48 1
a48 7
extern int strcasecomp8  PARAMS((CONST char *a, CONST char *b));
extern int strncasecomp8 PARAMS((CONST char *a, CONST char *b, int n));
       /*
       **  strcasecomp8 and strncasecomp8 are variants of strcasecomp
       **  and strncasecomp, but use 8bit upper/lower case information
       **  from the current display charset
       */
d50 5
d63 2
a64 2
extern char * HTSACopy PARAMS ((char **dest, CONST char *src));
extern char * HTSACat  PARAMS ((char **dest, CONST char *src));
d72 2
a73 2
extern char * HTSACopy_extra PARAMS ((char **dest, CONST char *src));
extern void   HTSAFree_extra PARAMS ((char *s));
d80 1
a80 1
extern char * HTNextField PARAMS ((char** pstr));
d83 2
a84 2
extern char * HTNextTok PARAMS((char ** pstr,
		      CONST char * delims, CONST char * bracks, char * found));
d86 2
a87 9
#ifdef ANSI_VARARGS
extern char * HTSprintf (char ** pstr, CONST char * fmt, ...)
			GCC_PRINTFLIKE(2,3);
extern char * HTSprintf0 (char ** pstr, CONST char * fmt, ...)
			 GCC_PRINTFLIKE(2,3);
#else
extern char * HTSprintf () GCC_PRINTFLIKE(2,3);
extern char * HTSprintf0 () GCC_PRINTFLIKE(2,3);
#endif
d90 4
a93 5
extern char * StrAllocVsprintf PARAMS((
        char **		pstr,
        size_t		len,
        CONST char *	fmt,
        va_list *	ap));
d103 3
a105 2
extern char *HTQuoteParameter PARAMS((CONST char *parameter));
extern void HTAddXpand PARAMS((char ** result, CONST char * command, int number, CONST char * parameter));
d111 4
a114 4
extern int HTCountCommandArgs PARAMS((CONST char * command));
extern void HTAddToCmd PARAMS((char ** result, CONST char * command, int number, CONST char * string));
extern void HTAddParam PARAMS((char ** result, CONST char * command, int number, CONST char * parameter));
extern void HTEndParam PARAMS((char ** result, CONST char * command, int number));
d120 1
a120 1
typedef struct {
d123 1
a123 1
} bstring;
d125 6
a130 6
extern void HTSABCopy  PARAMS((bstring ** dest, CONST char * src, int len));
extern void HTSABCopy0 PARAMS((bstring ** dest, CONST char * src));
extern void HTSABCat   PARAMS((bstring ** dest, CONST char * src, int len));
extern void HTSABCat0  PARAMS((bstring ** dest, CONST char * src));
extern BOOL HTSABEql   PARAMS((bstring * a, bstring * b));
extern void HTSABFree  PARAMS((bstring ** ptr));
d145 1
a145 6
#ifdef ANSI_VARARGS
extern bstring * HTBprintf (bstring ** pstr, CONST char * fmt, ...)
			    GCC_PRINTFLIKE(2,3);
#else
extern bstring * HTBprintf () GCC_PRINTFLIKE(2,3);
#endif
d147 2
a148 2
extern void trace_bstring PARAMS((bstring *data));
extern void trace_bstring2 PARAMS((CONST char *text, int size));
d150 4
a153 1
#endif /* HTSTRING_H */
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d62 9
d81 1
a81 1
#if ANSI_VARARGS
d114 1
a121 2
#ifdef EXP_FILE_UPLOAD

d127 25
a151 2
extern void HTSABCopy PARAMS((bstring** dest, CONST char * src, int len));
extern void HTSABCat PARAMS((bstring ** dest, CONST char * src, int len));
d153 3
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@a13 2
extern int WWW_TraceFlag;       /* Global flag for all W3 trace */

d82 9
a90 1
#if defined(VMS) || defined(DOSPATH) || defined(__EMX__)
d110 12
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*                                                                 String handling for libwww
d11 1
a11 1
#include "HTUtils.h"
d19 16
d72 1
a72 1
		      const char * delims, const char * bracks, char * found));
d74 8
a82 1
/*
d84 22
a105 3
   end
   
    */
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
