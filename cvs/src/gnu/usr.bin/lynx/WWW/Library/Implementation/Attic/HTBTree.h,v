head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.22
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.18
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.16
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.18
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.16
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2014.07.23.19.13.24;	author deraadt;	state dead;
branches;
next	1.4;
commitid	EcR8E7r0stjLUV4p;

1.4
date	2009.05.31.09.16.51;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.22.04.01.42;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.16.46;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.44;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.44;	author maja;	state Exp;
branches;
next	;


desc
@@


1.5
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*                  /Net/dxcern/userd/timbl/hypertext/WWW/Library/Implementation/HTBTree.html
                         BALANCED BINARY TREE FOR SORTING THINGS

   Tree creation, traversal and freeing.  User-supplied comparison routine.

   Author: Arthur Secret, CERN. Public domain.  Please mail bugs and changes to
   www-request@@info.cern.ch

   part of libWWW

 */
#ifndef HTBTREE_H
#define HTBTREE_H 1

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
/*

Data structures

 */ typedef struct _HTBTree_element {
	void *object;		/* User object */
	struct _HTBTree_element *up;
	struct _HTBTree_element *left;
	int left_depth;
	struct _HTBTree_element *right;
	int right_depth;
    } HTBTElement;

    typedef int (*HTComparer) (void *a, void *b);

    typedef struct _HTBTree_top {
	HTComparer compare;
	struct _HTBTree_element *top;
    } HTBTree;

/*

Create a binary tree given its discrimination routine

 */
    extern HTBTree *HTBTree_new(HTComparer comp);

/*

Free storage of the tree but not of the objects

 */
    extern void HTBTree_free(HTBTree *tree);

/*

Free storage of the tree and of the objects

 */
    extern void HTBTreeAndObject_free(HTBTree *tree);

/*

Add an object to a binary tree

 */

    extern void HTBTree_add(HTBTree *tree, void *object);

/*

Search an object in a binary tree

  returns          Pointer to equivalent object in a tree or NULL if none.
 */

    extern void *HTBTree_search(HTBTree *tree, void *object);

/*

Find user object for element

 */
#define HTBTree_object(element)  ((element)->object)

/*

Find next element in depth-first order

  ON ENTRY,

  ele                    if NULL, start with leftmost element. if != 0 give next object to
                         the right.

  returns                Pointer to element or NULL if none left.

 */
    extern HTBTElement *HTBTree_next(HTBTree *tree, HTBTElement *ele);

#ifdef __cplusplus
}
#endif
#endif				/* HTBTREE_H */
@


1.4
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@@


1.3
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@d19 3
d26 15
a40 17
 */
typedef struct _HTBTree_element {
    void                        *object;        /* User object */
    struct _HTBTree_element     *up;
    struct _HTBTree_element     *left;
    int                         left_depth;
    struct _HTBTree_element     *right;
    int                         right_depth;
} HTBTElement;

typedef int (*HTComparer) PARAMS((void * a, void * b));

typedef struct _HTBTree_top {
    HTComparer                  compare;
    struct _HTBTree_element     *top;
} HTBTree;

d47 1
a47 3
extern HTBTree * HTBTree_new PARAMS((HTComparer comp));


d54 1
a54 3
extern void HTBTree_free PARAMS((HTBTree* tree));


d61 1
a61 3
extern void HTBTreeAndObject_free PARAMS((HTBTree* tree));


d69 1
a69 2
extern void HTBTree_add PARAMS((HTBTree* tree, void * object));

d78 1
a78 2
extern void * HTBTree_search PARAMS((HTBTree* tree, void * object));

a86 1

d99 1
a99 1
extern HTBTElement * HTBTree_next PARAMS((HTBTree* tree, HTBTElement * ele));
d101 4
a104 1
#endif /* HTBTREE_H */
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d18 1
a18 1
 
d79 10
d104 1
a104 1
  returns                Pointer to element ot NULL if none left.
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
                                             
d5 1
a5 1
   
d8 1
a8 1
   
d10 1
a10 1
   
d12 5
a16 7
#ifdef SHORT_NAMES
#define HTBTree_new             HTBTNew
#define HTBTree_free            HTBTFree
#define HTBTreeAndObject_free   HTBTAOFr
#define HTBTree_add             HTBTAdd
#define HTBTree_next            HTBTNext
/* #define      HTBTree_object          HTBTObje already a macro */
d18 1
a18 2


d90 1
a90 1
  
d93 1
a93 1
                         
d95 1
a95 1
                         
d99 1
a99 3
/*

   end  */
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
