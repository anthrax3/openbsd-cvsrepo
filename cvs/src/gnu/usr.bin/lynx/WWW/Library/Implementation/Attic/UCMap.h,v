head	1.8;
access;
symbols
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.8
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.07.23.19.13.24;	author deraadt;	state dead;
branches;
next	1.7;
commitid	EcR8E7r0stjLUV4p;

1.7
date	2014.07.09.04.11.34;	author daniel;	state Exp;
branches;
next	1.6;
commitid	lGGuvDWEniklWrQe;

1.6
date	2011.07.22.14.10.38;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.31.09.16.51;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.04.01.43;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.37;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.16.50;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.47;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.47;	author maja;	state Exp;
branches;
next	;


desc
@@


1.8
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: UCMap.h,v 1.27 2011/12/01 02:00:57 tom Exp $
 */
#ifndef UCMAP_H
#define UCMAP_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
    typedef enum {
	ucError = -1,
	ucZeroWidth = -2,
	ucInvalidHash = -3,
	ucNotFound = -4,
	ucNeedMore = -10,
	ucCannotConvert = -11,
	ucCannotOutput = -12,
	ucBufferTooSmall = -13,
	ucUnknown = -14
    } UCStatus;

    typedef long UCode_t;

    extern BOOL UCScanCode(UCode_t *, const char *, BOOL);

    extern int UCTransUniChar(UCode_t unicode,
			      int charset_out);
    extern int UCTransUniCharStr(char *outbuf,
				 int buflen,
				 UCode_t unicode,
				 int charset_out,
				 int chk_single_flag);
    extern int UCTransChar(int ch_in,
			   int charset_in,
			   int charset_out);
    extern int UCReverseTransChar(int ch_out,
				  int charset_in,
				  int charset_out);
    extern int UCTransCharStr(char *outbuf,
			      int buflen,
			      int ch_in,
			      int charset_in,
			      int charset_out,
			      int chk_single_flag);
#ifdef EXP_JAPANESEUTF8_SUPPORT
    extern UCode_t UCTransJPToUni(char *inbuf,
				  int buflen,
				  int charset_in);
#endif
    extern UCode_t UCTransToUni(int ch_in,
				int charset_in);
    extern int UCGetRawUniMode_byLYhndl(int i);
    extern int UCGetLYhndl_byMIME(const char *p);	/* returns -1 if name not recognized */
    extern int safeUCGetLYhndl_byMIME(const char *p);	/* returns LATIN1 if name not recognized */

#ifdef USE_LOCALE_CHARSET
    extern void LYFindLocaleCharset(void);
#endif

    extern int UCLYhndl_for_unspec;
    extern int UCLYhndl_for_unrec;
    extern int UCLYhndl_HTFile_for_unspec;
    extern int UCLYhndl_HTFile_for_unrec;

/* easy to type: */
    extern int LATIN1;		/* UCGetLYhndl_byMIME("iso-8859-1") */
    extern int US_ASCII;	/* UCGetLYhndl_byMIME("us-ascii")   */
    extern int UTF8_handle;	/* UCGetLYhndl_byMIME("utf-8")      */

#undef TRANSPARENT		/* defined on Solaris in <sys/stream.h> */
    extern int TRANSPARENT;	/* UCGetLYhndl_byMIME("x-transparent")  */

/*
In general, Lynx translates letters from document charset to display charset.
If document charset is not specified or not recognized by Lynx, we fall back
to different assumptions below, read also lynx.cfg for info.

UCLYhndl_for_unspec -  assume this as charset for documents that don't
                       specify a charset parameter in HTTP headers or via META
                       this corresponds to "assume_charset"

UCLYhndl_HTFile_for_unspec -  assume this as charset of local file
                       this corresponds to "assume_local_charset"

UCLYhndl_for_unrec  -  in case a charset parameter is not recognized;
                       this corresponds to "assume_unrec_charset"

UCLYhndl_HTFile_for_unrec  - the same but only for local files,
                             currently not used.

current_char_set  -	this corresponds to "display charset",
			declared in LYCharSets.c and really important.

All external charset information is available in so called MIME format.
For internal needs Lynx uses charset handlers as integers
from UCGetLYhndl_byMIME().  However, there is no way to recover
from user's error in configuration file lynx.cfg or command line switches,
those unrecognized MIME names are assumed as LATIN1 (via safeUCGetLYhndl...).
*/

#define UCTRANS_NOTFOUND (-4)

#ifdef __cplusplus
}
#endif
#endif				/* UCMAP_H */
@


1.7
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.6
log
@update to lynx2.8.7rel.2, with local patches:
- restore local lynx.cfg settings [avsm]
- fix makefile races [espie]
- read/write result checking fixes to avoid unsigned comparisons vs -1 [krw]
- initialize all the InputFieldData members correctly [fgsch]
- fix socklen_t test to include <sys/types.h> [miod]
- fgets(3) returns NULL on error, not 0. No functional change [cloder]

ok krw@@, tests by Simon Kuhnle and Martin Pieuchot
@
text
@d2 1
a2 1
 * $LynxId: UCMap.h,v 1.23 2009/01/01 02:03:25 tom Exp $
d28 2
d37 1
a37 1
    extern int UCTransChar(char ch_in,
d40 1
a40 1
    extern int UCReverseTransChar(char ch_out,
d45 1
a45 1
			      char ch_in,
d54 1
a54 1
    extern UCode_t UCTransToUni(char ch_in,
@


1.5
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 3
d14 12
d58 1
a58 1
#ifdef EXP_LOCALE_CHARSET
@


1.4
log
@update to lynx 2.8.5rel.1
tested todd@@,naddy@@. millert@@ deraadt@@ ok
@
text
@d8 4
a11 1
typedef long UCode_t;
d13 29
a41 33
extern int UCTransUniChar PARAMS((
	UCode_t		unicode,
	int		charset_out));
extern int UCTransUniCharStr PARAMS((
	char *		outbuf,
	int		buflen,
	UCode_t		unicode,
	int		charset_out,
	int		chk_single_flag));
extern int UCTransChar PARAMS((
	char		ch_in,
	int		charset_in,
	int		charset_out));
extern int UCReverseTransChar PARAMS((
	char		ch_out,
	int		charset_in,
	int		charset_out));
extern int UCTransCharStr PARAMS((
	char *		outbuf,
	int		buflen,
	char		ch_in,
	int		charset_in,
	int		charset_out,
	int		chk_single_flag));
extern UCode_t UCTransToUni PARAMS((
	char		ch_in,
	int		charset_in));
extern int UCGetRawUniMode_byLYhndl PARAMS((
	int		i));
extern int UCGetLYhndl_byMIME PARAMS((
	CONST char *	p)); /* returns -1 if name not recognized */
extern int safeUCGetLYhndl_byMIME PARAMS((
	CONST char *	p)); /* returns LATIN1 if name not recognized */
d44 1
a44 1
extern void LYFindLocaleCharset NOPARAMS;
d47 4
a50 4
extern int UCLYhndl_for_unspec;
extern int UCLYhndl_for_unrec;
extern int UCLYhndl_HTFile_for_unspec;
extern int UCLYhndl_HTFile_for_unrec;
d53 3
a55 3
extern int LATIN1;     /* UCGetLYhndl_byMIME("iso-8859-1") */
extern int US_ASCII;   /* UCGetLYhndl_byMIME("us-ascii")   */
extern int UTF8_handle;	/* UCGetLYhndl_byMIME("utf-8")      */
d57 2
a58 2
#undef TRANSPARENT	/* defined on Solaris in <sys/stream.h> */
extern int TRANSPARENT; /* UCGetLYhndl_byMIME("x-transparent")  */
a77 1

a87 1

d90 4
a93 1
#endif /* UCMAP_H */
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d44 4
d56 1
a56 1
extern int UTF8;       /* UCGetLYhndl_byMIME("utf-8")      */
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d54 3
@


1.1
log
@Initial revision
@
text
@a0 1

d4 4
a36 2
extern int UCGetLYhndl_byMIME PARAMS((
	CONST char *	p));
d39 4
d49 35
a84 2

#define HT_CANNOT_TRANSLATE -4	/* could go into HTUtils.h */
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
