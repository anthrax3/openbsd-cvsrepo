head	1.6;
access;
symbols
	OPENBSD_5_5:1.4.0.22
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.18
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.16
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.07.23.19.13.24;	author deraadt;	state dead;
branches;
next	1.5;
commitid	EcR8E7r0stjLUV4p;

1.5
date	2014.07.09.04.11.34;	author daniel;	state Exp;
branches;
next	1.4;
commitid	lGGuvDWEniklWrQe;

1.4
date	2009.05.31.09.16.51;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.18.59.36;	author avsm;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.25.18.16.46;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	98.03.11.17.47.42;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.42;	author maja;	state Exp;
branches;
next	;


desc
@@


1.6
log
@delinked from tree, now it goes to the bit bucket
@
text
@/*
 * $LynxId: HTCJK.h,v 1.19 2012/08/15 23:11:03 tom Exp $
 *
 *			CJK character converter		HTCJK.h
 *			=======================
 *
 *	Added 11-Jun-96 by FM, based on jiscode.h for
 *	  Yutaka Sato's (ysato@@etl.go.jp) SJIS.c, and
 *	  Takuya ASADA's (asada@@three-a.co.jp) CJK patches.
 *	  (see SGML.c).
 *
 */

#ifndef HTCJK_H
#define HTCJK_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
/*
 *	STATUS CHANGE CODES
 */
#define TO_2BCODE	'$'
#define TO_1BCODE	'('
#define TO_KANA		'\016'
#define TO_KANAOUT	'\017'
#define TO_KANJI	"\033$B"
#define TO_HANJI	"\033$A"
#define TO_HANGUL	"\033$(C"
#define TO_ASCII	"\033(B"
#define IS_SJIS_LO(lo)	((0x40<=lo)&&(lo!=0x7F)&&(lo<=0xFC))
#define IS_SJIS_HI1(hi) ((0x81 <= (hi)) && ((hi) <= 0x9F))	/* 1st lev. */
#define IS_SJIS_HI2(hi) ((0xE0 <= (hi)) && ((hi) <= 0xEF))	/* 2nd lev. */
#define IS_SJIS(hi,lo,in_sjis) (!IS_SJIS_LO(lo)?0:IS_SJIS_HI1(hi)?(in_sjis=1):in_sjis&&IS_SJIS_HI2(hi))
#define IS_SJIS_2BYTE(hi,lo) (IS_SJIS_LO(lo)&&(IS_SJIS_HI1(hi)||IS_SJIS_HI2(hi)))
#define IS_SJIS_X0201KANA(lo) ((0xA1<=lo)&&(lo<=0xDF))
#define IS_EUC_LOX(lo)	((0xA1<=lo)&&(lo<=0xFE))	/* extended */
#define IS_EUC_HI(hi)	((0xA1<=hi)&&(hi<=0xFE))
#define IS_EUC_X0201KANA(hi,lo) ((hi==0x8E)&&(0xA1<=lo)&&(lo<=0xDF))
#define IS_EUC(hi,lo) ((IS_EUC_HI(hi) && IS_EUC_LOX(lo))||IS_EUC_X0201KANA(hi,lo))
#define IS_JAPANESE_2BYTE(hi,lo) (IS_SJIS_2BYTE(hi,lo) || IS_EUC(hi,lo))
#define IS_BIG5_LOS(lo)	((0x40<=lo)&&(lo<=0x7E))	/* standard */
#define IS_BIG5_LOX(lo)	((0xA1<=lo)&&(lo<=0xFE))	/* extended */
#define IS_BIG5_HI(hi)	((0xA1<=hi)&&(hi<=0xFE))
#define IS_BIG5(hi,lo) (IS_BIG5_HI(hi) && (IS_BIG5_LOS(lo) || IS_BIG5_LOX(lo)))
    typedef enum {
	NOKANJI = 0, EUC, SJIS, JIS
    } HTkcode;
    typedef enum {
	NOCJK = 0, JAPANESE, CHINESE, KOREAN, TAIPEI
    } HTCJKlang;

    extern HTCJKlang HTCJK;

/*
 *  Function prototypes.
 */
    extern void JISx0201TO0208_EUC(unsigned IHI,
				   unsigned ILO,
				   unsigned char *OHI,
				   unsigned char *OLO);

    extern unsigned char *SJIS_TO_JIS1(unsigned HI,
				       unsigned LO,
				       unsigned char *JCODE);

    extern unsigned char *JIS_TO_SJIS1(unsigned HI,
				       unsigned LO,
				       unsigned char *SJCODE);

    extern unsigned char *EUC_TO_SJIS1(unsigned HI,
				       unsigned LO,
				       register unsigned char *SJCODE);

    extern void JISx0201TO0208_SJIS(unsigned I,
				    unsigned char *OHI,
				    unsigned char *OLO);

    extern unsigned char *SJIS_TO_EUC1(unsigned HI,
				       unsigned LO,
				       unsigned char *EUCp);

    extern unsigned char *SJIS_TO_EUC(unsigned char *src,
				      unsigned char *dst);

    extern unsigned char *EUC_TO_SJIS(unsigned char *src,
				      unsigned char *dst);

    extern unsigned char *EUC_TO_JIS(unsigned char *src,
				     unsigned char *dst,
				     const char *toK,
				     const char *toA);

    extern unsigned char *TO_EUC(const unsigned char *jis,
				 unsigned char *euc);

    extern void TO_SJIS(const unsigned char *any,
			unsigned char *sjis);

    extern void TO_JIS(const unsigned char *any,
		       unsigned char *jis);

    extern char *str_kcode(HTkcode code);

#ifdef __cplusplus
}
#endif
#endif				/* HTCJK_H */
@


1.5
log
@update to lynx 2.8.8rel2, keeping local changes. primarily to get these
changes from 2.8.8dev.16:

* fix most issues found by clang 3.2 analyze
* fix most issues found by Coverity scan

tested on i386, sparc64, and macppc by myself.
tested on vax by miod@@ (including https)
helpful discussion with avsm@@, sthen@@

ok deraadt@@
@
text
@@


1.4
log
@Update to lynx-2.8.6.rel5, with our local patches maintained where relevant.
tests from miod@@ sthen@@ jmc@@ jsing@@
two additional fixes from miod:
- fix uninitialized stack variable use, leading to occasional crash.
- modify the socklen_t test to include <sys/types.h>, fixes gcc2 build failures
@
text
@d1 4
a4 1
/*			CJK character converter		HTCJK.h
d36 2
a37 2
#define IS_SJIS_HI1(hi) ((0x81<=hi)&&(hi<=0x9F))	/* 1st lev. */
#define IS_SJIS_HI2(hi) ((0xE0<=hi)&&(hi<=0xEF))	/* 2nd lev. */
d62 12
a73 12
    extern void JISx0201TO0208_EUC(register unsigned char IHI,
				   register unsigned char ILO,
				   register unsigned char *OHI,
				   register unsigned char *OLO);

    extern unsigned char *SJIS_TO_JIS1(register unsigned char HI,
				       register unsigned char LO,
				       register unsigned char *JCODE);

    extern unsigned char *JIS_TO_SJIS1(register unsigned char HI,
				       register unsigned char LO,
				       register unsigned char *SJCODE);
d75 2
a76 2
    extern unsigned char *EUC_TO_SJIS1(unsigned char HI,
				       unsigned char LO,
d79 3
a81 3
    extern void JISx0201TO0208_SJIS(register unsigned char I,
				    register unsigned char *OHI,
				    register unsigned char *OLO);
d83 2
a84 2
    extern unsigned char *SJIS_TO_EUC1(unsigned char HI,
				       unsigned char LO,
@


1.3
log
@Update to lynx-2.8.4-rel1, patchset d, now with IPv6 as well

Local patches we maintain to the distribution are:
- replace unbounded fscanf with fgets (avsm)
- spelling fixes (deraadt)
- hppa -O0 workaround (mickey)
- default to ftp passive (deraadt)
- work with non-exec scripts (deraadt,hin,maja)
- be more careful with rlogin username (art)
- default to our webpage (deraadt)
- install helpfiles locally (maja)
- mkdtemp temp space directory (art)
- install more recent config.guess (avsm)

Tested by beck,millert,grange,fries,miod and others, deraadt@@ ok
@
text
@d2 8
a9 8
**			=======================
**
**	Added 11-Jun-96 by FM, based on jiscode.h for
**	  Yutaka Sato's (ysato@@etl.go.jp) SJIS.c, and
**	  Takuya ASADA's (asada@@three-a.co.jp) CJK patches.
**	  (see SGML.c).
**
*/
d18 3
d22 2
a23 6
**	STATUS CHANGE CODES
*/
#ifdef ESC
#undef ESC
#endif /* ESC */
#define ESC		CH_ESC  /* S/390 -- gil -- 0098 */
a25 1

a27 1

a31 1

a37 1

a41 1

a42 1

d47 16
d64 3
a66 2
typedef enum {NOKANJI, EUC, SJIS, JIS} HTkcode;
typedef enum {NOCJK, JAPANESE, CHINESE, KOREAN, TAIPEI} HTCJKlang;
d68 3
a70 1
extern HTCJKlang HTCJK;
d72 31
a102 59
/*
**  Function prototypes.
*/
extern void JISx0201TO0208_EUC PARAMS((
	register unsigned char		IHI,
	register unsigned char		ILO,
	register unsigned char *	OHI,
	register unsigned char *	OLO));

extern unsigned char * SJIS_TO_JIS1 PARAMS((
	register unsigned char		HI,
	register unsigned char		LO,
	register unsigned char *	JCODE));

extern unsigned char * JIS_TO_SJIS1 PARAMS((
	register unsigned char		HI,
	register unsigned char		LO,
	register unsigned char *	SJCODE));

extern unsigned char * EUC_TO_SJIS1 PARAMS((
	unsigned char			HI,
	unsigned char			LO,
	register unsigned char *	SJCODE));

extern void JISx0201TO0208_SJIS PARAMS((
	register unsigned char		I,
	register unsigned char *	OHI,
	register unsigned char *	OLO));

extern unsigned char * SJIS_TO_EUC1 PARAMS((
	unsigned char		HI,
	unsigned char		LO,
	unsigned char *		EUCp));

extern unsigned char * SJIS_TO_EUC PARAMS((
	unsigned char *		src,
	unsigned char *		dst));

extern unsigned char * EUC_TO_SJIS PARAMS((
	unsigned char *		src,
	unsigned char *		dst));

extern unsigned char * EUC_TO_JIS PARAMS((
	unsigned char *		src,
	unsigned char *		dst,
	CONST char *		toK,
	CONST char *		toA));

extern unsigned char * TO_EUC PARAMS((
	CONST unsigned char *	jis,
	unsigned char *		euc));

extern void TO_SJIS PARAMS((
	CONST unsigned char *	any,
	unsigned char *		sjis));

extern void TO_JIS PARAMS((
	CONST unsigned char *	any,
	unsigned char *		jis));
d104 1
a104 1
extern char *str_kcode PARAMS((HTkcode code));
d106 4
a109 1
#endif /* HTCJK_H */
@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@d40 2
a42 1
#define IS_EUC_LOS(lo)	((0x21<=lo)&&(lo<=0x7E))	/* standard */
d45 4
a48 1
#define IS_EUC(hi,lo) IS_EUC_HI(hi) && (IS_EUC_LOS(lo) || IS_EUC_LOX(lo))
d53 4
a56 1
#define IS_BIG5(hi,lo) IS_BIG5_HI(hi) && (IS_BIG5_LOS(lo) || IS_BIG5_LOX(lo))
d58 1
a58 2
typedef enum _HTkcode {NOKANJI, EUC, SJIS, JIS} HTkcode;
typedef enum _HTCJKlang {NOCJK, JAPANESE, CHINESE, KOREAN, TAIPEI} HTCJKlang;
d119 2
@


1.1
log
@Initial revision
@
text
@d14 4
d24 1
a24 1
#define ESC		'\033'
d103 1
a103 1
	unsigned char *		jis,
d107 1
a107 1
	unsigned char *		any,
d111 1
a111 1
	unsigned char *		any,
@


1.1.1.1
log
@Lynx 2.8
@
text
@@
