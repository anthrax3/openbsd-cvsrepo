head	1.2;
access;
symbols
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2000.03.25.18.16.45;	author maja;	state dead;
branches;
next	1.1;

1.1
date	98.03.11.17.47.42;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.42;	author maja;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Upgrade to Lynx 2.8.2. -moj
@
text
@/*                                   AUTHENTICATION MODULE
                                             
   This is the authentication module. By modifying the function HTAA_authenticate() it can
   be made to support external authentication methods.
   
 */

#ifndef HTAUTH_H
#define HTAUTH_H

#ifndef HTUTILS_H
#include "HTUtils.h"
#endif /* HTUTILS_H */
#include "HTAAUtil.h"
#include "HTAAProt.h"


#ifdef SHORT_NAMES
#define HTAAauth        HTAA_authenticate
#endif /* SHORT_NAMES */


/*
** Server's representation of a user (fields in authentication string)
*/
typedef struct {
    HTAAScheme  scheme;         /* Scheme used to authenticate this user */
    char *      username;
    char *      password;
    char *      inet_addr;
    char *      timestamp;
    char *      secret_key;
} HTAAUser;
/*

User Authentication

 */

/* SERVER PUBLIC                                        HTAA_authenticate()
**                      AUTHENTICATE USER
** ON ENTRY:
**      scheme          used authentication scheme.
**      scheme_specifics the scheme specific parameters
**                      (authentication string for Basic and
**                      Pubkey schemes).
**      prot            is the protection information structure
**                      for the file.
**
** ON EXIT:
**      returns         NULL, if authentication failed.
**                      Otherwise a pointer to a structure
**                      representing authenticated user,
**                      which should not be freed.
*/
PUBLIC HTAAUser *HTAA_authenticate PARAMS((HTAAScheme   scheme,
                                           char *       scheme_specifics,
                                           HTAAProt *   prot));
/*

 */

#endif /* not HTAUTH_H */
/*

   End of file HTAuth.h.  */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Lynx 2.8
@
text
@@
