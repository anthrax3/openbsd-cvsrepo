head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.1.1.0.68
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.64
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.62
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.60
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.58
	OPENBSD_5_0:1.1.1.1.0.56
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.54
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.52
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.48
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.50
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.46
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.44
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.42
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.40
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.38
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.36
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.34
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.32
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.30
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.28
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.26
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.24
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.22
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.20
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.18
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.16
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.14
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.12
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.10
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.8
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.6
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	LYNX_2_8:1.1.1.1
	LYNX:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.07.23.19.13.24;	author deraadt;	state dead;
branches;
next	1.1;
commitid	EcR8E7r0stjLUV4p;

1.1
date	98.03.11.17.47.49;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.11.17.47.49;	author maja;	state Exp;
branches;
next	;


desc
@@


1.2
log
@delinked from tree, now it goes to the bit bucket
@
text
@				03-Jun-1994

	I have added DIRECT_WAIS support for VMS to Lynx.  It uses highly
modified freeWAIS modules, collected into HTVMS_WaisUI.c, HTVMS_WaisUI.h,
HTVMS_WaisProt.c, and HTVMS_WaisProt.h, interfaced to HTWAIS.c and HTWSRC.c
of the WWWLib.  The socket reads and writes use the code for VMS in the Lynx
version of the WWWLib, and thus are non-blocking (interruptable via the 'z'
command), and "already" ported to all the VMS TCPIP packages supported by
Lynx.   All messaging associated with WAIS searches and document fetches go to
the Lynx statusline as Progress() or Alarm() reports.

	I also prettied up the HTWAIS.c and HTWSRC.c screen displays for both
VMS and Unix.  I've been trying to build in recursive FORM-based interfaces,
instead of the present iSINDEX-based interfaces, but haven't succeeded ;(.
	
	The DIRECT_WAIS support is automatic for VMS (i.e., is implemented
via the BUILD.COM and LIBMAKE.COM procedures, without need to specify anything
but your TCPIP package, as in the previous, standard VMS builds).  Simply
enter   @@BUILD <TCPIP package>   or enter   @@BUILD   and then the number of
your TCPIP package in response to the prompt, and you'll have DIRECT_WAIS
support along with every other wonderful thing in Lynx 8-).

				Fote

=========================================================================
 Foteos Macrides           Worcester Foundation for Experimental Biology
 MACRIDES@@SCI.WFEB.EDU     222 Maple Avenue, Shrewsbury, MA 01545
=========================================================================
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Lynx 2.8
@
text
@@
