head	1.5;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2017.10.04.20.57.10;	author patrick;	state Exp;
branches;
next	1.4;
commitid	GpTBxUnGbNoMyhOF;

1.4
date	2017.07.09.15.28.36;	author espie;	state Exp;
branches;
next	1.3;
commitid	AZstanCImDR1vYEO;

1.3
date	2017.01.24.08.44.47;	author patrick;	state Exp;
branches;
next	1.2;
commitid	nAFx1y3cdFPkOgnP;

1.2
date	2017.01.14.20.12.42;	author patrick;	state Exp;
branches;
next	1.1;
commitid	kbn8tb0boeY90was;

1.1
date	2016.09.05.10.56.50;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.5
log
@Update clang build infrastructure for LLVM 5.0.0.
@
text
@# $OpenBSD: Makefile,v 1.4 2017/07/09 15:28:36 espie Exp $

LIB=	clangCodeGen
NOPIC=
NOPROFILE=

CPPFLAGS+=	${CLANG_INCLUDES}

.include <bsd.own.mk>
SRCS=	BackendUtil.cpp \
	CGAtomic.cpp \
	CGBlocks.cpp \
	CGBuiltin.cpp \
	CGCUDANV.cpp \
	CGCUDARuntime.cpp \
	CGCXX.cpp \
	CGCXXABI.cpp \
	CGCall.cpp \
	CGClass.cpp \
	CGCleanup.cpp \
	CGCoroutine.cpp \
	CGDebugInfo.cpp \
	CGDecl.cpp \
	CGDeclCXX.cpp \
	CGException.cpp \
	CGExpr.cpp \
	CGExprAgg.cpp \
	CGExprCXX.cpp \
	CGExprComplex.cpp \
	CGExprConstant.cpp \
	CGExprScalar.cpp \
	CGGPUBuiltin.cpp \
	CGLoopInfo.cpp \
	CGObjC.cpp \
	CGObjCGNU.cpp \
	CGObjCMac.cpp \
	CGObjCRuntime.cpp \
	CGOpenCLRuntime.cpp \
	CGOpenMPRuntime.cpp \
	CGOpenMPRuntimeNVPTX.cpp \
	CGRecordLayoutBuilder.cpp \
	CGStmt.cpp \
	CGStmtOpenMP.cpp \
	CGVTT.cpp \
	CGVTables.cpp \
	CodeGenABITypes.cpp \
	CodeGenAction.cpp \
	CodeGenFunction.cpp \
	CodeGenModule.cpp \
	CodeGenPGO.cpp \
	CodeGenTBAA.cpp \
	CodeGenTypes.cpp \
	ConstantInitBuilder.cpp \
	CoverageMappingGen.cpp \
	ItaniumCXXABI.cpp \
	MacroPPCallbacks.cpp \
	MicrosoftCXXABI.cpp \
	ModuleBuilder.cpp \
	ObjectFilePCHContainerOperations.cpp \
	SanitizerMetadata.cpp \
	SwiftCallingConv.cpp \
	TargetInfo.cpp \
	VarBypassDetector.cpp

.PATH:	${.CURDIR}/../../../llvm/tools/clang/lib/CodeGen

install:
	@@# Nothing here so far ...

.include <bsd.lib.mk>
@


1.4
log
@zap empty depends/silence empty installs.
okay millert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2017/01/24 08:44:47 patrick Exp $
a14 1
	CGCUDABuiltin.cpp \
d32 1
d53 1
d56 1
@


1.3
log
@Update clang build infrastructure for LLVM 4.0.0

Discussed with kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2017/01/14 20:12:42 patrick Exp $
a64 3
depend:
	# Nothing here so far ...

d66 1
a66 1
	# Nothing here so far ...
@


1.2
log
@Update clang build infrastructure for LLVM 3.9.1

"go ahead" kettenis@@
"just go ahead" deraadt@@
"sounds good to me" stefan@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:50 pascal Exp $
d22 1
d60 2
a61 1
	TargetInfo.cpp
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d15 1
d39 1
d58 1
@

