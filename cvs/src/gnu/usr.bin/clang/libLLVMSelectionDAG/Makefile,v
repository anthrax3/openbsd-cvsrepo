head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2017.07.09.15.28.35;	author espie;	state Exp;
branches;
next	1.2;
commitid	AZstanCImDR1vYEO;

1.2
date	2017.01.14.20.12.41;	author patrick;	state Exp;
branches;
next	1.1;
commitid	kbn8tb0boeY90was;

1.1
date	2016.09.05.10.56.49;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.3
log
@zap empty depends/silence empty installs.
okay millert@@
@
text
@# $OpenBSD: Makefile,v 1.2 2017/01/14 20:12:41 patrick Exp $

LIB=	LLVMSelectionDAG
NOPIC=
NOPROFILE=

.include <bsd.own.mk>
SRCS=	DAGCombiner.cpp \
	FastISel.cpp \
	FunctionLoweringInfo.cpp \
	InstrEmitter.cpp \
	LegalizeDAG.cpp \
	LegalizeFloatTypes.cpp \
	LegalizeIntegerTypes.cpp \
	LegalizeTypes.cpp \
	LegalizeTypesGeneric.cpp \
	LegalizeVectorOps.cpp \
	LegalizeVectorTypes.cpp \
	ResourcePriorityQueue.cpp \
	ScheduleDAGFast.cpp \
	ScheduleDAGRRList.cpp \
	ScheduleDAGSDNodes.cpp \
	SelectionDAG.cpp \
	SelectionDAGBuilder.cpp \
	SelectionDAGDumper.cpp \
	SelectionDAGISel.cpp \
	SelectionDAGPrinter.cpp \
	SelectionDAGTargetInfo.cpp \
	StatepointLowering.cpp \
	ScheduleDAGVLIW.cpp \
	TargetLowering.cpp

.PATH:	${.CURDIR}/../../../llvm/lib/CodeGen/SelectionDAG

install:
	@@# Nothing here so far ...

.include <bsd.lib.mk>
@


1.2
log
@Update clang build infrastructure for LLVM 3.9.1

"go ahead" kettenis@@
"just go ahead" deraadt@@
"sounds good to me" stefan@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:49 pascal Exp $
a34 3
depend:
	# Nothing here so far ...

d36 1
a36 1
	# Nothing here so far ...
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d28 1
d31 1
a31 2
	TargetLowering.cpp \
	TargetSelectionDAGInfo.cpp
@

