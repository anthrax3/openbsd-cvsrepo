head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2017.07.09.15.28.36;	author espie;	state Exp;
branches;
next	1.2;
commitid	AZstanCImDR1vYEO;

1.2
date	2017.01.24.08.44.47;	author patrick;	state Exp;
branches;
next	1.1;
commitid	nAFx1y3cdFPkOgnP;

1.1
date	2016.09.05.10.56.50;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.3
log
@zap empty depends/silence empty installs.
okay millert@@
@
text
@# $OpenBSD: Makefile,v 1.2 2017/01/24 08:44:47 patrick Exp $

LIB=	clangAnalysis
NOPIC=
NOPROFILE=

CPPFLAGS+=	${CLANG_INCLUDES}

.include <bsd.own.mk>
SRCS=	AnalysisDeclContext.cpp \
	BodyFarm.cpp \
	CFG.cpp \
	CFGReachabilityAnalysis.cpp \
	CFGStmtMap.cpp \
	CallGraph.cpp \
	CocoaConventions.cpp \
	Consumed.cpp \
	CodeInjector.cpp \
	Dominators.cpp \
	FormatString.cpp \
	LiveVariables.cpp \
	OSLog.cpp \
	ObjCNoReturn.cpp \
	PostOrderCFGView.cpp \
	PrintfFormatString.cpp \
	ProgramPoint.cpp \
	PseudoConstantAnalysis.cpp \
	ReachableCode.cpp \
	ScanfFormatString.cpp \
	ThreadSafety.cpp \
	ThreadSafetyCommon.cpp \
	ThreadSafetyLogical.cpp \
	ThreadSafetyTIL.cpp \
	UninitializedValues.cpp

.PATH:	${.CURDIR}/../../../llvm/tools/clang/lib/Analysis

install:
	@@# Nothing here so far ...

.include <bsd.lib.mk>
@


1.2
log
@Update clang build infrastructure for LLVM 4.0.0

Discussed with kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:50 pascal Exp $
a37 3
depend:
	# Nothing here so far ...

d39 1
a39 1
	# Nothing here so far ...
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d22 1
@

