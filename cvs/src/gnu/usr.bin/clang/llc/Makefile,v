head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2016.09.05.10.56.50;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@# $OpenBSD$

PROG=	llc
NOMAN=

LDADD+=	-ltermlib
DPADD+=	${LIBTERMLIB}

SRCS=	llc.cpp

.PATH: ${.CURDIR}/../../../llvm/tools/llc

LLVM_LIBDEPS=	LLVMMIRParser \
		LLVMIRReader \
		LLVMAsmParser \
		${BACKEND_DISASSEMBLER} \
		${BACKEND_ASMPARSER} \
		${BACKEND_CODEGEN} \
		LLVMSelectionDAG \
		LLVMAsmPrinter \
		LLVMCodeGen \
		LLVMTarget \
		LLVMScalarOpts \
		LLVMInstCombine \
		LLVMInstrumentation \
		LLVMProfileData \
		LLVMTransformUtils \
		LLVMBitWriter \
		LLVMAnalysis \
		${BACKEND_DESC} \
		LLVMObject \
		LLVMMCParser \
		LLVMBitReader \
		LLVMMCDisassembler \
		${BACKEND_INFO} \
		${BACKEND_ASMPRINTER} \
		LLVMMC \
		${BACKEND_UTILS} \
		LLVMCore \
		LLVMSupport

.include <bsd.prog.mk>
@
