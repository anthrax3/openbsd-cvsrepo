head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.01.24.08.44.47;	author patrick;	state Exp;
branches;
next	1.2;
commitid	nAFx1y3cdFPkOgnP;

1.2
date	2017.01.14.20.12.41;	author patrick;	state Exp;
branches;
next	1.1;
commitid	kbn8tb0boeY90was;

1.1
date	2016.09.05.10.56.48;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.3
log
@Update clang build infrastructure for LLVM 4.0.0

Discussed with kettenis@@
@
text
@# $OpenBSD: Makefile,v 1.2 2017/01/14 20:12:41 patrick Exp $

LIB=	LLVMAnalysis
NOPIC=
NOPROFILE=

CPPFLAGS+=	-I${LLVM_SRCS}/include/llvm/Analysis

.include <bsd.own.mk>
SRCS=	AliasAnalysis.cpp \
	AliasAnalysisEvaluator.cpp \
	AliasAnalysisSummary.cpp \
	AliasSetTracker.cpp \
	Analysis.cpp \
	AssumptionCache.cpp \
	BasicAliasAnalysis.cpp \
	BlockFrequencyInfo.cpp \
	BlockFrequencyInfoImpl.cpp \
	BranchProbabilityInfo.cpp \
	CFG.cpp \
	CFGPrinter.cpp \
	CFLAndersAliasAnalysis.cpp \
	CFLSteensAliasAnalysis.cpp \
	CGSCCPassManager.cpp \
	CallGraph.cpp \
	CallGraphSCCPass.cpp \
	CallPrinter.cpp \
	CaptureTracking.cpp \
	CostModel.cpp \
	CodeMetrics.cpp \
	ConstantFolding.cpp \
	Delinearization.cpp \
	DemandedBits.cpp \
	DependenceAnalysis.cpp \
	DivergenceAnalysis.cpp \
	DomPrinter.cpp \
	DominanceFrontier.cpp \
	EHPersonalities.cpp \
	GlobalsModRef.cpp \
	IVUsers.cpp \
	IndirectCallPromotionAnalysis.cpp \
	InlineCost.cpp \
	InstCount.cpp \
	InstructionSimplify.cpp \
	Interval.cpp \
	IntervalPartition.cpp \
	IteratedDominanceFrontier.cpp \
	LazyBlockFrequencyInfo.cpp \
	LazyBranchProbabilityInfo.cpp \
	LazyCallGraph.cpp \
	LazyValueInfo.cpp \
	Lint.cpp \
	Loads.cpp \
	LoopAccessAnalysis.cpp \
	LoopAnalysisManager.cpp \
	LoopInfo.cpp \
	LoopPass.cpp \
	LoopUnrollAnalyzer.cpp \
	MemDepPrinter.cpp \
	MemDerefPrinter.cpp \
	MemoryBuiltins.cpp \
	MemoryDependenceAnalysis.cpp \
	MemoryLocation.cpp \
	ModuleDebugInfoPrinter.cpp \
	ModuleSummaryAnalysis.cpp \
	ObjCARCAliasAnalysis.cpp \
	ObjCARCAnalysisUtils.cpp \
	ObjCARCInstKind.cpp \
	OptimizationDiagnosticInfo.cpp \
	OrderedBasicBlock.cpp \
	PHITransAddr.cpp \
	PostDominators.cpp \
	ProfileSummaryInfo.cpp \
	PtrUseVisitor.cpp \
	RegionInfo.cpp \
	RegionPass.cpp \
	RegionPrinter.cpp \
	ScalarEvolution.cpp \
	ScalarEvolutionAliasAnalysis.cpp \
	ScalarEvolutionExpander.cpp \
	ScalarEvolutionNormalization.cpp \
	SparsePropagation.cpp \
	TargetLibraryInfo.cpp \
	TargetTransformInfo.cpp \
	Trace.cpp \
	TypeBasedAliasAnalysis.cpp \
	TypeMetadataUtils.cpp \
	ScopedNoAliasAA.cpp \
	ValueTracking.cpp \
	VectorUtils.cpp

.PATH:	${.CURDIR}/../../../llvm/lib/Analysis

depend:
	# Nothing here so far ...

install:
	# Nothing here so far ...

.include <bsd.lib.mk>
@


1.2
log
@Update clang build infrastructure for LLVM 3.9.1

"go ahead" kettenis@@
"just go ahead" deraadt@@
"sounds good to me" stefan@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:48 pascal Exp $
d49 1
d55 1
a57 1
	LoopPassManager.cpp \
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d12 1
d22 2
a23 1
	CFLAliasAnalysis.cpp \
d41 1
d48 1
d56 2
d64 1
d68 1
d72 1
d86 1
@

