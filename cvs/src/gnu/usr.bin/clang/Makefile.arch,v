head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2017.01.25.19.24.33;	author patrick;	state Exp;
branches;
next	1.3;
commitid	1K2WaZaNcOCGzpjy;

1.3
date	2017.01.25.07.29.30;	author patrick;	state Exp;
branches;
next	1.2;
commitid	9Qsb9nDfDSHC98C8;

1.2
date	2016.11.24.22.32.29;	author patrick;	state Exp;
branches;
next	1.1;
commitid	OAdpJwyAQ1qT8EBT;

1.1
date	2016.09.05.10.56.48;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.4
log
@Add infrastructure to build LLVM for mips64.

"check with visa@@" kettenis@@
"go ahead" visa@@
@
text
@# $OpenBSD: Makefile.arch,v 1.3 2017/01/25 07:29:30 patrick Exp $

LLVM_ARCHS=AArch64 ARM Mips PowerPC Sparc X86

LLVM_ARCH?=
.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "i386"
LLVM_ARCH=	X86
.elif ${MACHINE_ARCH} == "powerpc"
LLVM_ARCH=	PowerPC
.elif ${MACHINE_ARCH} == "sparc64"
LLVM_ARCH=	Sparc
.elif ${MACHINE_ARCH} == "aarch64"
LLVM_ARCH=	AArch64
.elif ${MACHINE_ARCH} == "arm"
LLVM_ARCH=	ARM
.elif ${MACHINE_ARCH} == "mips64" || ${MACHINE_ARCH} == "mips64el"
LLVM_ARCH=	Mips
.endif

BACKEND_ASMPARSER?=
BACKEND_ASMPRINTER?=
BACKEND_CODEGEN?=
BACKEND_DESC?=
BACKEND_DISASSEMBLER?=
BACKEND_INFO?=
BACKEND_UTILS?=

.for arch in ${LLVM_ARCHS}
.if "${arch}" == ${LLVM_ARCH} || make(obj)
BACKEND_ASMPARSER+=	LLVM${arch}AsmParser
BACKEND_ASMPRINTER+=	LLVM${arch}AsmPrinter
BACKEND_CODEGEN+=	LLVM${arch}CodeGen
BACKEND_DESC+=		LLVM${arch}Desc
BACKEND_DISASSEMBLER+=	LLVM${arch}Disassembler
BACKEND_INFO+=		LLVM${arch}Info
.if "${arch}" == "X86" || "${arch}" == "AArch64"
BACKEND_UTILS+=		LLVM${arch}Utils
.endif
.endif
.endfor

BACKEND_LIBS+=		${BACKEND_ASMPARSER}
BACKEND_LIBS+=		${BACKEND_ASMPRINTER}
BACKEND_LIBS+=		${BACKEND_CODEGEN}
BACKEND_LIBS+=		${BACKEND_DESC}
BACKEND_LIBS+=		${BACKEND_DISASSEMBLER}
BACKEND_LIBS+=		${BACKEND_INFO}
BACKEND_LIBS+=		${BACKEND_UTILS}
@


1.3
log
@Descend into the arch specific subdirectory for every arch on
make obj.  This will enable us to add clang to the build.

"if it works" kettenis@@
ok jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.arch,v 1.2 2016/11/24 22:32:29 patrick Exp $
d3 1
a3 1
LLVM_ARCHS=AArch64 ARM PowerPC Sparc X86
@


1.2
log
@Add AArch64 backend build infrastructure.

ok pascal@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.arch,v 1.1 2016/09/05 10:56:48 pascal Exp $
d3 3
d20 18
a37 2
.if !(${LLVM_ARCH} == "X86" || ${LLVM_ARCH} == "AArch64")
BACKEND_UTILS=
d39 2
a40 8

BACKEND_ASMPARSER?=	LLVM${LLVM_ARCH}AsmParser
BACKEND_ASMPRINTER?=	LLVM${LLVM_ARCH}AsmPrinter
BACKEND_CODEGEN?=	LLVM${LLVM_ARCH}CodeGen
BACKEND_DESC?=		LLVM${LLVM_ARCH}Desc
BACKEND_DISASSEMBLER?=	LLVM${LLVM_ARCH}Disassembler
BACKEND_INFO?=		LLVM${LLVM_ARCH}Info
BACKEND_UTILS?=		LLVM${LLVM_ARCH}Utils
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d9 2
d17 1
a17 1
.if !(${LLVM_ARCH} == "X86")
@

