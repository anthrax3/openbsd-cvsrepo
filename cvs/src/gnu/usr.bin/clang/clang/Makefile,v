head	1.9;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7;
locks; strict;
comment	@# @;


1.9
date	2017.07.09.15.28.34;	author espie;	state Exp;
branches;
next	1.8;
commitid	AZstanCImDR1vYEO;

1.8
date	2017.04.17.19.58.53;	author pascal;	state Exp;
branches;
next	1.7;
commitid	udpseXCgFSyxKnkj;

1.7
date	2017.03.27.15.32.38;	author kettenis;	state Exp;
branches;
next	1.6;
commitid	Egec5yAzKmYIwmzS;

1.6
date	2017.01.24.08.44.47;	author patrick;	state Exp;
branches;
next	1.5;
commitid	nAFx1y3cdFPkOgnP;

1.5
date	2017.01.22.07.16.36;	author patrick;	state Exp;
branches;
next	1.4;
commitid	tdgosXE0zTP9WsIu;

1.4
date	2017.01.22.06.07.21;	author patrick;	state Exp;
branches;
next	1.3;
commitid	Mc2ACRXnOpgZLC4u;

1.3
date	2017.01.22.03.56.33;	author jsg;	state Exp;
branches;
next	1.2;
commitid	TxnimS7C0HXYAyJh;

1.2
date	2017.01.14.20.12.41;	author patrick;	state Exp;
branches;
next	1.1;
commitid	kbn8tb0boeY90was;

1.1
date	2016.09.05.10.56.48;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.9
log
@zap empty depends/silence empty installs.
okay millert@@
@
text
@# $OpenBSD: Makefile,v 1.8 2017/04/17 19:58:53 pascal Exp $

.include <bsd.own.mk>

PROG=	clang
BINDIR=	/usr/bin
LIBEXECDIR=/usr/libexec
SRCS=	driver.cpp \
	cc1_main.cpp \
	cc1as_main.cpp

LINKS=	${BINDIR}/clang ${BINDIR}/clang++ \
	${BINDIR}/clang ${BINDIR}/clang-cpp
MLINKS=	clang.1 clang++.1 \
	clang.1 clang-cpp.1

.if ${COMPILER_VERSION:L} == "clang"
LINKS+=	${BINDIR}/clang ${BINDIR}/cc \
	${BINDIR}/clang ${BINDIR}/c++ \
	${BINDIR}/clang ${LIBEXECDIR}/cpp
MLINKS+=clang.1 cc.1 \
	clang.1 c++.1 \
	clang.1 cpp.1
.endif

CPPFLAGS+=	-I${.CURDIR}/../../../llvm/tools/clang/include

.PATH:	${.CURDIR}/../../../llvm/tools/clang/tools/driver

LLVM_LIBDEPS=	clangFrontendTool \
		clangFrontend \
		clangDriver \
		clangSerialization \
		clangCodeGen \
		clangParse \
		clangSema \
		clangRewriteFrontend \
		clangRewrite \
		clangAnalysis \
		clangEdit \
		clangAST \
		clangLex \
		clangBasic \
		LLVMLTO \
		LLVMPasses \
		LLVMOption \
		LLVMObjCARCOpts \
		LLVMipo \
		LLVMVectorize \
		LLVMLinker \
		LLVMIRReader \
		LLVMAsmParser \
		${BACKEND_ASMPARSER} \
		${BACKEND_CODEGEN} \
		LLVMSelectionDAG \
		LLVMAsmPrinter \
		LLVMCodeGen \
		LLVMTarget \
		LLVMScalarOpts \
		LLVMInstCombine \
		LLVMInstrumentation \
		LLVMProfileData \
		LLVMCoverage \
		LLVMDebugInfoCodeView \
		LLVMDebugInfoDWARF \
		LLVMDebugInfoMSF \
		LLVMGlobalISel \
		LLVMTransformUtils \
		LLVMCoroutines \
		LLVMDemangle \
		LLVMBitWriter \
		LLVMAnalysis \
		${BACKEND_DESC} \
		LLVMObject \
		LLVMMCParser \
		LLVMBitReader \
		LLVMMCDisassembler \
		${BACKEND_INFO} \
		${BACKEND_ASMPRINTER} \
		LLVMMC \
		${BACKEND_UTILS} \
		LLVMCore \
		LLVMSupport

.include <bsd.prog.mk>
@


1.8
log
@Take a more radical approach to disabling colours: pretend we don't
HAVE_TERMINFO in our local config.h.  Some of the lower levels of LLVM
don't seem to respect our default setting.

As a result, delete the -ltermlib dependency.

Note that this breaks -fcolor-diagnostics=auto.  However, fixing the whole
codebase is out of scope for now ...

Prompted by an instance found in the AsmParser by deraadt@@

ok kettenis@@ patrick@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2017/03/27 15:32:38 kettenis Exp $
a28 3

depend:
	# Nothing here so far ...
@


1.7
log
@Do not clobber the default compiler/linker links unless COMPILER_VERSION is
set to clang.

ok jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2017/01/24 08:44:47 patrick Exp $
a10 3

LDADD+=	-ltermlib
DPADD+=	${LIBTERMLIB}
@


1.6
log
@Update clang build infrastructure for LLVM 4.0.0

Discussed with kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2017/01/22 07:16:36 patrick Exp $
d16 6
a21 2
	${BINDIR}/clang ${BINDIR}/clang-cpp \
	${BINDIR}/clang ${BINDIR}/cc \
d24 1
a24 3
MLINKS=	clang.1 clang++.1 \
	clang.1 clang-cpp.1 \
	clang.1 cc.1 \
d27 1
@


1.5
log
@Always provide clang as cc, c++ and cpp, and lld as ld.

Per discussion with deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2017/01/22 06:07:21 patrick Exp $
d47 2
d68 2
d72 2
@


1.4
log
@On clang architectures cc, c++ and cpp are provided by clang.  Also,
ld is provided by lld.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2017/01/22 03:56:33 jsg Exp $
d16 2
a17 6
	${BINDIR}/clang ${BINDIR}/clang-cpp
MLINKS=	clang.1 clang++.1 \
	clang.1 clang-cpp.1

.if ${COMPILER_VERSION:L} == "clang"
LINKS+=	${BINDIR}/clang ${BINDIR}/cc \
d20 3
a22 1
MLINKS=	clang.1 cc.1 \
a24 1
.endif
@


1.3
log
@Include bsd.own.mk in a few more places to pick up mk.conf overrides.
ok patrick@@ tb@@ kettenis@@ phessler@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2017/01/14 20:12:41 patrick Exp $
d7 1
d19 9
@


1.2
log
@Update clang build infrastructure for LLVM 3.9.1

"go ahead" kettenis@@
"just go ahead" deraadt@@
"sounds good to me" stefan@@
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:48 pascal Exp $
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d55 3
@

