head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2017.07.09.15.28.35;	author espie;	state Exp;
branches;
next	1.3;
commitid	AZstanCImDR1vYEO;

1.3
date	2017.01.24.08.44.47;	author patrick;	state Exp;
branches;
next	1.2;
commitid	nAFx1y3cdFPkOgnP;

1.2
date	2017.01.14.20.12.41;	author patrick;	state Exp;
branches;
next	1.1;
commitid	kbn8tb0boeY90was;

1.1
date	2016.09.05.10.56.49;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.4
log
@zap empty depends/silence empty installs.
okay millert@@
@
text
@# $OpenBSD: Makefile,v 1.3 2017/01/24 08:44:47 patrick Exp $

LIB=	LLVMScalarOpts
NOPIC=
NOPROFILE=

CPPFLAGS+=	-I${LLVM_SRCS}/include/llvm/Transforms
CPPFLAGS+=	-I${LLVM_SRCS}/include/llvm/Transforms/Scalar

.include <bsd.own.mk>
SRCS=	ADCE.cpp \
	AlignmentFromAssumptions.cpp \
	BDCE.cpp \
	ConstantHoisting.cpp \
	ConstantProp.cpp \
	CorrelatedValuePropagation.cpp \
	DCE.cpp \
	DeadStoreElimination.cpp \
	EarlyCSE.cpp \
	FlattenCFGPass.cpp \
	Float2Int.cpp \
	GVN.cpp \
	GVNHoist.cpp \
	GuardWidening.cpp \
	IVUsersPrinter.cpp \
	InductiveRangeCheckElimination.cpp \
	IndVarSimplify.cpp \
	JumpThreading.cpp \
	LICM.cpp \
	LoadCombine.cpp \
	LoopAccessAnalysisPrinter.cpp \
	LoopDataPrefetch.cpp \
	LoopDeletion.cpp \
	LoopDistribute.cpp \
	LoopIdiomRecognize.cpp \
	LoopInstSimplify.cpp \
	LoopInterchange.cpp \
	LoopLoadElimination.cpp \
	LoopPassManager.cpp \
	LoopRerollPass.cpp \
	LoopRotation.cpp \
	LoopSimplifyCFG.cpp \
	LoopSink.cpp \
	LoopStrengthReduce.cpp \
	LoopUnrollPass.cpp \
	LoopUnswitch.cpp \
	LoopVersioningLICM.cpp \
	LowerAtomic.cpp \
	LowerExpectIntrinsic.cpp \
	LowerGuardIntrinsic.cpp \
	MemCpyOptimizer.cpp \
	MergedLoadStoreMotion.cpp \
	NaryReassociate.cpp \
	NewGVN.cpp \
	PartiallyInlineLibCalls.cpp \
	PlaceSafepoints.cpp \
	Reassociate.cpp \
	Reg2Mem.cpp \
	RewriteStatepointsForGC.cpp \
	SCCP.cpp \
	SROA.cpp \
	Scalar.cpp \
	Scalarizer.cpp \
	SeparateConstOffsetFromGEP.cpp \
	SimplifyCFGPass.cpp \
	Sink.cpp \
	SpeculativeExecution.cpp \
	StraightLineStrengthReduce.cpp \
	StructurizeCFG.cpp \
	TailRecursionElimination.cpp

.PATH:	${.CURDIR}/../../../llvm/lib/Transforms/Scalar

install:
	@@# Nothing here so far ...

.include <bsd.lib.mk>
@


1.3
log
@Update clang build infrastructure for LLVM 4.0.0

Discussed with kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2017/01/14 20:12:41 patrick Exp $
a73 3
depend:
	# Nothing here so far ...

d75 1
a75 1
	# Nothing here so far ...
@


1.2
log
@Update clang build infrastructure for LLVM 3.9.1

"go ahead" kettenis@@
"just go ahead" deraadt@@
"sounds good to me" stefan@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:49 pascal Exp $
d25 1
d31 1
d39 1
d43 1
d50 1
d54 1
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d23 2
d30 1
d39 1
d43 1
a56 1
	ScalarReplAggregates.cpp \
@

