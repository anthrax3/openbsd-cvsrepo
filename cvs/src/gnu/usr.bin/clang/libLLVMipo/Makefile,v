head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2017.01.24.08.44.47;	author patrick;	state Exp;
branches;
next	1.2;
commitid	nAFx1y3cdFPkOgnP;

1.2
date	2017.01.14.20.12.42;	author patrick;	state Exp;
branches;
next	1.1;
commitid	kbn8tb0boeY90was;

1.1
date	2016.09.05.10.56.50;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.3
log
@Update clang build infrastructure for LLVM 4.0.0

Discussed with kettenis@@
@
text
@# $OpenBSD: Makefile,v 1.2 2017/01/14 20:12:42 patrick Exp $

LIB=	LLVMipo
NOPIC=
NOPROFILE=

CPPFLAGS+=	-I${LLVM_SRCS}/include/llvm/Transforms
CPPFLAGS+=	-I${LLVM_SRCS}/include/llvm/Transforms/IPO

.include <bsd.own.mk>
SRCS=	ArgumentPromotion.cpp \
	AlwaysInliner.cpp \
	BarrierNoopPass.cpp \
	ConstantMerge.cpp \
	CrossDSOCFI.cpp \
	DeadArgumentElimination.cpp \
	ElimAvailExtern.cpp \
	ExtractGV.cpp \
	ForceFunctionAttrs.cpp \
	FunctionAttrs.cpp \
	FunctionImport.cpp \
	GlobalDCE.cpp \
	GlobalOpt.cpp \
	GlobalSplit.cpp \
	IPConstantPropagation.cpp \
	IPO.cpp \
	InferFunctionAttrs.cpp \
	InlineSimple.cpp \
	Inliner.cpp \
	Internalize.cpp \
	LoopExtractor.cpp \
	LowerTypeTests.cpp \
	MergeFunctions.cpp \
	PartialInlining.cpp \
	PassManagerBuilder.cpp \
	PruneEH.cpp \
	SampleProfile.cpp \
	StripDeadPrototypes.cpp \
	StripSymbols.cpp \
	WholeProgramDevirt.cpp

.PATH:	${.CURDIR}/../../../llvm/lib/Transforms/IPO

depend:
	# Nothing here so far ...

install:
	# Nothing here so far ...

.include <bsd.lib.mk>
@


1.2
log
@Update clang build infrastructure for LLVM 3.9.1

"go ahead" kettenis@@
"just go ahead" deraadt@@
"sounds good to me" stefan@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:50 pascal Exp $
d12 1
d24 1
a27 1
	InlineAlways.cpp \
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d31 1
a31 1
	LowerBitSets.cpp \
d38 2
a39 1
	StripSymbols.cpp
@

