head	1.4;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.07.09.15.28.34;	author espie;	state Exp;
branches;
next	1.3;
commitid	AZstanCImDR1vYEO;

1.3
date	2017.04.17.19.58.53;	author pascal;	state Exp;
branches;
next	1.2;
commitid	udpseXCgFSyxKnkj;

1.2
date	2017.01.22.03.56.33;	author jsg;	state Exp;
branches;
next	1.1;
commitid	TxnimS7C0HXYAyJh;

1.1
date	2016.09.05.10.56.48;	author pascal;	state Exp;
branches;
next	;
commitid	p5QyrbFA5GyiOio3;


desc
@@


1.4
log
@zap empty depends/silence empty installs.
okay millert@@
@
text
@# $OpenBSD: Makefile,v 1.3 2017/04/17 19:58:53 pascal Exp $

PROG=	clang-tblgen
NOMAN=

.include <bsd.own.mk>
SRCS=	ClangASTNodesEmitter.cpp \
	ClangAttrEmitter.cpp \
	ClangCommentCommandInfoEmitter.cpp \
	ClangCommentHTMLNamedCharacterReferenceEmitter.cpp \
	ClangCommentHTMLTagsEmitter.cpp \
	ClangDiagnosticsEmitter.cpp \
	ClangSACheckersEmitter.cpp \
	NeonEmitter.cpp \
	TableGen.cpp
	
.PATH:	${.CURDIR}/../../../llvm/tools/clang/utils/TableGen

LLVM_LIBDEPS=	LLVMTableGen LLVMSupport

install:
	@@# Nothing here so far ...

.include <bsd.prog.mk>
@


1.3
log
@Take a more radical approach to disabling colours: pretend we don't
HAVE_TERMINFO in our local config.h.  Some of the lower levels of LLVM
don't seem to respect our default setting.

As a result, delete the -ltermlib dependency.

Note that this breaks -fcolor-diagnostics=auto.  However, fixing the whole
codebase is out of scope for now ...

Prompted by an instance found in the AsmParser by deraadt@@

ok kettenis@@ patrick@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2017/01/22 03:56:33 jsg Exp $
a20 3
depend:
	# Nothing here so far ...

d22 1
a22 1
	# Nothing here so far ...
@


1.2
log
@Include bsd.own.mk in a few more places to pick up mk.conf overrides.
ok patrick@@ tb@@ kettenis@@ phessler@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2016/09/05 10:56:48 pascal Exp $
a4 3

LDADD+=	-ltermlib
DPADD+=	${LIBTERMLIB}
@


1.1
log
@LLVM/Clang build system.  This only builds the bare minimum of what is needed
to get a working "clang" binary.

Note that you need GCC from ports to bootstrap clang.

looks good to patrick@@, ok jsg@@ kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD$
d9 1
@

