head	1.5;
access;
symbols
	OPENBSD_4_9:1.4.0.46
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.44
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.40
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.42
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.38
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.36
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.34
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.32
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.30
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.28
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.26
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.24
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.22
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.20
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.18
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.16
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.14
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	groff_1_15:1.1.1.2
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	groff_1_11a:1.1.1
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	OpenBSD_1_2:1.2
	groff_1_10:1.1.1.1
	gnu:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2011.03.12.19.03.58;	author schwarze;	state dead;
branches;
next	1.4;

1.4
date	2000.04.09.08.25.09;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.04.22.14.07.26;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.09.14.20.20.41;	author etheisen;	state Exp;
branches;
next	1.1;

1.1
date	96.09.14.19.00.44;	author etheisen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.14.19.00.44;	author etheisen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.09.07.57.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Replaced by mandoc(1) for base and xenocara purposes,
and comes with 4.9 ports.
ok deraadt@@
@
text
@# Copyright (C) 1989, 1990, 1991, 1992 Free Software Foundation, Inc.
#      Written by James Clark (jjc@@jclark.com)
# 
# This file is part of groff.
# 
# groff is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any later
# version.
# 
# groff is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
# 
# You should have received a copy of the GNU General Public License along
# with groff; see the file COPYING.  If not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Makefile.comm
#
SHELL=/bin/sh
INCLUDES=-I. -I$(srcdir) -I../include -I$(srcdir)/../include
ALL_CCFLAGS=$(INCLUDES) $(CCDEFINES) $(CCFLAGS) $(CPPFLAGS)
COMPILE.cc=$(CCC) $(ALL_CCFLAGS) -c
ALL_CFLAGS=$(CDEFINES) $(CFLAGS) $(CPPFLAGS)
COMPILE.c=$(CC) $(ALL_CFLAGS)  -c
LINK.cc=$(CCC) $(CCFLAGS) $(LDFLAGS)
LINK.c=$(CC) $(CFLAGS) $(LDFLAGS)
TOP=..
LIBGROFF=$(TOP)/libgroff/libgroff.a
LIBBIB=$(TOP)/libbib/libbib.a
LIBDRIVER=$(TOP)/libdriver/libdriver.a
MLIB=
XLIBS=
YTABH=
YTABC=
GRAM=
LIBCLEAN=
CLEANADD=
MOSTLYCLEANFILES=$(MANCLEAN) $(PROG) $(OBJS) $(GENSRCS) $(GENHDRS) \
  depend.temp core y.output $(CLEANADD)
CLEANFILES=$(LIBCLEAN)
DISTCLEANFILES=TAGS Makefile
REALCLEANFILES=$(YTABC) $(YTABH)
NAMEPREFIX=
HDRS=
MANPAGES=$(MAN1) $(MAN5) $(MAN7)
MANCLEAN=$(MANPAGES)
fontsubdir=$(fontdir)/dev$(DEV)

all install install_bin install_data TAGS depend distfiles uninstall_sub:

install: install_bin install_data
uninstall: uninstall_sub
pure:

.PHONY: all clean distclean mostlyclean realclean extraclean depend distfiles
.PHONY: install install_bin install_data
.PHONY: uninstall uninstall_sub
.PHONY: pure

mostlyclean:
	-rm -f $(MOSTLYCLEANFILES)

clean:
	-rm -f $(CLEANFILES) $(MOSTLYCLEANFILES)

distclean:
	-rm -f $(DISTCLEANFILES) $(CLEANFILES) $(MOSTLYCLEANFILES)

realclean:
	-rm -f $(REALCLEANFILES) $(DISTCLEANFILES) $(CLEANFILES) \
	  $(MOSTLYCLEANFILES)

extraclean:
	-rm -f $(DISTCLEANFILES) $(CLEANFILES) $(MOSTLYCLEANFILES) \
	  \#* *~ =* core junk grot old temp tmp tem

.SUFFIXES:
.SUFFIXES: .o .cc .c .y .1_in .1 .5_in .5 .7_in .7

.cc.o:
	$(COMPILE.cc) $<

.c.o:
	$(COMPILE.c) $<

.y.cc:
	if test -n "$(YTABH)"; then \
	  $(YACC) $(YACCFLAGS) -d $<; \
	else \
	  $(YACC) $(YACCFLAGS) $<; \
	fi
	mv y.tab.c $@@
# Avoid ending up with two versions of $(YTABH).
	if test -n "$(YTABH)"; then \
	  if test -f $(srcdir)/$(YTABH); then \
	    rm -f $(YTABH); \
	    mv y.tab.h $(srcdir)/$(YTABH); \
	  else \
	    mv y.tab.h $(YTABH); \
	  fi; \
	fi

.1_in.1 .5_in.5 .7_in.7:
	@@echo Making $@@ from $<
	@@-rm -f $@@
	@@sed -e "s;@@FONTDIR@@;$(fontdir);g" \
	-e "s;@@FONTPATH@@;$(fontpath);g" \
	-e "s;@@MACRODIR@@;$(tmacdir);g" \
	-e "s;@@MACROPATH@@;$(tmacpath);g" \
	-e "s;@@DEVICE@@;$(DEVICE);g" \
	-e "s;@@DEFAULT_INDEX@@;$(indexdir)/$(indexname);g" \
	-e "s;@@DEFAULT_INDEX_NAME@@;$(indexname);g" \
	-e "s;@@INDEX_SUFFIX@@;$(indexext);g" \
	-e "s;@@COMMON_WORDS_FILE@@;$(common_words_file);g" \
	-e "s;@@MAN1EXT@@;$(man1ext);g" \
	-e "s;@@MAN5EXT@@;$(man5ext);g" \
	-e "s;@@MAN7EXT@@;$(man7ext);g" \
	-e "s;@@TMAC_S_PREFIX@@;$(tmac_s_prefix);g" \
	-e "s;@@TMAC_M_PREFIX@@;$(tmac_m_prefix);g" \
	-e "s;@@TMAC_AN_PREFIX@@;$(tmac_an_prefix);g" \
	-e "s;@@TMAC_MDIR@@;$(tmacdir)/mm;g" \
	-e "s;@@BROKEN_SPOOLER_FLAGS@@;$(BROKEN_SPOOLER_FLAGS);g" \
	-e "s;@@VERSION@@;`cat $(srcdir)/../VERSION`;g" \
	-e "s;@@MDATE@@;`$(SHELL) $(srcdir)/../mdate.sh $<`;g" \
	-e "s;@@g@@;$(g);g" \
	-e "s;@@G@@;`echo $(g) | tr [a-z] [A-Z]`;g" \
	$< >$@@

.PHONY: install_man
install_man:
	-test -d $(manroot) || mkdir $(manroot)
	-test -d $(man1dir) || mkdir $(man1dir)
	@@-pages="$(MAN1)"; \
	for p in $$pages; do \
	 prog=`basename $$p .1`; \
	 target=$(man1dir)/$(NAMEPREFIX)$$prog.$(man1ext); \
	 rm -f $$target; \
	 echo $(INSTALL_DATA) $$p $$target; \
	 $(INSTALL_DATA) $$p $$target; \
	done
	-test -d $(man5dir) || mkdir $(man5dir)
	@@-pages="$(MAN5)"; \
	for p in $$pages; do \
	 target=$(man5dir)/`basename $$p .5`.$(man5ext); \
	 rm -f $$target; \
	 echo $(INSTALL_DATA) $$p $$target; \
	 $(INSTALL_DATA) $$p $$target; \
	done
	-test -d $(man7dir) || mkdir $(man7dir)
	@@-pages="$(MAN7)"; \
	for p in $$pages; do \
	 target=$(man7dir)/`basename $$p .5`.$(man7ext); \
	 rm -f $$target; \
	 echo $(INSTALL_DATA) $$p $$target; \
	 $(INSTALL_DATA) $$p $$target; \
	done

.PHONY: uninstall_man
uninstall_man:
	@@-pages="$(MAN1)"; \
	for p in $$pages; do \
	 target=$(man1dir)/$(NAMEPREFIX)`basename $$p .1`.$(man1ext); \
	 echo rm -f $$target; \
	 rm -f $$target; \
	done
	@@-pages="$(MAN5)"; \
	for p in $$pages; do \
	 target=$(man5dir)/`basename $$p .5`.$(man5ext); \
	 echo rm -f $$target; \
	 rm -f $$target; \
	done
	@@-pages="$(MAN7)"; \
	for p in $$pages; do \
	 target=$(man7dir)/`basename $$p .7`.$(man7ext); \
	 echo rm -f $$target; \
	 rm -f $$target; \
	done

.PHONY: install_prog
install_prog:
	-test -d $(bindir) || mkdir $(bindir)
	rm -f $(bindir)/$(NAMEPREFIX)$(PROG)
	$(INSTALL_PROGRAM) $(PROG) $(bindir)/$(NAMEPREFIX)$(PROG)

.PHONY: uninstall_prog
uninstall_prog:
	-rm -f $(bindir)/$(NAMEPREFIX)$(PROG)	

.PHONY: install_dev
install_dev:
	-test -d $(datadir) || mkdir $(datadir)
	-test -d $(datasubdir) || mkdir $(datasubdir)
	-test -d $(fontdir) || mkdir $(fontdir)
	-test -d $(fontsubdir) || mkdir $(fontsubdir)
	-if test -d $(srcdir)/generate; then \
	  test -d $(fontsubdir)/generate || mkdir $(fontsubdir)/generate; \
	fi
	-for f in $(DEVFILES); do \
	  rm -f $(fontsubdir)/$$f; \
	  if test -f $$f; then \
	    $(INSTALL_DATA) $$f $(fontsubdir)/$$f; \
	  else \
	    $(INSTALL_DATA) $(srcdir)/$$f $(fontsubdir)/$$f; \
	  fi; \
	done

.PHONY: uninstall_dev
uninstall_dev:
	-for f in $(DEVFILES); do rm -f $(fontsubdir)/$$f; done
	-if test -d $(fontsubdir)/generate; then \
	  rmdir $(fontsubdir)/generate; \
	fi
	-rmdir $(fontsubdir)

.PHONY: depend_src
depend_src: depend.temp
	mv depend.temp Makefile.dep

depend.temp: FORCE
	> depend.temp;
	test -z "$(CCSRCS)$(YTABC)"  \
	  || $(CCC) $(ALL_CCFLAGS) -MM $(CCSRCS) $(YTABC) >>depend.temp
	test -z "$(CSRCS)" \
	  || $(CC) $(ALL_CFLAGS) -MM $(CSRCS) >>depend.temp
	if test -n "$(YTABH)"; then \
	  sed -e 's|$(YTABH)|$(YTABC)|g' depend.temp >depend.temp1; \
	  mv depend.temp1 depend.temp; \
	fi

.PHONY: TAGS_src
TAGS_src:
	$(ETAGS) $(ETAGSFLAGS) $(CCSRCS) $(CSRCS)
	test -z "$(GRAM)$(HDRS)" \
	  || $(ETAGS) $(ETAGSFLAGS) -a $(ETAGSCCFLAG) $(GRAM) $(HDRS)

Makefile:
	-rm -f Makefile
	echo srcdir=$(srcdir) >>Makefile
	echo VPATH=$(VPATH) >>Makefile
	cat $(MAKEFILEPARTS) /dev/null >>Makefile

FORCE:

.NOEXPORT:
@


1.4
log
@groff 1.15 plus local changes (insomnia strikes):
o moved *.man to *.$section_in and generate *.$section not *.n for bsd.man.mk
o modified groff Makefiles to not install man pages (we do it ourselves)
o use mkstemp everywhere
o don't install groff versions on mdoc macros, we want our own ones
@
text
@@


1.3
log
@GNU Groff 1.10 exhaustively tested.
Jason, thanks for a good foundation to build on, but mine works better.
@
text
@a33 1
LIBM=-lm
d52 1
a52 3
# Target to use for installing unformatted man-pages.  Some systems may not
# want them installed.
INSTALL_MAN=install_man
d54 1
a54 3
all install install_bin install_data $(INSTALL_MAN) TAGS depend distfiles uninstall_sub:

install: install_bin install_data $(INSTALL_MAN)
d59 1
a59 1
.PHONY: install install_bin install_data $(INSTALL_MAN)
d81 1
a81 1
.SUFFIXES: .o .cc .c .y .man .n
d106 1
a106 1
.man.n:
d123 1
d134 1
a134 1
	-test -d $(mandir) || mkdir $(mandir)
d138 1
a138 1
	 prog=`basename $$p .n`; \
d147 1
a147 1
	 target=$(man5dir)/`basename $$p .n`.$(man5ext); \
d155 1
a155 1
	 target=$(man7dir)/`basename $$p .n`.$(man7ext); \
d165 1
a165 1
	 target=$(man1dir)/$(NAMEPREFIX)`basename $$p .n`.$(man1ext); \
d171 1
a171 1
	 target=$(man5dir)/`basename $$p .n`.$(man5ext); \
d177 1
a177 1
	 target=$(man7dir)/`basename $$p .n`.$(man7ext); \
@


1.2
log
@Redo the OpenBSD build wrapper import. Thanx cvs.
@
text
@d54 1
a54 1
# want them installed.                                   
d138 1
a138 1
	-test -d $(manroot) || mkdir $(manroot)
@


1.1
log
@Initial revision
@
text
@d53 3
a55 1
all install install_bin install_data TAGS depend distfiles uninstall_sub:
d57 3
a59 1
install: install_bin install_data
d64 1
a64 1
.PHONY: install install_bin install_data
@


1.1.1.1
log
@Third time because import sucks.
@
text
@@


1.1.1.2
log
@groff 1.15
@
text
@d34 1
a123 1
	-e "s;@@TMAC_AN_PREFIX@@;$(tmac_an_prefix);g" \
@

