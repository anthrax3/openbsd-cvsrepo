head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.1.3.0.46
	OPENBSD_4_9_BASE:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.44
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.40
	OPENBSD_4_7_BASE:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.42
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.38
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.36
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.34
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.32
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.30
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.28
	OPENBSD_4_0_BASE:1.1.1.3
	OPENBSD_3_9:1.1.1.3.0.26
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.24
	OPENBSD_3_8_BASE:1.1.1.3
	OPENBSD_3_7:1.1.1.3.0.22
	OPENBSD_3_7_BASE:1.1.1.3
	OPENBSD_3_6:1.1.1.3.0.20
	OPENBSD_3_6_BASE:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.18
	OPENBSD_3_5_BASE:1.1.1.3
	OPENBSD_3_4:1.1.1.3.0.16
	OPENBSD_3_4_BASE:1.1.1.3
	OPENBSD_3_3:1.1.1.3.0.14
	OPENBSD_3_3_BASE:1.1.1.3
	OPENBSD_3_2:1.1.1.3.0.12
	OPENBSD_3_2_BASE:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.10
	OPENBSD_3_1_BASE:1.1.1.3
	OPENBSD_3_0:1.1.1.3.0.8
	OPENBSD_3_0_BASE:1.1.1.3
	OPENBSD_2_9:1.1.1.3.0.6
	OPENBSD_2_9_BASE:1.1.1.3
	OPENBSD_2_8:1.1.1.3.0.4
	OPENBSD_2_8_BASE:1.1.1.3
	OPENBSD_2_7:1.1.1.3.0.2
	OPENBSD_2_7_BASE:1.1.1.3
	groff_1_15:1.1.1.3
	OPENBSD_2_6:1.1.1.2.0.8
	OPENBSD_2_6_BASE:1.1.1.2
	OPENBSD_2_5:1.1.1.2.0.6
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.4
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.2
	OPENBSD_2_3_BASE:1.1.1.2
	groff_1_11a:1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	groff_1_10:1.1.1.1
	gnu:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.03.12.19.03.58;	author schwarze;	state dead;
branches;
next	1.1;

1.1
date	96.09.14.19.00.43;	author etheisen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.14.19.00.43;	author etheisen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.18.23.00.26;	author etheisen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.09.07.57.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Replaced by mandoc(1) for base and xenocara purposes,
and comes with 4.9 ports.
ok deraadt@@
@
text
@To install groff, follow the instructions in the file INSTALL.gen.

This file contains information that supplements those instructions.

groff is written in C++, so you will need a C++ compiler.  The C++
source files use a suffix of `.cc', so your C++ compiler must be able
to handle this.  If you don't already have a C++ compiler, I suggest
gcc 2.7.1 or later (gcc version 2 includes GNU C++ as well as GNU C).
From gcc 2.5, it is no longer necessary to install libg++: the C++
header files needed by groff are created by the gcc installation
process.  To override configure's choice of C++ compiler, you can set
the CXX environment variable.

If you have a library that provides a faster malloc than your system's
usual malloc, it is good idea to include it in LIBS.  For example,
using the malloc that comes with GNU Emacs version 18 can give a
worthwhile (and sometimes spectacular) performance improvement.

When you have build groff, you can use the test-groff script to try
groff out on one of the man pages.  (Use the .n files not the .man
files.)  The test-groff script sets up environment variables to allow
groff to run without being installed.  The current directory must be
the build directory when the script is run.  For example, you could do

  ./test-groff -man -Tascii groff/groff.n | less

If you want to install gxditview (an X11 previewer), follow the
instructions in the INSTALL file in the xditview directory.

If you have problems, read the PROBLEMS file.  If this doesn't help
send a bug report using the form in the file BUG-REPORT.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Third time because import sucks.
@
text
@@


1.1.1.2
log
@Import of gnu groff-1.11a
@
text
@d19 1
a19 1
When you have built groff, you can use the test-groff script to try
@


1.1.1.3
log
@groff 1.15
@
text
@d16 1
a16 1
using the malloc that comes with GNU Emacs version 20 can give a
a28 4

To get PostScript versions of the documentation resp. reference files for
the `me' macros and the `pic' preprocessor, simply say `make' in the
`doc' subdirectory.
@

