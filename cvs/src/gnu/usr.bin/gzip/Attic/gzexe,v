head	1.8;
access;
symbols
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.6
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.8
date	2003.07.31.07.44.45;	author otto;	state dead;
branches;
next	1.7;

1.7
date	2003.02.08.10.19.30;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.29.01.13.16;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.27.23.54.58;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.27.20.10.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.08.11.17.52.02;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.08.04.01.22.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.40.52;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.40.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bye bye GNU gzexe(1).

ok deraadt@@
@
text
@#!/bin/sh
# gzexe: compressor for Unix executables.
# Use this only for binaries that you do not use frequently.
#
# The compressed version is a shell script which decompresses itself after
# skipping $skip lines of shell commands.  We try invoking the compressed
# executable with the original name (for programs looking at their name).
# We also try to retain the original file permissions on the compressed file.
# For safety reasons, gzexe will not create setuid or setgid shell scripts.

# WARNING: the first line of this file must be either : or #!/bin/sh
# The : is required for some old versions of csh.
# On Ultrix, /bin/sh is too buggy, change the first line to: #!/bin/sh5
#
# $OpenBSD: gzexe,v 1.7 2003/02/08 10:19:30 pvalchev Exp $

x=`basename "$0"`
if test $# = 0; then
  echo compress executables. original file foo is renamed to foo~
  echo usage: ${x} [-d] files...
  echo   "   -d  decompress the executables"
  exit 1
fi

decomp=0
res=0
test "$x" = "ungzexe" && decomp=1
if test "x$1" = "x-d"; then
  decomp=1
  shift
fi

tail=""
IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
for dir in $PATH; do
  test -z "$dir" && dir=.
  if test -f $dir/tail; then
    tail="$dir/tail"
    break
  fi
done
IFS="$saveifs"
if test -z "$tail"; then
  echo cannot find tail
  exit 1
fi

for i do
  if test ! -f "$i" ; then
    echo ${x}: $i not a file
    res=1
    continue
  fi
  if test $decomp -eq 0; then
    if sed -e 1d -e 2q "$i" | grep "^skip=[0-9]*$" >/dev/null; then
      echo "${x}: $i is already gzexe'd"
      continue
    fi
  fi
  if ls -l "$i" | grep '^...[sS]' > /dev/null; then
    echo "${x}: $i has setuid permission, unchanged"
    continue
  fi
  if ls -l "$i" | grep '^......[sS]' > /dev/null; then
    echo "${x}: $i has setgid permission, unchanged"
    continue
  fi
  case "`basename $i`" in
  sh | gzip | tail | chmod | ln | sleep | rm | sed | mktemp)
	echo "${x}: $i would depend on itself"; continue ;;
  esac

  tmp=`/usr/bin/mktemp gzXXXXXXXXXX` || exit 1
  trap "rm -f $tmp; exit 1" 1 2 3 5 10 13 15

  cp -p "$i" $tmp 2>/dev/null || cp "$i" $tmp
  if test -w $tmp 2>/dev/null; then
    writable=1
  else
    writable=0
    chmod u+w $tmp 2>/dev/null
  fi
  if test $decomp -eq 0; then
    sed 1q "$0" > $tmp
    sed "s|^if tail|if $tail|" >> $tmp <<'EOF'
skip=14
tmpdir=`/usr/bin/mktemp -d /tmp/gzexeXXXXXXXXXX` || {
	rm -f ${tmp}
	exit 1
}
prog="${tmpdir}/`echo \"$0\" | sed 's|^.*/||'`"
if tail +$skip "$0" | gzip -cd > "$prog"; then
  chmod 700 "$prog"
  trap '/bin/rm -rf $tmpdir exit $res' 0
  "$prog" ${1+"$@@"}; res=$?
else
  echo Cannot decompress $0
  rm -rf $tmpdir
  exit 1
fi; exit $res
EOF
    gzip -cv9 "$i" >> $tmp || {
      /bin/rm -f $tmp
      echo ${x}: compression not possible for $i, file unchanged.
      res=1
      continue
    }

  else
    # decompression
    skip=18
    if sed -e 1d -e 2q "$i" | grep "^skip=[0-9]*$" >/dev/null; then
      eval `sed -e 1d -e 2q "$i"`
    fi
    if tail +$skip "$i" | gzip -cd > $tmp; then
      :
    else
      echo ${x}: $i probably not in gzexe format, file unchanged.
      /bin/rm -f $tmp
      res=1
      continue
    fi
  fi
  rm -f "$i~"
  mv "$i" "$i~" || {
    echo ${x}: cannot backup $i as $i~
    /bin/rm -f $tmp
    res=1
    continue
  }
  mv $tmp "$i" || cp -p $tmp "$i" 2>/dev/null || cp $tmp "$i" || {
    echo ${x}: cannot create $i
    /bin/rm -f $tmp
    res=1
    continue
  }
  /bin/rm -f $tmp
  if test $writable -eq 0; then
    chmod u-w $i 2>/dev/null
  fi
done
exit $res
@


1.7
log
@When creating > 1 files with mktemp(1), make sure that if the creation
of the n'th (n>1) file fails, the previous ones get removed before exit(1)
Idea by jason; ok millert deraadt
@
text
@d15 1
a15 1
# $OpenBSD: gzexe,v 1.6 2001/09/29 01:13:16 millert Exp $
@


1.6
log
@Don't sleep for 5 secs and then remove the temp dir and contents as
this is raceable; solar@@openwall.com
@
text
@d15 1
a15 1
# $OpenBSD: gzexe,v 1.5 2001/09/27 23:54:58 millert Exp $
d87 4
a90 1
tmpdir=`/usr/bin/mktemp -d /tmp/gzexeXXXXXXXXXX` || exit 1
@


1.5
log
@Overhaul /tmp handling; collaboration with solar@@openwall.com
o nuke cpmod stuff since we have no cpmod(1)
o don't allow user togzexe sed (it is a dependency)
o repair gzexe of files with whitespace in the name
o use mktemp -d and make a temp dir, not temp file which allows
  the basename of the command that is actually executed to have
  the expected value instead of a mktemp name.
@
text
@d15 1
a15 1
# $OpenBSD: gzexe,v 1.4 2001/09/27 20:10:29 millert Exp $
d86 1
a86 1
skip=15
a91 1
  (/bin/sleep 5; /bin/rm -rf $tmpdir) 2>/dev/null &
@


1.4
log
@If first mktemp succeeds and second fails, be sure to remove the first temp file before exiting
@
text
@d15 1
a15 1
# $OpenBSD: gzexe,v 1.3 1997/08/11 17:52:02 millert Exp $
d17 1
a17 1
x=`basename $0`
a24 3
tmp=`/usr/bin/mktemp gzXXXXXXXXXX` || exit 1
trap "rm -f $tmp; exit 1" 1 2 3 5 10 13 15

a32 13
zfoo1=`/usr/bin/mktemp zfoo1XXXXXXXXXX` || exit 1
zfoo2=`/usr/bin/mktemp zfoo2XXXXXXXXXX`
if [ $? -ne 0 ]; then
  rm -f $zfoo1
  exit 1
fi
echo hi > $zfoo1
echo hi > $zfoo2
if test -z "`(${CPMOD-cpmod} $zfoo1 $zfoo2) 2>&1`"; then
  cpmod=${CPMOD-cpmod}
fi
rm -f $zfoo1 $zfoo2

d69 1
a69 1
  sh | gzip | tail | chmod | ln | sleep | rm | mktemp)
d72 10
a81 8
  if test -z "$cpmod"; then
    cp -p "$i" $tmp 2>/dev/null || cp "$i" $tmp
    if test -w $tmp 2>/dev/null; then
      writable=1
    else
      writable=0
      chmod u+w $tmp 2>/dev/null
    fi
d84 1
a84 1
    sed 1q $0 > $tmp
d86 8
a93 15
skip=22
gztmp=`/usr/bin/mktemp /tmp/gztmpXXXXXXXXXX` || exit 1
if tail +$skip $0 | gzip -cd > $gztmp; then
  chmod 700 $gztmp
  prog="`echo $0 | sed 's|^.*/||'`"
  progtmp=`/usr/bin/mktemp /tmp/${prog}XXXXXXXXXX` || exit 1
  if /bin/ln $gztmp $progtmp 2>/dev/null; then
    trap '/bin/rm -f $gztmp $progtmp; exit $res' 0
    (/bin/sleep 5; /bin/rm -f $gztmp $progtmp) 2>/dev/null &
    /tmp/"$prog" ${1+"$@@"}; res=$?
  else
    trap '/bin/rm -f $gztmp exit $res' 0
    (/bin/sleep 5; /bin/rm -f $gztmp) 2>/dev/null &
    $gztmp ${1+"$@@"}; res=$?
  fi
d96 1
a96 1
  rm -f $gztmp
d117 1
d125 1
a125 1
    rm -f $tmp
d131 1
a131 1
    rm -f $tmp
d135 2
a136 4
  rm -f $tmp
  if test -n "$cpmod"; then
    $cpmod "$i~" "$i" 2>/dev/null
  elif test $writable -eq 0; then
@


1.3
log
@Use mktemp(1) to avoid potential /tmp/ and cwd races.
@
text
@d15 1
a15 1
# $OpenBSD$
d37 5
a41 1
zfoo2=`/usr/bin/mktemp zfoo2XXXXXXXXXX` || exit 1
@


1.2
log
@do not permit gzexe on sh -- the results are terrifying; finrod@@pugwash.priv.no
@
text
@d14 2
d25 1
a25 1
tmp=gz$$
d36 5
a40 3
echo hi > zfoo1$$
echo hi > zfoo2$$
if test -z "`(${CPMOD-cpmod} zfoo1$$ zfoo2$$) 2>&1`"; then
d43 1
a43 1
rm -f zfoo[12]$$
d81 1
a81 1
  sh | gzip | tail | chmod | ln | sleep | rm)
d96 4
a99 3
skip=18
if tail +$skip $0 | gzip -cd > /tmp/gztmp$$; then
  chmod 700 /tmp/gztmp$$
d101 4
a104 3
  if /bin/ln /tmp/gztmp$$ "/tmp/$prog" 2>/dev/null; then
    trap '/bin/rm -f /tmp/gztmp$$ "/tmp/$prog"; exit $res' 0
    (/bin/sleep 5; /bin/rm -f /tmp/gztmp$$ "/tmp/$prog") 2>/dev/null &
d107 3
a109 3
    trap '/bin/rm -f /tmp/gztmp$$; exit $res' 0
    (/bin/sleep 5; /bin/rm -f /tmp/gztmp$$) 2>/dev/null &
    /tmp/gztmp$$ ${1+"$@@"}; res=$?
d112 3
a114 1
  echo Cannot decompress $0; exit 1
@


1.1
log
@Initial revision
@
text
@d77 1
a77 1
  gzip | tail | chmod | ln | sleep | rm)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
