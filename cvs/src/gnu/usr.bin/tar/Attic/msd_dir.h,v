head	1.2;
access;
symbols
	netbsd_1_1:1.1.1.1
	netbsd_1_1:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	96.06.29.05.52.11;	author tholo;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.41.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Use tar(1) emulation as provided by pax(1)
@
text
@/*
 *	from: @@(#)msd_dir.h 1.4 87/11/06	Public Domain.
 *	$Id: msd_dir.h,v 1.1 1995/10/18 08:41:09 deraadt Exp tholo $
 *
 *  A public domain implementation of BSD directory routines for
 *  MS-DOS.  Written by Michael Rendell ({uunet,utai}michael@@garfield),
 *  August 1897
 */

#define	rewinddir(dirp)	seekdir(dirp, 0L)

#define	MAXNAMLEN	12

#ifdef __TURBOC__
typedef int ino_t;
typedef int dev_t;
#endif

struct dirent
  {
    ino_t d_ino;		/* a bit of a farce */
    int d_reclen;		/* more farce */
    int d_namlen;		/* length of d_name */
    char d_name[MAXNAMLEN + 1];	/* garentee null termination */
  };

struct _dircontents
  {
    char *_d_entry;
    struct _dircontents *_d_next;
  };

typedef struct _dirdesc
  {
    int dd_id;			/* uniquely identify each open directory */
    long dd_loc;		/* where we are in directory entry is this */
    struct _dircontents *dd_contents;	/* pointer to contents of dir */
    struct _dircontents *dd_cp;	/* pointer to current position */
  } DIR;

extern DIR *opendir ();
extern struct dirent *readdir ();
extern void seekdir ();
extern long telldir ();
extern void closedir ();
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
 *	$Id: msd_dir.h,v 1.2 1993/08/01 18:48:57 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
