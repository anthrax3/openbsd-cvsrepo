head	1.8;
access;
symbols
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	FSF_1_05a:1.1.1.1
	FSF:1.1.1
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	99.07.15.19.23.23;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	99.07.15.19.21.11;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.09.06.19.48.38;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	97.09.11.22.59.37;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.12.16.15.57.16;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.24.20.41.36;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.07.22.10.10.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.06.20.14.29.49;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.29.00.19.07;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@this wraps anything
@
text
@/*	$OpenBSD: bcwrap.c,v 1.7 1999/07/15 19:21:11 deraadt Exp $	*/

/*
 * Copyright (c) 1996 Theo de Raadt <deraadt@@theos.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Theo de Raadt.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Some programs want to print their copyright, if they are in
 * interactive mode.  If the program cannot be modified, this program
 * can solve the issue.  Suddenly the program is never in interactive
 * mode.
 * 
 * ^C blocking is also done, if wanted.
 */

#include <sys/types.h>
#include <sys/wait.h>
#include <errno.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#include <poll.h>

int
main(argc, argv)
	int argc;
	char *argv[];
{
	int pd[2];
	struct pollfd pfd[2];
	int off, n, res;
	char buf[1024];
	int pid, stat;

	if (!(isatty(0) && isatty(1)))
		execv(WRAP, argv);

	/* Ok, we need to go non-interactive */
	if (pipe(pd) == -1) {
		perror("pipe");
		exit(1);
	}

#ifdef BLOCK
	signal(SIGINT, SIG_IGN);
#endif

	pid = fork();
	switch(pid) {
	case -1:
		perror("fork");
		exit(1);
	case 0:
		dup2(pd[0], 0);		/* stdin = pipe */
		close(pd[0]);

		close(pd[1]);
		execv(WRAP, argv);
		exit(1);
	default:
		close(pd[0]);
		break;
	}

	pfd[0].fd = 0;
	pfd[0].events = POLLIN;
	pfd[1].fd = pd[1];
	pfd[1].events = POLLIN;

	while (1) {
		if (waitpid(pid, &stat, WNOHANG) > 0)
			exit(WEXITSTATUS(stat));

		switch (poll(pfd, 2, 0)) {
		case -1:
		case 0:
			break;
		default:
			if (pfd[0].revents == 0)
				goto done;
			n = read(0, buf, sizeof buf);
			if (n == 0)
				goto done;
			off = 0;
			while (off < n) {
				res = write(pd[1], buf + off, n - off);
				if (res == -1 && errno != EAGAIN)
					goto done;
				off += res;
			}
		}
	}
done:
	close(pd[1]);
	waitpid(pid, &stat, 0);
	exit(WEXITSTATUS(stat));
}
@


1.7
log
@use poll() instead, and generalize in case other programs want to use it
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.6 1998/09/06 19:48:38 kstailey Exp $	*/
@


1.6
log
@handle ^C in traditional fashion
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.5 1997/09/11 22:59:37 deraadt Exp $	*/
d35 6
a40 8
 * GNU bc wants to print it's copyright, if in interactive mode. The
 * copyright demands it. That's stupid, ugly, and I think looks very
 * gross.
 *
 * As a side effect, the special ^C handling in gnubc goes away,
 * bringing us back to the familiar handling.
 *
 * Oh well, with this wrapper it's never in interactive mode.
d49 1
d56 3
a58 2
	int pd[2], rfds;
	int width = 1, off, n, res;
d63 1
a63 1
		execv("/usr/bin/gnubc", argv);
d71 1
d73 1
d85 1
a85 1
		execv("/usr/bin/gnubc", argv);
d92 5
a96 1
	width = pd[1];
d100 2
a101 2
		rfds = (1 << 0) || (1 << pd[1]);
		switch (select(width, (fd_set *)&rfds, NULL, NULL, NULL)) {
d106 1
a106 1
			if (rfds & (1<<0) == 0)
@


1.5
log
@fix vfork error report
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.4 1996/12/16 15:57:16 deraadt Exp $	*/
d47 2
a50 1
#include <errno.h>
d70 2
@


1.4
log
@be more careful with select
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.3 1996/08/24 20:41:36 deraadt Exp $	*/
d73 1
a73 1
		perror("vfork");
@


1.3
log
@watch our tempermental gnu child more carefully; bug spotted by graichen@@axp5.physik.fu-berlin.de
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.2 1996/07/22 10:10:39 deraadt Exp $	*/
a87 1
	rfds = (1 << 0) || (1 << pd[1]);
d91 1
@


1.2
log
@comment on ^C handling
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.1 1996/06/20 14:29:49 deraadt Exp $	*/
d90 2
d98 1
a98 1
				break;
d100 1
a100 2
			if (n == 0) {
				close(pd[1]);
a101 1
			}
d105 1
a105 2
				if (res == -1 && errno != EAGAIN) {
					close(pd[1]);
a106 1
				}
@


1.1
log
@bc is a wrapper that runs gnubc on a pipe. bc is non-interactive gnubc, basically
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 3
@


1.1.1.1
log
@GNU bc 1.05a
@
text
@d1 1
a1 1
/*	$OpenBSD: bcwrap.c,v 1.5 1997/09/11 22:59:37 deraadt Exp $	*/
a38 3
 * As a side effect, the special ^C handling in gnubc goes away,
 * bringing us back to the familiar handling.
 *
d70 1
a70 1
		perror("fork");
d85 1
a86 3
		if (waitpid(pid, &stat, WNOHANG) > 0)
			exit(WEXITSTATUS(stat));
		rfds = (1 << 0) || (1 << pd[1]);
d93 1
a93 1
				goto done;
d95 2
a96 1
			if (n == 0)
d98 1
d102 2
a103 1
				if (res == -1 && errno != EAGAIN)
d105 1
@

