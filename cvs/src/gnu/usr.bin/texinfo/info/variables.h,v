head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.48
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.46
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.42
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.38
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.40
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.32
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.36
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.34
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.30
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.28
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.26
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.24
	OPENBSD_5_0:1.3.0.22
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.20
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	TEXINFO_4_8:1.1.1.3
	OPENBSD_3_9:1.2.0.30
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.28
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.26
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.24
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.22
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.20
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.18
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.16
	OPENBSD_3_2_BASE:1.2
	TEXINFO_4_2:1.1.1.2
	OPENBSD_3_1:1.2.0.14
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.12
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.10
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	TEXINFO_4_0:1.1.1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	TEXINFO_3_12:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.6
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.4
	OPENBSD_2_3_BASE:1.1.1.2
	OPENBSD_2_2:1.1.1.2.0.2
	OPENBSD_2_2_BASE:1.1.1.2
	TEXINFO_3_11:1.1.1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	TEXINFO_3_9:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	TEXINFO_3_7:1.1.1.1
	TEXINFO_3_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2006.07.17.16.12.36;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.01.11.16.38.10;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	95.12.22.16.47.16;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.22.16.47.16;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.08.01.22.00.48;	author kstailey;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.07.17.16.03.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@conflict resolution
@
text
@/* variables.h -- Description of user visible variables in Info.
   $Id: variables.h,v 1.3 2004/04/11 17:56:46 karl Exp $

   This file is part of GNU Info, a program for reading online documentation
   stored in Info format.

   Copyright (C) 1993, 1997, 2004 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Written by Brian Fox (bfox@@ai.mit.edu). */

#ifndef INFO_VARIABLES_H
#define INFO_VARIABLES_H

/* A variable (in the Info sense) is an integer value with a user-visible
   name.  You may supply an array of strings to complete over when the
   variable is set; in that case, the variable is set to the index of the
   string that the user chose.  If you supply a null list, the user can
   set the variable to a numeric value. */

/* Structure describing a user visible variable. */
typedef struct {
  char *name;                   /* Polite name. */
  char *doc;                    /* Documentation string. */
  int *value;                   /* Address of value. */
  char **choices;               /* Array of strings or NULL if numeric only. */
} VARIABLE_ALIST;

/* Read the name of an Info variable in the echo area and return the
   address of a VARIABLE_ALIST member.  A return value of NULL indicates
   that no variable could be read. */
extern VARIABLE_ALIST *read_variable_name (char *prompt, WINDOW *window);

/* Make an array of REFERENCE which actually contains the names of the
   variables available in Info. */
extern REFERENCE **make_variable_completions_array (void);

/* Set the value of an info variable. */
extern void set_variable (WINDOW *window, int count, unsigned char key);
extern void describe_variable (WINDOW *window, int count, unsigned char key);

/* The list of user-visible variables. */
extern int auto_footnotes_p;
extern int auto_tiling_p;
extern int terminal_use_visible_bell_p;
extern int info_error_rings_bell_p;
extern int gc_compressed_files;
extern int show_index_match;
extern int info_scroll_behaviour;
extern int window_scroll_step;
extern int ISO_Latin_p;

#endif /* not INFO_VARIABLES_H */
@


1.2
log
@Upgrade to 3.12, merge with OpenBSD changes.
@
text
@d2 1
a2 1
   $Id: variables.h,v 1.3 1997/07/15 18:44:23 karl Exp $
d7 1
a7 1
   Copyright (C) 1993, 97 Free Software Foundation, Inc.
d45 1
a45 1
extern VARIABLE_ALIST *read_variable_name ();
d49 1
a49 1
extern REFERENCE **make_variable_completions_array ();
d52 2
a53 1
extern void set_variable ();
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/* variables.h -- Description of user visible variables in Info. */
d4 1
a4 1
/* This file is part of GNU Info, a program for reading online documentation
d7 1
a7 1
   Copyright (C) 1993 Free Software Foundation, Inc.
d25 2
a26 2
#if !defined (_VARIABLES_H_)
#define _VARIABLES_H_
d36 4
a39 4
  char *name;			/* Polite name. */
  char *doc;			/* Documentation string. */
  int *value;			/* Address of value. */
  char **choices;		/* Array of strings or NULL if numeric only. */
d65 1
a65 1
#endif /* _VARIABLES_H_ */
@


1.1.1.1
log
@Import of texinfo-3.6 from FSF
@
text
@@


1.1.1.2
log
@Import of FSF texinfo 3.11
@
text
@d1 1
a1 2
/* variables.h -- Description of user visible variables in Info.
   $Id: variables.h,v 1.3 1997/07/15 18:44:23 karl Exp $
d3 1
a3 1
   This file is part of GNU Info, a program for reading online documentation
d6 1
a6 1
   Copyright (C) 1993, 97 Free Software Foundation, Inc.
d24 2
a25 2
#ifndef INFO_VARIABLES_H
#define INFO_VARIABLES_H
d35 4
a38 4
  char *name;                   /* Polite name. */
  char *doc;                    /* Documentation string. */
  int *value;                   /* Address of value. */
  char **choices;               /* Array of strings or NULL if numeric only. */
d64 1
a64 1
#endif /* not INFO_VARIABLES_H */
@


1.1.1.3
log
@import texinfo 4.8 into the tree.
(okay theo, kettenis)
@
text
@d2 1
a2 1
   $Id: variables.h,v 1.3 2004/04/11 17:56:46 karl Exp $
d7 1
a7 1
   Copyright (C) 1993, 1997, 2004 Free Software Foundation, Inc.
d45 1
a45 1
extern VARIABLE_ALIST *read_variable_name (char *prompt, WINDOW *window);
d49 1
a49 1
extern REFERENCE **make_variable_completions_array (void);
d52 1
a52 2
extern void set_variable (WINDOW *window, int count, unsigned char key);
extern void describe_variable (WINDOW *window, int count, unsigned char key);
@

