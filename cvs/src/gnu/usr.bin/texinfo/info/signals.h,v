head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.46
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.42
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.38
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.40
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.32
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.36
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.34
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.30
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.28
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.26
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.24
	OPENBSD_5_0:1.3.0.22
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.20
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	TEXINFO_4_8:1.1.1.3
	OPENBSD_3_9:1.2.0.30
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.28
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.26
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.24
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.22
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.20
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.18
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.16
	OPENBSD_3_2_BASE:1.2
	TEXINFO_4_2:1.1.1.2
	OPENBSD_3_1:1.2.0.14
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.12
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.10
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	TEXINFO_4_0:1.1.1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	TEXINFO_3_12:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.6
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.4
	OPENBSD_2_3_BASE:1.1.1.2
	OPENBSD_2_2:1.1.1.2.0.2
	OPENBSD_2_2_BASE:1.1.1.2
	TEXINFO_3_11:1.1.1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	TEXINFO_3_9:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	TEXINFO_3_7:1.1.1.1
	TEXINFO_3_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2006.07.17.16.12.36;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.01.11.16.38.09;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	95.12.22.16.47.15;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.22.16.47.15;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.08.01.22.00.40;	author kstailey;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.07.17.16.03.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@conflict resolution
@
text
@/* signals.h -- header to include system dependent signal definitions.
   $Id: signals.h,v 1.2 2004/04/11 17:56:46 karl Exp $

   Copyright (C) 1993, 1994, 1995, 1997, 2002, 2004 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Originally written by Brian Fox (bfox@@ai.mit.edu). */

#ifndef INFO_SIGNALS_H
#define INFO_SIGNALS_H

#include <sys/types.h>
#include <signal.h>

/* For sysV68 --phdm@@info.ucl.ac.be.  */
#if !defined (SIGCHLD) && defined (SIGCLD)
#define SIGCHLD SIGCLD
#endif

#if !defined (HAVE_SIGPROCMASK) && !defined (sigmask)
#  define sigmask(x) (1 << ((x)-1))
#endif /* !HAVE_SIGPROCMASK && !sigmask */

/* Without SA_NOCLDSTOP, sigset_t might end up being undefined even
   though we have sigprocmask, on older systems, according to Nelson
   Beebe.  The test is from coreutils/sort.c, via Paul Eggert.  */
#if !defined (HAVE_SIGPROCMASK) || !defined (SA_NOCLDSTOP)
#  if !defined (SIG_BLOCK)
#    define SIG_UNBLOCK 1
#    define SIG_BLOCK   2
#    define SIG_SETMASK 3
#  endif /* SIG_BLOCK */

/* Type of a signal set. */
#  define sigset_t int

/* Make SET have no signals in it. */
#  define sigemptyset(set) (*(set) = (sigset_t)0x0)

/* Make SET have the full range of signal specifications possible. */
#  define sigfillset(set) (*(set) = (sigset_t)0xffffffffff)

/* Add SIG to the contents of SET. */
#  define sigaddset(set, sig) *(set) |= sigmask (sig)

/* Delete SIG from the contents of SET. */
#  define sigdelset(set, sig) *(set) &= ~(sigmask (sig))

/* Tell if SET contains SIG. */
#  define sigismember(set, sig) (*(set) & (sigmask (sig)))

/* Suspend the process until the reception of one of the signals
   not present in SET. */
#  define sigsuspend(set) sigpause (*(set))
#endif /* !HAVE_SIGPROCMASK */

#if defined (HAVE_SIGPROCMASK) || defined (HAVE_SIGSETMASK)
/* These definitions are used both in POSIX and non-POSIX implementations. */

#define BLOCK_SIGNAL(sig) \
  do { \
    sigset_t nvar, ovar; \
    sigemptyset (&nvar); \
    sigemptyset (&ovar); \
    sigaddset (&nvar, sig); \
    sigprocmask (SIG_BLOCK, &nvar, &ovar); \
  } while (0)

#define UNBLOCK_SIGNAL(sig) \
  do { \
    sigset_t nvar, ovar; \
    sigemptyset (&ovar); \
    sigemptyset (&nvar); \
    sigaddset (&nvar, sig); \
    sigprocmask (SIG_UNBLOCK, &nvar, &ovar); \
  } while (0)

#else /* !HAVE_SIGPROCMASK && !HAVE_SIGSETMASK */
#  define BLOCK_SIGNAL(sig)
#  define UNBLOCK_SIGNAL(sig)
#endif /* !HAVE_SIGPROCMASK && !HAVE_SIGSETMASK */

#endif /* not INFO_SIGNALS_H */
@


1.2
log
@Upgrade to 3.12, merge with OpenBSD changes.
@
text
@d1 2
a2 2
/* signals.h -- Header to include system dependent signal definitions.
   $Id: signals.h,v 1.3 1997/07/15 18:35:59 karl Exp $
d4 1
a4 4
   This file is part of GNU Info, a program for reading online documentation
   stored in Info format.

   Copyright (C) 1993, 94, 95, 97 Free Software Foundation, Inc.
d20 1
a20 1
   Written by Brian Fox (bfox@@ai.mit.edu). */
d37 4
a40 1
#if !defined (HAVE_SIGPROCMASK)
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/* signals.h -- Header to include system dependent signal definitions. */
d4 1
a4 1
/* This file is part of GNU Info, a program for reading online documentation
d7 1
a7 1
   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.
d25 2
a26 2
#if !defined (_SIGNALS_H_)
#define _SIGNALS_H_
d28 1
d31 5
d96 1
a96 1
#endif /* !_SIGNALS_H_ */
@


1.1.1.1
log
@Import of texinfo-3.6 from FSF
@
text
@@


1.1.1.2
log
@Import of FSF texinfo 3.11
@
text
@d1 1
a1 2
/* signals.h -- Header to include system dependent signal definitions.
   $Id: signals.h,v 1.3 1997/07/15 18:35:59 karl Exp $
d3 1
a3 1
   This file is part of GNU Info, a program for reading online documentation
d6 1
a6 1
   Copyright (C) 1993, 94, 95, 97 Free Software Foundation, Inc.
d24 2
a25 2
#ifndef INFO_SIGNALS_H
#define INFO_SIGNALS_H
a26 1
#include <sys/types.h>
a28 5
/* For sysV68 --phdm@@info.ucl.ac.be.  */
#if !defined (SIGCHLD) && defined (SIGCLD)
#define SIGCHLD SIGCLD
#endif

d89 1
a89 1
#endif /* not INFO_SIGNALS_H */
@


1.1.1.3
log
@import texinfo 4.8 into the tree.
(okay theo, kettenis)
@
text
@d1 2
a2 2
/* signals.h -- header to include system dependent signal definitions.
   $Id: signals.h,v 1.2 2004/04/11 17:56:46 karl Exp $
d4 4
a7 1
   Copyright (C) 1993, 1994, 1995, 1997, 2002, 2004 Free Software Foundation, Inc.
d23 1
a23 1
   Originally written by Brian Fox (bfox@@ai.mit.edu). */
d40 1
a40 4
/* Without SA_NOCLDSTOP, sigset_t might end up being undefined even
   though we have sigprocmask, on older systems, according to Nelson
   Beebe.  The test is from coreutils/sort.c, via Paul Eggert.  */
#if !defined (HAVE_SIGPROCMASK) || !defined (SA_NOCLDSTOP)
@

