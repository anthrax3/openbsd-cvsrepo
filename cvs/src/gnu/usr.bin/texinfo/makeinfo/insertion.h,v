head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.3.0.46
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.42
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.38
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.40
	OPENBSD_5_8_BASE:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.32
	OPENBSD_5_7_BASE:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.36
	OPENBSD_5_6_BASE:1.1.1.3
	OPENBSD_5_5:1.1.1.3.0.34
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.30
	OPENBSD_5_4_BASE:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.28
	OPENBSD_5_3_BASE:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.26
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.24
	OPENBSD_5_0:1.1.1.3.0.22
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.20
	OPENBSD_4_9_BASE:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.18
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.14
	OPENBSD_4_7_BASE:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.16
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.12
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.10
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.8
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.6
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.4
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.2
	OPENBSD_4_0_BASE:1.1.1.3
	TEXINFO_4_8:1.1.1.3
	OPENBSD_3_9:1.1.1.2.0.16
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.14
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.12
	OPENBSD_3_7_BASE:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.10
	OPENBSD_3_6_BASE:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.8
	OPENBSD_3_5_BASE:1.1.1.2
	OPENBSD_3_4:1.1.1.2.0.6
	OPENBSD_3_4_BASE:1.1.1.2
	OPENBSD_3_3:1.1.1.2.0.4
	OPENBSD_3_3_BASE:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.2
	OPENBSD_3_2_BASE:1.1.1.2
	TEXINFO_4_2:1.1.1.2
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	TEXINFO_4_0:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2000.02.09.01.25.20;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.09.01.25.20;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.10.13.21.17;	author espie;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.07.17.16.03.47;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* insertion.h -- declarations for insertion.c.
   $Id: insertion.h,v 1.6 1999/07/06 23:12:58 karl Exp $

   Copyright (C) 1998, 99 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef INSERTION_H
#define INSERTION_H

/* Must match list in insertion.c.  */
enum insertion_type
{
  cartouche, defcv, deffn, defivar, defmac, defmethod, defop, defopt,
  defspec, deftp, deftypefn, deftypefun, deftypeivar, deftypemethod,
  deftypeop, deftypevar, deftypevr, defun, defvar, defvr, detailmenu,
  direntry, display, enumerate, example, flushleft, flushright, format,
  ftable, group, ifclear, ifhtml, ifinfo, ifnothtml, ifnotinfo,
  ifnottex, ifset, iftex, itemize, lisp, menu, multitable, quotation,
  rawhtml, rawtex, smalldisplay, smallexample, smallformat, smalllisp,
  table, tex, vtable, bad_type
};

typedef struct istack_elt
{
  struct istack_elt *next;
  char *item_function;
  char *filename;
  int line_number;
  int filling_enabled;
  int indented_fill;
  enum insertion_type insertion;
  int inhibited;
  int in_fixed_width_font;
} INSERTION_ELT;


extern int insertion_level;
extern INSERTION_ELT *insertion_stack;
extern int in_menu;
extern int in_detailmenu;
extern int had_menu_commentary;
extern int in_paragraph;

extern void command_name_condition ();
extern void cm_ifnothtml (), cm_ifhtml(), cm_html ();
extern void cm_ifinfo (), cm_ifnotinfo ();
extern void cm_ifnottex (), cm_iftex (), cm_tex ();
#endif /* !INSERTION_H */
@


1.1.1.1
log
@TexInfo 4.0. New manpages, can create html.
A bit more grumpy about bad texinfo, though.
@
text
@@


1.1.1.2
log
@TeXinfo 4.2, much more robust html (and other formats) output, and a few
features that new FSF programs will need (e.g., gcc snapshots).

looked at by fgs@@, thanks.
@
text
@d2 1
a2 1
   $Id: insertion.h,v 1.13 2002/03/28 16:33:48 karl Exp $
d4 1
a4 1
   Copyright (C) 1998, 99, 2001, 02 Free Software Foundation, Inc.
d25 7
a31 8
{ 
  cartouche, copying, defcv, deffn, defivar, defmac, defmethod, defop,
  defopt, defspec, deftp, deftypefn, deftypefun, deftypeivar,
  deftypemethod, deftypeop, deftypevar, deftypevr, defun, defvar, defvr,
  detailmenu, direntry, display, documentdescription, enumerate,
  example, flushleft, flushright, format, ftable, group, ifclear,
  ifhtml, ifinfo, ifnothtml, ifnotinfo, ifnotplaintext, ifnottex,
  ifplaintext, ifset, iftex, itemize, lisp, menu, multitable, quotation,
d33 1
a33 1
  verbatim, table, tex, vtable, bad_type
d58 1
a58 1
extern void cm_ifhtml (), cm_ifnothtml(), cm_html ();
d60 1
a60 2
extern void cm_ifplaintext (), cm_ifnotplaintext();
extern void cm_iftex (), cm_ifnottex (), cm_tex ();
@


1.1.1.3
log
@import texinfo 4.8 into the tree.
(okay theo, kettenis)
@
text
@d2 1
a2 1
   $Id: insertion.h,v 1.10 2004/04/11 17:56:47 karl Exp $
d4 1
a4 1
   Copyright (C) 1998, 1999, 2001, 2002, 2003 Free Software Foundation, Inc.
d27 1
a27 1
  defopt, defspec, deftp, deftypecv, deftypefn, deftypefun, deftypeivar,
d30 5
a34 6
  example, floatenv, flushleft, flushright, format, ftable, group,
  ifclear, ifdocbook, ifhtml, ifinfo, ifnotdocbook, ifnothtml, ifnotinfo,
  ifnotplaintext, ifnottex, ifnotxml, ifplaintext, ifset, iftex, ifxml,
  itemize, lisp, menu, multitable, quotation, rawdocbook, rawhtml, rawtex,
  rawxml, smalldisplay, smallexample, smallformat, smalllisp, verbatim,
  table, tex, vtable, titlepage, bad_type
d45 1
a45 1
  int insertion;
d50 1
d58 5
a62 20
extern int headitem_flag;
extern int after_headitem;

extern void init_insertion_stack (void);
extern void command_name_condition (void);
extern void cm_ifdocbook (void), cm_ifnotdocbook(void), cm_docbook (int arg);
extern void cm_ifhtml (void), cm_ifnothtml(void), cm_html (int arg);
extern void cm_ifinfo (void), cm_ifnotinfo (void);
extern void cm_ifplaintext (void), cm_ifnotplaintext(void);
extern void cm_iftex (void), cm_ifnottex (void), cm_tex (void);
extern void cm_ifxml (void), cm_ifnotxml (void), cm_xml (int arg);
extern void handle_verbatim_environment (int find_end_verbatim);
extern void begin_insertion (enum insertion_type type);
extern void pop_insertion (void);
extern void discard_insertions (int specials_ok);

extern int is_in_insertion_of_type (int type);
extern int command_needs_braces (char *cmd);

extern enum insertion_type find_type_from_name (char *name);
@


