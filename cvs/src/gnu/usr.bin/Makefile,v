head	1.58;
access;
symbols
	OPENBSD_6_1:1.58.0.4
	OPENBSD_6_1_BASE:1.58
	OPENBSD_6_0:1.56.0.6
	OPENBSD_6_0_BASE:1.56
	OPENBSD_5_9:1.56.0.2
	OPENBSD_5_9_BASE:1.56
	OPENBSD_5_8:1.56.0.4
	OPENBSD_5_8_BASE:1.56
	OPENBSD_5_7:1.55.0.2
	OPENBSD_5_7_BASE:1.55
	OPENBSD_5_6:1.55.0.4
	OPENBSD_5_6_BASE:1.55
	OPENBSD_5_5:1.54.0.4
	OPENBSD_5_5_BASE:1.54
	OPENBSD_5_4:1.53.0.2
	OPENBSD_5_4_BASE:1.53
	OPENBSD_5_3:1.51.0.6
	OPENBSD_5_3_BASE:1.51
	OPENBSD_5_2:1.51.0.4
	OPENBSD_5_2_BASE:1.51
	OPENBSD_5_1_BASE:1.51
	OPENBSD_5_1:1.51.0.2
	OPENBSD_5_0:1.48.0.2
	OPENBSD_5_0_BASE:1.48
	OPENBSD_4_9:1.47.0.2
	OPENBSD_4_9_BASE:1.47
	OPENBSD_4_8:1.46.0.2
	OPENBSD_4_8_BASE:1.46
	OPENBSD_4_7:1.45.0.10
	OPENBSD_4_7_BASE:1.45
	OPENBSD_4_6:1.45.0.12
	OPENBSD_4_6_BASE:1.45
	OPENBSD_4_5:1.45.0.8
	OPENBSD_4_5_BASE:1.45
	OPENBSD_4_4:1.45.0.6
	OPENBSD_4_4_BASE:1.45
	OPENBSD_4_3:1.45.0.4
	OPENBSD_4_3_BASE:1.45
	OPENBSD_4_2:1.45.0.2
	OPENBSD_4_2_BASE:1.45
	OPENBSD_4_1:1.44.0.4
	OPENBSD_4_1_BASE:1.44
	OPENBSD_4_0:1.44.0.2
	OPENBSD_4_0_BASE:1.44
	OPENBSD_3_9:1.43.0.8
	OPENBSD_3_9_BASE:1.43
	OPENBSD_3_8:1.43.0.6
	OPENBSD_3_8_BASE:1.43
	OPENBSD_3_7:1.43.0.4
	OPENBSD_3_7_BASE:1.43
	OPENBSD_3_6:1.43.0.2
	OPENBSD_3_6_BASE:1.43
	OPENBSD_3_5:1.42.0.2
	OPENBSD_3_5_BASE:1.42
	OPENBSD_3_4:1.37.0.2
	OPENBSD_3_4_BASE:1.37
	OPENBSD_3_3:1.32.0.4
	OPENBSD_3_3_BASE:1.32
	OPENBSD_3_2:1.32.0.2
	OPENBSD_3_2_BASE:1.32
	OPENBSD_3_1:1.31.0.2
	OPENBSD_3_1_BASE:1.31
	OPENBSD_3_0:1.30.0.2
	OPENBSD_3_0_BASE:1.30
	OPENBSD_2_9:1.28.0.6
	OPENBSD_2_9_BASE:1.28
	OPENBSD_2_8:1.28.0.4
	OPENBSD_2_8_BASE:1.28
	OPENBSD_2_7:1.28.0.2
	OPENBSD_2_7_BASE:1.28
	OPENBSD_2_6:1.27.0.2
	OPENBSD_2_6_BASE:1.27
	OPENBSD_2_5:1.26.0.2
	OPENBSD_2_5_BASE:1.26
	OPENBSD_2_4:1.25.0.2
	OPENBSD_2_4_BASE:1.25
	OPENBSD_2_3:1.23.0.2
	OPENBSD_2_3_BASE:1.23
	OPENBSD_2_2:1.21.0.4
	OPENBSD_2_2_BASE:1.21
	OPENBSD_2_1:1.21.0.2
	OPENBSD_2_1_BASE:1.21
	OPENBSD_2_0:1.16.0.2
	OPENBSD_2_0_BASE:1.16
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.58
date	2017.02.20.01.00.26;	author jsg;	state Exp;
branches;
next	1.57;
commitid	twt8jzrSwYEE8tkA;

1.57
date	2017.01.29.03.48.08;	author jsg;	state Exp;
branches;
next	1.56;
commitid	PvVgkqAZoDP39bXC;

1.56
date	2015.06.01.17.36.19;	author miod;	state Exp;
branches;
next	1.55;
commitid	MPvATu4lQ8RLIXjC;

1.55
date	2014.07.16.01.23.39;	author deraadt;	state Exp;
branches;
next	1.54;
commitid	uuLCw8EfCrthMi2Z;

1.54
date	2013.08.06.19.11.53;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2013.07.05.21.29.51;	author miod;	state Exp;
branches;
next	1.52;

1.52
date	2013.03.10.21.06.23;	author miod;	state Exp;
branches;
next	1.51;

1.51
date	2011.11.21.01.36.18;	author jsg;	state Exp;
branches;
next	1.50;

1.50
date	2011.10.30.20.57.06;	author schwarze;	state Exp;
branches;
next	1.49;

1.49
date	2011.09.22.22.21.13;	author schwarze;	state Exp;
branches;
next	1.48;

1.48
date	2011.07.05.00.15.03;	author drahn;	state Exp;
branches;
next	1.47;

1.47
date	2010.10.18.17.11.27;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2010.05.10.18.20.31;	author drahn;	state Exp;
branches;
next	1.45;

1.45
date	2007.03.23.02.17.52;	author ray;	state Exp;
branches;
next	1.44;

1.44
date	2006.04.10.16.41.10;	author joris;	state Exp;
branches;
next	1.43;

1.43
date	2004.05.17.22.11.32;	author drahn;	state Exp;
branches;
next	1.42;

1.42
date	2004.03.08.23.31.51;	author drahn;	state Exp;
branches;
next	1.41;

1.41
date	2004.01.23.18.21.13;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2003.11.24.17.12.55;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2003.10.15.07.47.08;	author mickey;	state Exp;
branches;
next	1.38;

1.38
date	2003.09.26.07.35.03;	author otto;	state Exp;
branches;
next	1.37;

1.37
date	2003.08.03.01.28.38;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2003.07.30.23.23.25;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2003.07.22.17.15.40;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2003.07.22.17.15.12;	author brad;	state Exp;
branches;
next	1.33;

1.33
date	2003.06.22.22.27.17;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2002.06.12.04.17.24;	author art;	state Exp;
branches;
next	1.31;

1.31
date	2002.02.28.06.59.18;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2001.09.05.22.29.02;	author art;	state Exp;
branches;
next	1.29;

1.29
date	2001.07.11.03.02.26;	author pvalchev;	state Exp;
branches;
next	1.28;

1.28
date	99.11.18.16.36.50;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	99.05.26.16.02.54;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	98.11.17.23.14.14;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	98.06.29.00.09.51;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	98.05.04.21.35.29;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	98.03.29.22.17.15;	author niklas;	state Exp;
branches;
next	1.22;

1.22
date	98.03.11.21.42.18;	author maja;	state Exp;
branches;
next	1.21;

1.21
date	97.03.11.18.53.30;	author tholo;	state Exp;
branches;
next	1.20;

1.20
date	97.03.08.01.31.52;	author kstailey;	state Exp;
branches;
next	1.19;

1.19
date	97.01.21.04.34.33;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	96.12.23.22.42.46;	author rahnds;	state Exp;
branches;
next	1.17;

1.17
date	96.10.28.04.25.38;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	96.09.14.22.28.11;	author etheisen;	state Exp;
branches;
next	1.15;

1.15
date	96.09.14.06.00.40;	author etheisen;	state Exp;
branches;
next	1.14;

1.14
date	96.08.19.10.48.58;	author downsj;	state Exp;
branches;
next	1.13;

1.13
date	96.07.27.03.12.28;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.07.16.07.47.26;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.07.16.07.39.16;	author pefo;	state Exp;
branches;
next	1.10;

1.10
date	96.07.04.20.34.25;	author tholo;	state Exp;
branches;
next	1.9;

1.9
date	96.06.29.05.52.00;	author tholo;	state Exp;
branches;
next	1.8;

1.8
date	96.06.27.21.11.33;	author tholo;	state Exp;
branches;
next	1.7;

1.7
date	96.04.23.00.15.44;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.03.30.15.29.23;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.01.05.03.57.11;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	95.12.22.18.21.27;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	95.12.19.09.30.54;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.42.24;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.38.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.38.45;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.58
log
@Skip building gdb on aarch64 there is no support for it.
@
text
@#	$OpenBSD: Makefile,v 1.57 2017/01/29 03:48:08 jsg Exp $
#	$NetBSD: Makefile,v 1.35 1996/04/03 21:20:52 chuck Exp $

.include <bsd.own.mk>

.if make(obj)
SUBDIR+=	cc clang gcc
.else
.  if ${COMPILER_VERSION:L} == "gcc3"
SUBDIR+=	gcc
.  elif ${COMPILER_VERSION:L} == "gcc4"
SUBDIR+=	cc
.  elif ${COMPILER_VERSION:L} == "clang"
SUBDIR+=	clang
.  endif
.endif

SUBDIR+=	cxxfilt cvs
# binutils-2.17 needs to build gdb in binutils at the moment
.if make(obj)
SUBDIR+=	binutils
.elif ${MACHINE_CPU} != "aarch64"
SUBDIR+=	binutils
.endif
SUBDIR+=	binutils-2.17

# Do these last; texinfo builds the info 'dir' file, perl must be after binutils
SUBDIR+=	perl texinfo

.if ${COMPILER_VERSION:L} == "gcc4"
maninstall:
	${INSTALL} ${INSTALL_COPY} -o ${MANOWN} -g ${MANGRP} -m ${MANMODE} \
		gcc/protoize.1 ${DESTDIR}${MANDIR}1/protoize.1
	@@rm -f ${DESTDIR}${MANDIR}1/unprotoize.1
	ln ${DESTDIR}${MANDIR}1/protoize.1 ${DESTDIR}${MANDIR}1/unprotoize.1
.endif

.include <bsd.subdir.mk>
@


1.57
log
@descend into clang when building obj or when COMPILER_VERSION is clang
ok patrick@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.56 2015/06/01 17:36:19 miod Exp $
d20 3
d24 1
@


1.56
log
@Now that we do not need to build binutils 2.15 (except for gdb), simplify the
build logic.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.55 2014/07/16 01:23:39 deraadt Exp $
d7 1
a7 1
SUBDIR+=	cc gcc
d11 1
a11 1
.  else
d13 2
@


1.55
log
@lynx will go to ports.  there are too many reasons for it to go there,
and not enough for it to stay.  lengthy discussions.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2013/08/06 19:11:53 miod Exp $
a16 3
.if make(obj)
SUBDIR+=	binutils binutils-2.17
.else
a17 1
.if ${BINUTILS_VERSION} == "binutils-2.17"
d19 1
a19 3
.endif
SUBDIR+=	${BINUTILS_VERSION}
.endif
@


1.54
log
@Remove support for COMPILER_VERSION == gcc2.
Change the logic depending upon COMPILER_VERSION everywhere, to assume gcc4
is the norm and to explicitely test for gcc3 when a different behaviour
is required.
No functional change intended. Be sure to `make install' in share/mk before
attempting to do anything.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.53 2013/07/05 21:29:51 miod Exp $
d16 1
a16 1
SUBDIR+=	cxxfilt cvs lynx
@


1.53
log
@ELF_TOOLCHAIN bye bye.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2013/03/10 21:06:23 miod Exp $
d7 1
a7 1
SUBDIR+=	cc gcc ../egcs/gcc
d11 1
a11 1
.  elif ${COMPILER_VERSION:L} == "gcc4"
a12 2
.  elif ${COMPILER_VERSION:L} == "gcc2"
SUBDIR+=	../egcs/gcc
@


1.52
log
@Let platforms configured to use binutils 2.17 still recurse into the binutils
2.15 directory, but only to build gdb.
ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2011/11/21 01:36:18 jsg Exp $
a26 5
.endif

# most ports use binutils gas and ld, some do not (yet).
.if ${ELF_TOOLCHAIN:L} == "no"
SUBDIR+=	gas ld
@


1.51
log
@when testing COMPILER_VERSION don't assume the default case is gcc2
ok drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2011/10/30 20:57:06 schwarze Exp $
d22 4
@


1.50
log
@Always install addr2line(1), objcopy(1), and readelf(1), even on
architectures with !ELF_TOOLCHAIN && !USING_NEW_BINUTILS (like vax, m68k).
There is no need to reach around from usr.bin/Makefile into binutils;
we always descend into either binutils or binutils-2.17.
All is fine so far with binutils-2.17 since ia64 has USING_NEW_BINUTILS.

tested on vax and ok  deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.49 2011/09/22 22:21:13 schwarze Exp $
d13 1
a13 1
.  else
@


1.49
log
@Always install all manuals on all architectures.
No more exceptions even for binutils.
No more share/man in src/distrib/sets/lists/*/md.*
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2011/07/05 00:15:03 drahn Exp $
a38 6
.elif ${ELF_TOOLCHAIN:L} == "yes"
maninstall:
.for cmd in addr2line objcopy readelf
	${INSTALL} ${INSTALL_COPY} -o ${MANOWN} -g ${MANGRP} -m ${MANMODE} \
		binutils/binutils/doc/${cmd}.1 ${DESTDIR}${MANDIR}1/${cmd}.1
.endfor
@


1.48
log
@Allow switching between binutils and binutils 2.17.
NOTE: binutils-2.17 has not been tested on any archs. ok pirofti@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.47 2010/10/18 17:11:27 deraadt Exp $
d32 14
@


1.47
log
@The base no longer uses old groff -- it uses mandoc(1).  The ports tree still
sometimes needs groff, but there it is pulled in as a build-dependency, and
it is the newer groff.  We are able to do this now due to the hard work if ingo.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2010/05/10 18:20:31 drahn Exp $
d18 6
a23 1
SUBDIR+=	cxxfilt cvs lynx binutils
@


1.46
log
@Switch to using COMPILER_VERSION instead of USE_GCC3, allows for more flexible
complier picking, eg supporting gcc2, gcc3, and gcc4. based on diff by Marco,
with fixes from espie@@.
ok espie@@ general mumbling of approval of others.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2007/03/23 02:17:52 ray Exp $
d18 1
a18 1
SUBDIR+=	cxxfilt cvs groff lynx binutils
@


1.45
log
@Enable our sendbug(1), prodded by deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2006/04/10 16:41:10 joris Exp $
a4 1
USE_GCC3?=No
d7 1
a7 1
SUBDIR+=	gcc ../egcs/gcc
d9 1
a9 1
.  if ${USE_GCC3:L} == "yes"
d11 2
@


1.44
log
@switch to openrcs and eliminate more gnu from the tree.
note that openrcs still lacks some features.

okay niallo@@, xsa@@, ray@@, "Do it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2004/05/17 22:11:32 drahn Exp $
d17 1
a17 1
SUBDIR+=	cxxfilt cvs groff lynx sendbug binutils
@


1.43
log
@Enable binutils for arm now that we have binutils 2.14.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2004/03/08 23:31:51 drahn Exp $
d17 1
a17 1
SUBDIR+=	cxxfilt cvs groff lynx rcs sendbug binutils
@


1.42
log
@Do not build binutils on arm. ARM needs at least binutils 2.14.
Allows others to build OpenBSD/cats, use binutils from devel/binutils/stable
Requested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2004/01/23 18:21:13 espie Exp $
d17 1
a17 4
SUBDIR+=	cxxfilt cvs groff lynx rcs sendbug
.if ${MACHINE_ARCH} != "arm"
SUBDIR+=binutils
.endif
@


1.41
log
@USE_GCC3 switch, now that propolice is in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2003/11/24 17:12:55 espie Exp $
d17 4
a20 1
SUBDIR+=	cxxfilt cvs groff lynx rcs sendbug binutils
@


1.40
log
@Switch to using libiberty in new location.
Disable building of cxxfilt in gcc, build it from its own directory.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2003/10/15 07:47:08 mickey Exp $
d5 1
d7 6
d14 3
@


1.39
log
@reverse the comment on binutils gas/ld as that's what it is now
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2003/09/26 07:35:03 otto Exp $
d7 1
a7 1
SUBDIR+=	cvs groff lynx rcs sendbug binutils
@


1.38
log
@Disable bc (and dc).

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2003/08/03 01:28:38 deraadt Exp $
d9 1
a9 1
# some ports use binutils gas and ld, most do not (yet).
@


1.37
log
@gnu gzip dir is now bye bye
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2003/07/30 23:23:25 deraadt Exp $
d7 1
a7 1
SUBDIR+=	bc cvs groff lynx rcs sendbug binutils
@


1.36
log
@shine a bit more
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 2003/07/22 17:15:40 deraadt Exp $
d7 1
a7 1
SUBDIR+=	bc cvs groff gzip lynx rcs sendbug binutils
@


1.35
log
@switch to our own diff/diff3 (sdiff goes bye bye)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2003/07/22 17:15:12 brad Exp $
d6 2
a7 4
SUBDIR+=	bc cvs
SUBDIR+=../egcs/gcc
#SUBDIR+= gcc 
SUBDIR+= groff gzip lynx rcs sendbug
a8 1
SUBDIR+=	binutils
@


1.34
log
@- use :L variable modifier with ELF_TOOLCHAIN variable
- change 2 instances of the check from != "yes" to == "no"

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2003/06/22 22:27:17 deraadt Exp $
d6 1
a6 1
SUBDIR+=	bc cvs diff diff3 
d9 1
a9 1
SUBDIR+= groff gzip lynx rcs sdiff sendbug
@


1.33
log
@bye bye grep (gzip remains for a few scripts)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2002/06/12 04:17:24 art Exp $
d13 1
a13 1
.if ${ELF_TOOLCHAIN} != "yes"
@


1.32
log
@use ELF_TOOLCHAIN instead of listing all archs.
drahn@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2002/02/28 06:59:18 millert Exp $
d9 1
a9 1
SUBDIR+= grep groff gzip lynx rcs sdiff sendbug
@


1.31
log
@Remove feature-poor GPL'd deroff clone, we have a better, BSD-licensed one now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2001/09/05 22:29:02 art Exp $
d4 2
d13 1
a13 2
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != powerpc) && \
	(${MACHINE_ARCH} != "hppa") && (${MACHINE_ARCH} != "sparc64")
@


1.30
log
@sparc64 uses new binutils.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2001/07/11 03:02:26 pvalchev Exp $
d4 1
a4 1
SUBDIR+=	bc cvs deroff diff diff3 
@


1.29
log
@remove mips leftovers; ok brad
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 1999/11/18 16:36:50 millert Exp $
d12 1
a12 1
	(${MACHINE_ARCH} != "hppa")
@


1.28
log
@build new sudo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 1999/05/26 16:02:54 espie Exp $
d11 2
a12 2
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "mips") && \
	(${MACHINE_ARCH} != "powerpc") && (${MACHINE_ARCH} != "hppa")
@


1.27
log
@Link in egcs, kill gcc and libg++
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 1998/11/17 23:14:14 millert Exp $
d7 1
a7 1
SUBDIR+= grep groff gzip lynx rcs sdiff sendbug sudo
@


1.26
log
@Move perl install to be after binutils since binutils installs some headers that we may want to convert with h2ph
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 1998/06/29 00:09:51 millert Exp $
d4 4
a7 2
SUBDIR+=	bc cvs deroff diff diff3 gcc grep groff
SUBDIR+=	gzip lynx rcs sdiff sendbug sudo
@


1.25
log
@dc is now part of GNU bc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 1998/05/04 21:35:29 mickey Exp $
d5 1
a5 1
SUBDIR+=	gzip lynx perl rcs sdiff sendbug sudo
d14 2
a15 2
# Do this last, so that it re-builds the info 'dir' file
SUBDIR+= texinfo
@


1.24
log
@use binutils for hppa
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 1998/03/29 22:17:15 niklas Exp $
d4 1
a4 1
SUBDIR+=	bc cvs dc deroff diff diff3 gcc grep groff
@


1.23
log
@Adapt the newer of our GDB versions to a.out ports.  The main part of this
commit comes from NetBSD.  Also, the kernel debugging mode is a bit different
but you will notice when you type gdb -k because it documents the difference
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 1998/03/11 21:42:18 maja Exp $
d10 1
a10 1
	(${MACHINE_ARCH} != "powerpc")
@


1.22
log
@add lynx. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 1997/03/11 18:53:30 tholo Exp $
a6 3
# some ports use binutils, some do not.
.if (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "mips") || \
	(${MACHINE_ARCH} == "powerpc")
d8 4
a11 2
.else
SUBDIR+=	gas gdb ld
@


1.21
log
@Do not build GNU cpio
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 1997/03/08 01:31:52 kstailey Exp $
d5 1
a5 1
SUBDIR+=	gzip perl rcs sdiff sendbug sudo
@


1.20
log
@add deroff to SUBDIRS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 1997/01/21 04:34:33 millert Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc deroff diff diff3 gcc grep groff
@


1.19
log
@Install BSD sort(1) not GNU one.  Can always change back if necesary.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 1996/12/23 22:42:46 rahnds Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc diff diff3 gcc grep groff
@


1.18
log
@Powerpc port uses binutils not old compiler tools.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 1996/10/28 04:25:38 millert Exp $
d5 1
a5 1
SUBDIR+=	gzip perl rcs sdiff sendbug sort sudo
@


1.17
log
@add sudo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 1996/09/14 22:28:11 etheisen Exp $
d8 2
a9 1
.if (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "mips")
@


1.16
log
@A time to groff...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1996/09/14 06:00:40 etheisen Exp $
d5 1
a5 1
SUBDIR+=	gzip perl rcs sdiff sendbug sort
@


1.15
log
@Temporarily disable groff build until other mods are checked in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1996/08/19 10:48:58 downsj Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc diff diff3 gcc grep 
@


1.14
log
@+perl
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1996/07/27 03:12:28 deraadt Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc diff diff3 gcc grep groff
@


1.13
log
@do texinfo last, for info/dir file
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1996/07/16 07:47:26 deraadt Exp $
d5 1
a5 1
SUBDIR+=	gzip rcs sdiff sendbug sort
@


1.12
log
@alpha/mips == binutils; others == gas/ld
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1996/07/16 07:39:16 pefo Exp $
d5 1
a5 1
SUBDIR+=	gzip rcs sdiff sendbug sort texinfo
d13 3
@


1.11
log
@Mips uses gnu binutils
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1996/07/04 20:34:25 tholo Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc diff diff3 grep groff
d7 4
a10 2
# some ports don't use the tool chain in /usr/src
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "mips")
a11 7
.endif
.if ${MACHINE_ARCH} != "alpha"
SUBDIR+=	gcc
.endif
# MIPS uses binutils for ELF support.
.if ${MACHINE_ARCH} == "mips"
SUBDIR+=	binutils
@


1.10
log
@GNU awk no longer used
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1996/06/29 05:52:00 tholo Exp $
d13 4
@


1.9
log
@Use tar(1) emulation as provided by pax(1)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1996/06/27 21:11:33 tholo Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc diff diff3 gawk grep groff
@


1.8
log
@We now support bug reports using a modified version of send-pr(1) that
will not interfere with a possible local installation of GNATS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1996/03/30 15:29:23 niklas Exp $
d5 1
a5 1
SUBDIR+=	gzip rcs sdiff sendbug sort tar texinfo
@


1.7
log
@Merge of NetBSD 960418
@
text
@d5 1
a5 1
SUBDIR+=	gzip rcs sdiff send-pr sort tar texinfo
@


1.6
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$NetBSD: Makefile,v 1.34 1996/02/18 12:28:15 pk Exp $
@


1.5
log
@use gcc 2.7.2 on all architectures. any port that breaks should be fixed
@
text
@d1 2
a2 1
#	$NetBSD: Makefile,v 1.27 1995/12/07 07:26:32 phil Exp $
d4 1
a4 1
SUBDIR+=	bc cpio cvs dc diff diff3 gawk gcc grep groff
d8 1
a8 2
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "mips") && \
	(${MACHINE_ARCH} != "vax") && (${MACHINE_ARCH} != "ns32k")
d11 2
a12 11

# ns32k and vax wants newer gcc
.if (${MACHINE_ARCH} == "ns32k") || (${MACHINE_ARCH} == "vax")
SUBDIR+=        gas gcc gdb ld
.endif

# XXX alpha still needs the /usr/bin/cpp script.
.if (${MACHINE_ARCH} == "alpha")
afterinstall:
	install -c -o $(BINOWN) -g $(BINGRP) -m $(BINMODE) \
	    $(.CURDIR)/gcc2/cpp/usr.bin.cpp.sh $(DESTDIR)/usr/bin/cpp
@


1.4
log
@add texinfo
@
text
@d3 1
a3 1
SUBDIR+=	bc cpio cvs dc diff diff3 gawk grep groff
d9 1
a9 1
SUBDIR+=	gas gcc2 gdb ld
@


1.3
log
@build cvs
@
text
@d4 1
a4 1
SUBDIR+=	gzip rcs sdiff send-pr sort tar
@


1.2
log
@update from netbsd; parallel make stuff
@
text
@d3 1
a3 1
SUBDIR+=	bc cpio dc diff diff3 gawk grep groff
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.24 1995/09/27 12:46:07 cgd Exp $
d7 2
a8 1
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "mips")
d10 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

