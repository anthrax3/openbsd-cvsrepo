head	1.9;
access;
symbols
	OPENBSD_5_3:1.8.0.40
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.38
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.36
	OPENBSD_5_0:1.8.0.34
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.32
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.30
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.26
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.4.0.12
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.10
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2013.07.05.21.31.47;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2003.04.16.02.15.10;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.07.01.25.34;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.19.19.28.12;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.10.17.28.16;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	99.08.24.19.05.16;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	99.01.23.00.14.13;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.03.26.19.46.26;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.40.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.40.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/* * $OpenBSD: symbol.c,v 1.8 2003/04/16 02:15:10 deraadt Exp $	- symbol table routines*/
/*
 */

/* Create the symbol table entries for `etext', `edata' and `end'.  */

#include <sys/param.h>
#include <sys/types.h>
#include <fcntl.h>
#include <a.out.h>
#include <stab.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "ld.h"

symbol	*symtab[SYMTABSIZE];	/* The symbol table. */
int	num_hash_tab_syms;	/* Number of symbols in symbol hash table. */

symbol	*edata_symbol;		/* the symbol _edata */
symbol	*etext_symbol;		/* the symbol _etext */
symbol	*end_symbol;		/* the symbol _end */
symbol	*got_symbol;		/* the symbol __GLOBAL_OFFSET_TABLE_ */
symbol	*dynamic_symbol;	/* the symbol __DYNAMIC */

void
symtab_init(int relocatable_output)
{
	/*
	 * Put linker reserved symbols into symbol table.
	 */
#ifndef nounderscore
#define ETEXT_SYM	"_etext"
#define EDATA_SYM	"_edata"
#define END_SYM		"_end"
#define DYN_SYM		"__DYNAMIC"
#define GOT_SYM		"__GLOBAL_OFFSET_TABLE_"
#define OTHER_SYM	"_GLOBAL_OFFSET_TABLE_"
#else
#define ETEXT_SYM	"etext"
#define EDATA_SYM	"edata"
#define END_SYM		"end"
#define DYN_SYM		"_DYNAMIC"
#define GOT_SYM		"_GLOBAL_OFFSET_TABLE_"
#define OTHER_SYM	"__GLOBAL_OFFSET_TABLE_"
#endif

	dynamic_symbol = getsym(DYN_SYM);
	dynamic_symbol->defined = relocatable_output?N_UNDF:(N_DATA | N_EXT);

	got_symbol = getsym(GOT_SYM);
	got_symbol->defined = N_DATA | N_EXT;

	if (relocatable_output)
		return;

	etext_symbol = getsym(ETEXT_SYM);
	edata_symbol = getsym(EDATA_SYM);
	end_symbol = getsym(END_SYM);

	etext_symbol->defined = N_TEXT | N_EXT;
	edata_symbol->defined = N_DATA | N_EXT;
	end_symbol->defined = N_BSS | N_EXT;

	etext_symbol->flags |= GS_REFERENCED;
	edata_symbol->flags |= GS_REFERENCED;
	end_symbol->flags |= GS_REFERENCED;
}

/*
 * Compute the hash code for symbol name KEY.
 */

static int
hash_string(char *key)
{
	char *cp;
	int k;

	cp = key;
	k = 0;
	while (*cp)
		k = (((k << 1) + (k >> 14)) ^ (*cp++)) & 0x3fff;

	return k;
}

/*
 * Get the symbol table entry for the global symbol named KEY.
 * Create one if there is none.
 */

symbol *
getsym(char *key)
{
	int hashval;
	symbol *bp;

	if (strcmp(key, OTHER_SYM) == 0)
		key = GOT_SYM;
	/* Determine the proper bucket.  */
	hashval = hash_string(key) % SYMTABSIZE;

	/* Search the bucket.  */
	for (bp = symtab[hashval]; bp; bp = bp->link)
		if (strcmp(key, bp->name) == 0)
			return bp;

	/* Nothing was found; create a new symbol table entry.  */
	bp = (symbol *)xmalloc(sizeof(symbol));
	bp->name = (char *)xstrdup(key);
	bp->refs = 0;
	bp->defined = 0;
	bp->value = 0;
	bp->common_size = 0;
	bp->warning = 0;
	bp->undef_refs = 0;
	bp->mult_defs = 0;
	bp->alias = 0;
	bp->setv_count = 0;
	bp->symbolnum = 0;
	bp->rrs_symbolnum = 0;

	bp->size = 0;
	bp->aux = 0;
	bp->sorefs = 0;
	bp->so_defined = 0;
	bp->def_lsp = 0;
	bp->jmpslot_offset = -1;
	bp->gotslot_offset = -1;
	bp->flags = 0;

	/* Add the entry to the bucket.  */
	bp->link = symtab[hashval];
	symtab[hashval] = bp;

	++num_hash_tab_syms;

	return bp;
}

/* Like `getsym' but return 0 if the symbol is not already known.  */

symbol *
getsym_soft(char *key)
{
	int hashval;
	symbol *bp;

	if (strcmp(key, OTHER_SYM) == 0)
		key = GOT_SYM;

	/* Determine which bucket. */
	hashval = hash_string(key) % SYMTABSIZE;

	/* Search the bucket. */
	for (bp = symtab[hashval]; bp; bp = bp->link)
		if (strcmp(key, bp->name) == 0)
			return bp;

	return 0;
}
@


1.8
log
@string cleanup; ok millert
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.7 2002/09/07 01:25:34 marc Exp $	- symbol table routines*/
@


1.7
log
@
ansification of ld

* normalized the signatures of the functions passed to each_file()
   and each_full_file().  In most cases that meant adding a void *dummy.
   In one case it changed an int to a void*, but the arg was only checked
   for zero/not-zero so the change was not significant.

 * removes unused code and structures.

 * makes sure printf args match their format.

 * got rid of some of the gcc -Wall warnings

OK deraadt@@
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.6 2002/07/19 19:28:12 marc Exp $	- symbol table routines*/
d112 1
a112 2
	bp->name = (char *)xmalloc(strlen(key) + 1);
	strcpy (bp->name, key);
@


1.6
log
@convert functions from K&R style to prototype style.
Function arg types have not yet been fixed.  OK fgs@@, espie@@
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.5 2002/07/10 17:28:16 marc Exp $	- symbol table routines*/
d75 1
a75 1
int
@


1.5
log
@
First of some clean-up commits.  This one only removes use of
register variables.   clean-up concept ok deraadt@@
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.4 1999/08/24 19:05:16 niklas Exp $	- symbol table routines*/
d28 1
a28 2
symtab_init(relocatable_output)
	int	relocatable_output;
d76 1
a76 2
hash_string (key)
     char *key;
d95 1
a95 2
getsym(key)
	char *key;
d147 1
a147 2
getsym_soft (key)
	char *key;
@


1.4
log
@Align defines nicely
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.3 1999/01/23 00:14:13 espie Exp $	- symbol table routines*/
d80 2
a81 2
	register char *cp;
	register int k;
d100 2
a101 2
	register int hashval;
	register symbol *bp;
d153 2
a154 2
	register int hashval;
	register symbol *bp;
@


1.3
log
@Merge _GLOBAL_OFFSET_TABLE_ and __GLOBAL_OFFSET_TABLE_ at
linking time, so that we can remove the corresponding kludge from gas.
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.2 1998/03/26 19:46:26 niklas Exp $	- symbol table routines*/
d40 1
a40 1
#define OTHER_SYM		"_GLOBAL_OFFSET_TABLE_"
d47 1
a47 1
#define OTHER_SYM		"__GLOBAL_OFFSET_TABLE_"
@


1.2
log
@RCS id cleanup
@
text
@d1 1
a1 1
/* * $OpenBSD: symbol.c,v 1.1.1.1 1995/10/18 08:40:55 deraadt Exp $	- symbol table routines*/
d40 1
d47 1
d103 2
d155 3
@


1.1
log
@Initial revision
@
text
@d1 1
a2 1
 * $Id: symbol.c,v 1.8 1994/06/29 11:18:55 pk Exp $	- symbol table routines
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
