head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.44
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.42
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.40
	OPENBSD_5_0:1.3.0.38
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.36
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.34
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.30
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.32
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.28
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.26
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.24
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.22
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.20
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.18
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.16
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.14
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.12
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.10
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.07.05.21.31.47;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2002.07.19.19.28.12;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.03.26.19.47.12;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.40.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.40.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/* *	$OpenBSD: md-static-funcs.c,v 1.3 2002/07/19 19:28:12 marc Exp $*/
/*
 *
 * Called by ld.so when onanating.
 * This *must* be a static function, so it is not called through a jmpslot.
 */

#include <sys/syscall.h>
#define write(fd, s, n)		__syscall(SYS_write, (fd), (s), (n))
#define _exit(n)		__syscall(SYS_exit, (n))

asm("___syscall:");
asm("	movd tos,r1");		/* return address */
asm("	movd tos,r0");		/* syscall number */
asm("	movd r1,tos");
asm("	svc");			/* do system call */
asm("	bcc 1f");		/* check error */
asm("	movqd -1,r0");
asm("1:	jump 0(0(sp))");	/* return */

static void
md_relocate_simple(struct relocation_info *r, long relocation, char *addr)
{
    if (r->r_relative) {
    	if (r->r_disp != 2) {
    		write(2, "Illegal runtime relocation for ld.so",
		      sizeof("Illegal runtime relocation for ld.so") - 1);
		_exit(1);
    	}
	*(long *)addr += relocation;
    }
}

#undef _exit
#undef write
@


1.3
log
@convert functions from K&R style to prototype style.
Function arg types have not yet been fixed.  OK fgs@@, espie@@
@
text
@d1 1
a1 1
/* *	$OpenBSD: md-static-funcs.c,v 1.2 1998/03/26 19:47:12 niklas Exp $*/
@


1.2
log
@RCS id cleanup
@
text
@d1 1
a1 1
/* *	$OpenBSD: md-static-funcs.c,v 1.1.1.1 1995/10/18 08:40:57 deraadt Exp $*/
d22 1
a22 4
md_relocate_simple(r, relocation, addr)
struct relocation_info	*r;
long			relocation;
char			*addr;
@


1.1
log
@Initial revision
@
text
@d1 1
a2 1
 *	$Id: md-static-funcs.c,v 1.1 1994/04/07 19:44:46 pk Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
