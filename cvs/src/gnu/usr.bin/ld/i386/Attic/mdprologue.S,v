head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.48
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.46
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.44
	OPENBSD_5_0:1.3.0.42
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.40
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.38
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.34
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.36
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.32
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.30
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.28
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.26
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.24
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.22
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.20
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.18
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.16
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.14
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.12
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.10
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.07.05.21.31.47;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2001.09.05.08.22.36;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.03.26.19.46.42;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.40.56;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.40.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put the a.out as and ld to rest in the Attic, finally!
@
text
@/* *	$OpenBSD: mdprologue.S,v 1.3 2001/09/05 08:22:36 espie Exp $*/
/*
 * Copyright (c) 1993 Paul Kranenburg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Paul Kranenburg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 * i386 run-time link editor entry points.
 */

#include <sys/syscall.h>

	.text
	.globl	_binder, _binder_entry

/*
 *	_rtl(int version, struct crt_ldso *crtp)
 */

_rtl:					# crt0 calls us here
	pushl	%ebp			# Allocate stack frame
	movl	%esp,%ebp
	pushl	%ebx

	call	1f			# PIC function prologue
1:
	popl	%ebx
	addl	$__GLOBAL_OFFSET_TABLE_+[.-1b],%ebx

	movl	12(%ebp),%eax		# Extract data from interface structure
	movl	(%eax),%eax		# base address of ld.so (first field)
					# setup arguments for rtld()
	movl	(%ebx),%ecx		# 1st entry in GOT is our __DYNAMIC
	addl	%eax,%ecx		#   add load address
	pushl	%ecx			# 3rd arg
	pushl	12(%ebp)		# 2nd arg == &crt.
	pushl	8(%ebp)			# 1st arg == version
	addl	_rtld@@GOT(%ebx),%eax	# relocate address of function
	call	%eax			# _rtld(version, crtp, DYNAMIC)
	addl	$12,%esp		# pop arguments

	popl	%ebx
	leave				# remove stack frame
	ret

 # First call to a procedure generally comes through here for
 # binding.

_binder_entry:
	pushl	%ebp			# setup a stack frame
	movl	%esp,%ebp
	pusha				# save all regs

	xorl	%eax,%eax		# clear
	movl	4(%ebp),%esi		# return address in PLT
	movw	(%esi),%ax		# get hold of relocation number
	subl	$6,%esi			# make it point to the jmpslot

	pushl	%eax			# pushd arguments
	pushl	%esi			#
	call	_binder@@PLT		# _binder(rpc, index)
	addl	$8,%esp			# pop arguments
	movl	%eax,4(%ebp)		# return value from _binder() == actual
					#  address of function
	popa				# restore regs
	leave				# remove our stack frame
	ret
@


1.3
log
@Use __GLOBAL_OFFSET_TABLE_ consistently.
@
text
@d1 1
a1 1
/* *	$OpenBSD: mdprologue.S,v 1.2 1998/03/26 19:46:42 niklas Exp $*/
@


1.2
log
@RCS id cleanup
@
text
@d1 1
a1 1
/* *	$OpenBSD: mdprologue.S,v 1.1.1.1 1995/10/18 08:40:56 deraadt Exp $*/
d54 1
a54 1
	addl	$_GLOBAL_OFFSET_TABLE_+[.-1b],%ebx
@


1.1
log
@Initial revision
@
text
@d1 1
a30 1
 *	$Id: mdprologue.S,v 1.7 1994/12/04 07:42:44 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
