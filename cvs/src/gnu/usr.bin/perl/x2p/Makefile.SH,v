head	1.16;
access;
symbols
	OPENBSD_6_0:1.16.0.10
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	PERL_5_20_2:1.1.1.15
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	PERL_5_20_1:1.1.1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	PERL_5_18_2:1.1.1.14
	PERL:1.1.1
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	PERL_5_16_3:1.1.1.13
	OPENBSD_5_3:1.13.0.10
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	PERL_5_12_2:1.1.1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	PERL_5_10_1:1.1.1.11
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	PERL_5_10_0:1.1.1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	PERL_5_8_8:1.1.1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	PERL_5_8_6:1.1.1.8
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	PERL_5_8_5:1.1.1.7
	PERL_5_8_3:1.1.1.6
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.8.0.4
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.16
date	2014.11.17.20.57.08;	author afresh1;	state Exp;
branches;
next	1.15;
commitid	QP75iYx42Uo7mMxO;

1.15
date	2014.03.24.15.05.34;	author afresh1;	state Exp;
branches;
next	1.14;

1.14
date	2013.03.25.20.41.01;	author sthen;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.24.15.07.12;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.12.18.30.28;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2008.09.29.17.36.23;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.28.19.23.15;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.03.03.02.53;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.10.27.22.25.40;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.24.18.36.39;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.06.17.09.13;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.04.29.22.52.56;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.11.30.08.06.58;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.04.17.17.51.37;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	97.04.17.14.37.05;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.13.33;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.13.33;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.42.20;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.11.09;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.26.20;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.14;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.44.40;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.08.09.17.48.49;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2005.01.15.21.18.33;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2006.03.28.18.50.02;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2008.09.29.17.19.06;	author millert;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2009.10.12.18.10.41;	author millert;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2010.09.24.14.49.20;	author millert;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2013.03.25.20.09.45;	author sthen;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2014.03.24.14.59.13;	author afresh1;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2014.11.17.20.53.21;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.16
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@#!/bin/sh

case $PERL_CONFIG_SH in
'')
	if test -f config.sh; then TOP=.;
	elif test -f ../config.sh; then TOP=..;
	elif test -f ../../config.sh; then TOP=../..;
	elif test -f ../../../config.sh; then TOP=../../..;
	elif test -f ../../../../config.sh; then TOP=../../../..;
	else
		echo "Can't find config.sh."; exit 1
	fi
	. $TOP/config.sh
	;;
esac
: This forces SH files to create target in same directory as SH file.
: This is so that make depend always knows where to find SH derivatives.
case "$0" in
*/Makefile.SH) cd `expr X$0 : 'X\(.*\)/'` ;;
Makefile.SH) ;;
*) case `pwd` in
   */x2p) ;;
   *) if test -d x2p; then cd x2p
      else echo "Can't figure out where to write output."; exit 1
	  fi;;
   esac;;
esac

echo "Extracting x2p/Makefile (with variable substitutions)"
rm -f Makefile

# The .PL extractions use the Cwd extension.  For statically-built
# perls, we need perl, not just miniperl.
case "$usedl" in
    define) perl="../miniperl" ;;
    *)      perl="../perl" ;;
esac

cat >Makefile <<!GROK!THIS!
# $RCSfile: Makefile.SH,v $$Revision: 4.1 $$Date: 92/08/07 18:29:07 $
#
# $Log:	Makefile.SH,v $

CC = $cc
BYACC = $byacc
LDFLAGS = $ldflags
shellflags = $shellflags

libs = $perllibs

$make_set_make
# grrr
SHELL = $sh

# These variables may need to be manually set for non-Unix systems.
AR = $ar
EXE_EXT = $_exe
LIB_EXT = $_a
OBJ_EXT = $_o
PATH_SEP = $p_

FIRSTMAKEFILE = $firstmakefile

# how to tr(anslate) newlines

TRNL = '$trnl'

OPTIMIZE = $optimize

.SUFFIXES: .c \$(OBJ_EXT)

RUN =
PERL = $perl

!GROK!THIS!

cat >>Makefile <<'!NO!SUBS!'

REALPERL = ../perl
CCCMD = `sh $(shellflags) ../cflags "optimize='$(OPTIMIZE)'" $@@`

pl = find2perl.PL s2p.PL
plextract = find2perl s2p

h = EXTERN.h INTERN.h ../config.h ../handy.h hash.h a2p.h str.h util.h

c = hash.c str.c util.c walk.c

obj = hash$(OBJ_EXT) str$(OBJ_EXT) util$(OBJ_EXT) walk$(OBJ_EXT)

lintflags = -phbvxac


.c$(OBJ_EXT):
	$(CCCMD) -DPERL_FOR_X2P $*.c

all: a2p$(EXE_EXT) s2p find2perl
	@@echo " "

a2p$(EXE_EXT): $(obj) a2p$(OBJ_EXT)
	$(CC) -o a2p $(LDFLAGS) $(obj) a2p$(OBJ_EXT) $(libs)

# I now supply a2p.c with the kits, so the following section is
# used only if you force byacc to run by saying
#    make run_byacc
# byacc 1.8.2 or 1.9 are recommended.

run_byacc:	FORCE
	@@ echo Expect many shift/reduce and reduce/reduce conflicts
	$(BYACC) a2p.y
	rm -f a2p.c
	sed -e 's/(yyn = yydefred\[yystate\])/((yyn = yydefred[yystate]))/' \
	    -e 's/(yys = getenv("YYDEBUG"))/((yys = getenv("YYDEBUG")))/' \
	    -e 's/^yyerrlab://' \
	    -e 's/^    goto yyerrlab;//' \
	    -e 's/^yynewerror://' \
	    -e 's/^    goto yynewerror;//' \
	    -e 's|^static char yysccsid\(.*\)|/* static char yysccsid\1 */|' \
	    -e 's/^\(char \*yyname\[\]\)/const \1/' \
	    -e 's/^\(char \*yyrule\[\]\)/const \1/' \
	    -e 's/^\(    register\) \(char \*yys;\)/\1 const \2/' \
	    < y.tab.c > a2p.c

FORCE:

# We don't want to regenerate a2p.c, but it might appear out-of-date
# after a patch is applied or a new distribution is made.
a2p.c: a2p.y
	-@@sh -c true

a2p$(OBJ_EXT): a2p.c a2py.c a2p.h EXTERN.h util.h INTERN.h \
		../handy.h ../config.h str.h hash.h
	$(CCCMD) a2p.c

clean:
	rm -f a2p$(EXE_EXT) psed *$(OBJ_EXT) $(plexe) $(plc)

distclean: veryclean

realclean: clean
	-rmdir .depending
	rm -f core $(plextract) all
	rm -f $(FIRSTMAKEFILE) $(FIRSTMAKEFILE).old makefile.old

veryclean: realclean
	rm -f *~ *.orig

# The following lint has practically everything turned on.  Unfortunately,
# you have to wade through a lot of mumbo jumbo that can't be suppressed.
# If the source file has a /*NOSTRICT*/ somewhere, ignore the lint message
# for that spot.

lint:
	lint $(lintflags) $(defs) $(c) > a2p.fuzz

depend: ../makedepend
	sh ../makedepend MAKE=$(MAKE) ../cflags

clist:
	echo $(c) | tr ' ' $(TRNL) >.clist

hlist:
	echo $(h) | tr ' ' $(TRNL) >.hlist

$(plextract):
	$(RUN) $(PERL) -I../lib $@@.PL

find2perl: find2perl.PL ../config.sh

s2p: s2p.PL ../config.sh

# AUTOMATICALLY GENERATED MAKE DEPENDENCIES--PUT NOTHING BELOW THIS LINE
$(obj):
	@@ echo "You haven't done a "'"make depend" yet!'; exit 1
makedepend: depend
!NO!SUBS!
$eunicefix Makefile
rm -f $firstmakefile
@


1.15
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d72 1
a72 1
RUN = $run
d80 1
a80 12
CCCMD = `sh $(shellflags) cflags "optimize='$(OPTIMIZE)'" $@@`

public = a2p$(EXE_EXT) s2p find2perl

private = 

manpages = a2p.man s2p.man

util =

sh = Makefile.SH cflags.SH
shextract = Makefile cflags
a83 5
plexe = find2perl.exe s2p.exe
plc   = find2perl.c s2p.c
plm   = a2p.loadmap

addedbyconf = $(shextract) $(plextract)
d97 1
a97 1
all: $(public) $(private) $(util)
d136 1
a136 1
	rm -f a2p$(EXE_EXT) psed *$(OBJ_EXT) $(plexe) $(plc) $(plm)
d142 1
a142 1
	rm -f core $(addedbyconf) all
d157 1
a157 1
	sh ../makedepend MAKE=$(MAKE)
a164 3
shlist:
	echo $(sh) | tr ' ' $(TRNL) >.shlist

a177 6
case `pwd` in
*SH)
    $rm -f ../Makefile
    $ln Makefile ../Makefile
    ;;
esac
@


1.14
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 2
@


1.13
log
@merge in perl 5.12.2 plus local changes
@
text
@d29 8
a44 3
# XXX Perl malloc temporarily unusable (declaration collisions with stdlib.h)
#mallocsrc = $mallocsrc
#mallocobj = $mallocobj
d71 1
d101 1
a101 1
c = hash.c $(mallocsrc) str.c util.c walk.c
d103 1
a103 1
obj = hash$(OBJ_EXT) $(mallocobj) str$(OBJ_EXT) util$(OBJ_EXT) walk$(OBJ_EXT)
d156 1
a156 1
	rm -f core $(addedbyconf) all malloc.c
d170 1
a170 1
depend: $(mallocsrc) ../makedepend
a181 2
# These should be automatically generated

d183 1
a183 3
	$(RUN) ../miniperl -I../lib $@@.PL

find2perl: find2perl.PL
d185 1
a185 1
s2p: s2p.PL
d187 1
a187 7
malloc.c: ../malloc.c
	rm -f malloc.c
	sed <../malloc.c >malloc.c \
	    -e 's/"EXTERN.h"/"..\/EXTERN.h"/' \
	    -e 's/"perl.h"/"..\/perl.h"/' \
	    -e 's/my_exit/exit/' \
	    -e 's/MUTEX_[A-Z_]*(&PL_malloc_mutex);//'
@


1.12
log
@Merge in perl 5.10.1; part two
@
text
@d146 2
@


1.11
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d127 3
@


1.10
log
@merge in perl 5.8.8
@
text
@d30 1
a30 5
# $RCSfile: Makefile.SH,v $$Revision: 1.9 $$Date: 2003/12/03 03:02:53 $
#
# $Log: Makefile.SH,v $
# Revision 1.9  2003/12/03 03:02:53  millert
# Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
d32 1
d50 1
a50 1
EXE_EXT = $_ext
d65 2
a107 3
compile: all
	$(REALPERL) -I../lib ../utils/perlcc -I .. -L .. $(plextract) -v -log ../compilelog;  

d174 1
a174 1
	../miniperl -I../lib $@@.PL
@


1.9
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d30 5
a34 1
# $RCSfile: Makefile.SH,v $$Revision: 4.1 $$Date: 92/08/07 18:29:07 $
a35 1
# $Log:	Makefile.SH,v $
d117 2
a118 4
# make  run_byacc

check_byacc:
	@@$(BYACC) -V 2>&1 | grep 'version 1\.8\.2'
d120 1
a120 1
run_byacc:	FORCE check_byacc
d179 4
@


1.8
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d42 1
a42 1
libs = $libs
d147 1
d149 1
a149 1
	rm -f $(FIRSTMAKEFILE) $(FIRSTMAKEFILE).old
@


1.7
log
@merge in perl 5.6.1 with our local changes
@
text
@d1 1
a1 1
case $CONFIGDOTSH in
d61 2
d70 1
a70 1
CCCMD = `sh $(shellflags) cflags $@@`
d72 1
a72 1
public = a2p s2p find2perl
d107 1
a107 1
	$(REALPERL) -I../lib ../utils/perlcc -regex 's/$$/.exe/' $(plextract) -prog -verbose dcf -log ../compilelog;  
d109 1
a109 1
a2p: $(obj) a2p$(OBJ_EXT)
d116 4
a119 1
run_byacc:	FORCE
d123 8
a130 1
	mv y.tab.c a2p.c
d144 1
a144 1
	rm -f a2p *$(OBJ_EXT) $(plexe) $(plc) $(plm)
@


1.6
log
@perl-5.6.0 + local changes
@
text
@d37 1
a37 4
SMALL = $small
LARGE = $large $split
# XXX Perl malloc temporarily unusable (declaration collisions with
# stdlib.h)
d129 1
a129 1
	$(CCCMD) $(LARGE) a2p.c
d135 1
a135 1
	rm -f *.orig core $(addedbyconf) all malloc.c
d137 3
@


1.5
log
@perl5.005_03 (stock)
@
text
@d1 1
a1 1
case $CONFIG in
d88 1
d123 2
d135 1
a135 1
	rm -f a2p *$(OBJ_EXT) $(plexe) $(plc)
@


1.4
log
@perl 5.004_04
@
text
@d39 4
a42 2
mallocsrc = $mallocsrc
mallocobj = $mallocobj
d51 1
a51 2
# These variables will be used in a future version to make
# the make file more portable to non-unix systems.
d53 4
a56 4
EXE_EXT = $exe_ext
LIB_EXT = $lib_ext
OBJ_EXT = $obj_ext
PATH_SEP = $path_sep
d60 4
d70 1
d86 2
d104 4
a107 1
	touch all
d110 1
a110 1
	$(CC) $(LDFLAGS) $(obj) a2p$(OBJ_EXT) $(libs) -o a2p
d119 1
d125 1
a125 1
	-@@touch a2p.c
d132 1
a132 1
	rm -f a2p *$(OBJ_EXT)
d150 1
a150 1
	echo $(c) | tr ' ' '\012' >.clist
d153 1
a153 1
	echo $(h) | tr ' ' '\012' >.hlist
d156 1
a156 1
	echo $(sh) | tr ' ' '\012' >.shlist
d168 2
a169 1
	    -e 's/my_exit/exit/'
@


1.3
log
@back out 1.2
@
text
@d17 8
a24 1
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
d30 1
a30 5
# $RCSfile: Makefile.SH,v $$Revision: 1.1 $$Date: 1996/08/19 10:13:33 $
#
# $Log: Makefile.SH,v $
# Revision 1.1  1996/08/19 10:13:33  downsj
# Initial revision
d32 1
d45 4
d83 1
a83 1
h = EXTERN.h INTERN.h ../config.h handy.h hash.h a2p.h str.h util.h
a90 2
# grrr
SHELL = /bin/sh
d93 1
a93 1
	$(CCCMD) $*.c
d115 2
a116 1
a2p$(OBJ_EXT): a2p.c a2py.c a2p.h EXTERN.h util.h INTERN.h handy.h ../config.h str.h hash.h
d135 1
a135 1
	sh ../makedepend
d154 1
@


1.2
log
@remove *.cat1 on "make realclean"
@
text
@d23 1
a23 1
# $RCSfile: Makefile.SH,v $$Revision: 1.1.1.1 $$Date: 1996/08/19 10:13:33 $
d26 2
a27 4
# Revision 1.1.1.1  1996/08/19 10:13:33  downsj
# Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper,
# config.sh.OpenBSD and "rm *.cat1" for target "realclean" are the only
# local changes.
d116 1
a116 1
	rm -f *.orig core $(addedbyconf) all malloc.c *.cat1
@


1.1
log
@Initial revision
@
text
@d23 7
a29 1
# $RCSfile: Makefile.SH,v $$Revision: 4.1 $$Date: 92/08/07 18:29:07 $
a30 1
# $Log:	Makefile.SH,v $
d118 1
a118 1
	rm -f *.orig core $(addedbyconf) all malloc.c
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d17 1
a17 8
*/Makefile.SH) cd `expr X$0 : 'X\(.*\)/'` ;;
Makefile.SH) ;;
*) case `pwd` in
   */x2p) ;;
   *) if test -d x2p; then cd x2p
      else echo "Can't figure out where to write output."; exit 1
	  fi;;
   esac;;
d32 2
a33 4
# XXX Perl malloc temporarily unusable (declaration collisions with
# stdlib.h)
#mallocsrc = $mallocsrc
#mallocobj = $mallocobj
d38 2
a39 5
$make_set_make
# grrr
SHELL = $sh

# These variables may need to be manually set for non-Unix systems.
d41 4
a44 4
EXE_EXT = $_ext
LIB_EXT = $_a
OBJ_EXT = $_o
PATH_SEP = $p_
a47 4
# how to tr(anslate) newlines

TRNL = '$trnl'

a53 1
REALPERL = ../perl
a68 2
plexe = find2perl.exe s2p.exe
plc   = find2perl.c s2p.c
d72 1
a72 1
h = EXTERN.h INTERN.h ../config.h ../handy.h hash.h a2p.h str.h util.h
d80 2
d84 1
a84 1
	$(CCCMD) -DPERL_FOR_X2P $*.c
d87 1
a87 4
	@@echo " "

compile: all
	$(REALPERL) -I../lib ../utils/perlcc -regex 's/$$/.exe/' $(plextract) -prog -verbose dcf -log ../compilelog;  
d90 1
a90 1
	$(CC) -o a2p $(LDFLAGS) $(obj) a2p$(OBJ_EXT) $(libs)
a98 1
	rm -f a2p.c
d104 1
a104 1
	-@@sh -c true
d106 1
a106 2
a2p$(OBJ_EXT): a2p.c a2py.c a2p.h EXTERN.h util.h INTERN.h \
		../handy.h ../config.h str.h hash.h
d110 1
a110 1
	rm -f a2p *$(OBJ_EXT) $(plexe) $(plc)
d125 1
a125 1
	sh ../makedepend MAKE=$(MAKE)
d128 1
a128 1
	echo $(c) | tr ' ' $(TRNL) >.clist
d131 1
a131 1
	echo $(h) | tr ' ' $(TRNL) >.hlist
d134 1
a134 1
	echo $(sh) | tr ' ' $(TRNL) >.shlist
a143 1
	    -e 's/"EXTERN.h"/"..\/EXTERN.h"/' \
d145 1
a145 2
	    -e 's/my_exit/exit/' \
	    -e 's/MUTEX_[A-Z_]*(&PL_malloc_mutex);//'
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d1 1
a1 1
case $CONFIGDOTSH in
a87 1
plm   = a2p.loadmap
a121 2
FORCE:

d132 1
a132 1
	rm -f a2p *$(OBJ_EXT) $(plexe) $(plc) $(plm)
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d37 4
a40 1
# XXX Perl malloc temporarily unusable (declaration collisions with stdlib.h)
d132 1
a132 1
	$(CCCMD) a2p.c
d138 1
a138 1
	rm -f core $(addedbyconf) all malloc.c
a139 3

veryclean: realclean
	rm -f *~ *.orig
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@d1 1
a1 1
case $PERL_CONFIG_SH in
a60 2
OPTIMIZE = $optimize

d68 1
a68 1
CCCMD = `sh $(shellflags) cflags "optimize='$(OPTIMIZE)'" $@@`
d70 1
a70 1
public = a2p$(EXE_EXT) s2p find2perl
d105 1
a105 1
	$(REALPERL) -I../lib ../utils/perlcc -I .. -L .. $(plextract) -v -log ../compilelog;  
d107 1
a107 1
a2p$(EXE_EXT): $(obj) a2p$(OBJ_EXT)
d114 1
a114 4
check_byacc:
	@@$(BYACC) -V 2>&1 | grep 'version 1\.8\.2'

run_byacc:	FORCE check_byacc
d118 1
a118 8
	sed -e 's/(yyn = yydefred\[yystate\])/((yyn = yydefred[yystate]))/' \
	    -e 's/(yys = getenv("YYDEBUG"))/((yys = getenv("YYDEBUG")))/' \
	    -e 's/^yyerrlab://' \
	    -e 's/^    goto yyerrlab;//' \
	    -e 's/^yynewerror://' \
	    -e 's/^    goto yynewerror;//' \
	    -e 's|^static char yysccsid\(.*\)|/* static char yysccsid\1 */|' \
	    < y.tab.c > a2p.c
d132 1
a132 1
	rm -f a2p$(EXE_EXT) psed *$(OBJ_EXT) $(plexe) $(plc) $(plm)
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d42 1
a42 1
libs = $perllibs
a146 1
	-rmdir .depending
d148 1
a148 1
	rm -f $(FIRSTMAKEFILE) $(FIRSTMAKEFILE).old makefile.old
@


1.1.1.7
log
@Import of stock perl 5.8.5
@
text
@d30 1
a30 5
# $RCSfile: Makefile.SH,v $$Revision: 1.9 $$Date: 2003/12/03 03:02:53 $
#
# $Log: Makefile.SH,v $
# Revision 1.9  2003/12/03 03:02:53  millert
# Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
d32 1
@


1.1.1.8
log
@perl 5.8.6 from CPAN
@
text
@d30 5
a34 1
# $RCSfile: Makefile.SH,v $$Revision: 4.1 $$Date: 92/08/07 18:29:07 $
a35 1
# $Log:	Makefile.SH,v $
@


1.1.1.9
log
@perl 5.8.8 import
@
text
@d114 1
a114 2
#    make run_byacc
# byacc 1.8.2 or 1.9 are recommended.
d116 4
a119 1
run_byacc:	FORCE
a177 4

find2perl: find2perl.PL

s2p: s2p.PL
@


1.1.1.10
log
@import perl 5.10.0 from CPAN
@
text
@d50 1
a50 1
EXE_EXT = $_exe
a64 2
RUN = $run

d106 3
d175 1
a175 1
	$(RUN) ../miniperl -I../lib $@@.PL
@


1.1.1.11
log
@import perl 5.10.1
@
text
@a126 3
	    -e 's/^\(char \*yyname\[\]\)/const \1/' \
	    -e 's/^\(char \*yyrule\[\]\)/const \1/' \
	    -e 's/^\(    register\) \(char \*yys;\)/\1 const \2/' \
@


1.1.1.12
log
@Perl 5.12.2 from CPAN
@
text
@a145 2
distclean: veryclean

@


1.1.1.13
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a28 8

# The .PL extractions use the Cwd extension.  For statically-built
# perls, we need perl, not just miniperl.
case "$usedl" in
    define) perl="../miniperl" ;;
    *)      perl="../perl" ;;
esac

d37 3
a65 1
PERL = $perl
d95 1
a95 1
c = hash.c str.c util.c walk.c
d97 1
a97 1
obj = hash$(OBJ_EXT) str$(OBJ_EXT) util$(OBJ_EXT) walk$(OBJ_EXT)
d150 1
a150 1
	rm -f core $(addedbyconf) all
d164 1
a164 1
depend: ../makedepend
d176 2
d179 3
a181 1
	$(RUN) $(PERL) -I../lib $@@.PL
d183 1
a183 1
find2perl: find2perl.PL ../config.sh
d185 7
a191 1
s2p: s2p.PL ../config.sh
@


1.1.1.14
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a0 2
#!/bin/sh

@


1.1.1.15
log
@Import perl-5.20.1
@
text
@d72 1
a72 1
RUN =
d80 12
a91 1
CCCMD = `sh $(shellflags) ../cflags "optimize='$(OPTIMIZE)'" $@@`
d95 5
d113 1
a113 1
all: a2p$(EXE_EXT) s2p find2perl
d152 1
a152 1
	rm -f a2p$(EXE_EXT) psed *$(OBJ_EXT) $(plexe) $(plc)
d158 1
a158 1
	rm -f core $(plextract) all
d173 1
a173 1
	sh ../makedepend MAKE=$(MAKE) ../cflags
d181 3
d197 6
@


