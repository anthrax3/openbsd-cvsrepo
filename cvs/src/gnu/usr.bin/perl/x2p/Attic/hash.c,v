head	1.12;
access;
symbols
	OPENBSD_6_0:1.11.0.12
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.6
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	PERL_5_20_2:1.1.1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	PERL_5_20_1:1.1.1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	PERL_5_18_2:1.1.1.11
	PERL:1.1.1
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	PERL_5_16_3:1.1.1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	PERL_5_12_2:1.1.1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	PERL_5_10_1:1.1.1.10
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	PERL_5_10_0:1.1.1.9
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	PERL_5_8_8:1.1.1.9
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.8
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.7
	PERL_5_8_3:1.1.1.6
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.12
date	2017.02.05.00.32.22;	author afresh1;	state dead;
branches;
next	1.11;
commitid	cxJ08BvJA9Pt2PTM;

1.11
date	2014.03.24.15.05.34;	author afresh1;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.12.18.30.28;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.29.17.36.24;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.28.19.23.15;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.53;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.36.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.09.16;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.58;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.08.07.06;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.13.36;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.13.36;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.42.25;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.11.10;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.26.22;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.14;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.44.40;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.08.09.17.48.50;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2005.01.15.21.18.32;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2006.03.28.18.50.02;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2009.10.12.18.10.41;	author millert;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.03.24.14.59.13;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@/*    hash.c
 *
 *    Copyright (C) 1991, 1992, 1993, 1994, 1995, 1999, 2000, 2001, 2002,
 *    2005 by Larry Wall and others
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 */

#include <stdio.h>
#include "EXTERN.h"
#include "a2p.h"
#include "util.h"

#ifdef NETWARE
char *savestr(char *str);
#endif

STR *
hfetch(HASH *tb, char *key)
{
    char *s;
    int i;
    int hash;
    HENT *entry;

    if (!tb)
	return NULL;
    for (s=key,		i=0,	hash = 0;
      /* while */ *s;
	 s++,		i++,	hash *= 5) {
	hash += *s * coeff[i];
    }
    entry = tb->tbl_array[hash & tb->tbl_max];
    for (; entry; entry = entry->hent_next) {
	if (entry->hent_hash != hash)		/* strings can't be equal */
	    continue;
	if (strNE(entry->hent_key,key))	/* is this it? */
	    continue;
	return entry->hent_val;
    }
    return NULL;
}

bool
hstore(HASH *tb, char *key, STR *val)
{
    char *s;
    int i;
    int hash;
    HENT *entry;
    HENT **oentry;

    if (!tb)
	return FALSE;
    for (s=key,		i=0,	hash = 0;
      /* while */ *s;
	 s++,		i++,	hash *= 5) {
	hash += *s * coeff[i];
    }

    oentry = &(tb->tbl_array[hash & tb->tbl_max]);
    i = 1;

    for (entry = *oentry; entry; i=0, entry = entry->hent_next) {
	if (entry->hent_hash != hash)		/* strings can't be equal */
	    continue;
	if (strNE(entry->hent_key,key))	/* is this it? */
	    continue;
	/*NOSTRICT*/
	safefree(entry->hent_val);
	entry->hent_val = val;
	return TRUE;
    }
    /*NOSTRICT*/
    entry = (HENT*) safemalloc(sizeof(HENT));

    entry->hent_key = savestr(key);
    entry->hent_val = val;
    entry->hent_hash = hash;
    entry->hent_next = *oentry;
    *oentry = entry;

    if (i) {				/* initial entry? */
	tb->tbl_fill++;
	if ((tb->tbl_fill * 100 / (tb->tbl_max + 1)) > FILLPCT)
	    hsplit(tb);
    }

    return FALSE;
}

void
hsplit(HASH *tb)
{
    const int oldsize = tb->tbl_max + 1;
    int newsize = oldsize * 2;
    int i;
    HENT **a;
    HENT **b;
    HENT *entry;
    HENT **oentry;

    a = (HENT**) saferealloc((char*)tb->tbl_array, newsize * sizeof(HENT*));
    memset(&a[oldsize], 0, oldsize * sizeof(HENT*)); /* zero second half */
    tb->tbl_max = --newsize;
    tb->tbl_array = a;

    for (i=0; i<oldsize; i++,a++) {
	if (!*a)				/* non-existent */
	    continue;
	b = a+oldsize;
	for (oentry = a, entry = *a; entry; entry = *oentry) {
	    if ((entry->hent_hash & newsize) != i) {
		*oentry = entry->hent_next;
		entry->hent_next = *b;
		if (!*b)
		    tb->tbl_fill++;
		*b = entry;
		continue;
	    }
	    else
		oentry = &entry->hent_next;
	}
	if (!*a)				/* everything moved */
	    tb->tbl_fill--;
    }
}

HASH *
hnew(void)
{
    HASH *tb = (HASH*)safemalloc(sizeof(HASH));

    tb->tbl_array = (HENT**) safemalloc(8 * sizeof(HENT*));
    tb->tbl_fill = 0;
    tb->tbl_max = 7;
    hiterinit(tb);	/* so each() will start off right */
    memset(tb->tbl_array, 0, 8 * sizeof(HENT*));
    return tb;
}

int
hiterinit(HASH *tb)
{
    tb->tbl_riter = -1;
    tb->tbl_eiter = (HENT*)NULL;
    return tb->tbl_fill;
}
@


1.11
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@@


1.10
log
@Merge in perl 5.10.1; part two
@
text
@d20 1
a20 1
hfetch(register HASH *tb, char *key)
d22 4
a25 4
    register char *s;
    register int i;
    register int hash;
    register HENT *entry;
d46 1
a46 1
hstore(register HASH *tb, char *key, STR *val)
d48 5
a52 5
    register char *s;
    register int i;
    register int hash;
    register HENT *entry;
    register HENT **oentry;
d97 6
a102 6
    register int newsize = oldsize * 2;
    register int i;
    register HENT **a;
    register HENT **b;
    register HENT *entry;
    register HENT **oentry;
d133 1
a133 1
    register HASH *tb = (HASH*)safemalloc(sizeof(HASH));
d144 1
a144 1
hiterinit(register HASH *tb)
@


1.9
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d28 1
a28 1
	return Nullstr;
d42 1
a42 1
    return Nullstr;
d147 1
a147 1
    tb->tbl_eiter = Null(HENT*);
@


1.8
log
@merge in perl 5.8.8
@
text
@d4 1
a4 1
 *    by Larry Wall and others
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d1 1
a1 1
/* $RCSfile: hash.c,v $$Revision: 4.1 $$Date: 92/08/07 18:29:20 $
a7 2
 *
 * $Log:	hash.c,v $
a92 38
#ifdef NOTUSED
bool
hdelete(register HASH *tb, char *key)
{
    register char *s;
    register int i;
    register int hash;
    register HENT *entry;
    register HENT **oentry;

    if (!tb)
	return FALSE;
    for (s=key,		i=0,	hash = 0;
      /* while */ *s;
	 s++,		i++,	hash *= 5) {
	hash += *s * coeff[i];
    }

    oentry = &(tb->tbl_array[hash & tb->tbl_max]);
    entry = *oentry;
    i = 1;
    for (; entry; i=0, oentry = &entry->hent_next, entry = entry->hent_next) {
	if (entry->hent_hash != hash)		/* strings can't be equal */
	    continue;
	if (strNE(entry->hent_key,key))	/* is this it? */
	    continue;
	safefree((char*)entry->hent_val);
	safefree(entry->hent_key);
	*oentry = entry->hent_next;
	safefree((char*)entry);
	if (i)
	    tb->tbl_fill--;
	return TRUE;
    }
    return FALSE;
}
#endif

d96 1
a96 1
    int oldsize = tb->tbl_max + 1;
a142 10
#ifdef NOTUSED
hshow(register HASH *tb)
{
    fprintf(stderr,"%5d %4d (%2d%%)\n",
	tb->tbl_max+1,
	tb->tbl_fill,
	tb->tbl_fill * 100 / (tb->tbl_max+1));
}
#endif

a148 35
}

HENT *
hiternext(register HASH *tb)
{
    register HENT *entry;

    entry = tb->tbl_eiter;
    do {
	if (entry)
	    entry = entry->hent_next;
	if (!entry) {
	    tb->tbl_riter++;
	    if (tb->tbl_riter > tb->tbl_max) {
		tb->tbl_riter = -1;
		break;
	    }
	    entry = tb->tbl_array[tb->tbl_riter];
	}
    } while (!entry);

    tb->tbl_eiter = entry;
    return entry;
}

char *
hiterkey(register HENT *entry)
{
    return entry->hent_key;
}

STR *
hiterval(register HENT *entry)
{
    return entry->hent_val;
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d3 2
a4 1
 *    Copyright (c) 1991-2002, Larry Wall
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d3 1
a3 1
 *    Copyright (c) 1991-2001, Larry Wall
d16 4
d144 1
a144 1
    bzero((char*)&a[oldsize], oldsize * sizeof(HENT*)); /* zero second half */
d178 1
a178 1
    bzero((char*)tb->tbl_array, 8 * sizeof(HENT*));
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d3 1
a3 1
 *    Copyright (c) 1991-1997, Larry Wall
@


1.3
log
@perl5.005_03 (stock)
@
text
@d92 1
a92 3
hdelete(tb,key)
register HASH *tb;
char *key;
d179 1
a179 2
hshow(tb)
register HASH *tb;
@


1.2
log
@perl 5.004_04
@
text
@d17 1
a17 3
hfetch(tb,key)
register HASH *tb;
char *key;
d43 1
a43 4
hstore(tb,key,val)
register HASH *tb;
char *key;
STR *val;
d68 1
a68 1
	Safefree(entry->hent_val);
d131 1
a131 2
hsplit(tb)
HASH *tb;
d168 1
a168 1
hnew()
d192 1
a192 2
hiterinit(tb)
register HASH *tb;
d200 1
a200 2
hiternext(tb)
register HASH *tb;
d223 1
a223 2
hiterkey(entry)
register HENT *entry;
d229 1
a229 2
hiterval(entry)
register HENT *entry;
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
 *    Copyright (c) 1991, Larry Wall
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d3 1
a3 1
 *    Copyright (c) 1991-1997, Larry Wall
d17 3
a19 1
hfetch(register HASH *tb, char *key)
d45 4
a48 1
hstore(register HASH *tb, char *key, STR *val)
d73 1
a73 1
	safefree(entry->hent_val);
d136 2
a137 1
hsplit(HASH *tb)
d174 1
a174 1
hnew(void)
d198 2
a199 1
hiterinit(register HASH *tb)
d207 2
a208 1
hiternext(register HASH *tb)
d231 2
a232 1
hiterkey(register HENT *entry)
d238 2
a239 1
hiterval(register HENT *entry)
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d92 3
a94 1
hdelete(register HASH *tb, char *key)
d181 2
a182 1
hshow(register HASH *tb)
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d3 1
a3 1
 *    Copyright (c) 1991-2001, Larry Wall
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@d3 1
a3 1
 *    Copyright (c) 1991-2002, Larry Wall
a15 4
#ifdef NETWARE
char *savestr(char *str);
#endif

d140 1
a140 1
    memset(&a[oldsize], 0, oldsize * sizeof(HENT*)); /* zero second half */
d174 1
a174 1
    memset(tb->tbl_array, 0, 8 * sizeof(HENT*));
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d3 1
a3 2
 *    Copyright (C) 1991, 1992, 1993, 1994, 1995, 1999, 2000, 2001, 2002,
 *    by Larry Wall and others
@


1.1.1.7
log
@Import of stock perl 5.8.5
@
text
@d1 1
a1 1
/* $RCSfile: hash.c,v $$Revision: 1.7 $$Date: 2003/12/03 03:02:53 $
d9 1
a9 4
 * $Log: hash.c,v $
 * Revision 1.7  2003/12/03 03:02:53  millert
 * Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
 *
@


1.1.1.8
log
@perl 5.8.6 from CPAN
@
text
@d1 1
a1 1
/* $RCSfile: hash.c,v $$Revision: 4.1 $$Date: 92/08/07 18:29:20 $
d9 4
a12 1
 * $Log:	hash.c,v $
@


1.1.1.9
log
@perl 5.8.8 import
@
text
@d1 1
a1 1
/*    hash.c
d4 1
a4 1
 *    2005 by Larry Wall and others
d8 2
d95 38
d136 1
a136 1
    const int oldsize = tb->tbl_max + 1;
d183 10
d199 35
@


1.1.1.10
log
@import perl 5.10.1
@
text
@d28 1
a28 1
	return NULL;
d42 1
a42 1
    return NULL;
d147 1
a147 1
    tb->tbl_eiter = (HENT*)NULL;
@


1.1.1.11
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d20 1
a20 1
hfetch(HASH *tb, char *key)
d22 4
a25 4
    char *s;
    int i;
    int hash;
    HENT *entry;
d46 1
a46 1
hstore(HASH *tb, char *key, STR *val)
d48 5
a52 5
    char *s;
    int i;
    int hash;
    HENT *entry;
    HENT **oentry;
d97 6
a102 6
    int newsize = oldsize * 2;
    int i;
    HENT **a;
    HENT **b;
    HENT *entry;
    HENT **oentry;
d133 1
a133 1
    HASH *tb = (HASH*)safemalloc(sizeof(HASH));
d144 1
a144 1
hiterinit(HASH *tb)
@


