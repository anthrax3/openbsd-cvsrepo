head	1.2;
access;
symbols
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.2.0.10
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.4
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.31.55;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.06.55;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.06.55;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.11.17.20.52.43;	author afresh1;	state Exp;
branches;
next	1.1.1.3;
commitid	B31cAbBIXiCqnL97;

1.1.1.3
date	2017.08.14.13.45.33;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@use strict;
use warnings;
use Test::More 0.88;

use CPAN::Meta;
use CPAN::Meta::Validator;
use File::Spec;
use IO::Dir;
use Parse::CPAN::Meta 1.4400;

delete $ENV{$_} for qw/PERL_JSON_BACKEND PERL_YAML_BACKEND/; # use defaults

{
  my @@data_dirs = qw( t/data-test t/data-valid );
  my @@files = sort map {
        my $d = $_;
        map { "$d/$_" } grep { substr($_,0,1) ne '.' } IO::Dir->new($d)->read
  } @@data_dirs;

  for my $f ( @@files ) {
    my $meta = Parse::CPAN::Meta->load_file( File::Spec->catfile($f) );
    my $cmv = CPAN::Meta::Validator->new({%$meta});
    ok( $cmv->is_valid, "$f validates" )
      or diag( "ERRORS:\n" . join( "\n", $cmv->errors ) );
  }
}

{
  my @@data_dirs = qw( t/data-fail t/data-fixable );
  my @@files = sort map {
        my $d = $_;
        map { "$d/$_" } grep { substr($_,0,1) ne '.' } IO::Dir->new($d)->read
  } @@data_dirs;

  for my $f ( @@files ) {
    my $meta = Parse::CPAN::Meta->load_file( File::Spec->catfile($f) );
    my $cmv = CPAN::Meta::Validator->new({%$meta});
    ok( ! $cmv->is_valid, "$f shouldn't validate" );
    note 'validation error: ', $_ foreach $cmv->errors;
  }
}

done_testing;
# vim: ts=2 sts=2 sw=2 et :
@


1.1
log
@Initial revision
@
text
@d14 5
a18 2
  my $data_dir = IO::Dir->new( 't/data' );
  my @@files = sort grep { /^\w/ } $data_dir->read;
d21 1
a21 1
    my $meta = Parse::CPAN::Meta->load_file( File::Spec->catfile('t','data',$f) );
d29 5
a33 2
  my $data_dir = IO::Dir->new( 't/data-fail' );
  my @@files = sort grep { /^\w/ } $data_dir->read;
d36 1
a36 1
    my $meta = Parse::CPAN::Meta->load_file( File::Spec->catfile('t','data-fail',$f) );
d38 2
a39 1
    ok( ! $cmv->is_valid, "invalid $f doesn't validate" );
d44 1
a44 1

@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.20.1
@
text
@d14 2
a15 5
  my @@data_dirs = qw( t/data-test t/data-valid );
  my @@files = sort map {
        my $d = $_;
        map { "$d/$_" } grep { substr($_,0,1) ne '.' } IO::Dir->new($d)->read
  } @@data_dirs;
d18 1
a18 1
    my $meta = Parse::CPAN::Meta->load_file( File::Spec->catfile($f) );
d26 2
a27 5
  my @@data_dirs = qw( t/data-fail t/data-fixable );
  my @@files = sort map {
        my $d = $_;
        map { "$d/$_" } grep { substr($_,0,1) ne '.' } IO::Dir->new($d)->read
  } @@data_dirs;
d30 1
a30 1
    my $meta = Parse::CPAN::Meta->load_file( File::Spec->catfile($f) );
d32 1
a32 1
    ok( ! $cmv->is_valid, "$f shouldn't validate" );
@


1.1.1.3
log
@Import perl-5.24.2
@
text
@a38 1
    note 'validation error: ', $_ foreach $cmv->errors;
d43 1
a43 1
# vim: ts=2 sts=2 sw=2 et :
@


