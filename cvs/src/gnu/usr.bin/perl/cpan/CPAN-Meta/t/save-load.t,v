head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.2.0.10
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.4
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.31.55;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.06.55;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.06.55;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.11.17.20.52.43;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@use strict;
use warnings;
use Test::More 0.88;

use CPAN::Meta;
use File::Temp 0.20 ();
use Parse::CPAN::Meta 1.4400;

delete $ENV{$_} for qw/PERL_JSON_BACKEND PERL_YAML_BACKEND/; # use defaults

my $distmeta = {
  name     => 'Module-Build',
  abstract => 'Build and install Perl modules',
  description =>  "Module::Build is a system for building, testing, "
              .   "and installing Perl modules.  It is meant to be an "
              .   "alternative to ExtUtils::MakeMaker... blah blah blah",
  version  => '0.36',
  author   => [
    'Ken Williams <kwilliams@@cpan.org>',
    'Module-Build List <module-build@@perl.org>', # additional contact
  ],
  release_status => 'stable',
  license  => [ 'perl_5' ],
  prereqs => {
    runtime => {
      requires => {
        'perl'   => '5.006',
        'Config' => '0',
        'Cwd'    => '0',
        'Data::Dumper' => '0',
        'ExtUtils::Install' => '0',
        'File::Basename' => '0',
        'File::Compare'  => '0',
        'File::Copy' => '0',
        'File::Find' => '0',
        'File::Path' => '0',
        'File::Spec' => '0',
        'IO::File'   => '0',
      },
      recommends => {
        'Archive::Tar' => '1.00',
        'ExtUtils::Install' => '0.3',
        'ExtUtils::ParseXS' => '2.02',
        'Pod::Text' => '0',
        'YAML' => '0.35',
      },
    },
    build => {
      requires => {
        'Test::More' => '0',
      },
    }
  },
  resources => {
    license => ['http://dev.perl.org/licenses/'],
  },
  optional_features => {
    domination => {
      description => 'Take over the world',
      prereqs     => {
        develop => { requires => { 'Genius::Evil'     => '1.234' } },
        runtime => { requires => { 'Machine::Weather' => '2.0'   } },
      },
    },
  },
  dynamic_config => 1,
  keywords => [ qw/ toolchain cpan dual-life / ],
  'meta-spec' => {
    version => '2',
    url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
  },
  generated_by => 'Module::Build version 0.36',
};

my $meta = CPAN::Meta->new( $distmeta );

my $tmpdir = File::Temp->newdir();
my $metafile = File::Spec->catfile( $tmpdir, 'META.json' );

ok( $meta->save($metafile), "save returns true" );
ok( -f $metafile, "save meta to file" );

ok( my $loaded = Parse::CPAN::Meta->load_file($metafile), 'load saved file' );
is($loaded->{name},     'Module-Build', 'name correct');

like(
  $loaded->{x_serialization_backend},
  qr/\AJSON::PP version [0-9]/,
  "x_serialization_backend",
);

ok(
  ! exists $meta->{x_serialization_backend},
  "we didn't leak x_serialization_backend up into the saved struct",
);

ok( $loaded = Parse::CPAN::Meta->load_file('t/data-test/META-1_4.yml'), 'load META-1.4' );
is($loaded->{name},     'Module-Build', 'name correct');

# Test saving with conversion

my $metayml = File::Spec->catfile( $tmpdir, 'META.yml' );

$meta->save($metayml, {version => "1.4"});
ok( -f $metayml, "save meta to META.yml with conversion" );

ok( $loaded = Parse::CPAN::Meta->load_file($metayml), 'load saved file' );
is( $loaded->{name},     'Module-Build', 'name correct');
is( $loaded->{requires}{perl}, "5.006", 'prereq correct' );

like(
  $loaded->{x_serialization_backend},
  qr/\ACPAN::Meta::YAML version [0-9]/,
  "x_serialization_backend",
);

ok(
  ! exists $meta->{x_serialization_backend},
  "we didn't leak x_serialization_backend up into the saved struct",
);

# file without suffix

ok( $loaded = CPAN::Meta->load_file('t/data-test/META-2.meta'), 'load_file META-2.meta' );

my $string = do { open my $fh, '<', 't/data-test/META-2.meta'; local $/; <$fh> };
ok( $loaded = CPAN::Meta->load_string($string), 'load META-2.meta from string' );

done_testing;
# vim: ts=2 sts=2 sw=2 et :
@


1.1
log
@Initial revision
@
text
@d86 10
d97 1
a97 1
ok( $loaded = Parse::CPAN::Meta->load_file('t/data/META-1_4.yml'), 'load META-1.4' );
d111 18
d130 1
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.20.1
@
text
@d87 1
a87 1
ok( $loaded = Parse::CPAN::Meta->load_file('t/data-test/META-1_4.yml'), 'load META-1.4' );
a99 7

# file without suffix

ok( $loaded = CPAN::Meta->load_file('t/data-test/META-2.meta'), 'load_file META-2.meta' );

my $string = do { open my $fh, '<', 't/data-test/META-2.meta'; local $/; <$fh> };
ok( $loaded = CPAN::Meta->load_string($string), 'load META-2.meta from string' );
@

