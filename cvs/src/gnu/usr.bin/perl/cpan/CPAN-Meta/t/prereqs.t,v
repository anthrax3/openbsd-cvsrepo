head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.3.0.10
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.4
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.6
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.31.55;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.06.55;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.06.55;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.50;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.52.43;	author afresh1;	state Exp;
branches;
next	1.1.1.4;
commitid	B31cAbBIXiCqnL97;

1.1.1.4
date	2017.08.14.13.45.33;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@use strict;
use warnings;
use Test::More 0.88;

use CPAN::Meta::Prereqs;

delete $ENV{$_} for qw/PERL_JSON_BACKEND PERL_YAML_BACKEND/; # use defaults

my $prereq_struct = {
  runtime => {
    requires => {
      'Config' => 0,
      'Cwd'    => 0,
      'Data::Dumper' => 0,
      'ExtUtils::Install' => 0,
      'File::Basename' => 0,
      'File::Compare'  => 0,
      'File::Copy' => 0,
      'File::Find' => 0,
      'File::Path' => 0,
      'File::Spec' => 0,
      'IO::File'   => 0,
      'perl'       => '5.005_03',
    },
    recommends => {
      'Archive::Tar' => '1.00',
      'ExtUtils::Install' => 0.3,
      'ExtUtils::ParseXS' => 2.02,
      'Pod::Text' => 0,
      'YAML' => 0.35,
    },
  },
  build => {
    requires => {
      'Test' => 0,
    },
  }
};

my $prereq = CPAN::Meta::Prereqs->new($prereq_struct);

isa_ok($prereq, 'CPAN::Meta::Prereqs');

is_deeply($prereq->as_string_hash, $prereq_struct, "round-trip okay");

{
  my $req = $prereq->requirements_for(qw(runtime requires));
  my @@req_mod = $req->required_modules;

  ok(
    (grep { 'Cwd' eq $_ } @@req_mod),
    "we got the runtime requirements",
  );

  ok(
    (! grep { 'YAML' eq $_ } @@req_mod),
    "...but not the runtime recommendations",
  );

  ok(
    (! grep { 'Test' eq $_ } @@req_mod),
    "...nor the build requirements",
  );
}

{
  my $req = $prereq->requirements_for(qw(runtime requires));
  my $rec = $prereq->requirements_for(qw(runtime recommends));

  my $merged = $req->clone->add_requirements($rec);

  my @@req_mod = $merged->required_modules;

  ok(
    (grep { 'Cwd' eq $_ } @@req_mod),
    "we got the runtime requirements",
  );

  ok(
    (grep { 'YAML' eq $_ } @@req_mod),
    "...and the runtime recommendations",
  );

  ok(
    (! grep { 'Test' eq $_ } @@req_mod),
    "...but not the build requirements",
  );

}

{
  my $req = $prereq->requirements_for(qw(runtime suggests));
  my @@req_mod = $req->required_modules;

  is(@@req_mod, 0, "empty set of runtime/suggests requirements");
}

{
  my $req = $prereq->requirements_for(qw(develop suggests));
  my @@req_mod = $req->required_modules;

  is(@@req_mod, 0, "empty set of develop/suggests requirements");
}

{
  my $new_prereq = CPAN::Meta::Prereqs->new;

  $new_prereq
    ->requirements_for(qw(runtime requires))
    ->add_minimum(Foo => '1.000');

  $new_prereq
    ->requirements_for(qw(runtime requires))
    ->add_minimum(Bar => '2.976');

  $new_prereq
    ->requirements_for(qw(test requires))
    ->add_minimum(Baz => '3.1416');

  $new_prereq
    ->requirements_for(qw(build recommends))
    ->add_minimum(Bar => '3.000');

  my $expect = {
      runtime => { requires => { Foo => '1.000', Bar => '2.976' } },
      test => { requires => { Baz => '3.1416' } },
      build => { recommends => { Bar => '3.000' } },
  };

  is_deeply(
    $new_prereq->as_string_hash,
    $expect,
    'we can accumulate new requirements on a prereq object',
  );

  my $merged_requires = {
      Foo => '1.000',
      Bar => '2.976',
      Baz => '3.1416',
  };

  my $merged_all = {
      Foo => '1.000',
      Bar => '3.000',
      Baz => '3.1416',
  };

  is_deeply(
    $new_prereq->merged_requirements(
        [qw/runtime test build/], [qw/requires/]
    )->as_string_hash,
    $merged_requires,
    "we can merge requirements for phases/types"
  );

  is_deeply(
    $new_prereq->merged_requirements->as_string_hash,
    $merged_all,
    "default merging is runtime/build/test for requires/recommends"
  );
}

done_testing;
# vim: ts=2 sts=2 sw=2 et :
@


1.1
log
@Initial revision
@
text
@d88 1
d116 14
d132 1
a132 1
    { runtime => { requires => { Foo => '1.000', Bar => '2.976' } } },
d135 26
d164 1
a164 1

@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a87 1

@


1.1.1.3
log
@Import perl-5.20.1
@
text
@a115 14
  $new_prereq
    ->requirements_for(qw(test requires))
    ->add_minimum(Baz => '3.1416');

  $new_prereq
    ->requirements_for(qw(build recommends))
    ->add_minimum(Bar => '3.000');

  my $expect = {
      runtime => { requires => { Foo => '1.000', Bar => '2.976' } },
      test => { requires => { Baz => '3.1416' } },
      build => { recommends => { Bar => '3.000' } },
  };

d118 1
a118 1
    $expect,
a119 26
  );

  my $merged_requires = {
      Foo => '1.000',
      Bar => '2.976',
      Baz => '3.1416',
  };

  my $merged_all = {
      Foo => '1.000',
      Bar => '3.000',
      Baz => '3.1416',
  };

  is_deeply(
    $new_prereq->merged_requirements(
        [qw/runtime test build/], [qw/requires/]
    )->as_string_hash,
    $merged_requires,
    "we can merge requirements for phases/types"
  );

  is_deeply(
    $new_prereq->merged_requirements->as_string_hash,
    $merged_all,
    "default merging is runtime/build/test for requires/recommends"
@


1.1.1.4
log
@Import perl-5.24.2
@
text
@d164 1
a164 1
# vim: ts=2 sts=2 sw=2 et :
@


