head	1.3;
access;
symbols
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.48.56;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.56;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.46.00;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl

# Test that accuracy() and precision() in BigInt/BigFloat do not disturb
# the rounding force in BigRat.

use strict;
use warnings;

use Test::More tests => 17;

use Math::BigInt;
use Math::BigFloat;
use Math::BigRat;

my $proper       = Math::BigRat->new('12345678901234567890/2');
my $proper_inc   = Math::BigRat->new('12345678901234567890/2')->binc();
my $proper_dec   = Math::BigRat->new('12345678901234567890/2')->bdec();
my $proper_int   = Math::BigInt->new('12345678901234567890');
my $proper_float = Math::BigFloat->new('12345678901234567890');
my $proper2      = Math::BigRat->new('12345678901234567890');

print "# Start\n";

Math::BigInt->accuracy(3);
Math::BigFloat->accuracy(5);

my ($x, $y, $z);

##############################################################################
# new()

$z = Math::BigRat->new('12345678901234567890/2');
is($z, $proper);

$z = Math::BigRat->new('1234567890123456789E1');
is($z, $proper2);

$z = Math::BigRat->new('12345678901234567890/1E0');
is($z, $proper2);

$z = Math::BigRat->new('1234567890123456789e1/1');
is($z, $proper2);

$z = Math::BigRat->new('1234567890123456789e1/1E0');
is($z, $proper2);

$z = Math::BigRat->new($proper_int);
is($z, $proper2);

$z = Math::BigRat->new($proper_float);
is($z, $proper2);

##############################################################################
# bdiv

$x = Math::BigRat->new('12345678901234567890');
$y = Math::BigRat->new('2');
$z = $x->copy->bdiv($y);
is($z, $proper);

##############################################################################
# bmul

$x = Math::BigRat->new("$proper");
$y = Math::BigRat->new('1');
$z = $x->copy->bmul($y);
is($z, $proper);

$z = Math::BigRat->new('12345678901234567890/1E0');
is($z, $proper2);

$z = Math::BigRat->new($proper_int);
is($z, $proper2);

$z = Math::BigRat->new($proper_float);
is($z, $proper2);

##############################################################################
# bdiv

$x = Math::BigRat->new('12345678901234567890');
$y = Math::BigRat->new('2');
$z = $x->copy->bdiv($y);
is($z, $proper);

##############################################################################
# bmul

$x = Math::BigRat->new("$proper");
$y = Math::BigRat->new('1');
$z = $x->copy->bmul($y);
is($z, $proper);

$x = Math::BigRat->new("$proper");
$y = Math::BigRat->new('2');
$z = $x->copy->bmul($y);
is($z, $proper2);

##############################################################################
# binc/bdec

$x = $proper->copy()->binc();
is($x, $proper_inc);

$x = $proper->copy()->bdec();
is($x, $proper_dec);
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
a5 1
use Test;
d7 1
d9 1
a9 7
BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';
  plan tests => 17;
  }
d15 4
a18 5
my $r = 'Math::BigRat';
my $proper = $r->new('12345678901234567890/2');
my $proper_inc = $r->new('12345678901234567890/2')->binc();
my $proper_dec = $r->new('12345678901234567890/2')->bdec();
my $proper_int = Math::BigInt->new('12345678901234567890');
d20 1
a20 1
my $proper2 = $r->new('12345678901234567890');
d27 1
a27 1
my ($x,$y,$z);
d32 2
a33 2
$z = $r->new('12345678901234567890/2');
ok ($z,$proper);
d35 2
a36 2
$z = $r->new('1234567890123456789E1');
ok ($z,$proper2);
d38 2
a39 6
$z = $r->new('12345678901234567890/1E0');
ok ($z,$proper2);
$z = $r->new('1234567890123456789e1/1');
ok ($z,$proper2);
$z = $r->new('1234567890123456789e1/1E0');
ok ($z,$proper2);
d41 2
a42 2
$z = $r->new($proper_int);
ok ($z,$proper2);
d44 8
a51 2
$z = $r->new($proper_float);
ok ($z,$proper2);
d56 2
a57 1
$x = $r->new('12345678901234567890'); $y = Math::BigRat->new('2');
d59 1
a59 1
ok ($z,$proper);
d64 2
a65 1
$x = $r->new("$proper"); $y = Math::BigRat->new('1');
d67 4
a70 3
ok ($z,$proper);
$z = $r->new('12345678901234567890/1E0');
ok ($z,$proper2);
d72 2
a73 2
$z = $r->new($proper_int);
ok ($z,$proper2);
d75 2
a76 2
$z = $r->new($proper_float);
ok ($z,$proper2);
d81 2
a82 1
$x = $r->new('12345678901234567890'); $y = Math::BigRat->new('2');
d84 1
a84 1
ok ($z,$proper);
d89 2
a90 1
$x = $r->new("$proper"); $y = Math::BigRat->new('1');
d92 1
a92 1
ok ($z,$proper);
d94 2
a95 1
$x = $r->new("$proper"); $y = Math::BigRat->new('2');
d97 1
a97 1
ok ($z,$proper2);
d102 2
a103 2
$x = $proper->copy()->binc(); ok ($x,$proper_inc);
$x = $proper->copy()->bdec(); ok ($x,$proper_dec);
d105 2
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!/usr/bin/perl
d6 1
a7 1
use warnings;
d9 7
a15 1
use Test::More tests => 17;
d21 5
a25 4
my $proper       = Math::BigRat->new('12345678901234567890/2');
my $proper_inc   = Math::BigRat->new('12345678901234567890/2')->binc();
my $proper_dec   = Math::BigRat->new('12345678901234567890/2')->bdec();
my $proper_int   = Math::BigInt->new('12345678901234567890');
d27 1
a27 1
my $proper2      = Math::BigRat->new('12345678901234567890');
d34 1
a34 1
my ($x, $y, $z);
d39 2
a40 2
$z = Math::BigRat->new('12345678901234567890/2');
is($z, $proper);
d42 2
a43 2
$z = Math::BigRat->new('1234567890123456789E1');
is($z, $proper2);
d45 6
a50 2
$z = Math::BigRat->new('12345678901234567890/1E0');
is($z, $proper2);
d52 2
a53 2
$z = Math::BigRat->new('1234567890123456789e1/1');
is($z, $proper2);
d55 2
a56 8
$z = Math::BigRat->new('1234567890123456789e1/1E0');
is($z, $proper2);

$z = Math::BigRat->new($proper_int);
is($z, $proper2);

$z = Math::BigRat->new($proper_float);
is($z, $proper2);
d61 1
a61 2
$x = Math::BigRat->new('12345678901234567890');
$y = Math::BigRat->new('2');
d63 1
a63 1
is($z, $proper);
d68 1
a68 2
$x = Math::BigRat->new("$proper");
$y = Math::BigRat->new('1');
d70 3
a72 4
is($z, $proper);

$z = Math::BigRat->new('12345678901234567890/1E0');
is($z, $proper2);
d74 2
a75 2
$z = Math::BigRat->new($proper_int);
is($z, $proper2);
d77 2
a78 2
$z = Math::BigRat->new($proper_float);
is($z, $proper2);
d83 1
a83 2
$x = Math::BigRat->new('12345678901234567890');
$y = Math::BigRat->new('2');
d85 1
a85 1
is($z, $proper);
d90 1
a90 2
$x = Math::BigRat->new("$proper");
$y = Math::BigRat->new('1');
d92 1
a92 1
is($z, $proper);
d94 1
a94 2
$x = Math::BigRat->new("$proper");
$y = Math::BigRat->new('2');
d96 1
a96 1
is($z, $proper2);
d101 2
a102 2
$x = $proper->copy()->binc();
is($x, $proper_inc);
a103 2
$x = $proper->copy()->bdec();
is($x, $proper_dec);
@

