head	1.1;
branch	1.1.1;
access;
symbols
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.12
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.11.17.20.52.48;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.52.48;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl

use strict;
use warnings;

use Test::More;

use IO::Socket::IP;

my $server = IO::Socket::IP->new(
   Listen    => 1,
   LocalHost => "127.0.0.1",
   LocalPort => 0,
) or die "Cannot listen on PF_INET - $!";

my $client = IO::Socket::IP->new(
   PeerHost => $server->sockhost,
   PeerPort => $server->sockport,
) or die "Cannot connect on PF_INET - $!";

my $accepted = $server->accept
   or die "Cannot accept - $!";

my $inet_client = $client->as_inet;

isa_ok( $inet_client, "IO::Socket::INET", '->as_inet returns IO::Socket::INET' );

is( $inet_client->fileno, $client->fileno, '->as_inet socket wraps the same fileno' );

undef $client;

$accepted->syswrite( "Message\n" );

$inet_client->sysread( my $buffer, 8192 );
is( $buffer, "Message\n", '->as_inet still passes data' );

done_testing;
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@
