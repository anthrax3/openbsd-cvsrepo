head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.53;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.48.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.59;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

# test the "l", "lib", "try" and "only" options:

use strict;
use warnings;

use Test::More tests => 19;

use bignum;

my @@WARNINGS;
{
    # catch warnings:
    require Carp;
    no warnings 'redefine';
    *Carp::carp = sub { push @@WARNINGS, $_[0]; };
}

my $rc;

$rc = eval { bignum->import( "l" => "foo" ) };
is($@@, '',                     # shouldn't die
   qq|eval { bignum->import( "l" => "foo" ) }|);
is(scalar(@@WARNINGS), 1, 'one warning');
like($WARNINGS[0], qr/fallback to Math::/, 'got fallback');

$rc = eval { bignum->import( "lib" => "foo" ) };
is($@@, '',                     # ditto
   qq|eval { bignum->import( "lib" => "foo" ) }|);
is(scalar @@WARNINGS, 2, 'two warnings');
like($WARNINGS[1], qr/fallback to Math::/, 'got fallback');

$rc = eval { bignum->import( "try" => "foo" ) };
is($@@, '',                     # shouldn't die
   qq|eval { bignum->import( "try" => "foo" ) }|);

$rc = eval { bignum->import( "try" => "foo" ) };
is($@@, '',                     # ditto
   qq|eval { bignum->import( "try" => "foo" ) }|);

$rc = eval { bignum->import( "foo" => "bar" ) };
like($@@, qr/^Unknown option foo/i, 'died'); # should die

$rc = eval { bignum->import( "only" => "bar" ) };
like($@@, qr/fallback disallowed/i, 'died'); # should die

# test that options are only lowercase (don't see a reason why allow UPPER)

foreach (qw/L LIB Lib T Trace TRACE V Version VERSION/) {
    $rc = eval { bignum->import( $_ => "bar" ) };
    like($@@, qr/^Unknown option $_/i, 'died'); # should die
}
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
a4 1
use Test::More;
d6 1
d8 1
a8 7
BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';
  plan tests => 19;
  }
d12 1
a12 1
my @@W;
d14 4
a17 4
# catch warnings:
require Carp;
no warnings 'redefine';
*Carp::carp = sub { push @@W, $_[0]; };
d20 1
a20 14
my $rc = eval ('bignum->import( "l" => "foo" );');
is ($@@,'');						# shouldn't die
is (scalar @@W, 1, 'one warning');
like ($W[0], qr/fallback to Math::/, 'got fallback');

$rc = eval ('bignum->import( "lib" => "foo" );');
is ($@@,'');						# ditto
is (scalar @@W, 2, 'two warnings');
like ($W[1], qr/fallback to Math::/, 'got fallback');

$rc = eval ('bignum->import( "try" => "foo" );');
is ($@@,'');						# shouldn't die
$rc = eval ('bignum->import( "try" => "foo" );');
is ($@@,'');						# ditto
d22 19
a40 2
$rc = eval ('bignum->import( "foo" => "bar" );');
like ($@@, qr/^Unknown option foo/i, 'died');			# should die
d42 5
a46 2
$rc = eval ('bignum->import( "only" => "bar" );');
like ($@@, qr/fallback disallowed/i, 'died');			# should die
d50 4
a53 6
foreach (qw/L LIB Lib T Trace TRACE V Version VERSION/)
  {
  $rc = eval ('bignum->import( "$_" => "bar" );');
  like ($@@, qr/^Unknown option $_/i, 'died');			# should die
  }

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
