head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.53;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.48.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.59;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.32;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

use strict;
use warnings;

use Test::More tests => 4;

my @@CLASSES = qw/Math::BigInt Math::BigFloat/;

use bignum p => '12';

foreach my $class (@@CLASSES) {
    is($class->precision(), 12, "$class precision = 12");
}

bignum->import(p => '42');

foreach my $class (@@CLASSES) {
    is($class->precision(), 42, "$class precision = 42");
}
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
a2 1
use Test::More;
d4 1
d6 1
a6 7
BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';
  plan tests => 4;
  }
d8 1
a8 1
my @@C = qw/Math::BigInt Math::BigFloat/;
d12 9
a20 12
foreach my $c (@@C)
  {
  is ($c->precision(),12, "$c precision = 12");
  }

bignum->import( p => '42' );

foreach my $c (@@C)
  {
  is ($c->precision(),42, "$c precision = 42");
  }

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!perl
d3 1
a4 1
use warnings;
d6 7
a12 1
use Test::More tests => 4;
d14 1
a14 1
my @@CLASSES = qw/Math::BigInt Math::BigFloat/;
d18 12
a29 9
foreach my $class (@@CLASSES) {
    is($class->precision(), 12, "$class precision = 12");
}

bignum->import(p => '42');

foreach my $class (@@CLASSES) {
    is($class->precision(), 42, "$class precision = 42");
}
@

