head	1.3;
access;
symbols
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.52;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.48.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.59;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.32;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

package Math::BigInt::Trace;

require 5.006;
use strict;
use warnings;

use Exporter;
use Math::BigInt;

our ($PACKAGE, @@EXPORT_OK, $accuracy, $precision, $round_mode, $div_scale);

our @@ISA = qw(Exporter Math::BigInt);

our $VERSION = '0.42_01';

use overload;                   # inherit overload from BigInt

# Globals
$accuracy = $precision = undef;
$round_mode = 'even';
$div_scale = 40;

sub new {
    my $proto = shift;
    my $class = ref($proto) || $proto;

    my $value = shift;
    my $a = $accuracy;
    $a = $_[0] if defined $_[0];
    my $p = $precision;
    $p = $_[1] if defined $_[1];
    my $self = Math::BigInt->new($value, $a, $p, $round_mode);
    bless $self, $class;
    print "MBI new '$value' => '$self' (", ref($self), ")";
    return $self;
}

sub import {
    print "MBI import ", join(' ', @@_);
    my $self = shift;
    Math::BigInt::import($self, @@_);            # need it for subclasses
#    $self->export_to_level(1, $self, @@_);       # need this ?
    @@_ = ();
}

1;
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d5 1
a5 1
require 5.005_02;
d7 1
a10 2
use vars qw($VERSION @@ISA $PACKAGE @@EXPORT_OK
            $accuracy $precision $round_mode $div_scale);
d12 1
a12 1
@@ISA = qw(Exporter Math::BigInt);
d14 1
a14 1
$VERSION = 0.01;
d16 3
a18 1
use overload;	# inherit overload from BigInt
d25 13
a37 12
sub new
{
        my $proto  = shift;
        my $class  = ref($proto) || $proto;

        my $value       = shift;
	my $a = $accuracy; $a = $_[0] if defined $_[0];
	my $p = $precision; $p = $_[1] if defined $_[1];
        my $self = Math::BigInt->new($value,$a,$p,$round_mode);
	bless $self,$class;
	print "MBI new '$value' => '$self' (",ref($self),")";
        return $self;
d40 7
a46 8
sub import
  {
  print "MBI import ",join(' ',@@_);
  my $self = shift;
  Math::BigInt::import($self,@@_);		# need it for subclasses
#  $self->export_to_level(1,$self,@@_);		# need this ?
  @@_ = ();
  }
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!perl
d5 1
a5 1
require 5.006;
a6 1
use warnings;
d10 2
d13 1
a13 1
our ($PACKAGE, @@EXPORT_OK, $accuracy, $precision, $round_mode, $div_scale);
d15 1
a15 1
our @@ISA = qw(Exporter Math::BigInt);
d17 1
a17 3
our $VERSION = '0.42_01';

use overload;                   # inherit overload from BigInt
d24 12
a35 13
sub new {
    my $proto = shift;
    my $class = ref($proto) || $proto;

    my $value = shift;
    my $a = $accuracy;
    $a = $_[0] if defined $_[0];
    my $p = $precision;
    $p = $_[1] if defined $_[1];
    my $self = Math::BigInt->new($value, $a, $p, $round_mode);
    bless $self, $class;
    print "MBI new '$value' => '$self' (", ref($self), ")";
    return $self;
d38 8
a45 7
sub import {
    print "MBI import ", join(' ', @@_);
    my $self = shift;
    Math::BigInt::import($self, @@_);            # need it for subclasses
#    $self->export_to_level(1, $self, @@_);       # need this ?
    @@_ = ();
}
@

