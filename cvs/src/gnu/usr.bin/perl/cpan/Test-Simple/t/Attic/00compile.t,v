head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.03.25.20.40.52;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2011.04.18.17.48.24;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@#!/usr/bin/perl -w

BEGIN {
    if( $ENV{PERL_CORE} ) {
        @@INC = ('../lib', 'lib');
    }
    else {
        unshift @@INC, 't/lib';
    }
}
chdir 't';

use Test::More;

my $Has_Test_Pod;
BEGIN {
    $Has_Test_Pod = eval 'use Test::Pod 0.95; 1';
}

chdir "..";
my $manifest = "MANIFEST";
open(my $manifest_fh, "<", $manifest) or die "Can't open $manifest: $!";
my @@modules = map  { m{^lib/(\S+)}; $1 } 
              grep { m{^lib/Test/\S*\.pm} } 
              grep { !m{/t/} } <$manifest_fh>;

chomp @@modules;
close $manifest_fh;

chdir 'lib';
plan tests => scalar @@modules * 2;
foreach my $file (@@modules) {
    # Make sure we look at the local files and do not reload them if
    # they're already loaded.  This avoids recompilation warnings.
    local @@INC = @@INC;
    unshift @@INC, ".";
    ok eval { require($file); 1 } or diag "require $file failed.\n$@@";

    SKIP: {
        skip "Test::Pod not installed", 1 unless $Has_Test_Pod;
        pod_file_ok($file);
    }
}
@


1.1
log
@Update Test::Simple to 0.98

ok millert@@
@
text
@@

