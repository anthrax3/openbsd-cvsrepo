head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.07.45;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.07.45;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@BEGIN {
    if ($ENV{PERL_CORE}) {
	chdir 't' if -d 't';
	@@INC = ("../lib", "lib/compress");
    }
}

use lib qw(t t/compress);
use strict;
use warnings;
use bytes;

use Test::More ;
use CompTestUtils;


BEGIN {
    # use Test::NoWarnings, if available
    my $extra = 0 ;
    $extra = 1
        if eval { require Test::NoWarnings ;  import Test::NoWarnings; 1 };

    plan tests => 355 + $extra ;
}


{
    use Compress::Raw::Zlib ;
        
    my %all;
    for my $symbol (@@Compress::Raw::Zlib::DEFLATE_CONSTANTS)
    {
        eval "defined Compress::Raw::Zlib::$symbol" ;
        $all{$symbol} = ! $@@ ;
    }   
           
    my $pkg = 1;
   
    for my $module ( qw( Adapter::Deflate RawDeflate Deflate Gzip Zip )) 
    {
        ++ $pkg ; 
        eval <<EOM;
            package P$pkg;
            use Test::More ;
            use CompTestUtils;
        
            use IO::Compress::$module () ;
        
            ::title "IO::Compress::$module - no import" ;       
EOM
        is $@@, "", "create package P$pkg";
        for my $symbol (@@Compress::Raw::Zlib::DEFLATE_CONSTANTS)
        {
            if ( $all{$symbol})
            {
                eval "package P$pkg; defined IO::Compress::${module}::$symbol ;";            
                is $@@, "", "  has $symbol";
            }
            else
            {
                ok 1, "  $symbol not available";
            }
        }        
    }    
    
    for my $module ( qw( Adapter::Deflate RawDeflate Deflate Gzip Zip )) 
    {
        for my $label (keys %Compress::Raw::Zlib::DEFLATE_CONSTANTS)
        {
            ++ $pkg ; 

            eval <<EOM;
                package P$pkg;
                use Test::More ;
                use CompTestUtils;
            
                use IO::Compress::$module qw(:$label) ;
            
                ::title "IO::Compress::$module - import :$label" ; 
          
EOM
            is $@@, "", "create package P$pkg";
            
            for my $symbol (@@{ $Compress::Raw::Zlib::DEFLATE_CONSTANTS{$label} } )
            {
                if ( $all{$symbol})
                {
                    eval "package P$pkg; defined $symbol ;";            
                    is $@@, "", "  has $symbol";
                }
                else
                {
                    ok 1, "  $symbol not available";
                }                               
            }   
        }     
    }       
    
}

@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
