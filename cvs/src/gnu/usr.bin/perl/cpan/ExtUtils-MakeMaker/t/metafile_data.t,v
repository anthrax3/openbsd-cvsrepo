head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.4.0.8
	OPENBSD_6_1_BASE:1.1.1.4
	OPENBSD_6_0:1.1.1.4.0.10
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.4
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.6
	OPENBSD_5_8_BASE:1.1.1.4
	PERL_5_20_2:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.2
	OPENBSD_5_7_BASE:1.1.1.4
	PERL_5_20_1:1.1.1.4
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.48.58;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.58;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.07.42;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.58.52;	author afresh1;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.11.17.20.52.47;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@BEGIN {
    unshift @@INC, 't/lib';
}

use strict;
use Test::More tests => 7;

use Data::Dumper;

require ExtUtils::MM_Any;

my $new_mm = sub {
    return bless { ARGS => {@@_}, @@_ }, 'ExtUtils::MM_Any';
};

{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
    );

    is_deeply [$mm->metafile_data], [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => [],
        license         => 'unknown',
        distribution_type       => 'module',

        configure_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },
        build_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    ];


    is_deeply [$mm->metafile_data({}, { no_index => { directory => [qw(foo)] } })], [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => [],
        license         => 'unknown',
        distribution_type       => 'module',

        configure_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },
        build_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },

        no_index        => {
            directory           => [qw(t inc foo)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    ], 'rt.cpan.org 39348';
}


{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        AUTHOR          => 'Some Guy',
        PREREQ_PM       => {
            Foo                 => 2.34,
            Bar                 => 4.56,
        },
    );

    is_deeply [$mm->metafile_data(
        {
            configure_requires => {
                Stuff   => 2.34
            },
            wobble      => 42
        },
        {
            no_index    => {
                package => "Thing"
            },
            wibble      => 23
        },
    )],
    [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => ['Some Guy'],
        license         => 'unknown',
        distribution_type       => 'script',

        configure_requires      => {
            Stuff       => 2.34,
        },
        build_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },

        requires       => {
            Foo                 => 2.34,
            Bar                 => 4.56,
        },

        no_index        => {
            directory           => [qw(t inc)],
            package             => 'Thing',
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },

        wibble  => 23,
        wobble  => 42,
    ];
}


# Test MIN_PERL_VERSION
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
        MIN_PERL_VERSION => 5.006,
    );

    is_deeply [$mm->metafile_data], [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => [],
        license         => 'unknown',
        distribution_type       => 'module',

        configure_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },
        build_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },

        requires        => {
            perl        => '5.006',
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    ];
}


# Test MIN_PERL_VERSION
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
        MIN_PERL_VERSION => 5.006,
        PREREQ_PM => {
            'Foo::Bar'  => 1.23,
        },
    );

    is_deeply [$mm->metafile_data], [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => [],
        license         => 'unknown',
        distribution_type       => 'module',

        configure_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },
        build_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },

        requires        => {
            perl        => '5.006',
            'Foo::Bar'  => 1.23,
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    ];
}

# Test CONFIGURE_REQUIRES
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        CONFIGURE_REQUIRES => {
            "Fake::Module1" => 1.01,
        },
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
    );

    is_deeply [$mm->metafile_data], [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => [],
        license         => 'unknown',
        distribution_type       => 'module',

        configure_requires      => {
            'Fake::Module1'       => 1.01,
        },
        build_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    ],'CONFIGURE_REQUIRES';
}

# Test BUILD_REQUIRES
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        BUILD_REQUIRES => {
            "Fake::Module1" => 1.01,
        },
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
    );

    is_deeply [$mm->metafile_data], [
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => undef,
        author          => [],
        license         => 'unknown',
        distribution_type       => 'module',

        configure_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },
        build_requires      => {
            'Fake::Module1'       => 1.01,
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    ],'CONFIGURE_REQUIRES';
}
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d6 1
a6 1
use Test::More tests => 19;
a8 3
use File::Temp;
use Cwd;
use Parse::CPAN::Meta;
a11 36
sub in_dir(&;$) {
    my $code = shift;
    my $dir = shift || File::Temp->newdir;

    # chdir to the new directory
    my $orig_dir = cwd();
    chdir $dir or die "Can't chdir to $dir: $!";

    # Run the code, but trap the error so we can chdir back
    my $return;
    my $ok = eval { $return = $code->(); 1; };
    my $err = $@@;

    # chdir back
    chdir $orig_dir or die "Can't chdir to $orig_dir: $!";

    # rethrow if necessary
    die $err unless $ok;

    return $return;
}

sub mymeta_ok {
    my($have, $want, $name) = @@_;

    local $Test::Builder::Level = $Test::Builder::Level + 1;

    my $have_gen = delete $have->{generated_by};
    my $want_gen = delete $want->{generated_by};

    is_deeply $have, $want, $name;
    like $have_gen, qr{CPAN::Meta}, "CPAN::Meta mentioned in the generated_by";

    return;
}

d25 1
a25 1
    is_deeply {$mm->metafile_data}, {
d28 1
a28 1
        abstract        => 'unknown',
a30 1
        dynamic_config  => 1,
d49 1
a49 1
    };
d52 1
a52 1
    is_deeply {$mm->metafile_data({}, { no_index => { directory => [qw(foo)] } })}, {
d55 1
a55 1
        abstract        => 'unknown',
a57 1
        dynamic_config  => 1,
d76 1
a76 1
    }, 'rt.cpan.org 39348';
d84 1
a84 1
        AUTHOR          => ['Some Guy'],
d91 1
a91 1
    is_deeply {$mm->metafile_data(
d104 2
a105 2
    )},
    {
d108 1
a108 1
        abstract        => 'unknown',
a110 1
        dynamic_config  => 1,
d138 1
a138 1
    };
d153 1
a153 1
    is_deeply {$mm->metafile_data}, {
d156 1
a156 1
        abstract        => 'unknown',
a158 1
        dynamic_config  => 1,
d181 1
a181 1
    };
d199 1
a199 1
    is_deeply {$mm->metafile_data}, {
d202 1
a202 1
        abstract        => 'unknown',
a204 1
        dynamic_config  => 1,
d228 1
a228 1
    };
d244 1
a244 1
    is_deeply {$mm->metafile_data}, {
d247 1
a247 1
        abstract        => 'unknown',
a249 1
        dynamic_config  => 1,
d268 1
a268 1
    },'CONFIGURE_REQUIRES';
d284 1
a284 1
    is_deeply {$mm->metafile_data}, {
d287 1
a287 1
        abstract        => 'unknown',
a289 1
        dynamic_config  => 1,
d308 1
a308 145
    },'CONFIGURE_REQUIRES';
}

# Test _REQUIRES key priority over META_ADD

{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        BUILD_REQUIRES => {
            "Fake::Module1" => 1.01,
        },
        META_ADD => (my $meta_add = { build_requires => {} }),
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
    );

    is_deeply {$mm->metafile_data($meta_add)}, {
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => 'unknown',
        author          => [],
        license         => 'unknown',
        dynamic_config  => 1,
        distribution_type       => 'module',

        configure_requires      => {
            'ExtUtils::MakeMaker'       => 0,
        },
        build_requires      => { },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    },'META.yml data (META_ADD wins)';


    # Yes, this is all hard coded.
    require CPAN::Meta;
    my $want_mymeta = {
        name            => 'ExtUtils-MakeMaker',
        version         => '6.57_07',
        abstract        => 'Create a module Makefile',
        author          => ['Michael G Schwern <schwern@@pobox.com>'],
        license         => 'perl',
        dynamic_config  => 0,

        requires        => {
            "DirHandle"         => 0,
            "File::Basename"    => 0,
            "File::Spec"        => "0.8",
            "Pod::Man"          => 0,
            "perl"              => "5.006"
        },

        configure_requires      => {
        },
        build_requires      => {
            'Fake::Module1'       => 1.01,
        },

        resources => {
            license     =>      'http://dev.perl.org/licenses/',
            homepage    =>      'http://makemaker.org',
            bugtracker  =>      'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
            repository  =>      'http://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker',
            x_MailingList =>      'makemaker@@perl.org',
        },

        no_index        => {
            directory           => [qw(t inc)],
            package             => ["DynaLoader", "in"],
        },

        generated_by => "ExtUtils::MakeMaker version 6.5707, CPAN::Meta::Converter version 2.110580",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html', 
            version     => 1.4
        },
    };

    mymeta_ok $mm->mymeta("t/META_for_testing.json"),
              $want_mymeta,
              'MYMETA JSON data (BUILD_REQUIRES wins)';

    mymeta_ok $mm->mymeta("t/META_for_testing.yml"),
              $want_mymeta,
              'MYMETA YAML data (BUILD_REQUIRES wins)';
}


note "CPAN::Meta bug using the module version instead of the meta spec version"; {
    my $mm = $new_mm->(
        NAME      => 'GD::Barcode::Code93',
        AUTHOR    => 'Chris DiMartino',
        ABSTRACT  => 'Code 93 implementation of GD::Barcode family',
        PREREQ_PM => {
            'GD::Barcode' => 0,
            'GD'          => 0
        },
        VERSION   => '1.4',
    );

    my $meta = $mm->mymeta("t/META_for_testing_tricky_version.yml");
    is $meta->{'meta-spec'}{version}, 1.4;

    in_dir {
        $mm->write_mymeta($meta);
        ok -e "MYMETA.yml";
        ok -e "MYMETA.json";

        my $meta_yml = Parse::CPAN::Meta->load_file("MYMETA.yml");
        is $meta_yml->{'meta-spec'}{version}, 1.4, "MYMETA.yml correctly downgraded to 1.4";

        my $meta_json = Parse::CPAN::Meta->load_file("MYMETA.json");
        cmp_ok $meta_json->{'meta-spec'}{version}, ">=", 2, "MYMETA.json at 2 or better";
    };

}


note "A bad license string"; {
    my $mm = $new_mm->(
        DISTNAME  => 'Foo::Bar',
        VERSION   => '1.4',
        LICENSE   => 'death and retribution',
    );

    in_dir {
        my $meta = $mm->mymeta;
        $mm->write_mymeta($meta);

        my $meta_yml = Parse::CPAN::Meta->load_file("MYMETA.yml");
        is $meta_yml->{license}, "unknown", "in yaml";

        my $meta_json = Parse::CPAN::Meta->load_file("MYMETA.json");
        is_deeply $meta_json->{license}, ["unknown"], "in json";
    };
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d6 1
a6 1
use Test::More tests => 22;
d405 1
a405 1
        license         => ['perl_5'],
d408 12
a419 19
        prereqs         => {
            runtime => {
                requires => {
                    "DirHandle"         => 0,
                    "File::Basename"    => 0,
                    "File::Spec"        => "0.8",
                    "Pod::Man"          => 0,
                    "perl"              => "5.006",
                },
            },
            configure => {
                requires => {
                },
            },
            build    => {
                requires => {
                    'Fake::Module1'       => 1.01,
                },
            },
a421 1
        release_status => 'testing',
d423 5
a427 5
            license     =>  [ 'http://dev.perl.org/licenses/' ],
            homepage    =>  'http://makemaker.org',
            bugtracker  =>  { web => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker' },
            repository  =>  { url => 'http://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker' },
            x_MailingList => 'makemaker@@perl.org',
d437 2
a438 2
            url         => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
            version     => 2,
a450 22
{
    my $mm = $new_mm->(
        DISTNAME       => 'Foo-Bar',
        VERSION        => 1.23,
        BUILD_REQUIRES => { "Fake::Module1" => 1.01 },
        TEST_REQUIRES  => { "Fake::Module2" => 1.23 },
    );

    my $meta = $mm->mymeta('t/META_for_testing.json');
    is($meta->{build_requires}, undef, "no build_requires in v2 META");
    is_deeply(
        $meta->{prereqs}{build}{requires},
        { "Fake::Module1" => 1.01 },
        "build requires are one thing in META v2...",
    );

    is_deeply(
        $meta->{prereqs}{test}{requires},
        { "Fake::Module2" => 1.23 },
        "...and test requires are another",
    );
}
d465 1
a465 1
    is $meta->{'meta-spec'}{version}, 2, "internally, our MYMETA struct is v2";
d478 1
@


1.1.1.4
log
@Import perl-5.20.1
@
text
@d6 1
a6 1
use Test::More tests => 31;
a43 2
    my $have_url = delete $have->{'meta-spec'}->{url};
    my $want_url = delete $want->{'meta-spec'}->{url};
a46 1
    like $have_url, qr{CPAN::Meta::Spec}, "CPAN::Meta::Spec mentioned in meta-spec URL";
d86 1
a86 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d114 1
a114 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d174 1
a174 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d184 1
a184 1
# Test MIN_PERL_VERSION meta-spec 1.4
d221 1
a221 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d224 1
a224 1
    }, 'MIN_PERL_VERSION meta-spec 1.4';
a226 26
# Test MIN_PERL_VERSION meta-spec 2.0
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
        MIN_PERL_VERSION => 5.006,
    );

    is_deeply {
        $mm->metafile_data(
                {}, {
                'meta-spec' => {
                url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
                version => 2
                } } )
    }, {
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => 'unknown',
        author          => [],
        license         => 'unknown',
        dynamic_config  => 1,
        distribution_type       => 'module',
d228 1
a228 32
        prereqs => {
            configure       => {
                requires    => {
                    'ExtUtils::MakeMaker'   => 0,
                },
            },
            build           => {
                requires    => {
                    'ExtUtils::MakeMaker'   => 0,
                },
            },
            runtime         => {
                requires    => {
                    'perl'  => '5.006',
                },
            },
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {

            url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
            version => 2
        },
    }, 'MIN_PERL_VERSION meta-spec 2.0';
}

# Test MIN_PERL_VERSION meta-spec 1.4
d269 1
a269 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d272 1
a272 1
    }, 'MIN_PERL_VERSION and PREREQ_PM meta-spec 1.4';
d275 1
a275 1
# Test CONFIGURE_REQUIRES meta-spec 1.4
d298 1
a298 1
            'Fake::Module1'     => 1.01,
d301 1
a301 1
            'ExtUtils::MakeMaker'   => 0,
d310 1
a310 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d313 1
a313 55
    },'CONFIGURE_REQUIRES meta-spec 1.4';
}

# Test CONFIGURE_REQUIRES meta-spec 2.0
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        CONFIGURE_REQUIRES => {
            "Fake::Module1" => 1.01,
        },
        PM              => {
            "Foo::Bar"      => 'lib/Foo/Bar.pm',
        },
    );

    is_deeply {
        $mm->metafile_data(
                {}, {
                'meta-spec' => {
                url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
                version => 2
                } } )
    }, {
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => 'unknown',
        author          => [],
        license         => 'unknown',
        dynamic_config  => 1,
        distribution_type       => 'module',

        prereqs => {
            configure       => {
                requires    => {
                    'Fake::Module1'         => 1.01,
                },
            },
            build           => {
                requires    => {
                    'ExtUtils::MakeMaker'   => 0,
                },
            },
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
            version     => 2
        },
    },'CONFIGURE_REQUIRES meta-spec 2.0';
d316 1
a316 2

# Test BUILD_REQUIRES meta-spec 1.4
a338 96
            'ExtUtils::MakeMaker'   => 0,
        },
        build_requires      => {
            'Fake::Module1'         => 1.01,
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
            version     => 1.4
        },
    },'BUILD_REQUIRES meta-spec 1.4';
}

# Test BUILD_REQUIRES meta-spec 2.0
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        BUILD_REQUIRES => {
            "Fake::Module1" => 1.01,
        },
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
        META_MERGE => { "meta-spec" => { version => 2 }},
    );

    is_deeply {
        $mm->metafile_data(
                {}, {
                'meta-spec' => {
                url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
                version => 2
                } } )
    }, {
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => 'unknown',
        author          => [],
        license         => 'unknown',
        dynamic_config  => 1,
        distribution_type       => 'module',

        prereqs => {
            configure       => {
                requires    => {
                    'ExtUtils::MakeMaker'   => 0,
                },
            },
            build           => {
                requires    => {
                    'Fake::Module1'         => 1.01,
                },
            },
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
            version     => 2
        },
    },'BUILD_REQUIRES meta-spec 2.0';
}

# Test TEST_REQUIRES meta-spec 1.4
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        TEST_REQUIRES => {
            "Fake::Module1"     => 1.01,
        },
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
    );

    is_deeply {$mm->metafile_data}, {
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => 'unknown',
        author          => [],
        license         => 'unknown',
        dynamic_config  => 1,
        distribution_type       => 'module',

        configure_requires      => {
d342 1
a342 2
            'ExtUtils::MakeMaker'       => 0,
            'Fake::Module1'             => 1.01,
d351 1
a351 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d354 1
a354 61
    },'TEST_REQUIRES meta-spec 1.4';
}

# Test TEST_REQUIRES meta-spec 2.0
{
    my $mm = $new_mm->(
        DISTNAME        => 'Foo-Bar',
        VERSION         => 1.23,
        TEST_REQUIRES => {
            "Fake::Module1"     => 1.01,
        },
        PM              => {
            "Foo::Bar"          => 'lib/Foo/Bar.pm',
        },
        META_MERGE => { "meta-spec" => { version => 2 }},
    );

    is_deeply {
        $mm->metafile_data(
                {}, {
                'meta-spec' => {
                url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
                version => 2
                } } )
    }, {
        name            => 'Foo-Bar',
        version         => 1.23,
        abstract        => 'unknown',
        author          => [],
        license         => 'unknown',
        dynamic_config  => 1,
        distribution_type       => 'module',

        prereqs => {
            configure       => {
                requires    => {
                    'ExtUtils::MakeMaker'   => 0,
                },
            },
            build           => {
                requires    => {
                    'ExtUtils::MakeMaker'   => 0,
                },
            },
            test            => {
                requires    => {
                    "Fake::Module1"         => 1.01,
                },
            },
        },

        no_index        => {
            directory           => [qw(t inc)],
        },

        generated_by => "ExtUtils::MakeMaker version $ExtUtils::MakeMaker::VERSION",
        'meta-spec'  => {
            url         => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
            version     => 2
        },
    },'TEST_REQUIRES meta-spec 2.0';
a356 1

d366 1
a366 1
        META_ADD => (my $meta_add = { build_requires => {}, configure_requires => {} }),
d381 4
a384 2
        configure_requires      => { },
        build_requires          => { },
d392 1
a392 1
            url         => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
d408 1
a408 1
        prereqs => {
a419 1
                    'ExtUtils::MakeMaker'   => 0,
d461 4
a464 5
        DISTNAME            => 'Foo-Bar',
        VERSION             => 1.23,
        CONFIGURE_REQUIRES  => { "Fake::Module0" => 0.99 },
        BUILD_REQUIRES      => { "Fake::Module1" => 1.01 },
        TEST_REQUIRES       => { "Fake::Module2" => 1.23 },
a467 1
    is($meta->{configure_requires}, undef, "no configure_requires in v2 META");
a468 6
    is_deeply(
        $meta->{prereqs}{configure}{requires},
        { "Fake::Module0" => 0.99 },
        "configure requires are one thing in META v2...",
    );

@


