head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2014.11.17.20.56.59;	author afresh1;	state dead;
branches;
next	1.1;
commitid	QP75iYx42Uo7mMxO;

1.1
date	2013.03.25.20.07.38;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.07.38;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@If you wish to package MakeMaker in a binary package, here's some tips.

tl;dr version:

1a) Set the BUILDING_AS_PACKAGE environment variable to a true value.
OR
1b) Set the $BUILDING_AS_PACKAGE variable in the Makefile.PL to true.
2)  Package normally, but watch out for dependency loops.

MakeMaker cannot have any dependencies, everything depends on it and
that would be a dependency loop.  It instead bundles pre-built copies
of all its non-core dependencies in the bundled/ directory.  It adds
them to itself if they're not already installed.

This can confuse packagers, it makes it look like MakeMaker contains a
lot more modules than it really does and causes conflicts.

You can tell MakeMaker not to use it's bundles and instead declare the
dependencies normally.  This is done either by setting the
BUILDING_AS_PACKAGE environment variable to true or by patching the
Makefile.PL and setting $BUILDING_AS_PACKAGE to true.  On the down
side, there will be dependency loops which your packaging system will
have to resolve.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
