head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.2.0.12
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.6
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.8
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.49;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2017.08.14.13.45.32;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl -w
use strict;
use Test::More;

BEGIN { plan skip_all => "Perl 5.10 only tests" if $] < 5.010; }

# These are tests that depend upon 5.10 (eg, smart-match).
# Basic tests should go in basic_exceptions.t

use 5.010;
use constant NO_SUCH_FILE => 'this_file_had_better_not_exist_xyzzy';
no if $] >= 5.017011, warnings => "experimental::smartmatch";

plan 'no_plan';

eval {
	use autodie ':io';
	open(my $fh, '<', NO_SUCH_FILE);
};

ok($@@,			"Exception thrown"		        );
ok($@@ ~~ 'open',	"Exception from open"		        );
ok($@@ ~~ ':file',	"Exception from open / class :file"	);
ok($@@ ~~ ':io',		"Exception from open / class :io"	);
ok($@@ ~~ ':all',	"Exception from open / class :all"	);

eval {
    no warnings 'once';    # To prevent the following close from complaining.
	close(THIS_FILEHANDLE_AINT_OPEN);
};

ok(! $@@, "Close without autodie should fail silent");

eval {
	use autodie ':io';
	close(THIS_FILEHANDLE_AINT_OPEN);
};

like($@@, qr{Can't close filehandle 'THIS_FILEHANDLE_AINT_OPEN'},"Nice msg from close");

ok($@@,			"Exception thrown"		        );
ok($@@ ~~ 'close',	"Exception from close"		        );
ok($@@ ~~ ':file',	"Exception from close / class :file"	);
ok($@@ ~~ ':io',		"Exception from close / class :io"	);
ok($@@ ~~ ':all',	"Exception from close / class :all"	);

ok $@@ eq $@@.'',                 "string overloading is complete (eq)";
ok( ($@@ cmp $@@.'') == 0,        "string overloading is complete (cmp)" );
@


1.1
log
@Initial revision
@
text
@d12 1
d47 2
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a11 1
no if $] >= 5.017011, warnings => "experimental::smartmatch";
@


1.1.1.3
log
@Import perl-5.24.2
@
text
@a46 2
ok $@@ eq $@@.'',                 "string overloading is complete (eq)";
ok( ($@@ cmp $@@.'') == 0,        "string overloading is complete (cmp)" );
@


