head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.8
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.11.17.20.52.41;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.52.41;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w
use strict;
use Test::More;
use autodie;

use constant SYSINIT => 1;

if (not CORE::kill(0,$$)) {
    plan skip_all => "Can't send signals to own process on this system.";
}

if (CORE::kill(0, SYSINIT)) {
    plan skip_all => "Can unexpectedly signal process 1. Won't run as root.";
}

plan tests => 4;

eval { kill(0, $$); };
is($@@, '', "Signalling self is fine");

eval { kill(0, SYSINIT ) };
isa_ok($@@, 'autodie::exception', "Signalling init is not allowed.");

eval { kill(0, $$, SYSINIT) };
isa_ok($@@, 'autodie::exception', 'kill exception on single failure.');
is($@@->return, 1, "kill fails correctly on a 'true' failure.");
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@
