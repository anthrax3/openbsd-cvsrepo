head	1.2;
access;
symbols
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.32;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl -w
use strict;
use Test::More tests => 9;

use constant ERROR_REGEXP => qr{Can't dbmopen\(%hash, 'foo/bar/baz', 0666\):};
use constant SINGLE_DIGIT_ERROR_REGEXP => qr{Can't dbmopen\(%hash, 'foo/bar/baz', 0010\):};

my $return = "default";

eval {
    $return = dbmopen(my %foo, "foo/bar/baz", 0666);
};

ok(!$return, "Sanity: dbmopen usually returns false on failure");
ok(!$@@,      "Sanity: dbmopen doesn't usually throw exceptions");

eval {
    use autodie;

    dbmopen(my %foo, "foo/bar/baz", 0666);
};

ok($@@, "autodie allows dbmopen to throw errors.");
isa_ok($@@, "autodie::exception", "... errors are of the correct type");

like($@@, ERROR_REGEXP, "Message should include number in octal, not decimal");

eval {
    use autodie;

    dbmopen(my %foo, "foo/bar/baz", 8);
};

ok($@@, "autodie allows dbmopen to throw errors.");
isa_ok($@@, "autodie::exception", "... errors are of the correct type");

like($@@, SINGLE_DIGIT_ERROR_REGEXP, "Message should include number in octal, not decimal");

eval {
    use autodie;

    my %bar = ( foo => 1, bar => 2 );

    dbmopen(%bar, "foo/bar/baz", 0666);
};

like($@@, ERROR_REGEXP, "Correct formatting even with non-empty dbmopen hash");

@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
use Test::More qw(no_plan);
d6 1
d27 11
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d3 1
a3 1
use Test::More tests => 9;
a5 1
use constant SINGLE_DIGIT_ERROR_REGEXP => qr{Can't dbmopen\(%hash, 'foo/bar/baz', 0010\):};
a25 11

eval {
    use autodie;

    dbmopen(my %foo, "foo/bar/baz", 8);
};

ok($@@, "autodie allows dbmopen to throw errors.");
isa_ok($@@, "autodie::exception", "... errors are of the correct type");

like($@@, SINGLE_DIGIT_ERROR_REGEXP, "Message should include number in octal, not decimal");
@

