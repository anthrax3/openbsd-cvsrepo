head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.11.17.20.52.41;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.52.41;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w
use strict;
use Test::More tests => 4;
use constant NO_SUCH_FILE => "this_file_had_better_not_exist";
use FindBin qw($Bin);
use File::Spec;
use constant TOUCH_ME     => File::Spec->catfile($Bin, 'touch_me');
use autodie;

eval { utime(undef, undef, NO_SUCH_FILE); };
isa_ok($@@, 'autodie::exception', 'exception thrown for utime');

my($atime, $mtime) = (stat TOUCH_ME)[8, 9];

eval { utime(undef, undef, TOUCH_ME); };
ok(! $@@, "We can utime a file just fine.") or diag $@@;

eval { utime(undef, undef, NO_SUCH_FILE, TOUCH_ME); };
isa_ok($@@, 'autodie::exception', 'utime exception on single failure.');
is($@@->return, 1, "utime fails correctly on a 'true' failure.");

# Reset timestamps so that Git doesn't think the file has changed when
# running the test in the core perl distribution.
utime($atime, $mtime, TOUCH_ME);
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@
