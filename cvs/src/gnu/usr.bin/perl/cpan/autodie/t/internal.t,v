head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl
use strict;

use Scalar::Util qw(blessed);

use constant NO_SUCH_FILE => "this_file_or_dir_had_better_not_exist_XYZZY";

use Test::More tests => 7;

use Fatal();

# Silence the warnings from using Fatal qw(:lexical)

# Lexical tests using the internal interface.

my @@warnings;
eval {
    # Filter out deprecation warning (no warnings qw(deprecated) does
    # not seem to work for some reason)
    local $SIG{'__WARN__'} = sub {
        push(@@warnings, @@_) unless $_[0] =~ m/Fatal qw\(:lexical/;
    };
    Fatal->import(qw(:lexical :void))
};
like($@@, qr{:void cannot be used with lexical}, ":void can't be used with :lexical");
warn($_) while shift @@warnings;

eval { Fatal->import(qw(open close :lexical)) };
like($@@, qr{:lexical must be used as first}, ":lexical must come first");

{
	BEGIN {
	    # Filter out deprecation warning (no warnings qw(deprecated) does
	    # not seem to work for some reason)
	    local $SIG{'__WARN__'} = sub {
	        push(@@warnings, @@_) unless $_[0] =~ m/Fatal qw\(:lexical/;
	    };
	    import Fatal qw(:lexical chdir);
	};
	warn($_) while shift @@warnings;
	eval { chdir(NO_SUCH_FILE); };
	my $err = $@@;
	like ($err, qr/^Can't chdir/, "Lexical fatal chdir");
	{
		no Fatal qw(:lexical chdir);
		eval { chdir(NO_SUCH_FILE); };
		is ($@@, "", "No lexical fatal chdir");
        }

	eval { chdir(NO_SUCH_FILE); };
	$err = $@@;
	like ($err, qr/^Can't chdir/, "Lexical fatal chdir returns");
}

eval { chdir(NO_SUCH_FILE); };
is($@@, "", "Lexical chdir becomes non-fatal out of scope.");

eval { Fatal->import('2+2'); };
like($@@,qr{Bad subroutine name},"Can't use fatal with invalid sub names");
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d4 2
d8 5
a12 1
use Test::More tests => 6;
d16 9
a24 1
eval { Fatal->import(qw(:lexical :void)) };
d26 1
d32 9
a40 2
	use Fatal qw(:lexical chdir);

d42 7
a48 3
	like ($@@, qr/^Can't chdir/, "Lexical fatal chdir");

	no Fatal qw(:lexical chdir);
d51 2
a52 2
	is ($@@, "", "No lexical fatal chdir");

@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
