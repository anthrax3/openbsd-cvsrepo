head	1.2;
access;
symbols
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.06;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.05;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.32;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@package pujHa'ghach::Dotlh;

# Translator notes: Dotlh = status

# Ideally this should be le'wI' - Thing that is exceptional. ;)
# Unfortunately that results in a file called .pm, which may cause
# problems on some filesystems.

use strict;
use warnings;

use parent qw(autodie::exception);

sub stringify {
    my ($this) = @@_;

    my $error = $this->SUPER::stringify;

    return "QaghHommeyHeylIjmo':\n" .   # Due to your apparent minor errors
           "$error\n" .
           "lujqu'";                    # Epic fail


}

1;

__END__

# The following was a really neat idea, but currently autodie
# always pushes values in $! to format them, which loses the
# Klingon translation.

use Errno qw(:POSIX);
use Scalar::Util qw(dualvar);

my %translation_for = (
    EPERM()  => q{Dachaw'be'},        # You do not have permission
    ENOENT() => q{De' vItu'laHbe'},   # I cannot find this information.
);

sub errno {
    my ($this) = @@_;

    my $errno = int $this->SUPER::errno;

    warn "In tlhIngan errno - $errno\n";

    if ( my $tlhIngan = $translation_for{ $errno } ) {
        return dualvar( $errno, $tlhIngan );
    }

    return $!;

}

1;


@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
use base qw(autodie::exception);
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d12 1
a12 1
use parent qw(autodie::exception);
@

