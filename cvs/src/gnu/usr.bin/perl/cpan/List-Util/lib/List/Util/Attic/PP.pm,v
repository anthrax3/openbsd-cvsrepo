head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2013.03.25.20.40.50;	author sthen;	state dead;
branches;
next	1.2;

1.2
date	2011.04.18.08.27.57;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.03;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.03;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@# List::Util::PP.pm
#
# Copyright (c) 1997-2009 Graham Barr <gbarr@@pobox.com>. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.

package List::Util::PP;

use strict;
use warnings;
use vars qw(@@ISA @@EXPORT $VERSION $a $b);
require Exporter;

@@ISA     = qw(Exporter);
@@EXPORT  = qw(first min max minstr maxstr reduce sum shuffle);
$VERSION = "1.23";
$VERSION = eval $VERSION;

sub reduce (&@@) {
  my $code = shift;
  require Scalar::Util;
  my $type = Scalar::Util::reftype($code);
  unless($type and $type eq 'CODE') {
    require Carp;
    Carp::croak("Not a subroutine reference");
  }
  no strict 'refs';

  return shift unless @@_ > 1;

  use vars qw($a $b);

  my $caller = caller;
  local(*{$caller."::a"}) = \my $a;
  local(*{$caller."::b"}) = \my $b;

  $a = shift;
  foreach (@@_) {
    $b = $_;
    $a = &{$code}();
  }

  $a;
}

sub first (&@@) {
  my $code = shift;
  require Scalar::Util;
  my $type = Scalar::Util::reftype($code);
  unless($type and $type eq 'CODE') {
    require Carp;
    Carp::croak("Not a subroutine reference");
  }

  foreach (@@_) {
    return $_ if &{$code}();
  }

  undef;
}


sub sum (@@) { reduce { $a + $b } @@_ }

sub min (@@) { reduce { $a < $b ? $a : $b } @@_ }

sub max (@@) { reduce { $a > $b ? $a : $b } @@_ }

sub minstr (@@) { reduce { $a lt $b ? $a : $b } @@_ }

sub maxstr (@@) { reduce { $a gt $b ? $a : $b } @@_ }

sub shuffle (@@) {
  my @@a=\(@@_);
  my $n;
  my $i=@@_;
  map {
    $n = rand($i--);
    (${$a[$n]}, $a[$n] = $a[$i])[0];
  } @@_;
}

1;
@


1.2
log
@- update List::Util to 1.23, as needed by newer p5-POE

tested in bulk build.
ok millert@@
@
text
@@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
$VERSION = "1.22";
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
