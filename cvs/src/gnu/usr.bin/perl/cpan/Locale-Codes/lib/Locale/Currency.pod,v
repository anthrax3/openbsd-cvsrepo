head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.4.0.10
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.4
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.6
	OPENBSD_5_8_BASE:1.1.1.4
	PERL_5_20_2:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.2
	OPENBSD_5_7_BASE:1.1.1.4
	PERL_5_20_1:1.1.1.4
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.00;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.49.03;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.03;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.07.47;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.58.53;	author afresh1;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.11.17.20.52.48;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@=pod

=head1 NAME

Locale::Currency - standard codes for currency identification

=head1 SYNOPSIS

    use Locale::Currency;

    $curr = code2currency('usd');     # $curr gets 'US Dollar'
    $code = currency2code('Euro');    # $code gets 'eur'

    @@codes   = all_currency_codes();
    @@names   = all_currency_names();

=head1 DESCRIPTION

This module provides access to standard codes used for identifying
currencies and funds, such as those defined in ISO 4217.

Most of the routines take an optional additional argument which
specifies the code set to use. If not specified, the default ISO
4217 three-letter codes will be used.

=head1 SUPPORTED CODE SETS

There are several different code sets you can use for identifying
currencies. A code set may be specified using either a name, or a
constant that is automatically exported by this module.

For example, the two are equivalent:

   $curr = code2currency('usd','alpha');
   $curr = code2currency('usd',LOCALE_CURR_ALPHA);

The codesets currently supported are:

=over 4

=item B<alpha, LOCALE_CURR_ALPHA>

This is a set of three-letter (uppercase) codes from ISO 4217 such
as EUR for Euro.

Two of the codes specified by the standard (XTS which is reserved
for testing purposes and XXX which is for transactions where no
currency is involved) are omitted.

This is the default code set.

=item B<num, LOCALE_CURR_NUMERIC>

This is the set of three-digit numeric codes from ISO 4217.

=back

=head1 ROUTINES

=over 4

=item B<code2currency(CODE [,CODESET] [,'retired'])>

=item B<currency2code(NAME [,CODESET] [,'retired'])>

=item B<currency_code2code(CODE ,CODESET ,CODESET2)>

=item B<all_currency_codes([CODESET] [,'retired'])>

=item B<all_currency_names([CODESET] [,'retired'])>

=item B<Locale::Currency::rename_currency(CODE ,NEW_NAME [,CODESET])>

=item B<Locale::Currency::add_currency(CODE ,NAME [,CODESET])>

=item B<Locale::Currency::delete_currency(CODE [,CODESET])>

=item B<Locale::Currency::add_currency_alias(NAME ,NEW_NAME)>

=item B<Locale::Currency::delete_currency_alias(NAME)>

=item B<Locale::Currency::rename_currency_code(CODE ,NEW_CODE [,CODESET])>

=item B<Locale::Currency::add_currency_code_alias(CODE ,NEW_CODE [,CODESET])>

=item B<Locale::Currency::delete_currency_code_alias( ODE [,CODESET])>

These routines are all documented in the L<Locale::Codes::API> man page.

=back

=head1 SEE ALSO

=over 4

=item L<Locale::Codes>

The Locale-Codes distribution.

=item L<Locale::Codes::API>

The list of functions supported by this module.

=item L<http://www.iso.org/iso/support/currency_codes_list-1.htm>

The ISO 4217 data.

=back

=head1 AUTHOR

See Locale::Codes for full author history.

Currently maintained by Sullivan Beck (sbeck@@cpan.org).

=head1 COPYRIGHT

   Copyright (c) 1997-2001 Canon Research Centre Europe (CRE).
   Copyright (c) 2001      Michael Hennecke
   Copyright (c) 2001-2010 Neil Bowers
   Copyright (c) 2010-2015 Sullivan Beck

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut
@


1.1
log
@Initial revision
@
text
@d1 1
d5 1
a5 1
Locale::Currency - ISO three letter codes for currency identification (ISO 4217)
a16 1

d19 2
a20 9
The C<Locale::Currency> module provides access to the ISO three-letter
codes for identifying currencies and funds, as defined in ISO 4217.
You can either access the codes via the L<conversion routines>
(described below),
or with the two functions which return lists of all currency codes or
all currency names.

There are two special codes defined by the standard which aren't
understood by this module:
d22 3
a24 1
=over 4
d26 1
a26 1
=item XTS
d28 3
a30 1
Specifically reserved for testing purposes.
d32 1
a32 1
=item XXX
d34 2
a35 3
For transactions where no currency is involved.

=back
d37 1
a37 4

=head1 CONVERSION ROUTINES

There are two conversion routines: C<code2currency()> and C<currency2code()>.
d41 1
a41 1
=item code2currency()
d43 2
a44 4
This function takes a three letter currency code and returns a string
which contains the name of the currency identified. If the code is
not a valid currency code, as defined by ISO 4217, then C<undef>
will be returned.
d46 3
a48 1
    $curr = code2currency($code);
d50 1
a50 1
=item currency2code()
d52 1
a52 4
This function takes a currency name and returns the corresponding
three letter currency code, if such exists.
If the argument could not be identified as a currency name,
then C<undef> will be returned.
d54 1
a54 4
    $code = currency2code('French Franc');

The case of the currency name is not important.
See the section L<KNOWN BUGS AND LIMITATIONS> below.
d58 1
d60 1
a60 1
=head1 QUERY ROUTINES
d62 1
a62 2
There are two function which can be used to obtain a list of all
currency codes, or all currency names:
d64 1
a64 1
=over 4
d66 1
a66 1
=item C<all_currency_codes()>
d68 1
a68 3
Returns a list of all three-letter currency codes.
The codes are guaranteed to be all lower-case,
and not in any particular order.
d70 1
a70 1
=item C<all_currency_names()>
d72 1
a72 3
Returns a list of all currency names for which there is a corresponding
three-letter currency code. The names are capitalised, and not returned
in any particular order.
d74 1
a74 1
=back
d76 1
d78 1
a78 1
=head1 EXAMPLES
d80 1
a80 17
The following example illustrates use of the C<code2currency()> function.
The user is prompted for a currency code, and then told the corresponding
currency name:

    $| = 1;    # turn off buffering

    print "Enter currency code: ";
    chop($code = <STDIN>);
    $curr = code2currency($code);
    if (defined $curr)
    {
        print "$code = $curr\n";
    }
    else
    {
        print "'$code' is not a valid currency code!\n";
    }
d82 1
a82 1
=head1 KNOWN BUGS AND LIMITATIONS
d84 1
a84 1
=over 4
d86 1
a86 1
=item *
d88 1
a88 28
In the current implementation, all data is read in when the
module is loaded, and then held in memory.
A lazy implementation would be more memory friendly.

=item *

This module also includes the special codes which are
not for a currency, such as Gold, Platinum, etc.
This might cause a problem if you're using this module
to display a list of currencies.
Let Neil know if this does cause a problem, and we can
do something about it.

=item *

ISO 4217 also defines a numeric code for each currency.
Currency codes are not currently supported by this module,
in the same way Locale::Country supports multiple codesets.

=item *

There are three cases where there is more than one
code for the same currency name.
Kwacha has two codes: mwk for Malawi, and zmk for Zambia.
The Russian Ruble has two codes: rub and rur.
The Belarussian Ruble has two codes: byr and byb.
The currency2code() function only returns one code, so
you might not get back the code you expected.
d96 1
a96 3
=item Locale::Country

ISO codes for identification of country (ISO 3166).
d98 1
a98 1
=item Locale::Script
d100 1
a100 1
ISO codes for identification of written scripts (ISO 15924).
d102 1
a102 1
=item ISO 4217:1995
d104 1
a104 1
Code for the representation of currencies and funds.
d106 1
a106 4
=item http://www.bsi-global.com/iso4217currency

Official web page for the ISO 4217 maintenance agency.
This has the latest list of codes, in MS Word format. Boo.
d112 3
a114 3
Michael Hennecke E<lt>hennecke@@rz.uni-karlsruhe.deE<gt>
and
Neil Bowers E<lt>neil@@bowers.comE<gt>
d118 4
a121 4
Copyright (C) 2002-2004, Neil Bowers.

Copyright (c) 2001 Michael Hennecke and
Canon Research Centre Europe (CRE).
a126 1

@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a0 1
=pod
d4 1
a4 1
Locale::Currency - standard codes for currency identification
d19 6
a24 2
The C<Locale::Currency> module provides access to standard codes used
for identifying currencies and funds, such as those defined in ISO 4217.
d26 2
a27 3
Most of the routines take an optional additional argument which
specifies the code set to use. If not specified, the default ISO
4217 three-letter codes will be used.
d29 7
a35 1
=head1 SUPPORTED CODE SETS
d37 3
a39 3
There are several different code sets you can use for identifying
currencies. A code set may be specified using either a name, or a
constant that is automatically exported by this module.
a40 1
For example, the two are equivalent:
d42 1
a42 2
   $curr = code2currency('usd','alpha');
   $curr = code2currency('usd',LOCALE_CURR_ALPHA);
d44 1
a44 1
The codesets currently supported are:
d48 1
a48 1
=item B<alpha, LOCALE_CURR_ALPHA>
d50 4
a53 2
This is a set of three-letter (uppercase) codes from ISO 4217 such
as EUR for Euro.
d55 1
a55 3
Two of the codes specified by the standard (XTS which is reserved
for testing purposes and XXX which is for transactions where no
currency is involved) are omitted.
d57 1
a57 1
This is the default code set.
d59 4
a62 1
=item B<num, LOCALE_CURR_NUMERIC>
d64 4
a67 1
This is the set of three-digit numeric codes from ISO 4217.
a70 1
=head1 ROUTINES
d72 1
a72 1
=over 4
d74 2
a75 1
=item B<code2currency ( CODE [,CODESET] )>
d77 1
a77 1
=item B<currency2code ( NAME [,CODESET] )>
d79 1
a79 1
=item B<currency_code2code ( CODE ,CODESET ,CODESET2 )>
d81 3
a83 1
=item B<all_currency_codes ( [CODESET] )>
d85 1
a85 1
=item B<all_currency_names ( [CODESET] )>
d87 3
a89 1
=item B<Locale::Currency::rename_currency  ( CODE ,NEW_NAME [,CODESET] )>
d91 1
a91 1
=item B<Locale::Currency::add_currency  ( CODE ,NAME [,CODESET] )>
a92 1
=item B<Locale::Currency::delete_currency  ( CODE [,CODESET] )>
d94 1
a94 1
=item B<Locale::Currency::add_currency_alias  ( NAME ,NEW_NAME )>
d96 17
a112 1
=item B<Locale::Currency::delete_currency_alias  ( NAME )>
d114 1
a114 1
=item B<Locale::Currency::rename_currency_code  ( CODE ,NEW_CODE [,CODESET] )>
d116 1
a116 1
=item B<Locale::Currency::add_currency_code_alias  ( CODE ,NEW_CODE [,CODESET] )>
d118 1
a118 1
=item B<Locale::Currency::delete_currency_code_alias  ( CODE [,CODESET] )>
d120 28
a147 1
These routines are all documented in the Locale::Codes::API man page.
d155 3
a157 1
=item B<Locale::Codes>
d159 1
a159 1
The Locale-Codes distribution.
d161 1
a161 1
=item B<Locale::Codes::API>
d163 1
a163 1
The list of functions supported by this module.
d165 1
a165 1
=item B<http://www.iso.org/iso/support/currency_codes_list-1.htm>
d167 4
a170 1
The ISO 4217 data.
d176 3
a178 1
See Locale::Codes for full author history.
d180 1
a180 1
Currently maintained by Sullivan Beck (sbeck@@cpan.org).
d182 1
a182 1
=head1 COPYRIGHT
d184 2
a185 4
   Copyright (c) 1997-2001 Canon Research Centre Europe (CRE).
   Copyright (c) 2001      Michael Hennecke
   Copyright (c) 2001-2010 Neil Bowers
   Copyright (c) 2010-2012 Sullivan Beck
d191 1
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d122 1
a122 1
   Copyright (c) 2010-2013 Sullivan Beck
@


1.1.1.4
log
@Import perl-5.20.1
@
text
@d122 1
a122 1
   Copyright (c) 2010-2014 Sullivan Beck
@


