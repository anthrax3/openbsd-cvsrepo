head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.3.0.10
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.4
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.6
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.00;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.07.50;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.07.50;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.54;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.52.56;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@package #
Locale::Codes::Script_Codes;

# This file was automatically generated.  Any changes to this file will
# be lost the next time 'harvest_data' is run.
#    Generated on: Tue Dec  1 14:44:11 EST 2015

use strict;
require 5.006;
use warnings;
use utf8;

our($VERSION);
$VERSION='3.37';

$Locale::Codes::Data{'script'}{'id'} = '0175';

$Locale::Codes::Data{'script'}{'id2names'} = {
   q(0001) => [
      q(Adlam),
      ],
   q(0002) => [
      q(Afaka),
      ],
   q(0003) => [
      q(Caucasian Albanian),
      ],
   q(0004) => [
      q(Ahom, Tai Ahom),
      q(Ahom),
      q(Tai Ahom),
      ],
   q(0005) => [
      q(Arabic),
      ],
   q(0006) => [
      q(Arabic (Nastaliq variant)),
      ],
   q(0007) => [
      q(Imperial Aramaic),
      ],
   q(0008) => [
      q(Armenian),
      ],
   q(0009) => [
      q(Avestan),
      ],
   q(0010) => [
      q(Balinese),
      ],
   q(0011) => [
      q(Bamum),
      ],
   q(0012) => [
      q(Bassa Vah),
      ],
   q(0013) => [
      q(Batak),
      ],
   q(0014) => [
      q(Bengali),
      ],
   q(0015) => [
      q(Bhaiksuki),
      ],
   q(0016) => [
      q(Blissymbols),
      ],
   q(0017) => [
      q(Bopomofo),
      ],
   q(0018) => [
      q(Brahmi),
      ],
   q(0019) => [
      q(Braille),
      ],
   q(0020) => [
      q(Buginese),
      ],
   q(0021) => [
      q(Buhid),
      ],
   q(0022) => [
      q(Chakma),
      ],
   q(0023) => [
      q(Unified Canadian Aboriginal Syllabics),
      ],
   q(0024) => [
      q(Carian),
      ],
   q(0025) => [
      q(Cham),
      ],
   q(0026) => [
      q(Cherokee),
      ],
   q(0027) => [
      q(Cirth),
      ],
   q(0028) => [
      q(Coptic),
      ],
   q(0029) => [
      q(Cypriot),
      ],
   q(0030) => [
      q(Cyrillic),
      ],
   q(0031) => [
      q(Cyrillic (Old Church Slavonic variant)),
      ],
   q(0032) => [
      q(Devanagari (Nagari)),
      q(Devanagari),
      q(Nagari),
      ],
   q(0033) => [
      q(Deseret (Mormon)),
      q(Deseret),
      q(Mormon),
      ],
   q(0034) => [
      q(Duployan shorthand, Duployan stenography),
      q(Duployan shorthand),
      q(Duployan stenography),
      ],
   q(0035) => [
      q(Egyptian demotic),
      ],
   q(0036) => [
      q(Egyptian hieratic),
      ],
   q(0037) => [
      q(Egyptian hieroglyphs),
      ],
   q(0038) => [
      q(Elbasan),
      ],
   q(0039) => [
      q(Ethiopic (Geez)),
      q(Ethiopic),
      q(Ge'ez),
      ],
   q(0040) => [
      q(Khutsuri (Asomtavruli and Nuskhuri)),
      ],
   q(0041) => [
      q(Georgian (Mkhedruli)),
      ],
   q(0042) => [
      q(Glagolitic),
      ],
   q(0043) => [
      q(Gothic),
      ],
   q(0044) => [
      q(Grantha),
      ],
   q(0045) => [
      q(Greek),
      ],
   q(0046) => [
      q(Gujarati),
      ],
   q(0047) => [
      q(Gurmukhi),
      ],
   q(0048) => [
      q(Hangul (Hangul, Hangeul)),
      q(Hangul),
      q(Hangeul),
      ],
   q(0049) => [
      q(Han (Hanzi, Kanji, Hanja)),
      q(Han),
      q(Hanzi),
      q(Kanji),
      q(Hanja),
      ],
   q(0050) => [
      q(Hanunoo (Hanunoo)),
      q(Hanunoo),
      ],
   q(0051) => [
      q(Han (Simplified variant)),
      ],
   q(0052) => [
      q(Han (Traditional variant)),
      ],
   q(0053) => [
      q(Hatran),
      ],
   q(0054) => [
      q(Hebrew),
      ],
   q(0055) => [
      q(Hiragana),
      ],
   q(0056) => [
      q(Anatolian Hieroglyphs (Luwian Hieroglyphs, Hittite Hieroglyphs)),
      q(Anatolian Hieroglyphs),
      q(Luwian Hieroglyphs),
      q(Hittite Hieroglyphs),
      ],
   q(0057) => [
      q(Pahawh Hmong),
      ],
   q(0058) => [
      q(Japanese syllabaries (alias for Hiragana + Katakana)),
      ],
   q(0059) => [
      q(Old Hungarian (Hungarian Runic)),
      q(Old Hungarian),
      q(Hungarian Runic),
      ],
   q(0060) => [
      q(Indus (Harappan)),
      q(Indus),
      q(Harappan),
      ],
   q(0061) => [
      q(Old Italic (Etruscan, Oscan, etc.)),
      ],
   q(0062) => [
      q(Javanese),
      ],
   q(0063) => [
      q(Japanese (alias for Han + Hiragana + Katakana)),
      ],
   q(0064) => [
      q(Jurchen),
      ],
   q(0065) => [
      q(Kayah Li),
      ],
   q(0066) => [
      q(Katakana),
      ],
   q(0067) => [
      q(Kharoshthi),
      ],
   q(0068) => [
      q(Khmer),
      ],
   q(0069) => [
      q(Khojki),
      ],
   q(0070) => [
      q(Khitan large script),
      ],
   q(0071) => [
      q(Khitan small script),
      ],
   q(0072) => [
      q(Kannada),
      ],
   q(0073) => [
      q(Korean (alias for Hangul + Han)),
      ],
   q(0074) => [
      q(Kpelle),
      ],
   q(0075) => [
      q(Kaithi),
      ],
   q(0076) => [
      q(Tai Tham (Lanna)),
      q(Tai Tham),
      q(Lanna),
      ],
   q(0077) => [
      q(Lao),
      ],
   q(0078) => [
      q(Latin (Fraktur variant)),
      ],
   q(0079) => [
      q(Latin (Gaelic variant)),
      ],
   q(0080) => [
      q(Latin),
      ],
   q(0081) => [
      q(Leke),
      ],
   q(0082) => [
      q(Lepcha (Rong)),
      q(Lepcha),
      q(Rong),
      ],
   q(0083) => [
      q(Limbu),
      ],
   q(0084) => [
      q(Linear A),
      ],
   q(0085) => [
      q(Linear B),
      ],
   q(0086) => [
      q(Lisu (Fraser)),
      q(Lisu),
      q(Fraser),
      ],
   q(0087) => [
      q(Loma),
      ],
   q(0088) => [
      q(Lycian),
      ],
   q(0089) => [
      q(Lydian),
      ],
   q(0090) => [
      q(Mahajani),
      ],
   q(0091) => [
      q(Mandaic, Mandaean),
      q(Mandaic),
      q(Mandaean),
      ],
   q(0092) => [
      q(Manichaean),
      ],
   q(0093) => [
      q(Marchen),
      ],
   q(0094) => [
      q(Mayan hieroglyphs),
      ],
   q(0095) => [
      q(Mende Kikakui),
      ],
   q(0096) => [
      q(Meroitic Cursive),
      ],
   q(0097) => [
      q(Meroitic Hieroglyphs),
      ],
   q(0098) => [
      q(Malayalam),
      ],
   q(0099) => [
      q(Modi, Modi),
      q(Modi),
      ],
   q(0100) => [
      q(Mongolian),
      ],
   q(0101) => [
      q(Moon (Moon code, Moon script, Moon type)),
      q(Moon),
      q(Moon code),
      q(Moon script),
      q(Moon type),
      ],
   q(0102) => [
      q(Mro, Mru),
      q(Mro),
      q(Mru),
      ],
   q(0103) => [
      q(Meitei Mayek (Meithei, Meetei)),
      q(Meitei Mayek),
      q(Meithei),
      q(Meetei),
      ],
   q(0104) => [
      q(Multani),
      ],
   q(0105) => [
      q(Myanmar (Burmese)),
      q(Myanmar),
      q(Burmese),
      ],
   q(0106) => [
      q(Old North Arabian (Ancient North Arabian)),
      q(Old North Arabian),
      q(Ancient North Arabian),
      ],
   q(0107) => [
      q(Nabataean),
      ],
   q(0108) => [
      q(Nakhi Geba ('Na-'Khi Ggo-baw, Naxi Geba)),
      q(Nakhi Geba),
      q('Na-'Khi Ggo-baw),
      q(Naxi Geba),
      ],
   q(0109) => [
      q(N'Ko),
      ],
   q(0110) => [
      q(Nushu),
      ],
   q(0111) => [
      q(Ogham),
      ],
   q(0112) => [
      q(Ol Chiki (Ol Cemet, Ol, Santali)),
      q(Ol Chiki),
      q(Ol Cemet'),
      q(Ol),
      q(Santali),
      ],
   q(0113) => [
      q(Old Turkic, Orkhon Runic),
      q(Old Turkic),
      q(Orkhon Runic),
      ],
   q(0114) => [
      q(Oriya),
      ],
   q(0115) => [
      q(Osage),
      ],
   q(0116) => [
      q(Osmanya),
      ],
   q(0117) => [
      q(Palmyrene),
      ],
   q(0118) => [
      q(Pau Cin Hau),
      ],
   q(0119) => [
      q(Old Permic),
      ],
   q(0120) => [
      q(Phags-pa),
      ],
   q(0121) => [
      q(Inscriptional Pahlavi),
      ],
   q(0122) => [
      q(Psalter Pahlavi),
      ],
   q(0123) => [
      q(Book Pahlavi),
      ],
   q(0124) => [
      q(Phoenician),
      ],
   q(0125) => [
      q(Miao (Pollard)),
      q(Miao),
      q(Pollard),
      ],
   q(0126) => [
      q(Inscriptional Parthian),
      ],
   q(0127) => [
      q(Reserved for private use (start)),
      ],
   q(0128) => [
      q(Reserved for private use (end)),
      ],
   q(0129) => [
      q(Rejang (Redjang, Kaganga)),
      q(Rejang),
      q(Redjang),
      q(Kaganga),
      ],
   q(0130) => [
      q(Rongorongo),
      ],
   q(0131) => [
      q(Runic),
      ],
   q(0132) => [
      q(Samaritan),
      ],
   q(0133) => [
      q(Sarati),
      ],
   q(0134) => [
      q(Old South Arabian),
      ],
   q(0135) => [
      q(Saurashtra),
      ],
   q(0136) => [
      q(SignWriting),
      ],
   q(0137) => [
      q(Shavian (Shaw)),
      q(Shavian),
      q(Shaw),
      ],
   q(0138) => [
      q(Sharada, Sarada),
      q(Sharada),
      q(Sarada),
      ],
   q(0139) => [
      q(Siddham, Siddham, Siddhamatrka),
      q(Siddham),
      q(Siddhamatrka),
      ],
   q(0140) => [
      q(Khudawadi, Sindhi),
      q(Khudawadi),
      q(Sindhi),
      ],
   q(0141) => [
      q(Sinhala),
      ],
   q(0142) => [
      q(Sora Sompeng),
      ],
   q(0143) => [
      q(Sundanese),
      ],
   q(0144) => [
      q(Syloti Nagri),
      ],
   q(0145) => [
      q(Syriac),
      ],
   q(0146) => [
      q(Syriac (Estrangelo variant)),
      ],
   q(0147) => [
      q(Syriac (Western variant)),
      ],
   q(0148) => [
      q(Syriac (Eastern variant)),
      ],
   q(0149) => [
      q(Tagbanwa),
      ],
   q(0150) => [
      q(Takri, Takri, Tankri),
      q(Takri),
      q(Tankri),
      ],
   q(0151) => [
      q(Tai Le),
      ],
   q(0152) => [
      q(New Tai Lue),
      ],
   q(0153) => [
      q(Tamil),
      ],
   q(0154) => [
      q(Tangut),
      ],
   q(0155) => [
      q(Tai Viet),
      ],
   q(0156) => [
      q(Telugu),
      ],
   q(0157) => [
      q(Tengwar),
      ],
   q(0158) => [
      q(Tifinagh (Berber)),
      q(Tifinagh),
      q(Berber),
      ],
   q(0159) => [
      q(Tagalog (Baybayin, Alibata)),
      q(Tagalog),
      q(Baybayin),
      q(Alibata),
      ],
   q(0160) => [
      q(Thaana),
      ],
   q(0161) => [
      q(Thai),
      ],
   q(0162) => [
      q(Tibetan),
      ],
   q(0163) => [
      q(Tirhuta),
      ],
   q(0164) => [
      q(Ugaritic),
      ],
   q(0165) => [
      q(Vai),
      ],
   q(0166) => [
      q(Visible Speech),
      ],
   q(0167) => [
      q(Warang Citi (Varang Kshiti)),
      q(Warang Citi),
      q(Varang Kshiti),
      ],
   q(0168) => [
      q(Woleai),
      ],
   q(0169) => [
      q(Old Persian),
      ],
   q(0170) => [
      q(Cuneiform, Sumero-Akkadian),
      q(Sumero-Akkadian cuneiform),
      ],
   q(0171) => [
      q(Yi),
      ],
   q(0172) => [
      q(Code for inherited script),
      ],
   q(0173) => [
      q(Mathematical notation),
      ],
   q(0174) => [
      q(Symbols),
      ],
};

$Locale::Codes::Data{'script'}{'alias2id'} = {
   q('na-'khi ggo-baw) => [
      q(0108),
      q(2),
      ],
   q(adlam) => [
      q(0001),
      q(0),
      ],
   q(afaka) => [
      q(0002),
      q(0),
      ],
   q(ahom) => [
      q(0004),
      q(1),
      ],
   q(ahom, tai ahom) => [
      q(0004),
      q(0),
      ],
   q(alibata) => [
      q(0159),
      q(3),
      ],
   q(anatolian hieroglyphs) => [
      q(0056),
      q(1),
      ],
   q(anatolian hieroglyphs (luwian hieroglyphs, hittite hieroglyphs)) => [
      q(0056),
      q(0),
      ],
   q(ancient north arabian) => [
      q(0106),
      q(2),
      ],
   q(arabic) => [
      q(0005),
      q(0),
      ],
   q(arabic (nastaliq variant)) => [
      q(0006),
      q(0),
      ],
   q(armenian) => [
      q(0008),
      q(0),
      ],
   q(avestan) => [
      q(0009),
      q(0),
      ],
   q(balinese) => [
      q(0010),
      q(0),
      ],
   q(bamum) => [
      q(0011),
      q(0),
      ],
   q(bassa vah) => [
      q(0012),
      q(0),
      ],
   q(batak) => [
      q(0013),
      q(0),
      ],
   q(baybayin) => [
      q(0159),
      q(2),
      ],
   q(bengali) => [
      q(0014),
      q(0),
      ],
   q(berber) => [
      q(0158),
      q(2),
      ],
   q(bhaiksuki) => [
      q(0015),
      q(0),
      ],
   q(blissymbols) => [
      q(0016),
      q(0),
      ],
   q(book pahlavi) => [
      q(0123),
      q(0),
      ],
   q(bopomofo) => [
      q(0017),
      q(0),
      ],
   q(brahmi) => [
      q(0018),
      q(0),
      ],
   q(braille) => [
      q(0019),
      q(0),
      ],
   q(buginese) => [
      q(0020),
      q(0),
      ],
   q(buhid) => [
      q(0021),
      q(0),
      ],
   q(burmese) => [
      q(0105),
      q(2),
      ],
   q(carian) => [
      q(0024),
      q(0),
      ],
   q(caucasian albanian) => [
      q(0003),
      q(0),
      ],
   q(chakma) => [
      q(0022),
      q(0),
      ],
   q(cham) => [
      q(0025),
      q(0),
      ],
   q(cherokee) => [
      q(0026),
      q(0),
      ],
   q(cirth) => [
      q(0027),
      q(0),
      ],
   q(code for inherited script) => [
      q(0172),
      q(0),
      ],
   q(coptic) => [
      q(0028),
      q(0),
      ],
   q(cuneiform, sumero-akkadian) => [
      q(0170),
      q(0),
      ],
   q(cypriot) => [
      q(0029),
      q(0),
      ],
   q(cyrillic) => [
      q(0030),
      q(0),
      ],
   q(cyrillic (old church slavonic variant)) => [
      q(0031),
      q(0),
      ],
   q(deseret) => [
      q(0033),
      q(1),
      ],
   q(deseret (mormon)) => [
      q(0033),
      q(0),
      ],
   q(devanagari) => [
      q(0032),
      q(1),
      ],
   q(devanagari (nagari)) => [
      q(0032),
      q(0),
      ],
   q(duployan shorthand) => [
      q(0034),
      q(1),
      ],
   q(duployan shorthand, duployan stenography) => [
      q(0034),
      q(0),
      ],
   q(duployan stenography) => [
      q(0034),
      q(2),
      ],
   q(egyptian demotic) => [
      q(0035),
      q(0),
      ],
   q(egyptian hieratic) => [
      q(0036),
      q(0),
      ],
   q(egyptian hieroglyphs) => [
      q(0037),
      q(0),
      ],
   q(elbasan) => [
      q(0038),
      q(0),
      ],
   q(ethiopic) => [
      q(0039),
      q(1),
      ],
   q(ethiopic (geez)) => [
      q(0039),
      q(0),
      ],
   q(fraser) => [
      q(0086),
      q(2),
      ],
   q(ge'ez) => [
      q(0039),
      q(2),
      ],
   q(georgian (mkhedruli)) => [
      q(0041),
      q(0),
      ],
   q(glagolitic) => [
      q(0042),
      q(0),
      ],
   q(gothic) => [
      q(0043),
      q(0),
      ],
   q(grantha) => [
      q(0044),
      q(0),
      ],
   q(greek) => [
      q(0045),
      q(0),
      ],
   q(gujarati) => [
      q(0046),
      q(0),
      ],
   q(gurmukhi) => [
      q(0047),
      q(0),
      ],
   q(han) => [
      q(0049),
      q(1),
      ],
   q(han (hanzi, kanji, hanja)) => [
      q(0049),
      q(0),
      ],
   q(han (simplified variant)) => [
      q(0051),
      q(0),
      ],
   q(han (traditional variant)) => [
      q(0052),
      q(0),
      ],
   q(hangeul) => [
      q(0048),
      q(2),
      ],
   q(hangul) => [
      q(0048),
      q(1),
      ],
   q(hangul (hangul, hangeul)) => [
      q(0048),
      q(0),
      ],
   q(hanja) => [
      q(0049),
      q(4),
      ],
   q(hanunoo) => [
      q(0050),
      q(1),
      ],
   q(hanunoo (hanunoo)) => [
      q(0050),
      q(0),
      ],
   q(hanzi) => [
      q(0049),
      q(2),
      ],
   q(harappan) => [
      q(0060),
      q(2),
      ],
   q(hatran) => [
      q(0053),
      q(0),
      ],
   q(hebrew) => [
      q(0054),
      q(0),
      ],
   q(hiragana) => [
      q(0055),
      q(0),
      ],
   q(hittite hieroglyphs) => [
      q(0056),
      q(3),
      ],
   q(hungarian runic) => [
      q(0059),
      q(2),
      ],
   q(imperial aramaic) => [
      q(0007),
      q(0),
      ],
   q(indus) => [
      q(0060),
      q(1),
      ],
   q(indus (harappan)) => [
      q(0060),
      q(0),
      ],
   q(inscriptional pahlavi) => [
      q(0121),
      q(0),
      ],
   q(inscriptional parthian) => [
      q(0126),
      q(0),
      ],
   q(japanese (alias for han + hiragana + katakana)) => [
      q(0063),
      q(0),
      ],
   q(japanese syllabaries (alias for hiragana + katakana)) => [
      q(0058),
      q(0),
      ],
   q(javanese) => [
      q(0062),
      q(0),
      ],
   q(jurchen) => [
      q(0064),
      q(0),
      ],
   q(kaganga) => [
      q(0129),
      q(3),
      ],
   q(kaithi) => [
      q(0075),
      q(0),
      ],
   q(kanji) => [
      q(0049),
      q(3),
      ],
   q(kannada) => [
      q(0072),
      q(0),
      ],
   q(katakana) => [
      q(0066),
      q(0),
      ],
   q(kayah li) => [
      q(0065),
      q(0),
      ],
   q(kharoshthi) => [
      q(0067),
      q(0),
      ],
   q(khitan large script) => [
      q(0070),
      q(0),
      ],
   q(khitan small script) => [
      q(0071),
      q(0),
      ],
   q(khmer) => [
      q(0068),
      q(0),
      ],
   q(khojki) => [
      q(0069),
      q(0),
      ],
   q(khudawadi) => [
      q(0140),
      q(1),
      ],
   q(khudawadi, sindhi) => [
      q(0140),
      q(0),
      ],
   q(khutsuri (asomtavruli and nuskhuri)) => [
      q(0040),
      q(0),
      ],
   q(korean (alias for hangul + han)) => [
      q(0073),
      q(0),
      ],
   q(kpelle) => [
      q(0074),
      q(0),
      ],
   q(lanna) => [
      q(0076),
      q(2),
      ],
   q(lao) => [
      q(0077),
      q(0),
      ],
   q(latin) => [
      q(0080),
      q(0),
      ],
   q(latin (fraktur variant)) => [
      q(0078),
      q(0),
      ],
   q(latin (gaelic variant)) => [
      q(0079),
      q(0),
      ],
   q(leke) => [
      q(0081),
      q(0),
      ],
   q(lepcha) => [
      q(0082),
      q(1),
      ],
   q(lepcha (rong)) => [
      q(0082),
      q(0),
      ],
   q(limbu) => [
      q(0083),
      q(0),
      ],
   q(linear a) => [
      q(0084),
      q(0),
      ],
   q(linear b) => [
      q(0085),
      q(0),
      ],
   q(lisu) => [
      q(0086),
      q(1),
      ],
   q(lisu (fraser)) => [
      q(0086),
      q(0),
      ],
   q(loma) => [
      q(0087),
      q(0),
      ],
   q(luwian hieroglyphs) => [
      q(0056),
      q(2),
      ],
   q(lycian) => [
      q(0088),
      q(0),
      ],
   q(lydian) => [
      q(0089),
      q(0),
      ],
   q(mahajani) => [
      q(0090),
      q(0),
      ],
   q(malayalam) => [
      q(0098),
      q(0),
      ],
   q(mandaean) => [
      q(0091),
      q(2),
      ],
   q(mandaic) => [
      q(0091),
      q(1),
      ],
   q(mandaic, mandaean) => [
      q(0091),
      q(0),
      ],
   q(manichaean) => [
      q(0092),
      q(0),
      ],
   q(marchen) => [
      q(0093),
      q(0),
      ],
   q(mathematical notation) => [
      q(0173),
      q(0),
      ],
   q(mayan hieroglyphs) => [
      q(0094),
      q(0),
      ],
   q(meetei) => [
      q(0103),
      q(3),
      ],
   q(meitei mayek) => [
      q(0103),
      q(1),
      ],
   q(meitei mayek (meithei, meetei)) => [
      q(0103),
      q(0),
      ],
   q(meithei) => [
      q(0103),
      q(2),
      ],
   q(mende kikakui) => [
      q(0095),
      q(0),
      ],
   q(meroitic cursive) => [
      q(0096),
      q(0),
      ],
   q(meroitic hieroglyphs) => [
      q(0097),
      q(0),
      ],
   q(miao) => [
      q(0125),
      q(1),
      ],
   q(miao (pollard)) => [
      q(0125),
      q(0),
      ],
   q(modi) => [
      q(0099),
      q(1),
      ],
   q(modi, modi) => [
      q(0099),
      q(0),
      ],
   q(mongolian) => [
      q(0100),
      q(0),
      ],
   q(moon) => [
      q(0101),
      q(1),
      ],
   q(moon (moon code, moon script, moon type)) => [
      q(0101),
      q(0),
      ],
   q(moon code) => [
      q(0101),
      q(2),
      ],
   q(moon script) => [
      q(0101),
      q(3),
      ],
   q(moon type) => [
      q(0101),
      q(4),
      ],
   q(mormon) => [
      q(0033),
      q(2),
      ],
   q(mro) => [
      q(0102),
      q(1),
      ],
   q(mro, mru) => [
      q(0102),
      q(0),
      ],
   q(mru) => [
      q(0102),
      q(2),
      ],
   q(multani) => [
      q(0104),
      q(0),
      ],
   q(myanmar) => [
      q(0105),
      q(1),
      ],
   q(myanmar (burmese)) => [
      q(0105),
      q(0),
      ],
   q(n'ko) => [
      q(0109),
      q(0),
      ],
   q(nabataean) => [
      q(0107),
      q(0),
      ],
   q(nagari) => [
      q(0032),
      q(2),
      ],
   q(nakhi geba) => [
      q(0108),
      q(1),
      ],
   q(nakhi geba ('na-'khi ggo-baw, naxi geba)) => [
      q(0108),
      q(0),
      ],
   q(naxi geba) => [
      q(0108),
      q(3),
      ],
   q(new tai lue) => [
      q(0152),
      q(0),
      ],
   q(nushu) => [
      q(0110),
      q(0),
      ],
   q(ogham) => [
      q(0111),
      q(0),
      ],
   q(ol) => [
      q(0112),
      q(3),
      ],
   q(ol cemet') => [
      q(0112),
      q(2),
      ],
   q(ol chiki) => [
      q(0112),
      q(1),
      ],
   q(ol chiki (ol cemet, ol, santali)) => [
      q(0112),
      q(0),
      ],
   q(old hungarian) => [
      q(0059),
      q(1),
      ],
   q(old hungarian (hungarian runic)) => [
      q(0059),
      q(0),
      ],
   q(old italic (etruscan, oscan, etc.)) => [
      q(0061),
      q(0),
      ],
   q(old north arabian) => [
      q(0106),
      q(1),
      ],
   q(old north arabian (ancient north arabian)) => [
      q(0106),
      q(0),
      ],
   q(old permic) => [
      q(0119),
      q(0),
      ],
   q(old persian) => [
      q(0169),
      q(0),
      ],
   q(old south arabian) => [
      q(0134),
      q(0),
      ],
   q(old turkic) => [
      q(0113),
      q(1),
      ],
   q(old turkic, orkhon runic) => [
      q(0113),
      q(0),
      ],
   q(oriya) => [
      q(0114),
      q(0),
      ],
   q(orkhon runic) => [
      q(0113),
      q(2),
      ],
   q(osage) => [
      q(0115),
      q(0),
      ],
   q(osmanya) => [
      q(0116),
      q(0),
      ],
   q(pahawh hmong) => [
      q(0057),
      q(0),
      ],
   q(palmyrene) => [
      q(0117),
      q(0),
      ],
   q(pau cin hau) => [
      q(0118),
      q(0),
      ],
   q(phags-pa) => [
      q(0120),
      q(0),
      ],
   q(phoenician) => [
      q(0124),
      q(0),
      ],
   q(pollard) => [
      q(0125),
      q(2),
      ],
   q(psalter pahlavi) => [
      q(0122),
      q(0),
      ],
   q(redjang) => [
      q(0129),
      q(2),
      ],
   q(rejang) => [
      q(0129),
      q(1),
      ],
   q(rejang (redjang, kaganga)) => [
      q(0129),
      q(0),
      ],
   q(reserved for private use (end)) => [
      q(0128),
      q(0),
      ],
   q(reserved for private use (start)) => [
      q(0127),
      q(0),
      ],
   q(rong) => [
      q(0082),
      q(2),
      ],
   q(rongorongo) => [
      q(0130),
      q(0),
      ],
   q(runic) => [
      q(0131),
      q(0),
      ],
   q(samaritan) => [
      q(0132),
      q(0),
      ],
   q(santali) => [
      q(0112),
      q(4),
      ],
   q(sarada) => [
      q(0138),
      q(2),
      ],
   q(sarati) => [
      q(0133),
      q(0),
      ],
   q(saurashtra) => [
      q(0135),
      q(0),
      ],
   q(sharada) => [
      q(0138),
      q(1),
      ],
   q(sharada, sarada) => [
      q(0138),
      q(0),
      ],
   q(shavian) => [
      q(0137),
      q(1),
      ],
   q(shavian (shaw)) => [
      q(0137),
      q(0),
      ],
   q(shaw) => [
      q(0137),
      q(2),
      ],
   q(siddham) => [
      q(0139),
      q(1),
      ],
   q(siddham, siddham, siddhamatrka) => [
      q(0139),
      q(0),
      ],
   q(siddhamatrka) => [
      q(0139),
      q(2),
      ],
   q(signwriting) => [
      q(0136),
      q(0),
      ],
   q(sindhi) => [
      q(0140),
      q(2),
      ],
   q(sinhala) => [
      q(0141),
      q(0),
      ],
   q(sora sompeng) => [
      q(0142),
      q(0),
      ],
   q(sumero-akkadian cuneiform) => [
      q(0170),
      q(1),
      ],
   q(sundanese) => [
      q(0143),
      q(0),
      ],
   q(syloti nagri) => [
      q(0144),
      q(0),
      ],
   q(symbols) => [
      q(0174),
      q(0),
      ],
   q(syriac) => [
      q(0145),
      q(0),
      ],
   q(syriac (eastern variant)) => [
      q(0148),
      q(0),
      ],
   q(syriac (estrangelo variant)) => [
      q(0146),
      q(0),
      ],
   q(syriac (western variant)) => [
      q(0147),
      q(0),
      ],
   q(tagalog) => [
      q(0159),
      q(1),
      ],
   q(tagalog (baybayin, alibata)) => [
      q(0159),
      q(0),
      ],
   q(tagbanwa) => [
      q(0149),
      q(0),
      ],
   q(tai ahom) => [
      q(0004),
      q(2),
      ],
   q(tai le) => [
      q(0151),
      q(0),
      ],
   q(tai tham) => [
      q(0076),
      q(1),
      ],
   q(tai tham (lanna)) => [
      q(0076),
      q(0),
      ],
   q(tai viet) => [
      q(0155),
      q(0),
      ],
   q(takri) => [
      q(0150),
      q(1),
      ],
   q(takri, takri, tankri) => [
      q(0150),
      q(0),
      ],
   q(tamil) => [
      q(0153),
      q(0),
      ],
   q(tangut) => [
      q(0154),
      q(0),
      ],
   q(tankri) => [
      q(0150),
      q(2),
      ],
   q(telugu) => [
      q(0156),
      q(0),
      ],
   q(tengwar) => [
      q(0157),
      q(0),
      ],
   q(thaana) => [
      q(0160),
      q(0),
      ],
   q(thai) => [
      q(0161),
      q(0),
      ],
   q(tibetan) => [
      q(0162),
      q(0),
      ],
   q(tifinagh) => [
      q(0158),
      q(1),
      ],
   q(tifinagh (berber)) => [
      q(0158),
      q(0),
      ],
   q(tirhuta) => [
      q(0163),
      q(0),
      ],
   q(ugaritic) => [
      q(0164),
      q(0),
      ],
   q(unified canadian aboriginal syllabics) => [
      q(0023),
      q(0),
      ],
   q(vai) => [
      q(0165),
      q(0),
      ],
   q(varang kshiti) => [
      q(0167),
      q(2),
      ],
   q(visible speech) => [
      q(0166),
      q(0),
      ],
   q(warang citi) => [
      q(0167),
      q(1),
      ],
   q(warang citi (varang kshiti)) => [
      q(0167),
      q(0),
      ],
   q(woleai) => [
      q(0168),
      q(0),
      ],
   q(yi) => [
      q(0171),
      q(0),
      ],
};

$Locale::Codes::Data{'script'}{'code2id'} = {
   q(alpha) => {
      q(Adlm) => [
         q(0001),
         q(0),
         ],
      q(Afak) => [
         q(0002),
         q(0),
         ],
      q(Aghb) => [
         q(0003),
         q(0),
         ],
      q(Ahom) => [
         q(0004),
         q(1),
         ],
      q(Arab) => [
         q(0005),
         q(0),
         ],
      q(Aran) => [
         q(0006),
         q(0),
         ],
      q(Armi) => [
         q(0007),
         q(0),
         ],
      q(Armn) => [
         q(0008),
         q(0),
         ],
      q(Avst) => [
         q(0009),
         q(0),
         ],
      q(Bali) => [
         q(0010),
         q(0),
         ],
      q(Bamu) => [
         q(0011),
         q(0),
         ],
      q(Bass) => [
         q(0012),
         q(0),
         ],
      q(Batk) => [
         q(0013),
         q(0),
         ],
      q(Beng) => [
         q(0014),
         q(0),
         ],
      q(Bhks) => [
         q(0015),
         q(0),
         ],
      q(Blis) => [
         q(0016),
         q(0),
         ],
      q(Bopo) => [
         q(0017),
         q(0),
         ],
      q(Brah) => [
         q(0018),
         q(0),
         ],
      q(Brai) => [
         q(0019),
         q(0),
         ],
      q(Bugi) => [
         q(0020),
         q(0),
         ],
      q(Buhd) => [
         q(0021),
         q(0),
         ],
      q(Cakm) => [
         q(0022),
         q(0),
         ],
      q(Cans) => [
         q(0023),
         q(0),
         ],
      q(Cari) => [
         q(0024),
         q(0),
         ],
      q(Cham) => [
         q(0025),
         q(0),
         ],
      q(Cher) => [
         q(0026),
         q(0),
         ],
      q(Cirt) => [
         q(0027),
         q(0),
         ],
      q(Copt) => [
         q(0028),
         q(0),
         ],
      q(Cprt) => [
         q(0029),
         q(0),
         ],
      q(Cyrl) => [
         q(0030),
         q(0),
         ],
      q(Cyrs) => [
         q(0031),
         q(0),
         ],
      q(Deva) => [
         q(0032),
         q(1),
         ],
      q(Dsrt) => [
         q(0033),
         q(1),
         ],
      q(Dupl) => [
         q(0034),
         q(1),
         ],
      q(Egyd) => [
         q(0035),
         q(0),
         ],
      q(Egyh) => [
         q(0036),
         q(0),
         ],
      q(Egyp) => [
         q(0037),
         q(0),
         ],
      q(Elba) => [
         q(0038),
         q(0),
         ],
      q(Ethi) => [
         q(0039),
         q(1),
         ],
      q(Geok) => [
         q(0040),
         q(0),
         ],
      q(Geor) => [
         q(0041),
         q(0),
         ],
      q(Glag) => [
         q(0042),
         q(0),
         ],
      q(Goth) => [
         q(0043),
         q(0),
         ],
      q(Gran) => [
         q(0044),
         q(0),
         ],
      q(Grek) => [
         q(0045),
         q(0),
         ],
      q(Gujr) => [
         q(0046),
         q(0),
         ],
      q(Guru) => [
         q(0047),
         q(0),
         ],
      q(Hang) => [
         q(0048),
         q(1),
         ],
      q(Hani) => [
         q(0049),
         q(1),
         ],
      q(Hano) => [
         q(0050),
         q(1),
         ],
      q(Hans) => [
         q(0051),
         q(0),
         ],
      q(Hant) => [
         q(0052),
         q(0),
         ],
      q(Hatr) => [
         q(0053),
         q(0),
         ],
      q(Hebr) => [
         q(0054),
         q(0),
         ],
      q(Hira) => [
         q(0055),
         q(0),
         ],
      q(Hluw) => [
         q(0056),
         q(1),
         ],
      q(Hmng) => [
         q(0057),
         q(0),
         ],
      q(Hrkt) => [
         q(0058),
         q(0),
         ],
      q(Hung) => [
         q(0059),
         q(1),
         ],
      q(Inds) => [
         q(0060),
         q(1),
         ],
      q(Ital) => [
         q(0061),
         q(0),
         ],
      q(Java) => [
         q(0062),
         q(0),
         ],
      q(Jpan) => [
         q(0063),
         q(0),
         ],
      q(Jurc) => [
         q(0064),
         q(0),
         ],
      q(Kali) => [
         q(0065),
         q(0),
         ],
      q(Kana) => [
         q(0066),
         q(0),
         ],
      q(Khar) => [
         q(0067),
         q(0),
         ],
      q(Khmr) => [
         q(0068),
         q(0),
         ],
      q(Khoj) => [
         q(0069),
         q(0),
         ],
      q(Kitl) => [
         q(0070),
         q(0),
         ],
      q(Kits) => [
         q(0071),
         q(0),
         ],
      q(Knda) => [
         q(0072),
         q(0),
         ],
      q(Kore) => [
         q(0073),
         q(0),
         ],
      q(Kpel) => [
         q(0074),
         q(0),
         ],
      q(Kthi) => [
         q(0075),
         q(0),
         ],
      q(Lana) => [
         q(0076),
         q(1),
         ],
      q(Laoo) => [
         q(0077),
         q(0),
         ],
      q(Latf) => [
         q(0078),
         q(0),
         ],
      q(Latg) => [
         q(0079),
         q(0),
         ],
      q(Latn) => [
         q(0080),
         q(0),
         ],
      q(Leke) => [
         q(0081),
         q(0),
         ],
      q(Lepc) => [
         q(0082),
         q(1),
         ],
      q(Limb) => [
         q(0083),
         q(0),
         ],
      q(Lina) => [
         q(0084),
         q(0),
         ],
      q(Linb) => [
         q(0085),
         q(0),
         ],
      q(Lisu) => [
         q(0086),
         q(1),
         ],
      q(Loma) => [
         q(0087),
         q(0),
         ],
      q(Lyci) => [
         q(0088),
         q(0),
         ],
      q(Lydi) => [
         q(0089),
         q(0),
         ],
      q(Mahj) => [
         q(0090),
         q(0),
         ],
      q(Mand) => [
         q(0091),
         q(1),
         ],
      q(Mani) => [
         q(0092),
         q(0),
         ],
      q(Marc) => [
         q(0093),
         q(0),
         ],
      q(Maya) => [
         q(0094),
         q(0),
         ],
      q(Mend) => [
         q(0095),
         q(0),
         ],
      q(Merc) => [
         q(0096),
         q(0),
         ],
      q(Mero) => [
         q(0097),
         q(0),
         ],
      q(Mlym) => [
         q(0098),
         q(0),
         ],
      q(Modi) => [
         q(0099),
         q(1),
         ],
      q(Mong) => [
         q(0100),
         q(0),
         ],
      q(Moon) => [
         q(0101),
         q(1),
         ],
      q(Mroo) => [
         q(0102),
         q(1),
         ],
      q(Mtei) => [
         q(0103),
         q(1),
         ],
      q(Mult) => [
         q(0104),
         q(0),
         ],
      q(Mymr) => [
         q(0105),
         q(1),
         ],
      q(Narb) => [
         q(0106),
         q(1),
         ],
      q(Nbat) => [
         q(0107),
         q(0),
         ],
      q(Nkgb) => [
         q(0108),
         q(1),
         ],
      q(Nkoo) => [
         q(0109),
         q(0),
         ],
      q(Nshu) => [
         q(0110),
         q(0),
         ],
      q(Ogam) => [
         q(0111),
         q(0),
         ],
      q(Olck) => [
         q(0112),
         q(1),
         ],
      q(Orkh) => [
         q(0113),
         q(1),
         ],
      q(Orya) => [
         q(0114),
         q(0),
         ],
      q(Osge) => [
         q(0115),
         q(0),
         ],
      q(Osma) => [
         q(0116),
         q(0),
         ],
      q(Palm) => [
         q(0117),
         q(0),
         ],
      q(Pauc) => [
         q(0118),
         q(0),
         ],
      q(Perm) => [
         q(0119),
         q(0),
         ],
      q(Phag) => [
         q(0120),
         q(0),
         ],
      q(Phli) => [
         q(0121),
         q(0),
         ],
      q(Phlp) => [
         q(0122),
         q(0),
         ],
      q(Phlv) => [
         q(0123),
         q(0),
         ],
      q(Phnx) => [
         q(0124),
         q(0),
         ],
      q(Plrd) => [
         q(0125),
         q(1),
         ],
      q(Prti) => [
         q(0126),
         q(0),
         ],
      q(Qaaa) => [
         q(0127),
         q(0),
         ],
      q(Qabx) => [
         q(0128),
         q(0),
         ],
      q(Rjng) => [
         q(0129),
         q(1),
         ],
      q(Roro) => [
         q(0130),
         q(0),
         ],
      q(Runr) => [
         q(0131),
         q(0),
         ],
      q(Samr) => [
         q(0132),
         q(0),
         ],
      q(Sara) => [
         q(0133),
         q(0),
         ],
      q(Sarb) => [
         q(0134),
         q(0),
         ],
      q(Saur) => [
         q(0135),
         q(0),
         ],
      q(Sgnw) => [
         q(0136),
         q(0),
         ],
      q(Shaw) => [
         q(0137),
         q(1),
         ],
      q(Shrd) => [
         q(0138),
         q(1),
         ],
      q(Sidd) => [
         q(0139),
         q(1),
         ],
      q(Sind) => [
         q(0140),
         q(1),
         ],
      q(Sinh) => [
         q(0141),
         q(0),
         ],
      q(Sora) => [
         q(0142),
         q(0),
         ],
      q(Sund) => [
         q(0143),
         q(0),
         ],
      q(Sylo) => [
         q(0144),
         q(0),
         ],
      q(Syrc) => [
         q(0145),
         q(0),
         ],
      q(Syre) => [
         q(0146),
         q(0),
         ],
      q(Syrj) => [
         q(0147),
         q(0),
         ],
      q(Syrn) => [
         q(0148),
         q(0),
         ],
      q(Tagb) => [
         q(0149),
         q(0),
         ],
      q(Takr) => [
         q(0150),
         q(1),
         ],
      q(Tale) => [
         q(0151),
         q(0),
         ],
      q(Talu) => [
         q(0152),
         q(0),
         ],
      q(Taml) => [
         q(0153),
         q(0),
         ],
      q(Tang) => [
         q(0154),
         q(0),
         ],
      q(Tavt) => [
         q(0155),
         q(0),
         ],
      q(Telu) => [
         q(0156),
         q(0),
         ],
      q(Teng) => [
         q(0157),
         q(0),
         ],
      q(Tfng) => [
         q(0158),
         q(1),
         ],
      q(Tglg) => [
         q(0159),
         q(1),
         ],
      q(Thaa) => [
         q(0160),
         q(0),
         ],
      q(Thai) => [
         q(0161),
         q(0),
         ],
      q(Tibt) => [
         q(0162),
         q(0),
         ],
      q(Tirh) => [
         q(0163),
         q(0),
         ],
      q(Ugar) => [
         q(0164),
         q(0),
         ],
      q(Vaii) => [
         q(0165),
         q(0),
         ],
      q(Visp) => [
         q(0166),
         q(0),
         ],
      q(Wara) => [
         q(0167),
         q(1),
         ],
      q(Wole) => [
         q(0168),
         q(0),
         ],
      q(Xpeo) => [
         q(0169),
         q(0),
         ],
      q(Xsux) => [
         q(0170),
         q(1),
         ],
      q(Yiii) => [
         q(0171),
         q(0),
         ],
      q(Zinh) => [
         q(0172),
         q(0),
         ],
      q(Zmth) => [
         q(0173),
         q(0),
         ],
      q(Zsym) => [
         q(0174),
         q(0),
         ],
      },
   q(num) => {
      q(020) => [
         q(0170),
         q(0),
         ],
      q(030) => [
         q(0169),
         q(0),
         ],
      q(040) => [
         q(0164),
         q(0),
         ],
      q(050) => [
         q(0037),
         q(0),
         ],
      q(060) => [
         q(0036),
         q(0),
         ],
      q(070) => [
         q(0035),
         q(0),
         ],
      q(080) => [
         q(0056),
         q(0),
         ],
      q(090) => [
         q(0094),
         q(0),
         ],
      q(095) => [
         q(0136),
         q(0),
         ],
      q(100) => [
         q(0097),
         q(0),
         ],
      q(101) => [
         q(0096),
         q(0),
         ],
      q(105) => [
         q(0134),
         q(0),
         ],
      q(106) => [
         q(0106),
         q(0),
         ],
      q(115) => [
         q(0124),
         q(0),
         ],
      q(116) => [
         q(0089),
         q(0),
         ],
      q(120) => [
         q(0158),
         q(0),
         ],
      q(123) => [
         q(0132),
         q(0),
         ],
      q(124) => [
         q(0007),
         q(0),
         ],
      q(125) => [
         q(0054),
         q(0),
         ],
      q(126) => [
         q(0117),
         q(0),
         ],
      q(127) => [
         q(0053),
         q(0),
         ],
      q(130) => [
         q(0126),
         q(0),
         ],
      q(131) => [
         q(0121),
         q(0),
         ],
      q(132) => [
         q(0122),
         q(0),
         ],
      q(133) => [
         q(0123),
         q(0),
         ],
      q(134) => [
         q(0009),
         q(0),
         ],
      q(135) => [
         q(0145),
         q(0),
         ],
      q(136) => [
         q(0148),
         q(0),
         ],
      q(137) => [
         q(0147),
         q(0),
         ],
      q(138) => [
         q(0146),
         q(0),
         ],
      q(139) => [
         q(0092),
         q(0),
         ],
      q(140) => [
         q(0091),
         q(0),
         ],
      q(145) => [
         q(0100),
         q(0),
         ],
      q(159) => [
         q(0107),
         q(0),
         ],
      q(160) => [
         q(0005),
         q(0),
         ],
      q(161) => [
         q(0006),
         q(0),
         ],
      q(165) => [
         q(0109),
         q(0),
         ],
      q(166) => [
         q(0001),
         q(0),
         ],
      q(170) => [
         q(0160),
         q(0),
         ],
      q(175) => [
         q(0113),
         q(0),
         ],
      q(176) => [
         q(0059),
         q(0),
         ],
      q(199) => [
         q(0102),
         q(0),
         ],
      q(200) => [
         q(0045),
         q(0),
         ],
      q(201) => [
         q(0024),
         q(0),
         ],
      q(202) => [
         q(0088),
         q(0),
         ],
      q(204) => [
         q(0028),
         q(0),
         ],
      q(206) => [
         q(0043),
         q(0),
         ],
      q(210) => [
         q(0061),
         q(0),
         ],
      q(211) => [
         q(0131),
         q(0),
         ],
      q(212) => [
         q(0111),
         q(0),
         ],
      q(215) => [
         q(0080),
         q(0),
         ],
      q(216) => [
         q(0079),
         q(0),
         ],
      q(217) => [
         q(0078),
         q(0),
         ],
      q(218) => [
         q(0101),
         q(0),
         ],
      q(219) => [
         q(0115),
         q(0),
         ],
      q(220) => [
         q(0030),
         q(0),
         ],
      q(221) => [
         q(0031),
         q(0),
         ],
      q(225) => [
         q(0042),
         q(0),
         ],
      q(226) => [
         q(0038),
         q(0),
         ],
      q(227) => [
         q(0119),
         q(0),
         ],
      q(230) => [
         q(0008),
         q(0),
         ],
      q(239) => [
         q(0003),
         q(0),
         ],
      q(240) => [
         q(0041),
         q(0),
         ],
      q(241) => [
         q(0040),
         q(0),
         ],
      q(250) => [
         q(0033),
         q(0),
         ],
      q(259) => [
         q(0012),
         q(0),
         ],
      q(260) => [
         q(0116),
         q(0),
         ],
      q(261) => [
         q(0112),
         q(0),
         ],
      q(262) => [
         q(0167),
         q(0),
         ],
      q(263) => [
         q(0118),
         q(0),
         ],
      q(280) => [
         q(0166),
         q(0),
         ],
      q(281) => [
         q(0137),
         q(0),
         ],
      q(282) => [
         q(0125),
         q(0),
         ],
      q(285) => [
         q(0017),
         q(0),
         ],
      q(286) => [
         q(0048),
         q(0),
         ],
      q(287) => [
         q(0073),
         q(0),
         ],
      q(288) => [
         q(0071),
         q(0),
         ],
      q(290) => [
         q(0157),
         q(0),
         ],
      q(291) => [
         q(0027),
         q(0),
         ],
      q(292) => [
         q(0133),
         q(0),
         ],
      q(300) => [
         q(0018),
         q(0),
         ],
      q(302) => [
         q(0139),
         q(0),
         ],
      q(305) => [
         q(0067),
         q(0),
         ],
      q(310) => [
         q(0047),
         q(0),
         ],
      q(314) => [
         q(0090),
         q(0),
         ],
      q(315) => [
         q(0032),
         q(0),
         ],
      q(316) => [
         q(0144),
         q(0),
         ],
      q(317) => [
         q(0075),
         q(0),
         ],
      q(318) => [
         q(0140),
         q(0),
         ],
      q(319) => [
         q(0138),
         q(0),
         ],
      q(320) => [
         q(0046),
         q(0),
         ],
      q(321) => [
         q(0150),
         q(0),
         ],
      q(322) => [
         q(0069),
         q(0),
         ],
      q(323) => [
         q(0104),
         q(0),
         ],
      q(324) => [
         q(0099),
         q(0),
         ],
      q(325) => [
         q(0014),
         q(0),
         ],
      q(326) => [
         q(0163),
         q(0),
         ],
      q(327) => [
         q(0114),
         q(0),
         ],
      q(330) => [
         q(0162),
         q(0),
         ],
      q(331) => [
         q(0120),
         q(0),
         ],
      q(332) => [
         q(0093),
         q(0),
         ],
      q(334) => [
         q(0015),
         q(0),
         ],
      q(335) => [
         q(0082),
         q(0),
         ],
      q(336) => [
         q(0083),
         q(0),
         ],
      q(337) => [
         q(0103),
         q(0),
         ],
      q(338) => [
         q(0004),
         q(0),
         ],
      q(340) => [
         q(0156),
         q(0),
         ],
      q(343) => [
         q(0044),
         q(0),
         ],
      q(344) => [
         q(0135),
         q(0),
         ],
      q(345) => [
         q(0072),
         q(0),
         ],
      q(346) => [
         q(0153),
         q(0),
         ],
      q(347) => [
         q(0098),
         q(0),
         ],
      q(348) => [
         q(0141),
         q(0),
         ],
      q(349) => [
         q(0022),
         q(0),
         ],
      q(350) => [
         q(0105),
         q(0),
         ],
      q(351) => [
         q(0076),
         q(0),
         ],
      q(352) => [
         q(0161),
         q(0),
         ],
      q(353) => [
         q(0151),
         q(0),
         ],
      q(354) => [
         q(0152),
         q(0),
         ],
      q(355) => [
         q(0068),
         q(0),
         ],
      q(356) => [
         q(0077),
         q(0),
         ],
      q(357) => [
         q(0065),
         q(0),
         ],
      q(358) => [
         q(0025),
         q(0),
         ],
      q(359) => [
         q(0155),
         q(0),
         ],
      q(360) => [
         q(0010),
         q(0),
         ],
      q(361) => [
         q(0062),
         q(0),
         ],
      q(362) => [
         q(0143),
         q(0),
         ],
      q(363) => [
         q(0129),
         q(0),
         ],
      q(364) => [
         q(0081),
         q(0),
         ],
      q(365) => [
         q(0013),
         q(0),
         ],
      q(367) => [
         q(0020),
         q(0),
         ],
      q(370) => [
         q(0159),
         q(0),
         ],
      q(371) => [
         q(0050),
         q(0),
         ],
      q(372) => [
         q(0021),
         q(0),
         ],
      q(373) => [
         q(0149),
         q(0),
         ],
      q(398) => [
         q(0142),
         q(0),
         ],
      q(399) => [
         q(0086),
         q(0),
         ],
      q(400) => [
         q(0084),
         q(0),
         ],
      q(401) => [
         q(0085),
         q(0),
         ],
      q(403) => [
         q(0029),
         q(0),
         ],
      q(410) => [
         q(0055),
         q(0),
         ],
      q(411) => [
         q(0066),
         q(0),
         ],
      q(412) => [
         q(0058),
         q(0),
         ],
      q(413) => [
         q(0063),
         q(0),
         ],
      q(420) => [
         q(0108),
         q(0),
         ],
      q(430) => [
         q(0039),
         q(0),
         ],
      q(435) => [
         q(0011),
         q(0),
         ],
      q(436) => [
         q(0074),
         q(0),
         ],
      q(437) => [
         q(0087),
         q(0),
         ],
      q(438) => [
         q(0095),
         q(0),
         ],
      q(439) => [
         q(0002),
         q(0),
         ],
      q(440) => [
         q(0023),
         q(0),
         ],
      q(445) => [
         q(0026),
         q(0),
         ],
      q(450) => [
         q(0057),
         q(0),
         ],
      q(460) => [
         q(0171),
         q(0),
         ],
      q(470) => [
         q(0165),
         q(0),
         ],
      q(480) => [
         q(0168),
         q(0),
         ],
      q(499) => [
         q(0110),
         q(0),
         ],
      q(500) => [
         q(0049),
         q(0),
         ],
      q(501) => [
         q(0051),
         q(0),
         ],
      q(502) => [
         q(0052),
         q(0),
         ],
      q(505) => [
         q(0070),
         q(0),
         ],
      q(510) => [
         q(0064),
         q(0),
         ],
      q(520) => [
         q(0154),
         q(0),
         ],
      q(550) => [
         q(0016),
         q(0),
         ],
      q(570) => [
         q(0019),
         q(0),
         ],
      q(610) => [
         q(0060),
         q(0),
         ],
      q(620) => [
         q(0130),
         q(0),
         ],
      q(755) => [
         q(0034),
         q(0),
         ],
      q(900) => [
         q(0127),
         q(0),
         ],
      q(949) => [
         q(0128),
         q(0),
         ],
      q(994) => [
         q(0172),
         q(0),
         ],
      q(995) => [
         q(0173),
         q(0),
         ],
      q(996) => [
         q(0174),
         q(0),
         ],
      },
};

$Locale::Codes::Data{'script'}{'id2code'} = {
   q(alpha) => {
      q(0001) => q(Adlm),
      q(0002) => q(Afak),
      q(0003) => q(Aghb),
      q(0004) => q(Ahom),
      q(0005) => q(Arab),
      q(0006) => q(Aran),
      q(0007) => q(Armi),
      q(0008) => q(Armn),
      q(0009) => q(Avst),
      q(0010) => q(Bali),
      q(0011) => q(Bamu),
      q(0012) => q(Bass),
      q(0013) => q(Batk),
      q(0014) => q(Beng),
      q(0015) => q(Bhks),
      q(0016) => q(Blis),
      q(0017) => q(Bopo),
      q(0018) => q(Brah),
      q(0019) => q(Brai),
      q(0020) => q(Bugi),
      q(0021) => q(Buhd),
      q(0022) => q(Cakm),
      q(0023) => q(Cans),
      q(0024) => q(Cari),
      q(0025) => q(Cham),
      q(0026) => q(Cher),
      q(0027) => q(Cirt),
      q(0028) => q(Copt),
      q(0029) => q(Cprt),
      q(0030) => q(Cyrl),
      q(0031) => q(Cyrs),
      q(0032) => q(Deva),
      q(0033) => q(Dsrt),
      q(0034) => q(Dupl),
      q(0035) => q(Egyd),
      q(0036) => q(Egyh),
      q(0037) => q(Egyp),
      q(0038) => q(Elba),
      q(0039) => q(Ethi),
      q(0040) => q(Geok),
      q(0041) => q(Geor),
      q(0042) => q(Glag),
      q(0043) => q(Goth),
      q(0044) => q(Gran),
      q(0045) => q(Grek),
      q(0046) => q(Gujr),
      q(0047) => q(Guru),
      q(0048) => q(Hang),
      q(0049) => q(Hani),
      q(0050) => q(Hano),
      q(0051) => q(Hans),
      q(0052) => q(Hant),
      q(0053) => q(Hatr),
      q(0054) => q(Hebr),
      q(0055) => q(Hira),
      q(0056) => q(Hluw),
      q(0057) => q(Hmng),
      q(0058) => q(Hrkt),
      q(0059) => q(Hung),
      q(0060) => q(Inds),
      q(0061) => q(Ital),
      q(0062) => q(Java),
      q(0063) => q(Jpan),
      q(0064) => q(Jurc),
      q(0065) => q(Kali),
      q(0066) => q(Kana),
      q(0067) => q(Khar),
      q(0068) => q(Khmr),
      q(0069) => q(Khoj),
      q(0070) => q(Kitl),
      q(0071) => q(Kits),
      q(0072) => q(Knda),
      q(0073) => q(Kore),
      q(0074) => q(Kpel),
      q(0075) => q(Kthi),
      q(0076) => q(Lana),
      q(0077) => q(Laoo),
      q(0078) => q(Latf),
      q(0079) => q(Latg),
      q(0080) => q(Latn),
      q(0081) => q(Leke),
      q(0082) => q(Lepc),
      q(0083) => q(Limb),
      q(0084) => q(Lina),
      q(0085) => q(Linb),
      q(0086) => q(Lisu),
      q(0087) => q(Loma),
      q(0088) => q(Lyci),
      q(0089) => q(Lydi),
      q(0090) => q(Mahj),
      q(0091) => q(Mand),
      q(0092) => q(Mani),
      q(0093) => q(Marc),
      q(0094) => q(Maya),
      q(0095) => q(Mend),
      q(0096) => q(Merc),
      q(0097) => q(Mero),
      q(0098) => q(Mlym),
      q(0099) => q(Modi),
      q(0100) => q(Mong),
      q(0101) => q(Moon),
      q(0102) => q(Mroo),
      q(0103) => q(Mtei),
      q(0104) => q(Mult),
      q(0105) => q(Mymr),
      q(0106) => q(Narb),
      q(0107) => q(Nbat),
      q(0108) => q(Nkgb),
      q(0109) => q(Nkoo),
      q(0110) => q(Nshu),
      q(0111) => q(Ogam),
      q(0112) => q(Olck),
      q(0113) => q(Orkh),
      q(0114) => q(Orya),
      q(0115) => q(Osge),
      q(0116) => q(Osma),
      q(0117) => q(Palm),
      q(0118) => q(Pauc),
      q(0119) => q(Perm),
      q(0120) => q(Phag),
      q(0121) => q(Phli),
      q(0122) => q(Phlp),
      q(0123) => q(Phlv),
      q(0124) => q(Phnx),
      q(0125) => q(Plrd),
      q(0126) => q(Prti),
      q(0127) => q(Qaaa),
      q(0128) => q(Qabx),
      q(0129) => q(Rjng),
      q(0130) => q(Roro),
      q(0131) => q(Runr),
      q(0132) => q(Samr),
      q(0133) => q(Sara),
      q(0134) => q(Sarb),
      q(0135) => q(Saur),
      q(0136) => q(Sgnw),
      q(0137) => q(Shaw),
      q(0138) => q(Shrd),
      q(0139) => q(Sidd),
      q(0140) => q(Sind),
      q(0141) => q(Sinh),
      q(0142) => q(Sora),
      q(0143) => q(Sund),
      q(0144) => q(Sylo),
      q(0145) => q(Syrc),
      q(0146) => q(Syre),
      q(0147) => q(Syrj),
      q(0148) => q(Syrn),
      q(0149) => q(Tagb),
      q(0150) => q(Takr),
      q(0151) => q(Tale),
      q(0152) => q(Talu),
      q(0153) => q(Taml),
      q(0154) => q(Tang),
      q(0155) => q(Tavt),
      q(0156) => q(Telu),
      q(0157) => q(Teng),
      q(0158) => q(Tfng),
      q(0159) => q(Tglg),
      q(0160) => q(Thaa),
      q(0161) => q(Thai),
      q(0162) => q(Tibt),
      q(0163) => q(Tirh),
      q(0164) => q(Ugar),
      q(0165) => q(Vaii),
      q(0166) => q(Visp),
      q(0167) => q(Wara),
      q(0168) => q(Wole),
      q(0169) => q(Xpeo),
      q(0170) => q(Xsux),
      q(0171) => q(Yiii),
      q(0172) => q(Zinh),
      q(0173) => q(Zmth),
      q(0174) => q(Zsym),
      },
   q(num) => {
      q(0001) => q(166),
      q(0002) => q(439),
      q(0003) => q(239),
      q(0004) => q(338),
      q(0005) => q(160),
      q(0006) => q(161),
      q(0007) => q(124),
      q(0008) => q(230),
      q(0009) => q(134),
      q(0010) => q(360),
      q(0011) => q(435),
      q(0012) => q(259),
      q(0013) => q(365),
      q(0014) => q(325),
      q(0015) => q(334),
      q(0016) => q(550),
      q(0017) => q(285),
      q(0018) => q(300),
      q(0019) => q(570),
      q(0020) => q(367),
      q(0021) => q(372),
      q(0022) => q(349),
      q(0023) => q(440),
      q(0024) => q(201),
      q(0025) => q(358),
      q(0026) => q(445),
      q(0027) => q(291),
      q(0028) => q(204),
      q(0029) => q(403),
      q(0030) => q(220),
      q(0031) => q(221),
      q(0032) => q(315),
      q(0033) => q(250),
      q(0034) => q(755),
      q(0035) => q(070),
      q(0036) => q(060),
      q(0037) => q(050),
      q(0038) => q(226),
      q(0039) => q(430),
      q(0040) => q(241),
      q(0041) => q(240),
      q(0042) => q(225),
      q(0043) => q(206),
      q(0044) => q(343),
      q(0045) => q(200),
      q(0046) => q(320),
      q(0047) => q(310),
      q(0048) => q(286),
      q(0049) => q(500),
      q(0050) => q(371),
      q(0051) => q(501),
      q(0052) => q(502),
      q(0053) => q(127),
      q(0054) => q(125),
      q(0055) => q(410),
      q(0056) => q(080),
      q(0057) => q(450),
      q(0058) => q(412),
      q(0059) => q(176),
      q(0060) => q(610),
      q(0061) => q(210),
      q(0062) => q(361),
      q(0063) => q(413),
      q(0064) => q(510),
      q(0065) => q(357),
      q(0066) => q(411),
      q(0067) => q(305),
      q(0068) => q(355),
      q(0069) => q(322),
      q(0070) => q(505),
      q(0071) => q(288),
      q(0072) => q(345),
      q(0073) => q(287),
      q(0074) => q(436),
      q(0075) => q(317),
      q(0076) => q(351),
      q(0077) => q(356),
      q(0078) => q(217),
      q(0079) => q(216),
      q(0080) => q(215),
      q(0081) => q(364),
      q(0082) => q(335),
      q(0083) => q(336),
      q(0084) => q(400),
      q(0085) => q(401),
      q(0086) => q(399),
      q(0087) => q(437),
      q(0088) => q(202),
      q(0089) => q(116),
      q(0090) => q(314),
      q(0091) => q(140),
      q(0092) => q(139),
      q(0093) => q(332),
      q(0094) => q(090),
      q(0095) => q(438),
      q(0096) => q(101),
      q(0097) => q(100),
      q(0098) => q(347),
      q(0099) => q(324),
      q(0100) => q(145),
      q(0101) => q(218),
      q(0102) => q(199),
      q(0103) => q(337),
      q(0104) => q(323),
      q(0105) => q(350),
      q(0106) => q(106),
      q(0107) => q(159),
      q(0108) => q(420),
      q(0109) => q(165),
      q(0110) => q(499),
      q(0111) => q(212),
      q(0112) => q(261),
      q(0113) => q(175),
      q(0114) => q(327),
      q(0115) => q(219),
      q(0116) => q(260),
      q(0117) => q(126),
      q(0118) => q(263),
      q(0119) => q(227),
      q(0120) => q(331),
      q(0121) => q(131),
      q(0122) => q(132),
      q(0123) => q(133),
      q(0124) => q(115),
      q(0125) => q(282),
      q(0126) => q(130),
      q(0127) => q(900),
      q(0128) => q(949),
      q(0129) => q(363),
      q(0130) => q(620),
      q(0131) => q(211),
      q(0132) => q(123),
      q(0133) => q(292),
      q(0134) => q(105),
      q(0135) => q(344),
      q(0136) => q(095),
      q(0137) => q(281),
      q(0138) => q(319),
      q(0139) => q(302),
      q(0140) => q(318),
      q(0141) => q(348),
      q(0142) => q(398),
      q(0143) => q(362),
      q(0144) => q(316),
      q(0145) => q(135),
      q(0146) => q(138),
      q(0147) => q(137),
      q(0148) => q(136),
      q(0149) => q(373),
      q(0150) => q(321),
      q(0151) => q(353),
      q(0152) => q(354),
      q(0153) => q(346),
      q(0154) => q(520),
      q(0155) => q(359),
      q(0156) => q(340),
      q(0157) => q(290),
      q(0158) => q(120),
      q(0159) => q(370),
      q(0160) => q(170),
      q(0161) => q(352),
      q(0162) => q(330),
      q(0163) => q(326),
      q(0164) => q(040),
      q(0165) => q(470),
      q(0166) => q(280),
      q(0167) => q(262),
      q(0168) => q(480),
      q(0169) => q(030),
      q(0170) => q(020),
      q(0171) => q(460),
      q(0172) => q(994),
      q(0173) => q(995),
      q(0174) => q(996),
      },
};

1;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
package Locale::Codes::Script_Codes;
d5 2
a6 30
# be lost the next time 'get_codes' is run.
#    Generated on: Thu Mar  1 08:07:26 EST 2012

=pod

=head1 NAME

Locale::Codes::Script_Codes - script codes for the Locale::Codes::Script module

=head1 SYNOPSIS

This module contains data used by the Locale::Codes::Script module. It is
not intended to be used directly, and contains no calleable routines.

=head1 AUTHOR

See Locale::Codes for full author history.

Currently maintained by Sullivan Beck (sbeck@@cpan.org).

=head1 COPYRIGHT

   Copyright (c) 1997-2001 Canon Research Centre Europe (CRE).
   Copyright (c) 2001-2010 Neil Bowers
   Copyright (c) 2010-2012 Sullivan Beck

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut
d9 1
d11 1
a11 1
require 5.002;
d14 1
a14 1
$VERSION='3.21';
d16 1
a16 1
$Locale::Codes::Data{'script'}{'id'} = '0159';
d20 3
d25 9
a33 1
   q(0002) => [
d36 4
a39 1
   q(0003) => [
d42 1
a42 1
   q(0004) => [
d45 1
a45 1
   q(0005) => [
d48 1
a48 1
   q(0006) => [
d51 1
a51 1
   q(0007) => [
d54 1
a54 1
   q(0008) => [
d57 1
a57 1
   q(0009) => [
d60 1
a60 1
   q(0010) => [
d63 4
a66 1
   q(0011) => [
d69 1
a69 1
   q(0012) => [
d72 1
a72 1
   q(0013) => [
d75 1
a75 1
   q(0014) => [
d78 1
a78 1
   q(0015) => [
d81 1
a81 1
   q(0016) => [
d84 1
a84 1
   q(0017) => [
d87 1
a87 1
   q(0018) => [
d90 1
a90 1
   q(0019) => [
d93 1
a93 1
   q(0020) => [
d96 1
a96 1
   q(0021) => [
d99 1
a99 1
   q(0022) => [
d102 1
a102 1
   q(0023) => [
d105 1
a105 1
   q(0024) => [
d108 1
a108 1
   q(0025) => [
d111 1
a111 1
   q(0026) => [
d114 1
a114 1
   q(0027) => [
d119 1
a119 1
   q(0028) => [
d124 1
a124 1
   q(0029) => [
d129 1
a129 1
   q(0030) => [
d132 1
a132 1
   q(0031) => [
d135 1
a135 1
   q(0032) => [
d138 1
a138 1
   q(0033) => [
d141 1
a141 1
   q(0034) => [
d146 4
a149 1
   q(0035) => [
d152 1
a152 4
   q(0036) => [
      q(Khutsuri (Asomtavruli and Nuskhuri)),
      ],
   q(0037) => [
d155 1
a155 1
   q(0038) => [
d158 1
a158 1
   q(0039) => [
d161 1
a161 1
   q(0040) => [
d164 1
a164 1
   q(0041) => [
d167 1
a167 1
   q(0042) => [
d170 1
a170 1
   q(0043) => [
d175 1
a175 1
   q(0044) => [
d182 1
a182 1
   q(0045) => [
d186 1
a186 1
   q(0046) => [
d189 1
a189 1
   q(0047) => [
d192 4
a195 1
   q(0048) => [
d198 1
a198 1
   q(0049) => [
d201 1
a201 1
   q(0050) => [
d207 1
a207 1
   q(0051) => [
d210 1
a210 1
   q(0052) => [
d213 2
a214 1
   q(0053) => [
d216 1
d218 1
a218 1
   q(0054) => [
d223 1
a223 1
   q(0055) => [
d226 1
a226 1
   q(0056) => [
d229 1
a229 1
   q(0057) => [
d232 1
a232 1
   q(0058) => [
d235 1
a235 1
   q(0059) => [
d238 1
a238 1
   q(0060) => [
d241 1
a241 1
   q(0061) => [
d244 1
a244 1
   q(0062) => [
d247 1
a247 1
   q(0063) => [
d250 7
a256 1
   q(0064) => [
d259 1
a259 1
   q(0065) => [
d262 1
a262 1
   q(0066) => [
d265 1
a265 1
   q(0067) => [
d268 1
a268 1
   q(0068) => [
d273 1
a273 1
   q(0069) => [
d276 1
a276 1
   q(0070) => [
d279 1
a279 1
   q(0071) => [
d282 1
a282 1
   q(0072) => [
d285 4
a288 1
   q(0073) => [
d293 1
a293 1
   q(0074) => [
d296 1
a296 1
   q(0075) => [
d299 1
a299 1
   q(0076) => [
d302 1
a302 1
   q(0077) => [
d307 1
a307 1
   q(0078) => [
d310 1
a310 1
   q(0079) => [
d313 1
a313 1
   q(0080) => [
d316 4
a319 1
   q(0081) => [
d324 1
a324 1
   q(0082) => [
d327 4
a330 1
   q(0083) => [
d333 2
a334 2
   q(0084) => [
      q(Mende),
d336 1
a336 1
   q(0085) => [
d339 1
a339 1
   q(0086) => [
d342 1
a342 1
   q(0087) => [
d345 8
a352 1
   q(0088) => [
d359 1
a359 4
   q(0089) => [
      q(Mongolian),
      ],
   q(0090) => [
d364 1
a364 1
   q(0091) => [
d370 4
a373 1
   q(0092) => [
d378 1
a378 1
   q(0093) => [
d383 1
a383 1
   q(0094) => [
d386 1
a386 1
   q(0095) => [
d392 1
a392 1
   q(0096) => [
d395 1
a395 1
   q(0097) => [
d398 1
a398 1
   q(0098) => [
d401 1
a401 1
   q(0099) => [
d408 1
a408 1
   q(0100) => [
d413 1
a413 1
   q(0101) => [
d416 4
a419 1
   q(0102) => [
d422 1
a422 1
   q(0103) => [
d425 4
a428 1
   q(0104) => [
d431 1
a431 1
   q(0105) => [
d434 1
a434 1
   q(0106) => [
d437 1
a437 1
   q(0107) => [
d440 1
a440 1
   q(0108) => [
d443 1
a443 1
   q(0109) => [
d446 1
a446 1
   q(0110) => [
d451 1
a451 1
   q(0111) => [
d454 1
a454 1
   q(0112) => [
d457 1
a457 1
   q(0113) => [
d460 1
a460 1
   q(0114) => [
d466 1
a466 1
   q(0115) => [
d469 1
a469 1
   q(0116) => [
d472 1
a472 1
   q(0117) => [
d475 1
a475 1
   q(0118) => [
d478 1
a478 1
   q(0119) => [
d481 1
a481 1
   q(0120) => [
d484 1
a484 1
   q(0121) => [
d487 1
a487 1
   q(0122) => [
d492 1
a492 1
   q(0123) => [
d497 6
a502 1
   q(0124) => [
d507 1
a507 1
   q(0125) => [
d510 1
a510 1
   q(0126) => [
d513 1
a513 1
   q(0127) => [
d516 1
a516 1
   q(0128) => [
d519 1
a519 1
   q(0129) => [
d522 1
a522 1
   q(0130) => [
d525 1
a525 1
   q(0131) => [
d528 1
a528 1
   q(0132) => [
d531 1
a531 1
   q(0133) => [
d534 1
a534 1
   q(0134) => [
d539 1
a539 1
   q(0135) => [
d542 1
a542 1
   q(0136) => [
d545 1
a545 1
   q(0137) => [
d548 1
a548 1
   q(0138) => [
d551 1
a551 1
   q(0139) => [
d554 1
a554 1
   q(0140) => [
d557 1
a557 1
   q(0141) => [
d560 1
a560 1
   q(0142) => [
d565 1
a565 1
   q(0143) => [
d571 1
a571 1
   q(0144) => [
d574 1
a574 1
   q(0145) => [
d577 1
a577 1
   q(0146) => [
d580 1
a580 1
   q(0147) => [
d583 1
a583 1
   q(0148) => [
d586 1
a586 1
   q(0149) => [
d589 1
a589 1
   q(0150) => [
d592 1
a592 1
   q(0151) => [
d597 1
a597 1
   q(0152) => [
d600 1
a600 1
   q(0153) => [
d603 1
a603 1
   q(0154) => [
d607 1
a607 1
   q(0155) => [
d610 1
a610 1
   q(0156) => [
d613 1
a613 1
   q(0157) => [
d616 1
a616 1
   q(0158) => [
d623 1
a623 1
      q(0095),
d626 4
d631 9
a639 1
      q(0001),
d643 1
a643 1
      q(0143),
d647 1
a647 1
      q(0050),
d651 1
a651 1
      q(0050),
d655 1
a655 1
      q(0093),
d659 5
a663 1
      q(0002),
d667 1
a667 1
      q(0004),
d671 1
a671 1
      q(0005),
d675 1
a675 1
      q(0006),
d679 1
a679 1
      q(0007),
d683 1
a683 1
      q(0008),
d687 1
a687 1
      q(0009),
d691 1
a691 1
      q(0143),
d695 1
a695 1
      q(0010),
d699 1
a699 1
      q(0142),
d702 4
d707 1
a707 1
      q(0011),
d711 1
a711 1
      q(0108),
d715 1
a715 1
      q(0012),
d719 1
a719 1
      q(0013),
d723 1
a723 1
      q(0014),
d727 1
a727 1
      q(0015),
d731 1
a731 1
      q(0016),
d735 1
a735 1
      q(0092),
d739 5
a743 1
      q(0019),
d747 1
a747 1
      q(0017),
d751 1
a751 1
      q(0020),
d755 1
a755 1
      q(0021),
d759 1
a759 1
      q(0022),
d763 1
a763 1
      q(0156),
d767 1
a767 1
      q(0023),
d771 1
a771 1
      q(0154),
d775 1
a775 1
      q(0024),
d779 1
a779 1
      q(0025),
d783 1
a783 1
      q(0026),
d787 1
a787 1
      q(0028),
d791 1
a791 1
      q(0028),
d795 1
a795 1
      q(0027),
d799 1
a799 1
      q(0027),
d803 1
a803 1
      q(0029),
d807 1
a807 1
      q(0029),
d811 1
a811 1
      q(0029),
d815 1
a815 1
      q(0030),
d819 1
a819 1
      q(0031),
d823 1
a823 1
      q(0032),
d827 1
a827 1
      q(0033),
d831 1
a831 1
      q(0034),
d835 1
a835 1
      q(0034),
d839 1
a839 1
      q(0077),
d843 1
a843 1
      q(0034),
d847 1
a847 1
      q(0035),
d851 1
a851 1
      q(0037),
d855 1
a855 1
      q(0038),
d859 1
a859 1
      q(0039),
d863 1
a863 1
      q(0040),
d867 1
a867 1
      q(0041),
d871 1
a871 1
      q(0042),
d875 1
a875 1
      q(0044),
d879 1
a879 1
      q(0044),
d883 1
a883 1
      q(0046),
d887 1
a887 1
      q(0047),
d891 1
a891 1
      q(0043),
d895 1
a895 1
      q(0043),
d899 1
a899 1
      q(0043),
d903 1
a903 1
      q(0044),
d907 1
a907 1
      q(0045),
d911 1
a911 1
      q(0045),
d915 1
a915 1
      q(0044),
d919 1
a919 1
      q(0054),
d922 4
d927 1
a927 1
      q(0048),
d931 1
a931 1
      q(0049),
d935 1
a935 1
      q(0050),
d938 4
d943 1
a943 1
      q(0003),
d947 1
a947 1
      q(0054),
d951 1
a951 1
      q(0054),
d955 1
a955 1
      q(0106),
d959 1
a959 1
      q(0111),
d963 1
a963 1
      q(0057),
d967 1
a967 1
      q(0052),
d971 1
a971 1
      q(0056),
d975 1
a975 1
      q(0058),
d979 1
a979 1
      q(0114),
d983 1
a983 1
      q(0067),
d987 1
a987 1
      q(0044),
d991 1
a991 1
      q(0064),
d995 1
a995 1
      q(0060),
d999 1
a999 1
      q(0059),
d1003 9
a1011 1
      q(0061),
d1015 1
a1015 1
      q(0062),
d1019 1
a1019 1
      q(0063),
d1023 1
a1023 1
      q(0124),
d1027 1
a1027 1
      q(0124),
d1031 1
a1031 1
      q(0036),
d1035 1
a1035 1
      q(0065),
d1039 1
a1039 1
      q(0066),
d1043 1
a1043 1
      q(0068),
d1047 1
a1047 1
      q(0069),
d1051 1
a1051 1
      q(0072),
d1055 1
a1055 1
      q(0070),
d1059 5
a1063 1
      q(0071),
d1067 1
a1067 1
      q(0073),
d1071 1
a1071 1
      q(0073),
d1075 1
a1075 1
      q(0074),
d1079 1
a1079 1
      q(0075),
d1083 1
a1083 1
      q(0076),
d1087 1
a1087 1
      q(0077),
d1091 1
a1091 1
      q(0077),
d1095 1
a1095 1
      q(0078),
d1099 1
a1099 1
      q(0050),
d1103 1
a1103 1
      q(0079),
d1107 5
a1111 1
      q(0080),
d1115 1
a1115 1
      q(0087),
d1119 1
a1119 1
      q(0081),
d1123 1
a1123 1
      q(0081),
d1127 1
a1127 1
      q(0081),
d1131 5
a1135 1
      q(0082),
d1139 1
a1139 1
      q(0157),
d1143 1
a1143 1
      q(0083),
d1147 1
a1147 1
      q(0091),
d1151 1
a1151 1
      q(0091),
d1155 1
a1155 1
      q(0091),
d1159 1
a1159 1
      q(0091),
d1162 2
a1163 2
   q(mende) => [
      q(0084),
d1167 1
a1167 1
      q(0085),
d1171 1
a1171 1
      q(0086),
d1175 1
a1175 1
      q(0110),
d1179 9
a1187 1
      q(0110),
d1191 1
a1191 1
      q(0089),
d1195 1
a1195 1
      q(0088),
d1199 1
a1199 1
      q(0088),
d1203 1
a1203 1
      q(0088),
d1207 1
a1207 1
      q(0088),
d1211 1
a1211 1
      q(0088),
d1215 1
a1215 1
      q(0028),
d1219 1
a1219 1
      q(0090),
d1223 1
a1223 1
      q(0090),
d1227 1
a1227 1
      q(0090),
d1230 4
d1235 1
a1235 1
      q(0092),
d1239 1
a1239 1
      q(0092),
d1243 1
a1243 1
      q(0096),
d1247 1
a1247 1
      q(0094),
d1251 1
a1251 1
      q(0027),
d1255 1
a1255 1
      q(0095),
d1259 1
a1259 1
      q(0095),
d1263 1
a1263 1
      q(0095),
d1267 1
a1267 1
      q(0136),
d1271 1
a1271 1
      q(0097),
d1275 1
a1275 1
      q(0098),
d1279 1
a1279 1
      q(0099),
d1283 1
a1283 1
      q(0099),
d1287 1
a1287 1
      q(0099),
d1291 1
a1291 1
      q(0099),
d1295 5
a1299 1
      q(0053),
d1303 1
a1303 1
      q(0055),
d1307 1
a1307 1
      q(0093),
d1311 1
a1311 1
      q(0093),
d1315 1
a1315 1
      q(0104),
d1319 1
a1319 1
      q(0153),
d1323 1
a1323 1
      q(0119),
d1327 1
a1327 1
      q(0100),
d1331 1
a1331 1
      q(0100),
d1335 1
a1335 1
      q(0101),
d1339 1
a1339 1
      q(0100),
d1342 4
d1347 1
a1347 1
      q(0102),
d1351 1
a1351 1
      q(0051),
d1355 5
a1359 1
      q(0103),
d1363 1
a1363 1
      q(0105),
d1367 1
a1367 1
      q(0109),
d1371 1
a1371 1
      q(0110),
d1375 1
a1375 1
      q(0107),
d1379 1
a1379 1
      q(0114),
d1383 1
a1383 1
      q(0114),
d1387 1
a1387 1
      q(0114),
d1391 1
a1391 1
      q(0113),
d1395 1
a1395 1
      q(0112),
d1399 1
a1399 1
      q(0073),
d1403 1
a1403 1
      q(0115),
d1407 1
a1407 1
      q(0116),
d1411 1
a1411 1
      q(0117),
d1415 1
a1415 1
      q(0099),
d1419 1
a1419 1
      q(0123),
d1423 1
a1423 1
      q(0118),
d1427 1
a1427 1
      q(0120),
d1431 1
a1431 1
      q(0123),
d1435 1
a1435 1
      q(0123),
d1439 1
a1439 1
      q(0122),
d1443 1
a1443 1
      q(0122),
d1447 13
a1459 1
      q(0122),
d1463 1
a1463 1
      q(0121),
d1467 1
a1467 1
      q(0124),
d1471 1
a1471 1
      q(0125),
d1475 1
a1475 1
      q(0126),
d1479 1
a1479 1
      q(0154),
d1483 1
a1483 1
      q(0127),
d1487 1
a1487 1
      q(0128),
d1491 1
a1491 1
      q(0158),
d1495 1
a1495 1
      q(0129),
d1499 1
a1499 1
      q(0132),
d1503 1
a1503 1
      q(0130),
d1507 1
a1507 1
      q(0131),
d1511 1
a1511 1
      q(0143),
d1515 1
a1515 1
      q(0143),
d1519 1
a1519 1
      q(0133),
d1522 4
d1527 1
a1527 1
      q(0135),
d1531 1
a1531 1
      q(0068),
d1535 1
a1535 1
      q(0068),
d1539 1
a1539 1
      q(0139),
d1543 1
a1543 1
      q(0134),
d1547 1
a1547 1
      q(0134),
d1551 1
a1551 1
      q(0137),
d1555 1
a1555 1
      q(0138),
d1559 1
a1559 1
      q(0134),
d1563 1
a1563 1
      q(0140),
d1567 1
a1567 1
      q(0141),
d1571 1
a1571 1
      q(0144),
d1575 1
a1575 1
      q(0145),
d1579 1
a1579 1
      q(0146),
d1583 1
a1583 1
      q(0142),
d1587 1
a1587 1
      q(0142),
d1591 1
a1591 1
      q(0147),
d1595 1
a1595 1
      q(0148),
d1599 1
a1599 1
      q(0018),
d1603 1
a1603 1
      q(0149),
d1607 1
a1607 1
      q(0151),
d1611 1
a1611 1
      q(0150),
d1615 1
a1615 1
      q(0151),
d1619 1
a1619 1
      q(0151),
d1623 1
a1623 1
      q(0152),
d1627 1
a1627 1
      q(0155),
d1634 4
d1639 5
a1643 1
         q(0001),
d1646 4
d1651 5
a1655 1
         q(0002),
d1659 1
a1659 1
         q(0003),
d1663 1
a1663 1
         q(0004),
d1667 1
a1667 1
         q(0005),
d1671 1
a1671 1
         q(0006),
d1675 1
a1675 1
         q(0007),
d1679 1
a1679 1
         q(0008),
d1683 1
a1683 1
         q(0009),
d1687 5
a1691 1
         q(0010),
d1695 1
a1695 1
         q(0011),
d1699 1
a1699 1
         q(0012),
d1703 1
a1703 1
         q(0013),
d1707 1
a1707 1
         q(0014),
d1711 1
a1711 1
         q(0015),
d1715 1
a1715 1
         q(0016),
d1719 1
a1719 1
         q(0017),
d1723 1
a1723 1
         q(0018),
d1727 1
a1727 1
         q(0019),
d1731 1
a1731 1
         q(0020),
d1735 1
a1735 1
         q(0021),
d1739 1
a1739 1
         q(0022),
d1743 1
a1743 1
         q(0023),
d1747 1
a1747 1
         q(0024),
d1751 1
a1751 1
         q(0025),
d1755 1
a1755 1
         q(0026),
d1759 1
a1759 1
         q(0027),
d1763 1
a1763 1
         q(0028),
d1767 1
a1767 1
         q(0029),
d1771 1
a1771 1
         q(0030),
d1775 1
a1775 1
         q(0031),
d1779 1
a1779 1
         q(0032),
d1783 1
a1783 1
         q(0033),
d1787 1
a1787 1
         q(0034),
d1791 1
a1791 1
         q(0036),
d1795 1
a1795 1
         q(0035),
d1799 1
a1799 1
         q(0037),
d1803 1
a1803 1
         q(0038),
d1807 1
a1807 1
         q(0039),
d1811 1
a1811 1
         q(0040),
d1815 1
a1815 1
         q(0041),
d1819 1
a1819 1
         q(0042),
d1823 1
a1823 1
         q(0043),
d1827 1
a1827 1
         q(0044),
d1831 1
a1831 1
         q(0045),
d1835 1
a1835 1
         q(0046),
d1839 5
a1843 1
         q(0047),
d1847 1
a1847 1
         q(0048),
d1851 1
a1851 1
         q(0049),
d1855 1
a1855 1
         q(0050),
d1859 1
a1859 1
         q(0051),
d1863 1
a1863 1
         q(0052),
d1867 2
a1868 2
         q(0053),
         q(0),
d1871 1
a1871 1
         q(0054),
d1875 1
a1875 1
         q(0055),
d1879 1
a1879 1
         q(0056),
d1883 1
a1883 1
         q(0057),
d1887 1
a1887 1
         q(0058),
d1891 1
a1891 1
         q(0059),
d1895 1
a1895 1
         q(0060),
d1899 1
a1899 1
         q(0061),
d1903 1
a1903 1
         q(0062),
d1907 9
a1915 1
         q(0063),
d1919 1
a1919 1
         q(0064),
d1923 1
a1923 1
         q(0065),
d1927 1
a1927 1
         q(0066),
d1931 1
a1931 1
         q(0067),
d1935 1
a1935 1
         q(0068),
d1939 1
a1939 1
         q(0069),
d1943 1
a1943 1
         q(0070),
d1947 1
a1947 1
         q(0071),
d1951 5
a1955 1
         q(0072),
d1959 1
a1959 1
         q(0073),
d1963 1
a1963 1
         q(0074),
d1967 1
a1967 1
         q(0075),
d1971 1
a1971 1
         q(0076),
d1975 1
a1975 1
         q(0077),
d1979 1
a1979 1
         q(0078),
d1983 1
a1983 1
         q(0079),
d1987 5
a1991 1
         q(0080),
d1995 1
a1995 1
         q(0081),
d1999 5
a2003 1
         q(0082),
d2007 1
a2007 1
         q(0083),
d2011 1
a2011 1
         q(0084),
d2015 1
a2015 1
         q(0085),
d2019 1
a2019 1
         q(0086),
d2023 1
a2023 1
         q(0087),
d2026 4
d2031 1
a2031 1
         q(0089),
d2035 1
a2035 1
         q(0088),
d2039 1
a2039 1
         q(0090),
d2043 1
a2043 1
         q(0091),
d2046 4
d2051 1
a2051 1
         q(0092),
d2055 1
a2055 1
         q(0093),
d2059 1
a2059 1
         q(0094),
d2063 1
a2063 1
         q(0095),
d2067 1
a2067 1
         q(0096),
d2071 1
a2071 1
         q(0097),
d2075 1
a2075 1
         q(0098),
d2079 1
a2079 1
         q(0099),
d2083 1
a2083 1
         q(0100),
d2087 5
a2091 1
         q(0101),
d2095 1
a2095 1
         q(0102),
d2099 5
a2103 1
         q(0103),
d2107 1
a2107 1
         q(0104),
d2111 1
a2111 1
         q(0105),
d2115 1
a2115 1
         q(0106),
d2119 1
a2119 1
         q(0107),
d2123 1
a2123 1
         q(0108),
d2127 1
a2127 1
         q(0109),
d2131 1
a2131 1
         q(0110),
d2135 1
a2135 1
         q(0111),
d2139 1
a2139 1
         q(0112),
d2143 1
a2143 1
         q(0113),
d2147 1
a2147 1
         q(0114),
d2151 1
a2151 1
         q(0115),
d2155 1
a2155 1
         q(0116),
d2159 1
a2159 1
         q(0117),
d2163 1
a2163 1
         q(0118),
d2167 1
a2167 1
         q(0119),
d2171 1
a2171 1
         q(0120),
d2175 1
a2175 1
         q(0121),
d2179 1
a2179 1
         q(0122),
d2183 5
a2187 1
         q(0123),
d2191 1
a2191 1
         q(0124),
d2195 1
a2195 1
         q(0125),
d2199 1
a2199 1
         q(0126),
d2203 1
a2203 1
         q(0127),
d2207 1
a2207 1
         q(0128),
d2211 1
a2211 1
         q(0129),
d2215 1
a2215 1
         q(0130),
d2219 1
a2219 1
         q(0131),
d2223 1
a2223 1
         q(0132),
d2227 1
a2227 1
         q(0133),
d2231 1
a2231 1
         q(0134),
d2235 1
a2235 1
         q(0135),
d2239 1
a2239 1
         q(0136),
d2243 1
a2243 1
         q(0137),
d2247 1
a2247 1
         q(0138),
d2251 1
a2251 1
         q(0139),
d2255 1
a2255 1
         q(0140),
d2259 1
a2259 1
         q(0141),
d2263 1
a2263 1
         q(0142),
d2267 1
a2267 1
         q(0143),
d2271 1
a2271 1
         q(0144),
d2275 1
a2275 1
         q(0145),
d2279 1
a2279 1
         q(0146),
d2283 1
a2283 1
         q(0147),
d2287 1
a2287 1
         q(0148),
d2291 1
a2291 1
         q(0149),
d2295 1
a2295 1
         q(0150),
d2299 1
a2299 1
         q(0151),
d2303 1
a2303 1
         q(0152),
d2307 1
a2307 1
         q(0153),
d2311 1
a2311 1
         q(0154),
d2315 1
a2315 1
         q(0155),
d2319 1
a2319 1
         q(0156),
d2323 1
a2323 1
         q(0157),
d2327 1
a2327 1
         q(0158),
d2333 1
a2333 1
         q(0154),
d2337 1
a2337 1
         q(0153),
d2341 1
a2341 1
         q(0148),
d2345 1
a2345 1
         q(0032),
d2349 1
a2349 1
         q(0031),
d2353 1
a2353 1
         q(0030),
d2357 1
a2357 1
         q(0050),
d2361 1
a2361 1
         q(0083),
d2365 1
a2365 1
         q(0121),
d2369 1
a2369 1
         q(0086),
d2373 1
a2373 1
         q(0085),
d2377 1
a2377 1
         q(0119),
d2381 1
a2381 1
         q(0093),
d2385 1
a2385 1
         q(0109),
d2389 1
a2389 1
         q(0080),
d2393 1
a2393 1
         q(0142),
d2397 1
a2397 1
         q(0117),
d2401 1
a2401 1
         q(0003),
d2405 1
a2405 1
         q(0048),
d2409 5
a2413 1
         q(0103),
d2417 1
a2417 1
         q(0111),
d2421 1
a2421 1
         q(0106),
d2425 1
a2425 1
         q(0107),
d2429 1
a2429 1
         q(0108),
d2433 1
a2433 1
         q(0005),
d2437 1
a2437 1
         q(0129),
d2441 1
a2441 1
         q(0132),
d2445 1
a2445 1
         q(0131),
d2449 1
a2449 1
         q(0130),
d2453 1
a2453 1
         q(0082),
d2457 1
a2457 1
         q(0081),
d2461 1
a2461 1
         q(0089),
d2465 1
a2465 1
         q(0094),
d2469 5
a2473 1
         q(0002),
d2477 5
a2481 1
         q(0096),
d2485 1
a2485 1
         q(0144),
d2489 1
a2489 1
         q(0100),
d2493 1
a2493 1
         q(0053),
d2497 1
a2497 1
         q(0090),
d2501 1
a2501 1
         q(0040),
d2505 1
a2505 1
         q(0019),
d2509 1
a2509 1
         q(0079),
d2513 1
a2513 1
         q(0023),
d2517 1
a2517 1
         q(0038),
d2521 1
a2521 1
         q(0055),
d2525 1
a2525 1
         q(0116),
d2529 1
a2529 1
         q(0098),
d2533 1
a2533 1
         q(0072),
d2537 1
a2537 1
         q(0071),
d2541 1
a2541 1
         q(0070),
d2545 5
a2549 1
         q(0088),
d2553 1
a2553 1
         q(0025),
d2557 1
a2557 1
         q(0026),
d2561 1
a2561 1
         q(0037),
d2565 1
a2565 1
         q(0033),
d2569 1
a2569 1
         q(0104),
d2573 5
a2577 1
         q(0004),
d2581 1
a2581 1
         q(0035),
d2585 1
a2585 1
         q(0036),
d2589 1
a2589 1
         q(0028),
d2593 1
a2593 1
         q(0008),
d2597 1
a2597 1
         q(0102),
d2601 1
a2601 1
         q(0099),
d2605 5
a2609 1
         q(0151),
d2613 1
a2613 1
         q(0150),
d2617 1
a2617 1
         q(0122),
d2621 1
a2621 1
         q(0110),
d2625 1
a2625 1
         q(0012),
d2629 1
a2629 1
         q(0043),
d2633 5
a2637 1
         q(0065),
d2641 1
a2641 1
         q(0141),
d2645 1
a2645 1
         q(0022),
d2649 1
a2649 1
         q(0118),
d2653 5
a2657 1
         q(0013),
d2661 1
a2661 1
         q(0061),
d2665 5
a2669 1
         q(0042),
d2673 1
a2673 1
         q(0027),
d2677 1
a2677 1
         q(0128),
d2681 1
a2681 1
         q(0067),
d2685 1
a2685 1
         q(0124),
d2689 1
a2689 1
         q(0123),
d2693 1
a2693 1
         q(0041),
d2697 1
a2697 1
         q(0134),
d2701 9
a2709 1
         q(0063),
d2713 1
a2713 1
         q(0010),
d2717 1
a2717 1
         q(0147),
d2721 1
a2721 1
         q(0101),
d2725 1
a2725 1
         q(0146),
d2729 9
a2737 1
         q(0105),
d2741 1
a2741 1
         q(0073),
d2745 1
a2745 1
         q(0074),
d2749 5
a2753 1
         q(0091),
d2757 1
a2757 1
         q(0140),
d2761 1
a2761 1
         q(0039),
d2765 1
a2765 1
         q(0120),
d2769 1
a2769 1
         q(0064),
d2773 1
a2773 1
         q(0137),
d2777 1
a2777 1
         q(0087),
d2781 1
a2781 1
         q(0125),
d2785 1
a2785 1
         q(0017),
d2789 1
a2789 1
         q(0092),
d2793 1
a2793 1
         q(0068),
d2797 1
a2797 1
         q(0145),
d2801 1
a2801 1
         q(0135),
d2805 1
a2805 1
         q(0136),
d2809 1
a2809 1
         q(0062),
d2813 1
a2813 1
         q(0069),
d2817 1
a2817 1
         q(0059),
d2821 1
a2821 1
         q(0020),
d2825 1
a2825 1
         q(0139),
d2829 1
a2829 1
         q(0006),
d2833 1
a2833 1
         q(0056),
d2837 1
a2837 1
         q(0127),
d2841 5
a2845 1
         q(0114),
d2849 1
a2849 1
         q(0009),
d2853 1
a2853 1
         q(0015),
d2857 1
a2857 1
         q(0143),
d2861 1
a2861 1
         q(0045),
d2865 1
a2865 1
         q(0016),
d2869 1
a2869 1
         q(0133),
d2873 1
a2873 1
         q(0126),
d2877 1
a2877 1
         q(0077),
d2881 1
a2881 1
         q(0075),
d2885 1
a2885 1
         q(0076),
d2889 1
a2889 1
         q(0024),
d2893 1
a2893 1
         q(0049),
d2897 1
a2897 1
         q(0060),
d2901 1
a2901 1
         q(0052),
d2905 1
a2905 1
         q(0057),
d2909 1
a2909 1
         q(0095),
d2913 1
a2913 1
         q(0034),
d2917 1
a2917 1
         q(0007),
d2921 1
a2921 1
         q(0066),
d2925 1
a2925 1
         q(0078),
d2929 1
a2929 1
         q(0084),
d2933 1
a2933 1
         q(0001),
d2937 1
a2937 1
         q(0018),
d2941 1
a2941 1
         q(0021),
d2945 1
a2945 1
         q(0051),
d2949 1
a2949 1
         q(0155),
d2953 1
a2953 1
         q(0149),
d2957 1
a2957 1
         q(0152),
d2961 1
a2961 1
         q(0097),
d2965 1
a2965 1
         q(0044),
d2969 1
a2969 1
         q(0046),
d2973 5
a2977 1
         q(0047),
d2981 1
a2981 1
         q(0058),
d2985 1
a2985 1
         q(0138),
d2989 1
a2989 1
         q(0011),
d2993 1
a2993 1
         q(0014),
d2997 1
a2997 1
         q(0054),
d3001 1
a3001 1
         q(0115),
d3005 1
a3005 1
         q(0029),
d3009 1
a3009 1
         q(0112),
d3013 1
a3013 1
         q(0113),
d3017 1
a3017 1
         q(0156),
d3021 1
a3021 1
         q(0157),
d3025 1
a3025 1
         q(0158),
d3033 174
a3206 158
      q(0001) => q(Afak),
      q(0002) => q(Arab),
      q(0003) => q(Armi),
      q(0004) => q(Armn),
      q(0005) => q(Avst),
      q(0006) => q(Bali),
      q(0007) => q(Bamu),
      q(0008) => q(Bass),
      q(0009) => q(Batk),
      q(0010) => q(Beng),
      q(0011) => q(Blis),
      q(0012) => q(Bopo),
      q(0013) => q(Brah),
      q(0014) => q(Brai),
      q(0015) => q(Bugi),
      q(0016) => q(Buhd),
      q(0017) => q(Cakm),
      q(0018) => q(Cans),
      q(0019) => q(Cari),
      q(0020) => q(Cham),
      q(0021) => q(Cher),
      q(0022) => q(Cirt),
      q(0023) => q(Copt),
      q(0024) => q(Cprt),
      q(0025) => q(Cyrl),
      q(0026) => q(Cyrs),
      q(0027) => q(Deva),
      q(0028) => q(Dsrt),
      q(0029) => q(Dupl),
      q(0030) => q(Egyd),
      q(0031) => q(Egyh),
      q(0032) => q(Egyp),
      q(0033) => q(Elba),
      q(0034) => q(Ethi),
      q(0035) => q(Geor),
      q(0036) => q(Geok),
      q(0037) => q(Glag),
      q(0038) => q(Goth),
      q(0039) => q(Gran),
      q(0040) => q(Grek),
      q(0041) => q(Gujr),
      q(0042) => q(Guru),
      q(0043) => q(Hang),
      q(0044) => q(Hani),
      q(0045) => q(Hano),
      q(0046) => q(Hans),
      q(0047) => q(Hant),
      q(0048) => q(Hebr),
      q(0049) => q(Hira),
      q(0050) => q(Hluw),
      q(0051) => q(Hmng),
      q(0052) => q(Hrkt),
      q(0053) => q(Hung),
      q(0054) => q(Inds),
      q(0055) => q(Ital),
      q(0056) => q(Java),
      q(0057) => q(Jpan),
      q(0058) => q(Jurc),
      q(0059) => q(Kali),
      q(0060) => q(Kana),
      q(0061) => q(Khar),
      q(0062) => q(Khmr),
      q(0063) => q(Khoj),
      q(0064) => q(Knda),
      q(0065) => q(Kore),
      q(0066) => q(Kpel),
      q(0067) => q(Kthi),
      q(0068) => q(Lana),
      q(0069) => q(Laoo),
      q(0070) => q(Latf),
      q(0071) => q(Latg),
      q(0072) => q(Latn),
      q(0073) => q(Lepc),
      q(0074) => q(Limb),
      q(0075) => q(Lina),
      q(0076) => q(Linb),
      q(0077) => q(Lisu),
      q(0078) => q(Loma),
      q(0079) => q(Lyci),
      q(0080) => q(Lydi),
      q(0081) => q(Mand),
      q(0082) => q(Mani),
      q(0083) => q(Maya),
      q(0084) => q(Mend),
      q(0085) => q(Merc),
      q(0086) => q(Mero),
      q(0087) => q(Mlym),
      q(0088) => q(Moon),
      q(0089) => q(Mong),
      q(0090) => q(Mroo),
      q(0091) => q(Mtei),
      q(0092) => q(Mymr),
      q(0093) => q(Narb),
      q(0094) => q(Nbat),
      q(0095) => q(Nkgb),
      q(0096) => q(Nkoo),
      q(0097) => q(Nshu),
      q(0098) => q(Ogam),
      q(0099) => q(Olck),
      q(0100) => q(Orkh),
      q(0101) => q(Orya),
      q(0102) => q(Osma),
      q(0103) => q(Palm),
      q(0104) => q(Perm),
      q(0105) => q(Phag),
      q(0106) => q(Phli),
      q(0107) => q(Phlp),
      q(0108) => q(Phlv),
      q(0109) => q(Phnx),
      q(0110) => q(Plrd),
      q(0111) => q(Prti),
      q(0112) => q(Qaaa),
      q(0113) => q(Qabx),
      q(0114) => q(Rjng),
      q(0115) => q(Roro),
      q(0116) => q(Runr),
      q(0117) => q(Samr),
      q(0118) => q(Sara),
      q(0119) => q(Sarb),
      q(0120) => q(Saur),
      q(0121) => q(Sgnw),
      q(0122) => q(Shaw),
      q(0123) => q(Shrd),
      q(0124) => q(Sind),
      q(0125) => q(Sinh),
      q(0126) => q(Sora),
      q(0127) => q(Sund),
      q(0128) => q(Sylo),
      q(0129) => q(Syrc),
      q(0130) => q(Syre),
      q(0131) => q(Syrj),
      q(0132) => q(Syrn),
      q(0133) => q(Tagb),
      q(0134) => q(Takr),
      q(0135) => q(Tale),
      q(0136) => q(Talu),
      q(0137) => q(Taml),
      q(0138) => q(Tang),
      q(0139) => q(Tavt),
      q(0140) => q(Telu),
      q(0141) => q(Teng),
      q(0142) => q(Tfng),
      q(0143) => q(Tglg),
      q(0144) => q(Thaa),
      q(0145) => q(Thai),
      q(0146) => q(Tibt),
      q(0147) => q(Tirh),
      q(0148) => q(Ugar),
      q(0149) => q(Vaii),
      q(0150) => q(Visp),
      q(0151) => q(Wara),
      q(0152) => q(Wole),
      q(0153) => q(Xpeo),
      q(0154) => q(Xsux),
      q(0155) => q(Yiii),
      q(0156) => q(Zinh),
      q(0157) => q(Zmth),
      q(0158) => q(Zsym),
d3209 174
a3382 158
      q(0001) => q(439),
      q(0002) => q(160),
      q(0003) => q(124),
      q(0004) => q(230),
      q(0005) => q(134),
      q(0006) => q(360),
      q(0007) => q(435),
      q(0008) => q(259),
      q(0009) => q(365),
      q(0010) => q(325),
      q(0011) => q(550),
      q(0012) => q(285),
      q(0013) => q(300),
      q(0014) => q(570),
      q(0015) => q(367),
      q(0016) => q(372),
      q(0017) => q(349),
      q(0018) => q(440),
      q(0019) => q(201),
      q(0020) => q(358),
      q(0021) => q(445),
      q(0022) => q(291),
      q(0023) => q(204),
      q(0024) => q(403),
      q(0025) => q(220),
      q(0026) => q(221),
      q(0027) => q(315),
      q(0028) => q(250),
      q(0029) => q(755),
      q(0030) => q(070),
      q(0031) => q(060),
      q(0032) => q(050),
      q(0033) => q(226),
      q(0034) => q(430),
      q(0035) => q(240),
      q(0036) => q(241),
      q(0037) => q(225),
      q(0038) => q(206),
      q(0039) => q(343),
      q(0040) => q(200),
      q(0041) => q(320),
      q(0042) => q(310),
      q(0043) => q(286),
      q(0044) => q(500),
      q(0045) => q(371),
      q(0046) => q(501),
      q(0047) => q(502),
      q(0048) => q(125),
      q(0049) => q(410),
      q(0050) => q(080),
      q(0051) => q(450),
      q(0052) => q(412),
      q(0053) => q(176),
      q(0054) => q(610),
      q(0055) => q(210),
      q(0056) => q(361),
      q(0057) => q(413),
      q(0058) => q(510),
      q(0059) => q(357),
      q(0060) => q(411),
      q(0061) => q(305),
      q(0062) => q(355),
      q(0063) => q(322),
      q(0064) => q(345),
      q(0065) => q(287),
      q(0066) => q(436),
      q(0067) => q(317),
      q(0068) => q(351),
      q(0069) => q(356),
      q(0070) => q(217),
      q(0071) => q(216),
      q(0072) => q(215),
      q(0073) => q(335),
      q(0074) => q(336),
      q(0075) => q(400),
      q(0076) => q(401),
      q(0077) => q(399),
      q(0078) => q(437),
      q(0079) => q(202),
      q(0080) => q(116),
      q(0081) => q(140),
      q(0082) => q(139),
      q(0083) => q(090),
      q(0084) => q(438),
      q(0085) => q(101),
      q(0086) => q(100),
      q(0087) => q(347),
      q(0088) => q(218),
      q(0089) => q(145),
      q(0090) => q(199),
      q(0091) => q(337),
      q(0092) => q(350),
      q(0093) => q(106),
      q(0094) => q(159),
      q(0095) => q(420),
      q(0096) => q(165),
      q(0097) => q(499),
      q(0098) => q(212),
      q(0099) => q(261),
      q(0100) => q(175),
      q(0101) => q(327),
      q(0102) => q(260),
      q(0103) => q(126),
      q(0104) => q(227),
      q(0105) => q(331),
      q(0106) => q(131),
      q(0107) => q(132),
      q(0108) => q(133),
      q(0109) => q(115),
      q(0110) => q(282),
      q(0111) => q(130),
      q(0112) => q(900),
      q(0113) => q(949),
      q(0114) => q(363),
      q(0115) => q(620),
      q(0116) => q(211),
      q(0117) => q(123),
      q(0118) => q(292),
      q(0119) => q(105),
      q(0120) => q(344),
      q(0121) => q(095),
      q(0122) => q(281),
      q(0123) => q(319),
      q(0124) => q(318),
      q(0125) => q(348),
      q(0126) => q(398),
      q(0127) => q(362),
      q(0128) => q(316),
      q(0129) => q(135),
      q(0130) => q(138),
      q(0131) => q(137),
      q(0132) => q(136),
      q(0133) => q(373),
      q(0134) => q(321),
      q(0135) => q(353),
      q(0136) => q(354),
      q(0137) => q(346),
      q(0138) => q(520),
      q(0139) => q(359),
      q(0140) => q(340),
      q(0141) => q(290),
      q(0142) => q(120),
      q(0143) => q(370),
      q(0144) => q(170),
      q(0145) => q(352),
      q(0146) => q(330),
      q(0147) => q(326),
      q(0148) => q(040),
      q(0149) => q(470),
      q(0150) => q(280),
      q(0151) => q(262),
      q(0152) => q(480),
      q(0153) => q(030),
      q(0154) => q(020),
      q(0155) => q(460),
      q(0156) => q(994),
      q(0157) => q(995),
      q(0158) => q(996),
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d5 1
a5 1
#    Generated on: Wed Feb 27 10:04:29 EST 2013
d28 1
a28 1
   Copyright (c) 2010-2013 Sullivan Beck
a35 1
require 5.006;
d37 1
a37 1
use utf8;
d40 1
a40 1
$VERSION='3.25';
d42 1
a42 1
$Locale::Codes::Data{'script'}{'id'} = '0161';
d49 1
a49 1
      q(Caucasian Albanian),
d52 1
a52 1
      q(Arabic),
d55 1
a55 1
      q(Imperial Aramaic),
d58 1
a58 1
      q(Armenian),
d61 1
a61 1
      q(Avestan),
d64 1
a64 1
      q(Balinese),
d67 1
a67 1
      q(Bamum),
d70 1
a70 1
      q(Bassa Vah),
d73 1
a73 1
      q(Batak),
d76 1
a76 1
      q(Bengali),
d79 1
a79 1
      q(Blissymbols),
d82 1
a82 1
      q(Bopomofo),
d85 1
a85 1
      q(Brahmi),
d88 1
a88 1
      q(Braille),
d91 1
a91 1
      q(Buginese),
d94 1
a94 1
      q(Buhid),
d97 1
a97 1
      q(Chakma),
d100 1
a100 1
      q(Unified Canadian Aboriginal Syllabics),
d103 1
a103 1
      q(Carian),
d106 1
a106 1
      q(Cham),
d109 1
a109 1
      q(Cherokee),
d112 1
a112 1
      q(Cirth),
d115 1
a115 1
      q(Coptic),
d118 1
a118 1
      q(Cypriot),
d121 1
a121 1
      q(Cyrillic),
a123 3
      q(Cyrillic (Old Church Slavonic variant)),
      ],
   q(0028) => [
d128 1
a128 1
   q(0029) => [
d133 1
a133 1
   q(0030) => [
d138 1
a138 1
   q(0031) => [
d141 1
a141 1
   q(0032) => [
d144 1
a144 1
   q(0033) => [
d147 1
a147 1
   q(0034) => [
d150 1
a150 1
   q(0035) => [
d155 1
a155 1
   q(0036) => [
d158 1
a158 1
   q(0037) => [
d161 1
a161 1
   q(0038) => [
d164 1
a164 1
   q(0039) => [
d167 1
a167 1
   q(0040) => [
d170 1
a170 1
   q(0041) => [
d173 1
a173 1
   q(0042) => [
d176 1
a176 1
   q(0043) => [
d179 1
a179 1
   q(0044) => [
d184 1
a184 1
   q(0045) => [
d191 1
a191 1
   q(0046) => [
d195 1
a195 1
   q(0047) => [
d198 1
a198 1
   q(0048) => [
d201 1
a201 1
   q(0049) => [
d204 1
a204 1
   q(0050) => [
d207 1
a207 1
   q(0051) => [
d213 1
a213 1
   q(0052) => [
d216 1
a216 1
   q(0053) => [
d219 1
a219 2
   q(0054) => [
      q(Old Hungarian (Hungarian Runic)),
a220 1
      q(Hungarian Runic),
d222 1
a222 1
   q(0055) => [
d227 1
a227 1
   q(0056) => [
d230 1
a230 1
   q(0057) => [
d233 1
a233 1
   q(0058) => [
d236 1
a236 1
   q(0059) => [
d239 1
a239 1
   q(0060) => [
d242 1
a242 1
   q(0061) => [
d245 1
a245 1
   q(0062) => [
d248 1
a248 1
   q(0063) => [
d251 1
a251 1
   q(0064) => [
d254 1
a254 1
   q(0065) => [
d257 1
a257 1
   q(0066) => [
d260 1
a260 1
   q(0067) => [
d263 1
a263 1
   q(0068) => [
d266 1
a266 1
   q(0069) => [
d271 1
a271 1
   q(0070) => [
d274 1
a274 1
   q(0071) => [
d277 1
a277 1
   q(0072) => [
d280 1
a280 1
   q(0073) => [
d283 1
a283 1
   q(0074) => [
d288 1
a288 1
   q(0075) => [
d291 1
a291 1
   q(0076) => [
d294 1
a294 1
   q(0077) => [
d297 1
a297 1
   q(0078) => [
d302 1
a302 1
   q(0079) => [
d305 1
a305 1
   q(0080) => [
d308 1
a308 1
   q(0081) => [
d311 1
a311 4
   q(0082) => [
      q(Mahajani),
      ],
   q(0083) => [
d316 1
a316 1
   q(0084) => [
d319 1
a319 1
   q(0085) => [
d322 1
a322 1
   q(0086) => [
d325 1
a325 1
   q(0087) => [
d328 1
a328 1
   q(0088) => [
d331 1
a331 1
   q(0089) => [
d334 1
a334 1
   q(0090) => [
d341 1
a341 1
   q(0091) => [
d344 1
a344 1
   q(0092) => [
d349 1
a349 1
   q(0093) => [
d355 1
a355 1
   q(0094) => [
d360 1
a360 1
   q(0095) => [
d365 1
a365 1
   q(0096) => [
d368 1
a368 1
   q(0097) => [
d374 1
a374 1
   q(0098) => [
d377 1
a377 1
   q(0099) => [
d380 1
a380 1
   q(0100) => [
d383 1
a383 1
   q(0101) => [
d390 1
a390 1
   q(0102) => [
d395 1
a395 1
   q(0103) => [
d398 1
a398 1
   q(0104) => [
d401 1
a401 1
   q(0105) => [
d404 1
a404 1
   q(0106) => [
d407 1
a407 1
   q(0107) => [
d410 1
a410 1
   q(0108) => [
d413 1
a413 1
   q(0109) => [
d416 1
a416 1
   q(0110) => [
d419 1
a419 1
   q(0111) => [
d422 1
a422 1
   q(0112) => [
d427 1
a427 1
   q(0113) => [
d430 1
a430 1
   q(0114) => [
d433 1
a433 1
   q(0115) => [
d436 1
a436 1
   q(0116) => [
d442 1
a442 1
   q(0117) => [
d445 1
a445 1
   q(0118) => [
d448 1
a448 1
   q(0119) => [
d451 1
a451 1
   q(0120) => [
d454 1
a454 1
   q(0121) => [
d457 1
a457 1
   q(0122) => [
d460 1
a460 1
   q(0123) => [
d463 1
a463 1
   q(0124) => [
d468 1
a468 1
   q(0125) => [
d473 1
a473 1
   q(0126) => [
d478 1
a478 1
   q(0127) => [
d481 1
a481 1
   q(0128) => [
d484 1
a484 1
   q(0129) => [
d487 1
a487 1
   q(0130) => [
d490 1
a490 1
   q(0131) => [
d493 1
a493 1
   q(0132) => [
d496 1
a496 1
   q(0133) => [
d499 1
a499 1
   q(0134) => [
d502 1
a502 1
   q(0135) => [
d505 1
a505 1
   q(0136) => [
d510 1
a510 1
   q(0137) => [
d513 1
a513 1
   q(0138) => [
d516 1
a516 1
   q(0139) => [
d519 1
a519 1
   q(0140) => [
d522 1
a522 1
   q(0141) => [
d525 1
a525 1
   q(0142) => [
d528 1
a528 1
   q(0143) => [
d531 1
a531 1
   q(0144) => [
d536 1
a536 1
   q(0145) => [
d542 1
a542 1
   q(0146) => [
d545 1
a545 1
   q(0147) => [
d548 1
a548 1
   q(0148) => [
d551 1
a551 1
   q(0149) => [
d554 1
a554 1
   q(0150) => [
d557 1
a557 1
   q(0151) => [
d560 1
a560 1
   q(0152) => [
d563 1
a563 1
   q(0153) => [
d568 1
a568 1
   q(0154) => [
d571 1
a571 1
   q(0155) => [
d574 1
a574 1
   q(0156) => [
d578 1
a578 1
   q(0157) => [
d581 1
a581 1
   q(0158) => [
d584 1
a584 1
   q(0159) => [
d587 1
a587 1
   q(0160) => [
d594 1
a594 1
      q(0097),
d602 1
a602 1
      q(0145),
d606 1
a606 1
      q(0051),
d610 1
a610 1
      q(0051),
d614 1
a614 1
      q(0095),
d618 1
a618 1
      q(0003),
d622 1
a622 1
      q(0005),
d626 1
a626 1
      q(0006),
d630 1
a630 1
      q(0007),
d634 1
a634 1
      q(0008),
d638 1
a638 1
      q(0009),
d642 1
a642 1
      q(0010),
d646 1
a646 1
      q(0145),
d650 1
a650 1
      q(0011),
d654 1
a654 1
      q(0144),
d658 1
a658 1
      q(0012),
d662 1
a662 1
      q(0110),
d666 1
a666 1
      q(0013),
d670 1
a670 1
      q(0014),
d674 1
a674 1
      q(0015),
d678 1
a678 1
      q(0016),
d682 1
a682 1
      q(0017),
d686 1
a686 1
      q(0094),
d690 1
a690 5
      q(0020),
      q(0),
      ],
   q(caucasian albanian) => [
      q(0002),
d694 1
a694 1
      q(0018),
d698 1
a698 1
      q(0021),
d702 1
a702 1
      q(0022),
d706 1
a706 1
      q(0023),
d710 1
a710 1
      q(0158),
d714 1
a714 1
      q(0024),
d718 1
a718 1
      q(0156),
d722 1
a722 1
      q(0025),
d726 1
a726 1
      q(0026),
d730 1
a730 1
      q(0027),
d734 1
a734 1
      q(0029),
d738 1
a738 1
      q(0029),
d742 1
a742 1
      q(0028),
d746 1
a746 1
      q(0028),
d750 1
a750 1
      q(0030),
d754 1
a754 1
      q(0030),
d758 1
a758 1
      q(0030),
d762 1
a762 1
      q(0031),
d766 1
a766 1
      q(0032),
d770 1
a770 1
      q(0033),
d774 1
a774 1
      q(0034),
d778 1
a778 1
      q(0035),
d782 1
a782 1
      q(0035),
d786 1
a786 1
      q(0078),
d790 1
a790 1
      q(0035),
d794 1
a794 1
      q(0036),
d798 1
a798 1
      q(0038),
d802 1
a802 1
      q(0039),
d806 1
a806 1
      q(0040),
d810 1
a810 1
      q(0041),
d814 1
a814 1
      q(0042),
d818 1
a818 1
      q(0043),
d822 1
a822 1
      q(0045),
d826 1
a826 1
      q(0045),
d830 1
a830 1
      q(0047),
d834 1
a834 1
      q(0048),
d838 1
a838 1
      q(0044),
d842 1
a842 1
      q(0044),
d846 1
a846 1
      q(0044),
d850 1
a850 1
      q(0045),
d854 1
a854 1
      q(0046),
d858 1
a858 1
      q(0046),
d862 1
a862 1
      q(0045),
d866 1
a866 1
      q(0055),
d870 1
a870 1
      q(0049),
d874 1
a874 1
      q(0050),
d878 1
a878 1
      q(0051),
a880 4
   q(hungarian runic) => [
      q(0054),
      q(2),
      ],
d882 1
a882 1
      q(0004),
d886 1
a886 1
      q(0055),
d890 1
a890 1
      q(0055),
d894 1
a894 1
      q(0108),
d898 1
a898 1
      q(0113),
d902 1
a902 1
      q(0058),
d906 1
a906 1
      q(0053),
d910 1
a910 1
      q(0057),
d914 1
a914 1
      q(0059),
d918 1
a918 1
      q(0116),
d922 1
a922 1
      q(0068),
d926 1
a926 1
      q(0045),
d930 1
a930 1
      q(0065),
d934 1
a934 1
      q(0061),
d938 1
a938 1
      q(0060),
d942 1
a942 1
      q(0062),
d946 1
a946 1
      q(0063),
d950 1
a950 1
      q(0064),
d954 1
a954 1
      q(0126),
d958 1
a958 1
      q(0126),
d962 1
a962 1
      q(0037),
d966 1
a966 1
      q(0066),
d970 1
a970 1
      q(0067),
d974 1
a974 1
      q(0069),
d978 1
a978 1
      q(0070),
d982 1
a982 1
      q(0073),
d986 1
a986 1
      q(0071),
d990 1
a990 1
      q(0072),
d994 1
a994 1
      q(0074),
d998 1
a998 1
      q(0074),
d1002 1
a1002 1
      q(0075),
d1006 1
a1006 1
      q(0076),
d1010 1
a1010 1
      q(0077),
d1014 1
a1014 1
      q(0078),
d1018 1
a1018 1
      q(0078),
d1022 1
a1022 1
      q(0079),
d1026 1
a1026 1
      q(0051),
d1030 1
a1030 1
      q(0080),
d1034 1
a1034 5
      q(0081),
      q(0),
      ],
   q(mahajani) => [
      q(0082),
d1038 1
a1038 1
      q(0089),
d1042 1
a1042 1
      q(0083),
d1046 1
a1046 1
      q(0083),
d1050 1
a1050 1
      q(0083),
d1054 1
a1054 1
      q(0084),
d1058 1
a1058 1
      q(0159),
d1062 1
a1062 1
      q(0085),
d1066 1
a1066 1
      q(0093),
d1070 1
a1070 1
      q(0093),
d1074 1
a1074 1
      q(0093),
d1078 1
a1078 1
      q(0093),
d1082 1
a1082 1
      q(0086),
d1086 1
a1086 1
      q(0087),
d1090 1
a1090 1
      q(0088),
d1094 1
a1094 1
      q(0112),
d1098 1
a1098 1
      q(0112),
d1102 1
a1102 1
      q(0091),
d1106 1
a1106 1
      q(0090),
d1110 1
a1110 1
      q(0090),
d1114 1
a1114 1
      q(0090),
d1118 1
a1118 1
      q(0090),
d1122 1
a1122 1
      q(0090),
d1126 1
a1126 1
      q(0029),
d1130 1
a1130 1
      q(0092),
d1134 1
a1134 1
      q(0092),
d1138 1
a1138 1
      q(0092),
d1142 1
a1142 1
      q(0094),
d1146 1
a1146 1
      q(0094),
d1150 1
a1150 1
      q(0098),
d1154 1
a1154 1
      q(0096),
d1158 1
a1158 1
      q(0028),
d1162 1
a1162 1
      q(0097),
d1166 1
a1166 1
      q(0097),
d1170 1
a1170 1
      q(0097),
d1174 1
a1174 1
      q(0138),
d1178 1
a1178 1
      q(0099),
d1182 1
a1182 1
      q(0100),
d1186 1
a1186 1
      q(0101),
d1190 1
a1190 1
      q(0101),
d1194 1
a1194 1
      q(0101),
d1198 1
a1198 1
      q(0101),
d1202 1
a1202 5
      q(0054),
      q(1),
      ],
   q(old hungarian (hungarian runic)) => [
      q(0054),
d1206 1
a1206 1
      q(0056),
d1210 1
a1210 1
      q(0095),
d1214 1
a1214 1
      q(0095),
d1218 1
a1218 1
      q(0106),
d1222 1
a1222 1
      q(0155),
d1226 1
a1226 1
      q(0121),
d1230 1
a1230 1
      q(0102),
d1234 1
a1234 1
      q(0102),
d1238 1
a1238 1
      q(0103),
d1242 1
a1242 1
      q(0102),
d1246 1
a1246 1
      q(0104),
d1250 1
a1250 1
      q(0052),
d1254 1
a1254 1
      q(0105),
d1258 1
a1258 1
      q(0107),
d1262 1
a1262 1
      q(0111),
d1266 1
a1266 1
      q(0112),
d1270 1
a1270 1
      q(0109),
d1274 1
a1274 1
      q(0116),
d1278 1
a1278 1
      q(0116),
d1282 1
a1282 1
      q(0116),
d1286 1
a1286 1
      q(0115),
d1290 1
a1290 1
      q(0114),
d1294 1
a1294 1
      q(0074),
d1298 1
a1298 1
      q(0117),
d1302 1
a1302 1
      q(0118),
d1306 1
a1306 1
      q(0119),
d1310 1
a1310 1
      q(0101),
d1314 1
a1314 1
      q(0125),
d1318 1
a1318 1
      q(0120),
d1322 1
a1322 1
      q(0122),
d1326 1
a1326 1
      q(0125),
d1330 1
a1330 1
      q(0125),
d1334 1
a1334 1
      q(0124),
d1338 1
a1338 1
      q(0124),
d1342 1
a1342 1
      q(0124),
d1346 1
a1346 1
      q(0123),
d1350 1
a1350 1
      q(0126),
d1354 1
a1354 1
      q(0127),
d1358 1
a1358 1
      q(0128),
d1362 1
a1362 1
      q(0156),
d1366 1
a1366 1
      q(0129),
d1370 1
a1370 1
      q(0130),
d1374 1
a1374 1
      q(0160),
d1378 1
a1378 1
      q(0131),
d1382 1
a1382 1
      q(0134),
d1386 1
a1386 1
      q(0132),
d1390 1
a1390 1
      q(0133),
d1394 1
a1394 1
      q(0145),
d1398 1
a1398 1
      q(0145),
d1402 1
a1402 1
      q(0135),
d1406 1
a1406 1
      q(0137),
d1410 1
a1410 1
      q(0069),
d1414 1
a1414 1
      q(0069),
d1418 1
a1418 1
      q(0141),
d1422 1
a1422 1
      q(0136),
d1426 1
a1426 1
      q(0136),
d1430 1
a1430 1
      q(0139),
d1434 1
a1434 1
      q(0140),
d1438 1
a1438 1
      q(0136),
d1442 1
a1442 1
      q(0142),
d1446 1
a1446 1
      q(0143),
d1450 1
a1450 1
      q(0146),
d1454 1
a1454 1
      q(0147),
d1458 1
a1458 1
      q(0148),
d1462 1
a1462 1
      q(0144),
d1466 1
a1466 1
      q(0144),
d1470 1
a1470 1
      q(0149),
d1474 1
a1474 1
      q(0150),
d1478 1
a1478 1
      q(0019),
d1482 1
a1482 1
      q(0151),
d1486 1
a1486 1
      q(0153),
d1490 1
a1490 1
      q(0152),
d1494 1
a1494 1
      q(0153),
d1498 1
a1498 1
      q(0153),
d1502 1
a1502 1
      q(0154),
d1506 1
a1506 1
      q(0157),
d1517 1
a1517 1
      q(Aghb) => [
d1521 1
a1521 1
      q(Arab) => [
d1525 1
a1525 1
      q(Armi) => [
d1529 1
a1529 1
      q(Armn) => [
d1533 1
a1533 1
      q(Avst) => [
d1537 1
a1537 1
      q(Bali) => [
d1541 1
a1541 1
      q(Bamu) => [
d1545 1
a1545 1
      q(Bass) => [
d1549 1
a1549 1
      q(Batk) => [
d1553 1
a1553 1
      q(Beng) => [
d1557 1
a1557 1
      q(Blis) => [
d1561 1
a1561 1
      q(Bopo) => [
d1565 1
a1565 1
      q(Brah) => [
d1569 1
a1569 1
      q(Brai) => [
d1573 1
a1573 1
      q(Bugi) => [
d1577 1
a1577 1
      q(Buhd) => [
d1581 1
a1581 1
      q(Cakm) => [
d1585 1
a1585 1
      q(Cans) => [
d1589 1
a1589 1
      q(Cari) => [
d1593 1
a1593 1
      q(Cham) => [
d1597 1
a1597 1
      q(Cher) => [
d1601 1
a1601 1
      q(Cirt) => [
d1605 1
a1605 1
      q(Copt) => [
d1609 1
a1609 1
      q(Cprt) => [
d1613 1
a1613 1
      q(Cyrl) => [
d1617 1
a1617 1
      q(Cyrs) => [
a1618 4
         q(0),
         ],
      q(Deva) => [
         q(0028),
d1622 1
a1622 1
         q(0029),
d1626 1
a1626 1
         q(0030),
d1630 1
a1630 1
         q(0031),
d1634 1
a1634 1
         q(0032),
d1638 1
a1638 1
         q(0033),
d1642 1
a1642 1
         q(0034),
d1646 1
a1646 1
         q(0035),
d1650 1
a1650 1
         q(0037),
d1654 1
a1654 1
         q(0036),
d1658 1
a1658 1
         q(0038),
d1662 1
a1662 1
         q(0039),
d1666 1
a1666 1
         q(0040),
d1670 1
a1670 1
         q(0041),
d1674 1
a1674 1
         q(0042),
d1678 1
a1678 1
         q(0043),
d1682 1
a1682 1
         q(0044),
d1686 1
a1686 1
         q(0045),
d1690 1
a1690 1
         q(0046),
d1694 1
a1694 1
         q(0047),
d1698 1
a1698 1
         q(0048),
d1702 1
a1702 1
         q(0049),
d1706 1
a1706 1
         q(0050),
d1710 1
a1710 1
         q(0051),
d1714 1
a1714 1
         q(0052),
d1718 1
a1718 1
         q(0053),
d1722 2
a1723 2
         q(0054),
         q(1),
d1726 1
a1726 1
         q(0055),
d1730 1
a1730 1
         q(0056),
d1734 1
a1734 1
         q(0057),
d1738 1
a1738 1
         q(0058),
d1742 1
a1742 1
         q(0059),
d1746 1
a1746 1
         q(0060),
d1750 1
a1750 1
         q(0061),
d1754 1
a1754 1
         q(0062),
d1758 1
a1758 1
         q(0063),
d1762 1
a1762 1
         q(0064),
d1766 1
a1766 1
         q(0065),
d1770 1
a1770 1
         q(0066),
d1774 1
a1774 1
         q(0067),
d1778 1
a1778 1
         q(0068),
d1782 1
a1782 1
         q(0069),
d1786 1
a1786 1
         q(0070),
d1790 1
a1790 1
         q(0071),
d1794 1
a1794 1
         q(0072),
d1798 1
a1798 1
         q(0073),
d1802 1
a1802 1
         q(0074),
d1806 1
a1806 1
         q(0075),
d1810 1
a1810 1
         q(0076),
d1814 1
a1814 1
         q(0077),
d1818 1
a1818 1
         q(0078),
d1822 1
a1822 1
         q(0079),
d1826 1
a1826 1
         q(0080),
d1830 1
a1830 5
         q(0081),
         q(0),
         ],
      q(Mahj) => [
         q(0082),
d1834 1
a1834 1
         q(0083),
d1838 1
a1838 1
         q(0084),
d1842 1
a1842 1
         q(0085),
d1846 1
a1846 1
         q(0086),
d1850 1
a1850 1
         q(0087),
d1854 1
a1854 1
         q(0088),
d1858 1
a1858 1
         q(0089),
d1862 1
a1862 1
         q(0091),
d1866 1
a1866 1
         q(0090),
d1870 1
a1870 1
         q(0092),
d1874 1
a1874 1
         q(0093),
d1878 1
a1878 1
         q(0094),
d1882 1
a1882 1
         q(0095),
d1886 1
a1886 1
         q(0096),
d1890 1
a1890 1
         q(0097),
d1894 1
a1894 1
         q(0098),
d1898 1
a1898 1
         q(0099),
d1902 1
a1902 1
         q(0100),
d1906 1
a1906 1
         q(0101),
d1910 1
a1910 1
         q(0102),
d1914 1
a1914 1
         q(0103),
d1918 1
a1918 1
         q(0104),
d1922 1
a1922 1
         q(0105),
d1926 1
a1926 1
         q(0106),
d1930 1
a1930 1
         q(0107),
d1934 1
a1934 1
         q(0108),
d1938 1
a1938 1
         q(0109),
d1942 1
a1942 1
         q(0110),
d1946 1
a1946 1
         q(0111),
d1950 1
a1950 1
         q(0112),
d1954 1
a1954 1
         q(0113),
d1958 1
a1958 1
         q(0114),
d1962 1
a1962 1
         q(0115),
d1966 1
a1966 1
         q(0116),
d1970 1
a1970 1
         q(0117),
d1974 1
a1974 1
         q(0118),
d1978 1
a1978 1
         q(0119),
d1982 1
a1982 1
         q(0120),
d1986 1
a1986 1
         q(0121),
d1990 1
a1990 1
         q(0122),
d1994 1
a1994 1
         q(0123),
d1998 1
a1998 1
         q(0124),
d2002 1
a2002 1
         q(0125),
d2006 1
a2006 1
         q(0126),
d2010 1
a2010 1
         q(0127),
d2014 1
a2014 1
         q(0128),
d2018 1
a2018 1
         q(0129),
d2022 1
a2022 1
         q(0130),
d2026 1
a2026 1
         q(0131),
d2030 1
a2030 1
         q(0132),
d2034 1
a2034 1
         q(0133),
d2038 1
a2038 1
         q(0134),
d2042 1
a2042 1
         q(0135),
d2046 1
a2046 1
         q(0136),
d2050 1
a2050 1
         q(0137),
d2054 1
a2054 1
         q(0138),
d2058 1
a2058 1
         q(0139),
d2062 1
a2062 1
         q(0140),
d2066 1
a2066 1
         q(0141),
d2070 1
a2070 1
         q(0142),
d2074 1
a2074 1
         q(0143),
d2078 1
a2078 1
         q(0144),
d2082 1
a2082 1
         q(0145),
d2086 1
a2086 1
         q(0146),
d2090 1
a2090 1
         q(0147),
d2094 1
a2094 1
         q(0148),
d2098 1
a2098 1
         q(0149),
d2102 1
a2102 1
         q(0150),
d2106 1
a2106 1
         q(0151),
d2110 1
a2110 1
         q(0152),
d2114 1
a2114 1
         q(0153),
d2118 1
a2118 1
         q(0154),
d2122 1
a2122 1
         q(0155),
d2126 1
a2126 1
         q(0156),
d2130 1
a2130 1
         q(0157),
d2134 1
a2134 1
         q(0158),
d2138 1
a2138 1
         q(0159),
d2142 1
a2142 1
         q(0160),
d2148 1
a2148 1
         q(0156),
d2152 1
a2152 1
         q(0155),
d2156 1
a2156 1
         q(0150),
d2160 1
a2160 1
         q(0033),
d2164 1
a2164 1
         q(0032),
d2168 1
a2168 1
         q(0031),
d2172 1
a2172 1
         q(0051),
d2176 1
a2176 1
         q(0085),
d2180 1
a2180 1
         q(0123),
d2184 1
a2184 1
         q(0088),
d2188 1
a2188 1
         q(0087),
d2192 1
a2192 1
         q(0121),
d2196 1
a2196 1
         q(0095),
d2200 1
a2200 1
         q(0111),
d2204 1
a2204 1
         q(0081),
d2208 1
a2208 1
         q(0144),
d2212 1
a2212 1
         q(0119),
d2216 1
a2216 1
         q(0004),
d2220 1
a2220 1
         q(0049),
d2224 1
a2224 1
         q(0105),
d2228 1
a2228 1
         q(0113),
d2232 1
a2232 1
         q(0108),
d2236 1
a2236 1
         q(0109),
d2240 1
a2240 1
         q(0110),
d2244 1
a2244 1
         q(0006),
d2248 1
a2248 1
         q(0131),
d2252 1
a2252 1
         q(0134),
d2256 1
a2256 1
         q(0133),
d2260 1
a2260 1
         q(0132),
d2264 1
a2264 1
         q(0084),
d2268 1
a2268 1
         q(0083),
d2272 1
a2272 1
         q(0091),
d2276 1
a2276 1
         q(0096),
d2280 1
a2280 1
         q(0003),
d2284 1
a2284 1
         q(0098),
d2288 1
a2288 1
         q(0146),
d2292 1
a2292 1
         q(0102),
d2296 1
a2296 1
         q(0054),
d2300 1
a2300 1
         q(0092),
d2304 1
a2304 1
         q(0041),
d2308 1
a2308 1
         q(0020),
d2312 1
a2312 1
         q(0080),
d2316 1
a2316 1
         q(0024),
d2320 1
a2320 1
         q(0039),
d2324 1
a2324 1
         q(0056),
d2328 1
a2328 1
         q(0118),
d2332 1
a2332 1
         q(0100),
d2336 1
a2336 1
         q(0073),
d2340 1
a2340 1
         q(0072),
d2344 1
a2344 1
         q(0071),
d2348 1
a2348 1
         q(0090),
d2352 1
a2352 1
         q(0026),
d2356 1
a2356 1
         q(0027),
d2360 1
a2360 1
         q(0038),
d2364 1
a2364 1
         q(0034),
d2368 1
a2368 1
         q(0106),
d2372 1
a2372 5
         q(0005),
         q(0),
         ],
      q(239) => [
         q(0002),
d2376 1
a2376 1
         q(0036),
d2380 1
a2380 1
         q(0037),
d2384 1
a2384 1
         q(0029),
d2388 1
a2388 1
         q(0009),
d2392 1
a2392 1
         q(0104),
d2396 1
a2396 1
         q(0101),
d2400 1
a2400 1
         q(0153),
d2404 1
a2404 1
         q(0152),
d2408 1
a2408 1
         q(0124),
d2412 1
a2412 1
         q(0112),
d2416 1
a2416 1
         q(0013),
d2420 1
a2420 1
         q(0044),
d2424 1
a2424 1
         q(0066),
d2428 1
a2428 1
         q(0143),
d2432 1
a2432 1
         q(0023),
d2436 1
a2436 1
         q(0120),
d2440 1
a2440 1
         q(0014),
d2444 1
a2444 1
         q(0062),
d2448 1
a2448 5
         q(0043),
         q(0),
         ],
      q(314) => [
         q(0082),
d2452 1
a2452 1
         q(0028),
d2456 1
a2456 1
         q(0130),
d2460 1
a2460 1
         q(0068),
d2464 1
a2464 1
         q(0126),
d2468 1
a2468 1
         q(0125),
d2472 1
a2472 1
         q(0042),
d2476 1
a2476 1
         q(0136),
d2480 1
a2480 1
         q(0064),
d2484 1
a2484 1
         q(0011),
d2488 1
a2488 1
         q(0149),
d2492 1
a2492 1
         q(0103),
d2496 1
a2496 1
         q(0148),
d2500 1
a2500 1
         q(0107),
d2504 1
a2504 1
         q(0074),
d2508 1
a2508 1
         q(0075),
d2512 1
a2512 1
         q(0093),
d2516 1
a2516 1
         q(0142),
d2520 1
a2520 1
         q(0040),
d2524 1
a2524 1
         q(0122),
d2528 1
a2528 1
         q(0065),
d2532 1
a2532 1
         q(0139),
d2536 1
a2536 1
         q(0089),
d2540 1
a2540 1
         q(0127),
d2544 1
a2544 1
         q(0018),
d2548 1
a2548 1
         q(0094),
d2552 1
a2552 1
         q(0069),
d2556 1
a2556 1
         q(0147),
d2560 1
a2560 1
         q(0137),
d2564 1
a2564 1
         q(0138),
d2568 1
a2568 1
         q(0063),
d2572 1
a2572 1
         q(0070),
d2576 1
a2576 1
         q(0060),
d2580 1
a2580 1
         q(0021),
d2584 1
a2584 1
         q(0141),
d2588 1
a2588 1
         q(0007),
d2592 1
a2592 1
         q(0057),
d2596 1
a2596 1
         q(0129),
d2600 1
a2600 1
         q(0116),
d2604 1
a2604 1
         q(0010),
d2608 1
a2608 1
         q(0016),
d2612 1
a2612 1
         q(0145),
d2616 1
a2616 1
         q(0046),
d2620 1
a2620 1
         q(0017),
d2624 1
a2624 1
         q(0135),
d2628 1
a2628 1
         q(0128),
d2632 1
a2632 1
         q(0078),
d2636 1
a2636 1
         q(0076),
d2640 1
a2640 1
         q(0077),
d2644 1
a2644 1
         q(0025),
d2648 1
a2648 1
         q(0050),
d2652 1
a2652 1
         q(0061),
d2656 1
a2656 1
         q(0053),
d2660 1
a2660 1
         q(0058),
d2664 1
a2664 1
         q(0097),
d2668 1
a2668 1
         q(0035),
d2672 1
a2672 1
         q(0008),
d2676 1
a2676 1
         q(0067),
d2680 1
a2680 1
         q(0079),
d2684 1
a2684 1
         q(0086),
d2692 1
a2692 1
         q(0019),
d2696 1
a2696 1
         q(0022),
d2700 1
a2700 1
         q(0052),
d2704 1
a2704 1
         q(0157),
d2708 1
a2708 1
         q(0151),
d2712 1
a2712 1
         q(0154),
d2716 1
a2716 1
         q(0099),
d2720 1
a2720 1
         q(0045),
d2724 1
a2724 1
         q(0047),
d2728 1
a2728 1
         q(0048),
d2732 1
a2732 1
         q(0059),
d2736 1
a2736 1
         q(0140),
d2740 1
a2740 1
         q(0012),
d2744 1
a2744 1
         q(0015),
d2748 1
a2748 1
         q(0055),
d2752 1
a2752 1
         q(0117),
d2756 1
a2756 1
         q(0030),
d2760 1
a2760 1
         q(0114),
d2764 1
a2764 1
         q(0115),
d2768 1
a2768 1
         q(0158),
d2772 1
a2772 1
         q(0159),
d2776 1
a2776 1
         q(0160),
d2785 157
a2941 159
      q(0002) => q(Aghb),
      q(0003) => q(Arab),
      q(0004) => q(Armi),
      q(0005) => q(Armn),
      q(0006) => q(Avst),
      q(0007) => q(Bali),
      q(0008) => q(Bamu),
      q(0009) => q(Bass),
      q(0010) => q(Batk),
      q(0011) => q(Beng),
      q(0012) => q(Blis),
      q(0013) => q(Bopo),
      q(0014) => q(Brah),
      q(0015) => q(Brai),
      q(0016) => q(Bugi),
      q(0017) => q(Buhd),
      q(0018) => q(Cakm),
      q(0019) => q(Cans),
      q(0020) => q(Cari),
      q(0021) => q(Cham),
      q(0022) => q(Cher),
      q(0023) => q(Cirt),
      q(0024) => q(Copt),
      q(0025) => q(Cprt),
      q(0026) => q(Cyrl),
      q(0027) => q(Cyrs),
      q(0028) => q(Deva),
      q(0029) => q(Dsrt),
      q(0030) => q(Dupl),
      q(0031) => q(Egyd),
      q(0032) => q(Egyh),
      q(0033) => q(Egyp),
      q(0034) => q(Elba),
      q(0035) => q(Ethi),
      q(0036) => q(Geor),
      q(0037) => q(Geok),
      q(0038) => q(Glag),
      q(0039) => q(Goth),
      q(0040) => q(Gran),
      q(0041) => q(Grek),
      q(0042) => q(Gujr),
      q(0043) => q(Guru),
      q(0044) => q(Hang),
      q(0045) => q(Hani),
      q(0046) => q(Hano),
      q(0047) => q(Hans),
      q(0048) => q(Hant),
      q(0049) => q(Hebr),
      q(0050) => q(Hira),
      q(0051) => q(Hluw),
      q(0052) => q(Hmng),
      q(0053) => q(Hrkt),
      q(0054) => q(Hung),
      q(0055) => q(Inds),
      q(0056) => q(Ital),
      q(0057) => q(Java),
      q(0058) => q(Jpan),
      q(0059) => q(Jurc),
      q(0060) => q(Kali),
      q(0061) => q(Kana),
      q(0062) => q(Khar),
      q(0063) => q(Khmr),
      q(0064) => q(Khoj),
      q(0065) => q(Knda),
      q(0066) => q(Kore),
      q(0067) => q(Kpel),
      q(0068) => q(Kthi),
      q(0069) => q(Lana),
      q(0070) => q(Laoo),
      q(0071) => q(Latf),
      q(0072) => q(Latg),
      q(0073) => q(Latn),
      q(0074) => q(Lepc),
      q(0075) => q(Limb),
      q(0076) => q(Lina),
      q(0077) => q(Linb),
      q(0078) => q(Lisu),
      q(0079) => q(Loma),
      q(0080) => q(Lyci),
      q(0081) => q(Lydi),
      q(0082) => q(Mahj),
      q(0083) => q(Mand),
      q(0084) => q(Mani),
      q(0085) => q(Maya),
      q(0086) => q(Mend),
      q(0087) => q(Merc),
      q(0088) => q(Mero),
      q(0089) => q(Mlym),
      q(0090) => q(Moon),
      q(0091) => q(Mong),
      q(0092) => q(Mroo),
      q(0093) => q(Mtei),
      q(0094) => q(Mymr),
      q(0095) => q(Narb),
      q(0096) => q(Nbat),
      q(0097) => q(Nkgb),
      q(0098) => q(Nkoo),
      q(0099) => q(Nshu),
      q(0100) => q(Ogam),
      q(0101) => q(Olck),
      q(0102) => q(Orkh),
      q(0103) => q(Orya),
      q(0104) => q(Osma),
      q(0105) => q(Palm),
      q(0106) => q(Perm),
      q(0107) => q(Phag),
      q(0108) => q(Phli),
      q(0109) => q(Phlp),
      q(0110) => q(Phlv),
      q(0111) => q(Phnx),
      q(0112) => q(Plrd),
      q(0113) => q(Prti),
      q(0114) => q(Qaaa),
      q(0115) => q(Qabx),
      q(0116) => q(Rjng),
      q(0117) => q(Roro),
      q(0118) => q(Runr),
      q(0119) => q(Samr),
      q(0120) => q(Sara),
      q(0121) => q(Sarb),
      q(0122) => q(Saur),
      q(0123) => q(Sgnw),
      q(0124) => q(Shaw),
      q(0125) => q(Shrd),
      q(0126) => q(Sind),
      q(0127) => q(Sinh),
      q(0128) => q(Sora),
      q(0129) => q(Sund),
      q(0130) => q(Sylo),
      q(0131) => q(Syrc),
      q(0132) => q(Syre),
      q(0133) => q(Syrj),
      q(0134) => q(Syrn),
      q(0135) => q(Tagb),
      q(0136) => q(Takr),
      q(0137) => q(Tale),
      q(0138) => q(Talu),
      q(0139) => q(Taml),
      q(0140) => q(Tang),
      q(0141) => q(Tavt),
      q(0142) => q(Telu),
      q(0143) => q(Teng),
      q(0144) => q(Tfng),
      q(0145) => q(Tglg),
      q(0146) => q(Thaa),
      q(0147) => q(Thai),
      q(0148) => q(Tibt),
      q(0149) => q(Tirh),
      q(0150) => q(Ugar),
      q(0151) => q(Vaii),
      q(0152) => q(Visp),
      q(0153) => q(Wara),
      q(0154) => q(Wole),
      q(0155) => q(Xpeo),
      q(0156) => q(Xsux),
      q(0157) => q(Yiii),
      q(0158) => q(Zinh),
      q(0159) => q(Zmth),
      q(0160) => q(Zsym),
d2945 157
a3101 159
      q(0002) => q(239),
      q(0003) => q(160),
      q(0004) => q(124),
      q(0005) => q(230),
      q(0006) => q(134),
      q(0007) => q(360),
      q(0008) => q(435),
      q(0009) => q(259),
      q(0010) => q(365),
      q(0011) => q(325),
      q(0012) => q(550),
      q(0013) => q(285),
      q(0014) => q(300),
      q(0015) => q(570),
      q(0016) => q(367),
      q(0017) => q(372),
      q(0018) => q(349),
      q(0019) => q(440),
      q(0020) => q(201),
      q(0021) => q(358),
      q(0022) => q(445),
      q(0023) => q(291),
      q(0024) => q(204),
      q(0025) => q(403),
      q(0026) => q(220),
      q(0027) => q(221),
      q(0028) => q(315),
      q(0029) => q(250),
      q(0030) => q(755),
      q(0031) => q(070),
      q(0032) => q(060),
      q(0033) => q(050),
      q(0034) => q(226),
      q(0035) => q(430),
      q(0036) => q(240),
      q(0037) => q(241),
      q(0038) => q(225),
      q(0039) => q(206),
      q(0040) => q(343),
      q(0041) => q(200),
      q(0042) => q(320),
      q(0043) => q(310),
      q(0044) => q(286),
      q(0045) => q(500),
      q(0046) => q(371),
      q(0047) => q(501),
      q(0048) => q(502),
      q(0049) => q(125),
      q(0050) => q(410),
      q(0051) => q(080),
      q(0052) => q(450),
      q(0053) => q(412),
      q(0054) => q(176),
      q(0055) => q(610),
      q(0056) => q(210),
      q(0057) => q(361),
      q(0058) => q(413),
      q(0059) => q(510),
      q(0060) => q(357),
      q(0061) => q(411),
      q(0062) => q(305),
      q(0063) => q(355),
      q(0064) => q(322),
      q(0065) => q(345),
      q(0066) => q(287),
      q(0067) => q(436),
      q(0068) => q(317),
      q(0069) => q(351),
      q(0070) => q(356),
      q(0071) => q(217),
      q(0072) => q(216),
      q(0073) => q(215),
      q(0074) => q(335),
      q(0075) => q(336),
      q(0076) => q(400),
      q(0077) => q(401),
      q(0078) => q(399),
      q(0079) => q(437),
      q(0080) => q(202),
      q(0081) => q(116),
      q(0082) => q(314),
      q(0083) => q(140),
      q(0084) => q(139),
      q(0085) => q(090),
      q(0086) => q(438),
      q(0087) => q(101),
      q(0088) => q(100),
      q(0089) => q(347),
      q(0090) => q(218),
      q(0091) => q(145),
      q(0092) => q(199),
      q(0093) => q(337),
      q(0094) => q(350),
      q(0095) => q(106),
      q(0096) => q(159),
      q(0097) => q(420),
      q(0098) => q(165),
      q(0099) => q(499),
      q(0100) => q(212),
      q(0101) => q(261),
      q(0102) => q(175),
      q(0103) => q(327),
      q(0104) => q(260),
      q(0105) => q(126),
      q(0106) => q(227),
      q(0107) => q(331),
      q(0108) => q(131),
      q(0109) => q(132),
      q(0110) => q(133),
      q(0111) => q(115),
      q(0112) => q(282),
      q(0113) => q(130),
      q(0114) => q(900),
      q(0115) => q(949),
      q(0116) => q(363),
      q(0117) => q(620),
      q(0118) => q(211),
      q(0119) => q(123),
      q(0120) => q(292),
      q(0121) => q(105),
      q(0122) => q(344),
      q(0123) => q(095),
      q(0124) => q(281),
      q(0125) => q(319),
      q(0126) => q(318),
      q(0127) => q(348),
      q(0128) => q(398),
      q(0129) => q(362),
      q(0130) => q(316),
      q(0131) => q(135),
      q(0132) => q(138),
      q(0133) => q(137),
      q(0134) => q(136),
      q(0135) => q(373),
      q(0136) => q(321),
      q(0137) => q(353),
      q(0138) => q(354),
      q(0139) => q(346),
      q(0140) => q(520),
      q(0141) => q(359),
      q(0142) => q(340),
      q(0143) => q(290),
      q(0144) => q(120),
      q(0145) => q(370),
      q(0146) => q(170),
      q(0147) => q(352),
      q(0148) => q(330),
      q(0149) => q(326),
      q(0150) => q(040),
      q(0151) => q(470),
      q(0152) => q(280),
      q(0153) => q(262),
      q(0154) => q(480),
      q(0155) => q(030),
      q(0156) => q(020),
      q(0157) => q(460),
      q(0158) => q(994),
      q(0159) => q(995),
      q(0160) => q(996),
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d1 1
a1 2
package #
Locale::Codes::Script_Codes;
d4 30
a33 2
# be lost the next time 'harvest_data' is run.
#    Generated on: Thu Feb 27 15:45:43 EST 2014
d41 1
a41 1
$VERSION='3.30';
d43 1
a43 1
$Locale::Codes::Data{'script'}{'id'} = '0166';
d53 1
a53 3
      q(Ahom, Tai Ahom),
      q(Ahom),
      q(Tai Ahom),
d56 1
a56 1
      q(Arabic),
d59 1
a59 1
      q(Imperial Aramaic),
d62 1
a62 1
      q(Armenian),
d65 1
a65 1
      q(Avestan),
d68 1
a68 1
      q(Balinese),
d71 1
a71 1
      q(Bamum),
d74 1
a74 1
      q(Bassa Vah),
d77 1
a77 1
      q(Batak),
d80 1
a80 1
      q(Bengali),
d83 1
a83 1
      q(Blissymbols),
d86 1
a86 1
      q(Bopomofo),
d89 1
a89 1
      q(Brahmi),
d92 1
a92 1
      q(Braille),
d95 1
a95 1
      q(Buginese),
d98 1
a98 1
      q(Buhid),
d101 1
a101 1
      q(Chakma),
d104 1
a104 1
      q(Unified Canadian Aboriginal Syllabics),
d107 1
a107 1
      q(Carian),
d110 1
a110 1
      q(Cham),
d113 1
a113 1
      q(Cherokee),
d116 1
a116 1
      q(Cirth),
d119 1
a119 1
      q(Coptic),
d122 1
a122 1
      q(Cypriot),
d125 1
a125 1
      q(Cyrillic),
a127 3
      q(Cyrillic (Old Church Slavonic variant)),
      ],
   q(0029) => [
d132 1
a132 1
   q(0030) => [
d137 1
a137 1
   q(0031) => [
d142 1
a142 1
   q(0032) => [
d145 1
a145 1
   q(0033) => [
d148 1
a148 1
   q(0034) => [
d151 1
a151 1
   q(0035) => [
d154 1
a154 1
   q(0036) => [
d159 1
a159 1
   q(0037) => [
d162 1
a162 1
   q(0038) => [
d165 1
a165 1
   q(0039) => [
d168 1
a168 1
   q(0040) => [
d171 1
a171 1
   q(0041) => [
d174 1
a174 1
   q(0042) => [
d177 1
a177 1
   q(0043) => [
d180 1
a180 1
   q(0044) => [
d183 1
a183 1
   q(0045) => [
d188 1
a188 1
   q(0046) => [
d195 1
a195 1
   q(0047) => [
d199 1
a199 1
   q(0048) => [
d202 1
a202 1
   q(0049) => [
d205 1
a205 4
   q(0050) => [
      q(Hatran),
      ],
   q(0051) => [
d208 1
a208 1
   q(0052) => [
d211 1
a211 1
   q(0053) => [
d217 1
a217 1
   q(0054) => [
d220 1
a220 1
   q(0055) => [
d223 1
a223 1
   q(0056) => [
d228 1
a228 1
   q(0057) => [
d233 1
a233 1
   q(0058) => [
d236 1
a236 1
   q(0059) => [
d239 1
a239 1
   q(0060) => [
d242 1
a242 1
   q(0061) => [
d245 1
a245 1
   q(0062) => [
d248 1
a248 1
   q(0063) => [
d251 1
a251 1
   q(0064) => [
d254 1
a254 1
   q(0065) => [
d257 1
a257 1
   q(0066) => [
d260 1
a260 1
   q(0067) => [
d263 1
a263 1
   q(0068) => [
d266 1
a266 1
   q(0069) => [
d269 1
a269 1
   q(0070) => [
d272 1
a272 1
   q(0071) => [
d277 1
a277 1
   q(0072) => [
d280 1
a280 1
   q(0073) => [
d283 1
a283 1
   q(0074) => [
d286 1
a286 1
   q(0075) => [
d289 1
a289 1
   q(0076) => [
d294 1
a294 1
   q(0077) => [
d297 1
a297 1
   q(0078) => [
d300 1
a300 1
   q(0079) => [
d303 1
a303 1
   q(0080) => [
d308 1
a308 1
   q(0081) => [
d311 1
a311 1
   q(0082) => [
d314 1
a314 1
   q(0083) => [
d317 1
a317 1
   q(0084) => [
d320 1
a320 1
   q(0085) => [
d325 1
a325 1
   q(0086) => [
d328 1
a328 1
   q(0087) => [
d331 2
a332 2
   q(0088) => [
      q(Mende Kikakui),
d334 1
a334 1
   q(0089) => [
d337 1
a337 1
   q(0090) => [
d340 1
a340 1
   q(0091) => [
d343 1
a343 7
   q(0092) => [
      q(Modi, Modi),
      q( Multani),
      q(Modi),
      q(Multani),
      ],
   q(0093) => [
d350 1
a350 1
   q(0094) => [
d353 1
a353 1
   q(0095) => [
d358 1
a358 1
   q(0096) => [
d364 1
a364 1
   q(0097) => [
d369 1
a369 1
   q(0098) => [
d374 1
a374 1
   q(0099) => [
d377 1
a377 1
   q(0100) => [
d383 1
a383 1
   q(0101) => [
d386 1
a386 1
   q(0102) => [
d389 1
a389 1
   q(0103) => [
d392 1
a392 1
   q(0104) => [
d399 1
a399 1
   q(0105) => [
d404 1
a404 1
   q(0106) => [
d407 1
a407 1
   q(0107) => [
d410 1
a410 1
   q(0108) => [
d413 1
a413 4
   q(0109) => [
      q(Pau Cin Hau),
      ],
   q(0110) => [
d416 1
a416 1
   q(0111) => [
d419 1
a419 1
   q(0112) => [
d422 1
a422 1
   q(0113) => [
d425 1
a425 1
   q(0114) => [
d428 1
a428 1
   q(0115) => [
d431 1
a431 1
   q(0116) => [
d436 1
a436 1
   q(0117) => [
d439 1
a439 1
   q(0118) => [
d442 1
a442 1
   q(0119) => [
d445 1
a445 1
   q(0120) => [
d451 1
a451 1
   q(0121) => [
d454 1
a454 1
   q(0122) => [
d457 1
a457 1
   q(0123) => [
d460 1
a460 1
   q(0124) => [
d463 1
a463 1
   q(0125) => [
d466 1
a466 1
   q(0126) => [
d469 1
a469 1
   q(0127) => [
d472 1
a472 1
   q(0128) => [
d477 1
a477 1
   q(0129) => [
d482 1
a482 6
   q(0130) => [
      q(Siddham, Siddham, Siddhamatrka),
      q(Siddham),
      q(Siddhamatrka),
      ],
   q(0131) => [
d487 1
a487 1
   q(0132) => [
d490 1
a490 1
   q(0133) => [
d493 1
a493 1
   q(0134) => [
d496 1
a496 1
   q(0135) => [
d499 1
a499 1
   q(0136) => [
d502 1
a502 1
   q(0137) => [
d505 1
a505 1
   q(0138) => [
d508 1
a508 1
   q(0139) => [
d511 1
a511 1
   q(0140) => [
d514 1
a514 1
   q(0141) => [
d519 1
a519 1
   q(0142) => [
d522 1
a522 1
   q(0143) => [
d525 1
a525 1
   q(0144) => [
d528 1
a528 1
   q(0145) => [
d531 1
a531 1
   q(0146) => [
d534 1
a534 1
   q(0147) => [
d537 1
a537 1
   q(0148) => [
d540 1
a540 1
   q(0149) => [
d545 1
a545 1
   q(0150) => [
d551 1
a551 1
   q(0151) => [
d554 1
a554 1
   q(0152) => [
d557 1
a557 1
   q(0153) => [
d560 1
a560 1
   q(0154) => [
d563 1
a563 1
   q(0155) => [
d566 1
a566 1
   q(0156) => [
d569 1
a569 1
   q(0157) => [
d572 1
a572 1
   q(0158) => [
d577 1
a577 1
   q(0159) => [
d580 1
a580 1
   q(0160) => [
d583 1
a583 1
   q(0161) => [
d587 1
a587 1
   q(0162) => [
d590 1
a590 1
   q(0163) => [
d593 1
a593 1
   q(0164) => [
d596 1
a596 1
   q(0165) => [
a601 4
   q( multani) => [
      q(0092),
      q(1),
      ],
d603 1
a603 1
      q(0100),
a609 8
   q(ahom) => [
      q(0003),
      q(1),
      ],
   q(ahom, tai ahom) => [
      q(0003),
      q(0),
      ],
d611 1
a611 1
      q(0150),
d615 1
a615 1
      q(0053),
d619 1
a619 1
      q(0053),
d623 1
a623 1
      q(0098),
d627 1
a627 1
      q(0004),
d631 1
a631 1
      q(0006),
d635 1
a635 1
      q(0007),
d639 1
a639 1
      q(0008),
d643 1
a643 1
      q(0009),
d647 1
a647 1
      q(0010),
d651 1
a651 1
      q(0011),
d655 1
a655 1
      q(0150),
d659 1
a659 1
      q(0012),
d663 1
a663 1
      q(0149),
d667 1
a667 1
      q(0013),
d671 1
a671 1
      q(0114),
d675 1
a675 1
      q(0014),
d679 1
a679 1
      q(0015),
d683 1
a683 1
      q(0016),
d687 1
a687 1
      q(0017),
d691 1
a691 1
      q(0018),
d695 1
a695 1
      q(0097),
d699 1
a699 1
      q(0021),
d707 1
a707 1
      q(0019),
d711 1
a711 1
      q(0022),
d715 1
a715 1
      q(0023),
d719 1
a719 1
      q(0024),
d723 1
a723 1
      q(0163),
d727 1
a727 1
      q(0025),
d731 1
a731 1
      q(0161),
d735 1
a735 1
      q(0026),
d739 1
a739 1
      q(0027),
d743 1
a743 1
      q(0028),
d747 1
a747 1
      q(0030),
d751 1
a751 1
      q(0030),
d755 1
a755 1
      q(0029),
d759 1
a759 1
      q(0029),
d763 1
a763 1
      q(0031),
d767 1
a767 1
      q(0031),
d771 1
a771 1
      q(0031),
d775 1
a775 1
      q(0032),
d779 1
a779 1
      q(0033),
d783 1
a783 1
      q(0034),
d787 1
a787 1
      q(0035),
d791 1
a791 1
      q(0036),
d795 1
a795 1
      q(0036),
d799 1
a799 1
      q(0080),
d803 1
a803 1
      q(0036),
d807 1
a807 1
      q(0037),
d811 1
a811 1
      q(0039),
d815 1
a815 1
      q(0040),
d819 1
a819 1
      q(0041),
d823 1
a823 1
      q(0042),
d827 1
a827 1
      q(0043),
d831 1
a831 1
      q(0044),
d835 1
a835 1
      q(0046),
d839 1
a839 1
      q(0046),
d843 1
a843 1
      q(0048),
d847 1
a847 1
      q(0049),
d851 1
a851 1
      q(0045),
d855 1
a855 1
      q(0045),
d859 1
a859 1
      q(0045),
d863 1
a863 1
      q(0046),
d867 1
a867 1
      q(0047),
d871 1
a871 1
      q(0047),
d875 1
a875 1
      q(0046),
d879 1
a879 1
      q(0057),
a881 4
   q(hatran) => [
      q(0050),
      q(0),
      ],
d883 1
a883 1
      q(0051),
d887 1
a887 1
      q(0052),
d891 1
a891 1
      q(0053),
d895 1
a895 1
      q(0056),
d899 1
a899 1
      q(0005),
d903 1
a903 1
      q(0057),
d907 1
a907 1
      q(0057),
d911 1
a911 1
      q(0112),
d915 1
a915 1
      q(0117),
d919 1
a919 1
      q(0060),
d923 1
a923 1
      q(0055),
d927 1
a927 1
      q(0059),
d931 1
a931 1
      q(0061),
d935 1
a935 1
      q(0120),
d939 1
a939 1
      q(0070),
d943 1
a943 1
      q(0046),
d947 1
a947 1
      q(0067),
d951 1
a951 1
      q(0063),
d955 1
a955 1
      q(0062),
d959 1
a959 1
      q(0064),
d963 1
a963 1
      q(0065),
d967 1
a967 1
      q(0066),
d971 1
a971 1
      q(0131),
d975 1
a975 1
      q(0131),
d979 1
a979 1
      q(0038),
d983 1
a983 1
      q(0068),
d987 1
a987 1
      q(0069),
d991 1
a991 1
      q(0071),
d995 1
a995 1
      q(0072),
d999 1
a999 1
      q(0075),
d1003 1
a1003 1
      q(0073),
d1007 1
a1007 1
      q(0074),
d1011 1
a1011 1
      q(0076),
d1015 1
a1015 1
      q(0076),
d1019 1
a1019 1
      q(0077),
d1023 1
a1023 1
      q(0078),
d1027 1
a1027 1
      q(0079),
d1031 1
a1031 1
      q(0080),
d1035 1
a1035 1
      q(0080),
d1039 1
a1039 1
      q(0081),
d1043 1
a1043 1
      q(0053),
d1047 1
a1047 1
      q(0082),
d1051 1
a1051 1
      q(0083),
d1055 1
a1055 1
      q(0084),
d1059 1
a1059 1
      q(0091),
d1063 1
a1063 1
      q(0085),
d1067 1
a1067 1
      q(0085),
d1071 1
a1071 1
      q(0085),
d1075 1
a1075 1
      q(0086),
d1079 1
a1079 1
      q(0164),
d1083 1
a1083 1
      q(0087),
d1087 1
a1087 1
      q(0096),
d1091 1
a1091 1
      q(0096),
d1095 1
a1095 1
      q(0096),
d1099 1
a1099 1
      q(0096),
d1102 2
a1103 2
   q(mende kikakui) => [
      q(0088),
d1107 1
a1107 1
      q(0089),
d1111 1
a1111 1
      q(0090),
d1115 1
a1115 1
      q(0116),
d1119 1
a1119 9
      q(0116),
      q(0),
      ],
   q(modi) => [
      q(0092),
      q(2),
      ],
   q(modi, modi) => [
      q(0092),
d1123 1
a1123 1
      q(0094),
d1127 1
a1127 1
      q(0093),
d1131 1
a1131 1
      q(0093),
d1135 1
a1135 1
      q(0093),
d1139 1
a1139 1
      q(0093),
d1143 1
a1143 1
      q(0093),
d1147 1
a1147 1
      q(0030),
d1151 1
a1151 1
      q(0095),
d1155 1
a1155 1
      q(0095),
d1159 1
a1159 1
      q(0095),
a1161 4
   q(multani) => [
      q(0092),
      q(3),
      ],
d1163 1
a1163 1
      q(0097),
d1167 1
a1167 1
      q(0097),
d1171 1
a1171 1
      q(0101),
d1175 1
a1175 1
      q(0099),
d1179 1
a1179 1
      q(0029),
d1183 1
a1183 1
      q(0100),
d1187 1
a1187 1
      q(0100),
d1191 1
a1191 1
      q(0100),
d1195 1
a1195 1
      q(0143),
d1199 1
a1199 1
      q(0102),
d1203 1
a1203 1
      q(0103),
d1207 1
a1207 1
      q(0104),
d1211 1
a1211 1
      q(0104),
d1215 1
a1215 1
      q(0104),
d1219 1
a1219 1
      q(0104),
d1223 1
a1223 1
      q(0056),
d1227 1
a1227 1
      q(0056),
d1231 1
a1231 1
      q(0058),
d1235 1
a1235 1
      q(0098),
d1239 1
a1239 1
      q(0098),
d1243 1
a1243 1
      q(0110),
d1247 1
a1247 1
      q(0160),
d1251 1
a1251 1
      q(0125),
d1255 1
a1255 1
      q(0105),
d1259 1
a1259 1
      q(0105),
d1263 1
a1263 1
      q(0106),
d1267 1
a1267 1
      q(0105),
d1271 1
a1271 1
      q(0107),
d1275 1
a1275 1
      q(0054),
d1279 1
a1279 5
      q(0108),
      q(0),
      ],
   q(pau cin hau) => [
      q(0109),
d1283 1
a1283 1
      q(0111),
d1287 1
a1287 1
      q(0115),
d1291 1
a1291 1
      q(0116),
d1295 1
a1295 1
      q(0113),
d1299 1
a1299 1
      q(0120),
d1303 1
a1303 1
      q(0120),
d1307 1
a1307 1
      q(0120),
d1311 1
a1311 1
      q(0119),
d1315 1
a1315 1
      q(0118),
d1319 1
a1319 1
      q(0076),
d1323 1
a1323 1
      q(0121),
d1327 1
a1327 1
      q(0122),
d1331 1
a1331 1
      q(0123),
d1335 1
a1335 1
      q(0104),
d1339 1
a1339 1
      q(0129),
d1343 1
a1343 1
      q(0124),
d1347 1
a1347 1
      q(0126),
d1351 1
a1351 1
      q(0129),
d1355 1
a1355 1
      q(0129),
d1359 1
a1359 1
      q(0128),
d1363 1
a1363 1
      q(0128),
d1367 1
a1367 13
      q(0128),
      q(2),
      ],
   q(siddham) => [
      q(0130),
      q(1),
      ],
   q(siddham, siddham, siddhamatrka) => [
      q(0130),
      q(0),
      ],
   q(siddhamatrka) => [
      q(0130),
d1371 1
a1371 1
      q(0127),
d1375 1
a1375 1
      q(0131),
d1379 1
a1379 1
      q(0132),
d1383 1
a1383 1
      q(0133),
d1387 1
a1387 1
      q(0161),
d1391 1
a1391 1
      q(0134),
d1395 1
a1395 1
      q(0135),
d1399 1
a1399 1
      q(0165),
d1403 1
a1403 1
      q(0136),
d1407 1
a1407 1
      q(0139),
d1411 1
a1411 1
      q(0137),
d1415 1
a1415 1
      q(0138),
d1419 1
a1419 1
      q(0150),
d1423 1
a1423 1
      q(0150),
d1427 1
a1427 1
      q(0140),
a1429 4
   q(tai ahom) => [
      q(0003),
      q(2),
      ],
d1431 1
a1431 1
      q(0142),
d1435 1
a1435 1
      q(0071),
d1439 1
a1439 1
      q(0071),
d1443 1
a1443 1
      q(0146),
d1447 1
a1447 1
      q(0141),
d1451 1
a1451 1
      q(0141),
d1455 1
a1455 1
      q(0144),
d1459 1
a1459 1
      q(0145),
d1463 1
a1463 1
      q(0141),
d1467 1
a1467 1
      q(0147),
d1471 1
a1471 1
      q(0148),
d1475 1
a1475 1
      q(0151),
d1479 1
a1479 1
      q(0152),
d1483 1
a1483 1
      q(0153),
d1487 1
a1487 1
      q(0149),
d1491 1
a1491 1
      q(0149),
d1495 1
a1495 1
      q(0154),
d1499 1
a1499 1
      q(0155),
d1503 1
a1503 1
      q(0020),
d1507 1
a1507 1
      q(0156),
d1511 1
a1511 1
      q(0158),
d1515 1
a1515 1
      q(0157),
d1519 1
a1519 1
      q(0158),
d1523 1
a1523 1
      q(0158),
d1527 1
a1527 1
      q(0159),
d1531 1
a1531 1
      q(0162),
d1546 1
a1546 1
      q(Ahom) => [
a1547 4
         q(1),
         ],
      q(Arab) => [
         q(0004),
d1551 1
a1551 1
         q(0005),
d1555 1
a1555 1
         q(0006),
d1559 1
a1559 1
         q(0007),
d1563 1
a1563 1
         q(0008),
d1567 1
a1567 1
         q(0009),
d1571 1
a1571 1
         q(0010),
d1575 1
a1575 1
         q(0011),
d1579 1
a1579 1
         q(0012),
d1583 1
a1583 1
         q(0013),
d1587 1
a1587 1
         q(0014),
d1591 1
a1591 1
         q(0015),
d1595 1
a1595 1
         q(0016),
d1599 1
a1599 1
         q(0017),
d1603 1
a1603 1
         q(0018),
d1607 1
a1607 1
         q(0019),
d1611 1
a1611 1
         q(0020),
d1615 1
a1615 1
         q(0021),
d1619 1
a1619 1
         q(0022),
d1623 1
a1623 1
         q(0023),
d1627 1
a1627 1
         q(0024),
d1631 1
a1631 1
         q(0025),
d1635 1
a1635 1
         q(0026),
d1639 1
a1639 1
         q(0027),
d1643 1
a1643 1
         q(0028),
d1647 1
a1647 1
         q(0029),
d1651 1
a1651 1
         q(0030),
d1655 1
a1655 1
         q(0031),
d1659 1
a1659 1
         q(0032),
d1663 1
a1663 1
         q(0033),
d1667 1
a1667 1
         q(0034),
d1671 1
a1671 1
         q(0035),
d1675 1
a1675 1
         q(0036),
d1679 1
a1679 1
         q(0038),
d1683 1
a1683 1
         q(0037),
d1687 1
a1687 1
         q(0039),
d1691 1
a1691 1
         q(0040),
d1695 1
a1695 1
         q(0041),
d1699 1
a1699 1
         q(0042),
d1703 1
a1703 1
         q(0043),
d1707 1
a1707 1
         q(0044),
d1711 1
a1711 1
         q(0045),
d1715 1
a1715 1
         q(0046),
d1719 1
a1719 1
         q(0047),
d1723 1
a1723 1
         q(0048),
d1727 1
a1727 5
         q(0049),
         q(0),
         ],
      q(Hatr) => [
         q(0050),
d1731 1
a1731 1
         q(0051),
d1735 1
a1735 1
         q(0052),
d1739 1
a1739 1
         q(0053),
d1743 1
a1743 1
         q(0054),
d1747 1
a1747 1
         q(0055),
d1751 1
a1751 1
         q(0056),
d1755 1
a1755 1
         q(0057),
d1759 1
a1759 1
         q(0058),
d1763 1
a1763 1
         q(0059),
d1767 1
a1767 1
         q(0060),
d1771 1
a1771 1
         q(0061),
d1775 1
a1775 1
         q(0062),
d1779 1
a1779 1
         q(0063),
d1783 1
a1783 1
         q(0064),
d1787 1
a1787 1
         q(0065),
d1791 1
a1791 1
         q(0066),
d1795 1
a1795 1
         q(0067),
d1799 1
a1799 1
         q(0068),
d1803 1
a1803 1
         q(0069),
d1807 1
a1807 1
         q(0070),
d1811 1
a1811 1
         q(0071),
d1815 1
a1815 1
         q(0072),
d1819 1
a1819 1
         q(0073),
d1823 1
a1823 1
         q(0074),
d1827 1
a1827 1
         q(0075),
d1831 1
a1831 1
         q(0076),
d1835 1
a1835 1
         q(0077),
d1839 1
a1839 1
         q(0078),
d1843 1
a1843 1
         q(0079),
d1847 1
a1847 1
         q(0080),
d1851 1
a1851 1
         q(0081),
d1855 1
a1855 1
         q(0082),
d1859 1
a1859 1
         q(0083),
d1863 1
a1863 1
         q(0084),
d1867 1
a1867 1
         q(0085),
d1871 1
a1871 1
         q(0086),
d1875 1
a1875 1
         q(0087),
d1879 1
a1879 1
         q(0088),
d1883 1
a1883 1
         q(0089),
d1887 1
a1887 1
         q(0090),
d1891 1
a1891 1
         q(0091),
a1893 4
      q(Modi) => [
         q(0092),
         q(2),
         ],
d1895 1
a1895 1
         q(0094),
d1899 1
a1899 1
         q(0093),
d1903 1
a1903 1
         q(0095),
d1907 1
a1907 1
         q(0096),
a1909 4
      q(Mult) => [
         q(0092),
         q(3),
         ],
d1911 1
a1911 1
         q(0097),
d1915 1
a1915 1
         q(0098),
d1919 1
a1919 1
         q(0099),
d1923 1
a1923 1
         q(0100),
d1927 1
a1927 1
         q(0101),
d1931 1
a1931 1
         q(0102),
d1935 1
a1935 1
         q(0103),
d1939 1
a1939 1
         q(0104),
d1943 1
a1943 1
         q(0105),
d1947 1
a1947 1
         q(0106),
d1951 1
a1951 1
         q(0107),
d1955 1
a1955 5
         q(0108),
         q(0),
         ],
      q(Pauc) => [
         q(0109),
d1959 1
a1959 1
         q(0110),
d1963 1
a1963 1
         q(0111),
d1967 1
a1967 1
         q(0112),
d1971 1
a1971 1
         q(0113),
d1975 1
a1975 1
         q(0114),
d1979 1
a1979 1
         q(0115),
d1983 1
a1983 1
         q(0116),
d1987 1
a1987 1
         q(0117),
d1991 1
a1991 1
         q(0118),
d1995 1
a1995 1
         q(0119),
d1999 1
a1999 1
         q(0120),
d2003 1
a2003 1
         q(0121),
d2007 1
a2007 1
         q(0122),
d2011 1
a2011 1
         q(0123),
d2015 1
a2015 1
         q(0124),
d2019 1
a2019 1
         q(0125),
d2023 1
a2023 1
         q(0126),
d2027 1
a2027 1
         q(0127),
d2031 1
a2031 1
         q(0128),
d2035 1
a2035 5
         q(0129),
         q(1),
         ],
      q(Sidd) => [
         q(0130),
d2039 1
a2039 1
         q(0131),
d2043 1
a2043 1
         q(0132),
d2047 1
a2047 1
         q(0133),
d2051 1
a2051 1
         q(0134),
d2055 1
a2055 1
         q(0135),
d2059 1
a2059 1
         q(0136),
d2063 1
a2063 1
         q(0137),
d2067 1
a2067 1
         q(0138),
d2071 1
a2071 1
         q(0139),
d2075 1
a2075 1
         q(0140),
d2079 1
a2079 1
         q(0141),
d2083 1
a2083 1
         q(0142),
d2087 1
a2087 1
         q(0143),
d2091 1
a2091 1
         q(0144),
d2095 1
a2095 1
         q(0145),
d2099 1
a2099 1
         q(0146),
d2103 1
a2103 1
         q(0147),
d2107 1
a2107 1
         q(0148),
d2111 1
a2111 1
         q(0149),
d2115 1
a2115 1
         q(0150),
d2119 1
a2119 1
         q(0151),
d2123 1
a2123 1
         q(0152),
d2127 1
a2127 1
         q(0153),
d2131 1
a2131 1
         q(0154),
d2135 1
a2135 1
         q(0155),
d2139 1
a2139 1
         q(0156),
d2143 1
a2143 1
         q(0157),
d2147 1
a2147 1
         q(0158),
d2151 1
a2151 1
         q(0159),
d2155 1
a2155 1
         q(0160),
d2159 1
a2159 1
         q(0161),
d2163 1
a2163 1
         q(0162),
d2167 1
a2167 1
         q(0163),
d2171 1
a2171 1
         q(0164),
d2175 1
a2175 1
         q(0165),
d2181 1
a2181 1
         q(0161),
d2185 1
a2185 1
         q(0160),
d2189 1
a2189 1
         q(0155),
d2193 1
a2193 1
         q(0034),
d2197 1
a2197 1
         q(0033),
d2201 1
a2201 1
         q(0032),
d2205 1
a2205 1
         q(0053),
d2209 1
a2209 1
         q(0087),
d2213 1
a2213 1
         q(0127),
d2217 1
a2217 1
         q(0090),
d2221 1
a2221 1
         q(0089),
d2225 1
a2225 1
         q(0125),
d2229 1
a2229 1
         q(0098),
d2233 1
a2233 1
         q(0115),
d2237 1
a2237 1
         q(0083),
d2241 1
a2241 1
         q(0149),
d2245 1
a2245 1
         q(0123),
d2249 1
a2249 1
         q(0005),
d2253 1
a2253 1
         q(0051),
d2257 1
a2257 5
         q(0108),
         q(0),
         ],
      q(127) => [
         q(0050),
d2261 1
a2261 1
         q(0117),
d2265 1
a2265 1
         q(0112),
d2269 1
a2269 1
         q(0113),
d2273 1
a2273 1
         q(0114),
d2277 1
a2277 1
         q(0007),
d2281 1
a2281 1
         q(0136),
d2285 1
a2285 1
         q(0139),
d2289 1
a2289 1
         q(0138),
d2293 1
a2293 1
         q(0137),
d2297 1
a2297 1
         q(0086),
d2301 1
a2301 1
         q(0085),
d2305 1
a2305 1
         q(0094),
d2309 1
a2309 1
         q(0099),
d2313 1
a2313 1
         q(0004),
d2317 1
a2317 1
         q(0101),
d2321 1
a2321 1
         q(0151),
d2325 1
a2325 1
         q(0105),
d2329 1
a2329 1
         q(0056),
d2333 1
a2333 1
         q(0095),
d2337 1
a2337 1
         q(0042),
d2341 1
a2341 1
         q(0021),
d2345 1
a2345 1
         q(0082),
d2349 1
a2349 1
         q(0025),
d2353 1
a2353 1
         q(0040),
d2357 1
a2357 1
         q(0058),
d2361 1
a2361 1
         q(0122),
d2365 1
a2365 1
         q(0103),
d2369 1
a2369 1
         q(0075),
d2373 1
a2373 1
         q(0074),
d2377 1
a2377 1
         q(0073),
d2381 1
a2381 1
         q(0093),
d2385 1
a2385 1
         q(0027),
d2389 1
a2389 1
         q(0028),
d2393 1
a2393 1
         q(0039),
d2397 1
a2397 1
         q(0035),
d2401 1
a2401 1
         q(0110),
d2405 1
a2405 1
         q(0006),
d2413 1
a2413 1
         q(0037),
d2417 1
a2417 1
         q(0038),
d2421 1
a2421 1
         q(0030),
d2425 1
a2425 1
         q(0010),
d2429 1
a2429 1
         q(0107),
d2433 1
a2433 1
         q(0104),
d2437 1
a2437 5
         q(0158),
         q(0),
         ],
      q(263) => [
         q(0109),
d2441 1
a2441 1
         q(0157),
d2445 1
a2445 1
         q(0128),
d2449 1
a2449 1
         q(0116),
d2453 1
a2453 1
         q(0014),
d2457 1
a2457 1
         q(0045),
d2461 1
a2461 1
         q(0068),
d2465 1
a2465 1
         q(0148),
d2469 1
a2469 1
         q(0024),
d2473 1
a2473 1
         q(0124),
d2477 1
a2477 5
         q(0015),
         q(0),
         ],
      q(302) => [
         q(0130),
d2481 1
a2481 1
         q(0064),
d2485 1
a2485 1
         q(0044),
d2489 1
a2489 1
         q(0084),
d2493 1
a2493 1
         q(0029),
d2497 1
a2497 1
         q(0135),
d2501 1
a2501 1
         q(0070),
d2505 1
a2505 1
         q(0131),
d2509 1
a2509 1
         q(0129),
d2513 1
a2513 1
         q(0043),
d2517 1
a2517 1
         q(0141),
d2521 1
a2521 1
         q(0066),
a2523 4
      q(323) => [
         q(0092),
         q(1),
         ],
d2525 1
a2525 1
         q(0012),
d2529 1
a2529 1
         q(0154),
d2533 1
a2533 1
         q(0106),
d2537 1
a2537 1
         q(0153),
d2541 1
a2541 1
         q(0111),
d2545 1
a2545 1
         q(0076),
d2549 1
a2549 1
         q(0077),
d2553 1
a2553 5
         q(0096),
         q(0),
         ],
      q(338) => [
         q(0003),
d2557 1
a2557 1
         q(0147),
d2561 1
a2561 1
         q(0041),
d2565 1
a2565 1
         q(0126),
d2569 1
a2569 1
         q(0067),
d2573 1
a2573 1
         q(0144),
d2577 1
a2577 1
         q(0091),
d2581 1
a2581 1
         q(0132),
d2585 1
a2585 1
         q(0019),
d2589 1
a2589 1
         q(0097),
d2593 1
a2593 1
         q(0071),
d2597 1
a2597 1
         q(0152),
d2601 1
a2601 1
         q(0142),
d2605 1
a2605 1
         q(0143),
d2609 1
a2609 1
         q(0065),
d2613 1
a2613 1
         q(0072),
d2617 1
a2617 1
         q(0062),
d2621 1
a2621 1
         q(0022),
d2625 1
a2625 1
         q(0146),
d2629 1
a2629 1
         q(0008),
d2633 1
a2633 1
         q(0059),
d2637 1
a2637 1
         q(0134),
d2641 1
a2641 1
         q(0120),
d2645 1
a2645 1
         q(0011),
d2649 1
a2649 1
         q(0017),
d2653 1
a2653 1
         q(0150),
d2657 1
a2657 1
         q(0047),
d2661 1
a2661 1
         q(0018),
d2665 1
a2665 1
         q(0140),
d2669 1
a2669 1
         q(0133),
d2673 1
a2673 1
         q(0080),
d2677 1
a2677 1
         q(0078),
d2681 1
a2681 1
         q(0079),
d2685 1
a2685 1
         q(0026),
d2689 1
a2689 1
         q(0052),
d2693 1
a2693 1
         q(0063),
d2697 1
a2697 1
         q(0055),
d2701 1
a2701 1
         q(0060),
d2705 1
a2705 1
         q(0100),
d2709 1
a2709 1
         q(0036),
d2713 1
a2713 1
         q(0009),
d2717 1
a2717 1
         q(0069),
d2721 1
a2721 1
         q(0081),
d2725 1
a2725 1
         q(0088),
d2733 1
a2733 1
         q(0020),
d2737 1
a2737 1
         q(0023),
d2741 1
a2741 1
         q(0054),
d2745 1
a2745 1
         q(0162),
d2749 1
a2749 1
         q(0156),
d2753 1
a2753 1
         q(0159),
d2757 1
a2757 1
         q(0102),
d2761 1
a2761 1
         q(0046),
d2765 1
a2765 1
         q(0048),
d2769 1
a2769 1
         q(0049),
d2773 1
a2773 1
         q(0061),
d2777 1
a2777 1
         q(0145),
d2781 1
a2781 1
         q(0013),
d2785 1
a2785 1
         q(0016),
d2789 1
a2789 1
         q(0057),
d2793 1
a2793 1
         q(0121),
d2797 1
a2797 1
         q(0031),
d2801 1
a2801 1
         q(0118),
d2805 1
a2805 1
         q(0119),
d2809 1
a2809 1
         q(0163),
d2813 1
a2813 1
         q(0164),
d2817 1
a2817 1
         q(0165),
d2827 158
a2984 163
      q(0003) => q(Ahom),
      q(0004) => q(Arab),
      q(0005) => q(Armi),
      q(0006) => q(Armn),
      q(0007) => q(Avst),
      q(0008) => q(Bali),
      q(0009) => q(Bamu),
      q(0010) => q(Bass),
      q(0011) => q(Batk),
      q(0012) => q(Beng),
      q(0013) => q(Blis),
      q(0014) => q(Bopo),
      q(0015) => q(Brah),
      q(0016) => q(Brai),
      q(0017) => q(Bugi),
      q(0018) => q(Buhd),
      q(0019) => q(Cakm),
      q(0020) => q(Cans),
      q(0021) => q(Cari),
      q(0022) => q(Cham),
      q(0023) => q(Cher),
      q(0024) => q(Cirt),
      q(0025) => q(Copt),
      q(0026) => q(Cprt),
      q(0027) => q(Cyrl),
      q(0028) => q(Cyrs),
      q(0029) => q(Deva),
      q(0030) => q(Dsrt),
      q(0031) => q(Dupl),
      q(0032) => q(Egyd),
      q(0033) => q(Egyh),
      q(0034) => q(Egyp),
      q(0035) => q(Elba),
      q(0036) => q(Ethi),
      q(0037) => q(Geor),
      q(0038) => q(Geok),
      q(0039) => q(Glag),
      q(0040) => q(Goth),
      q(0041) => q(Gran),
      q(0042) => q(Grek),
      q(0043) => q(Gujr),
      q(0044) => q(Guru),
      q(0045) => q(Hang),
      q(0046) => q(Hani),
      q(0047) => q(Hano),
      q(0048) => q(Hans),
      q(0049) => q(Hant),
      q(0050) => q(Hatr),
      q(0051) => q(Hebr),
      q(0052) => q(Hira),
      q(0053) => q(Hluw),
      q(0054) => q(Hmng),
      q(0055) => q(Hrkt),
      q(0056) => q(Hung),
      q(0057) => q(Inds),
      q(0058) => q(Ital),
      q(0059) => q(Java),
      q(0060) => q(Jpan),
      q(0061) => q(Jurc),
      q(0062) => q(Kali),
      q(0063) => q(Kana),
      q(0064) => q(Khar),
      q(0065) => q(Khmr),
      q(0066) => q(Khoj),
      q(0067) => q(Knda),
      q(0068) => q(Kore),
      q(0069) => q(Kpel),
      q(0070) => q(Kthi),
      q(0071) => q(Lana),
      q(0072) => q(Laoo),
      q(0073) => q(Latf),
      q(0074) => q(Latg),
      q(0075) => q(Latn),
      q(0076) => q(Lepc),
      q(0077) => q(Limb),
      q(0078) => q(Lina),
      q(0079) => q(Linb),
      q(0080) => q(Lisu),
      q(0081) => q(Loma),
      q(0082) => q(Lyci),
      q(0083) => q(Lydi),
      q(0084) => q(Mahj),
      q(0085) => q(Mand),
      q(0086) => q(Mani),
      q(0087) => q(Maya),
      q(0088) => q(Mend),
      q(0089) => q(Merc),
      q(0090) => q(Mero),
      q(0091) => q(Mlym),
      q(0092) => q(Mult),
      q(0093) => q(Moon),
      q(0094) => q(Mong),
      q(0095) => q(Mroo),
      q(0096) => q(Mtei),
      q(0097) => q(Mymr),
      q(0098) => q(Narb),
      q(0099) => q(Nbat),
      q(0100) => q(Nkgb),
      q(0101) => q(Nkoo),
      q(0102) => q(Nshu),
      q(0103) => q(Ogam),
      q(0104) => q(Olck),
      q(0105) => q(Orkh),
      q(0106) => q(Orya),
      q(0107) => q(Osma),
      q(0108) => q(Palm),
      q(0109) => q(Pauc),
      q(0110) => q(Perm),
      q(0111) => q(Phag),
      q(0112) => q(Phli),
      q(0113) => q(Phlp),
      q(0114) => q(Phlv),
      q(0115) => q(Phnx),
      q(0116) => q(Plrd),
      q(0117) => q(Prti),
      q(0118) => q(Qaaa),
      q(0119) => q(Qabx),
      q(0120) => q(Rjng),
      q(0121) => q(Roro),
      q(0122) => q(Runr),
      q(0123) => q(Samr),
      q(0124) => q(Sara),
      q(0125) => q(Sarb),
      q(0126) => q(Saur),
      q(0127) => q(Sgnw),
      q(0128) => q(Shaw),
      q(0129) => q(Shrd),
      q(0130) => q(Sidd),
      q(0131) => q(Sind),
      q(0132) => q(Sinh),
      q(0133) => q(Sora),
      q(0134) => q(Sund),
      q(0135) => q(Sylo),
      q(0136) => q(Syrc),
      q(0137) => q(Syre),
      q(0138) => q(Syrj),
      q(0139) => q(Syrn),
      q(0140) => q(Tagb),
      q(0141) => q(Takr),
      q(0142) => q(Tale),
      q(0143) => q(Talu),
      q(0144) => q(Taml),
      q(0145) => q(Tang),
      q(0146) => q(Tavt),
      q(0147) => q(Telu),
      q(0148) => q(Teng),
      q(0149) => q(Tfng),
      q(0150) => q(Tglg),
      q(0151) => q(Thaa),
      q(0152) => q(Thai),
      q(0153) => q(Tibt),
      q(0154) => q(Tirh),
      q(0155) => q(Ugar),
      q(0156) => q(Vaii),
      q(0157) => q(Visp),
      q(0158) => q(Wara),
      q(0159) => q(Wole),
      q(0160) => q(Xpeo),
      q(0161) => q(Xsux),
      q(0162) => q(Yiii),
      q(0163) => q(Zinh),
      q(0164) => q(Zmth),
      q(0165) => q(Zsym),
d2989 158
a3146 163
      q(0003) => q(338),
      q(0004) => q(160),
      q(0005) => q(124),
      q(0006) => q(230),
      q(0007) => q(134),
      q(0008) => q(360),
      q(0009) => q(435),
      q(0010) => q(259),
      q(0011) => q(365),
      q(0012) => q(325),
      q(0013) => q(550),
      q(0014) => q(285),
      q(0015) => q(300),
      q(0016) => q(570),
      q(0017) => q(367),
      q(0018) => q(372),
      q(0019) => q(349),
      q(0020) => q(440),
      q(0021) => q(201),
      q(0022) => q(358),
      q(0023) => q(445),
      q(0024) => q(291),
      q(0025) => q(204),
      q(0026) => q(403),
      q(0027) => q(220),
      q(0028) => q(221),
      q(0029) => q(315),
      q(0030) => q(250),
      q(0031) => q(755),
      q(0032) => q(070),
      q(0033) => q(060),
      q(0034) => q(050),
      q(0035) => q(226),
      q(0036) => q(430),
      q(0037) => q(240),
      q(0038) => q(241),
      q(0039) => q(225),
      q(0040) => q(206),
      q(0041) => q(343),
      q(0042) => q(200),
      q(0043) => q(320),
      q(0044) => q(310),
      q(0045) => q(286),
      q(0046) => q(500),
      q(0047) => q(371),
      q(0048) => q(501),
      q(0049) => q(502),
      q(0050) => q(127),
      q(0051) => q(125),
      q(0052) => q(410),
      q(0053) => q(080),
      q(0054) => q(450),
      q(0055) => q(412),
      q(0056) => q(176),
      q(0057) => q(610),
      q(0058) => q(210),
      q(0059) => q(361),
      q(0060) => q(413),
      q(0061) => q(510),
      q(0062) => q(357),
      q(0063) => q(411),
      q(0064) => q(305),
      q(0065) => q(355),
      q(0066) => q(322),
      q(0067) => q(345),
      q(0068) => q(287),
      q(0069) => q(436),
      q(0070) => q(317),
      q(0071) => q(351),
      q(0072) => q(356),
      q(0073) => q(217),
      q(0074) => q(216),
      q(0075) => q(215),
      q(0076) => q(335),
      q(0077) => q(336),
      q(0078) => q(400),
      q(0079) => q(401),
      q(0080) => q(399),
      q(0081) => q(437),
      q(0082) => q(202),
      q(0083) => q(116),
      q(0084) => q(314),
      q(0085) => q(140),
      q(0086) => q(139),
      q(0087) => q(090),
      q(0088) => q(438),
      q(0089) => q(101),
      q(0090) => q(100),
      q(0091) => q(347),
      q(0092) => q(323),
      q(0093) => q(218),
      q(0094) => q(145),
      q(0095) => q(199),
      q(0096) => q(337),
      q(0097) => q(350),
      q(0098) => q(106),
      q(0099) => q(159),
      q(0100) => q(420),
      q(0101) => q(165),
      q(0102) => q(499),
      q(0103) => q(212),
      q(0104) => q(261),
      q(0105) => q(175),
      q(0106) => q(327),
      q(0107) => q(260),
      q(0108) => q(126),
      q(0109) => q(263),
      q(0110) => q(227),
      q(0111) => q(331),
      q(0112) => q(131),
      q(0113) => q(132),
      q(0114) => q(133),
      q(0115) => q(115),
      q(0116) => q(282),
      q(0117) => q(130),
      q(0118) => q(900),
      q(0119) => q(949),
      q(0120) => q(363),
      q(0121) => q(620),
      q(0122) => q(211),
      q(0123) => q(123),
      q(0124) => q(292),
      q(0125) => q(105),
      q(0126) => q(344),
      q(0127) => q(095),
      q(0128) => q(281),
      q(0129) => q(319),
      q(0130) => q(302),
      q(0131) => q(318),
      q(0132) => q(348),
      q(0133) => q(398),
      q(0134) => q(362),
      q(0135) => q(316),
      q(0136) => q(135),
      q(0137) => q(138),
      q(0138) => q(137),
      q(0139) => q(136),
      q(0140) => q(373),
      q(0141) => q(321),
      q(0142) => q(353),
      q(0143) => q(354),
      q(0144) => q(346),
      q(0145) => q(520),
      q(0146) => q(359),
      q(0147) => q(340),
      q(0148) => q(290),
      q(0149) => q(120),
      q(0150) => q(370),
      q(0151) => q(170),
      q(0152) => q(352),
      q(0153) => q(330),
      q(0154) => q(326),
      q(0155) => q(040),
      q(0156) => q(470),
      q(0157) => q(280),
      q(0158) => q(262),
      q(0159) => q(480),
      q(0160) => q(030),
      q(0161) => q(020),
      q(0162) => q(460),
      q(0163) => q(994),
      q(0164) => q(995),
      q(0165) => q(996),
@


