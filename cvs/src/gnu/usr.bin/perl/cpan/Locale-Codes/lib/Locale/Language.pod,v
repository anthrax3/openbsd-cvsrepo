head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.5
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.4.0.10
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.4
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.6
	OPENBSD_5_8_BASE:1.1.1.4
	PERL_5_20_2:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.2
	OPENBSD_5_7_BASE:1.1.1.4
	PERL_5_20_1:1.1.1.4
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.00;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.49.03;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.03;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.07.47;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.58.53;	author afresh1;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.11.17.20.52.48;	author afresh1;	state Exp;
branches;
next	1.1.1.5;
commitid	B31cAbBIXiCqnL97;

1.1.1.5
date	2017.08.14.13.45.39;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@=pod

=head1 NAME

Locale::Language - standard codes for language identification

=head1 SYNOPSIS

   use Locale::Language;

   $lang = code2language('en');        # $lang gets 'English'
   $code = language2code('French');    # $code gets 'fr'

   @@codes   = all_language_codes();
   @@names   = all_language_names();

=head1 DESCRIPTION

This module provides access to standard codes used
for identifying languages, such as those as defined in ISO 639.

Most of the routines take an optional additional argument which
specifies the code set to use. If not specified, the default ISO
639 two-letter codes will be used.

=head1 SUPPORTED CODE SETS

There are several different code sets you can use for identifying
languages. A code set may be specified using either a name, or a
constant that is automatically exported by this module.

For example, the two are equivalent:

   $lang = code2language('en','alpha-2');
   $lang = code2language('en',LOCALE_LANG_ALPHA_2);

The codesets currently supported are:

=over 4

=item B<alpha-2, LOCALE_LANG_ALPHA_2>

This is the set of two-letter (lowercase) codes from ISO 639-1, such
as 'he' for Hebrew.  It also includes additions to this set included
in the IANA language registry.

This is the default code set.

=item B<alpha-3, LOCALE_LANG_ALPHA_3>

This is the set of three-letter (lowercase) bibliographic codes from
ISO 639-2 and 639-5, such as 'heb' for Hebrew.  It also includes
additions to this set included in the IANA language registry.

=item B<term, LOCALE_LANG_TERM>

This is the set of three-letter (lowercase) terminologic codes from
ISO 639.

=back

=head1 ROUTINES

=over 4

=item B<code2language(CODE [,CODESET] [,'retired'])>

=item B<language2code(NAME [,CODESET] [,'retired'])>

=item B<language_code2code(CODE ,CODESET ,CODESET2)>

=item B<all_language_codes([CODESET] [,'retired'])>

=item B<all_language_names([CODESET] [,'retired'])>

=item B<Locale::Language::rename_language(CODE ,NEW_NAME [,CODESET])>

=item B<Locale::Language::add_language(CODE ,NAME [,CODESET])>

=item B<Locale::Language::delete_language(CODE [,CODESET])>

=item B<Locale::Language::add_language_alias(NAME ,NEW_NAME)>

=item B<Locale::Language::delete_language_alias(NAME)>

=item B<Locale::Language::rename_language_code(CODE ,NEW_CODE [,CODESET])>

=item B<Locale::Language::add_language_code_alias(CODE ,NEW_CODE [,CODESET])>

=item B<Locale::Language::delete_language_code_alias(CODE [,CODESET])>

These routines are all documented in the L<Locale::Codes::API> man page.

=back

=head1 SEE ALSO

=over 4

=item L<Locale::Codes>

The Locale-Codes distribution.

=item L<Locale::Codes::API>

The list of functions supported by this module.

=item L<http://www.loc.gov/standards/iso639-2/>

Source of the ISO 639-2 codes.

=item L<http://www.loc.gov/standards/iso639-5/>

Source of the ISO 639-5 codes.

=item L<http://www.iana.org/assignments/language-subtag-registry>

The IANA language subtag registry.

=back

=head1 AUTHOR

See Locale::Codes for full author history.

Currently maintained by Sullivan Beck (sbeck@@cpan.org).

=head1 COPYRIGHT

   Copyright (c) 1997-2001 Canon Research Centre Europe (CRE).
   Copyright (c) 2001-2010 Neil Bowers
   Copyright (c) 2010-2015 Sullivan Beck

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut
@


1.1
log
@Initial revision
@
text
@d1 1
d5 1
a5 1
Locale::Language - ISO two letter codes for language identification (ISO 639)
d9 1
a9 7
    use Locale::Language;
    
    $lang = code2language('en');        # $lang gets 'English'
    $code = language2code('French');    # $code gets 'fr'
    
    @@codes   = all_language_codes();
    @@names   = all_language_names();
d11 5
d19 8
a26 5
The C<Locale::Language> module provides access to the ISO two-letter
codes for identifying languages, as defined in ISO 639. You can either
access the codes via the L<conversion routines> (described below),
or via the two functions which return lists of all language codes or
all language names.
d28 3
d32 1
a32 1
=head1 CONVERSION ROUTINES
d34 4
a37 1
There are two conversion routines: C<code2language()> and C<language2code()>.
d41 1
a41 1
=item code2language()
d43 3
a45 4
This function takes a two letter language code and returns a string
which contains the name of the language identified. If the code is
not a valid language code, as defined by ISO 639, then C<undef>
will be returned.
d47 1
a47 1
    $lang = code2language($code);
d49 1
a49 1
=item language2code()
d51 3
a53 4
This function takes a language name and returns the corresponding
two letter language code, if such exists.
If the argument could not be identified as a language name,
then C<undef> will be returned.
d55 1
a55 1
    $code = language2code('French');
d57 2
a58 2
The case of the language name is not important.
See the section L<KNOWN BUGS AND LIMITATIONS> below.
d62 1
a62 5

=head1 QUERY ROUTINES

There are two function which can be used to obtain a list of all
language codes, or all language names:
d66 1
a66 1
=item C<all_language_codes()>
d68 1
a68 3
Returns a list of all two-letter language codes.
The codes are guaranteed to be all lower-case,
and not in any particular order.
d70 1
a70 1
=item C<all_language_names()>
d72 1
a72 3
Returns a list of all language names for which there is a corresponding
two-letter language code. The names are capitalised, and not returned
in any particular order.
d74 1
a74 1
=back
d76 1
d78 1
a78 1
=head1 EXAMPLES
d80 1
a80 17
The following example illustrates use of the C<code2language()> function.
The user is prompted for a language code, and then told the corresponding
language name:

    $| = 1;    # turn off buffering
    
    print "Enter language code: ";
    chop($code = <STDIN>);
    $lang = code2language($code);
    if (defined $lang)
    {
        print "$code = $lang\n";
    }
    else
    {
        print "'$code' is not a valid language code!\n";
    }
d82 1
a82 1
=head1 KNOWN BUGS AND LIMITATIONS
d84 1
a84 1
=over 4
d86 1
a86 1
=item *
d88 1
a88 3
In the current implementation, all data is read in when the
module is loaded, and then held in memory.
A lazy implementation would be more memory friendly.
d90 1
a90 1
=item *
d92 1
a92 3
Currently just supports the two letter language codes -
there are also three-letter codes, and numbers.
Would these be of any use to anyone?
d100 1
a100 1
=item Locale::Country
d102 1
a102 2
ISO codes for identification of country (ISO 3166).
Supports 2-letter, 3-letter, and numeric country codes.
d104 1
a104 1
=item Locale::Script
d106 1
a106 1
ISO codes for identification of written scripts (ISO 15924).
d108 1
a108 1
=item Locale::Currency
d110 1
a110 1
ISO three letter codes for identification of currencies and funds (ISO 4217).
d112 1
a112 1
=item ISO 639:1988 (E/F)
d114 1
a114 1
Code for the representation of names of languages.
d116 1
a116 1
=item http://lcweb.loc.gov/standards/iso639-2/langhome.html
d118 1
a118 1
Home page for ISO 639-2.
d122 1
d124 1
a124 1
=head1 AUTHOR
d126 1
a126 1
Neil Bowers E<lt>neil@@bowers.comE<gt>
d130 3
a132 3
Copyright (C) 2002-2004, Neil Bowers.

Copyright (c) 1997-2001 Canon Research Centre Europe (CRE).
a137 1

@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a0 1
=pod
d4 1
a4 1
Locale::Language - standard codes for language identification
d8 7
a14 1
   use Locale::Language;
a15 5
   $lang = code2language('en');        # $lang gets 'English'
   $code = language2code('French');    # $code gets 'fr'

   @@codes   = all_language_codes();
   @@names   = all_language_names();
d19 5
a23 2
The C<Locale::Language> module provides access to standard codes used
for identifying languages, such as those as defined in ISO 639.
a24 3
Most of the routines take an optional additional argument which
specifies the code set to use. If not specified, the default ISO
639 two-letter codes will be used.
d26 1
a26 1
=head1 SUPPORTED CODE SETS
d28 1
a28 3
There are several different code sets you can use for identifying
languages. A code set may be specified using either a name, or a
constant that is automatically exported by this module.
d30 1
a30 4
For example, the two are equivalent:

   $lang = code2language('en','alpha-2');
   $lang = code2language('en',LOCALE_CODE_ALPHA_2);
d32 1
a32 1
The codesets currently supported are:
d34 4
a37 1
=over 4
d39 1
a39 1
=item B<alpha-2, LOCALE_LANG_ALPHA_2>
d41 1
a41 3
This is the set of two-letter (lowercase) codes from ISO 639-1, such
as 'he' for Hebrew.  It also includes additions to this set included
in the IANA language registry.
d43 4
a46 1
This is the default code set.
d48 1
a48 1
=item B<alpha-3, LOCALE_LANG_ALPHA_3>
d50 2
a51 3
This is the set of three-letter (lowercase) bibliographic codes from
ISO 639-2 and 639-5, such as 'heb' for Hebrew.  It also includes
additions to this set included in the IANA language registry.
d53 1
a53 1
=item B<term, LOCALE_LANG_TERM>
a54 2
This is the set of three-letter (lowercase) terminologic codes from
ISO 639.
d56 1
a56 1
=back
d58 2
a59 1
=head1 ROUTINES
d63 1
a63 1
=item B<code2language ( CODE [,CODESET] )>
d65 3
a67 1
=item B<language2code ( NAME [,CODESET] )>
d69 1
a69 1
=item B<language_code2code ( CODE ,CODESET ,CODESET2 )>
d71 3
a73 1
=item B<all_language_codes ( [CODESET] )>
d75 1
a75 1
=item B<all_language_names ( [CODESET] )>
a76 1
=item B<Locale::Language::rename_language  ( CODE ,NEW_NAME [,CODESET] )>
d78 1
a78 1
=item B<Locale::Language::add_language  ( CODE ,NAME [,CODESET] )>
d80 17
a96 1
=item B<Locale::Language::delete_language  ( CODE [,CODESET] )>
d98 1
a98 1
=item B<Locale::Language::add_language_alias  ( NAME ,NEW_NAME )>
d100 1
a100 1
=item B<Locale::Language::delete_language_alias  ( NAME )>
d102 1
a102 1
=item B<Locale::Language::rename_language_code  ( CODE ,NEW_CODE [,CODESET] )>
d104 3
a106 1
=item B<Locale::Language::add_language_code_alias  ( CODE ,NEW_CODE [,CODESET] )>
d108 1
a108 1
=item B<Locale::Language::delete_language_code_alias  ( CODE [,CODESET] )>
d110 3
a112 1
These routines are all documented in the Locale::Codes::API man page.
d120 1
a120 1
=item B<Locale::Codes>
d122 2
a123 1
The Locale-Codes distribution.
d125 1
a125 1
=item B<Locale::Codes::API>
d127 1
a127 1
The list of functions supported by this module.
d129 1
a129 1
=item B<http://www.loc.gov/standards/iso639-2/>
d131 1
a131 1
Source of the ISO 639-2 codes.
d133 1
a133 1
=item B<http://www.loc.gov/standards/iso639-5/>
d135 1
a135 1
Source of the ISO 639-5 codes.
d137 1
a137 1
=item B<http://www.iana.org/assignments/language-subtag-registry>
d139 1
a139 1
The IANA language subtag registry.
d143 1
d146 1
a146 1
See Locale::Codes for full author history.
d148 1
a148 1
Currently maintained by Sullivan Beck (sbeck@@cpan.org).
d150 1
a150 1
=head1 COPYRIGHT
d152 1
a152 3
   Copyright (c) 1997-2001 Canon Research Centre Europe (CRE).
   Copyright (c) 2001-2010 Neil Bowers
   Copyright (c) 2010-2012 Sullivan Beck
d158 1
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d132 1
a132 1
   Copyright (c) 2010-2013 Sullivan Beck
@


1.1.1.4
log
@Import perl-5.20.1
@
text
@d35 1
a35 1
   $lang = code2language('en',LOCALE_LANG_ALPHA_2);
d132 1
a132 1
   Copyright (c) 2010-2014 Sullivan Beck
@


1.1.1.5
log
@Import perl-5.24.2
@
text
@d19 1
a19 1
This module provides access to standard codes used
d66 1
a66 1
=item B<code2language(CODE [,CODESET] [,'retired'])>
d68 1
a68 1
=item B<language2code(NAME [,CODESET] [,'retired'])>
d70 1
a70 1
=item B<language_code2code(CODE ,CODESET ,CODESET2)>
d72 1
a72 1
=item B<all_language_codes([CODESET] [,'retired'])>
d74 1
a74 1
=item B<all_language_names([CODESET] [,'retired'])>
d76 1
a76 1
=item B<Locale::Language::rename_language(CODE ,NEW_NAME [,CODESET])>
d78 1
a78 1
=item B<Locale::Language::add_language(CODE ,NAME [,CODESET])>
d80 1
a80 1
=item B<Locale::Language::delete_language(CODE [,CODESET])>
d82 1
a82 1
=item B<Locale::Language::add_language_alias(NAME ,NEW_NAME)>
d84 1
a84 1
=item B<Locale::Language::delete_language_alias(NAME)>
d86 1
a86 1
=item B<Locale::Language::rename_language_code(CODE ,NEW_CODE [,CODESET])>
d88 1
a88 1
=item B<Locale::Language::add_language_code_alias(CODE ,NEW_CODE [,CODESET])>
d90 1
a90 1
=item B<Locale::Language::delete_language_code_alias(CODE [,CODESET])>
d92 1
a92 1
These routines are all documented in the L<Locale::Codes::API> man page.
d100 1
a100 1
=item L<Locale::Codes>
d104 1
a104 1
=item L<Locale::Codes::API>
d108 1
a108 1
=item L<http://www.loc.gov/standards/iso639-2/>
d112 1
a112 1
=item L<http://www.loc.gov/standards/iso639-5/>
d116 1
a116 1
=item L<http://www.iana.org/assignments/language-subtag-registry>
d132 1
a132 1
   Copyright (c) 2010-2015 Sullivan Beck
@


