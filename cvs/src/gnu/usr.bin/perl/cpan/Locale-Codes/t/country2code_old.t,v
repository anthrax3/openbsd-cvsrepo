head	1.1;
branch	1.1.1;
access;
symbols
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.14
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.12
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.6
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.8
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.07.50;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.07.50;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.54;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w

require 5.002;

$runtests=shift(@@ARGV);
if ( -f "t/testfunc.pl" ) {
  require "t/testfunc.pl";
  $dir="./lib";
  $tdir="t";
} elsif ( -f "testfunc.pl" ) {
  require "testfunc.pl";
  $dir="../lib";
  $tdir=".";
} else {
  die "ERROR: cannot find testfunc.pl\n";
}

unshift(@@INC,$dir);
use Locale::Country;

%type = ( "LOCALE_CODE_ALPHA_2" => LOCALE_CODE_ALPHA_2,
          "LOCALE_CODE_ALPHA_3" => LOCALE_CODE_ALPHA_3,
          "LOCALE_CODE_NUMERIC" => LOCALE_CODE_NUMERIC,
        );

sub test {
   my(@@test) = @@_;
   $test[1]  = $type{$test[1]}   if (@@test == 2  &&  $test[1]  &&  exists $type{$test[1]});
   return country2code(@@test);
}

$tests = "

kazakhstan
   ~
   kz

kazakstan
   ~
   kz

macao
   ~
   mo

macau
   ~
   mo


~ _undef_

_undef_
   ~
   _undef_

Banana
   ~
   _undef_

japan
   ~
   jp

Japan
   ~
   jp

United States
   ~
   us

United Kingdom
   ~
   gb

Andorra
   ~
   ad

Zimbabwe
   ~
   zw

Iran
   ~
   ir

North Korea
   ~
   kp

South Korea
   ~
   kr

Libya
   ~
   ly

Syria
   ~
   sy

Svalbard
   ~
   _undef_

Jan Mayen
   ~
   _undef_

USA
   ~
   us

United States of America
   ~
   us

Great Britain
   ~
   gb

Burma
   ~
   mm

French Southern and Antarctic Lands
   ~
   tf

Aland Islands
   ~
   ax

Yugoslavia
   ~
   _undef_

Serbia and Montenegro
   ~
   _undef_

East Timor
   ~
   tl

Zaire
   ~
   _undef_

Congo, The Democratic Republic of the
   ~
   cd

Congo, The Democratic Republic of the
LOCALE_CODE_ALPHA_3
   ~
   cod

Congo, The Democratic Republic of the
LOCALE_CODE_NUMERIC
   ~
   180

";

print "country2code (old)...\n";
test_Func(\&test,$tests,$runtests);

1;
# Local Variables:
# mode: cperl
# indent-tabs-mode: nil
# cperl-indent-level: 3
# cperl-continued-statement-offset: 2
# cperl-continued-brace-offset: 0
# cperl-brace-offset: 0
# cperl-brace-imaginary-offset: 0
# cperl-label-offset: -2
# End:

@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d101 1
a101 1
Syrian Arab Republic
@

