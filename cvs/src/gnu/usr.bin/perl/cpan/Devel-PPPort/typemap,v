head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2017.02.05.00.31.56;	author afresh1;	state Exp;
branches;
next	1.4;
commitid	cxJ08BvJA9Pt2PTM;

1.4
date	2014.11.17.20.56.58;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	QP75iYx42Uo7mMxO;

1.3
date	2013.03.25.20.40.48;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.24.15.06.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.06.59;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.52.43;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.5
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@################################################################################
#
#  typemap -- XS type mappings not present in early perls
#
################################################################################
#
#  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
#  Version 2.x, Copyright (C) 2001, Paul Marquess.
#  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the same terms as Perl itself.
#
################################################################################

UV                      T_UV
NV                      T_NV
HV *                    T_HVREF
STRLEN                  T_UV

INPUT
T_UV
        $var = ($type)SvUV($arg)
T_NV
        $var = ($type)SvNV($arg)
T_HVREF
        if (SvROK($arg) && SvTYPE(SvRV($arg))==SVt_PVHV)
            $var = (HV*)SvRV($arg);
        else
            Perl_croak(aTHX_ \"$var is not a hash reference\")

OUTPUT
T_UV
        sv_setuv($arg, (UV)$var);
T_NV
        sv_setnv($arg, (NV)$var);
@


1.4
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d19 1
@


1.3
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d7 1
a7 7
#  $Revision: 10 $
#  $Author: mhx $
#  $Date: 2010/03/07 13:15:40 +0100 $
#
################################################################################
#
#  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
d16 1
a16 1
UV			T_UV
d18 1
a18 1
HV *			T_HVREF
d22 1
a22 1
	$var = ($type)SvUV($arg)
d24 1
a24 1
	$var = ($type)SvNV($arg)
d26 4
a29 4
	if (SvROK($arg) && SvTYPE(SvRV($arg))==SVt_PVHV)
	    $var = (HV*)SvRV($arg);
	else
	    Perl_croak(aTHX_ \"$var is not a hash reference\")
d33 1
a33 1
	sv_setuv($arg, (UV)$var);
d35 1
a35 1
	sv_setnv($arg, (NV)$var);
@


1.2
log
@merge in perl 5.12.2 plus local changes
@
text
@d7 1
a7 1
#  $Revision: 9 $
d9 1
a9 1
#  $Date: 2009/06/12 04:07:19 +0200 $
d13 1
a13 1
#  Version 3.x, Copyright (C) 2004-2009, Marcus Holland-Moritz.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d7 1
a7 1
#  $Revision: 10 $
d9 1
a9 1
#  $Date: 2010/03/07 13:15:40 +0100 $
d13 1
a13 1
#  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d7 7
a13 1
#  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
d22 1
a22 1
UV                      T_UV
d24 1
a24 1
HV *                    T_HVREF
d28 1
a28 1
        $var = ($type)SvUV($arg)
d30 1
a30 1
        $var = ($type)SvNV($arg)
d32 4
a35 4
        if (SvROK($arg) && SvTYPE(SvRV($arg))==SVt_PVHV)
            $var = (HV*)SvRV($arg);
        else
            Perl_croak(aTHX_ \"$var is not a hash reference\")
d39 1
a39 1
        sv_setuv($arg, (UV)$var);
d41 1
a41 1
        sv_setnv($arg, (NV)$var);
@


