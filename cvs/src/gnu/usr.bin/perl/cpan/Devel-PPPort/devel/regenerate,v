head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2017.02.05.00.31.56;	author afresh1;	state Exp;
branches;
next	1.4;
commitid	cxJ08BvJA9Pt2PTM;

1.4
date	2014.11.17.20.56.58;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	QP75iYx42Uo7mMxO;

1.3
date	2013.03.25.20.40.48;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.24.15.06.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.06.59;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.52.43;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.5
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl -w
################################################################################
#
#  regenerate -- regenerate baseline and todo files
#
################################################################################
#
#  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
#  Version 2.x, Copyright (C) 2001, Paul Marquess.
#  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the same terms as Perl itself.
#
################################################################################

use strict;
use File::Path;
use File::Copy;
use Getopt::Long;
use Pod::Usage;

require 'devel/devtools.pl';

our %opt = (
  check   => 1,
  verbose => 0,
);

GetOptions(\%opt, qw( check! verbose install=s blead=s blead-version=s )) or die pod2usage();

identify();

unless (-e 'parts/embed.fnc' and -e 'parts/apidoc.fnc') {
  print "\nOooops, $0 must be run from the Devel::PPPort root directory.\n";
  quit_now();
}

ask_or_quit("Are you sure you have updated parts/embed.fnc and parts/apidoc.fnc?");

my %files = map { ($_ => [glob "parts/$_/5*"]) } qw( base todo );

my(@@notwr, @@wr);
for my $f (map @@$_, values %files) {
  push @@{-w $f ? \@@wr : \@@notwr}, $f;
}

if (@@notwr) {
  if (@@wr) {
    print "\nThe following files are not writable:\n\n";
    print "    $_\n" for @@notwr;
    print "\nAre you sure you have checked out these files?\n";
  }
  else {
    print "\nAll baseline / todo file are not writable.\n";
    ask_or_quit("Do you want to try to check out these files?");
    unless (runtool("wco", "-l", "-t", "locked by $0", @@notwr)) {
      print "\nSomething went wrong while checking out the files.\n";
      quit_now();
    }
  }
}

for my $dir (qw( base todo )) {
  my $cur = "parts/$dir";
  my $old = "$cur-old";
  if (-e $old) {
    ask_or_quit("Do you want me to remove the old $old directory?");
    rmtree($old);
  }
  mkdir $old;
  print "\nBacking up $cur in $old.\n";
  for my $src (@@{$files{$dir}}) {
    my $dst = $src;
    $dst =~ s/\Q$cur/$old/ or die "Ooops!";
    move($src, $dst) or die "Moving $src to $dst failed: $!\n";
  }
}

my @@perlargs;
push @@perlargs, "--install=$opt{install}" if exists $opt{install};
push @@perlargs, "--blead=$opt{blead}" if exists $opt{blead};

my $T0 = time;
my @@args = ddverbose();
push @@args, '--nocheck' unless $opt{check};
push @@args, "--blead-version=$opt{'blead-version'}" if exists $opt{'blead-version'};
push @@args, @@perlargs;

print "\nBuilding baseline files...\n\n";

unless (runperl('devel/mktodo', '--base', @@args)) {
  print "\nSomething went wrong while building the baseline files.\n";
  quit_now();
}

print "\nMoving baseline files...\n\n";

for my $src (glob 'parts/todo/5*') {
  my $dst = $src;
  $dst =~ s/todo/base/ or die "Ooops!";
  move($src, $dst) or die "Moving $src to $dst failed: $!\n";
}

print "\nBuilding todo files...\n\n";

unless (runperl('devel/mktodo', @@args)) {
  print "\nSomething went wrong while building the baseline files.\n";
  quit_now();
}

print "\nAdding remaining baseline info...\n\n";

unless (runperl('Makefile.PL') and
        runtool('make') and
        runperl('devel/scanprov', '--mode=write', @@perlargs)) {
  print "\nSomething went wrong while adding the baseline info.\n";
  quit_now();
}

my($wall, $usr, $sys, $cusr, $csys) = (time - $T0, times);
my $cpu = sprintf "%.2f", $usr + $sys + $cusr + $csys;
$usr = sprintf "%.2f", $usr + $cusr;
$sys = sprintf "%.2f", $sys + $csys;

print <<END;

API info regenerated successfully.

Finished in $wall wallclock secs ($usr usr + $sys sys = $cpu CPU)

Don't forget to check in the files in parts/base and parts/todo.

END

__END__

=head1 NAME

regenerate - Automatically regeneate Devel::PPPort's API information

=head1 SYNOPSIS

  regenerate [options]

  --nocheck      don't recheck symbols that caused an error
  --verbose      show verbose output

=head1 COPYRIGHT

Copyright (c) 2006-2013, Marcus Holland-Moritz.

This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO

See L<Devel::PPPort> and L<HACKERS>.

=cut
@


1.4
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d75 1
a75 1
    $dst =~ s/\E$cur/$old/ or die "Ooops!";
@


1.3
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d8 1
a8 7
#  $Revision: 10 $
#  $Author: mhx $
#  $Date: 2010/03/07 13:15:42 +0100 $
#
################################################################################
#
#  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
d151 1
a151 1
Copyright (c) 2006-2010, Marcus Holland-Moritz.
a160 1

@


1.2
log
@merge in perl 5.12.2 plus local changes
@
text
@d8 1
a8 1
#  $Revision: 8 $
d10 1
a10 1
#  $Date: 2009/01/18 14:10:50 +0100 $
d14 1
a14 1
#  Version 3.x, Copyright (C) 2004-2009, Marcus Holland-Moritz.
d36 1
a36 1
GetOptions(\%opt, qw( check! verbose )) or die pod2usage();
d86 4
d93 2
d122 1
a122 1
        runperl('devel/scanprov', 'write')) {
d157 1
a157 1
Copyright (c) 2006-2009, Marcus Holland-Moritz.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d8 1
a8 1
#  $Revision: 10 $
d10 1
a10 1
#  $Date: 2010/03/07 13:15:42 +0100 $
d14 1
a14 1
#  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
d36 1
a36 1
GetOptions(\%opt, qw( check! verbose install=s blead=s blead-version=s )) or die pod2usage();
a85 4
my @@perlargs;
push @@perlargs, "--install=$opt{install}" if exists $opt{install};
push @@perlargs, "--blead=$opt{blead}" if exists $opt{blead};

a88 2
push @@args, "--blead-version=$opt{'blead-version'}" if exists $opt{'blead-version'};
push @@args, @@perlargs;
d116 1
a116 1
        runperl('devel/scanprov', '--mode=write', @@perlargs)) {
d151 1
a151 1
Copyright (c) 2006-2010, Marcus Holland-Moritz.
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d8 7
a14 1
#  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
d157 1
a157 1
Copyright (c) 2006-2013, Marcus Holland-Moritz.
d167 1
@


