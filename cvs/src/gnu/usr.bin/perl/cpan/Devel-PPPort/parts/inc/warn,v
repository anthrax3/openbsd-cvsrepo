head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.8
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2014.11.17.20.56.58;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	QP75iYx42Uo7mMxO;

1.3
date	2013.03.25.20.40.49;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.24.15.06.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.07.01;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.52.44;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.4
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@################################################################################
##
##  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
##  Version 2.x, Copyright (C) 2001, Paul Marquess.
##  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
##
##  This program is free software; you can redistribute it and/or
##  modify it under the same terms as Perl itself.
##
################################################################################

=provides

__UNDEFINED__
ckWARN
warner
Perl_warner
Perl_warner_nocontext

=implementation

__UNDEFINED__  WARN_ALL                 0
__UNDEFINED__  WARN_CLOSURE             1
__UNDEFINED__  WARN_DEPRECATED          2
__UNDEFINED__  WARN_EXITING             3
__UNDEFINED__  WARN_GLOB                4
__UNDEFINED__  WARN_IO                  5
__UNDEFINED__  WARN_CLOSED              6
__UNDEFINED__  WARN_EXEC                7
__UNDEFINED__  WARN_LAYER               8
__UNDEFINED__  WARN_NEWLINE             9
__UNDEFINED__  WARN_PIPE                10
__UNDEFINED__  WARN_UNOPENED            11
__UNDEFINED__  WARN_MISC                12
__UNDEFINED__  WARN_NUMERIC             13
__UNDEFINED__  WARN_ONCE                14
__UNDEFINED__  WARN_OVERFLOW            15
__UNDEFINED__  WARN_PACK                16
__UNDEFINED__  WARN_PORTABLE            17
__UNDEFINED__  WARN_RECURSION           18
__UNDEFINED__  WARN_REDEFINE            19
__UNDEFINED__  WARN_REGEXP              20
__UNDEFINED__  WARN_SEVERE              21
__UNDEFINED__  WARN_DEBUGGING           22
__UNDEFINED__  WARN_INPLACE             23
__UNDEFINED__  WARN_INTERNAL            24
__UNDEFINED__  WARN_MALLOC              25
__UNDEFINED__  WARN_SIGNAL              26
__UNDEFINED__  WARN_SUBSTR              27
__UNDEFINED__  WARN_SYNTAX              28
__UNDEFINED__  WARN_AMBIGUOUS           29
__UNDEFINED__  WARN_BAREWORD            30
__UNDEFINED__  WARN_DIGIT               31
__UNDEFINED__  WARN_PARENTHESIS         32
__UNDEFINED__  WARN_PRECEDENCE          33
__UNDEFINED__  WARN_PRINTF              34
__UNDEFINED__  WARN_PROTOTYPE           35
__UNDEFINED__  WARN_QW                  36
__UNDEFINED__  WARN_RESERVED            37
__UNDEFINED__  WARN_SEMICOLON           38
__UNDEFINED__  WARN_TAINT               39
__UNDEFINED__  WARN_THREADS             40
__UNDEFINED__  WARN_UNINITIALIZED       41
__UNDEFINED__  WARN_UNPACK              42
__UNDEFINED__  WARN_UNTIE               43
__UNDEFINED__  WARN_UTF8                44
__UNDEFINED__  WARN_VOID                45
__UNDEFINED__  WARN_ASSERTIONS          46

__UNDEFINED__  packWARN(a)              (a)

#ifndef ckWARN
#  ifdef G_WARN_ON
#    define  ckWARN(a)                  (PL_dowarn & G_WARN_ON)
#  else
#    define  ckWARN(a)                  PL_dowarn
#  endif
#endif

#if { VERSION >= 5.004 } && !defined(warner)
#if { NEED warner }

void
warner(U32 err, const char *pat, ...)
{
  SV *sv;
  va_list args;

  PERL_UNUSED_ARG(err);

  va_start(args, pat);
  sv = vnewSVpvf(pat, &args);
  va_end(args);
  sv_2mortal(sv);
  warn("%s", SvPV_nolen(sv));
}

#define warner  Perl_warner

#define Perl_warner_nocontext  Perl_warner

#endif
#endif

=xsinit

#define NEED_warner

=xsubs

void
warner()
        CODE:
#if { VERSION >= 5.004 }
                warner(packWARN(WARN_MISC), "warner %s:%d", "bar", 42);
#endif

void
Perl_warner()
        CODE:
#if { VERSION >= 5.004 }
                Perl_warner(aTHX_ packWARN(WARN_MISC), "Perl_warner %s:%d", "bar", 42);
#endif

void
Perl_warner_nocontext()
        CODE:
#if { VERSION >= 5.004 }
                Perl_warner_nocontext(packWARN(WARN_MISC), "Perl_warner_nocontext %s:%d", "bar", 42);
#endif

void
ckWARN()
        CODE:
#if { VERSION >= 5.004 }
                if (ckWARN(WARN_MISC))
                  Perl_warner_nocontext(packWARN(WARN_MISC), "ckWARN %s:%d", "bar", 42);
#endif

=tests plan => 5

$^W = 0;

my $warning;

$SIG{'__WARN__'} = sub { $warning = $_[0] };

$warning = '';
Devel::PPPort::warner();
ok($] >= 5.004 ? $warning =~ /^warner bar:42/ : $warning eq '');

$warning = '';
Devel::PPPort::Perl_warner();
ok($] >= 5.004 ? $warning =~ /^Perl_warner bar:42/ : $warning eq '');

$warning = '';
Devel::PPPort::Perl_warner_nocontext();
ok($] >= 5.004 ? $warning =~ /^Perl_warner_nocontext bar:42/ : $warning eq '');

$warning = '';
Devel::PPPort::ckWARN();
ok($warning, '');

$^W = 1;

$warning = '';
Devel::PPPort::ckWARN();
ok($] >= 5.004 ? $warning =~ /^ckWARN bar:42/ : $warning eq '');
@


1.3
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d3 1
a3 7
##  $Revision: 8 $
##  $Author: mhx $
##  $Date: 2010/03/07 13:15:45 +0100 $
##
################################################################################
##
##  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
d22 47
a68 47
__UNDEFINED__  WARN_ALL			0
__UNDEFINED__  WARN_CLOSURE		1
__UNDEFINED__  WARN_DEPRECATED		2
__UNDEFINED__  WARN_EXITING		3
__UNDEFINED__  WARN_GLOB		4
__UNDEFINED__  WARN_IO			5
__UNDEFINED__  WARN_CLOSED		6
__UNDEFINED__  WARN_EXEC		7
__UNDEFINED__  WARN_LAYER		8
__UNDEFINED__  WARN_NEWLINE		9
__UNDEFINED__  WARN_PIPE		10
__UNDEFINED__  WARN_UNOPENED		11
__UNDEFINED__  WARN_MISC		12
__UNDEFINED__  WARN_NUMERIC		13
__UNDEFINED__  WARN_ONCE		14
__UNDEFINED__  WARN_OVERFLOW		15
__UNDEFINED__  WARN_PACK		16
__UNDEFINED__  WARN_PORTABLE		17
__UNDEFINED__  WARN_RECURSION		18
__UNDEFINED__  WARN_REDEFINE		19
__UNDEFINED__  WARN_REGEXP		20
__UNDEFINED__  WARN_SEVERE		21
__UNDEFINED__  WARN_DEBUGGING		22
__UNDEFINED__  WARN_INPLACE		23
__UNDEFINED__  WARN_INTERNAL		24
__UNDEFINED__  WARN_MALLOC		25
__UNDEFINED__  WARN_SIGNAL		26
__UNDEFINED__  WARN_SUBSTR		27
__UNDEFINED__  WARN_SYNTAX		28
__UNDEFINED__  WARN_AMBIGUOUS		29
__UNDEFINED__  WARN_BAREWORD		30
__UNDEFINED__  WARN_DIGIT		31
__UNDEFINED__  WARN_PARENTHESIS		32
__UNDEFINED__  WARN_PRECEDENCE		33
__UNDEFINED__  WARN_PRINTF		34
__UNDEFINED__  WARN_PROTOTYPE		35
__UNDEFINED__  WARN_QW			36
__UNDEFINED__  WARN_RESERVED		37
__UNDEFINED__  WARN_SEMICOLON		38
__UNDEFINED__  WARN_TAINT		39
__UNDEFINED__  WARN_THREADS		40
__UNDEFINED__  WARN_UNINITIALIZED	41
__UNDEFINED__  WARN_UNPACK		42
__UNDEFINED__  WARN_UNTIE		43
__UNDEFINED__  WARN_UTF8		44
__UNDEFINED__  WARN_VOID		45
__UNDEFINED__  WARN_ASSERTIONS		46
d113 1
a113 1
	CODE:
d115 1
a115 1
		warner(packWARN(WARN_MISC), "warner %s:%d", "bar", 42);
d120 1
a120 1
	CODE:
d122 1
a122 1
		Perl_warner(aTHX_ packWARN(WARN_MISC), "Perl_warner %s:%d", "bar", 42);
d127 1
a127 1
	CODE:
d129 1
a129 1
		Perl_warner_nocontext(packWARN(WARN_MISC), "Perl_warner_nocontext %s:%d", "bar", 42);
d134 1
a134 1
	CODE:
d136 2
a137 2
		if (ckWARN(WARN_MISC))
		  Perl_warner_nocontext(packWARN(WARN_MISC), "ckWARN %s:%d", "bar", 42);
a168 1

@


1.2
log
@merge in perl 5.12.2 plus local changes
@
text
@d3 1
a3 1
##  $Revision: 7 $
d5 1
a5 1
##  $Date: 2009/01/18 14:10:52 +0100 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2009, Marcus Holland-Moritz.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d3 1
a3 1
##  $Revision: 8 $
d5 1
a5 1
##  $Date: 2010/03/07 13:15:45 +0100 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d3 7
a9 1
##  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
d28 47
a74 47
__UNDEFINED__  WARN_ALL                 0
__UNDEFINED__  WARN_CLOSURE             1
__UNDEFINED__  WARN_DEPRECATED          2
__UNDEFINED__  WARN_EXITING             3
__UNDEFINED__  WARN_GLOB                4
__UNDEFINED__  WARN_IO                  5
__UNDEFINED__  WARN_CLOSED              6
__UNDEFINED__  WARN_EXEC                7
__UNDEFINED__  WARN_LAYER               8
__UNDEFINED__  WARN_NEWLINE             9
__UNDEFINED__  WARN_PIPE                10
__UNDEFINED__  WARN_UNOPENED            11
__UNDEFINED__  WARN_MISC                12
__UNDEFINED__  WARN_NUMERIC             13
__UNDEFINED__  WARN_ONCE                14
__UNDEFINED__  WARN_OVERFLOW            15
__UNDEFINED__  WARN_PACK                16
__UNDEFINED__  WARN_PORTABLE            17
__UNDEFINED__  WARN_RECURSION           18
__UNDEFINED__  WARN_REDEFINE            19
__UNDEFINED__  WARN_REGEXP              20
__UNDEFINED__  WARN_SEVERE              21
__UNDEFINED__  WARN_DEBUGGING           22
__UNDEFINED__  WARN_INPLACE             23
__UNDEFINED__  WARN_INTERNAL            24
__UNDEFINED__  WARN_MALLOC              25
__UNDEFINED__  WARN_SIGNAL              26
__UNDEFINED__  WARN_SUBSTR              27
__UNDEFINED__  WARN_SYNTAX              28
__UNDEFINED__  WARN_AMBIGUOUS           29
__UNDEFINED__  WARN_BAREWORD            30
__UNDEFINED__  WARN_DIGIT               31
__UNDEFINED__  WARN_PARENTHESIS         32
__UNDEFINED__  WARN_PRECEDENCE          33
__UNDEFINED__  WARN_PRINTF              34
__UNDEFINED__  WARN_PROTOTYPE           35
__UNDEFINED__  WARN_QW                  36
__UNDEFINED__  WARN_RESERVED            37
__UNDEFINED__  WARN_SEMICOLON           38
__UNDEFINED__  WARN_TAINT               39
__UNDEFINED__  WARN_THREADS             40
__UNDEFINED__  WARN_UNINITIALIZED       41
__UNDEFINED__  WARN_UNPACK              42
__UNDEFINED__  WARN_UNTIE               43
__UNDEFINED__  WARN_UTF8                44
__UNDEFINED__  WARN_VOID                45
__UNDEFINED__  WARN_ASSERTIONS          46
d119 1
a119 1
        CODE:
d121 1
a121 1
                warner(packWARN(WARN_MISC), "warner %s:%d", "bar", 42);
d126 1
a126 1
        CODE:
d128 1
a128 1
                Perl_warner(aTHX_ packWARN(WARN_MISC), "Perl_warner %s:%d", "bar", 42);
d133 1
a133 1
        CODE:
d135 1
a135 1
                Perl_warner_nocontext(packWARN(WARN_MISC), "Perl_warner_nocontext %s:%d", "bar", 42);
d140 1
a140 1
        CODE:
d142 2
a143 2
                if (ckWARN(WARN_MISC))
                  Perl_warner_nocontext(packWARN(WARN_MISC), "ckWARN %s:%d", "bar", 42);
d175 1
@


