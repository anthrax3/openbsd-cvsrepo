head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.8
	OPENBSD_6_2_BASE:1.4
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2014.11.17.20.56.58;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	QP75iYx42Uo7mMxO;

1.3
date	2013.03.25.20.40.49;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.24.15.06.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.07.00;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.52.44;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.4
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@################################################################################
##
##  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
##  Version 2.x, Copyright (C) 2001, Paul Marquess.
##  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
##
##  This program is free software; you can redistribute it and/or
##  modify it under the same terms as Perl itself.
##
################################################################################

=provides

__UNDEFINED__

=implementation

#ifdef HAS_MEMCMP
__UNDEFINED__  memNE(s1,s2,l)  (memcmp(s1,s2,l))
__UNDEFINED__  memEQ(s1,s2,l)  (!memcmp(s1,s2,l))
#else
__UNDEFINED__  memNE(s1,s2,l)  (bcmp(s1,s2,l))
__UNDEFINED__  memEQ(s1,s2,l)  (!bcmp(s1,s2,l))
#endif

__UNDEFINED__  memEQs(s1, l, s2) \
                   (sizeof(s2)-1 == l && memEQ(s1, (s2 ""), (sizeof(s2)-1)))
__UNDEFINED__  memNEs(s1, l, s2) !memEQs(s1, l, s2)

__UNDEFINED__  MoveD(s,d,n,t)  memmove((char*)(d),(char*)(s), (n) * sizeof(t))
__UNDEFINED__  CopyD(s,d,n,t)  memcpy((char*)(d),(char*)(s), (n) * sizeof(t))
#ifdef HAS_MEMSET
__UNDEFINED__  ZeroD(d,n,t)    memzero((char*)(d), (n) * sizeof(t))
#else
__UNDEFINED__  ZeroD(d,n,t)    ((void)memzero((char*)(d), (n) * sizeof(t)), d)
#endif

__UNDEFINED__  PoisonWith(d,n,t,b)  (void)memset((char*)(d), (U8)(b), (n) * sizeof(t))
__UNDEFINED__  PoisonNew(d,n,t)     PoisonWith(d,n,t,0xAB)
__UNDEFINED__  PoisonFree(d,n,t)    PoisonWith(d,n,t,0xEF)
__UNDEFINED__  Poison(d,n,t)        PoisonFree(d,n,t)

__UNDEFINED__  Newx(v,n,t)     New(0,v,n,t)
__UNDEFINED__  Newxc(v,n,t,c)  Newc(0,v,n,t,c)
__UNDEFINED__  Newxz(v,n,t)    Newz(0,v,n,t)

=xsubs

int
checkmem()
  PREINIT:
    char *p;

  CODE:
    RETVAL = 0;
    Newx(p, 6, char);
    CopyD("Hello", p, 6, char);
    if (memEQ(p, "Hello", 6))
      RETVAL++;
    ZeroD(p, 6, char);
    if (memEQ(p, "\0\0\0\0\0\0", 6))
      RETVAL++;
    if (memEQs(p, 6, "\0\0\0\0\0\0"))
      RETVAL++;
    Poison(p, 6, char);
    if (memNE(p, "\0\0\0\0\0\0", 6))
      RETVAL++;
    if (memNEs(p, 6, "\0\0\0\0\0\0"))
      RETVAL++;
    Safefree(p);

    Newxz(p, 6, char);
    if (memEQ(p, "\0\0\0\0\0\0", 6))
      RETVAL++;
    Safefree(p);

    Newxc(p, 3, short, char);
    Safefree(p);

  OUTPUT:
    RETVAL

=tests plan => 1

ok(Devel::PPPort::checkmem(), 6);
@


1.3
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d3 1
a3 7
##  $Revision: 7 $
##  $Author: mhx $
##  $Date: 2010/03/07 13:15:46 +0100 $
##
################################################################################
##
##  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
a85 1

@


1.2
log
@merge in perl 5.12.2 plus local changes
@
text
@d3 1
a3 1
##  $Revision: 5 $
d5 1
a5 1
##  $Date: 2009/01/18 14:10:53 +0100 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2009, Marcus Holland-Moritz.
d32 4
d69 2
d74 2
d91 1
a91 1
ok(Devel::PPPort::checkmem(), 4);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d3 1
a3 1
##  $Revision: 7 $
d5 1
a5 1
##  $Date: 2010/03/07 13:15:46 +0100 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2010, Marcus Holland-Moritz.
a31 4
__UNDEFINED__  memEQs(s1, l, s2) \
                   (sizeof(s2)-1 == l && memEQ(s1, (s2 ""), (sizeof(s2)-1)))
__UNDEFINED__  memNEs(s1, l, s2) !memEQs(s1, l, s2)

a64 2
    if (memEQs(p, 6, "\0\0\0\0\0\0"))
      RETVAL++;
a67 2
    if (memNEs(p, 6, "\0\0\0\0\0\0"))
      RETVAL++;
d83 1
a83 1
ok(Devel::PPPort::checkmem(), 6);
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d3 7
a9 1
##  Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.
d92 1
@


