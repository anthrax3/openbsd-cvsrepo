head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2016.06.30.21.16.13;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	K69zB3dG4qHAmoQ0;

1.1
date	2013.03.25.20.08.19;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.19;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update perl Time::HiRes to 1.9739

Which provides hires `utime`

requested by espie@@ OK millert@@
@
text
@use strict;

BEGIN {
    require Time::HiRes;
    unless(&Time::HiRes::d_gettimeofday) {
	require Test::More;
	Test::More::plan(skip_all => "no gettimeofday()");
    }
}

use Test::More tests => 6;
use t::Watchdog;

my @@one = Time::HiRes::gettimeofday();
printf("# gettimeofday returned %d args\n", 0+@@one);
ok @@one == 2;
ok $one[0] > 850_000_000 or print("# @@one too small\n");

sleep 1;

my @@two = Time::HiRes::gettimeofday();
ok $two[0] > $one[0] || ($two[0] == $one[0] && $two[1] > $one[1])
	or print("# @@two is not greater than @@one\n");

my $f = Time::HiRes::time();
ok $f > 850_000_000 or print("# $f too small\n");
ok $f - $two[0] < 2 or print("# $f - $two[0] >= 2\n");

my $r = [Time::HiRes::gettimeofday()];
my $g = Time::HiRes::tv_interval $r;
ok $g < 2 or print("# $g\n");

1;
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
use Test::More 0.82 tests => 6;
d15 1
a15 1
note 'gettimeofday returned ', 0+@@one, ' args';
d17 1
a17 1
ok $one[0] > 850_000_000 or note "@@one too small";
d23 1
a23 1
	or note "@@two is not greater than @@one";
d26 2
a27 2
ok $f > 850_000_000 or note "$f too small";
ok $f - $two[0] < 2 or note "$f - $two[0] >= 2";
d31 1
a31 1
ok $g < 2 or note $g;
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
