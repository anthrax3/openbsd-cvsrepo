head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2016.06.30.21.16.13;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	K69zB3dG4qHAmoQ0;

1.1
date	2013.03.25.20.08.19;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.19;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update perl Time::HiRes to 1.9739

Which provides hires `utime`

requested by espie@@ OK millert@@
@
text
@use strict;

use Test::More tests => 4;
use t::Watchdog;

BEGIN { require_ok "Time::HiRes"; }

use Config;

my $xdefine = ''; 
if (open(XDEFINE, "xdefine")) {
    chomp($xdefine = <XDEFINE> || "");
    close(XDEFINE);
}

my $can_subsecond_alarm =
   defined &Time::HiRes::gettimeofday &&
   defined &Time::HiRes::ualarm &&
   defined &Time::HiRes::usleep &&
   ($Config{d_ualarm} || $xdefine =~ /-DHAS_UALARM/);

eval { Time::HiRes::sleep(-1) };
like $@@, qr/::sleep\(-1\): negative time not invented yet/,
	"negative time error";

SKIP: {
    skip "no subsecond alarm", 2 unless $can_subsecond_alarm;
    my $f = Time::HiRes::time; 
    print("# time...$f\n");
    ok 1;

    my $r = [Time::HiRes::gettimeofday()];
    Time::HiRes::sleep (0.5);
    printf("# sleep...%s\n", Time::HiRes::tv_interval($r));
    ok 1;
}

1;
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
use Test::More 0.82 tests => 4;
d29 1
a29 1
    note "time...$f";
d34 1
a34 1
    note "sleep...", Time::HiRes::tv_interval($r);
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
