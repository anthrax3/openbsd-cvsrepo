head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.6
	OPENBSD_6_2_BASE:1.4
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2017.02.05.00.32.07;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	cxJ08BvJA9Pt2PTM;

1.3
date	2014.11.17.20.57.04;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	QP75iYx42Uo7mMxO;

1.2
date	2014.09.05.06.53.07;	author jasper;	state Exp;
branches;
next	1.1;
commitid	xuNrf7DlYReDd0jV;

1.1
date	2010.09.24.14.49.06;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.06;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.39;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.4
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@use 5.008001;

use strict;
use warnings;

my $number = 0;
sub ok {
        my ($condition, $name) = @@_;

        my $message = $condition ? "ok " : "not ok ";
        $message .= ++$number;
        $message .= " # $name" if defined $name;
        print $message, "\n";
        return $condition;
}

sub is {
        my ($got, $expected, $name) = @@_;

        for ($got, $expected) {
                $_ = 'undef' unless defined $_;
        }

        unless (ok($got eq $expected, $name)) {
                warn "Got: '$got'\nExpected: '$expected'\n" . join(' ', caller) . "\n";
        }
}

sub skip {
        my ($reason, $num) = @@_;
        $reason ||= '';
        $number ||= 1;

        for (1 .. $num) {
                $number++;
                print "ok $number # skip $reason\n";
        }
}

1;

@


1.3
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d1 4
d8 1
a8 1
	my ($condition, $name) = @@_;
d10 5
a14 5
	my $message = $condition ? "ok " : "not ok ";
	$message .= ++$number;
	$message .= " # $name" if defined $name;
	print $message, "\n";
	return $condition;
d18 1
a18 1
	my ($got, $expected, $name) = @@_;
d20 7
a26 7
	for ($got, $expected) {
		$_ = 'undef' unless defined $_;
	}

	unless (ok($got eq $expected, $name)) {
		warn "Got: '$got'\nExpected: '$expected'\n" . join(' ', caller) . "\n";
	}
d30 8
a37 8
	my ($reason, $num) = @@_;
	$reason ||= '';
	$number ||= 1;

	for (1 .. $num) {
		$number++;
		print "ok $number # skip $reason\n";
	}
@


1.2
log
@update libnet to 1.27; various bugfixes and improvements:
http://cpansearch.perl.org/src/SHAY/libnet-1.27/Changes

ok millert@@
@
text
@d4 1
a4 1
        my ($condition, $name) = @@_;
d6 5
a10 5
        my $message = $condition ? "ok " : "not ok ";
        $message .= ++$number;
        $message .= " # $name" if defined $name;
        print $message, "\n";
        return $condition;
d14 1
a14 1
        my ($got, $expected, $name) = @@_;
d16 7
a22 7
        for ($got, $expected) {
                $_ = 'undef' unless defined $_;
        }

        unless (ok($got eq $expected, $name)) {
                warn "Got: '$got'\nExpected: '$expected'\n" . join(' ', caller) . "\n";
        }
d26 8
a33 8
        my ($reason, $num) = @@_;
        $reason ||= '';
        $number ||= 1;

        for (1 .. $num) {
                $number++;
                print "ok $number # skip $reason\n";
        }
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
	my ($condition, $name) = @@_;
d6 5
a10 5
	my $message = $condition ? "ok " : "not ok ";
	$message .= ++$number;
	$message .= " # $name" if defined $name;
	print $message, "\n";
	return $condition;
d14 1
a14 1
	my ($got, $expected, $name) = @@_;
d16 7
a22 7
	for ($got, $expected) {
		$_ = 'undef' unless defined $_;
	}

	unless (ok($got eq $expected, $name)) {
		warn "Got: '$got'\nExpected: '$expected'\n" . join(' ', caller) . "\n";
	}
d26 8
a33 8
	my ($reason, $num) = @@_;
	$reason ||= '';
	$number ||= 1;

	for (1 .. $num) {
		$number++;
		print "ok $number # skip $reason\n";
	}
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@a0 4
use 5.008001;

use strict;
use warnings;
d4 1
a4 1
        my ($condition, $name) = @@_;
d6 5
a10 5
        my $message = $condition ? "ok " : "not ok ";
        $message .= ++$number;
        $message .= " # $name" if defined $name;
        print $message, "\n";
        return $condition;
d14 1
a14 1
        my ($got, $expected, $name) = @@_;
d16 7
a22 7
        for ($got, $expected) {
                $_ = 'undef' unless defined $_;
        }

        unless (ok($got eq $expected, $name)) {
                warn "Got: '$got'\nExpected: '$expected'\n" . join(' ', caller) . "\n";
        }
d26 8
a33 8
        my ($reason, $num) = @@_;
        $reason ||= '';
        $number ||= 1;

        for (1 .. $num) {
                $number++;
                print "ok $number # skip $reason\n";
        }
@

