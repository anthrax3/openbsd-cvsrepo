head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	PERL_5_24_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2017.08.14.13.49.44;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	AOpGtCFzbfdujI88;

1.3
date	2017.08.14.13.48.46;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	CrMEpTqBUsxCMTjx;

1.2
date	2017.06.04.19.26.18;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	KPMVMEcoKRAVAl5t;

1.1
date	2017.02.05.00.31.58;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cxJ08BvJA9Pt2PTM;

1.1.1.1
date	2017.08.14.13.45.37;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.4
log
@Apply local patches - perl-5.24.2

OK bluhm@@, Reads ok sthen@@
@
text
@use strict;
use Test::More;
use lib './t';
use FilePathTest qw(
    create_3_level_subdirs
    cleanup_3_level_subdirs
);
use File::Path;
use Cwd;
use File::Spec::Functions;
use Carp;

plan skip_all  => 'not win32' unless $^O eq 'MSWin32';
my ($ignore, $major, $minor, $build, $id) = Win32::GetOSVersion();
plan skip_all  => "WinXP or later"
     unless $id >= 2 && ($major > 5 || $major == 5 && $minor >= 1);
plan tests     => 9;

my $tmp_base = catdir(
    curdir(),
    sprintf( 'test-%x-%x-%x', time, $$, rand(99999) ),
);

my $UNC_path = catdir(getcwd(), $tmp_base, 'uncdir');
#dont compute a SMB path with $ENV{COMPUTERNAME}, since SMB may be turned off
#firewalled, disabled, blocked, or no NICs are on and there the PC has no
#working TCPIP stack, \\?\ will always work
$UNC_path = '\\\\?\\'.$UNC_path;

is(mkpath($UNC_path), 2, 'mkpath on Win32 UNC path returns made 2 dir - base and uncdir');

ok(-d $UNC_path, 'mkpath on Win32 UNC path made dir');

my $removed = rmtree($UNC_path);

cmp_ok($removed, '>', 0, "removed $removed entries from $UNC_path");

{
    my ($least_deep, $next_deepest, $deepest) =
        create_3_level_subdirs( qw| d e f | );
    my (@@created, $error);
    my $user = join('_' => 'foobar', $$);
    {
        my $warn;
        $SIG{__WARN__} = sub { $warn = shift };

        @@created = mkpath($deepest, { mode => 0711, user => $user, error => \$error });
        like($warn,
            qr/Option\(s\) implausible on Win32 passed to mkpath\(\) or make_path\(\)/,
            'make_path with final hashref warned due to options implausible on Win32'
        );
        TODO: {
            local $TODO = "Notwithstanding the Win32-implausible 'user', mkpath will actually create subdirectories; should it?";
            is(scalar(@@created), 0, "No subdirectories created");
        }
        is(scalar(@@created), 3, "3 subdirectories created");
        is(scalar(@@$error), 0, "no error condition" );
    }

    cleanup_3_level_subdirs($least_deep);
}

@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.2 dist

OK bluhm@@, Reads ok sthen@@
@
text
@d3 5
a7 2
use lib 't/';
use FilePathTest;
d11 1
d17 1
a17 1
plan tests     => 3;
d37 26
@


1.2
log
@Update to perl File::Path 2.13 for security fixes

Reccomended by upstream - jkeenan AT pobox.com

OK sthen@@
@
text
@d3 2
a4 5
use lib './t';
use FilePathTest qw(
    create_3_level_subdirs
    cleanup_3_level_subdirs
);
a7 1
use Carp;
d13 1
a13 1
plan tests     => 9;
a32 26

{
    my ($least_deep, $next_deepest, $deepest) =
        create_3_level_subdirs( qw| d e f | );
    my (@@created, $error);
    my $user = join('_' => 'foobar', $$);
    {
        my $warn;
        $SIG{__WARN__} = sub { $warn = shift };

        @@created = mkpath($deepest, { mode => 0711, user => $user, error => \$error });
        like($warn,
            qr/Option\(s\) implausible on Win32 passed to mkpath\(\) or make_path\(\)/,
            'make_path with final hashref warned due to options implausible on Win32'
        );
        TODO: {
            local $TODO = "Notwithstanding the Win32-implausible 'user', mkpath will actually create subdirectories; should it?";
            is(scalar(@@created), 0, "No subdirectories created");
        }
        is(scalar(@@created), 3, "3 subdirectories created");
        is(scalar(@@$error), 0, "no error condition" );
    }

    cleanup_3_level_subdirs($least_deep);
}

@


1.1
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d3 5
a7 2
use lib 't/';
use FilePathTest;
d11 1
d17 1
a17 1
plan tests     => 3;
d37 26
@


1.1.1.1
log
@Import perl-5.24.2
@
text
@@


