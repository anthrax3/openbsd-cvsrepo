head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.10
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.4
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.6
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.59;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.53.02;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@
BEGIN {
    unless ("A" eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate " .
	    "cannot stringify a Unicode code point\n";
	exit 0;
    }
    if ($ENV{PERL_CORE}) {
	chdir('t') if -d 't';
	@@INC = $^O eq 'MacOS' ? qw(::lib) : qw(../lib);
    }
}

use strict;
use warnings;
BEGIN { $| = 1; print "1..52\n"; }
my $count = 0;
sub ok ($;$) {
    my $p = my $r = shift;
    if (@@_) {
	my $x = shift;
	$p = !defined $x ? !defined $r : !defined $r ? 0 : $r eq $x;
    }
    print $p ? "ok" : "not ok", ' ', ++$count, "\n";
}

use Unicode::Collate::Locale;

ok(1);

#########################

my $Kssa = "\x{B95}\x{BCD}\x{BB7}";

my $objTa = Unicode::Collate::Locale->
    new(locale => 'TA', normalization => undef);

ok($objTa->getlocale, 'ta');

$objTa->change(level => 1);

ok($objTa->lt("\x{B94}", "\x{B82}"));
ok($objTa->gt("\x{B83}", "\x{B82}"));
ok($objTa->lt("\x{B83}", "\x{B95}\x{BCD}"));
ok($objTa->gt("\x{B95}", "\x{B95}\x{BCD}"));
ok($objTa->lt("\x{B95}", "\x{B99}\x{BCD}"));
ok($objTa->gt("\x{B99}", "\x{B99}\x{BCD}"));
ok($objTa->lt("\x{B99}", "\x{B9A}\x{BCD}"));
ok($objTa->gt("\x{B9A}", "\x{B9A}\x{BCD}"));
ok($objTa->lt("\x{B9A}", "\x{B9E}\x{BCD}"));
ok($objTa->gt("\x{B9E}", "\x{B9E}\x{BCD}"));
ok($objTa->lt("\x{B9E}", "\x{B9F}\x{BCD}"));
ok($objTa->gt("\x{B9F}", "\x{B9F}\x{BCD}"));
ok($objTa->lt("\x{B9F}", "\x{BA3}\x{BCD}"));
ok($objTa->gt("\x{BA3}", "\x{BA3}\x{BCD}"));
ok($objTa->lt("\x{BA3}", "\x{BA4}\x{BCD}"));
ok($objTa->gt("\x{BA4}", "\x{BA4}\x{BCD}"));
ok($objTa->lt("\x{BA4}", "\x{BA8}\x{BCD}"));
ok($objTa->gt("\x{BA8}", "\x{BA8}\x{BCD}"));
ok($objTa->lt("\x{BA8}", "\x{BAA}\x{BCD}"));
ok($objTa->gt("\x{BAA}", "\x{BAA}\x{BCD}"));
ok($objTa->lt("\x{BAA}", "\x{BAE}\x{BCD}"));
ok($objTa->gt("\x{BAE}", "\x{BAE}\x{BCD}"));
ok($objTa->lt("\x{BAE}", "\x{BAF}\x{BCD}"));
ok($objTa->gt("\x{BAF}", "\x{BAF}\x{BCD}"));
ok($objTa->lt("\x{BAF}", "\x{BB0}\x{BCD}"));
ok($objTa->gt("\x{BB0}", "\x{BB0}\x{BCD}"));
ok($objTa->lt("\x{BB0}", "\x{BB2}\x{BCD}"));
ok($objTa->gt("\x{BB2}", "\x{BB2}\x{BCD}"));
ok($objTa->lt("\x{BB2}", "\x{BB5}\x{BCD}"));
ok($objTa->gt("\x{BB5}", "\x{BB5}\x{BCD}"));
ok($objTa->lt("\x{BB5}", "\x{BB4}\x{BCD}"));
ok($objTa->gt("\x{BB4}", "\x{BB4}\x{BCD}"));
ok($objTa->lt("\x{BB4}", "\x{BB3}\x{BCD}"));
ok($objTa->gt("\x{BB3}", "\x{BB3}\x{BCD}"));
ok($objTa->lt("\x{BB3}", "\x{BB1}\x{BCD}"));
ok($objTa->gt("\x{BB1}", "\x{BB1}\x{BCD}"));
ok($objTa->lt("\x{BB1}", "\x{BA9}\x{BCD}"));
ok($objTa->gt("\x{BA9}", "\x{BA9}\x{BCD}"));
ok($objTa->lt("\x{BA9}", "\x{B9C}\x{BCD}"));
ok($objTa->gt("\x{B9C}", "\x{B9C}\x{BCD}"));
ok($objTa->lt("\x{B9C}", "\x{BB6}\x{BCD}"));
ok($objTa->gt("\x{BB6}", "\x{BB6}\x{BCD}"));
ok($objTa->lt("\x{BB6}", "\x{BB7}\x{BCD}"));
ok($objTa->gt("\x{BB7}", "\x{BB7}\x{BCD}"));
ok($objTa->lt("\x{BB7}", "\x{BB8}\x{BCD}"));
ok($objTa->gt("\x{BB8}", "\x{BB8}\x{BCD}"));
ok($objTa->lt("\x{BB8}", "\x{BB9}\x{BCD}"));
ok($objTa->gt("\x{BB9}", "\x{BB9}\x{BCD}"));
ok($objTa->lt("\x{BB9}", "${Kssa}\x{BCD}"));
ok($objTa->gt("${Kssa}", "${Kssa}\x{BCD}"));

# 52
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d16 1
a16 1
BEGIN { $| = 1; print "1..104\n"; }
a33 1
my $v    = "\x{BCD}";
d42 52
a93 57
for my $h (0, 1) {
    no warnings 'utf8';
    my $t = $h ? pack('U', 0xFFFF) : "";
    $objTa->change(highestFFFF => 1) if $h;

    ok($objTa->lt("\x{B94}$t",   "\x{B82}"));
    ok($objTa->lt("\x{B82}$t",   "\x{B83}"));
    ok($objTa->lt("\x{B83}$t",   "\x{B95}$v"));
    ok($objTa->lt("\x{B95}$v$t", "\x{B95}"));
    ok($objTa->lt("\x{B95}$t",   "\x{B99}$v"));
    ok($objTa->lt("\x{B99}$v$t", "\x{B99}"));
    ok($objTa->lt("\x{B99}$t",   "\x{B9A}$v"));
    ok($objTa->lt("\x{B9A}$v$t", "\x{B9A}"));
    ok($objTa->lt("\x{B9A}$t",   "\x{B9E}$v"));
    ok($objTa->lt("\x{B9E}$v$t", "\x{B9E}"));
    ok($objTa->lt("\x{B9E}$t",   "\x{B9F}$v"));
    ok($objTa->lt("\x{B9F}$v$t", "\x{B9F}"));
    ok($objTa->lt("\x{B9F}$t",   "\x{BA3}$v"));
    ok($objTa->lt("\x{BA3}$v$t", "\x{BA3}"));
    ok($objTa->lt("\x{BA3}$t",   "\x{BA4}$v"));
    ok($objTa->lt("\x{BA4}$v$t", "\x{BA4}"));
    ok($objTa->lt("\x{BA4}$t",   "\x{BA8}$v"));
    ok($objTa->lt("\x{BA8}$v$t", "\x{BA8}"));
    ok($objTa->lt("\x{BA8}$t",   "\x{BAA}$v"));
    ok($objTa->lt("\x{BAA}$v$t", "\x{BAA}"));
    ok($objTa->lt("\x{BAA}$t",   "\x{BAE}$v"));
    ok($objTa->lt("\x{BAE}$v$t", "\x{BAE}"));
    ok($objTa->lt("\x{BAE}$t",   "\x{BAF}$v"));
    ok($objTa->lt("\x{BAF}$v$t", "\x{BAF}"));
    ok($objTa->lt("\x{BAF}$t",   "\x{BB0}$v"));
    ok($objTa->lt("\x{BB0}$v$t", "\x{BB0}"));
    ok($objTa->lt("\x{BB0}$t",   "\x{BB2}$v"));
    ok($objTa->lt("\x{BB2}$v$t", "\x{BB2}"));
    ok($objTa->lt("\x{BB2}$t",   "\x{BB5}$v"));
    ok($objTa->lt("\x{BB5}$v$t", "\x{BB5}"));
    ok($objTa->lt("\x{BB5}$t",   "\x{BB4}$v"));
    ok($objTa->lt("\x{BB4}$v$t", "\x{BB4}"));
    ok($objTa->lt("\x{BB4}$t",   "\x{BB3}$v"));
    ok($objTa->lt("\x{BB3}$v$t", "\x{BB3}"));
    ok($objTa->lt("\x{BB3}$t",   "\x{BB1}$v"));
    ok($objTa->lt("\x{BB1}$v$t", "\x{BB1}"));
    ok($objTa->lt("\x{BB1}$t",   "\x{BA9}$v"));
    ok($objTa->lt("\x{BA9}$v$t", "\x{BA9}"));
    ok($objTa->lt("\x{BA9}$t",   "\x{B9C}$v"));
    ok($objTa->lt("\x{B9C}$v$t", "\x{B9C}"));
    ok($objTa->lt("\x{B9C}$t",   "\x{BB6}$v"));
    ok($objTa->lt("\x{BB6}$v$t", "\x{BB6}"));
    ok($objTa->lt("\x{BB6}$t",   "\x{BB7}$v"));
    ok($objTa->lt("\x{BB7}$v$t", "\x{BB7}"));
    ok($objTa->lt("\x{BB7}$t",   "\x{BB8}$v"));
    ok($objTa->lt("\x{BB8}$v$t", "\x{BB8}"));
    ok($objTa->lt("\x{BB8}$t",   "\x{BB9}$v"));
    ok($objTa->lt("\x{BB9}$v$t", "\x{BB9}"));
    ok($objTa->lt("\x{BB9}$t",   "${Kssa}$v"));
    ok($objTa->lt("${Kssa}$v$t", "${Kssa}"));
    ok($objTa->lt("${Kssa}$t",   "\x{BBE}"));
}
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d3 3
a5 6
    unless ('A' eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate cannot pack a Unicode code point\n";
	exit 0;
    }
    unless (0x41 == unpack('U', 'A')) {
	print "1..0 # Unicode::Collate cannot get a Unicode code point\n";
d33 3
a42 3
my $Kssa = "\x{B95}\x{BCD}\x{BB7}";
my $v    = "\x{BCD}";

a99 2

# 104
@


