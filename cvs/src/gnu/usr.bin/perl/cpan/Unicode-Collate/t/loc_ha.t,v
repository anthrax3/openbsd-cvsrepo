head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.2.0.14
	OPENBSD_6_2_BASE:1.1.1.2
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.12
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.10
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.4
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.30;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.30;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.11.17.20.53.01;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@
BEGIN {
    unless ("A" eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate " .
	    "cannot stringify a Unicode code point\n";
	exit 0;
    }
    if ($ENV{PERL_CORE}) {
	chdir('t') if -d 't';
	@@INC = $^O eq 'MacOS' ? qw(::lib) : qw(../lib);
    }
}

use strict;
use warnings;
BEGIN { $| = 1; print "1..51\n"; }
my $count = 0;
sub ok ($;$) {
    my $p = my $r = shift;
    if (@@_) {
	my $x = shift;
	$p = !defined $x ? !defined $r : !defined $r ? 0 : $r eq $x;
    }
    print $p ? "ok" : "not ok", ' ', ++$count, "\n";
}

use Unicode::Collate::Locale;

ok(1);

#########################

my $objHa = Unicode::Collate::Locale->
    new(locale => 'HA', normalization => undef);

ok($objHa->getlocale, 'ha');

$objHa->change(level => 1);

ok($objHa->lt("b", "\x{253}"));
ok($objHa->gt("c", "\x{253}"));
ok($objHa->lt("d", "\x{257}"));
ok($objHa->gt("e", "\x{257}"));
ok($objHa->lt("k", "\x{199}"));
ok($objHa->gt("l", "\x{199}"));
ok($objHa->lt("s", "sh"));
ok($objHa->gt("t", "sh"));
ok($objHa->lt("t", "ts"));
ok($objHa->gt("u", "ts"));
ok($objHa->lt("y", "\x{1B4}"));
ok($objHa->gt("z", "\x{1B4}"));

# 14

$objHa->change(level => 2);

ok($objHa->eq("\x{253}", "\x{181}"));
ok($objHa->eq("\x{257}", "\x{18A}"));
ok($objHa->eq("\x{199}", "\x{198}"));
ok($objHa->eq("sh", "Sh"));
ok($objHa->eq("Sh", "SH"));
ok($objHa->eq("ts", "Ts"));
ok($objHa->eq("Ts", "TS"));
ok($objHa->eq("'y", "'Y"));
ok($objHa->eq("\x{1B4}", "\x{1B3}"));

ok($objHa->eq("\x{1B4}", "\x{2BC}y"));
ok($objHa->eq("\x{2BC}y","'y"));
ok($objHa->eq("'y",      "\x{1B3}"));
ok($objHa->eq("\x{1B3}", "\x{2BC}Y"));
ok($objHa->eq("\x{2BC}Y","'Y"));
ok($objHa->eq("'Y",      "\x{1B4}"));

# 29

$objHa->change(level => 3);

ok($objHa->lt("\x{253}", "\x{181}"));
ok($objHa->lt("\x{257}", "\x{18A}"));
ok($objHa->lt("\x{199}", "\x{198}"));
ok($objHa->lt("sh", "Sh"));
ok($objHa->lt("Sh", "SH"));
ok($objHa->lt("ts", "Ts"));
ok($objHa->lt("Ts", "TS"));
ok($objHa->lt("'y", "'Y"));
ok($objHa->lt("\x{1B4}", "\x{1B3}"));

ok($objHa->lt("\x{1B4}", "\x{2BC}y"));
ok($objHa->lt("\x{2BC}y","'y"));
ok($objHa->lt("'y",      "\x{1B3}"));
ok($objHa->lt("\x{1B3}", "\x{2BC}Y"));
ok($objHa->lt("\x{2BC}Y","'Y"));
ok($objHa->gt("'Y",      "\x{1B4}"));

# 44

$objHa->change(upper_before_lower => 1);

ok($objHa->gt("\x{1B4}", "\x{1B3}"));
ok($objHa->lt("\x{1B4}", "\x{2BC}y"));
ok($objHa->lt("\x{2BC}y","'y"));
ok($objHa->gt("'y",      "\x{1B3}"));
ok($objHa->lt("\x{1B3}", "\x{2BC}Y"));
ok($objHa->lt("\x{2BC}Y","'Y"));
ok($objHa->lt("'Y",      "\x{1B4}"));

# 51
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.20.1
@
text
@d3 3
a5 6
    unless ('A' eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate cannot pack a Unicode code point\n";
	exit 0;
    }
    unless (0x41 == unpack('U', 'A')) {
	print "1..0 # Unicode::Collate cannot get a Unicode code point\n";
@

