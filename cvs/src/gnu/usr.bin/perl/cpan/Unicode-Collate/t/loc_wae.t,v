head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.2.0.8
	OPENBSD_6_2_BASE:1.1.1.2
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.12
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.10
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.4
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.11.17.20.53.02;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@
BEGIN {
    unless ("A" eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate " .
	    "cannot stringify a Unicode code point\n";
	exit 0;
    }
    if ($ENV{PERL_CORE}) {
	chdir('t') if -d 't';
	@@INC = $^O eq 'MacOS' ? qw(::lib) : qw(../lib);
    }
}

use strict;
use warnings;
BEGIN { $| = 1; print "1..78\n"; }
my $count = 0;
sub ok ($;$) {
    my $p = my $r = shift;
    if (@@_) {
	my $x = shift;
	$p = !defined $x ? !defined $r : !defined $r ? 0 : $r eq $x;
    }
    print $p ? "ok" : "not ok", ' ', ++$count, "\n";
}

use Unicode::Collate::Locale;

ok(1);

#########################

my $objWae = Unicode::Collate::Locale->
    new(locale => 'WAE', normalization => undef);

ok($objWae->getlocale, 'wae');

$objWae->change(level => 1);

ok($objWae->lt("aa", "a9"));
ok($objWae->gt("aA", "a9"));
ok($objWae->gt("Aa", "a9"));
ok($objWae->gt("AA", "a9"));
ok($objWae->lt("ee", "e9"));
ok($objWae->gt("eE", "e9"));
ok($objWae->gt("Ee", "e9"));
ok($objWae->gt("EE", "e9"));
ok($objWae->lt("ii", "i9"));
ok($objWae->gt("iI", "i9"));
ok($objWae->gt("Ii", "i9"));
ok($objWae->gt("II", "i9"));
ok($objWae->lt("oo", "o9"));
ok($objWae->gt("oO", "o9"));
ok($objWae->gt("Oo", "o9"));
ok($objWae->gt("OO", "o9"));
ok($objWae->lt("uu", "u9"));
ok($objWae->gt("uU", "u9"));
ok($objWae->gt("Uu", "u9"));
ok($objWae->gt("UU", "u9"));

# 22

ok($objWae->lt("ch", "c9"));
ok($objWae->gt("cH", "c9"));
ok($objWae->gt("Ch", "c9"));
ok($objWae->gt("CH", "c9"));

ok($objWae->lt("sch", "s9"));
ok($objWae->gt("scH", "s9"));
ok($objWae->gt("sCh", "s9"));
ok($objWae->gt("sCH", "s9"));
ok($objWae->gt("Sch", "s9"));
ok($objWae->gt("ScH", "s9"));
ok($objWae->gt("SCh", "s9"));
ok($objWae->gt("SCH", "s9"));

# 34

ok($objWae->lt("a\x{308}a\x{308}", "a9"));
ok($objWae->gt("a\x{308}A\x{308}", "a9"));
ok($objWae->gt("A\x{308}a\x{308}", "a9"));
ok($objWae->gt("A\x{308}A\x{308}", "a9"));
ok($objWae->lt("o\x{308}o\x{308}", "o9"));
ok($objWae->gt("o\x{308}O\x{308}", "o9"));
ok($objWae->gt("O\x{308}o\x{308}", "o9"));
ok($objWae->gt("O\x{308}O\x{308}", "o9"));
ok($objWae->lt("u\x{308}u\x{308}", "u9"));
ok($objWae->gt("u\x{308}U\x{308}", "u9"));
ok($objWae->gt("U\x{308}u\x{308}", "u9"));
ok($objWae->gt("U\x{308}U\x{308}", "u9"));

# 46

$objWae->change(level => 3);

ok($objWae->eq("a\x{301}", pack('U', 0xE1)));
ok($objWae->eq("e\x{301}", pack('U', 0xE9)));
ok($objWae->eq("i\x{301}", pack('U', 0xED)));
ok($objWae->eq("o\x{301}", pack('U', 0xF3)));
ok($objWae->eq("u\x{301}", pack('U', 0xFA)));
ok($objWae->eq("a\x{301}", "aa"));
ok($objWae->eq("e\x{301}", "ee"));
ok($objWae->eq("i\x{301}", "ii"));
ok($objWae->eq("o\x{301}", "oo"));
ok($objWae->eq("u\x{301}", "uu"));

# 56

ok($objWae->eq("c\x{30C}", "\x{10D}"));
ok($objWae->eq("s\x{30C}", "\x{161}"));
ok($objWae->eq("c\x{30C}", "ch"));
ok($objWae->eq("s\x{30C}", "sch"));

# 60

my $a1 = pack('U', 0xE4);
my $o1 = pack('U', 0xF6);
my $u1 = pack('U', 0xFC);
my $a2 = "a\x{308}";
my $o2 = "o\x{308}";
my $u2 = "u\x{308}";

ok($objWae->eq($a1, $a2));
ok($objWae->eq($o1, $o2));
ok($objWae->eq($u1, $u2));

ok($objWae->eq("a\x{303}", pack('U', 0xE3)));
ok($objWae->eq("o\x{303}", pack('U', 0xF5)));
ok($objWae->eq("u\x{303}", "\x{169}"));

# 66

ok($objWae->eq("a\x{303}", $a1.$a1));
ok($objWae->eq("a\x{303}", $a1.$a2));
ok($objWae->eq("a\x{303}", $a2.$a1));
ok($objWae->eq("a\x{303}", $a2.$a2));
ok($objWae->eq("o\x{303}", $o1.$o1));
ok($objWae->eq("o\x{303}", $o1.$o2));
ok($objWae->eq("o\x{303}", $o2.$o1));
ok($objWae->eq("o\x{303}", $o2.$o2));
ok($objWae->eq("u\x{303}", $u1.$u1));
ok($objWae->eq("u\x{303}", $u1.$u2));
ok($objWae->eq("u\x{303}", $u2.$u1));
ok($objWae->eq("u\x{303}", $u2.$u2));

# 78
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.20.1
@
text
@d3 3
a5 6
    unless ('A' eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate cannot pack a Unicode code point\n";
	exit 0;
    }
    unless (0x41 == unpack('U', 'A')) {
	print "1..0 # Unicode::Collate cannot get a Unicode code point\n";
@

