head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.3.0.12
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.10
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.4
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.6
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.59;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.53.01;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@
BEGIN {
    unless ("A" eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate " .
	    "cannot stringify a Unicode code point\n";
	exit 0;
    }
    if ($ENV{PERL_CORE}) {
	chdir('t') if -d 't';
	@@INC = $^O eq 'MacOS' ? qw(::lib) : qw(../lib);
    }
}

use strict;
use warnings;
BEGIN { $| = 1; print "1..14\n"; }
my $count = 0;
sub ok ($;$) {
    my $p = my $r = shift;
    if (@@_) {
	my $x = shift;
	$p = !defined $x ? !defined $r : !defined $r ? 0 : $r eq $x;
    }
    print $p ? "ok" : "not ok", ' ', ++$count, "\n";
}

use Unicode::Collate::Locale;

ok(1);

#########################

my $objMr = Unicode::Collate::Locale->
    new(locale => 'MR', normalization => undef);

ok($objMr->getlocale, 'mr');

$objMr->change(level => 1);

ok($objMr->lt("\x{950}", "\x{902}"));
ok($objMr->lt("\x{902}", "\x{903}"));
ok($objMr->lt("\x{903}", "\x{972}"));

ok($objMr->eq("\x{902}", "\x{901}"));

ok($objMr->lt("\x{939}", "\x{933}"));
ok($objMr->lt("\x{933}", "\x{915}\x{94D}\x{937}"));
ok($objMr->lt("\x{915}\x{94D}\x{937}", "\x{91C}\x{94D}\x{91E}"));
ok($objMr->lt("\x{91C}\x{94D}\x{91E}", "\x{93D}"));

ok($objMr->eq("\x{933}", "\x{934}"));

# 11

$objMr->change(level => 2);

ok($objMr->lt("\x{902}", "\x{901}"));
ok($objMr->lt("\x{933}", "\x{934}"));

$objMr->change(level => 3);

ok($objMr->eq("\x{933}\x{93C}", "\x{934}"));

# 14
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d16 1
a16 1
BEGIN { $| = 1; print "1..23\n"; }
d38 17
d64 1
a64 24
$objMr->change(level => 1);

ok($objMr->eq("\x{902}", "\x{901}"));
ok($objMr->eq("\x{933}", "\x{934}"));

# 7

for my $h (0, 1) {
    no warnings 'utf8';
    my $t = $h ? pack('U', 0xFFFF) : "";
    $objMr->change(highestFFFF => 1) if $h;

    ok($objMr->lt("\x{950}$t", "\x{902}"));
    ok($objMr->lt("\x{902}$t", "\x{903}"));
    ok($objMr->lt("\x{903}$t", "\x{972}"));

    ok($objMr->lt("\x{938}$t", "\x{939}"));
    ok($objMr->lt("\x{939}$t", "\x{933}"));
    ok($objMr->lt("\x{933}$t", "\x{915}\x{94D}\x{937}"));
    ok($objMr->lt("\x{915}\x{94D}\x{937}$t", "\x{91C}\x{94D}\x{91E}"));
    ok($objMr->lt("\x{91C}\x{94D}\x{91E}$t", "\x{93D}"));
}

# 23
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d3 3
a5 6
    unless ('A' eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate cannot pack a Unicode code point\n";
	exit 0;
    }
    unless (0x41 == unpack('U', 'A')) {
	print "1..0 # Unicode::Collate cannot get a Unicode code point\n";
@


