head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.3
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.1.1.3.0.12
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.10
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.4
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.6
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.31;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.58.59;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.53.02;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@
BEGIN {
    unless ("A" eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate " .
	    "cannot stringify a Unicode code point\n";
	exit 0;
    }
    if ($ENV{PERL_CORE}) {
	chdir('t') if -d 't';
	@@INC = $^O eq 'MacOS' ? qw(::lib) : qw(../lib);
    }
}

use strict;
use warnings;
BEGIN { $| = 1; print "1..132\n"; }
my $count = 0;
sub ok ($;$) {
    my $p = my $r = shift;
    if (@@_) {
	my $x = shift;
	$p = !defined $x ? !defined $r : !defined $r ? 0 : $r eq $x;
    }
    print $p ? "ok" : "not ok", ' ', ++$count, "\n";
}

use Unicode::Collate::Locale;

ok(1);

#########################

my $objTo = Unicode::Collate::Locale->
    new(locale => 'TO', normalization => undef);

ok($objTo->getlocale, 'to');

$objTo->change(level => 1);

ok($objTo->lt("n", "ng"));
ok($objTo->lt("nz","ng"));
ok($objTo->gt("o", "ng"));
ok($objTo->lt("z", "\x{2BB}"));
ok($objTo->lt("z", "\x{2BD}"));

# 7

ok($objTo->eq("a", "a\x{304}"));
ok($objTo->eq("A", "A\x{304}"));
ok($objTo->eq("e", "e\x{304}"));
ok($objTo->eq("E", "E\x{304}"));
ok($objTo->eq("i", "i\x{304}"));
ok($objTo->eq("I", "I\x{304}"));
ok($objTo->eq("o", "o\x{304}"));
ok($objTo->eq("O", "O\x{304}"));
ok($objTo->eq("u", "u\x{304}"));
ok($objTo->eq("U", "U\x{304}"));

# 17

$objTo->change(level => 2);

ok($objTo->lt("a", "a\x{304}"));
ok($objTo->lt("A", "A\x{304}"));
ok($objTo->lt("e", "e\x{304}"));
ok($objTo->lt("E", "E\x{304}"));
ok($objTo->lt("i", "i\x{304}"));
ok($objTo->lt("I", "I\x{304}"));
ok($objTo->lt("o", "o\x{304}"));
ok($objTo->lt("O", "O\x{304}"));
ok($objTo->lt("u", "u\x{304}"));
ok($objTo->lt("U", "U\x{304}"));

# 27

ok($objTo->eq("ng", "Ng"));
ok($objTo->eq("Ng", "NG"));
ok($objTo->eq("NG", "\x{14B}"));
ok($objTo->eq("\x{14B}", "\x{14A}"));
ok($objTo->eq("\x{2BB}", "\x{2BD}"));

ok($objTo->eq("a\x{304}", "A\x{304}"));
ok($objTo->eq("a\x{301}", "A\x{301}"));
ok($objTo->eq("e\x{304}", "E\x{304}"));
ok($objTo->eq("e\x{301}", "E\x{301}"));
ok($objTo->eq("i\x{304}", "I\x{304}"));
ok($objTo->eq("i\x{301}", "I\x{301}"));
ok($objTo->eq("o\x{304}", "O\x{304}"));
ok($objTo->eq("o\x{301}", "O\x{301}"));
ok($objTo->eq("u\x{304}", "U\x{304}"));
ok($objTo->eq("u\x{301}", "U\x{301}"));

ok($objTo->eq("a\x{304}", "a\x{301}"));
ok($objTo->eq("A\x{304}", "A\x{301}"));
ok($objTo->eq("e\x{304}", "e\x{301}"));
ok($objTo->eq("E\x{304}", "E\x{301}"));
ok($objTo->eq("i\x{304}", "i\x{301}"));
ok($objTo->eq("I\x{304}", "I\x{301}"));
ok($objTo->eq("o\x{304}", "o\x{301}"));
ok($objTo->eq("O\x{304}", "O\x{301}"));
ok($objTo->eq("u\x{304}", "u\x{301}"));
ok($objTo->eq("U\x{304}", "U\x{301}"));

# 52

$objTo->change(level => 3);

ok($objTo->lt("ng", "Ng"));
ok($objTo->lt("Ng", "NG"));
ok($objTo->lt("NG", "\x{14B}"));
ok($objTo->lt("\x{14B}", "\x{14A}"));
ok($objTo->lt("\x{2BB}", "\x{2BD}"));

ok($objTo->lt("a\x{304}", "A\x{304}"));
ok($objTo->lt("a\x{301}", "A\x{301}"));
ok($objTo->lt("e\x{304}", "E\x{304}"));
ok($objTo->lt("e\x{301}", "E\x{301}"));
ok($objTo->lt("i\x{304}", "I\x{304}"));
ok($objTo->lt("i\x{301}", "I\x{301}"));
ok($objTo->lt("o\x{304}", "O\x{304}"));
ok($objTo->lt("o\x{301}", "O\x{301}"));
ok($objTo->lt("u\x{304}", "U\x{304}"));
ok($objTo->lt("u\x{301}", "U\x{301}"));

ok($objTo->lt("a\x{304}", "a\x{301}"));
ok($objTo->lt("A\x{304}", "A\x{301}"));
ok($objTo->lt("e\x{304}", "e\x{301}"));
ok($objTo->lt("E\x{304}", "E\x{301}"));
ok($objTo->lt("i\x{304}", "i\x{301}"));
ok($objTo->lt("I\x{304}", "I\x{301}"));
ok($objTo->lt("o\x{304}", "o\x{301}"));
ok($objTo->lt("O\x{304}", "O\x{301}"));
ok($objTo->lt("u\x{304}", "u\x{301}"));
ok($objTo->lt("U\x{304}", "U\x{301}"));

# 77

ok($objTo->eq("a\x{304}", "\x{101}"));
ok($objTo->eq("A\x{304}", "\x{100}"));
ok($objTo->eq("e\x{304}", "\x{113}"));
ok($objTo->eq("E\x{304}", "\x{112}"));
ok($objTo->eq("i\x{304}", "\x{12B}"));
ok($objTo->eq("I\x{304}", "\x{12A}"));
ok($objTo->eq("o\x{304}", "\x{14D}"));
ok($objTo->eq("O\x{304}", "\x{14C}"));
ok($objTo->eq("u\x{304}", "\x{16B}"));
ok($objTo->eq("U\x{304}", "\x{16A}"));

ok($objTo->eq("a\x{301}", pack('U', 0xE1)));
ok($objTo->eq("a\x{341}", pack('U', 0xE1)));
ok($objTo->eq("A\x{301}", pack('U', 0xC1)));
ok($objTo->eq("A\x{341}", pack('U', 0xC1)));
ok($objTo->eq("e\x{301}", pack('U', 0xE9)));
ok($objTo->eq("e\x{341}", pack('U', 0xE9)));
ok($objTo->eq("E\x{301}", pack('U', 0xC9)));
ok($objTo->eq("E\x{341}", pack('U', 0xC9)));
ok($objTo->eq("i\x{301}", pack('U', 0xED)));
ok($objTo->eq("i\x{341}", pack('U', 0xED)));
ok($objTo->eq("I\x{301}", pack('U', 0xCD)));
ok($objTo->eq("I\x{341}", pack('U', 0xCD)));
ok($objTo->eq("o\x{301}", pack('U', 0xF3)));
ok($objTo->eq("o\x{341}", pack('U', 0xF3)));
ok($objTo->eq("O\x{301}", pack('U', 0xD3)));
ok($objTo->eq("O\x{341}", pack('U', 0xD3)));
ok($objTo->eq("u\x{301}", pack('U', 0xFA)));
ok($objTo->eq("u\x{341}", pack('U', 0xFA)));
ok($objTo->eq("U\x{301}", pack('U', 0xDA)));
ok($objTo->eq("U\x{341}", pack('U', 0xDA)));

# 107

$objTo->change(upper_before_lower => 1);

ok($objTo->gt("ng", "Ng"));
ok($objTo->gt("Ng", "NG"));
ok($objTo->lt("NG", "\x{14B}"));
ok($objTo->gt("\x{14B}", "\x{14A}"));
ok($objTo->lt("\x{2BB}", "\x{2BD}"));

ok($objTo->gt("a\x{304}", "A\x{304}"));
ok($objTo->gt("a\x{301}", "A\x{301}"));
ok($objTo->gt("e\x{304}", "E\x{304}"));
ok($objTo->gt("e\x{301}", "E\x{301}"));
ok($objTo->gt("i\x{304}", "I\x{304}"));
ok($objTo->gt("i\x{301}", "I\x{301}"));
ok($objTo->gt("o\x{304}", "O\x{304}"));
ok($objTo->gt("o\x{301}", "O\x{301}"));
ok($objTo->gt("u\x{304}", "U\x{304}"));
ok($objTo->gt("u\x{301}", "U\x{301}"));

ok($objTo->lt("a\x{304}", "a\x{301}"));
ok($objTo->lt("A\x{304}", "A\x{301}"));
ok($objTo->lt("e\x{304}", "e\x{301}"));
ok($objTo->lt("E\x{304}", "E\x{301}"));
ok($objTo->lt("i\x{304}", "i\x{301}"));
ok($objTo->lt("I\x{304}", "I\x{301}"));
ok($objTo->lt("o\x{304}", "o\x{301}"));
ok($objTo->lt("O\x{304}", "O\x{301}"));
ok($objTo->lt("u\x{304}", "u\x{301}"));
ok($objTo->lt("U\x{304}", "U\x{301}"));

# 132
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d16 1
a16 1
BEGIN { $| = 1; print "1..122\n"; }
d48 10
a57 21
ok($objTo->eq("a", "a\x{301}"));
ok($objTo->eq("A", "A\x{301}"));
ok($objTo->eq("e", "e\x{301}"));
ok($objTo->eq("E", "E\x{301}"));
ok($objTo->eq("i", "i\x{301}"));
ok($objTo->eq("I", "I\x{301}"));
ok($objTo->eq("o", "o\x{301}"));
ok($objTo->eq("O", "O\x{301}"));
ok($objTo->eq("u", "u\x{301}"));
ok($objTo->eq("U", "U\x{301}"));

ok($objTo->eq("a\x{301}", "a\x{304}"));
ok($objTo->eq("A\x{301}", "A\x{304}"));
ok($objTo->eq("e\x{301}", "e\x{304}"));
ok($objTo->eq("E\x{301}", "E\x{304}"));
ok($objTo->eq("i\x{301}", "i\x{304}"));
ok($objTo->eq("I\x{301}", "I\x{304}"));
ok($objTo->eq("o\x{301}", "o\x{304}"));
ok($objTo->eq("O\x{301}", "O\x{304}"));
ok($objTo->eq("u\x{301}", "u\x{304}"));
ok($objTo->eq("U\x{301}", "U\x{304}"));
d59 1
a59 1
# 27
d63 10
a72 21
ok($objTo->lt("a", "a\x{301}"));
ok($objTo->lt("A", "A\x{301}"));
ok($objTo->lt("e", "e\x{301}"));
ok($objTo->lt("E", "E\x{301}"));
ok($objTo->lt("i", "i\x{301}"));
ok($objTo->lt("I", "I\x{301}"));
ok($objTo->lt("o", "o\x{301}"));
ok($objTo->lt("O", "O\x{301}"));
ok($objTo->lt("u", "u\x{301}"));
ok($objTo->lt("U", "U\x{301}"));

ok($objTo->lt("a\x{301}", "a\x{304}"));
ok($objTo->lt("A\x{301}", "A\x{304}"));
ok($objTo->lt("e\x{301}", "e\x{304}"));
ok($objTo->lt("E\x{301}", "E\x{304}"));
ok($objTo->lt("i\x{301}", "i\x{304}"));
ok($objTo->lt("I\x{301}", "I\x{304}"));
ok($objTo->lt("o\x{301}", "o\x{304}"));
ok($objTo->lt("O\x{301}", "O\x{304}"));
ok($objTo->lt("u\x{301}", "u\x{304}"));
ok($objTo->lt("U\x{301}", "U\x{304}"));
d74 1
a74 1
# 47
d82 1
d84 1
a84 1
ok($objTo->eq("a\x{304}", "A\x{304}"));
d86 1
a86 1
ok($objTo->eq("e\x{304}", "E\x{304}"));
d88 1
a88 1
ok($objTo->eq("i\x{304}", "I\x{304}"));
d90 1
a90 1
ok($objTo->eq("o\x{304}", "O\x{304}"));
a91 1
ok($objTo->eq("u\x{304}", "U\x{304}"));
d93 12
a104 1
# 62
d114 1
d116 1
a116 1
ok($objTo->lt("a\x{304}", "A\x{304}"));
d118 1
a118 1
ok($objTo->lt("e\x{304}", "E\x{304}"));
d120 1
a120 1
ok($objTo->lt("i\x{304}", "I\x{304}"));
d122 1
a122 1
ok($objTo->lt("o\x{304}", "O\x{304}"));
d124 11
a134 1
ok($objTo->lt("u\x{304}", "U\x{304}"));
d138 11
a169 11
ok($objTo->eq("a\x{304}", "\x{101}"));
ok($objTo->eq("A\x{304}", "\x{100}"));
ok($objTo->eq("e\x{304}", "\x{113}"));
ok($objTo->eq("E\x{304}", "\x{112}"));
ok($objTo->eq("i\x{304}", "\x{12B}"));
ok($objTo->eq("I\x{304}", "\x{12A}"));
ok($objTo->eq("o\x{304}", "\x{14D}"));
ok($objTo->eq("O\x{304}", "\x{14C}"));
ok($objTo->eq("u\x{304}", "\x{16B}"));
ok($objTo->eq("U\x{304}", "\x{16A}"));

d180 1
d182 1
a182 1
ok($objTo->gt("a\x{304}", "A\x{304}"));
d184 1
a184 1
ok($objTo->gt("e\x{304}", "E\x{304}"));
d186 1
a186 1
ok($objTo->gt("i\x{304}", "I\x{304}"));
d188 1
a188 1
ok($objTo->gt("o\x{304}", "O\x{304}"));
a189 1
ok($objTo->gt("u\x{304}", "U\x{304}"));
d191 12
a202 1
# 122
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@d3 3
a5 6
    unless ('A' eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate cannot pack a Unicode code point\n";
	exit 0;
    }
    unless (0x41 == unpack('U', 'A')) {
	print "1..0 # Unicode::Collate cannot get a Unicode code point\n";
@


