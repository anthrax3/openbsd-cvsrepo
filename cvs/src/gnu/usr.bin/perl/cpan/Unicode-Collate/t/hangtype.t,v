head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.4.0.10
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.4
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.6
	OPENBSD_5_8_BASE:1.1.1.4
	PERL_5_20_2:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.2
	OPENBSD_5_7_BASE:1.1.1.4
	PERL_5_20_1:1.1.1.4
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.49.04;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.04;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.08.30;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.58.58;	author afresh1;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.11.17.20.53.01;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@BEGIN {
    unless ("A" eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate " .
	    "cannot stringify a Unicode code point\n";
	exit 0;
    }
    if ($ENV{PERL_CORE}) {
	chdir('t') if -d 't';
	@@INC = $^O eq 'MacOS' ? qw(::lib) : qw(../lib);
    }
}

use Test;
BEGIN { plan tests => 33 };

use strict;
use warnings;
use Unicode::Collate;

ok(1);

#########################

ok(Unicode::Collate::getHST(0x0000), '');
ok(Unicode::Collate::getHST(0x0100), '');
ok(Unicode::Collate::getHST(0x1000), '');
ok(Unicode::Collate::getHST(0x10FF), '');
ok(Unicode::Collate::getHST(0x1100), 'L');
ok(Unicode::Collate::getHST(0x1101), 'L');
ok(Unicode::Collate::getHST(0x1159), 'L');
ok(Unicode::Collate::getHST(0x115A), '');
ok(Unicode::Collate::getHST(0x115E), '');
ok(Unicode::Collate::getHST(0x115F), 'L');
ok(Unicode::Collate::getHST(0x1160), 'V');
ok(Unicode::Collate::getHST(0x1161), 'V');
ok(Unicode::Collate::getHST(0x11A0), 'V');
ok(Unicode::Collate::getHST(0x11A2), 'V');
ok(Unicode::Collate::getHST(0x11A3), '');
ok(Unicode::Collate::getHST(0x11A7), '');
ok(Unicode::Collate::getHST(0x11A8), 'T');
ok(Unicode::Collate::getHST(0x11AF), 'T');
ok(Unicode::Collate::getHST(0x11E0), 'T');
ok(Unicode::Collate::getHST(0x11F9), 'T');
ok(Unicode::Collate::getHST(0x11FA), '');
ok(Unicode::Collate::getHST(0x11FF), '');
ok(Unicode::Collate::getHST(0x3011), '');
ok(Unicode::Collate::getHST(0x11A7), '');
ok(Unicode::Collate::getHST(0xABFF), '');
ok(Unicode::Collate::getHST(0xAC00), 'LV');
ok(Unicode::Collate::getHST(0xAC01), 'LVT');
ok(Unicode::Collate::getHST(0xAC1B), 'LVT');
ok(Unicode::Collate::getHST(0xAC1C), 'LV');
ok(Unicode::Collate::getHST(0xD7A3), 'LVT');
ok(Unicode::Collate::getHST(0xD7A4), '');
ok(Unicode::Collate::getHST(0xFFFF), '');

@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a0 1

d13 3
a17 11
BEGIN { $| = 1; print "1..451\n"; } # 1 + 50 x @@Versions
my $count = 0;
sub ok ($;$) {
    my $p = my $r = shift;
    if (@@_) {
	my $x = shift;
	$p = !defined $x ? !defined $r : !defined $r ? 0 : $r eq $x;
    }
    print $p ? "ok" : "not ok", ' ', ++$count, "\n";
}

d24 32
a55 54
my @@Versions = (8, 9, 11, 14, 16, 18, 20, 22, 24);

for my $v (@@Versions) {
    ok(Unicode::Collate::getHST(0x0000, $v), '');
    ok(Unicode::Collate::getHST(0x0100, $v), '');
    ok(Unicode::Collate::getHST(0x1000, $v), '');
    ok(Unicode::Collate::getHST(0x10FF, $v), '');
    ok(Unicode::Collate::getHST(0x1100, $v), 'L');
    ok(Unicode::Collate::getHST(0x1101, $v), 'L');
    ok(Unicode::Collate::getHST(0x1159, $v), 'L');
    ok(Unicode::Collate::getHST(0x115A, $v), ($v >= 20 ? 'L' : ''));
    ok(Unicode::Collate::getHST(0x115E, $v), ($v >= 20 ? 'L' : ''));
    ok(Unicode::Collate::getHST(0x115F, $v), 'L');
    ok(Unicode::Collate::getHST(0x1160, $v), 'V');
    ok(Unicode::Collate::getHST(0x1161, $v), 'V');
    ok(Unicode::Collate::getHST(0x11A0, $v), 'V');
    ok(Unicode::Collate::getHST(0x11A2, $v), 'V');
    ok(Unicode::Collate::getHST(0x11A3, $v), ($v >= 20 ? 'V' : ''));
    ok(Unicode::Collate::getHST(0x11A7, $v), ($v >= 20 ? 'V' : ''));
    ok(Unicode::Collate::getHST(0x11A8, $v), 'T');
    ok(Unicode::Collate::getHST(0x11AF, $v), 'T');
    ok(Unicode::Collate::getHST(0x11E0, $v), 'T');
    ok(Unicode::Collate::getHST(0x11F9, $v), 'T');
    ok(Unicode::Collate::getHST(0x11FA, $v), ($v >= 20 ? 'T' : ''));
    ok(Unicode::Collate::getHST(0x11FF, $v), ($v >= 20 ? 'T' : ''));
    ok(Unicode::Collate::getHST(0x3011, $v), '');
    ok(Unicode::Collate::getHST(0xA960, $v), ($v >= 20 ? 'L' : ''));
    ok(Unicode::Collate::getHST(0xA961, $v), ($v >= 20 ? 'L' : ''));
    ok(Unicode::Collate::getHST(0xA97C, $v), ($v >= 20 ? 'L' : ''));
    ok(Unicode::Collate::getHST(0xA97F, $v), '');
    ok(Unicode::Collate::getHST(0xABFF, $v), '');
    ok(Unicode::Collate::getHST(0xAC00, $v), 'LV');
    ok(Unicode::Collate::getHST(0xAC01, $v), 'LVT');
    ok(Unicode::Collate::getHST(0xAC1B, $v), 'LVT');
    ok(Unicode::Collate::getHST(0xAC1C, $v), 'LV');
    ok(Unicode::Collate::getHST(0xD7A3, $v), 'LVT');
    ok(Unicode::Collate::getHST(0xD7A4, $v), '');
    ok(Unicode::Collate::getHST(0xD7AF, $v), '');
    ok(Unicode::Collate::getHST(0xD7B0, $v), ($v >= 20 ? 'V' : ''));
    ok(Unicode::Collate::getHST(0xD7C0, $v), ($v >= 20 ? 'V' : ''));
    ok(Unicode::Collate::getHST(0xD7C6, $v), ($v >= 20 ? 'V' : ''));
    ok(Unicode::Collate::getHST(0xD7C7, $v), '');
    ok(Unicode::Collate::getHST(0xD7CA, $v), '');
    ok(Unicode::Collate::getHST(0xD7CB, $v), ($v >= 20 ? 'T' : ''));
    ok(Unicode::Collate::getHST(0xD7DD, $v), ($v >= 20 ? 'T' : ''));
    ok(Unicode::Collate::getHST(0xD7FB, $v), ($v >= 20 ? 'T' : ''));
    ok(Unicode::Collate::getHST(0xD7FC, $v), '');
    ok(Unicode::Collate::getHST(0xD7FF, $v), '');
    ok(Unicode::Collate::getHST(0xFFFF, $v), '');
    ok(Unicode::Collate::getHST(0x11100, $v), '');
    ok(Unicode::Collate::getHST(0x111FF, $v), '');
    ok(Unicode::Collate::getHST(0x2AC00, $v), '');
    ok(Unicode::Collate::getHST(0x10D7A3, $v), '');
}
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d16 1
a16 1
BEGIN { $| = 1; print "1..501\n"; } # 1 + 50 x @@Versions
d33 1
a33 1
my @@Versions = (8, 9, 11, 14, 16, 18, 20, 22, 24, 26);
@


1.1.1.4
log
@Import perl-5.20.1
@
text
@d3 3
a5 6
    unless ('A' eq pack('U', 0x41)) {
	print "1..0 # Unicode::Collate cannot pack a Unicode code point\n";
	exit 0;
    }
    unless (0x41 == unpack('U', 'A')) {
	print "1..0 # Unicode::Collate cannot get a Unicode code point\n";
d16 1
a16 1
BEGIN { $| = 1; print "1..551\n"; } # 1 + 50 x @@Versions
d33 1
a33 1
my @@Versions = (8, 9, 11, 14, 16, 18, 20, 22, 24, 26, 28);
@


