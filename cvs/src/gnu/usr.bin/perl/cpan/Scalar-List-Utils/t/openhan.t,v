head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.6
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2017.02.05.00.32.03;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2014.11.17.20.52.58;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.52.58;	author afresh1;	state Exp;
branches;
next	1.1.1.2;
commitid	B31cAbBIXiCqnL97;

1.1.1.2
date	2017.08.14.13.46.02;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!./perl

use strict;
use warnings;

use Test::More tests => 21;
use Scalar::Util qw(openhandle);

ok(defined &openhandle, 'defined');

{
    my $fh = \*STDERR;
    is(openhandle($fh), $fh, 'STDERR');

    is(fileno(openhandle(*STDERR)), fileno(STDERR), 'fileno(STDERR)');
}

{
    use vars qw(*CLOSED);
    is(openhandle(*CLOSED), undef, 'closed');
}

SKIP: {
    skip "3-arg open only on 5.6 or later", 1 if $]<5.006;

    open my $fh, "<", $0;
    skip "could not open $0 for reading: $!", 2 unless $fh;
    is(openhandle($fh), $fh, "works with indirect filehandles");
    close($fh);
    is(openhandle($fh), undef, "works with indirect filehandles");
}

SKIP: {
    skip "in-memory files only on 5.8 or later", 2 if $]<5.008;

    open my $fh, "<", \"in-memory file";
    skip "could not open in-memory file: $!", 2 unless $fh;
    is(openhandle($fh), $fh, "works with in-memory files");
    close($fh);
    is(openhandle($fh), undef, "works with in-memory files");
}

ok(openhandle(\*DATA), "works for \*DATA");
ok(openhandle(*DATA), "works for *DATA");
ok(openhandle(*DATA{IO}), "works for *DATA{IO}");

{
    require IO::Handle;
    my $fh = IO::Handle->new_from_fd(fileno(*STDERR), 'w');
    skip "new_from_fd(fileno(*STDERR)) failed", 2 unless $fh;
    ok(openhandle($fh), "works for IO::Handle objects");

    ok(!openhandle(IO::Handle->new), "unopened IO::Handle");
}

{
    require IO::File;
    my $fh = IO::File->new;
    $fh->open("< $0")
        or skip "could not open $0: $!", 3;
    ok(openhandle($fh), "works for IO::File objects");
    close($fh);
    ok(!openhandle($fh), "works for IO::File objects");

    ok(!openhandle(IO::File->new), "unopened IO::File" );
}

SKIP: {
    skip( "Tied handles only on 5.8 or later", 2) if $]<5.008;

    use vars qw(*H);

    package My::Tie;
    require Tie::Handle;
    @@My::Tie::ISA = qw(Tie::Handle);
    sub TIEHANDLE { bless {} }

    package main;
    tie *H, 'My::Tie';
    ok(openhandle(*H), "tied handles are always ok");
    ok(openhandle(\*H), "tied handle refs are always ok");
}

ok !openhandle(undef),   "undef is not a filehandle";
ok !openhandle("STDIN"), "strings are not filehandles";
ok !openhandle(0),       "integers are not filehandles";


__DATA__
@


1.1
log
@Initial revision
@
text
@a2 13
BEGIN {
    unless (-d 'blib') {
	chdir 't' if -d 't';
	@@INC = '../lib';
	require Config; import Config;
	keys %Config; # Silence warning
	if ($Config{extensions} !~ /\bList\/Util\b/) {
	    print "1..0 # Skip: List::Util was not built\n";
	    exit 0;
	}
    }
}

d4 1
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d3 13
a16 1
use warnings;
@

