head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.49.00;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.00;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w
#
# parselink.t -- Tests for Pod::ParseLink.
#
# Copyright 2001, 2009 by Russ Allbery <rra@@stanford.edu>
#
# This program is free software; you may redistribute it and/or modify it
# under the same terms as Perl itself.

# The format of each entry in this array is the L<> text followed by the
# five-element parse returned by parselink.
our @@TESTS = (
    [ 'foo',
      undef, 'foo', 'foo', undef, 'pod' ],

    [ 'foo|bar',
      'foo', 'foo', 'bar', undef, 'pod' ],

    [ 'foo/bar',
      undef, '"bar" in foo', 'foo', 'bar', 'pod' ],

    [ 'foo/"baz boo"',
      undef, '"baz boo" in foo', 'foo', 'baz boo', 'pod' ],

    [ '/bar',
      undef, '"bar"', undef, 'bar', 'pod' ],

    [ '/"baz boo"',
      undef, '"baz boo"', undef, 'baz boo', 'pod' ],

    [ '/baz boo',
      undef, '"baz boo"', undef, 'baz boo', 'pod' ],

    [ 'foo bar/baz boo',
      undef, '"baz boo" in foo bar', 'foo bar', 'baz boo', 'pod' ],

    [ 'foo bar  /  baz boo',
      undef, '"baz boo" in foo bar', 'foo bar', 'baz boo', 'pod' ],

    [ "foo\nbar\nbaz\n/\nboo",
      undef, '"boo" in foo bar baz', 'foo bar baz', 'boo', 'pod' ],

    [ 'anchor|name/section',
      'anchor', 'anchor', 'name', 'section', 'pod' ],

    [ '"boo var baz"',
      undef, '"boo var baz"', undef, 'boo var baz', 'pod' ],

    [ 'bar baz',
      undef, '"bar baz"', undef, 'bar baz', 'pod' ],

    [ '"boo bar baz / baz boo"',
      undef, '"boo bar baz / baz boo"', undef, 'boo bar baz / baz boo',
      'pod' ],

    [ 'fooZ<>bar',
      undef, 'fooZ<>bar', 'fooZ<>bar', undef, 'pod' ],

    [ 'Testing I<italics>|foo/bar',
      'Testing I<italics>', 'Testing I<italics>', 'foo', 'bar', 'pod' ],

    [ 'foo/I<Italic> text',
      undef, '"I<Italic> text" in foo', 'foo', 'I<Italic> text', 'pod' ],

    [ 'fooE<verbar>barZ<>/Section C<with> I<B<other> markup',
      undef, '"Section C<with> I<B<other> markup" in fooE<verbar>barZ<>',
      'fooE<verbar>barZ<>', 'Section C<with> I<B<other> markup', 'pod' ],

    [ 'Nested L<http://www.perl.org/>|fooE<sol>bar',
      'Nested L<http://www.perl.org/>', 'Nested L<http://www.perl.org/>',
      'fooE<sol>bar', undef, 'pod' ],

    [ 'ls(1)',
      undef, 'ls(1)', 'ls(1)', undef, 'man' ],

    [ '  perlfunc(1)/open  ',
      undef, '"open" in perlfunc(1)', 'perlfunc(1)', 'open', 'man' ],

    [ 'some manual page|perl(1)',
      'some manual page', 'some manual page', 'perl(1)', undef, 'man' ],

    [ 'http://www.perl.org/',
      undef, 'http://www.perl.org/', 'http://www.perl.org/', undef, 'url' ],

    [ 'news:yld72axzc8.fsf@@windlord.stanford.edu',
      undef, 'news:yld72axzc8.fsf@@windlord.stanford.edu',
      'news:yld72axzc8.fsf@@windlord.stanford.edu', undef, 'url' ],

    [ 'link|http://www.perl.org/',
      'link', 'link', 'http://www.perl.org/', undef, 'url' ],

    [ '0|http://www.perl.org/',
      '0', '0', 'http://www.perl.org/', undef, 'url' ],

    [ '0|Pod::Parser',
      '0', '0', 'Pod::Parser', undef, 'pod' ],
);

BEGIN {
    chdir 't' if -d 't';
    unshift (@@INC, '../blib/lib');
    $| = 1;
}

use strict;

use Test::More tests => 28;
BEGIN { use_ok ('Pod::ParseLink') }

# Used for reporting test failures.
my @@names = qw(text inferred name section type);

for (@@TESTS) {
    my @@expected = @@$_;
    my $link = shift @@expected;
    my @@results = parselink ($link);
    my $pretty = $link;
    $pretty =~ s/\n/\\n/g;
    is_deeply (\@@results, \@@expected, $pretty);
}
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
