head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.28
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.49.04;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.04;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!perl -w

print "1..6\n";

use strict;
use Digest::MD5 qw(md5_hex);

my $a = Digest::MD5->new;
$a->add("a");
my $b = $a->clone;

print "not " unless $b->clone->hexdigest eq md5_hex("a");
print "ok 1\n";

$a->add("a");
print "not " unless $a->hexdigest eq md5_hex("aa");
print "ok 2\n";

print "not " unless $a->hexdigest eq md5_hex("");
print "ok 3\n";

$b->add("b");
print "not " unless $b->clone->hexdigest eq md5_hex("ab");
print "ok 4\n";

$b->add("c");
print "not " unless $b->clone->hexdigest eq md5_hex("abc");
print "ok 5\n";

# Test that cloning picks up the correct class for subclasses.
{
   package MD5;
   @@MD5::ISA = qw(Digest::MD5);
}

$a = MD5->new;
$a->add("a");
$b = $a->clone;

print "not " unless ref($b) eq "MD5" && $b->add("b")->hexdigest eq md5_hex("ab");
print "ok 6\n";
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
