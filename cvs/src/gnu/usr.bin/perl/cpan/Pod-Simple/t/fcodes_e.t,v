head	1.1;
branch	1.1.1;
access;
symbols
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.28
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# fcodes E
BEGIN {
    if($ENV{PERL_CORE}) {
        chdir 't';
        @@INC = '../lib';
    }
}

use strict;
use Test;
BEGIN { plan tests => 20 };

#use Pod::Simple::Debug (6);

ok 1;

use Pod::Simple::DumpAsXML;
use Pod::Simple::XMLOutStream;

print "# Pod::Simple version $Pod::Simple::VERSION\n";

print "# Pod::Escapes version $Pod::Escapes::VERSION\n",
 if $Pod::Escapes::VERSION;
# Presumably that's the library being used


sub e ($$) { Pod::Simple::DumpAsXML->_duo(@@_) }

&ok( e "", "" );
&ok( e "\n", "", );


print "# Testing some basic mnemonic E sequences...\n";

&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<lt>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1<2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<gt>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1>2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<verbar>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1|2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<sol>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1/2\n")
);


print "# Testing some more mnemonic E sequences...\n";

&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<apos>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1'2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<quot>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1\"2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1&2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<amp>2\n")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<eacute>2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<233>2\n")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<infin>2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<8734>2\n")
);

&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<lchevron>2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<171>2\n")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<rchevron>2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<187>2\n")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<laquo>2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<171>2\n")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<raquo>2"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1E<187>2\n")
);



print "# Testing numeric E sequences...\n";
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<0101>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1A2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<65>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1A2")
);
&ok( Pod::Simple::XMLOutStream->_out("=pod\n\n1E<0x41>2\n"),
     Pod::Simple::XMLOutStream->_out("=pod\n\n1A2")
);



print "# Wrapping up... one for the road...\n";
ok 1;
print "# --- Done with ", __FILE__, " --- \n";


@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
