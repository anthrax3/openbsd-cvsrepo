head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.18
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.16
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	mktemp-0_2:1.1.1.1
	guenther:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.03.25.20.40.51;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.10.23.17.43;	author guenther;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.10.21.27.41;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.13.14.11.22;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.04.13.14.11.22;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

#include <unistd.h>

MODULE = OpenBSD::MkTemp		PACKAGE = OpenBSD::MkTemp		


# $tmpdir = mkdtemp( "/tmp/tmpdirXXXXXXXXXX" );
char *
mkdtemp(SV *template)
	PREINIT:
		char *path;
	CODE:
		if (SvTAINTED(template))
			croak("tainted template");
		path = savesvpv(template);
		RETVAL = mkdtemp(path);
		if (RETVAL == NULL)
			Safefree(path);
	OUTPUT:
		RETVAL


# $fh = mkstemps_real( $template, suffixlen )
void
mkstemps_real(SV *template, int suffixlen)
	PREINIT:
		int fd;
	PPCODE:
		if (suffixlen < 0)
			croak("invalid suffixlen");
		if (SvTAINTED(template))
			croak("tainted template");
		/* detect read-only SVs */
		sv_catpv(template, "");
		fd = mkstemps(SvPV_nolen(template), suffixlen);
		SvSETMAGIC(template);
		if (fd != -1) {
			GV *gv = newGVgen("OpenBSD::MkTemp");
			PerlIO *io = PerlIO_fdopen(fd, "w+");
			if (do_open(gv, "+<&", 3, FALSE, 0, 0, io)) {
				mXPUSHs(sv_bless(newRV((SV*)gv),
				    gv_stashpv("OpenBSD::MkTemp",1)));
				SvREFCNT_dec(gv);
			}
		}

@


1.3
log
@In a scalar context, mkstemp should return just the file handle

"sure" espie@@
@
text
@d11 1
a11 1
void
d15 1
a15 1
	PPCODE:
d19 2
a20 1
		if (mkdtemp(path) == NULL) {
d22 2
a23 5
			croak("Unable to mkdtemp(%s): %s",
				SvPV_nolen(template), strerror(errno));
		}
		mXPUSHp(path, strlen(path));
		Safefree(path);
d26 1
a26 1
# ($fh, $file) = mkstemps( "/tmp/tmpfileXXXXXXXXXX", $suffix);
d28 1
a28 2
mkstemps(SV *template, ...)
	PROTOTYPE: $;$
a29 3
		const char *t, *s;
		SV *path;
		STRLEN t_len, s_len;
d32 2
d36 4
a39 13
		if (items > 1) {
			s = SvPV(ST(1), s_len);
			if (s_len && SvTAINTED(ST(1)))
				croak("tainted suffix");
		} else {
			s_len = 0;
		}
		t = SvPV(template, t_len);
		path = sv_2mortal(newSV(t_len + s_len));
		sv_setpvn(path, t, t_len);
		if (s_len)
			sv_catpvn(path, s, s_len);
		fd = mkstemps(SvPV_nolen(path), s_len);
d44 1
a44 1
				mPUSHs(sv_bless(newRV((SV*)gv),
a46 6
				if (GIMME_V == G_ARRAY)
					PUSHs(path);
			} else {
				close(fd);
				unlink(SvPV_nolen(path));
				croak("Unable to create IO");
a47 6
		} else {
			sv_setpvn(path, t, t_len);
			if (s_len)
				sv_catpvn(path, s, s_len);
			croak("Unable to mkstemp(%s): %s", SvPV_nolen(path),
					strerror(errno));
@


1.2
log
@Change the Perl->C wrappers for mkdtemp and mkstemps to behave more like
the File::Temp routines and call croak() (the C version of 'die') instead
of returning an empty list.  This lets pkg_add give good error messages
when your $PKG_TMPDIR is mounted read-only.

ok espie@@
@
text
@d60 2
a61 1
				PUSHs(path);
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
char *
d15 1
a15 1
	CODE:
d19 1
a19 2
		RETVAL = mkdtemp(path);
		if (RETVAL == NULL)
d21 5
a25 2
	OUTPUT:
		RETVAL
d28 1
a28 1
# $fh = mkstemps_real( $template, suffixlen )
d30 2
a31 1
mkstemps_real(SV *template, int suffixlen)
d33 3
a37 2
		if (suffixlen < 0)
			croak("invalid suffixlen");
d40 13
a52 4
		/* detect read-only SVs */
		sv_catpv(template, "");
		fd = mkstemps(SvPV_nolen(template), suffixlen);
		SvSETMAGIC(template);
d57 1
a57 1
				mXPUSHs(sv_bless(newRV((SV*)gv),
d60 5
d66 6
@


1.1.1.1
log
@extra .xs glue to use mkstemp and mkdtemp directly
written by guenther@@ about a year ago.
discussed with him and millert@@
@
text
@@
