head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.31.59;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.07.43;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.07.43;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

use strict;
use warnings;

use Test::More qw[no_plan];
use t::Util    qw[tmpfile rewind $CRLF $LF];
use HTTP::Tiny;

{
    no warnings 'redefine';
    sub HTTP::Tiny::Handle::can_read  { 1 };
    sub HTTP::Tiny::Handle::can_write { 1 };
}

{
    my $header = join $CRLF, 'Foo: Foo', 'Foo: Baz', 'Bar: Bar', '', '';
    my $fh     = tmpfile($header);
    my $exp    = { foo => ['Foo', 'Baz'], bar => 'Bar' };
    my $handle = HTTP::Tiny::Handle->new(fh => $fh);
    my $got    = $handle->read_header_lines;
    is_deeply($got, $exp, "->read_header_lines() CRLF");
}

{
    my $header = join $LF, 'Foo: Foo', 'Foo: Baz', 'Bar: Bar', '', '';
    my $fh     = tmpfile($header);
    my $exp    = { foo => ['Foo', 'Baz'], bar => 'Bar' };
    my $handle = HTTP::Tiny::Handle->new(fh => $fh);
    my $got    = $handle->read_header_lines;
    is_deeply($got, $exp, "->read_header_lines() LF");
}

{
    my $header = "Foo: $CRLF\x09Bar$CRLF\x09$CRLF\x09Baz$CRLF$CRLF";
    my $fh     = tmpfile($header);
    my $exp    = { foo => 'Bar Baz' };
    my $handle = HTTP::Tiny::Handle->new(fh => $fh);
    my $got    = $handle->read_header_lines;
    is_deeply($got, $exp, "->read_header_lines() insane continuations");
}

{
    my $fh      = tmpfile();
    my $handle  = HTTP::Tiny::Handle->new(fh => $fh);
    my $headers = { foo => ['Foo', 'Baz'], bar => 'Bar' };
    $handle->write_header_lines($headers);
    rewind($fh);
    is_deeply($handle->read_header_lines, $headers, "roundtrip header lines");
}

{
    my $fh      = tmpfile();
    my $handle  = HTTP::Tiny::Handle->new(fh => $fh);
    my $headers = { foo => ['Foo', 'Baz'], bar => 'Bar', baz => '' };
    $handle->write_header_lines($headers);
    rewind($fh);
    is_deeply($handle->read_header_lines, $headers, "roundtrip header lines");
}

@


1.1
log
@Initial revision
@
text
@d52 9
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
