head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.3.0.12
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.6
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.8
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.31.57;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.48.56;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.56;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.07.02;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.58.51;	author afresh1;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2017.08.14.13.45.35;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@require 5.003000;

use strict;
use ExtUtils::MakeMaker;
use Getopt::Std;
use Config qw(%Config);

use vars qw($opt_t $opt_w $opt_x);

my $PM = 'lib/Digest/SHA.pm';
my $SHASUM = 'shasum';

	# 'use warnings' if possible, but stay portable

my($use_warnings, @@EDITs);
my $warn_1 = 'BEGIN { $^W = 1 }';
my $warn_0 = 'BEGIN { $^W = 0 }';
{
	eval "require warnings; import warnings";
	$use_warnings = $@@ ? 0 : 1;

	local(@@ARGV) = ($PM, $SHASUM);
	while (<>) {
		if (
		(!$use_warnings && /^(use|no) warnings\b/) ||
		( $use_warnings && /^\Q$warn_1\E # use warnings\b/) ||
		( $use_warnings && /^\Q$warn_0\E # no warnings\b/)) {
			push @@EDITs, $ARGV;
			close ARGV;
		}
	}
}

if (@@EDITs) {
	local($^I, @@ARGV) = ('', @@EDITs);
	while (<>) {
		if ($use_warnings) {
			s/^\Q$warn_1\E # (.*)$/$1/;
			s/^\Q$warn_0\E # (.*)$/$1/;
		}
		else {
			s/^(use warnings\b.*)$/$warn_1 # $1/;
			s/^(no warnings\b.*)$/$warn_0 # $1/;
		}
		print;
	}
}

getopts('twx');	# -t is no longer used, but allow it anyway

my @@defines;
push(@@defines, '-DNO_SHA_384_512')  if $opt_x;
my $define = join(' ', @@defines);

	# Workaround for DEC compiler bug, adapted from Digest::MD5

my @@extra = ();
if ($^O eq 'VMS') {
	if (defined($Config{ccname})) {
		if (grep(/VMS_VAX/, @@INC) && ($Config{ccname} eq 'DEC')) {
			# VAX optimizer, even up to v6.4, gets stuck
			push(@@extra, OPTIMIZE => "/Optimize=(NODISJOINT)");
		}
	}
}

	# Enhance performance on Intel when using gcc

if ($Config{archname} =~ /^i[3456]86/ && $Config{ccname} eq 'gcc') {
	push(@@extra, OPTIMIZE => '-O1 -fomit-frame-pointer');
}

my $fussy = '-Wall -Wextra -Wconversion -Wcast-align -Wpointer-arith ';
push(@@extra, CCFLAGS => $fussy . $Config{ccflags}) if $opt_w;

my %attr = (
	'NAME'		=> 'Digest::SHA',
	'VERSION_FROM'	=> $PM,
	'LIBS'		=> [''],
	'DEFINE'	=> $define,
	'INC'		=> '-I.',
	'EXE_FILES'	=> [ $SHASUM ],
	'INSTALLDIRS'	=> ($] >= 5.010 and $] < 5.011) ? 'perl' : 'site',
	@@extra,
);

my $MMversion = $ExtUtils::MakeMaker::VERSION || '0.00_00';
$attr{NO_META} = 1 if $MMversion ge '6.10_03';

WriteMakefile(%attr);
@


1.1
log
@Initial revision
@
text
@d3 1
d6 3
a8 1
use Config;
d11 22
d34 14
a47 2
my $PERL_CORE = 0;
$PERL_CORE = 1 if grep { $_ eq 'PERL_CORE=1' } @@ARGV;
d49 1
a49 2
my %opts;
getopts('tx', \%opts);
d52 19
a70 11
push(@@defines, '-DSHA_PERL_MODULE') if $] >= 5.004;
push(@@defines, '-DSHA_THREAD_SAFE') if $opts{'t'};
push(@@defines, '-DNO_SHA_384_512')  if $opts{'x'};

	# Configure SHA source to use static arrays for
	# message schedules if compiling on Intel platforms.
	# This seems to speed things up a bit.  However,
	# DON'T do this if thread-safe option is in force.
	
if ($Config{archname} =~ /^i[3456]86/) {
	push(@@defines, '-DSHA_STO_CLASS=static') unless $opts{'t'};
d73 2
a74 1
my $define = join(' ', @@defines);
d76 1
a76 1
my %att = (
d82 3
a84 4
	$PERL_CORE ? () : (
	    'EXE_FILES'		=> [ 'shasum' ],
	    'INSTALLDIRS'	=> ($] >= 5.010) ? 'perl' : 'site',
	),
d87 2
a88 2
my $MMversion = $ExtUtils::MakeMaker::VERSION || 0;
$att{NO_META} = 1 unless $MMversion < 6.10_03;
d90 1
a90 1
WriteMakefile(%att);
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a2 1
use strict;
d9 3
d37 4
a40 2
	'EXE_FILES'	=> [ 'shasum' ],
	'INSTALLDIRS'	=> ($] >= 5.010) ? 'perl' : 'site',
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d6 1
a6 1
use Config qw(%Config);
d11 1
a11 1
getopts('tx', \%opts);	# -t is no longer used, but allow it anyway
d14 2
a15 1
push(@@defines, '-DSHA_PerlIO') if $] >= 5.004;
a16 3
my $define = join(' ', @@defines);

	# Workaround for DEC compiler bug, adapted from Digest::MD5
d18 7
a24 8
my @@extra = ();
if ($^O eq 'VMS') {
	if (defined($Config{ccname})) {
		if (grep(/VMS_VAX/, @@INC) && ($Config{ccname} eq 'DEC')) {
			# VAX compiler optimizer even up to v6.4 gets stuck
			push(@@extra, OPTIMIZE => "/Optimize=(NODISJOINT)");
		}
	}
d27 1
a27 5
	# Enhance performance on Intel when using gcc

if ($Config{archname} =~ /^i[3456]86/ && $Config{ccname} eq 'gcc') {
	push(@@extra, OPTIMIZE => '-O1 -fomit-frame-pointer');
}
d36 1
a36 2
	'INSTALLDIRS'	=> ($] >= 5.010 and $] < 5.011) ? 'perl' : 'site',
	@@extra,
@


1.1.1.4
log
@Import perl-5.24.2
@
text
@a7 2
use vars qw($opt_t $opt_w $opt_x);

a8 22
my $SHASUM = 'shasum';

	# 'use warnings' if possible, but stay portable

my($use_warnings, @@EDITs);
my $warn_1 = 'BEGIN { $^W = 1 }';
my $warn_0 = 'BEGIN { $^W = 0 }';
{
	eval "require warnings; import warnings";
	$use_warnings = $@@ ? 0 : 1;

	local(@@ARGV) = ($PM, $SHASUM);
	while (<>) {
		if (
		(!$use_warnings && /^(use|no) warnings\b/) ||
		( $use_warnings && /^\Q$warn_1\E # use warnings\b/) ||
		( $use_warnings && /^\Q$warn_0\E # no warnings\b/)) {
			push @@EDITs, $ARGV;
			close ARGV;
		}
	}
}
d10 2
a11 16
if (@@EDITs) {
	local($^I, @@ARGV) = ('', @@EDITs);
	while (<>) {
		if ($use_warnings) {
			s/^\Q$warn_1\E # (.*)$/$1/;
			s/^\Q$warn_0\E # (.*)$/$1/;
		}
		else {
			s/^(use warnings\b.*)$/$warn_1 # $1/;
			s/^(no warnings\b.*)$/$warn_0 # $1/;
		}
		print;
	}
}

getopts('twx');	# -t is no longer used, but allow it anyway
d14 2
a15 1
push(@@defines, '-DNO_SHA_384_512')  if $opt_x;
d24 1
a24 1
			# VAX optimizer, even up to v6.4, gets stuck
d36 1
a36 4
my $fussy = '-Wall -Wextra -Wconversion -Wcast-align -Wpointer-arith ';
push(@@extra, CCFLAGS => $fussy . $Config{ccflags}) if $opt_w;

my %attr = (
d42 1
a42 1
	'EXE_FILES'	=> [ $SHASUM ],
d47 2
a48 2
my $MMversion = $ExtUtils::MakeMaker::VERSION || '0.00_00';
$attr{NO_META} = 1 if $MMversion ge '6.10_03';
d50 1
a50 1
WriteMakefile(%attr);
@


