head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.16
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.14
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.6
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.8
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.03.24.14.58.51;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.24.14.58.51;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use strict;

my $MODULE;

BEGIN {
	$MODULE = (-d "src") ? "Digest::SHA" : "Digest::SHA::PurePerl";
	eval "require $MODULE" || die $@@;
	$MODULE->import(qw(sha1_hex));
}

BEGIN {
	if ($ENV{PERL_CORE}) {
		chdir 't' if -d 't';
		@@INC = '../lib';
	}
}

my $skip = $] < 5.006 ? 1 : 0;

my $TEMPLATE = $] >= 5.006 ? 'U*' : 'C*';
my $empty_unicode = pack($TEMPLATE, ());
my $ok_unicode    = pack($TEMPLATE, (0..255));
my $wide_unicode  = pack($TEMPLATE, (0..256));

print "1..3\n";

unless ($skip) {
	print "not " unless sha1_hex($empty_unicode."abc") eq
		"a9993e364706816aba3e25717850c26c9cd0d89d";
}
print "ok 1", $skip ? " # skip: no Unicode" : "", "\n";

unless ($skip) {
	print "not " unless sha1_hex($ok_unicode) eq
		"4916d6bdb7f78e6803698cab32d1586ea457dfc8";
}
print "ok 2", $skip ? " # skip: no Unicode" : "", "\n";

unless ($skip) {
	eval { sha1_hex($wide_unicode) };
	print "not " unless $@@ =~ /Wide character/;
}
print "ok 3", $skip ? " # skip: no Unicode" : "", "\n";
@


1.1.1.1
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@@
