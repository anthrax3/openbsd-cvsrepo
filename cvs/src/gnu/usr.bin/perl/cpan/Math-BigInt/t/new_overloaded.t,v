head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

# Math::BigFloat->new had a bug where it would assume any object is a
# Math::BigInt which broke overloaded non-Math::BigInt objects.

use strict;
use warnings;

use Test::More tests => 4;

##############################################################################

package Overloaded::Num;

use overload
  '0+'     => sub { ${$_[0]} },
  fallback => 1;

sub new {
    my ($class, $num) = @@_;
    return bless \$num, $class;
}

package main;

use Math::BigFloat;

my $overloaded_num = Overloaded::Num->new(2.23);
is($overloaded_num, 2.23, 'Overloaded::Num->new(2.23)');

my $bigfloat = Math::BigFloat->new($overloaded_num);
is($bigfloat, 2.23, 'Math::BigFloat->new() accepts overloaded numbers');

my $bigint = Math::BigInt->new(Overloaded::Num->new(3));
is($bigint, 3, 'Math::BigInt->new() accepts overloaded numbers');

is(Math::BigFloat->new($bigint), 3,
   'Math::BigFloat->new() accepts a Math::BigInt');
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d4 4
a7 1
# BigInt which broke overloaded non-BigInts.
d11 1
d15 4
a18 2
use overload '0+' => sub { ${$_[0]} },
             fallback => 1;
d20 1
a20 1
    my($class, $num) = @@_;
a23 1

d29 1
a29 1
is $overloaded_num, 2.23;
d32 1
a32 1
is $bigfloat, 2.23, 'BigFloat->new accepts overloaded numbers';
d35 1
a35 1
is $bigint, 3, 'BigInt->new accepts overloaded numbers';
d37 2
a38 1
is( Math::BigFloat->new($bigint), 3, 'BigFloat from BigInt' );
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
