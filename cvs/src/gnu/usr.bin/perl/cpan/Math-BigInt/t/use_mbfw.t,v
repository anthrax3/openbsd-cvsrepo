head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.00;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.00;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.46.00;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl

# check that using Math::BigFloat with "with" and "lib" at the same time works
# broken in versions up to v1.63

use strict;
use warnings;

use lib 't';

use Test::More tests => 2;

# the replacement lib can handle the lib statement, but it could also ignore it
# completely, for instance, when it is a 100% replacement for Math::BigInt, but
# doesn't know the concept of alternative libs. But it still needs to cope with
# "lib => ". SubClass does record it, so we test here essential if
# Math::BigFloat hands the lib properly down, any more is outside out testing
# reach.

use Math::BigFloat with => 'Math::BigInt::Subclass',
                   lib  => 'BareCalc';

is(Math::BigFloat->config()->{with}, 'Math::BigInt::BareCalc',
   'Math::BigFloat->config()->{with}');

# is($Math::BigInt::Subclass::lib, 'BareCalc');

# it never arrives here, but that is a design decision in SubClass
is(Math::BigInt->config->{lib}, 'Math::BigInt::BareCalc',
   'Math::BigInt->config->{lib}');

# all tests done
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d3 1
a3 1
# check that using BigFloat with "with" and "lib" at the same time works
d7 1
a7 1
use Test;
d9 1
a9 32
BEGIN
  {
  $| = 1;
  # to locate the testing files
  my $location = $0; $location =~ s/use_mbfw.t//i;
  if ($ENV{PERL_CORE})
    {
    # testing with the core distribution
    @@INC = qw(../t/lib);
    }
  unshift @@INC, qw(../lib);     # to locate the modules
  if (-d 't')
    {
    chdir 't';
    require File::Spec;
    unshift @@INC, File::Spec->catdir(File::Spec->updir, $location);
    }
  else
    {
    unshift @@INC, $location;
    }
  print "# INC = @@INC\n";

  plan tests => 2;
  } 


# the replacement lib can handle the lib statement, but it could also ignore
# it completely, for instance, when it is a 100% replacement for BigInt, but
# doesn't know the concept of alternative libs. But it still needs to cope
# with "lib => ". SubClass does record it, so we test here essential if
# BigFloat hands the lib properly down, any more is outside out testing reach.
d11 1
a11 1
use Math::BigFloat with => 'Math::BigInt::Subclass', lib => 'BareCalc';
d13 6
a18 1
ok (Math::BigFloat->config()->{with}, 'Math::BigInt::BareCalc' );
d20 7
a26 1
# ok ($Math::BigInt::Subclass::lib, 'BareCalc' );
d29 2
a30 1
ok (Math::BigInt->config->{lib}, 'Math::BigInt::BareCalc' );
a32 1

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!/usr/bin/perl
d3 1
a3 1
# check that using Math::BigFloat with "with" and "lib" at the same time works
d7 1
a7 1
use warnings;
d9 32
a40 1
use lib 't';
d42 1
a42 1
use Test::More tests => 2;
d44 1
a44 6
# the replacement lib can handle the lib statement, but it could also ignore it
# completely, for instance, when it is a 100% replacement for Math::BigInt, but
# doesn't know the concept of alternative libs. But it still needs to cope with
# "lib => ". SubClass does record it, so we test here essential if
# Math::BigFloat hands the lib properly down, any more is outside out testing
# reach.
d46 1
a46 7
use Math::BigFloat with => 'Math::BigInt::Subclass',
                   lib  => 'BareCalc';

is(Math::BigFloat->config()->{with}, 'Math::BigInt::BareCalc',
   'Math::BigFloat->config()->{with}');

# is($Math::BigInt::Subclass::lib, 'BareCalc');
d49 1
a49 2
is(Math::BigInt->config->{lib}, 'Math::BigInt::BareCalc',
   'Math::BigInt->config->{lib}');
d52 1
@

