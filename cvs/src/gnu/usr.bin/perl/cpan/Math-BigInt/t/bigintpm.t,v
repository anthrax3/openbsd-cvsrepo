head	1.3;
access;
symbols
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.59;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

use strict;
use warnings;

use Test::More tests => 3724            # tests in require'd file
                         + 6;           # tests in this file

use Math::BigInt lib => 'Calc';

our ($CLASS, $CALC);
$CLASS = "Math::BigInt";
$CALC  = "Math::BigInt::Calc";

my $x;

#############################################################################
# from_hex(), from_bin() and from_oct() tests

$x = Math::BigInt->from_hex('0xcafe');
is($x, "51966",
   qq|Math::BigInt->from_hex("0xcafe")|);

$x = Math::BigInt->from_hex('0xcafebabedead');
is($x, "223195403574957",
   qq|Math::BigInt->from_hex("0xcafebabedead")|);

$x = Math::BigInt->from_bin('0b1001');
is($x, "9",
   qq|Math::BigInt->from_bin("0b1001")|);

$x = Math::BigInt->from_bin('0b1001100110011001100110011001');
is($x, "161061273",
   qq|Math::BigInt->from_bin("0b1001100110011001100110011001");|);

$x = Math::BigInt->from_oct('0775');
is($x, "509",
   qq|Math::BigInt->from_oct("0775");|);

$x = Math::BigInt->from_oct('07777777777777711111111222222222');
is($x, "9903520314281112085086151826",
   qq|Math::BigInt->from_oct("07777777777777711111111222222222");|);

#############################################################################
# all the other tests

require 't/bigintpm.inc';       # all tests here for sharing
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
a2 1
use Test;
d4 1
d6 2
a7 9
BEGIN
  {
  $| = 1;
  unshift @@INC, '../lib'; # for running manually
  my $location = $0; $location =~ s/bigintpm.t//;
  unshift @@INC, $location; # to locate the testing files
  chdir 't' if -d 't';
  plan tests => 3273 + 6;
  }
d11 5
a15 3
use vars qw ($scale $class $try $x $y $f @@args $ans $ans1 $ans1_str $setup $CL);
$class = "Math::BigInt";
$CL = "Math::BigInt::Calc";
d20 4
a23 3
my $x = Math::BigInt->from_hex('0xcafe');
ok ($x, "51966", 'from_hex() works');
 
d25 3
a27 2
ok ($x, "223195403574957", 'from_hex() works with long numbers');
 
d29 3
a31 2
ok ($x, "9", 'from_bin() works');
 
d33 2
a34 1
ok ($x, "161061273", 'from_bin() works with big numbers');
d37 3
a39 2
ok ($x, "509", 'from_oct() works');
 
d41 2
a42 1
ok ($x, "9903520314281112085086151826", 'from_oct() works with big numbers');
d46 2
a47 2
 
require 'bigintpm.inc';	# all tests here for sharing
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!perl
d3 1
a4 1
use warnings;
d6 9
a14 2
use Test::More tests => 3724            # tests in require'd file
                         + 6;           # tests in this file
d18 3
a20 5
our ($CLASS, $CALC);
$CLASS = "Math::BigInt";
$CALC  = "Math::BigInt::Calc";

my $x;
d25 3
a27 4
$x = Math::BigInt->from_hex('0xcafe');
is($x, "51966",
   qq|Math::BigInt->from_hex("0xcafe")|);

d29 2
a30 3
is($x, "223195403574957",
   qq|Math::BigInt->from_hex("0xcafebabedead")|);

d32 2
a33 3
is($x, "9",
   qq|Math::BigInt->from_bin("0b1001")|);

d35 1
a35 2
is($x, "161061273",
   qq|Math::BigInt->from_bin("0b1001100110011001100110011001");|);
d38 2
a39 3
is($x, "509",
   qq|Math::BigInt->from_oct("0775");|);

d41 1
a41 2
is($x, "9903520314281112085086151826",
   qq|Math::BigInt->from_oct("07777777777777711111111222222222");|);
d45 2
a46 2

require 't/bigintpm.inc';       # all tests here for sharing
@

