head	1.3;
access;
symbols
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.46.00;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

# for testing subclassing Math::BigFloat

package Math::BigFloat::Subclass;

require 5.006;

use strict;
use warnings;

use Exporter;
use Math::BigFloat 1.38;

our ($accuracy, $precision, $round_mode, $div_scale);

our @@ISA = qw(Exporter Math::BigFloat);

our $VERSION = "0.06";

use overload;                   # inherit overload from BigInt

# Globals
$accuracy = $precision = undef;
$round_mode = 'even';
$div_scale = 40;

sub new {
    my $proto = shift;
    my $class = ref($proto) || $proto;

    my $value = shift;
    my $a = $accuracy;  $a = $_[0] if defined $_[0];
    my $p = $precision; $p = $_[1] if defined $_[1];
    # Store the floating point value
    my $self = Math::BigFloat->new($value, $a, $p, $round_mode);
    bless $self, $class;
    $self->{'_custom'} = 1;     # make sure this never goes away
    return $self;
}

BEGIN {
    *objectify = \&Math::BigInt::objectify;
    # to allow Math::BigFloat::Subclass::bgcd( ... ) style calls
    *bgcd = \&Math::BigFloat::bgcd;
    *blcm = \&Math::BigFloat::blcm;
}

1;
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d7 2
a8 1
require 5.005_02;
d10 1
d13 3
a15 3
use Math::BigFloat(1.38);
use vars qw($VERSION @@ISA $PACKAGE
            $accuracy $precision $round_mode $div_scale);
d17 1
a17 1
@@ISA = qw(Exporter Math::BigFloat);
d19 1
a19 1
$VERSION = 0.05;
d21 1
a21 1
use overload; 		# inherit overload from BigInt
d28 12
a39 13
sub new
{
        my $proto  = shift;
        my $class  = ref($proto) || $proto;

        my $value       = shift;
	my $a = $accuracy; $a = $_[0] if defined $_[0];
	my $p = $precision; $p = $_[1] if defined $_[1];
        # Store the floating point value
        my $self = Math::BigFloat->new($value,$a,$p,$round_mode);
        bless $self, $class;
        $self->{'_custom'} = 1; # make sure this never goes away
        return $self;
d42 6
a47 7
BEGIN
  {
  *objectify = \&Math::BigInt::objectify;
  # to allow Math::BigFloat::Subclass::bgcd( ... ) style calls
  *bgcd = \&Math::BigFloat::bgcd;
  *blcm = \&Math::BigFloat::blcm;
  }
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!perl
d7 1
a7 2
require 5.006;

a8 1
use warnings;
d11 3
a13 3
use Math::BigFloat 1.38;

our ($accuracy, $precision, $round_mode, $div_scale);
d15 1
a15 1
our @@ISA = qw(Exporter Math::BigFloat);
d17 1
a17 1
our $VERSION = "0.06";
d19 1
a19 1
use overload;                   # inherit overload from BigInt
d26 13
a38 12
sub new {
    my $proto = shift;
    my $class = ref($proto) || $proto;

    my $value = shift;
    my $a = $accuracy;  $a = $_[0] if defined $_[0];
    my $p = $precision; $p = $_[1] if defined $_[1];
    # Store the floating point value
    my $self = Math::BigFloat->new($value, $a, $p, $round_mode);
    bless $self, $class;
    $self->{'_custom'} = 1;     # make sure this never goes away
    return $self;
d41 7
a47 6
BEGIN {
    *objectify = \&Math::BigInt::objectify;
    # to allow Math::BigFloat::Subclass::bgcd( ... ) style calls
    *bgcd = \&Math::BigFloat::bgcd;
    *blcm = \&Math::BigFloat::blcm;
}
@

