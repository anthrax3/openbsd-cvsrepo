head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.6
	OPENBSD_6_2_BASE:1.3
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.59;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

use strict;
use warnings;

our $CLASS;

# alias subroutine testing, included by sub_ali.t, mbi_ali.t, and mbf_ali.t

our $x = $CLASS->new(123);

is($x->is_pos(), 1, "$CLASS -> new(123) -> is_pos()");
is($x->is_neg(), 0, "$CLASS -> new(123) -> is_neg()");
is($x->as_int(), 123, "$CLASS -> new(123) -> as_int()");
is(ref($x->as_int()), 'Math::BigInt', "ref($CLASS -> new(123) -> as_int())");
$x->bneg();
is($x->is_pos(), 0, "$CLASS -> new(123) -> bneg() -> is_pos()");
is($x->is_neg(), 1, "$CLASS -> new(123) -> bneg() -> is_neg()");
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
d3 2
a4 1
# alias subroutine testing, included by sub_ali.t and mbi_ali.t
d6 1
a6 1
my $x = $CL->new(123);
d8 8
a15 4
is ($x->is_pos(), 1, '123 is positive');
is ($x->is_neg(), 0, '123 is not negative');
is ($x->as_int(), 123, '123 is 123 as int');
is (ref($x->as_int()), 'Math::BigInt', "as_int(123) is of class Math::BigInt");
d17 2
a18 2
is ($x->is_pos(), 0, '-123 is not positive');
is ($x->is_neg(), 1, '-123 is negative');
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@a0 1
#!perl
d2 1
a2 2
use strict;
use warnings;
d4 1
a4 1
our $CLASS;
d6 4
a9 8
# alias subroutine testing, included by sub_ali.t, mbi_ali.t, and mbf_ali.t

our $x = $CLASS->new(123);

is($x->is_pos(), 1, "$CLASS -> new(123) -> is_pos()");
is($x->is_neg(), 0, "$CLASS -> new(123) -> is_neg()");
is($x->as_int(), 123, "$CLASS -> new(123) -> as_int()");
is(ref($x->as_int()), 'Math::BigInt', "ref($CLASS -> new(123) -> as_int())");
d11 2
a12 2
is($x->is_pos(), 0, "$CLASS -> new(123) -> bneg() -> is_pos()");
is($x->is_neg(), 1, "$CLASS -> new(123) -> bneg() -> is_neg()");
@

