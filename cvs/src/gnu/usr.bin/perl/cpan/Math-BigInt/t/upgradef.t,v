head	1.3;
access;
symbols
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl

use strict;
use warnings;

use Test::More tests => 6;

###############################################################################
package Math::BigFloat::Test;

use Math::BigFloat;
require Exporter;
our @@ISA = qw/Exporter Math::BigFloat/;

use overload;

sub isa {
    my ($self, $class) = @@_;
    return if $class =~ /^Math::Big(Int|Float)/;    # we aren't one of these
    UNIVERSAL::isa($self, $class);
}

sub bmul {
    return __PACKAGE__->new(123);
}

sub badd {
    return __PACKAGE__->new(321);
}

###############################################################################
package main;

# use Math::BigInt upgrade => 'Math::BigFloat';
use Math::BigFloat upgrade => 'Math::BigFloat::Test';

my ($x, $y, $z);

our ($CLASS, $EXPECTED_CLASS, $CALC);
$CLASS          = "Math::BigFloat";
$EXPECTED_CLASS = "Math::BigFloat::Test";
$CALC           = "Math::BigInt::Calc";         # backend

is(Math::BigFloat->upgrade(), $EXPECTED_CLASS,
   qq|Math::BigFloat->upgrade()|);
is(Math::BigFloat->downgrade() || '', '',
   qq/Math::BigFloat->downgrade() || ''/);

$x = $CLASS->new(123);
$y = $EXPECTED_CLASS->new(123);
$z = $x->bmul($y);
is(ref($z), $EXPECTED_CLASS,
   qq|\$x = $CLASS->new(123); \$y = $EXPECTED_CLASS->new(123);|
   . q| $z = $x->bmul($y); ref($z)|);
is($z, 123,
   qq|\$x = $CLASS->new(123); \$y = $EXPECTED_CLASS->new(123);|
   . q| $z = $x->bmul($y); $z|);

$x = $CLASS->new(123);
$y = $EXPECTED_CLASS->new(123);
$z = $x->badd($y);
is(ref($z), $EXPECTED_CLASS,
   qq|$x = $CLASS->new(123); $y = $EXPECTED_CLASS->new(123);|
   . q| $z = $x->badd($y); ref($z)|);
is($z, 321,
   qq|$x = $CLASS->new(123); $y = $EXPECTED_CLASS->new(123);|
   . q| $z = $x->badd($y); $z|);

# not yet:
#require 't/upgrade.inc';	# all tests here for sharing
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
a2 1
use Test;
d4 1
d6 1
a6 26
BEGIN
  {
  $| = 1;
  # to locate the testing files
  my $location = $0; $location =~ s/upgradef.t//i;
  if ($ENV{PERL_CORE})
    {
    # testing with the core distribution
    @@INC = qw(../t/lib);
    }
  unshift @@INC, qw(../lib);     # to locate the modules
  if (-d 't')
    {
    chdir 't';
    require File::Spec;
    unshift @@INC, File::Spec->catdir(File::Spec->updir, $location);
    }
  else
    {
    unshift @@INC, $location;
    }
  print "# INC = @@INC\n";

  plan tests => 0
   + 6;			# our own tests
  }
d13 1
a13 2
use vars qw/@@ISA/;
@@ISA = qw/Exporter Math::BigFloat/;
d17 13
a29 16
sub isa
  {
  my ($self,$class) = @@_;
  return if $class =~ /^Math::Big(Int|Float)/;	# we aren't one of these
  UNIVERSAL::isa($self,$class);
  }

sub bmul
  {
  return __PACKAGE__->new(123);
  }

sub badd
  {
  return __PACKAGE__->new(321);
  }
d37 1
a37 15
use vars qw ($scale $class $try $x $y $z $f @@args $ans $ans1 $ans1_str $setup
             $ECL $CL);
$class = "Math::BigFloat";
$CL = "Math::BigInt::Calc";
$ECL = "Math::BigFloat::Test";

ok (Math::BigFloat->upgrade(),$ECL);
ok (Math::BigFloat->downgrade()||'','');

$x = $class->new(123); $y = $ECL->new(123); $z = $x->bmul($y);
ok (ref($z),$ECL); ok ($z,123);

$x = $class->new(123); $y = $ECL->new(123); $z = $x->badd($y);
ok (ref($z),$ECL); ok ($z,321);

d39 29
d70 1
a70 1
# require 'upgrade.inc';	# all tests here for sharing
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
