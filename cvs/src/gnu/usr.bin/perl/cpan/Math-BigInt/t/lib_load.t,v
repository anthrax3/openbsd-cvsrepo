head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.6
	OPENBSD_6_2_BASE:1.3
	PERL_5_24_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.32.01;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2013.03.25.20.40.51;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.49.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2017.08.14.13.45.59;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl

use strict;
use warnings;

use Test::More tests => 4;

use lib 't';

# first load Math::BigInt with Math::BigInt::Calc
use Math::BigInt lib => 'Calc';

# Math::BigFloat will remember that we loaded Math::BigInt::Calc
require Math::BigFloat;
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::Calc',
   'Math::BigFloat got Math::BigInt::Calc');

# now load Math::BigInt again with a different lib
Math::BigInt->import(lib => 'BareCalc');

# and finally test that Math::BigFloat knows about Math::BigInt::BareCalc

is(Math::BigFloat::config()->{lib}, 'Math::BigInt::BareCalc',
   'Math::BigFloat was notified');

# See that Math::BigFloat supports "only"
eval "Math::BigFloat->import('only' => 'Calc')";
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::Calc', '"only" worked');

# See that Math::BigFloat supports "try"
eval "Math::BigFloat->import('try' => 'BareCalc')";
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::BareCalc', '"try" worked');
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
a2 1
use Test::More;
d4 1
d6 1
a6 22
BEGIN
  {
  $| = 1;
  # to locate the testing files
  my $location = $0; $location =~ s/sub_mbf.t//i;
  if ($ENV{PERL_CORE})
    {
    # testing with the core distribution
    @@INC = qw(../t/lib);
    }
  unshift @@INC, '../lib';
  if (-d 't')
    {
    chdir 't';
    require File::Spec;
    unshift @@INC, File::Spec->catdir(File::Spec->updir, $location);
    }
  else
    {
    unshift @@INC, $location;
    }
  print "# INC = @@INC\n";
d8 1
a8 2
  plan tests => 4;
  }
d10 1
a10 1
# first load BigInt with Calc
d13 1
a13 1
# BigFloat will remember that we loaded Calc
d15 2
a16 1
is (Math::BigFloat::config()->{lib}, 'Math::BigInt::Calc', 'BigFloat got Calc');
d18 2
a19 2
# now load BigInt again with a different lib
Math::BigInt->import( lib => 'BareCalc' );
d21 1
a21 1
# and finally test that BigFloat knows about BareCalc
d23 2
a24 1
is (Math::BigFloat::config()->{lib}, 'Math::BigInt::BareCalc', 'BigFloat was notified');
d28 1
a28 1
is (Math::BigFloat::config()->{lib}, 'Math::BigInt::Calc', '"only" worked');
d32 1
a32 2
is (Math::BigFloat::config()->{lib}, 'Math::BigInt::BareCalc', '"try" worked');

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.24.2
@
text
@d1 1
a1 1
#!perl
d3 1
a4 1
use warnings;
d6 22
a27 1
use Test::More tests => 4;
d29 2
a30 1
use lib 't';
d32 1
a32 1
# first load Math::BigInt with Math::BigInt::Calc
d35 1
a35 1
# Math::BigFloat will remember that we loaded Math::BigInt::Calc
d37 1
a37 2
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::Calc',
   'Math::BigFloat got Math::BigInt::Calc');
d39 2
a40 2
# now load Math::BigInt again with a different lib
Math::BigInt->import(lib => 'BareCalc');
d42 1
a42 1
# and finally test that Math::BigFloat knows about Math::BigInt::BareCalc
d44 1
a44 2
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::BareCalc',
   'Math::BigFloat was notified');
d48 1
a48 1
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::Calc', '"only" worked');
d52 2
a53 1
is(Math::BigFloat::config()->{lib}, 'Math::BigInt::BareCalc', '"try" worked');
@

