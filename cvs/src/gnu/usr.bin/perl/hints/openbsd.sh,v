head	1.63;
access;
symbols
	OPENBSD_6_0:1.60.0.4
	OPENBSD_6_0_BASE:1.60
	OPENBSD_5_9:1.59.0.2
	OPENBSD_5_9_BASE:1.59
	OPENBSD_5_8:1.59.0.4
	OPENBSD_5_8_BASE:1.59
	PERL_5_20_2:1.1.1.10
	OPENBSD_5_7:1.57.0.2
	OPENBSD_5_7_BASE:1.57
	PERL_5_20_1:1.1.1.10
	OPENBSD_5_6:1.52.0.4
	OPENBSD_5_6_BASE:1.52
	PERL_5_18_2:1.1.1.9
	PERL:1.1.1
	OPENBSD_5_5:1.48.0.6
	OPENBSD_5_5_BASE:1.48
	OPENBSD_5_4:1.48.0.2
	OPENBSD_5_4_BASE:1.48
	PERL_5_16_3:1.1.1.9
	OPENBSD_5_3:1.46.0.2
	OPENBSD_5_3_BASE:1.46
	OPENBSD_5_2:1.45.0.12
	OPENBSD_5_2_BASE:1.45
	OPENBSD_5_1_BASE:1.45
	OPENBSD_5_1:1.45.0.10
	OPENBSD_5_0:1.45.0.8
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.45.0.6
	OPENBSD_4_9_BASE:1.45
	PERL_5_12_2:1.1.1.8
	OPENBSD_4_8:1.45.0.4
	OPENBSD_4_8_BASE:1.45
	OPENBSD_4_7:1.45.0.2
	OPENBSD_4_7_BASE:1.45
	PERL_5_10_1:1.1.1.8
	OPENBSD_4_6:1.43.0.6
	OPENBSD_4_6_BASE:1.43
	OPENBSD_4_5:1.43.0.2
	OPENBSD_4_5_BASE:1.43
	PERL_5_10_0:1.1.1.8
	OPENBSD_4_4:1.42.0.2
	OPENBSD_4_4_BASE:1.42
	OPENBSD_4_3:1.41.0.6
	OPENBSD_4_3_BASE:1.41
	OPENBSD_4_2:1.41.0.4
	OPENBSD_4_2_BASE:1.41
	OPENBSD_4_1:1.41.0.2
	OPENBSD_4_1_BASE:1.41
	OPENBSD_4_0:1.40.0.8
	OPENBSD_4_0_BASE:1.40
	PERL_5_8_8:1.1.1.8
	OPENBSD_3_9:1.40.0.6
	OPENBSD_3_9_BASE:1.40
	OPENBSD_3_8:1.40.0.4
	OPENBSD_3_8_BASE:1.40
	OPENBSD_3_7:1.40.0.2
	OPENBSD_3_7_BASE:1.40
	PERL_5_8_6:1.1.1.7
	OPENBSD_3_6:1.39.0.2
	OPENBSD_3_6_BASE:1.39
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.35.0.2
	OPENBSD_3_5_BASE:1.35
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.32.0.2
	OPENBSD_3_4_BASE:1.32
	OPENBSD_3_3:1.29.0.2
	OPENBSD_3_3_BASE:1.29
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.24.0.2
	OPENBSD_3_2_BASE:1.24
	OPENBSD_3_1:1.23.0.2
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.22.0.2
	OPENBSD_3_0_BASE:1.22
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.19.0.2
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_8:1.17.0.2
	OPENBSD_2_8_BASE:1.17
	OPENBSD_2_7:1.15.0.2
	OPENBSD_2_7_BASE:1.15
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.63
date	2017.02.05.00.33.41;	author afresh1;	state Exp;
branches;
next	1.62;
commitid	7JLVNm1wwPgqSqTa;

1.62
date	2017.02.05.00.32.14;	author afresh1;	state Exp;
branches;
next	1.61;
commitid	cxJ08BvJA9Pt2PTM;

1.61
date	2016.09.01.11.49.58;	author afresh1;	state Exp;
branches;
next	1.60;
commitid	kZ31b97bDuoiXimL;

1.60
date	2016.06.28.04.28.18;	author afresh1;	state Exp;
branches;
next	1.59;
commitid	7JyPtzuyG04v9emz;

1.59
date	2015.04.25.19.26.22;	author afresh1;	state Exp;
branches;
next	1.58;
commitid	3qGYFVvfrExB70FB;

1.58
date	2015.04.25.19.14.46;	author afresh1;	state Exp;
branches;
next	1.57;
commitid	XRK22kO4se3v2i2I;

1.57
date	2014.12.24.03.53.04;	author afresh1;	state Exp;
branches;
next	1.56;
commitid	lYW6uwvn5TzSF3cE;

1.56
date	2014.11.18.19.49.18;	author afresh1;	state Exp;
branches;
next	1.55;
commitid	b8UF4iAQSS1ScaiX;

1.55
date	2014.11.18.18.55.50;	author afresh1;	state Exp;
branches;
next	1.54;
commitid	sP4n3Pgq1H37I1nj;

1.54
date	2014.11.17.21.01.00;	author afresh1;	state Exp;
branches;
next	1.53;
commitid	LnErp1MFKSuew5Fr;

1.53
date	2014.11.17.20.57.06;	author afresh1;	state Exp;
branches;
next	1.52;
commitid	QP75iYx42Uo7mMxO;

1.52
date	2014.06.01.16.44.05;	author afresh1;	state Exp;
branches;
next	1.51;
commitid	gQ44dCfXCsOCEqhY;

1.51
date	2014.05.31.23.16.21;	author afresh1;	state Exp;
branches;
next	1.50;
commitid	vtdbFc7qOZYeOR68;

1.50
date	2014.05.01.15.00.19;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2014.03.24.15.05.27;	author afresh1;	state Exp;
branches;
next	1.48;

1.48
date	2013.04.19.23.15.29;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2013.03.25.20.40.55;	author sthen;	state Exp;
branches;
next	1.46;

1.46
date	2013.01.31.23.35.02;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2009.10.13.01.25.48;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	2009.10.12.18.24.37;	author millert;	state Exp;
branches;
next	1.43;

1.43
date	2008.09.29.17.36.07;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2008.03.28.17.10.57;	author drahn;	state Exp;
branches;
next	1.41;

1.41
date	2006.11.09.17.31.09;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2005.01.15.21.30.30;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	2004.08.09.18.18.41;	author mickey;	state Exp;
branches;
next	1.38;

1.38
date	2004.08.09.18.09.26;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	2004.06.07.19.49.10;	author mickey;	state Exp;
branches;
next	1.36;

1.36
date	2004.04.05.19.17.22;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2004.02.11.23.15.50;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2004.01.30.03.03.09;	author mickey;	state Exp;
branches;
next	1.33;

1.33
date	2003.12.03.03.02.35;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2003.08.09.23.34.32;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2003.08.01.03.33.19;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2003.07.30.22.59.31;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2003.03.17.17.44.06;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2003.01.20.00.07.31;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2002.11.04.21.44.33;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2002.10.30.20.30.09;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2002.10.27.22.25.25;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2002.05.01.02.08.47;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2001.11.24.09.04.40;	author pvalchev;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.28.19.26.54;	author jason;	state Exp;
branches;
next	1.21;

1.21
date	2001.09.10.17.58.35;	author jason;	state Exp;
branches;
next	1.20;

1.20
date	2001.09.04.16.32.17;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2000.12.28.21.06.49;	author smurph;	state Exp;
branches;
next	1.18;

1.18
date	2000.12.05.16.41.09;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.18.19.31.01;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.11.23.34.39;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2000.04.06.17.05.50;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2000.02.02.20.33.02;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.01.27.06.59.13;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.01.18.03.07.27;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	99.11.09.20.27.54;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.08.31.11.50.46;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	99.08.20.21.47.37;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.08.20.09.54.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.08.20.09.51.10;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.08.19.22.39.47;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.05.11.17.19.43;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.05.09.16.34.10;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.05.02.23.36.12;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.56.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.04.29.22.39.34;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.39.34;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.09.29;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.23.12;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.43.56;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.08.09.17.47.56;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2005.01.15.21.17.04;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2006.03.28.18.48.29;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2013.03.25.20.08.48;	author sthen;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2014.11.17.20.53.07;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.63
log
@Apply local patches - perl-5.24.1
@
text
@# hints/openbsd.sh
#
# hints file for OpenBSD; Todd Miller <millert@@openbsd.org>
# Edited to allow Configure command-line overrides by
#  Andy Dougherty <doughera@@lafayette.edu>
#
# To build with distribution paths, use:
#	./Configure -des -Dopenbsd_distribution=defined
#

# OpenBSD has a better malloc than perl...
test "$usemymalloc" || usemymalloc='n'

# malloc wrap works
case "$usemallocwrap" in
'') usemallocwrap='define' ;;
esac

# Currently, vfork(2) is not a real win over fork(2).
usevfork="$undef"

# In OpenBSD < 3.3, the setre?[ug]id() are emulated using the
# _POSIX_SAVED_IDS functionality which does not have the same
# semantics as 4.3BSD.  Starting with OpenBSD 3.3, the original
# semantics have been restored.
case "$osvers" in
[0-2].*|3.[0-2])
	d_setregid=$undef
	d_setreuid=$undef
	d_setrgid=$undef
	d_setruid=$undef
esac

#
# Not all platforms support dynamic loading...
# For the case of "$openbsd_distribution", the hints file
# needs to know whether we are using dynamic loading so that
# it can set the libperl name appropriately.
# Allow command line overrides.
#
ARCH=`arch | sed 's/^OpenBSD.//'`
case "${ARCH}-${osvers}" in
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-[2-4].*|m88k-5.[0-2]|hppa-3.[0-5]|vax-*)
	test -z "$usedl" && usedl=$undef
	;;
*)
	test -z "$usedl" && usedl=$define
	# We use -fPIC here because -fpic is *NOT* enough for some of the
	# extensions like Tk on some OpenBSD platforms (ie: sparc)
	cccdlflags="-DPIC -fPIC $cccdlflags"
	case "$osvers" in
	[01].*|2.[0-7]|2.[0-7].*)
		lddlflags="-Bshareable $lddlflags"
		;;
	2.[8-9]|3.0)
		ld=${cc:-cc}
		lddlflags="-shared -fPIC $lddlflags"
		;;
	*) # from 3.1 onwards
		ld=${cc:-cc}
		lddlflags="-shared -fPIC $lddlflags"
		libswanted=`echo $libswanted | sed 's/ dl / /'`
		;;
	esac

	# We need to force ld to export symbols on ELF platforms.
	# Without this, dlopen() is crippled.
	ELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`
	test -n "$ELF" && ldflags="-Wl,-E $ldflags"
	;;
esac

#
# Tweaks for various versions of OpenBSD
#
case "$osvers" in
2.5)
	# OpenBSD 2.5 has broken odbm support
	i_dbm=$undef
	;;
esac

# OpenBSD doesn't need libcrypt but many folks keep a stub lib
# around for old NetBSD binaries.
libswanted=`echo $libswanted | sed 's/ crypt / /'`

libswanted=`echo $libswanted | sed 's/ util / /'`

# Configure can't figure this out non-interactively
d_suidsafe=$define

# cc is gcc so we can do better than -O
# Allow a command-line override, such as -Doptimize=-g
case "${ARCH}-${osvers}" in
hppa-3.3|m88k-2.*|m88k-3.[0-3])
   test "$optimize" || optimize='-O0'
   ;;
m88k-3.4)
   test "$optimize" || optimize='-O1'
   ;;
*)
   test "$optimize" || optimize='-O2'
   ;;
esac

# Special per-arch specific ccflags
case "${ARCH}-${osvers}" in
    vax-*)
    ccflags="-DUSE_PERL_ATOF=0 $ccflags"
    ;;
esac

# This script UU/usethreads.cbu will get 'called-back' by Configure 
# after it has prompted the user for whether to use threads.
cat > UU/usethreads.cbu <<'EOCBU'
case "$usethreads" in
$define|true|[yY]*)
	# any openbsd version dependencies with pthreads?
	ccflags="-pthread $ccflags"
	ldflags="-pthread $ldflags"
	case "$osvers" in
	[0-2].*|3.[0-2])
		# Change from -lc to -lc_r
		set `echo "X $libswanted " | sed 's/ c / c_r /'`
		shift
		libswanted="$*"
	;;
	esac
	case "$osvers" in
	[012].*|3.[0-6])
        	# Broken up to OpenBSD 3.6, fixed in OpenBSD 3.7
		d_getservbyname_r=$undef ;;
	esac
	;;
*)
	libswanted=`echo $libswanted | sed 's/ pthread / /'`
esac
EOCBU

# When building in the OpenBSD tree we use different paths
# This is only part of the story, the rest comes from config.over
case "$openbsd_distribution" in
''|$undef|false) ;;
*)
	# We put things in /usr, not /usr/local
	prefix='/usr'
	prefixexp='/usr'
	sysman='/usr/share/man/man1'
	libpth='/usr/lib'
	glibpth='/usr/lib'
	# Local things, however, do go in /usr/local
	siteprefix='/usr/local'
	siteprefixexp='/usr/local'
	# Ports installs non-std libs in /usr/local/lib so look there too
	locincpth=''
	loclibpth=''
	# Link perl with shared libperl
	if [ "$usedl" = "$define" -a -r $src/shlib_version ]; then
		useshrplib=true
		libperl=`. $src/shlib_version; echo libperl.so.${major}.${minor}`
	fi
	;;
esac

# end
@


1.62
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d87 2
d106 7
d134 3
d155 2
a156 2
	locincpth='/usr/local/include'
	loclibpth='/usr/local/lib'
d158 1
a158 1
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
d160 1
a160 1
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
@


1.61
log
@Really stop linking perl to pthread

ok guenther@@
@
text
@a86 2
libswanted=`echo $libswanted | sed 's/ util / /'`

a103 7
# Special per-arch specific ccflags
case "${ARCH}-${osvers}" in
    vax-*)
    ccflags="-DUSE_PERL_ATOF=0 $ccflags"
    ;;
esac

a124 3
	;;
*)
	libswanted=`echo $libswanted | sed 's/ pthread / /'`
d143 2
a144 2
	locincpth=''
	loclibpth=''
d146 1
a146 1
	if [ "$usedl" = "$define" -a -r $src/shlib_version ]; then
d148 1
a148 1
		libperl=`. $src/shlib_version; echo libperl.so.${major}.${minor}`
@


1.60
log
@Stop linking perl to libutil, never necessary

from guenther@@ ok sthen@@
@
text
@d134 3
@


1.59
log
@Apply local patches, remove excess files - perl-5.20.2
@
text
@d87 2
@


1.58
log
@Fix merge issues, remove excess files - match perl-5.20.2 dist
@
text
@d11 2
a12 6
# In OpenBSD > 3.7, use perl's malloc [perl #75742]
case "$osvers" in
3.[89]*|[4-9]*)
    test "$usemymalloc" || usemymalloc=y
    ;;
esac
d104 7
d150 2
a151 2
	locincpth='/usr/local/include'
	loclibpth='/usr/local/lib'
d153 1
a153 1
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
d155 1
a155 1
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
@


1.57
log
@Avoid /usr/local while building perl, but allow it for ports

commit it deraadt@@
@
text
@d11 6
a16 2
# OpenBSD has a better malloc than perl...
test "$usemymalloc" || usemymalloc='n'
a107 7
# Special per-arch specific ccflags
case "${ARCH}-${osvers}" in
    vax-*)
    ccflags="-DUSE_PERL_ATOF=0 $ccflags"
    ;;
esac

d147 2
a148 2
	locincpth=''
	loclibpth=''
d150 1
a150 1
	if [ "$usedl" = "$define" -a -r $src/shlib_version ]; then
d152 1
a152 1
		libperl=`. $src/shlib_version; echo libperl.so.${major}.${minor}`
a153 3

	# Don't support DBM not in base
	i_gdbm='undef'
@


1.56
log
@We have dbm.h, so unbreak the tree
@
text
@d150 2
a151 2
	locincpth='/usr/local/include'
	loclibpth='/usr/local/lib'
@


1.55
log
@Don't build support in perl for *dbm not in the base system

OK millert@@
@
text
@a159 1
	i_dbm='undef'
@


1.54
log
@Apply local patches to perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d157 4
@


1.53
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d11 2
a12 6
# In OpenBSD > 3.7, use perl's malloc [perl #75742]
case "$osvers" in
3.[89]*|[4-9]*)
    test "$usemymalloc" || usemymalloc=y
    ;;
esac
d104 7
d153 1
a153 1
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
d155 1
a155 1
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
@


1.52
log
@Correct version for disabling getserbyname_r to reduce diff with upstream

OK sthen@@ miod@@
@
text
@d11 6
a16 2
# OpenBSD has a better malloc than perl...
test "$usemymalloc" || usemymalloc='n'
a131 59
# This script UU/use64bitint.cbu will get 'called-back' by Configure 
# after it has prompted the user for whether to use 64-bitness.
cat > UU/use64bitint.cbu <<'EOCBU'
case "$use64bitint" in
$define|true|[yY]*)
	echo " "
	echo "Checking if your C library has broken 64-bit functions..." >&4
	$cat >check.c <<EOCP
#include <stdio.h>
typedef $uquadtype myULL;
int main (void)
{
    struct {
	double d;
	myULL  u;
    } *p, test[] = {
	{4294967303.15, 4294967303ULL},
	{4294967294.2,  4294967294ULL},
	{4294967295.7,  4294967295ULL},
	{0.0, 0ULL}
    };
    for (p = test; p->u; p++) {
	myULL x = (myULL)p->d;
	if (x != p->u) {
	    printf("buggy\n");
	    return 0;
	}
    }
    printf("ok\n");
    return 0;
}
EOCP
	set check
	if eval $compile_ok; then
	    libcquad=`./check`
	    echo "Your C library's 64-bit functions are $libcquad."
	else
	    echo "(I can't seem to compile the test program.)"
	    echo "Assuming that your C library's 64-bit functions are ok."
	    libcquad="ok"
	fi
	$rm -f check.c check

	case "$libcquad" in
	    buggy*)
		cat >&4 <<EOM

*** You have a C library with broken 64-bit functions.
*** 64-bit support does not work reliably in this configuration.
*** Please rerun Configure without -Duse64bitint and/or -Dusemorebits.
*** Cannot continue, aborting.

EOM
		exit 1
		;;
	esac
esac
EOCBU

d150 1
a150 1
	if [ "$usedl" = "$define" -a -r $src/shlib_version ]; then
d152 1
a152 1
		libperl=`. $src/shlib_version; echo libperl.so.${major}.${minor}`
@


1.51
log
@Remove now unnecessary local patch to disable usemallocwrap on m68k

Sure miod@@
@
text
@d121 1
a121 1
	[012].*|3.[0-5])
@


1.50
log
@Revert 1.49 (bad merge with free dejavu)
@
text
@d14 5
a81 8

# malloc wrap causes problems on m68k
if [ X"$usemallocwrap" = X"" ]; then
	case "${ARCH}" in
	m68k) usemallocwrap="$undef" ;;
	*)    usemallocwrap="define" ;;
	esac
fi
@


1.49
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-5]|vax-*)
@


1.48
log
@Revert 1.47 (bad merge)
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-[2-4].*|m88k-5.[0-2]|hppa-3.[0-5]|vax-*)
@


1.47
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-5]|vax-*)
@


1.46
log
@Enable shared libraries on m88k platforms.
And there was much rejoicing.
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-[2-4].*|m88k-5.[0-2]|hppa-3.[0-5]|vax-*)
@


1.45
log
@Merge in some local changes that got lost.
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-5]|vax-*)
@


1.44
log
@Merge in perl 5.10.1
@
text
@a13 5
# malloc wrap works
case "$usemallocwrap" in
'') usemallocwrap='define' ;;
esac

d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-*|vax-*)
d78 8
d95 3
a97 3
case ${ARCH} in
m88k)
   optimize='-O0'
d99 2
a100 2
hppa)
   optimize='-O0'
d124 2
a125 2
	[012].*|3.[0-6])
        	# Broken at least up to OpenBSD 3.6, we'll see about 3.7
d208 1
a208 1
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
d210 1
a210 1
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
@


1.43
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d14 5
d43 1
a43 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-5]|vax-*)
a82 8
# malloc wrap causes problems on m68k
if [ X"$usemallocwrap" = X"" ]; then
	case "${ARCH}" in
	m68k) usemallocwrap="$undef" ;;
	*)    usemallocwrap="define" ;;
	esac
fi

d92 3
a94 3
case "${ARCH}-${osvers}" in
hppa-3.3|m88k-2.*|m88k-3.[0-3])
   test "$optimize" || optimize='-O0'
d96 2
a97 2
m88k-3.4)
   test "$optimize" || optimize='-O1'
d121 2
a122 2
	[012].*|3.[0-5])
        	# Broken up to OpenBSD 3.6, fixed in OpenBSD 3.7
d205 1
a205 1
	if [ "$usedl" = "$define" -a -r $src/shlib_version ]; then
d207 1
a207 1
		libperl=`. $src/shlib_version; echo libperl.so.${major}.${minor}`
@


1.42
log
@Enable shared libraries on landisk.
The sh architecture required some different linkage than most platforms,
This fixes those other requirements.
@
text
@d208 1
a208 1
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
d210 1
a210 1
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
@


1.41
log
@no shlibs on sh yet
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-5]|vax-*|sh-*)
@


1.40
log
@sync in-tree perl with 5.8.6
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-5]|vax-*)
@


1.39
log
@proper version chekc for shlibs
@
text
@d125 1
a125 1
        	# Broken at least up to OpenBSD 3.5, we'll see about 3.6
@


1.38
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-4]|vax-*)
@


1.37
log
@enable dynamic perl; millert ok
MAKE SURE TO REBUILD LD.SO FIRST
@
text
@d78 8
d124 2
a125 2
	[012].*|3.[0-3])
        	# Broken at least up to OpenBSD 3.2, we'll see about 3.3.
d127 59
@


1.36
log
@Switch mvme88k to -O2 optimization by default.
(the perl chunk discussed with millert@@ and pushed upstream)
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-*|vax-*)
@


1.35
log
@enable shared libs on amd64; from drahn
@
text
@d88 1
a88 1
hppa-3.3|m88k-2.*)
d91 1
a91 1
m88k-3.*)
@


1.34
log
@no shlibs yet
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-*|vax-*|x86_64-*)
@


1.33
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-*|vax-*)
@


1.32
log
@Perl hints to use -O1 on mvme88k now; ok millert@@
@
text
@d5 1
a5 1
#  Andy Dougherty <doughera@@lafcol.lafayette.edu>
a16 3
# getservbyname_r() on OpenBSD is broken.
d_getservbyname_r=$undef

d107 13
@


1.31
log
@Back out threads setting inadvertently added in last commit.
@
text
@d91 1
a91 1
hppa-3.3|m88k-*)
d93 3
@


1.30
log
@hppa no longer needs -O0 to build toke.c; from miod@@ and OK mickey@@
@
text
@a131 1
	usethreads=$define
@


1.29
log
@OpenBSD 3.3 has setreuid/setregid.
@
text
@d90 3
a92 6
case ${ARCH} in
m88k)
   optimize='-O0'
   ;;
hppa)
   optimize='-O0'
d132 1
@


1.28
log
@No more libc_r and don't link explicitly with -lpthread Not having
-lpthread may confuse perl's Configure since it wants to nm libs
to see what is in them butu I haven't noticed any problems with
this (yet).
@
text
@d14 17
a30 11
# Currently, vfork(2) is not a real win over fork(2) but this will
# change starting with OpenBSD 2.7.
usevfork='true'

# setre?[ug]id() have been replaced by the _POSIX_SAVED_IDS versions
# in 4.4BSD.  Configure will find these but they are just emulated
# and do not have the same semantics as in 4.3BSD.
d_setregid=$undef
d_setreuid=$undef
d_setrgid=$undef
d_setruid=$undef
a109 2
	# This is strange.
	usevfork="$undef"
@


1.27
log
@Put back the bits disabling setre[ug]id().  Perl will use setres[ug]id
instead so we don't need to use the (emulated) setre[ug]id() in libc.
@
text
@a103 3
	# Add -lpthread.  Also change from -lc to -lc_r
	libswanted="$libswanted pthread"
	libswanted=`echo " $libswanted "| sed -e 's/ c / c_r /' -e 's/^ //' -e 's/ $//'`
@


1.26
log
@No longer need to override Configure results for setr[ug]id() and
setre[ug]id().
@
text
@d18 7
a24 12
# In OpenBSD < 3.3, the setre?[ug]id() are emulated using the
# _POSIX_SAVED_IDS functionality which does not have the same
# semantics as 4.3BSD.  Starting with OpenBSD 3.3, these functions
# are emulated via setres[ug]id().
#case "$osvers" in
#[0-2].*|3.[0-2])
#	d_setregid=$undef
#	d_setreuid=$undef
#	d_setrgid=$undef
#	d_setruid=$undef
#	;;
#esac
@


1.25
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d18 12
a29 7
# setre?[ug]id() have been replaced by the _POSIX_SAVED_IDS versions
# in 4.4BSD.  Configure will find these but they are just emulated
# and do not have the same semantics as in 4.3BSD.
d_setregid=$undef
d_setreuid=$undef
d_setrgid=$undef
d_setruid=$undef
@


1.24
log
@Sync with OpenBSD hints file from latest perl snapshot.
@
text
@d35 1
a35 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|vax-*)
d86 3
@


1.23
log
@for openbsd 3.1+, don't even bother trying to pick libdl, since it is dead.
ok millert
geez, i wrote that without a single mistake, amusing
@
text
@d28 4
d33 4
a36 3
case "`arch -s`-${osvers}" in
alpha-2.[0-8]|mips-*|vax-*|powerpc-2.[0-7]|m88k-*)
	usedl=$undef
d39 2
a40 4
	usedl=$define
	d_dlopen=$define
	d_dlerror=$define
	# we use -fPIC here because -fpic is *NOT* enough for some of the
d47 1
a47 1
	2.[8-9]) # for 2.8
d57 5
d84 1
a84 1
case `arch -s` in
d101 1
d103 1
@


1.22
log
@sparc64 has shared libs
@
text
@d44 1
a44 1
	*) # from 2.8 onwards
d47 5
@


1.21
log
@no shared libs on sparc64 (yet)
@
text
@d30 1
a30 1
alpha-2.[0-8]|mips-*|vax-*|powerpc-2.[0-7]|m88k-*|sparc64-*)
@


1.20
log
@alpha has shared libs; pointed out by brad@@
@
text
@d30 1
a30 1
alpha-2.[0-8]|mips-*|vax-*|powerpc-2.[0-7]|m88k-*)
@


1.19
log
@Fixed m88k related defines.
@
text
@d30 1
a30 1
alpha-*|mips-*|vax-*|powerpc-2.[0-7]|m88k-*)
@


1.18
log
@powerpc has shared libs for OpenBSD >= 2.8
@
text
@d30 1
a30 1
alpha-*|mips-*|vax-*|powerpc-2.[0-7])
d71 8
a78 1
test "$optimize" || optimize='-O2'
@


1.17
log
@set siteprefix and siteprefixexp to /usr/local as they should be
@
text
@d29 2
a30 2
case `arch -s` in
alpha|mips|powerpc|vax)
@


1.16
log
@Use "cc -shared" not "ld -Bstatic" to build shared objects
@
text
@d98 3
@


1.15
log
@perl-5.6.0 + local changes
@
text
@d40 9
a48 1
	lddlflags="-Bshareable $lddlflags"
@


1.14
log
@Remove -Bforcearchive from lddlflags.  -Bforcearchive only makes sense
if you are building a shared lib from a .a full of pic objects.  This
is not how perl builds shared libs and it hoses tk.
Also sink with the hints file in perl5.005_63 (cosmetic)
@
text
@d71 2
d74 2
@


1.13
log
@Take /usr/local/lib out of glibpth and libpth.  Define locincpth and
loclibpth to be /usr/local/include and /usr/local/lib respectively.
This allows third party modules to grab stuff from /usr/local/{lib,include}
but perl itself doesn't search for things there during a build.
@
text
@d15 1
a15 1
# change in a future release.
d40 11
a50 1
	lddlflags="-Bforcearchive -Bshareable $lddlflags"
@


1.12
log
@Add /usr/local/lib to libpth/glibpth since ports installs things
in /usr/local/lib.
@
text
@d74 2
d77 2
a78 4
	glibpth='/usr/lib /usr/local/lib'
	libpth='/usr/lib /usr/local/lib'
	locincpth=''
	loclibpth=''
@


1.11
log
@Install a shared libperl and link against it.  Put libperl in /usr/lib
where it belongs instead of in /usr/libdata/perl5/alpha-openbsd/5.00503/CORE.
The shared lib version number will get cranked for each new perl release
so this is safe to do.
@
text
@d74 3
a76 3
	# Never look for things in /usr/local
	glibpth='/usr/lib'
	libpth='/usr/lib'
@


1.10
log
@Don't need -fno-strict-aliasing, our gcc has strict aliasing turned off by default.
@
text
@d80 4
a83 4
	#if [ "$usedl" = "$define" -a -r shlib_version ]; then
	#	useshrplib=true
	#	libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
	#fi
@


1.9
log
@add -fno-strict-aliasing
@
text
@a54 3
# However, -O2 implies -fstrict-aliasing and perl is not (currently) alias safe
ccflags="$ccflags -fno-strict-aliasing"

@


1.8
log
@comment out shared libperl support for the time being
@
text
@d55 3
@


1.7
log
@Link perl binary with shared libperl
@
text
@d80 4
a83 4
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
		useshrplib=true
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
	fi
@


1.6
log
@The mips test for dynamic loading was wrong
@
text
@d79 5
@


1.5
log
@Go back to colon-separated paths approach but truncate lib paths
on ':' in configpm when generating Config.pl.  This is a bit of a
hack but better than hacking a large number of modules.  Turns out
we still need /usr/libdata/perl5/site_perl for the .ph files.
@
text
@d27 1
a27 1
# Not all platforms support shared libs...
d29 1
a29 1
case `uname -m` in
d31 1
a31 1
	d_dlopen=$undef
d34 1
@


1.4
log
@o kill colon-separated paths in *libexp, they confuse too many modules
o kill MakeMaker hack (no longer needed)
o define APPLLIB_EXP to be /usr/local/libdata/perl5 to let users
  override standard modules if they want

The perl search path in @@INC is now:
/usr/local/libdata/perl5
/usr/libdata/perl5/i386-openbsd/5.00503
/usr/libdata/perl5
/usr/local/libdata/perl5/site_perl/i386-openbsd
/usr/local/libdata/perl5/site_perl
.
@
text
@a77 1
	ccflags='-DAPPLLIB_EXP="/usr/local/libdata/perl5"'
@


1.3
log
@Don't need to set ccflags or cppflags to be empty
@
text
@d78 1
@


1.2
log
@New configuration method, use a combination of hints and config.over.  Also add in OpenBSD-specific patches
@
text
@a77 2
	ccflags=''
	cppflags=''
@


1.1
log
@Initial revision
@
text
@d7 3
d21 4
a24 4
d_setregid='undef'
d_setreuid='undef'
d_setrgid='undef'
d_setruid='undef'
d48 1
a48 1
d_suidsafe='define'
d63 19
@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@a6 3
# To build with distribution paths, use:
#	./Configure -des -Dopenbsd_distribution=defined
#
d12 1
a12 1
# change starting with OpenBSD 2.7.
d18 4
a21 4
d_setregid=$undef
d_setreuid=$undef
d_setrgid=$undef
d_setruid=$undef
d24 1
a24 1
# Not all platforms support dynamic loading...
d26 3
a28 3
case `arch` in
OpenBSD.alpha|OpenBSD.mips|OpenBSD.powerpc|OpenBSD.vax)
	usedl=$undef
a30 1
	usedl=$define
d36 1
a36 11
	lddlflags="-Bshareable $lddlflags"
	;;
esac

#
# Tweaks for various versions of OpenBSD
#
case "$osvers" in
2.5)
	# OpenBSD 2.5 has broken odbm support
	i_dbm=$undef
d45 1
a45 1
d_suidsafe=$define
a56 2
	ccflags="-pthread $ccflags"
	ldflags="-pthread $ldflags"
a57 2
	# This is strange.
	usevfork="$undef"
a59 22

# When building in the OpenBSD tree we use different paths
# This is only part of the story, the rest comes from config.over
case "$openbsd_distribution" in
''|$undef|false) ;;
*)
	# We put things in /usr, not /usr/local
	prefix='/usr'
	prefixexp='/usr'
	sysman='/usr/share/man/man1'
	libpth='/usr/lib'
	glibpth='/usr/lib'
	# Ports installs non-std libs in /usr/local/lib so look there too
	locincpth='/usr/local/include'
	loclibpth='/usr/local/lib'
	# Link perl with shared libperl
	if [ "$usedl" = "$define" -a -r shlib_version ]; then
		useshrplib=true
		libperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`
	fi
	;;
esac
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d29 2
a30 3
ARCH=`arch|sed 's/^OpenBSD.//'`
case "${ARCH}-${osvers}" in
alpha-*|mips-*|vax-*|powerpc-2.[0-7]|m88k-*)
d40 1
a40 9
	case "$osvers" in
	[01].*|2.[0-7]|2.[0-7].*)
		lddlflags="-Bshareable $lddlflags"
		;;
	*) # from 2.8 onwards
		ld=${cc:-cc}
		lddlflags="-shared -fPIC $lddlflags"
		;;
	esac
d63 1
a63 8
case "$ARCH" in
m88k)
   optimize='-O0'
   ;;
*)
   test "$optimize" || optimize='-O2'
   ;;
esac
a89 3
	# Local things, however, do go in /usr/local
	siteprefix='/usr/local'
	siteprefixexp='/usr/local'
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@a27 4
# For the case of "$openbsd_distribution", the hints file
# needs to know whether we are using dynamic loading so that
# it can set the libperl name appropriately.
# Allow command line overrides.
d29 1
a29 1
ARCH=`arch | sed 's/^OpenBSD.//'`
d31 2
a32 2
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|vax-*)
	test -z "$usedl" && usedl=$undef
d35 4
a38 2
	test -z "$usedl" && usedl=$define
	# We use -fPIC here because -fpic is *NOT* enough for some of the
d45 1
a45 1
	2.[8-9]|3.0)
a48 5
	*) # from 3.1 onwards
		ld=${cc:-cc}
		lddlflags="-shared -fPIC $lddlflags"
		libswanted=`echo $libswanted | sed 's/ dl / /'`
		;;
a49 5

	# We need to force ld to export symbols on ELF platforms.
	# Without this, dlopen() is crippled.
	ELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`
	test -n "$ELF" && ldflags="-Wl,-E $ldflags"
d72 1
a72 1
case ${ARCH} in
a88 1
	# Add -lpthread.  Also change from -lc to -lc_r
a89 1
	libswanted=`echo " $libswanted "| sed -e 's/ c / c_r /' -e 's/^ //' -e 's/ $//'`
@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d5 1
a5 1
#  Andy Dougherty <doughera@@lafayette.edu>
d14 11
a24 14
# Currently, vfork(2) is not a real win over fork(2).
usevfork="$undef"

# In OpenBSD < 3.3, the setre?[ug]id() are emulated using the
# _POSIX_SAVED_IDS functionality which does not have the same
# semantics as 4.3BSD.  Starting with OpenBSD 3.3, the original
# semantics have been restored.
case "$osvers" in
[0-2].*|3.[0-2])
	d_setregid=$undef
	d_setreuid=$undef
	d_setrgid=$undef
	d_setruid=$undef
esac
d35 1
a35 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-*|vax-*)
a87 3
hppa)
   optimize='-O0'
   ;;
d101 5
a105 13
	case "$osvers" in
	[0-2].*|3.[0-2])
		# Change from -lc to -lc_r
		set `echo "X $libswanted " | sed 's/ c / c_r /'`
		shift
		libswanted="$*"
	;;
	esac
	case "$osvers" in
	[012].*|3.[0-3])
        	# Broken at least up to OpenBSD 3.2, we'll see about 3.3.
		d_getservbyname_r=$undef ;;
	esac
@


1.1.1.6
log
@Import of stock perl 5.8.5
@
text
@d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-3.[0-4]|vax-*)
a77 8
# malloc wrap causes problems on m68k
if [ X"$usemallocwrap" = X"" ]; then
	case "${ARCH}" in
	m68k) usemallocwrap="$undef" ;;
	*)    usemallocwrap="define" ;;
	esac
fi

d87 3
a89 3
case "${ARCH}-${osvers}" in
hppa-3.3|m88k-2.*|m88k-3.[0-3])
   test "$optimize" || optimize='-O0'
d91 2
a92 2
m88k-3.4)
   test "$optimize" || optimize='-O1'
d116 2
a117 2
	[012].*|3.[0-5])
        	# Broken at least up to OpenBSD 3.5, we'll see about 3.6
a118 59
	esac
esac
EOCBU

# This script UU/use64bitint.cbu will get 'called-back' by Configure 
# after it has prompted the user for whether to use 64-bitness.
cat > UU/use64bitint.cbu <<'EOCBU'
case "$use64bitint" in
$define|true|[yY]*)
	echo " "
	echo "Checking if your C library has broken 64-bit functions..." >&4
	$cat >check.c <<EOCP
#include <stdio.h>
typedef $uquadtype myULL;
int main (void)
{
    struct {
	double d;
	myULL  u;
    } *p, test[] = {
	{4294967303.15, 4294967303ULL},
	{4294967294.2,  4294967294ULL},
	{4294967295.7,  4294967295ULL},
	{0.0, 0ULL}
    };
    for (p = test; p->u; p++) {
	myULL x = (myULL)p->d;
	if (x != p->u) {
	    printf("buggy\n");
	    return 0;
	}
    }
    printf("ok\n");
    return 0;
}
EOCP
	set check
	if eval $compile_ok; then
	    libcquad=`./check`
	    echo "Your C library's 64-bit functions are $libcquad."
	else
	    echo "(I can't seem to compile the test program.)"
	    echo "Assuming that your C library's 64-bit functions are ok."
	    libcquad="ok"
	fi
	$rm -f check.c check

	case "$libcquad" in
	    buggy*)
		cat >&4 <<EOM

*** You have a C library with broken 64-bit functions.
*** 64-bit support does not work reliably in this configuration.
*** Please rerun Configure without -Duse64bitint and/or -Dusemorebits.
*** Cannot continue, aborting.

EOM
		exit 1
		;;
@


1.1.1.7
log
@perl 5.8.6 from CPAN
@
text
@a13 5
# malloc wrap works
case "$usemallocwrap" in
'') usemallocwrap='define' ;;
esac

d38 1
a38 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-*|hppa-*|vax-*)
d78 8
d95 3
a97 3
case ${ARCH} in
m88k)
   optimize='-O0'
d99 2
a100 2
hppa)
   optimize='-O0'
@


1.1.1.8
log
@perl 5.8.8 import
@
text
@d121 2
a122 2
	[012].*|3.[0-6])
        	# Broken at least up to OpenBSD 3.6, we'll see about 3.7
@


1.1.1.9
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d11 2
a12 6
# In OpenBSD > 3.7, use perl's malloc [perl #75742]
case "$osvers" in
3.[89]*|[4-9]*)
    test "$usemymalloc" || usemymalloc=y
    ;;
esac
@


1.1.1.10
log
@Import perl-5.20.1
@
text
@d47 1
a47 1
alpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-[2-4].*|m88k-5.[0-2]|hppa-3.[0-5]|vax-*)
d96 3
a98 3
case "${ARCH}-${osvers}" in
hppa-3.3|m88k-2.*|m88k-3.[0-3])
   test "$optimize" || optimize='-O0'
d100 2
a101 2
m88k-3.4)
   test "$optimize" || optimize='-O1'
d126 1
a126 1
        	# Broken up to OpenBSD 3.6, fixed in OpenBSD 3.7
d128 59
@


