head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.70
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.64
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.66
	OPENBSD_5_8_BASE:1.3
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.3.0.58
	OPENBSD_5_7_BASE:1.3
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.3.0.62
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.60
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.56
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.3.0.54
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.52
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.50
	OPENBSD_5_0:1.3.0.48
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.46
	OPENBSD_4_9_BASE:1.3
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.3.0.44
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.40
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.3.0.42
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.38
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.3.0.36
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.34
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.32
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.30
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.28
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.3.0.26
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.24
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.22
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.3.0.20
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.3.0.18
	OPENBSD_3_5_BASE:1.3
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.3.0.16
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.14
	OPENBSD_3_3_BASE:1.3
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2000.04.06.17.05.50;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.51.39;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.07.56.23;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.39.34;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.09.28;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.3
log
@perl-5.6.0 + local changes
@
text
@# Posix support has been removed from NextStep 
#
useposix='undef'

libpth='/lib /usr/lib /usr/local/lib'
libswanted=' '
libc='/NextLibrary/Frameworks/System.framework/System'

ldflags="$ldflags -dynamic -prebind"
lddlflags="$lddlflags -dynamic -bundle -undefined suppress"
ccflags="$ccflags -dynamic -fno-common -DUSE_NEXT_CTYPE -DUSE_PERL_SBRK"
cccdlflags='none'
ld='cc'
#optimize='-g -O'

######################################################################
# MAB support
######################################################################
# By default we will build for all architectures your development
# environment supports. If you only want to build for the platform
# you are on, simply comment or remove the line below.
#
# If you want to build for specific architectures, change the line
# below to something like
#
#	archs='m68k i386'
#

# On m68k machines, toke.c cannot be compiled at all for i386 and it can
# only be compiled for m68k itself without optimization (this is under
# OPENSTEP 4.2).
#
if [ `hostinfo | grep 'NeXT Mach.*:'  | sed 's/.*RELEASE_//'` = M68K ]
then
	echo "Cross compilation is impossible on m68k hardware under OS 4"
	echo "Forcing architecture to m68k only"
	toke_cflags='optimize=""'
	archs='m68k'
else
	archs=`/bin/lipo -info /usr/lib/libm.a | sed -n 's/^[^:]*:[^:]*: //p'`
fi

#
# leave the following part alone
#
archcount=`echo $archs |wc -w`
if [ $archcount -gt 1 ]
then
	for d in $archs
	do
			mabflags="$mabflags -arch $d"
	done
	ccflags="$ccflags $mabflags"
	ldflags="$ldflags $mabflags"
	lddlflags="$lddlflags $mabflags"
fi
######################################################################
# END MAB support
######################################################################

useshprlib='true'
dlext='bundle'
so='dylib'

#
# The default prefix would be '/usr/local'. But since many people are
# likely to have still 3.3 machines on their network, we do not want
# to overwrite possibly existing 3.3 binaries. 
# You can use Configure -Dprefix=/foo/bar to override this, or simply
# remove the lines below.
#
case "$prefix" in
'') prefix='/usr/local/OPENSTEP' ;;
esac

archname='OPENSTEP-Mach'

#
# At least on m68k there are situations when memcmp doesn't behave
# as expected.  So we'll use perl's memcmp.
#
d_sanemcmp='undef'

d_strcoll='undef'
i_dbm='define'
i_utime='undef'
groupstype='int'
direntrytype='struct direct'

usemymalloc='y'
clocktype='int'

#
# On some NeXT machines, the timestamp put by ranlib is not correct, and
# this may cause useless recompiles.  Fix that by adding a sleep before
# running ranlib.  The '5' is an empirical number that's "long enough."
# (Thanks to Andreas Koenig <k@@franz.ww.tu-berlin.de>)
ranlib='sleep 5; /bin/ranlib' 

case "$ldlibpthname" in
'') ldlibpthname=DYLD_LIBRARY_PATH ;;
esac
@


1.2
log
@perl5.005_03 (stock)
@
text
@a0 10
######################################################################
#
# IMPORTANT: before you run 'make', you need to enter one of these two
# lines (depending on your shell):
#	 DYLD_LIBRARY_PATH=`pwd`; export DYLD_LIBRARY_PATH
# or
#	setenv DYLD_LIBRARY_PATH `pwd`
#
######################################################################

d9 3
a11 3
ldflags='-dynamic -prebind'
lddlflags='-dynamic -bundle -undefined suppress'
ccflags='-dynamic -fno-common -DUSE_NEXT_CTYPE -DUSE_PERL_SBRK -DHIDEMYMALLOC'
d99 4
@


1.1
log
@perl 5.004_04
@
text
@d15 1
a15 1
libpth='/lib /usr/lib'
d36 1
a36 1
#	archs=(m68k i386)
d38 14
a51 1
archs=`/bin/lipo -info /usr/lib/libm.a | sed -n 's/^[^:]*:[^:]*: //p'`
@


1.1.1.1
log
@perl5.005_03
@
text
@d15 1
a15 1
libpth='/lib /usr/lib /usr/local/lib'
d36 1
a36 1
#	archs='m68k i386'
d38 1
a38 14

# On m68k machines, toke.c cannot be compiled at all for i386 and it can
# only be compiled for m68k itself without optimization (this is under
# OPENSTEP 4.2).
#
if [ `hostinfo | grep 'NeXT Mach.*:'  | sed 's/.*RELEASE_//'` = M68K ]
then
	echo "Cross compilation is impossible on m68k hardware under OS 4"
	echo "Forcing architecture to m68k only"
	toke_cflags='optimize=""'
	archs='m68k'
else
	archs=`/bin/lipo -info /usr/lib/libm.a | sed -n 's/^[^:]*:[^:]*: //p'`
fi
@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d1 10
d19 3
a21 3
ldflags="$ldflags -dynamic -prebind"
lddlflags="$lddlflags -dynamic -bundle -undefined suppress"
ccflags="$ccflags -dynamic -fno-common -DUSE_NEXT_CTYPE -DUSE_PERL_SBRK"
a108 4

case "$ldlibpthname" in
'') ldlibpthname=DYLD_LIBRARY_PATH ;;
esac
@


