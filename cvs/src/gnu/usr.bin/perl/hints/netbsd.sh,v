head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.8
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	PERL_5_20_2:1.1.1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	PERL_5_20_1:1.1.1.8
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	PERL_5_18_2:1.1.1.8
	PERL:1.1.1
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	PERL_5_16_3:1.1.1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	PERL_5_12_2:1.1.1.7
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	PERL_5_10_1:1.1.1.7
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	PERL_5_10_0:1.1.1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	PERL_5_8_6:1.1.1.5
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	PERL_5_8_5:1.1.1.5
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.10
date	2015.04.25.19.14.46;	author afresh1;	state Exp;
branches;
next	1.9;
commitid	XRK22kO4se3v2i2I;

1.9
date	2013.03.25.20.40.55;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.12.18.24.37;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.29.17.36.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.03.03.02.34;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.27.22.25.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.05.49;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.39;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.21;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.25;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.25;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.34;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.28;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.43.56;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2008.09.29.17.18.28;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2009.10.12.18.10.46;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2013.03.25.20.08.48;	author sthen;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2015.04.25.19.10.38;	author afresh1;	state Exp;
branches;
next	;
commitid	Wpcs5S8qILgEZC7F;


desc
@@


1.10
log
@Fix merge issues, remove excess files - match perl-5.20.2 dist
@
text
@# hints/netbsd.sh
#
# Please check with packages@@netbsd.org before making modifications
# to this file.

case "$archname" in
'')
    archname=`uname -m`-${osname}
    ;;
esac

# NetBSD keeps dynamic loading dl*() functions in /usr/lib/crt0.o,
# so Configure doesn't find them (unless you abandon the nm scan).
# Also, NetBSD 0.9a was the first release to introduce shared
# libraries.
#
case "$osvers" in
0.9|0.8*)
	usedl="$undef"
	;;
*)
	case `uname -m` in
	pmax)
		# NetBSD 1.3 and 1.3.1 on pmax shipped an `old' ld.so,
		# which will not work.
		case "$osvers" in
		1.3|1.3.1)
			d_dlopen=$undef
			;;
		esac
		;;
	esac
	if test -f /usr/libexec/ld.elf_so; then
		# ELF
		d_dlopen=$define
		d_dlerror=$define
		cccdlflags="-DPIC -fPIC $cccdlflags"
		lddlflags="-shared $lddlflags"
		cat >UU/cc.cbu <<'EOCBU'
# gcc 4.6 doesn't support --whole-archive, but it's required for the
# system gcc to build correctly, so check for it
echo 'int f(void) { return 0; }' >try.c
if ${cc:-cc} $cccdlflags -c try.c -otry.o 2>&1 &&
   ${cc:-cc} --whole-archive $lddlflags try.o -otry.so 2>&1 ; then
    lddlflags="--whole-archive $lddlflags"
fi
rm try.c try.o try.so 2>/dev/null
EOCBU
		rpathflag="-Wl,-rpath,"
		case "$osvers" in
		1.[0-5]*)
			#
			# Include the whole libgcc.a into the perl executable
			# so that certain symbols needed by loadable modules
			# built as C++ objects (__eh_alloc, __pure_virtual,
			# etc.) will always be defined.
			#
			ccdlflags="-Wl,-whole-archive -lgcc \
				-Wl,-no-whole-archive -Wl,-E $ccdlflags"
			;;
		*)
			ccdlflags="-Wl,-E $ccdlflags"
			;;
		esac
	elif test -f /usr/libexec/ld.so; then
		# a.out
		d_dlopen=$define
		d_dlerror=$define
		cccdlflags="-DPIC -fPIC $cccdlflags"
		lddlflags="-Bshareable $lddlflags"
		rpathflag="-R"
	else
		d_dlopen=$undef
		rpathflag=
	fi
	;;
esac

# netbsd had these but they don't really work as advertised, in the
# versions listed below.  if they are defined, then there isn't a
# way to make perl call setuid() or setgid().  if they aren't, then
# ($<, $>) = ($u, $u); will work (same for $(/$)).  this is because
# you can not change the real userid of a process under 4.4BSD.
# netbsd fixed this in 1.3.2.
case "$osvers" in
0.9*|1.[012]*|1.3|1.3.1)
	d_setregid="$undef"
	d_setreuid="$undef"
	;;
esac
case "$osvers" in
0.8*)
	;;
*)
	d_getprotoent_r="$undef"
	d_getprotobyname_r="$undef"
	d_getprotobynumber_r="$undef"
	d_setprotoent_r="$undef"
	d_endprotoent_r="$undef"
	d_getservent_r="$undef"
	d_getservbyname_r="$undef"
	d_getservbyport_r="$undef"
	d_setservent_r="$undef"
	d_endservent_r="$undef"
	d_gethostbyname_r="$undef"
	d_gethostbyaddr2_r="$undef"
	d_gethostbyaddr_r="$undef"
	d_sethostent_r="$undef"
	d_gethostent_r="$undef"
	d_endhostent_r="$undef"
	d_getprotoent_r_proto="0"
	d_getprotobyname_r_proto="0"
	d_getprotobynumber_r_proto="0"
	d_setprotoent_r_proto="0"
	d_endprotoent_r_proto="0"
	d_getservent_r_proto="0"
	d_getservbyname_r_proto="0"
	d_getservbyport_r_proto="0"
	d_setservent_r_proto="0"
	d_endservent_r_proto="0"
	d_gethostbyname_r_proto="0"
	d_gethostbyaddr2_r_proto="0"
	d_gethostbyaddr_r_proto="0"
	d_sethostent_r_proto="0"
	d_endhostent_r_proto="0"
	d_gethostent_r_proto="0"
	;;
esac

# These are obsolete in any netbsd.
d_setrgid="$undef"
d_setruid="$undef"

# there's no problem with vfork.
usevfork=true

# This is there but in machine/ieeefp_h.
ieeefp_h="define"

# This script UU/usethreads.cbu will get 'called-back' by Configure
# after it has prompted the user for whether to use threads.
cat > UU/usethreads.cbu <<'EOCBU'
case "$usethreads" in
$define|true|[yY]*)
	lpthread=
	for xxx in pthread; do
		for yyy in $loclibpth $plibpth $glibpth dummy; do
			zzz=$yyy/lib$xxx.a
			if test -f "$zzz"; then
				lpthread=$xxx
				break;
			fi
			zzz=$yyy/lib$xxx.so
			if test -f "$zzz"; then
				lpthread=$xxx
				break;
			fi
			zzz=`ls $yyy/lib$xxx.so.* 2>/dev/null`
			if test "X$zzz" != X; then
				lpthread=$xxx
				break;
			fi
		done
		if test "X$lpthread" != X; then
			break;
		fi
	done
	if test "X$lpthread" != X; then
		# Add -lpthread.
		libswanted="$libswanted $lpthread"
		# There is no libc_r as of NetBSD 1.5.2, so no c -> c_r.
		# This will be revisited when NetBSD gains a native pthreads
		# implementation.
	else
		echo "$0: No POSIX threads library (-lpthread) found.  " \
		     "You may want to install GNU pth.  Aborting." >&4
		exit 1
	fi
	unset lpthread

	# several reentrant functions are embedded in libc, but haven't
	# been added to the header files yet.  Let's hold off on using
	# them until they are a valid part of the API
	case "$osvers" in
	[012].*|3.[0-1])
		d_getprotobyname_r=$undef
		d_getprotobynumber_r=$undef
		d_getprotoent_r=$undef
		d_getservbyname_r=$undef
		d_getservbyport_r=$undef
		d_getservent_r=$undef
		d_setprotoent_r=$undef
		d_setservent_r=$undef
		d_endprotoent_r=$undef
		d_endservent_r=$undef ;;
	esac
	;;

esac
EOCBU

# Set sensible defaults for NetBSD: look for local software in
# /usr/pkg (NetBSD Packages Collection) and in /usr/local.
#
loclibpth="/usr/pkg/lib /usr/local/lib"
locincpth="/usr/pkg/include /usr/local/include"
case "$rpathflag" in
'')
	ldflags=
	;;
*)
	ldflags=
	for yyy in $loclibpth; do
		ldflags="$ldflags $rpathflag$yyy"
	done
	;;
esac

case `uname -m` in
alpha)
    echo 'int main() {}' > try.c
    gcc=`${cc:-cc} -v -c try.c 2>&1|grep 'gcc version egcs-2'`
    case "$gcc" in
    '' | "gcc version egcs-2.95."[3-9]*) ;; # 2.95.3 or better okay
    *)	cat >&4 <<EOF
***
*** Your gcc ($gcc) is known to be
*** too buggy on netbsd/alpha to compile Perl with optimization.
*** It is suggested you install the lang/gcc package which should
*** have at least gcc 2.95.3 which should work okay: use for example
*** Configure -Dcc=/usr/pkg/gcc-2.95.3/bin/cc.  You could also
*** Configure -Doptimize=-O0 to compile Perl without any optimization
*** but that is not recommended.
***
EOF
	exit 1
	;;
    esac
    rm -f try.*
    ;;
esac

# NetBSD/sparc 1.5.3/1.6.1 dumps core in the semid_ds test of Configure.
case `uname -m` in
sparc) d_semctl_semid_ds=undef ;;
esac

# malloc wrap works
case "$usemallocwrap" in
'') usemallocwrap='define' ;;
esac

# don't use perl malloc by default
case "$usemymalloc" in
'') usemymalloc=n ;;
esac
@


1.9
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d92 3
a94 1
0.9*|1.*|2.*|3.*|4.*|5.*|6.*)
d105 6
d121 6
@


1.8
log
@Merge in perl 5.10.1
@
text
@d38 11
a48 1
		lddlflags="--whole-archive -shared $lddlflags"
d92 1
a92 1
0.9*|1.*|2.*|3.*|4.*|5.*)
d167 1
a167 1
	# several reentrant functions are embeded in libc, but haven't
d234 9
@


1.7
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d82 1
a82 1
0.9*|1.*|2.*|3.*|4.*)
@


1.6
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d81 24
d116 5
a120 5
# This script UU/usethreads.cbu will get 'called-back' by Configure 
# after it has prompted the user for whether to use threads. 
cat > UU/usethreads.cbu <<'EOCBU' 
case "$usethreads" in 
$define|true|[yY]*) 
d145 2
a146 2
		# Add -lpthread. 
		libswanted="$libswanted $lpthread" 
d150 1
a150 1
        else 
d152 3
a154 3
		     "You may want to install GNU pth.  Aborting." >&4 
		exit 1 
        fi
d156 20
a175 2
        ;; 
esac 
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d40 15
a54 10
		#
		# Include the whole libgcc.a into the perl executable so
		# that certain symbols needed by loadable modules built as
		# C++ objects (__eh_alloc, __pure_virtual, etc.) will always
		# be defined.
		#
		# XXX This should be obsoleted by gcc-3.0.
		#
		ccdlflags="-Wl,-whole-archive -lgcc -Wl,-no-whole-archive \
			-Wl,-E $ccdlflags"
d152 30
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d3 2
a4 6
# talk to packages@@netbsd.org if you want to change this file.
#
# netbsd keeps dynamic loading dl*() functions in /usr/lib/crt0.o,
# so Configure doesn't find them (unless you abandon the nm scan).
# this should be *just* 0.9 below as netbsd 0.9a was the first to
# introduce shared libraries.
d12 5
d22 13
a34 1
	if [ -f /usr/libexec/ld.elf_so ]; then
a36 1
		ccdlflags="-Wl,-E -Wl,-R${PREFIX}/lib $ccdlflags"
d39 13
a51 4
	elif [ "`uname -m`" = "pmax" ]; then
# NetBSD 1.3 and 1.3.1 on pmax shipped an `old' ld.so, which will not work.
		d_dlopen=$undef
	elif [ -f /usr/libexec/ld.so ]; then
a53 3
		ccdlflags="-Wl,-R${PREFIX}/lib $ccdlflags"
# we use -fPIC here because -fpic is *NOT* enough for some of the
# extensions like Tk on some netbsd platforms (the sparc is one)
d56 1
d59 1
d82 4
a85 3
case "$usevfork" in
'') usevfork=true ;;
esac
d87 43
a129 2
# Pre-empt the /usr/bin/perl question of installperl.
installusrbinperl='n'
d131 16
a146 4
# Recognize the NetBSD packages collection.
# GDBM might be here.
test -d /usr/pkg/lib     && loclibpth="$loclibpth /usr/pkg/lib"
test -d /usr/pkg/include && locincpth="$locincpth /usr/pkg/include"
@


1.3
log
@perl5.005_03 (stock)
@
text
@d37 1
a37 1
		lddlflags="-Bforcearchive -Bshareable $lddlflags"
a64 4

# Avoid telldir prototype conflict in pp_sys.c  (NetBSD uses const DIR *)
# Configure should test for this.  Volunteers?
pp_sys_cflags='ccflags="$ccflags -DHAS_TELLDIR_PROTOTYPE"'
@


1.2
log
@perl 5.004_04
@
text
@d3 1
a3 1
# talk to mrg@@eterna.com.au if you want to change this file.
d8 1
a8 2
# introduce shared libraries.  however, they don't work/build on
# pmax, powerpc and alpha ports correctly, yet.
d21 8
a28 2
	case `uname -m` in
	alpha|powerpc|pmax)
d30 1
a30 9
		;;
# this doesn't work (yet).
#	alpha)
#		d_dlopen=$define
#		d_dlerror=$define
#		cccdlflags="-DPIC -fPIC $cccdlflags"
#		lddlflags="-shared $lddlflags"
#		;;
	*)
d33 1
d38 3
a40 2
		;;
	esac
d49 1
a49 1
# netbsd fixed this in 1.2A.
d51 1
a51 1
0.9*|1.0*|1.1*|1.2_*|1.2|1.2.*)
a53 2
	d_setrgid="$undef"
	d_setruid="$undef"
d57 9
d69 8
@


1.1
log
@Initial revision
@
text
@d8 9
a16 1
# introduce shared libraries.
d21 15
a35 2
*)	d_dlopen=$define
	d_dlerror=$define
d38 15
a52 7
	cccdlflags="-DPIC -fPIC $cccdlflags"
	lddlflags="-Bforcearchive -Bshareable $lddlflags"
# netbsd has these but they don't really work as advertised.  if they
# are defined, then there isn't a way to make perl call setuid() or
# setgid().  if they aren't, then ($<, $>) = ($u, $u); will work (same
# for $(/$)).  this is because you can not change the real userid of
# a process under 4.4BSD.
a62 6

case "$archname" in
'')
    archname=`uname -m`-${osname}
    ;;
esac
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d3 1
a3 1
# talk to packages@@netbsd.org if you want to change this file.
a8 7

case "$archname" in
'')
    archname=`uname -m`-${osname}
    ;;
esac

d13 2
a14 14
*)
	if [ -f /usr/libexec/ld.elf_so ]; then
		d_dlopen=$define
		d_dlerror=$define
		ccdlflags="-Wl,-E -Wl,-R${PREFIX}/lib $ccdlflags"
		cccdlflags="-DPIC -fPIC $cccdlflags"
		lddlflags="--whole-archive -shared $lddlflags"
	elif [ "`uname -m`" = "pmax" ]; then
# NetBSD 1.3 and 1.3.1 on pmax shipped an `old' ld.so, which will not work.
		d_dlopen=$undef
	elif [ -f /usr/libexec/ld.so ]; then
		d_dlopen=$define
		d_dlerror=$define
		ccdlflags="-Wl,-R${PREFIX}/lib $ccdlflags"
d17 7
a23 16
		cccdlflags="-DPIC -fPIC $cccdlflags"
		lddlflags="-Bforcearchive -Bshareable $lddlflags"
	else
		d_dlopen=$undef
	fi
	;;
esac

# netbsd had these but they don't really work as advertised, in the
# versions listed below.  if they are defined, then there isn't a
# way to make perl call setuid() or setgid().  if they aren't, then
# ($<, $>) = ($u, $u); will work (same for $(/$)).  this is because
# you can not change the real userid of a process under 4.4BSD.
# netbsd fixed this in 1.3.2.
case "$osvers" in
0.9*|1.[012]*|1.3|1.3.1)
d26 2
a30 9
# These are obsolete in any netbsd.
d_setrgid="$undef"
d_setruid="$undef"

# there's no problem with vfork.
case "$usevfork" in
'') usevfork=true ;;
esac

d35 5
a39 7
# Pre-empt the /usr/bin/perl question of installperl.
installusrbinperl='n'

# Recognize the NetBSD packages collection.
# GDBM might be here.
test -d /usr/pkg/lib     && loclibpth="$loclibpth /usr/pkg/lib"
test -d /usr/pkg/include && locincpth="$locincpth /usr/pkg/include"
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d37 1
a37 1
		lddlflags="-Bshareable $lddlflags"
d65 4
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d3 6
a8 2
# Please check with packages@@netbsd.org before making modifications
# to this file.
a15 5
# NetBSD keeps dynamic loading dl*() functions in /usr/lib/crt0.o,
# so Configure doesn't find them (unless you abandon the nm scan).
# Also, NetBSD 0.9a was the first release to introduce shared
# libraries.
#
d21 1
a21 13
	case `uname -m` in
	pmax)
		# NetBSD 1.3 and 1.3.1 on pmax shipped an `old' ld.so,
		# which will not work.
		case "$osvers" in
		1.3|1.3.1)
			d_dlopen=$undef
			;;
		esac
		;;
	esac
	if test -f /usr/libexec/ld.elf_so; then
		# ELF
d24 1
d27 4
a30 13
		rpathflag="-Wl,-rpath,"
		#
		# Include the whole libgcc.a into the perl executable so
		# that certain symbols needed by loadable modules built as
		# C++ objects (__eh_alloc, __pure_virtual, etc.) will always
		# be defined.
		#
		# XXX This should be obsoleted by gcc-3.0.
		#
		ccdlflags="-Wl,-whole-archive -lgcc -Wl,-no-whole-archive \
			-Wl,-E $ccdlflags"
	elif test -f /usr/libexec/ld.so; then
		# a.out
d33 3
a37 1
		rpathflag="-R"
a39 1
		rpathflag=
d62 3
a64 4
usevfork=true

# This is there but in machine/ieeefp_h.
ieeefp_h="define"
d66 2
a67 43
# This script UU/usethreads.cbu will get 'called-back' by Configure 
# after it has prompted the user for whether to use threads. 
cat > UU/usethreads.cbu <<'EOCBU' 
case "$usethreads" in 
$define|true|[yY]*) 
	lpthread=
	for xxx in pthread; do
		for yyy in $loclibpth $plibpth $glibpth dummy; do
			zzz=$yyy/lib$xxx.a
			if test -f "$zzz"; then
				lpthread=$xxx
				break;
			fi
			zzz=$yyy/lib$xxx.so
			if test -f "$zzz"; then
				lpthread=$xxx
				break;
			fi
			zzz=`ls $yyy/lib$xxx.so.* 2>/dev/null`
			if test "X$zzz" != X; then
				lpthread=$xxx
				break;
			fi
		done
		if test "X$lpthread" != X; then
			break;
		fi
	done
	if test "X$lpthread" != X; then
		# Add -lpthread. 
		libswanted="$libswanted $lpthread" 
		# There is no libc_r as of NetBSD 1.5.2, so no c -> c_r.
		# This will be revisited when NetBSD gains a native pthreads
		# implementation.
        else 
		echo "$0: No POSIX threads library (-lpthread) found.  " \
		     "You may want to install GNU pth.  Aborting." >&4 
		exit 1 
        fi
	unset lpthread
        ;; 
esac 
EOCBU
d69 4
a72 16
# Set sensible defaults for NetBSD: look for local software in
# /usr/pkg (NetBSD Packages Collection) and in /usr/local.
#
loclibpth="/usr/pkg/lib /usr/local/lib"
locincpth="/usr/pkg/include /usr/local/include"
case "$rpathflag" in
'')
	ldflags=
	;;
*)
	ldflags=
	for yyy in $loclibpth; do
		ldflags="$ldflags $rpathflag$yyy"
	done
	;;
esac
@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d40 10
a49 15
		case "$osvers" in
		1.[0-5]*)
			#
			# Include the whole libgcc.a into the perl executable
			# so that certain symbols needed by loadable modules
			# built as C++ objects (__eh_alloc, __pure_virtual,
			# etc.) will always be defined.
			#
			ccdlflags="-Wl,-whole-archive -lgcc \
				-Wl,-no-whole-archive -Wl,-E $ccdlflags"
			;;
		*)
			ccdlflags="-Wl,-E $ccdlflags"
			;;
		esac
a146 30

case `uname -m` in
alpha)
    echo 'int main() {}' > try.c
    gcc=`${cc:-cc} -v -c try.c 2>&1|grep 'gcc version egcs-2'`
    case "$gcc" in
    '' | "gcc version egcs-2.95."[3-9]*) ;; # 2.95.3 or better okay
    *)	cat >&4 <<EOF
***
*** Your gcc ($gcc) is known to be
*** too buggy on netbsd/alpha to compile Perl with optimization.
*** It is suggested you install the lang/gcc package which should
*** have at least gcc 2.95.3 which should work okay: use for example
*** Configure -Dcc=/usr/pkg/gcc-2.95.3/bin/cc.  You could also
*** Configure -Doptimize=-O0 to compile Perl without any optimization
*** but that is not recommended.
***
EOF
	exit 1
	;;
    esac
    rm -f try.*
    ;;
esac

# NetBSD/sparc 1.5.3/1.6.1 dumps core in the semid_ds test of Configure.
case `uname -m` in
sparc) d_semctl_semid_ds=undef ;;
esac

@


1.1.1.6
log
@import perl 5.10.0 from CPAN
@
text
@a80 24
case "$osvers" in
0.9*|1.*|2.*|3.*|4.*)
	d_getprotoent_r="$undef"
	d_getprotobyname_r="$undef"
	d_getprotobynumber_r="$undef"
	d_setprotoent_r="$undef"
	d_endprotoent_r="$undef"
	d_getservent_r="$undef"
	d_getservbyname_r="$undef"
	d_getservbyport_r="$undef"
	d_setservent_r="$undef"
	d_endservent_r="$undef"
	d_getprotoent_r_proto="0"
	d_getprotobyname_r_proto="0"
	d_getprotobynumber_r_proto="0"
	d_setprotoent_r_proto="0"
	d_endprotoent_r_proto="0"
	d_getservent_r_proto="0"
	d_getservbyname_r_proto="0"
	d_getservbyport_r_proto="0"
	d_setservent_r_proto="0"
	d_endservent_r_proto="0"
	;;
esac
d92 5
a96 5
# This script UU/usethreads.cbu will get 'called-back' by Configure
# after it has prompted the user for whether to use threads.
cat > UU/usethreads.cbu <<'EOCBU'
case "$usethreads" in
$define|true|[yY]*)
d121 2
a122 2
		# Add -lpthread.
		libswanted="$libswanted $lpthread"
d126 1
a126 1
	else
d128 3
a130 3
		     "You may want to install GNU pth.  Aborting." >&4
		exit 1
	fi
d132 2
a133 20

	# several reentrant functions are embeded in libc, but haven't
	# been added to the header files yet.  Let's hold off on using
	# them until they are a valid part of the API
	case "$osvers" in
	[012].*|3.[0-1])
		d_getprotobyname_r=$undef
		d_getprotobynumber_r=$undef
		d_getprotoent_r=$undef
		d_getservbyname_r=$undef
		d_getservbyport_r=$undef
		d_getservent_r=$undef
		d_setprotoent_r=$undef
		d_setservent_r=$undef
		d_endprotoent_r=$undef
		d_endservent_r=$undef ;;
	esac
	;;

esac
@


1.1.1.7
log
@import perl 5.10.1
@
text
@d82 1
a82 1
0.9*|1.*|2.*|3.*|4.*|5.*)
@


1.1.1.8
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d38 1
a38 11
		lddlflags="-shared $lddlflags"
		cat >UU/cc.cbu <<'EOCBU'
# gcc 4.6 doesn't support --whole-archive, but it's required for the
# system gcc to build correctly, so check for it
echo 'int f(void) { return 0; }' >try.c
if ${cc:-cc} $cccdlflags -c try.c -otry.o 2>&1 &&
   ${cc:-cc} --whole-archive $lddlflags try.o -otry.so 2>&1 ; then
    lddlflags="--whole-archive $lddlflags"
fi
rm try.c try.o try.so 2>/dev/null
EOCBU
d82 1
a82 1
0.9*|1.*|2.*|3.*|4.*|5.*|6.*)
d157 1
a157 1
	# several reentrant functions are embedded in libc, but haven't
a223 9
# malloc wrap works
case "$usemallocwrap" in
'') usemallocwrap='define' ;;
esac

# don't use perl malloc by default
case "$usemymalloc" in
'') usemymalloc=n ;;
esac
@


1.1.1.9
log
@Import perl-5.20.2
@
text
@d92 1
a92 3
0.8*)
	;;
*)
a102 6
	d_gethostbyname_r="$undef"
	d_gethostbyaddr2_r="$undef"
	d_gethostbyaddr_r="$undef"
	d_sethostent_r="$undef"
	d_gethostent_r="$undef"
	d_endhostent_r="$undef"
a112 6
	d_gethostbyname_r_proto="0"
	d_gethostbyaddr2_r_proto="0"
	d_gethostbyaddr_r_proto="0"
	d_sethostent_r_proto="0"
	d_endhostent_r_proto="0"
	d_gethostent_r_proto="0"
@


