head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.68
	OPENBSD_6_2_BASE:1.3
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.3.0.72
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.70
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.64
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.66
	OPENBSD_5_8_BASE:1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.3.0.58
	OPENBSD_5_7_BASE:1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.62
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.60
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.56
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.3.0.54
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.52
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.50
	OPENBSD_5_0:1.3.0.48
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.46
	OPENBSD_4_9_BASE:1.3
	PERL_5_12_2:1.1.1.3
	OPENBSD_4_8:1.3.0.44
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.40
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.3.0.42
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.38
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.3.0.36
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.34
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.32
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.30
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.28
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.3.0.26
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.24
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.22
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.3.0.20
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.3.0.18
	OPENBSD_3_5_BASE:1.3
	PERL_5_8_2:1.1.1.3
	OPENBSD_3_4:1.3.0.16
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.14
	OPENBSD_3_3_BASE:1.3
	PERL_5_8_0:1.1.1.3
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2000.04.06.17.05.44;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.10;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.22;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.22;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.30;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.27;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@perl-5.6.0 + local changes
@
text
@# hints/esix4.sh
# Original esix4 hint file courtesy of
# Kevin O'Gorman ( kevin@@kosman.UUCP, kevin%kosman.uucp@@nrc.com )
#
# Use Configure -Dcc=gcc to use gcc.

# Why can't we just use PATH?  It contains /usr/ccs/bin.
case "$cc" in
'') cc='/bin/cc'
    test -f $cc || cc='/usr/ccs/bin/cc'
    ;;
esac

ldflags="$ldflags -L/usr/ccs/lib -L/usr/ucblib"
test -d /usr/local/man || mansrc='none'
# Do we really need to tell cc to look in /usr/include?
ccflags="$ccflags -I/usr/include -I/usr/ucbinclude"
libswanted=`echo " $libswanted " | sed -e 's/ malloc / /' `
d_index='undef'
d_suidsafe=define
usevfork='false'
if test "$osvers" = "3.0"; then
	d_gconvert='undef'
	grep 'define[ 	]*AF_OSI[ 	]' /usr/include/sys/socket.h | grep '/\*[^*]*$' >esix$$
	if test -s esix$$; then
		cat <<EOM >&2

WARNING: You are likely to have problems compiling the Socket extension
unless you fix the unterminated comment for AF_OSI in the file
/usr/include/sys/socket.h.

EOM
	fi
	rm -f esix$$
fi

@


1.2
log
@perl 5.004_04
@
text
@d6 2
d13 2
a14 1
ldflags='-L/usr/ccs/lib -L/usr/ucblib'
d16 2
a17 1
ccflags='-I/usr/include -I/usr/ucbinclude'
d24 2
a25 2
	grep 'define[ 	]*AF_OSI[ 	]' /usr/include/sys/socket.h | grep '/\*[^*]*$' >/tmp/esix$$
	if test -s /tmp/esix$$; then
d34 1
a34 1
	rm -f /tmp/esix$$
a36 9
cat <<'EOM' >&4

If you wish to use dynamic linking, you must use 
	LD_LIBRARY_PATH=`pwd`; export LD_LIBRARY_PATH
or
	setenv LD_LIBRARY_PATH `pwd`
before running make.

EOM
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
		cat <<EOM
d33 1
a33 1
cat <<'EOM'
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d22 1
a22 1
		cat <<EOM >&2
d33 1
a33 1
cat <<'EOM' >&4
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@a5 2

# Why can't we just use PATH?  It contains /usr/ccs/bin.
d11 1
a11 2

ldflags="$ldflags -L/usr/ccs/lib -L/usr/ucblib"
d13 1
a13 2
# Do we really need to tell cc to look in /usr/include?
ccflags="$ccflags -I/usr/include -I/usr/ucbinclude"
d20 2
a21 2
	grep 'define[ 	]*AF_OSI[ 	]' /usr/include/sys/socket.h | grep '/\*[^*]*$' >esix$$
	if test -s esix$$; then
d30 1
a30 1
	rm -f esix$$
d33 9
@


