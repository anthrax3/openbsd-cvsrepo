head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.36
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.34
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.28
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.30
	OPENBSD_5_8_BASE:1.7
	PERL_5_20_2:1.1.1.6
	OPENBSD_5_7:1.7.0.22
	OPENBSD_5_7_BASE:1.7
	PERL_5_20_1:1.1.1.6
	OPENBSD_5_6:1.7.0.26
	OPENBSD_5_6_BASE:1.7
	PERL_5_18_2:1.1.1.6
	PERL:1.1.1
	OPENBSD_5_5:1.7.0.24
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.20
	OPENBSD_5_4_BASE:1.7
	PERL_5_16_3:1.1.1.6
	OPENBSD_5_3:1.7.0.18
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.16
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.14
	OPENBSD_5_0:1.7.0.12
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.10
	OPENBSD_4_9_BASE:1.7
	PERL_5_12_2:1.1.1.6
	OPENBSD_4_8:1.7.0.8
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.4
	OPENBSD_4_7_BASE:1.7
	PERL_5_10_1:1.1.1.6
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	PERL_5_10_0:1.1.1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	PERL_5_8_6:1.1.1.5
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	PERL_5_8_5:1.1.1.5
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.7
date	2008.09.29.17.36.08;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.03.03.02.35;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.27.22.25.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.05.55;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.40;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.31;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.27;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.27;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.37;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.30;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.43.57;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2008.09.29.17.18.28;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@# hints/ultrix_4.sh
# Last updated by Andy Dougherty  <doughera@@lafayette.edu>
# Fri Feb 10 10:04:51 EST 1995
#
# Use   Configure -Dcc=gcc   to use gcc.
#
# This used to use -g, but that pulls in -DDEBUGGING by default.
case "$optimize" in
'')
	# recent versions have a working compiler.
	case "$osvers" in
	*4.[45]*)	optimize='-O2' ;;
	*)		optimize='none' ;;
	esac
	;;
esac

# Some users have reported Configure runs *much* faster if you 
# replace all occurrences of /bin/sh by /bin/sh5
# Something like:
#   sed 's!/bin/sh!/bin/sh5!g' Configure > Configure.sh5
# Then run "sh5 Configure.sh5 [your options]"

case "$myuname" in
*risc*) cat <<EOF >&4
Note that there is a bug in some versions of NFS on the DECStation that
may cause utime() to work incorrectly.  If so, regression test io/fs
may fail if run under NFS.  Ignore the failure.
EOF
esac

# Compiler flags that depend on osversion:
case "$cc" in
*gcc*) ;;
*)
    case "$osvers" in
    *4.1*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3800" ;;
    *4.2*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3800"
		# Prototypes sometimes cause compilation errors in 4.2.
		prototype=undef   
		case "$myuname" in
		*risc*)  d_volatile=undef ;;
		esac
		;;
    *4.3*)	ccflags="$ccflags -std1 -DLANGUAGE_C -Olimit 3800" ;;
    *)	ccflags="$ccflags -std -Olimit 3800" ;;
    esac
    ;;
esac

# Other settings that depend on $osvers:
case "$osvers" in
*4.1*)	;;
*4.2*)	libswanted=`echo $libswanted | sed 's/ malloc / /'` ;;
*4.3*)	;;
*)	ranlib='ranlib' ;;
esac

# Settings that don't depend on $osvers:

util_cflags='ccflags="$ccflags -DLOCALE_ENVIRON_REQUIRED"'
groupstype='int'
# The configure test should be beefed up to try using the field when
# it can't find any of the standardly-named fields.
d_dirnamlen='define'

# Ultrix can mmap only character devices, not regular files,
# which is rather useless state of things for Perl.
d_mmap='undef'

# There simply isn't dynaloading in Ultrix.
usedl='undef'

@


1.6
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d63 1
a63 2
# This will cause a WHOA THERE warning, but it's accurate.  The
# configure test should be beefed up to try using the field when
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d2 1
a2 1
# Last updated by Andy Dougherty  <doughera@@lafcol.lafayette.edu>
d71 4
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d19 1
a19 1
# replace all occurences of /bin/sh by /bin/sh5
@


1.3
log
@perl5.005_03 (stock)
@
text
@d37 2
a38 2
    *4.1*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3400" ;;
    *4.2*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3400"
d45 2
a46 2
    *4.3*)	ccflags="$ccflags -std1 -DLANGUAGE_C -Olimit 3400" ;;
    *)	ccflags="$ccflags -std -Olimit 3400" ;;
d67 4
@


1.2
log
@perl 5.004_04
@
text
@d37 2
a38 2
    *4.1*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3200" ;;
    *4.2*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3200"
d45 2
a46 2
    *4.3*)	ccflags="$ccflags -std1 -DLANGUAGE_C -Olimit 3200" ;;
    *)	ccflags="$ccflags -std -Olimit 3200" ;;
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
# I don't know if -g is really needed.  (AD)
d9 7
a15 1
'') optimize=-g ;;
d25 1
a25 1
*risc*) cat <<EOF
d37 2
a38 2
    *4.1*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 2900" ;;
    *4.2*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 2900"
d45 2
a46 2
    *4.3*)	ccflags="$ccflags -std1 -DLANGUAGE_C -Olimit 2900" ;;
    *)	ccflags="$ccflags -std -Olimit 2900" ;;
d59 3
d63 4
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d7 1
a7 1
# This used to use -g, but that pulls in -DDEBUGGING by default.
d9 1
a9 7
'')
	# recent versions have a working compiler.
	case "$osvers" in
	*4.[45]*)	optimize='-O2' ;;
	*)		optimize='none' ;;
	esac
	;;
d19 1
a19 1
*risc*) cat <<EOF >&4
d31 2
a32 2
    *4.1*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3400" ;;
    *4.2*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3400"
d39 2
a40 2
    *4.3*)	ccflags="$ccflags -std1 -DLANGUAGE_C -Olimit 3400" ;;
    *)	ccflags="$ccflags -std -Olimit 3400" ;;
a52 3
# Settings that don't depend on $osvers:

util_cflags='ccflags="$ccflags -DLOCALE_ENVIRON_REQUIRED"'
a53 4
# This will cause a WHOA THERE warning, but it's accurate.  The
# configure test should be beefed up to try using the field when
# it can't find any of the standardly-named fields.
d_dirnamlen='define'
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d37 2
a38 2
    *4.1*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3800" ;;
    *4.2*)	ccflags="$ccflags -DLANGUAGE_C -Olimit 3800"
d45 2
a46 2
    *4.3*)	ccflags="$ccflags -std1 -DLANGUAGE_C -Olimit 3800" ;;
    *)	ccflags="$ccflags -std -Olimit 3800" ;;
a66 4

# Ultrix can mmap only character devices, not regular files,
# which is rather useless state of things for Perl.
d_mmap='undef'
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d19 1
a19 1
# replace all occurrences of /bin/sh by /bin/sh5
@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d2 1
a2 1
# Last updated by Andy Dougherty  <doughera@@lafayette.edu>
a70 4

# There simply isn't dynaloading in Ultrix.
usedl='undef'

@


1.1.1.6
log
@import perl 5.10.0 from CPAN
@
text
@d63 2
a64 1
# The configure test should be beefed up to try using the field when
@


