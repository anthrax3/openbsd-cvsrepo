head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.54
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.52
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.46
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.48
	OPENBSD_5_8_BASE:1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.3.0.40
	OPENBSD_5_7_BASE:1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.38
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.3.0.36
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.34
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.32
	OPENBSD_5_0:1.3.0.30
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.28
	OPENBSD_4_9_BASE:1.3
	PERL_5_12_2:1.1.1.3
	OPENBSD_4_8:1.3.0.26
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.22
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.2.0.26
	OPENBSD_3_5_BASE:1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.2.0.24
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2004.08.09.18.09.26;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.21;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.21;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.29;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.08.09.17.47.56;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@#! /local/gnu/bin/bash
# Hints for the CX/UX 7.1 operating system running on Concurrent (formerly
# Harris) NightHawk machines.  written by Tom.Horsley@@mail.ccur.com
#
# This config is setup for dynamic linking and the Concurrent C compiler.

# Check some things and print warnings if this isn't going to work...
#
case ${SDE_TARGET:-ELF} in
   [Cc][Oo][Ff][Ff]|[Oo][Cc][Ss]) echo ''
      echo ''								>&2
      echo WARNING: Do not build perl 5 with the SDE_TARGET set to	>&2
      echo generate coff object - perl 5 must be built in the ELF	>&2
      echo environment.							>&2
      echo ''								>&2
      echo '';;
   [Ee][Ll][Ff]) : ;;
   *) echo ''								>&2
      echo 'Unknown SDE_TARGET value: '$SDE_TARGET			>&2
      echo ''								>&2 ;;
esac

case `uname -r` in
   [789]*) : ;;
   *) echo ''
      echo ''								>&2
      echo WARNING: Perl 5 requires shared library support, it cannot	>&2
      echo be built on releases of CX/UX prior to 7.0 with this hints	>&2
      echo file. You\'ll have to do a separate port for the statically	>&2
      echo linked COFF environment.					>&2
      echo ''								>&2
      echo '';;
esac

# Internally at Concurrent, we use a source management tool which winds up
# giving us read-only copies of source trees that are mostly symbolic links.
# That upsets the perl build process when it tries to edit opcode.h and
# embed.h or touch perly.c or perly.h, so turn those files into "real" files
# when Configure runs. (If you already have "real" source files, this won't
# do anything).
#
if [ -x /usr/local/mkreal ]
then
   for i in '.' '..'
   do
      for j in embed.h opcode.h perly.h perly.c
      do
         if [ -h $i/$j ]
         then
            ( cd $i ; /usr/local/mkreal $j ; chmod 666 $j )
         fi
      done
   done
fi

# We DO NOT want -lmalloc
#
libswanted=`echo ' '$libswanted' ' | sed -e 's/ malloc / /'`

# Stick the low-level elf library path in first.
#
glibpth="/usr/sde/elf/usr/lib $glibpth"

# Need to use Concurrent cc for most of these options to be meaningful (if
# you want to get this to work with gcc, you're on your own :-). Passing
# -Bexport to the linker when linking perl is important because it leaves
# the interpreter internal symbols visible to the shared libs that will be
# loaded on demand (and will try to reference those symbols). The -u option
# to drag 'sigaction' into the perl main program is to make sure it gets
# defined for the posix shared library (for some reason sigaction is static,
# rather than being defined in libc.so.1). The 88110compat option makes sure
# the code will run on both 88100 and 88110 machines.
#
cc='/bin/cc -Xa -Qtarget=M88110compat'
cccdlflags='-Zelf -Zpic'
ccdlflags='-Zelf -Zlink=dynamic -Wl,-Bexport -u sigaction'
lddlflags='-Zlink=so'

# Configure imagines that it sees a pw_quota field, but it is really in a
# different structure than the one it thinks it is looking at.
d_pwquota='undef'

# Configure sometimes finds what it believes to be ndbm header files on the
# system and imagines that we have the NDBM library, but we really don't.
# There is something there that once resembled ndbm, but it is purely
# for internal use in some tool and has been hacked beyond recognition
# (or even function :-)
#
i_ndbm='undef'

# Don't use the perl malloc
#
d_mymalloc='undef'
usemymalloc='n'

cat <<'EOM' >&4

WARNING: If you are using ksh to run the Configure script, you may find it
failing in mysterious ways (such as failing to find library routines which
are known to exist). Configure seems to push ksh beyond its limits
sometimes. Try using env to strip unnecessary things out of the environment
and run Configure with /sbin/sh. That sometimes seems to produce more
accurate results.

EOM
@


1.2
log
@perl 5.004_04
@
text
@d72 1
a72 2
# the code will run on both 88100 and 88110 machines. The define is added to
# trigger a work around for a compiler bug which shows up in pp.c.
d74 1
a74 1
cc='/bin/cc -Xa -Qtarget=M88110compat -DCXUX_BROKEN_CONSTANT_CONVERT'
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
# Hints for the CX/UX 7.1 operating system running on Harris NightHawk
# machines.  written by Tom.Horsley@@mail.hcsc.com
d5 1
a5 1
# This config is setup for dynamic linking and the Harris C compiler.
d11 5
a15 5
      echo ''
      echo WARNING: Do not build perl 5 with the SDE_TARGET set to
      echo generate coff object - perl 5 must be built in the ELF
      echo environment.
      echo ''
d18 3
a20 3
   *) echo ''
      echo 'Unknown SDE_TARGET value: '$SDE_TARGET
      echo '';;
d26 6
a31 6
      echo ''
      echo WARNING: Perl 5 requires shared library support, it cannot
      echo be built on releases of CX/UX prior to 7.0 with this hints
      echo file. You\'ll have to do a separate port for the statically
      echo linked COFF environment.
      echo ''
d35 1
a35 1
# Internally at Harris, we use a source management tool which winds up
d64 2
a65 2
# Need to use Harris cc for most of these options to be meaningful (if you
# want to get this to work with gcc, you're on your own :-). Passing
d68 6
a73 4
# loaded on demand (and will try to reference those symbols). The -u
# option to drag 'sigaction' into the perl main program is to make sure
# it gets defined for the posix shared library (for some reason sigaction
# is static, rather than being defined in libc.so.1).
d75 1
a75 1
cc='/bin/cc -Xa'
d97 1
a97 1
cat <<'EOM'
d99 6
a104 4
You will get a failure on lib/posix.t test 16 because ungetc() on
stdin does not work if no characters have been read from stdin.
If you type a character at the terminal where you are running
the tests, you can fool it into thinking it worked.
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d1 2
a2 3
#! /local/gnu/bin/bash
# Hints for the CX/UX 7.1 operating system running on Concurrent (formerly
# Harris) NightHawk machines.  written by Tom.Horsley@@mail.ccur.com
d4 1
a4 1
# This config is setup for dynamic linking and the Concurrent C compiler.
d10 5
a14 5
      echo ''								>&2
      echo WARNING: Do not build perl 5 with the SDE_TARGET set to	>&2
      echo generate coff object - perl 5 must be built in the ELF	>&2
      echo environment.							>&2
      echo ''								>&2
d17 3
a19 3
   *) echo ''								>&2
      echo 'Unknown SDE_TARGET value: '$SDE_TARGET			>&2
      echo ''								>&2 ;;
d25 6
a30 6
      echo ''								>&2
      echo WARNING: Perl 5 requires shared library support, it cannot	>&2
      echo be built on releases of CX/UX prior to 7.0 with this hints	>&2
      echo file. You\'ll have to do a separate port for the statically	>&2
      echo linked COFF environment.					>&2
      echo ''								>&2
d34 1
a34 1
# Internally at Concurrent, we use a source management tool which winds up
d63 2
a64 2
# Need to use Concurrent cc for most of these options to be meaningful (if
# you want to get this to work with gcc, you're on your own :-). Passing
d67 4
a70 6
# loaded on demand (and will try to reference those symbols). The -u option
# to drag 'sigaction' into the perl main program is to make sure it gets
# defined for the posix shared library (for some reason sigaction is static,
# rather than being defined in libc.so.1). The 88110compat option makes sure
# the code will run on both 88100 and 88110 machines. The define is added to
# trigger a work around for a compiler bug which shows up in pp.c.
d72 1
a72 1
cc='/bin/cc -Xa -Qtarget=M88110compat -DCXUX_BROKEN_CONSTANT_CONVERT'
d94 1
a94 1
cat <<'EOM' >&4
d96 4
a99 6
WARNING: If you are using ksh to run the Configure script, you may find it
failing in mysterious ways (such as failing to find library routines which
are known to exist). Configure seems to push ksh beyond its limits
sometimes. Try using env to strip unnecessary things out of the environment
and run Configure with /sbin/sh. That sometimes seems to produce more
accurate results.
@


1.1.1.3
log
@Import of stock perl 5.8.5
@
text
@d72 2
a73 1
# the code will run on both 88100 and 88110 machines.
d75 1
a75 1
cc='/bin/cc -Xa -Qtarget=M88110compat'
@


