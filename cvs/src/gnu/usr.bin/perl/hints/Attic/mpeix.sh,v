head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.34
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.30
	OPENBSD_5_4_BASE:1.7
	PERL_5_16_3:1.1.1.6
	OPENBSD_5_3:1.7.0.28
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.26
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.24
	OPENBSD_5_0:1.7.0.22
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.20
	OPENBSD_4_9_BASE:1.7
	PERL_5_12_2:1.1.1.6
	OPENBSD_4_8:1.7.0.18
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.14
	OPENBSD_4_7_BASE:1.7
	PERL_5_10_1:1.1.1.6
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	PERL_5_10_0:1.1.1.6
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	PERL_5_8_8:1.1.1.6
	OPENBSD_3_9:1.6.0.14
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.12
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.10
	OPENBSD_3_7_BASE:1.6
	PERL_5_8_6:1.1.1.5
	OPENBSD_3_6:1.6.0.8
	OPENBSD_3_6_BASE:1.6
	PERL_5_8_5:1.1.1.5
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.6.0.6
	OPENBSD_3_5_BASE:1.6
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.8
date	2014.03.24.15.05.27;	author afresh1;	state dead;
branches;
next	1.7;

1.7
date	2006.03.28.19.23.04;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.25;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.20;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.05.48;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.39;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.20;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.25;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.25;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.33;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.28;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.23.11;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2006.03.28.18.48.29;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@# Created for 5.003 by Mark Klein, mklein@@dis.com.
# Substantially revised for 5.004_01 by Mark Bixby, markb@@cccd.edu.
# Revised again for 5.004_69 by Mark Bixby, markb@@cccd.edu.
# Revised for 5.6.0 by Mark Bixby, mbixby@@power.net.
# Revised for 5.7.3 by Mark Bixby, mark@@bixby.org.
# Revised for 5.8.0 by Mark Bixby, mark@@bixby.org.
# Revised for 5.8.8/5.9.3 by Ken Hirsch, kenhirsch@@ftml.net
#
osname='mpeix'
osvers=`uname -r | sed -e 's/.[A-Z]\.\([0-9]\)\([0-9]\)\.[0-9][0-9]/\1.\2/'`

#
# Don't use nm.  Instead, we'll use the MPEAUTOCONF environment variable
# to force error for unresolved externals.
# This is slower than nm (about 70 minutes instead of 35 minutes),
# but much more reliable.

usenm='false'
export AUTOCONF=1 MPEAUTOCONF=1

# Work around the broken inline cat bug that corrupts here docs
#
alias -x cat=/bin/cat
#
# Various directory locations.
#
# Which ones of these does Configure get wrong?
test -z "$prefix" && prefix="/$HPACCOUNT/$HPGROUP"
archname='PA-RISC1.1'
bin="$prefix"
installman1dir="$prefix/man/man1"
installman3dir="$prefix/man/man3"
man1dir="$prefix/man/man1"
man3dir="$prefix/man/man3"
perlpath="$prefix/PERL"
scriptdir="$prefix"
startperl="#!$prefix/perl"
startsh='#!/bin/sh'

#
# Compiling.
#
test -z "$cc" && cc='gcc'
cccdlflags='none'
ccdlflags='-Xlinker -WL,xl=/usr/lib/libcurses.sl,/lib/libsvipc.sl,/usr/lib/libsocket.sl,/usr/lib/libstr.sl,/lib/libm.sl,/lib/libc.sl'
ccflags="$ccflags -DMPE -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL"
locincpth="$locincpth /usr/local/include /usr/contrib/include /BIND/CURRENT/include /SYSLOG/PUB"
test -z "$optimize" && optimize="-O2"
ranlib='/bin/true'
# Special compiling options for certain source files.
# But what if you want -g?
regcomp_cflags='optimize=-O'
toke_cflags='ccflags="$ccflags -DARG_ZERO_IS_SCRIPT"'

#
# Linking.
#
# Build a fixed sigsetjmp that can be used in dynamic libraries
# This needs to be compiled with -O2, so I do it here, rather
# than with make
gcc -c -O2 mpeix/mpeix_setjmp.c
lddlflags="-b $PWD/mpeix_setjmp.o"

# Delete bsd and BSD from the library list.  Remove other randomly ordered
# libraries and then re-add them in their proper order (the MPE linker is
# order-sensitive).  Add additional MPE-specific libraries.
for mpe_remove in bind bsd BSD c curses m socket str svipc syslog; do
  set `echo " $libswanted " | sed -e 's/ /  /g' -e "s/ $mpe_remove //"`
  libswanted="$*"
done
libswanted="$libswanted bind syslog curses svipc socket str m c"
loclibpth="$loclibpth /usr/local/lib /usr/contrib/lib /BIND/CURRENT/lib /SYSLOG/PUB"
#
# External functions and data items.
#
# Q: Does Configure *really* get *all* of these wrong?
#
# A: Yes.  There are two MPE problems here.  The 'undef' functions exist on MPE,
# but are merely dummy routines that return ENOTIMPL or ESYSERR.  Since they're
# useless, let's just tell Perl to avoid them.  Also, a few data items are
# 'undef' because while they may exist in structures, they are uninitialized.

d_Gconvert='gcvt((x),(n),(b))'

d_inetaton='undef'

# these fields exist, but are uninitialized
d_pwage='undef'
d_pwcomment='undef'
d_pwgecos='undef'
d_pwpasswd='undef'
d_statblks='undef'

# These functions exist, 
#  but either return ENOSYS/ESYSERR/ENOSYS or work so differently
# that it is not helpful to include them

d_lchown='undef'
d_link='undef'
d_setegid='undef'
d_seteuid='undef'
d_setitimer='undef'
d_setpgid='undef'
d_setsid='undef'


# These are defined in mpeix/mpeix.c
d_gettimeod='define'
d_truncate='define'

# Include files.
#
#??i_gdbm='undef' # the port is currently incomplete

i_termios='undef' # we have termios, but not the full set (just tcget/setattr)

i_time='define'
i_systime='undef'
i_systimek='undef'
timeincl='/usr/include/time.h'
#
# Data types.
#
timetype='time_t'

# Functionality.
#
uselargefiles="$undef"

# Expected functionality provided in mpeix.c.
#

# Help gmake find mpeix.c
test -h mpeix.c || ln -s mpeix/mpeix.c mpeix.c

archobjs='mpeix.o mpeix_setjmp.o'
@


1.7
log
@merge in perl 5.8.8
@
text
@@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@a0 9
# The MPE/iX linker doesn't complain about unresolved symbols, and so the only
# way to test for unresolved symbols in a program is by attempting to run it.
# But this is slow, and fraught with problems, so the better solution is to use
# nm.
#
# MPE/iX lacks a fully functional native nm, so we need to use our fake nm
# script which will extract the symbol info from the native link editor and
# reformat into something nm-like.
#
d7 1
d11 1
d13 8
a20 8
# Force Configure to use our wrapper mpeix/nm script
#
PATH="$PWD/mpeix:$PATH"
nm="$PWD/mpeix/nm"
_nm=$nm
nm_opt='-configperl'
usenm='true'
#
d39 1
d45 3
a47 2
ccflags="$ccflags -DMPE -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL -DIS_SOCKET_CLIB_ITSELF"
locincpth="$locincpth /usr/local/include /usr/contrib/include /BINDFW/CURRENT/include /SYSLOG/PUB"
d54 1
d58 6
a63 1
lddlflags='-b'
d72 1
a72 1
loclibpth="$loclibpth /usr/local/lib /usr/contrib/lib /BINDFW/CURRENT/lib /SYSLOG/PUB"
d82 1
a82 15
#
# The 'define' cases are a bit weirder.  MPE has a libc.a, libc.sl, and two
# special kernel shared libraries, /SYS/PUB/XL and /SYS/PUB/NL.  Much of what
# is in libc.a is duplicated within XL and NL, so when we created libc.sl, we
# omitted the duplicated functions.  Since Configure end ups scanning libc.sl,
# we need to 'define' the functions that had been removed.
#
# We don't want to scan XL or NL because we would find way too many POSIX or
# Unix named functions that are really vanilla MPE functions that do something
# completely different than on POSIX or Unix.
d_crypt='define'
d_dbmclose='undef'
d_difftime='define'
d_dlerror='undef'
d_dlopen='undef'
d84 1
a84 7
d_getnbyaddr='define'
d_getnbyname='define'
d_getpbyname='define'
d_getpbynumber='define'
d_getsbyname='define'
d_getsbyport='define'
d_gettimeod='undef'
d86 2
a87 9
d_link='undef'
d_mblen='define'
d_mbstowcs='define'
d_mbtowc='define'
d_memchr='define'
d_memcmp='define'
d_memcpy='define'
d_memmove='define'
d_memset='define'
d92 8
d105 6
a110 15
d_setvbuf='define'
d_statblks='undef'
d_strchr='define'
d_strcoll='define'
d_strerrm='strerror(e)'
d_strerror='define'
d_strtod='define'
d_strtol='define'
d_strtoul='define'
d_strxfrm='define'
d_syserrlst='define'
d_time='define'
d_wcstombs='define'
d_wctomb='define'
#
d113 2
a114 1
i_gdbm='undef' # the port is currently incomplete
d116 1
d125 1
a125 1
#
d129 1
a129 1
#
a131 1
archobjs='mpeix.o'
d136 1
a136 2
d_gettimeod='define'
d_truncate='define'
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d14 2
d28 4
d35 1
a35 1
test -z "$prefix" && prefix='/PERL/PUB'
d52 1
a52 1
locincpth="$locincpth /usr/local/include /usr/contrib/include /BIND/PUB/include"
d71 1
a71 1
loclibpth="$loclibpth /usr/local/lib /usr/contrib/lib /BIND/PUB/lib /SYSLOG/PUB"
d92 1
d97 7
d109 1
d118 3
d140 1
a152 1
bincompat5005="$undef"
d154 10
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d13 1
d16 1
a16 1
osvers='5.5'  # Isn't there a way to determine this dynamically?
d57 8
a64 4
# What if you want additional libs (e.g. gdbm)?
# This should remove the unwanted libraries from $libswanted and
# add on whatever ones are needed instead.
libs="$libs -lbind -lsyslog -lcurses -lsvipc -lsocket -lm -lc"
d69 1
a69 1
# Does Configure *really* get *all* of these wrong?
d71 14
d122 1
a122 1
i_termios='undef'
d131 5
@


1.3
log
@perl5.005_03 (stock)
@
text
@d15 1
a15 1
osvers='5.5'
d27 2
a28 1
prefix='/PERL/PUB'
d42 1
a42 1
cc='gcc'
d44 3
a46 3
ccflags='-DMPE -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL -DIS_SOCKET_CLIB_ITSELF'
locincpth='/usr/local/include /usr/contrib/include /BIND/PUB/include'
optimize='-O2'
d49 1
d56 5
a60 2
libs='-lbind -lsyslog -lcurses -lsvipc -lsocket -lm -lc'
loclibpth='/usr/local/lib /usr/contrib/lib /BIND/PUB/lib /SYSLOG/PUB'
d63 2
@


1.2
log
@perl 5.004_04
@
text
@d1 13
a13 2
# MPE/IX does not have nm, and the linker doesn't complain
# about unresolved symbols, so these are all filled in by hand.
d15 50
a64 56
osvers='5.0'
alignbytes='8'
ccflags='-D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL'
cc='c89'
optimize='none'
d_safebcpy='undef'
d_safemcpy='undef'
intsize='8'
usemymalloc='y'
d_casti32='undef'
d_castneg='undef'
prefix='/PERL'
privlib='/PERL/PERL/lib'
archlib='/PERL/PERL/lib/mpeix'
clocktype='clock_t'
gidtype='gid_t'
groupstype='gid_t'
lseektype='off_t'
modetype='mode_t'
randbits='15'
ssizetype='ssize_t'
uidtype='uid_t'
d_stdstdio='undef'
i_pwd='undef'
i_grp='undef'
#d_fd_set='undef'
#d_fds_bits='undef'
d_chroot='undef'
d_fchmod='undef'
d_fchown='undef'
d_flock='undef'
d_Gconvert='sprintf((b),"%.*g",(n),(x))'
d_getpgrp2='undef'
d_getprior='undef'
d_killpg='undef'
d_lstat='undef'
d_seekdir='undef'
d_telldir='undef'
d_setpgrp2='undef'
d_setprior='undef'
d_setresgid='undef'
d_setresuid='undef'
d_setrgid='undef'
d_setruid='undef'
d_syscall='undef'
d_truncate='undef'
d_setregid='undef'
d_setreuid='undef'
d_setpgrp='undef'
d_chsize='undef'
d_group='undef'
d_bcmp='undef'
d_bcopy='undef'
d_bzero='undef'
d_attrib='undef'
d_dirnamlen='define'
d66 8
a73 1
d_passwd='undef'
d75 5
d81 15
a95 4
libs='-lsvipc -lsocket -lm -lc'
ranlib='/bin/true'
d_nice='undef'
d_cuserid='undef'
d97 8
a104 2
d_tcgetpgrp='undef'
d_tcsetpgrp='undef'
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
optimize='-g'
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d1 2
a2 13
# The MPE/iX linker doesn't complain about unresolved symbols, and so the only
# way to test for unresolved symbols in a program is by attempting to run it.
# But this is slow, and fraught with problems, so the better solution is to use
# nm.
#
# MPE/iX lacks a fully functional native nm, so we need to use our fake nm
# script which will extract the symbol info from the native link editor and
# reformat into something nm-like.
#
# Created for 5.003 by Mark Klein, mklein@@dis.com.
# Substantially revised for 5.004_01 by Mark Bixby, markb@@cccd.edu.
# Revised again for 5.004_69 by Mark Bixby, markb@@cccd.edu.
#
d4 56
a59 50
osvers='5.5'
#
# Force Configure to use our wrapper mpeix/nm script
#
PATH="$PWD/mpeix:$PATH"
nm="$PWD/mpeix/nm"
_nm=$nm
nm_opt='-configperl'
usenm='true'
#
# Various directory locations.
#
prefix='/PERL/PUB'
archname='PA-RISC1.1'
bin="$prefix"
installman1dir="$prefix/man/man1"
installman3dir="$prefix/man/man3"
man1dir="$prefix/man/man1"
man3dir="$prefix/man/man3"
perlpath="$prefix/PERL"
scriptdir="$prefix"
startperl="#!$prefix/perl"
startsh='#!/bin/sh'
#
# Compiling.
#
cc='gcc'
cccdlflags='none'
ccflags='-DMPE -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL -DIS_SOCKET_CLIB_ITSELF'
locincpth='/usr/local/include /usr/contrib/include /BIND/PUB/include'
optimize='-O2'
ranlib='/bin/true'
# Special compiling options for certain source files.
regcomp_cflags='optimize=-O'
toke_cflags='ccflags="$ccflags -DARG_ZERO_IS_SCRIPT"'
#
# Linking.
#
lddlflags='-b'
libs='-lbind -lsyslog -lcurses -lsvipc -lsocket -lm -lc'
loclibpth='/usr/local/lib /usr/contrib/lib /BIND/PUB/lib /SYSLOG/PUB'
#
# External functions and data items.
#
d_crypt='define'
d_difftime='define'
d_dlerror='undef'
d_dlopen='undef'
d_Gconvert='gcvt((x),(n),(b))'
d_inetaton='undef'
d61 1
a61 8
d_mblen='define'
d_mbstowcs='define'
d_mbtowc='define'
d_memcmp='define'
d_memcpy='define'
d_memmove='define'
d_memset='define'
d_pwage='undef'
a62 5
d_pwgecos='undef'
d_pwpasswd='undef'
d_setpgid='undef'
d_setsid='undef'
d_setvbuf='define'
d64 4
a67 15
d_strchr='define'
d_strcoll='define'
d_strerrm='strerror(e)'
d_strerror='define'
d_strtod='define'
d_strtol='define'
d_strtoul='define'
d_strxfrm='define'
d_syserrlst='define'
d_time='define'
d_wcstombs='define'
d_wctomb='define'
#
# Include files.
#
d69 2
a70 8
i_time='define'
i_systime='undef'
i_systimek='undef'
timeincl='/usr/include/time.h'
#
# Data types.
#
timetype='time_t'
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d15 1
a15 1
osvers='5.5'  # Isn't there a way to determine this dynamically?
d27 1
a27 2
# Which ones of these does Configure get wrong?
test -z "$prefix" && prefix='/PERL/PUB'
d41 1
a41 1
test -z "$cc" && cc='gcc'
d43 3
a45 3
ccflags="$ccflags -DMPE -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL -DIS_SOCKET_CLIB_ITSELF"
locincpth="$locincpth /usr/local/include /usr/contrib/include /BIND/PUB/include"
test -z "$optimize" && optimize="-O2"
a47 1
# But what if you want -g?
d54 2
a55 5
# What if you want additional libs (e.g. gdbm)?
# This should remove the unwanted libraries from $libswanted and
# add on whatever ones are needed instead.
libs="$libs -lbind -lsyslog -lcurses -lsvipc -lsocket -lm -lc"
loclibpth="$loclibpth /usr/local/lib /usr/contrib/lib /BIND/PUB/lib /SYSLOG/PUB"
a57 2
#
# Does Configure *really* get *all* of these wrong?
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@a12 1
# Revised for 5.6.0 by Mark Bixby, mbixby@@power.net.
d15 1
a15 1
osvers=`uname -r | sed -e 's/.[A-Z]\.\([0-9]\)\([0-9]\)\.[0-9][0-9]/\1.\2/'`
d56 4
a59 8
# Delete bsd and BSD from the library list.  Remove other randomly ordered
# libraries and then re-add them in their proper order (the MPE linker is
# order-sensitive).  Add additional MPE-specific libraries.
for mpe_remove in bind bsd BSD c curses m socket str svipc syslog; do
  set `echo " $libswanted " | sed -e 's/ /  /g' -e "s/ $mpe_remove //"`
  libswanted="$*"
done
libswanted="$libswanted bind syslog curses svipc socket str m c"
d64 1
a64 1
# Q: Does Configure *really* get *all* of these wrong?
a65 14
# A: Yes.  There are two MPE problems here.  The 'undef' functions exist on MPE,
# but are merely dummy routines that return ENOTIMPL or ESYSERR.  Since they're
# useless, let's just tell Perl to avoid them.  Also, a few data items are
# 'undef' because while they may exist in structures, they are uninitialized.
#
# The 'define' cases are a bit weirder.  MPE has a libc.a, libc.sl, and two
# special kernel shared libraries, /SYS/PUB/XL and /SYS/PUB/NL.  Much of what
# is in libc.a is duplicated within XL and NL, so when we created libc.sl, we
# omitted the duplicated functions.  Since Configure end ups scanning libc.sl,
# we need to 'define' the functions that had been removed.
#
# We don't want to scan XL or NL because we would find way too many POSIX or
# Unix named functions that are really vanilla MPE functions that do something
# completely different than on POSIX or Unix.
d103 1
a103 1
i_termios='undef' # we have termios, but not the full set (just tcget/setattr)
a111 5
#
# Functionality.
#
bincompat5005="$undef"
uselargefiles="$undef"
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@a13 2
# Revised for 5.7.3 by Mark Bixby, mark@@bixby.org.
# Revised for 5.8.0 by Mark Bixby, mark@@bixby.org.
a25 4
# Work around the broken inline cat bug that corrupts here docs
#
alias -x cat=/bin/cat
#
d29 1
a29 1
test -z "$prefix" && prefix="/$HPACCOUNT/$HPGROUP"
d46 1
a46 1
locincpth="$locincpth /usr/local/include /usr/contrib/include /BINDFW/CURRENT/include /SYSLOG/PUB"
d65 1
a65 1
loclibpth="$loclibpth /usr/local/lib /usr/contrib/lib /BINDFW/CURRENT/lib /SYSLOG/PUB"
a85 1
d_dbmclose='undef'
a89 7
d_getnbyaddr='define'
d_getnbyname='define'
d_getpbyname='define'
d_getpbynumber='define'
d_getsbyname='define'
d_getsbyport='define'
d_gettimeod='undef'
a94 1
d_memchr='define'
a102 3
d_setegid='undef'
d_seteuid='undef'
d_setitimer='undef'
a121 1
i_gdbm='undef' # the port is currently incomplete
d134 1
a135 10
#
# Expected functionality provided in mpeix.c.
#
archobjs='mpeix.o'

# Help gmake find mpeix.c
test -h mpeix.c || ln -s mpeix/mpeix.c mpeix.c

d_gettimeod='define'
d_truncate='define'
@


1.1.1.6
log
@perl 5.8.8 import
@
text
@d1 9
a15 1
# Revised for 5.8.8/5.9.3 by Ken Hirsch, kenhirsch@@ftml.net
a18 1

d20 8
a27 8
# Don't use nm.  Instead, we'll use the MPEAUTOCONF environment variable
# to force error for unresolved externals.
# This is slower than nm (about 70 minutes instead of 35 minutes),
# but much more reliable.

usenm='false'
export AUTOCONF=1 MPEAUTOCONF=1

a45 1

d51 2
a52 3
ccdlflags='-Xlinker -WL,xl=/usr/lib/libcurses.sl,/lib/libsvipc.sl,/usr/lib/libsocket.sl,/usr/lib/libstr.sl,/lib/libm.sl,/lib/libc.sl'
ccflags="$ccflags -DMPE -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_POSIX_JOB_CONTROL"
locincpth="$locincpth /usr/local/include /usr/contrib/include /BIND/CURRENT/include /SYSLOG/PUB"
a58 1

d62 1
a62 6
# Build a fixed sigsetjmp that can be used in dynamic libraries
# This needs to be compiled with -O2, so I do it here, rather
# than with make
gcc -c -O2 mpeix/mpeix_setjmp.c
lddlflags="-b $PWD/mpeix_setjmp.o"

d71 1
a71 1
loclibpth="$loclibpth /usr/local/lib /usr/contrib/lib /BIND/CURRENT/lib /SYSLOG/PUB"
d81 15
a95 1

d97 7
a103 1

d105 9
a113 2

# these fields exist, but are uninitialized
a117 8
d_statblks='undef'

# These functions exist, 
#  but either return ENOSYS/ESYSERR/ENOSYS or work so differently
# that it is not helpful to include them

d_lchown='undef'
d_link='undef'
d123 15
a137 6


# These are defined in mpeix/mpeix.c
d_gettimeod='define'
d_truncate='define'

d140 1
a140 2
#??i_gdbm='undef' # the port is currently incomplete

a141 1

d150 1
a150 1

d154 1
a154 1

d157 1
d162 2
a163 1
archobjs='mpeix.o mpeix_setjmp.o'
@


