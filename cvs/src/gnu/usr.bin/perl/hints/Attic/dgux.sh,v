head	1.13;
access;
symbols
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	PERL_5_18_2:1.1.1.10
	PERL:1.1.1
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	PERL_5_16_3:1.1.1.9
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	PERL_5_12_2:1.1.1.8
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	PERL_5_10_1:1.1.1.7
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	PERL_5_10_0:1.1.1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	PERL_5_8_8:1.1.1.6
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.6
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.5
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.13
date	2014.11.17.20.57.06;	author afresh1;	state dead;
branches;
next	1.12;
commitid	QP75iYx42Uo7mMxO;

1.12
date	2014.03.24.15.05.27;	author afresh1;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.25.20.40.55;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2010.09.24.15.06.58;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.12.18.24.37;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.29.17.36.07;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.24;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.19;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.05.43;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.38;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.08;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.22;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.22;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.30;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.27;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.08.09.17.47.56;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2005.01.15.21.17.04;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2008.09.29.17.18.27;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2010.09.24.14.48.55;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2014.03.24.14.59.02;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@# This is a hints file for DGUX, which is EMC's Data General's Unix.  It 
# was originally developed with version 5.4.3.10 of the OS, and then was
# later updated running under version 4.11.2 (running on m88k hardware).
# The gross features should work with versions going back to 2.nil but
# some tweaking will probably be necessary.
#
# DGUX is an SVR4 derivative.  It ships with gcc as the standard
# compiler.  Since version 3.0 it has shipped with Perl 4.036
# installed in /usr/bin, which is kind of neat.  Be careful when you
# install that you don't overwrite the system version, though (by
# answering yes to the question about installing perl as /usr/bin/perl),
# as it would suck to try to get support if the vendor learned that you
# were physically replacing the system binaries.
#
# -Roderick Schertler <roderick@@argon.org>

# The standard system compiler is gcc, but invoking it as cc changes its
# behavior.  I have to pick one name or the other so I can get the
# dynamic loading switches right (they vary depending on this).  I'm
# picking gcc because there's no way to get at the optimization options
# and so on when you call it cc.

##########################################
# Modified by Takis Psarogiannakopoulos
# University of Cambridge
# Centre for Mathematical Sciences
# Department of Pure Mathematics
# Wilberforce road
# Cambridge CB3 0WB , UK
# e-mail <takis@@XFree86.Org>
# Use GCC-2.95.2/3 rev (DG/UX) for threads
# This compiler supports the -pthread switch
# to link correctly DG/UX 's -lthread.
# March 2002
###########################################

cc=gcc
ccflags="-DDGUX -D_DGUX_SOURCE"
# Debug build. If using GNU as,ld use the flag -gstabs+
# ccflags="-g -mstandard -DDGUX -D_DGUX_SOURCE -DDEBUGGING"
# Dummy ; always compile with -O2 on GCC 2.95.2/3 rev (DG/UX)
# even if you debugging the program!
optimize="-mno-legend -O2"

archname="ix86-dgux"
libpth="/usr/lib"

#####################################
# <takis@@XFree86.Org>
# Change this if you want.
# prefix =/usr/local
#####################################

prefix=/usr/local
perlpath="$prefix/bin/perl518"
startperl="#! $prefix/bin/perl518"
privlib="$prefix/lib/perl518"
man1dir="$prefix/man/man1"
man3dir="$prefix/man/man3"

sitearch="$prefix/lib/perl518/$archname"
sitelib="$prefix/lib/perl518"

#Do not overwrite by default /usr/bin/perl of DG/UX
installusrbinperl="$undef"

# Configure may fail to find lstat()
# function in <sys/stat.h>.
d_lstat='define'

# Internal (perl) malloc is causing serious problems and
# test failures in DG/UX. Most notable Embed.t 
# So for perl-5.7.3 and on do NOT use. 
# I have no time to investigate more.
# <takis@@XFree86.Org>

case "$usemymalloc" in
'') usemymalloc='n' ;;
esac

case "$uselongdouble" in
'') uselongdouble='y' ;;
esac

#usevfork=true
usevfork=false

# DG has this thing set up with symlinks which point to different places
# depending on environment variables (see elink(5)) and the compiler and
# related tools use them to access different development environments
# (COFF, ELF, m88k BCS and so on), see sde(5).  The upshot, however, is
# that when a normal program tries to access one of these elinks it sees
# no such file (like stat()ting a mis-directed symlink).  Setting
# $plibpth to explicitly include the place to which the elinks point
# allows Configure to find libraries which vary based on the development
# environment.
#
# Starting with version 4.10 (the first time the OS supported Intel
# hardware) all libraries are accessed with this mechanism.
#
# The default $TARGET_BINARY_INTERFACE changed with version 4.10.  The
# system now comes with a link named /usr/sde/default which points to
# the proper entry, but older versions lacked this and used m88kdgux
# directly.

: && sde_path=${SDE_PATH:-/usr}/sde	# hide from Configure
while : # dummy loop
do
    if [ -n "$TARGET_BINARY_INTERFACE" ]
	then set X "$TARGET_BINARY_INTERFACE"
	else set X default dg m88k_dg ix86_dg m88kdgux m88kdguxelf
    fi
    shift
    default_sde=$1
    for sde
    do
	[ -d "$sde_path/$sde" ] && break 2
    done
    cat <<END >&2

NOTE:  I can't figure out what SDE is used by default on this machine (I
didn't find a likely directory under $sde_path).  This is bad news.  If
this is a R4.10 or newer system I'm not going to be able to find any of
your libraries, if this system is R3.10 or older I won't be able to find
the math library.  You should re-run Configure with the environment
variable TARGET_BINARY_INTERFACE set to the proper value for this
machine, see sde(5) and the notes in hints/dgux.sh.

END
    sde=$default_sde
    break
done

plibpth="$plibpth $sde_path/$sde/usr/lib"
unset sde_path default_sde sde

#####################################
# <takis@@XFree86.Org>
#####################################

libperl="libperl518.so"

# Many functions (eg, gethostent(), killpg(), getpriority(), setruid()
# dbm_*(), and plenty more) are defined in -ldgc.  Usually you don't
# need to know this (it seems that libdgc.so is searched automatically
# by ld), but Configure needs to check it otherwise it will report all
# those functions as missing.

#####################################
# <takis@@XFree86.Org>
#####################################

# libswanted="dgc gdbm $libswanted"
#libswanted="dbm posix $libswanted"
# Do *NOT* add there the malloc native 
# DG/UX library!
libswanted="dbm posix resolv socket nsl dl m"

#####################################
# <takis@@XFree86.Org>
#####################################

mydomain='.localhost'
cf_by=`(whoami) 2>/dev/null`
cf_email="$cf_by@@localhost"

# Dynamic loading works using the dlopen() functions.  Note that dlfcn.h
# used to be broken, it declared _dl*() rather than dl*().  This was the
# case up to 3.10, it has been fixed in 4.11.  I'm not sure if it was
# fixed in 4.10.  If you have the older header just ignore the warnings
# (since pointers and integers have the same format on m88k).

# usedl=true
usedl=false

# For cc rather than gcc the flags would be `-K PIC' for compiling and
# -G for loading.  I haven't tested this.

#####################################
# <takis@@XFree86.Org>
# Use -fPIC instead -fpic 
#####################################

cccdlflags=-fPIC
#We must use gcc
ld="gcc"
lddlflags="-shared"

############################################################################
# DGUX Posix 4A Draft 10 Thread support
# <takis@@XFree86.Org>
# use Configure -Dusethreads to enable
############################################################################

cat > UU/usethreads.cbu <<'EOCBU'
case "$usethreads" in
$define|true|[yY]*)
	ccflags="$ccflags"
	# DG/UX has this for sure! Main Configure fails to
	# detect it but it is needed!
	d_pthread_atfork='define'
	shift
	# DG/UX's sched_yield is in -lrte
	# Do *NOT* add there the malloc native 
	# DG/UX library!
	libswanted="dbm posix resolv socket nsl dl m rte"
	archname="ix86-dgux-thread"
	sitearch="$prefix/lib/perl518/$archname"
	sitelib="$prefix/lib/perl518"
  case "$cc" in
	*gcc*)
	   #### Use GCC -2.95.2/3 rev (DG/UX) and -pthread
	   #### Otherwise take out the switch -pthread 
	   #### And add manually the -D_POSIX4A_DRAFT10_SOURCE flag.
	   ld="gcc"
	   ccflags="$ccflags -D_POSIX4A_DRAFT10_SOURCE"
	   # Debug build : use -DS flag on command line perl
	   # ccflags="$ccflags -g -mstandard -DDEBUGGING -D_POSIX4A_DRAFT10_SOURCE -pthread"
	   cccdlflags='-fPIC'
	   lddlflags="-shared"
	   #### Use GCC -2.95.2/3 rev (DG/UX) and -pthread
	   #### Otherwise take out the switch -pthread
	   #### And add manually the -lthread library.
	   ldflags="$ldflags -pthread"
	;;

	*)
	   echo "Not supported DG/UX cc and threads !"
	;;
  esac
esac
EOCBU

# "./Configure -d" can't figure this out easily
d_suidsafe='define'

###################################################
@


1.12
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@@


1.11
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d55 3
a57 3
perlpath="$prefix/bin/perl516"
startperl="#! $prefix/bin/perl516"
privlib="$prefix/lib/perl516"
d61 2
a62 2
sitearch="$prefix/lib/perl516/$archname"
sitelib="$prefix/lib/perl516"
d141 1
a141 1
libperl="libperl516.so"
d208 2
a209 2
	sitearch="$prefix/lib/perl516/$archname"
	sitelib="$prefix/lib/perl516"
@


1.10
log
@merge in perl 5.12.2 plus local changes
@
text
@a0 2
# $Id: dgux.sh,v 1.9 2001-05-07 00:06:00-05 Takis Exp $

d25 1
a25 1
# Universirty of Cambridge
d55 3
a57 3
perlpath="$prefix/bin/perl512"
startperl="#! $prefix/bin/perl512"
privlib="$prefix/lib/perl512"
d61 2
a62 2
sitearch="$prefix/lib/perl512/$archname"
sitelib="$prefix/lib/perl512"
d141 1
a141 1
libperl="libperl512.so"
d208 2
a209 2
	sitearch="$prefix/lib/perl512/$archname"
	sitelib="$prefix/lib/perl512"
@


1.9
log
@Merge in perl 5.10.1
@
text
@d57 3
a59 3
perlpath="$prefix/bin/perl510"
startperl="#! $prefix/bin/perl510"
privlib="$prefix/lib/perl510"
d63 2
a64 2
sitearch="$prefix/lib/perl510/$archname"
sitelib="$prefix/lib/perl510"
d143 1
a143 1
libperl="libperl510.so"
d210 2
a211 2
	sitearch="$prefix/lib/perl510/$archname"
	sitelib="$prefix/lib/perl510"
@


1.8
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d57 3
a59 3
perlpath="$prefix/bin/perl58"
startperl="#! $prefix/bin/perl58"
privlib="$prefix/lib/perl58"
d63 2
a64 2
sitearch="$prefix/lib/perl58/$archname"
sitelib="$prefix/lib/perl58"
d143 1
a143 1
libperl="libperl58.so"
d210 2
a211 2
	sitearch="$prefix/lib/perl58/$archname"
	sitelib="$prefix/lib/perl58"
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d1 1
a1 1
# $Id: dgux.sh,v 1.8 1996-11-29 18:16:43-05 roderick Exp $
d3 2
a4 2
# This is a hints file for DGUX, which is Data General's Unix.  It was
# originally developed with version 5.4.3.10 of the OS, and then was
d9 1
a9 1
# DGUX is a SVR4 derivative.  It ships with gcc as the standard
a18 36
# Here are the things from some old DGUX hints files which are different
# from what's in here now.  I don't know the exact reasons that most of
# these settings were in the hints files, presumably they can be chalked
# up to old Configure inadequacies and changes in the OS headers and the
# like.  These settings might make a good place to start looking if you
# have problems.
#
# This was specified the the 4.036 hints file.  That hints file didn't
# say what version of the OS it was developed using.
#
#     cppstdin='/lib/cpp'
#
# The 4.036 and 5.001 hints files both contained these.  The 5.001 hints
# file said it was developed with version 2.01 of DGUX.
#
#     gidtype='gid_t'
#     groupstype='gid_t'
#     uidtype='uid_t'
#     d_index='define'
#     cc='gcc'
#
# These were peculiar to the 5.001 hints file.
#
#     ccflags='-D_POSIX_SOURCE -D_DGUX_SOURCE'
#
#     # an ugly hack, since the Configure test for "gcc -P -" hangs.
#     # can't just use 'cppstdin', since our DG has a broken cppstdin :-(
#     cppstdin=`cd ..; pwd`/cppstdin
#     cpprun=`cd ..; pwd`/cppstdin
#
# One last note:  The 5.001 hints file said "you don't want to use
# /usr/ucb/cc" in the place at which it set cc to gcc.  That in
# particular baffles me, as I used to have 2.01 loaded and my memory
# is telling me that even then /usr/ucb was a symlink to /usr/bin.


d24 61
a84 7
case $cc in
    '')
	cc=gcc
	case $optimize in
	    '') optimize=-O2;;
	esac
	;;
d87 2
a88 1
usevfork=true
d139 6
d150 18
a167 1
libswanted="dgc $libswanted"
d174 4
a177 1
usedl=true
d180 60
a239 2
cccdlflags=-fpic
lddlflags=-shared
@


1.4
log
@perl-5.6.0 + local changes
@
text
@@


1.3
log
@perl5.005_03 (stock)
@
text
@a16 4
# Be aware that if you opt to use dynamic loading you'll need to set
# your $LD_LIBRARY_PATH to include the source directory when you build,
# test and install the software.
#
a17 1

@


1.2
log
@perl 5.004_04
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Id: dgux.sh,v 1.4 1996/01/18 03:40:38 roderick Exp $
d4 4
a7 4
# developed using version 5.4.3.10 of the OS.  I think the gross
# features should work with versions 5.4.2 through 5.4.4.11 with perhaps
# minor tweaking, but I don't have any older or newer versions installed
# at the moment with which to test it.
d10 1
a10 1
# compiler.  Since version 5.4.3.0 it has shipped with Perl 4.036
d21 1
a21 1
# -Roderick Schertler <roderick@@gate.net>
d37 1
a37 1
# file said it was developed with version 5.4.2.01 of DGUX.
d56 1
a56 1
# particular baffles me, as I used to have 5.4.2.01 loaded and my memory
d85 39
a123 2
plibpth="$plibpth \
    ${SDE_PATH:-/usr}/sde/${TARGET_BINARY_INTERFACE:-m88kdgux}/usr/lib"
d133 4
a136 4
# is broken, it declares _dl*() rather than dl*().  (This is in my
# I'd-open-a-ticket-about-this-if-it-weren't-going-to-be-such-a-hassle
# file.)  You can ignore the warnings caused by the missing
# declarations, they're harmless.
a141 19
# The Perl library has to be built as a shared library so that dynamic
# loading will work (otherwise code loaded with dlopen() won't be able
# to reference symbols in the main part of perl).  Note that since
# Configure doesn't normally prompt about $d_shrplib this will cause a
# `Whoa there!'.  This is normal, just keep the recommended value.  A
# consequence of all this is that you've got to include the source
# directory in your LD_LIBRARY_PATH when you're building and testing
# perl.
d_shrplib=define

# The system has a function called dg_flock() which is an flock()
# emulation built using fcntl() locking.  Perl currently comes with an
# flock() emulation which uses lockf(), it should eventually also
# include an fcntl() emulation of its own.  Until that happens I
# recommend using DG's emulation (and ignoring the `WHOA THERE!' this
# causes), it provides semantics closer to the original than the lockf()
# emulation.
ccflags="$ccflags -Dflock=dg_flock"
d_flock=define
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d1 1
a1 1
# $Id: dgux.sh,v 1.8 1996-11-29 18:16:43-05 roderick Exp $
d4 4
a7 4
# originally developed with version 5.4.3.10 of the OS, and then was
# later updated running under version 4.11.2 (running on m88k hardware).
# The gross features should work with versions going back to 2.nil but
# some tweaking will probably be necessary.
d10 1
a10 1
# compiler.  Since version 3.0 it has shipped with Perl 4.036
d21 1
a21 1
# -Roderick Schertler <roderick@@argon.org>
d37 1
a37 1
# file said it was developed with version 2.01 of DGUX.
d56 1
a56 1
# particular baffles me, as I used to have 2.01 loaded and my memory
d85 2
a86 39
#
# Starting with version 4.10 (the first time the OS supported Intel
# hardware) all libraries are accessed with this mechanism.
#
# The default $TARGET_BINARY_INTERFACE changed with version 4.10.  The
# system now comes with a link named /usr/sde/default which points to
# the proper entry, but older versions lacked this and used m88kdgux
# directly.

: && sde_path=${SDE_PATH:-/usr}/sde	# hide from Configure
while : # dummy loop
do
    if [ -n "$TARGET_BINARY_INTERFACE" ]
	then set X "$TARGET_BINARY_INTERFACE"
	else set X default dg m88k_dg ix86_dg m88kdgux m88kdguxelf
    fi
    shift
    default_sde=$1
    for sde
    do
	[ -d "$sde_path/$sde" ] && break 2
    done
    cat <<END >&2

NOTE:  I can't figure out what SDE is used by default on this machine (I
didn't find a likely directory under $sde_path).  This is bad news.  If
this is a R4.10 or newer system I'm not going to be able to find any of
your libraries, if this system is R3.10 or older I won't be able to find
the math library.  You should re-run Configure with the environment
variable TARGET_BINARY_INTERFACE set to the proper value for this
machine, see sde(5) and the notes in hints/dgux.sh.

END
    sde=$default_sde
    break
done

plibpth="$plibpth $sde_path/$sde/usr/lib"
unset sde_path default_sde sde
d96 4
a99 4
# used to be broken, it declared _dl*() rather than dl*().  This was the
# case up to 3.10, it has been fixed in 4.11.  I'm not sure if it was
# fixed in 4.10.  If you have the older header just ignore the warnings
# (since pointers and integers have the same format on m88k).
d105 19
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d17 4
d22 1
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d1 1
a1 1
# $Id: dgux.sh,v 1.9 2001-05-07 00:06:00-05 Takis Exp $
d3 2
a4 2
# This is a hints file for DGUX, which is EMC's Data General's Unix.  It 
# was originally developed with version 5.4.3.10 of the OS, and then was
d9 1
a9 1
# DGUX is an SVR4 derivative.  It ships with gcc as the standard
d19 36
d60 7
a66 57

##########################################
# Modified by Takis Psarogiannakopoulos
# Universirty of Cambridge
# Centre for Mathematical Sciences
# Department of Pure Mathematics
# Wilberforce road
# Cambridge CB3 0WB , UK
# e-mail <takis@@XFree86.Org>
# Use GCC-2.95.2/3 rev (DG/UX) for threads
# This compiler supports the -pthread switch
# to link correctly DG/UX 's -lthread.
# March 2002
###########################################

cc=gcc
ccflags="-DDGUX -D_DGUX_SOURCE"
# Debug build. If using GNU as,ld use the flag -gstabs+
# ccflags="-g -mstandard -DDGUX -D_DGUX_SOURCE -DDEBUGGING"
# Dummy ; always compile with -O2 on GCC 2.95.2/3 rev (DG/UX)
# even if you debugging the program!
optimize="-mno-legend -O2"

archname="ix86-dgux"
libpth="/usr/lib"

#####################################
# <takis@@XFree86.Org>
# Change this if you want.
# prefix =/usr/local
#####################################

prefix=/usr/local
perlpath="$prefix/bin/perl58"
startperl="#! $prefix/bin/perl58"
privlib="$prefix/lib/perl58"
man1dir="$prefix/man/man1"
man3dir="$prefix/man/man3"

sitearch="$prefix/lib/perl58/$archname"
sitelib="$prefix/lib/perl58"

#Do not overwrite by default /usr/bin/perl of DG/UX
installusrbinperl="$undef"

# Configure may fail to find lstat()
# function in <sys/stat.h>.
d_lstat='define'

# Internal (perl) malloc is causing serious problems and
# test failures in DG/UX. Most notable Embed.t 
# So for perl-5.7.3 and on do NOT use. 
# I have no time to investigate more.
# <takis@@XFree86.Org>

case "$usemymalloc" in
'') usemymalloc='n' ;;
d69 1
a69 6
case "$uselongdouble" in
'') uselongdouble='y' ;;
esac

#usevfork=true
usevfork=false
a119 6
#####################################
# <takis@@XFree86.Org>
#####################################

libperl="libperl58.so"

d125 1
a125 18

#####################################
# <takis@@XFree86.Org>
#####################################

# libswanted="dgc gdbm $libswanted"
#libswanted="dbm posix $libswanted"
# Do *NOT* add there the malloc native 
# DG/UX library!
libswanted="dbm posix resolv socket nsl dl m"

#####################################
# <takis@@XFree86.Org>
#####################################

mydomain='.localhost'
cf_by=`(whoami) 2>/dev/null`
cf_email="$cf_by@@localhost"
d132 1
a132 4

# usedl=true
usedl=false

d135 2
a136 60

#####################################
# <takis@@XFree86.Org>
# Use -fPIC instead -fpic 
#####################################

cccdlflags=-fPIC
#We must use gcc
ld="gcc"
lddlflags="-shared"

############################################################################
# DGUX Posix 4A Draft 10 Thread support
# <takis@@XFree86.Org>
# use Configure -Dusethreads to enable
############################################################################

cat > UU/usethreads.cbu <<'EOCBU'
case "$usethreads" in
$define|true|[yY]*)
	ccflags="$ccflags"
	# DG/UX has this for sure! Main Configure fails to
	# detect it but it is needed!
	d_pthread_atfork='define'
	shift
	# DG/UX's sched_yield is in -lrte
	# Do *NOT* add there the malloc native 
	# DG/UX library!
	libswanted="dbm posix resolv socket nsl dl m rte"
	archname="ix86-dgux-thread"
	sitearch="$prefix/lib/perl58/$archname"
	sitelib="$prefix/lib/perl58"
  case "$cc" in
	*gcc*)
	   #### Use GCC -2.95.2/3 rev (DG/UX) and -pthread
	   #### Otherwise take out the switch -pthread 
	   #### And add manually the -D_POSIX4A_DRAFT10_SOURCE flag.
	   ld="gcc"
	   ccflags="$ccflags -D_POSIX4A_DRAFT10_SOURCE"
	   # Debug build : use -DS flag on command line perl
	   # ccflags="$ccflags -g -mstandard -DDEBUGGING -D_POSIX4A_DRAFT10_SOURCE -pthread"
	   cccdlflags='-fPIC'
	   lddlflags="-shared"
	   #### Use GCC -2.95.2/3 rev (DG/UX) and -pthread
	   #### Otherwise take out the switch -pthread
	   #### And add manually the -lthread library.
	   ldflags="$ldflags -pthread"
	;;

	*)
	   echo "Not supported DG/UX cc and threads !"
	;;
  esac
esac
EOCBU

# "./Configure -d" can't figure this out easily
d_suidsafe='define'

###################################################
@


1.1.1.5
log
@Import of stock perl 5.8.5
@
text
@d1 1
a1 1
# $Id: dgux.sh,v 1.7 2003/12/03 03:02:34 millert Exp $
@


1.1.1.6
log
@perl 5.8.6 from CPAN
@
text
@d1 1
a1 1
# $Id: dgux.sh,v 1.9 2001-05-07 00:06:00-05 Takis Exp $
@


1.1.1.7
log
@import perl 5.10.0 from CPAN
@
text
@d57 3
a59 3
perlpath="$prefix/bin/perl510"
startperl="#! $prefix/bin/perl510"
privlib="$prefix/lib/perl510"
d63 2
a64 2
sitearch="$prefix/lib/perl510/$archname"
sitelib="$prefix/lib/perl510"
d143 1
a143 1
libperl="libperl510.so"
d210 2
a211 2
	sitearch="$prefix/lib/perl510/$archname"
	sitelib="$prefix/lib/perl510"
@


1.1.1.8
log
@Perl 5.12.2 from CPAN
@
text
@d57 3
a59 3
perlpath="$prefix/bin/perl512"
startperl="#! $prefix/bin/perl512"
privlib="$prefix/lib/perl512"
d63 2
a64 2
sitearch="$prefix/lib/perl512/$archname"
sitelib="$prefix/lib/perl512"
d143 1
a143 1
libperl="libperl512.so"
d210 2
a211 2
	sitearch="$prefix/lib/perl512/$archname"
	sitelib="$prefix/lib/perl512"
@


1.1.1.9
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d1 2
d27 1
a27 1
# University of Cambridge
d57 3
a59 3
perlpath="$prefix/bin/perl516"
startperl="#! $prefix/bin/perl516"
privlib="$prefix/lib/perl516"
d63 2
a64 2
sitearch="$prefix/lib/perl516/$archname"
sitelib="$prefix/lib/perl516"
d143 1
a143 1
libperl="libperl516.so"
d210 2
a211 2
	sitearch="$prefix/lib/perl516/$archname"
	sitelib="$prefix/lib/perl516"
@


1.1.1.10
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d55 3
a57 3
perlpath="$prefix/bin/perl518"
startperl="#! $prefix/bin/perl518"
privlib="$prefix/lib/perl518"
d61 2
a62 2
sitearch="$prefix/lib/perl518/$archname"
sitelib="$prefix/lib/perl518"
d141 1
a141 1
libperl="libperl518.so"
d208 2
a209 2
	sitearch="$prefix/lib/perl518/$archname"
	sitelib="$prefix/lib/perl518"
@


