head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.3.0.12
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.6
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.8
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2017.02.05.00.31.52;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2009.10.12.18.10.33;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.10.33;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.06.27;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.58.45;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@/*    mydtrace.h
 *
 *    Copyright (C) 2008, 2010, 2011 by Larry Wall and others
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 *
 *	Provides macros that wrap the various DTrace probes we use. We add
 *	an extra level of wrapping to encapsulate the _ENABLED tests.
 */

#if defined(USE_DTRACE) && defined(PERL_CORE)

#  include "perldtrace.h"

#  define PERL_DTRACE_PROBE_ENTRY(cv)               \
    if (PERL_SUB_ENTRY_ENABLED())                   \
        Perl_dtrace_probe_call(aTHX_ cv, TRUE);

#  define PERL_DTRACE_PROBE_RETURN(cv)              \
    if (PERL_SUB_ENTRY_ENABLED())                   \
        Perl_dtrace_probe_call(aTHX_ cv, FALSE);

#  define PERL_DTRACE_PROBE_FILE_LOADING(name)      \
    if (PERL_SUB_ENTRY_ENABLED())                   \
        Perl_dtrace_probe_load(aTHX_ name, TRUE);

#  define PERL_DTRACE_PROBE_FILE_LOADED(name)       \
    if (PERL_SUB_ENTRY_ENABLED())                   \
        Perl_dtrace_probe_load(aTHX_ name, FALSE);

#  define PERL_DTRACE_PROBE_OP(op)                  \
    if (PERL_OP_ENTRY_ENABLED())                    \
        Perl_dtrace_probe_op(aTHX_ op);

#  define PERL_DTRACE_PROBE_PHASE(phase)            \
    if (PERL_OP_ENTRY_ENABLED())                    \
        Perl_dtrace_probe_phase(aTHX_ phase);

#else

/* NOPs */
#  define PERL_DTRACE_PROBE_ENTRY(cv)
#  define PERL_DTRACE_PROBE_RETURN(cv)
#  define PERL_DTRACE_PROBE_FILE_LOADING(cv)
#  define PERL_DTRACE_PROBE_FILE_LOADED(cv)
#  define PERL_DTRACE_PROBE_OP(op)
#  define PERL_DTRACE_PROBE_PHASE(phase)

#endif

/*
 * ex: set ts=8 sts=4 sw=4 et:
 */
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
 *    Copyright (C) 2008, by Larry Wall and others
d16 23
a38 9
#  define ENTRY_PROBE(func, file, line) 	\
    if (PERL_SUB_ENTRY_ENABLED()) {		\
	PERL_SUB_ENTRY(func, file, line); 	\
    }

#  define RETURN_PROBE(func, file, line)	\
    if (PERL_SUB_RETURN_ENABLED()) {		\
	PERL_SUB_RETURN(func, file, line); 	\
    }
d43 6
a48 2
#  define ENTRY_PROBE(func, file, line)
#  define RETURN_PROBE(func, file, line)
d53 1
a53 7
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 *
 * ex: set ts=8 sts=4 sw=4 noet:
@


1.1.1.1
log
@import perl 5.10.1
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d3 1
a3 1
 *    Copyright (C) 2008, 2010, 2011 by Larry Wall and others
d16 3
a18 11
#  if defined(STAP_PROBE_ADDR) && !defined(DEBUGGING)

/* SystemTap 1.2 uses a construct that chokes on passing a char array
 * as a char *, in this case hek_key in struct hek.  Workaround it
 * with a temporary.
 */

#    define ENTRY_PROBE(func, file, line, stash)  	\
    if (PERL_SUB_ENTRY_ENABLED()) {	        	\
	const char *tmp_func = func;			\
	PERL_SUB_ENTRY(tmp_func, file, line, stash); 	\
d21 3
a23 23
#    define RETURN_PROBE(func, file, line, stash) 	\
    if (PERL_SUB_RETURN_ENABLED()) {    		\
	const char *tmp_func = func;			\
	PERL_SUB_RETURN(tmp_func, file, line, stash);	\
    }

#  else

#    define ENTRY_PROBE(func, file, line, stash) 	\
    if (PERL_SUB_ENTRY_ENABLED()) {	        	\
	PERL_SUB_ENTRY(func, file, line, stash); 	\
    }

#    define RETURN_PROBE(func, file, line, stash)	\
    if (PERL_SUB_RETURN_ENABLED()) {    		\
	PERL_SUB_RETURN(func, file, line, stash); 	\
    }

#  endif

#  define PHASE_CHANGE_PROBE(new_phase, old_phase)      \
    if (PERL_PHASE_CHANGE_ENABLED()) {                  \
	PERL_PHASE_CHANGE(new_phase, old_phase);        \
d29 2
a30 3
#  define ENTRY_PROBE(func, file, line, stash)
#  define RETURN_PROBE(func, file, line, stash)
#  define PHASE_CHANGE_PROBE(new_phase, old_phase)
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a34 12
#    define LOADING_FILE_PROBE(name) 	                        \
    if (PERL_LOADING_FILE_ENABLED()) {    		        \
	const char *tmp_name = name;			\
	PERL_LOADING_FILE(tmp_name);	                        \
    }

#    define LOADED_FILE_PROBE(name) 	                        \
    if (PERL_LOADED_FILE_ENABLED()) {    		        \
	const char *tmp_name = name;			\
	PERL_LOADED_FILE(tmp_name);	                        \
    }

a46 10
#    define LOADING_FILE_PROBE(name)	                        \
    if (PERL_LOADING_FILE_ENABLED()) {    		        \
	PERL_LOADING_FILE(name); 	                                \
    }

#    define LOADED_FILE_PROBE(name)	                        \
    if (PERL_LOADED_FILE_ENABLED()) {    		        \
	PERL_LOADED_FILE(name); 	                                \
    }

a48 5
#  define OP_ENTRY_PROBE(name)	                \
    if (PERL_OP_ENTRY_ENABLED()) {    		        \
	PERL_OP_ENTRY(name); 	                        \
    }

a59 3
#  define OP_ENTRY_PROBE(name)
#  define LOADING_FILE_PROBE(name)
#  define LOADED_FILE_PROBE(name)
d67 1
a67 1
 * indent-tabs-mode: nil
d70 1
a70 1
 * ex: set ts=8 sts=4 sw=4 et:
@


