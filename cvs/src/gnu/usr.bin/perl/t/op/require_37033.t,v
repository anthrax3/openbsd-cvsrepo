head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.20;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.09.36;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.09.36;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl -w

# Check that require doesn't leave the handle it uses open, if it happens that
# the handle it opens gets file descriptor 0. RT #37033.

chdir 't' if -d 't';
require './test.pl';
@@INC = 'lib';

use strict;

sub test_require {
    my ($state, $want) = @@_;
    delete $INC{'test_use_14937.pm'};
    open my $fh, '<', 'README' or die "Can't open README: $!";
    my $fileno = fileno $fh;
    if (defined $want) {
	is($fileno, $want,
	   "file handle has correct numeric file descriptor $state");
    } else {
	like($fileno, qr/\A\d+\z/,
	     "file handle has a numeric file descriptor $state");
    }
    close $fh or die;

    is($INC{'test_use_14937.pm'}, undef, "test_use_14937 isn't loaded $state");
    require test_use_14937;
    isnt($INC{'test_use_14937.pm'}, undef, "test_use_14937 is loaded $state");

    open $fh, '<', 'README' or die "Can't open README: $!";
    is(fileno $fh, $fileno,
       "file handle has the same numeric file descriptor $state");
    close $fh or die;
}

is(fileno STDIN, 0, 'STDIN is open on file descriptor 0');
test_require('(STDIN open)');

close STDIN or die "Can't close STDIN: $!";

is(fileno STDIN, undef, 'STDIN is closed');
test_require('(STDIN closed)', 0);

done_testing();
@


1.1
log
@Initial revision
@
text
@a1 1
use strict;
d6 1
d9 2
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
