head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	PERL_5_24_2:1.1.1.12
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.12
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.6
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	PERL_5_20_2:1.1.1.11
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	PERL_5_20_1:1.1.1.11
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	PERL_5_18_2:1.1.1.11
	PERL:1.1.1
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	PERL_5_16_3:1.1.1.10
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	PERL_5_12_2:1.1.1.9
	OPENBSD_4_8:1.9.0.8
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	PERL_5_10_1:1.1.1.8
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	PERL_5_10_0:1.1.1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	PERL_5_8_8:1.1.1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.6
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.6
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.13
date	2017.02.05.00.32.20;	author afresh1;	state Exp;
branches;
next	1.12;
commitid	cxJ08BvJA9Pt2PTM;

1.12
date	2014.03.24.15.05.33;	author afresh1;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.25.20.40.59;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2010.09.24.15.07.08;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.29.17.36.19;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.28.19.23.12;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.48;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.37;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.36.19;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.08.26;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.36;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.08.05.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.13.19;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.13.19;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.41.47;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.10.49;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.25.41;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.44.32;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2006.03.28.18.49.45;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2008.09.29.17.19.01;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2010.09.24.14.49.18;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2013.03.25.20.09.36;	author sthen;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.03.24.14.59.10;	author afresh1;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2017.08.14.13.46.24;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.13
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!./perl -w

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require './test.pl';
}

plan tests => 17;

unless (eval {
    require File::Path;
    File::Path::rmtree('blurfl') if -d 'blurfl';
    1
}) {
    diag("$0 may fail if its temporary directory remains from a previous run");
    diag("Attempted to load File::Path to delete directory t/blurfl - error was\n$@@");
    diag("\nIf you have problems, please manually delete t/blurfl");
}    

# tests 3 and 7 rather naughtily expect English error messages
$ENV{'LC_ALL'} = 'C';
$ENV{LANGUAGE} = 'C'; # GNU locale extension

sub errno_or_skip {
    SKIP: {
	if (is_miniperl && !eval { local $!; require Errno }) {
	    skip "Errno not built yet", 1;
	}
	eval "ok($_[0])";
    }
}

ok(mkdir('blurfl',0777));
ok(!mkdir('blurfl',0777));
errno_or_skip('$!{EEXIST} || $! =~ /cannot move|exist|denied|unknown/i');
ok(-d 'blurfl');
ok(rmdir('blurfl'));
ok(!rmdir('blurfl'));
errno_or_skip('
    $!{ENOENT}
       || $! =~ /cannot find|such|exist|not found|not a directory|unknown/i
');
ok(mkdir('blurfl'));
ok(rmdir('blurfl'));

# trailing slashes will be removed before the system call to mkdir
ok(mkdir('blurfl///'));
ok(-d 'blurfl');
ok(rmdir('blurfl///'));
ok(!-d 'blurfl');

# test default argument

$_ = 'blurfl';
ok(mkdir);
ok(-d);
ok(rmdir);
ok(!-d);
$_ = 'lfrulb';
@


1.12
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d9 1
a9 1
plan tests => 22;
d13 1
a13 1
    File::Path::rmtree('blurfl');
d25 9
d36 1
a36 1
ok($!{EEXIST} || $! =~ /cannot move|exist|denied|unknown/i);
d40 4
a43 1
ok($!{ENOENT} || $! =~ /cannot find|such|exist|not found|not a directory|unknown/i);
a60 10

{
    no warnings 'experimental::lexical_topic';
    my $_ = 'blurfl';
    ok(mkdir);
    ok(-d);
    ok(-d 'blurfl');
    ok(!-d 'lfrulb');
    ok(rmdir);
}
@


1.11
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d51 1
@


1.10
log
@merge in perl 5.12.2 plus local changes
@
text
@d11 9
a19 2
use File::Path;
rmtree('blurfl');
d27 1
a27 1
like($!, qr/cannot move|exist|denied|unknown/i);
d31 1
a31 1
like($!, qr/cannot find|such|exist|not found|not a directory|unknown/i);
@


1.9
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d28 5
a32 9
SKIP: {
    # trailing slashes will be removed before the system call to mkdir
    # but we don't care for MacOS ...
    skip("MacOS", 4) if $^O eq 'MacOS';
    ok(mkdir('blurfl///'));
    ok(-d 'blurfl');
    ok(rmdir('blurfl///'));
    ok(!-d 'blurfl');
}
@


1.8
log
@merge in perl 5.8.8
@
text
@d1 1
a1 1
#!./perl
d9 1
a9 1
plan tests => 13;
d36 18
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@a2 2
print "1..13\n";

d6 1
d9 2
d18 18
a35 18
print (mkdir('blurfl',0777) ? "ok 1\n" : "not ok 1\n");
print (mkdir('blurfl',0777) ? "not ok 2\n" : "ok 2\n");
print ($! =~ /cannot move|exist|denied/ ? "ok 3\n" : "# $!\nnot ok 3\n");
print (-d 'blurfl' ? "ok 4\n" : "not ok 4\n");
print (rmdir('blurfl') ? "ok 5\n" : "not ok 5\n");
print (rmdir('blurfl') ? "not ok 6\n" : "ok 6\n");
print ($! =~ /cannot find|such|exist|not found|not a directory/i ? "ok 7\n" : "# $!\nnot ok 7\n");
print (mkdir('blurfl') ? "ok 8\n" : "not ok 8\n");
print (rmdir('blurfl') ? "ok 9\n" : "not ok 9\n");
# trailing slashes will be removed before the system call to mkdir
# but we don't care for MacOS ...
if ($^O eq 'MacOS') {
   print "ok $_\n" for 10..13;
} else {
   print (mkdir('blurfl///') ? "ok 10\n" : "not ok 10\n");
   print (-d 'blurfl' ? "ok 11\n" : "not ok 11\n");
   print (rmdir('blurfl///') ? "ok 12\n" : "not ok 12\n");
   print (!-d 'blurfl' ? "ok 13\n" : "not ok 13\n");
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d3 1
a3 1
print "1..9\n";
d26 10
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d23 1
a23 1
print ($! =~ /cannot find|such|exist|not found/i ? "ok 7\n" : "# $!\nnot ok 7\n");
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d7 1
a7 1
    unshift @@INC, '../lib';
@


1.3
log
@perl5.005_03 (stock)
@
text
@d3 1
a3 1
# $RCSfile: mkdir.t,v $$Revision: 4.1 $$Date: 92/08/07 18:28:06 $
d5 4
a8 1
print "1..7\n";
d10 2
a11 1
$^O eq 'MSWin32' ? `del /s /q blurfl 2>&1` : `rm -rf blurfl`;
d15 1
d19 1
a19 1
print ($! =~ /exist|denied/ ? "ok 3\n" : "# $!\nnot ok 3\n");
d23 3
a25 1
print ($! =~ /such|exist|not found/i ? "ok 7\n" : "not ok 7\n");
@


1.2
log
@perl 5.004_04
@
text
@d18 1
a18 1
print ($! =~ /such|exist/ ? "ok 7\n" : "not ok 7\n");
@


1.1
log
@Initial revision
@
text
@d7 4
a10 1
`rm -rf blurfl`;
d14 1
a14 1
print ($! =~ /exist/ ? "ok 3\n" : "not ok 3\n");
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d7 1
a7 4
$^O eq 'MSWin32' ? `del /s /q blurfl 2>&1` : `rm -rf blurfl`;

# tests 3 and 7 rather naughtily expect English error messages
$ENV{'LC_ALL'} = 'C';
d11 1
a11 1
print ($! =~ /exist|denied/ ? "ok 3\n" : "# $!\nnot ok 3\n");
d15 1
a15 1
print ($! =~ /such|exist|not found/i ? "ok 7\n" : "not ok 7\n");
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d3 1
a3 1
print "1..9\n";
d5 1
a5 4
BEGIN {
    chdir 't' if -d 't';
    unshift @@INC, '../lib';
}
d7 1
a7 2
use File::Path;
rmtree('blurfl');
a10 1
$ENV{LANGUAGE} = 'C'; # GNU locale extension
d14 1
a14 1
print ($! =~ /cannot move|exist|denied/ ? "ok 3\n" : "# $!\nnot ok 3\n");
d18 1
a18 3
print ($! =~ /cannot find|such|exist|not found/i ? "ok 7\n" : "# $!\nnot ok 7\n");
print (mkdir('blurfl') ? "ok 8\n" : "not ok 8\n");
print (rmdir('blurfl') ? "ok 9\n" : "not ok 9\n");
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d7 1
a7 1
    @@INC = '../lib';
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@d23 1
a23 1
print ($! =~ /cannot find|such|exist|not found|not a directory/i ? "ok 7\n" : "# $!\nnot ok 7\n");
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d3 1
a3 1
print "1..13\n";
a25 10
# trailing slashes will be removed before the system call to mkdir
# but we don't care for MacOS ...
if ($^O eq 'MacOS') {
   print "ok $_\n" for 10..13;
} else {
   print (mkdir('blurfl///') ? "ok 10\n" : "not ok 10\n");
   print (-d 'blurfl' ? "ok 11\n" : "not ok 11\n");
   print (rmdir('blurfl///') ? "ok 12\n" : "not ok 12\n");
   print (!-d 'blurfl' ? "ok 13\n" : "not ok 13\n");
}
@


1.1.1.7
log
@perl 5.8.8 import
@
text
@d3 2
a7 1
    require './test.pl';
a9 2
plan tests => 13;

d17 18
a34 18
ok(mkdir('blurfl',0777));
ok(!mkdir('blurfl',0777));
like($!, qr/cannot move|exist|denied|unknown/i);
ok(-d 'blurfl');
ok(rmdir('blurfl'));
ok(!rmdir('blurfl'));
like($!, qr/cannot find|such|exist|not found|not a directory|unknown/i);
ok(mkdir('blurfl'));
ok(rmdir('blurfl'));

SKIP: {
    # trailing slashes will be removed before the system call to mkdir
    # but we don't care for MacOS ...
    skip("MacOS", 4) if $^O eq 'MacOS';
    ok(mkdir('blurfl///'));
    ok(-d 'blurfl');
    ok(rmdir('blurfl///'));
    ok(!-d 'blurfl');
@


1.1.1.8
log
@import perl 5.10.0 from CPAN
@
text
@d1 1
a1 1
#!./perl -w
d9 1
a9 1
plan tests => 22;
a35 18
}

# test default argument

$_ = 'blurfl';
ok(mkdir);
ok(-d);
ok(rmdir);
ok(!-d);
$_ = 'lfrulb';

{
    my $_ = 'blurfl';
    ok(mkdir);
    ok(-d);
    ok(-d 'blurfl');
    ok(!-d 'lfrulb');
    ok(rmdir);
@


1.1.1.9
log
@Perl 5.12.2 from CPAN
@
text
@d28 9
a36 5
# trailing slashes will be removed before the system call to mkdir
ok(mkdir('blurfl///'));
ok(-d 'blurfl');
ok(rmdir('blurfl///'));
ok(!-d 'blurfl');
@


1.1.1.10
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d11 2
a12 9
unless (eval {
    require File::Path;
    File::Path::rmtree('blurfl');
    1
}) {
    diag("$0 may fail if its temporary directory remains from a previous run");
    diag("Attempted to load File::Path to delete directory t/blurfl - error was\n$@@");
    diag("\nIf you have problems, please manually delete t/blurfl");
}    
d20 1
a20 1
ok($!{EEXIST} || $! =~ /cannot move|exist|denied|unknown/i);
d24 1
a24 1
ok($!{ENOENT} || $! =~ /cannot find|such|exist|not found|not a directory|unknown/i);
@


1.1.1.11
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a50 1
    no warnings 'experimental::lexical_topic';
@


1.1.1.12
log
@Import perl-5.24.2
@
text
@d9 1
a9 1
plan tests => 17;
d13 1
a13 1
    File::Path::rmtree('blurfl') if -d 'blurfl';
a24 9
sub errno_or_skip {
    SKIP: {
	if (is_miniperl && !eval { local $!; require Errno }) {
	    skip "Errno not built yet", 1;
	}
	eval "ok($_[0])";
    }
}

d27 1
a27 1
errno_or_skip('$!{EEXIST} || $! =~ /cannot move|exist|denied|unknown/i');
d31 1
a31 4
errno_or_skip('
    $!{ENOENT}
       || $! =~ /cannot find|such|exist|not found|not a directory|unknown/i
');
d49 10
@


