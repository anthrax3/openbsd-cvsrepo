head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.20
	OPENBSD_6_2_BASE:1.10
	PERL_5_24_2:1.1.1.7
	OPENBSD_6_1:1.10.0.18
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.16
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	PERL_5_20_2:1.1.1.7
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	PERL_5_20_1:1.1.1.7
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	PERL_5_18_2:1.1.1.7
	PERL:1.1.1
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	PERL_5_16_3:1.1.1.7
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	PERL_5_12_2:1.1.1.6
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	PERL_5_10_1:1.1.1.6
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	PERL_5_10_0:1.1.1.5
	OPENBSD_4_4:1.7.0.18
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.16
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.14
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.12
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.10
	OPENBSD_4_0_BASE:1.7
	PERL_5_8_8:1.1.1.4
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	PERL_5_8_0:1.1.1.1
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.1
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.10
date	2013.03.25.20.40.59;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.12.18.30.27;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.29.17.36.18;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2004.08.09.18.10.25;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.03.03.02.48;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.27.22.25.35;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.24.18.36.07;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.08.02;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.52.28;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.00.17;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.41.23;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.44.30;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.08.09.17.48.31;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.01.15.21.18.14;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.29.17.18.58;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2009.10.12.18.10.42;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2013.03.25.20.09.33;	author sthen;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.10
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require './test.pl';
    eval 'use Errno';
    die $@@ if $@@ and !is_miniperl();
}

use strict;

plan tests => 2;

my $tmpfile = tempfile();

open(A,"+>$tmpfile");
print A "_";
seek(A,0,0);

my $b = "abcd"; 
$b = "";

read(A,$b,1,4);

close(A);

is($b,"\000\000\000\000_"); # otherwise probably "\000bcd_"

SKIP: {
    skip "no EBADF", 1 if (!exists &Errno::EBADF);

    $! = 0;
    no warnings 'unopened';
    read(B,$b,1);
    ok($! == &Errno::EBADF);
}
@


1.9
log
@Merge in perl 5.10.1; part two
@
text
@d7 2
a11 2
eval 'use Errno';
die $@@ if $@@ and !$ENV{PERL_CORE_MINITEST};
@


1.8
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d15 3
a17 1
open(A,"+>a");
a27 2
unlink("a");

a28 2

unlink 'a';
@


1.7
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@a2 2
# $RCSfile: read.t,v $

d36 1
@


1.6
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d3 1
a3 1
# $RCSfile$
d12 2
a13 1
use Errno;
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d5 10
a14 1
print "1..1\n";
d20 1
a20 1
$b = "abcd"; 
d29 1
a29 5
if ($b eq "\000\000\000\000_") {
	print "ok 1\n";
} else { # Probably "\000bcd_"
	print "not ok 1\n";
}
d32 8
@


1.4
log
@merge in perl 5.6.1 with our local changes
@
text
@@


1.3
log
@perl-5.6.0 + local changes
@
text
@@


1.2
log
@perl5.005_03 (stock)
@
text
@@


1.1
log
@perl 5.004_04
@
text
@@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d5 1
a5 10
BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require './test.pl';
}

use strict;
use Errno;

plan tests => 2;
d11 1
a11 1
my $b = "abcd"; 
d20 5
a24 1
is($b,"\000\000\000\000_"); # otherwise probably "\000bcd_"
a26 8

SKIP: {
    skip "no EBADF", 1 if (!exists &Errno::EBADF);

    $! = 0;
    read(B,$b,1);
    ok($! == &Errno::EBADF);
}
@


1.1.1.3
log
@Import of stock perl 5.8.5
@
text
@d3 1
a3 1
# $RCSfile: read.t,v $
d12 1
a12 2
eval 'use Errno';
die $@@ if $@@ and !$ENV{PERL_CORE_MINITEST};
@


1.1.1.4
log
@perl 5.8.6 from CPAN
@
text
@d3 1
a3 1
# $RCSfile$
@


1.1.1.5
log
@import perl 5.10.0 from CPAN
@
text
@d3 2
a37 1
    no warnings 'unopened';
@


1.1.1.6
log
@import perl 5.10.1
@
text
@d15 1
a15 3
my $tmpfile = tempfile();

open(A,"+>$tmpfile");
d26 2
d29 2
@


1.1.1.7
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a6 2
    eval 'use Errno';
    die $@@ if $@@ and !is_miniperl();
d10 2
@


