head	1.2;
access;
symbols
	PERL_5_24_2:1.1.1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.3.0.16
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.10
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.12
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.4
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.8
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.6
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.2
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.2.0.10
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.8
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.6
	OPENBSD_5_0:1.1.1.2.0.4
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.2
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.20;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2008.09.29.17.18.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.29.17.18.59;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.09.24.14.49.15;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.03.25.20.09.34;	author sthen;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2017.08.14.13.46.23;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@Check implicit loading of features with use VERSION.

__END__
# Standard feature bundle
use feature ":5.10";
say "Hello", "world";
EXPECT
Helloworld
########
# VERSION requirement, dotted notation
use 5.9.5;
say "Hello", "world";
EXPECT
Helloworld
########
# VERSION requirement, v-dotted notation
use v5.9.5;
say "Hello", "world";
EXPECT
Helloworld
########
# VERSION requirement, decimal notation
use 5.009005;
say "Helloworld";
EXPECT
Helloworld
########
# VERSION requirement, doesn't load anything with require
require 5.9.5;
print "<".$INC{"feature.pm"}.">\n";
EXPECT
<>
########
# VERSION requirement in eval {}
eval {
    use 5.9.5;
    say "Hello", "world";
}
EXPECT
Helloworld
########
# VERSION requirement in eval ""
eval q{
    use 5.9.5;
    say "Hello", "world";
}
EXPECT
Helloworld
########
# VERSION requirement in BEGIN
BEGIN {
    use 5.9.5;
    say "Hello", "world";
}
EXPECT
Helloworld
########
# no implicit features with 'no'
eval "no " . ($]+1); print $@@;
EXPECT
########
# lower version after higher version
sub evalbytes { print "evalbytes sub\n" }
sub say { print "say sub\n" }
use 5.015;
evalbytes "say 'yes'";
use 5.014;
evalbytes;
use 5;
say "no"
EXPECT
yes
evalbytes sub
say sub
########
# No $[ under 5.15
# SKIP ? not defined DynaLoader::boot_DynaLoader
use v5.14;
no warnings 'deprecated';
$[ = 1;
print qw[a b c][2], "\n";
use v5.15;
print qw[a b c][2], "\n";
EXPECT
b
c
########
# $[ under < 5.10
# SKIP ? not defined DynaLoader::boot_DynaLoader
use feature 'say'; # make sure it is loaded and modifies %^H; we are test-
use v5.8.8;        # ing to make sure it does not disable $[
no warnings 'deprecated';
$[ = 1;
print qw[a b c][2], "\n";
EXPECT
b
########
# $[ under < 5.10 after use v5.15
# SKIP ? not defined DynaLoader::boot_DynaLoader
use v5.15;
use v5.8.8;
no warnings 'deprecated';
$[ = 1;
print qw[a b c][2], "\n";
EXPECT
b
########
# Implicit unicode_string feature
use v5.14;
my $sharp_s = chr utf8::unicode_to_native(0xdf);
print 'ss' =~ /$sharp_s/i ? "ok\n" : "nok\n";
use v5.8.8;
print 'ss' =~ /$sharp_s/i ? "ok\n" : "nok\n";
EXPECT
ok
nok
########
# Implicit unicode_eval feature
use v5.15;
require '../../t/charset_tools.pl';
my $long_s = byte_utf8a_to_utf8n("\xc5\xbf");
print eval "use utf8; q|$long_s|" eq $long_s ? "ok\n" : "nok\n";
use v5.8.8;
print eval "use utf8; q|$long_s|" eq "\x{17f}" ? "ok\n" : "nok\n";
EXPECT
ok
ok
@


1.1
log
@Initial revision
@
text
@d24 1
a24 1
say defined $INC{"feature.pm"} ? "Helloworld" : "Good bye";
a27 6
# VERSION requirement, doesn't load anything for < 5.9.5
use 5.8.8;
print "<".$INC{"feature.pm"}.">\n";
EXPECT
<>
########
d57 71
@


1.1.1.1
log
@import perl 5.10.0 from CPAN
@
text
@@


1.1.1.2
log
@Perl 5.12.2 from CPAN
@
text
@a62 4
########
# no implicit features with 'no'
eval "no " . ($]+1); print $@@;
EXPECT
@


1.1.1.3
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d24 1
a24 1
say "Helloworld";
d28 6
a66 64
########
# lower version after higher version
sub evalbytes { print "evalbytes sub\n" }
sub say { print "say sub\n" }
use 5.015;
evalbytes "say 'yes'";
use 5.014;
evalbytes;
use 5;
say "no"
EXPECT
yes
evalbytes sub
say sub
########
# No $[ under 5.15
# SKIP ? not defined DynaLoader::boot_DynaLoader
use v5.14;
no warnings 'deprecated';
$[ = 1;
print qw[a b c][2], "\n";
use v5.15;
print qw[a b c][2], "\n";
EXPECT
b
c
########
# $[ under < 5.10
# SKIP ? not defined DynaLoader::boot_DynaLoader
use feature 'say'; # make sure it is loaded and modifies %^H; we are test-
use v5.8.8;        # ing to make sure it does not disable $[
no warnings 'deprecated';
$[ = 1;
print qw[a b c][2], "\n";
EXPECT
b
########
# $[ under < 5.10 after use v5.15
# SKIP ? not defined DynaLoader::boot_DynaLoader
use v5.15;
use v5.8.8;
no warnings 'deprecated';
$[ = 1;
print qw[a b c][2], "\n";
EXPECT
b
########
# Implicit unicode_string feature
use v5.14;
print 'ss' =~ /\xdf/i ? "ok\n" : "nok\n";
use v5.8.8;
print 'ss' =~ /\xdf/i ? "ok\n" : "nok\n";
EXPECT
ok
nok
########
# Implicit unicode_eval feature
use v5.15;
print eval "use utf8; q|\xc5\xbf|" eq "\xc5\xbf" ? "ok\n" : "nok\n";
use v5.8.8;
print eval "use utf8; q|\xc5\xbf|" eq "\x{17f}" ? "ok\n" : "nok\n";
EXPECT
ok
ok
@


1.1.1.4
log
@Import perl-5.24.2
@
text
@d110 1
a110 2
my $sharp_s = chr utf8::unicode_to_native(0xdf);
print 'ss' =~ /$sharp_s/i ? "ok\n" : "nok\n";
d112 1
a112 1
print 'ss' =~ /$sharp_s/i ? "ok\n" : "nok\n";
d119 1
a119 3
require '../../t/charset_tools.pl';
my $long_s = byte_utf8a_to_utf8n("\xc5\xbf");
print eval "use utf8; q|$long_s|" eq $long_s ? "ok\n" : "nok\n";
d121 1
a121 1
print eval "use utf8; q|$long_s|" eq "\x{17f}" ? "ok\n" : "nok\n";
@


