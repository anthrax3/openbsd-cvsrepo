head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.6
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.8
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.03.24.14.59.09;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.24.14.59.09;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@__END__
# NAME local %$ref on last line of lvalue sub in lv cx
   sub foo :lvalue { local %{\%foo} }
   (foo) = 3;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME local @@$ref on last line of lvalue sub in lv cx
   sub foo :lvalue { local @@{\@@foo} }
   (foo) = 3;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME local %$ref on last line of lvalue sub in non-lv cx
   sub foo :lvalue { local %{\%foo} }
   foo;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME local @@$ref on last line of lvalue sub in non-lv cx
   sub foo :lvalue { local @@{\@@foo} }
   foo;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME \local %$ref
   \local %{\%hash}
EXPECT
Can't localize through a reference at - line 1.
########
# NAME \local @@$ref
   \local @@{\@@hash}
EXPECT
Can't localize through a reference at - line 1.
########
# NAME calling undef sub belonging to undef GV
   my $foosub = \&foo;
   undef *foo;
   &$foosub;
EXPECT
Undefined subroutine &main::foo called at - line 3.
########
# NAME calling undef sub resident in its GV
   my $foosub = \&foo;
   &$foosub;
EXPECT
Undefined subroutine &main::foo called at - line 2.
########
# NAME calling undef scalar
   &{+undef};
EXPECT
Can't use an undefined value as a subroutine reference at - line 1.
########
# NAME calling undef magical scalar
   sub TIESCALAR {bless[]}
   sub FETCH {}
   tie $tied, "";
   &$tied;
EXPECT
Can't use an undefined value as a subroutine reference at - line 4.
@


1.1.1.1
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@@
