head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.1.3.0.4
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.42
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.40
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.38
	OPENBSD_5_0:1.1.1.1.0.36
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.34
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.32
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.28
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.30
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.26
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.24
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.22
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.20
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.18
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.16
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2014.11.17.20.57.07;	author afresh1;	state dead;
branches;
next	1.1;
commitid	QP75iYx42Uo7mMxO;

1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.09.34;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.59.10;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@  perly.y	AOK

  dep() => deprecate("\"do\" to call subroutines") 
  Use of "do" to call subroutines is deprecated

	sub fred {} do fred()
	sub fred {} do fred(1)
	sub fred {} $a = "fred" ; do $a()
	sub fred {} $a = "fred" ; do $a(1)


__END__
# perly.y
use warnings 'deprecated' ;
sub fred {} 
do fred() ;
do fred(1) ;
$a = "fred" ; 
do $a() ;
do $a(1) ;
no warnings 'deprecated' ;
do fred() ;
do fred(1) ;
$a = "fred" ; 
do $a() ;
do $a(1) ;
EXPECT
Use of "do" to call subroutines is deprecated at - line 4.
Use of "do" to call subroutines is deprecated at - line 5.
Use of "do" to call subroutines is deprecated at - line 7.
Use of "do" to call subroutines is deprecated at - line 8.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a10 16
  Use of qw(...) as parentheses is deprecated

	if qw(a) {}
	unless qw(a) {}
	if (0) {} elsif qw(a) {}
	given qw(a) {}
	when qw(a) {}
	while qw(a) {}
	until qw(a) {}
	foreach $x qw(a b c) {}
	foreach my $x qw(a b c) {}
	$obj->meth qw(a b c)
	do foo qw(a b c)
	do $subref qw(a b c)
	&foo qw(a b c)
	$a[0] qw(a b c)
a31 219
########
use warnings qw(deprecated void);
if qw(a) { print "x0\n"; } else { }
if qw(0) { print "x1\n"; } else { }
if qw(z a) { print "x2\n"; } else { }
if qw(z 0) { print "x3\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of qw(...) as parentheses is deprecated at - line 4.
Useless use of a constant ("z") in void context at - line 4.
Use of qw(...) as parentheses is deprecated at - line 5.
Useless use of a constant ("z") in void context at - line 5.
x0
x2
########
if qw() { print "x0\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
syntax error at - line 1, near "if qw()"
Execution of - aborted due to compilation errors.
########
use warnings qw(deprecated void);
unless qw(a) { print "x0\n"; } else { }
unless qw(0) { print "x1\n"; } else { }
unless qw(z a) { print "x2\n"; } else { }
unless qw(z 0) { print "x3\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of qw(...) as parentheses is deprecated at - line 4.
Useless use of a constant ("z") in void context at - line 4.
Use of qw(...) as parentheses is deprecated at - line 5.
Useless use of a constant ("z") in void context at - line 5.
x1
x3
########
unless qw() { print "x0\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
syntax error at - line 1, near "unless qw()"
Execution of - aborted due to compilation errors.
########
use warnings qw(deprecated void);
if(0) { print "eek\n"; } elsif qw(a) { print "x0\n"; } else { }
if(0) { print "eek\n"; } elsif qw(0) { print "x1\n"; } else { }
if(0) { print "eek\n"; } elsif qw(z a) { print "x2\n"; } else { }
if(0) { print "eek\n"; } elsif qw(z 0) { print "x3\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of qw(...) as parentheses is deprecated at - line 4.
Useless use of a constant ("z") in void context at - line 4.
Use of qw(...) as parentheses is deprecated at - line 5.
Useless use of a constant ("z") in void context at - line 5.
x0
x2
########
if(0) { print "eek\n"; } elsif qw() { print "x0\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
syntax error at - line 1, near "elsif qw()"
Execution of - aborted due to compilation errors.
########
use warnings qw(deprecated void); use feature "switch";
given qw(a) { print "x0 $_\n"; }
given qw(z a) { print "x1 $_\n"; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Useless use of a constant ("z") in void context at - line 3.
x0 a
x1 a
########
use feature "switch";
given qw() { print "x0\n"; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
syntax error at - line 2, near "given qw()"
Execution of - aborted due to compilation errors.
########
use warnings qw(deprecated void); use feature "switch";
given("a") { when qw(a) { print "x0\n"; } }
given("a") { when qw(b) { print "x1\n"; } }
given("a") { when qw(z a) { print "x2\n"; } }
given("a") { when qw(z b) { print "x3\n"; } }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of qw(...) as parentheses is deprecated at - line 4.
Useless use of a constant ("z") in void context at - line 4.
Use of qw(...) as parentheses is deprecated at - line 5.
Useless use of a constant ("z") in void context at - line 5.
x0
x2
########
use feature "switch";
given("a") { when qw() { print "x0\n"; } }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
syntax error at - line 2, near "when qw()"
syntax error at - line 2, near "} }"
Execution of - aborted due to compilation errors.
########
use warnings qw(deprecated void);
while qw(a) { print "x0\n"; last; } {;}
while qw(0) { print "x1\n"; last; } {;}
while qw(z a) { print "x2\n"; last; } {;}
while qw(z 0) { print "x3\n"; last; } {;}
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of qw(...) as parentheses is deprecated at - line 4.
Useless use of a constant ("z") in void context at - line 4.
Use of qw(...) as parentheses is deprecated at - line 5.
Useless use of a constant ("z") in void context at - line 5.
x0
x2
########
while qw() { print "x0\n"; last; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
x0
########
use warnings qw(deprecated void);
until qw(a) { print "x0\n"; last; } {;}
until qw(0) { print "x1\n"; last; } {;}
until qw(z a) { print "x2\n"; last; } {;}
until qw(z 0) { print "x3\n"; last; } {;}
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of qw(...) as parentheses is deprecated at - line 4.
Useless use of a constant ("z") in void context at - line 4.
Use of qw(...) as parentheses is deprecated at - line 5.
Useless use of a constant ("z") in void context at - line 5.
x1
x3
########
until qw() { print "x0\n"; } else { }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
syntax error at - line 1, near "until qw()"
Execution of - aborted due to compilation errors.
########
foreach $x qw(a b c) { print $x, "\n"; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
a
b
c
########
foreach $x qw() { print $x, "\n"; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
syntax error at - line 1, near "$x qw()"
Execution of - aborted due to compilation errors.
########
foreach my $x qw(a b c) { print $x, "\n"; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
a
b
c
########
foreach my $x qw() { print $x, "\n"; }
EXPECT
Use of qw(...) as parentheses is deprecated at - line 1.
syntax error at - line 1, near "$x qw()"
Execution of - aborted due to compilation errors.
########
sub a5c85eef3bf30129e20989e96b099d13::foo { print "+", join(":", @@_), "\n"; }
"a5c85eef3bf30129e20989e96b099d13"->foo qw(); {;}
"a5c85eef3bf30129e20989e96b099d13"->foo qw(a b c); {;}
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
+a5c85eef3bf30129e20989e96b099d13
+a5c85eef3bf30129e20989e96b099d13:a:b:c
########
sub fd4de2af1449cec72693c36842d41862 { print "+", join(":", @@_), "\n"; }
do fd4de2af1449cec72693c36842d41862 qw(); {;}
do fd4de2af1449cec72693c36842d41862 qw(a b c); {;}
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of "do" to call subroutines is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of "do" to call subroutines is deprecated at - line 3.
+
+a:b:c
########
$subref = sub { print "+", join(":", @@_), "\n"; };
do $subref qw();
do $subref qw(a b c);
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of "do" to call subroutines is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
Use of "do" to call subroutines is deprecated at - line 3.
+
+a:b:c
########
sub e293a8f7cb38880a48867fcb336448e5 { print "+", join(":", @@_), "\n"; }
&e293a8f7cb38880a48867fcb336448e5 qw();
&e293a8f7cb38880a48867fcb336448e5 qw(a b c);
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
+
+a:b:c
########
my @@a = (sub { print "+", join(":", @@_), "\n"; });
$a[0] qw();
$a[0] qw(a b c);
EXPECT
Use of qw(...) as parentheses is deprecated at - line 2.
Use of qw(...) as parentheses is deprecated at - line 3.
+
+a:b:c
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d11 17
d48 219
@


