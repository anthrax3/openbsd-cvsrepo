head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.5
	OPENBSD_6_0:1.1.1.5.0.10
	OPENBSD_6_0_BASE:1.1.1.5
	OPENBSD_5_9:1.1.1.5.0.4
	OPENBSD_5_9_BASE:1.1.1.5
	OPENBSD_5_8:1.1.1.5.0.6
	OPENBSD_5_8_BASE:1.1.1.5
	PERL_5_20_2:1.1.1.5
	OPENBSD_5_7:1.1.1.5.0.2
	OPENBSD_5_7_BASE:1.1.1.5
	PERL_5_20_1:1.1.1.5
	OPENBSD_5_6:1.1.1.4.0.4
	OPENBSD_5_6_BASE:1.1.1.4
	PERL_5_18_2:1.1.1.4
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.6
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.2
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.2.0.18
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.16
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.14
	OPENBSD_5_0:1.1.1.2.0.12
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.10
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.24
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.22
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.20
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.18
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.16
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.18.59;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.03.25.20.09.34;	author sthen;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.03.24.14.59.10;	author afresh1;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.11.17.20.53.17;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@  gv.c AOK

     Can't locate package %s for @@%s::ISA
	@@ISA = qw(Fred); joe()

     Use of inherited AUTOLOAD for non-method %s::%.*s() is deprecated
	sub Other::AUTOLOAD { 1 } sub Other::fred {}
	@@ISA = qw(Other) ;
	fred() ;

     Use of $# is deprecated
     Use of $* is deprecated

	$a = ${"#"} ;
 	$a = ${"*"} ;

  Mandatory Warnings ALL TODO
  ------------------

    Had to create %s unexpectedly		[gv_fetchpv]
    Attempt to free unreferenced glob pointers	[gp_free]
    
__END__
# gv.c
use warnings 'misc' ;
@@ISA = qw(Fred); joe()
EXPECT
Can't locate package Fred for @@main::ISA at - line 3.
Undefined subroutine &main::joe called at - line 3.
########
# gv.c
no warnings 'misc' ;
@@ISA = qw(Fred); joe()
EXPECT
Undefined subroutine &main::joe called at - line 3.
########
# gv.c
sub Other::AUTOLOAD { 1 } sub Other::fred {}
@@ISA = qw(Other) ;
use warnings 'deprecated' ;
fred() ;
EXPECT
Use of inherited AUTOLOAD for non-method main::fred() is deprecated at - line 5.
########
# gv.c
use warnings 'deprecated' ;
$a = ${"#"};
$a = ${"*"};
no warnings 'deprecated' ;
$a = ${"#"};
$a = ${"*"};
EXPECT
Use of $# is deprecated at - line 3.
Use of $* is deprecated at - line 4.
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@d11 2
a12 2
     $# is no longer supported
     $* is no longer supported
d25 1
a25 1
use warnings 'syntax' ;
d32 1
a32 1
no warnings 'syntax' ;
d46 1
d53 2
a54 2
$# is no longer supported at - line 2.
$* is no longer supported at - line 3.
@


1.1.1.3
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d20 1
a20 1
    Had to create %SVf unexpectedly		[gv_fetchpv]
a45 10
use utf8;
use open qw( :utf8 :std );
sub Oᕞʀ::AUTOLOAD { 1 } sub Oᕞʀ::fᕃƌ {}
@@ISA = qw(Oᕞʀ) ;
use warnings 'deprecated' ;
fᕃƌ() ;
EXPECT
Use of inherited AUTOLOAD for non-method main::fᕃƌ() is deprecated at - line 7.
########
# gv.c
a53 10
########
# gv.c
use warnings 'syntax' ;
use utf8;
use open qw( :utf8 :std );
package Ｙ;
@@ISA = qw(Fred); joe()
EXPECT
Can't locate package Fred for @@Ｙ::ISA at - line 6.
Undefined subroutine &Ｙ::joe called at - line 6.
@


1.1.1.4
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a65 50
$a = ${#};
$a = ${*};
no warnings 'deprecated' ;
$a = ${#};
$a = ${*};
EXPECT
$# is no longer supported at - line 2.
$* is no longer supported at - line 3.
########
# gv.c
$a = $#;
$a = $*;
$# = $a;
$* = $a;
$a = \$#;
$a = \$*;
no warnings 'deprecated' ;
$a = $#;
$a = $*;
$# = $a;
$* = $a;
$a = \$#;
$a = \$*;
EXPECT
$# is no longer supported at - line 2.
$* is no longer supported at - line 3.
$# is no longer supported at - line 4.
$* is no longer supported at - line 5.
$# is no longer supported at - line 6.
$* is no longer supported at - line 7.
########
# gv.c
@@a = @@#;
@@a = @@*;
$a = $#;
$a = $*;
EXPECT
$# is no longer supported at - line 4.
$* is no longer supported at - line 5.
########
# gv.c
$a = $#;
$a = $*;
@@a = @@#;
@@a = @@*;
EXPECT
$# is no longer supported at - line 2.
$* is no longer supported at - line 3.
########
# gv.c
@


1.1.1.5
log
@Import perl-5.20.1
@
text
@a16 2
     Name "main::a" used only once: possible typo

a123 174
########
# gv.c
use warnings;
$x = 1;
if ($x) {
    print $y;
}
$a++; # These two should
$b++; # be exempt.
$Foo::a++;
$Foo::b++;
EXPECT
Name "main::y" used only once: possible typo at - line 5.
Use of uninitialized value $y in print at - line 5.
########
# gv.c
use warnings;
$x = 1;
if ($x) {
    $x++;
    print $y;
}
EXPECT
Name "main::y" used only once: possible typo at - line 6.
Use of uninitialized value $y in print at - line 6.
########
# gv.c
use warnings;
$x = 0;
if ($x) {
    print "1\n";
} elsif (!$x) {
    print $y;
} else {
    print "0\n";
}
EXPECT
Name "main::y" used only once: possible typo at - line 7.
Use of uninitialized value $y in print at - line 7.
########
# gv.c
use warnings;
$x = 0;
if ($x) {
    print "1\n";
} elsif (!$x) {
    $x++;
    print $y;
} else {
    print "0\n";
}
EXPECT
Name "main::y" used only once: possible typo at - line 8.
Use of uninitialized value $y in print at - line 8.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 1;
if ($ㄒ) {
    print $ʎ;
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 7.
Use of uninitialized value $ʎ in print at - line 7.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 1;
if ($ㄒ) {
    $ㄒ++;
    print $ʎ;
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 8.
Use of uninitialized value $ʎ in print at - line 8.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 9.
Use of uninitialized value $ʎ in print at - line 9.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    $ㄒ++;
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "main::ʎ" used only once: possible typo at - line 10.
Use of uninitialized value $ʎ in print at - line 10.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 1;
if ($ㄒ) {
    print $ʎ;
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 8.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 8.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 1;
if ($ㄒ) {
    $ㄒ++;
    print $ʎ;
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 9.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 9.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 10.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 10.
########
# gv.c
use utf8;
use open qw( :utf8 :std );
use warnings;
package 팣칵ぇ;
$ㄒ = 0;
if ($ㄒ) {
    print "1\n";
} elsif (!$ㄒ) {
    $ㄒ++;
    print $ʎ;
} else {
    print "0\n";
}
EXPECT
Name "팣칵ぇ::ʎ" used only once: possible typo at - line 11.
Use of uninitialized value $팣칵ぇ::ʎ in print at - line 11.
@


