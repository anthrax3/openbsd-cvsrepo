head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.4.0.12
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.6
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.8
	OPENBSD_5_8_BASE:1.1.1.4
	PERL_5_20_2:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.2
	OPENBSD_5_7_BASE:1.1.1.4
	PERL_5_20_1:1.1.1.4
	OPENBSD_5_6:1.1.1.4.0.4
	OPENBSD_5_6_BASE:1.1.1.4
	PERL_5_18_2:1.1.1.4
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.6
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.2
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.2.0.18
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.16
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.14
	OPENBSD_5_0:1.1.1.2.0.12
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.10
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.24
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.22
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.20
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.18
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.16
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.20;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.19.00;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.03.25.20.09.34;	author sthen;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.03.24.14.59.10;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@  pp.c	TODO

  substr outside of string
    $a = "ab" ; $b = substr($a, 4,5) ;

  Attempt to use reference as lvalue in substr 
    $a = "ab" ; $b = \$a ;  substr($b, 1,1) = $b

  Use of uninitialized value in scalar dereference	[pp_rv2sv()]
	my $a = undef ; my $b = $$a

  Odd number of elements in hash list
	my $a = { 1,2,3 } ;

  Explicit blessing to '' (assuming package main)
	bless \[], "";

  Constant subroutine %s undefined
	sub foo () { 1 }; undef &foo;

  Constant subroutine (anonymous) undefined
	$foo = sub () { 3 }; undef &$foo;

__END__
# pp.c
use warnings 'substr' ;
$a = "ab" ; 
$b = substr($a, 4,5) ;
no warnings 'substr' ;
$a = "ab" ; 
$b = substr($a, 4,5)  ;
EXPECT
substr outside of string at - line 4.
########
# pp.c
use warnings 'substr' ;
$a = "ab" ; 
$b = \$a ;  
substr($b, 1,1) = "ab" ;
$b = \$a;
substr($b, 1,1) = "\x{100}" ;
no warnings 'substr' ;
$b = \$a;
substr($b, 1,1) = "ab" ;
$b = \$a;
substr($b, 1,1) = "\x{100}" ;
EXPECT
Attempt to use reference as lvalue in substr at - line 5.
Attempt to use reference as lvalue in substr at - line 7.
########
# pp.c
use warnings 'misc' ;
@@a = qw( a b c );
splice(@@a, 4, 0, 'e') ;
@@a = qw( a b c );
splice(@@a, 4, 1) ;
@@a = qw( a b c );
splice(@@a, 4) ;
no warnings 'misc' ;
@@a = qw( a b c );
splice(@@a, 4, 0, 'e') ;
@@a = qw( a b c );
splice(@@a, 4, 1) ;
@@a = qw( a b c );
splice(@@a, 4) ;
EXPECT
splice() offset past end of array at - line 4.
splice() offset past end of array at - line 6.
########
# pp.c
use warnings 'uninitialized';
$x = undef; $y = $$x;
no warnings 'uninitialized' ;
$u = undef; $v = $$u;
EXPECT
Use of uninitialized value $x in scalar dereference at - line 3.
########
# pp.c
use warnings 'misc' ;
my $a = { 1,2,3};
no warnings 'misc' ;
my $b = { 1,2,3};
EXPECT
Odd number of elements in anonymous hash at - line 3.
########
# pp.c
use warnings 'misc' ;
bless \[], "" ;
no warnings 'misc' ;
bless \[], "" ;
EXPECT
Explicit blessing to '' (assuming package main) at - line 3.
########
# pp.c
use warnings 'misc';
sub foo () { 1 }
undef &foo;
no warnings 'misc';
sub bar () { 2 }
undef &bar;
EXPECT
Constant subroutine foo undefined at - line 4.
########
# pp.c
use utf8;
use open qw( :utf8 :std );
use warnings 'misc';
sub ฝᶱ () { 1 }
undef &ฝᶱ;
no warnings 'misc';
sub ƚ () { 2 }
undef &ƚ;
EXPECT
Constant subroutine ฝᶱ undefined at - line 6.
########
# pp.c
use warnings 'misc';
$foo = sub () { 3 };
undef &$foo;
no warnings 'misc';
$bar = sub () { 4 };
undef &$bar;
EXPECT
Constant subroutine (anonymous) undefined at - line 4.
########
# pp.c
use utf8 ;
$_ = "\x80  \xff" ;
reverse ;
EXPECT
########
# NAME deprecation of complement with above ff code points
$_ = ~ "\xff";
$_ = ~ "\x{100}";
EXPECT
OPTION regex
Use of strings with code points over 0xFF as arguments to 1's complement \(~\) operator is deprecated at - line \d+.
Use of code point 0xFF+EFF is deprecated; the permissible max is 0x7F+ at - line \d+.
@


1.1
log
@Initial revision
@
text
@a8 3
  Use of uninitialized value in ref-to-glob cast	[pp_rv2gv()]
	*b = *{ undef()}

d40 2
d43 1
d45 2
d49 1
d52 14
a65 4
use warnings 'uninitialized' ;
*x = *{ undef() };
no warnings 'uninitialized' ;
*y = *{ undef() };
d67 2
a68 1
Use of uninitialized value in ref-to-glob cast at - line 3.
d76 1
a76 1
Use of uninitialized value in scalar dereference at - line 3.
d105 12
d131 8
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@d62 1
a62 1
Use of uninitialized value $x in scalar dereference at - line 3.
@


1.1.1.3
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d9 3
d49 4
a52 14
use warnings 'misc' ;
@@a = qw( a b c );
splice(@@a, 4, 0, 'e') ;
@@a = qw( a b c );
splice(@@a, 4, 1) ;
@@a = qw( a b c );
splice(@@a, 4) ;
no warnings 'misc' ;
@@a = qw( a b c );
splice(@@a, 4, 0, 'e') ;
@@a = qw( a b c );
splice(@@a, 4, 1) ;
@@a = qw( a b c );
splice(@@a, 4) ;
d54 1
a54 2
splice() offset past end of array at - line 4.
splice() offset past end of array at - line 6.
a88 12
########
# pp.c
use utf8;
use open qw( :utf8 :std );
use warnings 'misc';
sub ฝᶱ () { 1 }
undef &ฝᶱ;
no warnings 'misc';
sub ƚ () { 2 }
undef &ƚ;
EXPECT
Constant subroutine ฝᶱ undefined at - line 6.
@


1.1.1.4
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a39 2
$b = \$a;
substr($b, 1,1) = "\x{100}" ;
a40 1
$b = \$a;
a41 2
$b = \$a;
substr($b, 1,1) = "\x{100}" ;
a43 1
Attempt to use reference as lvalue in substr at - line 7.
@


