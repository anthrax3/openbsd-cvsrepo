head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.3.0.32
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.34
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.28
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.30
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.22
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.26
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.24
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.20
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.18
	OPENBSD_5_3_BASE:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.16
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.14
	OPENBSD_5_0:1.1.1.3.0.12
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.10
	OPENBSD_4_9_BASE:1.1.1.3
	PERL_5_12_2:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.8
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.4
	OPENBSD_4_7_BASE:1.1.1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.20
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.18
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.16
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.14
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.12
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.10
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.8
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.6
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.4
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.44.31;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.19.00;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@  pp.c	TODO

  Invalid type in unpack: '%c
	my $A = pack ("A,A", 1,2) ;
	my @@A = unpack ("A,A", "22") ;

  Attempt to pack pointer to temporary value
	pack("p", "abc") ;

__END__
# pp_pack.c
use warnings 'pack' ;
use warnings 'unpack' ;
my @@a = unpack ("A,A", "22") ;
my $a = pack ("A,A", 1,2) ;
no warnings 'pack' ;
no warnings 'unpack' ;
my @@b = unpack ("A,A", "22") ;
my $b = pack ("A,A", 1,2) ;
EXPECT
Invalid type in unpack: ',' at - line 4.
Invalid type in pack: ',' at - line 5.
########
# pp.c
use warnings 'uninitialized' ;
my $a = undef ; 
my $b = $$a;
no warnings 'uninitialized' ;
my $c = $$a;
EXPECT
Use of uninitialized value in scalar dereference at - line 4.
########
# pp_pack.c
use warnings 'pack' ;
sub foo { my $a = "a"; return $a . $a++ . $a++ }
my $a = pack("p", &foo) ;
no warnings 'pack' ;
my $b = pack("p", &foo) ;
EXPECT
Attempt to pack pointer to temporary value at - line 4.
########
# pp.c
use warnings 'misc' ;
bless \[], "" ;
no warnings 'misc' ;
bless \[], "" ;
EXPECT
Explicit blessing to '' (assuming package main) at - line 3.
########
# pp.c
use utf8 ;
$_ = "\x80  \xff" ;
reverse ;
EXPECT
########
# pp_pack.c
use warnings 'pack' ;
print unpack("C", pack("C",   -1)), "\n",
	unpack("C", pack("C",    0)), "\n",
	unpack("C", pack("C",  255)), "\n",
	unpack("C", pack("C",  256)), "\n",
	unpack("c", pack("c", -129)), "\n",
	unpack("c", pack("c", -128)), "\n",
	unpack("c", pack("c",  127)), "\n",
	unpack("c", pack("c",  128)), "\n";
no warnings 'pack' ;
print unpack("C", pack("C",   -1)), "\n";
print unpack("C", pack("C",    0)), "\n";
print unpack("C", pack("C",  255)), "\n";
print unpack("C", pack("C",  256)), "\n";
print unpack("c", pack("c", -129)), "\n";
print unpack("c", pack("c", -128)), "\n";
print unpack("c", pack("c",  127)), "\n";
print unpack("c", pack("c",  128)), "\n";
EXPECT
Character in "C" format wrapped at - line 3.
Character in "C" format wrapped at - line 3.
Character in "c" format wrapped at - line 3.
Character in "c" format wrapped at - line 3.
255
0
255
0
127
-128
127
-128
255
0
255
0
127
-128
127
-128
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d21 2
a22 2
Invalid type ',' in unpack at - line 4.
Invalid type ',' in pack at - line 5.
d76 4
a79 4
Character in 'C' format wrapped in pack at - line 3.
Character in 'C' format wrapped in pack at - line 3.
Character in 'c' format wrapped in pack at - line 3.
Character in 'c' format wrapped in pack at - line 3.
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@d31 1
a31 1
Use of uninitialized value $a in scalar dereference at - line 4.
@


