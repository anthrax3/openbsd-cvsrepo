head	1.2;
access;
symbols
	OPENBSD_3_2:1.1.1.2.0.6
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.10.27.22.25.36;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2000.04.06.16.10.42;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.06.16.10.42;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.05.24.18.25.16;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    unshift @@INC, '../lib';
    require Config; import Config;
    if ($Config{'extensions'} !~ /\bFile\/Glob\b/i) {
        print "1..0\n";
        exit 0;
    }
    print "1..9\n";
}
END {
    print "not ok 1\n" unless $loaded;
}
use File::Glob ':glob';
use Cwd ();
$loaded = 1;
print "ok 1\n";

sub array {
    return '(', join(", ", map {defined $_ ? "\"$_\"" : "undef"} @@a), ")\n";
}

# look for the contents of the current directory
$ENV{PATH} = "/bin";
delete @@ENV{BASH_ENV, CDPATH, ENV, IFS};
@@correct = ();
if (opendir(D, ".")) {
   @@correct = grep { !/^\.\.?$/ } sort readdir(D);
   closedir D;
}
@@a = File::Glob::glob("*", 0);
@@a = sort @@a;
if ("@@a" ne "@@correct" || GLOB_ERROR) {
    print "# |@@a| ne |@@correct|\nnot ";
}
print "ok 2\n";

# look up the user's home directory
# should return a list with one item, and not set ERROR
if ($^O ne 'MSWin32' || $^O ne 'VMS') {
  eval {
    ($name, $home) = (getpwuid($>))[0,7];
    1;
  } and do {
    @@a = File::Glob::glob("~$name", GLOB_TILDE);
    if (scalar(@@a) != 1 || $a[0] ne $home || GLOB_ERROR) {
	print "not ";
    }
  };
}
print "ok 3\n";

# check backslashing
# should return a list with one item, and not set ERROR
@@a = File::Glob::glob('TEST', GLOB_QUOTE);
if (scalar @@a != 1 || $a[0] ne 'TEST' || GLOB_ERROR) {
    local $/ = "][";
    print "# [@@a]\n";
    print "not ";
}
print "ok 4\n";

# check nonexistent checks
# should return an empty list
# XXX since errfunc is NULL on win32, this test is not valid there
@@a = File::Glob::glob("asdfasdf", 0);
if ($^O ne 'MSWin32' and scalar @@a != 0) {
    print "# |@@a|\nnot ";
}
print "ok 5\n";

# check bad protections
# should return an empty list, and set ERROR
if ($^O eq 'mpeix' or $^O eq 'MSWin32' or $^O eq 'os2' or $^O eq 'VMS'
    or $^O eq 'cygwin' or Cwd::cwd() =~ m#^/afs#s or not $>)
{
    print "ok 6 # skipped\n";
}
else {
    $dir = "PtEeRsLt.dir";
    mkdir $dir, 0;
    @@a = File::Glob::glob("$dir/*", GLOB_ERR);
    #print "\@@a = ", array(@@a);
    rmdir $dir;
    if (scalar(@@a) != 0 || GLOB_ERROR == 0) {
	print "not ";
    }
    print "ok 6\n";
}

# check for csh style globbing
@@a = File::Glob::glob('{a,b}', GLOB_BRACE | GLOB_NOMAGIC);
unless (@@a == 2 and $a[0] eq 'a' and $a[1] eq 'b') {
    print "not ";
}
print "ok 7\n";

@@a = File::Glob::glob(
    '{TES*,doesntexist*,a,b}',
    GLOB_BRACE | GLOB_NOMAGIC
);
unless (@@a == 3
        and $a[0] eq ($^O eq 'VMS'? 'test.' : 'TEST')
        and $a[1] eq 'a'
        and $a[2] eq 'b')
{
    print "not ";
}
print "ok 8\n";

# "~" should expand to $ENV{HOME}
$ENV{HOME} = "sweet home";
@@a = File::Glob::glob('~', GLOB_TILDE | GLOB_NOMAGIC);
unless (@@a == 1 and $a[0] eq $ENV{HOME}) {
    print "not ";
}
print "ok 9\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@virgin perl 5.6.0
@
text
@@


1.1.1.2
log
@stock perl 5.6.1
@
text
@d5 1
a5 6
    if ($^O eq 'MacOS') { 
	@@INC = qw(: ::lib ::macos:lib); 
    } else { 
	@@INC = '.'; 
	push @@INC, '../lib'; 
    }
d29 2
a30 2
if (opendir(D, $^O eq "MacOS" ? ":" : ".")) {
   @@correct = grep { !/^\./ } sort readdir(D);
d42 1
a42 1
if ($^O ne 'MSWin32' && $^O ne 'VMS') {
d47 1
a47 1
    @@a = bsd_glob("~$name", GLOB_TILDE);
d57 1
a57 1
@@a = bsd_glob('TEST', GLOB_QUOTE);
d68 1
a68 1
@@a = bsd_glob("asdfasdf", 0);
d84 1
a84 1
    @@a = bsd_glob("$dir/*", GLOB_ERR);
d94 1
a94 1
@@a = bsd_glob('{a,b}', GLOB_BRACE | GLOB_NOMAGIC);
d100 1
a100 1
@@a = bsd_glob(
d102 1
a102 1
    GLOB_BRACE | GLOB_NOMAGIC | ($^O eq 'VMS' ? GLOB_NOCASE : 0)
a103 5

# Working on t/TEST often causes this test to fail because it sees temp
# and RCS files.  Filter them out, and .pm files too.
@@a = grep !/(,v$|~$|\.pm$)/, @@a;

d115 2
a116 2
@@a = bsd_glob('~', GLOB_TILDE | GLOB_NOMAGIC);
unless ($^O eq "MacOS" || (@@a == 1 and $a[0] eq $ENV{HOME})) {
@

