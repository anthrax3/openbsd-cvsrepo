head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2002.10.27.22.25.36;	author millert;	state dead;
branches;
next	1.4;

1.4
date	2001.05.24.18.36.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.08.13;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.52.32;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.05.00;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.41.38;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.10.45;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.25.23;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl -w

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require Config; import Config;
    if (!$Config{'d_fork'}
       # open2/3 supported on win32 (but not Borland due to CRT bugs)
       && ($^O ne 'MSWin32' || $Config{'cc'} =~ /^bcc/i))
    {
	print "1..0\n";
	exit 0;
    }
    # make warnings fatal
    $SIG{__WARN__} = sub { die @@_ };
}

use strict;
use IO::Handle;
use IPC::Open2;
#require 'open2.pl'; use subs 'open2';

my $perl = './perl';

sub ok {
    my ($n, $result, $info) = @@_;
    if ($result) {
	print "ok $n\n";
    }
    else {
	print "not ok $n\n";
	print "# $info\n" if $info;
    }
}

sub cmd_line {
	if ($^O eq 'MSWin32') {
		return qq/"$_[0]"/;
	}
	else {
		return $_[0];
	}
}

my ($pid, $reaped_pid);
STDOUT->autoflush;
STDERR->autoflush;

print "1..7\n";

ok 1, $pid = open2 'READ', 'WRITE', $perl, '-e',
	cmd_line('print scalar <STDIN>');
ok 2, print WRITE "hi kid\n";
ok 3, <READ> =~ /^hi kid\r?\n$/;
ok 4, close(WRITE), $!;
ok 5, close(READ), $!;
$reaped_pid = waitpid $pid, 0;
ok 6, $reaped_pid == $pid, $reaped_pid;
ok 7, $? == 0, $?;
@


1.4
log
@merge in perl 5.6.1 with our local changes
@
text
@@


1.3
log
@perl-5.6.0 + local changes
@
text
@d5 1
a5 1
    unshift @@INC, '../lib';
@


1.2
log
@perl5.005_03 (stock)
@
text
@d5 1
a5 1
    @@INC = '../lib';
@


1.1
log
@perl 5.004_04
@
text
@d7 4
a10 1
    unless ($Config{'d_fork'}) {
d31 1
a31 1
    	print "not ok $n\n";
d36 9
d51 2
a52 1
ok 1, $pid = open2 'READ', 'WRITE', $perl, '-e', 'print scalar <STDIN>';
d54 1
a54 1
ok 3, <READ> eq "hi kid\n";
@


1.1.1.1
log
@perl5.005_03
@
text
@d7 1
a7 4
    if (!$Config{'d_fork'}
       # open2/3 supported on win32 (but not Borland due to CRT bugs)
       && ($^O ne 'MSWin32' || $Config{'cc'} =~ /^bcc/i))
    {
d28 1
a28 1
	print "not ok $n\n";
a32 9
sub cmd_line {
	if ($^O eq 'MSWin32') {
		return qq/"$_[0]"/;
	}
	else {
		return $_[0];
	}
}

d39 1
a39 2
ok 1, $pid = open2 'READ', 'WRITE', $perl, '-e',
	cmd_line('print scalar <STDIN>');
d41 1
a41 1
ok 3, <READ> =~ /^hi kid\r?\n$/;
@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d5 1
a5 1
    unshift @@INC, '../lib';
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d5 1
a5 1
    @@INC = '../lib';
@


