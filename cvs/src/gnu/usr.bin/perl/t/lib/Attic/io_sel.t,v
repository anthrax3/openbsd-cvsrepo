head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2002.10.27.22.25.36;	author millert;	state dead;
branches;
next	1.4;

1.4
date	2001.05.24.18.36.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.08.11;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.52.30;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.04.56;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.41.36;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.10.44;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.25.21;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl

BEGIN {
    unless(grep /blib/, @@INC) {
        chdir 't' if -d 't';
        @@INC = '../lib';
    }
}

select(STDERR); $| = 1;
select(STDOUT); $| = 1;

print "1..23\n";

use IO::Select 1.09;

my $sel = new IO::Select(\*STDIN);
$sel->add(4, 5) == 2 or print "not ";
print "ok 1\n";

$sel->add([\*STDOUT, 'foo']) == 1 or print "not ";
print "ok 2\n";

@@handles = $sel->handles;
print "not " unless $sel->count == 4 && @@handles == 4;
print "ok 3\n";
#print $sel->as_string, "\n";

$sel->remove(\*STDIN) == 1 or print "not ";
print "ok 4\n",
;
$sel->remove(\*STDIN, 5, 6) == 1  # two of there are not present
  or print "not ";
print "ok 5\n";

print "not " unless $sel->count == 2;
print "ok 6\n";
#print $sel->as_string, "\n";

$sel->remove(1, 4);
print "not " unless $sel->count == 0 && !defined($sel->bits);
print "ok 7\n";

$sel = new IO::Select;
print "not " unless $sel->count == 0 && !defined($sel->bits);
print "ok 8\n";

$sel->remove([\*STDOUT, 5]);
print "not " unless $sel->count == 0 && !defined($sel->bits);
print "ok 9\n";

if ($^O eq 'MSWin32' || $^O eq 'dos') {  # 4-arg select is only valid on sockets
    print "# skipping tests 10..15\n";
    for (10 .. 15) { print "ok $_\n" }
    $sel->add(\*STDOUT);  # update
    goto POST_SOCKET;
}

@@a = $sel->can_read();  # should return imediately
print "not " unless @@a == 0;
print "ok 10\n";

# we assume that we can write to STDOUT :-)
$sel->add([\*STDOUT, "ok 12\n"]);

@@a = $sel->can_write;
print "not " unless @@a == 1;
print "ok 11\n";

my($fd, $msg) = @@{shift @@a};
print $fd $msg;

$sel->add(\*STDOUT);  # update

@@a = IO::Select::select(undef, $sel, undef, 1);
print "not " unless @@a == 3;
print "ok 13\n";

($r, $w, $e) = @@a;

print "not " unless @@$r == 0 && @@$w == 1 && @@$e == 0;
print "ok 14\n";

$fd = $w->[0];
print $fd "ok 15\n";

POST_SOCKET:
# Test new exists() method
$sel->exists(\*STDIN) and print "not ";
print "ok 16\n";

($sel->exists(0) || $sel->exists([\*STDERR])) and print "not ";
print "ok 17\n";

$fd = $sel->exists(\*STDOUT);
if ($fd) {
    print $fd "ok 18\n";
} else {
    print "not ok 18\n";
}

$fd = $sel->exists([1, 'foo']);
if ($fd) {
    print $fd "ok 19\n";
} else {
    print "not ok 19\n";
}

# Try self clearing
$sel->add(5,6,7,8,9,10);
print "not " unless $sel->count == 7;
print "ok 20\n";

$sel->remove($sel->handles);
print "not " unless $sel->count == 0 && !defined($sel->bits);
print "ok 21\n";

# check warnings
$SIG{__WARN__} = sub { 
    ++ $w 
      if $_[0] =~ /^Call to depreciated method 'has_error', use 'has_exception'/ 
    } ;
$w = 0 ;
IO::Select::has_error();
print "not " unless $w == 0 ;
$w = 0 ;
print "ok 22\n" ;
use warnings 'IO::Select' ;
IO::Select::has_error();
print "not " unless $w == 1 ;
$w = 0 ;
print "ok 23\n" ;
@


1.4
log
@merge in perl 5.6.1 with our local changes
@
text
@@


1.3
log
@perl-5.6.0 + local changes
@
text
@d6 1
a6 1
        unshift @@INC, '../lib' if -d '../lib';
@


1.2
log
@perl5.005_03 (stock)
@
text
@d6 1
a6 1
        @@INC = '../lib' if -d '../lib';
d13 1
a13 1
print "1..21\n";
d117 16
@


1.1
log
@perl 5.004_04
@
text
@d52 1
a52 1
if ($^O eq 'MSWin32') {  # 4-arg select is only valid on sockets
@


1.1.1.1
log
@perl5.005_03
@
text
@d52 1
a52 1
if ($^O eq 'MSWin32' || $^O eq 'dos') {  # 4-arg select is only valid on sockets
@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d6 1
a6 1
        unshift @@INC, '../lib' if -d '../lib';
d13 1
a13 1
print "1..23\n";
a116 16

# check warnings
$SIG{__WARN__} = sub { 
    ++ $w 
      if $_[0] =~ /^Call to depreciated method 'has_error', use 'has_exception'/ 
    } ;
$w = 0 ;
IO::Select::has_error();
print "not " unless $w == 0 ;
$w = 0 ;
print "ok 22\n" ;
use warnings 'IO::Select' ;
IO::Select::has_error();
print "not " unless $w == 1 ;
$w = 0 ;
print "ok 23\n" ;
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d6 1
a6 1
        @@INC = '../lib';
@


