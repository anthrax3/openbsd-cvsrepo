head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.0.8
	OPENBSD_2_6_BASE:1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2002.10.27.22.25.35;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2001.05.24.18.36.08;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.06.17.08.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.00.20;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.41.26;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.10.39;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.25.07;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.4
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    $dir = "auto-$$";
    @@INC = $dir;
    push @@INC, '../lib';
}

print "1..11\n";

# First we must set up some autoloader files
mkdir $dir, 0755            or die "Can't mkdir $dir: $!";
mkdir "$dir/auto", 0755     or die "Can't mkdir: $!";
mkdir "$dir/auto/Foo", 0755 or die "Can't mkdir: $!";

open(FOO, ">$dir/auto/Foo/foo.al") or die;
print FOO <<'EOT';
package Foo;
sub foo { shift; shift || "foo" }
1;
EOT
close(FOO);

open(BAR, ">$dir/auto/Foo/bar.al") or die;
print BAR <<'EOT';
package Foo;
sub bar { shift; shift || "bar" }
1;
EOT
close(BAR);

open(BAZ, ">$dir/auto/Foo/bazmarkhian.al") or die;
print BAZ <<'EOT';
package Foo;
sub bazmarkhianish { shift; shift || "baz" }
1;
EOT
close(BAZ);

# Let's define the package
package Foo;
require AutoLoader;
@@ISA=qw(AutoLoader);

sub new { bless {}, shift };

package main;

$foo = new Foo;

print "not " unless $foo->foo eq 'foo';  # autoloaded first time
print "ok 1\n";

print "not " unless $foo->foo eq 'foo';  # regular call
print "ok 2\n";

# Try an undefined method
eval {
    $foo->will_fail;
};
print "not " unless $@@ =~ /^Can't locate/;
print "ok 3\n";

# Used to be trouble with this
eval {
    my $foo = new Foo;
    die "oops";
};
print "not " unless $@@ =~ /oops/;
print "ok 4\n";

# Pass regular expression variable to autoloaded function.  This used
# to go wrong because AutoLoader used regular expressions to generate
# autoloaded filename.
"foo" =~ /(\w+)/;
print "not " unless $1 eq 'foo';
print "ok 5\n";

print "not " unless $foo->bar($1) eq 'foo';
print "ok 6\n";

print "not " unless $foo->bar($1) eq 'foo';
print "ok 7\n";

print "not " unless $foo->bazmarkhianish($1) eq 'foo';
print "ok 8\n";

print "not " unless $foo->bazmarkhianish($1) eq 'foo';
print "ok 9\n";

# test recursive autoloads
open(F, ">$dir/auto/Foo/a.al") or die;
print F <<'EOT';
package Foo;
BEGIN { b() }
sub a { print "ok 11\n"; }
1;
EOT
close(F);

open(F, ">$dir/auto/Foo/b.al") or die;
print F <<'EOT';
package Foo;
sub b { print "ok 10\n"; }
1;
EOT
close(F);
Foo::a();

# cleanup
END {
return unless $dir && -d $dir;
unlink "$dir/auto/Foo/foo.al";
unlink "$dir/auto/Foo/bar.al";
unlink "$dir/auto/Foo/bazmarkhian.al";
unlink "$dir/auto/Foo/a.al";
unlink "$dir/auto/Foo/b.al";
rmdir "$dir/auto/Foo";
rmdir "$dir/auto";
rmdir "$dir";
}
@


1.3
log
@merge in perl 5.6.1 with our local changes
@
text
@@


1.2
log
@perl-5.6.0 + local changes
@
text
@d6 2
a7 1
    unshift @@INC, ("./$dir", "../lib");
@


1.1
log
@perl 5.004_04
@
text
@d6 1
a6 1
    @@INC = ("./$dir", "../lib");
d9 1
a9 1
print "1..9\n";
d91 19
d116 2
@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d6 1
a6 1
    unshift @@INC, ("./$dir", "../lib");
d9 1
a9 1
print "1..11\n";
a90 19
# test recursive autoloads
open(F, ">$dir/auto/Foo/a.al") or die;
print F <<'EOT';
package Foo;
BEGIN { b() }
sub a { print "ok 11\n"; }
1;
EOT
close(F);

open(F, ">$dir/auto/Foo/b.al") or die;
print F <<'EOT';
package Foo;
sub b { print "ok 10\n"; }
1;
EOT
close(F);
Foo::a();

a96 2
unlink "$dir/auto/Foo/a.al";
unlink "$dir/auto/Foo/b.al";
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d6 1
a6 2
    @@INC = $dir;
    push @@INC, '../lib';
@


