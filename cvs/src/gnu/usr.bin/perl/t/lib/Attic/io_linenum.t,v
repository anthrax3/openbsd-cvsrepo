head	1.2;
access;
symbols
	OPENBSD_3_2:1.1.1.2.0.6
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.10.27.22.25.36;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2000.04.06.16.10.44;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.06.16.10.44;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.05.24.18.25.20;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl

# test added 29th April 1999 by Paul Johnson (pjcj@@transeda.com)
# updated    28th May   1999 by Paul Johnson

my $File;

BEGIN
{
  $File = __FILE__;
  if (-d 't')
  {
    chdir 't';
    $File =~ s/^t\W+//;                                 # Remove first directory
  }
  unshift @@INC, '../lib' if -d '../lib';
  require strict; import strict;
}

use Test;

BEGIN { plan tests => 12 }

use IO::File;

sub lineno
{
  my ($f) = @@_;
  my $l;
  $l .= "$. ";
  $l .= $f->input_line_number;
  $l .= " $.";                     # check $. before and after input_line_number
  $l;
}

my $t;

open (F, $File) or die $!;
my $io = IO::File->new($File) or die $!;

<F> for (1 .. 10);
ok(lineno($io), "10 0 10");

$io->getline for (1 .. 5);
ok(lineno($io), "5 5 5");

<F>;
ok(lineno($io), "11 5 11");

$io->getline;
ok(lineno($io), "6 6 6");

$t = tell F;                                        # tell F; provokes a warning
ok(lineno($io), "11 6 11");

<F>;
ok(lineno($io), "12 6 12");

select F;
ok(lineno($io), "12 6 12");

<F> for (1 .. 10);
ok(lineno($io), "22 6 22");

$io->getline for (1 .. 5);
ok(lineno($io), "11 11 11");

$t = tell F;
# We used to have problems here before local $. worked.
# input_line_number() used to use select and tell.  When we did the
# same, that mechanism broke.  It should work now.
ok(lineno($io), "22 11 22");

{
  local $.;
  $io->getline for (1 .. 5);
  ok(lineno($io), "16 16 16");
}

ok(lineno($io), "22 16 22");
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@virgin perl 5.6.0
@
text
@@


1.1.1.2
log
@stock perl 5.6.1
@
text
@d16 1
a16 1
  @@INC = '../lib';
@

