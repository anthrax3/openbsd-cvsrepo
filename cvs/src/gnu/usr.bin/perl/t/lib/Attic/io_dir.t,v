head	1.2;
access;
symbols
	OPENBSD_3_2:1.1.1.2.0.6
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.10.27.22.25.36;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2000.04.06.16.10.43;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.06.16.10.43;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.05.24.18.25.20;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl

BEGIN {
    unless(grep /blib/, @@INC) {
        chdir 't' if -d 't';
        unshift @@INC, '../lib' if -d '../lib';
    }
    require Config; import Config;
    if ($] < 5.00326 || not $Config{'d_readdir'}) {
	print "1..0\n";
	exit 0;
    }
}

select(STDERR); $| = 1;
select(STDOUT); $| = 1;

use IO::Dir qw(DIR_UNLINK);

print "1..10\n";

$dot = new IO::Dir ".";
print defined($dot) ? "ok" : "not ok", " 1\n";

@@a = sort <*>;
do { $first = $dot->read } while defined($first) && $first =~ /^\./;
print +(grep { $_ eq $first } @@a) ? "ok" : "not ok", " 2\n";

@@b = sort($first, (grep {/^[^.]/} $dot->read));
print +(join("\0", @@a) eq join("\0", @@b)) ? "ok" : "not ok", " 3\n";

$dot->rewind;
@@c = sort grep {/^[^.]/} $dot->read;
print +(join("\0", @@b) eq join("\0", @@c)) ? "ok" : "not ok", " 4\n";

$dot->close;
$dot->rewind;
print defined($dot->read) ? "not ok" : "ok", " 5\n";

open(FH,'>X') || die "Can't create x";
print FH "X";
close(FH);

tie %dir, IO::Dir, ".";
my @@files = keys %dir;

# I hope we do not have an empty dir :-)
print @@files ? "ok" : "not ok", " 6\n";

my $stat = $dir{'X'};
print defined($stat) && UNIVERSAL::isa($stat,'File::stat') && $stat->size == 1
	? "ok" : "not ok", " 7\n";

delete $dir{'X'};

print -f 'X' ? "ok" : "not ok", " 8\n";

tie %dirx, IO::Dir, ".", DIR_UNLINK;

my $statx = $dirx{'X'};
print defined($statx) && UNIVERSAL::isa($statx,'File::stat') && $statx->size == 1
	? "ok" : "not ok", " 9\n";

delete $dirx{'X'};

print -f 'X' ? "not ok" : "ok", " 10\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@virgin perl 5.6.0
@
text
@@


1.1.1.2
log
@stock perl 5.6.1
@
text
@d6 1
a6 1
        @@INC = '../lib';
@

