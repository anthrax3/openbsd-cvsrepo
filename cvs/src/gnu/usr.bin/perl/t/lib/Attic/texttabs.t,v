head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.0.8
	OPENBSD_2_6_BASE:1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2002.10.27.22.25.36;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2001.05.24.18.36.15;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.06.17.08.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.05.08;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.41.41;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.10.45;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.25.27;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.4
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!./perl -w

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
}

@@tests = (split(/\nEND\n/s, <<DONE));
TEST 1 u
                x
END
		x
END
TEST 2 e
		x
END
                x
END
TEST 3 e
	x
		y
			z
END
        x
                y
                        z
END
TEST 4 u
        x
                y
                        z
END
	x
		y
			z
END
TEST 5 u
This    Is      a       test    of      a       line with many embedded tabs
END
This	Is	a	test	of	a	line with many embedded tabs
END
TEST 6 e
This	Is	a	test	of	a	line with many embedded tabs
END
This    Is      a       test    of      a       line with many embedded tabs
END
TEST 7 u
            x
END
	    x
END
TEST 8 e
	
		
   	

           
END
        
                
        

           
END
TEST 9 u
           
END
	   
END
TEST 10 u
	
		
   	

           
END
	
		
	

	   
END
TEST 11 u
foobar                  IN	A		140.174.82.12

END
foobar			IN	A		140.174.82.12

END
DONE

$| = 1;

print "1..".scalar(@@tests/2)."\n";

use Text::Tabs;

$rerun = $ENV{'PERL_DL_NONLAZY'} ? 0 : 1;

$tn = 1;
while (@@tests) {
	my $in = shift(@@tests);
	my $out = shift(@@tests);

	$in =~ s/^TEST\s*(\d+)?\s*(\S+)?\n//;

	if ($2 eq 'e') {
		$f = \&expand;
		$fn = 'expand';
	} else {
		$f = \&unexpand;
		$fn = 'unexpand';
	}

	my $back = &$f($in);

	if ($back eq $out) {
		print "ok $tn\n";
	} elsif ($rerun) {
		my $oi = $in;
		foreach ($in, $back, $out) {
			s/\t/^I\t/gs;
			s/\n/\$\n/gs;
		}
		print "------------ input ------------\n";
		print $in;
		print "\$\n------------ $fn -----------\n";
		print $back;
		print "\$\n------------ expected ---------\n";
		print $out;
		print "\$\n-------------------------------\n";
		$Text::Tabs::debug = 1;
		my $back = &$f($in);
		exit(1);
	} else {
		print "not ok $tn\n";
	}
	$tn++;
}
@


1.3
log
@merge in perl 5.6.1 with our local changes
@
text
@@


1.2
log
@perl-5.6.0 + local changes
@
text
@d1 1
a1 1
#!./perl
d5 1
a5 1
    unshift @@INC, '../lib';
d8 80
a87 1
print "1..3\n";
d89 2
a90 1
use Text::Tabs;
d92 1
a92 1
$tabstop = 4;
d94 1
a94 3
$s1 = "foo\tbar\tb\tb";
$s2 = expand $s1;
$s3 = unexpand $s2;
d96 1
a96 2
print "not " unless $s2 eq "foo bar b   b";
print "ok 1\n";
d98 1
a98 2
print "not " unless $s3 eq "foo bar b\tb";
print "ok 2\n";
d100 40
a139 5

$tabstop = 8;

print "not " unless unexpand("                    foo") eq "\t\t    foo";
print "ok 3\n";
@


1.1
log
@perl 5.004_04
@
text
@d5 1
a5 1
    @@INC = '../lib';
@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d5 1
a5 1
    unshift @@INC, '../lib';
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d1 1
a1 1
#!./perl -w
d5 1
a5 1
    @@INC = '../lib';
d8 1
a8 80
@@tests = (split(/\nEND\n/s, <<DONE));
TEST 1 u
                x
END
		x
END
TEST 2 e
		x
END
                x
END
TEST 3 e
	x
		y
			z
END
        x
                y
                        z
END
TEST 4 u
        x
                y
                        z
END
	x
		y
			z
END
TEST 5 u
This    Is      a       test    of      a       line with many embedded tabs
END
This	Is	a	test	of	a	line with many embedded tabs
END
TEST 6 e
This	Is	a	test	of	a	line with many embedded tabs
END
This    Is      a       test    of      a       line with many embedded tabs
END
TEST 7 u
            x
END
	    x
END
TEST 8 e
	
		
   	

           
END
        
                
        

           
END
TEST 9 u
           
END
	   
END
TEST 10 u
	
		
   	

           
END
	
		
	

	   
END
TEST 11 u
foobar                  IN	A		140.174.82.12

END
foobar			IN	A		140.174.82.12
d10 7
a16 2
END
DONE
d18 2
a19 1
$| = 1;
d21 2
a22 1
print "1..".scalar(@@tests/2)."\n";
a23 1
use Text::Tabs;
d25 1
a25 1
$rerun = $ENV{'PERL_DL_NONLAZY'} ? 0 : 1;
d27 2
a28 40
$tn = 1;
while (@@tests) {
	my $in = shift(@@tests);
	my $out = shift(@@tests);

	$in =~ s/^TEST\s*(\d+)?\s*(\S+)?\n//;

	if ($2 eq 'e') {
		$f = \&expand;
		$fn = 'expand';
	} else {
		$f = \&unexpand;
		$fn = 'unexpand';
	}

	my $back = &$f($in);

	if ($back eq $out) {
		print "ok $tn\n";
	} elsif ($rerun) {
		my $oi = $in;
		foreach ($in, $back, $out) {
			s/\t/^I\t/gs;
			s/\n/\$\n/gs;
		}
		print "------------ input ------------\n";
		print $in;
		print "\$\n------------ $fn -----------\n";
		print $back;
		print "\$\n------------ expected ---------\n";
		print $out;
		print "\$\n-------------------------------\n";
		$Text::Tabs::debug = 1;
		my $back = &$f($in);
		exit(1);
	} else {
		print "not ok $tn\n";
	}
	$tn++;
}
@


