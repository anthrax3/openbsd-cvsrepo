head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	PERL_5_20_2:1.1.1.8
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	PERL_5_20_1:1.1.1.8
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	PERL_5_18_2:1.1.1.8
	PERL:1.1.1
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	PERL_5_16_3:1.1.1.8
	OPENBSD_5_3:1.1.1.7.0.10
	OPENBSD_5_3_BASE:1.1.1.7
	OPENBSD_5_2:1.1.1.7.0.8
	OPENBSD_5_2_BASE:1.1.1.7
	OPENBSD_5_1_BASE:1.1.1.7
	OPENBSD_5_1:1.1.1.7.0.6
	OPENBSD_5_0:1.1.1.7.0.4
	OPENBSD_5_0_BASE:1.1.1.7
	OPENBSD_4_9:1.1.1.7.0.2
	OPENBSD_4_9_BASE:1.1.1.7
	PERL_5_12_2:1.1.1.7
	OPENBSD_4_8:1.1.1.6.0.4
	OPENBSD_4_8_BASE:1.1.1.6
	OPENBSD_4_7:1.1.1.6.0.2
	OPENBSD_4_7_BASE:1.1.1.6
	PERL_5_10_1:1.1.1.6
	OPENBSD_4_6:1.1.1.5.0.6
	OPENBSD_4_6_BASE:1.1.1.5
	OPENBSD_4_5:1.1.1.5.0.2
	OPENBSD_4_5_BASE:1.1.1.5
	PERL_5_10_0:1.1.1.5
	OPENBSD_4_4:1.1.1.4.0.10
	OPENBSD_4_4_BASE:1.1.1.4
	OPENBSD_4_3:1.1.1.4.0.8
	OPENBSD_4_3_BASE:1.1.1.4
	OPENBSD_4_2:1.1.1.4.0.6
	OPENBSD_4_2_BASE:1.1.1.4
	OPENBSD_4_1:1.1.1.4.0.4
	OPENBSD_4_1_BASE:1.1.1.4
	OPENBSD_4_0:1.1.1.4.0.2
	OPENBSD_4_0_BASE:1.1.1.4
	PERL_5_8_8:1.1.1.4
	OPENBSD_3_9:1.1.1.3.0.10
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.8
	OPENBSD_3_8_BASE:1.1.1.3
	OPENBSD_3_7:1.1.1.3.0.6
	OPENBSD_3_7_BASE:1.1.1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.1.1.3.0.4
	OPENBSD_3_6_BASE:1.1.1.3
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.2
	OPENBSD_3_5_BASE:1.1.1.3
	PERL_5_8_2:1.1.1.3
	OPENBSD_3_4:1.1.1.2.0.4
	OPENBSD_3_4_BASE:1.1.1.2
	OPENBSD_3_3:1.1.1.2.0.2
	OPENBSD_3_3_BASE:1.1.1.2
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.8
date	2017.02.05.00.33.41;	author afresh1;	state Exp;
branches;
next	1.7;
commitid	7JLVNm1wwPgqSqTa;

1.7
date	2017.02.05.00.32.19;	author afresh1;	state Exp;
branches;
next	1.6;
commitid	cxJ08BvJA9Pt2PTM;

1.6
date	2015.04.25.19.26.22;	author afresh1;	state Exp;
branches;
next	1.5;
commitid	3qGYFVvfrExB70FB;

1.5
date	2015.04.25.19.14.48;	author afresh1;	state Exp;
branches;
next	1.4;
commitid	XRK22kO4se3v2i2I;

1.4
date	2014.11.17.21.01.01;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	LnErp1MFKSuew5Fr;

1.3
date	2014.11.17.20.57.07;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	QP75iYx42Uo7mMxO;

1.2
date	2013.03.25.20.40.59;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	99.04.29.22.41.35;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.41.35;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.10.27.22.15.10;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.03.02.44.30;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.03.28.18.49.41;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.29.17.18.59;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2009.10.12.18.10.42;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2010.09.24.14.49.15;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2013.03.25.20.09.33;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Apply local patches - perl-5.24.1
@
text
@require '_h2ph_pre.ph';

no warnings qw(redefine misc);

unless(defined(&SQUARE)) {
    sub SQUARE {
	my($x) = @@_;
	eval q((($x)*($x)));
    }
}
unless(defined(&ERROR)) {
    eval 'sub ERROR {
        my($x) = @@_;
	    eval q( &fprintf( &stderr, \\"%s\\\\n\\", $x->[2][3][0]));
    }' unless defined(&ERROR);
}
unless(defined(&_H2PH_H_)) {
    eval 'sub _H2PH_H_ () {1;}' unless defined(&_H2PH_H_);
    # "$Revision h2ph.h,v 1.0 98/05/04 20:42:14 billy $"
    undef(&MAX) if defined(&MAX);
    eval 'sub MAX {
        my($a,$b) = @@_;
	    eval q((($a) > ($b) ? ($a) : ($b)));
    }' unless defined(&MAX);
    eval 'sub NOTTRUE () {0;}' unless defined(&NOTTRUE);
    undef(&NOTTRUE) if defined(&NOTTRUE);
    if(defined(&__SOME_UNIMPORTANT_PROPERTY)) {
	eval 'sub MIN {
	    my($a,$b) = @@_;
    	    eval q((($a) < ($b) ? ($a) : ($b)));
	}' unless defined(&MIN);
    }
    if(!(defined (&__SOMETHING_MORE_IMPORTANT))) {
    }
 elsif(!(defined (&__SOMETHING_REALLY_REALLY_IMPORTANT))) {
	die("Nup, can't go on");
    } else {
	eval 'sub EVERYTHING_IS_OK () {1;}' unless defined(&EVERYTHING_IS_OK);
    }
    undef(&WHATEVER) if defined(&WHATEVER);
    if((!((defined (&__SOMETHING_TRIVIAL)  && defined (&__SOMETHING_LESS_SO))) || defined (&__SOMETHING_OVERPOWERING))) {
	eval 'sub WHATEVER () {6;}' unless defined(&WHATEVER);
    }
 elsif(!(defined (&__SOMETHING_TRIVIAL)) ) {
	eval 'sub WHATEVER () {7;}' unless defined(&WHATEVER);
    }
 elsif(!(defined (&__SOMETHING_LESS_SO)) ) {
	eval 'sub WHATEVER () {8;}' unless defined(&WHATEVER);
    } else {
	eval 'sub WHATEVER () {1000;}' unless defined(&WHATEVER);
    }
    if(0) {
	require 'sys/socket.ph';
	require 'sys/ioctl.ph';
	eval {
	    my(@@REM);
	    my(%INCD) = map { $INC{$_} => 1 } (grep { $_ eq "sys/fcntl.ph" } keys(%INC));
	    @@REM = map { "$_/sys/fcntl.ph" } (grep { not exists($INCD{"$_/sys/fcntl.ph"}) and -f "$_/sys/fcntl.ph" } @@INC);
	    require "$REM[0]" if @@REM;
	};
	warn($@@) if $@@;
    }
    eval("sub sun () { 0; }") unless defined(&sun);
    eval("sub mon () { 1; }") unless defined(&mon);
    eval("sub tue () { 2; }") unless defined(&tue);
    eval("sub wed () { 3; }") unless defined(&wed);
    eval("sub thu () { 4; }") unless defined(&thu);
    eval("sub fri () { 5; }") unless defined(&fri);
    eval("sub sat () { 6; }") unless defined(&sat);
    eval("sub Sun () { 0; }") unless defined(&Sun);
    eval("sub Mon () { 1; }") unless defined(&Mon);
    eval("sub Tue () { 2; }") unless defined(&Tue);
    eval("sub Wed () { 3; }") unless defined(&Wed);
    eval("sub Thu () { 4; }") unless defined(&Thu);
    eval("sub Fri () { 5; }") unless defined(&Fri);
    eval("sub Sat () { 6; }") unless defined(&Sat);
    unless(defined(&_SOMETHING_TRIGRAPHIC)) {
	eval 'sub _SOMETHING_TRIGRAPHIC () {1;}' unless defined(&_SOMETHING_TRIGRAPHIC);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_0 () {"|";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_0);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_1 () {"^";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_1);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_2 () {"[";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_2);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_3 () {"]";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_3);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_4 () {"~0";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_4);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_5 () {"\\ ";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_5);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_6 () {"{";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_6);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_7 () {"#";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_7);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_8 () {"}";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_8);
    }
    if(1) {
    }
    eval("sub flim () { 0; }") unless defined(&flim);
    eval("sub flam () { 1; }") unless defined(&flam);
    eval 'sub multiline () {"multilinestring";}' unless defined(&multiline);
}
1;
@


1.7
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@a92 4
    eval 'sub blli_in_use {
        my($blli) = @@_;
	    eval q({  ($blli->{l2_proto}) ||  ($blli->{l3_proto}); });
    }' unless defined(&blli_in_use);
@


1.6
log
@Apply local patches, remove excess files - perl-5.20.2
@
text
@d93 4
@


1.5
log
@Fix merge issues, remove excess files - match perl-5.20.2 dist
@
text
@a92 4
    eval 'sub blli_in_use {
        my($blli) = @@_;
	    eval q({  ($blli->{l2_proto}) ||  ($blli->{l3_proto}); });
    }' unless defined(&blli_in_use);
@


1.4
log
@Apply local patches to perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d93 4
@


1.3
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@a92 4
    eval 'sub blli_in_use {
        my($blli) = @@_;
	    eval q({  ($blli->{l2_proto}) ||  ($blli->{l3_proto}); });
    }' unless defined(&blli_in_use);
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d93 4
@


1.1
log
@Initial revision
@
text
@d3 2
d7 1
a7 1
	local($x) = @@_;
d13 1
a13 1
        local($x) = @@_;
d22 1
a22 1
        local($a,$b) = @@_;
d25 2
d29 1
a29 1
	    local($a,$b) = @@_;
d33 1
a33 1
    if(!(defined (defined(&__SOMETHING_MORE_IMPORTANT) ? &__SOMETHING_MORE_IMPORTANT : 0))) {
d35 2
a36 2
 elsif(!(defined (defined(&__SOMETHING_REALLY_REALLY_IMPORTANT) ? &__SOMETHING_REALLY_REALLY_IMPORTANT : 0))) {
	die("Nup\,\ can\'t\ go\ on\ ");
d41 1
a41 1
    if((!((defined (defined(&__SOMETHING_TRIVIAL) ? &__SOMETHING_TRIVIAL : 0)  && defined (defined(&__SOMETHING_LESS_SO) ? &__SOMETHING_LESS_SO : 0))) || defined (defined(&__SOMETHING_OVERPOWERING) ? &__SOMETHING_OVERPOWERING : 0))) {
d44 1
a44 1
 elsif(!(defined (defined(&__SOMETHING_TRIVIAL) ? &__SOMETHING_TRIVIAL : 0)) ) {
d47 1
a47 1
 elsif(!(defined (defined(&__SOMETHING_LESS_SO) ? &__SOMETHING_LESS_SO : 0)) ) {
d52 11
a62 8
    require 'sys/socket.ph';
    require 'sys/ioctl.ph';
    eval {
	my(%INCD) = map { $INC{$_} => 1 } (grep { $_ eq "sys/fcntl.ph" } keys(%INC));
	my(@@REM) = map { "$_/sys/fcntl.ph" } (grep { not exists($INCD{"$_/sys/fcntl.ph"})and -f "$_/sys/fcntl.ph" } @@INC);
	require "$REM[0]" if @@REM;
    };
    warn($@@) if $@@;
d77 17
@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@stock perl 5.8.0 from CPAN
@
text
@d32 1
a32 1
	die("Nup, can't go on");
a69 16
    unless(defined(&_SOMETHING_TRIGRAPHIC)) {
	eval 'sub _SOMETHING_TRIGRAPHIC () {1;}' unless defined(&_SOMETHING_TRIGRAPHIC);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_0 () {"|";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_0);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_1 () {"^";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_1);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_2 () {"[";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_2);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_3 () {"]";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_3);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_4 () {"~0";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_4);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_5 () {"\\ ";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_5);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_6 () {"{";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_6);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_7 () {"#";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_7);
	eval 'sub SOMETHING_ELSE_TRIGRAPHIC_8 () {"}";}' unless defined(&SOMETHING_ELSE_TRIGRAPHIC_8);
    }
    if(1) {
    }
    eval("sub flim () { 0; }") unless defined(&flim);
    eval("sub flam () { 1; }") unless defined(&flam);
@


1.1.1.3
log
@perl 5.8.2 from CPAN
@
text
@a2 2
no warnings 'redefine';

a50 1
	my(@@REM);
d52 1
a52 1
	@@REM = map { "$_/sys/fcntl.ph" } (grep { not exists($INCD{"$_/sys/fcntl.ph"}) and -f "$_/sys/fcntl.ph" } @@INC);
a85 1
    eval 'sub multiline () {"multilinestring";}' unless defined(&multiline);
@


1.1.1.4
log
@perl 5.8.8 import
@
text
@d7 1
a7 1
	my($x) = @@_;
d13 1
a13 1
        my($x) = @@_;
d22 1
a22 1
        my($a,$b) = @@_;
d27 1
a27 1
	    my($a,$b) = @@_;
@


1.1.1.5
log
@import perl 5.10.0 from CPAN
@
text
@d31 1
a31 1
    if(!(defined (defined(&__SOMETHING_MORE_IMPORTANT) ? &__SOMETHING_MORE_IMPORTANT : undef))) {
d33 1
a33 1
 elsif(!(defined (defined(&__SOMETHING_REALLY_REALLY_IMPORTANT) ? &__SOMETHING_REALLY_REALLY_IMPORTANT : undef))) {
d39 1
a39 1
    if((!((defined (defined(&__SOMETHING_TRIVIAL) ? &__SOMETHING_TRIVIAL : undef)  && defined (defined(&__SOMETHING_LESS_SO) ? &__SOMETHING_LESS_SO : undef))) || defined (defined(&__SOMETHING_OVERPOWERING) ? &__SOMETHING_OVERPOWERING : undef))) {
d42 1
a42 1
 elsif(!(defined (defined(&__SOMETHING_TRIVIAL) ? &__SOMETHING_TRIVIAL : undef)) ) {
d45 1
a45 1
 elsif(!(defined (defined(&__SOMETHING_LESS_SO) ? &__SOMETHING_LESS_SO : undef)) ) {
@


1.1.1.6
log
@import perl 5.10.1
@
text
@d3 1
a3 1
no warnings qw(redefine misc);
a24 2
    eval 'sub NOTTRUE () {0;}' unless defined(&NOTTRUE);
    undef(&NOTTRUE) if defined(&NOTTRUE);
d50 9
a58 11
    if(0) {
	require 'sys/socket.ph';
	require 'sys/ioctl.ph';
	eval {
	    my(@@REM);
	    my(%INCD) = map { $INC{$_} => 1 } (grep { $_ eq "sys/fcntl.ph" } keys(%INC));
	    @@REM = map { "$_/sys/fcntl.ph" } (grep { not exists($INCD{"$_/sys/fcntl.ph"}) and -f "$_/sys/fcntl.ph" } @@INC);
	    require "$REM[0]" if @@REM;
	};
	warn($@@) if $@@;
    }
@


1.1.1.7
log
@Perl 5.12.2 from CPAN
@
text
@d33 1
a33 1
    if(!(defined (&__SOMETHING_MORE_IMPORTANT))) {
d35 1
a35 1
 elsif(!(defined (&__SOMETHING_REALLY_REALLY_IMPORTANT))) {
d41 1
a41 1
    if((!((defined (&__SOMETHING_TRIVIAL)  && defined (&__SOMETHING_LESS_SO))) || defined (&__SOMETHING_OVERPOWERING))) {
d44 1
a44 1
 elsif(!(defined (&__SOMETHING_TRIVIAL)) ) {
d47 1
a47 1
 elsif(!(defined (&__SOMETHING_LESS_SO)) ) {
@


1.1.1.8
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@a92 4
    eval 'sub blli_in_use {
        my($blli) = @@_;
	    eval q({  ($blli->{l2_proto}) ||  ($blli->{l3_proto}); });
    }' unless defined(&blli_in_use);
@


