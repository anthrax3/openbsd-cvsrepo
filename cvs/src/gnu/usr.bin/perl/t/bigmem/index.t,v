head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.2
	OPENBSD_6_2_BASE:1.1
	PERL_5_24_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2017.02.05.00.32.19;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cxJ08BvJA9Pt2PTM;

1.1.1.1
date	2017.08.14.13.46.22;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.1
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl
BEGIN {
    chdir 't' if -d 't';
    @@INC = "../lib";
}

use strict;
require './test.pl';
use Config qw(%Config);

# memory usage checked with top
$ENV{PERL_TEST_MEMORY} >= 2
    or skip_all("Need ~2GB for this test");
$Config{ptrsize} >= 8
    or skip_all("Need 64-bit pointers for this test");

plan(tests => 4);

my $space = " "; # avoid constant folding from doubling memory usage
# concatenation here increases memory usage significantly
my $work = $space x 0x80000002;
substr($work, 0x80000000) = "\n\n";

# this would SEGV
is(index($work, "\n"), 0x80000000, "test index() over 2G mark");

# this would simply fail
is(rindex($work, "\n"), 0x80000001, "test rindex() over 2G mark");

utf8::upgrade($work);

# this would SEGV
is(index($work, "\n"), 0x80000000, "test index() over 2G mark (utf8-ish)");

# this would simply fail
is(rindex($work, "\n"), 0x80000001, "test rindex() over 2G mark (utf8-ish)");

@


1.1.1.1
log
@Import perl-5.24.2
@
text
@@

