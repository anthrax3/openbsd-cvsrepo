head	1.11;
access;
symbols
	PERL_5_24_2:1.1.1.4
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.11
date	2017.08.14.13.49.45;	author afresh1;	state Exp;
branches;
next	1.10;
commitid	AOpGtCFzbfdujI88;

1.10
date	2017.08.14.13.48.48;	author afresh1;	state Exp;
branches;
next	1.9;
commitid	CrMEpTqBUsxCMTjx;

1.9
date	2017.02.05.00.33.41;	author afresh1;	state Exp;
branches;
next	1.8;
commitid	7JLVNm1wwPgqSqTa;

1.8
date	2017.02.05.00.32.21;	author afresh1;	state Exp;
branches;
next	1.7;
commitid	cxJ08BvJA9Pt2PTM;

1.7
date	2015.04.25.19.26.22;	author afresh1;	state Exp;
branches;
next	1.6;
commitid	3qGYFVvfrExB70FB;

1.6
date	2015.04.25.19.14.49;	author afresh1;	state Exp;
branches;
next	1.5;
commitid	XRK22kO4se3v2i2I;

1.5
date	2014.11.17.21.01.01;	author afresh1;	state Exp;
branches;
next	1.4;
commitid	LnErp1MFKSuew5Fr;

1.4
date	2014.11.17.20.57.08;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	QP75iYx42Uo7mMxO;

1.3
date	2014.03.24.15.05.33;	author afresh1;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.25.20.41.00;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.25.20.09.37;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.09.37;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.59.11;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.11.17.20.53.18;	author afresh1;	state Exp;
branches;
next	1.1.1.4;
commitid	B31cAbBIXiCqnL97;

1.1.1.4
date	2017.08.14.13.46.24;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.11
log
@Apply local patches - perl-5.24.2

OK bluhm@@, Reads ok sthen@@
@
text
@#!/perl -w
use 5.010;
use strict;

# This tests properties of dual-life modules:
#
# * Are all dual-life programs being generated in utils/?
# ... or in the module-specific locations where they are built.

chdir 't';
require './test.pl';

use Config;
if ( $Config{usecrosscompile} ) {
  skip_all( "Not all files are available during cross-compilation" );
}

plan('no_plan');

use File::Basename;
use File::Find;
use File::Spec::Functions;

# Exceptions that are found in dual-life bin dirs but aren't
# installed by default; some occur only during testing:
my $not_installed = qr{^(?:
  \.\./cpan/Archive-Tar/bin/ptar.*
   |
  \.\./cpan/JSON-PP/bin/json_pp
   |
  \.\./cpan/IO-Compress/bin/zipdetails
   |
  \.\./cpan/Encode/bin/u(?:cm(?:2table|lint|sort)|nidump)
   |
  \.\./cpan/Module-(?:Metadata|Build)
                               /MB-[\w\d]+/Simple/(?:test_install/)?bin/.*
)\z}ix;

my %dist_dir_exe;

$dist_dir_exe{lc "podselect.PL"} = "../cpan/Pod-Parser/podselect";
$dist_dir_exe{lc "podchecker.PL"} = "../cpan/Pod-Checker/podchecker";
$dist_dir_exe{lc "pod2usage.PL"} = "../cpan/Pod-Usage/pod2usage";

foreach (qw (pod2man pod2text)) {
    $dist_dir_exe{lc "$_.PL"} = "../cpan/podlators/scripts/$_";
    # redundant but necessary given use of scripts/ for both
    # built version and .PL.
    $dist_dir_exe{lc $_} = "../cpan/podlators/scripts/$_";
};
$dist_dir_exe{'pod2html.pl'} = '../ext/Pod-Html';

my @@programs;

my $ext = $^O eq 'VMS' ? '.com' : '';

find(
  { no_chdir => 1, wanted => sub {
    my $name = $File::Find::name;
    return if $name =~ /blib/;
    return unless $name =~ m{/(?:bin|scripts?)/\S+\z} && $name !~ m{/t/};
    $name =~ s/${ext}\z//;

    push @@programs, $name;
  }},
  qw( ../cpan ../dist ../ext ),
);


for my $f ( @@programs ) {
  $f =~ s/\.\z// if $^O eq 'VMS';
  next if $f =~ $not_installed;
  my $bn = basename($f);
  if(grep { /\A(?i:$bn)\z/ } keys %dist_dir_exe) {
    ok( -f "$dist_dir_exe{lc $bn}$ext", $f);
  } else {
    ok( -f catfile('..', 'utils', "$bn$ext"), $f );
  }
}

@


1.10
log
@Fix merge issues, remove excess files - match perl-5.24.2 dist

OK bluhm@@, Reads ok sthen@@
@
text
@d27 6
@


1.9
log
@Apply local patches - perl-5.24.1
@
text
@a26 6
  \.\./cpan/Archive-Tar/bin/ptar.*
   |
  \.\./cpan/JSON-PP/bin/json_pp
   |
  \.\./cpan/IO-Compress/bin/zipdetails
   |
@


1.8
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d27 6
@


1.7
log
@Apply local patches, remove excess files - perl-5.20.2
@
text
@d8 1
a26 6
  \.\./cpan/Archive-Tar/bin/ptar.*
   |
  \.\./cpan/JSON-PP/bin/json_pp
   |
  \.\./cpan/IO-Compress/bin/zipdetails
   |
d40 4
a43 1
    $dist_dir_exe{lc "$_.PL"} = "../cpan/podlators/$_";
d49 2
d52 1
a52 1
  { no_chidr => 1, wanted => sub {
d56 1
a62 1
my $ext = $^O eq 'VMS' ? '.com' : '';
d69 1
a69 1
    ok( -f "$dist_dir_exe{lc $bn}$ext", "$f$ext");
d71 1
a71 1
    ok( -f catfile('..', 'utils', "$bn$ext"), "$f$ext" );
@


1.6
log
@Fix merge issues, remove excess files - match perl-5.20.2 dist
@
text
@d26 6
@


1.5
log
@Apply local patches to perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@a25 6
  \.\./cpan/Archive-Tar/bin/ptar.*
   |
  \.\./cpan/JSON-PP/bin/json_pp
   |
  \.\./cpan/IO-Compress/bin/zipdetails
   |
@


1.4
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d26 6
@


1.3
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d12 5
d28 2
a29 3
  \.\./cpan/Module-Build/MB-[\w\d]+/Simple/(?:test_install/)?bin/.*
   |
  \.\./cpan/Archive-Tar/bin/ptar.*
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d30 4
a33 3
foreach (qw (podchecker podselect pod2usage)) {
    $dist_dir_exe{lc "$_.PL"} = "../cpan/Pod-Parser/$_";
};
d42 1
a42 1
  sub {
d48 1
a48 1
  },
d58 1
a58 1
  if(qr/\A(?i:$bn)\z/ ~~ %dist_dir_exe) {
@


1.1
log
@Initial revision
@
text
@d24 2
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d28 3
a30 4
$dist_dir_exe{lc "podselect.PL"} = "../cpan/Pod-Parser/podselect";
$dist_dir_exe{lc "podchecker.PL"} = "../cpan/Pod-Checker/podchecker";
$dist_dir_exe{lc "pod2usage.PL"} = "../cpan/Pod-Usage/pod2usage";

d39 1
a39 1
  { no_chidr => 1, wanted => sub {
d45 1
a45 1
  }},
d55 1
a55 1
  if(grep { /\A(?i:$bn)\z/ } keys %dist_dir_exe) {
@


1.1.1.3
log
@Import perl-5.20.1
@
text
@a11 5
use Config;
if ( $Config{usecrosscompile} ) {
  skip_all( "Not all files are available during cross-compilation" );
}

d23 1
a23 2
  \.\./cpan/Module-(?:Metadata|Build)
                               /MB-[\w\d]+/Simple/(?:test_install/)?bin/.*
@


1.1.1.4
log
@Import perl-5.24.2
@
text
@a7 1
# ... or in the module-specific locations where they are built.
d39 1
a39 4
    $dist_dir_exe{lc "$_.PL"} = "../cpan/podlators/scripts/$_";
    # redundant but necessary given use of scripts/ for both
    # built version and .PL.
    $dist_dir_exe{lc $_} = "../cpan/podlators/scripts/$_";
a44 2
my $ext = $^O eq 'VMS' ? '.com' : '';

d46 1
a46 1
  { no_chdir => 1, wanted => sub {
a49 1
    $name =~ s/${ext}\z//;
d56 1
d63 1
a63 1
    ok( -f "$dist_dir_exe{lc $bn}$ext", $f);
d65 1
a65 1
    ok( -f catfile('..', 'utils', "$bn$ext"), $f );
@


