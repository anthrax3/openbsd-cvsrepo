head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.12
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.6
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.8
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.03.24.14.59.11;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.03.24.14.59.11;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl
#
# Tests for Perl mad environment
#
# $PERL_XMLDUMP

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require Config; import Config;
    require './test.pl';
    skip_all_without_config('mad');
}

use File::Path;
use File::Spec;

my $tempdir = tempfile;

mkdir $tempdir, 0700 or die "Can't mkdir '$tempdir': $!";
unshift @@INC, '../../lib';
my $cleanup = 1;

END {
    if ($cleanup) {
	rmtree($tempdir);
    }
}

plan tests => 4;

{
    delete local $ENV{$_} for keys %ENV;
    my $fn = File::Spec->catfile(File::Spec->curdir(), "withoutT.xml");
    $ENV{PERL_XMLDUMP} = $fn;
    fresh_perl_is('print q/hello/', '', {}, 'mad without -T');
    ok(-f $fn, "xml file created without -T as expected");
}

{
    delete local $ENV{$_} for keys %ENV;
    my $fn = File::Spec->catfile(File::Spec->curdir(), "withT.xml");
    fresh_perl_is('print q/hello/', 'hello', { switches => [ "-T" ] },
		  'mad with -T');
    ok(!-e $fn, "no xml file created with -T as expected");
}
@


1.1.1.1
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@@
