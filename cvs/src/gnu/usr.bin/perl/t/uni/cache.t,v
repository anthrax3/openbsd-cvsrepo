head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.3.0.16
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.10
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.12
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.4
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.8
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.6
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.2
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.2.0.10
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.8
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.6
	OPENBSD_5_0:1.1.1.2.0.4
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.2
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.21;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2008.09.29.17.19.03;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.29.17.19.03;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.09.24.14.49.16;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.03.25.20.09.38;	author sthen;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2017.08.14.13.46.25;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@BEGIN {
    chdir 't' if -d 't';
    require './test.pl';
    set_up_inc('../lib');
    skip_all_without_unicode_tables();
}

plan tests => 1;

# Looks to see if a "do 'unicore/lib/Sc/Hira.pl'" is called more than once, by
# putting a compile sub first on the library path;
# XXX Kludge: requires exact path, which might change, and has deep knowledge
# of how utf8_heavy.pl works, which might also change.

BEGIN { # Make sure catches compile time references
    $::count = 0;
    unshift @@INC, sub {
       $::count++ if $_[1] eq 'unicore/lib/Sc/Hira.pl';
    };
}

my $s = 'foo';

# The second value is to prevent an optimization that exists at the time this
# is written to re-use a property without trying to look it up if it is the
# only thing in a character class.  They differ in order to make sure that any
# future optimizations that don't re-use identical character classes don't come
# into play
$s =~ m/[\p{Hiragana}\x{101}]/;
$s =~ m/[\p{Hiragana}\x{102}]/;
$s =~ m/[\p{Hiragana}\x{103}]/;
$s =~ m/[\p{Hiragana}\x{104}]/;

is($::count, 1, "Swatch hash caching kept us from reloading swatch hash.");
@


1.1
log
@Initial revision
@
text
@d3 3
a5 2
    @@INC = qw(../lib .);
    require "test.pl";
d10 11
a20 4
my $count = 0;
unshift @@INC, sub {
       $count++ if $_[1] eq 'unicore/lib/gc_sc/Hira.pl';
};
d24 9
a32 4
$s =~ m/[\p{Hiragana}]/;
$s =~ m/[\p{Hiragana}]/;
$s =~ m/[\p{Hiragana}]/;
$s =~ m/[\p{Hiragana}]/;
d34 1
a34 1
is($count, 1, "Swatch hash caching kept us from reloading swatch hash.");
@


1.1.1.1
log
@import perl 5.10.0 from CPAN
@
text
@@


1.1.1.2
log
@Perl 5.12.2 from CPAN
@
text
@d11 1
a11 2
       # XXX Kludge requires exact path, which might change
       $count++ if $_[1] eq 'unicore/lib/Sc/Hira.pl';
@


1.1.1.3
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d9 5
a13 11
# Looks to see if a "do 'unicore/lib/Sc/Hira.pl'" is called more than once, by
# putting a compile sub first on the libary path;
# XXX Kludge: requires exact path, which might change, and has deep knowledge
# of how utf8_heavy.pl works, which might also change.

BEGIN { # Make sure catches compile time references
    $::count = 0;
    unshift @@INC, sub {
       $::count++ if $_[1] eq 'unicore/lib/Sc/Hira.pl';
    };
}
d17 4
a20 9
# The second value is to prevent an optimization that exists at the time this
# is written to re-use a property without trying to look it up if it is the
# only thing in a character class.  They differ in order to make sure that any
# future optimizations that don't re-use identical character classes don't come
# into play
$s =~ m/[\p{Hiragana}\x{101}]/;
$s =~ m/[\p{Hiragana}\x{102}]/;
$s =~ m/[\p{Hiragana}\x{103}]/;
$s =~ m/[\p{Hiragana}\x{104}]/;
d22 1
a22 1
is($::count, 1, "Swatch hash caching kept us from reloading swatch hash.");
@


1.1.1.4
log
@Import perl-5.24.2
@
text
@d3 2
a4 3
    require './test.pl';
    set_up_inc('../lib');
    skip_all_without_unicode_tables();
d10 1
a10 1
# putting a compile sub first on the library path;
@


