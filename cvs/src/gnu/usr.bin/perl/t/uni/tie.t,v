head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.3.0.16
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.10
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.12
	OPENBSD_5_8_BASE:1.1.1.3
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.4
	OPENBSD_5_7_BASE:1.1.1.3
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.8
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.6
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.2
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.2.0.10
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.8
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.6
	OPENBSD_5_0:1.1.1.2.0.4
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.2
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.21;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2009.10.12.18.10.42;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.10.42;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.09.24.14.49.16;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.03.25.20.09.38;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl -w

BEGIN {
    chdir 't' if -d 't';
    require './test.pl';
}

plan (tests => 10);
use strict;

{
    package UTF8Toggle;

    sub TIESCALAR {
	my $class = shift;
	my $value = shift;
	my $state = shift||0;
	return bless [$value, $state], $class;
    }

    sub FETCH {
	my $self = shift;
	$self->[1] = ! $self->[1];
	if ($self->[1]) {
	    utf8::downgrade($self->[0]);
	} else {
	    utf8::upgrade($self->[0]);
	}
	$self->[0];
    }
}

foreach my $t ("ASCII", "B\366se") {
    my $length = length $t;

    my $u;
    tie $u, 'UTF8Toggle',  $t;
    is (length $u, $length, "length of '$t'");
    is (length $u, $length, "length of '$t'");
    is (length $u, $length, "length of '$t'");
    is (length $u, $length, "length of '$t'");
}

{
    use utf8;
    use open qw( :utf8 :std );
    package Tìè::UTF8 {
        sub TIESCALAR {
            return bless {}, shift;
        }
    }
    
    my $t;
    tie $t, 'Tìè::UTF8';
    is ref(tied($t)), 'Tìè::UTF8', "Tie'ing to a UTF8 package works.";
}
{
    local $::TODO = "Need more tests!";
    fail();
}
@


1.1
log
@Initial revision
@
text
@d4 2
a5 4
    if ($ENV{'PERL_CORE'}){
        chdir 't';
        @@INC = '../lib';
    }
d8 1
a8 1
use Test::More tests => 9;
d45 14
a58 1
    local $TODO = "Need more tests!";
@


1.1.1.1
log
@import perl 5.10.1
@
text
@@


1.1.1.2
log
@Perl 5.12.2 from CPAN
@
text
@d4 4
a7 1
    require './test.pl';
d10 1
a10 1
plan (tests => 9);
d47 1
a47 1
    local $::TODO = "Need more tests!";
@


1.1.1.3
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d7 1
a7 1
plan (tests => 10);
a42 13
{
    use utf8;
    use open qw( :utf8 :std );
    package Tìè::UTF8 {
        sub TIESCALAR {
            return bless {}, shift;
        }
    }
    
    my $t;
    tie $t, 'Tìè::UTF8';
    is ref(tied($t)), 'Tìè::UTF8', "Tie'ing to a UTF8 package works.";
}
@


