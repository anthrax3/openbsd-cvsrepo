head	1.6;
access;
symbols
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.1
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2002.10.27.22.25.21;	author millert;	state dead;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.05;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.04.54;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.54.48;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.11.55;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.11.55;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#! /usr/bin/perl

# $RCSfile: gsh,v $$Revision: 1.5 $$Date: 2001/05/24 18:35:05 $

# Do rsh globally--see man page

$SIG{'QUIT'} = 'quit';			# install signal handler for SIGQUIT

sub getswitches {
    while ($ARGV[0] =~ /^-/) {		# parse switches
	$ARGV[0] =~ /^-h/ && ($showhost++,$silent++,shift(@@ARGV),next);
	$ARGV[0] =~ /^-s/ && ($silent++,shift(@@ARGV),next);
	$ARGV[0] =~ /^-d/ && ($dodist++,shift(@@ARGV),next);
	$ARGV[0] =~ /^-n/ && ($n=' -n',shift(@@ARGV),next);
	$ARGV[0] =~ /^-l/ && ($l=' -l ' . $ARGV[1],shift(@@ARGV),shift(@@ARGV),
				next);
	last;
    }
}

do getswitches();			# get any switches before class
$systype = shift;			# get name representing set of hosts
do getswitches();			# same switches allowed after class

if ($dodist) {				# distribute input over all rshes?
    `cat >/tmp/gsh$$`;			#  get input into a handy place
    $dist = " </tmp/gsh$$";		#  each rsh takes input from there
}

$cmd = join(' ',@@ARGV);			# remaining args constitute the command
$cmd =~ s/'/'"'"'/g;			# quote any embedded single quotes

$one_of_these = ":$systype:";		# prepare to expand "macros"
$one_of_these =~ s/\+/:/g;		# we hope to end up with list of
$one_of_these =~ s/-/:-/g;		#  colon separated attributes

@@ARGV = ();
push(@@ARGV,'.grem') if -f '.grem';
push(@@ARGV,'.ghosts') if -f '.ghosts';
push(@@ARGV,'/etc/ghosts');

$remainder = '';

line: while (<>) {		# for each line of ghosts

    s/[ \t]*\n//;			# trim trailing whitespace
    if (!$_ || /^#/) {			# skip blank line or comment
	next line;
    }

    if (/^(\w+)=(.+)/) {		# a macro line?
	$name = $1; $repl = $2;
	$repl =~ s/\+/:/g;
	$repl =~ s/-/:-/g;
	$one_of_these =~ s/:$name:/:$repl:/;	# do expansion in "wanted" list
	$repl =~ s/:/:-/g;
	$one_of_these =~ s/:-$name:/:-$repl:/;
	next line;
    }

    # we have a normal line

    @@attr = split(' ');			# a list of attributes to match against
					#   which we put into an array
    $host = $attr[0];			# the first attribute is the host name
    if ($showhost) {
	$showhost = "$host:\t";
    }

    $wanted = 0;
    foreach $attr (@@attr) {		# iterate over attribute array
	$wanted++ if index($one_of_these,":$attr:") >= 0;
	$wanted = -9999 if index($one_of_these,":-$attr:") >= 0;
    }
    if ($wanted > 0) {
	print "rsh $host$l$n '$cmd'\n" unless $silent;
	$SIG{'INT'} = 'DEFAULT';
	if (open(PIPE,"rsh $host$l$n '$cmd'$dist 2>&1|")) {	# start an rsh
	    $SIG{'INT'} = 'cont';
	    for ($iter=0; <PIPE>; $iter++) {
		unless ($iter) {
		    $remainder .= "$host+"
			if /Connection timed out|Permission denied/;
		}
		print $showhost,$_;
	    }
	    close(PIPE);
	} else {
	    print "(Can't execute rsh: $!)\n";
	    $SIG{'INT'} = 'cont';
	}
    }
}

unlink "/tmp/gsh$$" if $dodist;

if ($remainder) {
    chop($remainder);
    open(grem,">.grem") || (printf stderr "Can't make a .grem file: $!\n");
    print grem 'rem=', $remainder, "\n";
    close(grem);
    print 'rem=', $remainder, "\n";
}

# here are a couple of subroutines that serve as signal handlers

sub cont {
    print "\rContinuing...\n";
    $remainder .= "$host+";
}

sub quit {
    $| = 1;
    print "\r";
    $SIG{'INT'} = '';
    kill 2, $$;
}
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d3 1
a3 1
# $RCSfile: gsh,v $$Revision: 4.1 $$Date: 92/08/07 17:20:20 $
@


1.4
log
@perl-5.6.0 + local changes
@
text
@@


1.3
log
@perl5.005_03 (stock)
@
text
@@


1.2
log
@perl 5.004_04
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@
