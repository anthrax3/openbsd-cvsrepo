head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	PERL_5_6_0:1.1.1.1
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.10.27.22.25.21;	author millert;	state dead;
branches;
next	1.2;

1.2
date	99.04.29.22.51.19;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.07.49.44;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.38.25;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.3
log
@Resolve conflicts, remove old files, merge local changes
@
text
@#!/usr/local/bin/perl

# Make a world-writeable directory for saving state.
$ww = 'WORLD_WRITABLE';
unless (-w $ww) {
    $u = umask 0;
    mkdir $ww, 0777;
    umask $u;
}

# Decode the sample image.
for $uu (<*.uu>) {
    unless (open UU, "<$uu") { warn "Can't open $uu: $!\n"; next }
    while (<UU>) {
        chomp;
	if (/^begin\s+\d+\s+(.+)$/) {
	    $bin = $1;
	    last;
	}
    }
    unless (open BIN, "> $bin") { warn "Can't create $bin: $!\n"; next }
    binmode BIN;
    while (<UU>) {
	chomp;
	last if /^end/;
	print BIN unpack "u", $_;
    }
    close BIN;
    close UU;
}

# Create symlinks from *.txt to *.cgi for documentation purposes.
foreach (<*.cgi>) {
    ($target = $_) =~ s/cgi$/txt/i;
    symlink $_, $target unless -e $target;
}
@


1.2
log
@perl5.005_03 (stock)
@
text
@@


1.1
log
@perl 5.004_04
@
text
@d12 9
a20 2
for $bin (qw(wilogo.gif)) {
    unless (open UU, "$bin.uu") { warn "Can't open $bin.uu: $!\n"; next }
d22 1
a22 1
    $_ = <UU>;
d34 1
a34 1
    ($target = $_) =~ s/cgi$/txt/;
@


1.1.1.1
log
@perl5.005_03
@
text
@d12 2
a13 9
for $uu (<*.uu>) {
    unless (open UU, "<$uu") { warn "Can't open $uu: $!\n"; next }
    while (<UU>) {
        chomp;
	if (/^begin\s+\d+\s+(.+)$/) {
	    $bin = $1;
	    last;
	}
    }
d15 1
a15 1
    binmode BIN;
d27 1
a27 1
    ($target = $_) =~ s/cgi$/txt/i;
@

