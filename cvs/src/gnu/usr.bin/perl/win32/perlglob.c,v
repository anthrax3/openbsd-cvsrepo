head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	PERL_5_20_2:1.1.1.3
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	PERL_5_20_1:1.1.1.3
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.3.0.48
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.44
	OPENBSD_5_4_BASE:1.3
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.3.0.42
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.40
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	PERL_5_6_0:1.1.1.1
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2014.03.24.15.05.34;	author afresh1;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.27.22.25.39;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.52.53;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.06.42;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.42.15;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.10.27.22.15.13;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.03.24.14.59.12;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@/*
 * Globbing for NT.  Relies on the expansion done by the library
 * startup code (provided by Visual C++ by linking in setargv.obj).
 */

/* Enable wildcard expansion for gcc's C-runtime library if not enabled by
 * default (currently necessary with the automated build of the mingw-w64
 * cross-compiler, but there's no harm in making sure for others too). */
#ifdef __MINGW32__
#include <_mingw.h>
#if defined(__MINGW64_VERSION_MAJOR) && defined(__MINGW64_VERSION_MINOR)
    // MinGW-w64
    int _dowildcard = -1;
#else
    // MinGW
    int _CRT_glob = -1;
#endif
#endif

#include <stdio.h>
#include <io.h>
#include <fcntl.h>
#include <string.h>
#include <windows.h>

int
main(int argc, char *argv[])
{
    int i;
    size_t len;
    char root[MAX_PATH];
    char *dummy;
    char volname[MAX_PATH];
    DWORD serial, maxname, flags;
    BOOL downcase = TRUE;

    /* check out the file system characteristics */
    if (GetFullPathName(".", MAX_PATH, root, &dummy)) {
        dummy = strchr(root,'\\'); 
	if (dummy)
	    *++dummy = '\0';
	if (GetVolumeInformation(root, volname, MAX_PATH, 
				 &serial, &maxname, &flags, 0, 0)) {
	    downcase = !(flags & FS_CASE_IS_PRESERVED);
	}
    }

    setmode(fileno(stdout), O_BINARY);
    for (i = 1; i < argc; i++) {
	len = strlen(argv[i]);
	if (downcase)
	    strlwr(argv[i]);
	if (i > 1) fwrite("\0", sizeof(char), 1, stdout);
	fwrite(argv[i], sizeof(char), len, stdout);
    }
    return 0;
}

@


1.3
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d3 1
a3 1
 * startup code. 
d5 14
@


1.2
log
@perl5.005_03 (stock)
@
text
@d16 1
a16 1
    int len;
@


1.1
log
@perl 5.004_04
@
text
@d25 2
a26 1
	if (dummy = strchr(root, '\\'))
d44 1
@


1.1.1.1
log
@perl5.005_03
@
text
@d25 1
a25 2
        dummy = strchr(root,'\\'); 
	if (dummy)
a42 1

@


1.1.1.2
log
@stock perl 5.8.0 from CPAN
@
text
@d16 1
a16 1
    size_t len;
@


1.1.1.3
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d3 1
a3 1
 * startup code (provided by Visual C++ by linking in setargv.obj).
a4 14

/* Enable wildcard expansion for gcc's C-runtime library if not enabled by
 * default (currently necessary with the automated build of the mingw-w64
 * cross-compiler, but there's no harm in making sure for others too). */
#ifdef __MINGW32__
#include <_mingw.h>
#if defined(__MINGW64_VERSION_MAJOR) && defined(__MINGW64_VERSION_MINOR)
    // MinGW-w64
    int _dowildcard = -1;
#else
    // MinGW
    int _CRT_glob = -1;
#endif
#endif
@


