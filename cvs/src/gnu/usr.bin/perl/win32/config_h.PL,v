head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.2
	OPENBSD_6_2_BASE:1.9
	PERL_5_24_2:1.1.1.8
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.10
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	PERL_5_20_2:1.1.1.7
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	PERL_5_20_1:1.1.1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	PERL_5_18_2:1.1.1.6
	PERL:1.1.1
	OPENBSD_5_5:1.6.0.16
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.12
	OPENBSD_5_4_BASE:1.6
	PERL_5_16_3:1.1.1.5
	OPENBSD_5_3:1.6.0.10
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	PERL_5_12_2:1.1.1.5
	OPENBSD_4_8:1.5.0.8
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	PERL_5_10_1:1.1.1.4
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	PERL_5_10_0:1.1.1.4
	OPENBSD_4_4:1.4.0.24
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.22
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	PERL_5_8_2:1.1.1.3
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	PERL_5_8_0:1.1.1.3
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.9
date	2017.02.05.00.32.22;	author afresh1;	state Exp;
branches;
next	1.8;
commitid	cxJ08BvJA9Pt2PTM;

1.8
date	2014.11.17.20.57.08;	author afresh1;	state Exp;
branches;
next	1.7;
commitid	QP75iYx42Uo7mMxO;

1.7
date	2014.03.24.15.05.34;	author afresh1;	state Exp;
branches;
next	1.6;

1.6
date	2010.09.24.15.07.11;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.29.17.36.22;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.27.22.25.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.09.02;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.52.52;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.06.37;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.42.13;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.11.05;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.10.27.22.15.13;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.29.17.19.05;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2010.09.24.14.48.44;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2014.03.24.14.59.12;	author afresh1;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2014.11.17.20.53.20;	author afresh1;	state Exp;
branches;
next	1.1.1.8;
commitid	B31cAbBIXiCqnL97;

1.1.1.8
date	2017.08.14.13.46.26;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.9
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl -w
use strict;

BEGIN { warn "Running ".__FILE__."\n" };
BEGIN 
 {
  require "Config.pm";
  die "Config.pm:$@@" if $@@;
  Config->import;
 }
use File::Compare qw(compare);
use File::Copy qw(copy);
use File::Basename qw(fileparse);

my ($name, $dir) = fileparse($0);
$name =~ s#^(.*)\.PL$#../$1.SH#;
my %opt;
while (@@ARGV && $ARGV[0] =~ /^([\w_]+)=(.*)$/)
 {
  $opt{$1}=$2;
  shift(@@ARGV);
 }

$opt{CONFIG_H} ||= 'config.h';
$opt{CORE_DIR} ||= '../lib/CORE';

warn "Writing $opt{CONFIG_H}\n";

open(SH,"<$name") || die "Cannot open $name:$!";
while (<SH>)
 {
  last if /^\s*sed/;
 }
my($term,$file,$pat) = /^\s*sed\s+<<(\S+)\s+>(\S+)\s+(.*)$/;

$file =~ s/^\$(\w+)$/$opt{$1}/g;

my $str = "sub munge\n{\n";

while ($pat =~ s/-e\s+'([^']*)'\s*//)
 {
  my $e = $1;
  $e =~ s/\\([\(\)])/$1/g;
  $e =~ s/\\(\d)/\$$1/g; 
  $str .= "$e;\n";
 }
$str .= "}\n";

eval $str;

die "$str:$@@" if $@@;

open(H,">$file.new") || die "Cannot open $file.new:$!";
binmode(H);
while (<SH>)
 {
  last if /^$term$/o;
  s/\$([\w_]+)/Config($1)/eg;
  s/`([^\`]*)`/BackTick($1)/eg;
  munge();
  s/\\\$/\$/g;
  s#/[ *\*]*\*/#/**/#;
  s#(.)/\*\*/#$1/ **/# if(/^\/\*/); #avoid "/*" inside comments
  if (/^\s*#define\s+(PRIVLIB|SITELIB|VENDORLIB)_EXP/)
   {
     $_ = '#define '. $1 . '_EXP ('.(
       $1 eq 'PRIVLIB' ? 'PerlEnv_lib_path' :
       $1 eq 'SITELIB' ? 'PerlEnv_sitelib_path' :
       $1 eq 'VENDORLIB' ? 'PerlEnv_vendorlib_path' :
       die "unknown *LIB_EXP define \"$1\""
       ). "(PERL_VERSION_STRING, NULL))\t/**/\n";
   }
  # incpush() handles archlibs, so disable them
  elsif (/^\s*#define\s+(ARCHLIB|SITEARCH|VENDORARCH)_EXP/)
   {
     $_ = "/*#define ". $1 . "_EXP \"\"\t/ **/\n";
   }
  elsif (/^\s*#define\s+CPP(STDIN|RUN)\s+"gcc(.*)"\s*$/)
   {
     $_ = "#define CPP" . $1 . " \"" . $opt{ARCHPREFIX} . "gcc" . $2 . "\"\n";
   }
  print H;
 }
close(H);
close(SH);

my $core_config_h = "$opt{CORE_DIR}/$opt{CONFIG_H}";
if (compare("$file.new", $core_config_h)) {
    mkdir $opt{CORE_DIR} unless -d $opt{CORE_DIR};
    chmod(0666,$core_config_h);
    copy("$file.new",$core_config_h) || die "Cannot copy:$!";
    chmod(0444,$core_config_h);
}

if (compare("$file.new",$file))
 {
  warn "$file has changed\n";
  chmod(0666,$file);
  unlink($file);
  rename("$file.new",$file) || die "Cannot rename:$!";
 }
else
 {
  unlink ("$file.new");
 }

sub Config
{
 my $var = shift;
 my $val = $Config{$var};
 $val = 'undef' unless defined $val;
 $val =~ s/\\/\\\\/g;
 return $val;
}

sub BackTick
{
 my $cmd = shift;
 if ($cmd =~ /^echo\s+(.*?)\s*\|\s+sed\s+'(.*)'\s*$/)
  {
   my($data,$pat) = ($1,$2);
   $data =~ s/\s+/ /g;
   eval "\$data =~ $pat";
   return $data;
  }
 else
  {
   die "Cannot handle \`$cmd\`";
  }
 return $cmd;
}
@


1.8
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d66 6
a71 1
     $_ = "#define ". $1 . "_EXP (win32_get_". lc($1) . "(PERL_VERSION_STRING, NULL))\t/**/\n";
d87 7
a93 4

chmod(0666,"$opt{CORE_DIR}/$opt{CONFIG_H}");
copy("$file.new","$opt{CORE_DIR}/$opt{CONFIG_H}") || die "Cannot copy:$!";
chmod(0444,"$opt{CORE_DIR}/$opt{CONFIG_H}");
d100 1
a100 2
  rename("$file.new",$file);
  exit(1);
a104 1
  exit(0);
@


1.7
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d54 1
@


1.6
log
@merge in perl 5.12.2 plus local changes
@
text
@d1 3
a3 1
#
d9 1
a9 1
  Config::->import;
d14 1
a28 6
my $patchlevel = $opt{INST_VER};
$patchlevel =~ s|^[\\/]||;
$patchlevel =~ s|~VERSION~|$Config{version}|g;
$patchlevel ||= $Config{version};
$patchlevel = qq["$patchlevel"];

d34 1
a34 1
($term,$file,$pat) = /^\s*sed\s+<<(\S+)\s+>(\S+)\s+(.*)$/;
a53 1
#binmode H;		# no CRs (which cause a spurious rebuild)
d72 4
a91 1
  #chmod(0444,$file);
d114 1
a114 1
   local ($data,$pat) = ($1,$2);
@


1.5
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d11 2
a12 1
my $name = $0;
d66 1
d69 1
a69 1
     $_ = "#define ". $1 . "_EXP (win32_get_". lc($1) . "($patchlevel))\t/**/\n";
d74 1
a74 1
     $_ = "/*#define ". $1 . "_EXP \"\"\t/**/\n";
@


1.4
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d5 2
a6 2
  require "../lib/Config.pm";
  die "../Config.pm:$@@" if $@@;
d21 1
d34 1
a34 1
  last if /^sed/;
d36 1
a36 1
($term,$file,$pat) = /^sed\s+<<(\S+)\s+>(\S+)\s+(.*)$/;
d80 3
a82 3
chmod(0666,"../lib/CORE/config.h");
copy("$file.new","../lib/CORE/config.h") || die "Cannot copy:$!";
chmod(0444,"../lib/CORE/config.h");
@


1.3
log
@perl-5.6.0 + local changes
@
text
@d2 7
a8 1
use Config;
a10 1
my $OBJ   = 1 if $Config{'ccflags'} =~ /PERL_OBJECT/i;
d19 5
d37 2
d55 1
a55 1
binmode H;		# no CRs (which cause a spurious rebuild)
d83 1
a83 1
if (!$OBJ && compare("$file.new",$file))
@


1.2
log
@perl5.005_03 (stock)
@
text
@d16 2
a17 2
$patchlevel =~ s|~VERSION~|$]|g;
$patchlevel ||= $];
d52 1
a52 1
  if (/^\s*#define\s+(PRIVLIB|SITELIB)_EXP/)
d57 1
a57 1
  elsif (/^\s*#define\s+(ARCHLIB|SITEARCH)_EXP/)
a62 1
print H "#include <win32.h>\n";
@


1.1
log
@perl 5.004_04
@
text
@d5 1
d8 12
d43 1
d52 1
a52 1
  if (/^\s*#define\s+ARCHLIB_EXP/)
d54 6
a59 2
     $_ = "#define ARCHLIB_EXP (win32PerlLibPath())\t/**/\n"
        . "#define APPLLIB_EXP (win32SiteLibPath())\t/**/\n";
d63 1
a63 5
print H "#include <win32.h>
#ifndef DEBUGGING
#define DEBUGGING
#endif
";
d72 1
a72 1
if (compare("$file.new",$file))
d78 1
a78 1
  chmod(0444,$file);
d80 5
@


1.1.1.1
log
@perl5.005_03
@
text
@a4 1
my $OBJ   = 1 if $Config{'ccflags'} =~ /PERL_OBJECT/i;
a6 12
my %opt;
while (@@ARGV && $ARGV[0] =~ /^([\w_]+)=(.*)$/)
 {
  $opt{$1}=$2;
  shift(@@ARGV);
 }
my $patchlevel = $opt{INST_VER};
$patchlevel =~ s|^[\\/]||;
$patchlevel =~ s|~VERSION~|$]|g;
$patchlevel ||= $];
$patchlevel = qq["$patchlevel"];

a29 1
binmode H;		# no CRs (which cause a spurious rebuild)
d38 1
a38 1
  if (/^\s*#define\s+(PRIVLIB|SITELIB)_EXP/)
d40 2
a41 6
     $_ = "#define ". $1 . "_EXP (win32_get_". lc($1) . "($patchlevel))\t/**/\n";
   }
  # incpush() handles archlibs, so disable them
  elsif (/^\s*#define\s+(ARCHLIB|SITEARCH)_EXP/)
   {
     $_ = "/*#define ". $1 . "_EXP \"\"\t/**/\n";
d45 5
a49 1
print H "#include <win32.h>\n";
d58 1
a58 1
if (!$OBJ && compare("$file.new",$file))
d64 1
a64 1
  #chmod(0444,$file);
a65 5
 }
else
 {
  unlink ("$file.new");
  exit(0);
@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d16 2
a17 2
$patchlevel =~ s|~VERSION~|$Config{version}|g;
$patchlevel ||= $Config{version};
d52 1
a52 1
  if (/^\s*#define\s+(PRIVLIB|SITELIB|VENDORLIB)_EXP/)
d57 1
a57 1
  elsif (/^\s*#define\s+(ARCHLIB|SITEARCH|VENDORARCH)_EXP/)
d63 1
@


1.1.1.3
log
@stock perl 5.8.0 from CPAN
@
text
@d2 1
a2 7
BEGIN { warn "Running ".__FILE__."\n" };
BEGIN 
 {
  require "../lib/Config.pm";
  die "../Config.pm:$@@" if $@@;
  Config::->import;
 }
d5 1
a13 5

$opt{CONFIG_H} ||= 'config.h';

warn "Writing $opt{CONFIG_H}\n";

a26 2
$file =~ s/^\$(\w+)$/$opt{$1}/g;

d43 1
a43 1
#binmode H;		# no CRs (which cause a spurious rebuild)
d71 1
a71 1
if (compare("$file.new",$file))
@


1.1.1.4
log
@import perl 5.10.0 from CPAN
@
text
@d5 2
a6 2
  require "Config.pm";
  die "Config.pm:$@@" if $@@;
a20 1
$opt{CORE_DIR} ||= '../lib/CORE';
d33 1
a33 1
  last if /^\s*sed/;
d35 1
a35 1
($term,$file,$pat) = /^\s*sed\s+<<(\S+)\s+>(\S+)\s+(.*)$/;
d79 3
a81 3
chmod(0666,"$opt{CORE_DIR}/$opt{CONFIG_H}");
copy("$file.new","$opt{CORE_DIR}/$opt{CONFIG_H}") || die "Cannot copy:$!";
chmod(0444,"$opt{CORE_DIR}/$opt{CONFIG_H}");
@


1.1.1.5
log
@Perl 5.12.2 from CPAN
@
text
@d11 1
a11 2
use File::Basename qw(fileparse);
my ($name, $dir) = fileparse($0);
a64 1
  s#(.)/\*\*/#$1/ **/# if(/^\/\*/); #avoid "/*" inside comments
d67 1
a67 1
     $_ = "#define ". $1 . "_EXP (win32_get_". lc($1) . "(PERL_VERSION_STRING, NULL))\t/**/\n";
d72 1
a72 1
     $_ = "/*#define ". $1 . "_EXP \"\"\t/ **/\n";
@


1.1.1.6
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d1 1
a1 3
#!perl -w
use strict;

d7 1
a7 1
  Config->import;
a11 1

d26 6
d37 1
a37 1
my($term,$file,$pat) = /^\s*sed\s+<<(\S+)\s+>(\S+)\s+(.*)$/;
d57 1
a75 4
  elsif (/^\s*#define\s+CPP(STDIN|RUN)\s+"gcc(.*)"\s*$/)
   {
     $_ = "#define CPP" . $1 . " \"" . $opt{ARCHPREFIX} . "gcc" . $2 . "\"\n";
   }
d92 1
d115 1
a115 1
   my($data,$pat) = ($1,$2);
@


1.1.1.7
log
@Import perl-5.20.1
@
text
@a53 1
binmode(H);
@


1.1.1.8
log
@Import perl-5.24.2
@
text
@d66 1
a66 6
     $_ = '#define '. $1 . '_EXP ('.(
       $1 eq 'PRIVLIB' ? 'PerlEnv_lib_path' :
       $1 eq 'SITELIB' ? 'PerlEnv_sitelib_path' :
       $1 eq 'VENDORLIB' ? 'PerlEnv_vendorlib_path' :
       die "unknown *LIB_EXP define \"$1\""
       ). "(PERL_VERSION_STRING, NULL))\t/**/\n";
d82 4
a85 7
my $core_config_h = "$opt{CORE_DIR}/$opt{CONFIG_H}";
if (compare("$file.new", $core_config_h)) {
    mkdir $opt{CORE_DIR} unless -d $opt{CORE_DIR};
    chmod(0666,$core_config_h);
    copy("$file.new",$core_config_h) || die "Cannot copy:$!";
    chmod(0444,$core_config_h);
}
d92 2
a93 1
  rename("$file.new",$file) || die "Cannot rename:$!";
d98 1
@


