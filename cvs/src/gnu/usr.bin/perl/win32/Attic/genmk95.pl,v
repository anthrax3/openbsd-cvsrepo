head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.1.2.0.36
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.34
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.32
	OPENBSD_5_0:1.1.1.2.0.30
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.28
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.26
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.22
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.24
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.20
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.18
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.16
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.14
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.12
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.10
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.8
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.6
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.4
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.2
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.18
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.16
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.14
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.12
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2013.03.25.20.41.01;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2000.04.06.16.11.06;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.06.16.11.06;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.08.09.17.48.47;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@# genmk95.pl - uses miniperl to generate a makefile that command.com will
#              understand given one that cmd.exe will understand

# Author: Benjamin K. Stuhl
# Date: 10-16-1999

# how it works:
#    dmake supports an alternative form for its recipes, called "group
#    recipes", in which all elements of a recipe are run with only one shell.
#    This program converts the standard dmake makefile.mk to one using group
#    recipes. This is done so that lines using && or || (which command.com
#    doesn't understand) may be split into two lines that will still be run
#    with one shell.

my ($filein, $fileout) = @@ARGV;

open my $in, $filein or die "Error opening input file: $!\n";
open my $out, "> $fileout" or die "Error opening output file: $!\n";

print $out <<_EOH_;
# *** Warning: this file is autogenerated from $filein by $0 ***
# *** Do not edit this file - edit $filein instead           ***

_HOME_DIR := \$(PWD)

_EOH_

my $inrec = 0;

while (<$in>)
{
 chomp;
 if (/^[^#.\t][^#=]*?:(?:[^=]|$)/)
 {
    if (! $inrec)
    {
       print $out "$_\n";
       while (/\\\s*$/)
       {
          chomp($_ = <$in>);
          print $out "$_\n";
       }
       print $out "@@[\n";
       $inrec = 1;
       next;
    }
    else {
       if (!/^\t/) {
           seek ($out, -4, 2);      # no recipe, so back up and undo grouping
                                    # should be -3, but MS has its CR/LF thing...
           $inrec = 0;
       }
       print $out "$_\n";
       next;
    }
 }
 if ((/^\s*$/ || /^[^#.\t][^#=]*?:/) && $inrec)
 {
    print $out "]\n";
    print $out "$_\n";
    $inrec = 0;
    next;
 }
 if (/^(.*?)(&&|\|\|)(.*)$/)  # two commands separated by && or ||
 {
    my ($one, $sep, $two) = ($1, $2, $3);
LINE_CONT:
    if ($two =~ /\\\s*$/)
    {
       chomp ($two .= "\n" . scalar <$in>);
       goto LINE_CONT;
    }
    s/^\s*// for ($one, $two);
    print $out "\t$one\n\t$two\n" if ($sep eq "&&");
    print $out "\t$one\n\tif errorlevel 1 $two\n" if ($sep eq "||");
    print $out "\tcd \$(_HOME_DIR)\n";
    next;
 }
     # fall through - no need for special handling
 print $out "$_\n";
}
print $out "]\n" if ($inrec);

close $in or warn "Error closing \$in: $!\n";
close $out or warn "Error closing \$out: $!\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@virgin perl 5.6.0
@
text
@@


1.1.1.2
log
@Import of stock perl 5.8.5
@
text
@a66 1
    $one =~ s/^\t(?:-(?!-))?\@@?(.*?)$/\t$1/;   # no -,@@ in group recipes
a79 1
 s/^\t(?:-(?!-))?\@@?(.*?)$/\t$1/;      # no -,@@ in group recipes
@

