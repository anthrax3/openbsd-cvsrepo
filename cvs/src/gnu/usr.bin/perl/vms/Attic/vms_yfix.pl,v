head	1.6;
access;
symbols
	OPENBSD_4_4:1.5.0.24
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.22
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.20
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.18
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.16
	OPENBSD_4_0_BASE:1.5
	PERL_5_8_8:1.1.1.4
	OPENBSD_3_9:1.5.0.14
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.12
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.10
	OPENBSD_3_7_BASE:1.5
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2008.09.29.17.36.21;	author millert;	state dead;
branches;
next	1.5;

1.5
date	2002.10.27.22.25.39;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.08.48;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.47;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.08.06.22;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.13.30;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.13.30;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.42.06;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.11.01;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.15.12;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@# This script takes the output produced from perly.y by byacc and
# the perly.fixer shell script (i.e. the perly.c and perly.h built
# for Unix systems) and patches them to produce copies containing
# appropriate declarations for VMS handling of global symbols.
#
# If it finds that the input files are already patches for VMS,
# it just copies the input to the output.
#
# Revised 20-Dec-1996 by Charles Bailey  bailey@@newman.upenn.edu

$VERSION = '1.11';

push(@@ARGV,(qw[ perly.c perly.h vms/perly_c.vms vms/perly_h.vms])[@@ARGV..4])
    if @@ARGV < 4;
($cinfile,$hinfile,$coutfile,$houtfile) = @@ARGV;

open C,$cinfile or die "Can't read $cinfile: $!\n";
open COUT, ">$coutfile" or die "Can't create $coutfile: $!\n";
print COUT <<EOH;
/* Postprocessed by vms_yfix.pl $VERSION to add VMS declarations of globals */
EOH
while (<C>) {
  # "y.tab.c" is illegal as a VMS filename; DECC 5.2/VAX preprocessor
  # doesn't like this.
  if ( s/^#line\s+(\d+)\s+"y.tab.c"/#line $1 "y_tab.c"/ ) { 1; }
  elsif (/char \*getenv/) {
    # accomodate old VAXC's macro susbstitution pecularities
    $_ = "#   ifndef getenv\n$_#   endif\n";
  }
  elsif ( /getenv\("YYDEBUG"\)/ ) {
    $_ = "  {\n    register int saved_errno = errno;\n"
       . "#ifdef VMS\n    register int saved_vaxc_errno = vaxc\$errno;\n"
       . "#else\n    register int saved_vaxc_errno = 0;\n#endif\n" . $_;
    # Reset the "error" status if an optional lookup fails
    while (not /^\s+\}/) { print COUT; $_ = <C>; }
    $_ .= "    else SETERRNO(saved_errno,saved_vaxc_errno);\n  }\n";
  }
  else {
    # add the dEXT tag to definitions of global vars, so we'll insert
    # a globaldef when perly.c is compiled
    s/^(short|int|YYSTYPE|char \*)\s*yy/dEXT $1 yy/;
  }
  print COUT;
}
close C;
close COUT;

open H,$hinfile  or die "Can't read $hinfile: $!\n";
open HOUT, ">$houtfile" or die "Can't create $houtfile: $!\n";
print HOUT <<EOH;
/* Postprocessed by vms_yfix.pl $VERSION to add VMS declarations of globals */
EOH
$hfixed = 0;  # keep -w happy
while (<H>) {
  $hfixed = /globalref/ unless $hfixed;  # we've already got a fixed copy
  next if /^extern YYSTYPE yylval/;  # we've got a Unix version, and this
                                     # is what we want to replace
  print HOUT;
}
close H;

print HOUT <<'EODECL' unless $hfixed;
#ifndef vax11c
  extern YYSTYPE yylval;
#else
  globalref YYSTYPE yylval;
#endif
EODECL

close HOUT;
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@@


1.4
log
@perl-5.6.0 + local changes
@
text
@d31 3
d36 1
a36 1
    $_ .= "\telse SETERRNO(0,SS\$_NORMAL);\n";
@


1.3
log
@perl5.005_03 (stock)
@
text
@d9 1
a9 1
# Revised 20-Dec-1996 by Charles Bailey  bailey@@genetics.upenn.edu
@


1.2
log
@perl 5.004_04
@
text
@d30 5
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
# Revised 29-Jan-1996 by Charles Bailey  bailey@@genetics.upenn.edu
d11 1
a11 1
$VERSION = '1.1';
d13 2
d26 4
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d9 1
a9 1
# Revised 20-Dec-1996 by Charles Bailey  bailey@@genetics.upenn.edu
d11 1
a11 1
$VERSION = '1.11';
a12 2
push(@@ARGV,(qw[ perly.c perly.h vms/perly_c.vms vms/perly_h.vms])[@@ARGV..4])
    if @@ARGV < 4;
a23 9
  elsif (/char \*getenv/) {
    # accomodate old VAXC's macro susbstitution pecularities
    $_ = "#   ifndef getenv\n$_#   endif\n";
  }
  elsif ( /getenv\("YYDEBUG"\)/ ) {
    # Reset the "error" status if an optional lookup fails
    while (not /^\s+\}/) { print COUT; $_ = <C>; }
    $_ .= "\telse SETERRNO(0,SS\$_NORMAL);\n";
  }
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d9 1
a9 1
# Revised 20-Dec-1996 by Charles Bailey  bailey@@newman.upenn.edu
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@a30 3
    $_ = "  {\n    register int saved_errno = errno;\n"
       . "#ifdef VMS\n    register int saved_vaxc_errno = vaxc\$errno;\n"
       . "#else\n    register int saved_vaxc_errno = 0;\n#endif\n" . $_;
d33 1
a33 1
    $_ .= "    else SETERRNO(saved_errno,saved_vaxc_errno);\n  }\n";
@


