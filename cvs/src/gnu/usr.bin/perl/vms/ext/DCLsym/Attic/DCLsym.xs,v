head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.44
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.40
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.3.0.42
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.38
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.3.0.36
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.34
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.32
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.30
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.28
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.3.0.26
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.24
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.22
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.3.0.20
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.3.0.18
	OPENBSD_3_5_BASE:1.3
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.3.0.16
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.14
	OPENBSD_3_3_BASE:1.3
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2010.09.24.15.00.01;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2000.04.06.17.08.52;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.52.48;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.08.06.28;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.42.08;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.11.02;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@/* VMS::DCLsym - manipulate DCL symbols
 *
 * Version:  1.0
 * Author:   Charles Bailey  bailey@@newman.upenn.edu
 * Revised:  17-Aug-1995
 *
 *
 * Revision History:
 * 
 * 1.0  17-Aug-1995  Charles Bailey  bailey@@newman.upenn.edu
 *      original production version
 */

#include <descrip.h>
#include <lib$routines.h>
#include <libclidef.h>
#include <libdef.h>
#include <ssdef.h>
#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

MODULE = VMS::DCLsym  PACKAGE = VMS::DCLsym

void
_getsym(name)
  SV *	name
  PPCODE:
  {
    struct dsc$descriptor_s namdsc = {0,DSC$K_DTYPE_T,DSC$K_CLASS_S,0},
                            valdsc = {0,DSC$K_DTYPE_T,DSC$K_CLASS_D,0};
    STRLEN namlen;
    int tbltype;
    unsigned long int retsts;
    SETERRNO(0,SS$_NORMAL);
    if (!name) {
      PUSHs(sv_newmortal());
      SETERRNO(EINVAL,LIB$_INVARG);
      return;
    }
    namdsc.dsc$a_pointer = SvPV(name,namlen);
    namdsc.dsc$w_length = (unsigned short int) namlen;
    retsts = lib$get_symbol(&namdsc,&valdsc,0,&tbltype);
    if (retsts & 1) {
      PUSHs(sv_2mortal(newSVpv(valdsc.dsc$w_length ? 
                               valdsc.dsc$a_pointer : "",valdsc.dsc$w_length)));
      if (GIMME) {
        EXTEND(sp,2);  /* just in case we're at the end of the stack */
        if (tbltype == LIB$K_CLI_LOCAL_SYM)
          PUSHs(sv_2mortal(newSVpv("LOCAL",5)));
        else
          PUSHs(sv_2mortal(newSVpv("GLOBAL",6)));
      }
      _ckvmssts(lib$sfree1_dd(&valdsc));
    }
    else {
      ST(0) = &PL_sv_undef;  /* error - we're returning undef, if anything */
      switch (retsts) {
        case LIB$_NOSUCHSYM:
          break;   /* nobody home */;
        case LIB$_INVSYMNAM:   /* user errors; set errno return undef */
        case LIB$_INSCLIMEM:
        case LIB$_NOCLI:
          set_errno(EVMSERR);
          set_vaxc_errno(retsts);
          break;
        default:  /* bail out */
          { _ckvmssts(retsts); }
      }
    }
  }


void
_setsym(name,val,typestr="LOCAL")
  SV *	name
  SV *	val
  char *	typestr
  CODE:
  {
    struct dsc$descriptor_s namdsc = {0,DSC$K_DTYPE_T,DSC$K_CLASS_S,0},
                            valdsc = {0,DSC$K_DTYPE_T,DSC$K_CLASS_S,0};
    STRLEN slen;
    int type;
    unsigned long int retsts;
    SETERRNO(0,SS$_NORMAL);
    if (!name || !val) {
      SETERRNO(EINVAL,LIB$_INVARG);
      XSRETURN_UNDEF;
    }
    namdsc.dsc$a_pointer = SvPV(name,slen);
    namdsc.dsc$w_length = (unsigned short int) slen;
    valdsc.dsc$a_pointer = SvPV(val,slen);
    valdsc.dsc$w_length = (unsigned short int) slen;
    type = strNE(typestr,"GLOBAL") ?
              LIB$K_CLI_LOCAL_SYM : LIB$K_CLI_GLOBAL_SYM;
    retsts = lib$set_symbol(&namdsc,&valdsc,&type);
    if (retsts & 1) { XSRETURN_YES; }
    else {
      switch (retsts) {
        case LIB$_AMBSYMDEF:  /* user errors; set errno and return */
        case LIB$_INSCLIMEM:
        case LIB$_INVSYMNAM:
        case LIB$_NOCLI:
          set_errno(EVMSERR);
          set_vaxc_errno(retsts);
          XSRETURN_NO;
          break;  /* NOTREACHED */
        default:  /* bail out */
          { _ckvmssts(retsts); }
      }
    }
  }


void
_delsym(name,typestr="LOCAL")
  SV *	name
  char *	typestr
  CODE:
  {
    struct dsc$descriptor_s namdsc = {0,DSC$K_DTYPE_T,DSC$K_CLASS_S,0};
    STRLEN slen;
    int type;
    unsigned long int retsts;
    SETERRNO(0,SS$_NORMAL);
    if (!name || !typestr) {
      SETERRNO(EINVAL,LIB$_INVARG);
      XSRETURN_UNDEF;
    }
    namdsc.dsc$a_pointer = SvPV(name,slen);
    namdsc.dsc$w_length = (unsigned short int) slen;
    type = strNE(typestr,"GLOBAL") ?
              LIB$K_CLI_LOCAL_SYM : LIB$K_CLI_GLOBAL_SYM;
    retsts = lib$delete_symbol(&namdsc,&type);
    if (retsts & 1) { XSRETURN_YES; }
    else {
      switch (retsts) {
        case LIB$_INVSYMNAM:  /* user errors; set errno and return */
        case LIB$_NOCLI:
        case LIB$_NOSUCHSYM:
          set_errno(EVMSERR);
          set_vaxc_errno(retsts);
          XSRETURN_NO;
          break;  /* NOTREACHED */
        default:  /* bail out */
          { _ckvmssts(retsts); }
      }
    }
  }

@


1.3
log
@perl-5.6.0 + local changes
@
text
@@


1.2
log
@perl5.005_03 (stock)
@
text
@d4 1
a4 1
 * Author:   Charles Bailey  bailey@@genetics.upenn.edu
d10 1
a10 1
 * 1.0  17-Aug-1995  Charles Bailey  bailey@@genetics.upenn.edu
@


1.1
log
@perl 5.004_04
@
text
@d57 1
a57 1
      ST(0) = &sv_undef;  /* error - we're returning undef, if anything */
@


1.1.1.1
log
@perl5.005_03
@
text
@d57 1
a57 1
      ST(0) = &PL_sv_undef;  /* error - we're returning undef, if anything */
@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d4 1
a4 1
 * Author:   Charles Bailey  bailey@@newman.upenn.edu
d10 1
a10 1
 * 1.0  17-Aug-1995  Charles Bailey  bailey@@newman.upenn.edu
@


