head	1.2;
access;
symbols
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	PERL_5_6_1:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.10.27.22.25.24;	author millert;	state dead;
branches;
next	1.1;

1.1
date	99.04.29.22.39.11;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.39.11;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve conflicts, remove old files, merge local changes
@
text
@use Thread;

sub counter {
$count = 10;
while ($count--) {
    sleep 1;
    print "ping $count\n";
}
}

sub reader {
    my $line;
    while ($line = <STDIN>) {
	print "reader: $line";
    }
    print "End of input in reader\n";
    return 0;
}

print <<'EOT';
This test starts up a thread to read and echo whatever is typed on
the keyboard/stdin, line by line, while the main thread counts down
to zero. The test stays running until both the main thread has
finished counting down and the I/O thread has seen end-of-file on
the terminal/stdin.
EOT

$r = new Thread \&counter;

&reader;

__END__


$count = 10;
while ($count--) {
    sleep 1;
    print "ping $count\n";
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl5.005_03
@
text
@@
