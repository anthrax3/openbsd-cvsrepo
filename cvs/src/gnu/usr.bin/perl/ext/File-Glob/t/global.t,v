head	1.1;
branch	1.1.1;
access;
symbols
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.18
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.16
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.10
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.12
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.4
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.8
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2009.10.12.18.11.15;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.15;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.08.45;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    if ($^O eq 'MacOS') { 
	@@INC = qw(: ::lib ::macos:lib); 
    } else { 
	@@INC = '.'; 
	push @@INC, '../lib'; 
    }
    require Config; import Config;
    if ($Config{'extensions'} !~ /\bFile\/Glob\b/i) {
        print "1..0\n";
        exit 0;
    }
    print "1..10\n";
}
END {
    print "not ok 1\n" unless $loaded;
}

BEGIN {
    *CORE::GLOBAL::glob = sub { "Just another Perl hacker," };
}

BEGIN {
    if ("Just another Perl hacker," ne (<*>)[0]) {
        die <<EOMessage;
Your version of perl ($]) doesn't seem to allow extensions to override
the core glob operator.
EOMessage
    }
}

use File::Glob ':globally';
$loaded = 1;
print "ok 1\n";

$_ = $^O eq "MacOS" ? ":op:*.t" : "op/*.t";
my @@r = glob;
print "not " if $_ ne ($^O eq "MacOS" ? ":op:*.t" : "op/*.t");
print "ok 2\n";

print "# |@@r|\nnot " if @@r < 3;
print "ok 3\n";

# check if <*/*> works
if ($^O eq "MacOS") {
    @@r = <:*:*.t>;
} else {
    @@r = <*/*.t>;
}
# at least t/global.t t/basic.t, t/taint.t
print "not " if @@r < 3;
print "ok 4\n";
my $r = scalar @@r;

# check if scalar context works
@@r = ();
if ($^O eq "MacOS") {
    while (defined($_ = <:*:*.t>)) {
	#print "# $_\n";
	push @@r, $_;
    }
} else {
    while (defined($_ = <*/*.t>)) {
	#print "# $_\n";
	push @@r, $_;
    }
}
print "not " if @@r != $r;
print "ok 5\n";

# check if list context works
@@r = ();
if ($^O eq "MacOS") {
    for (<:*:*.t>) {
	#print "# $_\n";
	push @@r, $_;
    }
} else {
    for (<*/*.t>) {
	#print "# $_\n";
	push @@r, $_;
    }
}
print "not " if @@r != $r;
print "ok 6\n";

# test if implicit assign to $_ in while() works
@@r = ();
if ($^O eq "MacOS") {
    while (<:*:*.t>) {
	#print "# $_\n";
	push @@r, $_;
    }
} else {
    while (<*/*.t>) {
	#print "# $_\n";
	push @@r, $_;
    }
}
print "not " if @@r != $r;
print "ok 7\n";

# test if explicit glob() gets assign magic too
my @@s = ();
while (glob($^O eq 'MacOS' ? ':*:*.t' : '*/*.t')) {
    #print "# $_\n";
    push @@s, $_;
}
print "not " if "@@r" ne "@@s";
print "ok 8\n";

# how about in a different package, like?
package Foo;
use File::Glob ':globally';
@@s = ();
while (glob($^O eq 'MacOS' ? ':*:*.t' : '*/*.t')) {
    #print "# $_\n";
    push @@s, $_;
}
print "not " if "@@r" ne "@@s";
print "ok 9\n";

# test if different glob ops maintain independent contexts
@@s = ();
my $i = 0;
if ($^O eq "MacOS") {
    while (<:*:*.t>) {
	#print "# $_ <";
	push @@s, $_;
	while (<:bas*:*.t>) {
	    #print " $_";
	    $i++;
	}
	#print " >\n";
    }
} else {
    while (<*/*.t>) {
	#print "# $_ <";
	push @@s, $_;
	while (<bas*/*.t>) {
	    #print " $_";
	    $i++;
	}
	#print " >\n";
    }
}
print "not " if "@@r" ne "@@s" or not $i;
print "ok 10\n";
@


1.1.1.1
log
@import perl 5.10.1
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d5 6
a10 1
    @@INC = '../lib';
d16 4
a21 2
use Test::More tests => 11;

d35 3
a37 3
BEGIN {
    use_ok('File::Glob', ':globally');
}
d39 1
a39 1
$_ = "op/*.t";
d41 2
a42 1
is($_, "op/*.t");
d44 2
a45 1
cmp_ok(scalar @@r, '>=', 3);
d47 6
a52 1
@@r = <*/*.t>;
d54 2
a55 1
cmp_ok(scalar @@r, '>=', 3, 'check if <*/*> works');
d58 1
d60 10
a69 3
while (defined($_ = <*/*.t>)) {
  #print "# $_\n";
  push @@r, $_;
d71 2
a72 1
is(scalar @@r, $r, 'check if scalar context works');
d74 1
d76 10
a85 3
for (<*/*.t>) {
  #print "# $_\n";
  push @@r, $_;
d87 2
a88 1
is(scalar @@r, $r, 'check if list context works');
d90 1
d92 10
a101 3
while (<*/*.t>) {
  #print "# $_\n";
  push @@r, $_;
d103 2
a104 1
is(scalar @@r, $r, 'implicit assign to $_ in while()');
d106 1
d108 1
a108 1
while (glob('*/*.t')) {
d112 2
a113 1
is("@@r", "@@s", 'explicit glob() gets assign magic too');
d115 1
d119 1
a119 1
while (glob('*/*.t')) {
d123 2
a124 1
main::is("@@r", "@@s", 'in a different package');
d129 20
a148 8
while (<*/*.t>) {
  #print "# $_ <";
  push @@s, $_;
  while (<bas*/*.t>) {
    #print " $_";
    $i++;
  }
  #print " >\n";
d150 2
a151 3

main::is("@@r", "@@s", 'different glob ops maintain independent contexts');
main::isnt($i, 0, 'different glob ops maintain independent contexts');
@

