head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.42;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.42;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use warnings; no warnings 'deprecated';
use strict;

use Test::More tests => 33;

our @@t = qw(a b c d e f);
our $r = \@@t;
our($i3, $i4, $i8, $i9) = (3, 4, 8, 9);
our @@i4 = (3, 3, 3, 3);

$[ = 3;

is $t[3], "a";
is $t[4], "b";
is $t[8], "f";
is $t[9], undef;
is_deeply [ scalar $t[4] ], [ "b" ];
is_deeply [ $t[4] ], [ "b" ];

is $t[2], 'f';
is $t[-1], 'f';
is $t[1], 'e';
is $t[-2], 'e';

{
 $[ = -3;
 is $t[-3], 'a';
}

is $r->[3], "a";
is $r->[4], "b";
is $r->[8], "f";
is $r->[9], undef;
is_deeply [ scalar $r->[4] ], [ "b" ];
is_deeply [ $r->[4] ], [ "b" ];

is $t[$i3], "a";
is $t[$i4], "b";
is $t[$i8], "f";
is $t[$i9], undef;
is_deeply [ scalar $t[$i4] ], [ "b" ];
is_deeply [ $t[$i4] ], [ "b" ];
is_deeply [ scalar $t[@@i4] ], [ "b" ];
is_deeply [ $t[@@i4] ], [ "b" ];

is $r->[$i3], "a";
is $r->[$i4], "b";
is $r->[$i8], "f";
is $r->[$i9], undef;
is_deeply [ scalar $r->[$i4] ], [ "b" ];
is_deeply [ $r->[$i4] ], [ "b" ];
is_deeply [ scalar $r->[@@i4] ], [ "b" ];
is_deeply [ $r->[@@i4] ], [ "b" ];


1;
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
