head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.42;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.42;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!perl

# Basic tests for $[ as a variable
# plus miscellaneous bug fix tests

no warnings 'deprecated';
use Test::More tests => 7;

sub outside_base_scope { return "${'['}" }

$[ = 3;
my $base = \$[;
is "$$base", 3, 'retval of $[';
is outside_base_scope, 0, 'retval of $[ outside its scope';

${'['} = 3;
pass('run-time $[ = 3 assignment (in $[ = 3 scope)');
{
  $[ = 0;
  ${'['} = 0;
  pass('run-time $[ = 0 assignment (in $[ = 3 scope)');
}

eval { ${'['} = 1 }; my $f = __FILE__; my $l = __LINE__;
is $@@, "That use of \$[ is unsupported at $f line $l.\n",
   "error when setting $[ to integer other than current base at run-time";

$[ = 6.7;
is "$[", 6, '$[ is an integer';

eval { my $x = 45; $[ = \$x }; $l = __LINE__;
is $@@, "That use of \$[ is unsupported at $f line $l.\n",
   'error when setting $[ to ref';

sub foo { my $x; $x = wait } # compilation of this routine used to crash

1;
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
