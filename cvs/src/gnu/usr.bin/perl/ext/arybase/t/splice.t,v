head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.42;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.42;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use warnings; no warnings 'deprecated';
use strict;

use Test::More tests => 23;

our @@t;
our @@i5 = (3, 3, 3, 3, 3);

$[ = 3;

@@t = qw(a b c d e f);
is_deeply [ scalar splice @@t ], [qw(f)];
is_deeply \@@t, [];

@@t = qw(a b c d e f);
is_deeply [ splice @@t ], [qw(a b c d e f)];
is_deeply \@@t, [];

@@t = qw(a b c d e f);
is_deeply [ scalar splice @@t, 5 ], [qw(f)];
is_deeply \@@t, [qw(a b)];

@@t = qw(a b c d e f);
is_deeply [ splice @@t, 5 ], [qw(c d e f)];
is_deeply \@@t, [qw(a b)];

@@t = qw(a b c d e f);
is_deeply [ scalar splice @@t, @@i5 ], [qw(f)];
is_deeply \@@t, [qw(a b)];

@@t = qw(a b c d e f);
is_deeply [ splice @@t, @@i5 ], [qw(c d e f)];
is_deeply \@@t, [qw(a b)];

@@t = qw(a b c d e f);
is_deeply [ scalar splice @@t, 5, 2 ], [qw(d)];
is_deeply \@@t, [qw(a b e f)];

@@t = qw(a b c d e f);
is_deeply [ splice @@t, 5, 2 ], [qw(c d)];
is_deeply \@@t, [qw(a b e f)];

@@t = qw(a b c d e f);
is_deeply [ scalar splice @@t, 5, 2, qw(x y z) ], [qw(d)];
is_deeply \@@t, [qw(a b x y z e f)];

@@t = qw(a b c d e f);
is_deeply [ splice @@t, 5, 2, qw(x y z) ], [qw(c d)];
is_deeply \@@t, [qw(a b x y z e f)];

@@t = qw(a b c d e f);
splice @@t, -4, 1;
is_deeply \@@t, [qw(a b d e f)];

@@t = qw(a b c d e f);
splice @@t, 1, 1;
is_deeply \@@t, [qw(a b c d f)];

$[ = -3;

@@t = qw(a b c d e f);
splice @@t, -3, 1;
is_deeply \@@t, [qw(b c d e f)];

1;
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
