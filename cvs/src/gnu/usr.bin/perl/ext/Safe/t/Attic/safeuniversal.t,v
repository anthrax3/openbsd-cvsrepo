head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.2
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2010.09.24.14.59.27;	author millert;	state dead;
branches;
next	1.2;

1.2
date	2010.06.28.18.18.11;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.29.17.18.24;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.29.17.18.24;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2009.10.12.18.11.12;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl

BEGIN {
    require Config;
    import Config;
    if ($Config{'extensions'} !~ /\bOpcode\b/) {
	print "1..0\n";
	exit 0;
    }
}

use strict;
use warnings;
use Test::More;
use Safe;
plan(tests => 6);

my $c = new Safe;
$c->permit(qw(require caller));

my $no_warn_redef = ($] != 5.008009)
    ? q(no warnings 'redefine';)
    : q($SIG{__WARN__}=sub{};);
my $r = $c->reval($no_warn_redef . q!
    sub UNIVERSAL::isa { "pwned" }
    (bless[],"Foo")->isa("Foo");
!);

is( $r, "pwned", "isa overriden in compartment" );
is( (bless[],"Foo")->isa("Foo"), 1, "... but not outside" );

sub Foo::foo {}

$r = $c->reval($no_warn_redef . q!
    sub UNIVERSAL::can { "pwned" }
    (bless[],"Foo")->can("foo");
!);

is( $r, "pwned", "can overriden in compartment" );
is( (bless[],"Foo")->can("foo"), \&Foo::foo, "... but not outside" );

$r = $c->reval(q!
    utf8::is_utf8("\x{100}");
!);
is( $@@, '', 'can call utf8::is_valid' );
is( $r, 1, '... returns 1' );
@


1.2
log
@Update the Safe module to version 2.2.7 for CVE-2010-1168 and
CVE-2010-1447.  From Ian McWilliam
@
text
@@


1.1
log
@Initial revision
@
text
@a3 4
    if ($ENV{PERL_CORE}) {
	chdir 't' if -d 't';
	@@INC = '../lib';
    }
d13 1
d21 4
a24 1
my $r = $c->reval(q!
d34 1
a34 1
$r = $c->reval(q!
@


1.1.1.1
log
@import perl 5.10.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.1
@
text
@a16 1
use warnings;
a24 1
    no warnings 'redefine';
a34 1
    no warnings 'redefine';
@

