head	1.2;
access;
symbols
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.10.12.18.24.27;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2003.12.03.02.43.43;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.03.02.43.43;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge in perl 5.10.1
@
text
@#!perl -w

print "1..6\n";

use strict;
use Digest::MD5 qw(md5_hex);

my $a = Digest::MD5->new;
$a->add("a");
my $b = $a->clone;

print "not " unless $b->clone->hexdigest eq md5_hex("a");
print "ok 1\n";

$a->add("a");
print "not " unless $a->hexdigest eq md5_hex("aa");
print "ok 2\n";

print "not " unless $a->hexdigest eq md5_hex("");
print "ok 3\n";

$b->add("b");
print "not " unless $b->clone->hexdigest eq md5_hex("ab");
print "ok 4\n";

$b->add("c");
print "not " unless $b->clone->hexdigest eq md5_hex("abc");
print "ok 5\n";

# Test that cloning picks up the correct class for subclasses.
{
   package MD5;
   @@MD5::ISA = qw(Digest::MD5);
}

$a = MD5->new;
$a->add("a");
$b = $a->clone;

print "not " unless ref($b) eq "MD5" && $b->add("b")->hexdigest eq md5_hex("ab");
print "ok 6\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.2 from CPAN
@
text
@@
