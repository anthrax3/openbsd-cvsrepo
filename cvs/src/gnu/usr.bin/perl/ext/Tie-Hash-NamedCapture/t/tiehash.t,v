head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl -w
use strict;

use Test::More;

my %hashes = ('+' => \%+, '-' => \%-);

foreach (['plus1'],
	 ['minus1', all => 1],
	 ['plus2', all => 0],
	 ['plus3', zlonk => 1],
	 ['minus2', thwapp => 0, all => 1],
	) {
    my $name = shift @@$_;
    my $hash = $hashes{$name} = {};
    isa_ok(tie(%$hash, 'Tie::Hash::NamedCapture', @@$_),
	   'Tie::Hash::NamedCapture', "%$name");
}

is("abcdef" =~ /(?<foo>[ab])*(?<bar>c)(?<foo>d)(?<bar>[ef]*)/, 1,
   "We matched");

foreach my $name (qw(+ plus1 plus2 plus3)) {
    my $hash = $hashes{$name};
    is_deeply($hash, { foo => 'b', bar => 'c' }, "%$name is as expected");
}

foreach my $name (qw(- minus1 minus2)) {
    my $hash = $hashes{$name};
    is_deeply($hash, { foo => [qw(b d)], bar => [qw(c ef)] },
	      "%$name is as expected");
}

done_testing();
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
