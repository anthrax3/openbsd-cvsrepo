head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.45;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.45;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!perl -w

use strict;
use ExtUtils::MakeMaker;
use File::Spec::Functions;

WriteMakefile(NAME => 'Pod::Functions',
	      VERSION_FROM => 'Functions_pm.PL',
	      LICENSE => 'perl',
	      PREREQ_PM => {},
	      ABSTRACT_FROM => 'Functions_pm.PL',
	      AUTHOR => 'Perl 5 Porters <perlbug@@perl.org>',
	      INSTALLDIRS => 'perl',
	      PL_FILES => {}, # Stop EU::MM defaulting this to run our PL
	      PM => {'Functions.pm' => '$(INST_LIBDIR)/Functions.pm'},
	      clean => {FILES => 'Functions.pm'},
	     );

# There doesn't seem to be any way to get ExtUtils::MakeMaker to add a
# dependency on another file (or target), and as it's using :: rules, not :
# rules, then we can't simply add a one line dependency. So we need to provide
# the entire thing. Fortunately, the same code in MM_Unix.pm is actually used
# for all platforms, so this code below should also be portable:

sub MY::postamble {
    my $pf = catfile(updir, updir, 'pod', 'perlfunc.pod');
    return <<"EOT";
all :: Functions.pm
	\$(NOECHO) \$(NOOP)

Functions.pm :: Functions_pm.PL $pf
	\$(PERLRUN) Functions_pm.PL $pf
EOT
}
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
