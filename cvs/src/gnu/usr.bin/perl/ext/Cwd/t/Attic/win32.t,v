head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.3.0.4
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.2
	OPENBSD_4_7_BASE:1.1.1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.1.1.2.0.16
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.12
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.10
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.8
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.6
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.4
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.2
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.15;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2005.01.15.21.16.44;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.15.21.16.44;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.03.28.18.47.55;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2009.10.12.18.11.18;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    if ($ENV{PERL_CORE}) {
        @@INC = '../lib';
    }
}

use Test::More;
if( $^O eq 'MSWin32' ) {
  plan tests => 3;
} else {
  plan skip_all => 'this is not win32';
}

use Cwd;
ok 1;

my $cdir = getdcwd('C:');
like $cdir, qr{^C:};

my $ddir = getdcwd('D:');
if (defined $ddir) {
  like $ddir, qr{^D:};
} else {
  # May not have a D: drive mounted
  ok 1;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.6 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.8 import
@
text
@d4 1
a9 2
use File::Spec;
use lib File::Spec->catdir('t', 'lib');
a10 1

d21 1
a21 1
like $cdir, qr{^C:}i;
d25 1
a25 1
  like $ddir, qr{^D:}i;
@


1.1.1.3
log
@import perl 5.10.1
@
text
@d14 1
a14 1
  plan tests => 4;
a31 7

# Ensure compatibility with naughty versions of Template::Toolkit,
# which pass in a bare $1 as an argument
'Foo/strawberry' =~ /(.*)/;
my $result = File::Spec::Win32->catfile('C:/cache', $1);
is( $result, 'C:\cache\Foo\strawberry' );

@


