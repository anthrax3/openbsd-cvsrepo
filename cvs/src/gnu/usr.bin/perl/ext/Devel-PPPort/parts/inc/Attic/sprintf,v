head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.09.24.14.59.17;	author millert;	state dead;
branches;
next	1.2;

1.2
date	2009.10.12.18.24.27;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.14;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.14;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@################################################################################
##
##  $Revision: 1.2 $
##  $Author: millert $
##  $Date: 2009/10/12 18:24:27 $
##
################################################################################
##
##  Version 3.x, Copyright (C) 2004-2009, Marcus Holland-Moritz.
##  Version 2.x, Copyright (C) 2001, Paul Marquess.
##  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
##
##  This program is free software; you can redistribute it and/or
##  modify it under the same terms as Perl itself.
##
################################################################################

=provides

my_sprintf

=implementation

#if !defined(my_sprintf)
#if { NEED my_sprintf }

int
my_sprintf(char *buffer, const char* pat, ...)
{
    va_list args;
    va_start(args, pat);
    vsprintf(buffer, pat, args);
    va_end(args);
    return strlen(buffer);
}

#endif
#endif

=xsinit

#define NEED_my_sprintf

=xsubs

void
my_sprintf()
	PREINIT:
		char buf[128];
		int len;
	PPCODE:
		len = my_sprintf(buf, "foo%s%d", "bar", 42);
		mXPUSHi(len);
		mXPUSHs(newSVpv(buf, 0));
		XSRETURN(2);

=tests plan => 2

my($l, $s) = Devel::PPPort::my_sprintf();
ok($l, 8);
ok($s, "foobar42");

@


1.2
log
@Merge in perl 5.10.1
@
text
@d3 3
a5 3
##  $Revision: 2 $
##  $Author: mhx $
##  $Date: 2009/01/18 14:10:51 +0100 $
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
