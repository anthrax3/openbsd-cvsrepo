head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use warnings;
use strict;

use Test::More tests => 18;

BEGIN { $^H |= 0x20000; }

my $t;

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	$t .= "a";
	scopelessblock {
		$t .= "b";
	}
	$t .= "c";
};
is $@@, "";
is $t, "abc";

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	$t .= "a";
	scopelessblock {
		my $t = "z";
		$t .= "b";
	}
	$t .= "c";
};
is $@@, "";
is $t, "a";

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	my $f = 1.5;
	$t .= "a(".($f+$f).")";
	scopelessblock {
		use integer;
		$t .= "b(".($f+$f).")";
	}
	$t .= "c(".($f+$f).")";
};
is $@@, "";
is $t, "a(3)b(2)c(2)";

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	our $z = "z";
	$t .= "a$z";
	scopelessblock {
		local $z = "y";
		$t .= "b$z";
	}
	$t .= "c$z";
};
is $@@, "";
is $t, "azbycy";

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	$t .= "A";
	do {
		$t .= "a";
		scopelessblock {
			$t .= "b";
		}
		$t .= "c";
	};
	$t .= "B";
};
is $@@, "";
is $t, "AabcB";

$t = "";
eval q|
	use XS::APItest qw(scopelessblock);
	$t .= "a";
	scopelessblock {
		$t .= "b";
	]
	$t .= "c";
|;
isnt $@@, "";
is $t, "";

$SIG{__WARN__} = sub { };
$t = "";
eval q|
	use XS::APItest qw(scopelessblock);
	$t .= "a";
	scopelessblock {
		$t .= "b";
	)
	$t .= "c";
|;
isnt $@@, "";
is $t, "";

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	{ $t .= "a"; }
	scopelessblock {
		{ $t .= "b"; }
	}
	{ $t .= "c"; }
};
is $@@, "";
is $t, "abc";

$t = "";
eval q{
	use XS::APItest qw(scopelessblock);
	$t .= "A";
	do {
		{ $t .= "a"; }
		scopelessblock {
			{ $t .= "b"; }
		}
		{ $t .= "c"; }
	};
	$t .= "B";
};
is $@@, "";
is $t, "AabcB";

1;
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
