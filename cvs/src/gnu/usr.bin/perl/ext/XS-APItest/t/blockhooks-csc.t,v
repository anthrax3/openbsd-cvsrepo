head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.18
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

# Tests for @@{^COMPILE_SCOPE_CONTAINER}

use strict;
use warnings;
use Test::More tests => 12;
use XS::APItest;

BEGIN { 
    # this has to be a full glob alias, since the GvAV gets replaced
    *COMPILE_SCOPE_CONTAINER = \*XS::APItest::COMPILE_SCOPE_CONTAINER;
}
our @@COMPILE_SCOPE_CONTAINER;

my %destroyed;

BEGIN {
    package CounterObject;

    sub new {
        my ($class, $name) = @@_;
        return bless { name => $name }, $class;
    }

    sub name {
        my ($self) = @@_;
        return $self->{name};
    }

    sub DESTROY {
        my ($self) = @@_;
        $destroyed{ $self->name }++;
    }


    package ReplaceCounter;
    $INC{'ReplaceCounter.pm'} = __FILE__;

    sub import {
        my ($self, $counter) = @@_;
        $COMPILE_SCOPE_CONTAINER[-1] = CounterObject->new($counter);
    }

    package InstallCounter;
    $INC{'InstallCounter.pm'} = __FILE__;

    sub import {
        my ($class, $counter) = @@_;
        push @@COMPILE_SCOPE_CONTAINER, CounterObject->new($counter);
    }

    package TestCounter;
    $INC{'TestCounter.pm'} = __FILE__;

    sub import {
        my ($class, $counter, $number, $message) = @@_;

        $number = 1
            unless defined $number;
        $message = "counter $counter is found $number times"
            unless defined $message;

        ::is scalar(grep { $_->name eq $counter } @@{COMPILE_SCOPE_CONTAINER}),
            $number,
            $message;
    }
}

{
    use InstallCounter 'root';
    use InstallCounter '3rd-party';

    {
        BEGIN { ok(!keys %destroyed, 'nothing destroyed yet'); }

        use ReplaceCounter 'replace';

        BEGIN { ok(!keys %destroyed, 'nothing destroyed yet'); }

        use TestCounter '3rd-party', 0, '3rd-party no longer visible';
        use TestCounter 'replace',   1, 'replacement now visible';
        use TestCounter 'root';

        BEGIN { ok(!keys %destroyed, 'nothing destroyed yet'); }
    }

    BEGIN {
        ok $destroyed{replace}, 'replacement has been destroyed after end of outer scope';
    }

    use TestCounter 'root',     1, 'root visible again';
    use TestCounter 'replace',  0, 'lower replacement no longer visible';
    use TestCounter '3rd-party';
}

ok $destroyed{ $_ }, "$_ has been destroyed after end of outer scope"
    for 'root', '3rd-party';
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
