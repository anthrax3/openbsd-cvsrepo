head	1.2;
access;
symbols
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2003.12.03.03.02.34;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.55;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.55;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@#!./perl

BEGIN {
	chdir 't' if -d 't';
	@@INC = '../lib';
}

use strict;

use Test::More tests => 13;
require_ok( 're' );

# setcolor
$INC{ 'Term/Cap.pm' } = 1;
local $ENV{PERL_RE_TC};
re::setcolor();
is( $ENV{PERL_RE_COLORS}, "md\tme\tso\tse\tus\tue", 
	'setcolor() should provide default colors' );
$ENV{PERL_RE_TC} = 'su,n,ny';
re::setcolor();
is( $ENV{PERL_RE_COLORS}, "su\tn\tny", '... or use $ENV{PERL_RE_COLORS}' );

# bits
# get on
my $warn;
local $SIG{__WARN__} = sub {
	$warn = shift;
};
eval { re::bits(1) };
like( $warn, qr/Useless use/, 'bits() should warn with no args' );

delete $ENV{PERL_RE_COLORS};
re::bits(0, 'debug');
is( $ENV{PERL_RE_COLORS}, undef,
	"... should not set regex colors given 'debug'" );
re::bits(0, 'debugcolor');
isnt( $ENV{PERL_RE_COLORS}, '', 
	"... should set regex colors given 'debugcolor'" );
re::bits(0, 'nosuchsubpragma');
like( $warn, qr/Unknown "re" subpragma/, 
	'... should warn about unknown subpragma' );
ok( re::bits(0, 'taint') & 0x00100000, '... should set taint bits' );
ok( re::bits(0, 'eval')  & 0x00200000, '... should set eval bits' );

local $^H;

# import
re->import('taint', 'eval');
ok( $^H & 0x00100000, 'import should set taint bits in $^H when requested' );
ok( $^H & 0x00200000, 'import should set eval bits in $^H when requested' );

re->unimport('taint');
ok( !( $^H & 0x00100000 ), 'unimport should clear bits in $^H when requested' );
re->unimport('eval');
ok( !( $^H & 0x00200000 ), '... and again' );

package Term::Cap;

sub Tgetent {
	bless({}, $_[0]);
}

sub Tputs {
	return $_[1];
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@
