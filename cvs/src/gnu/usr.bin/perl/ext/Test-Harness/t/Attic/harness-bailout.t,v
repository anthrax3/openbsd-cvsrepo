head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.29;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.21;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.21;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl

use strict;
use File::Spec;

BEGIN {
    *CORE::GLOBAL::exit = sub { die '!exit called!' };
}

use TAP::Harness;
use Test::More;

my @@jobs = (
    {   name => 'sequential',
        args => { verbosity => -9 },
    },
    {   name => 'parallel',
        args => { verbosity => -9, jobs => 2 },
    },
);

plan tests => @@jobs * 2;

for my $test (@@jobs) {
    my $name    = $test->{name};
    my $args    = $test->{args};
    my $harness = TAP::Harness->new($args);
    eval {
        local ( *OLDERR, *OLDOUT );
        open OLDERR, '>&STDERR' or die $!;
        open OLDOUT, '>&STDOUT' or die $!;
        my $devnull = File::Spec->devnull;
        open STDERR, ">$devnull" or die $!;
        open STDOUT, ">$devnull" or die $!;

        $harness->runtests(
            File::Spec->catfile(
                (   $ENV{PERL_CORE}
                    ? ( File::Spec->updir, 'ext', 'Test-Harness' )
                    : ()
                ),
                't',
                'sample-tests',
                'bailout'
            )
        );

        open STDERR, '>&OLDERR' or die $!;
        open STDOUT, '>&OLDOUT' or die $!;
    };
    my $err = $@@;
    unlike $err, qr{!exit called!}, "$name: didn't exit";
    like $err, qr{FAILED--Further testing stopped: GERONIMMMOOOOOO!!!},
      "$name: bailout message";
}

# vim:ts=2:sw=2:et:ft=perl

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
