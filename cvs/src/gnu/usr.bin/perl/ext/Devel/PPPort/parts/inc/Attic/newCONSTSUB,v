head	1.4;
access;
symbols
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2009.10.12.18.24.25;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2008.09.29.17.36.03;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.28.19.23.02;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.15.21.16.46;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.15.21.16.46;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.03.28.18.47.59;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.15;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge in perl 5.10.1
@
text
@################################################################################
##
##  $Revision: 1.3 $
##  $Author: millert $
##  $Date: 2008/09/29 17:36:03 $
##
################################################################################
##
##  Version 3.x, Copyright (C) 2004-2007, Marcus Holland-Moritz.
##  Version 2.x, Copyright (C) 2001, Paul Marquess.
##  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
##
##  This program is free software; you can redistribute it and/or
##  modify it under the same terms as Perl itself.
##
################################################################################

=provides

newCONSTSUB

=implementation

/* Hint: newCONSTSUB
 * Returns a CV* as of perl-5.7.1. This return value is not supported
 * by Devel::PPPort.
 */

/* newCONSTSUB from IO.xs is in the core starting with 5.004_63 */
#if { VERSION < 5.004_63 } && { VERSION != 5.004_05 }
#if { NEED newCONSTSUB }

void
newCONSTSUB(HV *stash, const char *name, SV *sv)
{
	U32 oldhints = PL_hints;
	HV *old_cop_stash = PL_curcop->cop_stash;
	HV *old_curstash = PL_curstash;
	line_t oldline = PL_curcop->cop_line;
	PL_curcop->cop_line = PL_copline;

	PL_hints &= ~HINT_BLOCK_SCOPE;
	if (stash)
		PL_curstash = PL_curcop->cop_stash = stash;

	newSUB(

#if   { VERSION <  5.003_22 }
		start_subparse(),
#elif { VERSION == 5.003_22 }
     		start_subparse(0),
#else  /* 5.003_23  onwards */
     		start_subparse(FALSE, 0),
#endif

		newSVOP(OP_CONST, 0, newSVpv((char *) name, 0)),
		newSVOP(OP_CONST, 0, &PL_sv_no),   /* SvPV(&PL_sv_no) == "" -- GMB */
		newSTATEOP(0, Nullch, newSVOP(OP_CONST, 0, sv))
	);

	PL_hints = oldhints;
	PL_curcop->cop_stash = old_cop_stash;
	PL_curstash = old_curstash;
	PL_curcop->cop_line = oldline;
}
#endif
#endif

=xsinit

#define NEED_newCONSTSUB

=xsmisc

void call_newCONSTSUB_1(void)
{
#ifdef PERL_NO_GET_CONTEXT
	dTHX;
#endif
	newCONSTSUB(gv_stashpv("Devel::PPPort", FALSE), "test_value_1", newSViv(1));
}

extern void call_newCONSTSUB_2(void);
extern void call_newCONSTSUB_3(void);

=xsubs

void
call_newCONSTSUB_1()

void
call_newCONSTSUB_2()

void
call_newCONSTSUB_3()

=tests plan => 3

&Devel::PPPort::call_newCONSTSUB_1();
ok(&Devel::PPPort::test_value_1(), 1);

&Devel::PPPort::call_newCONSTSUB_2();
ok(&Devel::PPPort::test_value_2(), 2);

&Devel::PPPort::call_newCONSTSUB_3();
ok(&Devel::PPPort::test_value_3(), 3);

@


1.3
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d3 3
a5 3
##  $Revision: 12 $
##  $Author: mhx $
##  $Date: 2007/09/11 23:20:42 +0200 $
@


1.2
log
@merge in perl 5.8.8
@
text
@d3 3
a5 3
##  $Revision: 1.1.1.1 $
##  $Author: millert $
##  $Date: 2005/01/15 21:16:46 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2005, Marcus Holland-Moritz.
d34 1
a34 1
newCONSTSUB(HV *stash, char *name, SV *sv)
d56 1
a56 1
		newSVOP(OP_CONST, 0, newSVpv(name,0)),
@


1.1
log
@Initial revision
@
text
@d3 3
a5 3
##  $Revision: 7 $
##  $Author: mhx $
##  $Date: 2004/08/13 12:45:55 +0200 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004, Marcus Holland-Moritz.
d99 1
a99 1
&Devel::PPPort::call_newCONSTSUB_1(); 
d102 1
a102 1
&Devel::PPPort::call_newCONSTSUB_2(); 
d105 1
a105 1
&Devel::PPPort::call_newCONSTSUB_3(); 
@


1.1.1.1
log
@perl 5.8.6 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.8 import
@
text
@d3 1
a3 1
##  $Revision: 9 $
d5 1
a5 1
##  $Date: 2005/03/10 18:08:41 +0100 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2005, Marcus Holland-Moritz.
d99 1
a99 1
&Devel::PPPort::call_newCONSTSUB_1();
d102 1
a102 1
&Devel::PPPort::call_newCONSTSUB_2();
d105 1
a105 1
&Devel::PPPort::call_newCONSTSUB_3();
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@d3 1
a3 1
##  $Revision: 12 $
d5 1
a5 1
##  $Date: 2007/09/11 23:20:42 +0200 $
d9 1
a9 1
##  Version 3.x, Copyright (C) 2004-2007, Marcus Holland-Moritz.
d34 1
a34 1
newCONSTSUB(HV *stash, const char *name, SV *sv)
d56 1
a56 1
		newSVOP(OP_CONST, 0, newSVpv((char *) name, 0)),
@


