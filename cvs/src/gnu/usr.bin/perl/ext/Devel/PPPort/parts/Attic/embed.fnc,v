head	1.2;
access;
symbols
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.10
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.8
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.6
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.4
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.2
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.1.0.6
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.4
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.2
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.10.12.18.24.25;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2005.01.15.21.16.45;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.15.21.16.45;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.03.28.18.47.58;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.15;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge in perl 5.10.1
@
text
@: Lines are of the form:
:    flags|return_type|function_name|arg1|arg2|...|argN
:
: A line may be continued on another by ending it with a backslash.
: Leading and trailing whitespace will be ignored in each component.
:
: flags are single letters with following meanings:
:	A		member of public API
:	m		Implemented as a macro - no export, no
:			proto, no #define
:	d		function has documentation with its source
:	s		static function, should have an S_ prefix in
:			source file; for macros (m), suffix the usage
:			example	with a semicolon
:	n		has no implicit interpreter/thread context argument
:	p		function has a Perl_ prefix
:	f		function takes printf style format string, varargs
:	r		function never returns
:	o		has no compatibility macro (#define foo Perl_foo)
:	x		not exported
:	X		explicitly exported
:	M		may change
:	E		visible to extensions included in the Perl core
:	b		binary backward compatibility; function is a macro
:			but has also Perl_ implementation (which is exported)
:	U		suppress usage example in autogenerated documentation
:
: Individual flags may be separated by whitespace.
:
: New global functions should be added at the end for binary compatibility
: in some configurations.

START_EXTERN_C

#if defined(PERL_IMPLICIT_SYS)
Ano	|PerlInterpreter*	|perl_alloc_using \
				|struct IPerlMem* m|struct IPerlMem* ms \
				|struct IPerlMem* mp|struct IPerlEnv* e \
				|struct IPerlStdIO* io|struct IPerlLIO* lio \
				|struct IPerlDir* d|struct IPerlSock* s \
				|struct IPerlProc* p
#endif
Anod	|PerlInterpreter*	|perl_alloc
Anod	|void	|perl_construct	|PerlInterpreter* interp
Anod	|int	|perl_destruct	|PerlInterpreter* interp
Anod	|void	|perl_free	|PerlInterpreter* interp
Anod	|int	|perl_run	|PerlInterpreter* interp
Anod	|int	|perl_parse	|PerlInterpreter* interp|XSINIT_t xsinit \
				|int argc|char** argv|char** env
Anp	|bool	|doing_taint	|int argc|char** argv|char** env
#if defined(USE_ITHREADS)
Anod	|PerlInterpreter*|perl_clone|PerlInterpreter* interp|UV flags
#  if defined(PERL_IMPLICIT_SYS)
Ano	|PerlInterpreter*|perl_clone_using|PerlInterpreter *interp|UV flags \
				|struct IPerlMem* m|struct IPerlMem* ms \
				|struct IPerlMem* mp|struct IPerlEnv* e \
				|struct IPerlStdIO* io|struct IPerlLIO* lio \
				|struct IPerlDir* d|struct IPerlSock* s \
				|struct IPerlProc* p
#  endif
#endif

Anop	|Malloc_t|malloc	|MEM_SIZE nbytes
Anop	|Malloc_t|calloc	|MEM_SIZE elements|MEM_SIZE size
Anop	|Malloc_t|realloc	|Malloc_t where|MEM_SIZE nbytes
Anop	|Free_t	|mfree		|Malloc_t where
#if defined(MYMALLOC)
np	|MEM_SIZE|malloced_size	|void *p
#endif

Anp	|void*	|get_context
Anp	|void	|set_context	|void *thx

END_EXTERN_C

/* functions with flag 'n' should come before here */
START_EXTERN_C
#  include "pp_proto.h"
Ap	|SV*	|amagic_call	|SV* left|SV* right|int method|int dir
Ap	|bool	|Gv_AMupdate	|HV* stash
Ap	|CV*	|gv_handler	|HV* stash|I32 id
p	|OP*	|append_elem	|I32 optype|OP* head|OP* tail
p	|OP*	|append_list	|I32 optype|LISTOP* first|LISTOP* last
p	|I32	|apply		|I32 type|SV** mark|SV** sp
ApM	|void	|apply_attrs_string|char *stashpv|CV *cv|char *attrstr|STRLEN len
Apd	|void	|av_clear	|AV* ar
Apd	|SV*	|av_delete	|AV* ar|I32 key|I32 flags
Apd	|bool	|av_exists	|AV* ar|I32 key
Apd	|void	|av_extend	|AV* ar|I32 key
p	|AV*	|av_fake	|I32 size|SV** svp
Apd	|SV**	|av_fetch	|AV* ar|I32 key|I32 lval
Apd	|void	|av_fill	|AV* ar|I32 fill
Apd	|I32	|av_len		|AV* ar
Apd	|AV*	|av_make	|I32 size|SV** svp
Apd	|SV*	|av_pop		|AV* ar
Apd	|void	|av_push	|AV* ar|SV* val
p	|void	|av_reify	|AV* ar
Apd	|SV*	|av_shift	|AV* ar
Apd	|SV**	|av_store	|AV* ar|I32 key|SV* val
Apd	|void	|av_undef	|AV* ar
Apd	|void	|av_unshift	|AV* ar|I32 num
p	|OP*	|bind_match	|I32 type|OP* left|OP* pat
p	|OP*	|block_end	|I32 floor|OP* seq
Ap	|I32	|block_gimme
p	|int	|block_start	|int full
p	|void	|boot_core_UNIVERSAL
p	|void	|boot_core_PerlIO
Ap	|void	|call_list	|I32 oldscope|AV* av_list
p	|bool	|cando		|Mode_t mode|Uid_t effective|Stat_t* statbufp
Ap	|U32	|cast_ulong	|NV f
Ap	|I32	|cast_i32	|NV f
Ap	|IV	|cast_iv	|NV f
Ap	|UV	|cast_uv	|NV f
#if !defined(HAS_TRUNCATE) && !defined(HAS_CHSIZE) && defined(F_FREESP)
Ap	|I32	|my_chsize	|int fd|Off_t length
#endif
p	|OP*	|convert	|I32 optype|I32 flags|OP* o
Afprd	|void	|croak		|const char* pat|...
Apr	|void	|vcroak		|const char* pat|va_list* args
#if defined(PERL_IMPLICIT_CONTEXT)
Afnrp	|void	|croak_nocontext|const char* pat|...
Afnp	|OP*	|die_nocontext	|const char* pat|...
Afnp	|void	|deb_nocontext	|const char* pat|...
Afnp	|char*	|form_nocontext	|const char* pat|...
Anp	|void	|load_module_nocontext|U32 flags|SV* name|SV* ver|...
Afnp	|SV*	|mess_nocontext	|const char* pat|...
Afnp	|void	|warn_nocontext	|const char* pat|...
Afnp	|void	|warner_nocontext|U32 err|const char* pat|...
Afnp	|SV*	|newSVpvf_nocontext|const char* pat|...
Afnp	|void	|sv_catpvf_nocontext|SV* sv|const char* pat|...
Afnp	|void	|sv_setpvf_nocontext|SV* sv|const char* pat|...
Afnp	|void	|sv_catpvf_mg_nocontext|SV* sv|const char* pat|...
Afnp	|void	|sv_setpvf_mg_nocontext|SV* sv|const char* pat|...
Afnp	|int	|fprintf_nocontext|PerlIO* stream|const char* fmt|...
Afnp	|int	|printf_nocontext|const char* fmt|...
#endif
p	|void	|cv_ckproto	|CV* cv|GV* gv|char* p
pd	|CV*	|cv_clone	|CV* proto
Apd	|SV*	|cv_const_sv	|CV* cv
p	|SV*	|op_const_sv	|OP* o|CV* cv
Apd	|void	|cv_undef	|CV* cv
Ap	|void	|cx_dump	|PERL_CONTEXT* cs
Ap	|SV*	|filter_add	|filter_t funcp|SV* datasv
Ap	|void	|filter_del	|filter_t funcp
Ap	|I32	|filter_read	|int idx|SV* buffer|int maxlen
Ap	|char**	|get_op_descs
Ap	|char**	|get_op_names
p	|char*	|get_no_modify
p	|U32*	|get_opargs
Ap	|PPADDR_t*|get_ppaddr
Ep	|I32	|cxinc
Afp	|void	|deb		|const char* pat|...
Ap	|void	|vdeb		|const char* pat|va_list* args
Ap	|void	|debprofdump
Ap	|I32	|debop		|OP* o
Ap	|I32	|debstack
Ap	|I32	|debstackptrs
Ap	|char*	|delimcpy	|char* to|char* toend|char* from \
				|char* fromend|int delim|I32* retlen
p	|void	|deprecate	|char* s
p	|void	|deprecate_old	|char* s
Afp	|OP*	|die		|const char* pat|...
p	|OP*	|vdie		|const char* pat|va_list* args
p	|OP*	|die_where	|char* message|STRLEN msglen
Ap	|void	|dounwind	|I32 cxix
p	|bool	|do_aexec	|SV* really|SV** mark|SV** sp
p	|bool	|do_aexec5	|SV* really|SV** mark|SV** sp|int fd|int flag
Ap	|int	|do_binmode	|PerlIO *fp|int iotype|int mode
p	|void	|do_chop	|SV* asv|SV* sv
Ap	|bool	|do_close	|GV* gv|bool not_implicit
p	|bool	|do_eof		|GV* gv
p	|bool	|do_exec	|char* cmd
#if defined(WIN32)
Ap	|int	|do_aspawn	|SV* really|SV** mark|SV** sp
Ap	|int	|do_spawn	|char* cmd
Ap	|int	|do_spawn_nowait|char* cmd
#endif
#if !defined(WIN32)
p	|bool	|do_exec3	|char* cmd|int fd|int flag
#endif
p	|void	|do_execfree
#if defined(HAS_MSG) || defined(HAS_SEM) || defined(HAS_SHM)
p	|I32	|do_ipcctl	|I32 optype|SV** mark|SV** sp
p	|I32	|do_ipcget	|I32 optype|SV** mark|SV** sp
p	|I32	|do_msgrcv	|SV** mark|SV** sp
p	|I32	|do_msgsnd	|SV** mark|SV** sp
p	|I32	|do_semop	|SV** mark|SV** sp
p	|I32	|do_shmio	|I32 optype|SV** mark|SV** sp
#endif
Ap	|void	|do_join	|SV* sv|SV* del|SV** mark|SV** sp
p	|OP*	|do_kv
Ap	|bool	|do_open	|GV* gv|char* name|I32 len|int as_raw \
				|int rawmode|int rawperm|PerlIO* supplied_fp
Ap	|bool	|do_open9	|GV *gv|char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|PerlIO *supplied_fp \
				|SV *svs|I32 num
Ap	|bool	|do_openn	|GV *gv|char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|PerlIO *supplied_fp \
				|SV **svp|I32 num
p	|void	|do_pipe	|SV* sv|GV* rgv|GV* wgv
p	|bool	|do_print	|SV* sv|PerlIO* fp
p	|OP*	|do_readline
p	|I32	|do_chomp	|SV* sv
p	|bool	|do_seek	|GV* gv|Off_t pos|int whence
Ap	|void	|do_sprintf	|SV* sv|I32 len|SV** sarg
p	|Off_t	|do_sysseek	|GV* gv|Off_t pos|int whence
p	|Off_t	|do_tell	|GV* gv
p	|I32	|do_trans	|SV* sv
p	|UV	|do_vecget	|SV* sv|I32 offset|I32 size
p	|void	|do_vecset	|SV* sv
p	|void	|do_vop		|I32 optype|SV* sv|SV* left|SV* right
p	|OP*	|dofile		|OP* term
Ap	|I32	|dowantarray
Ap	|void	|dump_all
Ap	|void	|dump_eval
#if defined(DUMP_FDS)
Ap	|void	|dump_fds	|char* s
#endif
Ap	|void	|dump_form	|GV* gv
Ap	|void	|gv_dump	|GV* gv
Ap	|void	|op_dump	|OP* arg
Ap	|void	|pmop_dump	|PMOP* pm
Ap	|void	|dump_packsubs	|HV* stash
Ap	|void	|dump_sub	|GV* gv
Apd	|void	|fbm_compile	|SV* sv|U32 flags
Apd	|char*	|fbm_instr	|unsigned char* big|unsigned char* bigend \
				|SV* littlesv|U32 flags
p	|char*	|find_script	|char *scriptname|bool dosearch \
				|char **search_ext|I32 flags
p	|OP*	|force_list	|OP* arg
p	|OP*	|fold_constants	|OP* arg
Afpd	|char*	|form		|const char* pat|...
Ap	|char*	|vform		|const char* pat|va_list* args
Ap	|void	|free_tmps
p	|OP*	|gen_constant_list|OP* o
#if !defined(HAS_GETENV_LEN)
p	|char*	|getenv_len	|const char* key|unsigned long *len
#endif
Ap	|void	|gp_free	|GV* gv
Ap	|GP*	|gp_ref		|GP* gp
Ap	|GV*	|gv_AVadd	|GV* gv
Ap	|GV*	|gv_HVadd	|GV* gv
Ap	|GV*	|gv_IOadd	|GV* gv
Ap	|GV*	|gv_autoload4	|HV* stash|const char* name|STRLEN len \
				|I32 method
Ap	|void	|gv_check	|HV* stash
Ap	|void	|gv_efullname	|SV* sv|GV* gv
Ap	|void	|gv_efullname3	|SV* sv|GV* gv|const char* prefix
Ap	|void	|gv_efullname4	|SV* sv|GV* gv|const char* prefix|bool keepmain
Ap	|GV*	|gv_fetchfile	|const char* name
Apd	|GV*	|gv_fetchmeth	|HV* stash|const char* name|STRLEN len \
				|I32 level
Apd	|GV*	|gv_fetchmeth_autoload	|HV* stash|const char* name|STRLEN len \
				|I32 level
Apd	|GV*	|gv_fetchmethod	|HV* stash|const char* name
Apd	|GV*	|gv_fetchmethod_autoload|HV* stash|const char* name \
				|I32 autoload
Ap	|GV*	|gv_fetchpv	|const char* name|I32 add|I32 sv_type
Ap	|void	|gv_fullname	|SV* sv|GV* gv
Ap	|void	|gv_fullname3	|SV* sv|GV* gv|const char* prefix
Ap	|void	|gv_fullname4	|SV* sv|GV* gv|const char* prefix|bool keepmain
Ap	|void	|gv_init	|GV* gv|HV* stash|const char* name \
				|STRLEN len|int multi
Apd	|HV*	|gv_stashpv	|const char* name|I32 create
Ap	|HV*	|gv_stashpvn	|const char* name|U32 namelen|I32 create
Apd	|HV*	|gv_stashsv	|SV* sv|I32 create
Apd	|void	|hv_clear	|HV* tb
Ap	|void	|hv_delayfree_ent|HV* hv|HE* entry
Apd	|SV*	|hv_delete	|HV* tb|const char* key|I32 klen|I32 flags
Apd	|SV*	|hv_delete_ent	|HV* tb|SV* key|I32 flags|U32 hash
Apd	|bool	|hv_exists	|HV* tb|const char* key|I32 klen
Apd	|bool	|hv_exists_ent	|HV* tb|SV* key|U32 hash
Apd	|SV**	|hv_fetch	|HV* tb|const char* key|I32 klen|I32 lval
Apd	|HE*	|hv_fetch_ent	|HV* tb|SV* key|I32 lval|U32 hash
Ap	|void	|hv_free_ent	|HV* hv|HE* entry
Apd	|I32	|hv_iterinit	|HV* tb
Apd	|char*	|hv_iterkey	|HE* entry|I32* retlen
Apd	|SV*	|hv_iterkeysv	|HE* entry
Apd	|HE*	|hv_iternext	|HV* tb
Apd	|SV*	|hv_iternextsv	|HV* hv|char** key|I32* retlen
ApMd	|HE*	|hv_iternext_flags|HV* tb|I32 flags
Apd	|SV*	|hv_iterval	|HV* tb|HE* entry
Ap	|void	|hv_ksplit	|HV* hv|IV newmax
Apd	|void	|hv_magic	|HV* hv|GV* gv|int how
Apd	|SV**	|hv_store	|HV* tb|const char* key|I32 klen|SV* val \
				|U32 hash
Apd	|HE*	|hv_store_ent	|HV* tb|SV* key|SV* val|U32 hash
ApM	|SV**	|hv_store_flags	|HV* tb|const char* key|I32 klen|SV* val \
				|U32 hash|int flags
Apd	|void	|hv_undef	|HV* tb
Ap	|I32	|ibcmp		|const char* a|const char* b|I32 len
Ap	|I32	|ibcmp_locale	|const char* a|const char* b|I32 len
Apd	|I32	|ibcmp_utf8	|const char* a|char **pe1|UV l1|bool u1|const char* b|char **pe2|UV l2|bool u2
p	|bool	|ingroup	|Gid_t testgid|Uid_t effective
p	|void	|init_argv_symbols|int|char **
p	|void	|init_debugger
Ap	|void	|init_stacks
Ap	|void	|init_tm	|struct tm *ptm
pd	|U32	|intro_my
Ap	|char*	|instr		|const char* big|const char* little
p	|bool	|io_close	|IO* io|bool not_implicit
p	|OP*	|invert		|OP* cmd
dp	|bool	|is_gv_magical	|char *name|STRLEN len|U32 flags
Ap	|I32	|is_lvalue_sub
Ap	|U32	|to_uni_upper_lc|U32 c
Ap	|U32	|to_uni_title_lc|U32 c
Ap	|U32	|to_uni_lower_lc|U32 c
Ap	|bool	|is_uni_alnum	|UV c
Ap	|bool	|is_uni_alnumc	|UV c
Ap	|bool	|is_uni_idfirst	|UV c
Ap	|bool	|is_uni_alpha	|UV c
Ap	|bool	|is_uni_ascii	|UV c
Ap	|bool	|is_uni_space	|UV c
Ap	|bool	|is_uni_cntrl	|UV c
Ap	|bool	|is_uni_graph	|UV c
Ap	|bool	|is_uni_digit	|UV c
Ap	|bool	|is_uni_upper	|UV c
Ap	|bool	|is_uni_lower	|UV c
Ap	|bool	|is_uni_print	|UV c
Ap	|bool	|is_uni_punct	|UV c
Ap	|bool	|is_uni_xdigit	|UV c
Ap	|UV	|to_uni_upper	|UV c|U8 *p|STRLEN *lenp
Ap	|UV	|to_uni_title	|UV c|U8 *p|STRLEN *lenp
Ap	|UV	|to_uni_lower	|UV c|U8 *p|STRLEN *lenp
Ap	|UV	|to_uni_fold	|UV c|U8 *p|STRLEN *lenp
Ap	|bool	|is_uni_alnum_lc|UV c
Ap	|bool	|is_uni_alnumc_lc|UV c
Ap	|bool	|is_uni_idfirst_lc|UV c
Ap	|bool	|is_uni_alpha_lc|UV c
Ap	|bool	|is_uni_ascii_lc|UV c
Ap	|bool	|is_uni_space_lc|UV c
Ap	|bool	|is_uni_cntrl_lc|UV c
Ap	|bool	|is_uni_graph_lc|UV c
Ap	|bool	|is_uni_digit_lc|UV c
Ap	|bool	|is_uni_upper_lc|UV c
Ap	|bool	|is_uni_lower_lc|UV c
Ap	|bool	|is_uni_print_lc|UV c
Ap	|bool	|is_uni_punct_lc|UV c
Ap	|bool	|is_uni_xdigit_lc|UV c
Apd	|STRLEN	|is_utf8_char	|U8 *p
Apd	|bool	|is_utf8_string	|U8 *s|STRLEN len
Apd	|bool	|is_utf8_string_loc|U8 *s|STRLEN len|U8 **p
Ap	|bool	|is_utf8_alnum	|U8 *p
Ap	|bool	|is_utf8_alnumc	|U8 *p
Ap	|bool	|is_utf8_idfirst|U8 *p
Ap	|bool	|is_utf8_idcont	|U8 *p
Ap	|bool	|is_utf8_alpha	|U8 *p
Ap	|bool	|is_utf8_ascii	|U8 *p
Ap	|bool	|is_utf8_space	|U8 *p
Ap	|bool	|is_utf8_cntrl	|U8 *p
Ap	|bool	|is_utf8_digit	|U8 *p
Ap	|bool	|is_utf8_graph	|U8 *p
Ap	|bool	|is_utf8_upper	|U8 *p
Ap	|bool	|is_utf8_lower	|U8 *p
Ap	|bool	|is_utf8_print	|U8 *p
Ap	|bool	|is_utf8_punct	|U8 *p
Ap	|bool	|is_utf8_xdigit	|U8 *p
Ap	|bool	|is_utf8_mark	|U8 *p
p	|OP*	|jmaybe		|OP* arg
p	|I32	|keyword	|char* d|I32 len
Ap	|void	|leave_scope	|I32 base
p	|void	|lex_end
p	|void	|lex_start	|SV* line
Ap |void   |op_null    |OP* o
p	|void	|op_clear	|OP* o
p	|OP*	|linklist	|OP* o
p	|OP*	|list		|OP* o
p	|OP*	|listkids	|OP* o
Apd	|void	|load_module|U32 flags|SV* name|SV* ver|...
Ap	|void	|vload_module|U32 flags|SV* name|SV* ver|va_list* args
p	|OP*	|localize	|OP* arg|I32 lexical
Apd	|I32	|looks_like_number|SV* sv
Apd	|UV	|grok_bin	|char* start|STRLEN* len|I32* flags|NV *result
Apd	|UV	|grok_hex	|char* start|STRLEN* len|I32* flags|NV *result
Apd	|int	|grok_number	|const char *pv|STRLEN len|UV *valuep
Apd	|bool	|grok_numeric_radix|const char **sp|const char *send
Apd	|UV	|grok_oct	|char* start|STRLEN* len|I32* flags|NV *result
p	|int	|magic_clearenv	|SV* sv|MAGIC* mg
p	|int	|magic_clear_all_env|SV* sv|MAGIC* mg
p	|int	|magic_clearpack|SV* sv|MAGIC* mg
p	|int	|magic_clearsig	|SV* sv|MAGIC* mg
p	|int	|magic_existspack|SV* sv|MAGIC* mg
p	|int	|magic_freeregexp|SV* sv|MAGIC* mg
p	|int	|magic_freeovrld|SV* sv|MAGIC* mg
p	|int	|magic_get	|SV* sv|MAGIC* mg
p	|int	|magic_getarylen|SV* sv|MAGIC* mg
p	|int	|magic_getdefelem|SV* sv|MAGIC* mg
p	|int	|magic_getglob	|SV* sv|MAGIC* mg
p	|int	|magic_getnkeys	|SV* sv|MAGIC* mg
p	|int	|magic_getpack	|SV* sv|MAGIC* mg
p	|int	|magic_getpos	|SV* sv|MAGIC* mg
p	|int	|magic_getsig	|SV* sv|MAGIC* mg
p	|int	|magic_getsubstr|SV* sv|MAGIC* mg
p	|int	|magic_gettaint	|SV* sv|MAGIC* mg
p	|int	|magic_getuvar	|SV* sv|MAGIC* mg
p	|int	|magic_getvec	|SV* sv|MAGIC* mg
p	|U32	|magic_len	|SV* sv|MAGIC* mg
p	|int	|magic_nextpack	|SV* sv|MAGIC* mg|SV* key
p	|U32	|magic_regdata_cnt|SV* sv|MAGIC* mg
p	|int	|magic_regdatum_get|SV* sv|MAGIC* mg
p	|int	|magic_regdatum_set|SV* sv|MAGIC* mg
p	|int	|magic_set	|SV* sv|MAGIC* mg
p	|int	|magic_setamagic|SV* sv|MAGIC* mg
p	|int	|magic_setarylen|SV* sv|MAGIC* mg
p	|int	|magic_setbm	|SV* sv|MAGIC* mg
p	|int	|magic_setdbline|SV* sv|MAGIC* mg
#if defined(USE_LOCALE_COLLATE)
p	|int	|magic_setcollxfrm|SV* sv|MAGIC* mg
#endif
p	|int	|magic_setdefelem|SV* sv|MAGIC* mg
p	|int	|magic_setenv	|SV* sv|MAGIC* mg
p	|int	|magic_setfm	|SV* sv|MAGIC* mg
p	|int	|magic_setisa	|SV* sv|MAGIC* mg
p	|int	|magic_setglob	|SV* sv|MAGIC* mg
p	|int	|magic_setmglob	|SV* sv|MAGIC* mg
p	|int	|magic_setnkeys	|SV* sv|MAGIC* mg
p	|int	|magic_setpack	|SV* sv|MAGIC* mg
p	|int	|magic_setpos	|SV* sv|MAGIC* mg
p	|int	|magic_setregexp|SV* sv|MAGIC* mg
p	|int	|magic_setsig	|SV* sv|MAGIC* mg
p	|int	|magic_setsubstr|SV* sv|MAGIC* mg
p	|int	|magic_settaint	|SV* sv|MAGIC* mg
p	|int	|magic_setuvar	|SV* sv|MAGIC* mg
p	|int	|magic_setvec	|SV* sv|MAGIC* mg
p	|int	|magic_setutf8	|SV* sv|MAGIC* mg
p	|int	|magic_set_all_env|SV* sv|MAGIC* mg
p	|U32	|magic_sizepack	|SV* sv|MAGIC* mg
p	|int	|magic_wipepack	|SV* sv|MAGIC* mg
p	|void	|magicname	|char* sym|char* name|I32 namlen
Ap	|void	|markstack_grow
#if defined(USE_LOCALE_COLLATE)
p	|char*	|mem_collxfrm	|const char* s|STRLEN len|STRLEN* xlen
#endif
Afp	|SV*	|mess		|const char* pat|...
Ap	|SV*	|vmess		|const char* pat|va_list* args
p	|void	|qerror		|SV* err
Apd     |void   |sortsv         |SV ** array|size_t num_elts|SVCOMPARE_t cmp
Apd	|int	|mg_clear	|SV* sv
Apd	|int	|mg_copy	|SV* sv|SV* nsv|const char* key|I32 klen
Apd	|MAGIC*	|mg_find	|SV* sv|int type
Apd	|int	|mg_free	|SV* sv
Apd	|int	|mg_get		|SV* sv
Apd	|U32	|mg_length	|SV* sv
Apd	|void	|mg_magical	|SV* sv
Apd	|int	|mg_set		|SV* sv
Ap	|I32	|mg_size	|SV* sv
Ap	|void	|mini_mktime	|struct tm *pm
p	|OP*	|mod		|OP* o|I32 type
p	|int	|mode_from_discipline|SV* discp
Ap	|char*	|moreswitches	|char* s
p	|OP*	|my		|OP* o
Ap	|NV	|my_atof	|const char *s
#if (!defined(HAS_MEMCPY) && !defined(HAS_BCOPY)) || (!defined(HAS_MEMMOVE) && !defined(HAS_SAFE_MEMCPY) && !defined(HAS_SAFE_BCOPY))
Anp	|char*	|my_bcopy	|const char* from|char* to|I32 len
#endif
#if !defined(HAS_BZERO) && !defined(HAS_MEMSET)
Anp	|char*	|my_bzero	|char* loc|I32 len
#endif
Apr	|void	|my_exit	|U32 status
Apr	|void	|my_failure_exit
Ap	|I32	|my_fflush_all
Anp	|Pid_t	|my_fork
Anp	|void	|atfork_lock
Anp	|void	|atfork_unlock
Ap	|I32	|my_lstat
#if !defined(HAS_MEMCMP) || !defined(HAS_SANE_MEMCMP)
Anp	|I32	|my_memcmp	|const char* s1|const char* s2|I32 len
#endif
#if !defined(HAS_MEMSET)
Anp	|void*	|my_memset	|char* loc|I32 ch|I32 len
#endif
Ap	|I32	|my_pclose	|PerlIO* ptr
Ap	|PerlIO*|my_popen	|char* cmd|char* mode
Ap	|PerlIO*|my_popen_list	|char* mode|int n|SV ** args
Ap	|void	|my_setenv	|char* nam|char* val
Ap	|I32	|my_stat
Ap	|char *	|my_strftime	|char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
#if defined(MYSWAP)
Ap	|short	|my_swap	|short s
Ap	|long	|my_htonl	|long l
Ap	|long	|my_ntohl	|long l
#endif
p	|void	|my_unexec
Ap	|OP*	|newANONLIST	|OP* o
Ap	|OP*	|newANONHASH	|OP* o
Ap	|OP*	|newANONSUB	|I32 floor|OP* proto|OP* block
Ap	|OP*	|newASSIGNOP	|I32 flags|OP* left|I32 optype|OP* right
Ap	|OP*	|newCONDOP	|I32 flags|OP* expr|OP* trueop|OP* falseop
Apd	|CV*	|newCONSTSUB	|HV* stash|char* name|SV* sv
Ap	|void	|newFORM	|I32 floor|OP* o|OP* block
Ap	|OP*	|newFOROP	|I32 flags|char* label|line_t forline \
				|OP* sclr|OP* expr|OP*block|OP*cont
Ap	|OP*	|newLOGOP	|I32 optype|I32 flags|OP* left|OP* right
Ap	|OP*	|newLOOPEX	|I32 type|OP* label
Ap	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|OP* expr|OP* block
Ap	|OP*	|newNULLLIST
Ap	|OP*	|newOP		|I32 optype|I32 flags
Ap	|void	|newPROG	|OP* o
Ap	|OP*	|newRANGE	|I32 flags|OP* left|OP* right
Ap	|OP*	|newSLICEOP	|I32 flags|OP* subscript|OP* listop
Ap	|OP*	|newSTATEOP	|I32 flags|char* label|OP* o
Ap	|CV*	|newSUB		|I32 floor|OP* o|OP* proto|OP* block
Apd	|CV*	|newXS		|char* name|XSUBADDR_t f|char* filename
Apd	|AV*	|newAV
Ap	|OP*	|newAVREF	|OP* o
Ap	|OP*	|newBINOP	|I32 type|I32 flags|OP* first|OP* last
Ap	|OP*	|newCVREF	|I32 flags|OP* o
Ap	|OP*	|newGVOP	|I32 type|I32 flags|GV* gv
Ap	|GV*	|newGVgen	|char* pack
Ap	|OP*	|newGVREF	|I32 type|OP* o
Ap	|OP*	|newHVREF	|OP* o
Apd	|HV*	|newHV
Ap	|HV*	|newHVhv	|HV* hv
Ap	|IO*	|newIO
Ap	|OP*	|newLISTOP	|I32 type|I32 flags|OP* first|OP* last
Ap	|OP*	|newPADOP	|I32 type|I32 flags|SV* sv
Ap	|OP*	|newPMOP	|I32 type|I32 flags
Ap	|OP*	|newPVOP	|I32 type|I32 flags|char* pv
Ap	|SV*	|newRV		|SV* pref
Apd	|SV*	|newRV_noinc	|SV *sv
Apd	|SV*	|newSV		|STRLEN len
Ap	|OP*	|newSVREF	|OP* o
Ap	|OP*	|newSVOP	|I32 type|I32 flags|SV* sv
Apd	|SV*	|newSViv	|IV i
Apd	|SV*	|newSVuv	|UV u
Apd	|SV*	|newSVnv	|NV n
Apd	|SV*	|newSVpv	|const char* s|STRLEN len
Apd	|SV*	|newSVpvn	|const char* s|STRLEN len
Apd	|SV*	|newSVpvn_share	|const char* s|I32 len|U32 hash
Afpd	|SV*	|newSVpvf	|const char* pat|...
Ap	|SV*	|vnewSVpvf	|const char* pat|va_list* args
Apd	|SV*	|newSVrv	|SV* rv|const char* classname
Apd	|SV*	|newSVsv	|SV* old
Ap	|OP*	|newUNOP	|I32 type|I32 flags|OP* first
Ap	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|LOOP* loop \
				|I32 whileline|OP* expr|OP* block|OP* cont

Ap	|PERL_SI*|new_stackinfo|I32 stitems|I32 cxitems
Ap	|char*	|scan_vstring	|char *vstr|SV *sv
Apd	|char*	|scan_version	|char *vstr|SV *sv|bool qv
Apd	|SV*	|new_version	|SV *ver
Apd	|SV*	|upg_version	|SV *ver
Apd	|SV*	|vnumify	|SV *vs
Apd	|SV*	|vnormal	|SV *vs
Apd	|SV*	|vstringify	|SV *vs
Apd	|int	|vcmp		|SV *lvs|SV *rvs
p	|PerlIO*|nextargv	|GV* gv
Ap	|char*	|ninstr		|const char* big|const char* bigend \
				|const char* little|const char* lend
p	|OP*	|oopsCV		|OP* o
Ap	|void	|op_free	|OP* arg
p	|void	|package	|OP* o
pd	|PADOFFSET|pad_alloc	|I32 optype|U32 tmptype
p	|PADOFFSET|allocmy	|char* name
pd	|PADOFFSET|pad_findmy	|char* name
Ap	|PADOFFSET|find_rundefsvoffset	|
p	|OP*	|oopsAV		|OP* o
p	|OP*	|oopsHV		|OP* o
pd	|void	|pad_leavemy
Apd	|SV*	|pad_sv		|PADOFFSET po
pd	|void	|pad_free	|PADOFFSET po
pd	|void	|pad_reset
pd	|void	|pad_swipe	|PADOFFSET po|bool refadjust
p	|void	|peep		|OP* o
dopM	|PerlIO*|start_glob	|SV* pattern|IO *io
#if defined(USE_REENTRANT_API)
Ap	|void	|reentrant_size
Ap	|void	|reentrant_init
Ap	|void	|reentrant_free
Anp	|void*	|reentrant_retry|const char*|...
#endif
Ap	|void	|call_atexit	|ATEXIT_t fn|void *ptr
Apd	|I32	|call_argv	|const char* sub_name|I32 flags|char** argv
Apd	|I32	|call_method	|const char* methname|I32 flags
Apd	|I32	|call_pv	|const char* sub_name|I32 flags
Apd	|I32	|call_sv	|SV* sv|I32 flags
Ap	|void	|despatch_signals
Apd	|SV*	|eval_pv	|const char* p|I32 croak_on_error
Apd	|I32	|eval_sv	|SV* sv|I32 flags
Apd	|SV*	|get_sv		|const char* name|I32 create
Apd	|AV*	|get_av		|const char* name|I32 create
Apd	|HV*	|get_hv		|const char* name|I32 create
Apd	|CV*	|get_cv		|const char* name|I32 create
Ap	|int	|init_i18nl10n	|int printwarn
Ap	|int	|init_i18nl14n	|int printwarn
Ap	|void	|new_collate	|char* newcoll
Ap	|void	|new_ctype	|char* newctype
Ap	|void	|new_numeric	|char* newcoll
Ap	|void	|set_numeric_local
Ap	|void	|set_numeric_radix
Ap	|void	|set_numeric_standard
Apd	|void	|require_pv	|const char* pv
Apd	|void	|pack_cat	|SV *cat|char *pat|char *patend|SV **beglist|SV **endlist|SV ***next_in_list|U32 flags
Apd	|void	|packlist 	|SV *cat|char *pat|char *patend|SV **beglist|SV **endlist
p	|void	|pidgone	|Pid_t pid|int status
Ap	|void	|pmflag		|U32* pmfl|int ch
p	|OP*	|pmruntime	|OP* pm|OP* expr|OP* repl
p	|OP*	|pmtrans	|OP* o|OP* expr|OP* repl
Ap	|void	|pop_scope
p	|OP*	|prepend_elem	|I32 optype|OP* head|OP* tail
Ap	|void	|push_scope
p	|OP*	|ref		|OP* o|I32 type
p	|OP*	|refkids	|OP* o|I32 type
Ap	|void	|regdump	|regexp* r
Ap	|SV*	|regclass_swash	|struct regnode *n|bool doinit|SV **listsvp|SV **altsvp
Ap	|I32	|pregexec	|regexp* prog|char* stringarg \
				|char* strend|char* strbeg|I32 minend \
				|SV* screamer|U32 nosave
Ap	|void	|pregfree	|struct regexp* r
Ap	|regexp*|pregcomp	|char* exp|char* xend|PMOP* pm
Ap	|char*	|re_intuit_start|regexp* prog|SV* sv|char* strpos \
				|char* strend|U32 flags \
				|struct re_scream_pos_data_s *data
Ap	|SV*	|re_intuit_string|regexp* prog
Ap	|I32	|regexec_flags	|regexp* prog|char* stringarg \
				|char* strend|char* strbeg|I32 minend \
				|SV* screamer|void* data|U32 flags
Ap	|regnode*|regnext	|regnode* p
Ep	|void	|regprop	|SV* sv|regnode* o
Ap	|void	|repeatcpy	|char* to|const char* from|I32 len|I32 count
Ap	|char*	|rninstr	|const char* big|const char* bigend \
				|const char* little|const char* lend
Ap	|Sighandler_t|rsignal	|int i|Sighandler_t t
p	|int	|rsignal_restore|int i|Sigsave_t* t
p	|int	|rsignal_save	|int i|Sighandler_t t1|Sigsave_t* t2
Ap	|Sighandler_t|rsignal_state|int i
p	|void	|rxres_free	|void** rsp
p	|void	|rxres_restore	|void** rsp|REGEXP* prx
p	|void	|rxres_save	|void** rsp|REGEXP* prx
#if !defined(HAS_RENAME)
p	|I32	|same_dirent	|char* a|char* b
#endif
Apd	|char*	|savepv		|const char* pv
Apd	|char*	|savesharedpv	|const char* pv
Apd	|char*	|savepvn	|const char* pv|I32 len
Ap	|void	|savestack_grow
Ap	|void	|savestack_grow_cnt	|I32 need
Ap	|void	|save_aelem	|AV* av|I32 idx|SV **sptr
Ap	|I32	|save_alloc	|I32 size|I32 pad
Ap	|void	|save_aptr	|AV** aptr
Ap	|AV*	|save_ary	|GV* gv
Ap	|void	|save_bool	|bool* boolp
Ap	|void	|save_clearsv	|SV** svp
Ap	|void	|save_delete	|HV* hv|char* key|I32 klen
Ap	|void	|save_destructor|DESTRUCTORFUNC_NOCONTEXT_t f|void* p
Ap	|void	|save_destructor_x|DESTRUCTORFUNC_t f|void* p
Ap	|void	|save_freesv	|SV* sv
p	|void	|save_freeop	|OP* o
Ap	|void	|save_freepv	|char* pv
Ap	|void	|save_generic_svref|SV** sptr
Ap	|void	|save_generic_pvref|char** str
Ap	|void	|save_shared_pvref|char** str
Ap	|void	|save_gp	|GV* gv|I32 empty
Ap	|HV*	|save_hash	|GV* gv
Ap	|void	|save_helem	|HV* hv|SV *key|SV **sptr
Ap	|void	|save_hints
Ap	|void	|save_hptr	|HV** hptr
Ap	|void	|save_I16	|I16* intp
Ap	|void	|save_I32	|I32* intp
Ap	|void	|save_I8	|I8* bytep
Ap	|void	|save_int	|int* intp
Ap	|void	|save_item	|SV* item
Ap	|void	|save_iv	|IV* iv
Ap	|void	|save_list	|SV** sarg|I32 maxsarg
Ap	|void	|save_long	|long* longp
Ap	|void	|save_mortalizesv|SV* sv
Ap	|void	|save_nogv	|GV* gv
p	|void	|save_op
Ap	|SV*	|save_scalar	|GV* gv
Ap	|void	|save_pptr	|char** pptr
Ap	|void	|save_vptr	|void* pptr
Ap	|void	|save_re_context
Ap	|void	|save_padsv	|PADOFFSET off
Ap	|void	|save_sptr	|SV** sptr
Ap	|SV*	|save_svref	|SV** sptr
Ap	|SV**	|save_threadsv	|PADOFFSET i
p	|OP*	|sawparens	|OP* o
p	|OP*	|scalar		|OP* o
p	|OP*	|scalarkids	|OP* o
p	|OP*	|scalarseq	|OP* o
p	|OP*	|scalarvoid	|OP* o
Apd	|NV	|scan_bin	|char* start|STRLEN len|STRLEN* retlen
Apd	|NV	|scan_hex	|char* start|STRLEN len|STRLEN* retlen
Ap	|char*	|scan_num	|char* s|YYSTYPE *lvalp
Apd	|NV	|scan_oct	|char* start|STRLEN len|STRLEN* retlen
p	|OP*	|scope		|OP* o
Ap	|char*	|screaminstr	|SV* bigsv|SV* littlesv|I32 start_shift \
				|I32 end_shift|I32 *state|I32 last
#if !defined(VMS)
p	|I32	|setenv_getix	|char* nam
#endif
p	|void	|setdefout	|GV* gv
p	|HEK*	|share_hek	|const char* sv|I32 len|U32 hash
np	|Signal_t |sighandler	|int sig
Anp	|Signal_t |csighandler	|int sig
Ap	|SV**	|stack_grow	|SV** sp|SV**p|int n
Ap	|I32	|start_subparse	|I32 is_format|U32 flags
p	|void	|sub_crush_depth|CV* cv
Apd	|bool	|sv_2bool	|SV* sv
Apd	|CV*	|sv_2cv		|SV* sv|HV** st|GV** gvp|I32 lref
Apd	|IO*	|sv_2io		|SV* sv
Amb	|IV	|sv_2iv		|SV* sv
Apd	|IV	|sv_2iv_flags	|SV* sv|I32 flags
Apd	|SV*	|sv_2mortal	|SV* sv
Apd	|NV	|sv_2nv		|SV* sv
Amb	|char*	|sv_2pv		|SV* sv|STRLEN* lp
Apd	|char*	|sv_2pvutf8	|SV* sv|STRLEN* lp
Apd	|char*	|sv_2pvbyte	|SV* sv|STRLEN* lp
Ap	|char*	|sv_pvn_nomg	|SV* sv|STRLEN* lp
Amb	|UV	|sv_2uv		|SV* sv
Apd	|UV	|sv_2uv_flags	|SV* sv|I32 flags
Apd	|IV	|sv_iv		|SV* sv
Apd	|UV	|sv_uv		|SV* sv
Apd	|NV	|sv_nv		|SV* sv
Apd	|char*	|sv_pvn		|SV *sv|STRLEN *len
Apd	|char*	|sv_pvutf8n	|SV *sv|STRLEN *len
Apd	|char*	|sv_pvbyten	|SV *sv|STRLEN *len
Apd	|I32	|sv_true	|SV *sv
pd	|void	|sv_add_arena	|char* ptr|U32 size|U32 flags
Apd	|int	|sv_backoff	|SV* sv
Apd	|SV*	|sv_bless	|SV* sv|HV* stash
Afpd	|void	|sv_catpvf	|SV* sv|const char* pat|...
Ap	|void	|sv_vcatpvf	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_catpv	|SV* sv|const char* ptr
Amdb	|void	|sv_catpvn	|SV* sv|const char* ptr|STRLEN len
Amdb	|void	|sv_catsv	|SV* dsv|SV* ssv
Apd	|void	|sv_chop	|SV* sv|char* ptr
pd	|I32	|sv_clean_all
pd	|void	|sv_clean_objs
Apd	|void	|sv_clear	|SV* sv
Apd	|I32	|sv_cmp		|SV* sv1|SV* sv2
Apd	|I32	|sv_cmp_locale	|SV* sv1|SV* sv2
#if defined(USE_LOCALE_COLLATE)
Apd	|char*	|sv_collxfrm	|SV* sv|STRLEN* nxp
#endif
Ap	|OP*	|sv_compile_2op	|SV* sv|OP** startp|char* code|PAD** padp
Apd	|int	|getcwd_sv	|SV* sv
Apd	|void	|sv_dec		|SV* sv
Ap	|void	|sv_dump	|SV* sv
Apd	|bool	|sv_derived_from|SV* sv|const char* name
Apd	|I32	|sv_eq		|SV* sv1|SV* sv2
Apd	|void	|sv_free	|SV* sv
poMX	|void	|sv_free2	|SV* sv
pd	|void	|sv_free_arenas
Apd	|char*	|sv_gets	|SV* sv|PerlIO* fp|I32 append
Apd	|char*	|sv_grow	|SV* sv|STRLEN newlen
Apd	|void	|sv_inc		|SV* sv
Apd	|void	|sv_insert	|SV* bigsv|STRLEN offset|STRLEN len \
				|char* little|STRLEN littlelen
Apd	|int	|sv_isa		|SV* sv|const char* name
Apd	|int	|sv_isobject	|SV* sv
Apd	|STRLEN	|sv_len		|SV* sv
Apd	|STRLEN	|sv_len_utf8	|SV* sv
Apd	|void	|sv_magic	|SV* sv|SV* obj|int how|const char* name \
				|I32 namlen
Apd	|MAGIC *|sv_magicext	|SV* sv|SV* obj|int how|MGVTBL *vtbl \
				| const char* name|I32 namlen	
Apd	|SV*	|sv_mortalcopy	|SV* oldsv
Apd	|SV*	|sv_newmortal
Apd	|SV*	|sv_newref	|SV* sv
Ap	|char*	|sv_peek	|SV* sv
Apd	|void	|sv_pos_u2b	|SV* sv|I32* offsetp|I32* lenp
Apd	|void	|sv_pos_b2u	|SV* sv|I32* offsetp
Amdb	|char*	|sv_pvn_force	|SV* sv|STRLEN* lp
Apd	|char*	|sv_pvutf8n_force|SV* sv|STRLEN* lp
Apd	|char*	|sv_pvbyten_force|SV* sv|STRLEN* lp
Apd	|char*	|sv_recode_to_utf8	|SV* sv|SV *encoding
Apd	|bool	|sv_cat_decode	|SV* dsv|SV *encoding|SV *ssv|int *offset \
				|char* tstr|int tlen
Apd	|char*	|sv_reftype	|SV* sv|int ob
Apd	|void	|sv_replace	|SV* sv|SV* nsv
Apd	|void	|sv_report_used
Apd	|void	|sv_reset	|char* s|HV* stash
Afpd	|void	|sv_setpvf	|SV* sv|const char* pat|...
Ap	|void	|sv_vsetpvf	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_setiv	|SV* sv|IV num
Apdb	|void	|sv_setpviv	|SV* sv|IV num
Apd	|void	|sv_setuv	|SV* sv|UV num
Apd	|void	|sv_setnv	|SV* sv|NV num
Apd	|SV*	|sv_setref_iv	|SV* rv|const char* classname|IV iv
Apd	|SV*	|sv_setref_uv	|SV* rv|const char* classname|UV uv
Apd	|SV*	|sv_setref_nv	|SV* rv|const char* classname|NV nv
Apd	|SV*	|sv_setref_pv	|SV* rv|const char* classname|void* pv
Apd	|SV*	|sv_setref_pvn	|SV* rv|const char* classname|char* pv \
				|STRLEN n
Apd	|void	|sv_setpv	|SV* sv|const char* ptr
Apd	|void	|sv_setpvn	|SV* sv|const char* ptr|STRLEN len
Amdb	|void	|sv_setsv	|SV* dsv|SV* ssv
Apd	|void	|sv_taint	|SV* sv
Apd	|bool	|sv_tainted	|SV* sv
Apd	|int	|sv_unmagic	|SV* sv|int type
Apd	|void	|sv_unref	|SV* sv
Apd	|void	|sv_unref_flags	|SV* sv|U32 flags
Apd	|void	|sv_untaint	|SV* sv
Apd	|bool	|sv_upgrade	|SV* sv|U32 mt
Apd	|void	|sv_usepvn	|SV* sv|char* ptr|STRLEN len
Apd	|void	|sv_vcatpvfn	|SV* sv|const char* pat|STRLEN patlen \
				|va_list* args|SV** svargs|I32 svmax \
				|bool *maybe_tainted
Apd	|void	|sv_vsetpvfn	|SV* sv|const char* pat|STRLEN patlen \
				|va_list* args|SV** svargs|I32 svmax \
				|bool *maybe_tainted
Ap	|NV	|str_to_version	|SV *sv
Ap	|SV*	|swash_init	|char* pkg|char* name|SV* listsv \
				|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|SV *sv|U8 *ptr|bool do_utf8
Ap	|void	|taint_env
Ap	|void	|taint_proper	|const char* f|const char* s
Apd	|UV	|to_utf8_case	|U8 *p|U8* ustrp|STRLEN *lenp \
				|SV **swash|char *normal|char *special
Apd	|UV	|to_utf8_lower	|U8 *p|U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_upper	|U8 *p|U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_title	|U8 *p|U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_fold	|U8 *p|U8* ustrp|STRLEN *lenp
#if defined(UNLINK_ALL_VERSIONS)
Ap	|I32	|unlnk		|char* f
#endif
Apd	|I32	|unpack_str	|char *pat|char *patend|char *s|char *strbeg|char *strend|char **new_s|I32 ocnt|U32 flags
Apd	|I32	|unpackstring	|char *pat|char *patend|char *s|char *strend|U32 flags
Ap	|void	|unsharepvn	|const char* sv|I32 len|U32 hash
p	|void	|unshare_hek	|HEK* hek
p	|void	|utilize	|int aver|I32 floor|OP* version|OP* idop|OP* arg
Ap	|U8*	|utf16_to_utf8	|U8* p|U8 *d|I32 bytelen|I32 *newlen
Ap	|U8*	|utf16_to_utf8_reversed|U8* p|U8 *d|I32 bytelen|I32 *newlen
Adp	|STRLEN	|utf8_length	|U8* s|U8 *e
Apd	|IV	|utf8_distance	|U8 *a|U8 *b
Apd	|U8*	|utf8_hop	|U8 *s|I32 off
ApMd	|U8*	|utf8_to_bytes	|U8 *s|STRLEN *len
ApMd	|U8*	|bytes_from_utf8|U8 *s|STRLEN *len|bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|U8 *s|STRLEN *len
Apd	|UV	|utf8_to_uvchr	|U8 *s|STRLEN* retlen
Apd	|UV	|utf8_to_uvuni	|U8 *s|STRLEN* retlen
Adp	|UV	|utf8n_to_uvchr	|U8 *s|STRLEN curlen|STRLEN* retlen|U32 flags
Adp	|UV	|utf8n_to_uvuni	|U8 *s|STRLEN curlen|STRLEN* retlen|U32 flags
Apd	|U8*	|uvchr_to_utf8	|U8 *d|UV uv
Ap	|U8*	|uvuni_to_utf8	|U8 *d|UV uv
Ap	|U8*	|uvchr_to_utf8_flags	|U8 *d|UV uv|UV flags
Apd	|U8*	|uvuni_to_utf8_flags	|U8 *d|UV uv|UV flags
Apd	|char*	|pv_uni_display	|SV *dsv|U8 *spv|STRLEN len \
				|STRLEN pvlim|UV flags
Apd	|char*	|sv_uni_display	|SV *dsv|SV *ssv|STRLEN pvlim|UV flags
p	|void	|vivify_defelem	|SV* sv
p	|void	|vivify_ref	|SV* sv|U32 to_what
p	|I32	|wait4pid	|Pid_t pid|int* statusp|int flags
p	|U32	|parse_unicode_opts|char **popt
p	|U32	|seed
p	|UV	|get_hash_seed
p	|void	|report_evil_fh	|GV *gv|IO *io|I32 op
pd	|void	|report_uninit	|SV* uninit_sv
Afpd	|void	|warn		|const char* pat|...
Ap	|void	|vwarn		|const char* pat|va_list* args
Afp	|void	|warner		|U32 err|const char* pat|...
Ap	|void	|vwarner	|U32 err|const char* pat|va_list* args
p	|void	|watch		|char** addr
Ap	|I32	|whichsig	|char* sig
p	|void	|write_to_stderr|const char* message|int msglen
p	|int	|yyerror	|char* s
p	|int	|yylex
p	|int	|yyparse
p	|int	|yywarn		|char* s
#if defined(MYMALLOC)
Ap	|void	|dump_mstats	|char* s
Ap	|int	|get_mstats	|perl_mstats_t *buf|int buflen|int level
#endif
Anp	|Malloc_t|safesysmalloc	|MEM_SIZE nbytes
Anp	|Malloc_t|safesyscalloc	|MEM_SIZE elements|MEM_SIZE size
Anp	|Malloc_t|safesysrealloc|Malloc_t where|MEM_SIZE nbytes
Anp	|Free_t	|safesysfree	|Malloc_t where
#if defined(PERL_GLOBAL_STRUCT)
Ap	|struct perl_vars *|GetVars
#endif
Ap	|int	|runops_standard
Ap	|int	|runops_debug
Afpd	|void	|sv_catpvf_mg	|SV *sv|const char* pat|...
Ap	|void	|sv_vcatpvf_mg	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_catpv_mg	|SV *sv|const char *ptr
Apd	|void	|sv_catpvn_mg	|SV *sv|const char *ptr|STRLEN len
Apd	|void	|sv_catsv_mg	|SV *dstr|SV *sstr
Afpd	|void	|sv_setpvf_mg	|SV *sv|const char* pat|...
Ap	|void	|sv_vsetpvf_mg	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_setiv_mg	|SV *sv|IV i
Apdb	|void	|sv_setpviv_mg	|SV *sv|IV iv
Apd	|void	|sv_setuv_mg	|SV *sv|UV u
Apd	|void	|sv_setnv_mg	|SV *sv|NV num
Apd	|void	|sv_setpv_mg	|SV *sv|const char *ptr
Apd	|void	|sv_setpvn_mg	|SV *sv|const char *ptr|STRLEN len
Apd	|void	|sv_setsv_mg	|SV *dstr|SV *sstr
Apd	|void	|sv_usepvn_mg	|SV *sv|char *ptr|STRLEN len
Ap	|MGVTBL*|get_vtbl	|int vtbl_id
Ap	|char*	|pv_display	|SV *dsv|char *pv|STRLEN cur|STRLEN len \
				|STRLEN pvlim
Afp	|void	|dump_indent	|I32 level|PerlIO *file|const char* pat|...
Ap	|void	|dump_vindent	|I32 level|PerlIO *file|const char* pat \
				|va_list *args
Ap	|void	|do_gv_dump	|I32 level|PerlIO *file|char *name|GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|PerlIO *file|char *name|GV *sv
Ap	|void	|do_hv_dump	|I32 level|PerlIO *file|char *name|HV *sv
Ap	|void	|do_magic_dump	|I32 level|PerlIO *file|MAGIC *mg|I32 nest \
				|I32 maxnest|bool dumpops|STRLEN pvlim
Ap	|void	|do_op_dump	|I32 level|PerlIO *file|OP *o
Ap	|void	|do_pmop_dump	|I32 level|PerlIO *file|PMOP *pm
Ap	|void	|do_sv_dump	|I32 level|PerlIO *file|SV *sv|I32 nest \
				|I32 maxnest|bool dumpops|STRLEN pvlim
Ap	|void	|magic_dump	|MAGIC *mg
#if defined(PERL_FLEXIBLE_EXCEPTIONS)
Ap	|void*	|default_protect|volatile JMPENV *je|int *excpt \
				|protect_body_t body|...
Ap	|void*	|vdefault_protect|volatile JMPENV *je|int *excpt \
				|protect_body_t body|va_list *args
#endif
Ap	|void	|reginitcolors
Apd	|char*	|sv_2pv_nolen	|SV* sv
Apd	|char*	|sv_2pvutf8_nolen|SV* sv
Apd	|char*	|sv_2pvbyte_nolen|SV* sv
Amdb	|char*	|sv_pv		|SV *sv
Amdb	|char*	|sv_pvutf8	|SV *sv
Amdb	|char*	|sv_pvbyte	|SV *sv
Amdb	|STRLEN	|sv_utf8_upgrade|SV *sv
ApdM	|bool	|sv_utf8_downgrade|SV *sv|bool fail_ok
Apd	|void	|sv_utf8_encode |SV *sv
ApdM	|bool	|sv_utf8_decode |SV *sv
Apd	|void	|sv_force_normal|SV *sv
Apd	|void	|sv_force_normal_flags|SV *sv|U32 flags
Ap	|void	|tmps_grow	|I32 n
Apd	|SV*	|sv_rvweaken	|SV *sv
p	|int	|magic_killbackrefs|SV *sv|MAGIC *mg
Ap	|OP*	|newANONATTRSUB	|I32 floor|OP *proto|OP *attrs|OP *block
Ap	|CV*	|newATTRSUB	|I32 floor|OP *o|OP *proto|OP *attrs|OP *block
Ap	|void	|newMYSUB	|I32 floor|OP *o|OP *proto|OP *attrs|OP *block
p	|OP *	|my_attrs	|OP *o|OP *attrs
p	|void	|boot_core_xsutils
#if defined(USE_ITHREADS)
Ap	|PERL_CONTEXT*|cx_dup	|PERL_CONTEXT* cx|I32 ix|I32 max|CLONE_PARAMS* param
Ap	|PERL_SI*|si_dup	|PERL_SI* si|CLONE_PARAMS* param
Ap	|ANY*	|ss_dup		|PerlInterpreter* proto_perl|CLONE_PARAMS* param
Ap	|void*	|any_dup	|void* v|PerlInterpreter* proto_perl
Ap	|HE*	|he_dup		|HE* e|bool shared|CLONE_PARAMS* param
Ap	|REGEXP*|re_dup		|REGEXP* r|CLONE_PARAMS* param
Ap	|PerlIO*|fp_dup		|PerlIO* fp|char type|CLONE_PARAMS* param
Ap	|DIR*	|dirp_dup	|DIR* dp
Ap	|GP*	|gp_dup		|GP* gp|CLONE_PARAMS* param
Ap	|MAGIC*	|mg_dup		|MAGIC* mg|CLONE_PARAMS* param
Ap	|SV*	|sv_dup		|SV* sstr|CLONE_PARAMS* param
#if defined(HAVE_INTERP_INTERN)
Ap	|void	|sys_intern_dup	|struct interp_intern* src \
				|struct interp_intern* dst
#endif
Ap	|PTR_TBL_t*|ptr_table_new
Ap	|void*	|ptr_table_fetch|PTR_TBL_t *tbl|void *sv
Ap	|void	|ptr_table_store|PTR_TBL_t *tbl|void *oldsv|void *newsv
Ap	|void	|ptr_table_split|PTR_TBL_t *tbl
Ap	|void	|ptr_table_clear|PTR_TBL_t *tbl
Ap	|void	|ptr_table_free|PTR_TBL_t *tbl
#endif
#if defined(HAVE_INTERP_INTERN)
Ap	|void	|sys_intern_clear
Ap	|void	|sys_intern_init
#endif

Ap	|char *	|custom_op_name	|OP* op
Ap	|char *	|custom_op_desc	|OP* op

#if defined(PERL_COPY_ON_WRITE)
pMX	|int	|sv_release_IVX	|SV *sv
#endif

Adp	|void	|sv_nosharing	|SV *
Adp	|void	|sv_nolocking	|SV *
Adp	|void	|sv_nounlocking	|SV *
Adp	|int	|nothreadhook

END_EXTERN_C

#if defined(PERL_IN_DOOP_C) || defined(PERL_DECL_PROT)
s	|I32	|do_trans_simple	|SV *sv
s	|I32	|do_trans_count		|SV *sv
s	|I32	|do_trans_complex	|SV *sv
s	|I32	|do_trans_simple_utf8	|SV *sv
s	|I32	|do_trans_count_utf8	|SV *sv
s	|I32	|do_trans_complex_utf8	|SV *sv
#endif

#if defined(PERL_IN_GV_C) || defined(PERL_DECL_PROT)
s	|void	|gv_init_sv	|GV *gv|I32 sv_type
s	|void	|require_errno	|GV *gv
#endif

#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
s	|void	|hsplit		|HV *hv
s	|void	|hfreeentries	|HV *hv
s	|void	|more_he
s	|HE*	|new_he
s	|void	|del_he		|HE *p
s	|HEK*	|save_hek_flags	|const char *str|I32 len|U32 hash|int flags
s	|void	|hv_magic_check	|HV *hv|bool *needs_copy|bool *needs_store
s	|void	|unshare_hek_or_pvn|HEK* hek|const char* sv|I32 len|U32 hash
s	|HEK*	|share_hek_flags|const char* sv|I32 len|U32 hash|int flags
s	|void	|hv_notallowed	|int flags|const char *key|I32 klen|const char *msg
#endif

#if defined(PERL_IN_MG_C) || defined(PERL_DECL_PROT)
s	|void	|save_magic	|I32 mgs_ix|SV *sv
s	|int	|magic_methpack	|SV *sv|MAGIC *mg|char *meth
s	|int	|magic_methcall	|SV *sv|MAGIC *mg|char *meth|I32 f \
				|int n|SV *val
#endif

#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|I32	|list_assignment|OP *o
s	|void	|bad_type	|I32 n|char *t|char *name|OP *kid
s	|void	|cop_free	|COP *cop
s	|OP*	|modkids	|OP *o|I32 type
s	|void	|no_bareword_allowed|OP *o
s	|OP*	|no_fh_allowed	|OP *o
s	|OP*	|scalarboolean	|OP *o
s	|OP*	|too_few_arguments|OP *o|char* name
s	|OP*	|too_many_arguments|OP *o|char* name
s	|OP*	|newDEFSVOP
s	|OP*	|new_logop	|I32 type|I32 flags|OP **firstp|OP **otherp
s	|void	|simplify_sort	|OP *o
s	|bool	|is_handle_constructor	|OP *o|I32 argnum
s	|char*	|gv_ename	|GV *gv
s	|bool	|scalar_mod_type|OP *o|I32 type
s	|OP *	|my_kid		|OP *o|OP *attrs|OP **imopsp
s	|OP *	|dup_attrlist	|OP *o
s	|void	|apply_attrs	|HV *stash|SV *target|OP *attrs|bool for_my
s	|void	|apply_attrs_my	|HV *stash|OP *target|OP *attrs|OP **imopsp
#endif
#if defined(PL_OP_SLAB_ALLOC)
Ap	|void*	|Slab_Alloc	|int m|size_t sz
Ap	|void	|Slab_Free	|void *op
#endif

#if defined(PERL_IN_PERL_C) || defined(PERL_DECL_PROT)
s	|void	|find_beginning
s	|void	|forbid_setid	|char *
s	|void	|incpush	|char *|int|int|int
s	|void	|init_interp
s	|void	|init_ids
s	|void	|init_lexer
s	|void	|init_main_stash
s	|void	|init_perllib
s	|void	|init_postdump_symbols|int|char **|char **
s	|void	|init_predump_symbols
rs	|void	|my_exit_jump
s	|void	|nuke_stacks
s	|void	|open_script	|char *|bool|SV *
s	|void	|usage		|char *
s	|void	|validate_suid	|char *|char*
#  if defined(IAMSUID)
s	|int	|fd_on_nosuid_fs|int fd
#  endif
s	|void*	|parse_body	|char **env|XSINIT_t xsinit
s	|void*	|run_body	|I32 oldscope
s	|void	|call_body	|OP *myop|int is_eval
s	|void*	|call_list_body	|CV *cv
#if defined(PERL_FLEXIBLE_EXCEPTIONS)
s	|void*	|vparse_body	|va_list args
s	|void*	|vrun_body	|va_list args
s	|void*	|vcall_body	|va_list args
s	|void*	|vcall_list_body|va_list args
#endif
#endif

#if defined(PERL_IN_PP_C) || defined(PERL_DECL_PROT)
s	|SV*	|refto		|SV* sv
#endif

#if defined(PERL_IN_PP_PACK_C) || defined(PERL_DECL_PROT)
s	|I32	|unpack_rec	|tempsym_t* symptr|char *s|char *strbeg|char *strend|char **new_s
s	|SV **	|pack_rec	|SV *cat|tempsym_t* symptr|SV **beglist|SV **endlist
s	|SV*	|mul128		|SV *sv|U8 m
s	|I32	|measure_struct	|tempsym_t* symptr
s	|char *	|group_end	|char *pat|char *patend|char ender
s	|char *	|get_num	|char *ppat|I32 *
s	|bool	|next_symbol	|tempsym_t* symptr
s	|void	|doencodes	|SV* sv|char* s|I32 len
s	|SV*	|is_an_int	|char *s|STRLEN l
s	|int	|div128		|SV *pnum|bool *done
#endif

#if defined(PERL_IN_PP_CTL_C) || defined(PERL_DECL_PROT)
s	|OP*	|docatch	|OP *o
s	|void*	|docatch_body
#if defined(PERL_FLEXIBLE_EXCEPTIONS)
s	|void*	|vdocatch_body	|va_list args
#endif
s	|OP*	|dofindlabel	|OP *o|char *label|OP **opstack|OP **oplimit
s	|OP*	|doparseform	|SV *sv
sn	|bool	|num_overflow	|NV value|I32 fldsize|I32 frcsize
s	|I32	|dopoptoeval	|I32 startingblock
s	|I32	|dopoptolabel	|char *label
s	|I32	|dopoptoloop	|I32 startingblock
s	|I32	|dopoptosub	|I32 startingblock
s	|I32	|dopoptosub_at	|PERL_CONTEXT* cxstk|I32 startingblock
s	|void	|save_lines	|AV *array|SV *sv
s	|OP*	|doeval		|int gimme|OP** startop|CV* outside|U32 seq
s	|PerlIO *|doopen_pm	|const char *name|const char *mode
s	|bool	|path_is_absolute|char *name
#endif

#if defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
s	|void	|do_oddball	|HV *hash|SV **relem|SV **firstrelem
s	|CV*	|get_db_sub	|SV **svp|CV *cv
s	|SV*	|method_common	|SV* meth|U32* hashp
#endif

#if defined(PERL_IN_PP_SYS_C) || defined(PERL_DECL_PROT)
s	|OP*	|doform		|CV *cv|GV *gv|OP *retop
s	|int	|emulate_eaccess|const char* path|Mode_t mode
#  if !defined(HAS_MKDIR) || !defined(HAS_RMDIR)
s	|int	|dooneliner	|char *cmd|char *filename
#  endif
#endif

#if defined(PERL_IN_REGCOMP_C) || defined(PERL_DECL_PROT)
Es	|regnode*|reg		|struct RExC_state_t*|I32|I32 *
Es	|regnode*|reganode	|struct RExC_state_t*|U8|U32
Es	|regnode*|regatom	|struct RExC_state_t*|I32 *
Es	|regnode*|regbranch	|struct RExC_state_t*|I32 *|I32
Es	|void	|reguni		|struct RExC_state_t*|UV|char *|STRLEN*
Es	|regnode*|regclass	|struct RExC_state_t*
Es	|I32	|regcurly	|char *
Es	|regnode*|reg_node	|struct RExC_state_t*|U8
Es	|regnode*|regpiece	|struct RExC_state_t*|I32 *
Es	|void	|reginsert	|struct RExC_state_t*|U8|regnode *
Es	|void	|regoptail	|struct RExC_state_t*|regnode *|regnode *
Es	|void	|regtail	|struct RExC_state_t*|regnode *|regnode *
Es	|char*|regwhite	|char *|char *
Es	|char*|nextchar	|struct RExC_state_t*
#  ifdef DEBUGGING
Es	|regnode*|dumpuntil	|regnode *start|regnode *node \
				|regnode *last|SV* sv|I32 l
Es	|void	|put_byte	|SV* sv|int c
#  endif
Es	|void	|scan_commit	|struct RExC_state_t*|struct scan_data_t *data
Es	|void	|cl_anything	|struct RExC_state_t*|struct regnode_charclass_class *cl
Es	|int	|cl_is_anything	|struct regnode_charclass_class *cl
Es	|void	|cl_init	|struct RExC_state_t*|struct regnode_charclass_class *cl
Es	|void	|cl_init_zero	|struct RExC_state_t*|struct regnode_charclass_class *cl
Es	|void	|cl_and		|struct regnode_charclass_class *cl \
				|struct regnode_charclass_class *and_with
Es	|void	|cl_or		|struct RExC_state_t*|struct regnode_charclass_class *cl \
				|struct regnode_charclass_class *or_with
Es	|I32	|study_chunk	|struct RExC_state_t*|regnode **scanp|I32 *deltap \
				|regnode *last|struct scan_data_t *data \
				|U32 flags
Es	|I32	|add_data	|struct RExC_state_t*|I32 n|char *s
rs	|void|re_croak2	|const char* pat1|const char* pat2|...
Es	|I32	|regpposixcc	|struct RExC_state_t*|I32 value
Es	|void	|checkposixcc	|struct RExC_state_t*
#endif

#if defined(PERL_IN_REGEXEC_C) || defined(PERL_DECL_PROT)
Es	|I32	|regmatch	|regnode *prog
Es	|I32	|regrepeat	|regnode *p|I32 max
Es	|I32	|regrepeat_hard	|regnode *p|I32 max|I32 *lp
Es	|I32	|regtry		|regexp *prog|char *startpos
Es	|bool	|reginclass	|regnode *n|U8 *p|STRLEN *lenp|bool do_utf8sv_is_utf8
Es	|CHECKPOINT|regcppush	|I32 parenfloor
Es	|char*|regcppop
Es	|char*|regcp_set_to	|I32 ss
Es	|void	|cache_re	|regexp *prog
Es	|U8*	|reghop		|U8 *pos|I32 off
Es	|U8*	|reghop3	|U8 *pos|I32 off|U8 *lim
Es	|U8*	|reghopmaybe	|U8 *pos|I32 off
Es	|U8*	|reghopmaybe3	|U8 *pos|I32 off|U8 *lim
Es	|char*	|find_byclass	|regexp * prog|regnode *c|char *s|char *strend|char *startpos|I32 norun
Es	|void	|to_utf8_substr	|regexp * prog
Es	|void	|to_byte_substr	|regexp * prog
#endif

#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
s	|CV*	|deb_curcv	|I32 ix
s	|void	|debprof	|OP *o
#endif

#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
s	|SV*	|save_scalar_at	|SV **sptr
#endif

#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
s	|IV	|asIV		|SV* sv
s	|UV	|asUV		|SV* sv
s	|SV*	|more_sv
s	|void	|more_xiv
s	|void	|more_xnv
s	|void	|more_xpv
s	|void	|more_xpviv
s	|void	|more_xpvnv
s	|void	|more_xpvcv
s	|void	|more_xpvav
s	|void	|more_xpvhv
s	|void	|more_xpvmg
s	|void	|more_xpvlv
s	|void	|more_xpvbm
s	|void	|more_xrv
s	|XPVIV*	|new_xiv
s	|XPVNV*	|new_xnv
s	|XPV*	|new_xpv
s	|XPVIV*	|new_xpviv
s	|XPVNV*	|new_xpvnv
s	|XPVCV*	|new_xpvcv
s	|XPVAV*	|new_xpvav
s	|XPVHV*	|new_xpvhv
s	|XPVMG*	|new_xpvmg
s	|XPVLV*	|new_xpvlv
s	|XPVBM*	|new_xpvbm
s	|XRV*	|new_xrv
s	|void	|del_xiv	|XPVIV* p
s	|void	|del_xnv	|XPVNV* p
s	|void	|del_xpv	|XPV* p
s	|void	|del_xpviv	|XPVIV* p
s	|void	|del_xpvnv	|XPVNV* p
s	|void	|del_xpvcv	|XPVCV* p
s	|void	|del_xpvav	|XPVAV* p
s	|void	|del_xpvhv	|XPVHV* p
s	|void	|del_xpvmg	|XPVMG* p
s	|void	|del_xpvlv	|XPVLV* p
s	|void	|del_xpvbm	|XPVBM* p
s	|void	|del_xrv	|XRV* p
s	|void	|sv_unglob	|SV* sv
s	|void	|not_a_number	|SV *sv
s	|I32	|visit		|SVFUNC_t f|U32 flags|U32 mask
s	|void	|sv_add_backref	|SV *tsv|SV *sv
s	|void	|sv_del_backref	|SV *sv
#  ifdef DEBUGGING
s	|void	|del_sv	|SV *p
#  endif
#  if !defined(NV_PRESERVES_UV)
s	|int	|sv_2iuv_non_preserve	|SV *sv|I32 numtype
#  endif
s	|I32	|expect_number	|char** pattern
#
#  if defined(USE_ITHREADS)
s	|SV*	|gv_share	|SV *sv|CLONE_PARAMS *param
#  endif
s	|bool	|utf8_mg_pos	|SV *sv|MAGIC **mgp|STRLEN **cachep|I32 i|I32 *offsetp|I32 uoff|U8 **sp|U8 *start|U8 *send
s	|bool	|utf8_mg_pos_init	|SV *sv|MAGIC **mgp|STRLEN **cachep|I32 i|I32 *offsetp|U8 *s|U8 *start
#if defined(PERL_COPY_ON_WRITE)
sM	|void	|sv_release_COW	|SV *sv|char *pvx|STRLEN cur|STRLEN len \
				|U32 hash|SV *after
#endif
#endif

#if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
s	|void	|check_uni
s	|void	|force_next	|I32 type
s	|char*	|force_version	|char *start|int guessing
s	|char*	|force_word	|char *start|int token|int check_keyword \
				|int allow_pack|int allow_tick
s	|SV*	|tokeq		|SV *sv
s	|int	|pending_ident
s	|char*	|scan_const	|char *start
s	|char*	|scan_formline	|char *s
s	|char*	|scan_heredoc	|char *s
s	|char*	|scan_ident	|char *s|char *send|char *dest \
				|STRLEN destlen|I32 ck_uni
s	|char*	|scan_inputsymbol|char *start
s	|char*	|scan_pat	|char *start|I32 type
s	|char*	|scan_str	|char *start|int keep_quoted|int keep_delims
s	|char*	|scan_subst	|char *start
s	|char*	|scan_trans	|char *start
s	|char*	|scan_word	|char *s|char *dest|STRLEN destlen \
				|int allow_package|STRLEN *slp
s	|char*	|skipspace	|char *s
s	|char*	|swallow_bom	|U8 *s
s	|void	|checkcomma	|char *s|char *name|char *what
s	|void	|force_ident	|char *s|int kind
s	|void	|incline	|char *s
s	|int	|intuit_method	|char *s|GV *gv
s	|int	|intuit_more	|char *s
s	|I32	|lop		|I32 f|int x|char *s
s	|void	|missingterm	|char *s
s	|void	|no_op		|char *what|char *s
s	|void	|set_csh
s	|I32	|sublex_done
s	|I32	|sublex_push
s	|I32	|sublex_start
s	|char *	|filter_gets	|SV *sv|PerlIO *fp|STRLEN append
s	|HV *	|find_in_my_stash|char *pkgname|I32 len
s	|SV*	|new_constant	|char *s|STRLEN len|const char *key|SV *sv \
				|SV *pv|const char *type
#  if defined(DEBUGGING)
s	|void	|tokereport	|char *thing|char *s|I32 rv
#  endif
s	|int	|ao		|int toketype
s	|void	|depcom
s	|char*	|incl_perldb
#if 0
s	|I32	|utf16_textfilter|int idx|SV *sv|int maxlen
s	|I32	|utf16rev_textfilter|int idx|SV *sv|int maxlen
#endif
#  if defined(PERL_CR_FILTER)
s	|I32	|cr_textfilter	|int idx|SV *sv|int maxlen
#  endif
#endif

#if defined(PERL_IN_UNIVERSAL_C) || defined(PERL_DECL_PROT)
s	|SV*|isa_lookup	|HV *stash|const char *name|HV *name_stash|int len|int level
#endif

#if defined(PERL_IN_LOCALE_C) || defined(PERL_DECL_PROT)
s	|char*	|stdize_locale	|char* locs
#endif

#if defined(PERL_IN_UTIL_C) || defined(PERL_DECL_PROT)
s	|COP*	|closest_cop	|COP *cop|OP *o
s	|SV*	|mess_alloc
#endif

#if defined(PERL_IN_NUMERIC_C) || defined(PERL_DECL_PROT)
sn	|NV|mulexp10	|NV value|I32 exponent
#endif

START_EXTERN_C

Apd	|void	|sv_setsv_flags	|SV* dsv|SV* ssv|I32 flags
Apd	|void	|sv_catpvn_flags|SV* sv|const char* ptr|STRLEN len|I32 flags
Apd	|void	|sv_catsv_flags	|SV* dsv|SV* ssv|I32 flags
Apd	|STRLEN	|sv_utf8_upgrade_flags|SV *sv|I32 flags
Apd	|char*	|sv_pvn_force_flags|SV* sv|STRLEN* lp|I32 flags
Apd	|char*	|sv_2pv_flags	|SV* sv|STRLEN* lp|I32 flags
Apd	|void	|sv_copypv	|SV* dsv|SV* ssv
Ap	|char*	|my_atof2	|const char *s|NV* value
Apn	|int	|my_socketpair	|int family|int type|int protocol|int fd[2]
#ifdef PERL_COPY_ON_WRITE
pMXE	|SV*	|sv_setsv_cow	|SV* dsv|SV* ssv
#endif

#if defined(USE_PERLIO) && !defined(USE_SFIO)
Ap	|int	|PerlIO_close		|PerlIO *
Ap	|int	|PerlIO_fill		|PerlIO *
Ap	|int	|PerlIO_fileno		|PerlIO *
Ap	|int	|PerlIO_eof		|PerlIO *
Ap	|int	|PerlIO_error		|PerlIO *
Ap	|int	|PerlIO_flush		|PerlIO *
Ap	|void	|PerlIO_clearerr	|PerlIO *
Ap	|void	|PerlIO_set_cnt		|PerlIO *|int
Ap	|void	|PerlIO_set_ptrcnt	|PerlIO *|STDCHAR *|int
Ap	|void	|PerlIO_setlinebuf	|PerlIO *
Ap	|SSize_t|PerlIO_read		|PerlIO *|void *|Size_t
Ap	|SSize_t|PerlIO_write		|PerlIO *|const void *|Size_t
Ap	|SSize_t|PerlIO_unread		|PerlIO *|const void *|Size_t
Ap	|Off_t	|PerlIO_tell		|PerlIO *
Ap	|int	|PerlIO_seek		|PerlIO *|Off_t|int

Ap	|STDCHAR *|PerlIO_get_base	|PerlIO *
Ap	|STDCHAR *|PerlIO_get_ptr	|PerlIO *
Ap	|int	  |PerlIO_get_bufsiz	|PerlIO *
Ap	|int	  |PerlIO_get_cnt	|PerlIO *

Ap	|PerlIO *|PerlIO_stdin
Ap	|PerlIO *|PerlIO_stdout
Ap	|PerlIO *|PerlIO_stderr
#endif /* PERLIO_LAYERS */

p	|void	|deb_stack_all
#ifdef PERL_IN_DEB_C
s	|void	|deb_stack_n	|SV** stack_base|I32 stack_min \
				|I32 stack_max|I32 mark_min|I32 mark_max
#endif

pd	|PADLIST*|pad_new	|int flags
pd	|void	|pad_undef	|CV* cv
pd	|PADOFFSET|pad_add_name	|char *name\
				|HV* typestash|HV* ourstash \
				|bool clone
pd	|PADOFFSET|pad_add_anon	|SV* sv|OPCODE op_type
pd	|void	|pad_check_dup	|char* name|bool is_our|HV* ourstash
#ifdef DEBUGGING
pd	|void	|pad_setsv	|PADOFFSET po|SV* sv
#endif
pd	|void	|pad_block_start|int full
pd	|void	|pad_tidy	|padtidy_type type
pd 	|void	|do_dump_pad	|I32 level|PerlIO *file \
				|PADLIST *padlist|int full
pd	|void	|pad_fixup_inner_anons|PADLIST *padlist|CV *old_cv|CV *new_cv

pd	|void	|pad_push	|PADLIST *padlist|int depth|int has_args

#if defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
sd	|PADOFFSET|pad_findlex	|char *name|CV* cv|U32 seq|int warn \
				|SV** out_capture|SV** out_name_sv \
				|int *out_flags
#  if defined(DEBUGGING)
sd	|void	|cv_dump	|CV *cv|char *title
#  endif
#endif
pd 	|CV*	|find_runcv	|U32 *db_seqp
p	|void	|free_tied_hv_pool
#if defined(DEBUGGING)
p	|int	|get_debug_opts	|char **s
#endif
Ap	|void	|save_set_svflags|SV* sv|U32 mask|U32 val
Apod	|void	|hv_assert	|HV* tb

#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
sM	|SV*	|hv_delete_common|HV* tb|SV* key_sv|const char* key|STRLEN klen|int k_flags|I32 d_flags|U32 hash
sM	|HE*	|hv_fetch_common|HV* tb|SV* key_sv|const char* key|STRLEN klen|int flags|int action|SV* val|U32 hash
#endif

Apd	|void	|hv_clear_placeholders|HV* hb

Apd	|SV*	|hv_scalar	|HV* hv|
p	|SV*	|magic_scalarpack|HV* hv|MAGIC*	mg
#ifdef PERL_IN_SV_C
sMd	|SV*	|find_uninit_var|OP* obase|SV* uninit_sv|bool top
#endif

#ifdef PERL_NEED_MY_HTOLE16
np	|U16	|my_htole16	|U16 n
#endif
#ifdef PERL_NEED_MY_LETOH16
np	|U16	|my_letoh16	|U16 n
#endif
#ifdef PERL_NEED_MY_HTOBE16
np	|U16	|my_htobe16	|U16 n
#endif
#ifdef PERL_NEED_MY_BETOH16
np	|U16	|my_betoh16	|U16 n
#endif
#ifdef PERL_NEED_MY_HTOLE32
np	|U32	|my_htole32	|U32 n
#endif
#ifdef PERL_NEED_MY_LETOH32
np	|U32	|my_letoh32	|U32 n
#endif
#ifdef PERL_NEED_MY_HTOBE32
np	|U32	|my_htobe32	|U32 n
#endif
#ifdef PERL_NEED_MY_BETOH32
np	|U32	|my_betoh32	|U32 n
#endif
#ifdef PERL_NEED_MY_HTOLE64
np	|U64	|my_htole64	|U64 n
#endif
#ifdef PERL_NEED_MY_LETOH64
np	|U64	|my_letoh64	|U64 n
#endif
#ifdef PERL_NEED_MY_HTOBE64
np	|U64	|my_htobe64	|U64 n
#endif
#ifdef PERL_NEED_MY_BETOH64
np	|U64	|my_betoh64	|U64 n
#endif

#ifdef PERL_NEED_MY_HTOLES
np	|short	|my_htoles	|short n
#endif
#ifdef PERL_NEED_MY_LETOHS
np	|short	|my_letohs	|short n
#endif
#ifdef PERL_NEED_MY_HTOBES
np	|short	|my_htobes	|short n
#endif
#ifdef PERL_NEED_MY_BETOHS
np	|short	|my_betohs	|short n
#endif
#ifdef PERL_NEED_MY_HTOLEI
np	|int	|my_htolei	|int n
#endif
#ifdef PERL_NEED_MY_LETOHI
np	|int	|my_letohi	|int n
#endif
#ifdef PERL_NEED_MY_HTOBEI
np	|int	|my_htobei	|int n
#endif
#ifdef PERL_NEED_MY_BETOHI
np	|int	|my_betohi	|int n
#endif
#ifdef PERL_NEED_MY_HTOLEL
np	|long	|my_htolel	|long n
#endif
#ifdef PERL_NEED_MY_LETOHL
np	|long	|my_letohl	|long n
#endif
#ifdef PERL_NEED_MY_HTOBEL
np	|long	|my_htobel	|long n
#endif
#ifdef PERL_NEED_MY_BETOHL
np	|long	|my_betohl	|long n
#endif

np	|void	|my_swabn	|void* ptr|int n

END_EXTERN_C
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.6 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.8 import
@
text
@a26 11
:	a		allocates memory a la malloc/calloc.  Is also "R".
:	R		Return value must not be ignored.
:	P		pure function: no effects except the return value;
:			return value depends only on parms and/or globals
:
: Pointer parameters that must not be passed NULLs should be prefixed with NN.
:
: Pointer parameters that may be NULL should be prefixed with NULLOK.  This has
: no effect on output yet.  It's a notation for the maintainers to know "I have
: defined whether NULL is OK or not" rather than having neither NULL or NULLOK,
: which is ambiguous.
d44 4
a47 4
Anod	|void	|perl_construct	|NN PerlInterpreter* interp
Anod	|int	|perl_destruct	|NN PerlInterpreter* interp
Anod	|void	|perl_free	|NN PerlInterpreter* interp
Anod	|int	|perl_run	|NN PerlInterpreter* interp
d50 1
a50 1
AnpR	|bool	|doing_taint	|int argc|char** argv|char** env
d63 3
a65 3
Aanop	|Malloc_t|malloc	|MEM_SIZE nbytes
Aanop	|Malloc_t|calloc	|MEM_SIZE elements|MEM_SIZE size
Aanop	|Malloc_t|realloc	|Malloc_t where|MEM_SIZE nbytes
d68 1
a68 1
npR	|MEM_SIZE|malloced_size	|void *p
d85 1
a85 1
ApM	|void	|apply_attrs_string|const char *stashpv|CV *cv|const char *attrstr|STRLEN len
d88 4
a91 4
ApdR	|bool	|av_exists	|AV* ar|I32 key
Apd	|void	|av_extend	|NN AV* ar|I32 key
pR	|AV*	|av_fake	|I32 size|NN SV** svp
ApdR	|SV**	|av_fetch	|AV* ar|I32 key|I32 lval
d93 2
a94 2
ApdR	|I32	|av_len		|const AV* ar
ApdR	|AV*	|av_make	|I32 size|NN SV** svp
d98 1
a98 1
ApdR	|SV*	|av_shift	|AV* ar
d102 4
a105 5
Apo	|SV**	|av_arylen_p	|AV* av
pR	|OP*	|bind_match	|I32 type|NN OP* left|NN OP* pat
pR	|OP*	|block_end	|I32 floor|OP* seq
ApR	|I32	|block_gimme
pR	|int	|block_start	|int full
d108 6
a113 6
Ap	|void	|call_list	|I32 oldscope|NN AV* av_list
pR	|bool	|cando		|Mode_t mode|Uid_t effective|NN const Stat_t* statbufp
ApR	|U32	|cast_ulong	|NV f
ApR	|I32	|cast_i32	|NV f
ApR	|IV	|cast_iv	|NV f
ApR	|UV	|cast_uv	|NV f
d115 1
a115 1
ApR	|I32	|my_chsize	|int fd|Off_t length
d117 1
a117 1
pR	|OP*	|convert	|I32 optype|I32 flags|OP* o
d137 2
a138 2
p	|void	|cv_ckproto	|NN const CV* cv|const GV* gv|const char* p
pd	|CV*	|cv_clone	|NN CV* proto
d140 1
a140 1
p	|SV*	|op_const_sv	|const OP* o|CV* cv
d146 6
a151 6
ApPR	|char**	|get_op_descs
ApPR	|char**	|get_op_names
pPR	|const char*	|get_no_modify
pPR	|U32*	|get_opargs
ApPR	|PPADDR_t*|get_ppaddr
EpR	|I32	|cxinc
d155 1
a155 1
Ap	|I32	|debop		|NN const OP* o
d158 4
a161 4
Ap	|char*	|delimcpy	|NN char* to|NN const char* toend|NN const char* from \
				|NN const char* fromend|int delim|NN I32* retlen
p	|void	|deprecate	|NN const char* s
p	|void	|deprecate_old	|NN const char* s
d164 1
a164 1
p	|OP*	|die_where	|const char* message|STRLEN msglen
d168 6
a173 6
Ap	|int	|do_binmode	|NN PerlIO *fp|int iotype|int mode
p	|void	|do_chop	|NN SV* asv|NN SV* sv
Ap	|bool	|do_close	|NN GV* gv|bool not_implicit
p	|bool	|do_eof		|NN GV* gv
p	|bool	|do_exec	|NN char* cmd
#if defined(WIN32) || defined(SYMBIAN)
d190 1
a190 1
Ap	|void	|do_join	|NN SV* sv|NN SV* del|NN SV** mark|NN SV** sp
d209 2
a210 2
p	|UV	|do_vecget	|NN SV* sv|I32 offset|I32 size
p	|void	|do_vecset	|NN SV* sv
d219 1
a219 1
Ap	|void	|dump_form	|const GV* gv
d221 1
a221 1
Ap	|void	|op_dump	|const OP* arg
d223 2
a224 2
Ap	|void	|dump_packsubs	|const HV* stash
Ap	|void	|dump_sub	|NN const GV* gv
d228 4
a231 4
p	|char*	|find_script	|const char *scriptname|bool dosearch \
				|const char **search_ext|I32 flags
p	|OP*	|force_list	|NN OP* arg
p	|OP*	|fold_constants	|NN OP* arg
d241 5
a245 4
Ap	|GV*	|gv_AVadd	|NN GV* gv
Ap	|GV*	|gv_HVadd	|NN GV* gv
Ap	|GV*	|gv_IOadd	|NN GV* gv
ApR	|GV*	|gv_autoload4	|HV* stash|NN const char* name|STRLEN len|I32 method
d247 4
a250 4
Ap	|void	|gv_efullname	|SV* sv|const GV* gv
Apmb	|void	|gv_efullname3	|SV* sv|const GV* gv|const char* prefix
Ap	|void	|gv_efullname4	|SV* sv|const GV* gv|const char* prefix|bool keepmain
Ap	|GV*	|gv_fetchfile	|NN const char* name
d259 5
a263 4
Ap	|void	|gv_fullname	|SV* sv|const GV* gv
Apmb	|void	|gv_fullname3	|SV* sv|const GV* gv|const char* prefix
Ap	|void	|gv_fullname4	|SV* sv|const GV* gv|const char* prefix|bool keepmain
Ap	|void	|gv_init	|NN GV* gv|HV* stash|NN const char* name|STRLEN len|int multi
d265 1
a265 1
Apd	|HV*	|gv_stashpvn	|const char* name|U32 namelen|I32 create
d271 2
a272 2
ApdR	|bool	|hv_exists	|HV* tb|const char* key|I32 klen
ApdR	|bool	|hv_exists_ent	|HV* tb|SV* key|U32 hash
d275 9
a283 9
Ap	|void	|hv_free_ent	|NN HV* hv|HE* entry
Apd	|I32	|hv_iterinit	|NN HV* tb
ApdR	|char*	|hv_iterkey	|NN HE* entry|NN I32* retlen
ApdR	|SV*	|hv_iterkeysv	|NN HE* entry
ApdR	|HE*	|hv_iternext	|NN HV* tb
ApdR	|SV*	|hv_iternextsv	|NN HV* hv|NN char** key|NN I32* retlen
ApMdR	|HE*	|hv_iternext_flags|NN HV* tb|I32 flags
ApdR	|SV*	|hv_iterval	|NN HV* tb|NN HE* entry
Ap	|void	|hv_ksplit	|NN HV* hv|IV newmax
d291 5
a295 5
ApP	|I32	|ibcmp		|NN const char* a|NN const char* b|I32 len
ApP	|I32	|ibcmp_locale	|NN const char* a|NN const char* b|I32 len
Apd	|I32	|ibcmp_utf8	|NN const char* a|char **pe1|UV l1|bool u1|NN const char* b|char **pe2|UV l2|bool u2
pR	|bool	|ingroup	|Gid_t testgid|Uid_t effective
p	|void	|init_argv_symbols|int argc|NN char **argv
d300 61
a360 62
ApPR	|char*	|instr		|NN const char* big|NN const char* little
pR	|bool	|io_close	|NN IO* io|bool not_implicit
pR	|OP*	|invert		|OP* cmd
dpR	|bool	|is_gv_magical	|const char *name|STRLEN len|U32 flags
ApR	|I32	|is_lvalue_sub
ApPR	|U32	|to_uni_upper_lc|U32 c
ApPR	|U32	|to_uni_title_lc|U32 c
ApPR	|U32	|to_uni_lower_lc|U32 c
ApPR	|bool	|is_uni_alnum	|UV c
ApPR	|bool	|is_uni_alnumc	|UV c
ApPR	|bool	|is_uni_idfirst	|UV c
ApPR	|bool	|is_uni_alpha	|UV c
ApPR	|bool	|is_uni_ascii	|UV c
ApPR	|bool	|is_uni_space	|UV c
ApPR	|bool	|is_uni_cntrl	|UV c
ApPR	|bool	|is_uni_graph	|UV c
ApPR	|bool	|is_uni_digit	|UV c
ApPR	|bool	|is_uni_upper	|UV c
ApPR	|bool	|is_uni_lower	|UV c
ApPR	|bool	|is_uni_print	|UV c
ApPR	|bool	|is_uni_punct	|UV c
ApPR	|bool	|is_uni_xdigit	|UV c
Ap	|UV	|to_uni_upper	|UV c|NN U8 *p|NN STRLEN *lenp
Ap	|UV	|to_uni_title	|UV c|NN U8 *p|NN STRLEN *lenp
Ap	|UV	|to_uni_lower	|UV c|NN U8 *p|NN STRLEN *lenp
Ap	|UV	|to_uni_fold	|UV c|NN U8 *p|NN STRLEN *lenp
ApPR	|bool	|is_uni_alnum_lc|UV c
ApPR	|bool	|is_uni_alnumc_lc|UV c
ApPR	|bool	|is_uni_idfirst_lc|UV c
ApPR	|bool	|is_uni_alpha_lc|UV c
ApPR	|bool	|is_uni_ascii_lc|UV c
ApPR	|bool	|is_uni_space_lc|UV c
ApPR	|bool	|is_uni_cntrl_lc|UV c
ApPR	|bool	|is_uni_graph_lc|UV c
ApPR	|bool	|is_uni_digit_lc|UV c
ApPR	|bool	|is_uni_upper_lc|UV c
ApPR	|bool	|is_uni_lower_lc|UV c
ApPR	|bool	|is_uni_print_lc|UV c
ApPR	|bool	|is_uni_punct_lc|UV c
ApPR	|bool	|is_uni_xdigit_lc|UV c
Apd	|STRLEN	|is_utf8_char	|NN const U8 *p
Apd	|bool	|is_utf8_string	|NN const U8 *s|STRLEN len
Apd	|bool	|is_utf8_string_loc|NN const U8 *s|STRLEN len|const U8 **p
Apd	|bool	|is_utf8_string_loclen|NN const U8 *s|STRLEN len|const U8 **ep|STRLEN *el
ApR	|bool	|is_utf8_alnum	|NN const U8 *p
ApR	|bool	|is_utf8_alnumc	|NN const U8 *p
ApR	|bool	|is_utf8_idfirst|NN const U8 *p
ApR	|bool	|is_utf8_idcont	|NN const U8 *p
ApR	|bool	|is_utf8_alpha	|NN const U8 *p
ApR	|bool	|is_utf8_ascii	|NN const U8 *p
ApR	|bool	|is_utf8_space	|NN const U8 *p
ApR	|bool	|is_utf8_cntrl	|NN const U8 *p
ApR	|bool	|is_utf8_digit	|NN const U8 *p
ApR	|bool	|is_utf8_graph	|NN const U8 *p
ApR	|bool	|is_utf8_upper	|NN const U8 *p
ApR	|bool	|is_utf8_lower	|NN const U8 *p
ApR	|bool	|is_utf8_print	|NN const U8 *p
ApR	|bool	|is_utf8_punct	|NN const U8 *p
ApR	|bool	|is_utf8_xdigit	|NN const U8 *p
ApR	|bool	|is_utf8_mark	|NN const U8 *p
p	|OP*	|jmaybe		|NN OP* arg
pP	|I32	|keyword	|NN const char* d|I32 len
d364 1
a364 1
Ap	|void	|op_null	|OP* o
a365 2
Ap	|void	|op_refcnt_lock
Ap	|void	|op_refcnt_unlock
d372 6
a377 6
ApdR	|I32	|looks_like_number|NN SV* sv
Apd	|UV	|grok_bin	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NV *result
Apd	|UV	|grok_hex	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NV *result
Apd	|int	|grok_number	|NN const char *pv|STRLEN len|UV *valuep
ApdR	|bool	|grok_numeric_radix|const char **sp|const char *send
Apd	|UV	|grok_oct	|const char* start|STRLEN* len_p|I32* flags|NV *result
d401 1
a401 1
pr	|int	|magic_regdatum_set|SV* sv|MAGIC* mg
a404 1
p	|int	|magic_freearylen_p|SV* sv|MAGIC* mg
d407 3
d429 1
a429 1
p	|void	|magicname	|const char* sym|const char* name|I32 namlen
a431 1
p	|int	|magic_setcollxfrm|SV* sv|MAGIC* mg
d440 1
a440 2
pd	|void	|mg_localize	|SV* sv|SV* nsv
Apd	|MAGIC*	|mg_find	|const SV* sv|int type
d451 2
a452 2
p	|OP*	|my		|NN OP* o
Ap	|NV	|my_atof	|NN const char *s
d454 1
a454 1
Anp	|char*	|my_bcopy	|NN const char* from|NN char* to|I32 len
d457 1
a457 1
Anp	|char*	|my_bzero	|NN char* loc|I32 len
d467 1
a467 1
AnpP	|I32	|my_memcmp	|NN const char* s1|NN const char* s2|I32 len
d470 1
a470 1
Anp	|void*	|my_memset	|NN char* loc|I32 ch|I32 len
d475 1
a475 1
Ap	|void	|my_setenv	|const char* nam|const char* val
d477 1
a477 1
Ap	|char *	|my_strftime	|const char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
d479 3
a481 3
ApPa	|short	|my_swap	|short s
ApPa	|long	|my_htonl	|long l
ApPa	|long	|my_ntohl	|long l
d484 2
a485 2
Apa	|OP*	|newANONLIST	|OP* o
Apa	|OP*	|newANONHASH	|OP* o
d487 3
a489 3
Apa	|OP*	|newASSIGNOP	|I32 flags|OP* left|I32 optype|OP* right
Apa	|OP*	|newCONDOP	|I32 flags|OP* expr|OP* trueop|OP* falseop
Apd	|CV*	|newCONSTSUB	|HV* stash|const char* name|SV* sv
d491 1
a491 1
Apa	|OP*	|newFOROP	|I32 flags|char* label|line_t forline \
d493 9
a501 9
Apa	|OP*	|newLOGOP	|I32 optype|I32 flags|OP* left|OP* right
Apa	|OP*	|newLOOPEX	|I32 type|OP* label
Apa	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|OP* expr|OP* block
Apa	|OP*	|newNULLLIST
Apa	|OP*	|newOP		|I32 optype|I32 flags
Ap	|void	|newPROG	|NN OP* o
Apa	|OP*	|newRANGE	|I32 flags|OP* left|OP* right
Apa	|OP*	|newSLICEOP	|I32 flags|OP* subscript|OP* listop
Apa	|OP*	|newSTATEOP	|I32 flags|char* label|OP* o
d503 28
a530 29
Apd	|CV*	|newXS		|NN const char* name|XSUBADDR_t f|NN const char* filename
Apda	|AV*	|newAV
Apa	|OP*	|newAVREF	|NN OP* o
Apa	|OP*	|newBINOP	|I32 type|I32 flags|OP* first|OP* last
Apa	|OP*	|newCVREF	|I32 flags|OP* o
Apa	|OP*	|newGVOP	|I32 type|I32 flags|GV* gv
Apa	|GV*	|newGVgen	|const char* pack
Apa	|OP*	|newGVREF	|I32 type|OP* o
ApaR	|OP*	|newHVREF	|NN OP* o
ApdaR	|HV*	|newHV
ApaR	|HV*	|newHVhv	|HV* hv
Apa	|IO*	|newIO
Apa	|OP*	|newLISTOP	|I32 type|I32 flags|OP* first|OP* last
Apa	|OP*	|newPADOP	|I32 type|I32 flags|SV* sv
Apa	|OP*	|newPMOP	|I32 type|I32 flags
Apa	|OP*	|newPVOP	|I32 type|I32 flags|char* pv
Apa	|SV*	|newRV		|NN SV* pref
Apda	|SV*	|newRV_noinc	|NN SV *sv
Apda	|SV*	|newSV		|STRLEN len
Apa	|OP*	|newSVREF	|NN OP* o
Apa	|OP*	|newSVOP	|I32 type|I32 flags|NN SV* sv
Apda	|SV*	|newSViv	|IV i
Apda	|SV*	|newSVuv	|UV u
Apda	|SV*	|newSVnv	|NV n
Apda	|SV*	|newSVpv	|const char* s|STRLEN len
Apda	|SV*	|newSVpvn	|const char* s|STRLEN len
Apda	|SV*	|newSVhek	|const HEK *hek
Apda	|SV*	|newSVpvn_share	|const char* s|I32 len|U32 hash
Afpda	|SV*	|newSVpvf	|const char* pat|...
d532 9
a540 9
Apda	|SV*	|newSVrv	|NN SV* rv|NULLOK const char* classname
Apda	|SV*	|newSVsv	|NULLOK SV* old
Apa	|OP*	|newUNOP	|I32 type|I32 flags|OP* first
Apa	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|LOOP* loop \
				|I32 whileline|OP* expr|OP* block|OP* cont \
				|I32 has_my
Apa	|PERL_SI*|new_stackinfo|I32 stitems|I32 cxitems
Ap	|char*	|scan_vstring	|NN const char *vstr|NN SV *sv
Apd	|const char*	|scan_version	|NN const char *vstr|NN SV *sv|bool qv
d546 1
a546 1
Apd	|int	|vcmp		|NN SV *lvs|NN SV *rvs
d548 1
a548 1
ApP	|char*	|ninstr		|const char* big|const char* bigend \
d550 1
a550 1
pr	|OP*	|oopsCV		|OP* o
d554 2
a555 2
p	|PADOFFSET|allocmy	|NN char* name
pd	|PADOFFSET|pad_findmy	|NN const char* name
d557 2
a558 2
pR	|OP*	|oopsAV		|NN OP* o
pR	|OP*	|oopsHV		|NN OP* o
d573 3
a575 3
Apd	|I32	|call_argv	|NN const char* sub_name|I32 flags|NN char** argv
Apd	|I32	|call_method	|NN const char* methname|I32 flags
Apd	|I32	|call_pv	|NN const char* sub_name|I32 flags
d578 4
a581 4
Apd	|SV*	|eval_pv	|NN const char* p|I32 croak_on_error
Apd	|I32	|eval_sv	|NN SV* sv|I32 flags
Apd	|SV*	|get_sv		|NN const char* name|I32 create
Apd	|AV*	|get_av		|NN const char* name|I32 create
d586 3
a588 3
Ap	|void	|new_collate	|NN char* newcoll
Ap	|void	|new_ctype	|NN char* newctype
Ap	|void	|new_numeric	|NN char* newcoll
d592 3
a594 3
Apd	|void	|require_pv	|NN const char* pv
Apd	|void	|pack_cat	|SV *cat|const char *pat|const char *patend|SV **beglist|SV **endlist|SV ***next_in_list|U32 flags
Apd	|void	|packlist 	|SV *cat|const char *pat|const char *patend|SV **beglist|SV **endlist
d596 3
a598 3
Ap	|void	|pmflag		|NN U32* pmfl|int ch
p	|OP*	|pmruntime	|NN OP* pm|NN OP* expr|bool isreg
p	|OP*	|pmtrans	|NN OP* o|NN OP* expr|OP* repl
d604 5
a608 5
Ap	|void	|regdump	|NN regexp* r
Ap	|SV*	|regclass_swash	|const struct regnode *n|bool doinit|SV **listsvp|SV **altsvp
Ap	|I32	|pregexec	|NN regexp* prog|NN char* stringarg \
				|NN char* strend|NN char* strbeg|I32 minend \
				|NN SV* screamer|U32 nosave
d610 1
a610 1
Ap	|regexp*|pregcomp	|NN char* exp|NN char* xend|NN PMOP* pm
d615 2
a616 2
Ap	|I32	|regexec_flags	|NN regexp* prog|NN char* stringarg \
				|NN char* strend|NN char* strbeg|I32 minend \
d618 5
a622 5
ApR	|regnode*|regnext	|NN regnode* p
Ep	|void	|regprop	|SV* sv|const regnode* o
Ap	|void	|repeatcpy	|NN char* to|NN const char* from|I32 len|I32 count
ApP	|char*	|rninstr	|NN const char* big|NN const char* bigend \
				|NN const char* little|NN const char* lend
d627 3
a629 3
p	|void	|rxres_free	|NN void** rsp
p	|void	|rxres_restore	|NN void** rsp|NN REGEXP* prx
p	|void	|rxres_save	|NN void** rsp|NN REGEXP* prx
d631 1
a631 1
p	|I32	|same_dirent	|NN const char* a|NN const char* b
d633 3
a635 4
Apda	|char*	|savepv		|NN const char* pv
Apda	|char*	|savepvn	|NN const char* pv|I32 len
Apda	|char*	|savesharedpv	|const char* pv
Apda	|char*	|savesvpv	|NN SV* sv
d638 1
a638 1
Ap	|void	|save_aelem	|const AV* av|I32 idx|SV **sptr
d656 1
a656 1
Apr	|void	|save_hints
d676 1
a676 1
Apr	|SV**	|save_threadsv	|PADOFFSET i
d682 4
a685 4
Apd	|NV	|scan_bin	|const char* start|STRLEN len|STRLEN* retlen
Apd	|NV	|scan_hex	|const char* start|STRLEN len|STRLEN* retlen
Ap	|char*	|scan_num	|const char* s|YYSTYPE *lvalp
Apd	|NV	|scan_oct	|const char* start|STRLEN len|STRLEN* retlen
d690 1
a690 1
p	|I32	|setenv_getix	|const char* nam
d696 2
a697 2
Ap	|SV**	|stack_grow	|NN SV** sp|NN SV**p|int n
ApR	|I32	|start_subparse	|I32 is_format|U32 flags
d699 29
a727 30
Apd	|bool	|sv_2bool	|NN SV* sv
Apd	|CV*	|sv_2cv		|NN SV* sv|HV** st|GV** gvp|I32 lref
Apd	|IO*	|sv_2io		|NN SV* sv
Amb	|IV	|sv_2iv		|NN SV* sv
Apd	|IV	|sv_2iv_flags	|NN SV* sv|I32 flags
Apd	|SV*	|sv_2mortal	|NN SV* sv
Apd	|NV	|sv_2nv		|NN SV* sv
Amb	|char*	|sv_2pv		|NN SV* sv|STRLEN* lp
Apd	|char*	|sv_2pv_flags	|NN SV* sv|STRLEN* lp|I32 flags
Apd	|char*	|sv_2pvutf8	|NN SV* sv|STRLEN* lp
Apd	|char*	|sv_2pvbyte	|NN SV* sv|STRLEN* lp
Ap	|char*	|sv_pvn_nomg	|NN SV* sv|STRLEN* lp
Amb	|UV	|sv_2uv		|NN SV* sv
Apd	|UV	|sv_2uv_flags	|NN SV* sv|I32 flags
Apd	|IV	|sv_iv		|NN SV* sv
Apd	|UV	|sv_uv		|NN SV* sv
Apd	|NV	|sv_nv		|NN SV* sv
Apd	|char*	|sv_pvn		|NN SV *sv|NN STRLEN *len
Apd	|char*	|sv_pvutf8n	|NN SV *sv|NN STRLEN *len
Apd	|char*	|sv_pvbyten	|NN SV *sv|NN STRLEN *len
Apd	|I32	|sv_true	|NN SV *sv
pd	|void	|sv_add_arena	|NN char* ptr|U32 size|U32 flags
Apd	|int	|sv_backoff	|NN SV* sv
Apd	|SV*	|sv_bless	|NN SV* sv|NN HV* stash
Afpd	|void	|sv_catpvf	|NN SV* sv|const char* pat|...
Apd	|void	|sv_vcatpvf	|NN SV* sv|const char* pat|va_list* args
Apd	|void	|sv_catpv	|NN SV* sv|const char* ptr
Amdb	|void	|sv_catpvn	|NN SV* sv|const char* ptr|STRLEN len
Amdb	|void	|sv_catsv	|NN SV* dsv|SV* ssv
Apd	|void	|sv_chop	|NN SV* sv|const char* ptr
d730 3
a732 3
Apd	|void	|sv_clear	|NN SV* sv
Apd	|I32	|sv_cmp		|NN SV* sv1|NN SV* sv2
Apd	|I32	|sv_cmp_locale	|NN SV* sv1|NN SV* sv2
d734 1
a734 1
Apd	|char*	|sv_collxfrm	|NN SV* sv|NN STRLEN* nxp
d736 6
a741 6
Ap	|OP*	|sv_compile_2op	|NN SV* sv|NN OP** startp|NN const char* code|NN PAD** padp
Apd	|int	|getcwd_sv	|NN SV* sv
Apd	|void	|sv_dec		|NN SV* sv
Ap	|void	|sv_dump	|NN SV* sv
ApdR	|bool	|sv_derived_from|NN SV* sv|NN const char* name
Apd	|I32	|sv_eq		|NN SV* sv1|NN SV* sv2
d743 1
a743 1
poMX	|void	|sv_free2	|NN SV* sv
d745 10
a754 10
Apd	|char*	|sv_gets	|NN SV* sv|NN PerlIO* fp|I32 append
Apd	|char*	|sv_grow	|NN SV* sv|STRLEN newlen
Apd	|void	|sv_inc		|NN SV* sv
Apd	|void	|sv_insert	|NN SV* bigsv|STRLEN offset|STRLEN len \
				|NN const char* little|STRLEN littlelen
Apd	|int	|sv_isa		|NN SV* sv|const char* name
Apd	|int	|sv_isobject	|NN SV* sv
Apd	|STRLEN	|sv_len		|NN SV* sv
Apd	|STRLEN	|sv_len_utf8	|NN SV* sv
Apd	|void	|sv_magic	|NN SV* sv|SV* obj|int how|const char* name \
d756 5
a760 5
Apd	|MAGIC *|sv_magicext	|NN SV* sv|SV* obj|int how|const MGVTBL *vtbl \
				|const char* name|I32 namlen
ApdaR	|SV*	|sv_mortalcopy	|NULLOK SV* oldsv
ApdR	|SV*	|sv_newmortal
Apd	|SV*	|sv_newref	|NULLOK SV* sv
d762 2
a763 2
Apd	|void	|sv_pos_u2b	|SV* sv|NN I32* offsetp|I32* lenp
Apd	|void	|sv_pos_b2u	|SV* sv|NN I32* offsetp
d770 2
a771 2
ApdR	|char*	|sv_reftype	|NN const SV* sv|int ob
Apd	|void	|sv_replace	|NN SV* sv|NN SV* nsv
d773 1
a773 1
Apd	|void	|sv_reset	|NN const char* s|HV* stash
d775 1
a775 1
Apd	|void	|sv_vsetpvf	|SV* sv|const char* pat|va_list* args
d777 1
a777 1
Apdb	|void	|sv_setpviv	|NN SV* sv|IV num
d783 3
a785 2
Apd	|SV*	|sv_setref_pv	|SV* rv|const char* classname|NULLOK void* pv
Apd	|SV*	|sv_setref_pvn	|SV* rv|const char* classname|NN const char* pv|STRLEN n
d787 1
a787 1
Apd	|void	|sv_setpvn	|NN SV* sv|const char* ptr|STRLEN len
d790 8
a797 8
ApdR	|bool	|sv_tainted	|SV* sv
Apd	|int	|sv_unmagic	|NN SV* sv|int type
Apd	|void	|sv_unref	|NN SV* sv
Apd	|void	|sv_unref_flags	|NN SV* sv|U32 flags
Apd	|void	|sv_untaint	|NN SV* sv
Apd	|void	|sv_upgrade	|NN SV* sv|U32 mt
Apd	|void	|sv_usepvn	|NN SV* sv|char* ptr|STRLEN len
Apd	|void	|sv_vcatpvfn	|NN SV* sv|NN const char* pat|STRLEN patlen \
d800 1
a800 1
Apd	|void	|sv_vsetpvfn	|NN SV* sv|NN const char* pat|STRLEN patlen \
d804 3
a806 2
Ap	|SV*	|swash_init	|const char* pkg|const char* name|SV* listsv|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|SV *sv|const U8 *ptr|bool do_utf8
d809 6
a814 5
Apd	|UV	|to_utf8_case	|NN const U8 *p|NN U8* ustrp|STRLEN *lenp|SV **swash|const char *normal|const char *special
Apd	|UV	|to_utf8_lower	|NN const U8 *p|NN U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_upper	|NN const U8 *p|NN U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_title	|NN const U8 *p|NN U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_fold	|NN const U8 *p|NN U8* ustrp|STRLEN *lenp
d818 2
a819 2
Apd	|I32	|unpack_str	|const char *pat|const char *patend|const char *s|const char *strbeg|const char *strend|char **new_s|I32 ocnt|U32 flags
Apd	|I32	|unpackstring	|const char *pat|const char *patend|const char *s|const char *strend|U32 flags
d825 15
a839 15
AdpPR	|STRLEN	|utf8_length	|NN const U8* s|NN const U8 *e
ApdPR	|IV	|utf8_distance	|NN const U8 *a|NN const U8 *b
ApdPR	|U8*	|utf8_hop	|NN const U8 *s|I32 off
ApMd	|U8*	|utf8_to_bytes	|NN U8 *s|NN STRLEN *len
ApMd	|U8*	|bytes_from_utf8|const U8 *s|STRLEN *len|bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|const U8 *s|STRLEN *len
Apd	|UV	|utf8_to_uvchr	|const U8 *s|STRLEN* retlen
Apd	|UV	|utf8_to_uvuni	|const U8 *s|STRLEN* retlen
Adp	|UV	|utf8n_to_uvchr	|const U8 *s|STRLEN curlen|STRLEN* retlen|U32 flags
Adp	|UV	|utf8n_to_uvuni	|const U8 *s|STRLEN curlen|STRLEN* retlen|U32 flags
Apd	|U8*	|uvchr_to_utf8	|NN U8 *d|UV uv
Ap	|U8*	|uvuni_to_utf8	|NN U8 *d|UV uv
Ap	|U8*	|uvchr_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|U8*	|uvuni_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|char*	|pv_uni_display	|SV *dsv|const U8 *spv|STRLEN len \
d841 1
a841 1
ApdR	|char*	|sv_uni_display	|SV *dsv|SV *ssv|STRLEN pvlim|UV flags
d845 1
a845 1
p	|U32	|parse_unicode_opts|const char **popt
d848 1
a848 1
p	|void	|report_evil_fh	|const GV *gv|const IO *io|I32 op
d855 1
a855 1
Ap	|I32	|whichsig	|const char* sig
d857 1
a857 1
p	|int	|yyerror	|const char* s
d860 1
a860 1
p	|int	|yywarn		|const char* s
d865 3
a867 3
Anpa	|Malloc_t|safesysmalloc	|MEM_SIZE nbytes
Anpa	|Malloc_t|safesyscalloc	|MEM_SIZE elements|MEM_SIZE size
Anpa	|Malloc_t|safesysrealloc|Malloc_t where|MEM_SIZE nbytes
a870 2
Ap	|struct perl_vars*|init_global_struct
Ap	|void	|free_global_struct|struct perl_vars*
d875 1
a875 1
Apd	|void	|sv_vcatpvf_mg	|SV* sv|const char* pat|va_list* args
d880 1
a880 1
Apd	|void	|sv_vsetpvf_mg	|SV* sv|const char* pat|va_list* args
d882 1
a882 1
Apdb	|void	|sv_setpviv_mg	|NN SV *sv|IV iv
d890 1
a890 1
Ap	|char*	|pv_display	|SV *dsv|const char *pv|STRLEN cur|STRLEN len \
d892 2
a893 2
Afp	|void	|dump_indent	|I32 level|NN PerlIO *file|const char* pat|...
Ap	|void	|dump_vindent	|I32 level|NN PerlIO *file|const char* pat \
d895 4
a898 4
Ap	|void	|do_gv_dump	|I32 level|NN PerlIO *file|const char *name|GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|NN PerlIO *file|const char *name|GV *sv
Ap	|void	|do_hv_dump	|I32 level|NN PerlIO *file|const char *name|HV *sv
Ap	|void	|do_magic_dump	|I32 level|NN PerlIO *file|const MAGIC *mg|I32 nest \
d900 3
a902 3
Ap	|void	|do_op_dump	|I32 level|NN PerlIO *file|const OP *o
Ap	|void	|do_pmop_dump	|I32 level|NN PerlIO *file|const PMOP *pm
Ap	|void	|do_sv_dump	|I32 level|NN PerlIO *file|NULLOK SV *sv|I32 nest \
d904 7
a910 1
Ap	|void	|magic_dump	|NULLOK const MAGIC *mg
d929 2
a930 2
Apr	|void	|newMYSUB	|I32 floor|OP *o|OP *proto|OP *attrs|OP *block
p	|OP *	|my_attrs	|NN OP *o|OP *attrs
d933 19
a951 17
Apa	|PERL_CONTEXT*|cx_dup	|PERL_CONTEXT* cx|I32 ix|I32 max|CLONE_PARAMS* param
Apa	|PERL_SI*|si_dup	|PERL_SI* si|CLONE_PARAMS* param
Apa	|ANY*	|ss_dup		|NN PerlInterpreter* proto_perl|CLONE_PARAMS* param
Apa	|void*	|any_dup	|void* v|NN const PerlInterpreter* proto_perl
Apa	|HE*	|he_dup		|HE* e|bool shared|CLONE_PARAMS* param
Apa	|HEK*	|hek_dup	|HEK* e|CLONE_PARAMS* param
Apa	|REGEXP*|re_dup		|const REGEXP* r|CLONE_PARAMS* param
Apa	|PerlIO*|fp_dup		|PerlIO* fp|char type|CLONE_PARAMS* param
Apa	|DIR*	|dirp_dup	|DIR* dp
Apa	|GP*	|gp_dup		|GP* gp|CLONE_PARAMS* param
Apa	|MAGIC*	|mg_dup		|NN MAGIC* mg|CLONE_PARAMS* param
Apa	|SV*	|sv_dup		|NN SV* sstr|CLONE_PARAMS* param
Ap	|void	|rvpv_dup	|NN SV* dstr|NN SV *sstr|CLONE_PARAMS* param
Apa	|PTR_TBL_t*|ptr_table_new
Apa	|void*	|ptr_table_fetch|NN PTR_TBL_t *tbl|NN const void *sv
Ap	|void	|ptr_table_store|NN PTR_TBL_t *tbl|const void *oldsv|NN void *newsv
Ap	|void	|ptr_table_split|NN PTR_TBL_t *tbl
a953 3
#  if defined(HAVE_INTERP_INTERN)
Ap	|void	|sys_intern_dup	|NN struct interp_intern* src|NN struct interp_intern* dst
#  endif
d960 2
a961 2
ApR	|char *	|custom_op_name	|NN const OP* op
ApR	|char *	|custom_op_desc	|NN const OP* op
d975 6
a980 6
sR	|I32	|do_trans_simple	|NN SV *sv
sR	|I32	|do_trans_count		|NN SV *sv
sR	|I32	|do_trans_complex	|NN SV *sv
sR	|I32	|do_trans_simple_utf8	|NN SV *sv
sR	|I32	|do_trans_count_utf8	|NN SV *sv
sR	|I32	|do_trans_complex_utf8	|NN SV *sv
d984 2
a985 2
s	|void	|gv_init_sv	|NN GV *gv|I32 sv_type
s	|void	|require_errno	|NN GV *gv
d989 1
a989 1
s	|void	|hsplit		|NN HV *hv
d991 8
a998 10
sa	|HE*	|new_he
s	|void	|del_he		|NN HE *p
sa	|HEK*	|save_hek_flags	|NN const char *str|I32 len|U32 hash|int flags
s	|void	|hv_magic_check	|NN HV *hv|NN bool *needs_copy|NN bool *needs_store
s	|void	|unshare_hek_or_pvn|NULLOK const HEK* hek|NULLOK const char* str|I32 len|U32 hash
sR	|HEK*	|share_hek_flags|NN const char* sv|I32 len|U32 hash|int flags
rs	|void	|hv_notallowed	|int flags|NN const char *key|I32 klen|NN const char *msg
s	|struct xpvhv_aux*|hv_auxinit|NN HV *hv
sM	|SV*	|hv_delete_common|HV* tb|SV* key_sv|const char* key|STRLEN klen|int k_flags|I32 d_flags|U32 hash
sM	|HE*	|hv_fetch_common|HV* tb|SV* key_sv|const char* key|STRLEN klen|int flags|int action|SV* val|U32 hash
d1002 3
a1004 3
s	|void	|save_magic	|I32 mgs_ix|NN SV *sv
s	|int	|magic_methpack	|NN SV *sv|NN const MAGIC *mg|NN const char *meth
s	|int	|magic_methcall	|NN SV *sv|NN const MAGIC *mg|NN const char *meth|I32 f \
d1009 3
a1011 44
pR	|OP*	|ck_anoncode	|NN OP *o
pR	|OP*	|ck_bitop	|NN OP *o
pR	|OP*	|ck_concat	|NN OP *o
pR	|OP*	|ck_defined	|NN OP *o
pR	|OP*	|ck_delete	|NN OP *o
pR	|OP*	|ck_die		|NN OP *o
pR	|OP*	|ck_eof		|NN OP *o
pR	|OP*	|ck_eval	|NN OP *o
pR	|OP*	|ck_exec	|NN OP *o
pR	|OP*	|ck_exists	|NN OP *o
pR	|OP*	|ck_exit	|NN OP *o
pR	|OP*	|ck_ftst	|NN OP *o
pR	|OP*	|ck_fun		|NN OP *o
pR	|OP*	|ck_glob	|NN OP *o
pR	|OP*	|ck_grep	|NN OP *o
pR	|OP*	|ck_index	|NN OP *o
pR	|OP*	|ck_join	|NN OP *o
pR	|OP*	|ck_lengthconst	|NN OP *o
pR	|OP*	|ck_lfun	|NN OP *o
pR	|OP*	|ck_listiob	|NN OP *o
pR	|OP*	|ck_match	|NN OP *o
pR	|OP*	|ck_method	|NN OP *o
pR	|OP*	|ck_null	|NN OP *o
pR	|OP*	|ck_open	|NN OP *o
pR	|OP*	|ck_repeat	|NN OP *o
pR	|OP*	|ck_require	|NN OP *o
pR	|OP*	|ck_retarget	|NN OP *o
pR	|OP*	|ck_return	|NN OP *o
pR	|OP*	|ck_rfun	|NN OP *o
pR	|OP*	|ck_rvconst	|NN OP *o
pR	|OP*	|ck_sassign	|NN OP *o
pR	|OP*	|ck_select	|NN OP *o
pR	|OP*	|ck_shift	|NN OP *o
pR	|OP*	|ck_sort	|NN OP *o
pR	|OP*	|ck_spair	|NN OP *o
pR	|OP*	|ck_split	|NN OP *o
pR	|OP*	|ck_subr	|NN OP *o
pR	|OP*	|ck_substr	|NN OP *o
pR	|OP*	|ck_svconst	|NN OP *o
pR	|OP*	|ck_trunc	|NN OP *o
pR	|OP*	|ck_unpack	|NN OP *o
sR	|bool	|is_handle_constructor|NN const OP *o|I32 numargs
sR	|I32	|is_list_assignment|const OP *o
s	|void	|cop_free	|NN COP *cop
d1013 11
a1023 6
s	|OP*	|scalarboolean	|NN OP *o
sR	|OP*	|newDEFSVOP
sR	|OP*	|new_logop	|I32 type|I32 flags|NN OP **firstp|NN OP **otherp
s	|void	|simplify_sort	|NN OP *o
s	|const char*	|gv_ename	|GV *gv
s	|bool	|scalar_mod_type|const OP *o|I32 type
a1027 5
s	|void	|bad_type	|I32 n|NN const char *t|NN const char *name|NN const OP *kid
s	|void	|no_bareword_allowed|NN const OP *o
sR	|OP*	|no_fh_allowed|NN OP *o
sR	|OP*	|too_few_arguments|NN OP *o|NN const char* name
sR	|OP*	|too_many_arguments|NN OP *o|NN const char* name
d1030 1
a1030 1
ApR	|void*	|Slab_Alloc	|int m|size_t sz
d1036 2
a1037 2
s	|void	|forbid_setid	|const char * s
s	|void	|incpush	|const char *dir|bool addsubdirs|bool addoldvers|bool usesep|bool canrelocate
d1047 3
a1049 3
s	|void	|open_script	|const char *scriptname|bool dosearch|SV *sv
s	|void	|usage		|const char *name
s	|void	|validate_suid	|const char *validarg|const char *scriptname
d1054 2
a1055 2
rs	|void	|run_body	|I32 oldscope
s	|void	|call_body	|const OP *myop|bool is_eval
d1057 6
d1066 1
a1066 1
sR	|SV*	|refto		|SV* sv
d1070 10
a1079 9
s	|I32	|unpack_rec	|struct tempsym* symptr|const char *s|const char *strbeg|const char *strend|const char **new_s
s	|SV **	|pack_rec	|SV *cat|struct tempsym* symptr|SV **beglist|SV **endlist
s	|SV*	|mul128		|NN SV *sv|U8 m
s	|I32	|measure_struct	|NN struct tempsym* symptr
s	|bool	|next_symbol	|NN struct tempsym* symptr
sR	|SV*	|is_an_int	|NN const char *s|STRLEN l
s	|int	|div128		|NN SV *pnum|NN bool *done
s	|const char *|group_end	|NN const char *pat|NN const char *patend|char ender
s	|const char *|get_num	|NN const char *ppat|NN I32 *lenptr
d1083 13
a1095 10
sR	|OP*	|docatch	|OP *o
s	|void	|docatch_body
sR	|OP*	|dofindlabel	|OP *o|const char *label|OP **opstack|OP **oplimit
sR	|OP*	|doparseform	|SV *sv
snR	|bool	|num_overflow	|NV value|I32 fldsize|I32 frcsize
sR	|I32	|dopoptoeval	|I32 startingblock
sR	|I32	|dopoptolabel	|NN const char *label
sR	|I32	|dopoptoloop	|I32 startingblock
sR	|I32	|dopoptosub	|I32 startingblock
sR	|I32	|dopoptosub_at	|const PERL_CONTEXT* cxstk|I32 startingblock
d1097 3
a1099 3
sR	|OP*	|doeval		|int gimme|OP** startop|CV* outside|U32 seq
sR	|PerlIO *|doopen_pm	|const char *name|const char *mode
sR	|bool	|path_is_absolute|NN const char *name
d1103 3
a1105 3
s	|void	|do_oddball	|NN HV *hash|NN SV **relem|NN SV **firstrelem
sR	|CV*	|get_db_sub	|NN SV **svp|NN CV *cv
sR	|SV*	|method_common	|NN SV* meth|U32* hashp
d1109 2
a1110 2
s	|OP*	|doform		|NN CV *cv|NN GV *gv|NN OP *retop
s	|int	|emulate_eaccess|NN const char* path|Mode_t mode
d1112 1
a1112 1
sR	|int	|dooneliner	|NN const char *cmd|NN const char *filename
d1117 14
a1130 14
Es	|regnode*|reg		|NN struct RExC_state_t *state|I32 paren|NN I32 *flagp
Es	|regnode*|reganode	|NN struct RExC_state_t *state|U8 op|U32 arg
Es	|regnode*|regatom	|NN struct RExC_state_t *state|NN I32 *flagp
Es	|regnode*|regbranch	|NN struct RExC_state_t *state|NN I32 *flagp|I32 first
Es	|void	|reguni		|NN const struct RExC_state_t *state|UV uv|NN char *s|NN STRLEN *lenp
Es	|regnode*|regclass	|NN struct RExC_state_t *state
ERs	|I32	|regcurly	|NN const char *
Es	|regnode*|reg_node	|NN struct RExC_state_t *state|U8 op
Es	|regnode*|regpiece	|NN struct RExC_state_t *state|NN I32 *flagp
Es	|void	|reginsert	|NN struct RExC_state_t *state|U8 op|NN regnode *opnd
Es	|void	|regoptail	|NN struct RExC_state_t *state|NN regnode *p|NN regnode *val
Es	|void	|regtail	|NN struct RExC_state_t *state|NN regnode *p|NN regnode *val
Es	|char*	|regwhite	|NN char *p|NN const char *e
Es	|char*	|nextchar	|NN struct RExC_state_t*
d1134 1
a1134 1
Es	|void	|put_byte	|NN SV* sv|int c
d1137 8
a1144 8
Es	|void	|cl_anything	|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl
Es	|int	|cl_is_anything	|NN const struct regnode_charclass_class *cl
Es	|void	|cl_init	|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl
Es	|void	|cl_init_zero	|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl
Es	|void	|cl_and		|NN struct regnode_charclass_class *cl \
				|const struct regnode_charclass_class *and_with
Es	|void	|cl_or		|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl \
				|NN const struct regnode_charclass_class *or_with
d1147 3
a1149 3
				|U32 flags|U32 depth
Es	|I32	|add_data	|struct RExC_state_t*|I32 n|const char *s
rs	|void	|re_croak2	|const char* pat1|const char* pat2|...
a1151 4

Es	|I32	|make_trie	|struct RExC_state_t*|regnode *startbranch \
				|regnode *first|regnode *last|regnode *tail \
				|U32 flags
d1155 5
a1159 5
ERs	|I32	|regmatch	|NN regnode *prog
ERs	|I32	|regrepeat	|NN const regnode *p|I32 max
ERs	|I32	|regrepeat_hard	|NN regnode *p|I32 max|NN I32 *lp
ERs	|I32	|regtry		|regexp *prog|char *startpos
ERs	|bool	|reginclass	|NN const regnode *n|NN const U8 *p|STRLEN *lenp|bool do_utf8sv_is_utf8
d1164 7
a1170 7
ERs	|U8*	|reghop		|U8 *pos|I32 off
ERs	|U8*	|reghop3	|U8 *pos|I32 off|U8 *lim
ERs	|U8*	|reghopmaybe	|U8 *pos|I32 off
ERs	|U8*	|reghopmaybe3	|NN U8 *pos|I32 off|NN U8 *lim
ERs	|char*	|find_byclass	|NN regexp * prog|NN regnode *c|NN char *s|NN const char *strend|I32 norun
Es	|void	|to_utf8_substr	|NN regexp * prog
Es	|void	|to_byte_substr	|NN regexp * prog
d1175 1
a1175 1
s	|void	|debprof	|const OP *o
d1183 44
a1226 9
sR	|IV	|asIV		|NN SV* sv
sR	|UV	|asUV		|NN SV* sv
s	|void	|sv_unglob	|NN SV* sv
s	|void	|not_a_number	|NN SV *sv
s	|I32	|visit		|NN SVFUNC_t f|U32 flags|U32 mask
s	|void	|sv_add_backref	|NN SV *tsv|NN SV *sv
s	|void	|sv_del_backref	|NN SV *sv
sR	|SV *	|varname	|NULLOK GV *gv|NN const char *gvtype|PADOFFSET targ \
				|NULLOK SV *keyname|I32 aindex|int subscript_type
d1233 1
a1233 1
sR	|I32	|expect_number	|NN char** pattern
d1238 2
a1239 7
s	|bool	|utf8_mg_pos	|NN SV *sv|NN MAGIC **mgp|NN STRLEN **cachep \
				|I32 i|NN I32 *offsetp|I32 uoff \
				|NN const U8 **sp|NN const U8 *start \
				|NN const U8 *send
s	|bool	|utf8_mg_pos_init	|NN SV *sv|NN MAGIC **mgp \
				|NN STRLEN **cachep|I32 i|I32 offsetp \
				|NN const U8 *s|NN const U8 *start
d1241 2
a1242 1
sM	|void	|sv_release_COW	|SV *sv|const char *pvx|STRLEN len|SV *after
d1254 4
a1257 4
s	|char*	|scan_const	|NN char *start
s	|char*	|scan_formline	|NN char *s
s	|char*	|scan_heredoc	|NN char *s
s	|char*	|scan_ident	|NN char *s|NN const char *send|NN char *dest \
d1268 2
a1269 2
s	|void	|checkcomma	|NN char *s|NN const char *name|NN const char *what
s	|void	|force_ident	|const char *s|int kind
d1274 2
a1275 2
rs	|void	|missingterm	|char *s
s	|void	|no_op		|const char *what|char *s
d1281 2
a1282 2
s	|HV *	|find_in_my_stash|const char *pkgname|I32 len
s	|SV*	|new_constant	|const char *s|STRLEN len|const char *key|SV *sv \
d1285 1
a1285 1
s	|int	|tokereport	|const char *s|I32 rv
d1289 1
a1289 1
s	|const char*|incl_perldb
a1303 1
#if defined(USE_LOCALE_NUMERIC) || defined(USE_LOCALE_COLLATE)
a1305 1
#endif
a1315 4
#if defined(PERL_IN_UTF8_C) || defined(PERL_DECL_PROT)
s	|STRLEN	|is_utf8_char_slow|NN const U8 *s|const STRLEN len
#endif

d1318 4
a1321 4
Apd	|void	|sv_setsv_flags	|NN SV* dsv|NULLOK SV* ssv|I32 flags
Apd	|void	|sv_catpvn_flags|NN SV* sv|NN const char* ptr|STRLEN len|I32 flags
Apd	|void	|sv_catsv_flags	|NN SV* dsv|SV* ssv|I32 flags
Apd	|STRLEN	|sv_utf8_upgrade_flags|NN SV *sv|I32 flags
d1323 3
a1325 2
Apd	|void	|sv_copypv	|NN SV* dsv|NN SV* ssv
Ap	|char*	|my_atof2	|NN const char *s|NN NV* value
d1332 20
a1351 20
Ap	|int	|PerlIO_close		|PerlIO *f
Ap	|int	|PerlIO_fill		|PerlIO *f
Ap	|int	|PerlIO_fileno		|PerlIO *f
Ap	|int	|PerlIO_eof		|PerlIO *f
Ap	|int	|PerlIO_error		|PerlIO *f
Ap	|int	|PerlIO_flush		|PerlIO *f
Ap	|void	|PerlIO_clearerr	|PerlIO *f
Ap	|void	|PerlIO_set_cnt		|PerlIO *f|int cnt
Ap	|void	|PerlIO_set_ptrcnt	|PerlIO *f|NN STDCHAR *ptr|int cnt
Ap	|void	|PerlIO_setlinebuf	|PerlIO *f
Ap	|SSize_t|PerlIO_read		|PerlIO *f|NN void *buf|Size_t count
Ap	|SSize_t|PerlIO_write		|PerlIO *f|NN const void *buf|Size_t count
Ap	|SSize_t|PerlIO_unread		|PerlIO *f|NN const void *buf|Size_t count
Ap	|Off_t	|PerlIO_tell		|PerlIO *f
Ap	|int	|PerlIO_seek		|PerlIO *f|Off_t offset|int whence

Ap	|STDCHAR *|PerlIO_get_base	|PerlIO *f
Ap	|STDCHAR *|PerlIO_get_ptr	|PerlIO *f
Ap	|int	  |PerlIO_get_bufsiz	|PerlIO *f
Ap	|int	  |PerlIO_get_cnt	|PerlIO *f
d1364 1
a1364 1
pda	|PADLIST*|pad_new	|int flags
d1366 1
a1366 1
pd	|PADOFFSET|pad_add_name	|NN const char *name\
d1370 1
a1370 1
pd	|void	|pad_check_dup	|NN const char* name|bool is_our|NN const HV* ourstash
d1372 1
a1372 1
pd	|void	|pad_setsv	|PADOFFSET po|NN SV* sv
d1376 3
a1378 2
pd 	|void	|do_dump_pad	|I32 level|NN PerlIO *file|PADLIST *padlist|int full
pd	|void	|pad_fixup_inner_anons|NN PADLIST *padlist|CV *old_cv|CV *new_cv
d1380 1
a1380 2
pd	|void	|pad_push	|NN PADLIST *padlist|int depth
pR	|HV*	|pad_compname_type|const PADOFFSET po
d1383 1
a1383 1
sd	|PADOFFSET|pad_findlex	|const char *name|const CV* cv|U32 seq|int warn \
d1387 1
a1387 1
sd	|void	|cv_dump	|NN const CV *cv|NN const char *title
d1390 1
a1390 1
pdR	|CV*	|find_runcv	|U32 *db_seqp
d1393 1
a1393 1
p	|int	|get_debug_opts	|const char **s|bool givehelp
d1396 1
a1396 1
Apod	|void	|hv_assert	|NN HV* tb
d1398 4
a1401 10
ApdR	|SV*	|hv_scalar	|NN HV* hv
ApoR	|I32*	|hv_riter_p	|NN HV* hv
ApoR	|HE**	|hv_eiter_p	|NN HV* hv
Apo	|void	|hv_riter_set	|NN HV* hv|I32 riter
Apo	|void	|hv_eiter_set	|NN HV* hv|HE* eiter
Apo	|void	|hv_name_set	|NN HV* hv|const char *name|I32 len|int flags
Apd	|void	|hv_clear_placeholders	|NN HV* hb
ApoR	|I32*	|hv_placeholders_p	|NN HV* hv
ApoR	|I32	|hv_placeholders_get	|NN HV* hv
Apo	|void	|hv_placeholders_set	|NN HV* hv|I32 ph
d1403 4
a1406 1
p	|SV*	|magic_scalarpack|NN HV* hv|NN MAGIC* mg
a1486 6
Ap	|GV*	|gv_fetchpvn_flags|const char* name|STRLEN len|I32 flags|I32 sv_type
Ap	|GV*	|gv_fetchsv|SV *name|I32 flags|I32 sv_type
dpR	|bool	|is_gv_magical_sv|SV *name|U32 flags

ApR	|bool	|stashpv_hvname_match|NN const COP *cop|NN const HV *hv

a1487 3
/*
 * ex: set ts=8 sts=4 sw=4 noet:
 */
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@d14 1
a14 1
:			example with a semicolon
a30 1
: (see also L<perlguts/Internal Functions> for those flags.)
d47 6
a52 6
Ano	|PerlInterpreter*|perl_alloc_using \
				|NN struct IPerlMem* m|NN struct IPerlMem* ms \
				|NN struct IPerlMem* mp|NN struct IPerlEnv* e \
				|NN struct IPerlStdIO* io|NN struct IPerlLIO* lio \
				|NN struct IPerlDir* d|NN struct IPerlSock* s \
				|NN struct IPerlProc* p
d59 3
a61 3
Anod	|int	|perl_parse	|NN PerlInterpreter* interp|XSINIT_t xsinit \
				|int argc|NULLOK char** argv|NULLOK char** env
AnpR	|bool	|doing_taint	|int argc|NULLOK char** argv|NULLOK char** env
d63 1
a63 1
Anod	|PerlInterpreter*|perl_clone|NN PerlInterpreter* interp|UV flags
d65 6
a70 7
Ano	|PerlInterpreter*|perl_clone_using \
				|NN PerlInterpreter *interp|UV flags \
				|NN struct IPerlMem* m|NN struct IPerlMem* ms \
				|NN struct IPerlMem* mp|NN struct IPerlEnv* e \
				|NN struct IPerlStdIO* io|NN struct IPerlLIO* lio \
				|NN struct IPerlDir* d|NN struct IPerlSock* s \
				|NN struct IPerlProc* p
d79 1
a79 1
npR	|MEM_SIZE|malloced_size	|NN void *p
d82 2
a83 2
AnpR	|void*	|get_context
Anp	|void	|set_context	|NN void *thx
d90 10
a99 10
Ap	|SV*	|amagic_call	|NN SV* left|NN SV* right|int method|int dir
Ap	|bool	|Gv_AMupdate	|NN HV* stash
ApR	|CV*	|gv_handler	|NULLOK HV* stash|I32 id
p	|OP*	|append_elem	|I32 optype|NULLOK OP* first|NULLOK OP* last
p	|OP*	|append_list	|I32 optype|NULLOK LISTOP* first|NULLOK LISTOP* last
p	|I32	|apply		|I32 type|NN SV** mark|NN SV** sp
ApM	|void	|apply_attrs_string|NN const char *stashpv|NN CV *cv|NN const char *attrstr|STRLEN len
Apd	|void	|av_clear	|NN AV* ar
Apd	|SV*	|av_delete	|NN AV* ar|I32 key|I32 flags
ApdR	|bool	|av_exists	|NN AV* ar|I32 key
d102 3
a104 3
ApdR	|SV**	|av_fetch	|NN AV* ar|I32 key|I32 lval
Apd	|void	|av_fill	|NN AV* ar|I32 fill
ApdR	|I32	|av_len		|NN const AV* ar
d106 8
a113 10
Apd	|SV*	|av_pop		|NN AV* ar
ApdoxM	|void	|av_create_and_push|NN AV **const avp|NN SV *const val
Apd	|void	|av_push	|NN AV* ar|NN SV* val
EXp	|void	|av_reify	|NN AV* ar
ApdR	|SV*	|av_shift	|NN AV* ar
Apd	|SV**	|av_store	|NN AV* ar|I32 key|NULLOK SV* val
Apd	|void	|av_undef	|NN AV* ar
ApdoxM	|SV**	|av_create_and_unshift_one|NN AV **const avp|NN SV *const val
Apd	|void	|av_unshift	|NN AV* ar|I32 num
Apo	|SV**	|av_arylen_p	|NN AV* av
d115 1
a115 1
pR	|OP*	|block_end	|I32 floor|NULLOK OP* seq
d121 1
a121 1
pR	|bool	|cando		|Mode_t mode|bool effective|NN const Stat_t* statbufp
d129 3
a131 5
pR	|OP*	|convert	|I32 optype|I32 flags|NULLOK OP* o
pM	|PERL_CONTEXT*	|create_eval_scope|U32 flags
: croak()'s first parm can be NULL.  Otherwise, mod_perl breaks.
Afprd	|void	|croak		|NULLOK const char* pat|...
Apr	|void	|vcroak		|NN const char* pat|NULLOK va_list* args
d133 17
a149 20
Afnrp	|void	|croak_nocontext|NN const char* pat|...
Afnp	|OP*	|die_nocontext	|NN const char* pat|...
Afnp	|void	|deb_nocontext	|NN const char* pat|...
Afnp	|char*	|form_nocontext	|NN const char* pat|...
Anp	|void	|load_module_nocontext|U32 flags|NN SV* name|NN SV* ver|...
Afnp	|SV*	|mess_nocontext	|NN const char* pat|...
Afnp	|void	|warn_nocontext	|NN const char* pat|...
Afnp	|void	|warner_nocontext|U32 err|NN const char* pat|...
Afnp	|SV*	|newSVpvf_nocontext|NN const char* pat|...
Afnp	|void	|sv_catpvf_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|void	|sv_setpvf_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|void	|sv_catpvf_mg_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|void	|sv_setpvf_mg_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|int	|fprintf_nocontext|NN PerlIO* stream|NN const char* fmt|...
Afnp	|int	|printf_nocontext|NN const char* fmt|...
#endif
bp	|void	|cv_ckproto	|NN const CV* cv|NULLOK const GV* gv\
				|NULLOK const char* p
p	|void	|cv_ckproto_len	|NN const CV* cv|NULLOK const GV* gv\
				|NULLOK const char* p|const STRLEN len
d151 7
a157 8
ApdR	|SV*	|gv_const_sv	|NN GV* gv
ApdR	|SV*	|cv_const_sv	|NULLOK CV* cv
pR	|SV*	|op_const_sv	|NULLOK const OP* o|NULLOK CV* cv
Apd	|void	|cv_undef	|NN CV* cv
Ap	|void	|cx_dump	|NN PERL_CONTEXT* cx
Ap	|SV*	|filter_add	|NULLOK filter_t funcp|NULLOK SV* datasv
Ap	|void	|filter_del	|NN filter_t funcp
ApR	|I32	|filter_read	|int idx|NN SV* buffer|int maxlen
d163 3
a165 3
EXpR	|I32	|cxinc
Afp	|void	|deb		|NN const char* pat|...
Ap	|void	|vdeb		|NN const char* pat|NULLOK va_list* args
a171 1
pM	|void	|delete_eval_scope
d174 3
a176 3
Afp	|OP*	|die		|NULLOK const char* pat|...
p	|OP*	|vdie		|NULLOK const char* pat|NULLOK va_list* args
p	|OP*	|die_where	|NULLOK const char* message|STRLEN msglen
d178 2
a179 2
pmb	|bool	|do_aexec	|NULLOK SV* really|NN SV** mark|NN SV** sp
p	|bool	|do_aexec5	|NULLOK SV* really|NN SV** mark|NN SV** sp|int fd|int do_report
d182 1
a182 1
Ap	|bool	|do_close	|NULLOK GV* gv|bool not_implicit
d184 5
a188 11

#ifdef PERL_DEFAULT_DO_EXEC3_IMPLEMENTATION
pmb	|bool	|do_exec	|NN const char* cmd
#else
p	|bool	|do_exec	|NN const char* cmd
#endif

#if defined(WIN32) || defined(__SYMBIAN32__)
Ap	|int	|do_aspawn	|NN SV* really|NN SV** mark|NN SV** sp
Ap	|int	|do_spawn	|NN char* cmd
Ap	|int	|do_spawn_nowait|NN char* cmd
d191 1
a191 1
p	|bool	|do_exec3	|NN const char* cmd|int fd|int do_report
a193 3
#ifdef PERL_IN_DOIO_C
s	|void	|exec_failed	|NN const char *cmd|int fd|int do_report
#endif
d195 6
a200 6
p	|I32	|do_ipcctl	|I32 optype|NN SV** mark|NN SV** sp
p	|I32	|do_ipcget	|I32 optype|NN SV** mark|NN SV** sp
p	|I32	|do_msgrcv	|NN SV** mark|NN SV** sp
p	|I32	|do_msgsnd	|NN SV** mark|NN SV** sp
p	|I32	|do_semop	|NN SV** mark|NN SV** sp
p	|I32	|do_shmio	|I32 optype|NN SV** mark|NN SV** sp
d204 17
a220 17
Apmb	|bool	|do_open	|NN GV* gv|NN const char* name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO* supplied_fp
Ap	|bool	|do_open9	|NN GV *gv|NN const char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO *supplied_fp \
				|NN SV *svs|I32 num
Ap	|bool	|do_openn	|NN GV *gv|NN const char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO *supplied_fp \
				|NULLOK SV **svp|I32 num
p	|void	|do_pipe	|NN SV* sv|NULLOK GV* rgv|NULLOK GV* wgv
p	|bool	|do_print	|NULLOK SV* sv|NN PerlIO* fp
pR	|OP*	|do_readline
p	|I32	|do_chomp	|NN SV* sv
p	|bool	|do_seek	|NULLOK GV* gv|Off_t pos|int whence
Ap	|void	|do_sprintf	|NN SV* sv|I32 len|NN SV** sarg
p	|Off_t	|do_sysseek	|NN GV* gv|Off_t pos|int whence
pR	|Off_t	|do_tell	|NN GV* gv
p	|I32	|do_trans	|NN SV* sv
d223 3
a225 3
p	|void	|do_vop		|I32 optype|NN SV* sv|NN SV* left|NN SV* right
p	|OP*	|dofile		|NN OP* term|I32 force_builtin
ApR	|I32	|dowantarray
d229 1
a229 1
Ap	|void	|dump_fds	|NN char* s
d231 5
a235 5
Ap	|void	|dump_form	|NN const GV* gv
Ap	|void	|gv_dump	|NN GV* gv
Ap	|void	|op_dump	|NN const OP* arg
Ap	|void	|pmop_dump	|NULLOK PMOP* pm
Ap	|void	|dump_packsubs	|NN const HV* stash
d237 6
a242 6
Apd	|void	|fbm_compile	|NN SV* sv|U32 flags
ApdR	|char*	|fbm_instr	|NN unsigned char* big|NN unsigned char* bigend \
				|NN SV* littlesv|U32 flags
p	|char*	|find_script	|NN const char *scriptname|bool dosearch \
				|NULLOK const char *const *const search_ext|I32 flags
p	|OP*	|force_list	|NULLOK OP* arg
d244 2
a245 2
Afpd	|char*	|form		|NN const char* pat|...
Ap	|char*	|vform		|NN const char* pat|NULLOK va_list* args
d247 1
a247 1
p	|OP*	|gen_constant_list|NULLOK OP* o
d249 1
a249 1
p	|char*	|getenv_len	|NN const char* key|NN unsigned long *len
d251 2
a252 3
pox	|void	|get_db_sub	|NULLOK SV **svp|NN CV *cv
Ap	|void	|gp_free	|NULLOK GV* gv
Ap	|GP*	|gp_ref		|NULLOK GP* gp
d256 5
a260 5
ApR	|GV*	|gv_autoload4	|NULLOK HV* stash|NN const char* name|STRLEN len|I32 method
Ap	|void	|gv_check	|NN const HV* stash
Ap	|void	|gv_efullname	|NN SV* sv|NN const GV* gv
Apmb	|void	|gv_efullname3	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix
Ap	|void	|gv_efullname4	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix|bool keepmain
d262 24
a285 26
Ap	|GV*	|gv_fetchfile_flags|NN const char *const name|const STRLEN len\
				|const U32 flags
Apd	|GV*	|gv_fetchmeth	|NULLOK HV* stash|NN const char* name|STRLEN len|I32 level
Apd	|GV*	|gv_fetchmeth_autoload	|NULLOK HV* stash|NN const char* name|STRLEN len|I32 level
Apdmb	|GV*	|gv_fetchmethod	|NULLOK HV* stash|NN const char* name
Apd	|GV*	|gv_fetchmethod_autoload|NULLOK HV* stash|NN const char* name|I32 autoload
Ap	|GV*	|gv_fetchpv	|NN const char* name|I32 add|I32 sv_type
Ap	|void	|gv_fullname	|NN SV* sv|NN const GV* gv
Apmb	|void	|gv_fullname3	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix
Ap	|void	|gv_fullname4	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix|bool keepmain
pMox	|GP *	|newGP		|NN GV *const gv
Ap	|void	|gv_init	|NN GV* gv|NULLOK HV* stash|NN const char* name|STRLEN len|int multi
Ap	|void	|gv_name_set	|NN GV* gv|NN const char *name|U32 len|U32 flags
Apd	|HV*	|gv_stashpv	|NN const char* name|I32 flags
Apd	|HV*	|gv_stashpvn	|NN const char* name|U32 namelen|I32 flags
Apd	|HV*	|gv_stashsv	|NULLOK SV* sv|I32 flags
Apd	|void	|hv_clear	|NULLOK HV* tb
poM	|HV *	|hv_copy_hints_hv|NN HV *const ohv
Ap	|void	|hv_delayfree_ent|NN HV* hv|NULLOK HE* entry
Apd	|SV*	|hv_delete	|NULLOK HV* tb|NN const char* key|I32 klen|I32 flags
Apd	|SV*	|hv_delete_ent	|NULLOK HV* tb|NN SV* key|I32 flags|U32 hash
ApdR	|bool	|hv_exists	|NULLOK HV* tb|NN const char* key|I32 klen
ApdR	|bool	|hv_exists_ent	|NULLOK HV* tb|NN SV* key|U32 hash
Apd	|SV**	|hv_fetch	|NULLOK HV* tb|NN const char* key|I32 klen|I32 lval
Apd	|HE*	|hv_fetch_ent	|NULLOK HV* tb|NN SV* key|I32 lval|U32 hash
Ap	|void	|hv_free_ent	|NN HV* hv|NULLOK HE* entryK
d289 1
a289 1
ApdRbm	|HE*	|hv_iternext	|NN HV* tb
d294 2
a295 10
Apdbm	|void	|hv_magic	|NN HV* hv|NULLOK GV* gv|int how
XEdpoM	|HV *	|refcounted_he_chain_2hv|NULLOK const struct refcounted_he *c
XEpoM	|SV *	|refcounted_he_fetch|NULLOK const struct refcounted_he *chain \
				|NULLOK SV *keysv|NULLOK const char *key \
				|STRLEN klen, int flags, U32 hash
dpoM	|void	|refcounted_he_free|NULLOK struct refcounted_he *he
XEdpoM	|struct refcounted_he *|refcounted_he_new \
				|NULLOK struct refcounted_he *const parent \
				|NULLOK SV *const key|NULLOK SV *const value
Apd	|SV**	|hv_store	|NULLOK HV* tb|NULLOK const char* key|I32 klen|NULLOK SV* val \
d297 2
a298 2
Apd	|HE*	|hv_store_ent	|NULLOK HV* tb|NULLOK SV* key|NULLOK SV* val|U32 hash
ApM	|SV**	|hv_store_flags	|NULLOK HV* tb|NULLOK const char* key|I32 klen|NULLOK SV* val \
d300 1
a300 1
Apd	|void	|hv_undef	|NULLOK HV* tb
d303 2
a304 3
Apd	|I32	|ibcmp_utf8	|NN const char* a|NULLOK char **pe1|UV l1|bool u1 \
				|NN const char* b|NULLOK char **pe2|UV l2|bool u2
pR	|bool	|ingroup	|Gid_t testgid|bool effective
d308 1
a308 1
Ap	|void	|init_tm	|NN struct tm *ptm
d311 3
a313 3
p	|bool	|io_close	|NN IO* io|bool not_implicit
pR	|OP*	|invert		|NULLOK OP* cmd
dpR	|bool	|is_gv_magical	|NN const char *name|STRLEN len|U32 flags
d352 2
a353 2
Apdmb	|bool	|is_utf8_string_loc|NN const U8 *s|STRLEN len|NULLOK const U8 **p
Apd	|bool	|is_utf8_string_loclen|NN const U8 *s|STRLEN len|NULLOK const U8 **ep|NULLOK STRLEN *el
d371 1
a371 1
pP	|I32	|keyword	|NN const char* d|I32 len|bool all_keywords
d373 4
a376 4
EXp	|void	|lex_end
p	|void	|lex_start	|NULLOK SV* line|NULLOK PerlIO *rsfp|bool new_filter
Ap	|void	|op_null	|NN OP* o
EXp	|void	|op_clear	|NN OP* o
d379 6
a384 6
p	|OP*	|linklist	|NN OP* o
p	|OP*	|list		|NULLOK OP* o
p	|OP*	|listkids	|NULLOK OP* o
Apd	|void	|load_module|U32 flags|NN SV* name|NULLOK SV* ver|...
Ap	|void	|vload_module|U32 flags|NN SV* name|NULLOK SV* ver|NULLOK va_list* args
p	|OP*	|localize	|NN OP* arg|I32 lexical
d386 55
a440 56
Apd	|UV	|grok_bin	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
Apd	|UV	|grok_hex	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
Apd	|int	|grok_number	|NN const char *pv|STRLEN len|NULLOK UV *valuep
ApdR	|bool	|grok_numeric_radix|NN const char **sp|NN const char *send
Apd	|UV	|grok_oct	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
p	|int	|magic_clearenv	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clear_all_env|NN SV* sv|NN MAGIC* mg
dp	|int	|magic_clearhint|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearpack|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_existspack|NN SV* sv|NN const MAGIC* mg
p	|int	|magic_freeregexp|NN SV* sv|NN MAGIC* mg
p	|int	|magic_freeovrld|NN SV* sv|NN MAGIC* mg
p	|int	|magic_get	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getarylen|NN SV* sv|NN const MAGIC* mg
p	|int	|magic_getdefelem|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getnkeys	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getpack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getpos	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getsubstr|NN SV* sv|NN MAGIC* mg
p	|int	|magic_gettaint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getuvar	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getvec	|NN SV* sv|NN MAGIC* mg
p	|U32	|magic_len	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_nextpack	|NN SV* sv|NN MAGIC* mg|NN SV* key
p	|U32	|magic_regdata_cnt|NN SV* sv|NN MAGIC* mg
p	|int	|magic_regdatum_get|NN SV* sv|NN MAGIC* mg
pr	|int	|magic_regdatum_set|NN SV* sv|NN MAGIC* mg
p	|int	|magic_set	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setamagic|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setarylen|NN SV* sv|NN MAGIC* mg
p	|int	|magic_freearylen_p|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setbm	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setdbline|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setdefelem|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setenv	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setfm	|NN SV* sv|NN MAGIC* mg
dp	|int	|magic_sethint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setisa	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setglob	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setmglob	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setnkeys	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setpack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setpos	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setregexp|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setsubstr|NN SV* sv|NN MAGIC* mg
p	|int	|magic_settaint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setuvar	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setvec	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setutf8	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_set_all_env|NN SV* sv|NN MAGIC* mg
p	|U32	|magic_sizepack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_wipepack	|NN SV* sv|NN MAGIC* mg
p	|void	|magicname	|NN const char* sym|NULLOK const char* name|I32 namlen
d443 2
a444 2
p	|int	|magic_setcollxfrm|NN SV* sv|NN MAGIC* mg
p	|char*	|mem_collxfrm	|NN const char* s|STRLEN len|NN STRLEN* xlen
d446 18
a463 19
Afp	|SV*	|mess		|NN const char* pat|...
Ap	|SV*	|vmess		|NN const char* pat|NULLOK va_list* args
EXp	|void	|qerror		|NN SV* err
Apd	|void	|sortsv		|NN SV** array|size_t num_elts|NN SVCOMPARE_t cmp
Apd	|void	|sortsv_flags	|NN SV** array|size_t num_elts|NN SVCOMPARE_t cmp|U32 flags
Apd	|int	|mg_clear	|NN SV* sv
Apd	|int	|mg_copy	|NN SV* sv|NN SV* nsv|NULLOK const char* key|I32 klen
pd	|void	|mg_localize	|NN SV* sv|NN SV* nsv
ApdR	|MAGIC*	|mg_find	|NULLOK const SV* sv|int type
Apd	|int	|mg_free	|NN SV* sv
Apd	|int	|mg_get		|NN SV* sv
Apd	|U32	|mg_length	|NN SV* sv
Apd	|void	|mg_magical	|NN SV* sv
Apd	|int	|mg_set		|NN SV* sv
Ap	|I32	|mg_size	|NN SV* sv
Ap	|void	|mini_mktime	|NN struct tm *pm
EXp	|OP*	|mod		|NULLOK OP* o|I32 type
p	|int	|mode_from_discipline|NULLOK SV* discp
Ap	|char*	|moreswitches	|NN char* s
d485 4
a488 4
Ap	|I32	|my_pclose	|NULLOK PerlIO* ptr
Ap	|PerlIO*|my_popen	|NN const char* cmd|NN const char* mode
Ap	|PerlIO*|my_popen_list	|NN char* mode|int n|NN SV ** args
Ap	|void	|my_setenv	|NULLOK const char* nam|NULLOK const char* val
d490 1
a490 1
Ap	|char *	|my_strftime	|NN const char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
d497 12
a508 17
Apa	|OP*	|newANONLIST	|NULLOK OP* o
Apa	|OP*	|newANONHASH	|NULLOK OP* o
Ap	|OP*	|newANONSUB	|I32 floor|NULLOK OP* proto|NULLOK OP* block
Apa	|OP*	|newASSIGNOP	|I32 flags|NULLOK OP* left|I32 optype|NULLOK OP* right
Apa	|OP*	|newCONDOP	|I32 flags|NN OP* first|NULLOK OP* trueop|NULLOK OP* falseop
Apd	|CV*	|newCONSTSUB	|NULLOK HV* stash|NULLOK const char* name|NULLOK SV* sv
#ifdef PERL_MAD
Ap	|OP*	|newFORM	|I32 floor|NULLOK OP* o|NULLOK OP* block
#else
Ap	|void	|newFORM	|I32 floor|NULLOK OP* o|NULLOK OP* block
#endif
Apa	|OP*	|newFOROP	|I32 flags|NULLOK char* label|line_t forline \
				|NULLOK OP* sv|NN OP* expr|NULLOK OP* block|NULLOK OP* cont
Apa	|OP*	|newGIVENOP	|NN OP* cond|NN OP* block|PADOFFSET defsv_off
Apa	|OP*	|newLOGOP	|I32 optype|I32 flags|NN OP* left|NN OP* right
Apa	|OP*	|newLOOPEX	|I32 type|NN OP* label
Apa	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|NULLOK OP* expr|NULLOK OP* block
d512 5
a516 8
Apa	|OP*	|newRANGE	|I32 flags|NN OP* left|NN OP* right
Apa	|OP*	|newSLICEOP	|I32 flags|NULLOK OP* subscript|NULLOK OP* listop
Apa	|OP*	|newSTATEOP	|I32 flags|NULLOK char* label|NULLOK OP* o
Ap	|CV*	|newSUB		|I32 floor|NULLOK OP* o|NULLOK OP* proto|NULLOK OP* block
ApM	|CV *	|newXS_flags	|NULLOK const char *name|NN XSUBADDR_t subaddr\
				|NN const char *const filename \
				|NULLOK const char *const proto|U32 flags
Apd	|CV*	|newXS		|NULLOK const char* name|NN XSUBADDR_t f|NN const char* filename
d519 5
a523 5
Apa	|OP*	|newBINOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
Apa	|OP*	|newCVREF	|I32 flags|NULLOK OP* o
Apa	|OP*	|newGVOP	|I32 type|I32 flags|NN GV* gv
Apa	|GV*	|newGVgen	|NN const char* pack
Apa	|OP*	|newGVREF	|I32 type|NULLOK OP* o
d526 1
a526 1
ApaR	|HV*	|newHVhv	|NULLOK HV* hv
d528 2
a529 4
Apa	|OP*	|newLISTOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
#ifdef USE_ITHREADS
Apa	|OP*	|newPADOP	|I32 type|I32 flags|NN SV* sv
#endif
d531 3
a533 3
Apa	|OP*	|newPVOP	|I32 type|I32 flags|NULLOK char* pv
Apa	|SV*	|newRV		|NN SV* sv
Apda	|SV*	|newRV_noinc	|NN SV* sv
d540 7
a546 7
Apda	|SV*	|newSVpv	|NULLOK const char* s|STRLEN len
Apda	|SV*	|newSVpvn	|NULLOK const char* s|STRLEN len
Apda	|SV*	|newSVhek	|NULLOK const HEK *hek
Apda	|SV*	|newSVpvn_share	|NULLOK const char* s|I32 len|U32 hash
Afpda	|SV*	|newSVpvf	|NN const char* pat|...
Apa	|SV*	|vnewSVpvf	|NN const char* pat|NULLOK va_list* args
Apd	|SV*	|newSVrv	|NN SV* rv|NULLOK const char* classname
d548 3
a550 5
Apda	|SV*	|newSV_type	|svtype type
Apa	|OP*	|newUNOP	|I32 type|I32 flags|NULLOK OP* first
Apa	|OP*	|newWHENOP	|NULLOK OP* cond|NN OP* block
Apa	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|NULLOK LOOP* loop \
				|I32 whileline|NULLOK OP* expr|NULLOK OP* block|NULLOK OP* cont \
d553 1
a553 1
Ap	|char*	|scan_vstring	|NN const char *vstr|NN const char *end|NN SV *sv
d555 5
a559 6
Apd	|SV*	|new_version	|NN SV *ver
Apd	|SV*	|upg_version	|NN SV *ver|bool qv
Apd	|bool	|vverify	|NN SV *vs
Apd	|SV*	|vnumify	|NN SV *vs
Apd	|SV*	|vnormal	|NN SV *vs
Apd	|SV*	|vstringify	|NN SV *vs
d561 6
a566 10
p	|PerlIO*|nextargv	|NN GV* gv
ApP	|char*	|ninstr		|NN const char* big|NN const char* bigend \
				|NN const char* little|NN const char* lend
pr	|OP*	|oopsCV		|NN OP* o
Ap	|void	|op_free	|NULLOK OP* arg
#ifdef PERL_MAD
p	|OP*	|package	|NN OP* o
#else
p	|void	|package	|NN OP* o
#endif
d568 2
a569 2
p	|PADOFFSET|allocmy	|NN const char *const name
pdR	|PADOFFSET|pad_findmy	|NN const char* name
d578 2
a579 2
p	|void	|peep		|NULLOK OP* o
dopM	|PerlIO*|start_glob	|NN SV* pattern|NN IO *io
d584 1
a584 1
Anp	|void*	|reentrant_retry|NN const char*|...
d586 1
a586 1
Ap	|void	|call_atexit	|ATEXIT_t fn|NULLOK void *ptr
d590 1
a590 1
Apd	|I32	|call_sv	|NN SV* sv|I32 flags
a591 1
Ap	|OP *	|doref		|NN OP *o|I32 type|bool set_op_ref
d596 2
a597 3
Apd	|HV*	|get_hv		|NN const char* name|I32 create
Apd	|CV*	|get_cv		|NN const char* name|I32 flags
Apd	|CV*	|get_cvn_flags	|NN const char* name|STRLEN len|I32 flags
d600 3
a602 3
Ap	|void	|new_collate	|NULLOK const char* newcoll
Ap	|void	|new_ctype	|NN const char* newctype
Ap	|void	|new_numeric	|NULLOK const char* newcoll
d607 2
a608 4
Apd	|void	|pack_cat	|NN SV *cat|NN const char *pat|NN const char *patend \
				|NN SV **beglist|NN SV **endlist|NN SV ***next_in_list|U32 flags
Apd	|void	|packlist 	|NN SV *cat|NN const char *pat|NN const char *patend|NN SV **beglist|NN SV **endlist
#ifdef PERL_USES_PL_PIDSTATUS
a609 1
#endif
d612 1
a612 1
p	|OP*	|pmtrans	|NN OP* o|NN OP* expr|NN OP* repl
d614 1
a614 1
p	|OP*	|prepend_elem	|I32 optype|NULLOK OP* head|NULLOK OP* tail
d616 5
a620 6
Amb	|OP*	|ref		|NULLOK OP* o|I32 type
p	|OP*	|refkids	|NULLOK OP* o|I32 type
Ap	|void	|regdump	|NN const regexp* r
Ap	|void	|regdump	|NN const regexp* r
Ap	|SV*	|regclass_swash	|NULLOK const regexp *prog|NN const struct regnode *n|bool doinit|NULLOK SV **listsvp|NULLOK SV **altsvp
Ap	|I32	|pregexec	|NN REGEXP * const prog|NN char* stringarg \
d623 7
a629 14
Ap	|void	|pregfree	|NULLOK struct regexp* r
EXp	|struct regexp*	|reg_temp_copy	|NN struct regexp* r
Ap	|void	|regfree_internal|NULLOK REGEXP * const r
Ap	|char *	|reg_stringify  |NN MAGIC *mg|NULLOK STRLEN *lp|NULLOK U32 *flags|NULLOK I32 *haseval
#if defined(USE_ITHREADS)
Ap	|void*	|regdupe_internal|NN REGEXP * const r|NN CLONE_PARAMS* param
#endif
Ap	|REGEXP*|pregcomp	|NN const SV * const pattern|const U32 flags
Ap	|REGEXP*|re_compile	|NN const SV * const pattern|const U32 flags
Ap	|char*	|re_intuit_start|NN REGEXP * const rx|NULLOK SV* sv|NN char* strpos \
				|NN char* strend|const U32 flags \
				|NULLOK re_scream_pos_data *data
Ap	|SV*	|re_intuit_string|NN REGEXP * const rx
Ap	|I32	|regexec_flags	|NN REGEXP * const rx|NN char* stringarg \
d631 1
a631 1
				|NN SV* screamer|NULLOK void* data|U32 flags
d633 1
a633 19

EXp |SV*|reg_named_buff          |NN REGEXP * const rx|NULLOK SV * const key \
                                 |NULLOK SV * const value|const U32 flags
EXp |SV*|reg_named_buff_iter     |NN REGEXP * const rx|NULLOK const SV * const lastkey \
                                 |const U32 flags
Ap |SV*|reg_named_buff_fetch    |NN REGEXP * const rx|NN SV * const namesv|const U32 flags
Ap |bool|reg_named_buff_exists  |NN REGEXP * const rx|NN SV * const key|const U32 flags
Ap |SV*|reg_named_buff_firstkey |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_nextkey  |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_scalar   |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_all      |NN REGEXP * const rx|const U32 flags

EXp	|void|reg_numbered_buff_fetch|NN REGEXP * const rx|const I32 paren|NULLOK SV * const sv
EXp	|void|reg_numbered_buff_store|NN REGEXP * const rx|const I32 paren|NULLOK SV const * const value
EXp	|I32|reg_numbered_buff_length|NN REGEXP * const rx|NN const SV * const sv|const I32 paren

EXp	|SV*|reg_qr_package|NN REGEXP * const rx

Ep	|void	|regprop	|NULLOK const regexp *prog|NN SV* sv|NN const regnode* o
d638 2
a639 2
p	|int	|rsignal_restore|int i|NULLOK Sigsave_t* t
p	|int	|rsignal_save	|int i|Sighandler_t t1|NN Sigsave_t* t2
d647 3
a649 4
Apda	|char*	|savepv		|NULLOK const char* pv
Apda	|char*	|savepvn	|NULLOK const char* pv|I32 len
Apda	|char*	|savesharedpv	|NULLOK const char* pv
Apda	|char*	|savesharedpvn	|NN const char *const pv|const STRLEN len
d653 1
a653 1
Ap	|void	|save_aelem	|NN AV* av|I32 idx|NN SV **sptr
d655 16
a670 16
Ap	|void	|save_aptr	|NN AV** aptr
Ap	|AV*	|save_ary	|NN GV* gv
Ap	|void	|save_bool	|NN bool* boolp
Ap	|void	|save_clearsv	|NN SV** svp
Ap	|void	|save_delete	|NN HV* hv|NN char* key|I32 klen
Ap	|void	|save_destructor|DESTRUCTORFUNC_NOCONTEXT_t f|NN void* p
Ap	|void	|save_destructor_x|DESTRUCTORFUNC_t f|NULLOK void* p
Ap	|void	|save_freesv	|NULLOK SV* sv
p	|void	|save_freeop	|NULLOK OP* o
Ap	|void	|save_freepv	|NULLOK char* pv
Ap	|void	|save_generic_svref|NN SV** sptr
Ap	|void	|save_generic_pvref|NN char** str
Ap	|void	|save_shared_pvref|NN char** str
Ap	|void	|save_gp	|NN GV* gv|I32 empty
Ap	|HV*	|save_hash	|NN GV* gv
Ap	|void	|save_helem	|NN HV* hv|NN SV *key|NN SV **sptr
d672 11
a682 11
Ap	|void	|save_hptr	|NN HV** hptr
Ap	|void	|save_I16	|NN I16* intp
Ap	|void	|save_I32	|NN I32* intp
Ap	|void	|save_I8	|NN I8* bytep
Ap	|void	|save_int	|NN int* intp
Ap	|void	|save_item	|NN SV* item
Ap	|void	|save_iv	|NN IV* iv
Ap	|void	|save_list	|NN SV** sarg|I32 maxsarg
Ap	|void	|save_long	|NN long* longp
Ap	|void	|save_mortalizesv|NN SV* sv
Ap	|void	|save_nogv	|NULLOK GV* gv
d684 3
a686 3
Ap	|SV*	|save_scalar	|NN GV* gv
Ap	|void	|save_pptr	|NN char** pptr
Ap	|void	|save_vptr	|NN void* pptr
d689 15
a703 14
Ap	|void	|save_sptr	|NN SV** sptr
Ap	|SV*	|save_svref	|NN SV** sptr
p	|OP*	|sawparens	|NULLOK OP* o
p	|OP*	|scalar		|NULLOK OP* o
p	|OP*	|scalarkids	|NULLOK OP* o
p	|OP*	|scalarseq	|NULLOK OP* o
p	|OP*	|scalarvoid	|NN OP* o
Apd	|NV	|scan_bin	|NN const char* start|STRLEN len|NN STRLEN* retlen
Apd	|NV	|scan_hex	|NN const char* start|STRLEN len|NN STRLEN* retlen
Ap	|char*	|scan_num	|NN const char* s|NN YYSTYPE *lvalp
Apd	|NV	|scan_oct	|NN const char* start|STRLEN len|NN STRLEN* retlen
p	|OP*	|scope		|NULLOK OP* o
Ap	|char*	|screaminstr	|NN SV *bigstr|NN SV *littlestr|I32 start_shift \
				|I32 end_shift|NN I32 *oldposp|I32 last
d705 1
a705 1
p	|I32	|setenv_getix	|NN const char* nam
d707 2
a708 6
EXp	|void	|setdefout	|NULLOK GV* gv
Ap	|HEK*	|share_hek	|NN const char* str|I32 len|U32 hash
#if defined(HAS_SIGACTION) && defined(SA_SIGINFO)
np	|Signal_t |sighandler	|int sig|...
Anp	|Signal_t |csighandler	|int sig|...
#else
d711 3
a713 4
#endif
Ap	|SV**	|stack_grow	|NN SV** sp|NN SV** p|int n
Ap	|I32	|start_subparse	|I32 is_format|U32 flags
p	|void	|sub_crush_depth|NN CV* cv
d715 1
a715 1
Apd	|CV*	|sv_2cv		|NULLOK SV* sv|NN HV** st|NN GV** gvp|I32 lref
a716 4
#ifdef PERL_IN_SV_C
s	|bool	|glob_2number	|NN GV* const gv
s	|char*	|glob_2pv	|NN GV* const gv|NULLOK STRLEN * const len
#endif
d719 1
a719 1
Apd	|SV*	|sv_2mortal	|NULLOK SV* sv
d721 5
a725 5
Amb	|char*	|sv_2pv		|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_2pv_flags	|NN SV* sv|NULLOK STRLEN* lp|I32 flags
Apd	|char*	|sv_2pvutf8	|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_2pvbyte	|NN SV* sv|NULLOK STRLEN* lp
Ap	|char*	|sv_pvn_nomg	|NN SV* sv|NULLOK STRLEN* lp
d734 1
a734 1
Apd	|I32	|sv_true	|NULLOK SV *sv
d738 6
a743 6
Afpd	|void	|sv_catpvf	|NN SV* sv|NN const char* pat|...
Apd	|void	|sv_vcatpvf	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_catpv	|NN SV* sv|NN const char* ptr
Amdb	|void	|sv_catpvn	|NN SV* sv|NN const char* ptr|STRLEN len
Amdb	|void	|sv_catsv	|NN SV* dsv|NULLOK SV* ssv
Apd	|void	|sv_chop	|NN SV* sv|NULLOK const char* ptr
d757 2
a758 3
ApdR	|bool	|sv_does	|NN SV* sv|NN const char* name
Apd	|I32	|sv_eq		|NULLOK SV* sv1|NULLOK SV* sv2
Apd	|void	|sv_free	|NULLOK SV* sv
d766 5
a770 5
Apd	|int	|sv_isa		|NULLOK SV* sv|NN const char* name
Apd	|int	|sv_isobject	|NULLOK SV* sv
Apd	|STRLEN	|sv_len		|NULLOK SV* sv
Apd	|STRLEN	|sv_len_utf8	|NULLOK SV* sv
Apd	|void	|sv_magic	|NN SV* sv|NULLOK SV* obj|int how|NULLOK const char* name \
d772 2
a773 2
Apd	|MAGIC *|sv_magicext	|NN SV* sv|NULLOK SV* obj|int how|NULLOK const MGVTBL *vtbl \
				|NULLOK const char* name|I32 namlen
d777 10
a786 10
Ap	|char*	|sv_peek	|NULLOK SV* sv
Apd	|void	|sv_pos_u2b	|NULLOK SV* sv|NN I32* offsetp|NULLOK I32* lenp
Apd	|void	|sv_pos_b2u	|NULLOK SV* sv|NN I32* offsetp
Amdb	|char*	|sv_pvn_force	|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_pvutf8n_force|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_pvbyten_force|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_recode_to_utf8	|NN SV* sv|NN SV *encoding
Apd	|bool	|sv_cat_decode	|NN SV* dsv|NN SV *encoding|NN SV *ssv|NN int *offset \
				|NN char* tstr|int tlen
ApdR	|const char*	|sv_reftype	|NN const SV* sv|int ob
d789 4
a792 4
Apd	|void	|sv_reset	|NN const char* s|NULLOK HV* stash
Afpd	|void	|sv_setpvf	|NN SV* sv|NN const char* pat|...
Apd	|void	|sv_vsetpvf	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_setiv	|NN SV* sv|IV num
d794 12
a805 12
Apd	|void	|sv_setuv	|NN SV* sv|UV num
Apd	|void	|sv_setnv	|NN SV* sv|NV num
Apd	|SV*	|sv_setref_iv	|NN SV* rv|NULLOK const char* classname|IV iv
Apd	|SV*	|sv_setref_uv	|NN SV* rv|NULLOK const char* classname|UV uv
Apd	|SV*	|sv_setref_nv	|NN SV* rv|NULLOK const char* classname|NV nv
Apd	|SV*	|sv_setref_pv	|NN SV* rv|NULLOK const char* classname|NULLOK void* pv
Apd	|SV*	|sv_setref_pvn	|NN SV* rv|NULLOK const char* classname|NN const char* pv|STRLEN n
Apd	|void	|sv_setpv	|NN SV* sv|NULLOK const char* ptr
Apd	|void	|sv_setpvn	|NN SV* sv|NULLOK const char* ptr|STRLEN len
Amdb	|void	|sv_setsv	|NN SV* dsv|NULLOK SV* ssv
Amdb	|void	|sv_taint	|NN SV* sv
ApdR	|bool	|sv_tainted	|NN SV* sv
d807 1
a807 1
Apdmb	|void	|sv_unref	|NN SV* sv
d810 2
a811 4
Apd	|void	|sv_upgrade	|NN SV* sv|svtype new_type
Apdmb	|void	|sv_usepvn	|NN SV* sv|NULLOK char* ptr|STRLEN len
Apd	|void	|sv_usepvn_flags|NN SV* sv|NULLOK char* ptr|STRLEN len\
				|U32 flags
d813 2
a814 2
				|NULLOK va_list* args|NULLOK SV** svargs|I32 svmax \
				|NULLOK bool *maybe_tainted
d816 5
a820 5
				|NULLOK va_list* args|NULLOK SV** svargs|I32 svmax \
				|NULLOK bool *maybe_tainted
ApR	|NV	|str_to_version	|NN SV *sv
Ap	|SV*	|swash_init	|NN const char* pkg|NN const char* name|NN SV* listsv|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|NN SV *swash|NN const U8 *ptr|bool do_utf8
d822 6
a827 7
Ap	|void	|taint_proper	|NULLOK const char* f|NN const char* s
Apd	|UV	|to_utf8_case	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp \
				|NN SV **swashp|NN const char *normal|NN const char *special
Apd	|UV	|to_utf8_lower	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_upper	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_title	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_fold	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
d829 1
a829 14
Ap	|I32	|unlnk		|NN const char* f
#endif
Apd	|I32	|unpack_str	|NN const char *pat|NN const char *patend|NN const char *s \
				|NULLOK const char *strbeg|NN const char *strend|NULLOK char **new_s \
				|I32 ocnt|U32 flags
Apd	|I32	|unpackstring	|NN const char *pat|NN const char *patend|NN const char *s \
				|NN const char *strend|U32 flags
Ap	|void	|unsharepvn	|NULLOK const char* sv|I32 len|U32 hash
p	|void	|unshare_hek	|NULLOK HEK* hek
#ifdef PERL_MAD
p	|OP *	|utilize	|int aver|I32 floor|NULLOK OP* version \
				|NN OP* idop|NULLOK OP* arg
#else
p	|void	|utilize	|int aver|I32 floor|NULLOK OP* version|NN OP* idop|NULLOK OP* arg
d831 7
a837 2
Ap	|U8*	|utf16_to_utf8	|NN U8* p|NN U8 *d|I32 bytelen|NN I32 *newlen
Ap	|U8*	|utf16_to_utf8_reversed|NN U8* p|NN U8 *d|I32 bytelen|NN I32 *newlen
d842 6
a847 14
ApMd	|U8*	|bytes_from_utf8|NN const U8 *s|NN STRLEN *len|NULLOK bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|NN const U8 *s|NN STRLEN *len
Apd	|UV	|utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
Apd	|UV	|utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen

#ifdef EBCDIC
Adp	|UV	|utf8n_to_uvchr	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
#else
Adpbm	|UV	|utf8n_to_uvchr	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
#endif

Adp	|UV	|utf8n_to_uvuni	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags

#ifdef EBCDIC
d849 1
a849 5
#else
Apdbm	|U8*	|uvchr_to_utf8	|NN U8 *d|UV uv
#endif

Apbm	|U8*	|uvuni_to_utf8	|NN U8 *d|UV uv
d852 20
a871 19
Apd	|char*	|pv_uni_display	|NN SV *dsv|NN const U8 *spv|STRLEN len|STRLEN pvlim|UV flags
ApdR	|char*	|sv_uni_display	|NN SV *dsv|NN SV *ssv|STRLEN pvlim|UV flags
EXp	|void	|vivify_defelem	|NN SV* sv
p	|void	|vivify_ref	|NN SV* sv|U32 to_what
p	|I32	|wait4pid	|Pid_t pid|NN int* statusp|int flags
p	|U32	|parse_unicode_opts|NN const char **popt
Ap	|U32	|seed
pR	|UV	|get_hash_seed
p	|void	|report_evil_fh	|NULLOK const GV *gv|NULLOK const IO *io|I32 op
XEpd	|void	|report_uninit	|NULLOK SV* uninit_sv
Afpd	|void	|warn		|NN const char* pat|...
Ap	|void	|vwarn		|NN const char* pat|NULLOK va_list* args
Afp	|void	|warner		|U32 err|NN const char* pat|...
Ap	|void	|vwarner	|U32 err|NN const char* pat|NULLOK va_list* args
p	|void	|watch		|NN char** addr
Ap	|I32	|whichsig	|NN const char* sig
p	|void	|write_to_stderr|NN const char* message|int msglen
p	|int	|yyerror	|NN const char* s
EXp	|int	|yylex
d873 1
a873 2
p	|void	|parser_free	|NN const yy_parser *
p	|int	|yywarn		|NN const char* s
d875 2
a876 2
Ap	|void	|dump_mstats	|NN char* s
Ap	|int	|get_mstats	|NN perl_mstats_t *buf|int buflen|int level
d885 1
a885 1
Ap	|void	|free_global_struct|NN struct perl_vars *plvarsp
d889 8
a896 8
Afpd	|void	|sv_catpvf_mg	|NN SV *sv|NN const char* pat|...
Apd	|void	|sv_vcatpvf_mg	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_catpv_mg	|NN SV *sv|NN const char *ptr
Apdbm	|void	|sv_catpvn_mg	|NN SV *sv|NN const char *ptr|STRLEN len
Apdbm	|void	|sv_catsv_mg	|NN SV *dstr|NULLOK SV *sstr
Afpd	|void	|sv_setpvf_mg	|NN SV *sv|NN const char* pat|...
Apd	|void	|sv_vsetpvf_mg	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_setiv_mg	|NN SV *sv|IV i
d898 8
a905 8
Apd	|void	|sv_setuv_mg	|NN SV *sv|UV u
Apd	|void	|sv_setnv_mg	|NN SV *sv|NV num
Apd	|void	|sv_setpv_mg	|NN SV *sv|NULLOK const char *ptr
Apd	|void	|sv_setpvn_mg	|NN SV *sv|NN const char *ptr|STRLEN len
Apd	|void	|sv_setsv_mg	|NN SV *dstr|NULLOK SV *sstr
Apdbm	|void	|sv_usepvn_mg	|NN SV *sv|NULLOK char *ptr|STRLEN len
ApR	|MGVTBL*|get_vtbl	|int vtbl_id
Apd	|char*	|pv_display	|NN SV *dsv|NN const char *pv|STRLEN cur|STRLEN len \
d907 7
a913 19
Apd	|char*	|pv_escape	|NN SV *dsv|NN char const * const str\
                                |const STRLEN count|const STRLEN max\
                                |NULLOK STRLEN * const escaped\
                                |const U32 flags				
Apd     |char*  |pv_pretty      |NN SV *dsv|NN char const * const str\
                                |const STRLEN count|const STRLEN max\
                                |NULLOK char const * const start_color\
                                |NULLOK char const * const end_color\
                                |const U32 flags				
Afp	|void	|dump_indent	|I32 level|NN PerlIO *file|NN const char* pat|...
Ap	|void	|dump_vindent	|I32 level|NN PerlIO *file|NN const char* pat \
				|NULLOK va_list *args
Ap	|void	|do_gv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK GV *sv
Ap	|void	|do_hv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK HV *sv
Ap	|void	|do_magic_dump	|I32 level|NN PerlIO *file|NN const MAGIC *mg|I32 nest \
d915 2
a916 2
Ap	|void	|do_op_dump	|I32 level|NN PerlIO *file|NULLOK const OP *o
Ap	|void	|do_pmop_dump	|I32 level|NN PerlIO *file|NULLOK const PMOP *pm
d921 12
a932 12
ApdRmb	|char*	|sv_2pv_nolen	|NN SV* sv
ApdRmb	|char*	|sv_2pvutf8_nolen|NN SV* sv
ApdRmb	|char*	|sv_2pvbyte_nolen|NN SV* sv
AmdbR	|char*	|sv_pv		|NN SV *sv
AmdbR	|char*	|sv_pvutf8	|NN SV *sv
AmdbR	|char*	|sv_pvbyte	|NN SV *sv
Amdb	|STRLEN	|sv_utf8_upgrade|NN SV *sv
ApdM	|bool	|sv_utf8_downgrade|NN SV *sv|bool fail_ok
Apd	|void	|sv_utf8_encode |NN SV *sv
ApdM	|bool	|sv_utf8_decode |NN SV *sv
Apdmb	|void	|sv_force_normal|NN SV *sv
Apd	|void	|sv_force_normal_flags|NN SV *sv|U32 flags
d934 6
a939 11
Apd	|SV*	|sv_rvweaken	|NN SV *sv
p	|int	|magic_killbackrefs|NN SV *sv|NN MAGIC *mg
Ap	|OP*	|newANONATTRSUB	|I32 floor|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
Ap	|CV*	|newATTRSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
#ifdef PERL_MAD
Apr	|OP *	|newMYSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto \
				|NULLOK OP *attrs|NULLOK OP *block
#else
Apr	|void	|newMYSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
#endif
p	|OP *	|my_attrs	|NN OP *o|NULLOK OP *attrs
d942 13
a954 15
ApR	|PERL_CONTEXT*|cx_dup	|NULLOK PERL_CONTEXT* cx|I32 ix|I32 max|NN CLONE_PARAMS* param
ApR	|PERL_SI*|si_dup	|NULLOK PERL_SI* si|NN CLONE_PARAMS* param
Apa	|ANY*	|ss_dup		|NN PerlInterpreter* proto_perl|NN CLONE_PARAMS* param
ApR	|void*	|any_dup	|NULLOK void* v|NN const PerlInterpreter* proto_perl
ApR	|HE*	|he_dup		|NULLOK const HE* e|bool shared|NN CLONE_PARAMS* param
ApR	|HEK*	|hek_dup	|NULLOK HEK* e|NN CLONE_PARAMS* param
ApR	|REGEXP*|re_dup		|NULLOK const REGEXP* r|NN CLONE_PARAMS* param
Ap	|PerlIO*|fp_dup		|NULLOK PerlIO* fp|char type|NN CLONE_PARAMS* param
ApR	|DIR*	|dirp_dup	|NULLOK DIR* dp
ApR	|GP*	|gp_dup		|NULLOK GP* gp|NN CLONE_PARAMS* param
ApR	|MAGIC*	|mg_dup		|NULLOK MAGIC* mg|NN CLONE_PARAMS* param
ApR	|SV*	|sv_dup		|NULLOK const SV* sstr|NN CLONE_PARAMS* param
Ap	|void	|rvpv_dup	|NN SV* dstr|NN const SV *sstr|NN CLONE_PARAMS* param
Ap	|yy_parser*|parser_dup	|NN const yy_parser *proto|NN CLONE_PARAMS* param
#endif
d956 2
a957 2
ApR	|void*	|ptr_table_fetch|NN PTR_TBL_t *tbl|NN const void *sv
Ap	|void	|ptr_table_store|NN PTR_TBL_t *tbl|NULLOK const void *oldsv|NN void *newsv
d959 2
a960 3
Ap	|void	|ptr_table_clear|NULLOK PTR_TBL_t *tbl
Ap	|void	|ptr_table_free|NULLOK PTR_TBL_t *tbl
#if defined(USE_ITHREADS)
d970 2
a971 2
ApR	|const char *	|custom_op_name	|NN const OP* op
ApR	|const char *	|custom_op_desc	|NN const OP* op
d973 2
a974 6
Adp	|void	|sv_nosharing	|NULLOK SV *sv
Adpbm	|void	|sv_nolocking	|NULLOK SV *sv
#ifdef NO_MATHOMS
Adpbm	|void	|sv_nounlocking	|NULLOK SV *sv
#else
Adpb	|void	|sv_nounlocking	|NULLOK SV *sv
d976 4
d985 6
a990 6
sR	|I32	|do_trans_simple	|NN SV * const sv
sR	|I32	|do_trans_count		|NN SV * const sv
sR	|I32	|do_trans_complex	|NN SV * const sv
sR	|I32	|do_trans_simple_utf8	|NN SV * const sv
sR	|I32	|do_trans_count_utf8	|NN SV * const sv
sR	|I32	|do_trans_complex_utf8	|NN SV * const sv
d995 1
a995 2
s	|HV*	|require_tie_mod|NN GV *gv|NN const char *varpv|NN SV* namesv \
				|NN const char *methpv|const U32 flags
a997 4
: #if defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
paRxo	|void*	|get_arena	|size_t svtype|U32 misc
: #endif

d1000 1
a1000 1
s	|void	|hfreeentries	|NN HV *hv
d1002 3
a1004 2
sanR	|HEK*	|save_hek_flags	|NN const char *str|I32 len|U32 hash|int flags
sn	|void	|hv_magic_check	|NN HV *hv|NN bool *needs_copy|NN bool *needs_store
a1006 1
sR	|SV*	|hv_magic_uvar_xkey|NN HV* hv|NN SV* keysv|int action
d1008 3
a1010 7
sn	|struct xpvhv_aux*|hv_auxinit|NN HV *hv
sM	|SV*	|hv_delete_common|NULLOK HV* tb|NULLOK SV* keysv|NULLOK const char* key \
		|STRLEN klen|int k_flags|I32 d_flags|U32 hash
sM	|HE*	|hv_fetch_common|NULLOK HV* tb|NULLOK SV* keysv|NULLOK const char* key \
		|STRLEN klen|int flags|int action|NULLOK SV* val|U32 hash
sM	|void	|clear_placeholders	|NN HV* hb|U32 items
sM	|SV *	|refcounted_he_value	|NN const struct refcounted_he *he
d1017 1
a1017 4
				|int n|NULLOK SV *val
s	|void	|restore_magic	|NN const void *p
s	|void	|unwind_handler_stack|NN const void *p

a1044 1
pR	|OP*	|ck_readline	|NN OP *o
d1062 2
a1063 8
sRn	|bool	|is_handle_constructor|NN const OP *o|I32 numargs
sR	|I32	|is_list_assignment|NULLOK const OP *o
#  ifdef USE_ITHREADS
so	|void	|forget_pmop	|NN PMOP *const o|U32 flags
#  else
so	|void	|forget_pmop	|NN PMOP *const o
#  endif
s	|void	|find_and_forget_pmops	|NN OP *o
d1065 1
a1065 1
s	|OP*	|modkids	|NULLOK OP *o|I32 type
d1070 6
a1075 6
s	|const char*	|gv_ename	|NN GV *gv
sRn	|bool	|scalar_mod_type|NN const OP *o|I32 type
s	|OP *	|my_kid		|NULLOK OP *o|NULLOK OP *attrs|NN OP **imopsp
s	|OP *	|dup_attrlist	|NN OP *o
s	|void	|apply_attrs	|NN HV *stash|NN SV *target|NULLOK OP *attrs|bool for_my
s	|void	|apply_attrs_my	|NN HV *stash|NN OP *target|NULLOK OP *attrs|NN OP **imopsp
a1080 7
s	|bool	|looks_like_bool|NN const OP* o
s	|OP*	|newGIVWHENOP	|NULLOK OP* cond|NN OP *block \
				|I32 enter_opcode|I32 leave_opcode \
				|PADOFFSET entertarg
s	|OP*	|ref_array_or_hash|NULLOK OP* cond
s	|void	|process_special_blocks	|NN const char *const fullname\
					|NN GV *const gv|NN CV *const cv
d1083 2
a1084 10
Apa	|void*	|Slab_Alloc	|size_t sz
Ap	|void	|Slab_Free	|NN void *op
#  if defined(PERL_DEBUG_READONLY_OPS)
poxM	|void	|pending_Slabs_to_ro
poxM	|OP *	|op_refcnt_inc	|NULLOK OP *o
poxM	|PADOFFSET	|op_refcnt_dec	|NN OP *o
#    if defined(PERL_IN_OP_C)
s	|void	|Slab_to_rw	|NN void *op
#    endif
#  endif
d1088 3
a1090 3
s	|void	|find_beginning	|NN SV* linestr_sv|NN PerlIO *rsfp
s	|void	|forbid_setid	|const char flag|const int suidscript
s	|void	|incpush	|NULLOK const char *dir|bool addsubdirs|bool addoldvers|bool usesep|bool canrelocate
d1093 1
d1096 1
a1096 1
s	|void	|init_postdump_symbols|int argc|NN char **argv|NULLOK char **env
d1100 3
a1102 8
s	|int	|open_script	|NN const char *scriptname|bool dosearch \
				|NN SV *sv|NN int *suidscript|NN PerlIO **rsfpp
s	|void	|usage		|NN const char *name
s	|void	|validate_suid	|NN const char *validarg \
				|NN const char *scriptname|int fdscript \
				|int suidscript|NN SV* linestr_sv \
				|NN PerlIO *rsfp

d1106 1
a1106 1
s	|void*	|parse_body	|NULLOK char **env|XSINIT_t xsinit
d1108 2
a1109 1
s	|SV *	|incpush_if_exists|NN SV *dir
d1113 1
a1113 5
sR	|SV*	|refto		|NN SV* sv
#endif
#if defined(PERL_IN_PP_C) || defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
pRxo	|GV*	|softref2xv	|NN SV *const sv|NN const char *const what \
				|const U32 type|NN SV ***spp
d1117 2
a1118 3
s	|I32	|unpack_rec	|NN struct tempsym* symptr|NN const char *s \
				|NN const char *strbeg|NN const char *strend|NULLOK const char **new_s
s	|SV **	|pack_rec	|NN SV *cat|NN struct tempsym* symptr|NN SV **beglist|NN SV **endlist
d1125 1
a1125 5
sR	|const char *|get_num	|NN const char *ppat|NN I32 *lenptr
ns	|bool	|need_utf8	|NN const char *pat|NN const char *patend
ns	|char	|first_symbol	|NN const char *pat|NN const char *patend
sR	|char *	|sv_exp_grow	|NN SV *sv|STRLEN needed
snR	|char *	|bytes_to_uni	|NN const U8 *start|STRLEN len|NN char *dest
d1129 1
a1129 1
sR	|OP*	|docatch	|NULLOK OP *o
d1131 2
a1132 2
sR	|OP*	|dofindlabel	|NN OP *o|NN const char *label|NN OP **opstack|NN OP **oplimit
sR	|OP*	|doparseform	|NN SV *sv
a1134 1
sR	|I32	|dopoptogiven	|I32 startingblock
d1138 5
a1142 12
sR	|I32	|dopoptosub_at	|NN const PERL_CONTEXT* cxstk|I32 startingblock
sR	|I32	|dopoptowhen	|I32 startingblock
s	|void	|save_lines	|NULLOK AV *array|NN SV *sv
s	|bool	|doeval		|int gimme|NULLOK OP** startop|NULLOK CV* outside|U32 seq
sR	|PerlIO *|check_type_and_open|NN const char *name|NN const char *mode
sR	|PerlIO *|doopen_pm	|NN const char *name|NN const char *mode
sRn	|bool	|path_is_absolute|NN const char *name
sR	|I32	|run_user_filter|int idx|NN SV *buf_sv|int maxlen
sR	|PMOP*	|make_matcher	|NN regexp* re
sR	|bool	|matcher_matches_sv|NN PMOP* matcher|NN SV* sv
s	|void	|destroy_matcher|NN PMOP* matcher
s	|OP*	|do_smartmatch	|NULLOK HV* seen_this|NULLOK HV* seen_other
d1147 2
a1148 14
sR	|SV*	|method_common	|NN SV* meth|NULLOK U32* hashp
#endif

#if defined(PERL_IN_PP_SORT_C) || defined(PERL_DECL_PROT)
s	|I32	|sv_ncmp	|NN SV *a|NN SV *b
s	|I32	|sv_i_ncmp	|NN SV *a|NN SV *b
s	|I32	|amagic_ncmp	|NN SV *a|NN SV *b
s	|I32	|amagic_i_ncmp	|NN SV *a|NN SV *b
s	|I32	|amagic_cmp	|NN SV *a|NN SV *b
s	|I32	|amagic_cmp_locale|NN SV *a|NN SV *b
s	|I32	|sortcv		|NN SV *a|NN SV *b
s	|I32	|sortcv_xsub	|NN SV *a|NN SV *b
s	|I32	|sortcv_stacked	|NN SV *a|NN SV *b
s	|void	|qsortsvu	|NN SV** array|size_t num_elts|NN SVCOMPARE_t compare
a1156 1
s	|SV *	|space_join_names_mortal|NN char *const *array
d1160 1
a1160 1
Es	|regnode*|reg		|NN struct RExC_state_t *state|I32 paren|NN I32 *flagp|U32 depth
d1162 5
a1166 5
Es	|regnode*|regatom	|NN struct RExC_state_t *state|NN I32 *flagp|U32 depth
Es	|regnode*|regbranch	|NN struct RExC_state_t *state|NN I32 *flagp|I32 first|U32 depth
Es	|STRLEN	|reguni		|NN const struct RExC_state_t *state|UV uv|NN char *s
Es	|regnode*|regclass	|NN struct RExC_state_t *state|U32 depth
ERsn	|I32	|regcurly	|NN const char *
d1168 6
a1173 34
Es	|UV	|reg_recode	|const char value|NN SV **encp
Es	|regnode*|regpiece	|NN struct RExC_state_t *state|NN I32 *flagp|U32 depth
Es	|regnode*|reg_namedseq	|NN struct RExC_state_t *state|NULLOK UV *valuep
Es	|void	|reginsert	|NN struct RExC_state_t *state|U8 op|NN regnode *opnd|U32 depth
Es	|void	|regtail	|NN struct RExC_state_t *state|NN regnode *p|NN const regnode *val|U32 depth
Es	|SV *	|reg_scan_name	|NN struct RExC_state_t *state|U32 flags
Es	|U32	|join_exact	|NN struct RExC_state_t *state|NN regnode *scan|NN I32 *min|U32 flags|NULLOK regnode *val|U32 depth
EsRn	|char *	|regwhite	|NN struct RExC_state_t *state|NN char *p
Es	|char *	|nextchar	|NN struct RExC_state_t *state
Es	|bool	|reg_skipcomment|NN struct RExC_state_t *state
Es	|void	|scan_commit	|NN const struct RExC_state_t* state|NN struct scan_data_t *data|NN I32 *minlenp|int is_inf
Esn	|void	|cl_anything	|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl
EsRn	|int	|cl_is_anything	|NN const struct regnode_charclass_class *cl
Esn	|void	|cl_init	|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl
Esn	|void	|cl_init_zero	|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl
Esn	|void	|cl_and		|NN struct regnode_charclass_class *cl \
				|NN const struct regnode_charclass_class *and_with
Esn	|void	|cl_or		|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl \
				|NN const struct regnode_charclass_class *or_with
Es	|I32	|study_chunk	|NN struct RExC_state_t* state|NN regnode **scanp \
				|NN I32 *minlenp|NN I32 *deltap \
				|NN regnode *last|NULLOK struct scan_data_t *data \
				|I32 stopparen|NULLOK U8* recursed \
				|NULLOK struct regnode_charclass_class *and_withp \
				|U32 flags|U32 depth
EsRn	|U32	|add_data	|NN struct RExC_state_t* state|U32 n|NN const char *s
rs	|void	|re_croak2	|NN const char* pat1|NN const char* pat2|...
Es	|I32	|regpposixcc	|NN struct RExC_state_t* state|I32 value
Es	|void	|checkposixcc	|NN struct RExC_state_t* state
Es	|I32	|make_trie	|NN struct RExC_state_t* state|NN regnode *startbranch \
				|NN regnode *first|NN regnode *last|NN regnode *tail \
				|U32 word_count|U32 flags|U32 depth
Es	|void	|make_trie_failtable	|NN struct RExC_state_t* state \
                                |NN regnode *source|NN regnode *node|U32 depth
d1175 2
a1176 6
Es	|void	|regdump_extflags|NULLOK const char *lead| const U32 flags
Es	|const regnode*|dumpuntil|NN const regexp *r|NN const regnode *start \
				|NN const regnode *node \
				|NULLOK const regnode *last \
				|NULLOK const regnode *plast \
				|NN SV* sv|I32 indent|U32 depth
a1177 10
Es	|void	|dump_trie	|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 depth
Es	|void	|dump_trie_interim_list|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 next_alloc|U32 depth
Es	|void	|dump_trie_interim_table|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 next_alloc|U32 depth
Es	|U8	|regtail_study	|NN struct RExC_state_t *state|NN regnode *p|NN const regnode *val|U32 depth
d1179 20
d1202 5
a1206 5
ERs	|I32	|regmatch	|NN regmatch_info *reginfo|NN regnode *prog
ERs	|I32	|regrepeat	|NN const regexp *prog|NN const regnode *p|I32 max|int depth
ERs	|I32	|regtry		|NN regmatch_info *reginfo|NN char **startpos
ERs	|bool	|reginclass	|NULLOK const regexp *prog|NN const regnode *n|NN const U8 *p|NULLOK STRLEN *lenp\
				|bool do_utf8sv_is_utf8
d1208 8
a1215 8
Es	|char*	|regcppop	|NN const regexp *rex
ERsn	|U8*	|reghop3	|NN U8 *pos|I32 off|NN const U8 *lim
#ifdef XXX_dmq
ERsn	|U8*	|reghop4	|NN U8 *pos|I32 off|NN const U8 *llim|NN const U8 *rlim
#endif
ERsn	|U8*	|reghopmaybe3	|NN U8 *pos|I32 off|NN const U8 *lim
ERs	|char*	|find_byclass	|NN regexp * prog|NN const regnode *c|NN char *s|NN const char *strend|NULLOK regmatch_info *reginfo
Es	|void	|swap_match_buff|NN regexp * prog
a1217 6
ERs	|I32	|reg_check_named_buff_matched	|NN const regexp *rex|NN const regnode *prog
#  ifdef DEBUGGING
Es	|void	|dump_exec_pos	|NN const char *locinput|NN const regnode *scan|NN const char *loc_regeol\
				|NN const char *loc_bostr|NN const char *loc_reg_starttry|const bool do_utf8
Es	|void	|debug_start_match|NN const regexp *prog|const bool do_utf8|NN const char *start|NN const char *end|NN const char *blurb
#  endif
d1221 2
a1222 6
s	|CV*	|deb_curcv	|const I32 ix
s	|void	|debprof	|NN const OP *o
s	|void	|sequence	|NULLOK const OP *o
s	|void	|sequence_tail	|NULLOK const OP *o
s	|UV	|sequence_num	|NULLOK const OP *o
s	|SV*	|pm_description	|NN const PMOP *pm
d1226 1
a1226 9
s	|SV*	|save_scalar_at	|NN SV **sptr
#endif

#if defined(PERL_IN_GV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
po	|void	|sv_add_backref	|NN SV *tsv|NN SV *sv
#endif

#if defined(PERL_IN_HV_C) || defined(PERL_IN_MG_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
poM	|int	|sv_kill_backrefs	|NN SV *sv|NN AV *av
d1230 2
a1231 1
nsR	|char *	|uiv_2buf	|NN char *buf|IV iv|UV uv|int is_uv|NN char **peob
d1235 3
a1237 2
s	|void	|sv_del_backref	|NN SV *target|NN SV *ref
sR	|SV *	|varname	|NULLOK GV *gv|const char gvtype|PADOFFSET targ \
d1240 1
a1240 1
s	|void	|del_sv	|NN SV *p
d1243 1
a1243 1
s	|int	|sv_2iuv_non_preserve	|NN SV *sv|I32 numtype
d1247 2
a1248 14
sn	|STRLEN	|sv_pos_u2b_forwards|NN const U8 *const start \
		|NN const U8 *const send|STRLEN uoffset
sn	|STRLEN	|sv_pos_u2b_midway|NN const U8 *const start \
		|NN const U8 *send|STRLEN uoffset|STRLEN uend
s	|STRLEN	|sv_pos_u2b_cached|NN SV *sv|NN MAGIC **mgp \
		|NN const U8 *const start|NN const U8 *const send \
		|STRLEN uoffset|STRLEN uoffset0|STRLEN boffset0
s	|void	|utf8_mg_pos_cache_update|NN SV *sv|NN MAGIC **mgp \
		|STRLEN byte|STRLEN utf8|STRLEN blen
s	|STRLEN	|sv_pos_b2u_midway|NN const U8 *s|NN const U8 *const target \
		|NN const U8 *end|STRLEN endu
sn	|char *	|F0convert	|NV nv|NN char *endbuf|NN STRLEN *len
#  if defined(PERL_OLD_COPY_ON_WRITE)
sM	|void	|sv_release_COW	|NN SV *sv|NN const char *pvx|NN SV *after
d1250 10
a1259 6
s	|SV *	|more_sv
s	|void *	|more_bodies	|svtype sv_type
s	|bool	|sv_2iuv_common	|NN SV *sv
s	|void	|glob_assign_glob|NN SV *dstr|NN SV *sstr|const int dtype
s	|void	|glob_assign_ref|NN SV *dstr|NN SV *sstr
sRn	|PTR_TBL_ENT_t *|ptr_table_find|NN PTR_TBL_t *tbl|NN const void *sv
d1265 2
a1266 2
s	|char*	|force_version	|NN char *start|int guessing
s	|char*	|force_word	|NN char *start|int token|int check_keyword \
d1268 5
a1272 5
s	|SV*	|tokeq		|NN SV *sv
s	|void	|readpipe_override|
sR	|char*	|scan_const	|NN char *start
sR	|char*	|scan_formline	|NN char *s
sR	|char*	|scan_heredoc	|NN char *s
d1275 17
a1291 21
sR	|char*	|scan_inputsymbol|NN char *start
sR	|char*	|scan_pat	|NN char *start|I32 type
sR	|char*	|scan_str	|NN char *start|int keep_quoted|int keep_delims
sR	|char*	|scan_subst	|NN char *start
sR	|char*	|scan_trans	|NN char *start
s	|char*	|scan_word	|NN char *s|NN char *dest|STRLEN destlen \
				|int allow_package|NN STRLEN *slp
s	|void	|update_debugger_info|NULLOK SV *orig_sv \
				|NULLOK const char *buf|STRLEN len
sR	|char*	|skipspace	|NN char *s
sR	|char*	|swallow_bom	|NN U8 *s
s	|void	|checkcomma	|NN const char *s|NN const char *name \
				|NN const char *what
s	|bool	|feature_is_enabled|NN const char* name|STRLEN namelen
s	|void	|force_ident	|NN const char *s|int kind
s	|void	|incline	|NN const char *s
s	|int	|intuit_method	|NN char *s|NULLOK GV *gv|NULLOK CV *cv
s	|int	|intuit_more	|NN char *s
s	|I32	|lop		|I32 f|int x|NN char *s
rs	|void	|missingterm	|NULLOK char *s
s	|void	|no_op		|NN const char *what|NULLOK char *s
d1293 10
a1302 8
sR	|I32	|sublex_done
sR	|I32	|sublex_push
sR	|I32	|sublex_start
sR	|char *	|filter_gets	|NN SV *sv|NN PerlIO *fp|STRLEN append
sR	|HV *	|find_in_my_stash|NN const char *pkgname|I32 len
sR	|char *	|tokenize_use	|int is_use|NN char *s
s	|SV*	|new_constant	|NULLOK const char *s|STRLEN len|NN const char *key|NN SV *sv \
				|NULLOK SV *pv|NULLOK const char *type
d1304 1
d1306 4
d1311 1
a1311 6
s	|I32	|cr_textfilter	|int idx|NULLOK SV *sv|int maxlen
s	|void	|strip_return	|NN SV *sv
#  endif
#  if defined(DEBUGGING)
s	|int	|tokereport	|I32 rv
s	|void	|printbuf	|NN const char* fmt|NN const char* s
d1316 1
a1316 1
s	|bool|isa_lookup	|NULLOK HV *stash|NN const char * const name|NULLOK const HV * const name_stash
d1321 1
a1321 1
s	|char*	|stdize_locale	|NN char* locs
d1326 1
a1326 1
s	|const COP*|closest_cop	|NN const COP *cop|NULLOK const OP *o
a1327 5
s	|const char *|vdie_croak_common|NULLOK const char *pat|NULLOK va_list *args \
				|NULLOK STRLEN *msglen|NULLOK I32* utf8
s	|bool	|vdie_common	|NULLOK const char *message|STRLEN msglen\
				|I32 utf8|bool warn
sr	|char *	|write_no_mem
d1335 1
a1335 3
sRn	|STRLEN	|is_utf8_char_slow|NN const U8 *s|const STRLEN len
sR	|bool	|is_utf8_common	|NN const U8 *const p|NN SV **swash|NN const char * const swashname
sR	|SV*	|swash_get	|NN SV* swash|UV start|UV span
d1342 1
a1342 1
Apd	|void	|sv_catsv_flags	|NN SV* dsv|NULLOK SV* ssv|I32 flags
d1344 1
a1344 1
Apd	|char*	|sv_pvn_force_flags|NN SV* sv|NULLOK STRLEN* lp|I32 flags
d1348 2
a1349 3
Ap	|int	|my_dirfd	|NULLOK DIR* dir
#ifdef PERL_OLD_COPY_ON_WRITE
pMXE	|SV*	|sv_setsv_cow	|NN SV* dsv|NN SV* ssv
a1351 2
Aop	|const char *|PerlIO_context_layers|NULLOK const char *mode

d1353 24
a1376 24
Ap	|int	|PerlIO_close		|NULLOK PerlIO *f
Ap	|int	|PerlIO_fill		|NULLOK PerlIO *f
Ap	|int	|PerlIO_fileno		|NULLOK PerlIO *f
Ap	|int	|PerlIO_eof		|NULLOK PerlIO *f
Ap	|int	|PerlIO_error		|NULLOK PerlIO *f
Ap	|int	|PerlIO_flush		|NULLOK PerlIO *f
Ap	|void	|PerlIO_clearerr	|NULLOK PerlIO *f
Ap	|void	|PerlIO_set_cnt		|NULLOK PerlIO *f|int cnt
Ap	|void	|PerlIO_set_ptrcnt	|NULLOK PerlIO *f|NN STDCHAR *ptr|int cnt
Ap	|void	|PerlIO_setlinebuf	|NULLOK PerlIO *f
Ap	|SSize_t|PerlIO_read		|NULLOK PerlIO *f|NN void *buf|Size_t count
Ap	|SSize_t|PerlIO_write		|NULLOK PerlIO *f|NN const void *buf|Size_t count
Ap	|SSize_t|PerlIO_unread		|NULLOK PerlIO *f|NN const void *buf|Size_t count
Ap	|Off_t	|PerlIO_tell		|NULLOK PerlIO *f
Ap	|int	|PerlIO_seek		|NULLOK PerlIO *f|Off_t offset|int whence

Ap	|STDCHAR *|PerlIO_get_base	|NULLOK PerlIO *f
Ap	|STDCHAR *|PerlIO_get_ptr	|NULLOK PerlIO *f
ApR	|int	  |PerlIO_get_bufsiz	|NULLOK PerlIO *f
ApR	|int	  |PerlIO_get_cnt	|NULLOK PerlIO *f

ApR	|PerlIO *|PerlIO_stdin
ApR	|PerlIO *|PerlIO_stdout
ApR	|PerlIO *|PerlIO_stderr
d1381 1
a1381 1
s	|void	|deb_stack_n	|NN SV** stack_base|I32 stack_min \
d1386 1
a1386 1
pd	|void	|pad_undef	|NN CV* cv
d1388 3
a1390 2
				|NULLOK HV* typestash|NULLOK HV* ourstash|bool clone|bool state
pd	|PADOFFSET|pad_add_anon	|NN SV* sv|OPCODE op_type
d1397 2
a1398 2
pd 	|void	|do_dump_pad	|I32 level|NN PerlIO *file|NULLOK PADLIST *padlist|int full
pd	|void	|pad_fixup_inner_anons|NN PADLIST *padlist|NN CV *old_cv|NN CV *new_cv
d1400 1
a1400 1
pdX	|void	|pad_push	|NN PADLIST *padlist|int depth
d1404 3
a1406 3
sd	|PADOFFSET|pad_findlex	|NN const char *name|NN const CV* cv|U32 seq|int warn \
				|NULLOK SV** out_capture|NN SV** out_name_sv \
				|NN int *out_flags
d1411 1
a1411 1
ApdR	|CV*	|find_runcv	|NULLOK U32 *db_seqp
d1414 1
a1414 1
pR	|int	|get_debug_opts	|NN const char **s|bool givehelp
d1416 1
a1416 1
Ap	|void	|save_set_svflags|NULLOK SV* sv|U32 mask|U32 val
d1423 2
a1424 6
Apo	|void	|hv_eiter_set	|NN HV* hv|NULLOK HE* eiter
Ap	|void	|hv_name_set	|NN HV* hv|NULLOK const char *name|U32 len|U32 flags
poM	|AV**	|hv_backreferences_p	|NN HV* hv
#if defined(PERL_IN_DUMP_C) || defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
poM	|void	|hv_kill_backrefs	|NN HV* hv
#endif
d1431 2
a1432 5

#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
s	|SV *	|find_hash_subscript|NULLOK HV *hv|NN SV *val
s	|I32	|find_array_subscript|NULLOK AV *av|NN SV *val
sMd	|SV*	|find_uninit_var|NULLOK OP* obase|NULLOK SV* uninit_sv|bool top
d1509 1
a1509 1
np	|void	|my_swabn	|NN void* ptr|int n
d1511 3
a1513 3
Ap	|GV*	|gv_fetchpvn_flags|NN const char* name|STRLEN len|I32 flags|I32 sv_type
Ap	|GV*	|gv_fetchsv|NN SV *name|I32 flags|I32 sv_type
dpR	|bool	|is_gv_magical_sv|NN SV *name|U32 flags
a1515 106

#ifdef DEBUG_LEAKING_SCALARS_FORK_DUMP
p	|void	|dump_sv_child	|NN SV *sv
#endif

#ifdef PERL_DONT_CREATE_GVSV
Ap	|GV*	|gv_SVadd	|NN GV* gv
#endif
Apo	|bool	|ckwarn		|U32 w
Apo	|bool	|ckwarn_d	|U32 w
XEopMa	|STRLEN *|new_warnings_bitfield|NULLOK STRLEN *buffer \
				|NN const char *const bits|STRLEN size

p	|void	|offer_nice_chunk	|NN void *chunk|U32 chunk_size

#ifndef SPRINTF_RETURNS_STRLEN
Apnod	|int	|my_sprintf	|NN char *buffer|NN const char *pat|...
#endif

Apnodf	|int	|my_snprintf	|NN char *buffer|const Size_t len|NN const char *format|...
Apnod	|int	|my_vsnprintf	|NN char *buffer|const Size_t len|NN const char *format|va_list ap

px	|void	|my_clearenv

#ifdef PERL_IMPLICIT_CONTEXT
#ifdef PERL_GLOBAL_STRUCT_PRIVATE
Apo	|void*	|my_cxt_init	|NN const char *my_cxt_key|size_t size
Apo	|int	|my_cxt_index	|NN const char *my_cxt_key
#else
Apo	|void*	|my_cxt_init	|NN int *index|size_t size
#endif
#endif

#ifndef HAS_STRLCAT
Apno	|Size_t	|my_strlcat	|NULLOK char *dst|NULLOK const char *src|Size_t size
#endif

#ifndef HAS_STRLCPY
Apno     |Size_t |my_strlcpy     |NULLOK char *dst|NULLOK const char *src|Size_t size
#endif

#ifdef PERL_MAD
Mnp	|void	|pad_peg	|NN const char* s
#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
sf	|void	|xmldump_attr	|I32 level|NN PerlIO *file|NN const char* pat \
				|...
#endif
Mfp	|void	|xmldump_indent	|I32 level|NN PerlIO *file|NN const char* pat \
				|...
Mp	|void	|xmldump_vindent|I32 level|NN PerlIO *file|NN const char* pat \
				|NULLOK va_list *args
Mp	|void	|xmldump_all
Mp	|void	|xmldump_packsubs	|NN const HV* stash
Mp	|void	|xmldump_sub	|NN const GV* gv
Mp	|void	|xmldump_form	|NN const GV* gv
Mp	|void	|xmldump_eval
Mp	|char*	|sv_catxmlsv	|NN SV *dsv|NN SV *ssv
Mp	|char*	|sv_catxmlpvn	|NN SV *dsv|NN const char *pv|STRLEN len|int utf8
Mp	|char*	|sv_xmlpeek	|NN SV* sv
Mp	|void	|do_pmop_xmldump|I32 level|NN PerlIO *file \
				|NULLOK const PMOP *pm
Mp	|void	|pmop_xmldump	|NULLOK const PMOP* pm
Mp	|void	|do_op_xmldump	|I32 level|NN PerlIO *file|NULLOK const OP *o
Mp	|void	|op_xmldump	|NN const OP* arg

Mp	|TOKEN*	|newTOKEN	|I32 optype|YYSTYPE lval \
				|NULLOK MADPROP* madprop
Mp	|void	|token_free	|NN TOKEN* arg
Mp	|void	|token_getmad	|NN TOKEN* arg|NULLOK OP* o|char slot
Mp	|void	|op_getmad_weak	|NULLOK OP* from|NULLOK OP* o|char slot
Mp	|void	|op_getmad	|NULLOK OP* from|NULLOK OP* o|char slot
Mp	|void	|prepend_madprops|NULLOK MADPROP* mp|NULLOK OP* o|char slot
Mp	|void	|append_madprops|NULLOK MADPROP* tm|NULLOK OP* o|char slot
Mp	|void	|addmad		|NULLOK MADPROP* tm|NULLOK MADPROP** root \
				|char slot
Mp	|MADPROP*|newMADsv	|char key|NN SV* sv
Mp	|MADPROP*|newMADPROP	|char key|char type|NULLOK void* val|I32 vlen
Mp	|void	|mad_free	|NULLOK MADPROP* mp

#  if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
s	|char*	|skipspace0	|NN char *s
s	|char*	|skipspace1	|NN char *s
s	|char*	|skipspace2	|NN char *s|NULLOK SV **sv
s	|void	|start_force	|int where
s	|void	|curmad		|char slot|NULLOK SV *sv
#  endif
Mp	|int	|madlex
Mp	|int	|madparse
#endif
#if !defined(HAS_SIGNBIT)
AMdnoP	|int	|Perl_signbit	|NV f
#endif

XEMop	|void	|emulate_cop_io	|NN const COP *const c|NN SV *const sv
XEMop	|REGEXP *|get_re_arg|NULLOK SV *sv

p	|struct mro_meta*	|mro_meta_init	|NN HV* stash
#if defined(USE_ITHREADS)
p	|struct mro_meta*	|mro_meta_dup	|NN struct mro_meta* smeta|NN CLONE_PARAMS* param
#endif
Apd	|AV*	|mro_get_linear_isa|NN HV* stash
Apd	|AV*	|mro_get_linear_isa_c3|NN HV* stash|I32 level
Apd	|AV*	|mro_get_linear_isa_dfs|NN HV* stash|I32 level
pd	|void   |mro_isa_changed_in|NN HV* stash
Apd	|void	|mro_method_changed_in	|NN HV* stash
p	|void   |boot_core_mro
@


