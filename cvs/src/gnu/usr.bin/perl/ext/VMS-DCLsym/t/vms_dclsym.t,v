head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.2.0.14
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.16
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.10
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.12
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.4
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.8
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.48.49;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.49;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.08.47;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@print "1..15\n";

require VMS::DCLsym or die "failed 1\n";
print "ok 1\n";

tie %syms, VMS::DCLsym or die "failed 2\n";
print "ok 2\n";

$name = 'FOO_'.time();
$syms{$name} = 'Perl_test';
print +($! ? "(\$! = $!) not " : ''),"ok 3\n";

print +($syms{$name} eq 'Perl_test' ? '' : 'not '),"ok 4\n";

($val) = `Show Symbol $name` =~ /(\w+)"$/;
print +($val eq 'Perl_test' ? '' : 'not '),"ok 5\n";

while (($sym,$val) = each %syms) {
  last if $sym eq $name && $val eq 'Perl_test';
}
print +($sym ? '' : 'not '),"ok 6\n";

delete $syms{$name};
print +($! ? "(\$! = $!) not " : ''),"ok 7\n";

print +(defined($syms{$name}) ? 'not ' : ''),"ok 8\n";
undef %syms;

$obj = new VMS::DCLsym 'GLOBAL';
print +($obj ? '' : 'not '),"ok 9\n";

print +($obj->clearcache(0) ? '' : 'not '),"ok 10\n";
print +($obj->clearcache(1) ? 'not ' : ''),"ok 11\n";

print +($obj->setsym($name,'Another_test') ? '' : 'not '),"ok 12\n";

($val,$tab) = $obj->getsym($name);
print +($val eq 'Another_test' && $tab eq 'GLOBAL' ? '' : 'not '),"ok 13\n";

print +($obj->delsym($name,'LOCAL') ? 'not ' : ''),"ok 14\n";
print +($obj->delsym($name,'GLOBAL') ? '' : 'not '),"ok 15\n";
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d1 1
a1 1
print "1..30\n";
d3 1
a3 1
require VMS::DCLsym or die "not ok 1\n";
d6 1
a6 1
tie %syms, VMS::DCLsym or die "not ok 2\n";
d11 1
a11 1
print +($! ? "#(\$! = $!)\nnot " : ''),"ok 3\n";
d24 1
a24 1
print +($! ? "#(\$! = $!)\nnot " : ''),"ok 7\n";
d27 1
a41 35

($val,$tab) = $obj->getsym($name);
print +(defined($val) || defined($tab) ? 'not ' : ''),"ok 16\n";

($val) = `Show Symbol/Global $name` =~ /==\s+"(\w+)"$/;
print +(defined($val) ? 'not ' : ''),"ok 17\n";

tie %gsyms, VMS::DCLsym, 'GLOBAL' or die "not ok 18\n";
print "ok 18\n";

print +(tied(%gsyms) =~ /^VMS::DCLsym/ ? '' : 'not '),"ok 19\n";
print +(exists $gsyms{$name} ? 'not ' : ''),"ok 20\n";

$gsyms{$name} = 'Perl_test';
print +($! ? "#(\$! = $!)\nnot " : ''),"ok 21\n";

print +($gsyms{$name} eq 'Perl_test' ? '' : 'not '),"ok 22\n";

($val) = `Show Symbol/Global $name` =~ /==\s+"(\w+)"$/;
print +($val eq 'Perl_test' ? '' : 'not '),"ok 23\n";

delete $gsyms{$name};
print +($! ? "#(\$! = $!)\nnot " : ''),"ok 24\n";

($val,$tab) = $obj->getsym($name);
print +(defined($val) || defined($tab) ? 'not ' : ''),"ok 25\n";

($val) = `Show Symbol/Global $name` =~ /==\s+"(\w+)"$/;
print +($val eq 'Perl_test' ? 'not ' : ''),"ok 26\n";

print +($syms{':LOCAL'} ?  '' : 'not '),"ok 27\n";
print +($syms{':GLOBAL'} ? 'not ' : ''),"ok 28\n";

print +($gsyms{':LOCAL'} ?  'not ' : ''),"ok 29\n";
print +($gsyms{':GLOBAL'} ? '' : 'not '),"ok 30\n";
@

