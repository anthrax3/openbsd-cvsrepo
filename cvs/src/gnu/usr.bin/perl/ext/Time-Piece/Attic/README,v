head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.30;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.12;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.12;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@Time::Piece
===========

This module supercedes Time::Object (and has a better name).

At this time the module is almost identical to Time::Object, with
the exception of strptime support. People using Time::Object should
migrate over to Time::Piece as they are able to do so. No further
development will occur to Time::Object.

DESCRIPTION

Have you ever thought you time was thoroughly wasted by doing:

  $ perldoc -f localtime

just to recall the position of wday or some other item in the returned
list of values from localtime (or gmtime) ?

Well Time::Piece is the answer to your prayers.

Time::Piece does the right thing with the return value from localtime:

  - in list context it returns a list of values

  - in scalar context it returns a Time::Piece object

  - when stringified (or printed), Time::Piece objects look like
    the output from scalar(localtime)

Beyond that, Time::Piece objects allow you to get any part of the
date/time via method calls, plus they allow you to get at the string
form of the week day and month. It has methods for julian days, and
some simple date arithmetic options.

Time::Piece also gives you easy access to your C library's strftime
and strptime functions, so you can parse and output locale sensitive
dates to your heart's content :-)

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
