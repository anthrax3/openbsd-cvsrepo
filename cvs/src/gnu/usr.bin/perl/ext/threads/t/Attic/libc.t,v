head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.4.0.4
	OPENBSD_4_8_BASE:1.1.1.4
	OPENBSD_4_7:1.1.1.4.0.2
	OPENBSD_4_7_BASE:1.1.1.4
	PERL_5_10_1:1.1.1.4
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.20
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.18
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.16
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.14
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.12
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.10
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.8
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.6
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.4
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.31;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.43.54;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.26;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.10.12.18.11.18;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@
BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require Config; import Config;
    unless ($Config{'useithreads'}) {
        print "1..0 # Skip: no useithreads\n";
        exit 0;
    }
}

use ExtUtils::testlib;
use strict;
BEGIN { $| = 1; print "1..11\n"};

use threads;
use threads::shared;
my $i = 10;
my $y = 20000;
my %localtime;
for(0..$i) {
	$localtime{$_} = localtime($_);
};
my $mutex = 1;
share($mutex);
sub localtime_r {
#  print "Waiting for lock\n";
  lock($mutex);
#  print "foo\n";
  my $retval = localtime(shift());
#  unlock($mutex);
  return $retval;
}
my @@threads;
for(0..$i) {
  my $thread = threads->create(sub {
				 my $arg = $_;
		    my $localtime = $localtime{$arg};
		    my $error = 0;
		    for(0..$y) {
		      my $lt = localtime($arg);
		      if($localtime ne $lt) {
			$error++;
		      }	
		    }
				 lock($mutex);
				 if($error) {
				   print "not ok $mutex # not a safe localtime\n";
				 } else {
				   print "ok $mutex\n";
				 }
				 $mutex++;
		  });	
  push @@threads, $thread;
}

for(@@threads) {
  $_->join();
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d4 1
a4 1
    push @@INC, '../lib';
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@a0 2
use strict;
use warnings;
d3 6
a8 10
    if ($ENV{'PERL_CORE'}){
        chdir 't';
        unshift @@INC, '../lib';
    }

    require($ENV{PERL_CORE} ? "./test.pl" : "./t/test.pl");

    use Config;
    if (! $Config{'useithreads'}) {
        skip_all(q/Perl not compiled with 'useithreads'/);
a9 2

    plan(11);
d13 2
d16 2
a17 4
use_ok('threads');

### Start of Testing ###

a19 1

d21 2
a22 2
for (1..$i) {
    $localtime{$_} = localtime($_);
d24 10
a33 1

d35 20
a54 13
for (1..$i) {
    $threads[$_] = threads->create(sub {
                        my $arg = shift;
                        my $localtime = $localtime{$arg};
                        my $error = 0;
                        for (1..$y) {
                            my $lt = localtime($arg);
                            if ($localtime ne $lt) {
                                $error++;
                            }
                        }
                        return $error;
                    }, $_);
d57 2
a58 2
for (1..$i) {
    is($threads[$_]->join(), 0, 'localtime() thread-safe');
a60 1
# EOF
@


1.1.1.4
log
@import perl 5.10.1
@
text
@a53 2
exit(0);

@


