head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.4.0.4
	OPENBSD_4_8_BASE:1.1.1.4
	OPENBSD_4_7:1.1.1.4.0.2
	OPENBSD_4_7_BASE:1.1.1.4
	PERL_5_10_1:1.1.1.4
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.20
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.18
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.16
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.14
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.12
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.10
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.8
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.6
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.4
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.32;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.43.54;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.26;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.10.12.18.11.18;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    require Config; import Config;
    unless ($Config{'useithreads'}) {
	print "1..0 # Skip: no useithreads\n";
 	exit 0;	
    }
}

use ExtUtils::testlib;
use strict;
BEGIN { print "1..64\n" };
use threads;


print "ok 1\n";




sub ok {	
    my ($id, $ok, $name) = @@_;
    
    # You have to do it this way or VMS will get confused.
    print $ok ? "ok $id - $name\n" : "not ok $id - $name\n";

    printf "# Failed test at line %d\n", (caller)[2] unless $ok;
    
    return $ok;
}


ok(2,1,"");

sub test9 {
  my $s = "abcd" x (1000 + $_[0]);
  my $t = '';
  while ($s =~ /(.)/g) { $t .= $1 }
  print "not ok $_[0]\n" if $s ne $t;
}
my @@threads;
for(3..33) {
  ok($_,1,"Multiple thread test");
  push @@threads ,threads->create('test9',$_);
}

my $i = 34;
for(@@threads) {
  $_->join;
  ok($i++,1,"Thread joined");
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d3 1
a3 1
    push @@INC, '../lib';
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@a0 3
use strict;
use warnings;

d2 6
a7 8
    if ($ENV{'PERL_CORE'}){
        chdir 't';
        unshift @@INC, '../lib';
    }
    use Config;
    if (! $Config{'useithreads'}) {
        print("1..0 # Skip: Perl not compiled with 'useithreads'\n");
        exit(0);
d12 7
a19 4
my $test = 0;
sub ok {
    my ($ok, $name) = @@_;
    $test++;
d21 4
d26 1
a26 6
    if ($ok) {
        print("ok $test - $name\n");
    } else {
        print("not ok $test - $name\n");
        printf("# Failed test at line %d\n", (caller)[2]);
    }
d28 3
a30 1
    return ($ok);
a32 4
BEGIN {
    $| = 1;
    print("1..61\n");   ### Number of tests that will be run ###
};
d34 1
a34 2
use threads;
ok(1, 'Loaded');
d36 5
a40 9
### Start of Testing ###

my $cnt = 30;

sub stress_re {
    my $s = "abcd" x (1000 + $_[0]);
    my $t = '';
    while ($s =~ /(.)/g) { $t .= $1 }
    return ($s eq $t) ? 'ok' : 'not';
a41 1

d43 3
a45 4
for (1..$cnt) {
    my $thr = threads->create('stress_re', $_);
    ok($thr, "Thread created - iter $_");
    push(@@threads, $thr);
d48 4
a51 5
for (1..$cnt) {
    my ($result, $thr);
    $thr = $threads[$_-1];
    $result = $thr->join if $thr;
    ok($thr && defined($result) && ($result eq 'ok'), "Thread joined - iter $_");
a53 1
# EOF
@


1.1.1.4
log
@import perl 5.10.1
@
text
@d11 1
a11 1
        print("1..0 # SKIP Perl not compiled with 'useithreads'\n");
a65 2

exit(0);
@


