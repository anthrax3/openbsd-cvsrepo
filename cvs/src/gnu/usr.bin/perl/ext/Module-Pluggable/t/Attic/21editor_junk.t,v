head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.26;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.10;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.10;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl -w

use Test::More;
use FindBin;
use lib (($FindBin::Bin."/lib")=~/^(.*)$/);
use Module::Pluggable::Object;
use File::Spec::Functions qw(catfile);

my ($dodgy_file) = (catfile($FindBin::Bin,"lib", "EditorJunk", "Plugin", "#Bar.pm#")=~/^(.*)$/);
unless (-f $dodgy_file) {
        plan skip_all => "Can't handle plugin names with octothorpes\n";
} else {
        plan tests => 4;
}



my $foo;
ok($foo = EditorJunk->new());

my @@plugins;
my @@expected = qw(EditorJunk::Plugin::Bar EditorJunk::Plugin::Foo);
ok(@@plugins = sort $foo->plugins);

is_deeply(\@@plugins, \@@expected, "is deeply");


my $mpo = Module::Pluggable::Object->new(
    package             => 'EditorJunk',
    filename            => __FILE__,
    include_editor_junk => 1,
);

@@expected = ('EditorJunk::Plugin::.#Bar', 'EditorJunk::Plugin::Bar', 'EditorJunk::Plugin::Foo');
@@plugins = sort $mpo->plugins();
is_deeply(\@@plugins, \@@expected, "is deeply");



package EditorJunk;

use strict;
use Module::Pluggable;


sub new {
    my $class = shift;
    return bless {}, $class;

}
1;


@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
