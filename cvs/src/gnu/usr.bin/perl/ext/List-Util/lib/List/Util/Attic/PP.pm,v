head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.25;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.14;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.14;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@# List::Util::PP.pm
#
# Copyright (c) 1997-2009 Graham Barr <gbarr@@pobox.com>. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.

package List::Util::PP;

use strict;
use warnings;
use vars qw(@@ISA @@EXPORT $VERSION $a $b);
require Exporter;

@@ISA     = qw(Exporter);
@@EXPORT  = qw(first min max minstr maxstr reduce sum shuffle);
$VERSION = "1.21";
$VERSION = eval $VERSION;

sub reduce (&@@) {
  my $code = shift;
  unless(ref($code)) {
    require Carp;
    Carp::croak("Not a subroutine reference");
  }
  no strict 'refs';

  return shift unless @@_ > 1;

  use vars qw($a $b);

  my $caller = caller;
  local(*{$caller."::a"}) = \my $a;
  local(*{$caller."::b"}) = \my $b;

  $a = shift;
  foreach (@@_) {
    $b = $_;
    $a = &{$code}();
  }

  $a;
}

sub first (&@@) {
  my $code = shift;

  foreach (@@_) {
    return $_ if &{$code}();
  }

  undef;
}


sub sum (@@) { reduce { $a + $b } @@_ }

sub min (@@) { reduce { $a < $b ? $a : $b } @@_ }

sub max (@@) { reduce { $a > $b ? $a : $b } @@_ }

sub minstr (@@) { reduce { $a lt $b ? $a : $b } @@_ }

sub maxstr (@@) { reduce { $a gt $b ? $a : $b } @@_ }

sub shuffle (@@) {
  my @@a=\(@@_);
  my $n;
  my $i=@@_;
  map {
    $n = rand($i--);
    (${$a[$n]}, $a[$n] = $a[$i])[0];
  } @@_;
}

1;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
