head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.32;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.12;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.12;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@use strict;
use warnings;

use Test;
plan tests => 31;

use threads::shared;

### Start of Testing ###

# Make sure threads are really off
ok( !$INC{"threads.pm"} );

# Check each faked function.
foreach my $func (qw(share cond_wait cond_signal cond_broadcast)) {
    ok( my $func_ref = __PACKAGE__->can($func) ? 1 : 0 );

    eval qq{$func()};
    ok( $@@, qr/^Not enough arguments / );

    my %hash = (foo => 42, bar => 23);
    eval qq{$func(\%hash)};
    ok( $@@, '' );
    ok( $hash{foo}, 42 );
    ok( $hash{bar}, 23 );
}

# These all have no return value.
foreach my $func (qw(cond_wait cond_signal cond_broadcast)) {
    my @@array = qw(1 2 3 4);
    ok( eval qq{$func(\@@array)}, undef );
    ok( "@@array", "1 2 3 4" );
}

# share() is supposed to return back it's argument as a ref.
{
    my @@array = qw(1 2 3 4);
    ok( share(@@array), \@@array );
    ok( ref &share({}), 'HASH' );
    ok( "@@array", "1 2 3 4" );
}

# lock() should be a no-op.  The return value is currently undefined.
{
    my @@array = qw(1 2 3 4);
    lock(@@array);
    ok( "@@array", "1 2 3 4" );
}

exit(0);

# EOF
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
