head	1.2;
access;
symbols
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.10
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.8
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.6
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.4
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.2
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2009.10.12.18.24.31;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.55;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.55;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.03.28.18.48.17;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.22;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge in perl 5.10.1
@
text
@#!./perl

BEGIN {
    unless (-d 'blib') {
	chdir 't' if -d 't';
	@@INC = '../lib';
	require Config; import Config;
	keys %Config; # Silence warning
	if ($Config{extensions} !~ /\bList\/Util\b/) {
	    print "1..0 # Skip: List::Util was not built\n";
	    exit 0;
	}
    }
}

use Scalar::Util qw(readonly);


print "1..9\n";

print "not " unless readonly(1);
print "ok 1\n";

my $var = 2;

print "not " if readonly($var);
print "ok 2\n";

print "not " unless $var == 2;
print "ok 3\n";

print "not " unless readonly("fred");
print "ok 4\n";

$var = "fred";

print "not " if readonly($var);
print "ok 5\n";

print "not " unless $var eq "fred";
print "ok 6\n";

$var = \2;

print "not " if readonly($var);
print "ok 7\n";

print "not " unless readonly($$var);
print "ok 8\n";

print "not " if readonly(*STDOUT);
print "ok 9\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.8 import
@
text
@a16 1
use Test::More tests => 9;
d18 5
a22 1
ok( readonly(1),	'number constant');
d26 5
a30 2
ok( !readonly($var),	'number variable');
is( $var,	2,	'no change to number variable');
d32 2
a33 1
ok( readonly("fred"),	'string constant');
d37 5
a41 2
ok( !readonly($var),	'string variable');
is( $var,	'fred',	'no change to string variable');
d45 5
a49 2
ok( !readonly($var),	'reference to constant');
ok( readonly($$var),	'de-reference to constant');
d51 2
a52 1
ok( !readonly(*STDOUT),	'glob');
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@d17 1
a17 1
use Test::More tests => 11;
a38 13

sub try
{
    my $v = \$_[0];
    return readonly $$v;
}

$var = 123;
{
    local $TODO = $Config::Config{useithreads} ? "doesn't work with threads" : undef;
    ok( try ("abc"), 'reference a constant in a sub');
}
ok( !try ($var), 'reference a non-constant in a sub');
@


