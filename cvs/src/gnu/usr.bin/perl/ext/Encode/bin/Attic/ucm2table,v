head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.3.0.8
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.4
	OPENBSD_4_7_BASE:1.1.1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.18
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.16
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.14
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.12
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.10
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.8
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.6
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.4
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.2
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.19;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.54;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.54;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.08.09.17.45.59;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.17;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl
# $Id: ucm2table,v 1.2 2002/04/30 16:13:37 dankogai Exp $
#

use 5.006;
use strict;
use Getopt::Std;
my %Opt;
getopts("aeu", \%Opt);
my %Chartab;

my $Hex = '[0-9A-Fa-f]';
while(<>){
	chomp;
	my ($uni, $enc, $fb) = 
	    /^<U($Hex+)>\s+(\S+)\s+\|(\d)/o or next;
	$fb eq '0' or next;
	my @@byte = ();
	my $ord = 0;
	while($enc =~ /\G\\x($Hex+)/iog){
	    my $byte = hex($1);
	    push @@byte, $byte;
	    $ord <<= 8; $ord += $byte;
	};
	# print join('', @@byte), " => $ord \n";
	if ($Opt{u}){
	    $Chartab{$ord} = pack("U", hex($uni));
	}else{
	    $Chartab{$ord} = pack("C*", @@byte);
	}
}

my $start = $Opt{a} ? 0x20 : 0xa0;

for (my $x = $start; $x <= 0xffff; $x += 32) {
    my $line =  '';
    for my $i (0..31){
	my $num = $x+$i; $num eq 0x7f and next; # skip delete
	my $char = $Chartab{$num};
	$line .= !$char ? " " : 
	    ($num < 0x7f ) ? " $char" : $char ;
    }
    $line =~ /^\s+$/o and next;
    printf "0x%04x: $line\n", $x;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@Import of stock perl 5.8.5
@
text
@d2 1
a2 1
# $Id: ucm2table,v 2.0 2004/05/16 20:55:16 dankogai Exp $
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@d2 1
a2 1
# $Id: ucm2table,v 2.1 2006/05/03 18:24:10 dankogai Exp $
d14 17
a30 17
    chomp;
    my ($uni, $enc, $fb) = 
        /^<U($Hex+)>\s+(\S+)\s+\|(\d)/o or next;
    $fb eq '0' or next;
    my @@byte = ();
    my $ord = 0;
    while($enc =~ /\G\\x($Hex+)/iog){
        my $byte = hex($1);
        push @@byte, $byte;
        $ord <<= 8; $ord += $byte;
    };
    # print join('', @@byte), " => $ord \n";
    if ($Opt{u}){
        $Chartab{$ord} = pack("U", hex($uni));
    }else{
        $Chartab{$ord} = pack("C*", @@byte);
    }
d38 4
a41 4
    my $num = $x+$i; $num eq 0x7f and next; # skip delete
    my $char = $Chartab{$num};
    $line .= !$char ? " " : 
        ($num < 0x7f ) ? " $char" : $char ;
@


