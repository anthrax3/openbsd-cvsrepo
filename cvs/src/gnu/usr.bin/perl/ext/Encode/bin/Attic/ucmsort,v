head	1.6;
access;
symbols
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	PERL_5_10_1:1.1.1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	PERL_5_10_0:1.1.1.4
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	PERL_5_8_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2010.09.24.14.59.19;	author millert;	state dead;
branches;
next	1.5;

1.5
date	2009.10.12.18.24.28;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.29.17.36.04;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.15.21.30.26;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.03.03.02.28;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.03.02.43.43;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.03.02.43.43;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.08.09.17.45.59;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.01.15.21.16.47;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.29.17.18.17;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/local/bin/perl
#
# $Id: ucmsort,v 1.5 2009/10/12 18:24:28 millert Exp $
#
use strict;
my @@lines;
my ($head, $tail);
while (<>){
    unless (m/^<U/o){
        unless(@@lines){
        $head .= $_;
    }else{ 
        $tail .= $_;
    }
    next;
    }
    chomp;
    my @@words = split;
    my $u = shift @@words;
    $u =~ s/^<U//o; $u =~ s/>.*//o;
    push @@lines,[ $u, @@words ];
}

print $head;
for (sort {
    hex($a->[0]) <=> hex($b->[0]) # Unicode descending order
    or $a->[2] cmp $b->[2] # fallback descending order
    or $a->[1] cmp $b->[1] # Encoding descending order
    }
     @@lines) {
    my $u = shift @@$_;
    print join(" " => "<U$u>", @@$_), "\n";
}
print $tail;
__END__
@


1.5
log
@Merge in perl 5.10.1
@
text
@d3 1
a3 1
# $Id: ucmsort,v 2.2 2006/05/03 18:24:10 dankogai Exp $
@


1.4
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@@


1.3
log
@sync in-tree perl with 5.8.6
@
text
@d3 1
a3 1
# $Id: ucmsort,v 1.2 2003/12/03 03:02:28 millert Exp $
d11 5
a15 5
	    $head .= $_;
	}else{ 
	    $tail .= $_;
	}
	next;
d27 2
a28 2
	or $a->[2] cmp $b->[2] # fallback descending order
	or $a->[1] cmp $b->[1] # Encoding descending order
@


1.2
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d3 1
a3 1
# $Id: ucmsort,v 0.1 2002/10/18 16:08:28 dankogai Exp $
d18 4
a21 1
    push @@lines,[ split ];
d26 1
a26 1
    $a->[0] cmp $b->[0] # Unicode descending order
d28 5
a32 4
	    or $a->[1] cmp $b->[1] # Encoding descending order
	}
	      @@lines) {
    print join(" " => @@$_), "\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.2 from CPAN
@
text
@@


1.1.1.2
log
@Import of stock perl 5.8.5
@
text
@d3 1
a3 1
# $Id: ucmsort,v 1.2 2003/12/03 03:02:28 millert Exp $
@


1.1.1.3
log
@perl 5.8.6 from CPAN
@
text
@d3 1
a3 1
# $Id: ucmsort,v 2.1 2004/08/31 10:55:34 dankogai Exp $
d18 1
a18 4
    my @@words = split;
    my $u = shift @@words;
    $u =~ s/^<U//o; $u =~ s/>.*//o;
    push @@lines,[ $u, @@words ];
d23 1
a23 1
    hex($a->[0]) <=> hex($b->[0]) # Unicode descending order
d25 4
a28 5
	or $a->[1] cmp $b->[1] # Encoding descending order
    }
     @@lines) {
    my $u = shift @@$_;
    print join(" " => "<U$u>", @@$_), "\n";
@


1.1.1.4
log
@import perl 5.10.0 from CPAN
@
text
@d3 1
a3 1
# $Id: ucmsort,v 2.2 2006/05/03 18:24:10 dankogai Exp $
d11 5
a15 5
        $head .= $_;
    }else{ 
        $tail .= $_;
    }
    next;
d27 2
a28 2
    or $a->[2] cmp $b->[2] # fallback descending order
    or $a->[1] cmp $b->[1] # Encoding descending order
@


