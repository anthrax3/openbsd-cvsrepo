head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.5.0.4
	OPENBSD_4_8_BASE:1.1.1.5
	OPENBSD_4_7:1.1.1.5.0.2
	OPENBSD_4_7_BASE:1.1.1.5
	PERL_5_10_1:1.1.1.5
	OPENBSD_4_6:1.1.1.4.0.6
	OPENBSD_4_6_BASE:1.1.1.4
	OPENBSD_4_5:1.1.1.4.0.2
	OPENBSD_4_5_BASE:1.1.1.4
	PERL_5_10_0:1.1.1.4
	OPENBSD_4_4:1.1.1.3.0.16
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.14
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.12
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.10
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.8
	OPENBSD_4_0_BASE:1.1.1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.1.1.3.0.6
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.4
	OPENBSD_3_8_BASE:1.1.1.3
	OPENBSD_3_7:1.1.1.3.0.2
	OPENBSD_3_7_BASE:1.1.1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.1.1.2.0.4
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.18;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.54;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.54;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.43.43;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.01.15.21.16.47;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.29.17.18.16;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2009.10.12.18.11.15;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@use 5.007003;
use ExtUtils::MakeMaker;

# Just for sure :)
unless($ENV{PERL_CORE}) {
    $ENV{PERL_CORE} = 1 if ($^X =~ m{\bminiperl[^/\\\]>:]*$}o);
}

my %tables = 
    (
     def_t => ['ascii.ucm',
	       '8859-1.ucm',
	       'null.ucm',
	       'ctrl.ucm',
	       ]
     );

my @@exe_files = qw(bin/enc2xs
		   bin/piconv
		   );
my @@more_exe_files = qw(
			unidump
			);
my @@pmlibdirs = qw(lib Encode);
for my $arg (@@ARGV){
    if ($arg eq "MORE_SCRIPTS"){
	push @@exe_files, @@more_exe_files;
    }
    if ($arg eq "INSTALL_UCM"){
	push @@pmlibdirs, "ucm";
    }
}

WriteMakefile(
	      NAME		=> "Encode",
	      EXE_FILES         => \@@exe_files,
	      VERSION_FROM	=> 'Encode.pm',
	      OBJECT		=> '$(O_FILES)',
	      'dist'		=> {
		  COMPRESS	=> 'gzip -9f',
		  SUFFIX	=> 'gz',
		  DIST_DEFAULT => 'all tardist',
	      },
	      MAN3PODS	=> {},
	      INC       => "-I./Encode",
	      PMLIBDIRS => \@@pmlibdirs,
	      INSTALLDIRS => 'perl',
	      );

package MY;


sub post_initialize
{
    my ($self) = @@_;
    my %o;
    # Find existing O_FILES
    foreach my $f (@@{$self->{'O_FILES'}})
    {
	$o{$f} = 1;
    }
    my $x = $self->{'OBJ_EXT'};
    # Add the table O_FILES
    foreach my $e (keys %tables)
    {
	$o{$e.$x} = 1;
    }
    # Trick case-blind filesystems.
    delete $o{'encode'.$x};
    $o{'Encode'.$x} = 1;
    # Reset the variable
    $self->{'O_FILES'} = [sort keys %o];
    my @@files;
    foreach my $table (keys %tables)
    {
	foreach my $ext (qw($(OBJ_EXT) .c .h .exh .fnm))
    {
	push (@@files,$table.$ext);
    }
    $self->{SOURCE} .= " $table.c"
	if $^O eq 'MacOS' && $self->{SOURCE} !~ /\b$table\.c\b/;
}
$self->{'clean'}{'FILES'} .= join(' ',@@files);
return '';
}

sub postamble
{
    my $self = shift;
    my $dir  = $self->catdir($self->curdir,'ucm');
    my $str  = "# Encode\$(OBJ_EXT) depends on .h and .exh files not .c files - but all written by enc2xs\n";
    $str  .= $^O eq 'MacOS' ? 'Encode.c.{$(MACPERL_BUILD_EXT_STATIC)}.o :' : 'Encode$(OBJ_EXT) :';
    foreach my $table (keys %tables)
    {
	$str .= " $table.c";
    }
    $str .= "\n\n";
    foreach my $table (keys %tables)
    {
	my $numlines = 1;
	my $lengthsofar = length($str);
	my $continuator = '';
	my $enc2xs = $self->catfile('bin', 'enc2xs');
	$str .= "$table.c : $enc2xs Makefile.PL";
	foreach my $file (@@{$tables{$table}})
	{
	    $str .= $continuator.' '.$self->catfile($dir,$file);
	    if ( length($str)-$lengthsofar > 128*$numlines )
	    {
		$continuator .= " \\\n\t";
		$numlines++;
	    } else {
		$continuator = '';
	    }
	}
	my $plib   = $self->{PERL_CORE} ? '"-I$(PERL_LIB)"' : '';
	$plib .= " -MCross=$::Cross::platform" if defined $::Cross::platform;
	my $ucopts = '-"Q" -"O"';
	$str .=
	    qq{\n\t\$(PERL) $plib $enc2xs $ucopts -o \$\@@ -f $table.fnm\n\n};
	open (FILELIST, ">$table.fnm")
	    || die "Could not open $table.fnm: $!";
	foreach my $file (@@{$tables{$table}})
	{
	    print FILELIST $self->catfile($dir,$file) . "\n";
	}
	close(FILELIST);
    }
    return $str;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d5 3
a7 3
my %ARGV = map { split /=/; defined $_[1] or $_[1]=1; @@_ } @@ARGV;
$ARGV{DEBUG} and warn "$_ => $ARGV{$_}\n" for keys  %ARGV;
$ENV{PERL_CORE} ||= $ARGV{PERL_CORE};
d25 8
a32 3

$ARGV{MORE_SCRIOPTS} and push @@exe_files, @@more_exe_files;
$ARGV{INSTALL_UCM}   and push @@pmlibdirs, "ucm";
@


1.1.1.3
log
@perl 5.8.6 from CPAN
@
text
@d86 1
a86 2
    my $str  = "# Encode\$(OBJ_EXT) does not depend on .c files directly\n";
    $str  .= "# (except Encode.c), but on .h and .exh files written by enc2xs\n";
a87 1
    $str  .= ' Encode.c';
@


1.1.1.4
log
@import perl 5.10.0 from CPAN
@
text
@a0 3
#
# $Id: Makefile.PL,v 2.5 2007/05/29 18:15:32 dankogai Exp dankogai $
#
a1 2
use strict;
use warnings;
d5 1
a5 1
my %ARGV = map { my @@r = split /=/,$_; defined $r[1] or $r[1]=1; @@r } @@ARGV;
d7 1
a7 1
$ENV{PERL_CORE} ||= $ARGV{PERL_CORE} if $ARGV{PERL_CORE};
d12 4
a15 4
           '8859-1.ucm',
           'null.ucm',
           'ctrl.ucm',
           ]
d19 2
a20 2
           bin/piconv
           );
d22 2
a23 2
            unidump
            );
a27 2
my @@man =  ();
@@man = ( MAN1PODS => {}, MAN3PODS => {} ) if $ENV{PERL_CORE};
d30 14
a43 14
          NAME		=> "Encode",
          EXE_FILES         => \@@exe_files,
          VERSION_FROM	=> 'Encode.pm',
          OBJECT		=> '$(O_FILES)',
          'dist'		=> {
          COMPRESS	=> 'gzip -9f',
          SUFFIX	=> 'gz',
          DIST_DEFAULT => 'all tardist',
          },
	  @@man,
          INC       => "-I./Encode",
          PMLIBDIRS => \@@pmlibdirs,
          INSTALLDIRS => 'perl',
          );
d55 1
a55 1
    $o{$f} = 1;
d61 1
a61 1
    $o{$e.$x} = 1;
d71 1
a71 1
    foreach my $ext (qw($(OBJ_EXT) .c .h .exh .fnm))
d73 1
a73 1
    push (@@files,$table.$ext);
d76 1
a76 1
    if $^O eq 'MacOS' && $self->{SOURCE} !~ /\b$table\.c\b/;
d92 1
a92 1
    $str .= " $table.c";
d97 28
a124 28
    my $numlines = 1;
    my $lengthsofar = length($str);
    my $continuator = '';
    my $enc2xs = $self->catfile('bin', 'enc2xs');
    $str .= "$table.c : $enc2xs Makefile.PL";
    foreach my $file (@@{$tables{$table}})
    {
        $str .= $continuator.' '.$self->catfile($dir,$file);
        if ( length($str)-$lengthsofar > 128*$numlines )
        {
        $continuator .= " \\\n\t";
        $numlines++;
        } else {
        $continuator = '';
        }
    }
    my $plib   = $self->{PERL_CORE} ? '"-I$(PERL_LIB)"' : '';
    $plib .= " -MCross=$::Cross::platform" if defined $::Cross::platform;
    my $ucopts = '-"Q" -"O"';
    $str .=
        qq{\n\t\$(PERL) $plib $enc2xs $ucopts -o \$\@@ -f $table.fnm\n\n};
    open (FILELIST, ">$table.fnm")
        || die "Could not open $table.fnm: $!";
    foreach my $file (@@{$tables{$table}})
    {
        print FILELIST $self->catfile($dir,$file) . "\n";
    }
    close(FILELIST);
@


1.1.1.5
log
@import perl 5.10.1
@
text
@d2 1
a2 1
# $Id: Makefile.PL,v 2.8 2009/07/08 13:34:15 dankogai Exp $
a7 1
use File::Spec;
d31 1
a31 1
$ARGV{MORE_SCRIPTS} and push @@exe_files, @@more_exe_files;
d33 2
d37 14
a50 13
    NAME         => "Encode",
    EXE_FILES    => \@@exe_files,
    VERSION_FROM => 'Encode.pm',
    OBJECT       => '$(O_FILES)',
    'dist'       => {
        COMPRESS     => 'gzip -9f',
        SUFFIX       => 'gz',
        DIST_DEFAULT => 'all tardist',
    },
    INC         => '-I' . File::Spec->catfile( '.', 'Encode' ),
    PMLIBDIRS   => \@@pmlibdirs,
    INSTALLDIRS => 'perl',
);
@


