head	1.7;
access;
symbols
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	PERL_5_10_0:1.1.1.4
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.22
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	PERL_5_8_2:1.1.1.3
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	PERL_5_8_0:1.1.1.3
	OPENBSD_3_2:1.3.0.14
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.12
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.10
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2009.10.12.18.24.37;	author millert;	state dead;
branches;
next	1.6;

1.6
date	2008.09.29.17.36.07;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.05.15.50.10;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.27.22.25.24;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.36;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.55.58;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.17;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.17;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.14;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.10.27.22.14.56;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.29.17.18.26;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Merge in perl 5.10.1
@
text
@#!/bin/sh

# This script acts as a simple interface for building extensions.
# It primarily used by the perl Makefile:
#
# d_dummy $(dynamic_ext): miniperl preplibrary FORCE
# 	@@sh ext/util/make_ext dynamic $@@ MAKE=$(MAKE) LIBPERL_A=$(LIBPERL)
#
# It may be deleted in a later release of perl so try to
# avoid using it for other purposes.

target=$1;  shift
extspec=$1; shift
makecmd=$1; shift  # Should be something like MAKE=make
passthru="$*" # allow extra macro=value to be passed through
echo ""

# Previously, $make was taken from config.sh.  However, the user might
# instead be running a possibly incompatible make.  This might happen if
# the user types "gmake" instead of a plain "make", for example.  The
# correct current value of MAKE will come through from the main perl
# makefile as MAKE=/whatever/make in $makecmd.  We'll be cautious in
# case third party users of this script (are there any?) don't have the
# MAKE=$(MAKE) argument, which was added after 5.004_03.
case "$makecmd" in
MAKE=*)
	eval $makecmd
	;;
*)	echo 'ext/util/make_ext:  WARNING:  Please include MAKE=$(MAKE)'
	echo '	in your call to make_ext.  See ext/util/make_ext for details.'
	exit 1
	;;
esac


case $CONFIG in
'')
    if test -f config.sh; then TOP=.;
    elif test -f ../config.sh; then TOP=..;
    elif test -f ../../config.sh; then TOP=../..;
    elif test -f ../../../config.sh; then TOP=../../..;
    elif test -f ../../../../config.sh; then TOP=../../../..;
    else
        echo "Can't find config.sh generated by Configure"; exit 1
    fi
    . $TOP/config.sh
    ;;
esac

if test "X$extspec" = X; then
	echo "make_ext: no extension specified"
	exit 1;
fi

# The Perl Makefile.SH will expand all extensions to
#	lib/auto/X/X.a  (or lib/auto/X/Y/Y.a if nested)
# A user wishing to run make_ext might use
#	X (or X/Y or X::Y if nested)

# canonise into X/Y form (pname)
case "$extspec" in
lib*)	# Remove lib/auto prefix and /*.* suffix
	pname=`echo "$extspec" | sed -e 's:^lib/auto/::' -e 's:/[^/]*\.[^/]*$::' ` ;;
ext*)	# Remove ext/ prefix and /pm_to_blib suffix
	pname=`echo "$extspec" | sed -e 's:^ext/::' -e 's:/pm_to_blib$::' ` ;;
*::*)	# Convert :: to /
	pname=`echo "$extspec" | sed -e 's/::/\//g' ` ;;
*.o)    pname=`echo "$extspec" | sed -e 's/\.o//'` ;;
*)	pname="$extspec" ;;
esac
# echo "Converted $extspec to $pname"

mname=`echo "$pname"   | sed -e 's!/!::!g'`
depth=`echo "$pname"   | sed -e 's![^/][^/]*!..!g'`
makefile=Makefile
makeargs=''
makeopts=''

if test ! -d "ext/$pname"; then
    echo "	Skipping $extspec (directory does not exist)"
    exit 0 # not an error ?
fi

case "$osname" in
catamount) # Snowball's chance of building extensions.
  echo "This is $osname, not building $mname, sorry."
  exit 0
  ;;
esac

echo "	Making $mname ($target)"

cd ext/$pname

# check link type and do any preliminaries.  Valid link types are
# 'dynamic', 'static', and 'static_pic' (the last one respects
# CCCDLFLAGS such as -fPIC -- see static_target in the main Makefile.SH)
case "$target" in
dynamic)    makeargs="LINKTYPE=dynamic";
	    target=all
	    ;;
static)     makeargs="LINKTYPE=static CCCDLFLAGS="
	    target=all
	    ;;
static_pic) makeargs="LINKTYPE=static"
	    target=all
	    ;;
nonxs)      makeargs="";
	    target=all
	    ;;

*clean) # If Makefile has been moved to Makefile.old by a make clean
	    # then use Makefile.old for realclean rather than rebuild it
	    if test ! -f $makefile -a -f Makefile.old; then
		makefile=Makefile.old
		makeopts="-f $makefile"
		echo "Note: Using Makefile.old"
	    fi
	    ;;

*)	# for the time being we are strict about what make_ext is used for
	echo "make_ext: unknown make target '$target'"; exit 1
	;;
'')	echo "make_ext: no make target specified (eg static or dynamic)"; exit 1
	;;
esac

if test ! -f $makefile ; then
	test -f Makefile.PL && $run ../$depth/miniperl -I../$depth/lib Makefile.PL INSTALLDIRS=perl INSTALLMAN3DIR=none PERL_CORE=1 $passthru
fi
if test ! -f $makefile ; then
	echo "Warning: No Makefile!"
fi

case "$target" in
clean)		;;
realclean)	;;
*)	# Give makefile an opportunity to rewrite itself.
	# reassure users that life goes on...
	$MAKE config MAKE=$MAKE $passthru || echo "$MAKE config failed, continuing anyway..."
	;;
esac

$MAKE $makeopts $target MAKE=$MAKE $makeargs $passthru || exit

exit $?
@


1.6
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@@


1.5
log
@enforce make -j1 in SDBM_File, there is a nasty race that's hard to fix.
okay millert@@
@
text
@d68 1
d84 5
a88 3
# XXX should find the race and fix it
case "$mname" in
SDBM_File) makeopts="$makeopts -j1";;
d129 1
a129 1
	test -f Makefile.PL && ../$depth/miniperl -I../$depth/lib Makefile.PL INSTALLDIRS=perl PERL_CORE=1 $passthru
d132 1
a132 6
	if test -f Makefile.SH; then
		echo "Warning: Writing $makefile from old-style Makefile.SH!"
		sh Makefile.SH
	else
		echo "Warning: No Makefile!"
	fi
d140 1
a140 1
	$MAKE config $passthru || echo "$MAKE config failed, continuing anyway..."
d144 1
a144 1
$MAKE $makeopts $target $makeargs $passthru || exit
@


1.4
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d83 4
@


1.3
log
@perl5.005_03 (stock)
@
text
@d88 3
a90 1
# check link type and do any preliminaries
d92 3
a94 1
	    # convert 'static' or 'dynamic' into 'all LINKTYPE=XXX'
d98 1
a98 1
dynamic)    makeargs="LINKTYPE=dynamic";
a100 1

d122 1
a122 1
	test -f Makefile.PL && ../$depth/miniperl -I../$depth/lib Makefile.PL INSTALLDIRS=perl $passthru
@


1.2
log
@perl 5.004_04
@
text
@d64 2
d95 4
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
#        ext/util/make_ext dynamic $@@
d14 1
d18 18
d56 1
a56 1
#	lib/auto/X/X.a  (or lib/auto/X/Y/Y.a is nested)
d58 1
a58 1
#	X (or X/Y or X::Y is nested)
a71 1
make=${altmake-make}
d129 1
a129 1
	$make config $passthru || echo "$make config failed, continuing anyway..."
d133 1
a133 1
$make $makeopts $target $makeargs $passthru || exit
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d7 1
a7 1
# 	@@sh ext/util/make_ext dynamic $@@ MAKE=$(MAKE) LIBPERL_A=$(LIBPERL)
a13 1
makecmd=$1; shift  # Should be something like MAKE=make
a16 18
# Previously, $make was taken from config.sh.  However, the user might
# instead be running a possibly incompatible make.  This might happen if
# the user types "gmake" instead of a plain "make", for example.  The
# correct current value of MAKE will come through from the main perl
# makefile as MAKE=/whatever/make in $makecmd.  We'll be cautious in
# case third party users of this script (are there any?) don't have the
# MAKE=$(MAKE) argument, which was added after 5.004_03.
case "$makecmd" in
MAKE=*)
	eval $makecmd
	;;
*)	echo 'ext/util/make_ext:  WARNING:  Please include MAKE=$(MAKE)'
	echo '	in your call to make_ext.  See ext/util/make_ext for details.'
	exit 1
	;;
esac


d37 1
a37 1
#	lib/auto/X/X.a  (or lib/auto/X/Y/Y.a if nested)
d39 1
a39 1
#	X (or X/Y or X::Y if nested)
a44 2
ext*)	# Remove ext/ prefix and /pm_to_blib suffix
	pname=`echo "$extspec" | sed -e 's:^ext/::' -e 's:/pm_to_blib$::' ` ;;
d53 1
a77 4
nonxs)      makeargs="";
	    target=all
	    ;;

d111 1
a111 1
	$MAKE config $passthru || echo "$MAKE config failed, continuing anyway..."
d115 1
a115 1
$MAKE $makeopts $target $makeargs $passthru || exit
@


1.1.1.3
log
@stock perl 5.8.0 from CPAN
@
text
@d88 1
a88 3
# check link type and do any preliminaries.  Valid link types are
# 'dynamic', 'static', and 'static_pic' (the last one respects
# CCCDLFLAGS such as -fPIC -- see static_target in the main Makefile.SH)
d90 1
a90 3
dynamic)    makeargs="LINKTYPE=dynamic";
	    target=all
	    ;;
d94 1
a94 1
static_pic) makeargs="LINKTYPE=static"
d97 1
d119 1
a119 1
	test -f Makefile.PL && ../$depth/miniperl -I../$depth/lib Makefile.PL INSTALLDIRS=perl PERL_CORE=1 $passthru
@


1.1.1.4
log
@import perl 5.10.0 from CPAN
@
text
@a67 1
*.o)    pname=`echo "$extspec" | sed -e 's/\.o//'` ;;
a82 6
case "$osname" in
catamount) # Snowball's chance of building extensions.
  echo "This is $osname, not building $mname, sorry."
  exit 0
  ;;
esac
d122 1
a122 1
	test -f Makefile.PL && $run ../$depth/miniperl -I../$depth/lib Makefile.PL INSTALLDIRS=perl INSTALLMAN3DIR=none PERL_CORE=1 $passthru
d125 6
a130 1
	echo "Warning: No Makefile!"
d138 1
a138 1
	$MAKE config MAKE=$MAKE $passthru || echo "$MAKE config failed, continuing anyway..."
d142 1
a142 1
$MAKE $makeopts $target MAKE=$MAKE $makeargs $passthru || exit
@


