head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.5.0.10
	OPENBSD_4_4_BASE:1.1.1.5
	OPENBSD_4_3:1.1.1.5.0.8
	OPENBSD_4_3_BASE:1.1.1.5
	OPENBSD_4_2:1.1.1.5.0.6
	OPENBSD_4_2_BASE:1.1.1.5
	OPENBSD_4_1:1.1.1.5.0.4
	OPENBSD_4_1_BASE:1.1.1.5
	OPENBSD_4_0:1.1.1.5.0.2
	OPENBSD_4_0_BASE:1.1.1.5
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.1.1.4.0.6
	OPENBSD_3_9_BASE:1.1.1.4
	OPENBSD_3_8:1.1.1.4.0.4
	OPENBSD_3_8_BASE:1.1.1.4
	OPENBSD_3_7:1.1.1.4.0.2
	OPENBSD_3_7_BASE:1.1.1.4
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.1.1.3.0.2
	OPENBSD_3_6_BASE:1.1.1.3
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2008.09.29.17.36.02;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.53;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.53;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.43.41;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.08.09.17.45.54;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.01.15.21.16.43;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.03.28.18.47.54;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    if ($^O eq 'MacOS') {
	@@INC = qw(: ::lib ::macos:lib);
    } else {
	@@INC = '../lib';
    }
}

$|  = 1;
use warnings;
use strict;
use Config;

print "1..1\n";

my $test = 1;

sub ok { print "ok $test\n"; $test++ }


my $got;
my $Is_VMS = $^O eq 'VMS';
my $Is_MacOS = $^O eq 'MacOS';

my $path = join " ", map { qq["-I$_"] } @@INC;
$path = '"-I../lib" "-Iperl_root:[lib]"' if $Is_VMS;   # gets too long otherwise
my $redir = $Is_MacOS ? "" : "2>&1";

chomp($got = `$^X $path "-MB::Stash" "-Mwarnings" -e1`);

$got =~ s/-u//g;

print "# got = $got\n";

my @@got = map { s/^\S+ //; $_ }
              sort { $a cmp $b }
                   map { lc($_) . " " . $_ }
                       split /,/, $got;

print "# (after sorting)\n";
print "# got = @@got\n";

@@got = grep { ! /^(PerlIO|open)(?:::\w+)?$/ } @@got;

print "# (after perlio censorings)\n";
print "# got = @@got\n";

@@got = grep { ! /^Win32$/                     } @@got  if $^O eq 'MSWin32';
@@got = grep { ! /^NetWare$/                   } @@got  if $^O eq 'NetWare';
@@got = grep { ! /^(Cwd|File|File::Copy|OS2)$/ } @@got  if $^O eq 'os2';
@@got = grep { ! /^Cwd$/                       } @@got  if $^O eq 'cygwin';

if ($Is_VMS) {
    @@got = grep { ! /^File(?:::Copy)?$/    } @@got;
    @@got = grep { ! /^VMS(?:::Filespec)?$/ } @@got;
    @@got = grep { ! /^vmsish$/             } @@got;
     # Socket is optional/compiler version dependent
    @@got = grep { ! /^Socket$/             } @@got;
}

print "# (after platform censorings)\n";
print "# got = @@got\n";

$got = "@@got";

my $expected = "attributes Carp Carp::Heavy DB Exporter Exporter::Heavy Internals main utf8 warnings";

{
    no strict 'vars';
    use vars '$OS2::is_aout';
}

if ((($Config{static_ext} eq ' ') || ($Config{static_ext} eq ''))
    && !($^O eq 'os2' and $OS2::is_aout)
	) {
    print "# [$got]\n# vs.\n# [$expected]\nnot " if $got ne $expected;
    ok;
} else {
    print "ok $test # skipped: one or more static extensions\n"; $test++;
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d69 1
a69 1
my $expected = "attributes Carp Carp::Heavy DB Exporter Exporter::Heavy Internals main Regexp utf8 warnings";
@


1.1.1.3
log
@Import of stock perl 5.8.5
@
text
@a9 5
    require Config;
    if (($Config::Config{'extensions'} !~ /\bB\b/) ){
        print "1..0 # Skip -- Perl configured without B module\n";
        exit 0;
    }
@


1.1.1.4
log
@perl 5.8.6 from CPAN
@
text
@d74 1
a74 3
my $expected = "attributes Carp Carp::Heavy DB Exporter Exporter::Heavy Internals main Regexp utf8 version warnings";

$expected =~ s/version // if $] < 5.009;
@


1.1.1.5
log
@perl 5.8.8 import
@
text
@d4 3
a6 8
    if ($ENV{PERL_CORE}){
	chdir('t') if -d 't';
	if ($^O eq 'MacOS') {
	    @@INC = qw(: ::lib ::macos:lib);
	} else {
	    @@INC = '.';
	    push @@INC, '../lib';
	}
d8 1
a8 1
	unshift @@INC, 't';
d59 1
a59 1
@@got = grep { ! /^(Cwd|Cygwin)$/              } @@got  if $^O eq 'cygwin';
d74 1
a74 1
my $expected = "attributes Carp Carp::Heavy DB Internals main Regexp utf8 version warnings";
d76 1
a76 4
if ($] < 5.009) {
    $expected =~ s/version //;
    $expected =~ s/DB/DB Exporter Exporter::Heavy/;
}
d86 1
a86 1
    print "# got [$got]\n# vs.\n# expected [$expected]\nnot " if $got ne $expected;
@


