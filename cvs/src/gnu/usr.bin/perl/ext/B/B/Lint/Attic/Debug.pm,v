head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.14;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.11;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.11;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@package B::Lint::Debug;

=head1 NAME

B::Lint::Debug - Adds debugging stringification to B::

=head1 DESCRIPTION

This module injects stringification to a B::OP*/B::SPECIAL. This
should not be loaded unless you're debugging.

=cut

package B::SPECIAL;
use overload '""' => sub {
    my $self = shift @@_;
    "SPECIAL($$self)";
};

package B::OP;
use overload '""' => sub {
    my $self  = shift @@_;
    my $class = ref $self;
    $class =~ s/\AB:://xms;
    my $name = $self->name;
    "$class($name)";
};

package B::SVOP;
use overload '""' => sub {
    my $self  = shift @@_;
    my $class = ref $self;
    $class =~ s/\AB:://xms;
    my $name = $self->name;
    "$class($name," . $self->sv . "," . $self->gv . ")";
};

package B::SPECIAL;
sub DESTROY { }
our $AUTOLOAD;

sub AUTOLOAD {
    my $cx = 0;
    print "AUTOLOAD $AUTOLOAD\n";

    package DB;
    while ( my @@stuff = caller $cx ) {

        print "$cx: [@@DB::args] [@@stuff]\n";
        if ( ref $DB::args[0] ) {
            if ( $DB::args[0]->can('padix') ) {
                print "    PADIX: " . $DB::args[0]->padix . "\n";
            }
            if ( $DB::args[0]->can('targ') ) {
                print "    TARG: " . $DB::args[0]->targ . "\n";
                for ( B::Lint::cv()->PADLIST->ARRAY ) {
                    print +( $_->ARRAY )[ $DB::args[0]->targ ] . "\n";
                }
            }
        }
        ++$cx;
    }
}

1;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
