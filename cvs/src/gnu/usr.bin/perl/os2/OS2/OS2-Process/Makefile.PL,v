head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.24
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.48.46;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use ExtUtils::MakeMaker;

create_constants();		# Make a module

# See lib/ExtUtils/MakeMaker.pm for details of how to influence
# the contents of the Makefile that is written.
WriteMakefile(
    'NAME'	=> 'OS2::Process',
    VERSION_FROM=> 'Process.pm',
    MAN3PODS 	=> {}, 	# Pods will be built by installman.
    'LIBS'	=> [''],   # e.g., '-lm' 
    'DEFINE'	=> '',     # e.g., '-DHAVE_SOMETHING' 
    'INC'	=> '',     # e.g., '-I/usr/include/other' 
    IMPORTS	=> { _16_DosSmSetTitle => 'sesmgr.DOSSMSETTITLE',
		     # _16_Win16SetTitle => 'pmshapi.93',
		   },
);

sub create_constants {
  return if -d 'Process_constants';
  my $src_dir;
  my @@try = qw(.. ../.. ../../.. ../../../..);
  for (@@try) {
    $src_dir = $_, last if -d "$_/utils" and -r "$_/utils/h2xs";
  }
  warn("Can't find \$PERL_SRC/utils/h2xs in @@try, falling back to no constants"),
    return unless defined $src_dir;
  # Can't name it *::Constants, otherwise constants.xs would overwrite it...
  # This produces warnings from PSZ-conversion on WS_* constants.
  system $^X, "-I$src_dir/lib", "$src_dir/utils/h2xs", '-fn', 'OS2::Process::Const',
    '--skip-exporter', '--skip-autoloader', # too large memory overhead
      '--skip-strict', '--skip-warnings', # likewise
	'--skip-ppport',	# will not work without dynaloading.
				# Most useful for OS2::Process:
	  '-M^(HWND|WM|SC|SWP|WC|PROG|QW|EDI|WS|QWS|QWP|QWL|FF|FI|LS|FS|FCF|BS|MS|TBM|CF|CFI|FID|MB|MBID|CF|CFI|SPTR)_',
	    '-F', '-DINCL_NLS -DINCL_BASE -DINCL_PM', # Define more symbols
	      'os2emx.h'	# EMX version of OS/2 API
    and warn("Can't build module with contants, falling back to no constants"),
      return;
  rename 'OS2/Process/Const', 'Process_constants'
    or warn("Error renaming module, falling back to no constants: $!"),
      return;
  return 1;
}
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
