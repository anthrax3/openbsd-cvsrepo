head	1.12;
access;
symbols
	OPENBSD_6_2_BASE:1.12
	PERL_5_24_2:1.1.1.11
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.11.0.26
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.20
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.22
	OPENBSD_5_8_BASE:1.11
	PERL_5_20_2:1.1.1.10
	OPENBSD_5_7:1.11.0.14
	OPENBSD_5_7_BASE:1.11
	PERL_5_20_1:1.1.1.10
	OPENBSD_5_6:1.11.0.18
	OPENBSD_5_6_BASE:1.11
	PERL_5_18_2:1.1.1.10
	PERL:1.1.1
	OPENBSD_5_5:1.11.0.16
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.12
	OPENBSD_5_4_BASE:1.11
	PERL_5_16_3:1.1.1.10
	OPENBSD_5_3:1.11.0.10
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.8
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.6
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	PERL_5_12_2:1.1.1.10
	OPENBSD_4_8:1.10.0.8
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.4
	OPENBSD_4_7_BASE:1.10
	PERL_5_10_1:1.1.1.9
	OPENBSD_4_6:1.10.0.6
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	PERL_5_10_0:1.1.1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	PERL_5_8_8:1.1.1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	PERL_5_8_6:1.1.1.7
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	PERL_5_8_5:1.1.1.7
	PERL_5_8_3:1.1.1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.12
date	2017.02.05.00.32.17;	author afresh1;	state Exp;
branches;
next	1.11;
commitid	cxJ08BvJA9Pt2PTM;

1.11
date	2010.09.24.15.07.02;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2008.09.29.17.36.15;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.28.19.23.08;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.21.33.07;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.42;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.31;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.45;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.07.03;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.03;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.58.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.53;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.53;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.40.22;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.10.15;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.24.22;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.03;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.44.17;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.04.07.21.13.30;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2006.03.28.18.49.11;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2008.09.29.17.18.48;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2010.09.24.14.48.46;	author millert;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2017.08.14.13.46.18;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.12
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@# This file is read by Makefile.SH to produce rules for $(LIBPERL) (and
# some additional rules as well).

# Rerun `sh Makefile.SH; make depend' after making any change.

# Additional rules supported: perl_, aout_test, aout_install, use them
# for a.out style perl (which may fork).

perl_fullversion="5.00${PERL_VERSION}_$PERL_SUBVERSION"
case "$archname" in
 *-thread*)	perl_fullversion="${perl_fullversion}-threaded";;
esac

dll_post="`echo $perl_fullversion | sum | sed -e 's/^0*//' | awk '{print $1}'`"
dll_post="`printf '%x' $dll_post | tr '[a-z]' '[A-Z]'`"

aout_extra_libs=''
aout_extra_sep=''
for xxx in $aout_extra_static_ext; do
  aout_extra_dir=`echo "$xxx" | sed -e 's/::/\//g'`
  aout_extra_lib="lib/auto/$aout_extra_dir/"`basename "$aout_extra_dir"`
  aout_extra_libs="$aout_extra_libs$aout_extra_sep$aout_extra_lib$aout_lib_ext"
  aout_extra_sep=' '
done

$spitshell >>Makefile <<!GROK!THIS!

PERL_FULLVERSION = $perl_fullversion

AOUT_OPTIMIZE	= \$(OPTIMIZE)
AOUT_CCCMD	= \$(CC) -DPERL_CORE $aout_ccflags \$(AOUT_OPTIMIZE)
AOUT_AR		= $aout_ar
AOUT_OBJ_EXT	= $aout_obj_ext
AOUT_LIB_EXT	= $aout_lib_ext
AOUT_LIBPERL	= libperl$aout_lib_ext
AOUT_CLDFLAGS	= $aout_ldflags

AOUT_LIBPERL_DLL	= libperl_dll$aout_lib_ext
AOUT_CCCMD_DLL	= \$(CC) -DDOSISH -DOS2=2 -DEMBED -I. -DPACK_MALLOC -DDEBUGGING_MSTATS -DTWO_POT_OPTIMIZE -DPERL_EMERGENCY_SBRK
AOUT_CLDFLAGS_DLL	= -Zexe -Zmt -Zcrtdll -Zstack 32000

# No -DPERL_CORE
SO_CCCMD	= \$(CC) $ccflags \$(OPTIMIZE)

LD_OPT		= \$(OPTIMIZE)
PERL_DLL_LD_OPT = -Zmap -Zlinker /map/li

PERL_DLL_BASE	= perl$dll_post
PERL_DLL	= \$(PERL_DLL_BASE)\$(DLSUFFIX)
TEST_PERL_DLL	= perl_dll_t
CONFIG_ARGS	= $config_args
AOUT_EXTRA_LIBS	= $aout_extra_libs

!GROK!THIS!

$spitshell >>Makefile <<'!NO!SUBS!'
PREPLIBRARY_LIBPERL = $(LIBPERL)
$(LIBPERL): perl.imp perl5.def libperl_override.lib
	emximp -o $(LIBPERL) perl.imp
	cp $(LIBPERL) perl.lib

imp_version: $(FIRSTMAKEFILE)
	echo $(PERL_DLL_BASE) > $@@

libperl_override.imp: os2/os2add.sym miniperl imp_version
	./miniperl -wnle 'print "$$_\t$(PERL_DLL_BASE)\t$$_\t?"' os2/os2add.sym > $@@
	echo	'strdup	$(PERL_DLL_BASE)	Perl_strdup	?' >> $@@
	echo	'putenv	$(PERL_DLL_BASE)	Perl_putenv	?' >> $@@

libperl_override.lib: libperl_override.imp
	emximp -o $@@ libperl_override.imp

libperl_dllmain.imp: imp_version
	echo	'main	$(PERL_DLL_BASE)	dll_perlmain	?' > $@@

libperl_dllmain.lib: libperl_dllmain.imp
	emximp -o $@@ libperl_dllmain.imp

libperl_dllmain.a: libperl_dllmain.imp
	emximp -o $@@ libperl_dllmain.imp

$(AOUT_LIBPERL_DLL): perl.imp $(PERL_DLL) perl5.def
	emximp -o $(AOUT_LIBPERL_DLL) perl.imp

perl.imp: perl5.def imp_version
	emximp -o perl.imp perl5.def
	echo	'emx_calloc		emxlibcm	400	?' >> $@@
	echo	'emx_free		emxlibcm	401	?' >> $@@
	echo	'emx_malloc		emxlibcm	402	?' >> $@@
	echo	'emx_realloc		emxlibcm	403	?' >> $@@

.PHONY: perl_dll installcmd aout_clean aout_install aout_install.perl \
	perlrexx test_prep_perl_ test_prep_perl_sys test_prep_perl_stat \
	test_prep_perl_stat_aout test_prep_various \
	stat_aout_harness aout_harness stat_harness sys_harness all_harness \
	stat_aout_test aout_test stat_test sys_test all_test \
	perl___harness test_harness_redir

perl_dll: $(PERL_DLL)

perl_dll_t: t/$(PERL_DLL)

t/$(PERL_DLL): $(PERL_DLL)
	$(LNS) $(PERL_DLL) t/$(PERL_DLL)

$(PERL_DLL): $(perllib_objs) perl5.def perl$(OBJ_EXT) perlmain$(OBJ_EXT) $(DYNALOADER)
	$(LD) $(LD_OPT) $(LDDLFLAGS) $(PERL_DLL_LD_OPT) -o $@@ perl$(OBJ_EXT) $(perllib_objs) perlmain$(OBJ_EXT) $(DYNALOADER) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )

perl5.olddef: perl.linkexp
	echo "LIBRARY '$(PERL_DLL_BASE)' INITINSTANCE TERMINSTANCE"	> $@@
	echo DESCRIPTION "'Perl interpreter v$(PERL_FULLVERSION), export autogenerated'"	>>$@@
	echo STACKSIZE 32768				>>$@@
	echo CODE LOADONCALL				>>$@@
	echo DATA LOADONCALL NONSHARED MULTIPLE		>>$@@
	echo EXPORTS					>>$@@
!NO!SUBS!

if [ ! -z "$myttyname" ] ; then
  $spitshell >>Makefile <<'!NO!SUBS!'
	echo '  "ttyname"'				>>$@@
!NO!SUBS!
fi

$spitshell >>Makefile <<'!NO!SUBS!'
	cat perl.linkexp	>>$@@

#	grep -v '"\(malloc\|realloc\|free\)"' perl.linkexp	>>$@@


perl.exports: perl.exp EXTERN.h perl.h
	(echo "#include \"EXTERN.h\" \n#include \"perl.h\" \n#include \"perl.exp\"";	\
	 echo "malloc\nrealloc\ncalloc\nfree") | \
		$(CC) -DEMBED  -E - | \
		awk '{if ($$2 == "") print $$1}' | sort | uniq > $@@

perl.linkexp: perl.exports perl.map  os2/os2.sym
	cat perl.exports os2/os2.sym perl.map | sort | uniq -d | sed -e 's/\w\+/  "\0"/' > perl.linkexp

# We link miniperl statically, since .DLL depends on $(DYNALOADER) 

miniperl.map: miniperl

miniperl.exe: miniperl

miniperl: $(perllib_objs) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT)
	$(CC) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) `echo $(perllib_objs)|sed -e 's/\bop\./opmini./g'` $(libs) -Zmap -Zlinker /map/PM:VIO
	@@./miniperl -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest

depend: os2ish.h dlfcn.h os2thread.h os2.c

# Stupid make? Needed...
os2$(OBJ_EXT) : os2.c

os2.c: os2/os2.c os2ish.h
	cp -f $< $@@

dl_os2.c: os2/dl_os2.c os2ish.h
	cp -f $< $@@

os2ish.h: os2/os2ish.h
	cp -f $< $@@

os2thread.h: os2/os2thread.h
	cp -f $< $@@

dlfcn.h: os2/dlfcn.h
	cp -f $< $@@

# Non-Forking dynamically loaded perl
# Make many: they are useful in low-memory conditions (floppy boot?  Lot of shared memory used?)

perl___$(EXE_EXT) perl___: $& libperl_dllmain$(LIB_EXT)
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 8192 -o perl___8 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 4096 -o perl___4 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 2048 -o perl___2 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 1024 -o perl___1 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 512 -o perl___05 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 320 -o perl___03 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO

# This one is compiled -Zsys, so cannot do many things:

# Remove -Zcrtdll
STAT_CLDFLAGS = -Zexe -Zomf -Zmt -Zstack 32000

# Non-forking dynamically loaded perl with a wrong CRT library:

perl_stat perl_stat$(EXE_EXT): $& libperl_dllmain$(LIB_EXT)
	$(SHRPENV) $(CC) $(STAT_CLDFLAGS) $(CCDLFLAGS) -o perl_stat libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO

# Remove -Zcrtdll, add -Zsys
SYS_CLDFLAGS = $(STAT_CLDFLAGS) -Zsys

# Non-Forking dynamically loaded perl without EMX - so with wrong CRT library

perl_sys perl_sys$(EXE_EXT): $& libperl_dllmain$(LIB_EXT)
	$(SHRPENV) $(CC) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o perl_sys libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO

installcmd : 
	@@perl -e 'die qq{Give the option INSTALLCMDDIR=... to make!} if $$ARGV[0] eq ""' $(INSTALLCMDDIR)
	./miniperl -Ilib os2/perl2cmd.pl $(INSTALLCMDDIR)

# Aout section:

aout_obj = $(addsuffix $(AOUT_OBJ_EXT),$(basename $(perllib_objs)))
AOUT_DYNALOADER = $(addsuffix $(AOUT_LIB_EXT),$(basename $(DYNALOADER)))
aout_ext = $(static_ext) $(dynamic_ext) $(AOUT_EXTRA_LIBS)
aout_static_ext = $(addsuffix $(AOUT_LIB_EXT),$(basename $(aout_ext)))
aout_static_lib = $(addsuffix $(LIB_EXT),$(basename $(aout_ext)))

aout_static_ext_dll = $(addsuffix $(AOUT_LIB_EXT),$(basename $(static_ext)))
DYNALOADER_OBJ = ext/DynaLoader/DynaLoader$(OBJ_EXT)
aout_static_ext_dll = $(addsuffix $(AOUT_LIB_EXT),$(basename $(static_ext)))
AOUT_DYNALOADER_OBJ = $(addsuffix $(AOUT_OBJ_EXT),$(basename $(DYNALOADER_OBJ)))

$(AOUT_DYNALOADER_OBJ) : $(DYNALOADER_OBJ)
	emxaout -o $@@ $<

$(DYNALOADER_OBJ) : $(DYNALOADER)
	@@sh -c true

# Quick hack to construct directories necessary for /*/% stuff:

$(aout_static_ext) : $(static_ext) $(dynamic_ext)

$(AOUT_LIBPERL) : $(aout_obj) perl$(AOUT_OBJ_EXT)
	rm -f $@@
	$(AOUT_AR) rc $@@ perl$(AOUT_OBJ_EXT) $(aout_obj)
	cp $@@ perl$(AOUT_LIB_EXT)

.c$(AOUT_OBJ_EXT):
	$(AOUT_CCCMD) $(PLDLFLAGS) -c $*.c

opmini$(AOUT_OBJ_EXT): op.c
	$(AOUT_CCCMD) $(PLDLFLAGS) -DPERL_EXTERNAL_GLOB -o opmini$(AOUT_OBJ_EXT) -c op.c

perlmain(AOUT_OBJ_EXT): perlmain.c
	$(AOUT_CCCMD_DLL) $(PLDLFLAGS) -c perlmain.c

# Assume that extensions are at most 4 deep (this is so with 5.8.1)
aout_extlist: $(aout_static_ext) $(AOUT_DYNALOADER)
	echo lib/auto/*.a lib/auto/*/*.a lib/auto/*/*/*.a lib/auto/*/*/*/*.a | tr ' ' '\n' | grep -v '\*' > $@@

aout_perlmain.c: miniperlmain.c config.sh makefile $(static_ext_autoinit) $(aout_static_ext) writemain aout_extlist
	sh writemain `cat aout_extlist` > aout_perlmain.c

_preplibrary = miniperl lib/Config.pm lib/lib.pm lib/re.pm

miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) opmini$(AOUT_OBJ_EXT) $(_preplibrary)
	$(CC) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) opmini$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(libs)

# Forking statically loaded perl

# Need a miniperl_ dependency, since $(AOUT_DYNALOADER) is build via implicit
# rules, thus would not rebuild miniperl_ via an explicit rule

perl_$(EXE_EXT) perl_: $& miniperl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(AOUT_DYNALOADER) $(aout_static_ext) ext.libs aout_extlist
	$(CC) $(AOUT_CLDFLAGS) $(CCDLFLAGS) $(OPTIMIZE) -o perl_ aout_perlmain$(AOUT_OBJ_EXT) `cat aout_extlist` $(AOUT_LIBPERL) `cat ext.libs` $(libs)

# Remove -Zcrtdll
STAT_AOUT_CLDFLAGS = -Zexe -Zmt -Zstack 32000

# Forking dynamically loaded perl with a wrong CRT library:

perl_stat_aout$(EXE_EXT) perl_stat_aout: $& libperl_dllmain$(AOUT_LIB_EXT)
	$(SHRPENV) $(CC) $(STAT_AOUT_CLDFLAGS) $(CCDLFLAGS) $(OPTIMIZE) -o perl_stat_aout libperl_dllmain$(AOUT_LIB_EXT)

PERLREXX_DLL = perlrexx.dll

perl perl$(EXE_EXT) : perl__ perl___ $(PERLREXX_DLL) $(PERL_DLL)

# Dynamically loaded PM-application perl:

perl__$(EXE_EXT) perl__: $& libperl_dllmain$(LIB_EXT)
	$(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl__ libperl_dllmain$(LIB_EXT) -Zlinker /PM:PM

# Forking dynamically loaded perl:

perl$(EXE_EXT) perl: $& libperl_dllmain$(AOUT_LIB_EXT)
	$(CC) $(AOUT_CLDFLAGS_DLL) $(CCDLFLAGS) -o perl libperl_dllmain$(AOUT_LIB_EXT)

clean: aout_clean

aout_clean:
	-rm *perl_.* *.o *.a lib/auto/*/*.a lib/auto/*/*/*.a lib/auto/*/*/*/*.a ext/*/Makefile.aout ext/*/*/Makefile.aout  ext/*/*/*/Makefile.aout

aout_install: perl_ aout_install.perl

aout_install.perl: perl_ installperl
	./perl_ installperl --destdir="$(DESTDIR)"

perlrexx: $(PERLREXX_DLL)
	@@sh -c true

perlrexx.c: os2/perlrexx.c
	@@cp -f os2/$@@ $@@

# Remove -Zexe, add -Zdll -Zso.  No stack needed
SO_CLDFLAGS = -Zdll -Zso -Zomf -Zmt -Zsys

# A callable-from-REXX DLL

$(PERLREXX_DLL): perlrexx$(OBJ_EXT) perlrexx.def
	$(SHRPENV) $(CC) $(SO_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlrexx$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) perlrexx.def

perlrexx.def: miniperl $(_preplibrary)
	echo	"LIBRARY 'perlrexx' INITINSTANCE TERMINSTANCE"	> $@@
	echo	"DESCRIPTION '@@#perl5-porters@@perl.org:`miniperl -Ilib -MConfig -e 'print \$$]'`#@@ REXX to Perl `miniperl -Ilib -MConfig -e 'print \$$Config{version}'` interface'" >> $@@
	echo	"EXPORTS"					>> $@@
	echo	'  "PERL"'					>> $@@
	echo	'  "PERLTERM"'					>> $@@
	echo	'  "PERLINIT"'					>> $@@
	echo	'  "PERLEXIT"'					>> $@@
	echo	'  "PERLEVAL"'					>> $@@
	echo	'  "PERLLASTERROR"'				>> $@@
	echo	'  "PERLEVALSUBCOMMAND"'			>> $@@
	echo	'  "PERLEXPORTALL"'				>> $@@
	echo	'  "PERLDROPALL"'				>> $@@
	echo	'  "PERLDROPALLEXIT"'				>> $@@


perlrexx$(OBJ_EXT): perlrexx.c
	$(SO_CCCMD) $(PLDLFLAGS) -c perlrexx.c

# To test with harness, one needed to HARNESS_IGNORE_EXITCODE=2

# Define to be empty to get a TTY test
REDIR_TEST = 2>&1 | tee 00_$@@

test_prep_perl_: test_prep_pre miniperl_ ./perl_$(EXE_EXT)
	PERL=./perl_ $(MAKE) _test_prep

test_prep_various: test_prep_pre miniperl $(dynamic_ext) $(TEST_PERL_DLL)

test_prep_perl_sys: test_prep_various ./perl_sys$(EXE_EXT)
	PERL=./perl_sys $(MAKE) _test_prep

test_prep_perl___: test_prep_various ./perl___$(EXE_EXT)
	PERL=./perl___ $(MAKE) _test_prep

test_prep_perl_stat: test_prep_various ./perl_stat$(EXE_EXT)
	PERL=./perl_stat $(MAKE) _test_prep

test_prep_perl_stat_aout: test_prep_various ./perl_stat_aout$(EXE_EXT)
	PERL=./perl_stat_aout $(MAKE) _test_prep

aout_test: test_prep_perl_
	PERL=./perl_ $(MAKE) _test

aout_harness: test_prep_perl_
	-PERL=./perl_ $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

sys_test: test_prep_perl_sys
	PERL=./perl_sys $(MAKE) _test

sys_harness: test_prep_perl_sys
	-PERL=./perl_sys $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

stat_test: test_prep_perl_stat
	PERL=./perl_stat $(MAKE) _test

stat_harness: test_prep_perl_stat
	-PERL=./perl_stat $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

stat_aout_test: test_prep_perl_stat_aout
	PERL=./perl_stat_aout $(MAKE) _test

stat_aout_harness: test_prep_perl_stat_aout
	-PERL=./perl_stat_aout $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

perl___test: test_prep_perl___
	PERL=./perl___ $(MAKE) _test

perl___harness: test_prep_perl___
	-PERL=./perl___ $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

all_test: test aout_test perl___test sys_test stat_test stat_aout_test

test_harness_redir: test_prep
	-PERL=./perl $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

all_harness: test_harness_redir aout_harness perl___harness sys_harness stat_harness stat_aout_harness

!NO!SUBS!

# Now we need to find directories in ./ext/ which are up to 3 level deep
# Currently (2001/06) there is no directories 4 levels deep.
# (Only directories so that there is no Makefile.PL some levels up matter.)

dirs=''
ddirs=''
preci='ext/%/Makefile.aout '
for d in ext/*
do
	# echo "...Checking '$d'..."
	# skip the kid if the parent exists: cmp SDBFile/sdbm, done by MakeMaker
	if test ! -e "$d/Makefile.PL"; then
	    # Need to treat subdirectories manually
	    # echo "...Checking subdirs of '$d'..."
	    d_treated=''
	    for dd in $d/*
	    do
		if test ! -d $dd; then
		    continue
		fi
		if test -e "$dd/Makefile.PL"; then
		    if test "X$d_treated" = "X"; then
			d_treated=1
			# echo "...Found parentless 2-level deep Makefile.PL's in $d/*/:" $d/*/Makefile.PL
			dirs="$dirs $d"
			preci="$preci $d/%/Makefile.aout"
		    fi
		else
		    # Need to treat subsubdirectories manually
		    dd_treated=''
		    for ddd in $dd/*		# ext/*/*/*/Makefile.PL
		    do
			if test ! -d $ddd; then
			    continue
			fi
			if test -e "$ddd/Makefile.PL"; then
			    if test "X$dd_treated" = "X"; then
				dd_treated=1
				# echo "...Found parentless 3-level deep Makefile.PL's in $dd/*/:" $dd/*/Makefile.PL
				ddirs="$ddirs $dd"
				preci="$preci $dd/%/Makefile.aout"
			    fi
			fi
		    done
		fi
	   done
	fi
done

# ext/threads is marked as NORECURS, so we need to specialcase it
if echo "$static_ext $dynamic_ext" | grep -q threads/shared ; then
   preci="$preci ext/threads/%/Makefile.aout"
   dirs="$dirs ext/threads"
fi

$spitshell >>Makefile <<!GROK!THIS!
.PRECIOUS : $preci

# Set this to FORCE to force a rebuilt of aout extensions

AOUT_EXTENSIONS_FORCE = 

!GROK!THIS!

for d in $ddirs
do
    # Remove the leading component ext/
    dd=`dirname $d`
    pp=`basename $dd`
    p=$pp/`basename $d`
    $spitshell >>Makefile <<!GROK!THIS!
lib/auto/$p/*/%.a : $d/%/Makefile.aout
	@@cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=

$d/%/Makefile.aout : miniperl_ \$(_preplibrary) \$(AOUT_EXTENSIONS_FORCE)
	cd \$(dir \$@@) ; ../../../../miniperl_ -I ../../../../lib Makefile.PL FIRST_MAKEFILE=Makefile.aout INSTALLDIRS=perl PERL_CORE=1

!GROK!THIS!

done

for d in $dirs
do
    p=`basename $d`
    $spitshell >>Makefile <<!GROK!THIS!
lib/auto/$p/*/%.a : $d/%/Makefile.aout
	@@cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=

$d/%/Makefile.aout : miniperl_ \$(_preplibrary) \$(AOUT_EXTENSIONS_FORCE)
	cd \$(dir \$@@) ; ../../../miniperl_ -I ../../../lib Makefile.PL FIRST_MAKEFILE=Makefile.aout INSTALLDIRS=perl PERL_CORE=1

!GROK!THIS!

done

# We need to special-case OS2/DLL/DLL.a, since the recipe above will
# try to find it in ext/OS2-DLL

$spitshell >>Makefile <<'!NO!SUBS!'
lib/auto/OS2/DLL/DLL.a : lib/auto/OS2/REXX/REXX.a
	@@sh -c true

lib/auto/*/%.a : ext/%/Makefile.aout
	@@cd ext/$(basename $(notdir $@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd ext/$(basename $(notdir $@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=

ext/%/Makefile.aout : miniperl_ $(_preplibrary) $(AOUT_EXTENSIONS_FORCE)
	cd $(dir $@@) ; ../../miniperl_ -I ../../lib Makefile.PL FIRST_MAKEFILE=Makefile.aout INSTALLDIRS=perl PERL_CORE=1

!NO!SUBS!
@


1.11
log
@merge in perl 5.12.2 plus local changes
@
text
@d106 2
a107 2
$(PERL_DLL): $(obj) perl5.def perl$(OBJ_EXT) perlmain$(OBJ_EXT) $(DYNALOADER)
	$(LD) $(LD_OPT) $(LDDLFLAGS) $(PERL_DLL_LD_OPT) -o $@@ perl$(OBJ_EXT) $(obj) perlmain$(OBJ_EXT) $(DYNALOADER) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
d145 2
a146 2
miniperl: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT)
	$(CC) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) `echo $(obj)|sed -e 's/\bop\./opmini./g'` $(libs) -Zmap -Zlinker /map/PM:VIO
d205 1
a205 1
aout_obj = $(addsuffix $(AOUT_OBJ_EXT),$(basename $(obj)))
d228 1
a228 1
	$(AOUT_AR) rcu $@@ perl$(AOUT_OBJ_EXT) $(aout_obj)
@


1.10
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d484 1
a484 1
# try to find it in ext/OS2/DLL
@


1.9
log
@merge in perl 5.8.8
@
text
@d74 1
a74 1
	echo	'main	$(PERL_DLL_BASE)	dll_perlmain	?' >> $@@
d221 4
@


1.8
log
@merge local changes into perl-5.8.3
@
text
@d63 1
a63 2
	echo $(PERL_DLL_BASE) > imp_version.tmp
	sh mv-if-diff imp_version.tmp $@@
d66 3
a68 4
	./miniperl -wnle 'print "$$_\t$(PERL_DLL_BASE)\t$$_\t?"' os2/os2add.sym > tmp.imp
	echo	'strdup	$(PERL_DLL_BASE)	Perl_strdup	?' >> tmp.imp
	echo	'putenv	$(PERL_DLL_BASE)	Perl_putenv	?' >> tmp.imp
	sh mv-if-diff tmp.imp $@@
d74 1
a74 2
	echo	'main	$(PERL_DLL_BASE)	dll_perlmain	?' >> tmpdll.imp
	sh mv-if-diff tmpdll.imp $@@
d238 1
a238 2
	echo lib/auto/*.a lib/auto/*/*.a lib/auto/*/*/*.a lib/auto/*/*/*/*.a | tr ' ' '\n' | grep -v '\*' > $@@.tmp
	sh mv-if-diff $@@.tmp $@@
d241 1
a241 2
	sh writemain `cat aout_extlist` > aout_perlmain.tmp
	sh mv-if-diff aout_perlmain.tmp aout_perlmain.c
d303 13
a315 14
	echo	"LIBRARY 'perlrexx' INITINSTANCE TERMINSTANCE"	> tmp.def
	echo	"DESCRIPTION '@@#perl5-porters@@perl.org:`miniperl -Ilib -MConfig -e 'print \$$]'`#@@ REXX to Perl `miniperl -Ilib -MConfig -e 'print \$$Config{version}'` interface'" >> tmp.def
	echo	"EXPORTS"					>> tmp.def
	echo	'  "PERL"'					>> tmp.def
	echo	'  "PERLTERM"'					>> tmp.def
	echo	'  "PERLINIT"'					>> tmp.def
	echo	'  "PERLEXIT"'					>> tmp.def
	echo	'  "PERLEVAL"'					>> tmp.def
	echo	'  "PERLLASTERROR"'				>> tmp.def
	echo	'  "PERLEVALSUBCOMMAND"'			>> tmp.def
	echo	'  "PERLEXPORTALL"'				>> tmp.def
	echo	'  "PERLDROPALL"'				>> tmp.def
	echo	'  "PERLDROPALLEXIT"'				>> tmp.def
	sh mv-if-diff tmp.def $@@
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d291 1
a291 1
	./perl_ installperl
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@a29 1
OPTIMIZE	= $optimize
d46 1
a46 1
PERL_DLL_LD_OPT = -Zmap -Zlinker /map
d58 1
a58 1
$(LIBPERL): perl.imp $(PERL_DLL) perl5.def libperl_override.lib
d62 5
a66 1
libperl_override.imp: os2/os2add.sym miniperl
d75 10
d88 1
a88 1
perl.imp: perl5.def
d99 2
a100 1
	stat_aout_test aout_test stat_test sys_test all_test
d109 2
a110 2
$(PERL_DLL): $(obj) perl5.def perl$(OBJ_EXT)
	$(LD) $(LD_OPT) $(LDDLFLAGS) $(PERL_DLL_LD_OPT) -o $@@ perl$(OBJ_EXT) $(obj) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
d173 1
d175 8
a182 2
perl___$(EXE_EXT) perl___: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /map/PM:VIO
d191 2
a192 2
perl_stat: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(STAT_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /map/PM:VIO
d199 2
a200 2
perl_sys: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /map/PM:VIO
d210 1
a210 1
aout_ext = $(dynamic_ext) $(AOUT_EXTRA_LIBS)
d228 1
a228 1
	cp $@@ perl.a
d239 8
a246 3
aout_perlmain.c: miniperlmain.c config.sh makefile $(static_ext_autoinit)
	sh writemain $(DYNALOADER) $(aout_static_lib) > tmp
	sh mv-if-diff tmp aout_perlmain.c
d258 2
a259 2
perl_$(EXE_EXT) perl_: $& miniperl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(AOUT_DYNALOADER) $(aout_static_ext) ext.libs
	$(CC) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o perl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER) $(aout_static_ext) $(AOUT_LIBPERL) `cat ext.libs` $(libs)
d266 2
a267 2
perl_stat_aout$(EXE_EXT) perl_stat_aout: $& perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) ext.libs
	$(SHRPENV) $(CC) $(STAT_AOUT_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) `cat ext.libs` $(libs)
d271 1
a271 1
perl : perl__ perl___ $(PERLREXX_DLL)
d275 2
a276 2
perl__$(EXE_EXT) perl__: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl__ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /PM:PM
d280 2
a281 2
perl$(EXE_EXT) perl: $& perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) ext.libs
	$(CC) $(AOUT_CLDFLAGS_DLL) $(CCDLFLAGS) -o perl perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) `cat ext.libs` $(libs)
d286 1
a286 1
	-rm *perl_.* *.o *.a lib/auto/*/*.a ext/*/Makefile.aout
d381 4
a384 1
all_harness: test_harness aout_harness perl___harness sys_harness stat_harness stat_aout_harness
d418 1
a418 1
		    for ddd in $dd/*
d436 6
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d17 9
d43 5
a47 1
LD_OPT		= $optimize
d53 1
d58 1
d61 1
d63 1
a63 1
libperl_override.imp: os2/os2add.sym
d82 6
d96 1
a96 1
	$(LD) $(LD_OPT) $(LDDLFLAGS) -o $@@ perl$(OBJ_EXT) $(obj) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
d130 5
a134 1
miniperl.map miniperl: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT)
d158 1
a158 1
# This one is compiled OMF, so cannot fork():
d160 2
a161 2
perl___: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
d165 8
d174 3
a176 1
SYS_CLDFLAGS = -Zexe -Zomf -Zmt -Zsys -Zstack 32000
d179 1
a179 1
	$(SHRPENV) $(CC) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o perl_sys perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
d182 2
a183 2
	perl -e 'die qq{Give the option INSTALLCMDDIR=... to make!} if $$ARGV[0] eq ""' $(INSTALLCMDDIR)
	perl os2/perl2cmd.pl $(INSTALLCMDDIR)
d189 3
a191 2
aout_static_ext = $(addsuffix $(AOUT_LIB_EXT),$(basename $(dynamic_ext)))
aout_static_lib = $(addsuffix $(LIB_EXT),$(basename $(dynamic_ext)))
d207 1
d222 3
a224 1
miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) opmini$(AOUT_OBJ_EXT)
d227 6
a232 1
perl_: $& aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(AOUT_DYNALOADER) $(aout_static_ext) ext.libs
d235 4
a238 1
perl : perl__ perl___
d240 10
a249 1
perl__: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
d254 1
a254 1
perl: $& perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) ext.libs
d267 38
a304 2
aout_test: perl_
	- cd t && (rm -f perl_$(EXE_EXT); $(LNS) ../perl_$(EXE_EXT) perl$(EXE_EXT)) && ./perl TEST </dev/tty
d306 2
a307 1
# To test with harness, set HARNESS_BAD_EXITCODE=2
d309 1
a309 2
sys_test: perl_sys
	- cd t && (rm -f perl_$(EXE_EXT); $(LNS) ../perl_sys$(EXE_EXT) perl$(EXE_EXT)) && ./perl TEST </dev/tty
d311 45
a355 2
sys_harness: perl_sys
	- cd t && (rm -f perl_$(EXE_EXT); $(LNS) ../perl_sys$(EXE_EXT) perl$(EXE_EXT)) && env HARNESS_BAD_EXITCODE=2 ./perl harness </dev/tty
d359 3
a361 1
# Now we need to find directories in ./ext/ which are two level deep
d364 1
d368 37
a404 6
	# echo "Checking '$d'..."
	f="`echo $d/*/Makefile.PL`"
	# SDBFile/sdbm, skip kid makefile
	if test ! -e "$d/Makefile.PL" -a ! "$f" = ""; then
	    dirs="$dirs $d"
	    preci="$preci $d/%/Makefile.aout"
d411 20
d433 2
d439 3
a441 3
lib/auto/$p/*/%.a : ext/$p/%/Makefile.aout
	@@cd ext/$p/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd ext/$p/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=
d443 2
a444 2
$d/%/Makefile.aout : miniperl_
	cd \$(dir \$@@) ; ../../../miniperl_ -I ../../../lib Makefile.PL MAKEFILE=Makefile.aout INSTALLDIRS=perl 
d450 3
d454 3
d461 2
a462 2
ext/%/Makefile.aout : miniperl_
	cd $(dir $@@) ; ../../miniperl_ -I ../../lib Makefile.PL MAKEFILE=Makefile.aout INSTALLDIRS=perl 
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d44 1
a44 1
$(LIBPERL): perl.imp $(PERL_DLL) perl5.def
d47 9
d78 1
a78 1
	echo DESCRIPTION "'Perl interpreter v$(PERL_FULLVERSION), export autogenerated, built with $(CONFIG_ARGS)'"	>>$@@
d109 1
a109 1
	$(CC) $(LARGE) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) `echo $(obj)|sed -e 's/\bop\./opmini./g'` $(libs) -Zmap -Zlinker /map/PM:VIO
d135 1
a135 1
	$(SHRPENV) $(CC) $(LARGE) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
d143 1
a143 1
	$(SHRPENV) $(CC) $(LARGE) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o perl_sys perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
d185 1
a185 1
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) opmini$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(libs)
d188 1
a188 1
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o perl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER) $(aout_static_ext) $(AOUT_LIBPERL) `cat ext.libs` $(libs)
d193 1
a193 1
	$(CC) $(LARGE) $(CLDFLAGS) $(CCDLFLAGS) -o perl__ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /PM:PM
d198 1
a198 1
	$(CC) $(LARGE) $(AOUT_CLDFLAGS_DLL) $(CCDLFLAGS) -o perl perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) `cat ext.libs` $(libs)
@


1.3
log
@perl5.005_03 (stock)
@
text
@d9 1
a9 1
perl_version="5.00${PATCHLEVEL}_$SUBVERSION"
d11 1
a11 1
 *-thread*)	perl_version="${perl_version}-threaded";;
d14 1
a14 1
dll_post="`echo $perl_version | sum | awk '{print $1}'`"
d19 1
a19 1
PERL_VERSION = $perl_version
d23 1
a23 1
AOUT_CCCMD	= \$(CC) $aout_ccflags \$(AOUT_OPTIMIZE)
d38 1
d59 5
d65 1
a65 1
	$(LD) $(LD_OPT) $(LDDLFLAGS) -o $@@ perl$(OBJ_EXT) $(obj) $(libs) perl5.def
d67 1
a67 1
perl5.def: perl.linkexp
d69 1
a69 1
	echo DESCRIPTION "'Perl interpreter v$(PERL_VERSION), export autogenerated, built with $(CONFIG_ARGS)'"	>>$@@
d99 3
a101 5
perl.map miniperl: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT)
	$(CC) $(LARGE) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) $(obj) $(libs) -Zmap -Zlinker /map
	awk '{if ($$3 == "") print $$2}' <miniperl.map | sort | uniq > perl.map
	rm miniperl.map
	@@./miniperl -w -Ilib -MExporter -e 0 || $(MAKE) minitest
d165 3
d175 2
a176 2
miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL)
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(libs)
@


1.2
log
@perl 5.004_04
@
text
@d9 8
d19 5
a23 1
AOUT_CCCMD	= \$(CC) $aout_ccflags $optimize
d32 1
a32 1
AOUT_CLDFLAGS_DLL	= -Zexe -Zmt -Zcrtdll
d36 4
d43 1
a43 1
$(LIBPERL): perl.imp perl.dll perl5.def
d46 1
a46 1
$(AOUT_LIBPERL_DLL): perl.imp perl.dll perl5.def
d56 3
a58 1
perl.dll: $(obj) perl5.def perl$(OBJ_EXT)
d62 2
a63 2
	echo "LIBRARY 'Perl' INITINSTANCE TERMINSTANCE"	> $@@
	echo DESCRIPTION "'Perl interpreter, export autogenerated'"	>>$@@
a67 10
	echo '  "ctermid"'				>>$@@
	echo '  "get_sysinfo"'				>>$@@
	echo '  "Perl_OS2_init"'			>>$@@
	echo '  "OS2_Perl_data"'			>>$@@
	echo '  "dlopen"'				>>$@@
	echo '  "dlsym"'				>>$@@
	echo '  "dlerror"'				>>$@@
	echo '  "my_tmpfile"'				>>$@@
	echo '  "my_tmpnam"'				>>$@@
	echo '  "my_flock"'				>>$@@
d88 2
a89 2
perl.linkexp: perl.exports perl.map
	cat perl.exports perl.map | sort | uniq -d | sed -e 's/\w\+/  "\0"/' > perl.linkexp
d99 1
a99 1
depend: os2ish.h dlfcn.h 
d105 1
a105 1
	cp $< $@@
d108 1
a108 1
	cp $< $@@
d111 4
a114 1
	cp $< $@@
d117 1
a117 1
	cp $< $@@
d124 8
d168 2
a169 2
miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) ext.libs
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) `cat ext.libs` $(libs)
d197 11
a207 3
lib/auto/OS2/*/%.a : ext/OS2/%/Makefile.aout
	cd ext/OS2/$(basename $(notdir $@@)) ; make -f Makefile.aout config || echo "$make config failed, continuing anyway..."
	cd ext/OS2/$(basename $(notdir $@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=
d209 34
d244 1
a244 1
	cd ext/$(basename $(notdir $@@)) ; make -f Makefile.aout config || echo "$make config failed, continuing anyway..."
a245 5

.PRECIOUS : ext/%/Makefile.aout ext/OS2/%/Makefile.aout

ext/OS2/%/Makefile.aout : miniperl_
	cd $(dir $@@) ; ../../../miniperl_ -I ../../../lib Makefile.PL MAKEFILE=Makefile.aout INSTALLDIRS=perl 
@


1.1
log
@Initial revision
@
text
@d1 24
a24 2
# This file is read by Makefile.SH to produce rules for $(perllib)
# We insert perl5.def since I do not know how to generate it yet.
d27 5
a31 2
$(perllib): perl.imp perl.dll perl5.def
	emximp -o $(perllib) perl.imp
d35 4
d41 1
a41 1
	$(LD) $(LDDLFLAGS) -o $@@ perl$(OBJ_EXT) $(obj) -lsocket perl5.def
d51 1
d54 6
a73 2
# We assume here that perl is available somewhere ...

d75 2
a76 2
	(echo '#include "EXTERN.h"'; echo '#include "perl.h"' ; \
			echo '#include "perl.exp"') | \
a79 2
#		perl -ne 'print if (/^#!/ .. /^#\s/) && s/^(\w+) *$$/$$1/' > $@@

d83 7
a89 4
perl.map: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT)
	$(CC) $(LARGE) $(CLDFLAGS) $(CCDLFLAGS) -o dummy.exe miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) $(obj) -lsocket -lm -Zmap -Zlinker /map
	awk '{if ($$3 == "") print $$2}' <dummy.map | sort | uniq > perl.map
	rm dummy.exe dummy.map
d91 1
a91 1
depend: os2ish.h
d99 3
d105 8
d116 77
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d1 2
a2 40
# This file is read by Makefile.SH to produce rules for $(LIBPERL) (and
# some additional rules as well).

# Rerun `sh Makefile.SH; make depend' after making any change.

# Additional rules supported: perl_, aout_test, aout_install, use them
# for a.out style perl (which may fork).

perl_version="5.00${PATCHLEVEL}_$SUBVERSION"
case "$archname" in
 *-thread*)	perl_version="${perl_version}-threaded";;
esac

dll_post="`echo $perl_version | sum | awk '{print $1}'`"
dll_post="`printf '%x' $dll_post | tr '[a-z]' '[A-Z]'`"

$spitshell >>Makefile <<!GROK!THIS!

PERL_VERSION = $perl_version

OPTIMIZE	= $optimize
AOUT_OPTIMIZE	= \$(OPTIMIZE)
AOUT_CCCMD	= \$(CC) $aout_ccflags \$(AOUT_OPTIMIZE)
AOUT_AR		= $aout_ar
AOUT_OBJ_EXT	= $aout_obj_ext
AOUT_LIB_EXT	= $aout_lib_ext
AOUT_LIBPERL	= libperl$aout_lib_ext
AOUT_CLDFLAGS	= $aout_ldflags

AOUT_LIBPERL_DLL	= libperl_dll$aout_lib_ext
AOUT_CCCMD_DLL	= \$(CC) -DDOSISH -DOS2=2 -DEMBED -I. -DPACK_MALLOC -DDEBUGGING_MSTATS -DTWO_POT_OPTIMIZE -DPERL_EMERGENCY_SBRK
AOUT_CLDFLAGS_DLL	= -Zexe -Zmt -Zcrtdll -Zstack 32000

LD_OPT		= $optimize

PERL_DLL_BASE	= perl$dll_post
PERL_DLL	= \$(PERL_DLL_BASE)\$(DLSUFFIX)
CONFIG_ARGS	= $config_args

!GROK!THIS!
d5 2
a6 5
$(LIBPERL): perl.imp $(PERL_DLL) perl5.def
	emximp -o $(LIBPERL) perl.imp

$(AOUT_LIBPERL_DLL): perl.imp $(PERL_DLL) perl5.def
	emximp -o $(AOUT_LIBPERL_DLL) perl.imp
a9 6
	echo	'emx_calloc		emxlibcm	400	?' >> $@@
	echo	'emx_free		emxlibcm	401	?' >> $@@
	echo	'emx_malloc		emxlibcm	402	?' >> $@@
	echo	'emx_realloc		emxlibcm	403	?' >> $@@

perl_dll: $(PERL_DLL)
d11 2
a12 2
$(PERL_DLL): $(obj) perl5.def perl$(OBJ_EXT)
	$(LD) $(LD_OPT) $(LDDLFLAGS) -o $@@ perl$(OBJ_EXT) $(obj) $(libs) perl5.def
d15 2
a16 2
	echo "LIBRARY '$(PERL_DLL_BASE)' INITINSTANCE TERMINSTANCE"	> $@@
	echo DESCRIPTION "'Perl interpreter v$(PERL_VERSION), export autogenerated, built with $(CONFIG_ARGS)'"	>>$@@
d21 3
d38 2
d41 2
a42 2
	(echo "#include \"EXTERN.h\" \n#include \"perl.h\" \n#include \"perl.exp\"";	\
	 echo "malloc\nrealloc\ncalloc\nfree") | \
d46 1
a46 2
perl.linkexp: perl.exports perl.map  os2/os2.sym
	cat perl.exports os2/os2.sym perl.map | sort | uniq -d | sed -e 's/\w\+/  "\0"/' > perl.linkexp
d48 2
a49 1
# We link miniperl statically, since .DLL depends on $(DYNALOADER) 
d51 4
a54 5
perl.map miniperl: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT)
	$(CC) $(LARGE) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) $(obj) $(libs) -Zmap -Zlinker /map
	awk '{if ($$3 == "") print $$2}' <miniperl.map | sort | uniq > perl.map
	rm miniperl.map
	@@./miniperl -w -Ilib -MExporter -e 0 || $(MAKE) minitest
d56 1
a56 1
depend: os2ish.h dlfcn.h os2thread.h os2.c
d62 1
a62 4
	cp -f $< $@@

dl_os2.c: os2/dl_os2.c os2ish.h
	cp -f $< $@@
d65 1
a65 20
	cp -f $< $@@

os2thread.h: os2/os2thread.h
	cp -f $< $@@

dlfcn.h: os2/dlfcn.h
	cp -f $< $@@

# This one is compiled OMF, so cannot fork():

perl___: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(LARGE) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)

# This one is compiled -Zsys, so cannot do many things:

# Remove -Zcrtdll, add -Zsys
SYS_CLDFLAGS = -Zexe -Zomf -Zmt -Zsys -Zstack 32000

perl_sys: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(LARGE) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o perl_sys perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
a69 114

# Aout section:

aout_obj = $(addsuffix $(AOUT_OBJ_EXT),$(basename $(obj)))
AOUT_DYNALOADER = $(addsuffix $(AOUT_LIB_EXT),$(basename $(DYNALOADER)))
aout_static_ext = $(addsuffix $(AOUT_LIB_EXT),$(basename $(dynamic_ext)))
aout_static_lib = $(addsuffix $(LIB_EXT),$(basename $(dynamic_ext)))

aout_static_ext_dll = $(addsuffix $(AOUT_LIB_EXT),$(basename $(static_ext)))
DYNALOADER_OBJ = ext/DynaLoader/DynaLoader$(OBJ_EXT)
aout_static_ext_dll = $(addsuffix $(AOUT_LIB_EXT),$(basename $(static_ext)))
AOUT_DYNALOADER_OBJ = $(addsuffix $(AOUT_OBJ_EXT),$(basename $(DYNALOADER_OBJ)))

$(AOUT_DYNALOADER_OBJ) : $(DYNALOADER_OBJ)
	emxaout -o $@@ $<

$(DYNALOADER_OBJ) : $(DYNALOADER)
	@@sh -c true

$(AOUT_LIBPERL) : $(aout_obj) perl$(AOUT_OBJ_EXT)
	rm -f $@@
	$(AOUT_AR) rcu $@@ perl$(AOUT_OBJ_EXT) $(aout_obj)

.c$(AOUT_OBJ_EXT):
	$(AOUT_CCCMD) $(PLDLFLAGS) -c $*.c

perlmain(AOUT_OBJ_EXT): perlmain.c
	$(AOUT_CCCMD_DLL) $(PLDLFLAGS) -c perlmain.c

aout_perlmain.c: miniperlmain.c config.sh makefile $(static_ext_autoinit)
	sh writemain $(DYNALOADER) $(aout_static_lib) > tmp
	sh mv-if-diff tmp aout_perlmain.c

miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL)
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(libs)

perl_: $& aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(AOUT_DYNALOADER) $(aout_static_ext) ext.libs
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o perl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER) $(aout_static_ext) $(AOUT_LIBPERL) `cat ext.libs` $(libs)

perl : perl__ perl___

perl__: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(CC) $(LARGE) $(CLDFLAGS) $(CCDLFLAGS) -o perl__ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /PM:PM

# Forking dynamically loaded perl:

perl: $& perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) ext.libs
	$(CC) $(LARGE) $(AOUT_CLDFLAGS_DLL) $(CCDLFLAGS) -o perl perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) `cat ext.libs` $(libs)

clean: aout_clean

aout_clean:
	-rm *perl_.* *.o *.a lib/auto/*/*.a ext/*/Makefile.aout

aout_install: perl_ aout_install.perl

aout_install.perl: perl_ installperl
	./perl_ installperl

aout_test: perl_
	- cd t && (rm -f perl_$(EXE_EXT); $(LNS) ../perl_$(EXE_EXT) perl$(EXE_EXT)) && ./perl TEST </dev/tty

# To test with harness, set HARNESS_BAD_EXITCODE=2

sys_test: perl_sys
	- cd t && (rm -f perl_$(EXE_EXT); $(LNS) ../perl_sys$(EXE_EXT) perl$(EXE_EXT)) && ./perl TEST </dev/tty

sys_harness: perl_sys
	- cd t && (rm -f perl_$(EXE_EXT); $(LNS) ../perl_sys$(EXE_EXT) perl$(EXE_EXT)) && env HARNESS_BAD_EXITCODE=2 ./perl harness </dev/tty

!NO!SUBS!

# Now we need to find directories in ./ext/ which are two level deep

dirs=''
preci='ext/%/Makefile.aout '
for d in ext/*
do
	# echo "Checking '$d'..."
	f="`echo $d/*/Makefile.PL`"
	# SDBFile/sdbm, skip kid makefile
	if test ! -e "$d/Makefile.PL" -a ! "$f" = ""; then
	    dirs="$dirs $d"
	    preci="$preci $d/%/Makefile.aout"
	fi
done

$spitshell >>Makefile <<!GROK!THIS!
.PRECIOUS : $preci

!GROK!THIS!

for d in $dirs
do
    p=`basename $d`
    $spitshell >>Makefile <<!GROK!THIS!
lib/auto/$p/*/%.a : ext/$p/%/Makefile.aout
	@@cd ext/$p/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd ext/$p/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=

$d/%/Makefile.aout : miniperl_
	cd \$(dir \$@@) ; ../../../miniperl_ -I ../../../lib Makefile.PL MAKEFILE=Makefile.aout INSTALLDIRS=perl 

!GROK!THIS!

done

$spitshell >>Makefile <<'!NO!SUBS!'
lib/auto/*/%.a : ext/%/Makefile.aout
	@@cd ext/$(basename $(notdir $@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd ext/$(basename $(notdir $@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=

ext/%/Makefile.aout : miniperl_
	cd $(dir $@@) ; ../../miniperl_ -I ../../lib Makefile.PL MAKEFILE=Makefile.aout INSTALLDIRS=perl 
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d9 1
a9 1
perl_fullversion="5.00${PERL_VERSION}_$PERL_SUBVERSION"
d11 1
a11 1
 *-thread*)	perl_fullversion="${perl_fullversion}-threaded";;
d14 1
a14 1
dll_post="`echo $perl_fullversion | sum | sed -e 's/^0*//' | awk '{print $1}'`"
d19 1
a19 1
PERL_FULLVERSION = $perl_fullversion
d23 1
a23 1
AOUT_CCCMD	= \$(CC) -DPERL_CORE $aout_ccflags \$(AOUT_OPTIMIZE)
a37 1
TEST_PERL_DLL	= perl_dll_t
a57 5
perl_dll_t: t/$(PERL_DLL)

t/$(PERL_DLL): $(PERL_DLL)
	$(LNS) $(PERL_DLL) t/$(PERL_DLL)

d59 1
a59 1
	$(LD) $(LD_OPT) $(LDDLFLAGS) -o $@@ perl$(OBJ_EXT) $(obj) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
d61 1
a61 1
perl5.olddef: perl.linkexp
d63 1
a63 1
	echo DESCRIPTION "'Perl interpreter v$(PERL_FULLVERSION), export autogenerated, built with $(CONFIG_ARGS)'"	>>$@@
d93 5
a97 3
miniperl.map miniperl: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT)
	$(CC) $(LARGE) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) `echo $(obj)|sed -e 's/\bop\./opmini./g'` $(libs) -Zmap -Zlinker /map/PM:VIO
	@@./miniperl -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest
a160 3
opmini$(AOUT_OBJ_EXT): op.c
	$(AOUT_CCCMD) $(PLDLFLAGS) -DPERL_EXTERNAL_GLOB -o opmini$(AOUT_OBJ_EXT) -c op.c

d168 2
a169 2
miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) opmini$(AOUT_OBJ_EXT)
	$(CC) $(LARGE) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) opmini$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(libs)
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d44 1
a44 1
$(LIBPERL): perl.imp $(PERL_DLL) perl5.def libperl_override.lib
a46 9
libperl_override.imp: os2/os2add.sym
	./miniperl -wnle 'print "$$_\t$(PERL_DLL_BASE)\t$$_\t?"' os2/os2add.sym > tmp.imp
	echo	'strdup	$(PERL_DLL_BASE)	Perl_strdup	?' >> tmp.imp
	echo	'putenv	$(PERL_DLL_BASE)	Perl_putenv	?' >> tmp.imp
	sh mv-if-diff tmp.imp $@@

libperl_override.lib: libperl_override.imp
	emximp -o $@@ libperl_override.imp

d69 1
a69 1
	echo DESCRIPTION "'Perl interpreter v$(PERL_FULLVERSION), export autogenerated'"	>>$@@
d100 1
a100 1
	$(CC) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) `echo $(obj)|sed -e 's/\bop\./opmini./g'` $(libs) -Zmap -Zlinker /map/PM:VIO
d126 1
a126 1
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
d134 1
a134 1
	$(SHRPENV) $(CC) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o perl_sys perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs)
d176 1
a176 1
	$(CC) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o miniperl_ miniperlmain$(AOUT_OBJ_EXT) opmini$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(libs)
d179 1
a179 1
	$(CC) $(AOUT_CLDFLAGS) $(CCDLFLAGS) -o perl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER) $(aout_static_ext) $(AOUT_LIBPERL) `cat ext.libs` $(libs)
d184 1
a184 1
	$(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl__ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /PM:PM
d189 1
a189 1
	$(CC) $(AOUT_CLDFLAGS_DLL) $(CCDLFLAGS) -o perl perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) `cat ext.libs` $(libs)
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@a16 9
aout_extra_libs=''
aout_extra_sep=''
for xxx in $aout_extra_static_ext; do
  aout_extra_dir=`echo "$xxx" | sed -e 's/::/\//g'`
  aout_extra_lib="lib/auto/$aout_extra_dir/"`basename "$aout_extra_dir"`
  aout_extra_libs="$aout_extra_libs$aout_extra_sep$aout_extra_lib$aout_lib_ext"
  aout_extra_sep=' '
done

d34 1
a34 5
# No -DPERL_CORE
SO_CCCMD	= \$(CC) $ccflags \$(OPTIMIZE)

LD_OPT		= \$(OPTIMIZE)
PERL_DLL_LD_OPT = -Zmap -Zlinker /map
a39 1
AOUT_EXTRA_LIBS	= $aout_extra_libs
a43 1
PREPLIBRARY_LIBPERL = $(LIBPERL)
a45 1
	cp $(LIBPERL) perl.lib
d47 1
a47 1
libperl_override.imp: os2/os2add.sym miniperl
a65 6
.PHONY: perl_dll installcmd aout_clean aout_install aout_install.perl \
	perlrexx test_prep_perl_ test_prep_perl_sys test_prep_perl_stat \
	test_prep_perl_stat_aout test_prep_various \
	stat_aout_harness aout_harness stat_harness sys_harness all_harness \
	stat_aout_test aout_test stat_test sys_test all_test

d74 1
a74 1
	$(LD) $(LD_OPT) $(LDDLFLAGS) $(PERL_DLL_LD_OPT) -o $@@ perl$(OBJ_EXT) $(obj) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
d108 1
a108 5
miniperl.map: miniperl

miniperl.exe: miniperl

miniperl: $(obj) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT)
d132 1
a132 1
# Non-Forking dynamically loaded perl
d134 2
a135 2
perl___$(EXE_EXT) perl___: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /map/PM:VIO
a138 8
# Remove -Zcrtdll
STAT_CLDFLAGS = -Zexe -Zomf -Zmt -Zstack 32000

# Non-forking dynamically loaded perl with a wrong CRT library:

perl_stat: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
	$(SHRPENV) $(CC) $(STAT_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /map/PM:VIO

d140 1
a140 3
SYS_CLDFLAGS = $(STAT_CLDFLAGS) -Zsys

# Non-Forking dynamically loaded perl without EMX - so with wrong CRT library
d143 1
a143 1
	$(SHRPENV) $(CC) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlmain$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) -Zlinker /map/PM:VIO
d146 2
a147 2
	@@perl -e 'die qq{Give the option INSTALLCMDDIR=... to make!} if $$ARGV[0] eq ""' $(INSTALLCMDDIR)
	./miniperl -Ilib os2/perl2cmd.pl $(INSTALLCMDDIR)
d153 2
a154 3
aout_ext = $(dynamic_ext) $(AOUT_EXTRA_LIBS)
aout_static_ext = $(addsuffix $(AOUT_LIB_EXT),$(basename $(aout_ext)))
aout_static_lib = $(addsuffix $(LIB_EXT),$(basename $(aout_ext)))
a169 1
	cp $@@ perl.a
d184 1
a184 3
_preplibrary = miniperl lib/Config.pm lib/lib.pm lib/re.pm

miniperl_: $& miniperlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) opmini$(AOUT_OBJ_EXT) $(_preplibrary)
d187 1
a187 6
# Forking statically loaded perl

# Need a miniperl_ dependency, since $(AOUT_DYNALOADER) is build via implicit
# rules, thus would not rebuild miniperl_ via an explicit rule

perl_$(EXE_EXT) perl_: $& miniperl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(AOUT_DYNALOADER) $(aout_static_ext) ext.libs
d190 1
a190 4
# Remove -Zcrtdll
STAT_AOUT_CLDFLAGS = -Zexe -Zmt -Zstack 32000

# Forking dynamically loaded perl with a wrong CRT library:
d192 1
a192 10
perl_stat_aout$(EXE_EXT) perl_stat_aout: $& perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) ext.libs
	$(SHRPENV) $(CC) $(STAT_AOUT_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) `cat ext.libs` $(libs)

PERLREXX_DLL = perlrexx.dll

perl : perl__ perl___ $(PERLREXX_DLL)

# Dynamically loaded PM-application perl:

perl__$(EXE_EXT) perl__: $& perlmain$(OBJ_EXT) $(LIBPERL) $(DYNALOADER) $(static_ext) ext.libs
d197 1
a197 1
perl$(EXE_EXT) perl: $& perlmain$(AOUT_OBJ_EXT) $(AOUT_DYNALOADER_OBJ) $(aout_static_ext_dll) $(AOUT_LIBPERL_DLL) ext.libs
d210 2
a211 38
perlrexx: $(PERLREXX_DLL)
	@@sh -c true

perlrexx.c: os2/perlrexx.c
	@@cp -f os2/$@@ $@@

# Remove -Zexe, add -Zdll -Zso.  No stack needed
SO_CLDFLAGS = -Zdll -Zso -Zomf -Zmt -Zsys

# A callable-from-REXX DLL

$(PERLREXX_DLL): perlrexx$(OBJ_EXT) perlrexx.def
	$(SHRPENV) $(CC) $(SO_CLDFLAGS) $(CCDLFLAGS) -o $@@ perlrexx$(OBJ_EXT) $(DYNALOADER) $(static_ext) $(LIBPERL) `cat ext.libs` $(libs) perlrexx.def

perlrexx.def: miniperl $(_preplibrary)
	echo	"LIBRARY 'perlrexx' INITINSTANCE TERMINSTANCE"	> tmp.def
	echo	"DESCRIPTION '@@#perl5-porters@@perl.org:`miniperl -Ilib -MConfig -e 'print \$$]'`#@@ REXX to Perl `miniperl -Ilib -MConfig -e 'print \$$Config{version}'` interface'" >> tmp.def
	echo	"EXPORTS"					>> tmp.def
	echo	'  "PERL"'					>> tmp.def
	echo	'  "PERLTERM"'					>> tmp.def
	echo	'  "PERLINIT"'					>> tmp.def
	echo	'  "PERLEXIT"'					>> tmp.def
	echo	'  "PERLEVAL"'					>> tmp.def
	echo	'  "PERLLASTERROR"'				>> tmp.def
	echo	'  "PERLEVALSUBCOMMAND"'			>> tmp.def
	echo	'  "PERLEXPORTALL"'				>> tmp.def
	echo	'  "PERLDROPALL"'				>> tmp.def
	echo	'  "PERLDROPALLEXIT"'				>> tmp.def
	sh mv-if-diff tmp.def $@@


perlrexx$(OBJ_EXT): perlrexx.c
	$(SO_CCCMD) $(PLDLFLAGS) -c perlrexx.c

# To test with harness, one needed to HARNESS_IGNORE_EXITCODE=2

# Define to be empty to get a TTY test
REDIR_TEST = 2>&1 | tee 00_$@@
d213 1
a213 2
test_prep_perl_: test_prep_pre miniperl_ ./perl_$(EXE_EXT)
	PERL=./perl_ $(MAKE) _test_prep
d215 2
a216 1
test_prep_various: test_prep_pre miniperl $(dynamic_ext) $(TEST_PERL_DLL)
d218 2
a219 45
test_prep_perl_sys: test_prep_various ./perl_sys$(EXE_EXT)
	PERL=./perl_sys $(MAKE) _test_prep

test_prep_perl___: test_prep_various ./perl___$(EXE_EXT)
	PERL=./perl___ $(MAKE) _test_prep

test_prep_perl_stat: test_prep_various ./perl_stat$(EXE_EXT)
	PERL=./perl_stat $(MAKE) _test_prep

test_prep_perl_stat_aout: test_prep_various ./perl_stat_aout$(EXE_EXT)
	PERL=./perl_stat_aout $(MAKE) _test_prep

aout_test: test_prep_perl_
	PERL=./perl_ $(MAKE) _test

aout_harness: test_prep_perl_
	-PERL=./perl_ $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

sys_test: test_prep_perl_sys
	PERL=./perl_sys $(MAKE) _test

sys_harness: test_prep_perl_sys
	-PERL=./perl_sys $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

stat_test: test_prep_perl_stat
	PERL=./perl_stat $(MAKE) _test

stat_harness: test_prep_perl_stat
	-PERL=./perl_stat $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

stat_aout_test: test_prep_perl_stat_aout
	PERL=./perl_stat_aout $(MAKE) _test

stat_aout_harness: test_prep_perl_stat_aout
	-PERL=./perl_stat_aout $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

perl___test: test_prep_perl___
	PERL=./perl___ $(MAKE) _test

perl___harness: test_prep_perl___
	-PERL=./perl___ $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

all_test: test aout_test perl___test sys_test stat_test stat_aout_test

all_harness: test_harness aout_harness perl___harness sys_harness stat_harness stat_aout_harness
d223 1
a223 3
# Now we need to find directories in ./ext/ which are up to 3 level deep
# Currently (2001/06) there is no directories 4 levels deep.
# (Only directories so that there is no Makefile.PL some levels up matter.)
a225 1
ddirs=''
d229 6
a234 37
	# echo "...Checking '$d'..."
	# skip the kid if the parent exists: cmp SDBFile/sdbm, done by MakeMaker
	if test ! -e "$d/Makefile.PL"; then
	    # Need to treat subdirectories manually
	    # echo "...Checking subdirs of '$d'..."
	    d_treated=''
	    for dd in $d/*
	    do
		if test ! -d $dd; then
		    continue
		fi
		if test -e "$dd/Makefile.PL"; then
		    if test "X$d_treated" = "X"; then
			d_treated=1
			# echo "...Found parentless 2-level deep Makefile.PL's in $d/*/:" $d/*/Makefile.PL
			dirs="$dirs $d"
			preci="$preci $d/%/Makefile.aout"
		    fi
		else
		    # Need to treat subsubdirectories manually
		    dd_treated=''
		    for ddd in $dd/*
		    do
			if test ! -d $ddd; then
			    continue
			fi
			if test -e "$ddd/Makefile.PL"; then
			    if test "X$dd_treated" = "X"; then
				dd_treated=1
				# echo "...Found parentless 3-level deep Makefile.PL's in $dd/*/:" $dd/*/Makefile.PL
				ddirs="$ddirs $dd"
				preci="$preci $dd/%/Makefile.aout"
			    fi
			fi
		    done
		fi
	   done
a240 20
# Set this to FORCE to force a rebuilt of aout extensions

AOUT_EXTENSIONS_FORCE = 

!GROK!THIS!

for d in $ddirs
do
    # Remove the leading component ext/
    dd=`dirname $d`
    pp=`basename $dd`
    p=$pp/`basename $d`
    $spitshell >>Makefile <<!GROK!THIS!
lib/auto/$p/*/%.a : $d/%/Makefile.aout
	@@cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=

$d/%/Makefile.aout : miniperl_ \$(_preplibrary) \$(AOUT_EXTENSIONS_FORCE)
	cd \$(dir \$@@) ; ../../../../miniperl_ -I ../../../../lib Makefile.PL FIRST_MAKEFILE=Makefile.aout INSTALLDIRS=perl PERL_CORE=1

a242 2
done

d247 3
a249 3
lib/auto/$p/*/%.a : $d/%/Makefile.aout
	@@cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout config || echo "\$(MAKE) config failed, continuing anyway..."
	cd $d/\$(basename \$(notdir \$@@)) ; make -f Makefile.aout LINKTYPE=static CCCDLFLAGS=
d251 2
a252 2
$d/%/Makefile.aout : miniperl_ \$(_preplibrary) \$(AOUT_EXTENSIONS_FORCE)
	cd \$(dir \$@@) ; ../../../miniperl_ -I ../../../lib Makefile.PL FIRST_MAKEFILE=Makefile.aout INSTALLDIRS=perl PERL_CORE=1
a257 3
# We need to special-case OS2/DLL/DLL.a, since the recipe above will
# try to find it in ext/OS2/DLL

a258 3
lib/auto/OS2/DLL/DLL.a : lib/auto/OS2/REXX/REXX.a
	@@sh -c true

d263 2
a264 2
ext/%/Makefile.aout : miniperl_ $(_preplibrary) $(AOUT_EXTENSIONS_FORCE)
	cd $(dir $@@) ; ../../miniperl_ -I ../../lib Makefile.PL FIRST_MAKEFILE=Makefile.aout INSTALLDIRS=perl PERL_CORE=1
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d30 1
d47 1
a47 1
PERL_DLL_LD_OPT = -Zmap -Zlinker /map/li
d59 1
a59 1
$(LIBPERL): perl.imp perl5.def libperl_override.lib
d63 1
a63 5
imp_version: $(FIRSTMAKEFILE)
	echo $(PERL_DLL_BASE) > imp_version.tmp
	sh mv-if-diff imp_version.tmp $@@

libperl_override.imp: os2/os2add.sym miniperl imp_version
a71 10
libperl_dllmain.imp: imp_version
	echo	'main	$(PERL_DLL_BASE)	dll_perlmain	?' >> tmpdll.imp
	sh mv-if-diff tmpdll.imp $@@

libperl_dllmain.lib: libperl_dllmain.imp
	emximp -o $@@ libperl_dllmain.imp

libperl_dllmain.a: libperl_dllmain.imp
	emximp -o $@@ libperl_dllmain.imp

d75 1
a75 1
perl.imp: perl5.def imp_version
d86 1
a86 2
	stat_aout_test aout_test stat_test sys_test all_test \
	perl___harness test_harness_redir
d95 2
a96 2
$(PERL_DLL): $(obj) perl5.def perl$(OBJ_EXT) perlmain$(OBJ_EXT) $(DYNALOADER)
	$(LD) $(LD_OPT) $(LDDLFLAGS) $(PERL_DLL_LD_OPT) -o $@@ perl$(OBJ_EXT) $(obj) perlmain$(OBJ_EXT) $(DYNALOADER) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
a158 1
# Make many: they are useful in low-memory conditions (floppy boot?  Lot of shared memory used?)
d160 2
a161 8
perl___$(EXE_EXT) perl___: $& libperl_dllmain$(LIB_EXT)
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl___ libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 8192 -o perl___8 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 4096 -o perl___4 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 2048 -o perl___2 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 1024 -o perl___1 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 512 -o perl___05 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
	$(SHRPENV) $(CC) $(CLDFLAGS) $(CCDLFLAGS) -Zstack 320 -o perl___03 libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
d170 2
a171 2
perl_stat perl_stat$(EXE_EXT): $& libperl_dllmain$(LIB_EXT)
	$(SHRPENV) $(CC) $(STAT_CLDFLAGS) $(CCDLFLAGS) -o perl_stat libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
d178 2
a179 2
perl_sys perl_sys$(EXE_EXT): $& libperl_dllmain$(LIB_EXT)
	$(SHRPENV) $(CC) $(SYS_CLDFLAGS) $(CCDLFLAGS) -o perl_sys libperl_dllmain$(LIB_EXT) -Zlinker /map/PM:VIO
d189 1
a189 1
aout_ext = $(static_ext) $(dynamic_ext) $(AOUT_EXTRA_LIBS)
d207 1
a207 1
	cp $@@ perl$(AOUT_LIB_EXT)
d218 3
a220 8
# Assume that extensions are at most 4 deep (this is so with 5.8.1)
aout_extlist: $(aout_static_ext) $(AOUT_DYNALOADER)
	echo lib/auto/*.a lib/auto/*/*.a lib/auto/*/*/*.a lib/auto/*/*/*/*.a | tr ' ' '\n' | grep -v '\*' > $@@.tmp
	sh mv-if-diff $@@.tmp $@@

aout_perlmain.c: miniperlmain.c config.sh makefile $(static_ext_autoinit) $(aout_static_ext) writemain aout_extlist
	sh writemain `cat aout_extlist` > aout_perlmain.tmp
	sh mv-if-diff aout_perlmain.tmp aout_perlmain.c
d232 2
a233 2
perl_$(EXE_EXT) perl_: $& miniperl_ aout_perlmain$(AOUT_OBJ_EXT) $(AOUT_LIBPERL) $(AOUT_DYNALOADER) $(aout_static_ext) ext.libs aout_extlist
	$(CC) $(AOUT_CLDFLAGS) $(CCDLFLAGS) $(OPTIMIZE) -o perl_ aout_perlmain$(AOUT_OBJ_EXT) `cat aout_extlist` $(AOUT_LIBPERL) `cat ext.libs` $(libs)
d240 2
a241 2
perl_stat_aout$(EXE_EXT) perl_stat_aout: $& libperl_dllmain$(AOUT_LIB_EXT)
	$(SHRPENV) $(CC) $(STAT_AOUT_CLDFLAGS) $(CCDLFLAGS) $(OPTIMIZE) -o perl_stat_aout libperl_dllmain$(AOUT_LIB_EXT)
d245 1
a245 1
perl perl$(EXE_EXT) : perl__ perl___ $(PERLREXX_DLL) $(PERL_DLL)
d249 2
a250 2
perl__$(EXE_EXT) perl__: $& libperl_dllmain$(LIB_EXT)
	$(CC) $(CLDFLAGS) $(CCDLFLAGS) -o perl__ libperl_dllmain$(LIB_EXT) -Zlinker /PM:PM
d254 2
a255 2
perl$(EXE_EXT) perl: $& libperl_dllmain$(AOUT_LIB_EXT)
	$(CC) $(AOUT_CLDFLAGS_DLL) $(CCDLFLAGS) -o perl libperl_dllmain$(AOUT_LIB_EXT)
d260 1
a260 1
	-rm *perl_.* *.o *.a lib/auto/*/*.a lib/auto/*/*/*.a lib/auto/*/*/*/*.a ext/*/Makefile.aout ext/*/*/Makefile.aout  ext/*/*/*/Makefile.aout
d355 1
a355 4
test_harness_redir: test_prep
	-PERL=./perl $(MAKE) TESTFILE=harness _test $(REDIR_TEST)

all_harness: test_harness_redir aout_harness perl___harness sys_harness stat_harness stat_aout_harness
d389 1
a389 1
		    for ddd in $dd/*		# ext/*/*/*/Makefile.PL
a406 6

# ext/threads is marked as NORECURS, so we need to specialcase it
if echo "$static_ext $dynamic_ext" | grep -q threads/shared ; then
   preci="$preci ext/threads/%/Makefile.aout"
   dirs="$dirs ext/threads"
fi
@


1.1.1.7
log
@perl 5.8.3 from CPAN
@
text
@d291 1
a291 1
	./perl_ installperl --destdir="$(DESTDIR)"
@


1.1.1.8
log
@perl 5.8.8 import
@
text
@d63 2
a64 1
	echo $(PERL_DLL_BASE) > $@@
d67 4
a70 3
	./miniperl -wnle 'print "$$_\t$(PERL_DLL_BASE)\t$$_\t?"' os2/os2add.sym > $@@
	echo	'strdup	$(PERL_DLL_BASE)	Perl_strdup	?' >> $@@
	echo	'putenv	$(PERL_DLL_BASE)	Perl_putenv	?' >> $@@
d76 2
a77 1
	echo	'main	$(PERL_DLL_BASE)	dll_perlmain	?' >> $@@
d241 2
a242 1
	echo lib/auto/*.a lib/auto/*/*.a lib/auto/*/*/*.a lib/auto/*/*/*/*.a | tr ' ' '\n' | grep -v '\*' > $@@
d245 2
a246 1
	sh writemain `cat aout_extlist` > aout_perlmain.c
d308 14
a321 13
	echo	"LIBRARY 'perlrexx' INITINSTANCE TERMINSTANCE"	> $@@
	echo	"DESCRIPTION '@@#perl5-porters@@perl.org:`miniperl -Ilib -MConfig -e 'print \$$]'`#@@ REXX to Perl `miniperl -Ilib -MConfig -e 'print \$$Config{version}'` interface'" >> $@@
	echo	"EXPORTS"					>> $@@
	echo	'  "PERL"'					>> $@@
	echo	'  "PERLTERM"'					>> $@@
	echo	'  "PERLINIT"'					>> $@@
	echo	'  "PERLEXIT"'					>> $@@
	echo	'  "PERLEVAL"'					>> $@@
	echo	'  "PERLLASTERROR"'				>> $@@
	echo	'  "PERLEVALSUBCOMMAND"'			>> $@@
	echo	'  "PERLEXPORTALL"'				>> $@@
	echo	'  "PERLDROPALL"'				>> $@@
	echo	'  "PERLDROPALLEXIT"'				>> $@@
@


1.1.1.9
log
@import perl 5.10.0 from CPAN
@
text
@d74 1
a74 1
	echo	'main	$(PERL_DLL_BASE)	dll_perlmain	?' > $@@
a220 4

# Quick hack to construct directories necessary for /*/% stuff:

$(aout_static_ext) : $(static_ext) $(dynamic_ext)
@


1.1.1.10
log
@Perl 5.12.2 from CPAN
@
text
@d484 1
a484 1
# try to find it in ext/OS2-DLL
@


1.1.1.11
log
@Import perl-5.24.2
@
text
@d106 2
a107 2
$(PERL_DLL): $(perllib_objs) perl5.def perl$(OBJ_EXT) perlmain$(OBJ_EXT) $(DYNALOADER)
	$(LD) $(LD_OPT) $(LDDLFLAGS) $(PERL_DLL_LD_OPT) -o $@@ perl$(OBJ_EXT) $(perllib_objs) perlmain$(OBJ_EXT) $(DYNALOADER) $(libs) perl5.def || ( rm $(PERL_DLL) && sh -c false )
d145 2
a146 2
miniperl: $(perllib_objs) perl$(OBJ_EXT) miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT)
	$(CC) $(CLDFLAGS) -o miniperl miniperlmain$(OBJ_EXT) perl$(OBJ_EXT) `echo $(perllib_objs)|sed -e 's/\bop\./opmini./g'` $(libs) -Zmap -Zlinker /map/PM:VIO
d205 1
a205 1
aout_obj = $(addsuffix $(AOUT_OBJ_EXT),$(basename $(perllib_objs)))
d228 1
a228 1
	$(AOUT_AR) rc $@@ perl$(AOUT_OBJ_EXT) $(aout_obj)
@


