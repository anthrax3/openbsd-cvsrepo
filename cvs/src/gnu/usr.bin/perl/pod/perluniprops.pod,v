head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.02.05.00.34.36;	author afresh1;	state Exp;
branches;
next	1.4;
commitid	14g5t9TCF9ptuB8D;

1.4
date	2014.11.17.21.03.19;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	KQNGgR8uwAxYXWj8;

1.3
date	2014.03.24.15.05.33;	author afresh1;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.25.20.40.59;	author sthen;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.28.16.25.03;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Apply pre-built unicore patch - perl-5.24.1
@
text
@=begin comment

# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!


To change this file, edit lib/unicore/mktables instead.

=end comment

=head1 NAME

perluniprops - Index of Unicode Version 8.0.0 character properties in Perl

=head1 DESCRIPTION

This document provides information about the portion of the Unicode database
that deals with character properties, that is the portion that is defined on
single code points.  (L</Other information in the Unicode data base>
below briefly mentions other data that Unicode provides.)

Perl can provide access to all non-provisional Unicode character properties,
though not all are enabled by default.  The omitted ones are the Unihan
properties (accessible via the CPAN module L<Unicode::Unihan>) and certain
deprecated or Unicode-internal properties.  (An installation may choose to
recompile Perl's tables to change this.  See L<Unicode character
properties that are NOT accepted by Perl>.)

For most purposes, access to Unicode properties from the Perl core is through
regular expression matches, as described in the next section.
For some special purposes, and to access the properties that are not suitable
for regular expression matching, all the Unicode character properties that
Perl handles are accessible via the standard L<Unicode::UCD> module, as
described in the section L</Properties accessible through Unicode::UCD>.

Perl also provides some additional extensions and short-cut synonyms
for Unicode properties.

This document merely lists all available properties and does not attempt to
explain what each property really means.  There is a brief description of each
Perl extension; see L<perlunicode/Other Properties> for more information on
these.  There is some detail about Blocks, Scripts, General_Category,
and Bidi_Class in L<perlunicode>, but to find out about the intricacies of the
official Unicode properties, refer to the Unicode standard.  A good starting
place is L<http://www.unicode.org/reports/tr44/>.

Note that you can define your own properties; see
L<perlunicode/"User-Defined Character Properties">.

=head1 Properties accessible through C<\p{}> and C<\P{}>

The Perl regular expression C<\p{}> and C<\P{}> constructs give access to
most of the Unicode character properties.  The table below shows all these
constructs, both single and compound forms.

B<Compound forms> consist of two components, separated by an equals sign or a
colon.  The first component is the property name, and the second component is
the particular value of the property to match against, for example,
C<\p{Script: Greek}> and C<\p{Script=Greek}> both mean to match characters
whose Script property value is Greek.

B<Single forms>, like C<\p{Greek}>, are mostly Perl-defined shortcuts for
their equivalent compound forms.  The table shows these equivalences.  (In our
example, C<\p{Greek}> is a just a shortcut for C<\p{Script=Greek}>.)
There are also a few Perl-defined single forms that are not shortcuts for a
compound form.  One such is C<\p{Word}>.  These are also listed in the table.

In parsing these constructs, Perl always ignores Upper/lower case differences
everywhere within the {braces}.  Thus C<\p{Greek}> means the same thing as
C<\p{greek}>.  But note that changing the case of the C<"p"> or C<"P"> before
the left brace completely changes the meaning of the construct, from "match"
(for C<\p{}>) to "doesn't match" (for C<\P{}>).  Casing in this document is
for improved legibility.

Also, white space, hyphens, and underscores are normally ignored
everywhere between the {braces}, and hence can be freely added or removed
even if the C</x> modifier hasn't been specified on the regular expression.
But in the table below a 'B<T>' at the beginning of an entry
means that tighter (stricter) rules are used for that entry:

=over 4

=over 4

=item Single form (C<\p{name}>) tighter rules:

White space, hyphens, and underscores ARE significant
except for:

=over 4

=item * white space adjacent to a non-word character

=item * underscores separating digits in numbers

=back

That means, for example, that you can freely add or remove white space
adjacent to (but within) the braces without affecting the meaning.

=item Compound form (C<\p{name=value}> or C<\p{name:value}>) tighter rules:

The tighter rules given above for the single form apply to everything to the
right of the colon or equals; the looser rules still apply to everything to
the left.

That means, for example, that you can freely add or remove white space
adjacent to (but within) the braces and the colon or equal sign.

=back

=back

Some properties are considered obsolete by Unicode, but still available.
There are several varieties of obsolescence:

=over 4

=over 4

=item Stabilized

A property may be stabilized.  Such a determination does not indicate
that the property should or should not be used; instead it is a declaration
that the property will not be maintained nor extended for newly encoded
characters.  Such properties are marked with an 'B<S>' in the
table.

=item Deprecated

A property may be deprecated, perhaps because its original intent
has been replaced by another property, or because its specification was
somehow defective.  This means that its use is strongly
discouraged, so much so that a warning will be issued if used, unless the
regular expression is in the scope of a C<S<no warnings 'deprecated'>>
statement.  A 'B<D>' flags each such entry in the table, and
the entry there for the longest, most descriptive version of the property will
give the reason it is deprecated, and perhaps advice.  Perl may issue such a
warning, even for properties that aren't officially deprecated by Unicode,
when there used to be characters or code points that were matched by them, but
no longer.  This is to warn you that your program may not work like it did on
earlier Unicode releases.

A deprecated property may be made unavailable in a future Perl version, so it
is best to move away from them.

A deprecated property may also be stabilized, but this fact is not shown.

=item Obsolete

Properties marked with an 'B<O>' in the table are considered (plain)
obsolete.  Generally this designation is given to properties that Unicode once
used for internal purposes (but not any longer).

=item Discouraged

This is not actually a Unicode-specified obsolescence, but applies to certain
Perl extensions that are present for backwards compatibility, but are
discouraged from being used.  These are not obsolete, but their meanings are
not stable.  Future Unicode versions could force any of these extensions to be
removed without warning, replaced by another property with the same name that
means something different.  An 'B<X>' flags each such entry in the
table.  Use the equivalent shown instead.


In particular, matches in the Block property have single forms
defined by Perl that begin with C<"In_">, C<"Is_>, or even with no prefix at
all,  Like all B<DISCOURAGED> forms, these are not stable.  For example,
C<\p{Block=Deseret}> can currently be written as C<\p{In_Deseret}>,
C<\p{Is_Deseret}>, or C<\p{Deseret}>.  But, a new Unicode version may
come along that would force Perl to change the meaning of one or more of
these, and your program would no longer be correct.  Currently there are no
such conflicts with the form that begins C<"In_">, but there are many with the
other two shortcuts, and Unicode continues to define new properties that begin
with C<"In">, so it's quite possible that a conflict will occur in the future.
The compound form is guaranteed to not become obsolete, and its meaning is
clearer anyway.  See L<perlunicode/"Blocks"> for more information about this.


=back

=back

The table below has two columns.  The left column contains the C<\p{}>
constructs to look up, possibly preceded by the flags mentioned above; and
the right column contains information about them, like a description, or
synonyms.  The table shows both the single and compound forms for each
property that has them.  If the left column is a short name for a property,
the right column will give its longer, more descriptive name; and if the left
column is the longest name, the right column will show any equivalent shortest
name, in both single and compound forms if applicable.

If braces are not needed to specify a property (e.g., C<\pL>), the left
column contains both forms, with and without braces.

The right column will also caution you if a property means something different
than what might normally be expected.

All single forms are Perl extensions; a few compound forms are as well, and
are noted as such.

Numbers in (parentheses) indicate the total number of Unicode code points
matched by the property.  For emphasis, those properties that match no code
points at all are listed as well in a separate section following the table.

Most properties match the same code points regardless of whether C<"/i">
case-insensitive matching is specified or not.  But a few properties are
affected.  These are shown with the notation S<C<(/i= I<other_property>)>>
in the second column.  Under case-insensitive matching they match the
same code pode points as the property I<other_property>.

There is no description given for most non-Perl defined properties (See
L<http://www.unicode.org/reports/tr44/> for that).

For compactness, 'B<*>' is used as a wildcard instead of showing all possible
combinations.  For example, entries like:

 \p{Gc: *}                                  \p{General_Category: *}

mean that 'Gc' is a synonym for 'General_Category', and anything that is valid
for the latter is also valid for the former.  Similarly,

 \p{Is_*}                                   \p{*}

means that if and only if, for example, C<\p{Foo}> exists, then
C<\p{Is_Foo}> and C<\p{IsFoo}> are also valid and all mean the same thing.
And similarly, C<\p{Foo=Bar}> means the same as C<\p{Is_Foo=Bar}> and
C<\p{IsFoo=Bar}>.  "*" here is restricted to something not beginning with an
underscore.

Also, in binary properties, 'Yes', 'T', and 'True' are all synonyms for 'Y'.
And 'No', 'F', and 'False' are all synonyms for 'N'.  The table shows 'Y*' and
'N*' to indicate this, and doesn't have separate entries for the other
possibilities.  Note that not all properties which have values 'Yes' and 'No'
are binary, and they have all their values spelled out without using this wild
card, and a C<NOT> clause in their description that highlights their not being
binary.  These also require the compound form to match them, whereas true
binary properties have both single and compound forms available.

Note that all non-essential underscores are removed in the display of the
short names below.

B<Legend summary:>

=over 4

=item *

B<*> is a wild-card

=item *

B<(\d+)> in the info column gives the number of Unicode code points matched
by this property.

=item *

B<D> means this is deprecated.

=item *

B<O> means this is obsolete.

=item *

B<S> means this is stabilized.

=item *

B<T> means tighter (stricter) name matching applies.

=item *

B<X> means use of this form is discouraged, and may not be
stable.

=back

       NAME                           INFO

 X \p{Aegean_Numbers}      \p{Block=Aegean_Numbers} (64)
 T \p{Age: 1.1}            \p{Age=V1_1} (33_979)
 T \p{Age: 2.0}            \p{Age=V2_0} (144_521)
 T \p{Age: 2.1}            \p{Age=V2_1} (2)
 T \p{Age: 3.0}            \p{Age=V3_0} (10_307)
 T \p{Age: 3.1}            \p{Age=V3_1} (44_978)
 T \p{Age: 3.2}            \p{Age=V3_2} (1016)
 T \p{Age: 4.0}            \p{Age=V4_0} (1226)
 T \p{Age: 4.1}            \p{Age=V4_1} (1273)
 T \p{Age: 5.0}            \p{Age=V5_0} (1369)
 T \p{Age: 5.1}            \p{Age=V5_1} (1624)
 T \p{Age: 5.2}            \p{Age=V5_2} (6648)
 T \p{Age: 6.0}            \p{Age=V6_0} (2088)
 T \p{Age: 6.1}            \p{Age=V6_1} (732)
 T \p{Age: 6.2}            \p{Age=V6_2} (1)
 T \p{Age: 6.3}            \p{Age=V6_3} (5)
 T \p{Age: 7.0}            \p{Age=V7_0} (2834)
 T \p{Age: 8.0}            \p{Age=V8_0} (7716)
   \p{Age: NA}             \p{Age=Unassigned} (853_793 plus all
                             above-Unicode code points)
   \p{Age: Unassigned}     Code point's usage has not been assigned
                             in any Unicode release thus far. (Short:
                             \p{Age=NA}) (853_793 plus all above-
                             Unicode code points)
   \p{Age: V1_1}           Code point's usage introduced in version
                             1.1 (33_979)
   \p{Age: V2_0}           Code point's usage was introduced in
                             version 2.0; See also Property
                             'Present_In' (144_521)
   \p{Age: V2_1}           Code point's usage was introduced in
                             version 2.1; See also Property
                             'Present_In' (2)
   \p{Age: V3_0}           Code point's usage was introduced in
                             version 3.0; See also Property
                             'Present_In' (10_307)
   \p{Age: V3_1}           Code point's usage was introduced in
                             version 3.1; See also Property
                             'Present_In' (44_978)
   \p{Age: V3_2}           Code point's usage was introduced in
                             version 3.2; See also Property
                             'Present_In' (1016)
   \p{Age: V4_0}           Code point's usage was introduced in
                             version 4.0; See also Property
                             'Present_In' (1226)
   \p{Age: V4_1}           Code point's usage was introduced in
                             version 4.1; See also Property
                             'Present_In' (1273)
   \p{Age: V5_0}           Code point's usage was introduced in
                             version 5.0; See also Property
                             'Present_In' (1369)
   \p{Age: V5_1}           Code point's usage was introduced in
                             version 5.1; See also Property
                             'Present_In' (1624)
   \p{Age: V5_2}           Code point's usage was introduced in
                             version 5.2; See also Property
                             'Present_In' (6648)
   \p{Age: V6_0}           Code point's usage was introduced in
                             version 6.0; See also Property
                             'Present_In' (2088)
   \p{Age: V6_1}           Code point's usage was introduced in
                             version 6.1; See also Property
                             'Present_In' (732)
   \p{Age: V6_2}           Code point's usage was introduced in
                             version 6.2; See also Property
                             'Present_In' (1)
   \p{Age: V6_3}           Code point's usage was introduced in
                             version 6.3; See also Property
                             'Present_In' (5)
   \p{Age: V7_0}           Code point's usage was introduced in
                             version 7.0; See also Property
                             'Present_In' (2834)
   \p{Age: V8_0}           Code point's usage was introduced in
                             version 8.0; See also Property
                             'Present_In' (7716)
   \p{Aghb}                \p{Caucasian_Albanian} (= \p{Script=
                             Caucasian_Albanian}) (NOT \p{Block=
                             Caucasian_Albanian}) (53)
   \p{AHex}                \p{PosixXDigit} (= \p{ASCII_Hex_Digit=Y})
                             (22)
   \p{AHex: *}             \p{ASCII_Hex_Digit: *}
   \p{Ahom}                \p{Script=Ahom} (NOT \p{Block=Ahom}) (57)
 X \p{Alchemical}          \p{Alchemical_Symbols} (= \p{Block=
                             Alchemical_Symbols}) (128)
 X \p{Alchemical_Symbols}  \p{Block=Alchemical_Symbols} (Short:
                             \p{InAlchemical}) (128)
   \p{All}                 All code points, including those above
                             Unicode.  Same as qr/./s (1_114_112 plus
                             all above-Unicode code points)
   \p{Alnum}               \p{XPosixAlnum} (111_493)
   \p{Alpha}               \p{XPosixAlpha} (= \p{Alphabetic=Y})
                             (110_943)
   \p{Alpha: *}            \p{Alphabetic: *}
   \p{Alphabetic}          \p{XPosixAlpha} (= \p{Alphabetic=Y})
                             (110_943)
   \p{Alphabetic: N*}      (Short: \p{Alpha=N}, \P{Alpha}) (1_003_169
                             plus all above-Unicode code points)
   \p{Alphabetic: Y*}      (Short: \p{Alpha=Y}, \p{Alpha}) (110_943)
 X \p{Alphabetic_PF}       \p{Alphabetic_Presentation_Forms} (=
                             \p{Block=Alphabetic_Presentation_Forms})
                             (80)
 X \p{Alphabetic_Presentation_Forms} \p{Block=
                             Alphabetic_Presentation_Forms} (Short:
                             \p{InAlphabeticPF}) (80)
   \p{Anatolian_Hieroglyphs} \p{Script=Anatolian_Hieroglyphs} (Short:
                             \p{Hluw}; NOT \p{Block=
                             Anatolian_Hieroglyphs}) (583)
 X \p{Ancient_Greek_Music} \p{Ancient_Greek_Musical_Notation} (=
                             \p{Block=
                             Ancient_Greek_Musical_Notation}) (80)
 X \p{Ancient_Greek_Musical_Notation} \p{Block=
                             Ancient_Greek_Musical_Notation} (Short:
                             \p{InAncientGreekMusic}) (80)
 X \p{Ancient_Greek_Numbers} \p{Block=Ancient_Greek_Numbers} (80)
 X \p{Ancient_Symbols}     \p{Block=Ancient_Symbols} (64)
   \p{Any}                 All Unicode code points: [\x{0000}-
                             \x{10FFFF}] (1_114_112)
   \p{Arab}                \p{Arabic} (= \p{Script=Arabic}) (NOT
                             \p{Block=Arabic}) (1257)
   \p{Arabic}              \p{Script=Arabic} (Short: \p{Arab}; NOT
                             \p{Block=Arabic}) (1257)
 X \p{Arabic_Ext_A}        \p{Arabic_Extended_A} (= \p{Block=
                             Arabic_Extended_A}) (96)
 X \p{Arabic_Extended_A}   \p{Block=Arabic_Extended_A} (Short:
                             \p{InArabicExtA}) (96)
 X \p{Arabic_Math}         \p{Arabic_Mathematical_Alphabetic_Symbols}
                             (= \p{Block=
                             Arabic_Mathematical_Alphabetic_Symbols})
                             (256)
 X \p{Arabic_Mathematical_Alphabetic_Symbols} \p{Block=
                             Arabic_Mathematical_Alphabetic_Symbols}
                             (Short: \p{InArabicMath}) (256)
 X \p{Arabic_PF_A}         \p{Arabic_Presentation_Forms_A} (=
                             \p{Block=Arabic_Presentation_Forms_A})
                             (688)
 X \p{Arabic_PF_B}         \p{Arabic_Presentation_Forms_B} (=
                             \p{Block=Arabic_Presentation_Forms_B})
                             (144)
 X \p{Arabic_Presentation_Forms_A} \p{Block=
                             Arabic_Presentation_Forms_A} (Short:
                             \p{InArabicPFA}) (688)
 X \p{Arabic_Presentation_Forms_B} \p{Block=
                             Arabic_Presentation_Forms_B} (Short:
                             \p{InArabicPFB}) (144)
 X \p{Arabic_Sup}          \p{Arabic_Supplement} (= \p{Block=
                             Arabic_Supplement}) (48)
 X \p{Arabic_Supplement}   \p{Block=Arabic_Supplement} (Short:
                             \p{InArabicSup}) (48)
   \p{Armenian}            \p{Script=Armenian} (Short: \p{Armn}; NOT
                             \p{Block=Armenian}) (93)
   \p{Armi}                \p{Imperial_Aramaic} (= \p{Script=
                             Imperial_Aramaic}) (NOT \p{Block=
                             Imperial_Aramaic}) (31)
   \p{Armn}                \p{Armenian} (= \p{Script=Armenian}) (NOT
                             \p{Block=Armenian}) (93)
 X \p{Arrows}              \p{Block=Arrows} (112)
   \p{ASCII}               \p{Block=Basic_Latin} [[:ASCII:]] (128)
   \p{ASCII_Hex_Digit}     \p{PosixXDigit} (= \p{ASCII_Hex_Digit=Y})
                             (22)
   \p{ASCII_Hex_Digit: N*} (Short: \p{AHex=N}, \P{AHex}) (1_114_090
                             plus all above-Unicode code points)
   \p{ASCII_Hex_Digit: Y*} (Short: \p{AHex=Y}, \p{AHex}) (22)
   \p{Assigned}            All assigned code points (260_253)
   \p{Avestan}             \p{Script=Avestan} (Short: \p{Avst}; NOT
                             \p{Block=Avestan}) (61)
   \p{Avst}                \p{Avestan} (= \p{Script=Avestan}) (NOT
                             \p{Block=Avestan}) (61)
   \p{Bali}                \p{Balinese} (= \p{Script=Balinese}) (NOT
                             \p{Block=Balinese}) (121)
   \p{Balinese}            \p{Script=Balinese} (Short: \p{Bali}; NOT
                             \p{Block=Balinese}) (121)
   \p{Bamu}                \p{Bamum} (= \p{Script=Bamum}) (NOT
                             \p{Block=Bamum}) (657)
   \p{Bamum}               \p{Script=Bamum} (Short: \p{Bamu}; NOT
                             \p{Block=Bamum}) (657)
 X \p{Bamum_Sup}           \p{Bamum_Supplement} (= \p{Block=
                             Bamum_Supplement}) (576)
 X \p{Bamum_Supplement}    \p{Block=Bamum_Supplement} (Short:
                             \p{InBamumSup}) (576)
 X \p{Basic_Latin}         \p{ASCII} (= \p{Block=Basic_Latin}) (128)
   \p{Bass}                \p{Bassa_Vah} (= \p{Script=Bassa_Vah})
                             (NOT \p{Block=Bassa_Vah}) (36)
   \p{Bassa_Vah}           \p{Script=Bassa_Vah} (Short: \p{Bass}; NOT
                             \p{Block=Bassa_Vah}) (36)
   \p{Batak}               \p{Script=Batak} (Short: \p{Batk}; NOT
                             \p{Block=Batak}) (56)
   \p{Batk}                \p{Batak} (= \p{Script=Batak}) (NOT
                             \p{Block=Batak}) (56)
   \p{Bc: *}               \p{Bidi_Class: *}
   \p{Beng}                \p{Bengali} (= \p{Script=Bengali}) (NOT
                             \p{Block=Bengali}) (93)
   \p{Bengali}             \p{Script=Bengali} (Short: \p{Beng}; NOT
                             \p{Block=Bengali}) (93)
   \p{Bidi_C}              \p{Bidi_Control} (= \p{Bidi_Control=Y})
                             (12)
   \p{Bidi_C: *}           \p{Bidi_Control: *}
   \p{Bidi_Class: AL}      \p{Bidi_Class=Arabic_Letter} (1435)
   \p{Bidi_Class: AN}      \p{Bidi_Class=Arabic_Number} (50)
   \p{Bidi_Class: Arabic_Letter} (Short: \p{Bc=AL}) (1435)
   \p{Bidi_Class: Arabic_Number} (Short: \p{Bc=AN}) (50)
   \p{Bidi_Class: B}       \p{Bidi_Class=Paragraph_Separator} (7)
   \p{Bidi_Class: BN}      \p{Bidi_Class=Boundary_Neutral} (4016)
   \p{Bidi_Class: Boundary_Neutral} (Short: \p{Bc=BN}) (4016)
   \p{Bidi_Class: Common_Separator} (Short: \p{Bc=CS}) (15)
   \p{Bidi_Class: CS}      \p{Bidi_Class=Common_Separator} (15)
   \p{Bidi_Class: EN}      \p{Bidi_Class=European_Number} (158)
   \p{Bidi_Class: ES}      \p{Bidi_Class=European_Separator} (12)
   \p{Bidi_Class: ET}      \p{Bidi_Class=European_Terminator} (87)
   \p{Bidi_Class: European_Number} (Short: \p{Bc=EN}) (158)
   \p{Bidi_Class: European_Separator} (Short: \p{Bc=ES}) (12)
   \p{Bidi_Class: European_Terminator} (Short: \p{Bc=ET}) (87)
   \p{Bidi_Class: First_Strong_Isolate} (Short: \p{Bc=FSI}) (1)
   \p{Bidi_Class: FSI}     \p{Bidi_Class=First_Strong_Isolate} (1)
   \p{Bidi_Class: L}       \p{Bidi_Class=Left_To_Right} (1_097_474
                             plus all above-Unicode code points)
   \p{Bidi_Class: Left_To_Right} (Short: \p{Bc=L}) (1_097_474 plus
                             all above-Unicode code points)
   \p{Bidi_Class: Left_To_Right_Embedding} (Short: \p{Bc=LRE}) (1)
   \p{Bidi_Class: Left_To_Right_Isolate} (Short: \p{Bc=LRI}) (1)
   \p{Bidi_Class: Left_To_Right_Override} (Short: \p{Bc=LRO}) (1)
   \p{Bidi_Class: LRE}     \p{Bidi_Class=Left_To_Right_Embedding} (1)
   \p{Bidi_Class: LRI}     \p{Bidi_Class=Left_To_Right_Isolate} (1)
   \p{Bidi_Class: LRO}     \p{Bidi_Class=Left_To_Right_Override} (1)
   \p{Bidi_Class: Nonspacing_Mark} (Short: \p{Bc=NSM}) (1578)
   \p{Bidi_Class: NSM}     \p{Bidi_Class=Nonspacing_Mark} (1578)
   \p{Bidi_Class: ON}      \p{Bidi_Class=Other_Neutral} (5174)
   \p{Bidi_Class: Other_Neutral} (Short: \p{Bc=ON}) (5174)
   \p{Bidi_Class: Paragraph_Separator} (Short: \p{Bc=B}) (7)
   \p{Bidi_Class: PDF}     \p{Bidi_Class=Pop_Directional_Format} (1)
   \p{Bidi_Class: PDI}     \p{Bidi_Class=Pop_Directional_Isolate} (1)
   \p{Bidi_Class: Pop_Directional_Format} (Short: \p{Bc=PDF}) (1)
   \p{Bidi_Class: Pop_Directional_Isolate} (Short: \p{Bc=PDI}) (1)
   \p{Bidi_Class: R}       \p{Bidi_Class=Right_To_Left} (4077)
   \p{Bidi_Class: Right_To_Left} (Short: \p{Bc=R}) (4077)
   \p{Bidi_Class: Right_To_Left_Embedding} (Short: \p{Bc=RLE}) (1)
   \p{Bidi_Class: Right_To_Left_Isolate} (Short: \p{Bc=RLI}) (1)
   \p{Bidi_Class: Right_To_Left_Override} (Short: \p{Bc=RLO}) (1)
   \p{Bidi_Class: RLE}     \p{Bidi_Class=Right_To_Left_Embedding} (1)
   \p{Bidi_Class: RLI}     \p{Bidi_Class=Right_To_Left_Isolate} (1)
   \p{Bidi_Class: RLO}     \p{Bidi_Class=Right_To_Left_Override} (1)
   \p{Bidi_Class: S}       \p{Bidi_Class=Segment_Separator} (3)
   \p{Bidi_Class: Segment_Separator} (Short: \p{Bc=S}) (3)
   \p{Bidi_Class: White_Space} (Short: \p{Bc=WS}) (17)
   \p{Bidi_Class: WS}      \p{Bidi_Class=White_Space} (17)
   \p{Bidi_Control}        \p{Bidi_Control=Y} (Short: \p{BidiC}) (12)
   \p{Bidi_Control: N*}    (Short: \p{BidiC=N}, \P{BidiC}) (1_114_100
                             plus all above-Unicode code points)
   \p{Bidi_Control: Y*}    (Short: \p{BidiC=Y}, \p{BidiC}) (12)
   \p{Bidi_M}              \p{Bidi_Mirrored} (= \p{Bidi_Mirrored=Y})
                             (545)
   \p{Bidi_M: *}           \p{Bidi_Mirrored: *}
   \p{Bidi_Mirrored}       \p{Bidi_Mirrored=Y} (Short: \p{BidiM})
                             (545)
   \p{Bidi_Mirrored: N*}   (Short: \p{BidiM=N}, \P{BidiM}) (1_113_567
                             plus all above-Unicode code points)
   \p{Bidi_Mirrored: Y*}   (Short: \p{BidiM=Y}, \p{BidiM}) (545)
   \p{Bidi_Paired_Bracket_Type: C} \p{Bidi_Paired_Bracket_Type=Close}
                             (60)
   \p{Bidi_Paired_Bracket_Type: Close} (Short: \p{Bpt=C}) (60)
   \p{Bidi_Paired_Bracket_Type: N} \p{Bidi_Paired_Bracket_Type=None}
                             (1_113_992 plus all above-Unicode code
                             points)
   \p{Bidi_Paired_Bracket_Type: None} (Short: \p{Bpt=N}) (1_113_992
                             plus all above-Unicode code points)
   \p{Bidi_Paired_Bracket_Type: O} \p{Bidi_Paired_Bracket_Type=Open}
                             (60)
   \p{Bidi_Paired_Bracket_Type: Open} (Short: \p{Bpt=O}) (60)
   \p{Blank}               \p{XPosixBlank} (18)
   \p{Blk: *}              \p{Block: *}
   \p{Block: Aegean_Numbers} (64)
   \p{Block: Ahom}         (NOT \p{Ahom} NOR \p{Is_Ahom}) (64)
   \p{Block: Alchemical}   \p{Block=Alchemical_Symbols} (128)
   \p{Block: Alchemical_Symbols} (Short: \p{Blk=Alchemical}) (128)
   \p{Block: Alphabetic_PF} \p{Block=Alphabetic_Presentation_Forms}
                             (80)
   \p{Block: Alphabetic_Presentation_Forms} (Short: \p{Blk=
                             AlphabeticPF}) (80)
   \p{Block: Anatolian_Hieroglyphs} (NOT \p{Anatolian_Hieroglyphs}
                             NOR \p{Is_Anatolian_Hieroglyphs}) (640)
   \p{Block: Ancient_Greek_Music} \p{Block=
                             Ancient_Greek_Musical_Notation} (80)
   \p{Block: Ancient_Greek_Musical_Notation} (Short: \p{Blk=
                             AncientGreekMusic}) (80)
   \p{Block: Ancient_Greek_Numbers} (80)
   \p{Block: Ancient_Symbols} (64)
   \p{Block: Arabic}       (NOT \p{Arabic} NOR \p{Is_Arabic}) (256)
   \p{Block: Arabic_Ext_A} \p{Block=Arabic_Extended_A} (96)
   \p{Block: Arabic_Extended_A} (Short: \p{Blk=ArabicExtA}) (96)
   \p{Block: Arabic_Math}  \p{Block=
                             Arabic_Mathematical_Alphabetic_Symbols}
                             (256)
   \p{Block: Arabic_Mathematical_Alphabetic_Symbols} (Short: \p{Blk=
                             ArabicMath}) (256)
   \p{Block: Arabic_PF_A}  \p{Block=Arabic_Presentation_Forms_A} (688)
   \p{Block: Arabic_PF_B}  \p{Block=Arabic_Presentation_Forms_B} (144)
   \p{Block: Arabic_Presentation_Forms_A} (Short: \p{Blk=ArabicPFA})
                             (688)
   \p{Block: Arabic_Presentation_Forms_B} (Short: \p{Blk=ArabicPFB})
                             (144)
   \p{Block: Arabic_Sup}   \p{Block=Arabic_Supplement} (48)
   \p{Block: Arabic_Supplement} (Short: \p{Blk=ArabicSup}) (48)
   \p{Block: Armenian}     (NOT \p{Armenian} NOR \p{Is_Armenian}) (96)
   \p{Block: Arrows}       (112)
   \p{Block: ASCII}        \p{Block=Basic_Latin} (128)
   \p{Block: Avestan}      (NOT \p{Avestan} NOR \p{Is_Avestan}) (64)
   \p{Block: Balinese}     (NOT \p{Balinese} NOR \p{Is_Balinese})
                             (128)
   \p{Block: Bamum}        (NOT \p{Bamum} NOR \p{Is_Bamum}) (96)
   \p{Block: Bamum_Sup}    \p{Block=Bamum_Supplement} (576)
   \p{Block: Bamum_Supplement} (Short: \p{Blk=BamumSup}) (576)
   \p{Block: Basic_Latin}  (Short: \p{Blk=ASCII}) (128)
   \p{Block: Bassa_Vah}    (NOT \p{Bassa_Vah} NOR \p{Is_Bassa_Vah})
                             (48)
   \p{Block: Batak}        (NOT \p{Batak} NOR \p{Is_Batak}) (64)
   \p{Block: Bengali}      (NOT \p{Bengali} NOR \p{Is_Bengali}) (128)
   \p{Block: Block_Elements} (32)
   \p{Block: Bopomofo}     (NOT \p{Bopomofo} NOR \p{Is_Bopomofo}) (48)
   \p{Block: Bopomofo_Ext} \p{Block=Bopomofo_Extended} (32)
   \p{Block: Bopomofo_Extended} (Short: \p{Blk=BopomofoExt}) (32)
   \p{Block: Box_Drawing}  (128)
   \p{Block: Brahmi}       (NOT \p{Brahmi} NOR \p{Is_Brahmi}) (128)
   \p{Block: Braille}      \p{Block=Braille_Patterns} (256)
   \p{Block: Braille_Patterns} (Short: \p{Blk=Braille}) (256)
   \p{Block: Buginese}     (NOT \p{Buginese} NOR \p{Is_Buginese}) (32)
   \p{Block: Buhid}        (NOT \p{Buhid} NOR \p{Is_Buhid}) (32)
   \p{Block: Byzantine_Music} \p{Block=Byzantine_Musical_Symbols}
                             (256)
   \p{Block: Byzantine_Musical_Symbols} (Short: \p{Blk=
                             ByzantineMusic}) (256)
   \p{Block: Canadian_Syllabics} \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics}
                             (640)
   \p{Block: Carian}       (NOT \p{Carian} NOR \p{Is_Carian}) (64)
   \p{Block: Caucasian_Albanian} (NOT \p{Caucasian_Albanian} NOR
                             \p{Is_Caucasian_Albanian}) (64)
   \p{Block: Chakma}       (NOT \p{Chakma} NOR \p{Is_Chakma}) (80)
   \p{Block: Cham}         (NOT \p{Cham} NOR \p{Is_Cham}) (96)
   \p{Block: Cherokee}     (NOT \p{Cherokee} NOR \p{Is_Cherokee}) (96)
   \p{Block: Cherokee_Sup} \p{Block=Cherokee_Supplement} (80)
   \p{Block: Cherokee_Supplement} (Short: \p{Blk=CherokeeSup}) (80)
   \p{Block: CJK}          \p{Block=CJK_Unified_Ideographs} (20_992)
   \p{Block: CJK_Compat}   \p{Block=CJK_Compatibility} (256)
   \p{Block: CJK_Compat_Forms} \p{Block=CJK_Compatibility_Forms} (32)
   \p{Block: CJK_Compat_Ideographs} \p{Block=
                             CJK_Compatibility_Ideographs} (512)
   \p{Block: CJK_Compat_Ideographs_Sup} \p{Block=
                             CJK_Compatibility_Ideographs_Supplement}
                             (544)
   \p{Block: CJK_Compatibility} (Short: \p{Blk=CJKCompat}) (256)
   \p{Block: CJK_Compatibility_Forms} (Short: \p{Blk=CJKCompatForms})
                             (32)
   \p{Block: CJK_Compatibility_Ideographs} (Short: \p{Blk=
                             CJKCompatIdeographs}) (512)
   \p{Block: CJK_Compatibility_Ideographs_Supplement} (Short: \p{Blk=
                             CJKCompatIdeographsSup}) (544)
   \p{Block: CJK_Ext_A}    \p{Block=
                             CJK_Unified_Ideographs_Extension_A}
                             (6592)
   \p{Block: CJK_Ext_B}    \p{Block=
                             CJK_Unified_Ideographs_Extension_B}
                             (42_720)
   \p{Block: CJK_Ext_C}    \p{Block=
                             CJK_Unified_Ideographs_Extension_C}
                             (4160)
   \p{Block: CJK_Ext_D}    \p{Block=
                             CJK_Unified_Ideographs_Extension_D} (224)
   \p{Block: CJK_Ext_E}    \p{Block=
                             CJK_Unified_Ideographs_Extension_E}
                             (5776)
   \p{Block: CJK_Radicals_Sup} \p{Block=CJK_Radicals_Supplement} (128)
   \p{Block: CJK_Radicals_Supplement} (Short: \p{Blk=CJKRadicalsSup})
                             (128)
   \p{Block: CJK_Strokes}  (48)
   \p{Block: CJK_Symbols}  \p{Block=CJK_Symbols_And_Punctuation} (64)
   \p{Block: CJK_Symbols_And_Punctuation} (Short: \p{Blk=CJKSymbols})
                             (64)
   \p{Block: CJK_Unified_Ideographs} (Short: \p{Blk=CJK}) (20_992)
   \p{Block: CJK_Unified_Ideographs_Extension_A} (Short: \p{Blk=
                             CJKExtA}) (6592)
   \p{Block: CJK_Unified_Ideographs_Extension_B} (Short: \p{Blk=
                             CJKExtB}) (42_720)
   \p{Block: CJK_Unified_Ideographs_Extension_C} (Short: \p{Blk=
                             CJKExtC}) (4160)
   \p{Block: CJK_Unified_Ideographs_Extension_D} (Short: \p{Blk=
                             CJKExtD}) (224)
   \p{Block: CJK_Unified_Ideographs_Extension_E} (Short: \p{Blk=
                             CJKExtE}) (5776)
   \p{Block: Combining_Diacritical_Marks} (Short: \p{Blk=
                             Diacriticals}) (112)
   \p{Block: Combining_Diacritical_Marks_Extended} (Short: \p{Blk=
                             DiacriticalsExt}) (80)
   \p{Block: Combining_Diacritical_Marks_For_Symbols} (Short: \p{Blk=
                             DiacriticalsForSymbols}) (48)
   \p{Block: Combining_Diacritical_Marks_Supplement} (Short: \p{Blk=
                             DiacriticalsSup}) (64)
   \p{Block: Combining_Half_Marks} (Short: \p{Blk=HalfMarks}) (16)
   \p{Block: Combining_Marks_For_Symbols} \p{Block=
                             Combining_Diacritical_Marks_For_Symbols}
                             (48)
   \p{Block: Common_Indic_Number_Forms} (Short: \p{Blk=
                             IndicNumberForms}) (16)
   \p{Block: Compat_Jamo}  \p{Block=Hangul_Compatibility_Jamo} (96)
   \p{Block: Control_Pictures} (64)
   \p{Block: Coptic}       (NOT \p{Coptic} NOR \p{Is_Coptic}) (128)
   \p{Block: Coptic_Epact_Numbers} (32)
   \p{Block: Counting_Rod} \p{Block=Counting_Rod_Numerals} (32)
   \p{Block: Counting_Rod_Numerals} (Short: \p{Blk=CountingRod}) (32)
   \p{Block: Cuneiform}    (NOT \p{Cuneiform} NOR \p{Is_Cuneiform})
                             (1024)
   \p{Block: Cuneiform_Numbers} \p{Block=
                             Cuneiform_Numbers_And_Punctuation} (128)
   \p{Block: Cuneiform_Numbers_And_Punctuation} (Short: \p{Blk=
                             CuneiformNumbers}) (128)
   \p{Block: Currency_Symbols} (48)
   \p{Block: Cypriot_Syllabary} (64)
   \p{Block: Cyrillic}     (NOT \p{Cyrillic} NOR \p{Is_Cyrillic})
                             (256)
   \p{Block: Cyrillic_Ext_A} \p{Block=Cyrillic_Extended_A} (32)
   \p{Block: Cyrillic_Ext_B} \p{Block=Cyrillic_Extended_B} (96)
   \p{Block: Cyrillic_Extended_A} (Short: \p{Blk=CyrillicExtA}) (32)
   \p{Block: Cyrillic_Extended_B} (Short: \p{Blk=CyrillicExtB}) (96)
   \p{Block: Cyrillic_Sup} \p{Block=Cyrillic_Supplement} (48)
   \p{Block: Cyrillic_Supplement} (Short: \p{Blk=CyrillicSup}) (48)
   \p{Block: Cyrillic_Supplementary} \p{Block=Cyrillic_Supplement}
                             (48)
   \p{Block: Deseret}      (80)
   \p{Block: Devanagari}   (NOT \p{Devanagari} NOR \p{Is_Devanagari})
                             (128)
   \p{Block: Devanagari_Ext} \p{Block=Devanagari_Extended} (32)
   \p{Block: Devanagari_Extended} (Short: \p{Blk=DevanagariExt}) (32)
   \p{Block: Diacriticals} \p{Block=Combining_Diacritical_Marks} (112)
   \p{Block: Diacriticals_Ext} \p{Block=
                             Combining_Diacritical_Marks_Extended}
                             (80)
   \p{Block: Diacriticals_For_Symbols} \p{Block=
                             Combining_Diacritical_Marks_For_Symbols}
                             (48)
   \p{Block: Diacriticals_Sup} \p{Block=
                             Combining_Diacritical_Marks_Supplement}
                             (64)
   \p{Block: Dingbats}     (192)
   \p{Block: Domino}       \p{Block=Domino_Tiles} (112)
   \p{Block: Domino_Tiles} (Short: \p{Blk=Domino}) (112)
   \p{Block: Duployan}     (NOT \p{Duployan} NOR \p{Is_Duployan})
                             (160)
   \p{Block: Early_Dynastic_Cuneiform} (208)
   \p{Block: Egyptian_Hieroglyphs} (NOT \p{Egyptian_Hieroglyphs} NOR
                             \p{Is_Egyptian_Hieroglyphs}) (1072)
   \p{Block: Elbasan}      (NOT \p{Elbasan} NOR \p{Is_Elbasan}) (48)
   \p{Block: Emoticons}    (80)
   \p{Block: Enclosed_Alphanum} \p{Block=Enclosed_Alphanumerics} (160)
   \p{Block: Enclosed_Alphanum_Sup} \p{Block=
                             Enclosed_Alphanumeric_Supplement} (256)
   \p{Block: Enclosed_Alphanumeric_Supplement} (Short: \p{Blk=
                             EnclosedAlphanumSup}) (256)
   \p{Block: Enclosed_Alphanumerics} (Short: \p{Blk=
                             EnclosedAlphanum}) (160)
   \p{Block: Enclosed_CJK} \p{Block=Enclosed_CJK_Letters_And_Months}
                             (256)
   \p{Block: Enclosed_CJK_Letters_And_Months} (Short: \p{Blk=
                             EnclosedCJK}) (256)
   \p{Block: Enclosed_Ideographic_Sup} \p{Block=
                             Enclosed_Ideographic_Supplement} (256)
   \p{Block: Enclosed_Ideographic_Supplement} (Short: \p{Blk=
                             EnclosedIdeographicSup}) (256)
   \p{Block: Ethiopic}     (NOT \p{Ethiopic} NOR \p{Is_Ethiopic})
                             (384)
   \p{Block: Ethiopic_Ext} \p{Block=Ethiopic_Extended} (96)
   \p{Block: Ethiopic_Ext_A} \p{Block=Ethiopic_Extended_A} (48)
   \p{Block: Ethiopic_Extended} (Short: \p{Blk=EthiopicExt}) (96)
   \p{Block: Ethiopic_Extended_A} (Short: \p{Blk=EthiopicExtA}) (48)
   \p{Block: Ethiopic_Sup} \p{Block=Ethiopic_Supplement} (32)
   \p{Block: Ethiopic_Supplement} (Short: \p{Blk=EthiopicSup}) (32)
   \p{Block: General_Punctuation} (Short: \p{Blk=Punctuation}; NOT
                             \p{Punct} NOR \p{Is_Punctuation}) (112)
   \p{Block: Geometric_Shapes} (96)
   \p{Block: Geometric_Shapes_Ext} \p{Block=
                             Geometric_Shapes_Extended} (128)
   \p{Block: Geometric_Shapes_Extended} (Short: \p{Blk=
                             GeometricShapesExt}) (128)
   \p{Block: Georgian}     (NOT \p{Georgian} NOR \p{Is_Georgian}) (96)
   \p{Block: Georgian_Sup} \p{Block=Georgian_Supplement} (48)
   \p{Block: Georgian_Supplement} (Short: \p{Blk=GeorgianSup}) (48)
   \p{Block: Glagolitic}   (NOT \p{Glagolitic} NOR \p{Is_Glagolitic})
                             (96)
   \p{Block: Gothic}       (NOT \p{Gothic} NOR \p{Is_Gothic}) (32)
   \p{Block: Grantha}      (NOT \p{Grantha} NOR \p{Is_Grantha}) (128)
   \p{Block: Greek}        \p{Block=Greek_And_Coptic} (NOT \p{Greek}
                             NOR \p{Is_Greek}) (144)
   \p{Block: Greek_And_Coptic} (Short: \p{Blk=Greek}; NOT \p{Greek}
                             NOR \p{Is_Greek}) (144)
   \p{Block: Greek_Ext}    \p{Block=Greek_Extended} (256)
   \p{Block: Greek_Extended} (Short: \p{Blk=GreekExt}) (256)
   \p{Block: Gujarati}     (NOT \p{Gujarati} NOR \p{Is_Gujarati})
                             (128)
   \p{Block: Gurmukhi}     (NOT \p{Gurmukhi} NOR \p{Is_Gurmukhi})
                             (128)
   \p{Block: Half_And_Full_Forms} \p{Block=
                             Halfwidth_And_Fullwidth_Forms} (240)
   \p{Block: Half_Marks}   \p{Block=Combining_Half_Marks} (16)
   \p{Block: Halfwidth_And_Fullwidth_Forms} (Short: \p{Blk=
                             HalfAndFullForms}) (240)
   \p{Block: Hangul}       \p{Block=Hangul_Syllables} (NOT \p{Hangul}
                             NOR \p{Is_Hangul}) (11_184)
   \p{Block: Hangul_Compatibility_Jamo} (Short: \p{Blk=CompatJamo})
                             (96)
   \p{Block: Hangul_Jamo}  (Short: \p{Blk=Jamo}) (256)
   \p{Block: Hangul_Jamo_Extended_A} (Short: \p{Blk=JamoExtA}) (32)
   \p{Block: Hangul_Jamo_Extended_B} (Short: \p{Blk=JamoExtB}) (80)
   \p{Block: Hangul_Syllables} (Short: \p{Blk=Hangul}; NOT \p{Hangul}
                             NOR \p{Is_Hangul}) (11_184)
   \p{Block: Hanunoo}      (NOT \p{Hanunoo} NOR \p{Is_Hanunoo}) (32)
   \p{Block: Hatran}       (NOT \p{Hatran} NOR \p{Is_Hatran}) (32)
   \p{Block: Hebrew}       (NOT \p{Hebrew} NOR \p{Is_Hebrew}) (112)
   \p{Block: High_Private_Use_Surrogates} (Short: \p{Blk=
                             HighPUSurrogates}) (128)
   \p{Block: High_PU_Surrogates} \p{Block=
                             High_Private_Use_Surrogates} (128)
   \p{Block: High_Surrogates} (896)
   \p{Block: Hiragana}     (NOT \p{Hiragana} NOR \p{Is_Hiragana}) (96)
   \p{Block: IDC}          \p{Block=
                             Ideographic_Description_Characters} (NOT
                             \p{ID_Continue} NOR \p{Is_IDC}) (16)
   \p{Block: Ideographic_Description_Characters} (Short: \p{Blk=IDC};
                             NOT \p{ID_Continue} NOR \p{Is_IDC}) (16)
   \p{Block: Imperial_Aramaic} (NOT \p{Imperial_Aramaic} NOR
                             \p{Is_Imperial_Aramaic}) (32)
   \p{Block: Indic_Number_Forms} \p{Block=Common_Indic_Number_Forms}
                             (16)
   \p{Block: Inscriptional_Pahlavi} (NOT \p{Inscriptional_Pahlavi}
                             NOR \p{Is_Inscriptional_Pahlavi}) (32)
   \p{Block: Inscriptional_Parthian} (NOT \p{Inscriptional_Parthian}
                             NOR \p{Is_Inscriptional_Parthian}) (32)
   \p{Block: IPA_Ext}      \p{Block=IPA_Extensions} (96)
   \p{Block: IPA_Extensions} (Short: \p{Blk=IPAExt}) (96)
   \p{Block: Jamo}         \p{Block=Hangul_Jamo} (256)
   \p{Block: Jamo_Ext_A}   \p{Block=Hangul_Jamo_Extended_A} (32)
   \p{Block: Jamo_Ext_B}   \p{Block=Hangul_Jamo_Extended_B} (80)
   \p{Block: Javanese}     (NOT \p{Javanese} NOR \p{Is_Javanese}) (96)
   \p{Block: Kaithi}       (NOT \p{Kaithi} NOR \p{Is_Kaithi}) (80)
   \p{Block: Kana_Sup}     \p{Block=Kana_Supplement} (256)
   \p{Block: Kana_Supplement} (Short: \p{Blk=KanaSup}) (256)
   \p{Block: Kanbun}       (16)
   \p{Block: Kangxi}       \p{Block=Kangxi_Radicals} (224)
   \p{Block: Kangxi_Radicals} (Short: \p{Blk=Kangxi}) (224)
   \p{Block: Kannada}      (NOT \p{Kannada} NOR \p{Is_Kannada}) (128)
   \p{Block: Katakana}     (NOT \p{Katakana} NOR \p{Is_Katakana}) (96)
   \p{Block: Katakana_Ext} \p{Block=Katakana_Phonetic_Extensions} (16)
   \p{Block: Katakana_Phonetic_Extensions} (Short: \p{Blk=
                             KatakanaExt}) (16)
   \p{Block: Kayah_Li}     (NOT \p{Kayah_Li} NOR \p{Is_Kayah_Li}) (48)
   \p{Block: Kharoshthi}   (NOT \p{Kharoshthi} NOR \p{Is_Kharoshthi})
                             (96)
   \p{Block: Khmer}        (NOT \p{Khmer} NOR \p{Is_Khmer}) (128)
   \p{Block: Khmer_Symbols} (32)
   \p{Block: Khojki}       (NOT \p{Khojki} NOR \p{Is_Khojki}) (80)
   \p{Block: Khudawadi}    (NOT \p{Khudawadi} NOR \p{Is_Khudawadi})
                             (80)
   \p{Block: Lao}          (NOT \p{Lao} NOR \p{Is_Lao}) (128)
   \p{Block: Latin_1}      \p{Block=Latin_1_Supplement} (128)
   \p{Block: Latin_1_Sup}  \p{Block=Latin_1_Supplement} (128)
   \p{Block: Latin_1_Supplement} (Short: \p{Blk=Latin1}) (128)
   \p{Block: Latin_Ext_A}  \p{Block=Latin_Extended_A} (128)
   \p{Block: Latin_Ext_Additional} \p{Block=
                             Latin_Extended_Additional} (256)
   \p{Block: Latin_Ext_B}  \p{Block=Latin_Extended_B} (208)
   \p{Block: Latin_Ext_C}  \p{Block=Latin_Extended_C} (32)
   \p{Block: Latin_Ext_D}  \p{Block=Latin_Extended_D} (224)
   \p{Block: Latin_Ext_E}  \p{Block=Latin_Extended_E} (64)
   \p{Block: Latin_Extended_A} (Short: \p{Blk=LatinExtA}) (128)
   \p{Block: Latin_Extended_Additional} (Short: \p{Blk=
                             LatinExtAdditional}) (256)
   \p{Block: Latin_Extended_B} (Short: \p{Blk=LatinExtB}) (208)
   \p{Block: Latin_Extended_C} (Short: \p{Blk=LatinExtC}) (32)
   \p{Block: Latin_Extended_D} (Short: \p{Blk=LatinExtD}) (224)
   \p{Block: Latin_Extended_E} (Short: \p{Blk=LatinExtE}) (64)
   \p{Block: Lepcha}       (NOT \p{Lepcha} NOR \p{Is_Lepcha}) (80)
   \p{Block: Letterlike_Symbols} (80)
   \p{Block: Limbu}        (NOT \p{Limbu} NOR \p{Is_Limbu}) (80)
   \p{Block: Linear_A}     (NOT \p{Linear_A} NOR \p{Is_Linear_A})
                             (384)
   \p{Block: Linear_B_Ideograms} (128)
   \p{Block: Linear_B_Syllabary} (128)
   \p{Block: Lisu}         (48)
   \p{Block: Low_Surrogates} (1024)
   \p{Block: Lycian}       (NOT \p{Lycian} NOR \p{Is_Lycian}) (32)
   \p{Block: Lydian}       (NOT \p{Lydian} NOR \p{Is_Lydian}) (32)
   \p{Block: Mahajani}     (NOT \p{Mahajani} NOR \p{Is_Mahajani}) (48)
   \p{Block: Mahjong}      \p{Block=Mahjong_Tiles} (48)
   \p{Block: Mahjong_Tiles} (Short: \p{Blk=Mahjong}) (48)
   \p{Block: Malayalam}    (NOT \p{Malayalam} NOR \p{Is_Malayalam})
                             (128)
   \p{Block: Mandaic}      (NOT \p{Mandaic} NOR \p{Is_Mandaic}) (32)
   \p{Block: Manichaean}   (NOT \p{Manichaean} NOR \p{Is_Manichaean})
                             (64)
   \p{Block: Math_Alphanum} \p{Block=
                             Mathematical_Alphanumeric_Symbols} (1024)
   \p{Block: Math_Operators} \p{Block=Mathematical_Operators} (256)
   \p{Block: Mathematical_Alphanumeric_Symbols} (Short: \p{Blk=
                             MathAlphanum}) (1024)
   \p{Block: Mathematical_Operators} (Short: \p{Blk=MathOperators})
                             (256)
   \p{Block: Meetei_Mayek} (NOT \p{Meetei_Mayek} NOR
                             \p{Is_Meetei_Mayek}) (64)
   \p{Block: Meetei_Mayek_Ext} \p{Block=Meetei_Mayek_Extensions} (32)
   \p{Block: Meetei_Mayek_Extensions} (Short: \p{Blk=MeeteiMayekExt})
                             (32)
   \p{Block: Mende_Kikakui} (NOT \p{Mende_Kikakui} NOR
                             \p{Is_Mende_Kikakui}) (224)
   \p{Block: Meroitic_Cursive} (NOT \p{Meroitic_Cursive} NOR
                             \p{Is_Meroitic_Cursive}) (96)
   \p{Block: Meroitic_Hieroglyphs} (32)
   \p{Block: Miao}         (NOT \p{Miao} NOR \p{Is_Miao}) (160)
   \p{Block: Misc_Arrows}  \p{Block=Miscellaneous_Symbols_And_Arrows}
                             (256)
   \p{Block: Misc_Math_Symbols_A} \p{Block=
                             Miscellaneous_Mathematical_Symbols_A}
                             (48)
   \p{Block: Misc_Math_Symbols_B} \p{Block=
                             Miscellaneous_Mathematical_Symbols_B}
                             (128)
   \p{Block: Misc_Pictographs} \p{Block=
                             Miscellaneous_Symbols_And_Pictographs}
                             (768)
   \p{Block: Misc_Symbols} \p{Block=Miscellaneous_Symbols} (256)
   \p{Block: Misc_Technical} \p{Block=Miscellaneous_Technical} (256)
   \p{Block: Miscellaneous_Mathematical_Symbols_A} (Short: \p{Blk=
                             MiscMathSymbolsA}) (48)
   \p{Block: Miscellaneous_Mathematical_Symbols_B} (Short: \p{Blk=
                             MiscMathSymbolsB}) (128)
   \p{Block: Miscellaneous_Symbols} (Short: \p{Blk=MiscSymbols}) (256)
   \p{Block: Miscellaneous_Symbols_And_Arrows} (Short: \p{Blk=
                             MiscArrows}) (256)
   \p{Block: Miscellaneous_Symbols_And_Pictographs} (Short: \p{Blk=
                             MiscPictographs}) (768)
   \p{Block: Miscellaneous_Technical} (Short: \p{Blk=MiscTechnical})
                             (256)
   \p{Block: Modi}         (NOT \p{Modi} NOR \p{Is_Modi}) (96)
   \p{Block: Modifier_Letters} \p{Block=Spacing_Modifier_Letters} (80)
   \p{Block: Modifier_Tone_Letters} (32)
   \p{Block: Mongolian}    (NOT \p{Mongolian} NOR \p{Is_Mongolian})
                             (176)
   \p{Block: Mro}          (NOT \p{Mro} NOR \p{Is_Mro}) (48)
   \p{Block: Multani}      (NOT \p{Multani} NOR \p{Is_Multani}) (48)
   \p{Block: Music}        \p{Block=Musical_Symbols} (256)
   \p{Block: Musical_Symbols} (Short: \p{Blk=Music}) (256)
   \p{Block: Myanmar}      (NOT \p{Myanmar} NOR \p{Is_Myanmar}) (160)
   \p{Block: Myanmar_Ext_A} \p{Block=Myanmar_Extended_A} (32)
   \p{Block: Myanmar_Ext_B} \p{Block=Myanmar_Extended_B} (32)
   \p{Block: Myanmar_Extended_A} (Short: \p{Blk=MyanmarExtA}) (32)
   \p{Block: Myanmar_Extended_B} (Short: \p{Blk=MyanmarExtB}) (32)
   \p{Block: Nabataean}    (NOT \p{Nabataean} NOR \p{Is_Nabataean})
                             (48)
   \p{Block: NB}           \p{Block=No_Block} (849_856 plus all
                             above-Unicode code points)
   \p{Block: New_Tai_Lue}  (NOT \p{New_Tai_Lue} NOR
                             \p{Is_New_Tai_Lue}) (96)
   \p{Block: NKo}          (NOT \p{Nko} NOR \p{Is_NKo}) (64)
   \p{Block: No_Block}     (Short: \p{Blk=NB}) (849_856 plus all
                             above-Unicode code points)
   \p{Block: Number_Forms} (64)
   \p{Block: OCR}          \p{Block=Optical_Character_Recognition}
                             (32)
   \p{Block: Ogham}        (NOT \p{Ogham} NOR \p{Is_Ogham}) (32)
   \p{Block: Ol_Chiki}     (48)
   \p{Block: Old_Hungarian} (NOT \p{Old_Hungarian} NOR
                             \p{Is_Old_Hungarian}) (128)
   \p{Block: Old_Italic}   (NOT \p{Old_Italic} NOR \p{Is_Old_Italic})
                             (48)
   \p{Block: Old_North_Arabian} (32)
   \p{Block: Old_Permic}   (NOT \p{Old_Permic} NOR \p{Is_Old_Permic})
                             (48)
   \p{Block: Old_Persian}  (NOT \p{Old_Persian} NOR
                             \p{Is_Old_Persian}) (64)
   \p{Block: Old_South_Arabian} (32)
   \p{Block: Old_Turkic}   (NOT \p{Old_Turkic} NOR \p{Is_Old_Turkic})
                             (80)
   \p{Block: Optical_Character_Recognition} (Short: \p{Blk=OCR}) (32)
   \p{Block: Oriya}        (NOT \p{Oriya} NOR \p{Is_Oriya}) (128)
   \p{Block: Ornamental_Dingbats} (48)
   \p{Block: Osmanya}      (NOT \p{Osmanya} NOR \p{Is_Osmanya}) (48)
   \p{Block: Pahawh_Hmong} (NOT \p{Pahawh_Hmong} NOR
                             \p{Is_Pahawh_Hmong}) (144)
   \p{Block: Palmyrene}    (32)
   \p{Block: Pau_Cin_Hau}  (NOT \p{Pau_Cin_Hau} NOR
                             \p{Is_Pau_Cin_Hau}) (64)
   \p{Block: Phags_Pa}     (NOT \p{Phags_Pa} NOR \p{Is_Phags_Pa}) (64)
   \p{Block: Phaistos}     \p{Block=Phaistos_Disc} (48)
   \p{Block: Phaistos_Disc} (Short: \p{Blk=Phaistos}) (48)
   \p{Block: Phoenician}   (NOT \p{Phoenician} NOR \p{Is_Phoenician})
                             (32)
   \p{Block: Phonetic_Ext} \p{Block=Phonetic_Extensions} (128)
   \p{Block: Phonetic_Ext_Sup} \p{Block=
                             Phonetic_Extensions_Supplement} (64)
   \p{Block: Phonetic_Extensions} (Short: \p{Blk=PhoneticExt}) (128)
   \p{Block: Phonetic_Extensions_Supplement} (Short: \p{Blk=
                             PhoneticExtSup}) (64)
   \p{Block: Playing_Cards} (96)
   \p{Block: Private_Use}  \p{Block=Private_Use_Area} (NOT
                             \p{Private_Use} NOR \p{Is_Private_Use})
                             (6400)
   \p{Block: Private_Use_Area} (Short: \p{Blk=PUA}; NOT
                             \p{Private_Use} NOR \p{Is_Private_Use})
                             (6400)
   \p{Block: Psalter_Pahlavi} (NOT \p{Psalter_Pahlavi} NOR
                             \p{Is_Psalter_Pahlavi}) (48)
   \p{Block: PUA}          \p{Block=Private_Use_Area} (NOT
                             \p{Private_Use} NOR \p{Is_Private_Use})
                             (6400)
   \p{Block: Punctuation}  \p{Block=General_Punctuation} (NOT
                             \p{Punct} NOR \p{Is_Punctuation}) (112)
   \p{Block: Rejang}       (NOT \p{Rejang} NOR \p{Is_Rejang}) (48)
   \p{Block: Rumi}         \p{Block=Rumi_Numeral_Symbols} (32)
   \p{Block: Rumi_Numeral_Symbols} (Short: \p{Blk=Rumi}) (32)
   \p{Block: Runic}        (NOT \p{Runic} NOR \p{Is_Runic}) (96)
   \p{Block: Samaritan}    (NOT \p{Samaritan} NOR \p{Is_Samaritan})
                             (64)
   \p{Block: Saurashtra}   (NOT \p{Saurashtra} NOR \p{Is_Saurashtra})
                             (96)
   \p{Block: Sharada}      (NOT \p{Sharada} NOR \p{Is_Sharada}) (96)
   \p{Block: Shavian}      (48)
   \p{Block: Shorthand_Format_Controls} (16)
   \p{Block: Siddham}      (NOT \p{Siddham} NOR \p{Is_Siddham}) (128)
   \p{Block: Sinhala}      (NOT \p{Sinhala} NOR \p{Is_Sinhala}) (128)
   \p{Block: Sinhala_Archaic_Numbers} (32)
   \p{Block: Small_Form_Variants} (Short: \p{Blk=SmallForms}) (32)
   \p{Block: Small_Forms}  \p{Block=Small_Form_Variants} (32)
   \p{Block: Sora_Sompeng} (NOT \p{Sora_Sompeng} NOR
                             \p{Is_Sora_Sompeng}) (48)
   \p{Block: Spacing_Modifier_Letters} (Short: \p{Blk=
                             ModifierLetters}) (80)
   \p{Block: Specials}     (16)
   \p{Block: Sundanese}    (NOT \p{Sundanese} NOR \p{Is_Sundanese})
                             (64)
   \p{Block: Sundanese_Sup} \p{Block=Sundanese_Supplement} (16)
   \p{Block: Sundanese_Supplement} (Short: \p{Blk=SundaneseSup}) (16)
   \p{Block: Sup_Arrows_A} \p{Block=Supplemental_Arrows_A} (16)
   \p{Block: Sup_Arrows_B} \p{Block=Supplemental_Arrows_B} (128)
   \p{Block: Sup_Arrows_C} \p{Block=Supplemental_Arrows_C} (256)
   \p{Block: Sup_Math_Operators} \p{Block=
                             Supplemental_Mathematical_Operators}
                             (256)
   \p{Block: Sup_PUA_A}    \p{Block=Supplementary_Private_Use_Area_A}
                             (65_536)
   \p{Block: Sup_PUA_B}    \p{Block=Supplementary_Private_Use_Area_B}
                             (65_536)
   \p{Block: Sup_Punctuation} \p{Block=Supplemental_Punctuation} (128)
   \p{Block: Sup_Symbols_And_Pictographs} \p{Block=
                             Supplemental_Symbols_And_Pictographs}
                             (256)
   \p{Block: Super_And_Sub} \p{Block=Superscripts_And_Subscripts} (48)
   \p{Block: Superscripts_And_Subscripts} (Short: \p{Blk=
                             SuperAndSub}) (48)
   \p{Block: Supplemental_Arrows_A} (Short: \p{Blk=SupArrowsA}) (16)
   \p{Block: Supplemental_Arrows_B} (Short: \p{Blk=SupArrowsB}) (128)
   \p{Block: Supplemental_Arrows_C} (Short: \p{Blk=SupArrowsC}) (256)
   \p{Block: Supplemental_Mathematical_Operators} (Short: \p{Blk=
                             SupMathOperators}) (256)
   \p{Block: Supplemental_Punctuation} (Short: \p{Blk=
                             SupPunctuation}) (128)
   \p{Block: Supplemental_Symbols_And_Pictographs} (Short: \p{Blk=
                             SupSymbolsAndPictographs}) (256)
   \p{Block: Supplementary_Private_Use_Area_A} (Short: \p{Blk=
                             SupPUAA}) (65_536)
   \p{Block: Supplementary_Private_Use_Area_B} (Short: \p{Blk=
                             SupPUAB}) (65_536)
   \p{Block: Sutton_SignWriting} (688)
   \p{Block: Syloti_Nagri} (NOT \p{Syloti_Nagri} NOR
                             \p{Is_Syloti_Nagri}) (48)
   \p{Block: Syriac}       (NOT \p{Syriac} NOR \p{Is_Syriac}) (80)
   \p{Block: Tagalog}      (NOT \p{Tagalog} NOR \p{Is_Tagalog}) (32)
   \p{Block: Tagbanwa}     (NOT \p{Tagbanwa} NOR \p{Is_Tagbanwa}) (32)
   \p{Block: Tags}         (128)
   \p{Block: Tai_Le}       (NOT \p{Tai_Le} NOR \p{Is_Tai_Le}) (48)
   \p{Block: Tai_Tham}     (NOT \p{Tai_Tham} NOR \p{Is_Tai_Tham})
                             (144)
   \p{Block: Tai_Viet}     (NOT \p{Tai_Viet} NOR \p{Is_Tai_Viet}) (96)
   \p{Block: Tai_Xuan_Jing} \p{Block=Tai_Xuan_Jing_Symbols} (96)
   \p{Block: Tai_Xuan_Jing_Symbols} (Short: \p{Blk=TaiXuanJing}) (96)
   \p{Block: Takri}        (NOT \p{Takri} NOR \p{Is_Takri}) (80)
   \p{Block: Tamil}        (NOT \p{Tamil} NOR \p{Is_Tamil}) (128)
   \p{Block: Telugu}       (NOT \p{Telugu} NOR \p{Is_Telugu}) (128)
   \p{Block: Thaana}       (NOT \p{Thaana} NOR \p{Is_Thaana}) (64)
   \p{Block: Thai}         (NOT \p{Thai} NOR \p{Is_Thai}) (128)
   \p{Block: Tibetan}      (NOT \p{Tibetan} NOR \p{Is_Tibetan}) (256)
   \p{Block: Tifinagh}     (NOT \p{Tifinagh} NOR \p{Is_Tifinagh}) (80)
   \p{Block: Tirhuta}      (NOT \p{Tirhuta} NOR \p{Is_Tirhuta}) (96)
   \p{Block: Transport_And_Map} \p{Block=Transport_And_Map_Symbols}
                             (128)
   \p{Block: Transport_And_Map_Symbols} (Short: \p{Blk=
                             TransportAndMap}) (128)
   \p{Block: UCAS}         \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics}
                             (640)
   \p{Block: UCAS_Ext}     \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended} (80)
   \p{Block: Ugaritic}     (NOT \p{Ugaritic} NOR \p{Is_Ugaritic}) (32)
   \p{Block: Unified_Canadian_Aboriginal_Syllabics} (Short: \p{Blk=
                             UCAS}) (640)
   \p{Block: Unified_Canadian_Aboriginal_Syllabics_Extended} (Short:
                             \p{Blk=UCASExt}) (80)
   \p{Block: Vai}          (NOT \p{Vai} NOR \p{Is_Vai}) (320)
   \p{Block: Variation_Selectors} (Short: \p{Blk=VS}; NOT
                             \p{Variation_Selector} NOR \p{Is_VS})
                             (16)
   \p{Block: Variation_Selectors_Supplement} (Short: \p{Blk=VSSup})
                             (240)
   \p{Block: Vedic_Ext}    \p{Block=Vedic_Extensions} (48)
   \p{Block: Vedic_Extensions} (Short: \p{Blk=VedicExt}) (48)
   \p{Block: Vertical_Forms} (16)
   \p{Block: VS}           \p{Block=Variation_Selectors} (NOT
                             \p{Variation_Selector} NOR \p{Is_VS})
                             (16)
   \p{Block: VS_Sup}       \p{Block=Variation_Selectors_Supplement}
                             (240)
   \p{Block: Warang_Citi}  (NOT \p{Warang_Citi} NOR
                             \p{Is_Warang_Citi}) (96)
   \p{Block: Yi_Radicals}  (64)
   \p{Block: Yi_Syllables} (1168)
   \p{Block: Yijing}       \p{Block=Yijing_Hexagram_Symbols} (64)
   \p{Block: Yijing_Hexagram_Symbols} (Short: \p{Blk=Yijing}) (64)
 X \p{Block_Elements}      \p{Block=Block_Elements} (32)
   \p{Bopo}                \p{Bopomofo} (= \p{Script=Bopomofo}) (NOT
                             \p{Block=Bopomofo}) (70)
   \p{Bopomofo}            \p{Script=Bopomofo} (Short: \p{Bopo}; NOT
                             \p{Block=Bopomofo}) (70)
 X \p{Bopomofo_Ext}        \p{Bopomofo_Extended} (= \p{Block=
                             Bopomofo_Extended}) (32)
 X \p{Bopomofo_Extended}   \p{Block=Bopomofo_Extended} (Short:
                             \p{InBopomofoExt}) (32)
 X \p{Box_Drawing}         \p{Block=Box_Drawing} (128)
   \p{Bpt: *}              \p{Bidi_Paired_Bracket_Type: *}
   \p{Brah}                \p{Brahmi} (= \p{Script=Brahmi}) (NOT
                             \p{Block=Brahmi}) (109)
   \p{Brahmi}              \p{Script=Brahmi} (Short: \p{Brah}; NOT
                             \p{Block=Brahmi}) (109)
   \p{Brai}                \p{Braille} (= \p{Script=Braille}) (256)
   \p{Braille}             \p{Script=Braille} (Short: \p{Brai}) (256)
 X \p{Braille_Patterns}    \p{Block=Braille_Patterns} (Short:
                             \p{InBraille}) (256)
   \p{Bugi}                \p{Buginese} (= \p{Script=Buginese}) (NOT
                             \p{Block=Buginese}) (30)
   \p{Buginese}            \p{Script=Buginese} (Short: \p{Bugi}; NOT
                             \p{Block=Buginese}) (30)
   \p{Buhd}                \p{Buhid} (= \p{Script=Buhid}) (NOT
                             \p{Block=Buhid}) (20)
   \p{Buhid}               \p{Script=Buhid} (Short: \p{Buhd}; NOT
                             \p{Block=Buhid}) (20)
 X \p{Byzantine_Music}     \p{Byzantine_Musical_Symbols} (= \p{Block=
                             Byzantine_Musical_Symbols}) (256)
 X \p{Byzantine_Musical_Symbols} \p{Block=Byzantine_Musical_Symbols}
                             (Short: \p{InByzantineMusic}) (256)
   \p{C} \pC               \p{Other} (= \p{General_Category=Other})
                             (993_590 plus all above-Unicode code
                             points)
   \p{Cakm}                \p{Chakma} (= \p{Script=Chakma}) (NOT
                             \p{Block=Chakma}) (67)
   \p{Canadian_Aboriginal} \p{Script=Canadian_Aboriginal} (Short:
                             \p{Cans}) (710)
 X \p{Canadian_Syllabics}  \p{Unified_Canadian_Aboriginal_Syllabics}
                             (= \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics})
                             (640)
 T \p{Canonical_Combining_Class: 0} \p{Canonical_Combining_Class=
                             Not_Reordered} (1_113_361 plus all
                             above-Unicode code points)
 T \p{Canonical_Combining_Class: 1} \p{Canonical_Combining_Class=
                             Overlay} (32)
 T \p{Canonical_Combining_Class: 7} \p{Canonical_Combining_Class=
                             Nukta} (20)
 T \p{Canonical_Combining_Class: 8} \p{Canonical_Combining_Class=
                             Kana_Voicing} (2)
 T \p{Canonical_Combining_Class: 9} \p{Canonical_Combining_Class=
                             Virama} (45)
 T \p{Canonical_Combining_Class: 10} \p{Canonical_Combining_Class=
                             CCC10} (1)
 T \p{Canonical_Combining_Class: 11} \p{Canonical_Combining_Class=
                             CCC11} (1)
 T \p{Canonical_Combining_Class: 12} \p{Canonical_Combining_Class=
                             CCC12} (1)
 T \p{Canonical_Combining_Class: 13} \p{Canonical_Combining_Class=
                             CCC13} (1)
 T \p{Canonical_Combining_Class: 14} \p{Canonical_Combining_Class=
                             CCC14} (1)
 T \p{Canonical_Combining_Class: 15} \p{Canonical_Combining_Class=
                             CCC15} (1)
 T \p{Canonical_Combining_Class: 16} \p{Canonical_Combining_Class=
                             CCC16} (1)
 T \p{Canonical_Combining_Class: 17} \p{Canonical_Combining_Class=
                             CCC17} (1)
 T \p{Canonical_Combining_Class: 18} \p{Canonical_Combining_Class=
                             CCC18} (2)
 T \p{Canonical_Combining_Class: 19} \p{Canonical_Combining_Class=
                             CCC19} (2)
 T \p{Canonical_Combining_Class: 20} \p{Canonical_Combining_Class=
                             CCC20} (1)
 T \p{Canonical_Combining_Class: 21} \p{Canonical_Combining_Class=
                             CCC21} (1)
 T \p{Canonical_Combining_Class: 22} \p{Canonical_Combining_Class=
                             CCC22} (1)
 T \p{Canonical_Combining_Class: 23} \p{Canonical_Combining_Class=
                             CCC23} (1)
 T \p{Canonical_Combining_Class: 24} \p{Canonical_Combining_Class=
                             CCC24} (1)
 T \p{Canonical_Combining_Class: 25} \p{Canonical_Combining_Class=
                             CCC25} (1)
 T \p{Canonical_Combining_Class: 26} \p{Canonical_Combining_Class=
                             CCC26} (1)
 T \p{Canonical_Combining_Class: 27} \p{Canonical_Combining_Class=
                             CCC27} (2)
 T \p{Canonical_Combining_Class: 28} \p{Canonical_Combining_Class=
                             CCC28} (2)
 T \p{Canonical_Combining_Class: 29} \p{Canonical_Combining_Class=
                             CCC29} (2)
 T \p{Canonical_Combining_Class: 30} \p{Canonical_Combining_Class=
                             CCC30} (2)
 T \p{Canonical_Combining_Class: 31} \p{Canonical_Combining_Class=
                             CCC31} (2)
 T \p{Canonical_Combining_Class: 32} \p{Canonical_Combining_Class=
                             CCC32} (2)
 T \p{Canonical_Combining_Class: 33} \p{Canonical_Combining_Class=
                             CCC33} (1)
 T \p{Canonical_Combining_Class: 34} \p{Canonical_Combining_Class=
                             CCC34} (1)
 T \p{Canonical_Combining_Class: 35} \p{Canonical_Combining_Class=
                             CCC35} (1)
 T \p{Canonical_Combining_Class: 36} \p{Canonical_Combining_Class=
                             CCC36} (1)
 T \p{Canonical_Combining_Class: 84} \p{Canonical_Combining_Class=
                             CCC84} (1)
 T \p{Canonical_Combining_Class: 91} \p{Canonical_Combining_Class=
                             CCC91} (1)
 T \p{Canonical_Combining_Class: 103} \p{Canonical_Combining_Class=
                             CCC103} (2)
 T \p{Canonical_Combining_Class: 107} \p{Canonical_Combining_Class=
                             CCC107} (4)
 T \p{Canonical_Combining_Class: 118} \p{Canonical_Combining_Class=
                             CCC118} (2)
 T \p{Canonical_Combining_Class: 122} \p{Canonical_Combining_Class=
                             CCC122} (4)
 T \p{Canonical_Combining_Class: 129} \p{Canonical_Combining_Class=
                             CCC129} (1)
 T \p{Canonical_Combining_Class: 130} \p{Canonical_Combining_Class=
                             CCC130} (6)
 T \p{Canonical_Combining_Class: 132} \p{Canonical_Combining_Class=
                             CCC132} (1)
 T \p{Canonical_Combining_Class: 133} \p{Canonical_Combining_Class=
                             CCC133} (0)
 T \p{Canonical_Combining_Class: 200} \p{Canonical_Combining_Class=
                             Attached_Below_Left} (0)
 T \p{Canonical_Combining_Class: 202} \p{Canonical_Combining_Class=
                             Attached_Below} (5)
 T \p{Canonical_Combining_Class: 214} \p{Canonical_Combining_Class=
                             Attached_Above} (1)
 T \p{Canonical_Combining_Class: 216} \p{Canonical_Combining_Class=
                             Attached_Above_Right} (9)
 T \p{Canonical_Combining_Class: 218} \p{Canonical_Combining_Class=
                             Below_Left} (1)
 T \p{Canonical_Combining_Class: 220} \p{Canonical_Combining_Class=
                             Below} (153)
 T \p{Canonical_Combining_Class: 222} \p{Canonical_Combining_Class=
                             Below_Right} (4)
 T \p{Canonical_Combining_Class: 224} \p{Canonical_Combining_Class=
                             Left} (2)
 T \p{Canonical_Combining_Class: 226} \p{Canonical_Combining_Class=
                             Right} (1)
 T \p{Canonical_Combining_Class: 228} \p{Canonical_Combining_Class=
                             Above_Left} (3)
 T \p{Canonical_Combining_Class: 230} \p{Canonical_Combining_Class=
                             Above} (402)
 T \p{Canonical_Combining_Class: 232} \p{Canonical_Combining_Class=
                             Above_Right} (4)
 T \p{Canonical_Combining_Class: 233} \p{Canonical_Combining_Class=
                             Double_Below} (4)
 T \p{Canonical_Combining_Class: 234} \p{Canonical_Combining_Class=
                             Double_Above} (5)
 T \p{Canonical_Combining_Class: 240} \p{Canonical_Combining_Class=
                             Iota_Subscript} (1)
   \p{Canonical_Combining_Class: A} \p{Canonical_Combining_Class=
                             Above} (402)
   \p{Canonical_Combining_Class: Above} (Short: \p{Ccc=A}) (402)
   \p{Canonical_Combining_Class: Above_Left} (Short: \p{Ccc=AL}) (3)
   \p{Canonical_Combining_Class: Above_Right} (Short: \p{Ccc=AR}) (4)
   \p{Canonical_Combining_Class: AL} \p{Canonical_Combining_Class=
                             Above_Left} (3)
   \p{Canonical_Combining_Class: AR} \p{Canonical_Combining_Class=
                             Above_Right} (4)
   \p{Canonical_Combining_Class: ATA} \p{Canonical_Combining_Class=
                             Attached_Above} (1)
   \p{Canonical_Combining_Class: ATAR} \p{Canonical_Combining_Class=
                             Attached_Above_Right} (9)
   \p{Canonical_Combining_Class: ATB} \p{Canonical_Combining_Class=
                             Attached_Below} (5)
   \p{Canonical_Combining_Class: ATBL} \p{Canonical_Combining_Class=
                             Attached_Below_Left} (0)
   \p{Canonical_Combining_Class: Attached_Above} (Short: \p{Ccc=ATA})
                             (1)
   \p{Canonical_Combining_Class: Attached_Above_Right} (Short:
                             \p{Ccc=ATAR}) (9)
   \p{Canonical_Combining_Class: Attached_Below} (Short: \p{Ccc=ATB})
                             (5)
   \p{Canonical_Combining_Class: Attached_Below_Left} (Short: \p{Ccc=
                             ATBL}) (0)
   \p{Canonical_Combining_Class: B} \p{Canonical_Combining_Class=
                             Below} (153)
   \p{Canonical_Combining_Class: Below} (Short: \p{Ccc=B}) (153)
   \p{Canonical_Combining_Class: Below_Left} (Short: \p{Ccc=BL}) (1)
   \p{Canonical_Combining_Class: Below_Right} (Short: \p{Ccc=BR}) (4)
   \p{Canonical_Combining_Class: BL} \p{Canonical_Combining_Class=
                             Below_Left} (1)
   \p{Canonical_Combining_Class: BR} \p{Canonical_Combining_Class=
                             Below_Right} (4)
   \p{Canonical_Combining_Class: CCC10} (Short: \p{Ccc=CCC10}) (1)
   \p{Canonical_Combining_Class: CCC103} (Short: \p{Ccc=CCC103}) (2)
   \p{Canonical_Combining_Class: CCC107} (Short: \p{Ccc=CCC107}) (4)
   \p{Canonical_Combining_Class: CCC11} (Short: \p{Ccc=CCC11}) (1)
   \p{Canonical_Combining_Class: CCC118} (Short: \p{Ccc=CCC118}) (2)
   \p{Canonical_Combining_Class: CCC12} (Short: \p{Ccc=CCC12}) (1)
   \p{Canonical_Combining_Class: CCC122} (Short: \p{Ccc=CCC122}) (4)
   \p{Canonical_Combining_Class: CCC129} (Short: \p{Ccc=CCC129}) (1)
   \p{Canonical_Combining_Class: CCC13} (Short: \p{Ccc=CCC13}) (1)
   \p{Canonical_Combining_Class: CCC130} (Short: \p{Ccc=CCC130}) (6)
   \p{Canonical_Combining_Class: CCC132} (Short: \p{Ccc=CCC132}) (1)
   \p{Canonical_Combining_Class: CCC133} (Short: \p{Ccc=CCC133}) (0)
   \p{Canonical_Combining_Class: CCC14} (Short: \p{Ccc=CCC14}) (1)
   \p{Canonical_Combining_Class: CCC15} (Short: \p{Ccc=CCC15}) (1)
   \p{Canonical_Combining_Class: CCC16} (Short: \p{Ccc=CCC16}) (1)
   \p{Canonical_Combining_Class: CCC17} (Short: \p{Ccc=CCC17}) (1)
   \p{Canonical_Combining_Class: CCC18} (Short: \p{Ccc=CCC18}) (2)
   \p{Canonical_Combining_Class: CCC19} (Short: \p{Ccc=CCC19}) (2)
   \p{Canonical_Combining_Class: CCC20} (Short: \p{Ccc=CCC20}) (1)
   \p{Canonical_Combining_Class: CCC21} (Short: \p{Ccc=CCC21}) (1)
   \p{Canonical_Combining_Class: CCC22} (Short: \p{Ccc=CCC22}) (1)
   \p{Canonical_Combining_Class: CCC23} (Short: \p{Ccc=CCC23}) (1)
   \p{Canonical_Combining_Class: CCC24} (Short: \p{Ccc=CCC24}) (1)
   \p{Canonical_Combining_Class: CCC25} (Short: \p{Ccc=CCC25}) (1)
   \p{Canonical_Combining_Class: CCC26} (Short: \p{Ccc=CCC26}) (1)
   \p{Canonical_Combining_Class: CCC27} (Short: \p{Ccc=CCC27}) (2)
   \p{Canonical_Combining_Class: CCC28} (Short: \p{Ccc=CCC28}) (2)
   \p{Canonical_Combining_Class: CCC29} (Short: \p{Ccc=CCC29}) (2)
   \p{Canonical_Combining_Class: CCC30} (Short: \p{Ccc=CCC30}) (2)
   \p{Canonical_Combining_Class: CCC31} (Short: \p{Ccc=CCC31}) (2)
   \p{Canonical_Combining_Class: CCC32} (Short: \p{Ccc=CCC32}) (2)
   \p{Canonical_Combining_Class: CCC33} (Short: \p{Ccc=CCC33}) (1)
   \p{Canonical_Combining_Class: CCC34} (Short: \p{Ccc=CCC34}) (1)
   \p{Canonical_Combining_Class: CCC35} (Short: \p{Ccc=CCC35}) (1)
   \p{Canonical_Combining_Class: CCC36} (Short: \p{Ccc=CCC36}) (1)
   \p{Canonical_Combining_Class: CCC84} (Short: \p{Ccc=CCC84}) (1)
   \p{Canonical_Combining_Class: CCC91} (Short: \p{Ccc=CCC91}) (1)
   \p{Canonical_Combining_Class: DA} \p{Canonical_Combining_Class=
                             Double_Above} (5)
   \p{Canonical_Combining_Class: DB} \p{Canonical_Combining_Class=
                             Double_Below} (4)
   \p{Canonical_Combining_Class: Double_Above} (Short: \p{Ccc=DA}) (5)
   \p{Canonical_Combining_Class: Double_Below} (Short: \p{Ccc=DB}) (4)
   \p{Canonical_Combining_Class: Iota_Subscript} (Short: \p{Ccc=IS})
                             (1)
   \p{Canonical_Combining_Class: IS} \p{Canonical_Combining_Class=
                             Iota_Subscript} (1)
   \p{Canonical_Combining_Class: Kana_Voicing} (Short: \p{Ccc=KV}) (2)
   \p{Canonical_Combining_Class: KV} \p{Canonical_Combining_Class=
                             Kana_Voicing} (2)
   \p{Canonical_Combining_Class: L} \p{Canonical_Combining_Class=
                             Left} (2)
   \p{Canonical_Combining_Class: Left} (Short: \p{Ccc=L}) (2)
   \p{Canonical_Combining_Class: NK} \p{Canonical_Combining_Class=
                             Nukta} (20)
   \p{Canonical_Combining_Class: Not_Reordered} (Short: \p{Ccc=NR})
                             (1_113_361 plus all above-Unicode code
                             points)
   \p{Canonical_Combining_Class: NR} \p{Canonical_Combining_Class=
                             Not_Reordered} (1_113_361 plus all
                             above-Unicode code points)
   \p{Canonical_Combining_Class: Nukta} (Short: \p{Ccc=NK}) (20)
   \p{Canonical_Combining_Class: OV} \p{Canonical_Combining_Class=
                             Overlay} (32)
   \p{Canonical_Combining_Class: Overlay} (Short: \p{Ccc=OV}) (32)
   \p{Canonical_Combining_Class: R} \p{Canonical_Combining_Class=
                             Right} (1)
   \p{Canonical_Combining_Class: Right} (Short: \p{Ccc=R}) (1)
   \p{Canonical_Combining_Class: Virama} (Short: \p{Ccc=VR}) (45)
   \p{Canonical_Combining_Class: VR} \p{Canonical_Combining_Class=
                             Virama} (45)
   \p{Cans}                \p{Canadian_Aboriginal} (= \p{Script=
                             Canadian_Aboriginal}) (710)
   \p{Cari}                \p{Carian} (= \p{Script=Carian}) (NOT
                             \p{Block=Carian}) (49)
   \p{Carian}              \p{Script=Carian} (Short: \p{Cari}; NOT
                             \p{Block=Carian}) (49)
   \p{Case_Ignorable}      \p{Case_Ignorable=Y} (Short: \p{CI}) (2115)
   \p{Case_Ignorable: N*}  (Short: \p{CI=N}, \P{CI}) (1_111_997 plus
                             all above-Unicode code points)
   \p{Case_Ignorable: Y*}  (Short: \p{CI=Y}, \p{CI}) (2115)
   \p{Cased}               \p{Cased=Y} (3955)
   \p{Cased: N*}           (Single: \P{Cased}) (1_110_157 plus all
                             above-Unicode code points)
   \p{Cased: Y*}           (Single: \p{Cased}) (3955)
   \p{Cased_Letter}        \p{General_Category=Cased_Letter} (Short:
                             \p{LC}) (3646)
   \p{Category: *}         \p{General_Category: *}
   \p{Caucasian_Albanian}  \p{Script=Caucasian_Albanian} (Short:
                             \p{Aghb}; NOT \p{Block=
                             Caucasian_Albanian}) (53)
   \p{Cc}                  \p{XPosixCntrl} (= \p{General_Category=
                             Control}) (65)
   \p{Ccc: *}              \p{Canonical_Combining_Class: *}
   \p{CE}                  \p{Composition_Exclusion} (=
                             \p{Composition_Exclusion=Y}) (81)
   \p{CE: *}               \p{Composition_Exclusion: *}
   \p{Cf}                  \p{Format} (= \p{General_Category=Format})
                             (150)
   \p{Chakma}              \p{Script=Chakma} (Short: \p{Cakm}; NOT
                             \p{Block=Chakma}) (67)
   \p{Cham}                \p{Script=Cham} (NOT \p{Block=Cham}) (83)
   \p{Changes_When_Casefolded} \p{Changes_When_Casefolded=Y} (Short:
                             \p{CWCF}) (1297)
   \p{Changes_When_Casefolded: N*} (Short: \p{CWCF=N}, \P{CWCF})
                             (1_112_815 plus all above-Unicode code
                             points)
   \p{Changes_When_Casefolded: Y*} (Short: \p{CWCF=Y}, \p{CWCF})
                             (1297)
   \p{Changes_When_Casemapped} \p{Changes_When_Casemapped=Y} (Short:
                             \p{CWCM}) (2518)
   \p{Changes_When_Casemapped: N*} (Short: \p{CWCM=N}, \P{CWCM})
                             (1_111_594 plus all above-Unicode code
                             points)
   \p{Changes_When_Casemapped: Y*} (Short: \p{CWCM=Y}, \p{CWCM})
                             (2518)
   \p{Changes_When_Lowercased} \p{Changes_When_Lowercased=Y} (Short:
                             \p{CWL}) (1233)
   \p{Changes_When_Lowercased: N*} (Short: \p{CWL=N}, \P{CWL})
                             (1_112_879 plus all above-Unicode code
                             points)
   \p{Changes_When_Lowercased: Y*} (Short: \p{CWL=Y}, \p{CWL}) (1233)
   \p{Changes_When_NFKC_Casefolded} \p{Changes_When_NFKC_Casefolded=
                             Y} (Short: \p{CWKCF}) (10_146)
   \p{Changes_When_NFKC_Casefolded: N*} (Short: \p{CWKCF=N},
                             \P{CWKCF}) (1_103_966 plus all above-
                             Unicode code points)
   \p{Changes_When_NFKC_Casefolded: Y*} (Short: \p{CWKCF=Y},
                             \p{CWKCF}) (10_146)
   \p{Changes_When_Titlecased} \p{Changes_When_Titlecased=Y} (Short:
                             \p{CWT}) (1289)
   \p{Changes_When_Titlecased: N*} (Short: \p{CWT=N}, \P{CWT})
                             (1_112_823 plus all above-Unicode code
                             points)
   \p{Changes_When_Titlecased: Y*} (Short: \p{CWT=Y}, \p{CWT}) (1289)
   \p{Changes_When_Uppercased} \p{Changes_When_Uppercased=Y} (Short:
                             \p{CWU}) (1316)
   \p{Changes_When_Uppercased: N*} (Short: \p{CWU=N}, \P{CWU})
                             (1_112_796 plus all above-Unicode code
                             points)
   \p{Changes_When_Uppercased: Y*} (Short: \p{CWU=Y}, \p{CWU}) (1316)
   \p{Cher}                \p{Cherokee} (= \p{Script=Cherokee}) (NOT
                             \p{Block=Cherokee}) (172)
   \p{Cherokee}            \p{Script=Cherokee} (Short: \p{Cher}; NOT
                             \p{Block=Cherokee}) (172)
 X \p{Cherokee_Sup}        \p{Cherokee_Supplement} (= \p{Block=
                             Cherokee_Supplement}) (80)
 X \p{Cherokee_Supplement} \p{Block=Cherokee_Supplement} (Short:
                             \p{InCherokeeSup}) (80)
   \p{CI}                  \p{Case_Ignorable} (= \p{Case_Ignorable=
                             Y}) (2115)
   \p{CI: *}               \p{Case_Ignorable: *}
 X \p{CJK}                 \p{CJK_Unified_Ideographs} (= \p{Block=
                             CJK_Unified_Ideographs}) (20_992)
 X \p{CJK_Compat}          \p{CJK_Compatibility} (= \p{Block=
                             CJK_Compatibility}) (256)
 X \p{CJK_Compat_Forms}    \p{CJK_Compatibility_Forms} (= \p{Block=
                             CJK_Compatibility_Forms}) (32)
 X \p{CJK_Compat_Ideographs} \p{CJK_Compatibility_Ideographs} (=
                             \p{Block=CJK_Compatibility_Ideographs})
                             (512)
 X \p{CJK_Compat_Ideographs_Sup}
                             \p{CJK_Compatibility_Ideographs_-
                             Supplement} (= \p{Block=
                             CJK_Compatibility_Ideographs_-
                             Supplement}) (544)
 X \p{CJK_Compatibility}   \p{Block=CJK_Compatibility} (Short:
                             \p{InCJKCompat}) (256)
 X \p{CJK_Compatibility_Forms} \p{Block=CJK_Compatibility_Forms}
                             (Short: \p{InCJKCompatForms}) (32)
 X \p{CJK_Compatibility_Ideographs} \p{Block=
                             CJK_Compatibility_Ideographs} (Short:
                             \p{InCJKCompatIdeographs}) (512)
 X \p{CJK_Compatibility_Ideographs_Supplement} \p{Block=
                             CJK_Compatibility_Ideographs_Supplement}
                             (Short: \p{InCJKCompatIdeographsSup})
                             (544)
 X \p{CJK_Ext_A}           \p{CJK_Unified_Ideographs_Extension_A} (=
                             \p{Block=
                             CJK_Unified_Ideographs_Extension_A})
                             (6592)
 X \p{CJK_Ext_B}           \p{CJK_Unified_Ideographs_Extension_B} (=
                             \p{Block=
                             CJK_Unified_Ideographs_Extension_B})
                             (42_720)
 X \p{CJK_Ext_C}           \p{CJK_Unified_Ideographs_Extension_C} (=
                             \p{Block=
                             CJK_Unified_Ideographs_Extension_C})
                             (4160)
 X \p{CJK_Ext_D}           \p{CJK_Unified_Ideographs_Extension_D} (=
                             \p{Block=
                             CJK_Unified_Ideographs_Extension_D})
                             (224)
 X \p{CJK_Ext_E}           \p{CJK_Unified_Ideographs_Extension_E} (=
                             \p{Block=
                             CJK_Unified_Ideographs_Extension_E})
                             (5776)
 X \p{CJK_Radicals_Sup}    \p{CJK_Radicals_Supplement} (= \p{Block=
                             CJK_Radicals_Supplement}) (128)
 X \p{CJK_Radicals_Supplement} \p{Block=CJK_Radicals_Supplement}
                             (Short: \p{InCJKRadicalsSup}) (128)
 X \p{CJK_Strokes}         \p{Block=CJK_Strokes} (48)
 X \p{CJK_Symbols}         \p{CJK_Symbols_And_Punctuation} (=
                             \p{Block=CJK_Symbols_And_Punctuation})
                             (64)
 X \p{CJK_Symbols_And_Punctuation} \p{Block=
                             CJK_Symbols_And_Punctuation} (Short:
                             \p{InCJKSymbols}) (64)
 X \p{CJK_Unified_Ideographs} \p{Block=CJK_Unified_Ideographs}
                             (Short: \p{InCJK}) (20_992)
 X \p{CJK_Unified_Ideographs_Extension_A} \p{Block=
                             CJK_Unified_Ideographs_Extension_A}
                             (Short: \p{InCJKExtA}) (6592)
 X \p{CJK_Unified_Ideographs_Extension_B} \p{Block=
                             CJK_Unified_Ideographs_Extension_B}
                             (Short: \p{InCJKExtB}) (42_720)
 X \p{CJK_Unified_Ideographs_Extension_C} \p{Block=
                             CJK_Unified_Ideographs_Extension_C}
                             (Short: \p{InCJKExtC}) (4160)
 X \p{CJK_Unified_Ideographs_Extension_D} \p{Block=
                             CJK_Unified_Ideographs_Extension_D}
                             (Short: \p{InCJKExtD}) (224)
 X \p{CJK_Unified_Ideographs_Extension_E} \p{Block=
                             CJK_Unified_Ideographs_Extension_E}
                             (Short: \p{InCJKExtE}) (5776)
   \p{Close_Punctuation}   \p{General_Category=Close_Punctuation}
                             (Short: \p{Pe}) (73)
   \p{Cn}                  \p{Unassigned} (= \p{General_Category=
                             Unassigned}) (853_859 plus all above-
                             Unicode code points)
   \p{Cntrl}               \p{XPosixCntrl} (= \p{General_Category=
                             Control}) (65)
   \p{Co}                  \p{Private_Use} (= \p{General_Category=
                             Private_Use}) (NOT \p{Private_Use_Area})
                             (137_468)
 X \p{Combining_Diacritical_Marks} \p{Block=
                             Combining_Diacritical_Marks} (Short:
                             \p{InDiacriticals}) (112)
 X \p{Combining_Diacritical_Marks_Extended} \p{Block=
                             Combining_Diacritical_Marks_Extended}
                             (Short: \p{InDiacriticalsExt}) (80)
 X \p{Combining_Diacritical_Marks_For_Symbols} \p{Block=
                             Combining_Diacritical_Marks_For_Symbols}
                             (Short: \p{InDiacriticalsForSymbols})
                             (48)
 X \p{Combining_Diacritical_Marks_Supplement} \p{Block=
                             Combining_Diacritical_Marks_Supplement}
                             (Short: \p{InDiacriticalsSup}) (64)
 X \p{Combining_Half_Marks} \p{Block=Combining_Half_Marks} (Short:
                             \p{InHalfMarks}) (16)
   \p{Combining_Mark}      \p{Mark} (= \p{General_Category=Mark})
                             (1963)
 X \p{Combining_Marks_For_Symbols}
                             \p{Combining_Diacritical_Marks_For_-
                             Symbols} (= \p{Block=
                             Combining_Diacritical_Marks_For_-
                             Symbols}) (48)
   \p{Common}              \p{Script=Common} (Short: \p{Zyyy}) (7179)
 X \p{Common_Indic_Number_Forms} \p{Block=Common_Indic_Number_Forms}
                             (Short: \p{InIndicNumberForms}) (16)
   \p{Comp_Ex}             \p{Full_Composition_Exclusion} (=
                             \p{Full_Composition_Exclusion=Y}) (1120)
   \p{Comp_Ex: *}          \p{Full_Composition_Exclusion: *}
 X \p{Compat_Jamo}         \p{Hangul_Compatibility_Jamo} (= \p{Block=
                             Hangul_Compatibility_Jamo}) (96)
   \p{Composition_Exclusion} \p{Composition_Exclusion=Y} (Short:
                             \p{CE}) (81)
   \p{Composition_Exclusion: N*} (Short: \p{CE=N}, \P{CE}) (1_114_031
                             plus all above-Unicode code points)
   \p{Composition_Exclusion: Y*} (Short: \p{CE=Y}, \p{CE}) (81)
   \p{Connector_Punctuation} \p{General_Category=
                             Connector_Punctuation} (Short: \p{Pc})
                             (10)
   \p{Control}             \p{XPosixCntrl} (= \p{General_Category=
                             Control}) (65)
 X \p{Control_Pictures}    \p{Block=Control_Pictures} (64)
   \p{Copt}                \p{Coptic} (= \p{Script=Coptic}) (NOT
                             \p{Block=Coptic}) (137)
   \p{Coptic}              \p{Script=Coptic} (Short: \p{Copt}; NOT
                             \p{Block=Coptic}) (137)
 X \p{Coptic_Epact_Numbers} \p{Block=Coptic_Epact_Numbers} (32)
 X \p{Counting_Rod}        \p{Counting_Rod_Numerals} (= \p{Block=
                             Counting_Rod_Numerals}) (32)
 X \p{Counting_Rod_Numerals} \p{Block=Counting_Rod_Numerals} (Short:
                             \p{InCountingRod}) (32)
   \p{Cprt}                \p{Cypriot} (= \p{Script=Cypriot}) (55)
   \p{Cs}                  \p{Surrogate} (= \p{General_Category=
                             Surrogate}) (2048)
   \p{Cuneiform}           \p{Script=Cuneiform} (Short: \p{Xsux}; NOT
                             \p{Block=Cuneiform}) (1234)
 X \p{Cuneiform_Numbers}   \p{Cuneiform_Numbers_And_Punctuation} (=
                             \p{Block=
                             Cuneiform_Numbers_And_Punctuation}) (128)
 X \p{Cuneiform_Numbers_And_Punctuation} \p{Block=
                             Cuneiform_Numbers_And_Punctuation}
                             (Short: \p{InCuneiformNumbers}) (128)
   \p{Currency_Symbol}     \p{General_Category=Currency_Symbol}
                             (Short: \p{Sc}) (53)
 X \p{Currency_Symbols}    \p{Block=Currency_Symbols} (48)
   \p{CWCF}                \p{Changes_When_Casefolded} (=
                             \p{Changes_When_Casefolded=Y}) (1297)
   \p{CWCF: *}             \p{Changes_When_Casefolded: *}
   \p{CWCM}                \p{Changes_When_Casemapped} (=
                             \p{Changes_When_Casemapped=Y}) (2518)
   \p{CWCM: *}             \p{Changes_When_Casemapped: *}
   \p{CWKCF}               \p{Changes_When_NFKC_Casefolded} (=
                             \p{Changes_When_NFKC_Casefolded=Y})
                             (10_146)
   \p{CWKCF: *}            \p{Changes_When_NFKC_Casefolded: *}
   \p{CWL}                 \p{Changes_When_Lowercased} (=
                             \p{Changes_When_Lowercased=Y}) (1233)
   \p{CWL: *}              \p{Changes_When_Lowercased: *}
   \p{CWT}                 \p{Changes_When_Titlecased} (=
                             \p{Changes_When_Titlecased=Y}) (1289)
   \p{CWT: *}              \p{Changes_When_Titlecased: *}
   \p{CWU}                 \p{Changes_When_Uppercased} (=
                             \p{Changes_When_Uppercased=Y}) (1316)
   \p{CWU: *}              \p{Changes_When_Uppercased: *}
   \p{Cypriot}             \p{Script=Cypriot} (Short: \p{Cprt}) (55)
 X \p{Cypriot_Syllabary}   \p{Block=Cypriot_Syllabary} (64)
   \p{Cyrillic}            \p{Script=Cyrillic} (Short: \p{Cyrl}; NOT
                             \p{Block=Cyrillic}) (434)
 X \p{Cyrillic_Ext_A}      \p{Cyrillic_Extended_A} (= \p{Block=
                             Cyrillic_Extended_A}) (32)
 X \p{Cyrillic_Ext_B}      \p{Cyrillic_Extended_B} (= \p{Block=
                             Cyrillic_Extended_B}) (96)
 X \p{Cyrillic_Extended_A} \p{Block=Cyrillic_Extended_A} (Short:
                             \p{InCyrillicExtA}) (32)
 X \p{Cyrillic_Extended_B} \p{Block=Cyrillic_Extended_B} (Short:
                             \p{InCyrillicExtB}) (96)
 X \p{Cyrillic_Sup}        \p{Cyrillic_Supplement} (= \p{Block=
                             Cyrillic_Supplement}) (48)
 X \p{Cyrillic_Supplement} \p{Block=Cyrillic_Supplement} (Short:
                             \p{InCyrillicSup}) (48)
 X \p{Cyrillic_Supplementary} \p{Cyrillic_Supplement} (= \p{Block=
                             Cyrillic_Supplement}) (48)
   \p{Cyrl}                \p{Cyrillic} (= \p{Script=Cyrillic}) (NOT
                             \p{Block=Cyrillic}) (434)
   \p{Dash}                \p{Dash=Y} (28)
   \p{Dash: N*}            (Single: \P{Dash}) (1_114_084 plus all
                             above-Unicode code points)
   \p{Dash: Y*}            (Single: \p{Dash}) (28)
   \p{Dash_Punctuation}    \p{General_Category=Dash_Punctuation}
                             (Short: \p{Pd}) (24)
   \p{Decimal_Number}      \p{XPosixDigit} (= \p{General_Category=
                             Decimal_Number}) (550)
   \p{Decomposition_Type: Can} \p{Decomposition_Type=Canonical}
                             (13_232)
   \p{Decomposition_Type: Canonical} (Short: \p{Dt=Can}) (13_232)
   \p{Decomposition_Type: Circle} (Short: \p{Dt=Enc}) (240)
   \p{Decomposition_Type: Com} \p{Decomposition_Type=Compat} (720)
   \p{Decomposition_Type: Compat} (Short: \p{Dt=Com}) (720)
   \p{Decomposition_Type: Enc} \p{Decomposition_Type=Circle} (240)
   \p{Decomposition_Type: Fin} \p{Decomposition_Type=Final} (240)
   \p{Decomposition_Type: Final} (Short: \p{Dt=Fin}) (240)
   \p{Decomposition_Type: Font} (Short: \p{Dt=Font}) (1184)
   \p{Decomposition_Type: Fra} \p{Decomposition_Type=Fraction} (20)
   \p{Decomposition_Type: Fraction} (Short: \p{Dt=Fra}) (20)
   \p{Decomposition_Type: Init} \p{Decomposition_Type=Initial} (171)
   \p{Decomposition_Type: Initial} (Short: \p{Dt=Init}) (171)
   \p{Decomposition_Type: Iso} \p{Decomposition_Type=Isolated} (238)
   \p{Decomposition_Type: Isolated} (Short: \p{Dt=Iso}) (238)
   \p{Decomposition_Type: Med} \p{Decomposition_Type=Medial} (82)
   \p{Decomposition_Type: Medial} (Short: \p{Dt=Med}) (82)
   \p{Decomposition_Type: Nar} \p{Decomposition_Type=Narrow} (122)
   \p{Decomposition_Type: Narrow} (Short: \p{Dt=Nar}) (122)
   \p{Decomposition_Type: Nb} \p{Decomposition_Type=Nobreak} (5)
   \p{Decomposition_Type: Nobreak} (Short: \p{Dt=Nb}) (5)
   \p{Decomposition_Type: Non_Canon} \p{Decomposition_Type=
                             Non_Canonical} (Perl extension) (3661)
   \p{Decomposition_Type: Non_Canonical} Union of all non-canonical
                             decompositions (Short: \p{Dt=NonCanon})
                             (Perl extension) (3661)
   \p{Decomposition_Type: None} (Short: \p{Dt=None}) (1_097_219 plus
                             all above-Unicode code points)
   \p{Decomposition_Type: Small} (Short: \p{Dt=Sml}) (26)
   \p{Decomposition_Type: Sml} \p{Decomposition_Type=Small} (26)
   \p{Decomposition_Type: Sqr} \p{Decomposition_Type=Square} (284)
   \p{Decomposition_Type: Square} (Short: \p{Dt=Sqr}) (284)
   \p{Decomposition_Type: Sub} (Short: \p{Dt=Sub}) (38)
   \p{Decomposition_Type: Sup} \p{Decomposition_Type=Super} (152)
   \p{Decomposition_Type: Super} (Short: \p{Dt=Sup}) (152)
   \p{Decomposition_Type: Vert} \p{Decomposition_Type=Vertical} (35)
   \p{Decomposition_Type: Vertical} (Short: \p{Dt=Vert}) (35)
   \p{Decomposition_Type: Wide} (Short: \p{Dt=Wide}) (104)
   \p{Default_Ignorable_Code_Point} \p{Default_Ignorable_Code_Point=
                             Y} (Short: \p{DI}) (4173)
   \p{Default_Ignorable_Code_Point: N*} (Short: \p{DI=N}, \P{DI})
                             (1_109_939 plus all above-Unicode code
                             points)
   \p{Default_Ignorable_Code_Point: Y*} (Short: \p{DI=Y}, \p{DI})
                             (4173)
   \p{Dep}                 \p{Deprecated} (= \p{Deprecated=Y}) (16)
   \p{Dep: *}              \p{Deprecated: *}
   \p{Deprecated}          \p{Deprecated=Y} (Short: \p{Dep}) (16)
   \p{Deprecated: N*}      (Short: \p{Dep=N}, \P{Dep}) (1_114_096
                             plus all above-Unicode code points)
   \p{Deprecated: Y*}      (Short: \p{Dep=Y}, \p{Dep}) (16)
   \p{Deseret}             \p{Script=Deseret} (Short: \p{Dsrt}) (80)
   \p{Deva}                \p{Devanagari} (= \p{Script=Devanagari})
                             (NOT \p{Block=Devanagari}) (154)
   \p{Devanagari}          \p{Script=Devanagari} (Short: \p{Deva};
                             NOT \p{Block=Devanagari}) (154)
 X \p{Devanagari_Ext}      \p{Devanagari_Extended} (= \p{Block=
                             Devanagari_Extended}) (32)
 X \p{Devanagari_Extended} \p{Block=Devanagari_Extended} (Short:
                             \p{InDevanagariExt}) (32)
   \p{DI}                  \p{Default_Ignorable_Code_Point} (=
                             \p{Default_Ignorable_Code_Point=Y})
                             (4173)
   \p{DI: *}               \p{Default_Ignorable_Code_Point: *}
   \p{Dia}                 \p{Diacritic} (= \p{Diacritic=Y}) (773)
   \p{Dia: *}              \p{Diacritic: *}
   \p{Diacritic}           \p{Diacritic=Y} (Short: \p{Dia}) (773)
   \p{Diacritic: N*}       (Short: \p{Dia=N}, \P{Dia}) (1_113_339
                             plus all above-Unicode code points)
   \p{Diacritic: Y*}       (Short: \p{Dia=Y}, \p{Dia}) (773)
 X \p{Diacriticals}        \p{Combining_Diacritical_Marks} (=
                             \p{Block=Combining_Diacritical_Marks})
                             (112)
 X \p{Diacriticals_Ext}    \p{Combining_Diacritical_Marks_Extended}
                             (= \p{Block=
                             Combining_Diacritical_Marks_Extended})
                             (80)
 X \p{Diacriticals_For_Symbols}
                             \p{Combining_Diacritical_Marks_For_-
                             Symbols} (= \p{Block=
                             Combining_Diacritical_Marks_For_-
                             Symbols}) (48)
 X \p{Diacriticals_Sup}    \p{Combining_Diacritical_Marks_Supplement}
                             (= \p{Block=
                             Combining_Diacritical_Marks_Supplement})
                             (64)
   \p{Digit}               \p{XPosixDigit} (= \p{General_Category=
                             Decimal_Number}) (550)
 X \p{Dingbats}            \p{Block=Dingbats} (192)
 X \p{Domino}              \p{Domino_Tiles} (= \p{Block=
                             Domino_Tiles}) (112)
 X \p{Domino_Tiles}        \p{Block=Domino_Tiles} (Short:
                             \p{InDomino}) (112)
   \p{Dsrt}                \p{Deseret} (= \p{Script=Deseret}) (80)
   \p{Dt: *}               \p{Decomposition_Type: *}
   \p{Dupl}                \p{Duployan} (= \p{Script=Duployan}) (NOT
                             \p{Block=Duployan}) (143)
   \p{Duployan}            \p{Script=Duployan} (Short: \p{Dupl}; NOT
                             \p{Block=Duployan}) (143)
   \p{Ea: *}               \p{East_Asian_Width: *}
 X \p{Early_Dynastic_Cuneiform} \p{Block=Early_Dynastic_Cuneiform}
                             (208)
   \p{East_Asian_Width: A} \p{East_Asian_Width=Ambiguous} (138_746)
   \p{East_Asian_Width: Ambiguous} (Short: \p{Ea=A}) (138_746)
   \p{East_Asian_Width: F} \p{East_Asian_Width=Fullwidth} (104)
   \p{East_Asian_Width: Fullwidth} (Short: \p{Ea=F}) (104)
   \p{East_Asian_Width: H} \p{East_Asian_Width=Halfwidth} (123)
   \p{East_Asian_Width: Halfwidth} (Short: \p{Ea=H}) (123)
   \p{East_Asian_Width: N} \p{East_Asian_Width=Neutral} (801_894 plus
                             all above-Unicode code points)
   \p{East_Asian_Width: Na} \p{East_Asian_Width=Narrow} (111)
   \p{East_Asian_Width: Narrow} (Short: \p{Ea=Na}) (111)
   \p{East_Asian_Width: Neutral} (Short: \p{Ea=N}) (801_894 plus all
                             above-Unicode code points)
   \p{East_Asian_Width: W} \p{East_Asian_Width=Wide} (173_134)
   \p{East_Asian_Width: Wide} (Short: \p{Ea=W}) (173_134)
   \p{Egyp}                \p{Egyptian_Hieroglyphs} (= \p{Script=
                             Egyptian_Hieroglyphs}) (NOT \p{Block=
                             Egyptian_Hieroglyphs}) (1071)
   \p{Egyptian_Hieroglyphs} \p{Script=Egyptian_Hieroglyphs} (Short:
                             \p{Egyp}; NOT \p{Block=
                             Egyptian_Hieroglyphs}) (1071)
   \p{Elba}                \p{Elbasan} (= \p{Script=Elbasan}) (NOT
                             \p{Block=Elbasan}) (40)
   \p{Elbasan}             \p{Script=Elbasan} (Short: \p{Elba}; NOT
                             \p{Block=Elbasan}) (40)
 X \p{Emoticons}           \p{Block=Emoticons} (80)
 X \p{Enclosed_Alphanum}   \p{Enclosed_Alphanumerics} (= \p{Block=
                             Enclosed_Alphanumerics}) (160)
 X \p{Enclosed_Alphanum_Sup} \p{Enclosed_Alphanumeric_Supplement} (=
                             \p{Block=
                             Enclosed_Alphanumeric_Supplement}) (256)
 X \p{Enclosed_Alphanumeric_Supplement} \p{Block=
                             Enclosed_Alphanumeric_Supplement}
                             (Short: \p{InEnclosedAlphanumSup}) (256)
 X \p{Enclosed_Alphanumerics} \p{Block=Enclosed_Alphanumerics}
                             (Short: \p{InEnclosedAlphanum}) (160)
 X \p{Enclosed_CJK}        \p{Enclosed_CJK_Letters_And_Months} (=
                             \p{Block=
                             Enclosed_CJK_Letters_And_Months}) (256)
 X \p{Enclosed_CJK_Letters_And_Months} \p{Block=
                             Enclosed_CJK_Letters_And_Months} (Short:
                             \p{InEnclosedCJK}) (256)
 X \p{Enclosed_Ideographic_Sup} \p{Enclosed_Ideographic_Supplement}
                             (= \p{Block=
                             Enclosed_Ideographic_Supplement}) (256)
 X \p{Enclosed_Ideographic_Supplement} \p{Block=
                             Enclosed_Ideographic_Supplement} (Short:
                             \p{InEnclosedIdeographicSup}) (256)
   \p{Enclosing_Mark}      \p{General_Category=Enclosing_Mark}
                             (Short: \p{Me}) (13)
   \p{Ethi}                \p{Ethiopic} (= \p{Script=Ethiopic}) (NOT
                             \p{Block=Ethiopic}) (495)
   \p{Ethiopic}            \p{Script=Ethiopic} (Short: \p{Ethi}; NOT
                             \p{Block=Ethiopic}) (495)
 X \p{Ethiopic_Ext}        \p{Ethiopic_Extended} (= \p{Block=
                             Ethiopic_Extended}) (96)
 X \p{Ethiopic_Ext_A}      \p{Ethiopic_Extended_A} (= \p{Block=
                             Ethiopic_Extended_A}) (48)
 X \p{Ethiopic_Extended}   \p{Block=Ethiopic_Extended} (Short:
                             \p{InEthiopicExt}) (96)
 X \p{Ethiopic_Extended_A} \p{Block=Ethiopic_Extended_A} (Short:
                             \p{InEthiopicExtA}) (48)
 X \p{Ethiopic_Sup}        \p{Ethiopic_Supplement} (= \p{Block=
                             Ethiopic_Supplement}) (32)
 X \p{Ethiopic_Supplement} \p{Block=Ethiopic_Supplement} (Short:
                             \p{InEthiopicSup}) (32)
   \p{Ext}                 \p{Extender} (= \p{Extender=Y}) (38)
   \p{Ext: *}              \p{Extender: *}
   \p{Extender}            \p{Extender=Y} (Short: \p{Ext}) (38)
   \p{Extender: N*}        (Short: \p{Ext=N}, \P{Ext}) (1_114_074
                             plus all above-Unicode code points)
   \p{Extender: Y*}        (Short: \p{Ext=Y}, \p{Ext}) (38)
   \p{Final_Punctuation}   \p{General_Category=Final_Punctuation}
                             (Short: \p{Pf}) (10)
   \p{Format}              \p{General_Category=Format} (Short:
                             \p{Cf}) (150)
   \p{Full_Composition_Exclusion} \p{Full_Composition_Exclusion=Y}
                             (Short: \p{CompEx}) (1120)
   \p{Full_Composition_Exclusion: N*} (Short: \p{CompEx=N},
                             \P{CompEx}) (1_112_992 plus all above-
                             Unicode code points)
   \p{Full_Composition_Exclusion: Y*} (Short: \p{CompEx=Y},
                             \p{CompEx}) (1120)
   \p{Gc: *}               \p{General_Category: *}
   \p{GCB: *}              \p{Grapheme_Cluster_Break: *}
   \p{General_Category: C} \p{General_Category=Other} (993_590 plus
                             all above-Unicode code points)
   \p{General_Category: Cased_Letter} [\p{Ll}\p{Lu}\p{Lt}] (Short:
                             \p{Gc=LC}, \p{LC}) (3646)
   \p{General_Category: Cc} \p{General_Category=Control} (65)
   \p{General_Category: Cf} \p{General_Category=Format} (150)
   \p{General_Category: Close_Punctuation} (Short: \p{Gc=Pe}, \p{Pe})
                             (73)
   \p{General_Category: Cn} \p{General_Category=Unassigned} (853_859
                             plus all above-Unicode code points)
   \p{General_Category: Cntrl} \p{General_Category=Control} (65)
   \p{General_Category: Co} \p{General_Category=Private_Use} (137_468)
   \p{General_Category: Combining_Mark} \p{General_Category=Mark}
                             (1963)
   \p{General_Category: Connector_Punctuation} (Short: \p{Gc=Pc},
                             \p{Pc}) (10)
   \p{General_Category: Control} (Short: \p{Gc=Cc}, \p{Cc}) (65)
   \p{General_Category: Cs} \p{General_Category=Surrogate} (2048)
   \p{General_Category: Currency_Symbol} (Short: \p{Gc=Sc}, \p{Sc})
                             (53)
   \p{General_Category: Dash_Punctuation} (Short: \p{Gc=Pd}, \p{Pd})
                             (24)
   \p{General_Category: Decimal_Number} (Short: \p{Gc=Nd}, \p{Nd})
                             (550)
   \p{General_Category: Digit} \p{General_Category=Decimal_Number}
                             (550)
   \p{General_Category: Enclosing_Mark} (Short: \p{Gc=Me}, \p{Me})
                             (13)
   \p{General_Category: Final_Punctuation} (Short: \p{Gc=Pf}, \p{Pf})
                             (10)
   \p{General_Category: Format} (Short: \p{Gc=Cf}, \p{Cf}) (150)
   \p{General_Category: Initial_Punctuation} (Short: \p{Gc=Pi},
                             \p{Pi}) (12)
   \p{General_Category: L} \p{General_Category=Letter} (109_591)
 X \p{General_Category: L&} \p{General_Category=Cased_Letter} (3646)
 X \p{General_Category: L_} \p{General_Category=Cased_Letter} Note
                             the trailing '_' matters in spite of
                             loose matching rules. (3646)
   \p{General_Category: LC} \p{General_Category=Cased_Letter} (3646)
   \p{General_Category: Letter} (Short: \p{Gc=L}, \p{L}) (109_591)
   \p{General_Category: Letter_Number} (Short: \p{Gc=Nl}, \p{Nl})
                             (236)
   \p{General_Category: Line_Separator} (Short: \p{Gc=Zl}, \p{Zl}) (1)
   \p{General_Category: Ll} \p{General_Category=Lowercase_Letter}
                             (/i= General_Category=Cased_Letter)
                             (1984)
   \p{General_Category: Lm} \p{General_Category=Modifier_Letter} (248)
   \p{General_Category: Lo} \p{General_Category=Other_Letter}
                             (105_697)
   \p{General_Category: Lowercase_Letter} (Short: \p{Gc=Ll}, \p{Ll};
                             /i= General_Category=Cased_Letter) (1984)
   \p{General_Category: Lt} \p{General_Category=Titlecase_Letter}
                             (/i= General_Category=Cased_Letter) (31)
   \p{General_Category: Lu} \p{General_Category=Uppercase_Letter}
                             (/i= General_Category=Cased_Letter)
                             (1631)
   \p{General_Category: M} \p{General_Category=Mark} (1963)
   \p{General_Category: Mark} (Short: \p{Gc=M}, \p{M}) (1963)
   \p{General_Category: Math_Symbol} (Short: \p{Gc=Sm}, \p{Sm}) (948)
   \p{General_Category: Mc} \p{General_Category=Spacing_Mark} (383)
   \p{General_Category: Me} \p{General_Category=Enclosing_Mark} (13)
   \p{General_Category: Mn} \p{General_Category=Nonspacing_Mark}
                             (1567)
   \p{General_Category: Modifier_Letter} (Short: \p{Gc=Lm}, \p{Lm})
                             (248)
   \p{General_Category: Modifier_Symbol} (Short: \p{Gc=Sk}, \p{Sk})
                             (121)
   \p{General_Category: N} \p{General_Category=Number} (1433)
   \p{General_Category: Nd} \p{General_Category=Decimal_Number} (550)
   \p{General_Category: Nl} \p{General_Category=Letter_Number} (236)
   \p{General_Category: No} \p{General_Category=Other_Number} (647)
   \p{General_Category: Nonspacing_Mark} (Short: \p{Gc=Mn}, \p{Mn})
                             (1567)
   \p{General_Category: Number} (Short: \p{Gc=N}, \p{N}) (1433)
   \p{General_Category: Open_Punctuation} (Short: \p{Gc=Ps}, \p{Ps})
                             (75)
   \p{General_Category: Other} (Short: \p{Gc=C}, \p{C}) (993_590 plus
                             all above-Unicode code points)
   \p{General_Category: Other_Letter} (Short: \p{Gc=Lo}, \p{Lo})
                             (105_697)
   \p{General_Category: Other_Number} (Short: \p{Gc=No}, \p{No}) (647)
   \p{General_Category: Other_Punctuation} (Short: \p{Gc=Po}, \p{Po})
                             (513)
   \p{General_Category: Other_Symbol} (Short: \p{Gc=So}, \p{So})
                             (5677)
   \p{General_Category: P} \p{General_Category=Punctuation} (717)
   \p{General_Category: Paragraph_Separator} (Short: \p{Gc=Zp},
                             \p{Zp}) (1)
   \p{General_Category: Pc} \p{General_Category=
                             Connector_Punctuation} (10)
   \p{General_Category: Pd} \p{General_Category=Dash_Punctuation} (24)
   \p{General_Category: Pe} \p{General_Category=Close_Punctuation}
                             (73)
   \p{General_Category: Pf} \p{General_Category=Final_Punctuation}
                             (10)
   \p{General_Category: Pi} \p{General_Category=Initial_Punctuation}
                             (12)
   \p{General_Category: Po} \p{General_Category=Other_Punctuation}
                             (513)
   \p{General_Category: Private_Use} (Short: \p{Gc=Co}, \p{Co})
                             (137_468)
   \p{General_Category: Ps} \p{General_Category=Open_Punctuation} (75)
   \p{General_Category: Punct} \p{General_Category=Punctuation} (717)
   \p{General_Category: Punctuation} (Short: \p{Gc=P}, \p{P}) (717)
   \p{General_Category: S} \p{General_Category=Symbol} (6799)
   \p{General_Category: Sc} \p{General_Category=Currency_Symbol} (53)
   \p{General_Category: Separator} (Short: \p{Gc=Z}, \p{Z}) (19)
   \p{General_Category: Sk} \p{General_Category=Modifier_Symbol} (121)
   \p{General_Category: Sm} \p{General_Category=Math_Symbol} (948)
   \p{General_Category: So} \p{General_Category=Other_Symbol} (5677)
   \p{General_Category: Space_Separator} (Short: \p{Gc=Zs}, \p{Zs})
                             (17)
   \p{General_Category: Spacing_Mark} (Short: \p{Gc=Mc}, \p{Mc}) (383)
   \p{General_Category: Surrogate} (Short: \p{Gc=Cs}, \p{Cs}) (2048)
   \p{General_Category: Symbol} (Short: \p{Gc=S}, \p{S}) (6799)
   \p{General_Category: Titlecase_Letter} (Short: \p{Gc=Lt}, \p{Lt};
                             /i= General_Category=Cased_Letter) (31)
   \p{General_Category: Unassigned} (Short: \p{Gc=Cn}, \p{Cn})
                             (853_859 plus all above-Unicode code
                             points)
   \p{General_Category: Uppercase_Letter} (Short: \p{Gc=Lu}, \p{Lu};
                             /i= General_Category=Cased_Letter) (1631)
   \p{General_Category: Z} \p{General_Category=Separator} (19)
   \p{General_Category: Zl} \p{General_Category=Line_Separator} (1)
   \p{General_Category: Zp} \p{General_Category=Paragraph_Separator}
                             (1)
   \p{General_Category: Zs} \p{General_Category=Space_Separator} (17)
 X \p{General_Punctuation} \p{Block=General_Punctuation} (Short:
                             \p{InPunctuation}) (112)
 X \p{Geometric_Shapes}    \p{Block=Geometric_Shapes} (96)
 X \p{Geometric_Shapes_Ext} \p{Geometric_Shapes_Extended} (=
                             \p{Block=Geometric_Shapes_Extended})
                             (128)
 X \p{Geometric_Shapes_Extended} \p{Block=Geometric_Shapes_Extended}
                             (Short: \p{InGeometricShapesExt}) (128)
   \p{Geor}                \p{Georgian} (= \p{Script=Georgian}) (NOT
                             \p{Block=Georgian}) (127)
   \p{Georgian}            \p{Script=Georgian} (Short: \p{Geor}; NOT
                             \p{Block=Georgian}) (127)
 X \p{Georgian_Sup}        \p{Georgian_Supplement} (= \p{Block=
                             Georgian_Supplement}) (48)
 X \p{Georgian_Supplement} \p{Block=Georgian_Supplement} (Short:
                             \p{InGeorgianSup}) (48)
   \p{Glag}                \p{Glagolitic} (= \p{Script=Glagolitic})
                             (NOT \p{Block=Glagolitic}) (94)
   \p{Glagolitic}          \p{Script=Glagolitic} (Short: \p{Glag};
                             NOT \p{Block=Glagolitic}) (94)
   \p{Goth}                \p{Gothic} (= \p{Script=Gothic}) (NOT
                             \p{Block=Gothic}) (27)
   \p{Gothic}              \p{Script=Gothic} (Short: \p{Goth}; NOT
                             \p{Block=Gothic}) (27)
   \p{Gr_Base}             \p{Grapheme_Base} (= \p{Grapheme_Base=Y})
                             (118_912)
   \p{Gr_Base: *}          \p{Grapheme_Base: *}
   \p{Gr_Ext}              \p{Grapheme_Extend} (= \p{Grapheme_Extend=
                             Y}) (1610)
   \p{Gr_Ext: *}           \p{Grapheme_Extend: *}
   \p{Gran}                \p{Grantha} (= \p{Script=Grantha}) (NOT
                             \p{Block=Grantha}) (85)
   \p{Grantha}             \p{Script=Grantha} (Short: \p{Gran}; NOT
                             \p{Block=Grantha}) (85)
   \p{Graph}               \p{XPosixGraph} (258_121)
   \p{Grapheme_Base}       \p{Grapheme_Base=Y} (Short: \p{GrBase})
                             (118_912)
   \p{Grapheme_Base: N*}   (Short: \p{GrBase=N}, \P{GrBase}) (995_200
                             plus all above-Unicode code points)
   \p{Grapheme_Base: Y*}   (Short: \p{GrBase=Y}, \p{GrBase}) (118_912)
   \p{Grapheme_Cluster_Break: CN} \p{Grapheme_Cluster_Break=Control}
                             (6030)
   \p{Grapheme_Cluster_Break: Control} (Short: \p{GCB=CN}) (6030)
   \p{Grapheme_Cluster_Break: CR} (Short: \p{GCB=CR}) (1)
   \p{Grapheme_Cluster_Break: EX} \p{Grapheme_Cluster_Break=Extend}
                             (1610)
   \p{Grapheme_Cluster_Break: Extend} (Short: \p{GCB=EX}) (1610)
   \p{Grapheme_Cluster_Break: L} (Short: \p{GCB=L}) (125)
   \p{Grapheme_Cluster_Break: LF} (Short: \p{GCB=LF}) (1)
   \p{Grapheme_Cluster_Break: LV} (Short: \p{GCB=LV}) (399)
   \p{Grapheme_Cluster_Break: LVT} (Short: \p{GCB=LVT}) (10_773)
   \p{Grapheme_Cluster_Break: Other} (Short: \p{GCB=XX}) (1_094_585
                             plus all above-Unicode code points)
   \p{Grapheme_Cluster_Break: PP} \p{Grapheme_Cluster_Break=Prepend}
                             (0)
   \p{Grapheme_Cluster_Break: Prepend} (Short: \p{GCB=PP}) (0)
   \p{Grapheme_Cluster_Break: Regional_Indicator} (Short: \p{GCB=RI})
                             (26)
   \p{Grapheme_Cluster_Break: RI} \p{Grapheme_Cluster_Break=
                             Regional_Indicator} (26)
   \p{Grapheme_Cluster_Break: SM} \p{Grapheme_Cluster_Break=
                             SpacingMark} (330)
   \p{Grapheme_Cluster_Break: SpacingMark} (Short: \p{GCB=SM}) (330)
   \p{Grapheme_Cluster_Break: T} (Short: \p{GCB=T}) (137)
   \p{Grapheme_Cluster_Break: V} (Short: \p{GCB=V}) (95)
   \p{Grapheme_Cluster_Break: XX} \p{Grapheme_Cluster_Break=Other}
                             (1_094_585 plus all above-Unicode code
                             points)
   \p{Grapheme_Extend}     \p{Grapheme_Extend=Y} (Short: \p{GrExt})
                             (1610)
   \p{Grapheme_Extend: N*} (Short: \p{GrExt=N}, \P{GrExt}) (1_112_502
                             plus all above-Unicode code points)
   \p{Grapheme_Extend: Y*} (Short: \p{GrExt=Y}, \p{GrExt}) (1610)
   \p{Greek}               \p{Script=Greek} (Short: \p{Grek}; NOT
                             \p{Greek_And_Coptic}) (516)
 X \p{Greek_And_Coptic}    \p{Block=Greek_And_Coptic} (Short:
                             \p{InGreek}) (144)
 X \p{Greek_Ext}           \p{Greek_Extended} (= \p{Block=
                             Greek_Extended}) (256)
 X \p{Greek_Extended}      \p{Block=Greek_Extended} (Short:
                             \p{InGreekExt}) (256)
   \p{Grek}                \p{Greek} (= \p{Script=Greek}) (NOT
                             \p{Greek_And_Coptic}) (516)
   \p{Gujarati}            \p{Script=Gujarati} (Short: \p{Gujr}; NOT
                             \p{Block=Gujarati}) (85)
   \p{Gujr}                \p{Gujarati} (= \p{Script=Gujarati}) (NOT
                             \p{Block=Gujarati}) (85)
   \p{Gurmukhi}            \p{Script=Gurmukhi} (Short: \p{Guru}; NOT
                             \p{Block=Gurmukhi}) (79)
   \p{Guru}                \p{Gurmukhi} (= \p{Script=Gurmukhi}) (NOT
                             \p{Block=Gurmukhi}) (79)
 X \p{Half_And_Full_Forms} \p{Halfwidth_And_Fullwidth_Forms} (=
                             \p{Block=Halfwidth_And_Fullwidth_Forms})
                             (240)
 X \p{Half_Marks}          \p{Combining_Half_Marks} (= \p{Block=
                             Combining_Half_Marks}) (16)
 X \p{Halfwidth_And_Fullwidth_Forms} \p{Block=
                             Halfwidth_And_Fullwidth_Forms} (Short:
                             \p{InHalfAndFullForms}) (240)
   \p{Han}                 \p{Script=Han} (81_734)
   \p{Hang}                \p{Hangul} (= \p{Script=Hangul}) (NOT
                             \p{Hangul_Syllables}) (11_739)
   \p{Hangul}              \p{Script=Hangul} (Short: \p{Hang}; NOT
                             \p{Hangul_Syllables}) (11_739)
 X \p{Hangul_Compatibility_Jamo} \p{Block=Hangul_Compatibility_Jamo}
                             (Short: \p{InCompatJamo}) (96)
 X \p{Hangul_Jamo}         \p{Block=Hangul_Jamo} (Short: \p{InJamo})
                             (256)
 X \p{Hangul_Jamo_Extended_A} \p{Block=Hangul_Jamo_Extended_A}
                             (Short: \p{InJamoExtA}) (32)
 X \p{Hangul_Jamo_Extended_B} \p{Block=Hangul_Jamo_Extended_B}
                             (Short: \p{InJamoExtB}) (80)
   \p{Hangul_Syllable_Type: L} \p{Hangul_Syllable_Type=Leading_Jamo}
                             (125)
   \p{Hangul_Syllable_Type: Leading_Jamo} (Short: \p{Hst=L}) (125)
   \p{Hangul_Syllable_Type: LV} \p{Hangul_Syllable_Type=LV_Syllable}
                             (399)
   \p{Hangul_Syllable_Type: LV_Syllable} (Short: \p{Hst=LV}) (399)
   \p{Hangul_Syllable_Type: LVT} \p{Hangul_Syllable_Type=
                             LVT_Syllable} (10_773)
   \p{Hangul_Syllable_Type: LVT_Syllable} (Short: \p{Hst=LVT})
                             (10_773)
   \p{Hangul_Syllable_Type: NA} \p{Hangul_Syllable_Type=
                             Not_Applicable} (1_102_583 plus all
                             above-Unicode code points)
   \p{Hangul_Syllable_Type: Not_Applicable} (Short: \p{Hst=NA})
                             (1_102_583 plus all above-Unicode code
                             points)
   \p{Hangul_Syllable_Type: T} \p{Hangul_Syllable_Type=Trailing_Jamo}
                             (137)
   \p{Hangul_Syllable_Type: Trailing_Jamo} (Short: \p{Hst=T}) (137)
   \p{Hangul_Syllable_Type: V} \p{Hangul_Syllable_Type=Vowel_Jamo}
                             (95)
   \p{Hangul_Syllable_Type: Vowel_Jamo} (Short: \p{Hst=V}) (95)
 X \p{Hangul_Syllables}    \p{Block=Hangul_Syllables} (Short:
                             \p{InHangul}) (11_184)
   \p{Hani}                \p{Han} (= \p{Script=Han}) (81_734)
   \p{Hano}                \p{Hanunoo} (= \p{Script=Hanunoo}) (NOT
                             \p{Block=Hanunoo}) (21)
   \p{Hanunoo}             \p{Script=Hanunoo} (Short: \p{Hano}; NOT
                             \p{Block=Hanunoo}) (21)
   \p{Hatr}                \p{Hatran} (= \p{Script=Hatran}) (NOT
                             \p{Block=Hatran}) (26)
   \p{Hatran}              \p{Script=Hatran} (Short: \p{Hatr}; NOT
                             \p{Block=Hatran}) (26)
   \p{Hebr}                \p{Hebrew} (= \p{Script=Hebrew}) (NOT
                             \p{Block=Hebrew}) (133)
   \p{Hebrew}              \p{Script=Hebrew} (Short: \p{Hebr}; NOT
                             \p{Block=Hebrew}) (133)
   \p{Hex}                 \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)
   \p{Hex: *}              \p{Hex_Digit: *}
   \p{Hex_Digit}           \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)
   \p{Hex_Digit: N*}       (Short: \p{Hex=N}, \P{Hex}) (1_114_068
                             plus all above-Unicode code points)
   \p{Hex_Digit: Y*}       (Short: \p{Hex=Y}, \p{Hex}) (44)
 X \p{High_Private_Use_Surrogates} \p{Block=
                             High_Private_Use_Surrogates} (Short:
                             \p{InHighPUSurrogates}) (128)
 X \p{High_PU_Surrogates}  \p{High_Private_Use_Surrogates} (=
                             \p{Block=High_Private_Use_Surrogates})
                             (128)
 X \p{High_Surrogates}     \p{Block=High_Surrogates} (896)
   \p{Hira}                \p{Hiragana} (= \p{Script=Hiragana}) (NOT
                             \p{Block=Hiragana}) (91)
   \p{Hiragana}            \p{Script=Hiragana} (Short: \p{Hira}; NOT
                             \p{Block=Hiragana}) (91)
   \p{Hluw}                \p{Anatolian_Hieroglyphs} (= \p{Script=
                             Anatolian_Hieroglyphs}) (NOT \p{Block=
                             Anatolian_Hieroglyphs}) (583)
   \p{Hmng}                \p{Pahawh_Hmong} (= \p{Script=
                             Pahawh_Hmong}) (NOT \p{Block=
                             Pahawh_Hmong}) (127)
   \p{HorizSpace}          \p{XPosixBlank} (18)
   \p{Hst: *}              \p{Hangul_Syllable_Type: *}
   \p{Hung}                \p{Old_Hungarian} (= \p{Script=
                             Old_Hungarian}) (NOT \p{Block=
                             Old_Hungarian}) (108)
 D \p{Hyphen}              \p{Hyphen=Y} (11)
 D \p{Hyphen: N*}          Supplanted by Line_Break property values;
                             see www.unicode.org/reports/tr14
                             (Single: \P{Hyphen}) (1_114_101 plus all
                             above-Unicode code points)
 D \p{Hyphen: Y*}          Supplanted by Line_Break property values;
                             see www.unicode.org/reports/tr14
                             (Single: \p{Hyphen}) (11)
   \p{ID_Continue}         \p{ID_Continue=Y} (Short: \p{IDC}; NOT
                             \p{Ideographic_Description_Characters})
                             (112_352)
   \p{ID_Continue: N*}     (Short: \p{IDC=N}, \P{IDC}) (1_001_760
                             plus all above-Unicode code points)
   \p{ID_Continue: Y*}     (Short: \p{IDC=Y}, \p{IDC}) (112_352)
   \p{ID_Start}            \p{ID_Start=Y} (Short: \p{IDS}) (109_830)
   \p{ID_Start: N*}        (Short: \p{IDS=N}, \P{IDS}) (1_004_282
                             plus all above-Unicode code points)
   \p{ID_Start: Y*}        (Short: \p{IDS=Y}, \p{IDS}) (109_830)
   \p{IDC}                 \p{ID_Continue} (= \p{ID_Continue=Y}) (NOT
                             \p{Ideographic_Description_Characters})
                             (112_352)
   \p{IDC: *}              \p{ID_Continue: *}
   \p{Ideo}                \p{Ideographic} (= \p{Ideographic=Y})
                             (81_404)
   \p{Ideo: *}             \p{Ideographic: *}
   \p{Ideographic}         \p{Ideographic=Y} (Short: \p{Ideo})
                             (81_404)
   \p{Ideographic: N*}     (Short: \p{Ideo=N}, \P{Ideo}) (1_032_708
                             plus all above-Unicode code points)
   \p{Ideographic: Y*}     (Short: \p{Ideo=Y}, \p{Ideo}) (81_404)
 X \p{Ideographic_Description_Characters} \p{Block=
                             Ideographic_Description_Characters}
                             (Short: \p{InIDC}) (16)
   \p{IDS}                 \p{ID_Start} (= \p{ID_Start=Y}) (109_830)
   \p{IDS: *}              \p{ID_Start: *}
   \p{IDS_Binary_Operator} \p{IDS_Binary_Operator=Y} (Short:
                             \p{IDSB}) (10)
   \p{IDS_Binary_Operator: N*} (Short: \p{IDSB=N}, \P{IDSB})
                             (1_114_102 plus all above-Unicode code
                             points)
   \p{IDS_Binary_Operator: Y*} (Short: \p{IDSB=Y}, \p{IDSB}) (10)
   \p{IDS_Trinary_Operator} \p{IDS_Trinary_Operator=Y} (Short:
                             \p{IDST}) (2)
   \p{IDS_Trinary_Operator: N*} (Short: \p{IDST=N}, \P{IDST})
                             (1_114_110 plus all above-Unicode code
                             points)
   \p{IDS_Trinary_Operator: Y*} (Short: \p{IDST=Y}, \p{IDST}) (2)
   \p{IDSB}                \p{IDS_Binary_Operator} (=
                             \p{IDS_Binary_Operator=Y}) (10)
   \p{IDSB: *}             \p{IDS_Binary_Operator: *}
   \p{IDST}                \p{IDS_Trinary_Operator} (=
                             \p{IDS_Trinary_Operator=Y}) (2)
   \p{IDST: *}             \p{IDS_Trinary_Operator: *}
   \p{Imperial_Aramaic}    \p{Script=Imperial_Aramaic} (Short:
                             \p{Armi}; NOT \p{Block=
                             Imperial_Aramaic}) (31)
   \p{In: *}               \p{Present_In: *} (Perl extension)
 X \p{In_*}                \p{Block: *}
 X \p{Indic_Number_Forms}  \p{Common_Indic_Number_Forms} (= \p{Block=
                             Common_Indic_Number_Forms}) (16)
   \p{Indic_Positional_Category: Bottom} (Short: \p{InPC=Bottom})
                             (256)
   \p{Indic_Positional_Category: Bottom_And_Right} (Short: \p{InPC=
                             BottomAndRight}) (2)
   \p{Indic_Positional_Category: Left} (Short: \p{InPC=Left}) (55)
   \p{Indic_Positional_Category: Left_And_Right} (Short: \p{InPC=
                             LeftAndRight}) (21)
   \p{Indic_Positional_Category: NA} (Short: \p{InPC=NA}) (1_113_142
                             plus all above-Unicode code points)
   \p{Indic_Positional_Category: Overstruck} (Short: \p{InPC=
                             Overstruck}) (10)
   \p{Indic_Positional_Category: Right} (Short: \p{InPC=Right}) (249)
   \p{Indic_Positional_Category: Top} (Short: \p{InPC=Top}) (324)
   \p{Indic_Positional_Category: Top_And_Bottom} (Short: \p{InPC=
                             TopAndBottom}) (10)
   \p{Indic_Positional_Category: Top_And_Bottom_And_Right} (Short:
                             \p{InPC=TopAndBottomAndRight}) (1)
   \p{Indic_Positional_Category: Top_And_Left} (Short: \p{InPC=
                             TopAndLeft}) (6)
   \p{Indic_Positional_Category: Top_And_Left_And_Right} (Short:
                             \p{InPC=TopAndLeftAndRight}) (4)
   \p{Indic_Positional_Category: Top_And_Right} (Short: \p{InPC=
                             TopAndRight}) (13)
   \p{Indic_Positional_Category: Visual_Order_Left} (Short: \p{InPC=
                             VisualOrderLeft}) (19)
   \p{Indic_Syllabic_Category: Avagraha} (Short: \p{InSC=Avagraha})
                             (13)
   \p{Indic_Syllabic_Category: Bindu} (Short: \p{InSC=Bindu}) (60)
   \p{Indic_Syllabic_Category: Brahmi_Joining_Number} (Short:
                             \p{InSC=BrahmiJoiningNumber}) (20)
   \p{Indic_Syllabic_Category: Cantillation_Mark} (Short: \p{InSC=
                             CantillationMark}) (52)
   \p{Indic_Syllabic_Category: Consonant} (Short: \p{InSC=Consonant})
                             (1805)
   \p{Indic_Syllabic_Category: Consonant_Dead} (Short: \p{InSC=
                             ConsonantDead}) (7)
   \p{Indic_Syllabic_Category: Consonant_Final} (Short: \p{InSC=
                             ConsonantFinal}) (62)
   \p{Indic_Syllabic_Category: Consonant_Head_Letter} (Short:
                             \p{InSC=ConsonantHeadLetter}) (5)
   \p{Indic_Syllabic_Category: Consonant_Killer} (Short: \p{InSC=
                             ConsonantKiller}) (2)
   \p{Indic_Syllabic_Category: Consonant_Medial} (Short: \p{InSC=
                             ConsonantMedial}) (22)
   \p{Indic_Syllabic_Category: Consonant_Placeholder} (Short:
                             \p{InSC=ConsonantPlaceholder}) (13)
   \p{Indic_Syllabic_Category: Consonant_Preceding_Repha} (Short:
                             \p{InSC=ConsonantPrecedingRepha}) (1)
   \p{Indic_Syllabic_Category: Consonant_Prefixed} (Short: \p{InSC=
                             ConsonantPrefixed}) (2)
   \p{Indic_Syllabic_Category: Consonant_Subjoined} (Short: \p{InSC=
                             ConsonantSubjoined}) (61)
   \p{Indic_Syllabic_Category: Consonant_Succeeding_Repha} (Short:
                             \p{InSC=ConsonantSucceedingRepha}) (4)
   \p{Indic_Syllabic_Category: Consonant_With_Stacker} (Short:
                             \p{InSC=ConsonantWithStacker}) (4)
   \p{Indic_Syllabic_Category: Gemination_Mark} (Short: \p{InSC=
                             GeminationMark}) (2)
   \p{Indic_Syllabic_Category: Invisible_Stacker} (Short: \p{InSC=
                             InvisibleStacker}) (7)
   \p{Indic_Syllabic_Category: Joiner} (Short: \p{InSC=Joiner}) (1)
   \p{Indic_Syllabic_Category: Modifying_Letter} (Short: \p{InSC=
                             ModifyingLetter}) (1)
   \p{Indic_Syllabic_Category: Non_Joiner} (Short: \p{InSC=
                             NonJoiner}) (1)
   \p{Indic_Syllabic_Category: Nukta} (Short: \p{InSC=Nukta}) (23)
   \p{Indic_Syllabic_Category: Number} (Short: \p{InSC=Number}) (420)
   \p{Indic_Syllabic_Category: Number_Joiner} (Short: \p{InSC=
                             NumberJoiner}) (1)
   \p{Indic_Syllabic_Category: Other} (Short: \p{InSC=Other})
                             (1_110_379 plus all above-Unicode code
                             points)
   \p{Indic_Syllabic_Category: Pure_Killer} (Short: \p{InSC=
                             PureKiller}) (16)
   \p{Indic_Syllabic_Category: Register_Shifter} (Short: \p{InSC=
                             RegisterShifter}) (2)
   \p{Indic_Syllabic_Category: Syllable_Modifier} (Short: \p{InSC=
                             SyllableModifier}) (20)
   \p{Indic_Syllabic_Category: Tone_Letter} (Short: \p{InSC=
                             ToneLetter}) (7)
   \p{Indic_Syllabic_Category: Tone_Mark} (Short: \p{InSC=ToneMark})
                             (42)
   \p{Indic_Syllabic_Category: Virama} (Short: \p{InSC=Virama}) (22)
   \p{Indic_Syllabic_Category: Visarga} (Short: \p{InSC=Visarga}) (29)
   \p{Indic_Syllabic_Category: Vowel} (Short: \p{InSC=Vowel}) (30)
   \p{Indic_Syllabic_Category: Vowel_Dependent} (Short: \p{InSC=
                             VowelDependent}) (572)
   \p{Indic_Syllabic_Category: Vowel_Independent} (Short: \p{InSC=
                             VowelIndependent}) (404)
   \p{Inherited}           \p{Script=Inherited} (Short: \p{Zinh})
                             (563)
   \p{Initial_Punctuation} \p{General_Category=Initial_Punctuation}
                             (Short: \p{Pi}) (12)
   \p{InPC: *}             \p{Indic_Positional_Category: *}
   \p{InSC: *}             \p{Indic_Syllabic_Category: *}
   \p{Inscriptional_Pahlavi} \p{Script=Inscriptional_Pahlavi} (Short:
                             \p{Phli}; NOT \p{Block=
                             Inscriptional_Pahlavi}) (27)
   \p{Inscriptional_Parthian} \p{Script=Inscriptional_Parthian}
                             (Short: \p{Prti}; NOT \p{Block=
                             Inscriptional_Parthian}) (30)
 X \p{IPA_Ext}             \p{IPA_Extensions} (= \p{Block=
                             IPA_Extensions}) (96)
 X \p{IPA_Extensions}      \p{Block=IPA_Extensions} (Short:
                             \p{InIPAExt}) (96)
   \p{Is_*}                \p{*} (Any exceptions are individually
                             noted beginning with the word NOT.) If
                             an entry has flag(s) at its beginning,
                             like "D", the "Is_" form has the same
                             flag(s)
   \p{Ital}                \p{Old_Italic} (= \p{Script=Old_Italic})
                             (NOT \p{Block=Old_Italic}) (36)
 X \p{Jamo}                \p{Hangul_Jamo} (= \p{Block=Hangul_Jamo})
                             (256)
 X \p{Jamo_Ext_A}          \p{Hangul_Jamo_Extended_A} (= \p{Block=
                             Hangul_Jamo_Extended_A}) (32)
 X \p{Jamo_Ext_B}          \p{Hangul_Jamo_Extended_B} (= \p{Block=
                             Hangul_Jamo_Extended_B}) (80)
   \p{Java}                \p{Javanese} (= \p{Script=Javanese}) (NOT
                             \p{Block=Javanese}) (90)
   \p{Javanese}            \p{Script=Javanese} (Short: \p{Java}; NOT
                             \p{Block=Javanese}) (90)
   \p{Jg: *}               \p{Joining_Group: *}
   \p{Join_C}              \p{Join_Control} (= \p{Join_Control=Y}) (2)
   \p{Join_C: *}           \p{Join_Control: *}
   \p{Join_Control}        \p{Join_Control=Y} (Short: \p{JoinC}) (2)
   \p{Join_Control: N*}    (Short: \p{JoinC=N}, \P{JoinC}) (1_114_110
                             plus all above-Unicode code points)
   \p{Join_Control: Y*}    (Short: \p{JoinC=Y}, \p{JoinC}) (2)
   \p{Joining_Group: Ain}  (Short: \p{Jg=Ain}) (8)
   \p{Joining_Group: Alaph} (Short: \p{Jg=Alaph}) (1)
   \p{Joining_Group: Alef} (Short: \p{Jg=Alef}) (10)
   \p{Joining_Group: Beh}  (Short: \p{Jg=Beh}) (21)
   \p{Joining_Group: Beth} (Short: \p{Jg=Beth}) (2)
   \p{Joining_Group: Burushaski_Yeh_Barree} (Short: \p{Jg=
                             BurushaskiYehBarree}) (2)
   \p{Joining_Group: Dal}  (Short: \p{Jg=Dal}) (15)
   \p{Joining_Group: Dalath_Rish} (Short: \p{Jg=DalathRish}) (4)
   \p{Joining_Group: E}    (Short: \p{Jg=E}) (1)
   \p{Joining_Group: Farsi_Yeh} (Short: \p{Jg=FarsiYeh}) (7)
   \p{Joining_Group: Fe}   (Short: \p{Jg=Fe}) (1)
   \p{Joining_Group: Feh}  (Short: \p{Jg=Feh}) (10)
   \p{Joining_Group: Final_Semkath} (Short: \p{Jg=FinalSemkath}) (1)
   \p{Joining_Group: Gaf}  (Short: \p{Jg=Gaf}) (14)
   \p{Joining_Group: Gamal} (Short: \p{Jg=Gamal}) (3)
   \p{Joining_Group: Hah}  (Short: \p{Jg=Hah}) (18)
   \p{Joining_Group: Hamza_On_Heh_Goal} (Short: \p{Jg=
                             HamzaOnHehGoal}) (1)
   \p{Joining_Group: He}   (Short: \p{Jg=He}) (1)
   \p{Joining_Group: Heh}  (Short: \p{Jg=Heh}) (1)
   \p{Joining_Group: Heh_Goal} (Short: \p{Jg=HehGoal}) (2)
   \p{Joining_Group: Heth} (Short: \p{Jg=Heth}) (1)
   \p{Joining_Group: Kaf}  (Short: \p{Jg=Kaf}) (6)
   \p{Joining_Group: Kaph} (Short: \p{Jg=Kaph}) (1)
   \p{Joining_Group: Khaph} (Short: \p{Jg=Khaph}) (1)
   \p{Joining_Group: Knotted_Heh} (Short: \p{Jg=KnottedHeh}) (2)
   \p{Joining_Group: Lam}  (Short: \p{Jg=Lam}) (7)
   \p{Joining_Group: Lamadh} (Short: \p{Jg=Lamadh}) (1)
   \p{Joining_Group: Manichaean_Aleph} (Short: \p{Jg=
                             ManichaeanAleph}) (1)
   \p{Joining_Group: Manichaean_Ayin} (Short: \p{Jg=ManichaeanAyin})
                             (2)
   \p{Joining_Group: Manichaean_Beth} (Short: \p{Jg=ManichaeanBeth})
                             (2)
   \p{Joining_Group: Manichaean_Daleth} (Short: \p{Jg=
                             ManichaeanDaleth}) (1)
   \p{Joining_Group: Manichaean_Dhamedh} (Short: \p{Jg=
                             ManichaeanDhamedh}) (1)
   \p{Joining_Group: Manichaean_Five} (Short: \p{Jg=ManichaeanFive})
                             (1)
   \p{Joining_Group: Manichaean_Gimel} (Short: \p{Jg=
                             ManichaeanGimel}) (2)
   \p{Joining_Group: Manichaean_Heth} (Short: \p{Jg=ManichaeanHeth})
                             (1)
   \p{Joining_Group: Manichaean_Hundred} (Short: \p{Jg=
                             ManichaeanHundred}) (1)
   \p{Joining_Group: Manichaean_Kaph} (Short: \p{Jg=ManichaeanKaph})
                             (3)
   \p{Joining_Group: Manichaean_Lamedh} (Short: \p{Jg=
                             ManichaeanLamedh}) (1)
   \p{Joining_Group: Manichaean_Mem} (Short: \p{Jg=ManichaeanMem}) (1)
   \p{Joining_Group: Manichaean_Nun} (Short: \p{Jg=ManichaeanNun}) (1)
   \p{Joining_Group: Manichaean_One} (Short: \p{Jg=ManichaeanOne}) (1)
   \p{Joining_Group: Manichaean_Pe} (Short: \p{Jg=ManichaeanPe}) (2)
   \p{Joining_Group: Manichaean_Qoph} (Short: \p{Jg=ManichaeanQoph})
                             (3)
   \p{Joining_Group: Manichaean_Resh} (Short: \p{Jg=ManichaeanResh})
                             (1)
   \p{Joining_Group: Manichaean_Sadhe} (Short: \p{Jg=
                             ManichaeanSadhe}) (1)
   \p{Joining_Group: Manichaean_Samekh} (Short: \p{Jg=
                             ManichaeanSamekh}) (1)
   \p{Joining_Group: Manichaean_Taw} (Short: \p{Jg=ManichaeanTaw}) (1)
   \p{Joining_Group: Manichaean_Ten} (Short: \p{Jg=ManichaeanTen}) (1)
   \p{Joining_Group: Manichaean_Teth} (Short: \p{Jg=ManichaeanTeth})
                             (1)
   \p{Joining_Group: Manichaean_Thamedh} (Short: \p{Jg=
                             ManichaeanThamedh}) (1)
   \p{Joining_Group: Manichaean_Twenty} (Short: \p{Jg=
                             ManichaeanTwenty}) (1)
   \p{Joining_Group: Manichaean_Waw} (Short: \p{Jg=ManichaeanWaw}) (1)
   \p{Joining_Group: Manichaean_Yodh} (Short: \p{Jg=ManichaeanYodh})
                             (1)
   \p{Joining_Group: Manichaean_Zayin} (Short: \p{Jg=
                             ManichaeanZayin}) (2)
   \p{Joining_Group: Meem} (Short: \p{Jg=Meem}) (4)
   \p{Joining_Group: Mim}  (Short: \p{Jg=Mim}) (1)
   \p{Joining_Group: No_Joining_Group} (Short: \p{Jg=NoJoiningGroup})
                             (1_113_826 plus all above-Unicode code
                             points)
   \p{Joining_Group: Noon} (Short: \p{Jg=Noon}) (8)
   \p{Joining_Group: Nun}  (Short: \p{Jg=Nun}) (1)
   \p{Joining_Group: Nya}  (Short: \p{Jg=Nya}) (1)
   \p{Joining_Group: Pe}   (Short: \p{Jg=Pe}) (1)
   \p{Joining_Group: Qaf}  (Short: \p{Jg=Qaf}) (5)
   \p{Joining_Group: Qaph} (Short: \p{Jg=Qaph}) (1)
   \p{Joining_Group: Reh}  (Short: \p{Jg=Reh}) (18)
   \p{Joining_Group: Reversed_Pe} (Short: \p{Jg=ReversedPe}) (1)
   \p{Joining_Group: Rohingya_Yeh} (Short: \p{Jg=RohingyaYeh}) (1)
   \p{Joining_Group: Sad}  (Short: \p{Jg=Sad}) (6)
   \p{Joining_Group: Sadhe} (Short: \p{Jg=Sadhe}) (1)
   \p{Joining_Group: Seen} (Short: \p{Jg=Seen}) (11)
   \p{Joining_Group: Semkath} (Short: \p{Jg=Semkath}) (1)
   \p{Joining_Group: Shin} (Short: \p{Jg=Shin}) (1)
   \p{Joining_Group: Straight_Waw} (Short: \p{Jg=StraightWaw}) (1)
   \p{Joining_Group: Swash_Kaf} (Short: \p{Jg=SwashKaf}) (1)
   \p{Joining_Group: Syriac_Waw} (Short: \p{Jg=SyriacWaw}) (1)
   \p{Joining_Group: Tah}  (Short: \p{Jg=Tah}) (4)
   \p{Joining_Group: Taw}  (Short: \p{Jg=Taw}) (1)
   \p{Joining_Group: Teh_Marbuta} (Short: \p{Jg=TehMarbuta}) (3)
   \p{Joining_Group: Teh_Marbuta_Goal} \p{Joining_Group=
                             Hamza_On_Heh_Goal} (1)
   \p{Joining_Group: Teth} (Short: \p{Jg=Teth}) (2)
   \p{Joining_Group: Waw}  (Short: \p{Jg=Waw}) (16)
   \p{Joining_Group: Yeh}  (Short: \p{Jg=Yeh}) (10)
   \p{Joining_Group: Yeh_Barree} (Short: \p{Jg=YehBarree}) (2)
   \p{Joining_Group: Yeh_With_Tail} (Short: \p{Jg=YehWithTail}) (1)
   \p{Joining_Group: Yudh} (Short: \p{Jg=Yudh}) (1)
   \p{Joining_Group: Yudh_He} (Short: \p{Jg=YudhHe}) (1)
   \p{Joining_Group: Zain} (Short: \p{Jg=Zain}) (1)
   \p{Joining_Group: Zhain} (Short: \p{Jg=Zhain}) (1)
   \p{Joining_Type: C}     \p{Joining_Type=Join_Causing} (4)
   \p{Joining_Type: D}     \p{Joining_Type=Dual_Joining} (426)
   \p{Joining_Type: Dual_Joining} (Short: \p{Jt=D}) (426)
   \p{Joining_Type: Join_Causing} (Short: \p{Jt=C}) (4)
   \p{Joining_Type: L}     \p{Joining_Type=Left_Joining} (3)
   \p{Joining_Type: Left_Joining} (Short: \p{Jt=L}) (3)
   \p{Joining_Type: Non_Joining} (Short: \p{Jt=U}) (1_111_852 plus
                             all above-Unicode code points)
   \p{Joining_Type: R}     \p{Joining_Type=Right_Joining} (111)
   \p{Joining_Type: Right_Joining} (Short: \p{Jt=R}) (111)
   \p{Joining_Type: T}     \p{Joining_Type=Transparent} (1716)
   \p{Joining_Type: Transparent} (Short: \p{Jt=T}) (1716)
   \p{Joining_Type: U}     \p{Joining_Type=Non_Joining} (1_111_852
                             plus all above-Unicode code points)
   \p{Jt: *}               \p{Joining_Type: *}
   \p{Kaithi}              \p{Script=Kaithi} (Short: \p{Kthi}; NOT
                             \p{Block=Kaithi}) (66)
   \p{Kali}                \p{Kayah_Li} (= \p{Script=Kayah_Li}) (NOT
                             \p{Block=Kayah_Li}) (47)
   \p{Kana}                \p{Katakana} (= \p{Script=Katakana}) (NOT
                             \p{Block=Katakana}) (300)
 X \p{Kana_Sup}            \p{Kana_Supplement} (= \p{Block=
                             Kana_Supplement}) (256)
 X \p{Kana_Supplement}     \p{Block=Kana_Supplement} (Short:
                             \p{InKanaSup}) (256)
 X \p{Kanbun}              \p{Block=Kanbun} (16)
 X \p{Kangxi}              \p{Kangxi_Radicals} (= \p{Block=
                             Kangxi_Radicals}) (224)
 X \p{Kangxi_Radicals}     \p{Block=Kangxi_Radicals} (Short:
                             \p{InKangxi}) (224)
   \p{Kannada}             \p{Script=Kannada} (Short: \p{Knda}; NOT
                             \p{Block=Kannada}) (87)
   \p{Katakana}            \p{Script=Katakana} (Short: \p{Kana}; NOT
                             \p{Block=Katakana}) (300)
 X \p{Katakana_Ext}        \p{Katakana_Phonetic_Extensions} (=
                             \p{Block=Katakana_Phonetic_Extensions})
                             (16)
 X \p{Katakana_Phonetic_Extensions} \p{Block=
                             Katakana_Phonetic_Extensions} (Short:
                             \p{InKatakanaExt}) (16)
   \p{Kayah_Li}            \p{Script=Kayah_Li} (Short: \p{Kali}; NOT
                             \p{Block=Kayah_Li}) (47)
   \p{Khar}                \p{Kharoshthi} (= \p{Script=Kharoshthi})
                             (NOT \p{Block=Kharoshthi}) (65)
   \p{Kharoshthi}          \p{Script=Kharoshthi} (Short: \p{Khar};
                             NOT \p{Block=Kharoshthi}) (65)
   \p{Khmer}               \p{Script=Khmer} (Short: \p{Khmr}; NOT
                             \p{Block=Khmer}) (146)
 X \p{Khmer_Symbols}       \p{Block=Khmer_Symbols} (32)
   \p{Khmr}                \p{Khmer} (= \p{Script=Khmer}) (NOT
                             \p{Block=Khmer}) (146)
   \p{Khoj}                \p{Khojki} (= \p{Script=Khojki}) (NOT
                             \p{Block=Khojki}) (61)
   \p{Khojki}              \p{Script=Khojki} (Short: \p{Khoj}; NOT
                             \p{Block=Khojki}) (61)
   \p{Khudawadi}           \p{Script=Khudawadi} (Short: \p{Sind}; NOT
                             \p{Block=Khudawadi}) (69)
   \p{Knda}                \p{Kannada} (= \p{Script=Kannada}) (NOT
                             \p{Block=Kannada}) (87)
   \p{Kthi}                \p{Kaithi} (= \p{Script=Kaithi}) (NOT
                             \p{Block=Kaithi}) (66)
   \p{L} \pL               \p{Letter} (= \p{General_Category=Letter})
                             (109_591)
 X \p{L&}                  \p{Cased_Letter} (= \p{General_Category=
                             Cased_Letter}) (3646)
 X \p{L_}                  \p{Cased_Letter} (= \p{General_Category=
                             Cased_Letter}) Note the trailing '_'
                             matters in spite of loose matching
                             rules. (3646)
   \p{Lana}                \p{Tai_Tham} (= \p{Script=Tai_Tham}) (NOT
                             \p{Block=Tai_Tham}) (127)
   \p{Lao}                 \p{Script=Lao} (NOT \p{Block=Lao}) (67)
   \p{Laoo}                \p{Lao} (= \p{Script=Lao}) (NOT \p{Block=
                             Lao}) (67)
   \p{Latin}               \p{Script=Latin} (Short: \p{Latn}) (1349)
 X \p{Latin_1}             \p{Latin_1_Supplement} (= \p{Block=
                             Latin_1_Supplement}) (128)
 X \p{Latin_1_Sup}         \p{Latin_1_Supplement} (= \p{Block=
                             Latin_1_Supplement}) (128)
 X \p{Latin_1_Supplement}  \p{Block=Latin_1_Supplement} (Short:
                             \p{InLatin1}) (128)
 X \p{Latin_Ext_A}         \p{Latin_Extended_A} (= \p{Block=
                             Latin_Extended_A}) (128)
 X \p{Latin_Ext_Additional} \p{Latin_Extended_Additional} (=
                             \p{Block=Latin_Extended_Additional})
                             (256)
 X \p{Latin_Ext_B}         \p{Latin_Extended_B} (= \p{Block=
                             Latin_Extended_B}) (208)
 X \p{Latin_Ext_C}         \p{Latin_Extended_C} (= \p{Block=
                             Latin_Extended_C}) (32)
 X \p{Latin_Ext_D}         \p{Latin_Extended_D} (= \p{Block=
                             Latin_Extended_D}) (224)
 X \p{Latin_Ext_E}         \p{Latin_Extended_E} (= \p{Block=
                             Latin_Extended_E}) (64)
 X \p{Latin_Extended_A}    \p{Block=Latin_Extended_A} (Short:
                             \p{InLatinExtA}) (128)
 X \p{Latin_Extended_Additional} \p{Block=Latin_Extended_Additional}
                             (Short: \p{InLatinExtAdditional}) (256)
 X \p{Latin_Extended_B}    \p{Block=Latin_Extended_B} (Short:
                             \p{InLatinExtB}) (208)
 X \p{Latin_Extended_C}    \p{Block=Latin_Extended_C} (Short:
                             \p{InLatinExtC}) (32)
 X \p{Latin_Extended_D}    \p{Block=Latin_Extended_D} (Short:
                             \p{InLatinExtD}) (224)
 X \p{Latin_Extended_E}    \p{Block=Latin_Extended_E} (Short:
                             \p{InLatinExtE}) (64)
   \p{Latn}                \p{Latin} (= \p{Script=Latin}) (1349)
   \p{Lb: *}               \p{Line_Break: *}
   \p{LC}                  \p{Cased_Letter} (= \p{General_Category=
                             Cased_Letter}) (3646)
   \p{Lepc}                \p{Lepcha} (= \p{Script=Lepcha}) (NOT
                             \p{Block=Lepcha}) (74)
   \p{Lepcha}              \p{Script=Lepcha} (Short: \p{Lepc}; NOT
                             \p{Block=Lepcha}) (74)
   \p{Letter}              \p{General_Category=Letter} (Short: \p{L})
                             (109_591)
   \p{Letter_Number}       \p{General_Category=Letter_Number} (Short:
                             \p{Nl}) (236)
 X \p{Letterlike_Symbols}  \p{Block=Letterlike_Symbols} (80)
   \p{Limb}                \p{Limbu} (= \p{Script=Limbu}) (NOT
                             \p{Block=Limbu}) (68)
   \p{Limbu}               \p{Script=Limbu} (Short: \p{Limb}; NOT
                             \p{Block=Limbu}) (68)
   \p{Lina}                \p{Linear_A} (= \p{Script=Linear_A}) (NOT
                             \p{Block=Linear_A}) (341)
   \p{Linb}                \p{Linear_B} (= \p{Script=Linear_B}) (211)
   \p{Line_Break: AI}      \p{Line_Break=Ambiguous} (689)
   \p{Line_Break: AL}      \p{Line_Break=Alphabetic} (19_294)
   \p{Line_Break: Alphabetic} (Short: \p{Lb=AL}) (19_294)
   \p{Line_Break: Ambiguous} (Short: \p{Lb=AI}) (689)
   \p{Line_Break: B2}      \p{Line_Break=Break_Both} (3)
   \p{Line_Break: BA}      \p{Line_Break=Break_After} (206)
   \p{Line_Break: BB}      \p{Line_Break=Break_Before} (23)
   \p{Line_Break: BK}      \p{Line_Break=Mandatory_Break} (4)
   \p{Line_Break: Break_After} (Short: \p{Lb=BA}) (206)
   \p{Line_Break: Break_Before} (Short: \p{Lb=BB}) (23)
   \p{Line_Break: Break_Both} (Short: \p{Lb=B2}) (3)
   \p{Line_Break: Break_Symbols} (Short: \p{Lb=SY}) (1)
   \p{Line_Break: Carriage_Return} (Short: \p{Lb=CR}) (1)
   \p{Line_Break: CB}      \p{Line_Break=Contingent_Break} (1)
   \p{Line_Break: CJ}      \p{Line_Break=
                             Conditional_Japanese_Starter} (51)
   \p{Line_Break: CL}      \p{Line_Break=Close_Punctuation} (90)
   \p{Line_Break: Close_Parenthesis} (Short: \p{Lb=CP}) (2)
   \p{Line_Break: Close_Punctuation} (Short: \p{Lb=CL}) (90)
   \p{Line_Break: CM}      \p{Line_Break=Combining_Mark} (1957)
   \p{Line_Break: Combining_Mark} (Short: \p{Lb=CM}) (1957)
   \p{Line_Break: Complex_Context} (Short: \p{Lb=SA}) (734)
   \p{Line_Break: Conditional_Japanese_Starter} (Short: \p{Lb=CJ})
                             (51)
   \p{Line_Break: Contingent_Break} (Short: \p{Lb=CB}) (1)
   \p{Line_Break: CP}      \p{Line_Break=Close_Parenthesis} (2)
   \p{Line_Break: CR}      \p{Line_Break=Carriage_Return} (1)
   \p{Line_Break: EX}      \p{Line_Break=Exclamation} (36)
   \p{Line_Break: Exclamation} (Short: \p{Lb=EX}) (36)
   \p{Line_Break: GL}      \p{Line_Break=Glue} (18)
   \p{Line_Break: Glue}    (Short: \p{Lb=GL}) (18)
   \p{Line_Break: H2}      (Short: \p{Lb=H2}) (399)
   \p{Line_Break: H3}      (Short: \p{Lb=H3}) (10_773)
   \p{Line_Break: Hebrew_Letter} (Short: \p{Lb=HL}) (74)
   \p{Line_Break: HL}      \p{Line_Break=Hebrew_Letter} (74)
   \p{Line_Break: HY}      \p{Line_Break=Hyphen} (1)
   \p{Line_Break: Hyphen}  (Short: \p{Lb=HY}) (1)
   \p{Line_Break: ID}      \p{Line_Break=Ideographic} (162_973)
   \p{Line_Break: Ideographic} (Short: \p{Lb=ID}) (162_973)
   \p{Line_Break: IN}      \p{Line_Break=Inseparable} (6)
   \p{Line_Break: Infix_Numeric} (Short: \p{Lb=IS}) (13)
   \p{Line_Break: Inseparable} (Short: \p{Lb=IN}) (6)
   \p{Line_Break: Inseperable} \p{Line_Break=Inseparable} (6)
   \p{Line_Break: IS}      \p{Line_Break=Infix_Numeric} (13)
   \p{Line_Break: JL}      (Short: \p{Lb=JL}) (125)
   \p{Line_Break: JT}      (Short: \p{Lb=JT}) (137)
   \p{Line_Break: JV}      (Short: \p{Lb=JV}) (95)
   \p{Line_Break: LF}      \p{Line_Break=Line_Feed} (1)
   \p{Line_Break: Line_Feed} (Short: \p{Lb=LF}) (1)
   \p{Line_Break: Mandatory_Break} (Short: \p{Lb=BK}) (4)
   \p{Line_Break: Next_Line} (Short: \p{Lb=NL}) (1)
   \p{Line_Break: NL}      \p{Line_Break=Next_Line} (1)
   \p{Line_Break: Nonstarter} (Short: \p{Lb=NS}) (29)
   \p{Line_Break: NS}      \p{Line_Break=Nonstarter} (29)
   \p{Line_Break: NU}      \p{Line_Break=Numeric} (542)
   \p{Line_Break: Numeric} (Short: \p{Lb=NU}) (542)
   \p{Line_Break: OP}      \p{Line_Break=Open_Punctuation} (85)
   \p{Line_Break: Open_Punctuation} (Short: \p{Lb=OP}) (85)
   \p{Line_Break: PO}      \p{Line_Break=Postfix_Numeric} (30)
   \p{Line_Break: Postfix_Numeric} (Short: \p{Lb=PO}) (30)
   \p{Line_Break: PR}      \p{Line_Break=Prefix_Numeric} (65)
   \p{Line_Break: Prefix_Numeric} (Short: \p{Lb=PR}) (65)
   \p{Line_Break: QU}      \p{Line_Break=Quotation} (39)
   \p{Line_Break: Quotation} (Short: \p{Lb=QU}) (39)
   \p{Line_Break: Regional_Indicator} (Short: \p{Lb=RI}) (26)
   \p{Line_Break: RI}      \p{Line_Break=Regional_Indicator} (26)
   \p{Line_Break: SA}      \p{Line_Break=Complex_Context} (734)
 D \p{Line_Break: SG}      \p{Line_Break=Surrogate} (2048)
   \p{Line_Break: SP}      \p{Line_Break=Space} (1)
   \p{Line_Break: Space}   (Short: \p{Lb=SP}) (1)
 D \p{Line_Break: Surrogate} Deprecated by Unicode because surrogates
                             should never appear in well-formed text,
                             and therefore shouldn't be the basis for
                             line breaking (Short: \p{Lb=SG}) (2048)
   \p{Line_Break: SY}      \p{Line_Break=Break_Symbols} (1)
   \p{Line_Break: Unknown} (Short: \p{Lb=XX}) (913_536 plus all
                             above-Unicode code points)
   \p{Line_Break: WJ}      \p{Line_Break=Word_Joiner} (2)
   \p{Line_Break: Word_Joiner} (Short: \p{Lb=WJ}) (2)
   \p{Line_Break: XX}      \p{Line_Break=Unknown} (913_536 plus all
                             above-Unicode code points)
   \p{Line_Break: ZW}      \p{Line_Break=ZWSpace} (1)
   \p{Line_Break: ZWSpace} (Short: \p{Lb=ZW}) (1)
   \p{Line_Separator}      \p{General_Category=Line_Separator}
                             (Short: \p{Zl}) (1)
   \p{Linear_A}            \p{Script=Linear_A} (Short: \p{Lina}; NOT
                             \p{Block=Linear_A}) (341)
   \p{Linear_B}            \p{Script=Linear_B} (Short: \p{Linb}) (211)
 X \p{Linear_B_Ideograms}  \p{Block=Linear_B_Ideograms} (128)
 X \p{Linear_B_Syllabary}  \p{Block=Linear_B_Syllabary} (128)
   \p{Lisu}                \p{Script=Lisu} (48)
   \p{Ll}                  \p{Lowercase_Letter} (=
                             \p{General_Category=Lowercase_Letter})
                             (/i= General_Category=Cased_Letter)
                             (1984)
   \p{Lm}                  \p{Modifier_Letter} (=
                             \p{General_Category=Modifier_Letter})
                             (248)
   \p{Lo}                  \p{Other_Letter} (= \p{General_Category=
                             Other_Letter}) (105_697)
   \p{LOE}                 \p{Logical_Order_Exception} (=
                             \p{Logical_Order_Exception=Y}) (19)
   \p{LOE: *}              \p{Logical_Order_Exception: *}
   \p{Logical_Order_Exception} \p{Logical_Order_Exception=Y} (Short:
                             \p{LOE}) (19)
   \p{Logical_Order_Exception: N*} (Short: \p{LOE=N}, \P{LOE})
                             (1_114_093 plus all above-Unicode code
                             points)
   \p{Logical_Order_Exception: Y*} (Short: \p{LOE=Y}, \p{LOE}) (19)
 X \p{Low_Surrogates}      \p{Block=Low_Surrogates} (1024)
   \p{Lower}               \p{XPosixLower} (= \p{Lowercase=Y}) (/i=
                             Cased=Yes) (2173)
   \p{Lower: *}            \p{Lowercase: *}
   \p{Lowercase}           \p{XPosixLower} (= \p{Lowercase=Y}) (/i=
                             Cased=Yes) (2173)
   \p{Lowercase: N*}       (Short: \p{Lower=N}, \P{Lower}; /i= Cased=
                             No) (1_111_939 plus all above-Unicode
                             code points)
   \p{Lowercase: Y*}       (Short: \p{Lower=Y}, \p{Lower}; /i= Cased=
                             Yes) (2173)
   \p{Lowercase_Letter}    \p{General_Category=Lowercase_Letter}
                             (Short: \p{Ll}; /i= General_Category=
                             Cased_Letter) (1984)
   \p{Lt}                  \p{Titlecase_Letter} (=
                             \p{General_Category=Titlecase_Letter})
                             (/i= General_Category=Cased_Letter) (31)
   \p{Lu}                  \p{Uppercase_Letter} (=
                             \p{General_Category=Uppercase_Letter})
                             (/i= General_Category=Cased_Letter)
                             (1631)
   \p{Lyci}                \p{Lycian} (= \p{Script=Lycian}) (NOT
                             \p{Block=Lycian}) (29)
   \p{Lycian}              \p{Script=Lycian} (Short: \p{Lyci}; NOT
                             \p{Block=Lycian}) (29)
   \p{Lydi}                \p{Lydian} (= \p{Script=Lydian}) (NOT
                             \p{Block=Lydian}) (27)
   \p{Lydian}              \p{Script=Lydian} (Short: \p{Lydi}; NOT
                             \p{Block=Lydian}) (27)
   \p{M} \pM               \p{Mark} (= \p{General_Category=Mark})
                             (1963)
   \p{Mahajani}            \p{Script=Mahajani} (Short: \p{Mahj}; NOT
                             \p{Block=Mahajani}) (39)
   \p{Mahj}                \p{Mahajani} (= \p{Script=Mahajani}) (NOT
                             \p{Block=Mahajani}) (39)
 X \p{Mahjong}             \p{Mahjong_Tiles} (= \p{Block=
                             Mahjong_Tiles}) (48)
 X \p{Mahjong_Tiles}       \p{Block=Mahjong_Tiles} (Short:
                             \p{InMahjong}) (48)
   \p{Malayalam}           \p{Script=Malayalam} (Short: \p{Mlym}; NOT
                             \p{Block=Malayalam}) (100)
   \p{Mand}                \p{Mandaic} (= \p{Script=Mandaic}) (NOT
                             \p{Block=Mandaic}) (29)
   \p{Mandaic}             \p{Script=Mandaic} (Short: \p{Mand}; NOT
                             \p{Block=Mandaic}) (29)
   \p{Mani}                \p{Manichaean} (= \p{Script=Manichaean})
                             (NOT \p{Block=Manichaean}) (51)
   \p{Manichaean}          \p{Script=Manichaean} (Short: \p{Mani};
                             NOT \p{Block=Manichaean}) (51)
   \p{Mark}                \p{General_Category=Mark} (Short: \p{M})
                             (1963)
   \p{Math}                \p{Math=Y} (2310)
   \p{Math: N*}            (Single: \P{Math}) (1_111_802 plus all
                             above-Unicode code points)
   \p{Math: Y*}            (Single: \p{Math}) (2310)
 X \p{Math_Alphanum}       \p{Mathematical_Alphanumeric_Symbols} (=
                             \p{Block=
                             Mathematical_Alphanumeric_Symbols})
                             (1024)
 X \p{Math_Operators}      \p{Mathematical_Operators} (= \p{Block=
                             Mathematical_Operators}) (256)
   \p{Math_Symbol}         \p{General_Category=Math_Symbol} (Short:
                             \p{Sm}) (948)
 X \p{Mathematical_Alphanumeric_Symbols} \p{Block=
                             Mathematical_Alphanumeric_Symbols}
                             (Short: \p{InMathAlphanum}) (1024)
 X \p{Mathematical_Operators} \p{Block=Mathematical_Operators}
                             (Short: \p{InMathOperators}) (256)
   \p{Mc}                  \p{Spacing_Mark} (= \p{General_Category=
                             Spacing_Mark}) (383)
   \p{Me}                  \p{Enclosing_Mark} (= \p{General_Category=
                             Enclosing_Mark}) (13)
   \p{Meetei_Mayek}        \p{Script=Meetei_Mayek} (Short: \p{Mtei};
                             NOT \p{Block=Meetei_Mayek}) (79)
 X \p{Meetei_Mayek_Ext}    \p{Meetei_Mayek_Extensions} (= \p{Block=
                             Meetei_Mayek_Extensions}) (32)
 X \p{Meetei_Mayek_Extensions} \p{Block=Meetei_Mayek_Extensions}
                             (Short: \p{InMeeteiMayekExt}) (32)
   \p{Mend}                \p{Mende_Kikakui} (= \p{Script=
                             Mende_Kikakui}) (NOT \p{Block=
                             Mende_Kikakui}) (213)
   \p{Mende_Kikakui}       \p{Script=Mende_Kikakui} (Short: \p{Mend};
                             NOT \p{Block=Mende_Kikakui}) (213)
   \p{Merc}                \p{Meroitic_Cursive} (= \p{Script=
                             Meroitic_Cursive}) (NOT \p{Block=
                             Meroitic_Cursive}) (90)
   \p{Mero}                \p{Meroitic_Hieroglyphs} (= \p{Script=
                             Meroitic_Hieroglyphs}) (32)
   \p{Meroitic_Cursive}    \p{Script=Meroitic_Cursive} (Short:
                             \p{Merc}; NOT \p{Block=
                             Meroitic_Cursive}) (90)
   \p{Meroitic_Hieroglyphs} \p{Script=Meroitic_Hieroglyphs} (Short:
                             \p{Mero}) (32)
   \p{Miao}                \p{Script=Miao} (NOT \p{Block=Miao}) (133)
 X \p{Misc_Arrows}         \p{Miscellaneous_Symbols_And_Arrows} (=
                             \p{Block=
                             Miscellaneous_Symbols_And_Arrows}) (256)
 X \p{Misc_Math_Symbols_A} \p{Miscellaneous_Mathematical_Symbols_A}
                             (= \p{Block=
                             Miscellaneous_Mathematical_Symbols_A})
                             (48)
 X \p{Misc_Math_Symbols_B} \p{Miscellaneous_Mathematical_Symbols_B}
                             (= \p{Block=
                             Miscellaneous_Mathematical_Symbols_B})
                             (128)
 X \p{Misc_Pictographs}    \p{Miscellaneous_Symbols_And_Pictographs}
                             (= \p{Block=
                             Miscellaneous_Symbols_And_Pictographs})
                             (768)
 X \p{Misc_Symbols}        \p{Miscellaneous_Symbols} (= \p{Block=
                             Miscellaneous_Symbols}) (256)
 X \p{Misc_Technical}      \p{Miscellaneous_Technical} (= \p{Block=
                             Miscellaneous_Technical}) (256)
 X \p{Miscellaneous_Mathematical_Symbols_A} \p{Block=
                             Miscellaneous_Mathematical_Symbols_A}
                             (Short: \p{InMiscMathSymbolsA}) (48)
 X \p{Miscellaneous_Mathematical_Symbols_B} \p{Block=
                             Miscellaneous_Mathematical_Symbols_B}
                             (Short: \p{InMiscMathSymbolsB}) (128)
 X \p{Miscellaneous_Symbols} \p{Block=Miscellaneous_Symbols} (Short:
                             \p{InMiscSymbols}) (256)
 X \p{Miscellaneous_Symbols_And_Arrows} \p{Block=
                             Miscellaneous_Symbols_And_Arrows}
                             (Short: \p{InMiscArrows}) (256)
 X \p{Miscellaneous_Symbols_And_Pictographs} \p{Block=
                             Miscellaneous_Symbols_And_Pictographs}
                             (Short: \p{InMiscPictographs}) (768)
 X \p{Miscellaneous_Technical} \p{Block=Miscellaneous_Technical}
                             (Short: \p{InMiscTechnical}) (256)
   \p{Mlym}                \p{Malayalam} (= \p{Script=Malayalam})
                             (NOT \p{Block=Malayalam}) (100)
   \p{Mn}                  \p{Nonspacing_Mark} (=
                             \p{General_Category=Nonspacing_Mark})
                             (1567)
   \p{Modi}                \p{Script=Modi} (NOT \p{Block=Modi}) (79)
   \p{Modifier_Letter}     \p{General_Category=Modifier_Letter}
                             (Short: \p{Lm}) (248)
 X \p{Modifier_Letters}    \p{Spacing_Modifier_Letters} (= \p{Block=
                             Spacing_Modifier_Letters}) (80)
   \p{Modifier_Symbol}     \p{General_Category=Modifier_Symbol}
                             (Short: \p{Sk}) (121)
 X \p{Modifier_Tone_Letters} \p{Block=Modifier_Tone_Letters} (32)
   \p{Mong}                \p{Mongolian} (= \p{Script=Mongolian})
                             (NOT \p{Block=Mongolian}) (153)
   \p{Mongolian}           \p{Script=Mongolian} (Short: \p{Mong}; NOT
                             \p{Block=Mongolian}) (153)
   \p{Mro}                 \p{Script=Mro} (NOT \p{Block=Mro}) (43)
   \p{Mroo}                \p{Mro} (= \p{Script=Mro}) (NOT \p{Block=
                             Mro}) (43)
   \p{Mtei}                \p{Meetei_Mayek} (= \p{Script=
                             Meetei_Mayek}) (NOT \p{Block=
                             Meetei_Mayek}) (79)
   \p{Mult}                \p{Multani} (= \p{Script=Multani}) (NOT
                             \p{Block=Multani}) (38)
   \p{Multani}             \p{Script=Multani} (Short: \p{Mult}; NOT
                             \p{Block=Multani}) (38)
 X \p{Music}               \p{Musical_Symbols} (= \p{Block=
                             Musical_Symbols}) (256)
 X \p{Musical_Symbols}     \p{Block=Musical_Symbols} (Short:
                             \p{InMusic}) (256)
   \p{Myanmar}             \p{Script=Myanmar} (Short: \p{Mymr}; NOT
                             \p{Block=Myanmar}) (223)
 X \p{Myanmar_Ext_A}       \p{Myanmar_Extended_A} (= \p{Block=
                             Myanmar_Extended_A}) (32)
 X \p{Myanmar_Ext_B}       \p{Myanmar_Extended_B} (= \p{Block=
                             Myanmar_Extended_B}) (32)
 X \p{Myanmar_Extended_A}  \p{Block=Myanmar_Extended_A} (Short:
                             \p{InMyanmarExtA}) (32)
 X \p{Myanmar_Extended_B}  \p{Block=Myanmar_Extended_B} (Short:
                             \p{InMyanmarExtB}) (32)
   \p{Mymr}                \p{Myanmar} (= \p{Script=Myanmar}) (NOT
                             \p{Block=Myanmar}) (223)
   \p{N} \pN               \p{Number} (= \p{General_Category=Number})
                             (1433)
   \p{Nabataean}           \p{Script=Nabataean} (Short: \p{Nbat}; NOT
                             \p{Block=Nabataean}) (40)
   \p{Narb}                \p{Old_North_Arabian} (= \p{Script=
                             Old_North_Arabian}) (32)
 X \p{NB}                  \p{No_Block} (= \p{Block=No_Block})
                             (849_856 plus all above-Unicode code
                             points)
   \p{Nbat}                \p{Nabataean} (= \p{Script=Nabataean})
                             (NOT \p{Block=Nabataean}) (40)
   \p{NChar}               \p{Noncharacter_Code_Point} (=
                             \p{Noncharacter_Code_Point=Y}) (66)
   \p{NChar: *}            \p{Noncharacter_Code_Point: *}
   \p{Nd}                  \p{XPosixDigit} (= \p{General_Category=
                             Decimal_Number}) (550)
   \p{New_Tai_Lue}         \p{Script=New_Tai_Lue} (Short: \p{Talu};
                             NOT \p{Block=New_Tai_Lue}) (83)
   \p{NFC_QC: *}           \p{NFC_Quick_Check: *}
   \p{NFC_Quick_Check: M}  \p{NFC_Quick_Check=Maybe} (110)
   \p{NFC_Quick_Check: Maybe} (Short: \p{NFCQC=M}) (110)
   \p{NFC_Quick_Check: N}  \p{NFC_Quick_Check=No} (NOT
                             \P{NFC_Quick_Check} NOR \P{NFC_QC})
                             (1120)
   \p{NFC_Quick_Check: No} (Short: \p{NFCQC=N}; NOT
                             \P{NFC_Quick_Check} NOR \P{NFC_QC})
                             (1120)
   \p{NFC_Quick_Check: Y}  \p{NFC_Quick_Check=Yes} (NOT
                             \p{NFC_Quick_Check} NOR \p{NFC_QC})
                             (1_112_882 plus all above-Unicode code
                             points)
   \p{NFC_Quick_Check: Yes} (Short: \p{NFCQC=Y}; NOT
                             \p{NFC_Quick_Check} NOR \p{NFC_QC})
                             (1_112_882 plus all above-Unicode code
                             points)
   \p{NFD_QC: *}           \p{NFD_Quick_Check: *}
   \p{NFD_Quick_Check: N}  \p{NFD_Quick_Check=No} (NOT
                             \P{NFD_Quick_Check} NOR \P{NFD_QC})
                             (13_232)
   \p{NFD_Quick_Check: No} (Short: \p{NFDQC=N}; NOT
                             \P{NFD_Quick_Check} NOR \P{NFD_QC})
                             (13_232)
   \p{NFD_Quick_Check: Y}  \p{NFD_Quick_Check=Yes} (NOT
                             \p{NFD_Quick_Check} NOR \p{NFD_QC})
                             (1_100_880 plus all above-Unicode code
                             points)
   \p{NFD_Quick_Check: Yes} (Short: \p{NFDQC=Y}; NOT
                             \p{NFD_Quick_Check} NOR \p{NFD_QC})
                             (1_100_880 plus all above-Unicode code
                             points)
   \p{NFKC_QC: *}          \p{NFKC_Quick_Check: *}
   \p{NFKC_Quick_Check: M} \p{NFKC_Quick_Check=Maybe} (110)
   \p{NFKC_Quick_Check: Maybe} (Short: \p{NFKCQC=M}) (110)
   \p{NFKC_Quick_Check: N} \p{NFKC_Quick_Check=No} (NOT
                             \P{NFKC_Quick_Check} NOR \P{NFKC_QC})
                             (4793)
   \p{NFKC_Quick_Check: No} (Short: \p{NFKCQC=N}; NOT
                             \P{NFKC_Quick_Check} NOR \P{NFKC_QC})
                             (4793)
   \p{NFKC_Quick_Check: Y} \p{NFKC_Quick_Check=Yes} (NOT
                             \p{NFKC_Quick_Check} NOR \p{NFKC_QC})
                             (1_109_209 plus all above-Unicode code
                             points)
   \p{NFKC_Quick_Check: Yes} (Short: \p{NFKCQC=Y}; NOT
                             \p{NFKC_Quick_Check} NOR \p{NFKC_QC})
                             (1_109_209 plus all above-Unicode code
                             points)
   \p{NFKD_QC: *}          \p{NFKD_Quick_Check: *}
   \p{NFKD_Quick_Check: N} \p{NFKD_Quick_Check=No} (NOT
                             \P{NFKD_Quick_Check} NOR \P{NFKD_QC})
                             (16_893)
   \p{NFKD_Quick_Check: No} (Short: \p{NFKDQC=N}; NOT
                             \P{NFKD_Quick_Check} NOR \P{NFKD_QC})
                             (16_893)
   \p{NFKD_Quick_Check: Y} \p{NFKD_Quick_Check=Yes} (NOT
                             \p{NFKD_Quick_Check} NOR \p{NFKD_QC})
                             (1_097_219 plus all above-Unicode code
                             points)
   \p{NFKD_Quick_Check: Yes} (Short: \p{NFKDQC=Y}; NOT
                             \p{NFKD_Quick_Check} NOR \p{NFKD_QC})
                             (1_097_219 plus all above-Unicode code
                             points)
   \p{Nko}                 \p{Script=Nko} (NOT \p{NKo}) (59)
   \p{Nkoo}                \p{Nko} (= \p{Script=Nko}) (NOT \p{NKo})
                             (59)
   \p{Nl}                  \p{Letter_Number} (= \p{General_Category=
                             Letter_Number}) (236)
   \p{No}                  \p{Other_Number} (= \p{General_Category=
                             Other_Number}) (647)
 X \p{No_Block}            \p{Block=No_Block} (Short: \p{InNB})
                             (849_856 plus all above-Unicode code
                             points)
   \p{Noncharacter_Code_Point} \p{Noncharacter_Code_Point=Y} (Short:
                             \p{NChar}) (66)
   \p{Noncharacter_Code_Point: N*} (Short: \p{NChar=N}, \P{NChar})
                             (1_114_046 plus all above-Unicode code
                             points)
   \p{Noncharacter_Code_Point: Y*} (Short: \p{NChar=Y}, \p{NChar})
                             (66)
   \p{Nonspacing_Mark}     \p{General_Category=Nonspacing_Mark}
                             (Short: \p{Mn}) (1567)
   \p{Nt: *}               \p{Numeric_Type: *}
   \p{Number}              \p{General_Category=Number} (Short: \p{N})
                             (1433)
 X \p{Number_Forms}        \p{Block=Number_Forms} (64)
   \p{Numeric_Type: De}    \p{Numeric_Type=Decimal} (550)
   \p{Numeric_Type: Decimal} (Short: \p{Nt=De}) (550)
   \p{Numeric_Type: Di}    \p{Numeric_Type=Digit} (128)
   \p{Numeric_Type: Digit} (Short: \p{Nt=Di}) (128)
   \p{Numeric_Type: None}  (Short: \p{Nt=None}) (1_112_598 plus all
                             above-Unicode code points)
   \p{Numeric_Type: Nu}    \p{Numeric_Type=Numeric} (836)
   \p{Numeric_Type: Numeric} (Short: \p{Nt=Nu}) (836)
 T \p{Numeric_Value: -1/2} (Short: \p{Nv=-1/2}) (1)
 T \p{Numeric_Value: 0}    (Short: \p{Nv=0}) (71)
 T \p{Numeric_Value: 1/16} (Short: \p{Nv=1/16}) (3)
 T \p{Numeric_Value: 1/12} (Short: \p{Nv=1/12}) (1)
 T \p{Numeric_Value: 1/10} (Short: \p{Nv=1/10}) (1)
 T \p{Numeric_Value: 1/9}  (Short: \p{Nv=1/9}) (1)
 T \p{Numeric_Value: 1/8}  (Short: \p{Nv=1/8}) (5)
 T \p{Numeric_Value: 1/7}  (Short: \p{Nv=1/7}) (1)
 T \p{Numeric_Value: 1/6}  (Short: \p{Nv=1/6}) (3)
 T \p{Numeric_Value: 3/16} (Short: \p{Nv=3/16}) (3)
 T \p{Numeric_Value: 1/5}  (Short: \p{Nv=1/5}) (1)
 T \p{Numeric_Value: 1/4}  (Short: \p{Nv=1/4}) (12)
 T \p{Numeric_Value: 1/3}  (Short: \p{Nv=1/3}) (6)
 T \p{Numeric_Value: 3/8}  (Short: \p{Nv=3/8}) (1)
 T \p{Numeric_Value: 2/5}  (Short: \p{Nv=2/5}) (1)
 T \p{Numeric_Value: 5/12} (Short: \p{Nv=5/12}) (1)
 T \p{Numeric_Value: 1/2}  (Short: \p{Nv=1/2}) (13)
 T \p{Numeric_Value: 7/12} (Short: \p{Nv=7/12}) (1)
 T \p{Numeric_Value: 3/5}  (Short: \p{Nv=3/5}) (1)
 T \p{Numeric_Value: 5/8}  (Short: \p{Nv=5/8}) (1)
 T \p{Numeric_Value: 2/3}  (Short: \p{Nv=2/3}) (7)
 T \p{Numeric_Value: 3/4}  (Short: \p{Nv=3/4}) (7)
 T \p{Numeric_Value: 4/5}  (Short: \p{Nv=4/5}) (1)
 T \p{Numeric_Value: 5/6}  (Short: \p{Nv=5/6}) (3)
 T \p{Numeric_Value: 7/8}  (Short: \p{Nv=7/8}) (1)
 T \p{Numeric_Value: 11/12} (Short: \p{Nv=11/12}) (1)
 T \p{Numeric_Value: 1}    (Short: \p{Nv=1}) (117)
 T \p{Numeric_Value: 3/2}  (Short: \p{Nv=3/2}) (1)
 T \p{Numeric_Value: 2}    (Short: \p{Nv=2}) (117)
 T \p{Numeric_Value: 5/2}  (Short: \p{Nv=5/2}) (1)
 T \p{Numeric_Value: 3}    (Short: \p{Nv=3}) (119)
 T \p{Numeric_Value: 7/2}  (Short: \p{Nv=7/2}) (1)
 T \p{Numeric_Value: 4}    (Short: \p{Nv=4}) (111)
 T \p{Numeric_Value: 9/2}  (Short: \p{Nv=9/2}) (1)
 T \p{Numeric_Value: 5}    (Short: \p{Nv=5}) (109)
 T \p{Numeric_Value: 11/2} (Short: \p{Nv=11/2}) (1)
 T \p{Numeric_Value: 6}    (Short: \p{Nv=6}) (96)
 T \p{Numeric_Value: 13/2} (Short: \p{Nv=13/2}) (1)
 T \p{Numeric_Value: 7}    (Short: \p{Nv=7}) (95)
 T \p{Numeric_Value: 15/2} (Short: \p{Nv=15/2}) (1)
 T \p{Numeric_Value: 8}    (Short: \p{Nv=8}) (91)
 T \p{Numeric_Value: 17/2} (Short: \p{Nv=17/2}) (1)
 T \p{Numeric_Value: 9}    (Short: \p{Nv=9}) (95)
 T \p{Numeric_Value: 10}   (Short: \p{Nv=10}) (53)
 T \p{Numeric_Value: 11}   (Short: \p{Nv=11}) (6)
 T \p{Numeric_Value: 12}   (Short: \p{Nv=12}) (6)
 T \p{Numeric_Value: 13}   (Short: \p{Nv=13}) (4)
 T \p{Numeric_Value: 14}   (Short: \p{Nv=14}) (4)
 T \p{Numeric_Value: 15}   (Short: \p{Nv=15}) (4)
 T \p{Numeric_Value: 16}   (Short: \p{Nv=16}) (5)
 T \p{Numeric_Value: 17}   (Short: \p{Nv=17}) (5)
 T \p{Numeric_Value: 18}   (Short: \p{Nv=18}) (5)
 T \p{Numeric_Value: 19}   (Short: \p{Nv=19}) (5)
 T \p{Numeric_Value: 20}   (Short: \p{Nv=20}) (30)
 T \p{Numeric_Value: 21}   (Short: \p{Nv=21}) (1)
 T \p{Numeric_Value: 22}   (Short: \p{Nv=22}) (1)
 T \p{Numeric_Value: 23}   (Short: \p{Nv=23}) (1)
 T \p{Numeric_Value: 24}   (Short: \p{Nv=24}) (1)
 T \p{Numeric_Value: 25}   (Short: \p{Nv=25}) (1)
 T \p{Numeric_Value: 26}   (Short: \p{Nv=26}) (1)
 T \p{Numeric_Value: 27}   (Short: \p{Nv=27}) (1)
 T \p{Numeric_Value: 28}   (Short: \p{Nv=28}) (1)
 T \p{Numeric_Value: 29}   (Short: \p{Nv=29}) (1)
 T \p{Numeric_Value: 30}   (Short: \p{Nv=30}) (15)
 T \p{Numeric_Value: 31}   (Short: \p{Nv=31}) (1)
 T \p{Numeric_Value: 32}   (Short: \p{Nv=32}) (1)
 T \p{Numeric_Value: 33}   (Short: \p{Nv=33}) (1)
 T \p{Numeric_Value: 34}   (Short: \p{Nv=34}) (1)
 T \p{Numeric_Value: 35}   (Short: \p{Nv=35}) (1)
 T \p{Numeric_Value: 36}   (Short: \p{Nv=36}) (1)
 T \p{Numeric_Value: 37}   (Short: \p{Nv=37}) (1)
 T \p{Numeric_Value: 38}   (Short: \p{Nv=38}) (1)
 T \p{Numeric_Value: 39}   (Short: \p{Nv=39}) (1)
 T \p{Numeric_Value: 40}   (Short: \p{Nv=40}) (15)
 T \p{Numeric_Value: 41}   (Short: \p{Nv=41}) (1)
 T \p{Numeric_Value: 42}   (Short: \p{Nv=42}) (1)
 T \p{Numeric_Value: 43}   (Short: \p{Nv=43}) (1)
 T \p{Numeric_Value: 44}   (Short: \p{Nv=44}) (1)
 T \p{Numeric_Value: 45}   (Short: \p{Nv=45}) (1)
 T \p{Numeric_Value: 46}   (Short: \p{Nv=46}) (1)
 T \p{Numeric_Value: 47}   (Short: \p{Nv=47}) (1)
 T \p{Numeric_Value: 48}   (Short: \p{Nv=48}) (1)
 T \p{Numeric_Value: 49}   (Short: \p{Nv=49}) (1)
 T \p{Numeric_Value: 50}   (Short: \p{Nv=50}) (26)
 T \p{Numeric_Value: 60}   (Short: \p{Nv=60}) (10)
 T \p{Numeric_Value: 70}   (Short: \p{Nv=70}) (10)
 T \p{Numeric_Value: 80}   (Short: \p{Nv=80}) (9)
 T \p{Numeric_Value: 90}   (Short: \p{Nv=90}) (9)
 T \p{Numeric_Value: 100}  (Short: \p{Nv=100}) (29)
 T \p{Numeric_Value: 200}  (Short: \p{Nv=200}) (4)
 T \p{Numeric_Value: 300}  (Short: \p{Nv=300}) (5)
 T \p{Numeric_Value: 400}  (Short: \p{Nv=400}) (4)
 T \p{Numeric_Value: 500}  (Short: \p{Nv=500}) (14)
 T \p{Numeric_Value: 600}  (Short: \p{Nv=600}) (4)
 T \p{Numeric_Value: 700}  (Short: \p{Nv=700}) (4)
 T \p{Numeric_Value: 800}  (Short: \p{Nv=800}) (4)
 T \p{Numeric_Value: 900}  (Short: \p{Nv=900}) (5)
 T \p{Numeric_Value: 1000} (Short: \p{Nv=1000}) (20)
 T \p{Numeric_Value: 2000} (Short: \p{Nv=2000}) (2)
 T \p{Numeric_Value: 3000} (Short: \p{Nv=3000}) (2)
 T \p{Numeric_Value: 4000} (Short: \p{Nv=4000}) (2)
 T \p{Numeric_Value: 5000} (Short: \p{Nv=5000}) (6)
 T \p{Numeric_Value: 6000} (Short: \p{Nv=6000}) (2)
 T \p{Numeric_Value: 7000} (Short: \p{Nv=7000}) (2)
 T \p{Numeric_Value: 8000} (Short: \p{Nv=8000}) (2)
 T \p{Numeric_Value: 9000} (Short: \p{Nv=9000}) (2)
 T \p{Numeric_Value: 10000} (= 1.0e+04) (Short: \p{Nv=10000}) (9)
 T \p{Numeric_Value: 20000} (= 2.0e+04) (Short: \p{Nv=20000}) (2)
 T \p{Numeric_Value: 30000} (= 3.0e+04) (Short: \p{Nv=30000}) (2)
 T \p{Numeric_Value: 40000} (= 4.0e+04) (Short: \p{Nv=40000}) (2)
 T \p{Numeric_Value: 50000} (= 5.0e+04) (Short: \p{Nv=50000}) (5)
 T \p{Numeric_Value: 60000} (= 6.0e+04) (Short: \p{Nv=60000}) (2)
 T \p{Numeric_Value: 70000} (= 7.0e+04) (Short: \p{Nv=70000}) (2)
 T \p{Numeric_Value: 80000} (= 8.0e+04) (Short: \p{Nv=80000}) (2)
 T \p{Numeric_Value: 90000} (= 9.0e+04) (Short: \p{Nv=90000}) (2)
 T \p{Numeric_Value: 100000} (= 1.0e+05) (Short: \p{Nv=100000}) (2)
 T \p{Numeric_Value: 200000} (= 2.0e+05) (Short: \p{Nv=200000}) (1)
 T \p{Numeric_Value: 216000} (= 2.2e+05) (Short: \p{Nv=216000}) (1)
 T \p{Numeric_Value: 300000} (= 3.0e+05) (Short: \p{Nv=300000}) (1)
 T \p{Numeric_Value: 400000} (= 4.0e+05) (Short: \p{Nv=400000}) (1)
 T \p{Numeric_Value: 432000} (= 4.3e+05) (Short: \p{Nv=432000}) (1)
 T \p{Numeric_Value: 500000} (= 5.0e+05) (Short: \p{Nv=500000}) (1)
 T \p{Numeric_Value: 600000} (= 6.0e+05) (Short: \p{Nv=600000}) (1)
 T \p{Numeric_Value: 700000} (= 7.0e+05) (Short: \p{Nv=700000}) (1)
 T \p{Numeric_Value: 800000} (= 8.0e+05) (Short: \p{Nv=800000}) (1)
 T \p{Numeric_Value: 900000} (= 9.0e+05) (Short: \p{Nv=900000}) (1)
 T \p{Numeric_Value: 1000000} (= 1.0e+06) (Short: \p{Nv=1000000}) (1)
 T \p{Numeric_Value: 100000000} (= 1.0e+08) (Short: \p{Nv=100000000})
                             (3)
 T \p{Numeric_Value: 10000000000} (= 1.0e+10) (Short: \p{Nv=
                             10000000000}) (1)
 T \p{Numeric_Value: 1000000000000} (= 1.0e+12) (Short: \p{Nv=
                             1000000000000}) (2)
   \p{Numeric_Value: NaN}  (Short: \p{Nv=NaN}) (1_112_598 plus all
                             above-Unicode code points)
   \p{Nv: *}               \p{Numeric_Value: *}
 X \p{OCR}                 \p{Optical_Character_Recognition} (=
                             \p{Block=Optical_Character_Recognition})
                             (32)
   \p{Ogam}                \p{Ogham} (= \p{Script=Ogham}) (NOT
                             \p{Block=Ogham}) (29)
   \p{Ogham}               \p{Script=Ogham} (Short: \p{Ogam}; NOT
                             \p{Block=Ogham}) (29)
   \p{Ol_Chiki}            \p{Script=Ol_Chiki} (Short: \p{Olck}) (48)
   \p{Olck}                \p{Ol_Chiki} (= \p{Script=Ol_Chiki}) (48)
   \p{Old_Hungarian}       \p{Script=Old_Hungarian} (Short: \p{Hung};
                             NOT \p{Block=Old_Hungarian}) (108)
   \p{Old_Italic}          \p{Script=Old_Italic} (Short: \p{Ital};
                             NOT \p{Block=Old_Italic}) (36)
   \p{Old_North_Arabian}   \p{Script=Old_North_Arabian} (Short:
                             \p{Narb}) (32)
   \p{Old_Permic}          \p{Script=Old_Permic} (Short: \p{Perm};
                             NOT \p{Block=Old_Permic}) (43)
   \p{Old_Persian}         \p{Script=Old_Persian} (Short: \p{Xpeo};
                             NOT \p{Block=Old_Persian}) (50)
   \p{Old_South_Arabian}   \p{Script=Old_South_Arabian} (Short:
                             \p{Sarb}) (32)
   \p{Old_Turkic}          \p{Script=Old_Turkic} (Short: \p{Orkh};
                             NOT \p{Block=Old_Turkic}) (73)
   \p{Open_Punctuation}    \p{General_Category=Open_Punctuation}
                             (Short: \p{Ps}) (75)
 X \p{Optical_Character_Recognition} \p{Block=
                             Optical_Character_Recognition} (Short:
                             \p{InOCR}) (32)
   \p{Oriya}               \p{Script=Oriya} (Short: \p{Orya}; NOT
                             \p{Block=Oriya}) (90)
   \p{Orkh}                \p{Old_Turkic} (= \p{Script=Old_Turkic})
                             (NOT \p{Block=Old_Turkic}) (73)
 X \p{Ornamental_Dingbats} \p{Block=Ornamental_Dingbats} (48)
   \p{Orya}                \p{Oriya} (= \p{Script=Oriya}) (NOT
                             \p{Block=Oriya}) (90)
   \p{Osma}                \p{Osmanya} (= \p{Script=Osmanya}) (NOT
                             \p{Block=Osmanya}) (40)
   \p{Osmanya}             \p{Script=Osmanya} (Short: \p{Osma}; NOT
                             \p{Block=Osmanya}) (40)
   \p{Other}               \p{General_Category=Other} (Short: \p{C})
                             (993_590 plus all above-Unicode code
                             points)
   \p{Other_Letter}        \p{General_Category=Other_Letter} (Short:
                             \p{Lo}) (105_697)
   \p{Other_Number}        \p{General_Category=Other_Number} (Short:
                             \p{No}) (647)
   \p{Other_Punctuation}   \p{General_Category=Other_Punctuation}
                             (Short: \p{Po}) (513)
   \p{Other_Symbol}        \p{General_Category=Other_Symbol} (Short:
                             \p{So}) (5677)
   \p{P} \pP               \p{Punct} (= \p{General_Category=
                             Punctuation}) (NOT
                             \p{General_Punctuation}) (717)
   \p{Pahawh_Hmong}        \p{Script=Pahawh_Hmong} (Short: \p{Hmng};
                             NOT \p{Block=Pahawh_Hmong}) (127)
   \p{Palm}                \p{Palmyrene} (= \p{Script=Palmyrene}) (32)
   \p{Palmyrene}           \p{Script=Palmyrene} (Short: \p{Palm}) (32)
   \p{Paragraph_Separator} \p{General_Category=Paragraph_Separator}
                             (Short: \p{Zp}) (1)
   \p{Pat_Syn}             \p{Pattern_Syntax} (= \p{Pattern_Syntax=
                             Y}) (2760)
   \p{Pat_Syn: *}          \p{Pattern_Syntax: *}
   \p{Pat_WS}              \p{Pattern_White_Space} (=
                             \p{Pattern_White_Space=Y}) (11)
   \p{Pat_WS: *}           \p{Pattern_White_Space: *}
   \p{Pattern_Syntax}      \p{Pattern_Syntax=Y} (Short: \p{PatSyn})
                             (2760)
   \p{Pattern_Syntax: N*}  (Short: \p{PatSyn=N}, \P{PatSyn})
                             (1_111_352 plus all above-Unicode code
                             points)
   \p{Pattern_Syntax: Y*}  (Short: \p{PatSyn=Y}, \p{PatSyn}) (2760)
   \p{Pattern_White_Space} \p{Pattern_White_Space=Y} (Short:
                             \p{PatWS}) (11)
   \p{Pattern_White_Space: N*} (Short: \p{PatWS=N}, \P{PatWS})
                             (1_114_101 plus all above-Unicode code
                             points)
   \p{Pattern_White_Space: Y*} (Short: \p{PatWS=Y}, \p{PatWS}) (11)
   \p{Pau_Cin_Hau}         \p{Script=Pau_Cin_Hau} (Short: \p{Pauc};
                             NOT \p{Block=Pau_Cin_Hau}) (57)
   \p{Pauc}                \p{Pau_Cin_Hau} (= \p{Script=Pau_Cin_Hau})
                             (NOT \p{Block=Pau_Cin_Hau}) (57)
   \p{Pc}                  \p{Connector_Punctuation} (=
                             \p{General_Category=
                             Connector_Punctuation}) (10)
   \p{Pd}                  \p{Dash_Punctuation} (=
                             \p{General_Category=Dash_Punctuation})
                             (24)
   \p{Pe}                  \p{Close_Punctuation} (=
                             \p{General_Category=Close_Punctuation})
                             (73)
   \p{PerlSpace}           \p{PosixSpace} (6)
   \p{PerlWord}            \p{PosixWord} (63)
   \p{Perm}                \p{Old_Permic} (= \p{Script=Old_Permic})
                             (NOT \p{Block=Old_Permic}) (43)
   \p{Pf}                  \p{Final_Punctuation} (=
                             \p{General_Category=Final_Punctuation})
                             (10)
   \p{Phag}                \p{Phags_Pa} (= \p{Script=Phags_Pa}) (NOT
                             \p{Block=Phags_Pa}) (56)
   \p{Phags_Pa}            \p{Script=Phags_Pa} (Short: \p{Phag}; NOT
                             \p{Block=Phags_Pa}) (56)
 X \p{Phaistos}            \p{Phaistos_Disc} (= \p{Block=
                             Phaistos_Disc}) (48)
 X \p{Phaistos_Disc}       \p{Block=Phaistos_Disc} (Short:
                             \p{InPhaistos}) (48)
   \p{Phli}                \p{Inscriptional_Pahlavi} (= \p{Script=
                             Inscriptional_Pahlavi}) (NOT \p{Block=
                             Inscriptional_Pahlavi}) (27)
   \p{Phlp}                \p{Psalter_Pahlavi} (= \p{Script=
                             Psalter_Pahlavi}) (NOT \p{Block=
                             Psalter_Pahlavi}) (29)
   \p{Phnx}                \p{Phoenician} (= \p{Script=Phoenician})
                             (NOT \p{Block=Phoenician}) (29)
   \p{Phoenician}          \p{Script=Phoenician} (Short: \p{Phnx};
                             NOT \p{Block=Phoenician}) (29)
 X \p{Phonetic_Ext}        \p{Phonetic_Extensions} (= \p{Block=
                             Phonetic_Extensions}) (128)
 X \p{Phonetic_Ext_Sup}    \p{Phonetic_Extensions_Supplement} (=
                             \p{Block=
                             Phonetic_Extensions_Supplement}) (64)
 X \p{Phonetic_Extensions} \p{Block=Phonetic_Extensions} (Short:
                             \p{InPhoneticExt}) (128)
 X \p{Phonetic_Extensions_Supplement} \p{Block=
                             Phonetic_Extensions_Supplement} (Short:
                             \p{InPhoneticExtSup}) (64)
   \p{Pi}                  \p{Initial_Punctuation} (=
                             \p{General_Category=
                             Initial_Punctuation}) (12)
 X \p{Playing_Cards}       \p{Block=Playing_Cards} (96)
   \p{Plrd}                \p{Miao} (= \p{Script=Miao}) (NOT
                             \p{Block=Miao}) (133)
   \p{Po}                  \p{Other_Punctuation} (=
                             \p{General_Category=Other_Punctuation})
                             (513)
   \p{PosixAlnum}          [A-Za-z0-9] (62)
   \p{PosixAlpha}          [A-Za-z] (52)
   \p{PosixBlank}          \t and ' ' (2)
   \p{PosixCntrl}          ASCII control characters: NUL, SOH, STX,
                             ETX, EOT, ENQ, ACK, BEL, BS, HT, LF, VT,
                             FF, CR, SO, SI, DLE, DC1, DC2, DC3, DC4,
                             NAK, SYN, ETB, CAN, EOM, SUB, ESC, FS,
                             GS, RS, US, and DEL (33)
   \p{PosixDigit}          [0-9] (10)
   \p{PosixGraph}          [-!"#$%&'()*+,./:;<=>?@@[\\]^_`{|}~0-9A-Za-
                             z] (94)
   \p{PosixLower}          [a-z] (/i= PosixAlpha) (26)
   \p{PosixPrint}          [- 0-9A-Za-z!"#$%&'()*+,./:;<=
                             >?@@[\\]^_`{|}~] (95)
   \p{PosixPunct}          [-!"#$%&'()*+,./:;<=>?@@[\\]^_`{|}~] (32)
   \p{PosixSpace}          \t, \n, \cK, \f, \r, and ' '.  (\cK is
                             vertical tab) (Short: \p{PerlSpace}) (6)
   \p{PosixUpper}          [A-Z] (/i= PosixAlpha) (26)
   \p{PosixWord}           \w, restricted to ASCII = [A-Za-z0-9_]
                             (Short: \p{PerlWord}) (63)
   \p{PosixXDigit}         \p{ASCII_Hex_Digit=Y} [0-9A-Fa-f] (Short:
                             \p{AHex}) (22)
 T \p{Present_In: 1.1}     \p{Age=V1_1} (Short: \p{In=1.1}) (Perl
                             extension) (33_979)
 T \p{Present_In: 2.0}     Code point's usage introduced in version
                             2.0 or earlier (Short: \p{In=2.0}) (Perl
                             extension) (178_500)
 T \p{Present_In: 2.1}     Code point's usage introduced in version
                             2.1 or earlier (Short: \p{In=2.1}) (Perl
                             extension) (178_502)
 T \p{Present_In: 3.0}     Code point's usage introduced in version
                             3.0 or earlier (Short: \p{In=3.0}) (Perl
                             extension) (188_809)
 T \p{Present_In: 3.1}     Code point's usage introduced in version
                             3.1 or earlier (Short: \p{In=3.1}) (Perl
                             extension) (233_787)
 T \p{Present_In: 3.2}     Code point's usage introduced in version
                             3.2 or earlier (Short: \p{In=3.2}) (Perl
                             extension) (234_803)
 T \p{Present_In: 4.0}     Code point's usage introduced in version
                             4.0 or earlier (Short: \p{In=4.0}) (Perl
                             extension) (236_029)
 T \p{Present_In: 4.1}     Code point's usage introduced in version
                             4.1 or earlier (Short: \p{In=4.1}) (Perl
                             extension) (237_302)
 T \p{Present_In: 5.0}     Code point's usage introduced in version
                             5.0 or earlier (Short: \p{In=5.0}) (Perl
                             extension) (238_671)
 T \p{Present_In: 5.1}     Code point's usage introduced in version
                             5.1 or earlier (Short: \p{In=5.1}) (Perl
                             extension) (240_295)
 T \p{Present_In: 5.2}     Code point's usage introduced in version
                             5.2 or earlier (Short: \p{In=5.2}) (Perl
                             extension) (246_943)
 T \p{Present_In: 6.0}     Code point's usage introduced in version
                             6.0 or earlier (Short: \p{In=6.0}) (Perl
                             extension) (249_031)
 T \p{Present_In: 6.1}     Code point's usage introduced in version
                             6.1 or earlier (Short: \p{In=6.1}) (Perl
                             extension) (249_763)
 T \p{Present_In: 6.2}     Code point's usage introduced in version
                             6.2 or earlier (Short: \p{In=6.2}) (Perl
                             extension) (249_764)
 T \p{Present_In: 6.3}     Code point's usage introduced in version
                             6.3 or earlier (Short: \p{In=6.3}) (Perl
                             extension) (249_769)
 T \p{Present_In: 7.0}     Code point's usage introduced in version
                             7.0 or earlier (Short: \p{In=7.0}) (Perl
                             extension) (252_603)
 T \p{Present_In: 8.0}     Code point's usage introduced in version
                             8.0 or earlier (Short: \p{In=8.0}) (Perl
                             extension) (260_319)
   \p{Present_In: Unassigned} \p{Age=Unassigned} (Short: \p{In=
                             Unassigned}) (Perl extension) (853_793
                             plus all above-Unicode code points)
   \p{Print}               \p{XPosixPrint} (258_138)
   \p{Private_Use}         \p{General_Category=Private_Use} (Short:
                             \p{Co}; NOT \p{Private_Use_Area})
                             (137_468)
 X \p{Private_Use_Area}    \p{Block=Private_Use_Area} (Short:
                             \p{InPUA}) (6400)
   \p{Prti}                \p{Inscriptional_Parthian} (= \p{Script=
                             Inscriptional_Parthian}) (NOT \p{Block=
                             Inscriptional_Parthian}) (30)
   \p{Ps}                  \p{Open_Punctuation} (=
                             \p{General_Category=Open_Punctuation})
                             (75)
   \p{Psalter_Pahlavi}     \p{Script=Psalter_Pahlavi} (Short:
                             \p{Phlp}; NOT \p{Block=Psalter_Pahlavi})
                             (29)
 X \p{PUA}                 \p{Private_Use_Area} (= \p{Block=
                             Private_Use_Area}) (6400)
   \p{Punct}               \p{General_Category=Punctuation} (Short:
                             \p{P}; NOT \p{General_Punctuation}) (717)
   \p{Punctuation}         \p{Punct} (= \p{General_Category=
                             Punctuation}) (NOT
                             \p{General_Punctuation}) (717)
   \p{Qaac}                \p{Coptic} (= \p{Script=Coptic}) (NOT
                             \p{Block=Coptic}) (137)
   \p{Qaai}                \p{Inherited} (= \p{Script=Inherited})
                             (563)
   \p{QMark}               \p{Quotation_Mark} (= \p{Quotation_Mark=
                             Y}) (30)
   \p{QMark: *}            \p{Quotation_Mark: *}
   \p{Quotation_Mark}      \p{Quotation_Mark=Y} (Short: \p{QMark})
                             (30)
   \p{Quotation_Mark: N*}  (Short: \p{QMark=N}, \P{QMark}) (1_114_082
                             plus all above-Unicode code points)
   \p{Quotation_Mark: Y*}  (Short: \p{QMark=Y}, \p{QMark}) (30)
   \p{Radical}             \p{Radical=Y} (329)
   \p{Radical: N*}         (Single: \P{Radical}) (1_113_783 plus all
                             above-Unicode code points)
   \p{Radical: Y*}         (Single: \p{Radical}) (329)
   \p{Rejang}              \p{Script=Rejang} (Short: \p{Rjng}; NOT
                             \p{Block=Rejang}) (37)
   \p{Rjng}                \p{Rejang} (= \p{Script=Rejang}) (NOT
                             \p{Block=Rejang}) (37)
 X \p{Rumi}                \p{Rumi_Numeral_Symbols} (= \p{Block=
                             Rumi_Numeral_Symbols}) (32)
 X \p{Rumi_Numeral_Symbols} \p{Block=Rumi_Numeral_Symbols} (Short:
                             \p{InRumi}) (32)
   \p{Runic}               \p{Script=Runic} (Short: \p{Runr}; NOT
                             \p{Block=Runic}) (86)
   \p{Runr}                \p{Runic} (= \p{Script=Runic}) (NOT
                             \p{Block=Runic}) (86)
   \p{S} \pS               \p{Symbol} (= \p{General_Category=Symbol})
                             (6799)
   \p{Samaritan}           \p{Script=Samaritan} (Short: \p{Samr}; NOT
                             \p{Block=Samaritan}) (61)
   \p{Samr}                \p{Samaritan} (= \p{Script=Samaritan})
                             (NOT \p{Block=Samaritan}) (61)
   \p{Sarb}                \p{Old_South_Arabian} (= \p{Script=
                             Old_South_Arabian}) (32)
   \p{Saur}                \p{Saurashtra} (= \p{Script=Saurashtra})
                             (NOT \p{Block=Saurashtra}) (81)
   \p{Saurashtra}          \p{Script=Saurashtra} (Short: \p{Saur};
                             NOT \p{Block=Saurashtra}) (81)
   \p{SB: *}               \p{Sentence_Break: *}
   \p{Sc}                  \p{Currency_Symbol} (=
                             \p{General_Category=Currency_Symbol})
                             (53)
   \p{Sc: *}               \p{Script: *}
   \p{Script: Aghb}        \p{Script=Caucasian_Albanian} (53)
   \p{Script: Ahom}        (Short: \p{Sc=Ahom}, \p{Ahom}) (57)
   \p{Script: Anatolian_Hieroglyphs} (Short: \p{Sc=Hluw}, \p{Hluw})
                             (583)
   \p{Script: Arab}        \p{Script=Arabic} (1257)
   \p{Script: Arabic}      (Short: \p{Sc=Arab}, \p{Arab}) (1257)
   \p{Script: Armenian}    (Short: \p{Sc=Armn}, \p{Armn}) (93)
   \p{Script: Armi}        \p{Script=Imperial_Aramaic} (31)
   \p{Script: Armn}        \p{Script=Armenian} (93)
   \p{Script: Avestan}     (Short: \p{Sc=Avst}, \p{Avst}) (61)
   \p{Script: Avst}        \p{Script=Avestan} (61)
   \p{Script: Bali}        \p{Script=Balinese} (121)
   \p{Script: Balinese}    (Short: \p{Sc=Bali}, \p{Bali}) (121)
   \p{Script: Bamu}        \p{Script=Bamum} (657)
   \p{Script: Bamum}       (Short: \p{Sc=Bamu}, \p{Bamu}) (657)
   \p{Script: Bass}        \p{Script=Bassa_Vah} (36)
   \p{Script: Bassa_Vah}   (Short: \p{Sc=Bass}, \p{Bass}) (36)
   \p{Script: Batak}       (Short: \p{Sc=Batk}, \p{Batk}) (56)
   \p{Script: Batk}        \p{Script=Batak} (56)
   \p{Script: Beng}        \p{Script=Bengali} (93)
   \p{Script: Bengali}     (Short: \p{Sc=Beng}, \p{Beng}) (93)
   \p{Script: Bopo}        \p{Script=Bopomofo} (70)
   \p{Script: Bopomofo}    (Short: \p{Sc=Bopo}, \p{Bopo}) (70)
   \p{Script: Brah}        \p{Script=Brahmi} (109)
   \p{Script: Brahmi}      (Short: \p{Sc=Brah}, \p{Brah}) (109)
   \p{Script: Brai}        \p{Script=Braille} (256)
   \p{Script: Braille}     (Short: \p{Sc=Brai}, \p{Brai}) (256)
   \p{Script: Bugi}        \p{Script=Buginese} (30)
   \p{Script: Buginese}    (Short: \p{Sc=Bugi}, \p{Bugi}) (30)
   \p{Script: Buhd}        \p{Script=Buhid} (20)
   \p{Script: Buhid}       (Short: \p{Sc=Buhd}, \p{Buhd}) (20)
   \p{Script: Cakm}        \p{Script=Chakma} (67)
   \p{Script: Canadian_Aboriginal} (Short: \p{Sc=Cans}, \p{Cans})
                             (710)
   \p{Script: Cans}        \p{Script=Canadian_Aboriginal} (710)
   \p{Script: Cari}        \p{Script=Carian} (49)
   \p{Script: Carian}      (Short: \p{Sc=Cari}, \p{Cari}) (49)
   \p{Script: Caucasian_Albanian} (Short: \p{Sc=Aghb}, \p{Aghb}) (53)
   \p{Script: Chakma}      (Short: \p{Sc=Cakm}, \p{Cakm}) (67)
   \p{Script: Cham}        (Short: \p{Sc=Cham}, \p{Cham}) (83)
   \p{Script: Cher}        \p{Script=Cherokee} (172)
   \p{Script: Cherokee}    (Short: \p{Sc=Cher}, \p{Cher}) (172)
   \p{Script: Common}      (Short: \p{Sc=Zyyy}, \p{Zyyy}) (7179)
   \p{Script: Copt}        \p{Script=Coptic} (137)
   \p{Script: Coptic}      (Short: \p{Sc=Copt}, \p{Copt}) (137)
   \p{Script: Cprt}        \p{Script=Cypriot} (55)
   \p{Script: Cuneiform}   (Short: \p{Sc=Xsux}, \p{Xsux}) (1234)
   \p{Script: Cypriot}     (Short: \p{Sc=Cprt}, \p{Cprt}) (55)
   \p{Script: Cyrillic}    (Short: \p{Sc=Cyrl}, \p{Cyrl}) (434)
   \p{Script: Cyrl}        \p{Script=Cyrillic} (434)
   \p{Script: Deseret}     (Short: \p{Sc=Dsrt}, \p{Dsrt}) (80)
   \p{Script: Deva}        \p{Script=Devanagari} (154)
   \p{Script: Devanagari}  (Short: \p{Sc=Deva}, \p{Deva}) (154)
   \p{Script: Dsrt}        \p{Script=Deseret} (80)
   \p{Script: Dupl}        \p{Script=Duployan} (143)
   \p{Script: Duployan}    (Short: \p{Sc=Dupl}, \p{Dupl}) (143)
   \p{Script: Egyp}        \p{Script=Egyptian_Hieroglyphs} (1071)
   \p{Script: Egyptian_Hieroglyphs} (Short: \p{Sc=Egyp}, \p{Egyp})
                             (1071)
   \p{Script: Elba}        \p{Script=Elbasan} (40)
   \p{Script: Elbasan}     (Short: \p{Sc=Elba}, \p{Elba}) (40)
   \p{Script: Ethi}        \p{Script=Ethiopic} (495)
   \p{Script: Ethiopic}    (Short: \p{Sc=Ethi}, \p{Ethi}) (495)
   \p{Script: Geor}        \p{Script=Georgian} (127)
   \p{Script: Georgian}    (Short: \p{Sc=Geor}, \p{Geor}) (127)
   \p{Script: Glag}        \p{Script=Glagolitic} (94)
   \p{Script: Glagolitic}  (Short: \p{Sc=Glag}, \p{Glag}) (94)
   \p{Script: Goth}        \p{Script=Gothic} (27)
   \p{Script: Gothic}      (Short: \p{Sc=Goth}, \p{Goth}) (27)
   \p{Script: Gran}        \p{Script=Grantha} (85)
   \p{Script: Grantha}     (Short: \p{Sc=Gran}, \p{Gran}) (85)
   \p{Script: Greek}       (Short: \p{Sc=Grek}, \p{Grek}) (516)
   \p{Script: Grek}        \p{Script=Greek} (516)
   \p{Script: Gujarati}    (Short: \p{Sc=Gujr}, \p{Gujr}) (85)
   \p{Script: Gujr}        \p{Script=Gujarati} (85)
   \p{Script: Gurmukhi}    (Short: \p{Sc=Guru}, \p{Guru}) (79)
   \p{Script: Guru}        \p{Script=Gurmukhi} (79)
   \p{Script: Han}         (Short: \p{Sc=Han}, \p{Han}) (81_734)
   \p{Script: Hang}        \p{Script=Hangul} (11_739)
   \p{Script: Hangul}      (Short: \p{Sc=Hang}, \p{Hang}) (11_739)
   \p{Script: Hani}        \p{Script=Han} (81_734)
   \p{Script: Hano}        \p{Script=Hanunoo} (21)
   \p{Script: Hanunoo}     (Short: \p{Sc=Hano}, \p{Hano}) (21)
   \p{Script: Hatr}        \p{Script=Hatran} (26)
   \p{Script: Hatran}      (Short: \p{Sc=Hatr}, \p{Hatr}) (26)
   \p{Script: Hebr}        \p{Script=Hebrew} (133)
   \p{Script: Hebrew}      (Short: \p{Sc=Hebr}, \p{Hebr}) (133)
   \p{Script: Hira}        \p{Script=Hiragana} (91)
   \p{Script: Hiragana}    (Short: \p{Sc=Hira}, \p{Hira}) (91)
   \p{Script: Hluw}        \p{Script=Anatolian_Hieroglyphs} (583)
   \p{Script: Hmng}        \p{Script=Pahawh_Hmong} (127)
   \p{Script: Hung}        \p{Script=Old_Hungarian} (108)
   \p{Script: Imperial_Aramaic} (Short: \p{Sc=Armi}, \p{Armi}) (31)
   \p{Script: Inherited}   (Short: \p{Sc=Zinh}, \p{Zinh}) (563)
   \p{Script: Inscriptional_Pahlavi} (Short: \p{Sc=Phli}, \p{Phli})
                             (27)
   \p{Script: Inscriptional_Parthian} (Short: \p{Sc=Prti}, \p{Prti})
                             (30)
   \p{Script: Ital}        \p{Script=Old_Italic} (36)
   \p{Script: Java}        \p{Script=Javanese} (90)
   \p{Script: Javanese}    (Short: \p{Sc=Java}, \p{Java}) (90)
   \p{Script: Kaithi}      (Short: \p{Sc=Kthi}, \p{Kthi}) (66)
   \p{Script: Kali}        \p{Script=Kayah_Li} (47)
   \p{Script: Kana}        \p{Script=Katakana} (300)
   \p{Script: Kannada}     (Short: \p{Sc=Knda}, \p{Knda}) (87)
   \p{Script: Katakana}    (Short: \p{Sc=Kana}, \p{Kana}) (300)
   \p{Script: Kayah_Li}    (Short: \p{Sc=Kali}, \p{Kali}) (47)
   \p{Script: Khar}        \p{Script=Kharoshthi} (65)
   \p{Script: Kharoshthi}  (Short: \p{Sc=Khar}, \p{Khar}) (65)
   \p{Script: Khmer}       (Short: \p{Sc=Khmr}, \p{Khmr}) (146)
   \p{Script: Khmr}        \p{Script=Khmer} (146)
   \p{Script: Khoj}        \p{Script=Khojki} (61)
   \p{Script: Khojki}      (Short: \p{Sc=Khoj}, \p{Khoj}) (61)
   \p{Script: Khudawadi}   (Short: \p{Sc=Sind}, \p{Sind}) (69)
   \p{Script: Knda}        \p{Script=Kannada} (87)
   \p{Script: Kthi}        \p{Script=Kaithi} (66)
   \p{Script: Lana}        \p{Script=Tai_Tham} (127)
   \p{Script: Lao}         (Short: \p{Sc=Lao}, \p{Lao}) (67)
   \p{Script: Laoo}        \p{Script=Lao} (67)
   \p{Script: Latin}       (Short: \p{Sc=Latn}, \p{Latn}) (1349)
   \p{Script: Latn}        \p{Script=Latin} (1349)
   \p{Script: Lepc}        \p{Script=Lepcha} (74)
   \p{Script: Lepcha}      (Short: \p{Sc=Lepc}, \p{Lepc}) (74)
   \p{Script: Limb}        \p{Script=Limbu} (68)
   \p{Script: Limbu}       (Short: \p{Sc=Limb}, \p{Limb}) (68)
   \p{Script: Lina}        \p{Script=Linear_A} (341)
   \p{Script: Linb}        \p{Script=Linear_B} (211)
   \p{Script: Linear_A}    (Short: \p{Sc=Lina}, \p{Lina}) (341)
   \p{Script: Linear_B}    (Short: \p{Sc=Linb}, \p{Linb}) (211)
   \p{Script: Lisu}        (Short: \p{Sc=Lisu}, \p{Lisu}) (48)
   \p{Script: Lyci}        \p{Script=Lycian} (29)
   \p{Script: Lycian}      (Short: \p{Sc=Lyci}, \p{Lyci}) (29)
   \p{Script: Lydi}        \p{Script=Lydian} (27)
   \p{Script: Lydian}      (Short: \p{Sc=Lydi}, \p{Lydi}) (27)
   \p{Script: Mahajani}    (Short: \p{Sc=Mahj}, \p{Mahj}) (39)
   \p{Script: Mahj}        \p{Script=Mahajani} (39)
   \p{Script: Malayalam}   (Short: \p{Sc=Mlym}, \p{Mlym}) (100)
   \p{Script: Mand}        \p{Script=Mandaic} (29)
   \p{Script: Mandaic}     (Short: \p{Sc=Mand}, \p{Mand}) (29)
   \p{Script: Mani}        \p{Script=Manichaean} (51)
   \p{Script: Manichaean}  (Short: \p{Sc=Mani}, \p{Mani}) (51)
   \p{Script: Meetei_Mayek} (Short: \p{Sc=Mtei}, \p{Mtei}) (79)
   \p{Script: Mend}        \p{Script=Mende_Kikakui} (213)
   \p{Script: Mende_Kikakui} (Short: \p{Sc=Mend}, \p{Mend}) (213)
   \p{Script: Merc}        \p{Script=Meroitic_Cursive} (90)
   \p{Script: Mero}        \p{Script=Meroitic_Hieroglyphs} (32)
   \p{Script: Meroitic_Cursive} (Short: \p{Sc=Merc}, \p{Merc}) (90)
   \p{Script: Meroitic_Hieroglyphs} (Short: \p{Sc=Mero}, \p{Mero})
                             (32)
   \p{Script: Miao}        (Short: \p{Sc=Miao}, \p{Miao}) (133)
   \p{Script: Mlym}        \p{Script=Malayalam} (100)
   \p{Script: Modi}        (Short: \p{Sc=Modi}, \p{Modi}) (79)
   \p{Script: Mong}        \p{Script=Mongolian} (153)
   \p{Script: Mongolian}   (Short: \p{Sc=Mong}, \p{Mong}) (153)
   \p{Script: Mro}         (Short: \p{Sc=Mro}, \p{Mro}) (43)
   \p{Script: Mroo}        \p{Script=Mro} (43)
   \p{Script: Mtei}        \p{Script=Meetei_Mayek} (79)
   \p{Script: Mult}        \p{Script=Multani} (38)
   \p{Script: Multani}     (Short: \p{Sc=Mult}, \p{Mult}) (38)
   \p{Script: Myanmar}     (Short: \p{Sc=Mymr}, \p{Mymr}) (223)
   \p{Script: Mymr}        \p{Script=Myanmar} (223)
   \p{Script: Nabataean}   (Short: \p{Sc=Nbat}, \p{Nbat}) (40)
   \p{Script: Narb}        \p{Script=Old_North_Arabian} (32)
   \p{Script: Nbat}        \p{Script=Nabataean} (40)
   \p{Script: New_Tai_Lue} (Short: \p{Sc=Talu}, \p{Talu}) (83)
   \p{Script: Nko}         (Short: \p{Sc=Nko}, \p{Nko}) (59)
   \p{Script: Nkoo}        \p{Script=Nko} (59)
   \p{Script: Ogam}        \p{Script=Ogham} (29)
   \p{Script: Ogham}       (Short: \p{Sc=Ogam}, \p{Ogam}) (29)
   \p{Script: Ol_Chiki}    (Short: \p{Sc=Olck}, \p{Olck}) (48)
   \p{Script: Olck}        \p{Script=Ol_Chiki} (48)
   \p{Script: Old_Hungarian} (Short: \p{Sc=Hung}, \p{Hung}) (108)
   \p{Script: Old_Italic}  (Short: \p{Sc=Ital}, \p{Ital}) (36)
   \p{Script: Old_North_Arabian} (Short: \p{Sc=Narb}, \p{Narb}) (32)
   \p{Script: Old_Permic}  (Short: \p{Sc=Perm}, \p{Perm}) (43)
   \p{Script: Old_Persian} (Short: \p{Sc=Xpeo}, \p{Xpeo}) (50)
   \p{Script: Old_South_Arabian} (Short: \p{Sc=Sarb}, \p{Sarb}) (32)
   \p{Script: Old_Turkic}  (Short: \p{Sc=Orkh}, \p{Orkh}) (73)
   \p{Script: Oriya}       (Short: \p{Sc=Orya}, \p{Orya}) (90)
   \p{Script: Orkh}        \p{Script=Old_Turkic} (73)
   \p{Script: Orya}        \p{Script=Oriya} (90)
   \p{Script: Osma}        \p{Script=Osmanya} (40)
   \p{Script: Osmanya}     (Short: \p{Sc=Osma}, \p{Osma}) (40)
   \p{Script: Pahawh_Hmong} (Short: \p{Sc=Hmng}, \p{Hmng}) (127)
   \p{Script: Palm}        \p{Script=Palmyrene} (32)
   \p{Script: Palmyrene}   (Short: \p{Sc=Palm}, \p{Palm}) (32)
   \p{Script: Pau_Cin_Hau} (Short: \p{Sc=Pauc}, \p{Pauc}) (57)
   \p{Script: Pauc}        \p{Script=Pau_Cin_Hau} (57)
   \p{Script: Perm}        \p{Script=Old_Permic} (43)
   \p{Script: Phag}        \p{Script=Phags_Pa} (56)
   \p{Script: Phags_Pa}    (Short: \p{Sc=Phag}, \p{Phag}) (56)
   \p{Script: Phli}        \p{Script=Inscriptional_Pahlavi} (27)
   \p{Script: Phlp}        \p{Script=Psalter_Pahlavi} (29)
   \p{Script: Phnx}        \p{Script=Phoenician} (29)
   \p{Script: Phoenician}  (Short: \p{Sc=Phnx}, \p{Phnx}) (29)
   \p{Script: Plrd}        \p{Script=Miao} (133)
   \p{Script: Prti}        \p{Script=Inscriptional_Parthian} (30)
   \p{Script: Psalter_Pahlavi} (Short: \p{Sc=Phlp}, \p{Phlp}) (29)
   \p{Script: Qaac}        \p{Script=Coptic} (137)
   \p{Script: Qaai}        \p{Script=Inherited} (563)
   \p{Script: Rejang}      (Short: \p{Sc=Rjng}, \p{Rjng}) (37)
   \p{Script: Rjng}        \p{Script=Rejang} (37)
   \p{Script: Runic}       (Short: \p{Sc=Runr}, \p{Runr}) (86)
   \p{Script: Runr}        \p{Script=Runic} (86)
   \p{Script: Samaritan}   (Short: \p{Sc=Samr}, \p{Samr}) (61)
   \p{Script: Samr}        \p{Script=Samaritan} (61)
   \p{Script: Sarb}        \p{Script=Old_South_Arabian} (32)
   \p{Script: Saur}        \p{Script=Saurashtra} (81)
   \p{Script: Saurashtra}  (Short: \p{Sc=Saur}, \p{Saur}) (81)
   \p{Script: Sgnw}        \p{Script=SignWriting} (672)
   \p{Script: Sharada}     (Short: \p{Sc=Shrd}, \p{Shrd}) (94)
   \p{Script: Shavian}     (Short: \p{Sc=Shaw}, \p{Shaw}) (48)
   \p{Script: Shaw}        \p{Script=Shavian} (48)
   \p{Script: Shrd}        \p{Script=Sharada} (94)
   \p{Script: Sidd}        \p{Script=Siddham} (92)
   \p{Script: Siddham}     (Short: \p{Sc=Sidd}, \p{Sidd}) (92)
   \p{Script: SignWriting} (Short: \p{Sc=Sgnw}, \p{Sgnw}) (672)
   \p{Script: Sind}        \p{Script=Khudawadi} (69)
   \p{Script: Sinh}        \p{Script=Sinhala} (110)
   \p{Script: Sinhala}     (Short: \p{Sc=Sinh}, \p{Sinh}) (110)
   \p{Script: Sora}        \p{Script=Sora_Sompeng} (35)
   \p{Script: Sora_Sompeng} (Short: \p{Sc=Sora}, \p{Sora}) (35)
   \p{Script: Sund}        \p{Script=Sundanese} (72)
   \p{Script: Sundanese}   (Short: \p{Sc=Sund}, \p{Sund}) (72)
   \p{Script: Sylo}        \p{Script=Syloti_Nagri} (44)
   \p{Script: Syloti_Nagri} (Short: \p{Sc=Sylo}, \p{Sylo}) (44)
   \p{Script: Syrc}        \p{Script=Syriac} (77)
   \p{Script: Syriac}      (Short: \p{Sc=Syrc}, \p{Syrc}) (77)
   \p{Script: Tagalog}     (Short: \p{Sc=Tglg}, \p{Tglg}) (20)
   \p{Script: Tagb}        \p{Script=Tagbanwa} (18)
   \p{Script: Tagbanwa}    (Short: \p{Sc=Tagb}, \p{Tagb}) (18)
   \p{Script: Tai_Le}      (Short: \p{Sc=Tale}, \p{Tale}) (35)
   \p{Script: Tai_Tham}    (Short: \p{Sc=Lana}, \p{Lana}) (127)
   \p{Script: Tai_Viet}    (Short: \p{Sc=Tavt}, \p{Tavt}) (72)
   \p{Script: Takr}        \p{Script=Takri} (66)
   \p{Script: Takri}       (Short: \p{Sc=Takr}, \p{Takr}) (66)
   \p{Script: Tale}        \p{Script=Tai_Le} (35)
   \p{Script: Talu}        \p{Script=New_Tai_Lue} (83)
   \p{Script: Tamil}       (Short: \p{Sc=Taml}, \p{Taml}) (72)
   \p{Script: Taml}        \p{Script=Tamil} (72)
   \p{Script: Tavt}        \p{Script=Tai_Viet} (72)
   \p{Script: Telu}        \p{Script=Telugu} (96)
   \p{Script: Telugu}      (Short: \p{Sc=Telu}, \p{Telu}) (96)
   \p{Script: Tfng}        \p{Script=Tifinagh} (59)
   \p{Script: Tglg}        \p{Script=Tagalog} (20)
   \p{Script: Thaa}        \p{Script=Thaana} (50)
   \p{Script: Thaana}      (Short: \p{Sc=Thaa}, \p{Thaa}) (50)
   \p{Script: Thai}        (Short: \p{Sc=Thai}, \p{Thai}) (86)
   \p{Script: Tibetan}     (Short: \p{Sc=Tibt}, \p{Tibt}) (207)
   \p{Script: Tibt}        \p{Script=Tibetan} (207)
   \p{Script: Tifinagh}    (Short: \p{Sc=Tfng}, \p{Tfng}) (59)
   \p{Script: Tirh}        \p{Script=Tirhuta} (82)
   \p{Script: Tirhuta}     (Short: \p{Sc=Tirh}, \p{Tirh}) (82)
   \p{Script: Ugar}        \p{Script=Ugaritic} (31)
   \p{Script: Ugaritic}    (Short: \p{Sc=Ugar}, \p{Ugar}) (31)
   \p{Script: Unknown}     (Short: \p{Sc=Zzzz}, \p{Zzzz}) (993_375
                             plus all above-Unicode code points)
   \p{Script: Vai}         (Short: \p{Sc=Vai}, \p{Vai}) (300)
   \p{Script: Vaii}        \p{Script=Vai} (300)
   \p{Script: Wara}        \p{Script=Warang_Citi} (84)
   \p{Script: Warang_Citi} (Short: \p{Sc=Wara}, \p{Wara}) (84)
   \p{Script: Xpeo}        \p{Script=Old_Persian} (50)
   \p{Script: Xsux}        \p{Script=Cuneiform} (1234)
   \p{Script: Yi}          (Short: \p{Sc=Yi}, \p{Yi}) (1220)
   \p{Script: Yiii}        \p{Script=Yi} (1220)
   \p{Script: Zinh}        \p{Script=Inherited} (563)
   \p{Script: Zyyy}        \p{Script=Common} (7179)
   \p{Script: Zzzz}        \p{Script=Unknown} (993_375 plus all
                             above-Unicode code points)
   \p{Script_Extensions: Aghb} \p{Script_Extensions=
                             Caucasian_Albanian} (53)
   \p{Script_Extensions: Ahom} (Short: \p{Scx=Ahom}) (57)
   \p{Script_Extensions: Anatolian_Hieroglyphs} (Short: \p{Scx=Hluw})
                             (583)
   \p{Script_Extensions: Arab} \p{Script_Extensions=Arabic} (1301)
   \p{Script_Extensions: Arabic} (Short: \p{Scx=Arab}) (1301)
   \p{Script_Extensions: Armenian} (Short: \p{Scx=Armn}) (94)
   \p{Script_Extensions: Armi} \p{Script_Extensions=Imperial_Aramaic}
                             (31)
   \p{Script_Extensions: Armn} \p{Script_Extensions=Armenian} (94)
   \p{Script_Extensions: Avestan} (Short: \p{Scx=Avst}) (61)
   \p{Script_Extensions: Avst} \p{Script_Extensions=Avestan} (61)
   \p{Script_Extensions: Bali} \p{Script_Extensions=Balinese} (121)
   \p{Script_Extensions: Balinese} (Short: \p{Scx=Bali}) (121)
   \p{Script_Extensions: Bamu} \p{Script_Extensions=Bamum} (657)
   \p{Script_Extensions: Bamum} (Short: \p{Scx=Bamu}) (657)
   \p{Script_Extensions: Bass} \p{Script_Extensions=Bassa_Vah} (36)
   \p{Script_Extensions: Bassa_Vah} (Short: \p{Scx=Bass}) (36)
   \p{Script_Extensions: Batak} (Short: \p{Scx=Batk}) (56)
   \p{Script_Extensions: Batk} \p{Script_Extensions=Batak} (56)
   \p{Script_Extensions: Beng} \p{Script_Extensions=Bengali} (97)
   \p{Script_Extensions: Bengali} (Short: \p{Scx=Beng}) (97)
   \p{Script_Extensions: Bopo} \p{Script_Extensions=Bopomofo} (306)
   \p{Script_Extensions: Bopomofo} (Short: \p{Scx=Bopo}) (306)
   \p{Script_Extensions: Brah} \p{Script_Extensions=Brahmi} (109)
   \p{Script_Extensions: Brahmi} (Short: \p{Scx=Brah}) (109)
   \p{Script_Extensions: Brai} \p{Script_Extensions=Braille} (256)
   \p{Script_Extensions: Braille} (Short: \p{Scx=Brai}) (256)
   \p{Script_Extensions: Bugi} \p{Script_Extensions=Buginese} (31)
   \p{Script_Extensions: Buginese} (Short: \p{Scx=Bugi}) (31)
   \p{Script_Extensions: Buhd} \p{Script_Extensions=Buhid} (22)
   \p{Script_Extensions: Buhid} (Short: \p{Scx=Buhd}) (22)
   \p{Script_Extensions: Cakm} \p{Script_Extensions=Chakma} (87)
   \p{Script_Extensions: Canadian_Aboriginal} (Short: \p{Scx=Cans})
                             (710)
   \p{Script_Extensions: Cans} \p{Script_Extensions=
                             Canadian_Aboriginal} (710)
   \p{Script_Extensions: Cari} \p{Script_Extensions=Carian} (49)
   \p{Script_Extensions: Carian} (Short: \p{Scx=Cari}) (49)
   \p{Script_Extensions: Caucasian_Albanian} (Short: \p{Scx=Aghb})
                             (53)
   \p{Script_Extensions: Chakma} (Short: \p{Scx=Cakm}) (87)
   \p{Script_Extensions: Cham} (Short: \p{Scx=Cham}) (83)
   \p{Script_Extensions: Cher} \p{Script_Extensions=Cherokee} (172)
   \p{Script_Extensions: Cherokee} (Short: \p{Scx=Cher}) (172)
   \p{Script_Extensions: Common} (Short: \p{Scx=Zyyy}) (6772)
   \p{Script_Extensions: Copt} \p{Script_Extensions=Coptic} (165)
   \p{Script_Extensions: Coptic} (Short: \p{Scx=Copt}) (165)
   \p{Script_Extensions: Cprt} \p{Script_Extensions=Cypriot} (112)
   \p{Script_Extensions: Cuneiform} (Short: \p{Scx=Xsux}) (1234)
   \p{Script_Extensions: Cypriot} (Short: \p{Scx=Cprt}) (112)
   \p{Script_Extensions: Cyrillic} (Short: \p{Scx=Cyrl}) (436)
   \p{Script_Extensions: Cyrl} \p{Script_Extensions=Cyrillic} (436)
   \p{Script_Extensions: Deseret} (Short: \p{Scx=Dsrt}) (80)
   \p{Script_Extensions: Deva} \p{Script_Extensions=Devanagari} (210)
   \p{Script_Extensions: Devanagari} (Short: \p{Scx=Deva}) (210)
   \p{Script_Extensions: Dsrt} \p{Script_Extensions=Deseret} (80)
   \p{Script_Extensions: Dupl} \p{Script_Extensions=Duployan} (147)
   \p{Script_Extensions: Duployan} (Short: \p{Scx=Dupl}) (147)
   \p{Script_Extensions: Egyp} \p{Script_Extensions=
                             Egyptian_Hieroglyphs} (1071)
   \p{Script_Extensions: Egyptian_Hieroglyphs} (Short: \p{Scx=Egyp})
                             (1071)
   \p{Script_Extensions: Elba} \p{Script_Extensions=Elbasan} (40)
   \p{Script_Extensions: Elbasan} (Short: \p{Scx=Elba}) (40)
   \p{Script_Extensions: Ethi} \p{Script_Extensions=Ethiopic} (495)
   \p{Script_Extensions: Ethiopic} (Short: \p{Scx=Ethi}) (495)
   \p{Script_Extensions: Geor} \p{Script_Extensions=Georgian} (128)
   \p{Script_Extensions: Georgian} (Short: \p{Scx=Geor}) (128)
   \p{Script_Extensions: Glag} \p{Script_Extensions=Glagolitic} (96)
   \p{Script_Extensions: Glagolitic} (Short: \p{Scx=Glag}) (96)
   \p{Script_Extensions: Goth} \p{Script_Extensions=Gothic} (27)
   \p{Script_Extensions: Gothic} (Short: \p{Scx=Goth}) (27)
   \p{Script_Extensions: Gran} \p{Script_Extensions=Grantha} (113)
   \p{Script_Extensions: Grantha} (Short: \p{Scx=Gran}) (113)
   \p{Script_Extensions: Greek} (Short: \p{Scx=Grek}) (520)
   \p{Script_Extensions: Grek} \p{Script_Extensions=Greek} (520)
   \p{Script_Extensions: Gujarati} (Short: \p{Scx=Gujr}) (99)
   \p{Script_Extensions: Gujr} \p{Script_Extensions=Gujarati} (99)
   \p{Script_Extensions: Gurmukhi} (Short: \p{Scx=Guru}) (93)
   \p{Script_Extensions: Guru} \p{Script_Extensions=Gurmukhi} (93)
   \p{Script_Extensions: Han} (Short: \p{Scx=Han}) (82_007)
   \p{Script_Extensions: Hang} \p{Script_Extensions=Hangul} (11_971)
   \p{Script_Extensions: Hangul} (Short: \p{Scx=Hang}) (11_971)
   \p{Script_Extensions: Hani} \p{Script_Extensions=Han} (82_007)
   \p{Script_Extensions: Hano} \p{Script_Extensions=Hanunoo} (23)
   \p{Script_Extensions: Hanunoo} (Short: \p{Scx=Hano}) (23)
   \p{Script_Extensions: Hatr} \p{Script_Extensions=Hatran} (26)
   \p{Script_Extensions: Hatran} (Short: \p{Scx=Hatr}) (26)
   \p{Script_Extensions: Hebr} \p{Script_Extensions=Hebrew} (133)
   \p{Script_Extensions: Hebrew} (Short: \p{Scx=Hebr}) (133)
   \p{Script_Extensions: Hira} \p{Script_Extensions=Hiragana} (356)
   \p{Script_Extensions: Hiragana} (Short: \p{Scx=Hira}) (356)
   \p{Script_Extensions: Hluw} \p{Script_Extensions=
                             Anatolian_Hieroglyphs} (583)
   \p{Script_Extensions: Hmng} \p{Script_Extensions=Pahawh_Hmong}
                             (127)
   \p{Script_Extensions: Hung} \p{Script_Extensions=Old_Hungarian}
                             (108)
   \p{Script_Extensions: Imperial_Aramaic} (Short: \p{Scx=Armi}) (31)
   \p{Script_Extensions: Inherited} (Short: \p{Scx=Zinh}) (495)
   \p{Script_Extensions: Inscriptional_Pahlavi} (Short: \p{Scx=Phli})
                             (27)
   \p{Script_Extensions: Inscriptional_Parthian} (Short: \p{Scx=
                             Prti}) (30)
   \p{Script_Extensions: Ital} \p{Script_Extensions=Old_Italic} (36)
   \p{Script_Extensions: Java} \p{Script_Extensions=Javanese} (91)
   \p{Script_Extensions: Javanese} (Short: \p{Scx=Java}) (91)
   \p{Script_Extensions: Kaithi} (Short: \p{Scx=Kthi}) (86)
   \p{Script_Extensions: Kali} \p{Script_Extensions=Kayah_Li} (48)
   \p{Script_Extensions: Kana} \p{Script_Extensions=Katakana} (565)
   \p{Script_Extensions: Kannada} (Short: \p{Scx=Knda}) (93)
   \p{Script_Extensions: Katakana} (Short: \p{Scx=Kana}) (565)
   \p{Script_Extensions: Kayah_Li} (Short: \p{Scx=Kali}) (48)
   \p{Script_Extensions: Khar} \p{Script_Extensions=Kharoshthi} (65)
   \p{Script_Extensions: Kharoshthi} (Short: \p{Scx=Khar}) (65)
   \p{Script_Extensions: Khmer} (Short: \p{Scx=Khmr}) (146)
   \p{Script_Extensions: Khmr} \p{Script_Extensions=Khmer} (146)
   \p{Script_Extensions: Khoj} \p{Script_Extensions=Khojki} (71)
   \p{Script_Extensions: Khojki} (Short: \p{Scx=Khoj}) (71)
   \p{Script_Extensions: Khudawadi} (Short: \p{Scx=Sind}) (81)
   \p{Script_Extensions: Knda} \p{Script_Extensions=Kannada} (93)
   \p{Script_Extensions: Kthi} \p{Script_Extensions=Kaithi} (86)
   \p{Script_Extensions: Lana} \p{Script_Extensions=Tai_Tham} (127)
   \p{Script_Extensions: Lao} (Short: \p{Scx=Lao}) (67)
   \p{Script_Extensions: Laoo} \p{Script_Extensions=Lao} (67)
   \p{Script_Extensions: Latin} (Short: \p{Scx=Latn}) (1368)
   \p{Script_Extensions: Latn} \p{Script_Extensions=Latin} (1368)
   \p{Script_Extensions: Lepc} \p{Script_Extensions=Lepcha} (74)
   \p{Script_Extensions: Lepcha} (Short: \p{Scx=Lepc}) (74)
   \p{Script_Extensions: Limb} \p{Script_Extensions=Limbu} (69)
   \p{Script_Extensions: Limbu} (Short: \p{Scx=Limb}) (69)
   \p{Script_Extensions: Lina} \p{Script_Extensions=Linear_A} (341)
   \p{Script_Extensions: Linb} \p{Script_Extensions=Linear_B} (268)
   \p{Script_Extensions: Linear_A} (Short: \p{Scx=Lina}) (341)
   \p{Script_Extensions: Linear_B} (Short: \p{Scx=Linb}) (268)
   \p{Script_Extensions: Lisu} (Short: \p{Scx=Lisu}) (48)
   \p{Script_Extensions: Lyci} \p{Script_Extensions=Lycian} (29)
   \p{Script_Extensions: Lycian} (Short: \p{Scx=Lyci}) (29)
   \p{Script_Extensions: Lydi} \p{Script_Extensions=Lydian} (27)
   \p{Script_Extensions: Lydian} (Short: \p{Scx=Lydi}) (27)
   \p{Script_Extensions: Mahajani} (Short: \p{Scx=Mahj}) (61)
   \p{Script_Extensions: Mahj} \p{Script_Extensions=Mahajani} (61)
   \p{Script_Extensions: Malayalam} (Short: \p{Scx=Mlym}) (105)
   \p{Script_Extensions: Mand} \p{Script_Extensions=Mandaic} (30)
   \p{Script_Extensions: Mandaic} (Short: \p{Scx=Mand}) (30)
   \p{Script_Extensions: Mani} \p{Script_Extensions=Manichaean} (52)
   \p{Script_Extensions: Manichaean} (Short: \p{Scx=Mani}) (52)
   \p{Script_Extensions: Meetei_Mayek} (Short: \p{Scx=Mtei}) (79)
   \p{Script_Extensions: Mend} \p{Script_Extensions=Mende_Kikakui}
                             (213)
   \p{Script_Extensions: Mende_Kikakui} (Short: \p{Scx=Mend}) (213)
   \p{Script_Extensions: Merc} \p{Script_Extensions=Meroitic_Cursive}
                             (90)
   \p{Script_Extensions: Mero} \p{Script_Extensions=
                             Meroitic_Hieroglyphs} (32)
   \p{Script_Extensions: Meroitic_Cursive} (Short: \p{Scx=Merc}) (90)
   \p{Script_Extensions: Meroitic_Hieroglyphs} (Short: \p{Scx=Mero})
                             (32)
   \p{Script_Extensions: Miao} (Short: \p{Scx=Miao}) (133)
   \p{Script_Extensions: Mlym} \p{Script_Extensions=Malayalam} (105)
   \p{Script_Extensions: Modi} (Short: \p{Scx=Modi}) (89)
   \p{Script_Extensions: Mong} \p{Script_Extensions=Mongolian} (156)
   \p{Script_Extensions: Mongolian} (Short: \p{Scx=Mong}) (156)
   \p{Script_Extensions: Mro} (Short: \p{Scx=Mro}) (43)
   \p{Script_Extensions: Mroo} \p{Script_Extensions=Mro} (43)
   \p{Script_Extensions: Mtei} \p{Script_Extensions=Meetei_Mayek} (79)
   \p{Script_Extensions: Mult} \p{Script_Extensions=Multani} (48)
   \p{Script_Extensions: Multani} (Short: \p{Scx=Mult}) (48)
   \p{Script_Extensions: Myanmar} (Short: \p{Scx=Mymr}) (224)
   \p{Script_Extensions: Mymr} \p{Script_Extensions=Myanmar} (224)
   \p{Script_Extensions: Nabataean} (Short: \p{Scx=Nbat}) (40)
   \p{Script_Extensions: Narb} \p{Script_Extensions=
                             Old_North_Arabian} (32)
   \p{Script_Extensions: Nbat} \p{Script_Extensions=Nabataean} (40)
   \p{Script_Extensions: New_Tai_Lue} (Short: \p{Scx=Talu}) (83)
   \p{Script_Extensions: Nko} (Short: \p{Scx=Nko}) (59)
   \p{Script_Extensions: Nkoo} \p{Script_Extensions=Nko} (59)
   \p{Script_Extensions: Ogam} \p{Script_Extensions=Ogham} (29)
   \p{Script_Extensions: Ogham} (Short: \p{Scx=Ogam}) (29)
   \p{Script_Extensions: Ol_Chiki} (Short: \p{Scx=Olck}) (48)
   \p{Script_Extensions: Olck} \p{Script_Extensions=Ol_Chiki} (48)
   \p{Script_Extensions: Old_Hungarian} (Short: \p{Scx=Hung}) (108)
   \p{Script_Extensions: Old_Italic} (Short: \p{Scx=Ital}) (36)
   \p{Script_Extensions: Old_North_Arabian} (Short: \p{Scx=Narb}) (32)
   \p{Script_Extensions: Old_Permic} (Short: \p{Scx=Perm}) (44)
   \p{Script_Extensions: Old_Persian} (Short: \p{Scx=Xpeo}) (50)
   \p{Script_Extensions: Old_South_Arabian} (Short: \p{Scx=Sarb}) (32)
   \p{Script_Extensions: Old_Turkic} (Short: \p{Scx=Orkh}) (73)
   \p{Script_Extensions: Oriya} (Short: \p{Scx=Orya}) (94)
   \p{Script_Extensions: Orkh} \p{Script_Extensions=Old_Turkic} (73)
   \p{Script_Extensions: Orya} \p{Script_Extensions=Oriya} (94)
   \p{Script_Extensions: Osma} \p{Script_Extensions=Osmanya} (40)
   \p{Script_Extensions: Osmanya} (Short: \p{Scx=Osma}) (40)
   \p{Script_Extensions: Pahawh_Hmong} (Short: \p{Scx=Hmng}) (127)
   \p{Script_Extensions: Palm} \p{Script_Extensions=Palmyrene} (32)
   \p{Script_Extensions: Palmyrene} (Short: \p{Scx=Palm}) (32)
   \p{Script_Extensions: Pau_Cin_Hau} (Short: \p{Scx=Pauc}) (57)
   \p{Script_Extensions: Pauc} \p{Script_Extensions=Pau_Cin_Hau} (57)
   \p{Script_Extensions: Perm} \p{Script_Extensions=Old_Permic} (44)
   \p{Script_Extensions: Phag} \p{Script_Extensions=Phags_Pa} (59)
   \p{Script_Extensions: Phags_Pa} (Short: \p{Scx=Phag}) (59)
   \p{Script_Extensions: Phli} \p{Script_Extensions=
                             Inscriptional_Pahlavi} (27)
   \p{Script_Extensions: Phlp} \p{Script_Extensions=Psalter_Pahlavi}
                             (30)
   \p{Script_Extensions: Phnx} \p{Script_Extensions=Phoenician} (29)
   \p{Script_Extensions: Phoenician} (Short: \p{Scx=Phnx}) (29)
   \p{Script_Extensions: Plrd} \p{Script_Extensions=Miao} (133)
   \p{Script_Extensions: Prti} \p{Script_Extensions=
                             Inscriptional_Parthian} (30)
   \p{Script_Extensions: Psalter_Pahlavi} (Short: \p{Scx=Phlp}) (30)
   \p{Script_Extensions: Qaac} \p{Script_Extensions=Coptic} (165)
   \p{Script_Extensions: Qaai} \p{Script_Extensions=Inherited} (495)
   \p{Script_Extensions: Rejang} (Short: \p{Scx=Rjng}) (37)
   \p{Script_Extensions: Rjng} \p{Script_Extensions=Rejang} (37)
   \p{Script_Extensions: Runic} (Short: \p{Scx=Runr}) (86)
   \p{Script_Extensions: Runr} \p{Script_Extensions=Runic} (86)
   \p{Script_Extensions: Samaritan} (Short: \p{Scx=Samr}) (61)
   \p{Script_Extensions: Samr} \p{Script_Extensions=Samaritan} (61)
   \p{Script_Extensions: Sarb} \p{Script_Extensions=
                             Old_South_Arabian} (32)
   \p{Script_Extensions: Saur} \p{Script_Extensions=Saurashtra} (81)
   \p{Script_Extensions: Saurashtra} (Short: \p{Scx=Saur}) (81)
   \p{Script_Extensions: Sgnw} \p{Script_Extensions=SignWriting} (672)
   \p{Script_Extensions: Sharada} (Short: \p{Scx=Shrd}) (100)
   \p{Script_Extensions: Shavian} (Short: \p{Scx=Shaw}) (48)
   \p{Script_Extensions: Shaw} \p{Script_Extensions=Shavian} (48)
   \p{Script_Extensions: Shrd} \p{Script_Extensions=Sharada} (100)
   \p{Script_Extensions: Sidd} \p{Script_Extensions=Siddham} (92)
   \p{Script_Extensions: Siddham} (Short: \p{Scx=Sidd}) (92)
   \p{Script_Extensions: SignWriting} (Short: \p{Scx=Sgnw}) (672)
   \p{Script_Extensions: Sind} \p{Script_Extensions=Khudawadi} (81)
   \p{Script_Extensions: Sinh} \p{Script_Extensions=Sinhala} (112)
   \p{Script_Extensions: Sinhala} (Short: \p{Scx=Sinh}) (112)
   \p{Script_Extensions: Sora} \p{Script_Extensions=Sora_Sompeng} (35)
   \p{Script_Extensions: Sora_Sompeng} (Short: \p{Scx=Sora}) (35)
   \p{Script_Extensions: Sund} \p{Script_Extensions=Sundanese} (72)
   \p{Script_Extensions: Sundanese} (Short: \p{Scx=Sund}) (72)
   \p{Script_Extensions: Sylo} \p{Script_Extensions=Syloti_Nagri} (56)
   \p{Script_Extensions: Syloti_Nagri} (Short: \p{Scx=Sylo}) (56)
   \p{Script_Extensions: Syrc} \p{Script_Extensions=Syriac} (93)
   \p{Script_Extensions: Syriac} (Short: \p{Scx=Syrc}) (93)
   \p{Script_Extensions: Tagalog} (Short: \p{Scx=Tglg}) (22)
   \p{Script_Extensions: Tagb} \p{Script_Extensions=Tagbanwa} (20)
   \p{Script_Extensions: Tagbanwa} (Short: \p{Scx=Tagb}) (20)
   \p{Script_Extensions: Tai_Le} (Short: \p{Scx=Tale}) (45)
   \p{Script_Extensions: Tai_Tham} (Short: \p{Scx=Lana}) (127)
   \p{Script_Extensions: Tai_Viet} (Short: \p{Scx=Tavt}) (72)
   \p{Script_Extensions: Takr} \p{Script_Extensions=Takri} (78)
   \p{Script_Extensions: Takri} (Short: \p{Scx=Takr}) (78)
   \p{Script_Extensions: Tale} \p{Script_Extensions=Tai_Le} (45)
   \p{Script_Extensions: Talu} \p{Script_Extensions=New_Tai_Lue} (83)
   \p{Script_Extensions: Tamil} (Short: \p{Scx=Taml}) (78)
   \p{Script_Extensions: Taml} \p{Script_Extensions=Tamil} (78)
   \p{Script_Extensions: Tavt} \p{Script_Extensions=Tai_Viet} (72)
   \p{Script_Extensions: Telu} \p{Script_Extensions=Telugu} (101)
   \p{Script_Extensions: Telugu} (Short: \p{Scx=Telu}) (101)
   \p{Script_Extensions: Tfng} \p{Script_Extensions=Tifinagh} (59)
   \p{Script_Extensions: Tglg} \p{Script_Extensions=Tagalog} (22)
   \p{Script_Extensions: Thaa} \p{Script_Extensions=Thaana} (65)
   \p{Script_Extensions: Thaana} (Short: \p{Scx=Thaa}) (65)
   \p{Script_Extensions: Thai} (Short: \p{Scx=Thai}) (86)
   \p{Script_Extensions: Tibetan} (Short: \p{Scx=Tibt}) (207)
   \p{Script_Extensions: Tibt} \p{Script_Extensions=Tibetan} (207)
   \p{Script_Extensions: Tifinagh} (Short: \p{Scx=Tfng}) (59)
   \p{Script_Extensions: Tirh} \p{Script_Extensions=Tirhuta} (94)
   \p{Script_Extensions: Tirhuta} (Short: \p{Scx=Tirh}) (94)
   \p{Script_Extensions: Ugar} \p{Script_Extensions=Ugaritic} (31)
   \p{Script_Extensions: Ugaritic} (Short: \p{Scx=Ugar}) (31)
   \p{Script_Extensions: Unknown} (Short: \p{Scx=Zzzz}) (993_375 plus
                             all above-Unicode code points)
   \p{Script_Extensions: Vai} (Short: \p{Scx=Vai}) (300)
   \p{Script_Extensions: Vaii} \p{Script_Extensions=Vai} (300)
   \p{Script_Extensions: Wara} \p{Script_Extensions=Warang_Citi} (84)
   \p{Script_Extensions: Warang_Citi} (Short: \p{Scx=Wara}) (84)
   \p{Script_Extensions: Xpeo} \p{Script_Extensions=Old_Persian} (50)
   \p{Script_Extensions: Xsux} \p{Script_Extensions=Cuneiform} (1234)
   \p{Script_Extensions: Yi} (Short: \p{Scx=Yi}) (1246)
   \p{Script_Extensions: Yiii} \p{Script_Extensions=Yi} (1246)
   \p{Script_Extensions: Zinh} \p{Script_Extensions=Inherited} (495)
   \p{Script_Extensions: Zyyy} \p{Script_Extensions=Common} (6772)
   \p{Script_Extensions: Zzzz} \p{Script_Extensions=Unknown} (993_375
                             plus all above-Unicode code points)
   \p{Scx: *}              \p{Script_Extensions: *}
   \p{SD}                  \p{Soft_Dotted} (= \p{Soft_Dotted=Y}) (46)
   \p{SD: *}               \p{Soft_Dotted: *}
   \p{Sentence_Break: AT}  \p{Sentence_Break=ATerm} (4)
   \p{Sentence_Break: ATerm} (Short: \p{SB=AT}) (4)
   \p{Sentence_Break: CL}  \p{Sentence_Break=Close} (187)
   \p{Sentence_Break: Close} (Short: \p{SB=CL}) (187)
   \p{Sentence_Break: CR}  (Short: \p{SB=CR}) (1)
   \p{Sentence_Break: EX}  \p{Sentence_Break=Extend} (1967)
   \p{Sentence_Break: Extend} (Short: \p{SB=EX}) (1967)
   \p{Sentence_Break: FO}  \p{Sentence_Break=Format} (148)
   \p{Sentence_Break: Format} (Short: \p{SB=FO}) (148)
   \p{Sentence_Break: LE}  \p{Sentence_Break=OLetter} (106_002)
   \p{Sentence_Break: LF}  (Short: \p{SB=LF}) (1)
   \p{Sentence_Break: LO}  \p{Sentence_Break=Lower} (2172)
   \p{Sentence_Break: Lower} (Short: \p{SB=LO}) (2172)
   \p{Sentence_Break: NU}  \p{Sentence_Break=Numeric} (542)
   \p{Sentence_Break: Numeric} (Short: \p{SB=NU}) (542)
   \p{Sentence_Break: OLetter} (Short: \p{SB=LE}) (106_002)
   \p{Sentence_Break: Other} (Short: \p{SB=XX}) (1_001_140 plus all
                             above-Unicode code points)
   \p{Sentence_Break: SC}  \p{Sentence_Break=SContinue} (26)
   \p{Sentence_Break: SContinue} (Short: \p{SB=SC}) (26)
   \p{Sentence_Break: SE}  \p{Sentence_Break=Sep} (3)
   \p{Sentence_Break: Sep} (Short: \p{SB=SE}) (3)
   \p{Sentence_Break: Sp}  (Short: \p{SB=Sp}) (20)
   \p{Sentence_Break: ST}  \p{Sentence_Break=STerm} (117)
   \p{Sentence_Break: STerm} (Short: \p{SB=ST}) (117)
   \p{Sentence_Break: UP}  \p{Sentence_Break=Upper} (1782)
   \p{Sentence_Break: Upper} (Short: \p{SB=UP}) (1782)
   \p{Sentence_Break: XX}  \p{Sentence_Break=Other} (1_001_140 plus
                             all above-Unicode code points)
   \p{Separator}           \p{General_Category=Separator} (Short:
                             \p{Z}) (19)
   \p{Sgnw}                \p{SignWriting} (= \p{Script=SignWriting})
                             (672)
   \p{Sharada}             \p{Script=Sharada} (Short: \p{Shrd}; NOT
                             \p{Block=Sharada}) (94)
   \p{Shavian}             \p{Script=Shavian} (Short: \p{Shaw}) (48)
   \p{Shaw}                \p{Shavian} (= \p{Script=Shavian}) (48)
 X \p{Shorthand_Format_Controls} \p{Block=Shorthand_Format_Controls}
                             (16)
   \p{Shrd}                \p{Sharada} (= \p{Script=Sharada}) (NOT
                             \p{Block=Sharada}) (94)
   \p{Sidd}                \p{Siddham} (= \p{Script=Siddham}) (NOT
                             \p{Block=Siddham}) (92)
   \p{Siddham}             \p{Script=Siddham} (Short: \p{Sidd}; NOT
                             \p{Block=Siddham}) (92)
   \p{SignWriting}         \p{Script=SignWriting} (Short: \p{Sgnw})
                             (672)
   \p{Sind}                \p{Khudawadi} (= \p{Script=Khudawadi})
                             (NOT \p{Block=Khudawadi}) (69)
   \p{Sinh}                \p{Sinhala} (= \p{Script=Sinhala}) (NOT
                             \p{Block=Sinhala}) (110)
   \p{Sinhala}             \p{Script=Sinhala} (Short: \p{Sinh}; NOT
                             \p{Block=Sinhala}) (110)
 X \p{Sinhala_Archaic_Numbers} \p{Block=Sinhala_Archaic_Numbers} (32)
   \p{Sk}                  \p{Modifier_Symbol} (=
                             \p{General_Category=Modifier_Symbol})
                             (121)
   \p{Sm}                  \p{Math_Symbol} (= \p{General_Category=
                             Math_Symbol}) (948)
 X \p{Small_Form_Variants} \p{Block=Small_Form_Variants} (Short:
                             \p{InSmallForms}) (32)
 X \p{Small_Forms}         \p{Small_Form_Variants} (= \p{Block=
                             Small_Form_Variants}) (32)
   \p{So}                  \p{Other_Symbol} (= \p{General_Category=
                             Other_Symbol}) (5677)
   \p{Soft_Dotted}         \p{Soft_Dotted=Y} (Short: \p{SD}) (46)
   \p{Soft_Dotted: N*}     (Short: \p{SD=N}, \P{SD}) (1_114_066 plus
                             all above-Unicode code points)
   \p{Soft_Dotted: Y*}     (Short: \p{SD=Y}, \p{SD}) (46)
   \p{Sora}                \p{Sora_Sompeng} (= \p{Script=
                             Sora_Sompeng}) (NOT \p{Block=
                             Sora_Sompeng}) (35)
   \p{Sora_Sompeng}        \p{Script=Sora_Sompeng} (Short: \p{Sora};
                             NOT \p{Block=Sora_Sompeng}) (35)
   \p{Space}               \p{White_Space} (= \p{White_Space=Y}) (25)
   \p{Space: *}            \p{White_Space: *}
   \p{Space_Separator}     \p{General_Category=Space_Separator}
                             (Short: \p{Zs}) (17)
   \p{SpacePerl}           \p{XPosixSpace} (25)
   \p{Spacing_Mark}        \p{General_Category=Spacing_Mark} (Short:
                             \p{Mc}) (383)
 X \p{Spacing_Modifier_Letters} \p{Block=Spacing_Modifier_Letters}
                             (Short: \p{InModifierLetters}) (80)
 X \p{Specials}            \p{Block=Specials} (16)
   \p{STerm}               \p{STerm=Y} (120)
   \p{STerm: N*}           (Single: \P{STerm}) (1_113_992 plus all
                             above-Unicode code points)
   \p{STerm: Y*}           (Single: \p{STerm}) (120)
   \p{Sund}                \p{Sundanese} (= \p{Script=Sundanese})
                             (NOT \p{Block=Sundanese}) (72)
   \p{Sundanese}           \p{Script=Sundanese} (Short: \p{Sund}; NOT
                             \p{Block=Sundanese}) (72)
 X \p{Sundanese_Sup}       \p{Sundanese_Supplement} (= \p{Block=
                             Sundanese_Supplement}) (16)
 X \p{Sundanese_Supplement} \p{Block=Sundanese_Supplement} (Short:
                             \p{InSundaneseSup}) (16)
 X \p{Sup_Arrows_A}        \p{Supplemental_Arrows_A} (= \p{Block=
                             Supplemental_Arrows_A}) (16)
 X \p{Sup_Arrows_B}        \p{Supplemental_Arrows_B} (= \p{Block=
                             Supplemental_Arrows_B}) (128)
 X \p{Sup_Arrows_C}        \p{Supplemental_Arrows_C} (= \p{Block=
                             Supplemental_Arrows_C}) (256)
 X \p{Sup_Math_Operators}  \p{Supplemental_Mathematical_Operators} (=
                             \p{Block=
                             Supplemental_Mathematical_Operators})
                             (256)
 X \p{Sup_PUA_A}           \p{Supplementary_Private_Use_Area_A} (=
                             \p{Block=
                             Supplementary_Private_Use_Area_A})
                             (65_536)
 X \p{Sup_PUA_B}           \p{Supplementary_Private_Use_Area_B} (=
                             \p{Block=
                             Supplementary_Private_Use_Area_B})
                             (65_536)
 X \p{Sup_Punctuation}     \p{Supplemental_Punctuation} (= \p{Block=
                             Supplemental_Punctuation}) (128)
 X \p{Sup_Symbols_And_Pictographs}
                             \p{Supplemental_Symbols_And_Pictographs}
                             (= \p{Block=
                             Supplemental_Symbols_And_Pictographs})
                             (256)
 X \p{Super_And_Sub}       \p{Superscripts_And_Subscripts} (=
                             \p{Block=Superscripts_And_Subscripts})
                             (48)
 X \p{Superscripts_And_Subscripts} \p{Block=
                             Superscripts_And_Subscripts} (Short:
                             \p{InSuperAndSub}) (48)
 X \p{Supplemental_Arrows_A} \p{Block=Supplemental_Arrows_A} (Short:
                             \p{InSupArrowsA}) (16)
 X \p{Supplemental_Arrows_B} \p{Block=Supplemental_Arrows_B} (Short:
                             \p{InSupArrowsB}) (128)
 X \p{Supplemental_Arrows_C} \p{Block=Supplemental_Arrows_C} (Short:
                             \p{InSupArrowsC}) (256)
 X \p{Supplemental_Mathematical_Operators} \p{Block=
                             Supplemental_Mathematical_Operators}
                             (Short: \p{InSupMathOperators}) (256)
 X \p{Supplemental_Punctuation} \p{Block=Supplemental_Punctuation}
                             (Short: \p{InSupPunctuation}) (128)
 X \p{Supplemental_Symbols_And_Pictographs} \p{Block=
                             Supplemental_Symbols_And_Pictographs}
                             (Short: \p{InSupSymbolsAndPictographs})
                             (256)
 X \p{Supplementary_Private_Use_Area_A} \p{Block=
                             Supplementary_Private_Use_Area_A}
                             (Short: \p{InSupPUAA}) (65_536)
 X \p{Supplementary_Private_Use_Area_B} \p{Block=
                             Supplementary_Private_Use_Area_B}
                             (Short: \p{InSupPUAB}) (65_536)
   \p{Surrogate}           \p{General_Category=Surrogate} (Short:
                             \p{Cs}) (2048)
 X \p{Sutton_SignWriting}  \p{Block=Sutton_SignWriting} (688)
   \p{Sylo}                \p{Syloti_Nagri} (= \p{Script=
                             Syloti_Nagri}) (NOT \p{Block=
                             Syloti_Nagri}) (44)
   \p{Syloti_Nagri}        \p{Script=Syloti_Nagri} (Short: \p{Sylo};
                             NOT \p{Block=Syloti_Nagri}) (44)
   \p{Symbol}              \p{General_Category=Symbol} (Short: \p{S})
                             (6799)
   \p{Syrc}                \p{Syriac} (= \p{Script=Syriac}) (NOT
                             \p{Block=Syriac}) (77)
   \p{Syriac}              \p{Script=Syriac} (Short: \p{Syrc}; NOT
                             \p{Block=Syriac}) (77)
   \p{Tagalog}             \p{Script=Tagalog} (Short: \p{Tglg}; NOT
                             \p{Block=Tagalog}) (20)
   \p{Tagb}                \p{Tagbanwa} (= \p{Script=Tagbanwa}) (NOT
                             \p{Block=Tagbanwa}) (18)
   \p{Tagbanwa}            \p{Script=Tagbanwa} (Short: \p{Tagb}; NOT
                             \p{Block=Tagbanwa}) (18)
 X \p{Tags}                \p{Block=Tags} (128)
   \p{Tai_Le}              \p{Script=Tai_Le} (Short: \p{Tale}; NOT
                             \p{Block=Tai_Le}) (35)
   \p{Tai_Tham}            \p{Script=Tai_Tham} (Short: \p{Lana}; NOT
                             \p{Block=Tai_Tham}) (127)
   \p{Tai_Viet}            \p{Script=Tai_Viet} (Short: \p{Tavt}; NOT
                             \p{Block=Tai_Viet}) (72)
 X \p{Tai_Xuan_Jing}       \p{Tai_Xuan_Jing_Symbols} (= \p{Block=
                             Tai_Xuan_Jing_Symbols}) (96)
 X \p{Tai_Xuan_Jing_Symbols} \p{Block=Tai_Xuan_Jing_Symbols} (Short:
                             \p{InTaiXuanJing}) (96)
   \p{Takr}                \p{Takri} (= \p{Script=Takri}) (NOT
                             \p{Block=Takri}) (66)
   \p{Takri}               \p{Script=Takri} (Short: \p{Takr}; NOT
                             \p{Block=Takri}) (66)
   \p{Tale}                \p{Tai_Le} (= \p{Script=Tai_Le}) (NOT
                             \p{Block=Tai_Le}) (35)
   \p{Talu}                \p{New_Tai_Lue} (= \p{Script=New_Tai_Lue})
                             (NOT \p{Block=New_Tai_Lue}) (83)
   \p{Tamil}               \p{Script=Tamil} (Short: \p{Taml}; NOT
                             \p{Block=Tamil}) (72)
   \p{Taml}                \p{Tamil} (= \p{Script=Tamil}) (NOT
                             \p{Block=Tamil}) (72)
   \p{Tavt}                \p{Tai_Viet} (= \p{Script=Tai_Viet}) (NOT
                             \p{Block=Tai_Viet}) (72)
   \p{Telu}                \p{Telugu} (= \p{Script=Telugu}) (NOT
                             \p{Block=Telugu}) (96)
   \p{Telugu}              \p{Script=Telugu} (Short: \p{Telu}; NOT
                             \p{Block=Telugu}) (96)
   \p{Term}                \p{Terminal_Punctuation} (=
                             \p{Terminal_Punctuation=Y}) (238)
   \p{Term: *}             \p{Terminal_Punctuation: *}
   \p{Terminal_Punctuation} \p{Terminal_Punctuation=Y} (Short:
                             \p{Term}) (238)
   \p{Terminal_Punctuation: N*} (Short: \p{Term=N}, \P{Term})
                             (1_113_874 plus all above-Unicode code
                             points)
   \p{Terminal_Punctuation: Y*} (Short: \p{Term=Y}, \p{Term}) (238)
   \p{Tfng}                \p{Tifinagh} (= \p{Script=Tifinagh}) (NOT
                             \p{Block=Tifinagh}) (59)
   \p{Tglg}                \p{Tagalog} (= \p{Script=Tagalog}) (NOT
                             \p{Block=Tagalog}) (20)
   \p{Thaa}                \p{Thaana} (= \p{Script=Thaana}) (NOT
                             \p{Block=Thaana}) (50)
   \p{Thaana}              \p{Script=Thaana} (Short: \p{Thaa}; NOT
                             \p{Block=Thaana}) (50)
   \p{Thai}                \p{Script=Thai} (NOT \p{Block=Thai}) (86)
   \p{Tibetan}             \p{Script=Tibetan} (Short: \p{Tibt}; NOT
                             \p{Block=Tibetan}) (207)
   \p{Tibt}                \p{Tibetan} (= \p{Script=Tibetan}) (NOT
                             \p{Block=Tibetan}) (207)
   \p{Tifinagh}            \p{Script=Tifinagh} (Short: \p{Tfng}; NOT
                             \p{Block=Tifinagh}) (59)
   \p{Tirh}                \p{Tirhuta} (= \p{Script=Tirhuta}) (NOT
                             \p{Block=Tirhuta}) (82)
   \p{Tirhuta}             \p{Script=Tirhuta} (Short: \p{Tirh}; NOT
                             \p{Block=Tirhuta}) (82)
   \p{Title}               \p{Titlecase} (/i= Cased=Yes) (31)
   \p{Titlecase}           (= \p{Gc=Lt}) (Short: \p{Title}; /i=
                             Cased=Yes) (31)
   \p{Titlecase_Letter}    \p{General_Category=Titlecase_Letter}
                             (Short: \p{Lt}; /i= General_Category=
                             Cased_Letter) (31)
 X \p{Transport_And_Map}   \p{Transport_And_Map_Symbols} (= \p{Block=
                             Transport_And_Map_Symbols}) (128)
 X \p{Transport_And_Map_Symbols} \p{Block=Transport_And_Map_Symbols}
                             (Short: \p{InTransportAndMap}) (128)
 X \p{UCAS}                \p{Unified_Canadian_Aboriginal_Syllabics}
                             (= \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics})
                             (640)
 X \p{UCAS_Ext}            \p{Unified_Canadian_Aboriginal_Syllabics_-
                             Extended} (= \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended}) (80)
   \p{Ugar}                \p{Ugaritic} (= \p{Script=Ugaritic}) (NOT
                             \p{Block=Ugaritic}) (31)
   \p{Ugaritic}            \p{Script=Ugaritic} (Short: \p{Ugar}; NOT
                             \p{Block=Ugaritic}) (31)
   \p{UIdeo}               \p{Unified_Ideograph} (=
                             \p{Unified_Ideograph=Y}) (80_388)
   \p{UIdeo: *}            \p{Unified_Ideograph: *}
   \p{Unassigned}          \p{General_Category=Unassigned} (Short:
                             \p{Cn}) (853_859 plus all above-Unicode
                             code points)
   \p{Unicode}             \p{Any} (1_114_112)
 X \p{Unified_Canadian_Aboriginal_Syllabics} \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics}
                             (Short: \p{InUCAS}) (640)
 X \p{Unified_Canadian_Aboriginal_Syllabics_Extended} \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended} (Short: \p{InUCASExt}) (80)
   \p{Unified_Ideograph}   \p{Unified_Ideograph=Y} (Short: \p{UIdeo})
                             (80_388)
   \p{Unified_Ideograph: N*} (Short: \p{UIdeo=N}, \P{UIdeo})
                             (1_033_724 plus all above-Unicode code
                             points)
   \p{Unified_Ideograph: Y*} (Short: \p{UIdeo=Y}, \p{UIdeo}) (80_388)
   \p{Unknown}             \p{Script=Unknown} (Short: \p{Zzzz})
                             (993_375 plus all above-Unicode code
                             points)
   \p{Upper}               \p{XPosixUpper} (= \p{Uppercase=Y}) (/i=
                             Cased=Yes) (1751)
   \p{Upper: *}            \p{Uppercase: *}
   \p{Uppercase}           \p{XPosixUpper} (= \p{Uppercase=Y}) (/i=
                             Cased=Yes) (1751)
   \p{Uppercase: N*}       (Short: \p{Upper=N}, \P{Upper}; /i= Cased=
                             No) (1_112_361 plus all above-Unicode
                             code points)
   \p{Uppercase: Y*}       (Short: \p{Upper=Y}, \p{Upper}; /i= Cased=
                             Yes) (1751)
   \p{Uppercase_Letter}    \p{General_Category=Uppercase_Letter}
                             (Short: \p{Lu}; /i= General_Category=
                             Cased_Letter) (1631)
   \p{Vai}                 \p{Script=Vai} (NOT \p{Block=Vai}) (300)
   \p{Vaii}                \p{Vai} (= \p{Script=Vai}) (NOT \p{Block=
                             Vai}) (300)
   \p{Variation_Selector}  \p{Variation_Selector=Y} (Short: \p{VS};
                             NOT \p{Variation_Selectors}) (259)
   \p{Variation_Selector: N*} (Short: \p{VS=N}, \P{VS}) (1_113_853
                             plus all above-Unicode code points)
   \p{Variation_Selector: Y*} (Short: \p{VS=Y}, \p{VS}) (259)
 X \p{Variation_Selectors} \p{Block=Variation_Selectors} (Short:
                             \p{InVS}) (16)
 X \p{Variation_Selectors_Supplement} \p{Block=
                             Variation_Selectors_Supplement} (Short:
                             \p{InVSSup}) (240)
 X \p{Vedic_Ext}           \p{Vedic_Extensions} (= \p{Block=
                             Vedic_Extensions}) (48)
 X \p{Vedic_Extensions}    \p{Block=Vedic_Extensions} (Short:
                             \p{InVedicExt}) (48)
 X \p{Vertical_Forms}      \p{Block=Vertical_Forms} (16)
   \p{VertSpace}           \v (7)
   \p{VS}                  \p{Variation_Selector} (=
                             \p{Variation_Selector=Y}) (NOT
                             \p{Variation_Selectors}) (259)
   \p{VS: *}               \p{Variation_Selector: *}
 X \p{VS_Sup}              \p{Variation_Selectors_Supplement} (=
                             \p{Block=
                             Variation_Selectors_Supplement}) (240)
   \p{Wara}                \p{Warang_Citi} (= \p{Script=Warang_Citi})
                             (NOT \p{Block=Warang_Citi}) (84)
   \p{Warang_Citi}         \p{Script=Warang_Citi} (Short: \p{Wara};
                             NOT \p{Block=Warang_Citi}) (84)
   \p{WB: *}               \p{Word_Break: *}
   \p{White_Space}         \p{White_Space=Y} (Short: \p{Space}) (25)
   \p{White_Space: N*}     (Short: \p{Space=N}, \P{Space}) (1_114_087
                             plus all above-Unicode code points)
   \p{White_Space: Y*}     (Short: \p{Space=Y}, \p{Space}) (25)
   \p{Word}                \p{XPosixWord} (112_482)
   \p{Word_Break: ALetter} (Short: \p{WB=LE}) (27_697)
   \p{Word_Break: CR}      (Short: \p{WB=CR}) (1)
   \p{Word_Break: Double_Quote} (Short: \p{WB=DQ}) (1)
   \p{Word_Break: DQ}      \p{Word_Break=Double_Quote} (1)
   \p{Word_Break: EX}      \p{Word_Break=ExtendNumLet} (10)
   \p{Word_Break: Extend}  (Short: \p{WB=Extend}) (1967)
   \p{Word_Break: ExtendNumLet} (Short: \p{WB=EX}) (10)
   \p{Word_Break: FO}      \p{Word_Break=Format} (147)
   \p{Word_Break: Format}  (Short: \p{WB=FO}) (147)
   \p{Word_Break: Hebrew_Letter} (Short: \p{WB=HL}) (74)
   \p{Word_Break: HL}      \p{Word_Break=Hebrew_Letter} (74)
   \p{Word_Break: KA}      \p{Word_Break=Katakana} (310)
   \p{Word_Break: Katakana} (Short: \p{WB=KA}) (310)
   \p{Word_Break: LE}      \p{Word_Break=ALetter} (27_697)
   \p{Word_Break: LF}      (Short: \p{WB=LF}) (1)
   \p{Word_Break: MB}      \p{Word_Break=MidNumLet} (7)
   \p{Word_Break: MidLetter} (Short: \p{WB=ML}) (9)
   \p{Word_Break: MidNum}  (Short: \p{WB=MN}) (15)
   \p{Word_Break: MidNumLet} (Short: \p{WB=MB}) (7)
   \p{Word_Break: ML}      \p{Word_Break=MidLetter} (9)
   \p{Word_Break: MN}      \p{Word_Break=MidNum} (15)
   \p{Word_Break: Newline} (Short: \p{WB=NL}) (5)
   \p{Word_Break: NL}      \p{Word_Break=Newline} (5)
   \p{Word_Break: NU}      \p{Word_Break=Numeric} (541)
   \p{Word_Break: Numeric} (Short: \p{WB=NU}) (541)
   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_083_300 plus all
                             above-Unicode code points)
   \p{Word_Break: Regional_Indicator} (Short: \p{WB=RI}) (26)
   \p{Word_Break: RI}      \p{Word_Break=Regional_Indicator} (26)
   \p{Word_Break: Single_Quote} (Short: \p{WB=SQ}) (1)
   \p{Word_Break: SQ}      \p{Word_Break=Single_Quote} (1)
   \p{Word_Break: XX}      \p{Word_Break=Other} (1_083_300 plus all
                             above-Unicode code points)
   \p{WSpace}              \p{White_Space} (= \p{White_Space=Y}) (25)
   \p{WSpace: *}           \p{White_Space: *}
   \p{XDigit}              \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)
   \p{XID_Continue}        \p{XID_Continue=Y} (Short: \p{XIDC})
                             (112_333)
   \p{XID_Continue: N*}    (Short: \p{XIDC=N}, \P{XIDC}) (1_001_779
                             plus all above-Unicode code points)
   \p{XID_Continue: Y*}    (Short: \p{XIDC=Y}, \p{XIDC}) (112_333)
   \p{XID_Start}           \p{XID_Start=Y} (Short: \p{XIDS}) (109_807)
   \p{XID_Start: N*}       (Short: \p{XIDS=N}, \P{XIDS}) (1_004_305
                             plus all above-Unicode code points)
   \p{XID_Start: Y*}       (Short: \p{XIDS=Y}, \p{XIDS}) (109_807)
   \p{XIDC}                \p{XID_Continue} (= \p{XID_Continue=Y})
                             (112_333)
   \p{XIDC: *}             \p{XID_Continue: *}
   \p{XIDS}                \p{XID_Start} (= \p{XID_Start=Y}) (109_807)
   \p{XIDS: *}             \p{XID_Start: *}
   \p{Xpeo}                \p{Old_Persian} (= \p{Script=Old_Persian})
                             (NOT \p{Block=Old_Persian}) (50)
   \p{XPerlSpace}          \p{XPosixSpace} (25)
   \p{XPosixAlnum}         Alphabetic and (decimal) Numeric (Short:
                             \p{Alnum}) (111_493)
   \p{XPosixAlpha}         \p{Alphabetic=Y} (Short: \p{Alpha})
                             (110_943)
   \p{XPosixBlank}         \h, Horizontal white space (Short:
                             \p{Blank}) (18)
   \p{XPosixCntrl}         \p{General_Category=Control} Control
                             characters (Short: \p{Cc}) (65)
   \p{XPosixDigit}         \p{General_Category=Decimal_Number} [0-9]
                             + all other decimal digits (Short:
                             \p{Nd}) (550)
   \p{XPosixGraph}         Characters that are graphical (Short:
                             \p{Graph}) (258_121)
   \p{XPosixLower}         \p{Lowercase=Y} (Short: \p{Lower}; /i=
                             Cased=Yes) (2173)
   \p{XPosixPrint}         Characters that are graphical plus space
                             characters (but no controls) (Short:
                             \p{Print}) (258_138)
   \p{XPosixPunct}         \p{Punct} + ASCII-range \p{Symbol} (726)
   \p{XPosixSpace}         \s including beyond ASCII and vertical tab
                             (Short: \p{SpacePerl}) (25)
   \p{XPosixUpper}         \p{Uppercase=Y} (Short: \p{Upper}; /i=
                             Cased=Yes) (1751)
   \p{XPosixWord}          \w, including beyond ASCII; = \p{Alnum} +
                             \pM + \p{Pc} (Short: \p{Word}) (112_482)
   \p{XPosixXDigit}        \p{Hex_Digit=Y} (Short: \p{Hex}) (44)
   \p{Xsux}                \p{Cuneiform} (= \p{Script=Cuneiform})
                             (NOT \p{Block=Cuneiform}) (1234)
   \p{Yi}                  \p{Script=Yi} (1220)
 X \p{Yi_Radicals}         \p{Block=Yi_Radicals} (64)
 X \p{Yi_Syllables}        \p{Block=Yi_Syllables} (1168)
   \p{Yiii}                \p{Yi} (= \p{Script=Yi}) (1220)
 X \p{Yijing}              \p{Yijing_Hexagram_Symbols} (= \p{Block=
                             Yijing_Hexagram_Symbols}) (64)
 X \p{Yijing_Hexagram_Symbols} \p{Block=Yijing_Hexagram_Symbols}
                             (Short: \p{InYijing}) (64)
   \p{Z} \pZ               \p{Separator} (= \p{General_Category=
                             Separator}) (19)
   \p{Zinh}                \p{Inherited} (= \p{Script=Inherited})
                             (563)
   \p{Zl}                  \p{Line_Separator} (= \p{General_Category=
                             Line_Separator}) (1)
   \p{Zp}                  \p{Paragraph_Separator} (=
                             \p{General_Category=
                             Paragraph_Separator}) (1)
   \p{Zs}                  \p{Space_Separator} (=
                             \p{General_Category=Space_Separator})
                             (17)
   \p{Zyyy}                \p{Common} (= \p{Script=Common}) (7179)
   \p{Zzzz}                \p{Unknown} (= \p{Script=Unknown})
                             (993_375 plus all above-Unicode code
                             points)
 TX\p{_CanonDCIJ}          (For internal use by Perl, not necessarily
                             stable) (= \p{Soft_Dotted=Y}) (46)
 TX\p{_Case_Ignorable}     (For internal use by Perl, not necessarily
                             stable) (= \p{Case_Ignorable=Y}) (2115)
 TX\p{_CombAbove}          (For internal use by Perl, not necessarily
                             stable) (= \p{Canonical_Combining_Class=
                             Above}) (402)



=head2 Legal C<\p{}> and C<\P{}> constructs that match no characters

Unicode has some property-value pairs that currently don't match anything.
This happens generally either because they are obsolete, or they exist for
symmetry with other forms, but no language has yet been encoded that uses
them.  In this version of Unicode, the following match zero code points:

=over 4

=item \p{Canonical_Combining_Class=Attached_Below_Left}

=item \p{Canonical_Combining_Class=CCC133}

=item \p{Grapheme_Cluster_Break=Prepend}

=back



=head1 Properties accessible through Unicode::UCD

The value of any Unicode (not including Perl extensions) character
property mentioned above for any single code point is available through
L<Unicode::UCD/charprop()>.  L<Unicode::UCD/charprops_all()> returns the
values of all the Unicode properties for a given code point.

Besides these, all the Unicode character properties mentioned above
(except for those marked as for internal use by Perl) are also
accessible by L<Unicode::UCD/prop_invlist()>.

Due to their nature, not all Unicode character properties are suitable for
regular expression matches, nor C<prop_invlist()>.  The remaining
non-provisional, non-internal ones are accessible via
L<Unicode::UCD/prop_invmap()> (except for those that this Perl installation
hasn't included; see L<below for which those are|/Unicode character properties
that are NOT accepted by Perl>).

For compatibility with other parts of Perl, all the single forms given in the
table in the L<section above|/Properties accessible through \p{} and \P{}>
are recognized.  BUT, there are some ambiguities between some Perl extensions
and the Unicode properties, all of which are silently resolved in favor of the
official Unicode property.  To avoid surprises, you should only use
C<prop_invmap()> for forms listed in the table below, which omits the
non-recommended ones.  The affected forms are the Perl single form equivalents
of Unicode properties, such as C<\p{sc}> being a single-form equivalent of
C<\p{gc=sc}>, which is treated by C<prop_invmap()> as the C<Script> property,
whose short name is C<sc>.  The table indicates the current ambiguities in the
INFO column, beginning with the word C<"NOT">.

The standard Unicode properties listed below are documented in
L<http://www.unicode.org/reports/tr44/>; Perl_Decimal_Digit is documented in
L<Unicode::UCD/prop_invmap()>.  The other Perl extensions are in
L<perlunicode/Other Properties>;

The first column in the table is a name for the property; the second column is
an alternative name, if any, plus possibly some annotations.  The alternative
name is the property's full name, unless that would simply repeat the first
column, in which case the second column indicates the property's short name
(if different).  The annotations are given only in the entry for the full
name.  If a property is obsolete, etc, the entry will be flagged with the same
characters used in the table in the L<section above|/Properties accessible
through \p{} and \P{}>, like B<D> or B<S>.

   NAME                      INFO

   Age
   AHex                    ASCII_Hex_Digit
   All                     (Perl extension).  All code points,
                           including those above Unicode.  Same as
                           qr/./s
   Alnum                   XPosixAlnum.  (Perl extension)
   Alpha                   Alphabetic
   Alphabetic              (Short: Alpha)
   Any                     (Perl extension).  All Unicode code
                           points: [\x{0000}-\x{10FFFF}]
   ASCII                   Block=ASCII.  (Perl extension).
                           [[:ASCII:]]
   ASCII_Hex_Digit         (Short: AHex)
   Assigned                (Perl extension).  All assigned code points
   Bc                      Bidi_Class
   Bidi_C                  Bidi_Control
   Bidi_Class              (Short: bc)
   Bidi_Control            (Short: Bidi_C)
   Bidi_M                  Bidi_Mirrored
   Bidi_Mirrored           (Short: Bidi_M)
   Bidi_Mirroring_Glyph    (Short: bmg)
   Bidi_Paired_Bracket     (Short: bpb)
   Bidi_Paired_Bracket_Type (Short: bpt)
   Blank                   XPosixBlank.  (Perl extension)
   Blk                     Block
   Block                   (Short: blk)
   Bmg                     Bidi_Mirroring_Glyph
   Bpb                     Bidi_Paired_Bracket
   Bpt                     Bidi_Paired_Bracket_Type
   Canonical_Combining_Class (Short: ccc)
   Case_Folding            (Short: cf)
   Case_Ignorable          (Short: CI)
   Cased
   Category                General_Category
   Ccc                     Canonical_Combining_Class
   CE                      Composition_Exclusion
   Cf                      Case_Folding; NOT 'cf' meaning
                           'General_Category=Format'
   Changes_When_Casefolded (Short: CWCF)
   Changes_When_Casemapped (Short: CWCM)
   Changes_When_Lowercased (Short: CWL)
   Changes_When_NFKC_Casefolded (Short: CWKCF)
   Changes_When_Titlecased (Short: CWT)
   Changes_When_Uppercased (Short: CWU)
   CI                      Case_Ignorable
   Cntrl                   General_Category=XPosixCntrl.  (Perl
                           extension)
   Comp_Ex                 Full_Composition_Exclusion
   Composition_Exclusion   (Short: CE)
   CWCF                    Changes_When_Casefolded
   CWCM                    Changes_When_Casemapped
   CWKCF                   Changes_When_NFKC_Casefolded
   CWL                     Changes_When_Lowercased
   CWT                     Changes_When_Titlecased
   CWU                     Changes_When_Uppercased
   Dash
   Decomposition_Mapping   (Short: dm)
   Decomposition_Type      (Short: dt)
   Default_Ignorable_Code_Point (Short: DI)
   Dep                     Deprecated
   Deprecated              (Short: Dep)
   DI                      Default_Ignorable_Code_Point
   Dia                     Diacritic
   Diacritic               (Short: Dia)
   Digit                   General_Category=XPosixDigit.  (Perl
                           extension)
   Dm                      Decomposition_Mapping
   Dt                      Decomposition_Type
   Ea                      East_Asian_Width
   East_Asian_Width        (Short: ea)
   Ext                     Extender
   Extender                (Short: Ext)
   Full_Composition_Exclusion (Short: Comp_Ex)
   Gc                      General_Category
   GCB                     Grapheme_Cluster_Break
   General_Category        (Short: gc)
   Gr_Base                 Grapheme_Base
   Gr_Ext                  Grapheme_Extend
   Graph                   XPosixGraph.  (Perl extension)
   Grapheme_Base           (Short: Gr_Base)
   Grapheme_Cluster_Break  (Short: GCB)
   Grapheme_Extend         (Short: Gr_Ext)
   Hangul_Syllable_Type    (Short: hst)
   Hex                     Hex_Digit
   Hex_Digit               (Short: Hex)
   HorizSpace              XPosixBlank.  (Perl extension)
   Hst                     Hangul_Syllable_Type
 D Hyphen                  Supplanted by Line_Break property values;
                           see www.unicode.org/reports/tr14
   ID_Continue             (Short: IDC)
   ID_Start                (Short: IDS)
   IDC                     ID_Continue
   Ideo                    Ideographic
   Ideographic             (Short: Ideo)
   IDS                     ID_Start
   IDS_Binary_Operator     (Short: IDSB)
   IDS_Trinary_Operator    (Short: IDST)
   IDSB                    IDS_Binary_Operator
   IDST                    IDS_Trinary_Operator
   In                      Present_In.  (Perl extension)
   Indic_Positional_Category (Short: InPC)
   Indic_Syllabic_Category (Short: InSC)
   InPC                    Indic_Positional_Category
   InSC                    Indic_Syllabic_Category
   Isc                     ISO_Comment; NOT 'isc' meaning
                           'General_Category=Other'
   ISO_Comment             (Short: isc)
   Jg                      Joining_Group
   Join_C                  Join_Control
   Join_Control            (Short: Join_C)
   Joining_Group           (Short: jg)
   Joining_Type            (Short: jt)
   Jt                      Joining_Type
   Lb                      Line_Break
   Lc                      Lowercase_Mapping; NOT 'lc' meaning
                           'General_Category=Cased_Letter'
   Line_Break              (Short: lb)
   LOE                     Logical_Order_Exception
   Logical_Order_Exception (Short: LOE)
   Lower                   Lowercase
   Lowercase               (Short: Lower)
   Lowercase_Mapping       (Short: lc)
   Math
   Na                      Name
   Na1                     Unicode_1_Name
   Name                    (Short: na)
   Name_Alias
   NChar                   Noncharacter_Code_Point
   NFC_QC                  NFC_Quick_Check
   NFC_Quick_Check         (Short: NFC_QC)
   NFD_QC                  NFD_Quick_Check
   NFD_Quick_Check         (Short: NFD_QC)
   NFKC_Casefold           (Short: NFKC_CF)
   NFKC_CF                 NFKC_Casefold
   NFKC_QC                 NFKC_Quick_Check
   NFKC_Quick_Check        (Short: NFKC_QC)
   NFKD_QC                 NFKD_Quick_Check
   NFKD_Quick_Check        (Short: NFKD_QC)
   Noncharacter_Code_Point (Short: NChar)
   Nt                      Numeric_Type
   Numeric_Type            (Short: nt)
   Numeric_Value           (Short: nv)
   Nv                      Numeric_Value
   Pat_Syn                 Pattern_Syntax
   Pat_WS                  Pattern_White_Space
   Pattern_Syntax          (Short: Pat_Syn)
   Pattern_White_Space     (Short: Pat_WS)
   Perl_Decimal_Digit      (Perl extension)
   PerlSpace               PosixSpace.  (Perl extension)
   PerlWord                PosixWord.  (Perl extension)
   PosixAlnum              (Perl extension).  [A-Za-z0-9]
   PosixAlpha              (Perl extension).  [A-Za-z]
   PosixBlank              (Perl extension).  \t and ' '
   PosixCntrl              (Perl extension).  ASCII control
                           characters: NUL, SOH, STX, ETX, EOT, ENQ,
                           ACK, BEL, BS, HT, LF, VT, FF, CR, SO, SI,
                           DLE, DC1, DC2, DC3, DC4, NAK, SYN, ETB,
                           CAN, EOM, SUB, ESC, FS, GS, RS, US, and DEL
   PosixDigit              (Perl extension).  [0-9]
   PosixGraph              (Perl extension).  [-!"#$%&'()*+,./:;<=
                           >?@@[\\]^_`{|}~0-9A-Za-z]
   PosixLower              (Perl extension).  [a-z]
   PosixPrint              (Perl extension).  [- 0-9A-Za-
                           z!"#$%&'()*+,./:;<=>?@@[\\]^_`{|}~]
   PosixPunct              (Perl extension).  [-!"#$%&'()*+,./:;<=
                           >?@@[\\]^_`{|}~]
   PosixSpace              (Perl extension).  \t, \n, \cK, \f, \r,
                           and ' '.  (\cK is vertical tab)
   PosixUpper              (Perl extension).  [A-Z]
   PosixWord               (Perl extension).  \w, restricted to ASCII
                           = [A-Za-z0-9_]
   PosixXDigit             (Perl extension).  [0-9A-Fa-f]
   Present_In              (Short: In).  (Perl extension)
   Print                   XPosixPrint.  (Perl extension)
   Punct                   General_Category=Punct.  (Perl extension)
   QMark                   Quotation_Mark
   Quotation_Mark          (Short: QMark)
   Radical
   SB                      Sentence_Break
   Sc                      Script; NOT 'sc' meaning
                           'General_Category=Currency_Symbol'
   Scf                     Simple_Case_Folding
   Script                  (Short: sc)
   Script_Extensions       (Short: scx)
   Scx                     Script_Extensions
   SD                      Soft_Dotted
   Sentence_Break          (Short: SB)
   Sfc                     Simple_Case_Folding
   Simple_Case_Folding     (Short: scf)
   Simple_Lowercase_Mapping (Short: slc)
   Simple_Titlecase_Mapping (Short: stc)
   Simple_Uppercase_Mapping (Short: suc)
   Slc                     Simple_Lowercase_Mapping
   Soft_Dotted             (Short: SD)
   Space                   White_Space
   SpacePerl               XPosixSpace.  (Perl extension)
   Stc                     Simple_Titlecase_Mapping
   STerm
   Suc                     Simple_Uppercase_Mapping
   Tc                      Titlecase_Mapping
   Term                    Terminal_Punctuation
   Terminal_Punctuation    (Short: Term)
   Title                   Titlecase.  (Perl extension)
   Titlecase               (Short: Title).  (Perl extension).  (=
                           \p{Gc=Lt})
   Titlecase_Mapping       (Short: tc)
   Uc                      Uppercase_Mapping
   UIdeo                   Unified_Ideograph
   Unicode                 Any.  (Perl extension)
   Unicode_1_Name          (Short: na1)
   Unified_Ideograph       (Short: UIdeo)
   Upper                   Uppercase
   Uppercase               (Short: Upper)
   Uppercase_Mapping       (Short: uc)
   Variation_Selector      (Short: VS)
   VertSpace               (Perl extension).  \v
   VS                      Variation_Selector
   WB                      Word_Break
   White_Space             (Short: WSpace)
   Word                    XPosixWord.  (Perl extension)
   Word_Break              (Short: WB)
   WSpace                  White_Space
   XDigit                  XPosixXDigit.  (Perl extension)
   XID_Continue            (Short: XIDC)
   XID_Start               (Short: XIDS)
   XIDC                    XID_Continue
   XIDS                    XID_Start
   XPerlSpace              XPosixSpace.  (Perl extension)
   XPosixAlnum             (Short: Alnum).  (Perl extension).
                           Alphabetic and (decimal) Numeric
   XPosixAlpha             (Perl extension)
   XPosixBlank             (Short: Blank).  (Perl extension).  \h,
                           Horizontal white space
   XPosixCntrl             General_Category=XPosixCntrl  (Short:
                           Cntrl).  (Perl extension).  Control
                           characters
   XPosixDigit             General_Category=XPosixDigit  (Short:
                           Digit).  (Perl extension).  [0-9] + all
                           other decimal digits
   XPosixGraph             (Short: Graph).  (Perl extension).
                           Characters that are graphical
   XPosixLower             (Perl extension)
   XPosixPrint             (Short: Print).  (Perl extension).
                           Characters that are graphical plus space
                           characters (but no controls)
   XPosixPunct             (Perl extension).  \p{Punct} + ASCII-range
                           \p{Symbol}
   XPosixSpace             (Perl extension).  \s including beyond
                           ASCII and vertical tab
   XPosixUpper             (Perl extension)
   XPosixWord              (Short: Word).  (Perl extension).  \w,
                           including beyond ASCII; = \p{Alnum} + \pM
                           + \p{Pc}
   XPosixXDigit            (Short: XDigit).  (Perl extension)


=head1 Properties accessible through other means

Certain properties are accessible also via core function calls.  These are:

 Lowercase_Mapping          lc() and lcfirst()
 Titlecase_Mapping          ucfirst()
 Uppercase_Mapping          uc()

Also, Case_Folding is accessible through the C</i> modifier in regular
expressions, the C<\F> transliteration escape, and the C<L<fc|perlfunc/fc>>
operator.

And, the Name and Name_Aliases properties are accessible through the C<\N{}>
interpolation in double-quoted strings and regular expressions; and functions
C<charnames::viacode()>, C<charnames::vianame()>, and
C<charnames::string_vianame()> (which require a C<use charnames ();> to be
specified.

Finally, most properties related to decomposition are accessible via
L<Unicode::Normalize>.

=head1 Unicode character properties that are NOT accepted by Perl

Perl will generate an error for a few character properties in Unicode when
used in a regular expression.  The non-Unihan ones are listed below, with the
reasons they are not accepted, perhaps with work-arounds.  The short names for
the properties are listed enclosed in (parentheses).
As described after the list, an installation can change the defaults and choose
to accept any of these.  The list is machine generated based on the
choices made for the installation that generated this document.


=over 4



=item I<Expands_On_NFC> (XO_NFC)

=item I<Expands_On_NFD> (XO_NFD)

=item I<Expands_On_NFKC> (XO_NFKC)

=item I<Expands_On_NFKD> (XO_NFKD)

Deprecated by Unicode.  These are characters that expand to more than one character in the specified normalization form, but whether they actually take up more bytes or not depends on the encoding being used.  For example, a UTF-8 encoded character may expand to a different number of bytes than a UTF-32 encoded character.



=item I<Grapheme_Link> (Gr_Link)

Deprecated by Unicode:  Duplicates ccc=vr (Canonical_Combining_Class=Virama)



=item I<Jamo_Short_Name> (JSN)

=item I<Other_Alphabetic> (OAlpha)

=item I<Other_Default_Ignorable_Code_Point> (ODI)

=item I<Other_Grapheme_Extend> (OGr_Ext)

=item I<Other_ID_Continue> (OIDC)

=item I<Other_ID_Start> (OIDS)

=item I<Other_Lowercase> (OLower)

=item I<Other_Math> (OMath)

=item I<Other_Uppercase> (OUpper)

Used by Unicode internally for generating other properties and not intended to be used stand-alone



=item I<Script=Katakana_Or_Hiragana> (sc=Hrkt)

Obsolete.  All code points previously matched by this have been moved to "Script=Common".  Consider instead using "Script_Extensions=Katakana" or "Script_Extensions=Hiragana" (or both)



=item I<Script_Extensions=Katakana_Or_Hiragana> (scx=Hrkt)

All code points that would be matched by this are matched by either "Script_Extensions=Katakana" or "Script_Extensions=Hiragana"

=back


An installation can choose to allow any of these to be matched by downloading
the Unicode database from L<http://www.unicode.org/Public/> to
C<$Config{privlib}>/F<unicore/> in the Perl source tree, changing the
controlling lists contained in the program
C<$Config{privlib}>/F<unicore/mktables> and then re-compiling and installing.
(C<%Config> is available from the Config module).

Also, perl can be recompiled to operate on an earlier version of the Unicode
standard.  Further information is at
C<$Config{privlib}>/F<unicore/README.perl>.

=head1 Other information in the Unicode data base

The Unicode data base is delivered in two different formats.  The XML version
is valid for more modern Unicode releases.  The other version is a collection
of files.  The two are intended to give equivalent information.  Perl uses the
older form; this allows you to recompile Perl to use early Unicode releases.

The only non-character property that Perl currently supports is Named
Sequences, in which a sequence of code points
is given a name and generally treated as a single entity.  (Perl supports
these via the C<\N{...}> double-quotish construct,
L<charnames/charnames::string_vianame(name)>, and L<Unicode::UCD/namedseq()>.

Below is a list of the files in the Unicode data base that Perl doesn't
currently use, along with very brief descriptions of their purposes.
Some of the names of the files have been shortened from those that Unicode
uses, in order to allow them to be distinguishable from similarly named files
on file systems for which only the first 8 characters of a name are
significant.

=over 4




=item F<auxiliary/GraphemeBreakTest.html> 

=item F<auxiliary/LineBreakTest.html> 

=item F<auxiliary/SentenceBreakTest.html> 

=item F<auxiliary/WordBreakTest.html> 

Documentation of validation Tests



=item F<BidiCharacterTest.txt> 

=item F<BidiTest.txt> 

=item F<NormTest.txt> 

Validation Tests



=item F<CJKRadicals.txt> 

Maps the kRSUnicode property values to corresponding code points



=item F<EmojiSources.txt> 

Maps certain Unicode code points to their legacy Japanese cell-phone values



=item F<Index.txt> 

Alphabetical index of Unicode characters



=item F<NamedSqProv.txt> 

Named sequences proposed for inclusion in a later version of the Unicode Standard; if you need them now, you can append this file to F<NamedSequences.txt> and recompile perl



=item F<NamesList.html> 

Describes the format and contents of F<NamesList.txt>



=item F<NamesList.txt> 

Annotated list of characters



=item F<NormalizationCorrections.txt> 

Documentation of corrections already incorporated into the Unicode data base



=item F<ReadMe.txt> 

Documentation



=item F<StandardizedVariants.html> 

Provides a visual display of the standard variant sequences derived from F<StandardizedVariants.txt>.



=item F<StandardizedVariants.txt> 

Certain glyph variations for character display are standardized.  This lists the non-Unihan ones; the Unihan ones are also not used by Perl, and are in a separate Unicode data base L<http://www.unicode.org/ivd>



=item F<USourceData.txt> 

Documentation of status and cross reference of proposals for encoding by Unicode of Unihan characters



=item F<USourceGlyphs.pdf> 

Pictures of the characters in F<USourceData.txt>


=back

=head1 SEE ALSO

L<http://www.unicode.org/reports/tr44/>

L<perlrecharclass>

L<perlunicode>

@


1.4
log
@Regenerate unicore for perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d5 1
a5 1
# database, Version 6.3.0.  Any changes made here will be lost!
d14 1
a14 1
perluniprops - Index of Unicode Version 6.3.0 character properties in Perl
d156 23
a178 1
=back
a179 6
Some Perl extensions are present for backwards compatibility and are
discouraged from being used, but are not obsolete.  An 'B<X>'
flags each such entry in the table.  Future Unicode versions may force
some of these extensions to be removed without warning, replaced by another
property with the same name that means something different.  Use the
equivalent shown instead.
d183 1
a183 13

Matches in the Block property have shortcuts that begin with "In_".  For
example, C<\p{Block=Latin1}> can be written as C<\p{In_Latin1}>.  For
backward compatibility, if there is no conflict with another shortcut, these
may also be written as C<\p{Latin1}> or C<\p{Is_Latin1}>.  But, N.B., there
are numerous such conflicting shortcuts.  Use of these forms for Block is
discouraged, and are flagged as such, not only because of the potential
confusion as to what is meant, but also because a later release of Unicode may
preempt the shortcut, and your program would no longer be correct.  Use the
"In_" form instead to avoid this, or even more clearly, use the compound form,
e.g., C<\p{blk:latin1}>.  See L<perlunicode/"Blocks"> for more information
about this.

d298 3
a300 1
   \p{Age: NA}             \p{Age=Unassigned} (864_343 plus all
d304 1
a304 1
                             \p{Age=NA}) (864_343 plus all above-
d350 9
d362 1
d370 3
a372 2
   \p{Alnum}               Alphabetic and (decimal) Numeric (102_619)
   \p{Alpha}               \p{Alphabetic=Y} (102_159)
d374 3
a376 2
   \p{Alphabetic}          \p{Alpha} (= \p{Alphabetic=Y}) (102_159)
   \p{Alphabetic: N*}      (Short: \p{Alpha=N}, \P{Alpha}) (1_011_953
d378 1
a378 1
   \p{Alphabetic: Y*}      (Short: \p{Alpha=Y}, \p{Alpha}) (102_159)
d385 3
d399 1
a399 1
                             \p{Block=Arabic}) (1236)
d401 1
a401 1
                             \p{Block=Arabic}) (1236)
d430 1
a430 1
                             \p{Block=Armenian}) (91)
d435 1
a435 1
                             \p{Block=Armenian}) (91)
d443 1
a443 1
   \p{Assigned}            All assigned code points (249_703)
d461 4
d471 1
a471 1
                             \p{Block=Bengali}) (92)
d473 1
a473 1
                             \p{Block=Bengali}) (92)
d477 4
a480 4
   \p{Bidi_Class: AL}      \p{Bidi_Class=Arabic_Letter} (1438)
   \p{Bidi_Class: AN}      \p{Bidi_Class=Arabic_Number} (49)
   \p{Bidi_Class: Arabic_Letter} (Short: \p{Bc=AL}) (1438)
   \p{Bidi_Class: Arabic_Number} (Short: \p{Bc=AN}) (49)
d482 2
a483 2
   \p{Bidi_Class: BN}      \p{Bidi_Class=Boundary_Neutral} (4012)
   \p{Bidi_Class: Boundary_Neutral} (Short: \p{Bc=BN}) (4012)
d486 1
a486 1
   \p{Bidi_Class: EN}      \p{Bidi_Class=European_Number} (131)
d489 1
a489 1
   \p{Bidi_Class: European_Number} (Short: \p{Bc=EN}) (131)
d494 1
a494 1
   \p{Bidi_Class: L}       \p{Bidi_Class=Left_To_Right} (1_098_508
d496 1
a496 1
   \p{Bidi_Class: Left_To_Right} (Short: \p{Bc=L}) (1_098_508 plus
d504 4
a507 4
   \p{Bidi_Class: Nonspacing_Mark} (Short: \p{Bc=NSM}) (1291)
   \p{Bidi_Class: NSM}     \p{Bidi_Class=Nonspacing_Mark} (1291)
   \p{Bidi_Class: ON}      \p{Bidi_Class=Other_Neutral} (4447)
   \p{Bidi_Class: Other_Neutral} (Short: \p{Bc=ON}) (4447)
d513 2
a514 2
   \p{Bidi_Class: R}       \p{Bidi_Class=Right_To_Left} (4086)
   \p{Bidi_Class: Right_To_Left} (Short: \p{Bc=R}) (4086)
d548 1
a548 1
   \p{Blank}               \h, Horizontal white space (18)
d550 2
a551 1
   \p{Block: Aegean_Numbers} (Single: \p{InAegeanNumbers}) (64)
d553 1
a553 2
   \p{Block: Alchemical_Symbols} (Short: \p{Blk=Alchemical},
                             \p{InAlchemical}) (128)
d557 3
a559 1
                             AlphabeticPF}, \p{InAlphabeticPF}) (80)
d563 4
a566 7
                             AncientGreekMusic},
                             \p{InAncientGreekMusic}) (80)
   \p{Block: Ancient_Greek_Numbers} (Single:
                             \p{InAncientGreekNumbers}) (80)
   \p{Block: Ancient_Symbols} (Single: \p{InAncientSymbols}) (64)
   \p{Block: Arabic}       (Single: \p{InArabic}; NOT \p{Arabic} NOR
                             \p{Is_Arabic}) (256)
d568 1
a568 2
   \p{Block: Arabic_Extended_A} (Short: \p{Blk=ArabicExtA},
                             \p{InArabicExtA}) (96)
d573 1
a573 1
                             ArabicMath}, \p{InArabicMath}) (256)
d576 4
a579 4
   \p{Block: Arabic_Presentation_Forms_A} (Short: \p{Blk=ArabicPFA},
                             \p{InArabicPFA}) (688)
   \p{Block: Arabic_Presentation_Forms_B} (Short: \p{Blk=ArabicPFB},
                             \p{InArabicPFB}) (144)
d581 3
a583 5
   \p{Block: Arabic_Supplement} (Short: \p{Blk=ArabicSup},
                             \p{InArabicSup}) (48)
   \p{Block: Armenian}     (Single: \p{InArmenian}; NOT \p{Armenian}
                             NOR \p{Is_Armenian}) (96)
   \p{Block: Arrows}       (Single: \p{InArrows}) (112)
d585 4
a588 6
   \p{Block: Avestan}      (Single: \p{InAvestan}; NOT \p{Avestan}
                             NOR \p{Is_Avestan}) (64)
   \p{Block: Balinese}     (Single: \p{InBalinese}; NOT \p{Balinese}
                             NOR \p{Is_Balinese}) (128)
   \p{Block: Bamum}        (Single: \p{InBamum}; NOT \p{Bamum} NOR
                             \p{Is_Bamum}) (96)
d590 8
a597 10
   \p{Block: Bamum_Supplement} (Short: \p{Blk=BamumSup},
                             \p{InBamumSup}) (576)
   \p{Block: Basic_Latin}  (Short: \p{Blk=ASCII}, \p{ASCII}) (128)
   \p{Block: Batak}        (Single: \p{InBatak}; NOT \p{Batak} NOR
                             \p{Is_Batak}) (64)
   \p{Block: Bengali}      (Single: \p{InBengali}; NOT \p{Bengali}
                             NOR \p{Is_Bengali}) (128)
   \p{Block: Block_Elements} (Single: \p{InBlockElements}) (32)
   \p{Block: Bopomofo}     (Single: \p{InBopomofo}; NOT \p{Bopomofo}
                             NOR \p{Is_Bopomofo}) (48)
d599 3
a601 5
   \p{Block: Bopomofo_Extended} (Short: \p{Blk=BopomofoExt},
                             \p{InBopomofoExt}) (32)
   \p{Block: Box_Drawing}  (Single: \p{InBoxDrawing}) (128)
   \p{Block: Brahmi}       (Single: \p{InBrahmi}; NOT \p{Brahmi} NOR
                             \p{Is_Brahmi}) (128)
d603 3
a605 6
   \p{Block: Braille_Patterns} (Short: \p{Blk=Braille},
                             \p{InBraille}) (256)
   \p{Block: Buginese}     (Single: \p{InBuginese}; NOT \p{Buginese}
                             NOR \p{Is_Buginese}) (32)
   \p{Block: Buhid}        (Single: \p{InBuhid}; NOT \p{Buhid} NOR
                             \p{Is_Buhid}) (32)
d609 1
a609 2
                             ByzantineMusic}, \p{InByzantineMusic})
                             (256)
d613 8
a620 8
   \p{Block: Carian}       (Single: \p{InCarian}; NOT \p{Carian} NOR
                             \p{Is_Carian}) (64)
   \p{Block: Chakma}       (Single: \p{InChakma}; NOT \p{Chakma} NOR
                             \p{Is_Chakma}) (80)
   \p{Block: Cham}         (Single: \p{InCham}; NOT \p{Cham} NOR
                             \p{Is_Cham}) (96)
   \p{Block: Cherokee}     (Single: \p{InCherokee}; NOT \p{Cherokee}
                             NOR \p{Is_Cherokee}) (96)
d629 3
a631 4
   \p{Block: CJK_Compatibility} (Short: \p{Blk=CJKCompat},
                             \p{InCJKCompat}) (256)
   \p{Block: CJK_Compatibility_Forms} (Short: \p{Blk=CJKCompatForms},
                             \p{InCJKCompatForms}) (32)
d633 1
a633 2
                             CJKCompatIdeographs},
                             \p{InCJKCompatIdeographs}) (512)
d635 1
a635 2
                             CJKCompatIdeographsSup},
                             \p{InCJKCompatIdeographsSup}) (544)
d647 3
d651 3
a653 3
   \p{Block: CJK_Radicals_Supplement} (Short: \p{Blk=CJKRadicalsSup},
                             \p{InCJKRadicalsSup}) (128)
   \p{Block: CJK_Strokes}  (Single: \p{InCJKStrokes}) (48)
d655 3
a657 4
   \p{Block: CJK_Symbols_And_Punctuation} (Short: \p{Blk=CJKSymbols},
                             \p{InCJKSymbols}) (64)
   \p{Block: CJK_Unified_Ideographs} (Short: \p{Blk=CJK}, \p{InCJK})
                             (20_992)
d659 1
a659 1
                             CJKExtA}, \p{InCJKExtA}) (6592)
d661 1
a661 1
                             CJKExtB}, \p{InCJKExtB}) (42_720)
d663 1
a663 1
                             CJKExtC}, \p{InCJKExtC}) (4160)
d665 3
a667 1
                             CJKExtD}, \p{InCJKExtD}) (224)
d669 3
a671 1
                             Diacriticals}, \p{InDiacriticals}) (112)
d673 1
a673 2
                             DiacriticalsForSymbols},
                             \p{InDiacriticalsForSymbols}) (48)
d675 2
a676 4
                             DiacriticalsSup}, \p{InDiacriticalsSup})
                             (64)
   \p{Block: Combining_Half_Marks} (Short: \p{Blk=HalfMarks},
                             \p{InHalfMarks}) (16)
d681 1
a681 2
                             IndicNumberForms},
                             \p{InIndicNumberForms}) (16)
d683 3
a685 3
   \p{Block: Control_Pictures} (Single: \p{InControlPictures}) (64)
   \p{Block: Coptic}       (Single: \p{InCoptic}; NOT \p{Coptic} NOR
                             \p{Is_Coptic}) (128)
d687 2
a688 4
   \p{Block: Counting_Rod_Numerals} (Short: \p{Blk=CountingRod},
                             \p{InCountingRod}) (32)
   \p{Block: Cuneiform}    (Single: \p{InCuneiform}; NOT
                             \p{Cuneiform} NOR \p{Is_Cuneiform})
d693 5
a697 6
                             CuneiformNumbers},
                             \p{InCuneiformNumbers}) (128)
   \p{Block: Currency_Symbols} (Single: \p{InCurrencySymbols}) (48)
   \p{Block: Cypriot_Syllabary} (Single: \p{InCypriotSyllabary}) (64)
   \p{Block: Cyrillic}     (Single: \p{InCyrillic}; NOT \p{Cyrillic}
                             NOR \p{Is_Cyrillic}) (256)
d700 2
a701 4
   \p{Block: Cyrillic_Extended_A} (Short: \p{Blk=CyrillicExtA},
                             \p{InCyrillicExtA}) (32)
   \p{Block: Cyrillic_Extended_B} (Short: \p{Blk=CyrillicExtB},
                             \p{InCyrillicExtB}) (96)
d703 1
a703 2
   \p{Block: Cyrillic_Supplement} (Short: \p{Blk=CyrillicSup},
                             \p{InCyrillicSup}) (48)
d706 2
a707 3
   \p{Block: Deseret}      (Single: \p{InDeseret}) (80)
   \p{Block: Devanagari}   (Single: \p{InDevanagari}; NOT
                             \p{Devanagari} NOR \p{Is_Devanagari})
d710 1
a710 2
   \p{Block: Devanagari_Extended} (Short: \p{Blk=DevanagariExt},
                             \p{InDevanagariExt}) (32)
d712 3
d721 1
a721 1
   \p{Block: Dingbats}     (Single: \p{InDingbats}) (192)
d723 5
a727 4
   \p{Block: Domino_Tiles} (Short: \p{Blk=Domino}, \p{InDomino}) (112)
   \p{Block: Egyptian_Hieroglyphs} (Single:
                             \p{InEgyptianHieroglyphs}; NOT
                             \p{Egyptian_Hieroglyphs} NOR
d729 2
a730 1
   \p{Block: Emoticons}    (Single: \p{InEmoticons}) (80)
d735 1
a735 2
                             EnclosedAlphanumSup},
                             \p{InEnclosedAlphanumSup}) (256)
d737 1
a737 2
                             EnclosedAlphanum},
                             \p{InEnclosedAlphanum}) (160)
d741 1
a741 1
                             EnclosedCJK}, \p{InEnclosedCJK}) (256)
d745 3
a747 4
                             EnclosedIdeographicSup},
                             \p{InEnclosedIdeographicSup}) (256)
   \p{Block: Ethiopic}     (Single: \p{InEthiopic}; NOT \p{Ethiopic}
                             NOR \p{Is_Ethiopic}) (384)
d750 2
a751 4
   \p{Block: Ethiopic_Extended} (Short: \p{Blk=EthiopicExt},
                             \p{InEthiopicExt}) (96)
   \p{Block: Ethiopic_Extended_A} (Short: \p{Blk=EthiopicExtA},
                             \p{InEthiopicExtA}) (48)
d753 9
a761 8
   \p{Block: Ethiopic_Supplement} (Short: \p{Blk=EthiopicSup},
                             \p{InEthiopicSup}) (32)
   \p{Block: General_Punctuation} (Short: \p{Blk=Punctuation},
                             \p{InPunctuation}; NOT \p{Punct} NOR
                             \p{Is_Punctuation}) (112)
   \p{Block: Geometric_Shapes} (Single: \p{InGeometricShapes}) (96)
   \p{Block: Georgian}     (Single: \p{InGeorgian}; NOT \p{Georgian}
                             NOR \p{Is_Georgian}) (96)
d763 2
a764 4
   \p{Block: Georgian_Supplement} (Short: \p{Blk=GeorgianSup},
                             \p{InGeorgianSup}) (48)
   \p{Block: Glagolitic}   (Single: \p{InGlagolitic}; NOT
                             \p{Glagolitic} NOR \p{Is_Glagolitic})
d766 2
a767 2
   \p{Block: Gothic}       (Single: \p{InGothic}; NOT \p{Gothic} NOR
                             \p{Is_Gothic}) (32)
d770 2
a771 2
   \p{Block: Greek_And_Coptic} (Short: \p{Blk=Greek}, \p{InGreek};
                             NOT \p{Greek} NOR \p{Is_Greek}) (144)
d773 5
a777 6
   \p{Block: Greek_Extended} (Short: \p{Blk=GreekExt},
                             \p{InGreekExt}) (256)
   \p{Block: Gujarati}     (Single: \p{InGujarati}; NOT \p{Gujarati}
                             NOR \p{Is_Gujarati}) (128)
   \p{Block: Gurmukhi}     (Single: \p{InGurmukhi}; NOT \p{Gurmukhi}
                             NOR \p{Is_Gurmukhi}) (128)
d782 1
a782 2
                             HalfAndFullForms},
                             \p{InHalfAndFullForms}) (240)
d785 10
a794 14
   \p{Block: Hangul_Compatibility_Jamo} (Short: \p{Blk=CompatJamo},
                             \p{InCompatJamo}) (96)
   \p{Block: Hangul_Jamo}  (Short: \p{Blk=Jamo}, \p{InJamo}) (256)
   \p{Block: Hangul_Jamo_Extended_A} (Short: \p{Blk=JamoExtA},
                             \p{InJamoExtA}) (32)
   \p{Block: Hangul_Jamo_Extended_B} (Short: \p{Blk=JamoExtB},
                             \p{InJamoExtB}) (80)
   \p{Block: Hangul_Syllables} (Short: \p{Blk=Hangul}, \p{InHangul};
                             NOT \p{Hangul} NOR \p{Is_Hangul})
                             (11_184)
   \p{Block: Hanunoo}      (Single: \p{InHanunoo}; NOT \p{Hanunoo}
                             NOR \p{Is_Hanunoo}) (32)
   \p{Block: Hebrew}       (Single: \p{InHebrew}; NOT \p{Hebrew} NOR
                             \p{Is_Hebrew}) (112)
d796 1
a796 2
                             HighPUSurrogates},
                             \p{InHighPUSurrogates}) (128)
d799 2
a800 3
   \p{Block: High_Surrogates} (Single: \p{InHighSurrogates}) (896)
   \p{Block: Hiragana}     (Single: \p{InHiragana}; NOT \p{Hiragana}
                             NOR \p{Is_Hiragana}) (96)
d804 3
a806 5
   \p{Block: Ideographic_Description_Characters} (Short: \p{Blk=IDC},
                             \p{InIDC}; NOT \p{ID_Continue} NOR
                             \p{Is_IDC}) (16)
   \p{Block: Imperial_Aramaic} (Single: \p{InImperialAramaic}; NOT
                             \p{Imperial_Aramaic} NOR
d810 4
a813 8
   \p{Block: Inscriptional_Pahlavi} (Single:
                             \p{InInscriptionalPahlavi}; NOT
                             \p{Inscriptional_Pahlavi} NOR
                             \p{Is_Inscriptional_Pahlavi}) (32)
   \p{Block: Inscriptional_Parthian} (Single:
                             \p{InInscriptionalParthian}; NOT
                             \p{Inscriptional_Parthian} NOR
                             \p{Is_Inscriptional_Parthian}) (32)
d815 1
a815 2
   \p{Block: IPA_Extensions} (Short: \p{Blk=IPAExt}, \p{InIPAExt})
                             (96)
d819 2
a820 4
   \p{Block: Javanese}     (Single: \p{InJavanese}; NOT \p{Javanese}
                             NOR \p{Is_Javanese}) (96)
   \p{Block: Kaithi}       (Single: \p{InKaithi}; NOT \p{Kaithi} NOR
                             \p{Is_Kaithi}) (80)
d822 2
a823 3
   \p{Block: Kana_Supplement} (Short: \p{Blk=KanaSup}, \p{InKanaSup})
                             (256)
   \p{Block: Kanbun}       (Single: \p{InKanbun}) (16)
d825 3
a827 6
   \p{Block: Kangxi_Radicals} (Short: \p{Blk=Kangxi}, \p{InKangxi})
                             (224)
   \p{Block: Kannada}      (Single: \p{InKannada}; NOT \p{Kannada}
                             NOR \p{Is_Kannada}) (128)
   \p{Block: Katakana}     (Single: \p{InKatakana}; NOT \p{Katakana}
                             NOR \p{Is_Katakana}) (96)
d830 3
a832 4
                             KatakanaExt}, \p{InKatakanaExt}) (16)
   \p{Block: Kayah_Li}     (Single: \p{InKayahLi}) (48)
   \p{Block: Kharoshthi}   (Single: \p{InKharoshthi}; NOT
                             \p{Kharoshthi} NOR \p{Is_Kharoshthi})
d834 6
a839 5
   \p{Block: Khmer}        (Single: \p{InKhmer}; NOT \p{Khmer} NOR
                             \p{Is_Khmer}) (128)
   \p{Block: Khmer_Symbols} (Single: \p{InKhmerSymbols}) (32)
   \p{Block: Lao}          (Single: \p{InLao}; NOT \p{Lao} NOR
                             \p{Is_Lao}) (128)
d842 1
a842 2
   \p{Block: Latin_1_Supplement} (Short: \p{Blk=Latin1},
                             \p{InLatin1}) (128)
d849 2
a850 2
   \p{Block: Latin_Extended_A} (Short: \p{Blk=LatinExtA},
                             \p{InLatinExtA}) (128)
d852 20
a871 15
                             LatinExtAdditional},
                             \p{InLatinExtAdditional}) (256)
   \p{Block: Latin_Extended_B} (Short: \p{Blk=LatinExtB},
                             \p{InLatinExtB}) (208)
   \p{Block: Latin_Extended_C} (Short: \p{Blk=LatinExtC},
                             \p{InLatinExtC}) (32)
   \p{Block: Latin_Extended_D} (Short: \p{Blk=LatinExtD},
                             \p{InLatinExtD}) (224)
   \p{Block: Lepcha}       (Single: \p{InLepcha}; NOT \p{Lepcha} NOR
                             \p{Is_Lepcha}) (80)
   \p{Block: Letterlike_Symbols} (Single: \p{InLetterlikeSymbols})
                             (80)
   \p{Block: Limbu}        (Single: \p{InLimbu}; NOT \p{Limbu} NOR
                             \p{Is_Limbu}) (80)
   \p{Block: Linear_B_Ideograms} (Single: \p{InLinearBIdeograms})
d873 3
a875 15
   \p{Block: Linear_B_Syllabary} (Single: \p{InLinearBSyllabary})
                             (128)
   \p{Block: Lisu}         (Single: \p{InLisu}) (48)
   \p{Block: Low_Surrogates} (Single: \p{InLowSurrogates}) (1024)
   \p{Block: Lycian}       (Single: \p{InLycian}; NOT \p{Lycian} NOR
                             \p{Is_Lycian}) (32)
   \p{Block: Lydian}       (Single: \p{InLydian}; NOT \p{Lydian} NOR
                             \p{Is_Lydian}) (32)
   \p{Block: Mahjong}      \p{Block=Mahjong_Tiles} (48)
   \p{Block: Mahjong_Tiles} (Short: \p{Blk=Mahjong}, \p{InMahjong})
                             (48)
   \p{Block: Malayalam}    (Single: \p{InMalayalam}; NOT
                             \p{Malayalam} NOR \p{Is_Malayalam}) (128)
   \p{Block: Mandaic}      (Single: \p{InMandaic}; NOT \p{Mandaic}
                             NOR \p{Is_Mandaic}) (32)
d880 4
a883 5
                             MathAlphanum}, \p{InMathAlphanum}) (1024)
   \p{Block: Mathematical_Operators} (Short: \p{Blk=MathOperators},
                             \p{InMathOperators}) (256)
   \p{Block: Meetei_Mayek} (Single: \p{InMeeteiMayek}; NOT
                             \p{Meetei_Mayek} NOR
d886 5
a890 4
   \p{Block: Meetei_Mayek_Extensions} (Short: \p{Blk=MeeteiMayekExt},
                             \p{InMeeteiMayekExt}) (32)
   \p{Block: Meroitic_Cursive} (Single: \p{InMeroiticCursive}; NOT
                             \p{Meroitic_Cursive} NOR
d892 2
a893 4
   \p{Block: Meroitic_Hieroglyphs} (Single:
                             \p{InMeroiticHieroglyphs}) (32)
   \p{Block: Miao}         (Single: \p{InMiao}; NOT \p{Miao} NOR
                             \p{Is_Miao}) (160)
d908 1
a908 2
                             MiscMathSymbolsA},
                             \p{InMiscMathSymbolsA}) (48)
d910 2
a911 4
                             MiscMathSymbolsB},
                             \p{InMiscMathSymbolsB}) (128)
   \p{Block: Miscellaneous_Symbols} (Short: \p{Blk=MiscSymbols},
                             \p{InMiscSymbols}) (256)
d913 1
a913 1
                             MiscArrows}, \p{InMiscArrows}) (256)
d915 4
a918 4
                             MiscPictographs}, \p{InMiscPictographs})
                             (768)
   \p{Block: Miscellaneous_Technical} (Short: \p{Blk=MiscTechnical},
                             \p{InMiscTechnical}) (256)
d920 5
a924 4
   \p{Block: Modifier_Tone_Letters} (Single:
                             \p{InModifierToneLetters}) (32)
   \p{Block: Mongolian}    (Single: \p{InMongolian}; NOT
                             \p{Mongolian} NOR \p{Is_Mongolian}) (176)
d926 2
a927 4
   \p{Block: Musical_Symbols} (Short: \p{Blk=Music}, \p{InMusic})
                             (256)
   \p{Block: Myanmar}      (Single: \p{InMyanmar}; NOT \p{Myanmar}
                             NOR \p{Is_Myanmar}) (160)
d929 11
a939 3
   \p{Block: Myanmar_Extended_A} (Short: \p{Blk=MyanmarExtA},
                             \p{InMyanmarExtA}) (32)
   \p{Block: NB}           \p{Block=No_Block} (860_672 plus all
d941 1
a941 8
   \p{Block: New_Tai_Lue}  (Single: \p{InNewTaiLue}; NOT
                             \p{New_Tai_Lue} NOR \p{Is_New_Tai_Lue})
                             (96)
   \p{Block: NKo}          (Single: \p{InNKo}; NOT \p{Nko} NOR
                             \p{Is_NKo}) (64)
   \p{Block: No_Block}     (Short: \p{Blk=NB}, \p{InNB}) (860_672
                             plus all above-Unicode code points)
   \p{Block: Number_Forms} (Single: \p{InNumberForms}) (64)
d944 5
a948 5
   \p{Block: Ogham}        (Single: \p{InOgham}; NOT \p{Ogham} NOR
                             \p{Is_Ogham}) (32)
   \p{Block: Ol_Chiki}     (Single: \p{InOlChiki}) (48)
   \p{Block: Old_Italic}   (Single: \p{InOldItalic}; NOT
                             \p{Old_Italic} NOR \p{Is_Old_Italic})
d950 7
a956 6
   \p{Block: Old_Persian}  (Single: \p{InOldPersian}; NOT
                             \p{Old_Persian} NOR \p{Is_Old_Persian})
                             (64)
   \p{Block: Old_South_Arabian} (Single: \p{InOldSouthArabian}) (32)
   \p{Block: Old_Turkic}   (Single: \p{InOldTurkic}; NOT
                             \p{Old_Turkic} NOR \p{Is_Old_Turkic})
d958 10
a967 8
   \p{Block: Optical_Character_Recognition} (Short: \p{Blk=OCR},
                             \p{InOCR}) (32)
   \p{Block: Oriya}        (Single: \p{InOriya}; NOT \p{Oriya} NOR
                             \p{Is_Oriya}) (128)
   \p{Block: Osmanya}      (Single: \p{InOsmanya}; NOT \p{Osmanya}
                             NOR \p{Is_Osmanya}) (48)
   \p{Block: Phags_Pa}     (Single: \p{InPhagsPa}; NOT \p{Phags_Pa}
                             NOR \p{Is_Phags_Pa}) (64)
d969 2
a970 4
   \p{Block: Phaistos_Disc} (Short: \p{Blk=Phaistos}, \p{InPhaistos})
                             (48)
   \p{Block: Phoenician}   (Single: \p{InPhoenician}; NOT
                             \p{Phoenician} NOR \p{Is_Phoenician})
d975 1
a975 2
   \p{Block: Phonetic_Extensions} (Short: \p{Blk=PhoneticExt},
                             \p{InPhoneticExt}) (128)
d977 2
a978 3
                             PhoneticExtSup}, \p{InPhoneticExtSup})
                             (64)
   \p{Block: Playing_Cards} (Single: \p{InPlayingCards}) (96)
d982 1
a982 1
   \p{Block: Private_Use_Area} (Short: \p{Blk=PUA}, \p{InPUA}; NOT
d985 2
d992 1
a992 2
   \p{Block: Rejang}       (Single: \p{InRejang}; NOT \p{Rejang} NOR
                             \p{Is_Rejang}) (48)
d994 5
a998 8
   \p{Block: Rumi_Numeral_Symbols} (Short: \p{Blk=Rumi}, \p{InRumi})
                             (32)
   \p{Block: Runic}        (Single: \p{InRunic}; NOT \p{Runic} NOR
                             \p{Is_Runic}) (96)
   \p{Block: Samaritan}    (Single: \p{InSamaritan}; NOT
                             \p{Samaritan} NOR \p{Is_Samaritan}) (64)
   \p{Block: Saurashtra}   (Single: \p{InSaurashtra}; NOT
                             \p{Saurashtra} NOR \p{Is_Saurashtra})
d1000 7
a1006 7
   \p{Block: Sharada}      (Single: \p{InSharada}; NOT \p{Sharada}
                             NOR \p{Is_Sharada}) (96)
   \p{Block: Shavian}      (Single: \p{InShavian}) (48)
   \p{Block: Sinhala}      (Single: \p{InSinhala}; NOT \p{Sinhala}
                             NOR \p{Is_Sinhala}) (128)
   \p{Block: Small_Form_Variants} (Short: \p{Blk=SmallForms},
                             \p{InSmallForms}) (32)
d1008 1
a1008 2
   \p{Block: Sora_Sompeng} (Single: \p{InSoraSompeng}; NOT
                             \p{Sora_Sompeng} NOR
d1011 4
a1014 5
                             ModifierLetters}, \p{InModifierLetters})
                             (80)
   \p{Block: Specials}     (Single: \p{InSpecials}) (16)
   \p{Block: Sundanese}    (Single: \p{InSundanese}; NOT
                             \p{Sundanese} NOR \p{Is_Sundanese}) (64)
d1016 1
a1016 2
   \p{Block: Sundanese_Supplement} (Short: \p{Blk=SundaneseSup},
                             \p{InSundaneseSup}) (16)
d1019 1
d1028 3
d1033 4
a1036 5
                             SuperAndSub}, \p{InSuperAndSub}) (48)
   \p{Block: Supplemental_Arrows_A} (Short: \p{Blk=SupArrowsA},
                             \p{InSupArrowsA}) (16)
   \p{Block: Supplemental_Arrows_B} (Short: \p{Blk=SupArrowsB},
                             \p{InSupArrowsB}) (128)
d1038 1
a1038 2
                             SupMathOperators},
                             \p{InSupMathOperators}) (256)
d1040 3
a1042 2
                             SupPunctuation}, \p{InSupPunctuation})
                             (128)
d1044 1
a1044 1
                             SupPUAA}, \p{InSupPUAA}) (65_536)
d1046 3
a1048 3
                             SupPUAB}, \p{InSupPUAB}) (65_536)
   \p{Block: Syloti_Nagri} (Single: \p{InSylotiNagri}; NOT
                             \p{Syloti_Nagri} NOR
d1050 8
a1057 13
   \p{Block: Syriac}       (Single: \p{InSyriac}; NOT \p{Syriac} NOR
                             \p{Is_Syriac}) (80)
   \p{Block: Tagalog}      (Single: \p{InTagalog}; NOT \p{Tagalog}
                             NOR \p{Is_Tagalog}) (32)
   \p{Block: Tagbanwa}     (Single: \p{InTagbanwa}; NOT \p{Tagbanwa}
                             NOR \p{Is_Tagbanwa}) (32)
   \p{Block: Tags}         (Single: \p{InTags}) (128)
   \p{Block: Tai_Le}       (Single: \p{InTaiLe}; NOT \p{Tai_Le} NOR
                             \p{Is_Tai_Le}) (48)
   \p{Block: Tai_Tham}     (Single: \p{InTaiTham}; NOT \p{Tai_Tham}
                             NOR \p{Is_Tai_Tham}) (144)
   \p{Block: Tai_Viet}     (Single: \p{InTaiViet}; NOT \p{Tai_Viet}
                             NOR \p{Is_Tai_Viet}) (96)
d1059 9
a1067 16
   \p{Block: Tai_Xuan_Jing_Symbols} (Short: \p{Blk=TaiXuanJing},
                             \p{InTaiXuanJing}) (96)
   \p{Block: Takri}        (Single: \p{InTakri}; NOT \p{Takri} NOR
                             \p{Is_Takri}) (80)
   \p{Block: Tamil}        (Single: \p{InTamil}; NOT \p{Tamil} NOR
                             \p{Is_Tamil}) (128)
   \p{Block: Telugu}       (Single: \p{InTelugu}; NOT \p{Telugu} NOR
                             \p{Is_Telugu}) (128)
   \p{Block: Thaana}       (Single: \p{InThaana}; NOT \p{Thaana} NOR
                             \p{Is_Thaana}) (64)
   \p{Block: Thai}         (Single: \p{InThai}; NOT \p{Thai} NOR
                             \p{Is_Thai}) (128)
   \p{Block: Tibetan}      (Single: \p{InTibetan}; NOT \p{Tibetan}
                             NOR \p{Is_Tibetan}) (256)
   \p{Block: Tifinagh}     (Single: \p{InTifinagh}; NOT \p{Tifinagh}
                             NOR \p{Is_Tifinagh}) (80)
d1071 1
a1071 2
                             TransportAndMap}, \p{InTransportAndMap})
                             (128)
d1078 1
a1078 2
   \p{Block: Ugaritic}     (Single: \p{InUgaritic}; NOT \p{Ugaritic}
                             NOR \p{Is_Ugaritic}) (32)
d1080 1
a1080 1
                             UCAS}, \p{InUCAS}) (640)
d1082 3
a1084 4
                             \p{Blk=UCASExt}, \p{InUCASExt}) (80)
   \p{Block: Vai}          (Single: \p{InVai}; NOT \p{Vai} NOR
                             \p{Is_Vai}) (320)
   \p{Block: Variation_Selectors} (Short: \p{Blk=VS}, \p{InVS}; NOT
d1087 2
a1088 2
   \p{Block: Variation_Selectors_Supplement} (Short: \p{Blk=VSSup},
                             \p{InVSSup}) (240)
d1090 2
a1091 3
   \p{Block: Vedic_Extensions} (Short: \p{Blk=VedicExt},
                             \p{InVedicExt}) (48)
   \p{Block: Vertical_Forms} (Single: \p{InVerticalForms}) (16)
d1097 4
a1100 2
   \p{Block: Yi_Radicals}  (Single: \p{InYiRadicals}) (64)
   \p{Block: Yi_Syllables} (Single: \p{InYiSyllables}) (1168)
d1102 1
a1102 2
   \p{Block: Yijing_Hexagram_Symbols} (Short: \p{Blk=Yijing},
                             \p{InYijing}) (64)
d1115 1
a1115 1
                             \p{Block=Brahmi}) (108)
d1117 1
a1117 1
                             \p{Block=Brahmi}) (108)
d1135 1
a1135 1
                             (1_004_135 plus all above-Unicode code
d1146 1
a1146 1
                             Not_Reordered} (1_113_459 plus all
d1149 1
a1149 1
                             Overlay} (26)
d1151 1
a1151 1
                             Nukta} (13)
d1155 1
a1155 1
                             Virama} (37)
d1241 1
a1241 1
                             Below} (129)
d1251 1
a1251 1
                             Above} (349)
d1261 2
a1262 2
                             Above} (349)
   \p{Canonical_Combining_Class: Above} (Short: \p{Ccc=A}) (349)
d1286 2
a1287 2
                             Below} (129)
   \p{Canonical_Combining_Class: Below} (Short: \p{Ccc=B}) (129)
d1348 1
a1348 1
                             Nukta} (13)
d1350 1
a1350 1
                             (1_113_459 plus all above-Unicode code
d1353 1
a1353 1
                             Not_Reordered} (1_113_459 plus all
d1355 1
a1355 1
   \p{Canonical_Combining_Class: Nukta} (Short: \p{Ccc=NK}) (13)
d1357 2
a1358 2
                             Overlay} (26)
   \p{Canonical_Combining_Class: Overlay} (Short: \p{Ccc=OV}) (26)
d1362 1
a1362 1
   \p{Canonical_Combining_Class: Virama} (Short: \p{Ccc=VR}) (37)
d1364 1
a1364 1
                             Virama} (37)
d1371 2
a1372 2
   \p{Case_Ignorable}      \p{Case_Ignorable=Y} (Short: \p{CI}) (1806)
   \p{Case_Ignorable: N*}  (Short: \p{CI=N}, \P{CI}) (1_112_306 plus
d1374 3
a1376 3
   \p{Case_Ignorable: Y*}  (Short: \p{CI=Y}, \p{CI}) (1806)
   \p{Cased}               \p{Cased=Y} (3448)
   \p{Cased: N*}           (Single: \P{Cased}) (1_110_664 plus all
d1378 1
a1378 1
   \p{Cased: Y*}           (Single: \p{Cased}) (3448)
d1380 1
a1380 1
                             \p{LC}) (3223)
d1382 5
a1386 2
   \p{Cc}                  \p{Cntrl} (= \p{General_Category=Control})
                             (65)
d1392 1
a1392 1
                             (145)
d1397 1
a1397 1
                             \p{CWCF}) (1107)
d1399 1
a1399 1
                             (1_113_005 plus all above-Unicode code
d1402 1
a1402 1
                             (1107)
d1404 1
a1404 1
                             \p{CWCM}) (2138)
d1406 1
a1406 1
                             (1_111_974 plus all above-Unicode code
d1409 1
a1409 1
                             (2138)
d1411 1
a1411 1
                             \p{CWL}) (1043)
d1413 1
a1413 1
                             (1_113_069 plus all above-Unicode code
d1415 1
a1415 1
   \p{Changes_When_Lowercased: Y*} (Short: \p{CWL=Y}, \p{CWL}) (1043)
d1417 1
a1417 1
                             Y} (Short: \p{CWKCF}) (9946)
d1419 1
a1419 1
                             \P{CWKCF}) (1_104_166 plus all above-
d1422 1
a1422 1
                             \p{CWKCF}) (9946)
d1424 1
a1424 1
                             \p{CWT}) (1099)
d1426 1
a1426 1
                             (1_113_013 plus all above-Unicode code
d1428 1
a1428 1
   \p{Changes_When_Titlecased: Y*} (Short: \p{CWT=Y}, \p{CWT}) (1099)
d1430 1
a1430 1
                             \p{CWU}) (1126)
d1432 1
a1432 1
                             (1_112_986 plus all above-Unicode code
d1434 1
a1434 1
   \p{Changes_When_Uppercased: Y*} (Short: \p{CWU=Y}, \p{CWU}) (1126)
d1436 1
a1436 1
                             \p{Block=Cherokee}) (85)
d1438 5
a1442 1
                             \p{Block=Cherokee}) (85)
d1444 1
a1444 1
                             Y}) (1806)
d1487 4
d1516 3
d1522 1
a1522 1
                             Unassigned}) (864_409 plus all above-
d1524 2
a1525 2
   \p{Cntrl}               \p{General_Category=Control} Control
                             characters (Short: \p{Cc}) (65)
d1532 3
d1545 1
a1545 1
                             (1645)
d1551 1
a1551 1
   \p{Common}              \p{Script=Common} (Short: \p{Zyyy}) (6418)
d1567 2
a1568 2
   \p{Control}             \p{Cntrl} (= \p{General_Category=Control})
                             (65)
d1574 1
d1583 1
a1583 1
                             \p{Block=Cuneiform}) (982)
d1591 1
a1591 1
                             (Short: \p{Sc}) (49)
d1594 1
a1594 1
                             \p{Changes_When_Casefolded=Y}) (1107)
d1597 1
a1597 1
                             \p{Changes_When_Casemapped=Y}) (2138)
d1601 1
a1601 1
                             (9946)
d1604 1
a1604 1
                             \p{Changes_When_Lowercased=Y}) (1043)
d1607 1
a1607 1
                             \p{Changes_When_Titlecased=Y}) (1099)
d1610 1
a1610 1
                             \p{Changes_When_Uppercased=Y}) (1126)
d1615 1
a1615 1
                             \p{Block=Cyrillic}) (417)
d1631 3
a1633 3
                             \p{Block=Cyrillic}) (417)
   \p{Dash}                \p{Dash=Y} (27)
   \p{Dash: N*}            (Single: \P{Dash}) (1_114_085 plus all
d1635 1
a1635 1
   \p{Dash: Y*}            (Single: \p{Dash}) (27)
d1637 3
a1639 3
                             (Short: \p{Pd}) (23)
   \p{Decimal_Number}      \p{Digit} (= \p{General_Category=
                             Decimal_Number}) (460)
d1641 2
a1642 2
                             (13_225)
   \p{Decomposition_Type: Canonical} (Short: \p{Dt=Can}) (13_225)
d1663 1
a1663 1
                             Non_Canonical} (Perl extension) (3655)
d1666 2
a1667 2
                             (Perl extension) (3655)
   \p{Decomposition_Type: None} (Short: \p{Dt=None}) (1_097_232 plus
d1674 2
a1675 2
   \p{Decomposition_Type: Sup} \p{Decomposition_Type=Super} (146)
   \p{Decomposition_Type: Super} (Short: \p{Dt=Sup}) (146)
d1680 1
a1680 1
                             Y} (Short: \p{DI}) (4169)
d1682 1
a1682 1
                             (1_109_943 plus all above-Unicode code
d1685 2
a1686 2
                             (4169)
   \p{Dep}                 \p{Deprecated} (= \p{Deprecated=Y}) (111)
d1688 2
a1689 2
   \p{Deprecated}          \p{Deprecated=Y} (Short: \p{Dep}) (111)
   \p{Deprecated: N*}      (Short: \p{Dep=N}, \P{Dep}) (1_114_001
d1691 1
a1691 1
   \p{Deprecated: Y*}      (Short: \p{Dep=Y}, \p{Dep}) (111)
d1694 1
a1694 1
                             (NOT \p{Block=Devanagari}) (151)
d1696 1
a1696 1
                             NOT \p{Block=Devanagari}) (151)
d1703 1
a1703 1
                             (4169)
d1705 1
a1705 1
   \p{Dia}                 \p{Diacritic} (= \p{Diacritic=Y}) (693)
d1707 2
a1708 2
   \p{Diacritic}           \p{Diacritic=Y} (Short: \p{Dia}) (693)
   \p{Diacritic: N*}       (Short: \p{Dia=N}, \P{Dia}) (1_113_419
d1710 1
a1710 1
   \p{Diacritic: Y*}       (Short: \p{Dia=Y}, \p{Dia}) (693)
d1714 4
d1727 2
a1728 3
   \p{Digit}               \p{General_Category=Decimal_Number} [0-9]
                             + all other decimal digits (Short:
                             \p{Nd}) (460)
d1736 4
d1741 2
d1763 4
d1791 1
a1791 1
                             (Short: \p{Me}) (12)
d1808 1
a1808 1
   \p{Ext}                 \p{Extender} (= \p{Extender=Y}) (31)
d1810 2
a1811 2
   \p{Extender}            \p{Extender=Y} (Short: \p{Ext}) (31)
   \p{Extender: N*}        (Short: \p{Ext=N}, \P{Ext}) (1_114_081
d1813 1
a1813 1
   \p{Extender: Y*}        (Short: \p{Ext=Y}, \p{Ext}) (31)
d1817 1
a1817 1
                             \p{Cf}) (145)
d1827 1
a1827 1
   \p{General_Category: C} \p{General_Category=Other} (1_004_135 plus
d1830 1
a1830 1
                             \p{Gc=LC}, \p{LC}) (3223)
d1832 1
a1832 1
   \p{General_Category: Cf} \p{General_Category=Format} (145)
d1835 1
a1835 1
   \p{General_Category: Cn} \p{General_Category=Unassigned} (864_409
d1840 1
a1840 1
                             (1645)
d1846 1
a1846 1
                             (49)
d1848 1
a1848 1
                             (23)
d1850 1
a1850 1
                             (460)
d1852 1
a1852 1
                             (460)
d1854 1
a1854 1
                             (12)
d1857 1
a1857 1
   \p{General_Category: Format} (Short: \p{Gc=Cf}, \p{Cf}) (145)
d1860 2
a1861 2
   \p{General_Category: L} \p{General_Category=Letter} (101_013)
 X \p{General_Category: L&} \p{General_Category=Cased_Letter} (3223)
d1864 3
a1866 3
                             loose matching rules. (3223)
   \p{General_Category: LC} \p{General_Category=Cased_Letter} (3223)
   \p{General_Category: Letter} (Short: \p{Gc=L}, \p{L}) (101_013)
d1868 1
a1868 1
                             (224)
d1872 4
a1875 3
                             (1751)
   \p{General_Category: Lm} \p{General_Category=Modifier_Letter} (237)
   \p{General_Category: Lo} \p{General_Category=Other_Letter} (97_553)
d1877 1
a1877 1
                             /i= General_Category=Cased_Letter) (1751)
d1882 3
a1884 3
                             (1441)
   \p{General_Category: M} \p{General_Category=Mark} (1645)
   \p{General_Category: Mark} (Short: \p{Gc=M}, \p{M}) (1645)
d1886 2
a1887 2
   \p{General_Category: Mc} \p{General_Category=Spacing_Mark} (352)
   \p{General_Category: Me} \p{General_Category=Enclosing_Mark} (12)
d1889 1
a1889 1
                             (1281)
d1891 1
a1891 1
                             (237)
d1893 5
a1897 5
                             (115)
   \p{General_Category: N} \p{General_Category=Number} (1148)
   \p{General_Category: Nd} \p{General_Category=Decimal_Number} (460)
   \p{General_Category: Nl} \p{General_Category=Letter_Number} (224)
   \p{General_Category: No} \p{General_Category=Other_Number} (464)
d1899 2
a1900 2
                             (1281)
   \p{General_Category: Number} (Short: \p{Gc=N}, \p{N}) (1148)
d1902 3
a1904 3
                             (74)
   \p{General_Category: Other} (Short: \p{Gc=C}, \p{C}) (1_004_135
                             plus all above-Unicode code points)
d1906 2
a1907 2
                             (97_553)
   \p{General_Category: Other_Number} (Short: \p{Gc=No}, \p{No}) (464)
d1909 1
a1909 1
                             (434)
d1911 2
a1912 2
                             (4404)
   \p{General_Category: P} \p{General_Category=Punctuation} (636)
d1917 1
a1917 1
   \p{General_Category: Pd} \p{General_Category=Dash_Punctuation} (23)
d1925 1
a1925 1
                             (434)
d1928 5
a1932 5
   \p{General_Category: Ps} \p{General_Category=Open_Punctuation} (74)
   \p{General_Category: Punct} \p{General_Category=Punctuation} (636)
   \p{General_Category: Punctuation} (Short: \p{Gc=P}, \p{P}) (636)
   \p{General_Category: S} \p{General_Category=Symbol} (5516)
   \p{General_Category: Sc} \p{General_Category=Currency_Symbol} (49)
d1934 1
a1934 1
   \p{General_Category: Sk} \p{General_Category=Modifier_Symbol} (115)
d1936 1
a1936 1
   \p{General_Category: So} \p{General_Category=Other_Symbol} (4404)
d1939 1
a1939 1
   \p{General_Category: Spacing_Mark} (Short: \p{Gc=Mc}, \p{Mc}) (352)
d1941 1
a1941 1
   \p{General_Category: Symbol} (Short: \p{Gc=S}, \p{S}) (5516)
d1945 1
a1945 1
                             (864_409 plus all above-Unicode code
d1948 1
a1948 1
                             /i= General_Category=Cased_Letter) (1441)
d1957 5
d1979 1
a1979 1
                             (108_659)
d1982 1
a1982 1
                             Y}) (1318)
d1984 5
a1988 1
   \p{Graph}               Characters that are graphical (247_571)
d1990 4
a1993 5
                             (108_659)
   \p{Grapheme_Base: N*}   (Short: \p{GrBase=N}, \P{GrBase})
                             (1_005_453 plus all above-Unicode code
                             points)
   \p{Grapheme_Base: Y*}   (Short: \p{GrBase=Y}, \p{GrBase}) (108_659)
d1995 2
a1996 2
                             (6025)
   \p{Grapheme_Cluster_Break: Control} (Short: \p{GCB=CN}) (6025)
d1999 2
a2000 2
                             (1318)
   \p{Grapheme_Cluster_Break: Extend} (Short: \p{GCB=EX}) (1318)
d2005 1
a2005 1
   \p{Grapheme_Cluster_Break: Other} (Short: \p{GCB=XX}) (1_094_922
d2015 2
a2016 2
                             SpacingMark} (290)
   \p{Grapheme_Cluster_Break: SpacingMark} (Short: \p{GCB=SM}) (290)
d2020 1
a2020 1
                             (1_094_922 plus all above-Unicode code
d2023 2
a2024 2
                             (1318)
   \p{Grapheme_Extend: N*} (Short: \p{GrExt=N}, \P{GrExt}) (1_112_794
d2026 1
a2026 1
   \p{Grapheme_Extend: Y*} (Short: \p{GrExt=Y}, \p{GrExt}) (1318)
d2028 1
a2028 1
                             \p{Greek_And_Coptic}) (511)
d2036 1
a2036 1
                             \p{Greek_And_Coptic}) (511)
d2038 1
a2038 1
                             \p{Block=Gujarati}) (84)
d2040 1
a2040 1
                             \p{Block=Gujarati}) (84)
d2053 1
a2053 1
   \p{Han}                 \p{Script=Han} (75_963)
d2090 1
a2090 1
   \p{Hani}                \p{Han} (= \p{Script=Han}) (75_963)
d2095 4
d2103 1
a2103 1
   \p{Hex}                 \p{XDigit} (= \p{Hex_Digit=Y}) (44)
d2105 1
a2105 1
   \p{Hex_Digit}           \p{XDigit} (= \p{Hex_Digit=Y}) (44)
d2120 7
a2126 1
   \p{HorizSpace}          \p{Blank} (18)
d2128 3
d2141 2
a2142 2
                             (103_355)
   \p{ID_Continue: N*}     (Short: \p{IDC=N}, \P{IDC}) (1_010_757
d2144 3
a2146 3
   \p{ID_Continue: Y*}     (Short: \p{IDC=Y}, \p{IDC}) (103_355)
   \p{ID_Start}            \p{ID_Start=Y} (Short: \p{IDS}) (101_240)
   \p{ID_Start: N*}        (Short: \p{IDS=N}, \P{IDS}) (1_012_872
d2148 1
a2148 1
   \p{ID_Start: Y*}        (Short: \p{IDS=Y}, \p{IDS}) (101_240)
d2151 1
a2151 1
                             (103_355)
d2154 1
a2154 1
                             (75_633)
d2157 2
a2158 2
                             (75_633)
   \p{Ideographic: N*}     (Short: \p{Ideo=N}, \P{Ideo}) (1_038_479
d2160 1
a2160 1
   \p{Ideographic: Y*}     (Short: \p{Ideo=Y}, \p{Ideo}) (75_633)
d2164 1
a2164 1
   \p{IDS}                 \p{ID_Start} (= \p{ID_Start=Y}) (101_240)
d2188 1
a2188 1
   \p{In_*}                \p{Block: *}
d2191 89
d2281 1
a2281 1
                             (523)
d2284 2
d2302 1
a2302 1
                             (NOT \p{Block=Old_Italic}) (35)
d2320 1
a2320 1
   \p{Joining_Group: Ain}  (Short: \p{Jg=Ain}) (7)
d2323 1
a2323 1
   \p{Joining_Group: Beh}  (Short: \p{Jg=Beh}) (20)
d2327 1
a2327 1
   \p{Joining_Group: Dal}  (Short: \p{Jg=Dal}) (14)
d2334 1
a2334 1
   \p{Joining_Group: Gaf}  (Short: \p{Jg=Gaf}) (13)
d2343 1
a2343 1
   \p{Joining_Group: Kaf}  (Short: \p{Jg=Kaf}) (5)
d2349 47
d2399 1
a2399 1
                             (1_113_870 plus all above-Unicode code
d2407 1
a2407 1
   \p{Joining_Group: Reh}  (Short: \p{Jg=Reh}) (17)
d2410 1
a2410 1
   \p{Joining_Group: Sad}  (Short: \p{Jg=Sad}) (5)
d2415 1
d2433 2
a2434 2
   \p{Joining_Type: D}     \p{Joining_Type=Dual_Joining} (389)
   \p{Joining_Type: Dual_Joining} (Short: \p{Jt=D}) (389)
d2436 3
a2438 3
   \p{Joining_Type: L}     \p{Joining_Type=Left_Joining} (1)
   \p{Joining_Type: Left_Joining} (Short: \p{Jt=L}) (1)
   \p{Joining_Type: Non_Joining} (Short: \p{Jt=U}) (1_112_211 plus
d2440 5
a2444 5
   \p{Joining_Type: R}     \p{Joining_Type=Right_Joining} (82)
   \p{Joining_Type: Right_Joining} (Short: \p{Jt=R}) (82)
   \p{Joining_Type: T}     \p{Joining_Type=Transparent} (1425)
   \p{Joining_Type: Transparent} (Short: \p{Jt=T}) (1425)
   \p{Joining_Type: U}     \p{Joining_Type=Non_Joining} (1_112_211
d2449 2
a2450 1
   \p{Kali}                \p{Kayah_Li} (= \p{Script=Kayah_Li}) (48)
d2463 1
a2463 1
                             \p{Block=Kannada}) (86)
d2472 2
a2473 1
   \p{Kayah_Li}            \p{Script=Kayah_Li} (Short: \p{Kali}) (48)
d2483 6
d2490 1
a2490 1
                             \p{Block=Kannada}) (86)
d2494 1
a2494 1
                             (101_013)
d2496 1
a2496 1
                             Cased_Letter}) (3223)
d2500 1
a2500 1
                             rules. (3223)
d2506 1
a2506 1
   \p{Latin}               \p{Script=Latin} (Short: \p{Latn}) (1272)
d2524 2
d2536 3
a2538 1
   \p{Latn}                \p{Latin} (= \p{Script=Latin}) (1272)
d2541 1
a2541 1
                             Cased_Letter}) (3223)
d2547 1
a2547 1
                             (101_013)
d2549 1
a2549 1
                             \p{Nl}) (224)
d2552 1
a2552 1
                             \p{Block=Limbu}) (66)
d2554 3
a2556 1
                             \p{Block=Limbu}) (66)
d2558 4
a2561 4
   \p{Line_Break: AI}      \p{Line_Break=Ambiguous} (687)
   \p{Line_Break: AL}      \p{Line_Break=Alphabetic} (15_355)
   \p{Line_Break: Alphabetic} (Short: \p{Lb=AL}) (15_355)
   \p{Line_Break: Ambiguous} (Short: \p{Lb=AI}) (687)
d2563 2
a2564 2
   \p{Line_Break: BA}      \p{Line_Break=Break_After} (152)
   \p{Line_Break: BB}      \p{Line_Break=Break_Before} (19)
d2566 2
a2567 2
   \p{Line_Break: Break_After} (Short: \p{Lb=BA}) (152)
   \p{Line_Break: Break_Before} (Short: \p{Lb=BB}) (19)
d2574 1
a2574 1
   \p{Line_Break: CL}      \p{Line_Break=Close_Punctuation} (87)
d2576 4
a2579 4
   \p{Line_Break: Close_Punctuation} (Short: \p{Lb=CL}) (87)
   \p{Line_Break: CM}      \p{Line_Break=Combining_Mark} (1634)
   \p{Line_Break: Combining_Mark} (Short: \p{Lb=CM}) (1634)
   \p{Line_Break: Complex_Context} (Short: \p{Lb=SA}) (665)
d2585 2
a2586 2
   \p{Line_Break: EX}      \p{Line_Break=Exclamation} (34)
   \p{Line_Break: Exclamation} (Short: \p{Lb=EX}) (34)
d2595 3
a2597 3
   \p{Line_Break: ID}      \p{Line_Break=Ideographic} (162_698)
   \p{Line_Break: Ideographic} (Short: \p{Lb=ID}) (162_698)
   \p{Line_Break: IN}      \p{Line_Break=Inseparable} (4)
d2599 2
a2600 2
   \p{Line_Break: Inseparable} (Short: \p{Lb=IN}) (4)
   \p{Line_Break: Inseperable} \p{Line_Break=Inseparable} (4)
d2610 12
a2621 12
   \p{Line_Break: Nonstarter} (Short: \p{Lb=NS}) (26)
   \p{Line_Break: NS}      \p{Line_Break=Nonstarter} (26)
   \p{Line_Break: NU}      \p{Line_Break=Numeric} (452)
   \p{Line_Break: Numeric} (Short: \p{Lb=NU}) (452)
   \p{Line_Break: OP}      \p{Line_Break=Open_Punctuation} (81)
   \p{Line_Break: Open_Punctuation} (Short: \p{Lb=OP}) (81)
   \p{Line_Break: PO}      \p{Line_Break=Postfix_Numeric} (28)
   \p{Line_Break: Postfix_Numeric} (Short: \p{Lb=PO}) (28)
   \p{Line_Break: PR}      \p{Line_Break=Prefix_Numeric} (67)
   \p{Line_Break: Prefix_Numeric} (Short: \p{Lb=PR}) (67)
   \p{Line_Break: QU}      \p{Line_Break=Quotation} (34)
   \p{Line_Break: Quotation} (Short: \p{Lb=QU}) (34)
d2624 1
a2624 1
   \p{Line_Break: SA}      \p{Line_Break=Complex_Context} (665)
d2633 1
a2633 1
   \p{Line_Break: Unknown} (Short: \p{Lb=XX}) (918_311 plus all
d2637 1
a2637 1
   \p{Line_Break: XX}      \p{Line_Break=Unknown} (918_311 plus all
d2643 2
d2652 1
a2652 1
                             (1751)
d2655 1
a2655 1
                             (237)
d2657 1
a2657 1
                             Other_Letter}) (97_553)
d2659 1
a2659 1
                             \p{Logical_Order_Exception=Y}) (15)
d2662 1
a2662 1
                             \p{LOE}) (15)
d2664 1
a2664 1
                             (1_114_097 plus all above-Unicode code
d2666 1
a2666 1
   \p{Logical_Order_Exception: Y*} (Short: \p{LOE=Y}, \p{LOE}) (15)
d2668 2
a2669 1
   \p{Lower}               \p{Lowercase=Y} (/i= Cased=Yes) (1934)
d2671 2
a2672 2
   \p{Lowercase}           \p{Lower} (= \p{Lowercase=Y}) (/i= Cased=
                             Yes) (1934)
d2674 1
a2674 1
                             No) (1_112_178 plus all above-Unicode
d2677 1
a2677 1
                             Yes) (1934)
d2680 1
a2680 1
                             Cased_Letter) (1751)
d2687 1
a2687 1
                             (1441)
d2697 5
a2701 1
                             (1645)
d2707 1
a2707 1
                             \p{Block=Malayalam}) (98)
d2712 4
d2717 1
a2717 1
                             (1645)
d2736 1
a2736 1
                             Spacing_Mark}) (352)
d2738 1
a2738 1
                             Enclosing_Mark}) (12)
d2745 5
d2752 1
a2752 1
                             Meroitic_Cursive}) (26)
d2757 1
a2757 1
                             Meroitic_Cursive}) (26)
d2797 1
a2797 1
                             (NOT \p{Block=Malayalam}) (98)
d2800 2
a2801 1
                             (1281)
d2803 1
a2803 1
                             (Short: \p{Lm}) (237)
d2807 1
a2807 1
                             (Short: \p{Sk}) (115)
d2813 3
d2819 4
d2828 1
a2828 1
                             \p{Block=Myanmar}) (188)
d2831 2
d2835 2
d2838 1
a2838 1
                             \p{Block=Myanmar}) (188)
d2840 5
a2844 1
                             (1148)
d2846 1
a2846 1
                             (860_672 plus all above-Unicode code
d2848 2
d2853 2
a2854 2
   \p{Nd}                  \p{Digit} (= \p{General_Category=
                             Decimal_Number}) (460)
d2858 2
a2859 2
   \p{NFC_Quick_Check: M}  \p{NFC_Quick_Check=Maybe} (104)
   \p{NFC_Quick_Check: Maybe} (Short: \p{NFCQC=M}) (104)
d2868 1
a2868 1
                             (1_112_888 plus all above-Unicode code
d2872 1
a2872 1
                             (1_112_888 plus all above-Unicode code
d2877 1
a2877 1
                             (13_225)
d2880 1
a2880 1
                             (13_225)
d2883 1
a2883 1
                             (1_100_887 plus all above-Unicode code
d2887 1
a2887 1
                             (1_100_887 plus all above-Unicode code
d2890 2
a2891 2
   \p{NFKC_Quick_Check: M} \p{NFKC_Quick_Check=Maybe} (104)
   \p{NFKC_Quick_Check: Maybe} (Short: \p{NFKCQC=M}) (104)
d2894 1
a2894 1
                             (4787)
d2897 1
a2897 1
                             (4787)
d2900 1
a2900 1
                             (1_109_221 plus all above-Unicode code
d2904 1
a2904 1
                             (1_109_221 plus all above-Unicode code
d2909 1
a2909 1
                             (16_880)
d2912 1
a2912 1
                             (16_880)
d2915 1
a2915 1
                             (1_097_232 plus all above-Unicode code
d2919 1
a2919 1
                             (1_097_232 plus all above-Unicode code
d2925 1
a2925 1
                             Letter_Number}) (224)
d2927 1
a2927 1
                             Other_Number}) (464)
d2929 1
a2929 1
                             (860_672 plus all above-Unicode code
d2939 1
a2939 1
                             (Short: \p{Mn}) (1281)
d2942 1
a2942 1
                             (1148)
d2944 2
a2945 2
   \p{Numeric_Type: De}    \p{Numeric_Type=Decimal} (460)
   \p{Numeric_Type: Decimal} (Short: \p{Nt=De}) (460)
d2948 1
a2948 1
   \p{Numeric_Type: None}  (Short: \p{Nt=None}) (1_112_883 plus all
d2950 2
a2951 2
   \p{Numeric_Type: Nu}    \p{Numeric_Type=Numeric} (641)
   \p{Numeric_Type: Numeric} (Short: \p{Nt=Nu}) (641)
d2953 1
a2953 1
 T \p{Numeric_Value: 0}    (Short: \p{Nv=0}) (60)
d2955 1
d2960 1
a2960 1
 T \p{Numeric_Value: 1/6}  (Short: \p{Nv=1/6}) (2)
d2963 2
a2964 2
 T \p{Numeric_Value: 1/4}  (Short: \p{Nv=1/4}) (9)
 T \p{Numeric_Value: 1/3}  (Short: \p{Nv=1/3}) (4)
d2967 3
a2969 1
 T \p{Numeric_Value: 1/2}  (Short: \p{Nv=1/2}) (10)
d2972 2
a2973 2
 T \p{Numeric_Value: 2/3}  (Short: \p{Nv=2/3}) (5)
 T \p{Numeric_Value: 3/4}  (Short: \p{Nv=3/4}) (6)
d2975 1
a2975 1
 T \p{Numeric_Value: 5/6}  (Short: \p{Nv=5/6}) (2)
d2977 2
a2978 1
 T \p{Numeric_Value: 1}    (Short: \p{Nv=1}) (97)
d2980 1
a2980 1
 T \p{Numeric_Value: 2}    (Short: \p{Nv=2}) (101)
d2982 1
a2982 1
 T \p{Numeric_Value: 3}    (Short: \p{Nv=3}) (103)
d2984 1
a2984 1
 T \p{Numeric_Value: 4}    (Short: \p{Nv=4}) (93)
d2986 1
a2986 1
 T \p{Numeric_Value: 5}    (Short: \p{Nv=5}) (90)
d2988 1
a2988 1
 T \p{Numeric_Value: 6}    (Short: \p{Nv=6}) (82)
d2990 1
a2990 1
 T \p{Numeric_Value: 7}    (Short: \p{Nv=7}) (81)
d2992 1
a2992 1
 T \p{Numeric_Value: 8}    (Short: \p{Nv=8}) (77)
d2994 2
a2995 2
 T \p{Numeric_Value: 9}    (Short: \p{Nv=9}) (81)
 T \p{Numeric_Value: 10}   (Short: \p{Nv=10}) (40)
d3005 1
a3005 1
 T \p{Numeric_Value: 20}   (Short: \p{Nv=20}) (19)
d3015 1
a3015 1
 T \p{Numeric_Value: 30}   (Short: \p{Nv=30}) (11)
d3025 1
a3025 1
 T \p{Numeric_Value: 40}   (Short: \p{Nv=40}) (10)
d3035 34
a3068 33
 T \p{Numeric_Value: 50}   (Short: \p{Nv=50}) (20)
 T \p{Numeric_Value: 60}   (Short: \p{Nv=60}) (6)
 T \p{Numeric_Value: 70}   (Short: \p{Nv=70}) (6)
 T \p{Numeric_Value: 80}   (Short: \p{Nv=80}) (6)
 T \p{Numeric_Value: 90}   (Short: \p{Nv=90}) (6)
 T \p{Numeric_Value: 100}  (Short: \p{Nv=100}) (20)
 T \p{Numeric_Value: 200}  (Short: \p{Nv=200}) (2)
 T \p{Numeric_Value: 300}  (Short: \p{Nv=300}) (3)
 T \p{Numeric_Value: 400}  (Short: \p{Nv=400}) (2)
 T \p{Numeric_Value: 500}  (Short: \p{Nv=500}) (12)
 T \p{Numeric_Value: 600}  (Short: \p{Nv=600}) (2)
 T \p{Numeric_Value: 700}  (Short: \p{Nv=700}) (2)
 T \p{Numeric_Value: 800}  (Short: \p{Nv=800}) (2)
 T \p{Numeric_Value: 900}  (Short: \p{Nv=900}) (3)
 T \p{Numeric_Value: 1000} (Short: \p{Nv=1000}) (17)
 T \p{Numeric_Value: 2000} (Short: \p{Nv=2000}) (1)
 T \p{Numeric_Value: 3000} (Short: \p{Nv=3000}) (1)
 T \p{Numeric_Value: 4000} (Short: \p{Nv=4000}) (1)
 T \p{Numeric_Value: 5000} (Short: \p{Nv=5000}) (5)
 T \p{Numeric_Value: 6000} (Short: \p{Nv=6000}) (1)
 T \p{Numeric_Value: 7000} (Short: \p{Nv=7000}) (1)
 T \p{Numeric_Value: 8000} (Short: \p{Nv=8000}) (1)
 T \p{Numeric_Value: 9000} (Short: \p{Nv=9000}) (1)
 T \p{Numeric_Value: 10000} (= 1.0e+04) (Short: \p{Nv=10000}) (7)
 T \p{Numeric_Value: 20000} (= 2.0e+04) (Short: \p{Nv=20000}) (1)
 T \p{Numeric_Value: 30000} (= 3.0e+04) (Short: \p{Nv=30000}) (1)
 T \p{Numeric_Value: 40000} (= 4.0e+04) (Short: \p{Nv=40000}) (1)
 T \p{Numeric_Value: 50000} (= 5.0e+04) (Short: \p{Nv=50000}) (4)
 T \p{Numeric_Value: 60000} (= 6.0e+04) (Short: \p{Nv=60000}) (1)
 T \p{Numeric_Value: 70000} (= 7.0e+04) (Short: \p{Nv=70000}) (1)
 T \p{Numeric_Value: 80000} (= 8.0e+04) (Short: \p{Nv=80000}) (1)
 T \p{Numeric_Value: 90000} (= 9.0e+04) (Short: \p{Nv=90000}) (1)
 T \p{Numeric_Value: 100000} (= 1.0e+05) (Short: \p{Nv=100000}) (1)
d3070 2
d3073 6
d3080 3
a3082 1
                             (2)
d3084 2
a3085 2
                             1000000000000}) (1)
   \p{Numeric_Value: NaN}  (Short: \p{Nv=NaN}) (1_112_883 plus all
d3097 2
d3100 5
a3104 1
                             NOT \p{Block=Old_Italic}) (35)
d3112 1
a3112 1
                             (Short: \p{Ps}) (74)
d3120 1
d3128 1
a3128 1
                             (1_004_135 plus all above-Unicode code
d3131 1
a3131 1
                             \p{Lo}) (97_553)
d3133 1
a3133 1
                             \p{No}) (464)
d3135 1
a3135 1
                             (Short: \p{Po}) (434)
d3137 1
a3137 1
                             \p{So}) (4404)
d3140 5
a3144 1
                             \p{General_Punctuation}) (636)
d3165 4
d3174 1
a3174 1
                             (23)
d3178 4
a3181 3
   \p{PerlSpace}           \s, restricted to ASCII = [ \f\n\r\t] plus
                             vertical tab (6)
   \p{PerlWord}            \w, restricted to ASCII = [A-Za-z0-9_] (63)
d3196 3
d3221 1
a3221 1
                             (434)
d3238 1
a3238 1
                             vertical tab) (6)
d3240 2
a3241 1
   \p{PosixWord}           \p{PerlWord} (63)
d3288 6
d3295 1
a3295 1
                             Unassigned}) (Perl extension) (864_343
d3297 1
a3297 2
   \p{Print}               Characters that are graphical plus space
                             characters (but no controls) (247_588)
d3308 4
a3311 1
                             (74)
d3315 1
a3315 1
                             \p{P}; NOT \p{General_Punctuation}) (636)
d3318 1
a3318 1
                             \p{General_Punctuation}) (636)
d3322 1
a3322 1
                             (523)
d3324 1
a3324 1
                             Y}) (29)
d3327 2
a3328 2
                             (29)
   \p{Quotation_Mark: N*}  (Short: \p{QMark=N}, \P{QMark}) (1_114_083
d3330 1
a3330 1
   \p{Quotation_Mark: Y*}  (Short: \p{QMark=Y}, \p{QMark}) (29)
d3344 1
a3344 1
                             \p{Block=Runic}) (78)
d3346 1
a3346 1
                             \p{Block=Runic}) (78)
d3348 1
a3348 1
                             (5516)
d3362 1
a3362 1
                             (49)
d3364 7
a3370 3
   \p{Script: Arab}        \p{Script=Arabic} (1236)
   \p{Script: Arabic}      (Short: \p{Sc=Arab}, \p{Arab}) (1236)
   \p{Script: Armenian}    (Short: \p{Sc=Armn}, \p{Armn}) (91)
d3372 1
a3372 1
   \p{Script: Armn}        \p{Script=Armenian} (91)
d3379 2
d3383 2
a3384 2
   \p{Script: Beng}        \p{Script=Bengali} (92)
   \p{Script: Bengali}     (Short: \p{Sc=Beng}, \p{Beng}) (92)
d3387 2
a3388 2
   \p{Script: Brah}        \p{Script=Brahmi} (108)
   \p{Script: Brahmi}      (Short: \p{Sc=Brah}, \p{Brah}) (108)
d3401 1
d3404 3
a3406 3
   \p{Script: Cher}        \p{Script=Cherokee} (85)
   \p{Script: Cherokee}    (Short: \p{Sc=Cher}, \p{Cher}) (85)
   \p{Script: Common}      (Short: \p{Sc=Zyyy}, \p{Zyyy}) (6418)
d3410 1
a3410 1
   \p{Script: Cuneiform}   (Short: \p{Sc=Xsux}, \p{Xsux}) (982)
d3412 2
a3413 2
   \p{Script: Cyrillic}    (Short: \p{Sc=Cyrl}, \p{Cyrl}) (417)
   \p{Script: Cyrl}        \p{Script=Cyrillic} (417)
d3415 2
a3416 2
   \p{Script: Deva}        \p{Script=Devanagari} (151)
   \p{Script: Devanagari}  (Short: \p{Sc=Deva}, \p{Deva}) (151)
d3418 2
d3423 2
d3433 6
a3438 4
   \p{Script: Greek}       (Short: \p{Sc=Grek}, \p{Grek}) (511)
   \p{Script: Grek}        \p{Script=Greek} (511)
   \p{Script: Gujarati}    (Short: \p{Sc=Gujr}, \p{Gujr}) (84)
   \p{Script: Gujr}        \p{Script=Gujarati} (84)
d3441 1
a3441 1
   \p{Script: Han}         (Short: \p{Sc=Han}, \p{Han}) (75_963)
d3444 1
a3444 1
   \p{Script: Hani}        \p{Script=Han} (75_963)
d3447 2
d3453 3
d3457 1
a3457 1
   \p{Script: Inherited}   (Short: \p{Sc=Zinh}, \p{Zinh}) (523)
d3462 1
a3462 1
   \p{Script: Ital}        \p{Script=Old_Italic} (35)
d3466 1
a3466 1
   \p{Script: Kali}        \p{Script=Kayah_Li} (48)
d3468 1
a3468 1
   \p{Script: Kannada}     (Short: \p{Sc=Knda}, \p{Knda}) (86)
d3470 1
a3470 1
   \p{Script: Kayah_Li}    (Short: \p{Sc=Kali}, \p{Kali}) (48)
d3475 4
a3478 1
   \p{Script: Knda}        \p{Script=Kannada} (86)
d3483 2
a3484 2
   \p{Script: Latin}       (Short: \p{Sc=Latn}, \p{Latn}) (1272)
   \p{Script: Latn}        \p{Script=Latin} (1272)
d3487 3
a3489 2
   \p{Script: Limb}        \p{Script=Limbu} (66)
   \p{Script: Limbu}       (Short: \p{Sc=Limb}, \p{Limb}) (66)
d3491 1
d3498 3
a3500 1
   \p{Script: Malayalam}   (Short: \p{Sc=Mlym}, \p{Mlym}) (98)
d3503 2
d3506 3
a3508 1
   \p{Script: Merc}        \p{Script=Meroitic_Cursive} (26)
d3510 1
a3510 1
   \p{Script: Meroitic_Cursive} (Short: \p{Sc=Merc}, \p{Merc}) (26)
d3514 2
a3515 1
   \p{Script: Mlym}        \p{Script=Malayalam} (98)
d3518 2
d3521 7
a3527 2
   \p{Script: Myanmar}     (Short: \p{Sc=Mymr}, \p{Mymr}) (188)
   \p{Script: Mymr}        \p{Script=Myanmar} (188)
d3535 4
a3538 1
   \p{Script: Old_Italic}  (Short: \p{Sc=Ital}, \p{Ital}) (35)
d3547 6
d3556 1
d3561 1
d3563 1
a3563 1
   \p{Script: Qaai}        \p{Script=Inherited} (523)
d3566 2
a3567 2
   \p{Script: Runic}       (Short: \p{Sc=Runr}, \p{Runr}) (78)
   \p{Script: Runr}        \p{Script=Runic} (78)
d3573 2
a3574 1
   \p{Script: Sharada}     (Short: \p{Sc=Shrd}, \p{Shrd}) (83)
d3577 7
a3583 3
   \p{Script: Shrd}        \p{Script=Sharada} (83)
   \p{Script: Sinh}        \p{Script=Sinhala} (80)
   \p{Script: Sinhala}     (Short: \p{Sc=Sinh}, \p{Sinh}) (80)
d3605 2
a3606 2
   \p{Script: Telu}        \p{Script=Telugu} (93)
   \p{Script: Telugu}      (Short: \p{Sc=Telu}, \p{Telu}) (93)
d3615 2
d3619 1
a3619 1
   \p{Script: Unknown}     (Short: \p{Sc=Zzzz}, \p{Zzzz}) (1_003_925
d3623 2
d3626 1
a3626 1
   \p{Script: Xsux}        \p{Script=Cuneiform} (982)
d3629 3
a3631 3
   \p{Script: Zinh}        \p{Script=Inherited} (523)
   \p{Script: Zyyy}        \p{Script=Common} (6418)
   \p{Script: Zzzz}        \p{Script=Unknown} (1_003_925 plus all
d3633 8
a3640 3
   \p{Script_Extensions: Arab} \p{Script_Extensions=Arabic} (1263)
   \p{Script_Extensions: Arabic} (Short: \p{Scx=Arab}) (1263)
   \p{Script_Extensions: Armenian} (Short: \p{Scx=Armn}) (92)
d3643 1
a3643 1
   \p{Script_Extensions: Armn} \p{Script_Extensions=Armenian} (92)
d3650 2
d3654 2
a3655 2
   \p{Script_Extensions: Beng} \p{Script_Extensions=Bengali} (94)
   \p{Script_Extensions: Bengali} (Short: \p{Scx=Beng}) (94)
d3658 2
a3659 2
   \p{Script_Extensions: Brah} \p{Script_Extensions=Brahmi} (108)
   \p{Script_Extensions: Brahmi} (Short: \p{Scx=Brah}) (108)
d3673 2
d3677 5
a3681 5
   \p{Script_Extensions: Cher} \p{Script_Extensions=Cherokee} (85)
   \p{Script_Extensions: Cherokee} (Short: \p{Scx=Cher}) (85)
   \p{Script_Extensions: Common} (Short: \p{Scx=Zyyy}) (6061)
   \p{Script_Extensions: Copt} \p{Script_Extensions=Coptic} (137)
   \p{Script_Extensions: Coptic} (Short: \p{Scx=Copt}) (137)
d3683 1
a3683 1
   \p{Script_Extensions: Cuneiform} (Short: \p{Scx=Xsux}) (982)
d3685 2
a3686 2
   \p{Script_Extensions: Cyrillic} (Short: \p{Scx=Cyrl}) (419)
   \p{Script_Extensions: Cyrl} \p{Script_Extensions=Cyrillic} (419)
d3688 2
a3689 2
   \p{Script_Extensions: Deva} \p{Script_Extensions=Devanagari} (193)
   \p{Script_Extensions: Devanagari} (Short: \p{Scx=Deva}) (193)
d3691 2
d3697 2
d3703 2
a3704 2
   \p{Script_Extensions: Glag} \p{Script_Extensions=Glagolitic} (94)
   \p{Script_Extensions: Glagolitic} (Short: \p{Scx=Glag}) (94)
d3707 9
a3715 7
   \p{Script_Extensions: Greek} (Short: \p{Scx=Grek}) (515)
   \p{Script_Extensions: Grek} \p{Script_Extensions=Greek} (515)
   \p{Script_Extensions: Gujarati} (Short: \p{Scx=Gujr}) (94)
   \p{Script_Extensions: Gujr} \p{Script_Extensions=Gujarati} (94)
   \p{Script_Extensions: Gurmukhi} (Short: \p{Scx=Guru}) (91)
   \p{Script_Extensions: Guru} \p{Script_Extensions=Gurmukhi} (91)
   \p{Script_Extensions: Han} (Short: \p{Scx=Han}) (76_218)
d3718 1
a3718 1
   \p{Script_Extensions: Hani} \p{Script_Extensions=Han} (76_218)
d3721 2
d3727 6
d3734 1
a3734 1
   \p{Script_Extensions: Inherited} (Short: \p{Scx=Zinh}) (459)
d3739 1
a3739 1
   \p{Script_Extensions: Ital} \p{Script_Extensions=Old_Italic} (35)
d3745 1
a3745 1
   \p{Script_Extensions: Kannada} (Short: \p{Scx=Knda}) (86)
d3752 4
a3755 1
   \p{Script_Extensions: Knda} \p{Script_Extensions=Kannada} (86)
d3760 2
a3761 2
   \p{Script_Extensions: Latin} (Short: \p{Scx=Latn}) (1289)
   \p{Script_Extensions: Latn} \p{Script_Extensions=Latin} (1289)
d3764 3
a3766 2
   \p{Script_Extensions: Limb} \p{Script_Extensions=Limbu} (66)
   \p{Script_Extensions: Limbu} (Short: \p{Scx=Limb}) (66)
d3768 1
d3775 3
a3777 1
   \p{Script_Extensions: Malayalam} (Short: \p{Scx=Mlym}) (98)
d3780 2
d3783 3
d3787 1
a3787 1
                             (26)
d3790 1
a3790 1
   \p{Script_Extensions: Meroitic_Cursive} (Short: \p{Scx=Merc}) (26)
d3794 2
a3795 1
   \p{Script_Extensions: Mlym} \p{Script_Extensions=Malayalam} (98)
d3798 2
d3801 8
a3808 2
   \p{Script_Extensions: Myanmar} (Short: \p{Scx=Mymr}) (188)
   \p{Script_Extensions: Mymr} \p{Script_Extensions=Myanmar} (188)
d3816 4
a3819 1
   \p{Script_Extensions: Old_Italic} (Short: \p{Scx=Ital}) (35)
d3823 1
a3823 1
   \p{Script_Extensions: Oriya} (Short: \p{Scx=Orya}) (92)
d3825 1
a3825 1
   \p{Script_Extensions: Orya} \p{Script_Extensions=Oriya} (92)
d3828 6
d3838 2
d3845 3
a3847 2
   \p{Script_Extensions: Qaac} \p{Script_Extensions=Coptic} (137)
   \p{Script_Extensions: Qaai} \p{Script_Extensions=Inherited} (459)
d3850 2
a3851 2
   \p{Script_Extensions: Runic} (Short: \p{Scx=Runr}) (78)
   \p{Script_Extensions: Runr} \p{Script_Extensions=Runic} (78)
d3858 2
a3859 1
   \p{Script_Extensions: Sharada} (Short: \p{Scx=Shrd}) (83)
d3862 7
a3868 3
   \p{Script_Extensions: Shrd} \p{Script_Extensions=Sharada} (83)
   \p{Script_Extensions: Sinh} \p{Script_Extensions=Sinhala} (80)
   \p{Script_Extensions: Sinhala} (Short: \p{Scx=Sinh}) (80)
d3873 4
a3876 4
   \p{Script_Extensions: Sylo} \p{Script_Extensions=Syloti_Nagri} (54)
   \p{Script_Extensions: Syloti_Nagri} (Short: \p{Scx=Sylo}) (54)
   \p{Script_Extensions: Syrc} \p{Script_Extensions=Syriac} (94)
   \p{Script_Extensions: Syriac} (Short: \p{Scx=Syrc}) (94)
d3887 2
a3888 2
   \p{Script_Extensions: Tamil} (Short: \p{Scx=Taml}) (72)
   \p{Script_Extensions: Taml} \p{Script_Extensions=Tamil} (72)
d3890 2
a3891 2
   \p{Script_Extensions: Telu} \p{Script_Extensions=Telugu} (93)
   \p{Script_Extensions: Telugu} (Short: \p{Scx=Telu}) (93)
d3894 2
a3895 2
   \p{Script_Extensions: Thaa} \p{Script_Extensions=Thaana} (66)
   \p{Script_Extensions: Thaana} (Short: \p{Scx=Thaa}) (66)
d3900 2
d3904 2
a3905 2
   \p{Script_Extensions: Unknown} (Short: \p{Scx=Zzzz}) (1_003_925
                             plus all above-Unicode code points)
d3908 2
d3911 1
a3911 1
   \p{Script_Extensions: Xsux} \p{Script_Extensions=Cuneiform} (982)
d3914 4
a3917 5
   \p{Script_Extensions: Zinh} \p{Script_Extensions=Inherited} (459)
   \p{Script_Extensions: Zyyy} \p{Script_Extensions=Common} (6061)
   \p{Script_Extensions: Zzzz} \p{Script_Extensions=Unknown}
                             (1_003_925 plus all above-Unicode code
                             points)
d3923 2
a3924 2
   \p{Sentence_Break: CL}  \p{Sentence_Break=Close} (181)
   \p{Sentence_Break: Close} (Short: \p{SB=CL}) (181)
d3926 5
a3930 5
   \p{Sentence_Break: EX}  \p{Sentence_Break=Extend} (1649)
   \p{Sentence_Break: Extend} (Short: \p{SB=EX}) (1649)
   \p{Sentence_Break: FO}  \p{Sentence_Break=Format} (143)
   \p{Sentence_Break: Format} (Short: \p{SB=FO}) (143)
   \p{Sentence_Break: LE}  \p{Sentence_Break=OLetter} (97_841)
d3932 6
a3937 6
   \p{Sentence_Break: LO}  \p{Sentence_Break=Lower} (1933)
   \p{Sentence_Break: Lower} (Short: \p{SB=LO}) (1933)
   \p{Sentence_Break: NU}  \p{Sentence_Break=Numeric} (452)
   \p{Sentence_Break: Numeric} (Short: \p{SB=NU}) (452)
   \p{Sentence_Break: OLetter} (Short: \p{SB=LE}) (97_841)
   \p{Sentence_Break: Other} (Short: \p{SB=XX}) (1_010_264 plus all
d3944 5
a3948 5
   \p{Sentence_Break: ST}  \p{Sentence_Break=STerm} (80)
   \p{Sentence_Break: STerm} (Short: \p{SB=ST}) (80)
   \p{Sentence_Break: UP}  \p{Sentence_Break=Upper} (1514)
   \p{Sentence_Break: Upper} (Short: \p{SB=UP}) (1514)
   \p{Sentence_Break: XX}  \p{Sentence_Break=Other} (1_010_264 plus
d3952 2
d3955 1
a3955 1
                             \p{Block=Sharada}) (83)
d3958 2
d3961 9
a3969 1
                             \p{Block=Sharada}) (83)
d3971 1
a3971 1
                             \p{Block=Sinhala}) (80)
d3973 2
a3974 1
                             \p{Block=Sinhala}) (80)
d3977 1
a3977 1
                             (115)
d3985 1
a3985 1
                             Other_Symbol}) (4404)
d3995 1
a3995 2
   \p{Space}               \p{White_Space=Y} \s including beyond
                             ASCII and vertical tab (25)
d3999 1
a3999 1
   \p{SpacePerl}           \p{XPerlSpace} (25)
d4001 1
a4001 1
                             \p{Mc}) (352)
d4005 2
a4006 2
   \p{STerm}               \p{STerm=Y} (83)
   \p{STerm: N*}           (Single: \P{STerm}) (1_114_029 plus all
d4008 1
a4008 1
   \p{STerm: Y*}           (Single: \p{STerm}) (83)
d4021 2
d4037 5
d4052 2
d4059 4
d4071 1
d4078 1
a4078 1
                             (5516)
d4115 1
a4115 1
                             \p{Block=Telugu}) (93)
d4117 1
a4117 1
                             \p{Block=Telugu}) (93)
d4119 1
a4119 1
                             \p{Terminal_Punctuation=Y}) (176)
d4122 1
a4122 1
                             \p{Term}) (176)
d4124 1
a4124 1
                             (1_113_936 plus all above-Unicode code
d4126 1
a4126 1
   \p{Terminal_Punctuation: Y*} (Short: \p{Term=Y}, \p{Term}) (176)
d4142 4
d4169 1
a4169 1
                             \p{Unified_Ideograph=Y}) (74_617)
d4172 1
a4172 1
                             \p{Cn}) (864_409 plus all above-Unicode
d4182 1
a4182 1
                             (74_617)
d4184 1
a4184 1
                             (1_039_495 plus all above-Unicode code
d4186 1
a4186 1
   \p{Unified_Ideograph: Y*} (Short: \p{UIdeo=Y}, \p{UIdeo}) (74_617)
d4188 1
a4188 1
                             (1_003_925 plus all above-Unicode code
d4190 2
a4191 1
   \p{Upper}               \p{Uppercase=Y} (/i= Cased=Yes) (1483)
d4193 2
a4194 2
   \p{Uppercase}           \p{Upper} (= \p{Uppercase=Y}) (/i= Cased=
                             Yes) (1483)
d4196 1
a4196 1
                             No) (1_112_629 plus all above-Unicode
d4199 1
a4199 1
                             Yes) (1483)
d4202 1
a4202 1
                             Cased_Letter) (1441)
d4229 4
d4234 6
a4239 8
   \p{White_Space}         \p{White_Space=Y} (Short: \p{WSpace}) (25)
   \p{White_Space: N*}     (Short: \p{Space=N}, \P{WSpace})
                             (1_114_087 plus all above-Unicode code
                             points)
   \p{White_Space: Y*}     (Short: \p{Space=Y}, \p{WSpace}) (25)
   \p{Word}                \w, including beyond ASCII; = \p{Alnum} +
                             \pM + \p{Pc} (103_406)
   \p{Word_Break: ALetter} (Short: \p{WB=LE}) (24_867)
d4244 1
a4244 1
   \p{Word_Break: Extend}  (Short: \p{WB=Extend}) (1649)
d4246 2
a4247 2
   \p{Word_Break: FO}      \p{Word_Break=Format} (142)
   \p{Word_Break: Format}  (Short: \p{WB=FO}) (142)
d4252 1
a4252 1
   \p{Word_Break: LE}      \p{Word_Break=ALetter} (24_867)
d4262 3
a4264 3
   \p{Word_Break: NU}      \p{Word_Break=Numeric} (451)
   \p{Word_Break: Numeric} (Short: \p{WB=NU}) (451)
   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_086_543 plus all
d4270 1
a4270 1
   \p{Word_Break: XX}      \p{Word_Break=Other} (1_086_543 plus all
d4274 1
a4274 1
   \p{XDigit}              \p{Hex_Digit=Y} (Short: \p{Hex}) (44)
d4276 2
a4277 2
                             (103_336)
   \p{XID_Continue: N*}    (Short: \p{XIDC=N}, \P{XIDC}) (1_010_776
d4279 3
a4281 3
   \p{XID_Continue: Y*}    (Short: \p{XIDC=Y}, \p{XIDC}) (103_336)
   \p{XID_Start}           \p{XID_Start=Y} (Short: \p{XIDS}) (101_217)
   \p{XID_Start: N*}       (Short: \p{XIDS=N}, \P{XIDS}) (1_012_895
d4283 1
a4283 1
   \p{XID_Start: Y*}       (Short: \p{XIDS=Y}, \p{XIDS}) (101_217)
d4285 1
a4285 1
                             (103_336)
d4287 1
a4287 1
   \p{XIDS}                \p{XID_Start} (= \p{XID_Start=Y}) (101_217)
d4291 27
a4317 19
   \p{XPerlSpace}          \s, including beyond ASCII (Short:
                             \p{SpacePerl}) (25)
   \p{XPosixAlnum}         \p{Alnum} (102_619)
   \p{XPosixAlpha}         \p{Alpha} (= \p{Alphabetic=Y}) (102_159)
   \p{XPosixBlank}         \p{Blank} (18)
   \p{XPosixCntrl}         \p{Cntrl} (= \p{General_Category=Control})
                             (65)
   \p{XPosixDigit}         \p{Digit} (= \p{General_Category=
                             Decimal_Number}) (460)
   \p{XPosixGraph}         \p{Graph} (247_571)
   \p{XPosixLower}         \p{Lower} (= \p{Lowercase=Y}) (/i= Cased=
                             Yes) (1934)
   \p{XPosixPrint}         \p{Print} (247_588)
   \p{XPosixPunct}         \p{Punct} + ASCII-range \p{Symbol} (645)
   \p{XPosixSpace}         \p{Space} (= \p{White_Space=Y}) (25)
   \p{XPosixUpper}         \p{Upper} (= \p{Uppercase=Y}) (/i= Cased=
                             Yes) (1483)
   \p{XPosixWord}          \p{Word} (103_406)
   \p{XPosixXDigit}        \p{XDigit} (= \p{Hex_Digit=Y}) (44)
d4319 1
a4319 1
                             (NOT \p{Block=Cuneiform}) (982)
d4331 1
a4331 1
                             (523)
d4340 1
a4340 1
   \p{Zyyy}                \p{Common} (= \p{Script=Common}) (6418)
d4342 1
a4342 1
                             (1_003_925 plus all above-Unicode code
d4347 1
a4347 1
                             stable) (= \p{Case_Ignorable=Y}) (1806)
d4350 1
a4350 1
                             Above}) (349)
d4375 8
a4382 3
All the Unicode character properties mentioned above (except for those marked
as for internal use by Perl) are also accessible by
L<Unicode::UCD/prop_invlist()>.
d4424 1
a4424 2
   Alnum                   (Perl extension).  Alphabetic and
                           (decimal) Numeric
d4442 1
a4442 2
   Blank                   (Perl extension).  \h, Horizontal white
                           space
d4464 2
a4465 2
   Cntrl                   General_Category=Cntrl.  (Perl extension).
                           Control characters
d4483 2
a4484 2
   Digit                   General_Category=Digit.  (Perl extension).
                           [0-9] + all other decimal digits
d4497 1
a4497 2
   Graph                   (Perl extension).  Characters that are
                           graphical
d4504 1
a4504 1
   HorizSpace              Blank.  (Perl extension)
d4519 4
d4567 2
a4568 4
   PerlSpace               (Perl extension).  \s, restricted to ASCII
                           = [ \f\n\r\t] plus vertical tab
   PerlWord                (Perl extension).  \w, restricted to ASCII
                           = [A-Za-z0-9_]
d4588 2
a4589 1
   PosixWord               PerlWord.  (Perl extension)
d4592 1
a4592 3
   Print                   (Perl extension).  Characters that are
                           graphical plus space characters (but no
                           controls)
d4614 1
a4614 1
   SpacePerl               XPerlSpace.  (Perl extension)
d4638 1
a4638 2
   Word                    (Perl extension).  \w, including beyond
                           ASCII; = \p{Alnum} + \pM + \p{Pc}
d4641 1
a4641 1
   XDigit                  (Perl extension)
d4646 18
a4663 10
   XPerlSpace              (Perl extension).  \s, including beyond
                           ASCII
   XPosixAlnum             Alnum.  (Perl extension)
   XPosixAlpha             Alpha.  (Perl extension)
   XPosixBlank             Blank.  (Perl extension)
   XPosixCntrl             General_Category=Cntrl.  (Perl extension)
   XPosixDigit             General_Category=Digit.  (Perl extension)
   XPosixGraph             Graph.  (Perl extension)
   XPosixLower             Lower.  (Perl extension)
   XPosixPrint             Print.  (Perl extension)
d4666 7
a4672 4
   XPosixSpace             Space.  (Perl extension)
   XPosixUpper             Upper.  (Perl extension)
   XPosixWord              Word.  (Perl extension)
   XPosixXDigit            XDigit.  (Perl extension)
a4728 8
=item I<Indic_Matra_Category> (InMC)

=item I<Indic_Syllabic_Category> (InSC)

Provisional



d4771 4
d4808 1
a4808 5
Documentation of validation tests



=item F<auxiliary/LBTest.txt> 
a4809 1
=item F<auxiliary/SBTest.txt> 
a4810 1
=item F<auxiliary/WBTest.txt> 
a4839 8
=item F<IndicMatraCategory.txt> 

=item F<IndicSyllabicCategory.txt> 

Provisional; for the analysis and processing of Indic scripts



a4860 6



=item F<Props.txt> 

Only in very early releases; is a subset of F<PropList.txt> (which is used instead)
@


1.3
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d5 1
a5 1
# database, Version 6.2.0.  Any changes made here will be lost!
d14 1
a14 1
perluniprops - Index of Unicode Version 6.2.0 character properties in Perl
d61 1
a61 1
whose Script property is Greek.
d79 1
a79 1
But a 'B<T>' at the beginning of an entry in the table below
d84 2
d113 2
d120 2
d165 2
d184 8
a191 5
synonyms.  It shows both the single and compound forms for each property that
has them.  If the left column is a short name for a property, the right column
will give its longer, more descriptive name; and if the left column is the
longest name, the right column will show any equivalent shortest name, in both
single and compound forms if applicable.
d199 3
a201 3
Numbers in (parentheses) indicate the total number of code points matched by
the property.  For emphasis, those properties that match no code points at all
are listed as well in a separate section following the table.
d205 1
a205 4
affected.  These are shown with the notation

 (/i= other_property)

d207 1
a207 1
same code pode points as the property "other_property".
d244 14
a257 1
=item Z<>B<*> is a wild-card
d259 1
a259 2
=item B<(\d+)> in the info column gives the number of code points matched by
this property.
d261 1
a261 1
=item B<D> means this is deprecated.
d263 1
a263 1
=item B<O> means this is obsolete.
d265 1
a265 1
=item B<S> means this is stabilized.
d267 1
a267 1
=item B<T> means tighter (stricter) name matching applies.
d269 3
a271 1
=item B<X> means use of this form is discouraged, and may not be
d293 3
a295 1
   \p{Age: NA}             \p{Age=Unassigned} (864_348)
d298 2
a299 1
                             \p{Age=NA}) (864_348)
d341 3
d351 3
a353 1
   \p{All}                 \p{Any} (1_114_112)
d358 2
a359 1
   \p{Alphabetic: N*}      (Short: \p{Alpha=N}, \P{Alpha}) (1_011_953)
d375 2
a376 1
   \p{Any}                 [\x{0000}-\x{10FFFF}] (1_114_112)
d378 1
a378 1
                             \p{Block=Arabic}) (1235)
d380 1
a380 1
                             \p{Block=Arabic}) (1235)
d419 2
a420 1
   \p{ASCII_Hex_Digit: N*} (Short: \p{AHex=N}, \P{AHex}) (1_114_090)
d422 1
a422 1
   \p{Assigned}            All assigned code points (249_698)
d449 2
a450 1
   \p{Bidi_C}              \p{Bidi_Control} (= \p{Bidi_Control=Y}) (7)
d457 2
a458 2
   \p{Bidi_Class: BN}      \p{Bidi_Class=Boundary_Neutral} (4015)
   \p{Bidi_Class: Boundary_Neutral} (Short: \p{Bc=BN}) (4015)
d463 1
a463 1
   \p{Bidi_Class: ET}      \p{Bidi_Class=European_Terminator} (66)
d466 7
a472 3
   \p{Bidi_Class: European_Terminator} (Short: \p{Bc=ET}) (66)
   \p{Bidi_Class: L}       \p{Bidi_Class=Left_To_Right} (1_098_530)
   \p{Bidi_Class: Left_To_Right} (Short: \p{Bc=L}) (1_098_530)
d474 1
d477 1
d479 2
a480 2
   \p{Bidi_Class: Nonspacing_Mark} (Short: \p{Bc=NSM}) (1290)
   \p{Bidi_Class: NSM}     \p{Bidi_Class=Nonspacing_Mark} (1290)
d485 1
d487 1
d491 1
d494 1
d498 6
a503 5
   \p{Bidi_Class: White_Space} (Short: \p{Bc=WS}) (18)
   \p{Bidi_Class: WS}      \p{Bidi_Class=White_Space} (18)
   \p{Bidi_Control}        \p{Bidi_Control=Y} (Short: \p{BidiC}) (7)
   \p{Bidi_Control: N*}    (Short: \p{BidiC=N}, \P{BidiC}) (1_114_105)
   \p{Bidi_Control: Y*}    (Short: \p{BidiC=Y}, \p{BidiC}) (7)
d509 2
a510 1
   \p{Bidi_Mirrored: N*}   (Short: \p{BidiM=N}, \P{BidiM}) (1_113_567)
d512 12
a523 1
   \p{Blank}               \h, Horizontal white space (19)
d965 2
a966 1
   \p{Block: NB}           \p{Block=No_Block} (860_672)
d972 2
a973 1
   \p{Block: No_Block}     (Short: \p{Blk=NB}, \p{InNB}) (860_672)
d1164 1
d1185 3
a1187 2
   \p{C}                   \p{Other} (= \p{General_Category=Other})
                             (1_004_134)
d1197 2
a1198 1
                             Not_Reordered} (1_113_459)
d1401 2
a1402 1
                             (1_113_459)
d1404 2
a1405 1
                             Not_Reordered} (1_113_459)
d1422 4
a1425 3
   \p{Case_Ignorable}      \p{Case_Ignorable=Y} (Short: \p{CI}) (1799)
   \p{Case_Ignorable: N*}  (Short: \p{CI=N}, \P{CI}) (1_112_313)
   \p{Case_Ignorable: Y*}  (Short: \p{CI=Y}, \p{CI}) (1799)
d1427 2
a1428 1
   \p{Cased: N*}           (Single: \P{Cased}) (1_110_664)
d1440 1
a1440 1
                             (139)
d1447 2
a1448 1
                             (1_113_005)
d1454 2
a1455 1
                             (1_111_974)
d1461 2
a1462 1
                             (1_113_069)
d1465 1
a1465 1
                             Y} (Short: \p{CWKCF}) (9944)
d1467 2
a1468 1
                             \P{CWKCF}) (1_104_168)
d1470 1
a1470 1
                             \p{CWKCF}) (9944)
d1474 2
a1475 1
                             (1_113_013)
d1480 2
a1481 1
                             (1_112_986)
d1488 1
a1488 1
                             Y}) (1799)
d1557 1
a1557 1
                             (Short: \p{Pe}) (71)
d1559 2
a1560 1
                             Unassigned}) (864_414)
d1585 1
a1585 1
   \p{Common}              \p{Script=Common} (Short: \p{Zyyy}) (6413)
d1595 2
a1596 1
   \p{Composition_Exclusion: N*} (Short: \p{CE=N}, \P{CE}) (1_114_031)
d1634 1
a1634 1
                             (9944)
d1666 2
a1667 1
   \p{Dash: N*}            (Single: \P{Dash}) (1_114_085)
d1700 2
a1701 1
   \p{Decomposition_Type: None} (Short: \p{Dt=None}) (1_097_232)
d1713 1
a1713 1
                             Y} (Short: \p{DI}) (4167)
d1715 2
a1716 1
                             (1_109_945)
d1718 1
a1718 1
                             (4167)
d1722 2
a1723 1
   \p{Deprecated: N*}      (Short: \p{Dep=N}, \P{Dep}) (1_114_001)
d1736 1
a1736 1
                             (4167)
d1741 2
a1742 1
   \p{Diacritic: N*}       (Short: \p{Dia=N}, \P{Dia}) (1_113_419)
d1773 2
a1774 1
   \p{East_Asian_Width: N} \p{East_Asian_Width=Neutral} (801_894)
d1777 2
a1778 1
   \p{East_Asian_Width: Neutral} (Short: \p{Ea=N}) (801_894)
d1831 2
a1832 1
   \p{Extender: N*}        (Short: \p{Ext=N}, \P{Ext}) (1_114_081)
d1837 1
a1837 1
                             \p{Cf}) (139)
d1841 2
a1842 1
                             \P{CompEx}) (1_112_992)
d1847 2
a1848 1
   \p{General_Category: C} \p{General_Category=Other} (1_004_134)
d1852 1
a1852 1
   \p{General_Category: Cf} \p{General_Category=Format} (139)
d1854 3
a1856 2
                             (71)
   \p{General_Category: Cn} \p{General_Category=Unassigned} (864_414)
d1877 1
a1877 1
   \p{General_Category: Format} (Short: \p{Gc=Cf}, \p{Cf}) (139)
d1904 2
a1905 2
   \p{General_Category: Math_Symbol} (Short: \p{Gc=Sm}, \p{Sm}) (952)
   \p{General_Category: Mc} \p{General_Category=Spacing_Mark} (353)
d1908 1
a1908 1
                             (1280)
d1918 1
a1918 1
                             (1280)
d1921 3
a1923 2
                             (72)
   \p{General_Category: Other} (Short: \p{Gc=C}, \p{C}) (1_004_134)
d1931 1
a1931 1
   \p{General_Category: P} \p{General_Category=Punctuation} (632)
d1938 1
a1938 1
                             (71)
d1947 4
a1950 4
   \p{General_Category: Ps} \p{General_Category=Open_Punctuation} (72)
   \p{General_Category: Punct} \p{General_Category=Punctuation} (632)
   \p{General_Category: Punctuation} (Short: \p{Gc=P}, \p{P}) (632)
   \p{General_Category: S} \p{General_Category=Symbol} (5520)
d1952 1
a1952 1
   \p{General_Category: Separator} (Short: \p{Gc=Z}, \p{Z}) (20)
d1954 1
a1954 1
   \p{General_Category: Sm} \p{General_Category=Math_Symbol} (952)
d1957 2
a1958 2
                             (18)
   \p{General_Category: Spacing_Mark} (Short: \p{Gc=Mc}, \p{Mc}) (353)
d1960 1
a1960 1
   \p{General_Category: Symbol} (Short: \p{Gc=S}, \p{S}) (5520)
d1964 2
a1965 1
                             (864_414)
d1968 1
a1968 1
   \p{General_Category: Z} \p{General_Category=Separator} (20)
d1972 1
a1972 1
   \p{General_Category: Zs} \p{General_Category=Space_Separator} (18)
d1993 1
a1993 1
                             (108_661)
d1996 1
a1996 1
                             Y}) (1317)
d1998 1
a1998 1
   \p{Graph}               Characters that are graphical (247_565)
d2000 1
a2000 1
                             (108_661)
d2002 3
a2004 2
                             (1_005_451)
   \p{Grapheme_Base: Y*}   (Short: \p{GrBase=Y}, \p{GrBase}) (108_661)
d2006 2
a2007 2
                             (6023)
   \p{Grapheme_Cluster_Break: Control} (Short: \p{GCB=CN}) (6023)
d2010 2
a2011 2
                             (1317)
   \p{Grapheme_Cluster_Break: Extend} (Short: \p{GCB=EX}) (1317)
d2016 2
a2017 1
   \p{Grapheme_Cluster_Break: Other} (Short: \p{GCB=XX}) (1_094_924)
d2026 2
a2027 2
                             SpacingMark} (291)
   \p{Grapheme_Cluster_Break: SpacingMark} (Short: \p{GCB=SM}) (291)
d2031 2
a2032 1
                             (1_094_924)
d2034 4
a2037 3
                             (1317)
   \p{Grapheme_Extend: N*} (Short: \p{GrExt=N}, \P{GrExt}) (1_112_795)
   \p{Grapheme_Extend: Y*} (Short: \p{GrExt=Y}, \p{GrExt}) (1317)
d2088 2
a2089 1
                             Not_Applicable} (1_102_583)
d2091 2
a2092 1
                             (1_102_583)
d2113 2
a2114 1
   \p{Hex_Digit: N*}       (Short: \p{Hex=N}, \P{Hex}) (1_114_068)
d2127 1
a2127 1
   \p{HorizSpace}          \p{Blank} (19)
d2132 2
a2133 1
                             (Single: \P{Hyphen}) (1_114_101)
d2140 2
a2141 1
   \p{ID_Continue: N*}     (Short: \p{IDC=N}, \P{IDC}) (1_010_757)
d2144 2
a2145 1
   \p{ID_Start: N*}        (Short: \p{IDS=N}, \P{IDS}) (1_012_872)
d2156 2
a2157 1
   \p{Ideographic: N*}     (Short: \p{Ideo=N}, \P{Ideo}) (1_038_479)
d2167 2
a2168 1
                             (1_114_102)
d2173 2
a2174 1
                             (1_114_110)
d2217 1
a2217 1
                             \p{Block=Javanese}) (91)
d2219 1
a2219 1
                             \p{Block=Javanese}) (91)
d2224 2
a2225 1
   \p{Join_Control: N*}    (Short: \p{JoinC=N}, \P{JoinC}) (1_114_110)
d2259 2
a2260 1
                             (1_113_870)
d2291 8
a2298 7
   \p{Joining_Type: C}     \p{Joining_Type=Join_Causing} (3)
   \p{Joining_Type: D}     \p{Joining_Type=Dual_Joining} (215)
   \p{Joining_Type: Dual_Joining} (Short: \p{Jt=D}) (215)
   \p{Joining_Type: Join_Causing} (Short: \p{Jt=C}) (3)
   \p{Joining_Type: L}     \p{Joining_Type=Left_Joining} (0)
   \p{Joining_Type: Left_Joining} (Short: \p{Jt=L}) (0)
   \p{Joining_Type: Non_Joining} (Short: \p{Jt=U}) (1_112_389)
d2301 4
a2304 3
   \p{Joining_Type: T}     \p{Joining_Type=Transparent} (1423)
   \p{Joining_Type: Transparent} (Short: \p{Jt=T}) (1423)
   \p{Joining_Type: U}     \p{Joining_Type=Non_Joining} (1_112_389)
d2344 1
a2344 1
   \p{L}                   \p{Letter} (= \p{General_Category=Letter})
d2408 1
a2408 1
   \p{Line_Break: BA}      \p{Line_Break=Break_After} (151)
d2411 1
a2411 1
   \p{Line_Break: Break_After} (Short: \p{Lb=BA}) (151)
d2422 2
a2423 2
   \p{Line_Break: CM}      \p{Line_Break=Combining_Mark} (1628)
   \p{Line_Break: Combining_Mark} (Short: \p{Lb=CM}) (1628)
d2440 2
a2441 2
   \p{Line_Break: ID}      \p{Line_Break=Ideographic} (162_700)
   \p{Line_Break: Ideographic} (Short: \p{Lb=ID}) (162_700)
d2463 2
a2464 2
   \p{Line_Break: PR}      \p{Line_Break=Prefix_Numeric} (46)
   \p{Line_Break: Prefix_Numeric} (Short: \p{Lb=PR}) (46)
d2478 2
a2479 1
   \p{Line_Break: Unknown} (Short: \p{Lb=XX}) (918_337)
d2482 2
a2483 1
   \p{Line_Break: XX}      \p{Line_Break=Unknown} (918_337)
d2507 2
a2508 1
                             (1_114_097)
d2516 2
a2517 1
                             No) (1_112_178)
d2538 1
a2538 1
   \p{M}                   \p{Mark} (= \p{General_Category=Mark})
d2553 2
a2554 1
   \p{Math: N*}            (Single: \P{Math}) (1_111_802)
d2563 1
a2563 1
                             \p{Sm}) (952)
d2570 1
a2570 1
                             Spacing_Mark}) (353)
d2629 1
a2629 1
                             (1280)
d2656 1
a2656 1
   \p{N}                   \p{Number} (= \p{General_Category=Number})
d2659 2
a2660 1
                             (860_672)
d2679 2
a2680 1
                             (1_112_888)
d2683 2
a2684 1
                             (1_112_888)
d2694 2
a2695 1
                             (1_100_887)
d2698 2
a2699 1
                             (1_100_887)
d2711 2
a2712 1
                             (1_109_221)
d2715 2
a2716 1
                             (1_109_221)
d2726 2
a2727 1
                             (1_097_232)
d2730 2
a2731 1
                             (1_097_232)
d2740 2
a2741 1
                             (860_672)
d2745 2
a2746 1
                             (1_114_046)
d2750 1
a2750 1
                             (Short: \p{Mn}) (1280)
d2759 2
a2760 1
   \p{Numeric_Type: None}  (Short: \p{Nt=None}) (1_112_883)
a2762 1
 T \p{Numeric_Value: -1}   (Short: \p{Nv=-1}) (2)
d2787 1
a2787 1
 T \p{Numeric_Value: 2}    (Short: \p{Nv=2}) (100)
d2789 1
a2789 1
 T \p{Numeric_Value: 3}    (Short: \p{Nv=3}) (102)
d2881 2
a2882 1
   \p{Numeric_Value: NaN}  (Short: \p{Nv=NaN}) (1_112_883)
d2902 1
a2902 1
                             (Short: \p{Ps}) (72)
d2917 2
a2918 1
                             (1_004_134)
d2927 1
a2927 1
   \p{P}                   \p{Punct} (= \p{General_Category=
d2929 1
a2929 1
                             \p{General_Punctuation}) (632)
d2941 2
a2942 1
                             (1_111_352)
d2947 2
a2948 1
                             (1_114_101)
d2958 1
a2958 1
                             (71)
d3008 1
a3008 1
   \p{PosixGraph}          [-!"#$%&'()*+,./:;<>?@@[\\]^_`{|}~0-9A-Za-
d3011 3
a3013 3
   \p{PosixPrint}          [- 0-9A-Za-
                             z!"#$%&'()*+,./:;<>?@@[\\]^_`{|}~] (95)
   \p{PosixPunct}          [-!"#$%&'()*+,./:;<>?@@[\\]^_`{|}~] (32)
d3061 3
d3065 2
a3066 1
                             Unassigned}) (Perl extension) (864_348)
d3068 1
a3068 1
                             characters (but no controls) (247_583)
d3079 1
a3079 1
                             (72)
d3083 1
a3083 1
                             \p{P}; NOT \p{General_Punctuation}) (632)
d3086 1
a3086 1
                             \p{General_Punctuation}) (632)
d3096 2
a3097 1
   \p{Quotation_Mark: N*}  (Short: \p{QMark=N}, \P{QMark}) (1_114_083)
d3100 2
a3101 1
   \p{Radical: N*}         (Single: \P{Radical}) (1_113_783)
d3115 2
a3116 2
   \p{S}                   \p{Symbol} (= \p{General_Category=Symbol})
                             (5520)
d3132 2
a3133 2
   \p{Script: Arab}        \p{Script=Arabic} (1235)
   \p{Script: Arabic}      (Short: \p{Sc=Arab}, \p{Arab}) (1235)
d3167 1
a3167 1
   \p{Script: Common}      (Short: \p{Sc=Zyyy}, \p{Zyyy}) (6413)
d3213 2
a3214 2
   \p{Script: Java}        \p{Script=Javanese} (91)
   \p{Script: Javanese}    (Short: \p{Sc=Java}, \p{Java}) (91)
d3332 2
a3333 1
   \p{Script: Unknown}     (Short: \p{Sc=Zzzz}, \p{Zzzz}) (1_003_930)
d3341 5
a3345 4
   \p{Script: Zyyy}        \p{Script=Common} (6413)
   \p{Script: Zzzz}        \p{Script=Unknown} (1_003_930)
   \p{Script_Extensions: Arab} \p{Script_Extensions=Arabic} (1262)
   \p{Script_Extensions: Arabic} (Short: \p{Scx=Arab}) (1262)
d3366 2
a3367 2
   \p{Script_Extensions: Bugi} \p{Script_Extensions=Buginese} (30)
   \p{Script_Extensions: Buginese} (Short: \p{Scx=Bugi}) (30)
d3370 1
a3370 1
   \p{Script_Extensions: Cakm} \p{Script_Extensions=Chakma} (67)
d3377 1
a3377 1
   \p{Script_Extensions: Chakma} (Short: \p{Scx=Cakm}) (67)
d3381 1
a3381 1
   \p{Script_Extensions: Common} (Short: \p{Scx=Zyyy}) (6057)
d3430 1
a3430 1
   \p{Script_Extensions: Kaithi} (Short: \p{Scx=Kthi}) (76)
d3441 1
a3441 1
   \p{Script_Extensions: Kthi} \p{Script_Extensions=Kaithi} (76)
d3523 4
a3526 4
   \p{Script_Extensions: Sylo} \p{Script_Extensions=Syloti_Nagri} (44)
   \p{Script_Extensions: Syloti_Nagri} (Short: \p{Scx=Sylo}) (44)
   \p{Script_Extensions: Syrc} \p{Script_Extensions=Syriac} (93)
   \p{Script_Extensions: Syriac} (Short: \p{Scx=Syrc}) (93)
d3530 1
a3530 1
   \p{Script_Extensions: Tai_Le} (Short: \p{Scx=Tale}) (35)
d3535 1
a3535 1
   \p{Script_Extensions: Tale} \p{Script_Extensions=Tai_Le} (35)
d3544 2
a3545 2
   \p{Script_Extensions: Thaa} \p{Script_Extensions=Thaana} (65)
   \p{Script_Extensions: Thaana} (Short: \p{Scx=Thaa}) (65)
d3552 2
a3553 1
   \p{Script_Extensions: Unknown} (Short: \p{Scx=Zzzz}) (1_003_930)
d3561 1
a3561 1
   \p{Script_Extensions: Zyyy} \p{Script_Extensions=Common} (6057)
d3563 2
a3564 1
                             (1_003_930)
d3570 2
a3571 2
   \p{Sentence_Break: CL}  \p{Sentence_Break=Close} (177)
   \p{Sentence_Break: Close} (Short: \p{SB=CL}) (177)
d3575 2
a3576 2
   \p{Sentence_Break: FO}  \p{Sentence_Break=Format} (137)
   \p{Sentence_Break: Format} (Short: \p{SB=FO}) (137)
d3584 2
a3585 1
   \p{Sentence_Break: Other} (Short: \p{SB=XX}) (1_010_273)
d3590 1
a3590 1
   \p{Sentence_Break: Sp}  (Short: \p{SB=Sp}) (21)
d3595 2
a3596 1
   \p{Sentence_Break: XX}  \p{Sentence_Break=Other} (1_010_273)
d3598 1
a3598 1
                             \p{Z}) (20)
d3613 1
a3613 1
                             Math_Symbol}) (952)
d3621 2
a3622 1
   \p{Soft_Dotted: N*}     (Short: \p{SD=N}, \P{SD}) (1_114_066)
d3630 1
a3630 1
                             ASCII and vertical tab (26)
d3633 2
a3634 2
                             (Short: \p{Zs}) (18)
   \p{SpacePerl}           \p{XPerlSpace} (26)
d3636 1
a3636 1
                             \p{Mc}) (353)
d3641 2
a3642 1
   \p{STerm: N*}           (Single: \P{STerm}) (1_114_029)
d3699 1
a3699 1
                             (5520)
d3745 2
a3746 1
                             (1_113_936)
d3789 3
a3791 1
                             \p{Cn}) (864_414)
d3801 2
a3802 1
                             (1_039_495)
d3805 2
a3806 1
                             (1_003_930)
d3812 2
a3813 1
                             No) (1_112_629)
d3824 2
a3825 1
   \p{Variation_Selector: N*} (Short: \p{VS=N}, \P{VS}) (1_113_853)
d3846 1
a3846 1
   \p{White_Space}         \p{White_Space=Y} (Short: \p{WSpace}) (26)
d3848 3
a3850 2
                             (1_114_086)
   \p{White_Space: Y*}     (Short: \p{Space=Y}, \p{WSpace}) (26)
d3853 1
a3853 1
   \p{Word_Break: ALetter} (Short: \p{WB=LE}) (24_941)
d3855 2
d3860 4
a3863 2
   \p{Word_Break: FO}      \p{Word_Break=Format} (136)
   \p{Word_Break: Format}  (Short: \p{WB=FO}) (136)
d3866 1
a3866 1
   \p{Word_Break: LE}      \p{Word_Break=ALetter} (24_941)
d3868 2
a3869 2
   \p{Word_Break: MB}      \p{Word_Break=MidNumLet} (8)
   \p{Word_Break: MidLetter} (Short: \p{WB=ML}) (8)
d3871 2
a3872 2
   \p{Word_Break: MidNumLet} (Short: \p{WB=MB}) (8)
   \p{Word_Break: ML}      \p{Word_Break=MidLetter} (8)
d3878 2
a3879 1
   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_086_551)
d3882 5
a3886 2
   \p{Word_Break: XX}      \p{Word_Break=Other} (1_086_551)
   \p{WSpace}              \p{White_Space} (= \p{White_Space=Y}) (26)
d3891 2
a3892 1
   \p{XID_Continue: N*}    (Short: \p{XIDC=N}, \P{XIDC}) (1_010_776)
d3895 2
a3896 1
   \p{XID_Start: N*}       (Short: \p{XIDS=N}, \P{XIDS}) (1_012_895)
d3906 1
a3906 1
                             \p{SpacePerl}) (26)
d3909 1
a3909 1
   \p{XPosixBlank}         \p{Blank} (19)
d3914 1
a3914 1
   \p{XPosixGraph}         \p{Graph} (247_565)
d3917 3
a3919 3
   \p{XPosixPrint}         \p{Print} (247_583)
   \p{XPosixPunct}         \p{Punct} + ASCII-range \p{Symbol} (641)
   \p{XPosixSpace}         \p{Space} (= \p{White_Space=Y}) (26)
d3934 2
a3935 2
   \p{Z}                   \p{Separator} (= \p{General_Category=
                             Separator}) (20)
d3945 2
a3946 2
                             (18)
   \p{Zyyy}                \p{Common} (= \p{Script=Common}) (6413)
d3948 2
a3949 1
                             (1_003_930)
d3953 1
a3953 1
                             stable) (= \p{Case_Ignorable=Y}) (1799)
a3974 2
=item \p{Joining_Type=Left_Joining}

d4022 3
a4024 1
   All                     Any.  (Perl extension)
d4029 2
a4030 1
   Any                     (Perl extension).  [\x{0000}-\x{10FFFF}]
d4042 2
d4049 2
d4180 2
a4181 2
   PosixGraph              (Perl extension).  [-
                           !"#$%&'()*+,./:;<>?@@[\\]^_`{|}~0-9A-Za-z]
d4184 3
a4186 3
                           z!"#$%&'()*+,./:;<>?@@[\\]^_`{|}~]
   PosixPunct              (Perl extension).  [-
                           !"#$%&'()*+,./:;<>?@@[\\]^_`{|}~]
d4230 1
d4415 2
d4457 6
d4487 6
a4498 2
=item F<USourceData.pdf> 

d4502 6
@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d5 1
a5 1
# database, Version 6.1.0.  Any changes made here will be lost!
d14 1
a14 1
perluniprops - Index of Unicode Version 6.1.0 character properties in Perl
d76 1
a76 1
Also, white space, hyphens, and underscores are also normally ignored
d270 2
a271 1
   \p{Age: NA}             \p{Age=Unassigned} (864_349)
d274 1
a274 1
                             \p{Age=NA}) (864_349)
d313 3
d346 1
a346 1
                             \p{Block=Arabic}) (1234)
d348 1
a348 1
                             \p{Block=Arabic}) (1234)
d389 1
a389 1
   \p{Assigned}            All assigned code points (249_697)
d429 1
a429 1
   \p{Bidi_Class: ET}      \p{Bidi_Class=European_Terminator} (65)
d432 3
a434 3
   \p{Bidi_Class: European_Terminator} (Short: \p{Bc=ET}) (65)
   \p{Bidi_Class: L}       \p{Bidi_Class=Left_To_Right} (1_098_531)
   \p{Bidi_Class: Left_To_Right} (Short: \p{Bc=L}) (1_098_531)
d1126 1
a1126 1
                             (1_004_135)
d1217 2
d1294 1
d1487 1
a1487 1
                             Unassigned}) (864_415)
d1512 1
a1512 1
   \p{Common}              \p{Script=Common} (Short: \p{Zyyy}) (6412)
d1550 1
a1550 1
                             (Short: \p{Sc}) (48)
d1694 1
a1694 1
   \p{East_Asian_Width: N} \p{East_Asian_Width=Neutral} (801_811)
d1697 3
a1699 3
   \p{East_Asian_Width: Neutral} (Short: \p{Ea=N}) (801_811)
   \p{East_Asian_Width: W} \p{East_Asian_Width=Wide} (173_217)
   \p{East_Asian_Width: Wide} (Short: \p{Ea=W}) (173_217)
d1764 1
a1764 1
   \p{General_Category: C} \p{General_Category=Other} (1_004_135)
d1771 1
a1771 1
   \p{General_Category: Cn} \p{General_Category=Unassigned} (864_415)
d1781 1
a1781 1
                             (48)
d1837 1
a1837 1
   \p{General_Category: Other} (Short: \p{Gc=C}, \p{C}) (1_004_135)
d1864 2
a1865 2
   \p{General_Category: S} \p{General_Category=Symbol} (5519)
   \p{General_Category: Sc} \p{General_Category=Currency_Symbol} (48)
d1874 1
a1874 1
   \p{General_Category: Symbol} (Short: \p{Gc=S}, \p{S}) (5519)
d1878 1
a1878 1
                             (864_415)
d1906 1
a1906 1
                             (108_660)
d1911 1
a1911 1
   \p{Graph}               Characters that are graphical (247_564)
d1913 1
a1913 1
                             (108_660)
d1915 2
a1916 2
                             (1_005_452)
   \p{Grapheme_Base: Y*}   (Short: \p{GrBase=Y}, \p{GrBase}) (108_660)
d1928 1
a1928 1
   \p{Grapheme_Cluster_Break: Other} (Short: \p{GCB=XX}) (1_094_950)
d1932 4
d1942 1
a1942 1
                             (1_094_950)
d2090 1
a2090 1
                             (524)
d2299 4
a2302 4
   \p{Line_Break: AI}      \p{Line_Break=Ambiguous} (724)
   \p{Line_Break: AL}      \p{Line_Break=Alphabetic} (16_251)
   \p{Line_Break: Alphabetic} (Short: \p{Lb=AL}) (16_251)
   \p{Line_Break: Ambiguous} (Short: \p{Lb=AI}) (724)
d2336 2
a2337 2
   \p{Line_Break: ID}      \p{Line_Break=Ideographic} (161_793)
   \p{Line_Break: Ideographic} (Short: \p{Lb=ID}) (161_793)
d2359 2
a2360 2
   \p{Line_Break: PR}      \p{Line_Break=Prefix_Numeric} (45)
   \p{Line_Break: Prefix_Numeric} (Short: \p{Lb=PR}) (45)
d2363 2
d2374 1
a2374 1
   \p{Line_Break: Unknown} (Short: \p{Lb=XX}) (918_338)
d2377 1
a2377 1
   \p{Line_Break: XX}      \p{Line_Break=Unknown} (918_338)
d2639 4
a2642 3
   \p{Numeric_Type: None}  (Short: \p{Nt=None}) (1_112_887)
   \p{Numeric_Type: Nu}    \p{Numeric_Type=Numeric} (637)
   \p{Numeric_Type: Numeric} (Short: \p{Nt=Nu}) (637)
d2755 2
d2761 1
a2761 1
   \p{Numeric_Value: NaN}  (Short: \p{Nv=NaN}) (1_112_887)
d2796 1
a2796 1
                             (1_004_135)
d2835 2
a2836 1
   \p{PerlSpace}           \s, restricted to ASCII = [ \f\n\r\t] (5)
d2934 3
d2938 1
a2938 1
                             Unassigned}) (Perl extension) (864_349)
d2940 1
a2940 1
                             characters (but no controls) (247_582)
d2962 1
a2962 1
                             (524)
d2986 1
a2986 1
                             (5519)
d3000 1
a3000 1
                             (48)
d3002 2
a3003 2
   \p{Script: Arab}        \p{Script=Arabic} (1234)
   \p{Script: Arabic}      (Short: \p{Sc=Arab}, \p{Arab}) (1234)
d3037 1
a3037 1
   \p{Script: Common}      (Short: \p{Sc=Zyyy}, \p{Zyyy}) (6412)
d3077 1
a3077 1
   \p{Script: Inherited}   (Short: \p{Sc=Zinh}, \p{Zinh}) (524)
d3153 1
a3153 1
   \p{Script: Qaai}        \p{Script=Inherited} (524)
d3202 1
a3202 1
   \p{Script: Unknown}     (Short: \p{Sc=Zzzz}, \p{Zzzz}) (1_003_931)
d3209 5
a3213 5
   \p{Script: Zinh}        \p{Script=Inherited} (524)
   \p{Script: Zyyy}        \p{Script=Common} (6412)
   \p{Script: Zzzz}        \p{Script=Unknown} (1_003_931)
   \p{Script_Extensions: Arab} \p{Script_Extensions=Arabic} (1261)
   \p{Script_Extensions: Arabic} (Short: \p{Scx=Arab}) (1261)
d3249 1
a3249 1
   \p{Script_Extensions: Common} (Short: \p{Scx=Zyyy}) (6059)
d3255 2
a3256 2
   \p{Script_Extensions: Cyrillic} (Short: \p{Scx=Cyrl}) (417)
   \p{Script_Extensions: Cyrl} \p{Script_Extensions=Cyrillic} (417)
d3258 2
a3259 2
   \p{Script_Extensions: Deva} \p{Script_Extensions=Devanagari} (163)
   \p{Script_Extensions: Devanagari} (Short: \p{Scx=Deva}) (163)
d3273 2
a3274 2
   \p{Script_Extensions: Greek} (Short: \p{Scx=Grek}) (511)
   \p{Script_Extensions: Grek} \p{Script_Extensions=Greek} (511)
d3290 1
a3290 1
   \p{Script_Extensions: Inherited} (Short: \p{Scx=Zinh}) (506)
d3313 2
a3314 2
   \p{Script_Extensions: Latin} (Short: \p{Scx=Latn}) (1272)
   \p{Script_Extensions: Latn} \p{Script_Extensions=Latin} (1272)
d3370 1
a3370 1
   \p{Script_Extensions: Qaai} \p{Script_Extensions=Inherited} (506)
d3420 1
a3420 1
   \p{Script_Extensions: Unknown} (Short: \p{Scx=Zzzz}) (1_003_931)
d3427 2
a3428 2
   \p{Script_Extensions: Zinh} \p{Script_Extensions=Inherited} (506)
   \p{Script_Extensions: Zyyy} \p{Script_Extensions=Common} (6059)
d3430 1
a3430 1
                             (1_003_931)
d3493 1
a3493 1
                             ASCII plus vertical tab (26)
d3497 1
a3497 1
   \p{SpacePerl}           \p{XPerlSpace} (25)
d3561 1
a3561 1
                             (5519)
d3650 1
a3650 1
                             \p{Cn}) (864_415)
d3663 1
a3663 1
                             (1_003_931)
d3706 1
a3706 1
                             \pM + \p{Pc} (103_404)
d3728 4
a3731 2
   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_086_577)
   \p{Word_Break: XX}      \p{Word_Break=Other} (1_086_577)
d3750 1
a3750 1
                             \p{SpacePerl}) (25)
d3758 1
a3758 1
   \p{XPosixGraph}         \p{Graph} (247_564)
d3761 1
a3761 1
   \p{XPosixPrint}         \p{Print} (247_582)
d3766 1
a3766 1
   \p{XPosixWord}          \p{Word} (103_404)
d3781 1
a3781 1
                             (524)
d3790 1
a3790 1
   \p{Zyyy}                \p{Common} (= \p{Script=Common}) (6412)
d3792 1
a3792 1
                             (1_003_931)
d3814 2
d4006 1
a4006 1
                           = [ \f\n\r\t]
d4191 1
a4191 1
Obsolete.  All code points previously matched by this have been moved to "Script=Common".  Consider instead using "Script_Extensions=Katakana" or "Script_Extensions=Hiragana (or both)"
d4254 1
a4254 1
=item F<NormalizationTest.txt> 
d4319 8
@


1.1
log
@pregenerate unicode files; mktables uses too much memory for some platforms
@
text
@d5 1
a5 1
# database, Version 5.2.0.  Any changes made here will be lost!
d14 1
a14 1
perluniprops - Index of Unicode Version 5.2.0 properties in Perl
d18 18
a35 2
There are many properties in Unicode, and Perl provides access to almost all of
them, as well as some additional extensions and short-cut synonyms.
d37 2
a38 3
And just about all of the few that aren't accessible through the Perl
core are accessible through the modules: Unicode::Normalize and
Unicode::UCD, and for Unihan properties, via the CPAN module Unicode::Unihan.
d42 2
a43 1
Perl extension.  There is some detail about Blocks, Scripts, General_Category,
d45 2
a46 3
Unicode properties, refer to the Unicode standard.  A good starting place is
L<http://www.unicode.org/reports/tr44/>.  More information on the Perl extensions is in
L<perlrecharclass>.
d51 1
a51 1
=head1 Properties accessible through \p{} and \P{}
d53 3
a55 3
The Perl regular expression \p{} and \P{} constructs give access to most of
the Unicode character properties.  The table below shows all these constructs,
both single and compound forms.
d60 1
a60 1
'\p{Script: Greek}' or '\p{Script=Greek}' both mean to match characters
d63 1
a63 1
B<Single forms>, like '\p{Greek}', are mostly Perl-defined shortcuts for
d65 1
a65 1
example, '\p{Greek}' is a just a shortcut for '\p{Script=Greek}'.)
d67 1
a67 1
compound form.  One such is \p{Word}.  These are also listed in the table.
d70 5
a74 5
everywhere within the {braces}.  Thus '\p{Greek}' means the same thing as
'\p{greek}'.  But note that changing the case of the 'p' or 'P' before the
left brace completely changes the meaning of the construct, from "match" (for
'\p{}') to "doesn't match" (for '\P{}').  Casing in this document is for
improved legibility.
d84 1
a84 1
=item Single form (\p{name}) tighter rules:
d100 1
a100 1
=item Compound form (\p{name=value} or \p{name:value}) tighter rules:
d111 2
a112 2
Some properties are considered obsolete, but still available.  There are
several varieties of obsolesence:
a115 7
=item Obsolete

Properties marked with an 'B<O>' in the table are considered
obsolete.  At the time of this writing (Unicode version 5.2) there is no
information in the Unicode standard about the implications of a property being
obsolete.

d118 5
a122 6
Obsolete properties may be stabilized.  This means that they are not actively
maintained by Unicode, and will not be extended as new characters are added to
the standard.  Such properties are marked with an 'B<S>' in the
table.  At the time of this writing (Unicode version 5.2) there is no further
information in the Unicode standard about the implications of a property being
stabilized.
d126 3
a128 1
Obsolete properties may be deprecated.  This means that their use is strongly
d142 8
d153 18
a170 3
discouraged from being used, but not obsolete.  An 'B<X>'
flags each such entry in the table.

a171 10
Matches in the Block property have shortcuts that begin with 'In_'.  For
example, \p{Block=Latin1} can be written as \p{In_Latin1}.  For backward
compatibility, if there is no conflict with another shortcut, these may also
be written as \p{Latin1} or \p{Is_Latin1}.  But, N.B., there are numerous
such conflicting shortcuts.  Use of these forms for Block is discouraged, and
are flagged as such, not only because of the potential confusion as to what is
meant, but also because a later release of Unicode may preempt the shortcut,
and your program would no longer be correct.  Use the 'In_' form instead to
avoid this, or even more clearly, use the compound form, e.g.,
\p{blk:latin1}.  See L<perlunicode/"Blocks"> for more information about this.
d173 2
a174 3

The table below has two columns.  The left column contains the \p{}
constructs to look up, possibly preceeded by the flags mentioned above; and
d192 9
d202 1
a202 1
http://www.unicode.org/reports/tr44/ for that).
d214 5
a218 4
means that if and only if, for example, \p{Foo} exists, then \p{Is_Foo} and
\p{IsFoo} are also valid and all mean the same thing.  And similarly,
\p{Foo=Bar} means the same as \p{Is_Foo=Bar} and \p{IsFoo=Bar}.  '*' here
is restricted to something not beginning with an underscore.
d232 1
a232 1
B<Summary legend:>
d236 1
a236 1
=item B<*> is a wild-card
d249 2
a250 1
=item B<X> means use of this form is discouraged.
d257 18
a274 1
 T \p{Age: 1.1}            Code point's usage introduced in version
d276 1
a276 1
 T \p{Age: 2.0}            Code point's usage was introduced in
d279 1
a279 1
 T \p{Age: 2.1}            Code point's usage was introduced in
d282 1
a282 1
 T \p{Age: 3.0}            Code point's usage was introduced in
d285 1
a285 1
 T \p{Age: 3.1}            Code point's usage was introduced in
d288 1
a288 1
 T \p{Age: 3.2}            Code point's usage was introduced in
d291 1
a291 1
 T \p{Age: 4.0}            Code point's usage was introduced in
d294 1
a294 1
 T \p{Age: 4.1}            Code point's usage was introduced in
d297 1
a297 1
 T \p{Age: 5.0}            Code point's usage was introduced in
d300 1
a300 1
 T \p{Age: 5.1}            Code point's usage was introduced in
d303 1
a303 1
 T \p{Age: 5.2}            Code point's usage was introduced in
d306 8
a313 5
   \p{Age: Unassigned}     Code point's usage has not been assigned
                             in any Unicode release thus far.
                             (867_169)
   \p{AHex}                \p{ASCII_Hex_Digit} (= \p{ASCII_Hex_Digit=
                             Y}) (22)
d315 4
d320 2
a321 2
   \p{Alnum}               Alphabetic and (Decimal) Numeric (100_931)
   \p{Alpha}               \p{Alphabetic=Y} (100_520)
d323 6
a328 3
   \p{Alphabetic}          \p{Alpha} (= \p{Alphabetic=Y}) (100_520)
   \p{Alphabetic: N*}      (Short: \p{Alpha=N}, \P{Alpha}) (1_013_592)
   \p{Alphabetic: Y*}      (Short: \p{Alpha=Y}, \p{Alpha}) (100_520)
d330 5
a334 1
                             Alphabetic_Presentation_Forms} (80)
d336 2
a337 1
                             Ancient_Greek_Musical_Notation} (80)
d342 1
a342 1
                             \p{Block=Arabic}) (1030)
d344 18
a361 1
                             \p{Block=Arabic}) (1030)
d363 2
a364 1
                             Arabic_Presentation_Forms_A} (688)
d366 6
a371 2
                             Arabic_Presentation_Forms_B} (144)
 X \p{Arabic_Supplement}   \p{Block=Arabic_Supplement} (48)
d373 1
a373 1
                             \p{Block=Armenian}) (90)
d378 1
a378 1
                             \p{Block=Armenian}) (90)
d381 1
a381 1
   \p{ASCII_Hex_Digit}     \p{ASCII_Hex_Digit=Y} (Short: \p{AHex})
d385 1
a385 1
   \p{Assigned}            All assigned code points (246_877)
d395 1
a395 1
                             \p{Block=Bamum}) (88)
d397 5
a401 1
                             \p{Block=Bamum}) (88)
d403 4
d414 4
a417 4
   \p{Bidi_Class: AL}      \p{Bidi_Class=Arabic_Letter} (1116)
   \p{Bidi_Class: AN}      \p{Bidi_Class=Arabic_Number} (48)
   \p{Bidi_Class: Arabic_Letter} (Short: \p{Bc=AL}) (1116)
   \p{Bidi_Class: Arabic_Number} (Short: \p{Bc=AN}) (48)
d419 2
a420 2
   \p{Bidi_Class: BN}      \p{Bidi_Class=Boundary_Neutral} (4016)
   \p{Bidi_Class: Boundary_Neutral} (Short: \p{Bc=BN}) (4016)
d425 1
a425 1
   \p{Bidi_Class: ET}      \p{Bidi_Class=European_Terminator} (63)
d428 3
a430 3
   \p{Bidi_Class: European_Terminator} (Short: \p{Bc=ET}) (63)
   \p{Bidi_Class: L}       \p{Bidi_Class=Left_To_Right} (1_099_541)
   \p{Bidi_Class: Left_To_Right} (Short: \p{Bc=L}) (1_099_541)
d435 4
a438 4
   \p{Bidi_Class: Nonspacing_Mark} (Short: \p{Bc=NSM}) (1173)
   \p{Bidi_Class: NSM}     \p{Bidi_Class=Nonspacing_Mark} (1173)
   \p{Bidi_Class: ON}      \p{Bidi_Class=Other_Neutral} (3523)
   \p{Bidi_Class: Other_Neutral} (Short: \p{Bc=ON}) (3523)
d442 2
a443 2
   \p{Bidi_Class: R}       \p{Bidi_Class=Right_To_Left} (4441)
   \p{Bidi_Class: Right_To_Left} (Short: \p{Bc=R}) (4441)
d456 1
a456 1
                             (543)
d459 3
a461 3
                             (543)
   \p{Bidi_Mirrored: N*}   (Short: \p{BidiM=N}, \P{BidiM}) (1_113_569)
   \p{Bidi_Mirrored: Y*}   (Short: \p{BidiM=Y}, \p{BidiM}) (543)
d465 12
a476 4
   \p{Block: Alphabetic_Presentation_Forms} (Single:
                             \p{InAlphabeticPresentationForms}) (80)
   \p{Block: Ancient_Greek_Musical_Notation} (Single:
                             \p{InAncientGreekMusicalNotation}) (80)
d482 17
a498 5
   \p{Block: Arabic_Presentation_Forms_A} (Single:
                             \p{InArabicPresentationFormsA}) (688)
   \p{Block: Arabic_Presentation_Forms_B} (Single:
                             \p{InArabicPresentationFormsB}) (144)
   \p{Block: Arabic_Supplement} (Single: \p{InArabicSupplement}) (48)
d509 3
d513 2
d520 3
a522 1
   \p{Block: Bopomofo_Extended} (Single: \p{InBopomofoExtended}) (32)
d524 5
a528 1
   \p{Block: Braille_Patterns} (Single: \p{InBraillePatterns}) (256)
d533 5
a537 2
   \p{Block: Byzantine_Musical_Symbols} (Single:
                             \p{InByzantineMusicalSymbols}) (256)
d543 2
d549 20
a568 17
   \p{Block: CJK_Compatibility} (Single: \p{InCJKCompatibility}) (256)
   \p{Block: CJK_Compatibility_Forms} (Single:
                             \p{InCJKCompatibilityForms}) (32)
   \p{Block: CJK_Compatibility_Ideographs} (Single:
                             \p{InCJKCompatibilityIdeographs}) (512)
   \p{Block: CJK_Compatibility_Ideographs_Supplement} (Single:
                             \p{InCJKCompatibilityIdeographs-
                             Supplement}) (544)
   \p{Block: CJK_Radicals_Supplement} (Single:
                             \p{InCJKRadicalsSupplement}) (128)
   \p{Block: CJK_Strokes}  (Single: \p{InCJKStrokes}) (48)
   \p{Block: CJK_Symbols_And_Punctuation} (Single:
                             \p{InCJKSymbolsAndPunctuation}) (64)
   \p{Block: CJK_Unified_Ideographs} (Single:
                             \p{InCJKUnifiedIdeographs}) (20_992)
   \p{Block: CJK_Unified_Ideographs_Extension_A} (Single:
                             \p{InCJKUnifiedIdeographsExtensionA})
d570 2
a571 2
   \p{Block: CJK_Unified_Ideographs_Extension_B} (Single:
                             \p{InCJKUnifiedIdeographsExtensionB})
d573 2
a574 2
   \p{Block: CJK_Unified_Ideographs_Extension_C} (Single:
                             \p{InCJKUnifiedIdeographsExtensionC})
d576 21
a596 2
   \p{Block: Combining_Diacritical_Marks} (Single:
                             \p{InCombiningDiacriticalMarks}) (112)
d598 7
a604 7
                             CombiningMarksForSymbols},
                             \p{InCombiningMarksForSymbols}) (48)
   \p{Block: Combining_Diacritical_Marks_Supplement} (Single:
                             \p{InCombiningDiacriticalMarks-
                             Supplement}) (64)
   \p{Block: Combining_Half_Marks} (Single: \p{InCombiningHalfMarks})
                             (16)
d608 4
a611 2
   \p{Block: Common_Indic_Number_Forms} (Single:
                             \p{InCommonIndicNumberForms}) (16)
d615 3
a617 2
   \p{Block: Counting_Rod_Numerals} (Single:
                             \p{InCountingRodNumerals}) (32)
d621 5
a625 3
   \p{Block: Cuneiform_Numbers_And_Punctuation} (Single:
                             \p{InCuneiformNumbersAndPunctuation})
                             (128)
d630 9
a638 6
   \p{Block: Cyrillic_Extended_A} (Single: \p{InCyrillicExtendedA})
                             (32)
   \p{Block: Cyrillic_Extended_B} (Single: \p{InCyrillicExtendedB})
                             (96)
   \p{Block: Cyrillic_Supplement} (Single: \p{InCyrillicSupplement})
                             (48)
d645 10
a654 2
   \p{Block: Devanagari_Extended} (Single: \p{InDevanagariExtended})
                             (32)
d656 2
a657 1
   \p{Block: Domino_Tiles} (Single: \p{InDominoTiles}) (112)
d662 11
a672 9
   \p{Block: Enclosed_Alphanumeric_Supplement} (Single:
                             \p{InEnclosedAlphanumericSupplement})
                             (256)
   \p{Block: Enclosed_Alphanumerics} (Single:
                             \p{InEnclosedAlphanumerics}) (160)
   \p{Block: Enclosed_CJK_Letters_And_Months} (Single:
                             \p{InEnclosedCJKLettersAndMonths}) (256)
   \p{Block: Enclosed_Ideographic_Supplement} (Single:
                             \p{InEnclosedIdeographicSupplement})
d674 7
d683 12
a694 5
   \p{Block: Ethiopic_Extended} (Single: \p{InEthiopicExtended}) (96)
   \p{Block: Ethiopic_Supplement} (Single: \p{InEthiopicSupplement})
                             (32)
   \p{Block: General_Punctuation} (Single: \p{InGeneralPunctuation})
                             (112)
d698 3
a700 2
   \p{Block: Georgian_Supplement} (Single: \p{InGeorgianSupplement})
                             (48)
d710 3
a712 1
   \p{Block: Greek_Extended} (Single: \p{InGreekExtended}) (256)
d717 17
a733 10
   \p{Block: Halfwidth_And_Fullwidth_Forms} (Single:
                             \p{InHalfwidthAndFullwidthForms}) (240)
   \p{Block: Hangul_Compatibility_Jamo} (Single:
                             \p{InHangulCompatibilityJamo}) (96)
   \p{Block: Hangul_Jamo}  (Single: \p{InHangulJamo}) (256)
   \p{Block: Hangul_Jamo_Extended_A} (Single:
                             \p{InHangulJamoExtendedA}) (32)
   \p{Block: Hangul_Jamo_Extended_B} (Single:
                             \p{InHangulJamoExtendedB}) (80)
   \p{Block: Hangul_Syllables} (Single: \p{InHangulSyllables})
d739 5
a743 2
   \p{Block: High_Private_Use_Surrogates} (Single:
                             \p{InHighPrivateUseSurrogates}) (128)
d747 6
a752 3
   \p{Block: Ideographic_Description_Characters} (Single:
                             \p{InIdeographicDescriptionCharacters})
                             (16)
d756 2
d766 6
a771 1
   \p{Block: IPA_Extensions} (Single: \p{InIPAExtensions}) (96)
d776 3
d780 3
a782 1
   \p{Block: Kangxi_Radicals} (Single: \p{InKangxiRadicals}) (224)
d787 3
a789 2
   \p{Block: Katakana_Phonetic_Extensions} (Single:
                             \p{InKatakanaPhoneticExtensions}) (16)
d800 1
d803 17
a819 6
   \p{Block: Latin_Extended_A} (Single: \p{InLatinExtendedA}) (128)
   \p{Block: Latin_Extended_Additional} (Single:
                             \p{InLatinExtendedAdditional}) (256)
   \p{Block: Latin_Extended_B} (Single: \p{InLatinExtendedB}) (208)
   \p{Block: Latin_Extended_C} (Single: \p{InLatinExtendedC}) (32)
   \p{Block: Latin_Extended_D} (Single: \p{InLatinExtendedD}) (224)
d836 3
a838 1
   \p{Block: Mahjong_Tiles} (Single: \p{InMahjongTiles}) (48)
d841 9
a849 5
   \p{Block: Mathematical_Alphanumeric_Symbols} (Single:
                             \p{InMathematicalAlphanumericSymbols})
                             (1024)
   \p{Block: Mathematical_Operators} (Single:
                             \p{InMathematicalOperators}) (256)
d853 14
a866 2
   \p{Block: Miscellaneous_Mathematical_Symbols_A} (Single:
                             \p{InMiscellaneousMathematicalSymbolsA})
d868 2
a869 2
   \p{Block: Miscellaneous_Mathematical_Symbols_B} (Single:
                             \p{InMiscellaneousMathematicalSymbolsB})
d871 21
a891 7
   \p{Block: Miscellaneous_Symbols} (Single:
                             \p{InMiscellaneousSymbols}) (256)
   \p{Block: Miscellaneous_Symbols_And_Arrows} (Single:
                             \p{InMiscellaneousSymbolsAndArrows})
                             (256)
   \p{Block: Miscellaneous_Technical} (Single:
                             \p{InMiscellaneousTechnical}) (256)
d896 3
a898 1
   \p{Block: Musical_Symbols} (Single: \p{InMusicalSymbols}) (256)
d901 4
a904 1
   \p{Block: Myanmar_Extended_A} (Single: \p{InMyanmarExtendedA}) (32)
d910 1
a910 1
   \p{Block: No_Block}     (Single: \p{InNoBlock}) (864_192)
d912 2
d927 2
a928 2
   \p{Block: Optical_Character_Recognition} (Single:
                             \p{InOpticalCharacterRecognition}) (32)
d935 3
a937 1
   \p{Block: Phaistos_Disc} (Single: \p{InPhaistosDisc}) (48)
d941 9
a949 4
   \p{Block: Phonetic_Extensions} (Single: \p{InPhoneticExtensions})
                             (128)
   \p{Block: Phonetic_Extensions_Supplement} (Single:
                             \p{InPhoneticExtensionsSupplement}) (64)
d953 8
a960 3
   \p{Block: Private_Use_Area} (Short: \p{Blk=PrivateUse},
                             \p{InPrivateUse}; NOT \p{Private_Use}
                             NOR \p{Is_Private_Use}) (6400)
d963 2
a964 1
   \p{Block: Rumi_Numeral_Symbols} (Single: \p{InRumiNumeralSymbols})
d973 2
d978 9
a986 4
   \p{Block: Small_Form_Variants} (Single: \p{InSmallFormVariants})
                             (32)
   \p{Block: Spacing_Modifier_Letters} (Single:
                             \p{InSpacingModifierLetters}) (80)
d990 7
a996 8
   \p{Block: Superscripts_And_Subscripts} (Single:
                             \p{InSuperscriptsAndSubscripts}) (48)
   \p{Block: Supplemental_Arrows_A} (Single:
                             \p{InSupplementalArrowsA}) (16)
   \p{Block: Supplemental_Arrows_B} (Single:
                             \p{InSupplementalArrowsB}) (128)
   \p{Block: Supplemental_Mathematical_Operators} (Single:
                             \p{InSupplementalMathematicalOperators})
d998 1
a998 4
   \p{Block: Supplemental_Punctuation} (Single:
                             \p{InSupplementalPunctuation}) (128)
   \p{Block: Supplementary_Private_Use_Area_A} (Single:
                             \p{InSupplementaryPrivateUseAreaA})
d1000 1
a1000 2
   \p{Block: Supplementary_Private_Use_Area_B} (Single:
                             \p{InSupplementaryPrivateUseAreaB})
d1002 18
d1036 5
a1040 2
   \p{Block: Tai_Xuan_Jing_Symbols} (Single:
                             \p{InTaiXuanJingSymbols}) (96)
d1053 11
d1067 3
a1069 5
                             CanadianSyllabics},
                             \p{InCanadianSyllabics}) (640)
   \p{Block: Unified_Canadian_Aboriginal_Syllabics_Extended} (Single:
                             \p{InUnifiedCanadianAboriginalSyllabics-
                             Extended}) (80)
d1072 2
a1073 1
   \p{Block: Variation_Selectors} (Single: \p{InVariationSelectors})
d1075 5
a1079 3
   \p{Block: Variation_Selectors_Supplement} (Single:
                             \p{InVariationSelectorsSupplement}) (240)
   \p{Block: Vedic_Extensions} (Single: \p{InVedicExtensions}) (48)
d1081 5
d1088 3
a1090 2
   \p{Block: Yijing_Hexagram_Symbols} (Single:
                             \p{InYijingHexagramSymbols}) (64)
d1093 1
a1093 1
                             \p{Block=Bopomofo}) (65)
d1095 5
a1099 2
                             \p{Block=Bopomofo}) (65)
 X \p{Bopomofo_Extended}   \p{Block=Bopomofo_Extended} (32)
d1101 4
d1107 2
a1108 1
 X \p{Braille_Patterns}    \p{Block=Braille_Patterns} (256)
d1117 2
d1120 1
a1120 1
                             (256)
d1122 3
a1124 1
                             (1_006_956)
d1132 1
a1132 1
                             Not_Reordered} (1_113_518)
d1136 1
a1136 1
                             Nukta} (11)
d1140 73
a1212 37
                             Virama} (27)
 T \p{Canonical_Combining_Class: 10} (Short: \p{Ccc=10}) (1)
 T \p{Canonical_Combining_Class: 11} (Short: \p{Ccc=11}) (1)
 T \p{Canonical_Combining_Class: 12} (Short: \p{Ccc=12}) (1)
 T \p{Canonical_Combining_Class: 13} (Short: \p{Ccc=13}) (1)
 T \p{Canonical_Combining_Class: 14} (Short: \p{Ccc=14}) (1)
 T \p{Canonical_Combining_Class: 15} (Short: \p{Ccc=15}) (1)
 T \p{Canonical_Combining_Class: 16} (Short: \p{Ccc=16}) (1)
 T \p{Canonical_Combining_Class: 17} (Short: \p{Ccc=17}) (1)
 T \p{Canonical_Combining_Class: 18} (Short: \p{Ccc=18}) (2)
 T \p{Canonical_Combining_Class: 19} (Short: \p{Ccc=19}) (2)
 T \p{Canonical_Combining_Class: 20} (Short: \p{Ccc=20}) (1)
 T \p{Canonical_Combining_Class: 21} (Short: \p{Ccc=21}) (1)
 T \p{Canonical_Combining_Class: 22} (Short: \p{Ccc=22}) (1)
 T \p{Canonical_Combining_Class: 23} (Short: \p{Ccc=23}) (1)
 T \p{Canonical_Combining_Class: 24} (Short: \p{Ccc=24}) (1)
 T \p{Canonical_Combining_Class: 25} (Short: \p{Ccc=25}) (1)
 T \p{Canonical_Combining_Class: 26} (Short: \p{Ccc=26}) (1)
 T \p{Canonical_Combining_Class: 27} (Short: \p{Ccc=27}) (1)
 T \p{Canonical_Combining_Class: 28} (Short: \p{Ccc=28}) (1)
 T \p{Canonical_Combining_Class: 29} (Short: \p{Ccc=29}) (1)
 T \p{Canonical_Combining_Class: 30} (Short: \p{Ccc=30}) (2)
 T \p{Canonical_Combining_Class: 31} (Short: \p{Ccc=31}) (2)
 T \p{Canonical_Combining_Class: 32} (Short: \p{Ccc=32}) (2)
 T \p{Canonical_Combining_Class: 33} (Short: \p{Ccc=33}) (1)
 T \p{Canonical_Combining_Class: 34} (Short: \p{Ccc=34}) (1)
 T \p{Canonical_Combining_Class: 35} (Short: \p{Ccc=35}) (1)
 T \p{Canonical_Combining_Class: 36} (Short: \p{Ccc=36}) (1)
 T \p{Canonical_Combining_Class: 84} (Short: \p{Ccc=84}) (1)
 T \p{Canonical_Combining_Class: 91} (Short: \p{Ccc=91}) (1)
 T \p{Canonical_Combining_Class: 103} (Short: \p{Ccc=103}) (2)
 T \p{Canonical_Combining_Class: 107} (Short: \p{Ccc=107}) (4)
 T \p{Canonical_Combining_Class: 118} (Short: \p{Ccc=118}) (2)
 T \p{Canonical_Combining_Class: 122} (Short: \p{Ccc=122}) (4)
 T \p{Canonical_Combining_Class: 129} (Short: \p{Ccc=129}) (1)
 T \p{Canonical_Combining_Class: 130} (Short: \p{Ccc=130}) (6)
 T \p{Canonical_Combining_Class: 132} (Short: \p{Ccc=132}) (1)
d1224 1
a1224 1
                             Below} (117)
d1234 1
a1234 1
                             Above} (318)
d1238 1
a1238 1
                             Double_Below} (3)
d1244 2
a1245 2
                             Above} (318)
   \p{Canonical_Combining_Class: Above} (Short: \p{Ccc=A}) (318)
d1269 2
a1270 2
                             Below} (117)
   \p{Canonical_Combining_Class: Below} (Short: \p{Ccc=B}) (117)
d1277 36
d1316 1
a1316 1
                             Double_Below} (3)
d1318 1
a1318 1
   \p{Canonical_Combining_Class: Double_Below} (Short: \p{Ccc=DB}) (3)
d1330 1
a1330 1
                             Nukta} (11)
d1332 1
a1332 1
                             (1_113_518)
d1334 2
a1335 2
                             Not_Reordered} (1_113_518)
   \p{Canonical_Combining_Class: Nukta} (Short: \p{Ccc=NK}) (11)
d1342 1
a1342 1
   \p{Canonical_Combining_Class: Virama} (Short: \p{Ccc=VR}) (27)
d1344 1
a1344 1
                             Virama} (27)
d1351 6
a1356 6
   \p{Case_Ignorable}      \p{Case_Ignorable=Y} (Short: \p{CI}) (1632)
   \p{Case_Ignorable: N*}  (Short: \p{CI=N}, \P{CI}) (1_112_480)
   \p{Case_Ignorable: Y*}  (Short: \p{CI=Y}, \p{CI}) (1632)
   \p{Cased}               \p{Cased=Y} (3408)
   \p{Cased: N*}           (Single: \P{Cased}) (1_110_704)
   \p{Cased: Y*}           (Single: \p{Cased}) (3408)
d1358 1
a1358 1
                             \p{LC}) (3207)
d1367 3
a1369 1
                             (140)
d1372 1
a1372 1
                             \p{CWCF}) (1093)
d1374 1
a1374 1
                             (1_113_019)
d1376 1
a1376 1
                             (1093)
d1378 1
a1378 1
                             \p{CWCM}) (2110)
d1380 1
a1380 1
                             (1_112_002)
d1382 1
a1382 1
                             (2110)
d1384 1
a1384 1
                             \p{CWL}) (1029)
d1386 2
a1387 2
                             (1_113_083)
   \p{Changes_When_Lowercased: Y*} (Short: \p{CWL=Y}, \p{CWL}) (1029)
d1389 1
a1389 1
                             Y} (Short: \p{CWKCF}) (9740)
d1391 1
a1391 1
                             \P{CWKCF}) (1_104_372)
d1393 1
a1393 1
                             \p{CWKCF}) (9740)
d1395 1
a1395 1
                             \p{CWT}) (1085)
d1397 2
a1398 2
                             (1_113_027)
   \p{Changes_When_Titlecased: Y*} (Short: \p{CWT=Y}, \p{CWT}) (1085)
d1400 1
a1400 1
                             \p{CWU}) (1112)
d1402 2
a1403 2
                             (1_113_000)
   \p{Changes_When_Uppercased: Y*} (Short: \p{CWU=Y}, \p{CWU}) (1112)
d1409 1
a1409 1
                             Y}) (1632)
d1411 18
a1428 2
 X \p{CJK_Compatibility}   \p{Block=CJK_Compatibility} (256)
 X \p{CJK_Compatibility_Forms} \p{Block=CJK_Compatibility_Forms} (32)
d1430 2
a1431 1
                             CJK_Compatibility_Ideographs} (512)
d1434 1
d1436 20
a1455 1
 X \p{CJK_Radicals_Supplement} \p{Block=CJK_Radicals_Supplement} (128)
d1457 3
d1461 2
a1462 1
                             CJK_Symbols_And_Punctuation} (64)
d1464 1
a1464 1
                             (20_992)
d1467 1
a1467 1
                             (6592)
d1470 1
a1470 1
                             (42_720)
d1473 4
a1476 1
                             (4160)
d1480 1
a1480 1
                             Unassigned}) (867_235)
d1487 2
a1488 1
                             Combining_Diacritical_Marks} (112)
d1491 1
a1491 1
                             (Short: \p{InCombiningMarksForSymbols})
d1495 5
a1499 2
                             (64)
 X \p{Combining_Half_Marks} \p{Block=Combining_Half_Marks} (16)
d1505 1
a1505 1
   \p{Common}              \p{Script=Common} (Short: \p{Zyyy}) (5395)
d1507 1
a1507 1
                             (16)
d1509 1
a1509 1
                             \p{Full_Composition_Exclusion=Y}) (1118)
d1511 2
d1524 1
a1524 1
                             \p{Block=Coptic}) (135)
d1526 5
a1530 2
                             \p{Block=Coptic}) (135)
 X \p{Counting_Rod_Numerals} \p{Block=Counting_Rod_Numerals} (32)
d1536 3
d1540 2
a1541 1
                             Cuneiform_Numbers_And_Punctuation} (128)
d1543 1
a1543 1
                             (Short: \p{Sc}) (46)
d1546 1
a1546 1
                             \p{Changes_When_Casefolded=Y}) (1093)
d1549 1
a1549 1
                             \p{Changes_When_Casemapped=Y}) (2110)
d1553 1
a1553 1
                             (9740)
d1556 1
a1556 1
                             \p{Changes_When_Lowercased=Y}) (1029)
d1559 1
a1559 1
                             \p{Changes_When_Titlecased=Y}) (1085)
d1562 1
a1562 1
                             \p{Changes_When_Uppercased=Y}) (1112)
d1567 13
a1579 4
                             \p{Block=Cyrillic}) (404)
 X \p{Cyrillic_Extended_A} \p{Block=Cyrillic_Extended_A} (32)
 X \p{Cyrillic_Extended_B} \p{Block=Cyrillic_Extended_B} (96)
 X \p{Cyrillic_Supplement} \p{Block=Cyrillic_Supplement} (48)
d1583 4
a1586 4
                             \p{Block=Cyrillic}) (404)
   \p{Dash}                \p{Dash=Y} (25)
   \p{Dash: N*}            (Single: \P{Dash}) (1_114_087)
   \p{Dash: Y*}            (Single: \p{Dash}) (25)
d1588 1
a1588 1
                             (Short: \p{Pd}) (21)
d1590 1
a1590 1
                             Decimal_Number}) (411)
d1592 3
a1594 3
                             (13_221)
   \p{Decomposition_Type: Canonical} (Short: \p{Dt=Can}) (13_221)
   \p{Decomposition_Type: Circle} (Short: \p{Dt=Enc}) (238)
d1597 1
a1597 1
   \p{Decomposition_Type: Enc} \p{Decomposition_Type=Circle} (238)
d1600 1
a1600 1
   \p{Decomposition_Type: Font} (Short: \p{Dt=Font}) (1043)
d1614 1
a1614 1
                             Non_Canonical} (Perl extension) (3467)
d1617 2
a1618 2
                             (Perl extension) (3467)
   \p{Decomposition_Type: None} (Short: \p{Dt=None}) (1_097_424)
d1621 5
a1625 5
   \p{Decomposition_Type: Sqr} \p{Decomposition_Type=Square} (251)
   \p{Decomposition_Type: Square} (Short: \p{Dt=Sqr}) (251)
   \p{Decomposition_Type: Sub} (Short: \p{Dt=Sub}) (30)
   \p{Decomposition_Type: Sup} \p{Decomposition_Type=Super} (142)
   \p{Decomposition_Type: Super} (Short: \p{Dt=Sup}) (142)
d1635 1
a1635 1
   \p{Dep}                 \p{Deprecated} (= \p{Deprecated=Y}) (110)
d1637 3
a1639 3
   \p{Deprecated}          \p{Deprecated=Y} (Short: \p{Dep}) (110)
   \p{Deprecated: N*}      (Short: \p{Dep=N}, \P{Dep}) (1_114_002)
   \p{Deprecated: Y*}      (Short: \p{Dep=Y}, \p{Dep}) (110)
d1642 1
a1642 1
                             (NOT \p{Block=Devanagari}) (140)
d1644 5
a1648 2
                             NOT \p{Block=Devanagari}) (140)
 X \p{Devanagari_Extended} \p{Block=Devanagari_Extended} (32)
d1653 1
a1653 1
   \p{Dia}                 \p{Diacritic} (= \p{Diacritic=Y}) (639)
d1655 18
a1672 6
   \p{Diacritic}           \p{Diacritic=Y} (Short: \p{Dia}) (639)
   \p{Diacritic: N*}       (Short: \p{Dia=N}, \P{Dia}) (1_113_473)
   \p{Diacritic: Y*}       (Short: \p{Dia=Y}, \p{Dia}) (639)
   \p{Digit}               \p{General_Category=Decimal_Number} \d,
                             extended beyond just [0-9] (Short:
                             \p{Nd}) (411)
d1674 4
a1677 1
 X \p{Domino_Tiles}        \p{Block=Domino_Tiles} (112)
d1681 2
a1682 2
   \p{East_Asian_Width: A} \p{East_Asian_Width=Ambiguous} (138_666)
   \p{East_Asian_Width: Ambiguous} (Short: \p{Ea=A}) (138_666)
d1687 1
a1687 1
   \p{East_Asian_Width: N} \p{East_Asian_Width=Neutral} (801_909)
d1690 3
a1692 3
   \p{East_Asian_Width: Neutral} (Short: \p{Ea=N}) (801_909)
   \p{East_Asian_Width: W} \p{East_Asian_Width=Wide} (173_199)
   \p{East_Asian_Width: Wide} (Short: \p{Ea=W}) (173_199)
d1699 6
d1706 7
a1712 2
                             Enclosed_Alphanumeric_Supplement} (256)
 X \p{Enclosed_Alphanumerics} \p{Block=Enclosed_Alphanumerics} (160)
d1714 5
a1718 1
                             Enclosed_CJK_Letters_And_Months} (256)
d1720 2
a1721 1
                             Enclosed_Ideographic_Supplement} (256)
d1723 1
a1723 1
                             (Short: \p{Me}) (13)
d1725 1
a1725 1
                             \p{Block=Ethiopic}) (461)
d1727 14
a1740 4
                             \p{Block=Ethiopic}) (461)
 X \p{Ethiopic_Extended}   \p{Block=Ethiopic_Extended} (96)
 X \p{Ethiopic_Supplement} \p{Block=Ethiopic_Supplement} (32)
   \p{Ext}                 \p{Extender} (= \p{Extender=Y}) (28)
d1742 3
a1744 3
   \p{Extender}            \p{Extender=Y} (Short: \p{Ext}) (28)
   \p{Extender: N*}        (Short: \p{Ext=N}, \P{Ext}) (1_114_084)
   \p{Extender: Y*}        (Short: \p{Ext=Y}, \p{Ext}) (28)
d1748 1
a1748 1
                             \p{Cf}) (140)
d1750 1
a1750 1
                             (Short: \p{CompEx}) (1118)
d1752 1
a1752 1
                             \P{CompEx}) (1_112_994)
d1754 1
a1754 1
                             \p{CompEx}) (1118)
d1757 1
a1757 1
   \p{General_Category: C} \p{General_Category=Other} (1_006_956)
d1759 1
a1759 1
                             \p{Gc=LC}, \p{LC}) (3207)
d1761 1
a1761 1
   \p{General_Category: Cf} \p{General_Category=Format} (140)
d1764 1
a1764 1
   \p{General_Category: Cn} \p{General_Category=Unassigned} (867_235)
d1767 2
d1774 1
a1774 1
                             (46)
d1776 1
a1776 1
                             (21)
d1778 1
a1778 1
                             (411)
d1780 1
a1780 1
                             (411)
d1782 1
a1782 1
                             (13)
d1785 1
a1785 1
   \p{General_Category: Format} (Short: \p{Gc=Cf}, \p{Cf}) (140)
d1788 7
a1794 5
   \p{General_Category: L} \p{General_Category=Letter} (99_537)
 X \p{General_Category: L&} \p{General_Category=Cased_Letter} (3207)
 X \p{General_Category: L_} \p{General_Category=Cased_Letter} (3207)
   \p{General_Category: LC} \p{General_Category=Cased_Letter} (3207)
   \p{General_Category: Letter} (Short: \p{Gc=L}, \p{L}) (99_537)
d1799 8
a1806 6
                             (1749)
   \p{General_Category: Lm} \p{General_Category=Modifier_Letter} (202)
   \p{General_Category: Lo} \p{General_Category=Other_Letter} (96_128)
   \p{General_Category: Lowercase_Letter} (Short: \p{Gc=Ll}, \p{Ll})
                             (1749)
   \p{General_Category: Lt} \p{General_Category=Titlecase_Letter} (31)
d1808 7
a1814 6
                             (1427)
   \p{General_Category: M} \p{General_Category=Mark} (1451)
   \p{General_Category: Mark} (Short: \p{Gc=M}, \p{M}) (1451)
   \p{General_Category: Math_Symbol} (Short: \p{Gc=Sm}, \p{Sm}) (945)
   \p{General_Category: Mc} \p{General_Category=Spacing_Mark} (276)
   \p{General_Category: Me} \p{General_Category=Enclosing_Mark} (13)
d1816 1
a1816 1
                             (1162)
d1818 1
a1818 1
                             (202)
d1820 3
a1822 3
                             (99)
   \p{General_Category: N} \p{General_Category=Number} (1064)
   \p{General_Category: Nd} \p{General_Category=Decimal_Number} (411)
d1824 1
a1824 1
   \p{General_Category: No} \p{General_Category=Other_Number} (429)
d1826 2
a1827 2
                             (1162)
   \p{General_Category: Number} (Short: \p{Gc=N}, \p{N}) (1064)
d1830 1
a1830 1
   \p{General_Category: Other} (Short: \p{Gc=C}, \p{C}) (1_006_956)
d1832 2
a1833 2
                             (96_128)
   \p{General_Category: Other_Number} (Short: \p{Gc=No}, \p{No}) (429)
d1835 1
a1835 1
                             (389)
d1837 2
a1838 2
                             (3409)
   \p{General_Category: P} \p{General_Category=Punctuation} (585)
d1843 1
a1843 1
   \p{General_Category: Pd} \p{General_Category=Dash_Punctuation} (21)
d1851 1
a1851 1
                             (389)
d1855 4
a1858 4
   \p{General_Category: Punct} \p{General_Category=Punctuation} (585)
   \p{General_Category: Punctuation} (Short: \p{Gc=P}, \p{P}) (585)
   \p{General_Category: S} \p{General_Category=Symbol} (4499)
   \p{General_Category: Sc} \p{General_Category=Currency_Symbol} (46)
d1860 3
a1862 3
   \p{General_Category: Sk} \p{General_Category=Modifier_Symbol} (99)
   \p{General_Category: Sm} \p{General_Category=Math_Symbol} (945)
   \p{General_Category: So} \p{General_Category=Other_Symbol} (3409)
d1865 5
a1869 6
   \p{General_Category: Spacing_Mark} (Short: \p{Gc=Mc}, \p{Mc}) (276)
   \p{General_Category: Surrogate} Mostly not usable in Perl. (Short:
                             \p{Gc=Cs}, \p{Cs}) (2048)
   \p{General_Category: Symbol} (Short: \p{Gc=S}, \p{S}) (4499)
   \p{General_Category: Titlecase_Letter} (Short: \p{Gc=Lt}, \p{Lt})
                             (31)
d1871 3
a1873 3
                             (867_235)
   \p{General_Category: Uppercase_Letter} (Short: \p{Gc=Lu}, \p{Lu})
                             (1427)
d1879 2
a1880 1
 X \p{General_Punctuation} \p{Block=General_Punctuation} (112)
d1883 1
a1883 1
                             \p{Block=Georgian}) (120)
d1885 5
a1889 2
                             \p{Block=Georgian}) (120)
 X \p{Georgian_Supplement} \p{Block=Georgian_Supplement} (48)
d1899 1
a1899 1
                             (105_958)
d1902 1
a1902 1
                             Y}) (1198)
d1904 1
a1904 1
   \p{Graph}               Characters that are graphical (244_744)
d1906 1
a1906 1
                             (105_958)
d1908 2
a1909 2
                             (1_008_154)
   \p{Grapheme_Base: Y*}   (Short: \p{GrBase=Y}, \p{GrBase}) (105_958)
d1911 2
a1912 2
                             (203)
   \p{Grapheme_Cluster_Break: Control} (Short: \p{GCB=CN}) (203)
d1915 2
a1916 2
                             (1205)
   \p{Grapheme_Cluster_Break: Extend} (Short: \p{GCB=EX}) (1205)
d1921 1
a1921 1
   \p{Grapheme_Cluster_Break: Other} (Short: \p{GCB=XX}) (1_100_901)
d1923 2
a1924 2
                             (15)
   \p{Grapheme_Cluster_Break: Prepend} (Short: \p{GCB=PP}) (15)
d1926 2
a1927 2
                             SpacingMark} (257)
   \p{Grapheme_Cluster_Break: SpacingMark} (Short: \p{GCB=SM}) (257)
d1931 1
a1931 1
                             (1_100_901)
d1933 3
a1935 3
                             (1198)
   \p{Grapheme_Extend: N*} (Short: \p{GrExt=N}, \P{GrExt}) (1_112_914)
   \p{Grapheme_Extend: Y*} (Short: \p{GrExt=Y}, \p{GrExt}) (1198)
d1940 4
a1943 1
 X \p{Greek_Extended}      \p{Block=Greek_Extended} (256)
d1947 1
a1947 1
                             \p{Block=Gujarati}) (83)
d1949 1
a1949 1
                             \p{Block=Gujarati}) (83)
d1954 5
d1960 7
a1966 5
                             Halfwidth_And_Fullwidth_Forms} (240)
   \p{Han}                 \p{Script=Han} (75_738)
   \p{Hang}                \p{Hangul} (= \p{Script=Hangul}) (11_737)
   \p{Hangul}              \p{Script=Hangul} (Short: \p{Hang})
                             (11_737)
d1968 7
a1974 4
                             (96)
 X \p{Hangul_Jamo}         \p{Block=Hangul_Jamo} (256)
 X \p{Hangul_Jamo_Extended_A} \p{Block=Hangul_Jamo_Extended_A} (32)
 X \p{Hangul_Jamo_Extended_B} \p{Block=Hangul_Jamo_Extended_B} (80)
d1995 3
a1997 2
 X \p{Hangul_Syllables}    \p{Block=Hangul_Syllables} (11_184)
   \p{Hani}                \p{Han} (= \p{Script=Han}) (75_738)
d2012 5
a2016 1
                             High_Private_Use_Surrogates} (128)
d2019 1
a2019 1
                             \p{Block=Hiragana}) (90)
d2021 1
a2021 1
                             \p{Block=Hiragana}) (90)
d2024 18
a2041 16
 S \p{Hyphen}              \p{Hyphen=Y} (11)
 S \p{Hyphen: N*}          Use the Line_Break property instead; see
                             www.unicode.org/reports/tr14 (Single:
                             \P{Hyphen}) (1_114_101)
 S \p{Hyphen: Y*}          Use the Line_Break property instead; see
                             www.unicode.org/reports/tr14 (Single:
                             \p{Hyphen}) (11)
   \p{ID_Continue}         \p{ID_Continue=Y} (Short: \p{IDC})
                             (101_634)
   \p{ID_Continue: N*}     (Short: \p{IDC=N}, \P{IDC}) (1_012_478)
   \p{ID_Continue: Y*}     (Short: \p{IDC=Y}, \p{IDC}) (101_634)
   \p{ID_Start}            \p{ID_Start=Y} (Short: \p{IDS}) (99_764)
   \p{ID_Start: N*}        (Short: \p{IDS=N}, \P{IDS}) (1_014_348)
   \p{ID_Start: Y*}        (Short: \p{IDS=Y}, \p{IDS}) (99_764)
   \p{IDC}                 \p{ID_Continue} (= \p{ID_Continue=Y})
                             (101_634)
d2044 1
a2044 1
                             (75_408)
d2047 3
a2049 3
                             (75_408)
   \p{Ideographic: N*}     (Short: \p{Ideo=N}, \P{Ideo}) (1_038_704)
   \p{Ideographic: Y*}     (Short: \p{Ideo=Y}, \p{Ideo}) (75_408)
d2051 3
a2053 2
                             Ideographic_Description_Characters} (16)
   \p{IDS}                 \p{ID_Start} (= \p{ID_Start=Y}) (99_764)
d2076 2
d2079 1
a2079 1
                             (523)
d2088 4
a2091 1
 X \p{IPA_Extensions}      \p{Block=IPA_Extensions} (96)
d2095 1
a2095 1
                             like 'D', the 'Is_' form has the same
d2099 6
d2118 1
a2118 1
   \p{Joining_Group: Beh}  (Short: \p{Jg=Beh}) (19)
d2127 1
a2127 1
   \p{Joining_Group: Feh}  (Short: \p{Jg=Feh}) (9)
d2131 1
a2131 1
   \p{Joining_Group: Hah}  (Short: \p{Jg=Hah}) (17)
d2142 1
a2142 1
   \p{Joining_Group: Lam}  (Short: \p{Jg=Lam}) (6)
d2144 1
a2144 1
   \p{Joining_Group: Meem} (Short: \p{Jg=Meem}) (3)
d2147 1
a2147 1
                             (1_113_883)
d2152 1
a2152 1
   \p{Joining_Group: Qaf}  (Short: \p{Jg=Qaf}) (4)
d2154 1
a2154 1
   \p{Joining_Group: Reh}  (Short: \p{Jg=Reh}) (16)
d2156 1
d2164 1
a2164 1
   \p{Joining_Group: Tah}  (Short: \p{Jg=Tah}) (3)
d2167 2
d2170 2
a2171 2
   \p{Joining_Group: Waw}  (Short: \p{Jg=Waw}) (15)
   \p{Joining_Group: Yeh}  (Short: \p{Jg=Yeh}) (7)
d2179 2
a2180 2
   \p{Joining_Type: D}     \p{Joining_Type=Dual_Joining} (188)
   \p{Joining_Type: Dual_Joining} (Short: \p{Jt=D}) (188)
d2184 6
a2189 6
   \p{Joining_Type: Non_Joining} (Short: \p{Jt=U}) (1_112_539)
   \p{Joining_Type: R}     \p{Joining_Type=Right_Joining} (74)
   \p{Joining_Type: Right_Joining} (Short: \p{Jt=R}) (74)
   \p{Joining_Type: T}     \p{Joining_Type=Transparent} (1308)
   \p{Joining_Type: Transparent} (Short: \p{Jt=T}) (1308)
   \p{Joining_Type: U}     \p{Joining_Type=Non_Joining} (1_112_539)
d2195 5
a2199 1
                             \p{Block=Katakana}) (299)
d2201 4
a2204 1
 X \p{Kangxi_Radicals}     \p{Block=Kangxi_Radicals} (224)
d2206 1
a2206 1
                             \p{Block=Kannada}) (84)
d2208 4
a2211 1
                             \p{Block=Katakana}) (299)
d2213 2
a2214 1
                             Katakana_Phonetic_Extensions} (16)
d2226 1
a2226 1
                             \p{Block=Kannada}) (84)
d2230 7
a2236 5
                             (99_537)
   \p{L&}                  \p{Cased_Letter} (= \p{General_Category=
                             Cased_Letter}) (3207)
   \p{L_}                  \p{Cased_Letter} (= \p{General_Category=
                             Cased_Letter}) (3207)
d2239 1
a2239 1
   \p{Lao}                 \p{Script=Lao} (NOT \p{Block=Lao}) (65)
d2241 2
a2242 2
                             Lao}) (65)
   \p{Latin}               \p{Script=Latin} (Short: \p{Latn}) (1244)
d2245 2
d2249 13
a2261 1
 X \p{Latin_Extended_A}    \p{Block=Latin_Extended_A} (128)
d2263 8
a2270 5
                             (256)
 X \p{Latin_Extended_B}    \p{Block=Latin_Extended_B} (208)
 X \p{Latin_Extended_C}    \p{Block=Latin_Extended_C} (32)
 X \p{Latin_Extended_D}    \p{Block=Latin_Extended_D} (224)
   \p{Latn}                \p{Latin} (= \p{Script=Latin}) (1244)
d2273 1
a2273 1
                             Cased_Letter}) (3207)
d2279 1
a2279 1
                             (99_537)
d2288 6
a2293 6
   \p{Line_Break: AI}      \p{Line_Break=Ambiguous} (644)
   \p{Line_Break: AL}      \p{Line_Break=Alphabetic} (14_092)
   \p{Line_Break: Alphabetic} (Short: \p{Lb=AL}) (14_092)
   \p{Line_Break: Ambiguous} (Short: \p{Lb=AI}) (644)
   \p{Line_Break: B2}      \p{Line_Break=Break_Both} (1)
   \p{Line_Break: BA}      \p{Line_Break=Break_After} (137)
d2296 1
a2296 1
   \p{Line_Break: Break_After} (Short: \p{Lb=BA}) (137)
d2298 1
a2298 1
   \p{Line_Break: Break_Both} (Short: \p{Lb=B2}) (1)
d2302 2
d2307 5
a2311 3
   \p{Line_Break: CM}      \p{Line_Break=Combining_Mark} (1436)
   \p{Line_Break: Combining_Mark} (Short: \p{Lb=CM}) (1436)
   \p{Line_Break: Complex_Context} (Short: \p{Lb=SA}) (662)
d2317 2
a2318 2
   \p{Line_Break: GL}      \p{Line_Break=Glue} (16)
   \p{Line_Break: Glue}    (Short: \p{Lb=GL}) (16)
d2321 2
d2325 2
a2326 2
   \p{Line_Break: ID}      \p{Line_Break=Ideographic} (161_775)
   \p{Line_Break: Ideographic} (Short: \p{Lb=ID}) (161_775)
d2340 4
a2343 4
   \p{Line_Break: Nonstarter} (Short: \p{Lb=NS}) (77)
   \p{Line_Break: NS}      \p{Line_Break=Nonstarter} (77)
   \p{Line_Break: NU}      \p{Line_Break=Numeric} (403)
   \p{Line_Break: Numeric} (Short: \p{Lb=NU}) (403)
d2348 2
a2349 2
   \p{Line_Break: PR}      \p{Line_Break=Prefix_Numeric} (43)
   \p{Line_Break: Prefix_Numeric} (Short: \p{Lb=PR}) (43)
d2352 1
a2352 1
   \p{Line_Break: SA}      \p{Line_Break=Complex_Context} (662)
d2361 1
a2361 1
   \p{Line_Break: Unknown} (Short: \p{Lb=XX}) (920_933)
d2364 1
a2364 1
   \p{Line_Break: XX}      \p{Line_Break=Unknown} (920_933)
d2375 2
a2376 1
                             (1749)
d2379 1
a2379 1
                             (202)
d2381 1
a2381 1
                             Other_Letter}) (96_128)
d2391 1
a2391 1
   \p{Lower}               \p{Lowercase=Y} (1908)
d2393 6
a2398 3
   \p{Lowercase}           \p{Lower} (= \p{Lowercase=Y}) (1908)
   \p{Lowercase: N*}       (Short: \p{Lower=N}, \P{Lower}) (1_112_204)
   \p{Lowercase: Y*}       (Short: \p{Lower=Y}, \p{Lower}) (1908)
d2400 5
a2404 3
                             (Short: \p{Ll}) (1749)
   \p{Lt}                  \p{Title} (= \p{General_Category=
                             Titlecase_Letter}) (31)
d2407 2
a2408 1
                             (1427)
d2418 5
a2422 2
                             (1451)
 X \p{Mahjong_Tiles}       \p{Block=Mahjong_Tiles} (48)
d2424 5
a2428 1
                             \p{Block=Malayalam}) (95)
d2430 10
a2439 4
                             (1451)
   \p{Math}                \p{Math=Y} (2161)
   \p{Math: N*}            (Single: \P{Math}) (1_111_951)
   \p{Math: Y*}            (Single: \p{Math}) (2161)
d2441 1
a2441 1
                             \p{Sm}) (945)
d2443 4
a2446 2
                             Mathematical_Alphanumeric_Symbols} (1024)
 X \p{Mathematical_Operators} \p{Block=Mathematical_Operators} (256)
d2448 1
a2448 1
                             Spacing_Mark}) (276)
d2450 1
a2450 1
                             Enclosing_Mark}) (13)
d2452 35
a2486 1
                             NOT \p{Block=Meetei_Mayek}) (56)
d2489 1
a2489 1
                             (48)
d2492 3
a2494 2
                             (128)
 X \p{Miscellaneous_Symbols} \p{Block=Miscellaneous_Symbols} (256)
d2496 7
a2502 2
                             Miscellaneous_Symbols_And_Arrows} (256)
 X \p{Miscellaneous_Technical} \p{Block=Miscellaneous_Technical} (256)
d2504 1
a2504 1
                             (NOT \p{Block=Malayalam}) (95)
d2507 1
a2507 1
                             (1162)
d2509 3
a2511 1
                             (Short: \p{Lm}) (202)
d2513 1
a2513 1
                             (Short: \p{Sk}) (99)
d2521 5
a2525 2
                             Meetei_Mayek}) (56)
 X \p{Musical_Symbols}     \p{Block=Musical_Symbols} (256)
d2528 4
a2531 1
 X \p{Myanmar_Extended_A}  \p{Block=Myanmar_Extended_A} (32)
d2535 3
a2537 1
                             (1064)
d2542 1
a2542 1
                             Decimal_Number}) (411)
d2546 2
a2547 2
   \p{NFC_Quick_Check: M}  \p{NFC_Quick_Check=Maybe} (103)
   \p{NFC_Quick_Check: Maybe} (Short: \p{NFCQC=M}) (103)
d2549 2
a2550 3
                             \P{NFC_Quick_Check} NOR \P{NFC_QC} NOR
                             \P{Is_NFC_Quick_Check} NOR
                             \P{Is_NFC_QC}) (1118)
d2552 2
a2553 3
                             \P{NFC_Quick_Check} NOR \P{NFC_QC} NOR
                             \P{Is_NFC_Quick_Check} NOR
                             \P{Is_NFC_QC}) (1118)
d2555 2
a2556 3
                             \p{NFC_Quick_Check} NOR \p{NFC_QC} NOR
                             \p{Is_NFC_Quick_Check} NOR
                             \p{Is_NFC_QC}) (1_112_891)
d2558 2
a2559 3
                             \p{NFC_Quick_Check} NOR \p{NFC_QC} NOR
                             \p{Is_NFC_Quick_Check} NOR
                             \p{Is_NFC_QC}) (1_112_891)
d2562 2
a2563 3
                             \P{NFD_Quick_Check} NOR \P{NFD_QC} NOR
                             \P{Is_NFD_Quick_Check} NOR
                             \P{Is_NFD_QC}) (13_221)
d2565 2
a2566 3
                             \P{NFD_Quick_Check} NOR \P{NFD_QC} NOR
                             \P{Is_NFD_Quick_Check} NOR
                             \P{Is_NFD_QC}) (13_221)
d2568 2
a2569 3
                             \p{NFD_Quick_Check} NOR \p{NFD_QC} NOR
                             \p{Is_NFD_Quick_Check} NOR
                             \p{Is_NFD_QC}) (1_100_891)
d2571 2
a2572 3
                             \p{NFD_Quick_Check} NOR \p{NFD_QC} NOR
                             \p{Is_NFD_Quick_Check} NOR
                             \p{Is_NFD_QC}) (1_100_891)
d2574 2
a2575 2
   \p{NFKC_Quick_Check: M} \p{NFKC_Quick_Check=Maybe} (103)
   \p{NFKC_Quick_Check: Maybe} (Short: \p{NFKCQC=M}) (103)
d2577 2
a2578 3
                             \P{NFKC_Quick_Check} NOR \P{NFKC_QC} NOR
                             \P{Is_NFKC_Quick_Check} NOR
                             \P{Is_NFKC_QC}) (4597)
d2580 2
a2581 3
                             \P{NFKC_Quick_Check} NOR \P{NFKC_QC} NOR
                             \P{Is_NFKC_Quick_Check} NOR
                             \P{Is_NFKC_QC}) (4597)
d2583 2
a2584 3
                             \p{NFKC_Quick_Check} NOR \p{NFKC_QC} NOR
                             \p{Is_NFKC_Quick_Check} NOR
                             \p{Is_NFKC_QC}) (1_109_412)
d2586 2
a2587 3
                             \p{NFKC_Quick_Check} NOR \p{NFKC_QC} NOR
                             \p{Is_NFKC_Quick_Check} NOR
                             \p{Is_NFKC_QC}) (1_109_412)
d2590 2
a2591 3
                             \P{NFKD_Quick_Check} NOR \P{NFKD_QC} NOR
                             \P{Is_NFKD_Quick_Check} NOR
                             \P{Is_NFKD_QC}) (16_688)
d2593 2
a2594 3
                             \P{NFKD_Quick_Check} NOR \P{NFKD_QC} NOR
                             \P{Is_NFKD_Quick_Check} NOR
                             \P{Is_NFKD_QC}) (16_688)
d2596 2
a2597 3
                             \p{NFKD_Quick_Check} NOR \p{NFKD_QC} NOR
                             \p{Is_NFKD_Quick_Check} NOR
                             \p{Is_NFKD_QC}) (1_097_424)
d2599 2
a2600 3
                             \p{NFKD_Quick_Check} NOR \p{NFKD_QC} NOR
                             \p{Is_NFKD_Quick_Check} NOR
                             \p{Is_NFKD_QC}) (1_097_424)
d2607 3
a2609 2
                             Other_Number}) (429)
 X \p{No_Block}            \p{Block=No_Block} (864_192)
d2617 1
a2617 1
                             (Short: \p{Mn}) (1162)
d2620 1
a2620 1
                             (1064)
d2622 7
a2628 7
   \p{Numeric_Type: De}    \p{Numeric_Type=Decimal} (411)
   \p{Numeric_Type: Decimal} (Short: \p{Nt=De}) (411)
   \p{Numeric_Type: Di}    \p{Numeric_Type=Digit} (118)
   \p{Numeric_Type: Digit} (Short: \p{Nt=Di}) (118)
   \p{Numeric_Type: None}  (Short: \p{Nt=None}) (1_112_971)
   \p{Numeric_Type: Nu}    \p{Numeric_Type=Numeric} (612)
   \p{Numeric_Type: Numeric} (Short: \p{Nt=Nu}) (612)
d2630 2
a2631 2
 T \p{Numeric_Value: 0}    (Short: \p{Nv=0}) (55)
 T \p{Numeric_Value: 1/16} (Short: \p{Nv=1/16}) (2)
d2634 1
a2634 1
 T \p{Numeric_Value: 1/8}  (Short: \p{Nv=1/8}) (4)
d2637 1
a2637 1
 T \p{Numeric_Value: 3/16} (Short: \p{Nv=3/16}) (2)
d2639 1
a2639 1
 T \p{Numeric_Value: 1/4}  (Short: \p{Nv=1/4}) (8)
d2643 1
a2643 1
 T \p{Numeric_Value: 1/2}  (Short: \p{Nv=1/2}) (9)
d2647 1
a2647 1
 T \p{Numeric_Value: 3/4}  (Short: \p{Nv=3/4}) (5)
d2651 1
a2651 1
 T \p{Numeric_Value: 1}    (Short: \p{Nv=1}) (91)
d2653 1
a2653 1
 T \p{Numeric_Value: 2}    (Short: \p{Nv=2}) (94)
d2655 1
a2655 1
 T \p{Numeric_Value: 3}    (Short: \p{Nv=3}) (96)
d2657 1
a2657 1
 T \p{Numeric_Value: 4}    (Short: \p{Nv=4}) (87)
d2659 1
a2659 1
 T \p{Numeric_Value: 5}    (Short: \p{Nv=5}) (84)
d2661 1
a2661 1
 T \p{Numeric_Value: 6}    (Short: \p{Nv=6}) (76)
d2663 1
a2663 1
 T \p{Numeric_Value: 7}    (Short: \p{Nv=7}) (75)
d2665 1
a2665 1
 T \p{Numeric_Value: 8}    (Short: \p{Nv=8}) (71)
d2667 2
a2668 2
 T \p{Numeric_Value: 9}    (Short: \p{Nv=9}) (75)
 T \p{Numeric_Value: 10}   (Short: \p{Nv=10}) (38)
d2678 1
a2678 1
 T \p{Numeric_Value: 20}   (Short: \p{Nv=20}) (17)
d2688 1
a2688 1
 T \p{Numeric_Value: 30}   (Short: \p{Nv=30}) (9)
d2698 1
a2698 1
 T \p{Numeric_Value: 40}   (Short: \p{Nv=40}) (8)
d2708 6
a2713 6
 T \p{Numeric_Value: 50}   (Short: \p{Nv=50}) (18)
 T \p{Numeric_Value: 60}   (Short: \p{Nv=60}) (4)
 T \p{Numeric_Value: 70}   (Short: \p{Nv=70}) (4)
 T \p{Numeric_Value: 80}   (Short: \p{Nv=80}) (4)
 T \p{Numeric_Value: 90}   (Short: \p{Nv=90}) (5)
 T \p{Numeric_Value: 100}  (Short: \p{Nv=100}) (19)
d2722 1
a2722 1
 T \p{Numeric_Value: 1000} (Short: \p{Nv=1000}) (16)
d2745 1
a2745 1
   \p{Numeric_Value: NaN}  (Short: \p{Nv=NaN}) (1_112_971)
d2747 3
a2749 7
 D \p{OAlpha}              \p{Other_Alphabetic} (=
                             \p{Other_Alphabetic=Y}) (759)
 D \p{OAlpha: *}           \p{Other_Alphabetic: *}
 D \p{ODI}                 \p{Other_Default_Ignorable_Code_Point} (=
                             \p{Other_Default_Ignorable_Code_Point=
                             Y}) (3778)
 D \p{ODI: *}              \p{Other_Default_Ignorable_Code_Point: *}
a2753 9
 D \p{OGr_Ext}             \p{Other_Grapheme_Extend} (=
                             \p{Other_Grapheme_Extend=Y}) (23)
 D \p{OGr_Ext: *}          \p{Other_Grapheme_Extend: *}
 D \p{OIDC}                \p{Other_ID_Continue} (=
                             \p{Other_ID_Continue=Y}) (11)
 D \p{OIDC: *}             \p{Other_ID_Continue: *}
 D \p{OIDS}                \p{Other_ID_Start} (= \p{Other_ID_Start=
                             Y}) (4)
 D \p{OIDS: *}             \p{Other_ID_Start: *}
a2763 5
 D \p{OLower}              \p{Other_Lowercase} (= \p{Other_Lowercase=
                             Y}) (159)
 D \p{OLower: *}           \p{Other_Lowercase: *}
 D \p{OMath}               \p{Other_Math} (= \p{Other_Math=Y}) (1216)
 D \p{OMath: *}            \p{Other_Math: *}
d2767 2
a2768 1
                             Optical_Character_Recognition} (32)
d2770 1
a2770 1
                             \p{Block=Oriya}) (84)
d2774 1
a2774 1
                             \p{Block=Oriya}) (84)
d2780 1
a2780 63
                             (1_006_956)
 D \p{Other_Alphabetic}    \p{Other_Alphabetic=Y} (Short: \p{OAlpha})
                             (759)
 D \p{Other_Alphabetic: N*} Used by Unicode internally for generating
                             the Alphabetic property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OAlpha=N},
                             \P{OAlpha}) (1_113_353)
 D \p{Other_Alphabetic: Y*} Used by Unicode internally for generating
                             the Alphabetic property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OAlpha=Y},
                             \p{OAlpha}) (759)
 D \p{Other_Default_Ignorable_Code_Point}
                             \p{Other_Default_Ignorable_Code_Point=Y}
                             (Short: \p{ODI}) (3778)
 D \p{Other_Default_Ignorable_Code_Point: N*} Used by Unicode
                             internally for generating the
                             Default_Ignorable_Code_Point property
                             (which should be used instead) and not
                             intended to be used stand-alone (Short:
                             \p{ODI=N}, \P{ODI}) (1_110_334)
 D \p{Other_Default_Ignorable_Code_Point: Y*} Used by Unicode
                             internally for generating the
                             Default_Ignorable_Code_Point property
                             (which should be used instead) and not
                             intended to be used stand-alone (Short:
                             \p{ODI=Y}, \p{ODI}) (3778)
 D \p{Other_Grapheme_Extend} \p{Other_Grapheme_Extend=Y} (Short:
                             \p{OGrExt}) (23)
 D \p{Other_Grapheme_Extend: N*} Used by Unicode internally for
                             generating the Grapheme_Extend property
                             (which should be used instead) and not
                             intended to be used stand-alone (Short:
                             \p{OGrExt=N}, \P{OGrExt}) (1_114_089)
 D \p{Other_Grapheme_Extend: Y*} Used by Unicode internally for
                             generating the Grapheme_Extend property
                             (which should be used instead) and not
                             intended to be used stand-alone (Short:
                             \p{OGrExt=Y}, \p{OGrExt}) (23)
 D \p{Other_ID_Continue}   \p{Other_ID_Continue=Y} (Short: \p{OIDC})
                             (11)
 D \p{Other_ID_Continue: N*} Used by Unicode internally for
                             generating the ID_Continue property
                             (which should be used instead) and not
                             intended to be used stand-alone (Short:
                             \p{OIDC=N}, \P{OIDC}) (1_114_101)
 D \p{Other_ID_Continue: Y*} Used by Unicode internally for
                             generating the ID_Continue property
                             (which should be used instead) and not
                             intended to be used stand-alone (Short:
                             \p{OIDC=Y}, \p{OIDC}) (11)
 D \p{Other_ID_Start}      \p{Other_ID_Start=Y} (Short: \p{OIDS}) (4)
 D \p{Other_ID_Start: N*}  Used by Unicode internally for generating
                             the ID_Start property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OIDS=N},
                             \P{OIDS}) (1_114_108)
 D \p{Other_ID_Start: Y*}  Used by Unicode internally for generating
                             the ID_Start property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OIDS=Y},
                             \p{OIDS}) (4)
d2782 1
a2782 24
                             \p{Lo}) (96_128)
 D \p{Other_Lowercase}     \p{Other_Lowercase=Y} (Short: \p{OLower})
                             (159)
 D \p{Other_Lowercase: N*} Used by Unicode internally for generating
                             the Lowercase property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OLower=N},
                             \P{OLower}) (1_113_953)
 D \p{Other_Lowercase: Y*} Used by Unicode internally for generating
                             the Lowercase property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OLower=Y},
                             \p{OLower}) (159)
 D \p{Other_Math}          \p{Other_Math=Y} (Short: \p{OMath}) (1216)
 D \p{Other_Math: N*}      Used by Unicode internally for generating
                             the Math property (which should be used
                             instead) and not intended to be used
                             stand-alone (Short: \p{OMath=N},
                             \P{OMath}) (1_112_896)
 D \p{Other_Math: Y*}      Used by Unicode internally for generating
                             the Math property (which should be used
                             instead) and not intended to be used
                             stand-alone (Short: \p{OMath=Y},
                             \p{OMath}) (1216)
d2784 1
a2784 1
                             \p{No}) (429)
d2786 1
a2786 1
                             (Short: \p{Po}) (389)
d2788 1
a2788 16
                             \p{So}) (3409)
 D \p{Other_Uppercase}     \p{Other_Uppercase=Y} (Short: \p{OUpper})
                             (42)
 D \p{Other_Uppercase: N*} Used by Unicode internally for generating
                             the Uppercase property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OUpper=N},
                             \P{OUpper}) (1_114_070)
 D \p{Other_Uppercase: Y*} Used by Unicode internally for generating
                             the Uppercase property (which should be
                             used instead) and not intended to be
                             used stand-alone (Short: \p{OUpper=Y},
                             \p{OUpper}) (42)
 D \p{OUpper}              \p{Other_Uppercase} (= \p{Other_Uppercase=
                             Y}) (42)
 D \p{OUpper: *}           \p{Other_Uppercase: *}
d2790 2
a2791 1
                             Punctuation}) (585)
d2815 1
a2815 1
                             (21)
d2819 1
a2819 1
   \p{PerlSpace}           \s, restricted to ASCII (5)
d2828 4
a2831 1
 X \p{Phaistos_Disc}       \p{Block=Phaistos_Disc} (48)
d2839 7
a2845 1
 X \p{Phonetic_Extensions} \p{Block=Phonetic_Extensions} (128)
d2847 2
a2848 1
                             Phonetic_Extensions_Supplement} (64)
d2852 3
d2857 1
a2857 1
                             (389)
d2861 5
a2865 1
   \p{PosixCntrl}          [\x00-\x1F] (33)
d2867 13
a2879 9
   \p{PosixGraph}          [\x21-\x7E] (94)
   \p{PosixLower}          [a-z] (26)
   \p{PosixPrint}          [\x20-\x7E] (95)
   \p{PosixPunct}          Graphical characters that aren't Word
                             characters = [\x21-\x2F\x3A-\x40\x5B-
                             \x60\x7B-\x7E] (32)
   \p{PosixSpace}          \t \n, \x0B, \f, \r, and ' ' (6)
   \p{PosixUpper}          [A-Z] (26)
 T \p{Present_In: 1.1}     \p{Age=1.1} (Short: \p{In=1.1}) (Perl
d2911 6
d2918 1
a2918 1
                             Unassigned}) (Perl extension) (867_169)
d2920 1
a2920 1
                             characters (but no controls) (244_762)
d2925 1
a2925 1
                             \p{InPrivateUse}) (6400)
d2932 2
d2935 1
a2935 1
                             \p{P}) (585)
d2937 2
a2938 1
                             Punctuation}) (585)
d2940 1
a2940 1
                             \p{Block=Coptic}) (135)
d2942 1
a2942 1
                             (523)
d2957 4
a2960 1
 X \p{Rumi_Numeral_Symbols} \p{Block=Rumi_Numeral_Symbols} (32)
d2966 1
a2966 1
                             (4499)
d2980 1
a2980 1
                             (46)
d2982 3
a2984 3
   \p{Script: Arab}        \p{Script=Arabic} (1030)
   \p{Script: Arabic}      (Short: \p{Sc=Arab}, \p{Arab}) (1030)
   \p{Script: Armenian}    (Short: \p{Sc=Armn}, \p{Armn}) (90)
d2986 1
a2986 1
   \p{Script: Armn}        \p{Script=Armenian} (90)
d2991 4
a2994 2
   \p{Script: Bamu}        \p{Script=Bamum} (88)
   \p{Script: Bamum}       (Short: \p{Sc=Bamu}, \p{Bamu}) (88)
d2997 4
a3000 2
   \p{Script: Bopo}        \p{Script=Bopomofo} (65)
   \p{Script: Bopomofo}    (Short: \p{Sc=Bopo}, \p{Bopo}) (65)
d3007 1
d3013 1
d3017 3
a3019 3
   \p{Script: Common}      (Short: \p{Sc=Zyyy}, \p{Zyyy}) (5395)
   \p{Script: Copt}        \p{Script=Coptic} (135)
   \p{Script: Coptic}      (Short: \p{Sc=Copt}, \p{Copt}) (135)
d3023 2
a3024 2
   \p{Script: Cyrillic}    (Short: \p{Sc=Cyrl}, \p{Cyrl}) (404)
   \p{Script: Cyrl}        \p{Script=Cyrillic} (404)
d3026 2
a3027 2
   \p{Script: Deva}        \p{Script=Devanagari} (140)
   \p{Script: Devanagari}  (Short: \p{Sc=Deva}, \p{Deva}) (140)
d3032 4
a3035 4
   \p{Script: Ethi}        \p{Script=Ethiopic} (461)
   \p{Script: Ethiopic}    (Short: \p{Sc=Ethi}, \p{Ethi}) (461)
   \p{Script: Geor}        \p{Script=Georgian} (120)
   \p{Script: Georgian}    (Short: \p{Sc=Geor}, \p{Geor}) (120)
d3042 2
a3043 2
   \p{Script: Gujarati}    (Short: \p{Sc=Gujr}, \p{Gujr}) (83)
   \p{Script: Gujr}        \p{Script=Gujarati} (83)
d3046 4
a3049 4
   \p{Script: Han}         (Short: \p{Sc=Han}, \p{Han}) (75_738)
   \p{Script: Hang}        \p{Script=Hangul} (11_737)
   \p{Script: Hangul}      (Short: \p{Sc=Hang}, \p{Hang}) (11_737)
   \p{Script: Hani}        \p{Script=Han} (75_738)
d3054 2
a3055 2
   \p{Script: Hira}        \p{Script=Hiragana} (90)
   \p{Script: Hiragana}    (Short: \p{Sc=Hira}, \p{Hira}) (90)
d3057 1
a3057 1
   \p{Script: Inherited}   (Short: \p{Sc=Zinh}, \p{Zinh}) (523)
d3067 3
a3069 3
   \p{Script: Kana}        \p{Script=Katakana} (299)
   \p{Script: Kannada}     (Short: \p{Sc=Knda}, \p{Knda}) (84)
   \p{Script: Katakana}    (Short: \p{Sc=Kana}, \p{Kana}) (299)
d3075 1
a3075 1
   \p{Script: Knda}        \p{Script=Kannada} (84)
d3078 4
a3081 4
   \p{Script: Lao}         (Short: \p{Sc=Lao}, \p{Lao}) (65)
   \p{Script: Laoo}        \p{Script=Lao} (65)
   \p{Script: Latin}       (Short: \p{Sc=Latn}, \p{Latn}) (1244)
   \p{Script: Latn}        \p{Script=Latin} (1244)
d3093 11
a3103 3
   \p{Script: Malayalam}   (Short: \p{Sc=Mlym}, \p{Mlym}) (95)
   \p{Script: Meetei_Mayek} (Short: \p{Sc=Mtei}, \p{Mtei}) (56)
   \p{Script: Mlym}        \p{Script=Malayalam} (95)
d3106 1
a3106 1
   \p{Script: Mtei}        \p{Script=Meetei_Mayek} (56)
d3120 1
a3120 1
   \p{Script: Oriya}       (Short: \p{Sc=Orya}, \p{Orya}) (84)
d3122 1
a3122 1
   \p{Script: Orya}        \p{Script=Oriya} (84)
d3130 1
d3132 2
a3133 2
   \p{Script: Qaac}        \p{Script=Coptic} (135)
   \p{Script: Qaai}        \p{Script=Inherited} (523)
d3143 1
d3146 1
d3149 4
a3152 2
   \p{Script: Sund}        \p{Script=Sundanese} (55)
   \p{Script: Sundanese}   (Short: \p{Sc=Sund}, \p{Sund}) (55)
d3163 2
d3172 1
a3172 1
   \p{Script: Tfng}        \p{Script=Tifinagh} (55)
d3177 3
a3179 3
   \p{Script: Tibetan}     (Short: \p{Sc=Tibt}, \p{Tibt}) (201)
   \p{Script: Tibt}        \p{Script=Tibetan} (201)
   \p{Script: Tifinagh}    (Short: \p{Sc=Tfng}, \p{Tfng}) (55)
d3182 1
a3182 1
   \p{Script: Unknown}     (Short: \p{Sc=Zzzz}, \p{Zzzz}) (1_006_751)
d3189 223
a3411 3
   \p{Script: Zinh}        \p{Script=Inherited} (523)
   \p{Script: Zyyy}        \p{Script=Common} (5395)
   \p{Script: Zzzz}        \p{Script=Unknown} (1_006_751)
d3419 5
a3423 5
   \p{Sentence_Break: EX}  \p{Sentence_Break=Extend} (1455)
   \p{Sentence_Break: Extend} (Short: \p{SB=EX}) (1455)
   \p{Sentence_Break: FO}  \p{Sentence_Break=Format} (138)
   \p{Sentence_Break: Format} (Short: \p{SB=FO}) (138)
   \p{Sentence_Break: LE}  \p{Sentence_Break=OLetter} (96_405)
d3425 6
a3430 6
   \p{Sentence_Break: LO}  \p{Sentence_Break=Lower} (1907)
   \p{Sentence_Break: Lower} (Short: \p{SB=LO}) (1907)
   \p{Sentence_Break: NU}  \p{Sentence_Break=Numeric} (403)
   \p{Sentence_Break: Numeric} (Short: \p{SB=NU}) (403)
   \p{Sentence_Break: OLetter} (Short: \p{SB=LE}) (96_405)
   \p{Sentence_Break: Other} (Short: \p{SB=XX}) (1_012_008)
d3436 5
a3440 5
   \p{Sentence_Break: ST}  \p{Sentence_Break=STerm} (63)
   \p{Sentence_Break: STerm} (Short: \p{SB=ST}) (63)
   \p{Sentence_Break: UP}  \p{Sentence_Break=Upper} (1500)
   \p{Sentence_Break: Upper} (Short: \p{SB=UP}) (1500)
   \p{Sentence_Break: XX}  \p{Sentence_Break=Other} (1_012_008)
d3443 2
d3447 2
d3455 1
a3455 1
                             (99)
d3457 5
a3461 2
                             Math_Symbol}) (945)
 X \p{Small_Form_Variants} \p{Block=Small_Form_Variants} (32)
d3463 1
a3463 1
                             Other_Symbol}) (3409)
d3467 5
d3477 1
a3477 1
   \p{SpacePerl}           \s, including beyond ASCII (25)
d3479 1
a3479 1
                             \p{Mc}) (276)
d3481 1
a3481 1
                             (80)
d3483 3
a3485 3
   \p{STerm}               \p{STerm=Y} (66)
   \p{STerm: N*}           (Single: \P{STerm}) (1_114_046)
   \p{STerm: Y*}           (Single: \p{STerm}) (66)
d3487 1
a3487 1
                             (NOT \p{Block=Sundanese}) (55)
d3489 26
a3514 1
                             \p{Block=Sundanese}) (55)
d3516 6
a3521 3
                             Superscripts_And_Subscripts} (48)
 X \p{Supplemental_Arrows_A} \p{Block=Supplemental_Arrows_A} (16)
 X \p{Supplemental_Arrows_B} \p{Block=Supplemental_Arrows_B} (128)
d3524 1
a3524 1
                             (256)
d3526 1
a3526 1
                             (128)
d3529 1
a3529 1
                             (65_536)
d3532 1
a3532 1
                             (65_536)
d3541 1
a3541 1
                             (4499)
d3559 8
a3566 1
 X \p{Tai_Xuan_Jing_Symbols} \p{Block=Tai_Xuan_Jing_Symbols} (96)
d3582 1
a3582 1
                             \p{Terminal_Punctuation=Y}) (161)
d3585 1
a3585 1
                             \p{Term}) (161)
d3587 2
a3588 2
                             (1_113_951)
   \p{Terminal_Punctuation: Y*} (Short: \p{Term=Y}, \p{Term}) (161)
d3590 1
a3590 1
                             \p{Block=Tifinagh}) (55)
d3599 1
a3599 1
                             \p{Block=Tibetan}) (201)
d3601 1
a3601 1
                             \p{Block=Tibetan}) (201)
d3603 19
a3621 5
                             \p{Block=Tifinagh}) (55)
   \p{Title}               \p{General_Category=Titlecase_Letter}
                             (Short: \p{Lt}) (31)
   \p{Titlecase_Letter}    \p{Title} (= \p{General_Category=
                             Titlecase_Letter}) (31)
d3627 1
a3627 1
                             \p{Unified_Ideograph=Y}) (74_394)
d3630 1
a3630 1
                             \p{Cn}) (867_235)
d3633 1
a3633 1
                             (Short: \p{InCanadianSyllabics}) (640)
d3636 1
a3636 1
                             Extended} (80)
d3638 1
a3638 1
                             (74_394)
d3640 2
a3641 2
                             (1_039_718)
   \p{Unified_Ideograph: Y*} (Short: \p{UIdeo=Y}, \p{UIdeo}) (74_394)
d3643 2
a3644 2
                             (1_006_751)
   \p{Upper}               \p{Uppercase=Y} (1469)
d3646 6
a3651 3
   \p{Uppercase}           \p{Upper} (= \p{Uppercase=Y}) (1469)
   \p{Uppercase: N*}       (Short: \p{Upper=N}, \P{Upper}) (1_112_643)
   \p{Uppercase: Y*}       (Short: \p{Upper=Y}, \p{Upper}) (1469)
d3653 2
a3654 1
                             (Short: \p{Lu}) (1427)
d3658 2
a3659 2
   \p{Variation_Selector}  \p{Variation_Selector=Y} (Short: \p{VS})
                             (259)
d3662 2
a3663 1
 X \p{Variation_Selectors} \p{Block=Variation_Selectors} (16)
d3665 6
a3670 2
                             Variation_Selectors_Supplement} (240)
 X \p{Vedic_Extensions}    \p{Block=Vedic_Extensions} (48)
d3674 2
a3675 1
                             \p{Variation_Selector=Y}) (259)
d3677 3
d3685 3
a3687 2
   \p{Word}                \w, including beyond ASCII (101_685)
   \p{Word_Break: ALetter} (Short: \p{WB=LE}) (23_694)
d3690 1
a3690 1
   \p{Word_Break: Extend}  (Short: \p{WB=Extend}) (1455)
d3692 5
a3696 5
   \p{Word_Break: FO}      \p{Word_Break=Format} (137)
   \p{Word_Break: Format}  (Short: \p{WB=FO}) (137)
   \p{Word_Break: KA}      \p{Word_Break=Katakana} (309)
   \p{Word_Break: Katakana} (Short: \p{WB=KA}) (309)
   \p{Word_Break: LE}      \p{Word_Break=ALetter} (23_694)
d3706 4
a3709 4
   \p{Word_Break: NU}      \p{Word_Break=Numeric} (402)
   \p{Word_Break: Numeric} (Short: \p{WB=NU}) (402)
   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_088_067)
   \p{Word_Break: XX}      \p{Word_Break=Other} (1_088_067)
d3714 6
a3719 6
                             (101_615)
   \p{XID_Continue: N*}    (Short: \p{XIDC=N}, \P{XIDC}) (1_012_497)
   \p{XID_Continue: Y*}    (Short: \p{XIDC=Y}, \p{XIDC}) (101_615)
   \p{XID_Start}           \p{XID_Start=Y} (Short: \p{XIDS}) (99_741)
   \p{XID_Start: N*}       (Short: \p{XIDS=N}, \P{XIDS}) (1_014_371)
   \p{XID_Start: Y*}       (Short: \p{XIDS=Y}, \p{XIDS}) (99_741)
d3721 1
a3721 1
                             (101_615)
d3723 1
a3723 1
   \p{XIDS}                \p{XID_Start} (= \p{XID_Start=Y}) (99_741)
d3727 19
d3752 4
a3755 1
 X \p{Yijing_Hexagram_Symbols} \p{Block=Yijing_Hexagram_Symbols} (64)
d3759 1
a3759 1
                             (523)
d3768 1
a3768 1
   \p{Zyyy}                \p{Common} (= \p{Script=Common}) (5395)
d3770 2
a3771 2
                             (1_006_751)
 T \p{_CanonDCIJ}          (For internal use by Perl, not necessarily
d3773 3
a3775 3
 T \p{_Case_Ignorable}     (For internal use by Perl, not necessarily
                             stable) (= \p{Case_Ignorable=Y}) (1632)
 T \p{_CombAbove}          (For internal use by Perl, not necessarily
d3777 1
a3777 7
                             Above}) (318)
 T \p{_X_Begin}            (For internal use by Perl, not necessarily
                             stable) (1_113_907)
 T \p{_X_Extend}           (For internal use by Perl, not necessarily
                             stable) (1462)
 T \p{_X_LV_LVT_V}         (For internal use by Perl, not necessarily
                             stable) (11_267)
d3781 1
a3781 1
=head2 Legal \p{} and \P{} constructs that match no characters
d3784 3
a3786 3
This happens generally either because they are obsolete, or for symmetry with
other forms, but no language has yet been encoded that uses them.  In this
version of Unicode, the following match zero code points:
d3792 2
d3800 284
a4083 1
=head1 Properties not accessible through \p{} and \P{}
a4084 2
A few properties are accessible in Perl via various function calls only.
These are:
d4089 9
a4097 1
Case_Folding is accessible through the /i modifier in regular expressions.
d4099 2
a4100 4
The Name property is accessible through the \N{} interpolation in
double-quoted strings and regular expressions, but both usages require a C<use
charnames;> to be specified, which also contains related functions viacode()
and vianame().
d4102 1
a4102 1
=head1 Unicode regular expression properties that are NOT accepted by Perl
d4108 4
d4117 1
a4117 1
 
a4118 3
 
=item I<Expands_On_NFC> (XO_NFC)
 
d4120 1
a4120 1
 
d4122 1
a4122 1
 
a4123 3
 
Easily computed, and yet doesn't cover the common encoding forms (UTF-16/8)
 
d4125 3
a4127 1
 
a4128 1
 
a4129 3
 
Deprecated by Unicode.  Use ccc=vr (Canonical_Combining_Class=Virama) instead
 
d4131 11
a4141 1
 
a4142 1
 
d4144 17
a4160 1
 
a4161 1
 
a4162 1
 
d4164 1
a4164 1
 
a4165 3
 
Obsolete.  All code points previously matched by this have been moved to "Script=Common"
 
d4167 2
a4168 1
 
a4169 1
 
d4171 1
d4173 1
d4177 121
a4297 75
An installation can choose to allow any of these to be matched by changing the
controlling lists contained in the program C<$Config{privlib}>/F<unicore/lib/unicore/mktables>
and then re-running F<lib/unicore/mktables>.  (C<%Config> is available from the Config module).

=head1 Files in the I<To> directory (for serious hackers only)

All Unicode properties are really mappings (in the mathematical sense) from
code points to their respective values.  As part of its build process,
Perl constructs tables containing these mappings for all properties that it
deals with.  But only a few of these are written out into files.
Those written out are in the directory C<$Config{privlib}>/F<unicore/To/>
(%Config is available from the Config module).

Those ones written are ones needed by Perl internally during execution, or for
which there is some demand, and those for which there is no access through the
Perl core.  Generally, properties that can be used in regular expression
matching do not have their map tables written, like Script.  Nor are the
simplistic properties that have a better, more complete version, such as
Simple_Uppercase_Mapping  (Uppercase_Mapping is written instead).

None of the properties in the I<To> directory are currently directly
accessible through the Perl core, although some may be accessed indirectly.
For example, the uc() function implements the Uppercase_Mapping property and
uses the F<Upper.pl> file found in this directory.

The available files with their properties (short names in parentheses),
and any flags or comments about them, are:

   Bmg.pl           Bidi_Mirroring_Glyph (bmg)
   Digit.pl         Perl_Decimal_Digit
   Fold.pl          Case_Folding (cf)
   Lower.pl         Lowercase_Mapping (lc)
   NFKCCF.pl        NFKC_Casefold (NFKC_CF)
   Title.pl         Titlecase_Mapping (tc)
   Upper.pl         Uppercase_Mapping (uc)


An installation can choose to change which files are generated by changing the
controlling lists contained in the program C<$Config{privlib}>/F<unicore/lib/unicore/mktables>
and then re-running F<lib/unicore/mktables>.

Each of these files defines two hash entries to help reading programs decipher
it.  One of them looks like this:

    $utf8::SwashInfo{'ToNAME'}{'format'} = 's';

where 'NAME' is a name to indicate the property.  For backwards compatibility,
this is not necessarily the property's official Unicode name.  (The 'To' is
also for backwards compatibility.)  The hash entry gives the format of the
mapping fields of the table, currently one of the following:

  b    binary
  d    single decimal digit
  f    floating point number
  i    integer
  r    rational: an integer or a fraction
  s    arbitrary string
  x    positive hex whole number; a code point


This format applies only to the entries in the main body of the table.
Entries defined in hashes or ones that are missing from the list can have a
different format.

The value that the missing entries have is given by the other SwashInfo hash
entry line; it looks like this:

    $utf8::SwashInfo{'ToNAME'}{'missing'} = 'NaN';

This example line says that any Unicode code points not explicitly listed in
the file have the value 'NaN' under the property indicated by NAME.  If the
value is the special string C<< <code point> >>, it means that the value for
any missing code point is the code point itself.  This happens, for example,
in the file for Uppercase_Mapping (To/Upper.pl), in which code points like the
character 'A', are missing because the uppercase of 'A' is itself.
@

