head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.13.0.8
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.4
	OPENBSD_5_8_BASE:1.13
	PERL_5_20_2:1.1.1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	PERL_5_20_1:1.1.1.11
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	PERL_5_18_2:1.1.1.11
	PERL:1.1.1
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	PERL_5_16_3:1.1.1.10
	OPENBSD_5_3:1.7.0.10
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	PERL_5_12_2:1.1.1.9
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	PERL_5_10_1:1.1.1.8
	OPENBSD_4_6:1.4.0.16
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	PERL_5_10_0:1.1.1.8
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	PERL_5_8_8:1.1.1.8
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.7
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.1.1.4.0.4
	OPENBSD_3_4_BASE:1.1.1.4
	OPENBSD_3_3:1.1.1.4.0.2
	OPENBSD_3_3_BASE:1.1.1.4
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.1.1.3.0.6
	OPENBSD_3_2_BASE:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.4
	OPENBSD_3_1_BASE:1.1.1.3
	OPENBSD_3_0:1.1.1.3.0.2
	OPENBSD_3_0_BASE:1.1.1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.1.1.2.0.6
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.4
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.2
	OPENBSD_2_7_BASE:1.1.1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.15
date	2017.02.05.00.33.41;	author afresh1;	state Exp;
branches;
next	1.14;
commitid	7JLVNm1wwPgqSqTa;

1.14
date	2017.02.05.00.32.18;	author afresh1;	state Exp;
branches;
next	1.13;
commitid	cxJ08BvJA9Pt2PTM;

1.13
date	2015.04.25.19.26.22;	author afresh1;	state Exp;
branches;
next	1.12;
commitid	3qGYFVvfrExB70FB;

1.12
date	2015.04.25.19.14.48;	author afresh1;	state Exp;
branches;
next	1.11;
commitid	XRK22kO4se3v2i2I;

1.11
date	2014.11.17.21.01.01;	author afresh1;	state Exp;
branches;
next	1.10;
commitid	LnErp1MFKSuew5Fr;

1.10
date	2014.11.17.20.57.07;	author afresh1;	state Exp;
branches;
next	1.9;
commitid	QP75iYx42Uo7mMxO;

1.9
date	2014.03.24.15.05.33;	author afresh1;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.25.20.40.59;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2010.09.24.15.07.04;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.13.01.25.48;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.12.18.24.47;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.28.19.23.11;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.09.18.10.16;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.03.03.02.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.04.29.22.40.54;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.40.54;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.10.28;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.24.42;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.15.05;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.44.22;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.08.09.17.48.15;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2005.01.15.21.17.56;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2006.03.28.18.49.22;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2010.09.24.14.49.08;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2013.03.25.20.09.21;	author sthen;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.03.24.14.59.08;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Apply local patches - perl-5.24.1
@
text
@=head1 NAME

perlmodinstall - Installing CPAN Modules

=head1 DESCRIPTION

You can think of a module as the fundamental unit of reusable Perl
code; see L<perlmod> for details.  Whenever anyone creates a chunk of
Perl code that they think will be useful to the world, they register
as a Perl developer at http://www.cpan.org/modules/04pause.html
so that they can then upload their code to the CPAN.  The CPAN is the
Comprehensive Perl Archive Network and can be accessed at
http://www.cpan.org/ , and searched at http://search.cpan.org/ .

This documentation is for people who want to download CPAN modules
and install them on their own computer.

=head2 PREAMBLE

First, are you sure that the module isn't already on your system?  Try
C<perl -MFoo -e 1>.  (Replace "Foo" with the name of the module; for
instance, C<perl -MCGI::Carp -e 1>.)

If you don't see an error message, you have the module.  (If you do
see an error message, it's still possible you have the module, but
that it's not in your path, which you can display with C<perl -e
"print qq(@@INC)">.)  For the remainder of this document, we'll assume
that you really honestly truly lack an installed module, but have
found it on the CPAN.

So now you have a file ending in .tar.gz (or, less often, .zip).  You
know there's a tasty module inside.  There are four steps you must now
take:

=over 5

=item B<DECOMPRESS> the file

=item B<UNPACK> the file into a directory

=item B<BUILD> the module (sometimes unnecessary)

=item B<INSTALL> the module.

=back

Here's how to perform each step for each operating system.  This is
<not> a substitute for reading the README and INSTALL files that
might have come with your module!

Also note that these instructions are tailored for installing the
module into your system's repository of Perl modules, but you can
install modules into any directory you wish.  For instance, where I
say C<perl Makefile.PL>, you can substitute C<perl Makefile.PL
PREFIX=/my/perl_directory> to install the modules into
F</my/perl_directory>.  Then you can use the modules from your Perl
programs with C<use lib "/my/perl_directory/lib/site_perl";> or
sometimes just C<use "/my/perl_directory";>.  If you're on a system
that requires superuser/root access to install modules into the
directories you see when you type C<perl -e "print qq(@@INC)">, you'll
want to install them into a local directory (such as your home
directory) and use this approach.

=over 4

=item *

B<If you're on a Unix or Unix-like system,>

You can use Andreas Koenig's CPAN module
( http://www.cpan.org/modules/by-module/CPAN )
to automate the following steps, from DECOMPRESS through INSTALL.

A. DECOMPRESS

Decompress the file with C<gzip -d yourmodule.tar.gz>

You can get gzip from ftp://prep.ai.mit.edu/pub/gnu/

Or, you can combine this step with the next to save disk space:

     gzip -dc yourmodule.tar.gz | tar -xf -

B. UNPACK

Unpack the result with C<tar -xf yourmodule.tar>

C. BUILD

Go into the newly-created directory and type:

      perl Makefile.PL
      make test

or

      perl Makefile.PL PREFIX=/my/perl_directory

to install it locally.  (Remember that if you do this, you'll have to
put C<use lib "/my/perl_directory";> near the top of the program that
is to use this module.

D. INSTALL

While still in that directory, type:

      make install

Make sure you have the appropriate permissions to install the module
in your Perl 5 library directory.  Often, you'll need to be root.

That's all you need to do on Unix systems with dynamic linking.
Most Unix systems have dynamic linking. If yours doesn't, or if for
another reason you have a statically-linked perl, B<and> the
module requires compilation, you'll need to build a new Perl binary
that includes the module.  Again, you'll probably need to be root.

=item *

B<If you're running ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris),>

First, type C<ppm> from a shell and see whether ActiveState's PPM
repository has your module.  If so, you can install it with C<ppm> and
you won't have to bother with any of the other steps here.  You might
be able to use the CPAN instructions from the "Unix or Linux" section
above as well; give it a try.  Otherwise, you'll have to follow the
steps below.

   A. DECOMPRESS

You can use the shareware Winzip ( http://www.winzip.com ) to
decompress and unpack modules.

   B. UNPACK

If you used WinZip, this was already done for you.

   C. BUILD

You'll need the C<nmake> utility, available at
http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe
or dmake, available on CPAN.
http://search.cpan.org/dist/dmake/

Does the module require compilation (i.e. does it have files that end
in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it does, life is now
officially tough for you, because you have to compile the module
yourself (no easy feat on Windows).  You'll need a compiler such as
Visual C++.  Alternatively, you can download a pre-built PPM package
from ActiveState.
http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/

Go into the newly-created directory and type:

      perl Makefile.PL
      nmake test


   D. INSTALL

While still in that directory, type:

      nmake install

=item *

B<If you're using a Macintosh with "Classic" MacOS and MacPerl,>


A. DECOMPRESS

First, make sure you have the latest B<cpan-mac> distribution (
http://www.cpan.org/authors/id/CNANDOR/ ), which has utilities for
doing all of the steps.  Read the cpan-mac directions carefully and
install it.  If you choose not to use cpan-mac for some reason, there
are alternatives listed here.

After installing cpan-mac, drop the module archive on the
B<untarzipme> droplet, which will decompress and unpack for you.

B<Or>, you can either use the shareware B<StuffIt Expander> program
( http://my.smithmicro.com/mac/stuffit/ )
or the freeware B<MacGzip> program (
http://persephone.cps.unizar.es/general/gente/spd/gzip/gzip.html ).

B. UNPACK

If you're using untarzipme or StuffIt, the archive should be extracted
now.  B<Or>, you can use the freeware B<suntar> or I<Tar> (
http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/ ).

C. BUILD

Check the contents of the distribution.
Read the module's documentation, looking for
reasons why you might have trouble using it with MacPerl.  Look for
F<.xs> and F<.c> files, which normally denote that the distribution
must be compiled, and you cannot install it "out of the box."
(See L<"PORTABILITY">.)

D. INSTALL

If you are using cpan-mac, just drop the folder on the
B<installme> droplet, and use the module.

B<Or>, if you aren't using cpan-mac, do some manual labor.

Make sure the newlines for the modules are in Mac format, not Unix format.
If they are not then you might have decompressed them incorrectly.  Check
your decompression and unpacking utilities settings to make sure they are
translating text files properly.

As a last resort, you can use the perl one-liner:

    perl -i.bak -pe 's/(?:\015)?\012/\015/g' <filenames>

on the source files.

Then move the files (probably just the F<.pm> files, though there
may be some additional ones, too; check the module documentation)
to their final destination: This will
most likely be in C<$ENV{MACPERL}site_lib:> (i.e.,
C<HD:MacPerl folder:site_lib:>).  You can add new paths to
the default C<@@INC> in the Preferences menu item in the
MacPerl application (C<$ENV{MACPERL}site_lib:> is added
automagically).  Create whatever directory structures are required
(i.e., for C<Some::Module>, create
C<$ENV{MACPERL}site_lib:Some:> and put
C<Module.pm> in that directory).

Then run the following script (or something like it):

     #!perl -w
     use AutoSplit;
     my $dir = "${MACPERL}site_perl";
     autosplit("$dir:Some:Module.pm", "$dir:auto", 0, 1, 1);

=item *

B<If you're on the DJGPP port of DOS,>

   A. DECOMPRESS

djtarx ( ftp://ftp.delorie.com/pub/djgpp/current/v2/ )
will both uncompress and unpack.

   B. UNPACK

See above.

   C. BUILD

Go into the newly-created directory and type:

      perl Makefile.PL
      make test

You will need the packages mentioned in F<README.dos>
in the Perl distribution.

   D. INSTALL

While still in that directory, type:

     make install	

You will need the packages mentioned in F<README.dos> in the Perl distribution.

=item *

B<If you're on OS/2,>

Get the EMX development suite and gzip/tar, from either Hobbes (
http://hobbes.nmsu.edu ) or Leo ( http://www.leo.org ), and then follow
the instructions for Unix.

=item *

B<If you're on VMS,>

When downloading from CPAN, save your file with a C<.tgz>
extension instead of C<.tar.gz>.  All other periods in the
filename should be replaced with underscores.  For example,
C<Your-Module-1.33.tar.gz> should be downloaded as
C<Your-Module-1_33.tgz>.

A. DECOMPRESS

Type

    gzip -d Your-Module.tgz

or, for zipped modules, type

    unzip Your-Module.zip

Executables for gzip, zip, and VMStar:

    http://www.hp.com/go/openvms/freeware/

and their source code:

    http://www.fsf.org/order/ftp.html

Note that GNU's gzip/gunzip is not the same as Info-ZIP's zip/unzip
package.  The former is a simple compression tool; the latter permits
creation of multi-file archives.

B. UNPACK

If you're using VMStar:

     VMStar xf Your-Module.tar

Or, if you're fond of VMS command syntax:

     tar/extract/verbose Your_Module.tar

C. BUILD

Make sure you have MMS (from Digital) or the freeware MMK ( available
from MadGoat at http://www.madgoat.com ).  Then type this to create
the DESCRIP.MMS for the module:

    perl Makefile.PL

Now you're ready to build:

    mms test

Substitute C<mmk> for C<mms> above if you're using MMK.

D. INSTALL

Type

    mms install

Substitute C<mmk> for C<mms> above if you're using MMK.

=item *

B<If you're on MVS>,

Introduce the F<.tar.gz> file into an HFS as binary; don't translate from
ASCII to EBCDIC.

A. DECOMPRESS

Decompress the file with C<gzip -d yourmodule.tar.gz>

You can get gzip from
http://www.s390.ibm.com/products/oe/bpxqp1.html

B. UNPACK

Unpack the result with

     pax -o to=IBM-1047,from=ISO8859-1 -r < yourmodule.tar

The BUILD and INSTALL steps are identical to those for Unix.  Some
modules generate Makefiles that work better with GNU make, which is
available from http://www.mks.com/s390/gnu/

=back

=head1 PORTABILITY

Note that not all modules will work with on all platforms.
See L<perlport> for more information on portability issues.
Read the documentation to see if the module will work on your
system.  There are basically three categories
of modules that will not work "out of the box" with all
platforms (with some possibility of overlap):

=over 4

=item *

B<Those that should, but don't.>  These need to be fixed; consider
contacting the author and possibly writing a patch.

=item *

B<Those that need to be compiled, where the target platform
doesn't have compilers readily available.>  (These modules contain
F<.xs> or F<.c> files, usually.)  You might be able to find
existing binaries on the CPAN or elsewhere, or you might
want to try getting compilers and building it yourself, and then
release the binary for other poor souls to use.

=item *

B<Those that are targeted at a specific platform.>
(Such as the Win32:: modules.)  If the module is targeted
specifically at a platform other than yours, you're out
of luck, most likely.

=back



Check the CPAN Testers if a module should work with your platform
but it doesn't behave as you'd expect, or you aren't sure whether or
not a module will work under your platform.  If the module you want
isn't listed there, you can test it yourself and let CPAN Testers know,
you can join CPAN Testers, or you can request it be tested.

    http://testers.cpan.org/


=head1 HEY

If you have any suggested changes for this page, let me know.  Please
don't send me mail asking for help on how to install your modules.
There are too many modules, and too few Orwants, for me to be able to
answer or even acknowledge all your questions.  Contact the module
author instead, or post to comp.lang.perl.modules, or ask someone
familiar with Perl on your operating system.

=head1 AUTHOR

Jon Orwant

orwant@@medita.mit.edu

with invaluable help from Chris Nandor, and valuable help from Brandon
Allbery, Charles Bailey, Graham Barr, Dominic Dunlop, Jarkko
Hietaniemi, Ben Holzman, Tom Horsley, Nick Ing-Simmons, Tuomas
J. Lukka, Laszlo Molnar, Alan Olsen, Peter Prymmer, Gurusamy Sarathy,
Christoph Spalinger, Dan Sugalski, Larry Virden, and Ilya Zakharevich.

First version July 22, 1998; last revised November 21, 2001.

=head1 COPYRIGHT

Copyright (C) 1998, 2002, 2003 Jon Orwant.  All Rights Reserved.

This document may be distributed under the same terms as Perl itself.
@


1.14
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xof -
d86 1
a86 1
Unpack the result with C<tar -xof yourmodule.tar>
@


1.13
log
@Apply local patches, remove excess files - perl-5.20.2
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xf -
d86 1
a86 1
Unpack the result with C<tar -xf yourmodule.tar>
@


1.12
log
@Fix merge issues, remove excess files - match perl-5.20.2 dist
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xof -
d86 1
a86 1
Unpack the result with C<tar -xof yourmodule.tar>
@


1.11
log
@Apply local patches to perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xf -
d86 1
a86 1
Unpack the result with C<tar -xf yourmodule.tar>
@


1.10
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xof -
d86 1
a86 1
Unpack the result with C<tar -xof yourmodule.tar>
@


1.9
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xf -
d86 1
a86 1
Unpack the result with C<tar -xf yourmodule.tar>
@


1.8
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d22 1
a22 1
instance, C<perl -MCGI::Carp -e 1>.
d56 1
a56 1
C</my/perl_directory>.  Then you can use the modules from your Perl
d120 1
a120 1
B<If you're running ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris)>
@


1.7
log
@merge in perl 5.12.2 plus local changes
@
text
@d439 1
a439 16
Permission is granted to make and distribute verbatim copies of this
documentation provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
documentation under the conditions for verbatim copying, provided also
that they are marked clearly as modified versions, that the authors'
names and title are unchanged (though subtitles and additional
authors' names may be added), and that the entire resulting derived
work is distributed under the terms of a permission notice identical
to this one.

Permission is granted to copy and distribute translations of this
documentation into another language, under the above conditions for
modified versions.

@


1.6
log
@Merge in some local changes that got lost.
@
text
@d52 1
a52 1
module into your system's repository of Perl modules -- but you can
d113 1
a113 1
Most Unix systems have dynamic linking -- if yours doesn't, or if for
d148 1
a148 1
yourself -- no easy feat on Windows.  You'll need a compiler such as
d182 1
a182 3
( http://www.aladdinsys.com/expander/ )
in combination with B<DropStuff with Expander Enhancer>
( http://www.aladdinsys.com/dropstuff/ )
a200 8
If a module does not work on MacPerl but should, or needs to be
compiled, see if the module exists already as a port on the
MacPerl Module Porters site ( http://pudge.net/mmp/ ).
For more information on doing XS with MacPerl yourself, see
Arved Sandstrom's XS tutorial ( http://macperl.com/depts/Tutorials/ ),
and then consider uploading your binary to the CPAN and
registering it on the MMP site.

d244 1
a244 1
djtarx ( ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2/ )
d299 1
a299 2
    http://www.openvms.digital.com/freeware/
    http://www.crinoid.com/utils/
@


1.5
log
@Merge in perl 5.10.1
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xof -
d86 1
a86 1
Unpack the result with C<tar -xof yourmodule.tar>
@


1.4
log
@merge in perl 5.8.8
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xf -
d86 1
a86 1
Unpack the result with C<tar -xf yourmodule.tar>
@


1.3
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@d68 1
a68 1
B<If you're on a Unix or Linux system,>
d167 1
a167 1
B<If you're using a Macintosh,>
@


1.2
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d141 1
a141 1
ftp://ftp.microsoft.com/Softlib/MSLFILES/nmake15.exe
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
as a Perl developer at http://www.perl.com/CPAN/modules/04pause.html
d13 1
a13 1
http://www.perl.com/CPAN/.
d20 13
a32 2
You have a file ending in .tar.gz (or, less often, .zip).  You know
there's a tasty module inside.  There are four steps you must now
d48 1
a48 1
I<not> a substitute for reading the README and INSTALL files that
d52 1
a52 1
module into your system's repository of Perl modules.  But you can
d54 9
a62 6
say C<perl Makefile.PL>, you can substitute C<perl
Makefile.PL PREFIX=/my/perl_directory> to install the modules
into C</my/perl_directory>.  Then you can use the modules
from your Perl programs with C<use lib
"/my/perl_directory/lib/site_perl";> or sometimes just C<use
"/my/perl_directory";>.  
d68 1
a68 1
B<If you're on Unix,>
d70 2
a71 2
You can use Andreas Koenig's CPAN module 
( http://www.perl.com/CPAN/modules/by-module/CPAN ) 
d74 1
a74 1
A. DECOMPRESS 
d78 1
a78 1
You can get gzip from ftp://prep.ai.mit.edu/pub/gnu. 
d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xof -
d86 1
a86 1
Unpack the result with C<tar -xof yourmodule.tar>
a92 1
      make
d95 8
d120 8
a127 1
B<If you're running Windows 95 or NT with the ActiveState port of Perl>
d140 12
a151 45
Does the module require compilation (i.e. does it have files
that end in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it does, you're on
your own.  You can try compiling it yourself if you have a C compiler.
If you're successful, consider uploading the resulting binary to the
CPAN for others to use.  If it doesn't, go to INSTALL.

   D. INSTALL

Copy the module into your Perl's I<lib> directory.  That'll be one
of the directories you see when you type 

   perl -e 'print "@@INC"'

=item *

B<If you're running Windows 95 or NT with the core Windows distribution of Perl,>

   A. DECOMPRESS

When you download the module, make sure it ends in either
C<.tar.gz> or C<.zip>.  Windows browsers sometimes
download C<.tar.gz> files as C<_tar.tar>, because
early versions of Windows prohibited more than one dot in a filename.

You can use the shareware WinZip ( http://www.winzip.com ) to
decompress and unpack modules.

Or, you can use InfoZip's C<unzip> utility (
http://www.cdrom.com/pub/infozip/Info-Zip.html ) to uncompress
C<.zip> files; type C<unzip yourmodule.zip> in
your shell.

Or, if you have a working C<tar> and C<gzip>, you can
type

   gzip -cd yourmodule.tar.gz | tar xvf -

in the shell to decompress C<yourmodule.tar.gz>.  This will
UNPACK your module as well.

   B. UNPACK

All of the methods in DECOMPRESS will have done this for you.

   C. BUILD
d156 1
a156 2
      dmake
      dmake test
a157 4
Depending on your perl configuration, C<dmake> might not be
available.  You might have to substitute whatever C<perl
-V:make> says. (Usually, that will be C<nmake> or
C<make>.)
d163 1
a163 1
      dmake install
d169 1
d172 14
a185 12
In general, all Macintosh decompression utilities mentioned here
can be found in the Info-Mac Hyperarchive
( http://hyperarchive.lcs.mit.edu/HyperArchive.html ).
Specificly the "Commpress & Translate" listing
( http://hyperarchive.lcs.mit.edu/HyperArchive/Abstracts/cmp/HyperArchive.html ).


You can either use the shareware StuffIt Expander 
( http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/stuffit-expander-401.hqx ) 
in combination with I<DropStuff with Expander Enhancer>
( http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/drop-stuff-with-ee-40.hqx ) 
or the freeware MacGzip (
a187 1

d190 3
a192 4
If you're using DropStuff or Stuffit, you can just extract the tar
archive.  Otherwise, you can use the freeware I<suntar> 
( http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/suntar-221.hqx )
or I<Tar> ( http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/tar-40b.hqx ).
d196 14
a209 1
Does the module require compilation? 
d211 1
a211 1
1. If it does,
d213 2
a214 11
Overview: You need MPW and a combination of new and old CodeWarrior
compilers for MPW and libraries.  Makefiles created for building under
MPW use the Metrowerks compilers.  It's most likely possible to build
without other compilers, but it has not been done successfully, to our
knowledge.  Read the documentation in MacPerl: Power and Ease (
http://www.ptf.com/macperl/ ) on porting/building extensions, or find
an existing precompiled binary, or hire someone to build it for you.

Or, ask someone on the mac-perl mailing list (mac-perl@@iis.ee.ethz.ch)
to build it for you.  To subscribe to the mac-perl mailing list, send
mail to mac-perl-request@@iis.ee.ethz.ch.
d216 1
a216 3
2. If the module doesn't require compilation, go to INSTALL.

D. INSTALL
d222 1
d225 1
a225 1
	perl -i.bak -pe 's/(?:\015)?\012/\015/g' filenames
d229 3
a231 3
Move the files manually into the correct folders.

Move the files to their final destination: This will
d241 1
a241 1
Run the following script (or something like it):
a247 3
Eventually there should be a way to automate the installation process; some
solutions exist, but none are ready for the general public yet.

d255 1
a255 1
will both uncompress and unpack.  
a265 1
      make
d268 1
a268 1
You will need the packages mentioned in C<Readme.dos>
d276 2
a277 2
     
You will need the packages mentioned in Readme.dos in the Perl distribution.
d299 1
a299 1
Type 
d303 1
a303 1
or, for zipped modules, type 
d307 6
a312 3
Executables for gzip, zip, and VMStar ( Alphas:
http://www.openvms.digital.com/cd/000TOOLS/ALPHA/ and Vaxen:
http://www.openvms.digital.com/cd/000TOOLS/VAX/ ).  
d314 1
a314 2
gzip and tar
are also available at ftp://ftp.digital.com/pub/VMS.
d330 1
a330 1
C. BUILD 
d332 3
a334 2
Make sure you have MMS (from Digital) or the freeware MMK ( available from MadGoat at  http://www.madgoat.com ).  Then type this to create the
DESCRIP.MMS for the module: 
a339 1
    mms
d346 1
a346 1
Type 
d356 1
a356 1
Introduce the .tar.gz file into an HFS as binary; don't translate from
d359 1
a359 1
A. DECOMPRESS 
d361 1
a361 1
      Decompress the file with C<gzip -d yourmodule.tar.gz>
d363 2
a364 2
      You can get gzip from 
      http://www.s390.ibm.com/products/oe/bpxqp1.html.
d368 1
a368 1
Unpack the result with 
d374 35
a408 1
available from http://www.mks.com/s390/gnu/index.htm.
d412 11
d434 1
a434 3
Jon Orwant 

orwant@@tpj.com
d436 1
a436 1
The Perl Journal, http://tpj.com
d438 5
a442 5
with invaluable help from Brandon Allbery, Charles Bailey, Graham
Barr, Dominic Dunlop, Jarkko Hietaniemi, Ben Holzman, Tom Horsley,
Nick Ing-Simmons, Tuomas J. Lukka, Laszlo Molnar, Chris Nandor, Alan
Olsen, Peter Prymmer, Gurusamy Sarathy, Christoph Spalinger, Dan
Sugalski, Larry Virden, and Ilya Zakharevich.
d444 1
a444 1
July 22, 1998
d448 1
a448 1
Copyright (C) 1998 Jon Orwant.  All Rights Reserved.
@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d8 6
a13 8
code; See L<perlmod> for details.  Whenever anyone creates a chunk
of Perl code that they think will be useful to the world, they
register as a Perl developer at
http://www.perl.com/CPAN/modules/04pause.html so that they can then
upload their code to CPAN.  CPAN is the Comprehensive Perl Archive
Network and can be accessed at http://www.perl.com/CPAN/, or searched
via http://cpan.perl.com/ and
http://theory.uwinnipeg.ca/mod_perl/cpan-search.pl .
d20 3
a22 3
You have a file ending in F<.tar.gz> (or, less often, F<.zip>).
You know there's a tasty module inside.  You must now take four
steps:
d47 2
a48 2
"/my/perl_directory/lib/site_perl"> or sometimes just C<use
"/my/perl_directory">.  
d57 1
a57 2
(which comes standard with Perl, or can itself be downloaded
from http://www.perl.com/CPAN/modules/by-module/CPAN) 
d88 1
a88 1
Make sure you have appropriate permissions to install the module
a90 5
Perl maintains a record of all module installations.  To look at
this list, simply type:

      perldoc perllocal

d92 2
a93 2
Most Unix systems have dynamic linking--if yours doesn't, or if for
another reason you have a statically-linked perl, I<and> the
d103 1
a103 1
You can use the shareware B<Winzip> program ( http://www.winzip.com ) to
d115 1
a115 1
If you're successful, consider uploading the resulting binary to
d132 1
a132 1
F<.tar.gz> or F<.zip>.  Windows browsers sometimes
d136 1
a136 1
You can use the shareware B<WinZip> program ( http://www.winzip.com ) to
d140 3
a142 2
http://www.cdrom.com/pub/infozip/ ) to uncompress C<.zip> files; type
C<unzip yourmodule.zip> in your shell.
d154 1
a154 1
The methods in DECOMPRESS will have done this for you.
d188 2
a189 2
You can either use the shareware B<StuffIt Expander> program
( http://www.aladdinsys.com/expander/ ) 
d191 2
a192 2
( http://www.aladdinsys.com/dropstuff/ ) 
or the freeware B<MacGzip> program (
d199 3
a201 2
archive.  Otherwise, you can use the freeware B<suntar> or I<Tar> (
http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/ ).
d211 1
a211 1
MPW use Metrowerks compilers.  It's most likely possible to build
d213 1
a213 1
knowledge.  Read the documentation in I<MacPerl: Power and Ease> (
d229 1
d231 1
a231 3
As a last resort, you can use the perl one-liner:  

    perl -i.bak -pe 's/(?:\015)?\012/\015/g' <filenames> 
d278 1
a278 1
You will need the packages mentioned in F<README.dos>
d286 2
a287 2

You will need the packages mentioned in F<README.dos> in the Perl distribution.
d301 2
a302 2
When downloading from CPAN, save your file with a F<.tgz>
extension instead of F<.tar.gz>.  All other periods in the
d318 2
a319 2
http://www.openvms.digital.com/freeware/000TOOLS/ALPHA/ and Vaxen:
http://www.openvms.digital.com/freeware/000TOOLS/VAX/ ).  
d364 1
a364 1
Introduce the F<.tar.gz> file into an HFS as binary; don't translate from
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d50 1
a50 1
"/my/perl_directory">.
d58 1
a58 1
You can use Andreas Koenig's CPAN module
d60 1
a60 1
from http://www.perl.com/CPAN/modules/by-module/CPAN)
d63 1
a63 1
A. DECOMPRESS
d67 1
a67 1
You can get gzip from ftp://prep.ai.mit.edu/pub/gnu.
d129 1
a129 1
of the directories you see when you type
d135 1
a135 2
B<If you're running Windows 95 or NT with the core Windows distribution of
Perl,>
d188 11
a198 13
First thing you should do is make sure you have the latest B<cpan-mac>
distribution ( http://www.cpan.org/authors/id/CNANDOR/ ), which has
utilities for doing all of the steps.  Read the cpan-mac directions
carefully and install it.  If you choose not to use cpan-mac
for some reason, there are alternatives listed here.

After installing cpan-mac, drop the module archive on the
B<untarzipme> droplet, which will decompress and unpack for you.

B<Or>, you can either use the shareware B<StuffIt Expander> program
( http://www.aladdinsys.com/expander/ )
in combination with B<DropStuff with Expander Enhancer>
( http://www.aladdinsys.com/dropstuff/ )
d202 1
d205 2
a206 2
If you're using untarzipme or StuffIt, the archive should be extracted
now.  B<Or>, you can use the freeware B<suntar> or I<Tar> (
d211 3
a213 14
Check the contents of the distribution.
Read the module's documentation, looking for
reasons why you might have trouble using it with MacPerl.  Look for
F<.xs> and F<.c> files, which normally denote that the distribution
must be compiled, and you cannot install it "out of the box."
(See L<"PORTABILITY">.)

If a module does not work on MacPerl but should, or needs to be
compiled, see if the module exists already as a port on the
MacPerl Module Porters site (http://pudge.net/mmp/).
For more information on doing XS with MacPerl yourself, see
Arved Sandstrom's XS tutorial (http://macperl.com/depts/Tutorials/),
and then consider uploading your binary to the CPAN and
registering it on the MMP site.
d215 11
a225 1
D. INSTALL
d227 1
a227 2
If you are using cpan-mac, just drop the folder on the
B<installme> droplet, and use the module.
d229 1
a229 1
B<Or>, if you aren't using cpan-mac, do some manual labor.
d236 1
a236 1
As a last resort, you can use the perl one-liner:
d238 1
a238 1
    perl -i.bak -pe 's/(?:\015)?\012/\015/g' <filenames>
d242 3
a244 3
Then move the files (probably just the F<.pm> files, though there
may be some additional ones, too; check the module documentation)
to their final destination: This will
d254 1
a254 1
Then run the following script (or something like it):
d261 3
d271 1
a271 1
will both uncompress and unpack.
d292 1
a292 1
     make install
d316 1
a316 1
Type
d320 1
a320 1
or, for zipped modules, type
d326 1
a326 1
http://www.openvms.digital.com/freeware/000TOOLS/VAX/ ).
d345 1
a345 1
C. BUILD
d347 2
a348 3
Make sure you have MMS (from Digital) or the freeware MMK ( available from
MadGoat at  http://www.madgoat.com ).  Then type this to create the
DESCRIP.MMS for the module:
d361 1
a361 1
Type
d374 1
a374 1
A. DECOMPRESS
d378 1
a378 1
      You can get gzip from
d383 1
a383 1
Unpack the result with
a392 46

=head1 PORTABILITY

Note that not all modules will work with on all platforms.
See L<perlport> for more information on portability issues.
Read the documentation to see if the module will work on your
system.  There are basically three categories
of modules that will not work "out of the box" with all
platforms (with some possibility of overlap):

=over 4

=item *

B<Those that should, but don't.>  These need to be fixed; consider
contacting the author and possibly writing a patch.

=item *

B<Those that need to be compiled, where the target platform
doesn't have compilers readily available.>  (These modules contain
F<.xs> or F<.c> files, usually.)  You might be able to find
existing binaries on the CPAN or elsewhere, or you might
want to try getting compilers and building it yourself, and then
release the binary for other poor souls to use.

=item *

B<Those that are targeted at a specific platform.>
(Such as the Win32:: modules.)  If the module is targeted
specifically at a platform other than yours, you're out
of luck, most likely.

=back



Check the CPAN Testers if a module should work with your platform
but it doesn't behave as you'd expect, or you aren't sure whether or
not a module will work under your platform.  If the module you want
isn't listed there, you can test it yourself and let CPAN Testers know,
you can join CPAN Testers, or you can request it be tested.

    http://testers.cpan.org/


d404 1
a404 1
Jon Orwant
d416 1
a416 3
First version July 22, 1998

Last Modified August 22, 2000
d420 1
a420 1
Copyright (C) 1998, 2000 Jon Orwant.  All Rights Reserved.
d437 1
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d8 8
a15 6
code; see L<perlmod> for details.  Whenever anyone creates a chunk of
Perl code that they think will be useful to the world, they register
as a Perl developer at http://www.cpan.org/modules/04pause.html
so that they can then upload their code to the CPAN.  The CPAN is the
Comprehensive Perl Archive Network and can be accessed at
http://www.cpan.org/ , and searched at http://search.cpan.org/ .
d22 3
a24 14
First, are you sure that the module isn't already on your system?  Try
C<perl -MFoo -e 1>.  (Replace "Foo" with the name of the module; for
instance, C<perl -MCGI::Carp -e 1>.

If you don't see an error message, you have the module.  (If you do
see an error message, it's still possible you have the module, but
that it's not in your path, which you can display with C<perl -e
"print qq(@@INC)">.)  For the remainder of this document, we'll assume
that you really honestly truly lack an installed module, but have
found it on the CPAN.

So now you have a file ending in .tar.gz (or, less often, .zip).  You
know there's a tasty module inside.  There are four steps you must now
take:
d39 1
a39 1
<not> a substitute for reading the README and INSTALL files that
d43 1
a43 1
module into your system's repository of Perl modules -- but you can
d45 6
a50 9
say C<perl Makefile.PL>, you can substitute C<perl Makefile.PL
PREFIX=/my/perl_directory> to install the modules into
C</my/perl_directory>.  Then you can use the modules from your Perl
programs with C<use lib "/my/perl_directory/lib/site_perl";> or
sometimes just C<use "/my/perl_directory";>.  If you're on a system
that requires superuser/root access to install modules into the
directories you see when you type C<perl -e "print qq(@@INC)">, you'll
want to install them into a local directory (such as your home
directory) and use this approach.
d56 1
a56 1
B<If you're on a Unix or Linux system,>
d59 2
a60 1
( http://www.cpan.org/modules/by-module/CPAN )
d67 1
a67 1
You can get gzip from ftp://prep.ai.mit.edu/pub/gnu/
a84 8
or

      perl Makefile.PL PREFIX=/my/perl_directory

to install it locally.  (Remember that if you do this, you'll have to
put C<use lib "/my/perl_directory";> near the top of the program that
is to use this module.

d91 1
a91 1
Make sure you have the appropriate permissions to install the module
d94 5
d100 2
a101 2
Most Unix systems have dynamic linking -- if yours doesn't, or if for
another reason you have a statically-linked perl, B<and> the
d107 1
a107 8
B<If you're running ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris)>

First, type C<ppm> from a shell and see whether ActiveState's PPM
repository has your module.  If so, you can install it with C<ppm> and
you won't have to bother with any of the other steps here.  You might
be able to use the CPAN instructions from the "Unix or Linux" section
above as well; give it a try.  Otherwise, you'll have to follow the
steps below.
d111 1
a111 1
You can use the shareware Winzip ( http://www.winzip.com ) to
d120 5
a124 6
Does the module require compilation (i.e. does it have files that end
in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it doesn't, go to INSTALL.
If it does, life is now officially tough for you, because you have to
compile the module yourself -- no easy feat on Windows.  You'll need
the C<nmake> utility, available at
ftp://ftp.microsoft.com/Softlib/MSLFILES/nmake15.exe
d135 50
a186 1

d189 5
a193 5
First, make sure you have the latest B<cpan-mac> distribution (
http://www.cpan.org/authors/id/CNANDOR/ ), which has utilities for
doing all of the steps.  Read the cpan-mac directions carefully and
install it.  If you choose not to use cpan-mac for some reason, there
are alternatives listed here.
d222 1
a222 1
MacPerl Module Porters site ( http://pudge.net/mmp/ ).
d224 1
a224 1
Arved Sandstrom's XS tutorial ( http://macperl.com/depts/Tutorials/ ),
d293 1
a293 1
     make install	
d309 2
a310 2
When downloading from CPAN, save your file with a C<.tgz>
extension instead of C<.tar.gz>.  All other periods in the
d325 3
a327 4
Executables for gzip, zip, and VMStar:

    http://www.openvms.digital.com/freeware/
    http://www.crinoid.com/utils/
d329 2
a330 3
and their source code:

    http://www.fsf.org/order/ftp.html
d348 3
a350 3
Make sure you have MMS (from Digital) or the freeware MMK ( available
from MadGoat at http://www.madgoat.com ).  Then type this to create
the DESCRIP.MMS for the module:
d378 1
a378 1
Decompress the file with C<gzip -d yourmodule.tar.gz>
d380 2
a381 2
You can get gzip from
http://www.s390.ibm.com/products/oe/bpxqp1.html
d391 1
a391 1
available from http://www.mks.com/s390/gnu/
d395 1
d458 5
a462 5
with invaluable help from Chris Nandor, and valuable help from Brandon
Allbery, Charles Bailey, Graham Barr, Dominic Dunlop, Jarkko
Hietaniemi, Ben Holzman, Tom Horsley, Nick Ing-Simmons, Tuomas
J. Lukka, Laszlo Molnar, Alan Olsen, Peter Prymmer, Gurusamy Sarathy,
Christoph Spalinger, Dan Sugalski, Larry Virden, and Ilya Zakharevich.
d464 3
a466 1
First version July 22, 1998; last revised November 21, 2001.
d470 1
a470 1
Copyright (C) 1998, 2002 Jon Orwant.  All Rights Reserved.
a486 1

@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d93 1
d141 5
a145 1
You'll need the C<nmake> utility, available at
a146 16
or dmake, available on CPAN.
http://search.cpan.org/dist/dmake/

Does the module require compilation (i.e. does it have files that end
in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it does, life is now
officially tough for you, because you have to compile the module
yourself -- no easy feat on Windows.  You'll need a compiler such as
Visual C++.  Alternatively, you can download a pre-built PPM package
from ActiveState.
http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/

Go into the newly-created directory and type:

      perl Makefile.PL
      nmake test

d150 2
a151 1
While still in that directory, type:
d153 1
a153 1
      nmake install
d256 1
d331 1
d428 3
a430 1
orwant@@medita.mit.edu
d442 1
a442 1
Copyright (C) 1998, 2002, 2003 Jon Orwant.  All Rights Reserved.
@


1.1.1.6
log
@Import of stock perl 5.8.5
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xf -
d86 1
a86 1
Unpack the result with C<tar -xf yourmodule.tar>
d141 1
a141 1
http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe
@


1.1.1.7
log
@perl 5.8.6 from CPAN
@
text
@d82 1
a82 1
     gzip -dc yourmodule.tar.gz | tar -xof -
d86 1
a86 1
Unpack the result with C<tar -xof yourmodule.tar>
@


1.1.1.8
log
@perl 5.8.8 import
@
text
@d68 1
a68 1
B<If you're on a Unix or Unix-like system,>
d167 1
a167 1
B<If you're using a Macintosh with "Classic" MacOS and MacPerl,>
@


1.1.1.9
log
@Perl 5.12.2 from CPAN
@
text
@d52 1
a52 1
module into your system's repository of Perl modules, but you can
d113 1
a113 1
Most Unix systems have dynamic linking. If yours doesn't, or if for
d148 1
a148 1
yourself (no easy feat on Windows).  You'll need a compiler such as
d182 3
a184 1
( http://my.smithmicro.com/mac/stuffit/ )
d203 8
d254 1
a254 1
djtarx ( ftp://ftp.delorie.com/pub/djgpp/current/v2/ )
d309 2
a310 1
    http://www.hp.com/go/openvms/freeware/
@


1.1.1.10
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d439 16
a454 1
This document may be distributed under the same terms as Perl itself.
@


1.1.1.11
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d22 1
a22 1
instance, C<perl -MCGI::Carp -e 1>.)
d56 1
a56 1
F</my/perl_directory>.  Then you can use the modules from your Perl
d120 1
a120 1
B<If you're running ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris),>
@


